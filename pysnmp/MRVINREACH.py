# SNMP MIB module (MRVINREACH) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/lextm/pysnmp.com/mibs.pysnmp.com/asn1/MRVINREACH
# Produced by pysmi-1.5.4 at Mon Oct 14 22:23:50 2024
# On host MacBook-Pro.local platform Darwin version 24.0.0 by user lextm
# Using Python version 3.12.0 (main, Nov 14 2023, 23:52:11) [Clang 15.0.0 (clang-1500.0.40.1)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint,
 ConstraintsUnion) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint",
    "ConstraintsUnion")

# Import SMI symbols from the MIBs this MIB depends on

(ModuleCompliance,
 NotificationGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 NotificationType,
 TimeTicks,
 Unsigned32,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "NotificationType",
    "TimeTicks",
    "Unsigned32",
    "iso")

(DisplayString,
 TextualConvention) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "TextualConvention")


# MODULE-IDENTITY


# Types definitions



class DisplayString(OctetString):
    """Custom type DisplayString based on OctetString"""




class PhysAddress(OctetString):
    """Custom type PhysAddress based on OctetString"""




class AutonomousType(ObjectIdentifier):
    """Custom type AutonomousType based on ObjectIdentifier"""




class InstancePointer(ObjectIdentifier):
    """Custom type InstancePointer based on ObjectIdentifier"""




class PhivAddr(OctetString):
    """Custom type PhivAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(2, 2),
    )





class PhivCounter(Integer32):
    """Custom type PhivCounter based on Integer32"""




class MacAddress(OctetString):
    """Custom type MacAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )





class BridgeId(OctetString):
    """Custom type BridgeId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 8),
    )





class Timeout(Integer32):
    """Custom type Timeout based on Integer32"""




class AreaID(IpAddress):
    """Custom type AreaID based on IpAddress"""




class RouterID(IpAddress):
    """Custom type RouterID based on IpAddress"""




class Metric(Integer32):
    """Custom type Metric based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )





class BigMetric(Integer32):
    """Custom type BigMetric based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16777215),
    )





class TruthValue(Integer32):
    """Custom type TruthValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )





class Status(Integer32):
    """Custom type Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )





class Validation(Integer32):
    """Custom type Validation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )





class PositiveInteger(Integer32):
    """Custom type PositiveInteger based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )





class HelloRange(Integer32):
    """Custom type HelloRange based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )





class UpToMaxAge(Integer32):
    """Custom type UpToMaxAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3600),
    )





class InterfaceIndex(Integer32):
    """Custom type InterfaceIndex based on Integer32"""




class DesignatedRouterPriority(Integer32):
    """Custom type DesignatedRouterPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )





class TOSType(Integer32):
    """Custom type TOSType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )





class DateTime(OctetString):
    """Custom type DateTime based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 8),
    )





class AddressType(Integer32):
    """Custom type AddressType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("ethernet", 5),
          ("ip", 4),
          ("local", 3),
          ("other", 2),
          ("unknown", 1))
    )





class TypedAddress(OctetString):
    """Custom type TypedAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )





class SoftwareType(Integer32):
    """Custom type SoftwareType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("bridge", 3),
          ("bridgeRouter", 5),
          ("bridgeRouterRepeater", 7),
          ("oem", 9),
          ("repeater", 4),
          ("router", 6),
          ("switch", 8),
          ("terminalServer", 1))
    )





class HardwareType(Integer32):
    """Custom type HardwareType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              105,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137,
              138,
              139,
              140,
              141,
              230)
        )
    )
    namedValues = NamedValues(
        *(("asy160", 91),
          ("br220", 93),
          ("br221", 95),
          ("br350", 105),
          ("br350ExpansionSlot", 107),
          ("br401", 80),
          ("br402", 109),
          ("br501", 103),
          ("br501c", 113),
          ("br501s", 112),
          ("br501sc", 114),
          ("dpXp1", 67),
          ("em1608", 29),
          ("etsmim", 62),
          ("fn1500", 66),
          ("ir7004", 132),
          ("ir7008", 133),
          ("ir7020", 32),
          ("ir7040", 126),
          ("ir7520", 30),
          ("ir8004", 134),
          ("ir8008", 135),
          ("ir8020", 130),
          ("ir8040", 131),
          ("ir9004", 139),
          ("ir9008", 140),
          ("ir9020", 31),
          ("ir9040", 125),
          ("ir9504", 141),
          ("irM700", 129),
          ("irM800", 128),
          ("irM900", 136),
          ("irMGR0AC", 137),
          ("irMGR0AC-IN", 138),
          ("irMgr0", 127),
          ("irMgr0Rdc", 124),
          ("lannetTs", 65),
          ("lb2Wan", 89),
          ("mx1100", 37),
          ("mx1120", 53),
          ("mx1400", 45),
          ("mx1450", 75),
          ("mx1500", 36),
          ("mx1500x8", 49),
          ("mx1520", 54),
          ("mx1600a", 74),
          ("mx1600b", 97),
          ("mx1600c", 98),
          ("mx1600d", 100),
          ("mx1604", 120),
          ("mx1608", 78),
          ("mx1608a", 117),
          ("mx1608b", 119),
          ("mx1620", 86),
          ("mx1640", 92),
          ("mx1710", 50),
          ("mx1800", 38),
          ("mx1820", 55),
          ("mx2120", 59),
          ("mx2210a", 79),
          ("mx2210b", 96),
          ("mx2220", 56),
          ("mx2240", 87),
          ("mx2710", 51),
          ("mx3010", 63),
          ("mx3210", 69),
          ("mx3510", 57),
          ("mx3610", 61),
          ("mx3710", 68),
          ("mx6020", 60),
          ("mx6025", 64),
          ("mx6220", 71),
          ("mx6510", 46),
          ("mx6625", 58),
          ("mx6710", 70),
          ("mx6800a", 81),
          ("mx6800b", 85),
          ("mx800a", 99),
          ("mx800b", 102),
          ("mxManF2", 35),
          ("mxNpcP1", 39),
          ("mxRb2", 47),
          ("mxTServJ8", 33),
          ("mxTservJ16", 34),
          ("mxTsrLJ16", 40),
          ("mxTsrvLJ8", 41),
          ("mxTsrvMj8", 42),
          ("mxTsrvNJ8", 43),
          ("mxTsrvOJ8", 44),
          ("n3000", 108),
          ("n3000Ias", 123),
          ("n3000SP", 230),
          ("nio1600", 90),
          ("notApplicable", 83),
          ("ps3m", 88),
          ("routeRunner", 116),
          ("routeRunnerIsdnSt", 115),
          ("routerRunnerIsdnU", 118),
          ("rp210", 84),
          ("rp211", 94),
          ("so3395aTs", 77),
          ("sw610", 110),
          ("sw610S", 111),
          ("tokenRing", 101),
          ("ts3395", 52),
          ("ts720", 76),
          ("unknown", 1))
    )





class ChassisType(Integer32):
    """Custom type ChassisType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("mx45xx", 2),
          ("net9000", 3),
          ("net9000SWITCH", 4),
          ("other", 1))
    )





class IOType(Integer32):
    """Custom type IOType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(16,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              128,
              129,
              144,
              145,
              146,
              147,
              148,
              149,
              150,
              155,
              156,
              157,
              158,
              160,
              174,
              175,
              176,
              177,
              178,
              179,
              180,
              182,
              183,
              184,
              185,
              186,
              187,
              188,
              189,
              190,
              191,
              192,
              193,
              194,
              195,
              196,
              197,
              198,
              199,
              200,
              201,
              202,
              203,
              204,
              207,
              209,
              210,
              214,
              224,
              225,
              226,
              227,
              231,
              232,
              233,
              234,
              235,
              236,
              237,
              238,
              239)
        )
    )
    namedValues = NamedValues(
        *(("bri8", 34),
          ("dualE1120", 37),
          ("dualE175", 32),
          ("dualT1", 33),
          ("io101", 238),
          ("io119", 239),
          ("io201", 192),
          ("io201a", 202),
          ("io202", 193),
          ("io202a", 203),
          ("io203", 195),
          ("io203a", 204),
          ("io204", 194),
          ("io205", 210),
          ("io205x12", 209),
          ("io206", 199),
          ("io231", 197),
          ("io251", 196),
          ("io253", 200),
          ("io254", 198),
          ("io255", 214),
          ("io256", 201),
          ("io301x12", 160),
          ("io351d", 35),
          ("io352d", 36),
          ("io411", 226),
          ("io412", 234),
          ("io461", 237),
          ("io462", 233),
          ("io463x2", 191),
          ("io464x4", 190),
          ("io465x2", 189),
          ("io466x4", 188),
          ("io467x2", 185),
          ("io467x4", 184),
          ("io468x2", 187),
          ("io468x4", 186),
          ("io469x2", 183),
          ("io470x4", 182),
          ("io511x3", 177),
          ("io512x3", 176),
          ("io513", 180),
          ("io514", 179),
          ("io520", 178),
          ("io521", 174),
          ("io522", 175),
          ("io601", 144),
          ("io601A", 147),
          ("io602", 145),
          ("io602A", 148),
          ("io603", 146),
          ("io603A", 149),
          ("io604", 150),
          ("io616", 16),
          ("io621", 155),
          ("io622", 156),
          ("io623", 157),
          ("io624", 158),
          ("io625", 128),
          ("io626", 129),
          ("io721", 225),
          ("io722", 224),
          ("io723", 232),
          ("io724", 227),
          ("io725", 231),
          ("ioRepeater", 207),
          ("ioTS16a", 235),
          ("ioTS16b", 236),
          ("singleE1120", 40),
          ("singleE175", 39),
          ("singleT1", 38))
    )





class DdpAddress(OctetString):
    """Custom type DdpAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(3, 3),
    )





class DialogStatus(Integer32):
    """Custom type DialogStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("badFileData", 5),
          ("deviceWriteProtected", 6),
          ("fileSystemError", 11),
          ("fileTooLarge", 2),
          ("none", 1),
          ("notExecutableFile", 4),
          ("notImageFile", 3),
          ("operationTimeout", 7),
          ("protocolError", 10),
          ("remoteFileAccessViolation", 9),
          ("remoteFileNotFound", 8),
          ("success", 13),
          ("temporaryResourceConflict", 12))
    )





class NetworkType(Integer32):
    """Custom type NetworkType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("atm", 10),
          ("ethernet", 3),
          ("ethernetRepeater", 7),
          ("fddi", 5),
          ("fddiConcentrator", 9),
          ("isdn", 11),
          ("other", 2),
          ("switchedEthernet", 13),
          ("switchplane", 12),
          ("tokenRing", 4),
          ("tokenRingConcentrator", 8),
          ("unknown", 1),
          ("wan", 6))
    )





class SerialNumber(OctetString):
    """Custom type SerialNumber based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )





class Letter(Integer32):
    """Custom type Letter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("b", 2),
          ("c", 3),
          ("d", 4),
          ("e", 5),
          ("f", 6),
          ("g", 7),
          ("h", 8),
          ("i", 9),
          ("j", 10),
          ("k", 11),
          ("l", 12),
          ("m", 13),
          ("n", 14),
          ("o", 15),
          ("p", 16),
          ("q", 17),
          ("r", 18),
          ("s", 19),
          ("t", 20),
          ("u", 21),
          ("v", 22),
          ("w", 23),
          ("x", 24),
          ("y", 25),
          ("z", 26))
    )




# TEXTUAL-CONVENTIONS



# MIB Managed Objects in the order of their OIDs

_Ccitt_ObjectIdentity = ObjectIdentity
ccitt = _Ccitt_ObjectIdentity(
    (0,)
)
_Null_ObjectIdentity = ObjectIdentity
null = _Null_ObjectIdentity(
    (0, 0)
)
_Iso_ObjectIdentity = ObjectIdentity
iso = _Iso_ObjectIdentity(
    (1,)
)
_Org_ObjectIdentity = ObjectIdentity
org = _Org_ObjectIdentity(
    (1, 3)
)
_Dod_ObjectIdentity = ObjectIdentity
dod = _Dod_ObjectIdentity(
    (1, 3, 6)
)
_Internet_ObjectIdentity = ObjectIdentity
internet = _Internet_ObjectIdentity(
    (1, 3, 6, 1)
)
_Directory_ObjectIdentity = ObjectIdentity
directory = _Directory_ObjectIdentity(
    (1, 3, 6, 1, 1)
)
_Mgmt_ObjectIdentity = ObjectIdentity
mgmt = _Mgmt_ObjectIdentity(
    (1, 3, 6, 1, 2)
)
_Mib_2_ObjectIdentity = ObjectIdentity
mib_2 = _Mib_2_ObjectIdentity(
    (1, 3, 6, 1, 2, 1)
)
_System_ObjectIdentity = ObjectIdentity
system = _System_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 1)
)


class _SysDescr_Type(DisplayString):
    """Custom type sysDescr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SysDescr_Type.__name__ = "DisplayString"
_SysDescr_Object = MibScalar
sysDescr = _SysDescr_Object(
    (1, 3, 6, 1, 2, 1, 1, 1),
    _SysDescr_Type()
)
sysDescr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysDescr.setStatus("mandatory")
_SysObjectID_Type = ObjectIdentifier
_SysObjectID_Object = MibScalar
sysObjectID = _SysObjectID_Object(
    (1, 3, 6, 1, 2, 1, 1, 2),
    _SysObjectID_Type()
)
sysObjectID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysObjectID.setStatus("mandatory")
_SysUpTime_Type = TimeTicks
_SysUpTime_Object = MibScalar
sysUpTime = _SysUpTime_Object(
    (1, 3, 6, 1, 2, 1, 1, 3),
    _SysUpTime_Type()
)
sysUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysUpTime.setStatus("mandatory")


class _SysContact_Type(DisplayString):
    """Custom type sysContact based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SysContact_Type.__name__ = "DisplayString"
_SysContact_Object = MibScalar
sysContact = _SysContact_Object(
    (1, 3, 6, 1, 2, 1, 1, 4),
    _SysContact_Type()
)
sysContact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysContact.setStatus("mandatory")


class _SysName_Type(DisplayString):
    """Custom type sysName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SysName_Type.__name__ = "DisplayString"
_SysName_Object = MibScalar
sysName = _SysName_Object(
    (1, 3, 6, 1, 2, 1, 1, 5),
    _SysName_Type()
)
sysName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysName.setStatus("mandatory")


class _SysLocation_Type(DisplayString):
    """Custom type sysLocation based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SysLocation_Type.__name__ = "DisplayString"
_SysLocation_Object = MibScalar
sysLocation = _SysLocation_Object(
    (1, 3, 6, 1, 2, 1, 1, 6),
    _SysLocation_Type()
)
sysLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysLocation.setStatus("mandatory")


class _SysServices_Type(Integer32):
    """Custom type sysServices based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 127),
    )


_SysServices_Type.__name__ = "Integer32"
_SysServices_Object = MibScalar
sysServices = _SysServices_Object(
    (1, 3, 6, 1, 2, 1, 1, 7),
    _SysServices_Type()
)
sysServices.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysServices.setStatus("mandatory")
_Interfaces_ObjectIdentity = ObjectIdentity
interfaces = _Interfaces_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 2)
)
_IfNumber_Type = Integer32
_IfNumber_Object = MibScalar
ifNumber = _IfNumber_Object(
    (1, 3, 6, 1, 2, 1, 2, 1),
    _IfNumber_Type()
)
ifNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifNumber.setStatus("mandatory")
_IfTable_Object = MibTable
ifTable = _IfTable_Object(
    (1, 3, 6, 1, 2, 1, 2, 2)
)
if mibBuilder.loadTexts:
    ifTable.setStatus("mandatory")
_IfEntry_Object = MibTableRow
ifEntry = _IfEntry_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1)
)
ifEntry.setIndexNames(
    (0, "MRVINREACH", "ifIndex"),
)
if mibBuilder.loadTexts:
    ifEntry.setStatus("mandatory")
_IfIndex_Type = Integer32
_IfIndex_Object = MibTableColumn
ifIndex = _IfIndex_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 1),
    _IfIndex_Type()
)
ifIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifIndex.setStatus("mandatory")


class _IfDescr_Type(DisplayString):
    """Custom type ifDescr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_IfDescr_Type.__name__ = "DisplayString"
_IfDescr_Object = MibTableColumn
ifDescr = _IfDescr_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 2),
    _IfDescr_Type()
)
ifDescr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifDescr.setStatus("mandatory")


class _IfType_Type(Integer32):
    """Custom type ifType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32)
        )
    )
    namedValues = NamedValues(
        *(("basicISDN", 20),
          ("ddn-x25", 4),
          ("ds1", 18),
          ("ds3", 30),
          ("e1", 19),
          ("eon", 25),
          ("ethernet-3Mbit", 26),
          ("ethernet-csmacd", 6),
          ("fddi", 15),
          ("frame-relay", 32),
          ("hdh1822", 3),
          ("hyperchannel", 14),
          ("iso88023-csmacd", 7),
          ("iso88024-tokenBus", 8),
          ("iso88025-tokenRing", 9),
          ("iso88026-man", 10),
          ("lapb", 16),
          ("nsip", 27),
          ("other", 1),
          ("ppp", 23),
          ("primaryISDN", 21),
          ("propPointToPointSerial", 22),
          ("proteon-10Mbit", 12),
          ("proteon-80Mbit", 13),
          ("regular1822", 2),
          ("rfc877-x25", 5),
          ("sdlc", 17),
          ("sip", 31),
          ("slip", 28),
          ("softwareLoopback", 24),
          ("starLan", 11),
          ("ultra", 29))
    )


_IfType_Type.__name__ = "Integer32"
_IfType_Object = MibTableColumn
ifType = _IfType_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 3),
    _IfType_Type()
)
ifType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifType.setStatus("mandatory")
_IfMtu_Type = Integer32
_IfMtu_Object = MibTableColumn
ifMtu = _IfMtu_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 4),
    _IfMtu_Type()
)
ifMtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifMtu.setStatus("mandatory")
_IfSpeed_Type = Gauge32
_IfSpeed_Object = MibTableColumn
ifSpeed = _IfSpeed_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 5),
    _IfSpeed_Type()
)
ifSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifSpeed.setStatus("mandatory")
_IfPhysAddress_Type = PhysAddress
_IfPhysAddress_Object = MibTableColumn
ifPhysAddress = _IfPhysAddress_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 6),
    _IfPhysAddress_Type()
)
ifPhysAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifPhysAddress.setStatus("mandatory")


class _IfAdminStatus_Type(Integer32):
    """Custom type ifAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("down", 2),
          ("testing", 3),
          ("up", 1))
    )


_IfAdminStatus_Type.__name__ = "Integer32"
_IfAdminStatus_Object = MibTableColumn
ifAdminStatus = _IfAdminStatus_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 7),
    _IfAdminStatus_Type()
)
ifAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ifAdminStatus.setStatus("mandatory")


class _IfOperStatus_Type(Integer32):
    """Custom type ifOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("down", 2),
          ("testing", 3),
          ("up", 1))
    )


_IfOperStatus_Type.__name__ = "Integer32"
_IfOperStatus_Object = MibTableColumn
ifOperStatus = _IfOperStatus_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 8),
    _IfOperStatus_Type()
)
ifOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifOperStatus.setStatus("mandatory")
_IfLastChange_Type = TimeTicks
_IfLastChange_Object = MibTableColumn
ifLastChange = _IfLastChange_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 9),
    _IfLastChange_Type()
)
ifLastChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifLastChange.setStatus("mandatory")
_IfInOctets_Type = Counter32
_IfInOctets_Object = MibTableColumn
ifInOctets = _IfInOctets_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 10),
    _IfInOctets_Type()
)
ifInOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifInOctets.setStatus("mandatory")
_IfInUcastPkts_Type = Counter32
_IfInUcastPkts_Object = MibTableColumn
ifInUcastPkts = _IfInUcastPkts_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 11),
    _IfInUcastPkts_Type()
)
ifInUcastPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifInUcastPkts.setStatus("mandatory")
_IfInNUcastPkts_Type = Counter32
_IfInNUcastPkts_Object = MibTableColumn
ifInNUcastPkts = _IfInNUcastPkts_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 12),
    _IfInNUcastPkts_Type()
)
ifInNUcastPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifInNUcastPkts.setStatus("mandatory")
_IfInDiscards_Type = Counter32
_IfInDiscards_Object = MibTableColumn
ifInDiscards = _IfInDiscards_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 13),
    _IfInDiscards_Type()
)
ifInDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifInDiscards.setStatus("mandatory")
_IfInErrors_Type = Counter32
_IfInErrors_Object = MibTableColumn
ifInErrors = _IfInErrors_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 14),
    _IfInErrors_Type()
)
ifInErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifInErrors.setStatus("mandatory")
_IfInUnknownProtos_Type = Counter32
_IfInUnknownProtos_Object = MibTableColumn
ifInUnknownProtos = _IfInUnknownProtos_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 15),
    _IfInUnknownProtos_Type()
)
ifInUnknownProtos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifInUnknownProtos.setStatus("mandatory")
_IfOutOctets_Type = Counter32
_IfOutOctets_Object = MibTableColumn
ifOutOctets = _IfOutOctets_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 16),
    _IfOutOctets_Type()
)
ifOutOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifOutOctets.setStatus("mandatory")
_IfOutUcastPkts_Type = Counter32
_IfOutUcastPkts_Object = MibTableColumn
ifOutUcastPkts = _IfOutUcastPkts_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 17),
    _IfOutUcastPkts_Type()
)
ifOutUcastPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifOutUcastPkts.setStatus("mandatory")
_IfOutNUcastPkts_Type = Counter32
_IfOutNUcastPkts_Object = MibTableColumn
ifOutNUcastPkts = _IfOutNUcastPkts_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 18),
    _IfOutNUcastPkts_Type()
)
ifOutNUcastPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifOutNUcastPkts.setStatus("mandatory")
_IfOutDiscards_Type = Counter32
_IfOutDiscards_Object = MibTableColumn
ifOutDiscards = _IfOutDiscards_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 19),
    _IfOutDiscards_Type()
)
ifOutDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifOutDiscards.setStatus("mandatory")
_IfOutErrors_Type = Counter32
_IfOutErrors_Object = MibTableColumn
ifOutErrors = _IfOutErrors_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 20),
    _IfOutErrors_Type()
)
ifOutErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifOutErrors.setStatus("mandatory")
_IfOutQLen_Type = Gauge32
_IfOutQLen_Object = MibTableColumn
ifOutQLen = _IfOutQLen_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 21),
    _IfOutQLen_Type()
)
ifOutQLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifOutQLen.setStatus("mandatory")
_IfSpecific_Type = ObjectIdentifier
_IfSpecific_Object = MibTableColumn
ifSpecific = _IfSpecific_Object(
    (1, 3, 6, 1, 2, 1, 2, 2, 1, 22),
    _IfSpecific_Type()
)
ifSpecific.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ifSpecific.setStatus("mandatory")
_At_ObjectIdentity = ObjectIdentity
at = _At_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 3)
)
_AtTable_Object = MibTable
atTable = _AtTable_Object(
    (1, 3, 6, 1, 2, 1, 3, 1)
)
if mibBuilder.loadTexts:
    atTable.setStatus("deprecated")
_AtEntry_Object = MibTableRow
atEntry = _AtEntry_Object(
    (1, 3, 6, 1, 2, 1, 3, 1, 1)
)
atEntry.setIndexNames(
    (0, "MRVINREACH", "atIfIndex"),
    (0, "MRVINREACH", "atNetAddress"),
)
if mibBuilder.loadTexts:
    atEntry.setStatus("deprecated")
_AtIfIndex_Type = Integer32
_AtIfIndex_Object = MibTableColumn
atIfIndex = _AtIfIndex_Object(
    (1, 3, 6, 1, 2, 1, 3, 1, 1, 1),
    _AtIfIndex_Type()
)
atIfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atIfIndex.setStatus("deprecated")
_AtPhysAddress_Type = PhysAddress
_AtPhysAddress_Object = MibTableColumn
atPhysAddress = _AtPhysAddress_Object(
    (1, 3, 6, 1, 2, 1, 3, 1, 1, 2),
    _AtPhysAddress_Type()
)
atPhysAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atPhysAddress.setStatus("deprecated")
_AtNetAddress_Type = IpAddress
_AtNetAddress_Object = MibTableColumn
atNetAddress = _AtNetAddress_Object(
    (1, 3, 6, 1, 2, 1, 3, 1, 1, 3),
    _AtNetAddress_Type()
)
atNetAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atNetAddress.setStatus("deprecated")
_Ip_ObjectIdentity = ObjectIdentity
ip = _Ip_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 4)
)


class _IpForwarding_Type(Integer32):
    """Custom type ipForwarding based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("forwarding", 1),
          ("not-forwarding", 2))
    )


_IpForwarding_Type.__name__ = "Integer32"
_IpForwarding_Object = MibScalar
ipForwarding = _IpForwarding_Object(
    (1, 3, 6, 1, 2, 1, 4, 1),
    _IpForwarding_Type()
)
ipForwarding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipForwarding.setStatus("mandatory")
_IpDefaultTTL_Type = Integer32
_IpDefaultTTL_Object = MibScalar
ipDefaultTTL = _IpDefaultTTL_Object(
    (1, 3, 6, 1, 2, 1, 4, 2),
    _IpDefaultTTL_Type()
)
ipDefaultTTL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipDefaultTTL.setStatus("mandatory")
_IpInReceives_Type = Counter32
_IpInReceives_Object = MibScalar
ipInReceives = _IpInReceives_Object(
    (1, 3, 6, 1, 2, 1, 4, 3),
    _IpInReceives_Type()
)
ipInReceives.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipInReceives.setStatus("mandatory")
_IpInHdrErrors_Type = Counter32
_IpInHdrErrors_Object = MibScalar
ipInHdrErrors = _IpInHdrErrors_Object(
    (1, 3, 6, 1, 2, 1, 4, 4),
    _IpInHdrErrors_Type()
)
ipInHdrErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipInHdrErrors.setStatus("mandatory")
_IpInAddrErrors_Type = Counter32
_IpInAddrErrors_Object = MibScalar
ipInAddrErrors = _IpInAddrErrors_Object(
    (1, 3, 6, 1, 2, 1, 4, 5),
    _IpInAddrErrors_Type()
)
ipInAddrErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipInAddrErrors.setStatus("mandatory")
_IpForwDatagrams_Type = Counter32
_IpForwDatagrams_Object = MibScalar
ipForwDatagrams = _IpForwDatagrams_Object(
    (1, 3, 6, 1, 2, 1, 4, 6),
    _IpForwDatagrams_Type()
)
ipForwDatagrams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipForwDatagrams.setStatus("mandatory")
_IpInUnknownProtos_Type = Counter32
_IpInUnknownProtos_Object = MibScalar
ipInUnknownProtos = _IpInUnknownProtos_Object(
    (1, 3, 6, 1, 2, 1, 4, 7),
    _IpInUnknownProtos_Type()
)
ipInUnknownProtos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipInUnknownProtos.setStatus("mandatory")
_IpInDiscards_Type = Counter32
_IpInDiscards_Object = MibScalar
ipInDiscards = _IpInDiscards_Object(
    (1, 3, 6, 1, 2, 1, 4, 8),
    _IpInDiscards_Type()
)
ipInDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipInDiscards.setStatus("mandatory")
_IpInDelivers_Type = Counter32
_IpInDelivers_Object = MibScalar
ipInDelivers = _IpInDelivers_Object(
    (1, 3, 6, 1, 2, 1, 4, 9),
    _IpInDelivers_Type()
)
ipInDelivers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipInDelivers.setStatus("mandatory")
_IpOutRequests_Type = Counter32
_IpOutRequests_Object = MibScalar
ipOutRequests = _IpOutRequests_Object(
    (1, 3, 6, 1, 2, 1, 4, 10),
    _IpOutRequests_Type()
)
ipOutRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipOutRequests.setStatus("mandatory")
_IpOutDiscards_Type = Counter32
_IpOutDiscards_Object = MibScalar
ipOutDiscards = _IpOutDiscards_Object(
    (1, 3, 6, 1, 2, 1, 4, 11),
    _IpOutDiscards_Type()
)
ipOutDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipOutDiscards.setStatus("mandatory")
_IpOutNoRoutes_Type = Counter32
_IpOutNoRoutes_Object = MibScalar
ipOutNoRoutes = _IpOutNoRoutes_Object(
    (1, 3, 6, 1, 2, 1, 4, 12),
    _IpOutNoRoutes_Type()
)
ipOutNoRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipOutNoRoutes.setStatus("mandatory")
_IpReasmTimeout_Type = Integer32
_IpReasmTimeout_Object = MibScalar
ipReasmTimeout = _IpReasmTimeout_Object(
    (1, 3, 6, 1, 2, 1, 4, 13),
    _IpReasmTimeout_Type()
)
ipReasmTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipReasmTimeout.setStatus("mandatory")
_IpReasmReqds_Type = Counter32
_IpReasmReqds_Object = MibScalar
ipReasmReqds = _IpReasmReqds_Object(
    (1, 3, 6, 1, 2, 1, 4, 14),
    _IpReasmReqds_Type()
)
ipReasmReqds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipReasmReqds.setStatus("mandatory")
_IpReasmOKs_Type = Counter32
_IpReasmOKs_Object = MibScalar
ipReasmOKs = _IpReasmOKs_Object(
    (1, 3, 6, 1, 2, 1, 4, 15),
    _IpReasmOKs_Type()
)
ipReasmOKs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipReasmOKs.setStatus("mandatory")
_IpReasmFails_Type = Counter32
_IpReasmFails_Object = MibScalar
ipReasmFails = _IpReasmFails_Object(
    (1, 3, 6, 1, 2, 1, 4, 16),
    _IpReasmFails_Type()
)
ipReasmFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipReasmFails.setStatus("mandatory")
_IpFragOKs_Type = Counter32
_IpFragOKs_Object = MibScalar
ipFragOKs = _IpFragOKs_Object(
    (1, 3, 6, 1, 2, 1, 4, 17),
    _IpFragOKs_Type()
)
ipFragOKs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipFragOKs.setStatus("mandatory")
_IpFragFails_Type = Counter32
_IpFragFails_Object = MibScalar
ipFragFails = _IpFragFails_Object(
    (1, 3, 6, 1, 2, 1, 4, 18),
    _IpFragFails_Type()
)
ipFragFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipFragFails.setStatus("mandatory")
_IpFragCreates_Type = Counter32
_IpFragCreates_Object = MibScalar
ipFragCreates = _IpFragCreates_Object(
    (1, 3, 6, 1, 2, 1, 4, 19),
    _IpFragCreates_Type()
)
ipFragCreates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipFragCreates.setStatus("mandatory")
_IpAddrTable_Object = MibTable
ipAddrTable = _IpAddrTable_Object(
    (1, 3, 6, 1, 2, 1, 4, 20)
)
if mibBuilder.loadTexts:
    ipAddrTable.setStatus("mandatory")
_IpAddrEntry_Object = MibTableRow
ipAddrEntry = _IpAddrEntry_Object(
    (1, 3, 6, 1, 2, 1, 4, 20, 1)
)
ipAddrEntry.setIndexNames(
    (0, "MRVINREACH", "ipAdEntAddr"),
)
if mibBuilder.loadTexts:
    ipAddrEntry.setStatus("mandatory")
_IpAdEntAddr_Type = IpAddress
_IpAdEntAddr_Object = MibTableColumn
ipAdEntAddr = _IpAdEntAddr_Object(
    (1, 3, 6, 1, 2, 1, 4, 20, 1, 1),
    _IpAdEntAddr_Type()
)
ipAdEntAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAdEntAddr.setStatus("mandatory")
_IpAdEntIfIndex_Type = Integer32
_IpAdEntIfIndex_Object = MibTableColumn
ipAdEntIfIndex = _IpAdEntIfIndex_Object(
    (1, 3, 6, 1, 2, 1, 4, 20, 1, 2),
    _IpAdEntIfIndex_Type()
)
ipAdEntIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAdEntIfIndex.setStatus("mandatory")
_IpAdEntNetMask_Type = IpAddress
_IpAdEntNetMask_Object = MibTableColumn
ipAdEntNetMask = _IpAdEntNetMask_Object(
    (1, 3, 6, 1, 2, 1, 4, 20, 1, 3),
    _IpAdEntNetMask_Type()
)
ipAdEntNetMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAdEntNetMask.setStatus("mandatory")
_IpAdEntBcastAddr_Type = Integer32
_IpAdEntBcastAddr_Object = MibTableColumn
ipAdEntBcastAddr = _IpAdEntBcastAddr_Object(
    (1, 3, 6, 1, 2, 1, 4, 20, 1, 4),
    _IpAdEntBcastAddr_Type()
)
ipAdEntBcastAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAdEntBcastAddr.setStatus("mandatory")


class _IpAdEntReasmMaxSize_Type(Integer32):
    """Custom type ipAdEntReasmMaxSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_IpAdEntReasmMaxSize_Type.__name__ = "Integer32"
_IpAdEntReasmMaxSize_Object = MibTableColumn
ipAdEntReasmMaxSize = _IpAdEntReasmMaxSize_Object(
    (1, 3, 6, 1, 2, 1, 4, 20, 1, 5),
    _IpAdEntReasmMaxSize_Type()
)
ipAdEntReasmMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAdEntReasmMaxSize.setStatus("mandatory")
_IpRouteTable_Object = MibTable
ipRouteTable = _IpRouteTable_Object(
    (1, 3, 6, 1, 2, 1, 4, 21)
)
if mibBuilder.loadTexts:
    ipRouteTable.setStatus("mandatory")
_IpRouteEntry_Object = MibTableRow
ipRouteEntry = _IpRouteEntry_Object(
    (1, 3, 6, 1, 2, 1, 4, 21, 1)
)
ipRouteEntry.setIndexNames(
    (0, "MRVINREACH", "ipRouteDest"),
)
if mibBuilder.loadTexts:
    ipRouteEntry.setStatus("mandatory")
_IpRouteDest_Type = IpAddress
_IpRouteDest_Object = MibTableColumn
ipRouteDest = _IpRouteDest_Object(
    (1, 3, 6, 1, 2, 1, 4, 21, 1, 1),
    _IpRouteDest_Type()
)
ipRouteDest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipRouteDest.setStatus("mandatory")
_IpRouteIfIndex_Type = Integer32
_IpRouteIfIndex_Object = MibTableColumn
ipRouteIfIndex = _IpRouteIfIndex_Object(
    (1, 3, 6, 1, 2, 1, 4, 21, 1, 2),
    _IpRouteIfIndex_Type()
)
ipRouteIfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipRouteIfIndex.setStatus("mandatory")
_IpRouteMetric1_Type = Integer32
_IpRouteMetric1_Object = MibTableColumn
ipRouteMetric1 = _IpRouteMetric1_Object(
    (1, 3, 6, 1, 2, 1, 4, 21, 1, 3),
    _IpRouteMetric1_Type()
)
ipRouteMetric1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipRouteMetric1.setStatus("mandatory")
_IpRouteMetric2_Type = Integer32
_IpRouteMetric2_Object = MibTableColumn
ipRouteMetric2 = _IpRouteMetric2_Object(
    (1, 3, 6, 1, 2, 1, 4, 21, 1, 4),
    _IpRouteMetric2_Type()
)
ipRouteMetric2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipRouteMetric2.setStatus("mandatory")
_IpRouteMetric3_Type = Integer32
_IpRouteMetric3_Object = MibTableColumn
ipRouteMetric3 = _IpRouteMetric3_Object(
    (1, 3, 6, 1, 2, 1, 4, 21, 1, 5),
    _IpRouteMetric3_Type()
)
ipRouteMetric3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipRouteMetric3.setStatus("mandatory")
_IpRouteMetric4_Type = Integer32
_IpRouteMetric4_Object = MibTableColumn
ipRouteMetric4 = _IpRouteMetric4_Object(
    (1, 3, 6, 1, 2, 1, 4, 21, 1, 6),
    _IpRouteMetric4_Type()
)
ipRouteMetric4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipRouteMetric4.setStatus("mandatory")
_IpRouteNextHop_Type = IpAddress
_IpRouteNextHop_Object = MibTableColumn
ipRouteNextHop = _IpRouteNextHop_Object(
    (1, 3, 6, 1, 2, 1, 4, 21, 1, 7),
    _IpRouteNextHop_Type()
)
ipRouteNextHop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipRouteNextHop.setStatus("mandatory")


class _IpRouteType_Type(Integer32):
    """Custom type ipRouteType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("direct", 3),
          ("indirect", 4),
          ("invalid", 2),
          ("other", 1))
    )


_IpRouteType_Type.__name__ = "Integer32"
_IpRouteType_Object = MibTableColumn
ipRouteType = _IpRouteType_Object(
    (1, 3, 6, 1, 2, 1, 4, 21, 1, 8),
    _IpRouteType_Type()
)
ipRouteType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipRouteType.setStatus("mandatory")


class _IpRouteProto_Type(Integer32):
    """Custom type ipRouteProto based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("bbnSpfIgp", 12),
          ("bgp", 14),
          ("ciscoIgrp", 11),
          ("egp", 5),
          ("es-is", 10),
          ("ggp", 6),
          ("hello", 7),
          ("icmp", 4),
          ("is-is", 9),
          ("local", 2),
          ("netmgmt", 3),
          ("ospf", 13),
          ("other", 1),
          ("rip", 8))
    )


_IpRouteProto_Type.__name__ = "Integer32"
_IpRouteProto_Object = MibTableColumn
ipRouteProto = _IpRouteProto_Object(
    (1, 3, 6, 1, 2, 1, 4, 21, 1, 9),
    _IpRouteProto_Type()
)
ipRouteProto.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipRouteProto.setStatus("mandatory")
_IpRouteAge_Type = Integer32
_IpRouteAge_Object = MibTableColumn
ipRouteAge = _IpRouteAge_Object(
    (1, 3, 6, 1, 2, 1, 4, 21, 1, 10),
    _IpRouteAge_Type()
)
ipRouteAge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipRouteAge.setStatus("mandatory")
_IpRouteMask_Type = IpAddress
_IpRouteMask_Object = MibTableColumn
ipRouteMask = _IpRouteMask_Object(
    (1, 3, 6, 1, 2, 1, 4, 21, 1, 11),
    _IpRouteMask_Type()
)
ipRouteMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipRouteMask.setStatus("mandatory")
_IpRouteMetric5_Type = Integer32
_IpRouteMetric5_Object = MibTableColumn
ipRouteMetric5 = _IpRouteMetric5_Object(
    (1, 3, 6, 1, 2, 1, 4, 21, 1, 12),
    _IpRouteMetric5_Type()
)
ipRouteMetric5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipRouteMetric5.setStatus("mandatory")
_IpRouteInfo_Type = ObjectIdentifier
_IpRouteInfo_Object = MibTableColumn
ipRouteInfo = _IpRouteInfo_Object(
    (1, 3, 6, 1, 2, 1, 4, 21, 1, 13),
    _IpRouteInfo_Type()
)
ipRouteInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipRouteInfo.setStatus("mandatory")
_IpNetToMediaTable_Object = MibTable
ipNetToMediaTable = _IpNetToMediaTable_Object(
    (1, 3, 6, 1, 2, 1, 4, 22)
)
if mibBuilder.loadTexts:
    ipNetToMediaTable.setStatus("mandatory")
_IpNetToMediaEntry_Object = MibTableRow
ipNetToMediaEntry = _IpNetToMediaEntry_Object(
    (1, 3, 6, 1, 2, 1, 4, 22, 1)
)
ipNetToMediaEntry.setIndexNames(
    (0, "MRVINREACH", "ipNetToMediaIfIndex"),
    (0, "MRVINREACH", "ipNetToMediaNetAddress"),
)
if mibBuilder.loadTexts:
    ipNetToMediaEntry.setStatus("mandatory")
_IpNetToMediaIfIndex_Type = Integer32
_IpNetToMediaIfIndex_Object = MibTableColumn
ipNetToMediaIfIndex = _IpNetToMediaIfIndex_Object(
    (1, 3, 6, 1, 2, 1, 4, 22, 1, 1),
    _IpNetToMediaIfIndex_Type()
)
ipNetToMediaIfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipNetToMediaIfIndex.setStatus("mandatory")
_IpNetToMediaPhysAddress_Type = PhysAddress
_IpNetToMediaPhysAddress_Object = MibTableColumn
ipNetToMediaPhysAddress = _IpNetToMediaPhysAddress_Object(
    (1, 3, 6, 1, 2, 1, 4, 22, 1, 2),
    _IpNetToMediaPhysAddress_Type()
)
ipNetToMediaPhysAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipNetToMediaPhysAddress.setStatus("mandatory")
_IpNetToMediaNetAddress_Type = IpAddress
_IpNetToMediaNetAddress_Object = MibTableColumn
ipNetToMediaNetAddress = _IpNetToMediaNetAddress_Object(
    (1, 3, 6, 1, 2, 1, 4, 22, 1, 3),
    _IpNetToMediaNetAddress_Type()
)
ipNetToMediaNetAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipNetToMediaNetAddress.setStatus("mandatory")


class _IpNetToMediaType_Type(Integer32):
    """Custom type ipNetToMediaType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("dynamic", 3),
          ("invalid", 2),
          ("other", 1),
          ("static", 4))
    )


_IpNetToMediaType_Type.__name__ = "Integer32"
_IpNetToMediaType_Object = MibTableColumn
ipNetToMediaType = _IpNetToMediaType_Object(
    (1, 3, 6, 1, 2, 1, 4, 22, 1, 4),
    _IpNetToMediaType_Type()
)
ipNetToMediaType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipNetToMediaType.setStatus("mandatory")
_IpRoutingDiscards_Type = Counter32
_IpRoutingDiscards_Object = MibScalar
ipRoutingDiscards = _IpRoutingDiscards_Object(
    (1, 3, 6, 1, 2, 1, 4, 23),
    _IpRoutingDiscards_Type()
)
ipRoutingDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipRoutingDiscards.setStatus("mandatory")
_Icmp_ObjectIdentity = ObjectIdentity
icmp = _Icmp_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 5)
)
_IcmpInMsgs_Type = Counter32
_IcmpInMsgs_Object = MibScalar
icmpInMsgs = _IcmpInMsgs_Object(
    (1, 3, 6, 1, 2, 1, 5, 1),
    _IcmpInMsgs_Type()
)
icmpInMsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpInMsgs.setStatus("mandatory")
_IcmpInErrors_Type = Counter32
_IcmpInErrors_Object = MibScalar
icmpInErrors = _IcmpInErrors_Object(
    (1, 3, 6, 1, 2, 1, 5, 2),
    _IcmpInErrors_Type()
)
icmpInErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpInErrors.setStatus("mandatory")
_IcmpInDestUnreachs_Type = Counter32
_IcmpInDestUnreachs_Object = MibScalar
icmpInDestUnreachs = _IcmpInDestUnreachs_Object(
    (1, 3, 6, 1, 2, 1, 5, 3),
    _IcmpInDestUnreachs_Type()
)
icmpInDestUnreachs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpInDestUnreachs.setStatus("mandatory")
_IcmpInTimeExcds_Type = Counter32
_IcmpInTimeExcds_Object = MibScalar
icmpInTimeExcds = _IcmpInTimeExcds_Object(
    (1, 3, 6, 1, 2, 1, 5, 4),
    _IcmpInTimeExcds_Type()
)
icmpInTimeExcds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpInTimeExcds.setStatus("mandatory")
_IcmpInParmProbs_Type = Counter32
_IcmpInParmProbs_Object = MibScalar
icmpInParmProbs = _IcmpInParmProbs_Object(
    (1, 3, 6, 1, 2, 1, 5, 5),
    _IcmpInParmProbs_Type()
)
icmpInParmProbs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpInParmProbs.setStatus("mandatory")
_IcmpInSrcQuenchs_Type = Counter32
_IcmpInSrcQuenchs_Object = MibScalar
icmpInSrcQuenchs = _IcmpInSrcQuenchs_Object(
    (1, 3, 6, 1, 2, 1, 5, 6),
    _IcmpInSrcQuenchs_Type()
)
icmpInSrcQuenchs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpInSrcQuenchs.setStatus("mandatory")
_IcmpInRedirects_Type = Counter32
_IcmpInRedirects_Object = MibScalar
icmpInRedirects = _IcmpInRedirects_Object(
    (1, 3, 6, 1, 2, 1, 5, 7),
    _IcmpInRedirects_Type()
)
icmpInRedirects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpInRedirects.setStatus("mandatory")
_IcmpInEchos_Type = Counter32
_IcmpInEchos_Object = MibScalar
icmpInEchos = _IcmpInEchos_Object(
    (1, 3, 6, 1, 2, 1, 5, 8),
    _IcmpInEchos_Type()
)
icmpInEchos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpInEchos.setStatus("mandatory")
_IcmpInEchoReps_Type = Counter32
_IcmpInEchoReps_Object = MibScalar
icmpInEchoReps = _IcmpInEchoReps_Object(
    (1, 3, 6, 1, 2, 1, 5, 9),
    _IcmpInEchoReps_Type()
)
icmpInEchoReps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpInEchoReps.setStatus("mandatory")
_IcmpInTimestamps_Type = Counter32
_IcmpInTimestamps_Object = MibScalar
icmpInTimestamps = _IcmpInTimestamps_Object(
    (1, 3, 6, 1, 2, 1, 5, 10),
    _IcmpInTimestamps_Type()
)
icmpInTimestamps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpInTimestamps.setStatus("mandatory")
_IcmpInTimestampReps_Type = Counter32
_IcmpInTimestampReps_Object = MibScalar
icmpInTimestampReps = _IcmpInTimestampReps_Object(
    (1, 3, 6, 1, 2, 1, 5, 11),
    _IcmpInTimestampReps_Type()
)
icmpInTimestampReps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpInTimestampReps.setStatus("mandatory")
_IcmpInAddrMasks_Type = Counter32
_IcmpInAddrMasks_Object = MibScalar
icmpInAddrMasks = _IcmpInAddrMasks_Object(
    (1, 3, 6, 1, 2, 1, 5, 12),
    _IcmpInAddrMasks_Type()
)
icmpInAddrMasks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpInAddrMasks.setStatus("mandatory")
_IcmpInAddrMaskReps_Type = Counter32
_IcmpInAddrMaskReps_Object = MibScalar
icmpInAddrMaskReps = _IcmpInAddrMaskReps_Object(
    (1, 3, 6, 1, 2, 1, 5, 13),
    _IcmpInAddrMaskReps_Type()
)
icmpInAddrMaskReps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpInAddrMaskReps.setStatus("mandatory")
_IcmpOutMsgs_Type = Counter32
_IcmpOutMsgs_Object = MibScalar
icmpOutMsgs = _IcmpOutMsgs_Object(
    (1, 3, 6, 1, 2, 1, 5, 14),
    _IcmpOutMsgs_Type()
)
icmpOutMsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpOutMsgs.setStatus("mandatory")
_IcmpOutErrors_Type = Counter32
_IcmpOutErrors_Object = MibScalar
icmpOutErrors = _IcmpOutErrors_Object(
    (1, 3, 6, 1, 2, 1, 5, 15),
    _IcmpOutErrors_Type()
)
icmpOutErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpOutErrors.setStatus("mandatory")
_IcmpOutDestUnreachs_Type = Counter32
_IcmpOutDestUnreachs_Object = MibScalar
icmpOutDestUnreachs = _IcmpOutDestUnreachs_Object(
    (1, 3, 6, 1, 2, 1, 5, 16),
    _IcmpOutDestUnreachs_Type()
)
icmpOutDestUnreachs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpOutDestUnreachs.setStatus("mandatory")
_IcmpOutTimeExcds_Type = Counter32
_IcmpOutTimeExcds_Object = MibScalar
icmpOutTimeExcds = _IcmpOutTimeExcds_Object(
    (1, 3, 6, 1, 2, 1, 5, 17),
    _IcmpOutTimeExcds_Type()
)
icmpOutTimeExcds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpOutTimeExcds.setStatus("mandatory")
_IcmpOutParmProbs_Type = Counter32
_IcmpOutParmProbs_Object = MibScalar
icmpOutParmProbs = _IcmpOutParmProbs_Object(
    (1, 3, 6, 1, 2, 1, 5, 18),
    _IcmpOutParmProbs_Type()
)
icmpOutParmProbs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpOutParmProbs.setStatus("mandatory")
_IcmpOutSrcQuenchs_Type = Counter32
_IcmpOutSrcQuenchs_Object = MibScalar
icmpOutSrcQuenchs = _IcmpOutSrcQuenchs_Object(
    (1, 3, 6, 1, 2, 1, 5, 19),
    _IcmpOutSrcQuenchs_Type()
)
icmpOutSrcQuenchs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpOutSrcQuenchs.setStatus("mandatory")
_IcmpOutRedirects_Type = Counter32
_IcmpOutRedirects_Object = MibScalar
icmpOutRedirects = _IcmpOutRedirects_Object(
    (1, 3, 6, 1, 2, 1, 5, 20),
    _IcmpOutRedirects_Type()
)
icmpOutRedirects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpOutRedirects.setStatus("mandatory")
_IcmpOutEchos_Type = Counter32
_IcmpOutEchos_Object = MibScalar
icmpOutEchos = _IcmpOutEchos_Object(
    (1, 3, 6, 1, 2, 1, 5, 21),
    _IcmpOutEchos_Type()
)
icmpOutEchos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpOutEchos.setStatus("mandatory")
_IcmpOutEchoReps_Type = Counter32
_IcmpOutEchoReps_Object = MibScalar
icmpOutEchoReps = _IcmpOutEchoReps_Object(
    (1, 3, 6, 1, 2, 1, 5, 22),
    _IcmpOutEchoReps_Type()
)
icmpOutEchoReps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpOutEchoReps.setStatus("mandatory")
_IcmpOutTimestamps_Type = Counter32
_IcmpOutTimestamps_Object = MibScalar
icmpOutTimestamps = _IcmpOutTimestamps_Object(
    (1, 3, 6, 1, 2, 1, 5, 23),
    _IcmpOutTimestamps_Type()
)
icmpOutTimestamps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpOutTimestamps.setStatus("mandatory")
_IcmpOutTimestampReps_Type = Counter32
_IcmpOutTimestampReps_Object = MibScalar
icmpOutTimestampReps = _IcmpOutTimestampReps_Object(
    (1, 3, 6, 1, 2, 1, 5, 24),
    _IcmpOutTimestampReps_Type()
)
icmpOutTimestampReps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpOutTimestampReps.setStatus("mandatory")
_IcmpOutAddrMasks_Type = Counter32
_IcmpOutAddrMasks_Object = MibScalar
icmpOutAddrMasks = _IcmpOutAddrMasks_Object(
    (1, 3, 6, 1, 2, 1, 5, 25),
    _IcmpOutAddrMasks_Type()
)
icmpOutAddrMasks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpOutAddrMasks.setStatus("mandatory")
_IcmpOutAddrMaskReps_Type = Counter32
_IcmpOutAddrMaskReps_Object = MibScalar
icmpOutAddrMaskReps = _IcmpOutAddrMaskReps_Object(
    (1, 3, 6, 1, 2, 1, 5, 26),
    _IcmpOutAddrMaskReps_Type()
)
icmpOutAddrMaskReps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpOutAddrMaskReps.setStatus("mandatory")
_Tcp_ObjectIdentity = ObjectIdentity
tcp = _Tcp_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 6)
)


class _TcpRtoAlgorithm_Type(Integer32):
    """Custom type tcpRtoAlgorithm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("constant", 2),
          ("other", 1),
          ("rsre", 3),
          ("vanj", 4))
    )


_TcpRtoAlgorithm_Type.__name__ = "Integer32"
_TcpRtoAlgorithm_Object = MibScalar
tcpRtoAlgorithm = _TcpRtoAlgorithm_Object(
    (1, 3, 6, 1, 2, 1, 6, 1),
    _TcpRtoAlgorithm_Type()
)
tcpRtoAlgorithm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpRtoAlgorithm.setStatus("mandatory")
_TcpRtoMin_Type = Integer32
_TcpRtoMin_Object = MibScalar
tcpRtoMin = _TcpRtoMin_Object(
    (1, 3, 6, 1, 2, 1, 6, 2),
    _TcpRtoMin_Type()
)
tcpRtoMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpRtoMin.setStatus("mandatory")
_TcpRtoMax_Type = Integer32
_TcpRtoMax_Object = MibScalar
tcpRtoMax = _TcpRtoMax_Object(
    (1, 3, 6, 1, 2, 1, 6, 3),
    _TcpRtoMax_Type()
)
tcpRtoMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpRtoMax.setStatus("mandatory")
_TcpMaxConn_Type = Integer32
_TcpMaxConn_Object = MibScalar
tcpMaxConn = _TcpMaxConn_Object(
    (1, 3, 6, 1, 2, 1, 6, 4),
    _TcpMaxConn_Type()
)
tcpMaxConn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpMaxConn.setStatus("mandatory")
_TcpActiveOpens_Type = Counter32
_TcpActiveOpens_Object = MibScalar
tcpActiveOpens = _TcpActiveOpens_Object(
    (1, 3, 6, 1, 2, 1, 6, 5),
    _TcpActiveOpens_Type()
)
tcpActiveOpens.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpActiveOpens.setStatus("mandatory")
_TcpPassiveOpens_Type = Counter32
_TcpPassiveOpens_Object = MibScalar
tcpPassiveOpens = _TcpPassiveOpens_Object(
    (1, 3, 6, 1, 2, 1, 6, 6),
    _TcpPassiveOpens_Type()
)
tcpPassiveOpens.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpPassiveOpens.setStatus("mandatory")
_TcpAttemptFails_Type = Counter32
_TcpAttemptFails_Object = MibScalar
tcpAttemptFails = _TcpAttemptFails_Object(
    (1, 3, 6, 1, 2, 1, 6, 7),
    _TcpAttemptFails_Type()
)
tcpAttemptFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpAttemptFails.setStatus("mandatory")
_TcpEstabResets_Type = Counter32
_TcpEstabResets_Object = MibScalar
tcpEstabResets = _TcpEstabResets_Object(
    (1, 3, 6, 1, 2, 1, 6, 8),
    _TcpEstabResets_Type()
)
tcpEstabResets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpEstabResets.setStatus("mandatory")
_TcpCurrEstab_Type = Gauge32
_TcpCurrEstab_Object = MibScalar
tcpCurrEstab = _TcpCurrEstab_Object(
    (1, 3, 6, 1, 2, 1, 6, 9),
    _TcpCurrEstab_Type()
)
tcpCurrEstab.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpCurrEstab.setStatus("mandatory")
_TcpInSegs_Type = Counter32
_TcpInSegs_Object = MibScalar
tcpInSegs = _TcpInSegs_Object(
    (1, 3, 6, 1, 2, 1, 6, 10),
    _TcpInSegs_Type()
)
tcpInSegs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpInSegs.setStatus("mandatory")
_TcpOutSegs_Type = Counter32
_TcpOutSegs_Object = MibScalar
tcpOutSegs = _TcpOutSegs_Object(
    (1, 3, 6, 1, 2, 1, 6, 11),
    _TcpOutSegs_Type()
)
tcpOutSegs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpOutSegs.setStatus("mandatory")
_TcpRetransSegs_Type = Counter32
_TcpRetransSegs_Object = MibScalar
tcpRetransSegs = _TcpRetransSegs_Object(
    (1, 3, 6, 1, 2, 1, 6, 12),
    _TcpRetransSegs_Type()
)
tcpRetransSegs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpRetransSegs.setStatus("mandatory")
_TcpConnTable_Object = MibTable
tcpConnTable = _TcpConnTable_Object(
    (1, 3, 6, 1, 2, 1, 6, 13)
)
if mibBuilder.loadTexts:
    tcpConnTable.setStatus("mandatory")
_TcpConnEntry_Object = MibTableRow
tcpConnEntry = _TcpConnEntry_Object(
    (1, 3, 6, 1, 2, 1, 6, 13, 1)
)
tcpConnEntry.setIndexNames(
    (0, "MRVINREACH", "tcpConnLocalAddress"),
    (0, "MRVINREACH", "tcpConnLocalPort"),
    (0, "MRVINREACH", "tcpConnRemAddress"),
    (0, "MRVINREACH", "tcpConnRemPort"),
)
if mibBuilder.loadTexts:
    tcpConnEntry.setStatus("mandatory")


class _TcpConnState_Type(Integer32):
    """Custom type tcpConnState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("closeWait", 8),
          ("closed", 1),
          ("closing", 10),
          ("deleteTCB", 12),
          ("established", 5),
          ("finWait1", 6),
          ("finWait2", 7),
          ("lastAck", 9),
          ("listen", 2),
          ("synReceived", 4),
          ("synSent", 3),
          ("timeWait", 11))
    )


_TcpConnState_Type.__name__ = "Integer32"
_TcpConnState_Object = MibTableColumn
tcpConnState = _TcpConnState_Object(
    (1, 3, 6, 1, 2, 1, 6, 13, 1, 1),
    _TcpConnState_Type()
)
tcpConnState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tcpConnState.setStatus("mandatory")
_TcpConnLocalAddress_Type = IpAddress
_TcpConnLocalAddress_Object = MibTableColumn
tcpConnLocalAddress = _TcpConnLocalAddress_Object(
    (1, 3, 6, 1, 2, 1, 6, 13, 1, 2),
    _TcpConnLocalAddress_Type()
)
tcpConnLocalAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpConnLocalAddress.setStatus("mandatory")


class _TcpConnLocalPort_Type(Integer32):
    """Custom type tcpConnLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_TcpConnLocalPort_Type.__name__ = "Integer32"
_TcpConnLocalPort_Object = MibTableColumn
tcpConnLocalPort = _TcpConnLocalPort_Object(
    (1, 3, 6, 1, 2, 1, 6, 13, 1, 3),
    _TcpConnLocalPort_Type()
)
tcpConnLocalPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpConnLocalPort.setStatus("mandatory")
_TcpConnRemAddress_Type = IpAddress
_TcpConnRemAddress_Object = MibTableColumn
tcpConnRemAddress = _TcpConnRemAddress_Object(
    (1, 3, 6, 1, 2, 1, 6, 13, 1, 4),
    _TcpConnRemAddress_Type()
)
tcpConnRemAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpConnRemAddress.setStatus("mandatory")


class _TcpConnRemPort_Type(Integer32):
    """Custom type tcpConnRemPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_TcpConnRemPort_Type.__name__ = "Integer32"
_TcpConnRemPort_Object = MibTableColumn
tcpConnRemPort = _TcpConnRemPort_Object(
    (1, 3, 6, 1, 2, 1, 6, 13, 1, 5),
    _TcpConnRemPort_Type()
)
tcpConnRemPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpConnRemPort.setStatus("mandatory")
_TcpInErrs_Type = Counter32
_TcpInErrs_Object = MibScalar
tcpInErrs = _TcpInErrs_Object(
    (1, 3, 6, 1, 2, 1, 6, 14),
    _TcpInErrs_Type()
)
tcpInErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpInErrs.setStatus("mandatory")
_TcpOutRsts_Type = Counter32
_TcpOutRsts_Object = MibScalar
tcpOutRsts = _TcpOutRsts_Object(
    (1, 3, 6, 1, 2, 1, 6, 15),
    _TcpOutRsts_Type()
)
tcpOutRsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpOutRsts.setStatus("mandatory")
_Udp_ObjectIdentity = ObjectIdentity
udp = _Udp_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 7)
)
_UdpInDatagrams_Type = Counter32
_UdpInDatagrams_Object = MibScalar
udpInDatagrams = _UdpInDatagrams_Object(
    (1, 3, 6, 1, 2, 1, 7, 1),
    _UdpInDatagrams_Type()
)
udpInDatagrams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udpInDatagrams.setStatus("mandatory")
_UdpNoPorts_Type = Counter32
_UdpNoPorts_Object = MibScalar
udpNoPorts = _UdpNoPorts_Object(
    (1, 3, 6, 1, 2, 1, 7, 2),
    _UdpNoPorts_Type()
)
udpNoPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udpNoPorts.setStatus("mandatory")
_UdpInErrors_Type = Counter32
_UdpInErrors_Object = MibScalar
udpInErrors = _UdpInErrors_Object(
    (1, 3, 6, 1, 2, 1, 7, 3),
    _UdpInErrors_Type()
)
udpInErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udpInErrors.setStatus("mandatory")
_UdpOutDatagrams_Type = Counter32
_UdpOutDatagrams_Object = MibScalar
udpOutDatagrams = _UdpOutDatagrams_Object(
    (1, 3, 6, 1, 2, 1, 7, 4),
    _UdpOutDatagrams_Type()
)
udpOutDatagrams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udpOutDatagrams.setStatus("mandatory")
_UdpTable_Object = MibTable
udpTable = _UdpTable_Object(
    (1, 3, 6, 1, 2, 1, 7, 5)
)
if mibBuilder.loadTexts:
    udpTable.setStatus("mandatory")
_UdpEntry_Object = MibTableRow
udpEntry = _UdpEntry_Object(
    (1, 3, 6, 1, 2, 1, 7, 5, 1)
)
udpEntry.setIndexNames(
    (0, "MRVINREACH", "udpLocalAddress"),
    (0, "MRVINREACH", "udpLocalPort"),
)
if mibBuilder.loadTexts:
    udpEntry.setStatus("mandatory")
_UdpLocalAddress_Type = IpAddress
_UdpLocalAddress_Object = MibTableColumn
udpLocalAddress = _UdpLocalAddress_Object(
    (1, 3, 6, 1, 2, 1, 7, 5, 1, 1),
    _UdpLocalAddress_Type()
)
udpLocalAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udpLocalAddress.setStatus("mandatory")


class _UdpLocalPort_Type(Integer32):
    """Custom type udpLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_UdpLocalPort_Type.__name__ = "Integer32"
_UdpLocalPort_Object = MibTableColumn
udpLocalPort = _UdpLocalPort_Object(
    (1, 3, 6, 1, 2, 1, 7, 5, 1, 2),
    _UdpLocalPort_Type()
)
udpLocalPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udpLocalPort.setStatus("mandatory")
_Egp_ObjectIdentity = ObjectIdentity
egp = _Egp_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 8)
)
_EgpInMsgs_Type = Counter32
_EgpInMsgs_Object = MibScalar
egpInMsgs = _EgpInMsgs_Object(
    (1, 3, 6, 1, 2, 1, 8, 1),
    _EgpInMsgs_Type()
)
egpInMsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    egpInMsgs.setStatus("mandatory")
_EgpInErrors_Type = Counter32
_EgpInErrors_Object = MibScalar
egpInErrors = _EgpInErrors_Object(
    (1, 3, 6, 1, 2, 1, 8, 2),
    _EgpInErrors_Type()
)
egpInErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    egpInErrors.setStatus("mandatory")
_EgpOutMsgs_Type = Counter32
_EgpOutMsgs_Object = MibScalar
egpOutMsgs = _EgpOutMsgs_Object(
    (1, 3, 6, 1, 2, 1, 8, 3),
    _EgpOutMsgs_Type()
)
egpOutMsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    egpOutMsgs.setStatus("mandatory")
_EgpOutErrors_Type = Counter32
_EgpOutErrors_Object = MibScalar
egpOutErrors = _EgpOutErrors_Object(
    (1, 3, 6, 1, 2, 1, 8, 4),
    _EgpOutErrors_Type()
)
egpOutErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    egpOutErrors.setStatus("mandatory")
_EgpNeighTable_Object = MibTable
egpNeighTable = _EgpNeighTable_Object(
    (1, 3, 6, 1, 2, 1, 8, 5)
)
if mibBuilder.loadTexts:
    egpNeighTable.setStatus("mandatory")
_EgpNeighEntry_Object = MibTableRow
egpNeighEntry = _EgpNeighEntry_Object(
    (1, 3, 6, 1, 2, 1, 8, 5, 1)
)
egpNeighEntry.setIndexNames(
    (0, "MRVINREACH", "egpNeighAddr"),
)
if mibBuilder.loadTexts:
    egpNeighEntry.setStatus("mandatory")


class _EgpNeighState_Type(Integer32):
    """Custom type egpNeighState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("acquisition", 2),
          ("cease", 5),
          ("down", 3),
          ("idle", 1),
          ("up", 4))
    )


_EgpNeighState_Type.__name__ = "Integer32"
_EgpNeighState_Object = MibTableColumn
egpNeighState = _EgpNeighState_Object(
    (1, 3, 6, 1, 2, 1, 8, 5, 1, 1),
    _EgpNeighState_Type()
)
egpNeighState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    egpNeighState.setStatus("mandatory")
_EgpNeighAddr_Type = IpAddress
_EgpNeighAddr_Object = MibTableColumn
egpNeighAddr = _EgpNeighAddr_Object(
    (1, 3, 6, 1, 2, 1, 8, 5, 1, 2),
    _EgpNeighAddr_Type()
)
egpNeighAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    egpNeighAddr.setStatus("mandatory")
_EgpNeighAs_Type = Integer32
_EgpNeighAs_Object = MibTableColumn
egpNeighAs = _EgpNeighAs_Object(
    (1, 3, 6, 1, 2, 1, 8, 5, 1, 3),
    _EgpNeighAs_Type()
)
egpNeighAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    egpNeighAs.setStatus("mandatory")
_EgpNeighInMsgs_Type = Counter32
_EgpNeighInMsgs_Object = MibTableColumn
egpNeighInMsgs = _EgpNeighInMsgs_Object(
    (1, 3, 6, 1, 2, 1, 8, 5, 1, 4),
    _EgpNeighInMsgs_Type()
)
egpNeighInMsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    egpNeighInMsgs.setStatus("mandatory")
_EgpNeighInErrs_Type = Counter32
_EgpNeighInErrs_Object = MibTableColumn
egpNeighInErrs = _EgpNeighInErrs_Object(
    (1, 3, 6, 1, 2, 1, 8, 5, 1, 5),
    _EgpNeighInErrs_Type()
)
egpNeighInErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    egpNeighInErrs.setStatus("mandatory")
_EgpNeighOutMsgs_Type = Counter32
_EgpNeighOutMsgs_Object = MibTableColumn
egpNeighOutMsgs = _EgpNeighOutMsgs_Object(
    (1, 3, 6, 1, 2, 1, 8, 5, 1, 6),
    _EgpNeighOutMsgs_Type()
)
egpNeighOutMsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    egpNeighOutMsgs.setStatus("mandatory")
_EgpNeighOutErrs_Type = Counter32
_EgpNeighOutErrs_Object = MibTableColumn
egpNeighOutErrs = _EgpNeighOutErrs_Object(
    (1, 3, 6, 1, 2, 1, 8, 5, 1, 7),
    _EgpNeighOutErrs_Type()
)
egpNeighOutErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    egpNeighOutErrs.setStatus("mandatory")
_EgpNeighInErrMsgs_Type = Counter32
_EgpNeighInErrMsgs_Object = MibTableColumn
egpNeighInErrMsgs = _EgpNeighInErrMsgs_Object(
    (1, 3, 6, 1, 2, 1, 8, 5, 1, 8),
    _EgpNeighInErrMsgs_Type()
)
egpNeighInErrMsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    egpNeighInErrMsgs.setStatus("mandatory")
_EgpNeighOutErrMsgs_Type = Counter32
_EgpNeighOutErrMsgs_Object = MibTableColumn
egpNeighOutErrMsgs = _EgpNeighOutErrMsgs_Object(
    (1, 3, 6, 1, 2, 1, 8, 5, 1, 9),
    _EgpNeighOutErrMsgs_Type()
)
egpNeighOutErrMsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    egpNeighOutErrMsgs.setStatus("mandatory")
_EgpNeighStateUps_Type = Counter32
_EgpNeighStateUps_Object = MibTableColumn
egpNeighStateUps = _EgpNeighStateUps_Object(
    (1, 3, 6, 1, 2, 1, 8, 5, 1, 10),
    _EgpNeighStateUps_Type()
)
egpNeighStateUps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    egpNeighStateUps.setStatus("mandatory")
_EgpNeighStateDowns_Type = Counter32
_EgpNeighStateDowns_Object = MibTableColumn
egpNeighStateDowns = _EgpNeighStateDowns_Object(
    (1, 3, 6, 1, 2, 1, 8, 5, 1, 11),
    _EgpNeighStateDowns_Type()
)
egpNeighStateDowns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    egpNeighStateDowns.setStatus("mandatory")
_EgpNeighIntervalHello_Type = Integer32
_EgpNeighIntervalHello_Object = MibTableColumn
egpNeighIntervalHello = _EgpNeighIntervalHello_Object(
    (1, 3, 6, 1, 2, 1, 8, 5, 1, 12),
    _EgpNeighIntervalHello_Type()
)
egpNeighIntervalHello.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    egpNeighIntervalHello.setStatus("mandatory")
_EgpNeighIntervalPoll_Type = Integer32
_EgpNeighIntervalPoll_Object = MibTableColumn
egpNeighIntervalPoll = _EgpNeighIntervalPoll_Object(
    (1, 3, 6, 1, 2, 1, 8, 5, 1, 13),
    _EgpNeighIntervalPoll_Type()
)
egpNeighIntervalPoll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    egpNeighIntervalPoll.setStatus("mandatory")


class _EgpNeighMode_Type(Integer32):
    """Custom type egpNeighMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("passive", 2))
    )


_EgpNeighMode_Type.__name__ = "Integer32"
_EgpNeighMode_Object = MibTableColumn
egpNeighMode = _EgpNeighMode_Object(
    (1, 3, 6, 1, 2, 1, 8, 5, 1, 14),
    _EgpNeighMode_Type()
)
egpNeighMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    egpNeighMode.setStatus("mandatory")


class _EgpNeighEventTrigger_Type(Integer32):
    """Custom type egpNeighEventTrigger based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("start", 1),
          ("stop", 2))
    )


_EgpNeighEventTrigger_Type.__name__ = "Integer32"
_EgpNeighEventTrigger_Object = MibTableColumn
egpNeighEventTrigger = _EgpNeighEventTrigger_Object(
    (1, 3, 6, 1, 2, 1, 8, 5, 1, 15),
    _EgpNeighEventTrigger_Type()
)
egpNeighEventTrigger.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    egpNeighEventTrigger.setStatus("mandatory")
_EgpAs_Type = Integer32
_EgpAs_Object = MibScalar
egpAs = _EgpAs_Object(
    (1, 3, 6, 1, 2, 1, 8, 6),
    _EgpAs_Type()
)
egpAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    egpAs.setStatus("mandatory")
_Transmission_ObjectIdentity = ObjectIdentity
transmission = _Transmission_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 10)
)
_Ppp_ObjectIdentity = ObjectIdentity
ppp = _Ppp_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 10, 23)
)
_PppLcp_ObjectIdentity = ObjectIdentity
pppLcp = _PppLcp_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 10, 23, 1)
)
_PppLink_ObjectIdentity = ObjectIdentity
pppLink = _PppLink_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1)
)
_PppLinkStatusTable_Object = MibTable
pppLinkStatusTable = _PppLinkStatusTable_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 1)
)
if mibBuilder.loadTexts:
    pppLinkStatusTable.setStatus("mandatory")
_PppLinkStatusEntry_Object = MibTableRow
pppLinkStatusEntry = _PppLinkStatusEntry_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 1, 1)
)
pppLinkStatusEntry.setIndexNames(
    (0, "MRVINREACH", "ifIndex"),
)
if mibBuilder.loadTexts:
    pppLinkStatusEntry.setStatus("mandatory")


class _PppLinkStatusPhysicalIndex_Type(Integer32):
    """Custom type pppLinkStatusPhysicalIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_PppLinkStatusPhysicalIndex_Type.__name__ = "Integer32"
_PppLinkStatusPhysicalIndex_Object = MibTableColumn
pppLinkStatusPhysicalIndex = _PppLinkStatusPhysicalIndex_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 1, 1, 1),
    _PppLinkStatusPhysicalIndex_Type()
)
pppLinkStatusPhysicalIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppLinkStatusPhysicalIndex.setStatus("mandatory")
_PppLinkStatusBadAddresses_Type = Counter32
_PppLinkStatusBadAddresses_Object = MibTableColumn
pppLinkStatusBadAddresses = _PppLinkStatusBadAddresses_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 1, 1, 2),
    _PppLinkStatusBadAddresses_Type()
)
pppLinkStatusBadAddresses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppLinkStatusBadAddresses.setStatus("mandatory")
_PppLinkStatusBadControls_Type = Counter32
_PppLinkStatusBadControls_Object = MibTableColumn
pppLinkStatusBadControls = _PppLinkStatusBadControls_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 1, 1, 3),
    _PppLinkStatusBadControls_Type()
)
pppLinkStatusBadControls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppLinkStatusBadControls.setStatus("mandatory")
_PppLinkStatusPacketTooLongs_Type = Counter32
_PppLinkStatusPacketTooLongs_Object = MibTableColumn
pppLinkStatusPacketTooLongs = _PppLinkStatusPacketTooLongs_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 1, 1, 4),
    _PppLinkStatusPacketTooLongs_Type()
)
pppLinkStatusPacketTooLongs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppLinkStatusPacketTooLongs.setStatus("mandatory")
_PppLinkStatusBadFCSs_Type = Counter32
_PppLinkStatusBadFCSs_Object = MibTableColumn
pppLinkStatusBadFCSs = _PppLinkStatusBadFCSs_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 1, 1, 5),
    _PppLinkStatusBadFCSs_Type()
)
pppLinkStatusBadFCSs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppLinkStatusBadFCSs.setStatus("mandatory")


class _PppLinkStatusLocalMRU_Type(Integer32):
    """Custom type pppLinkStatusLocalMRU based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483648),
    )


_PppLinkStatusLocalMRU_Type.__name__ = "Integer32"
_PppLinkStatusLocalMRU_Object = MibTableColumn
pppLinkStatusLocalMRU = _PppLinkStatusLocalMRU_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 1, 1, 6),
    _PppLinkStatusLocalMRU_Type()
)
pppLinkStatusLocalMRU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppLinkStatusLocalMRU.setStatus("mandatory")


class _PppLinkStatusRemoteMRU_Type(Integer32):
    """Custom type pppLinkStatusRemoteMRU based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483648),
    )


_PppLinkStatusRemoteMRU_Type.__name__ = "Integer32"
_PppLinkStatusRemoteMRU_Object = MibTableColumn
pppLinkStatusRemoteMRU = _PppLinkStatusRemoteMRU_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 1, 1, 7),
    _PppLinkStatusRemoteMRU_Type()
)
pppLinkStatusRemoteMRU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppLinkStatusRemoteMRU.setStatus("mandatory")


class _PppLinkStatusLocalToPeerACCMap_Type(OctetString):
    """Custom type pppLinkStatusLocalToPeerACCMap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_PppLinkStatusLocalToPeerACCMap_Type.__name__ = "OctetString"
_PppLinkStatusLocalToPeerACCMap_Object = MibTableColumn
pppLinkStatusLocalToPeerACCMap = _PppLinkStatusLocalToPeerACCMap_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 1, 1, 8),
    _PppLinkStatusLocalToPeerACCMap_Type()
)
pppLinkStatusLocalToPeerACCMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppLinkStatusLocalToPeerACCMap.setStatus("mandatory")


class _PppLinkStatusPeerToLocalACCMap_Type(OctetString):
    """Custom type pppLinkStatusPeerToLocalACCMap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_PppLinkStatusPeerToLocalACCMap_Type.__name__ = "OctetString"
_PppLinkStatusPeerToLocalACCMap_Object = MibTableColumn
pppLinkStatusPeerToLocalACCMap = _PppLinkStatusPeerToLocalACCMap_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 1, 1, 9),
    _PppLinkStatusPeerToLocalACCMap_Type()
)
pppLinkStatusPeerToLocalACCMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppLinkStatusPeerToLocalACCMap.setStatus("mandatory")


class _PppLinkStatusLocalToRemoteProtocolCompression_Type(Integer32):
    """Custom type pppLinkStatusLocalToRemoteProtocolCompression based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_PppLinkStatusLocalToRemoteProtocolCompression_Type.__name__ = "Integer32"
_PppLinkStatusLocalToRemoteProtocolCompression_Object = MibTableColumn
pppLinkStatusLocalToRemoteProtocolCompression = _PppLinkStatusLocalToRemoteProtocolCompression_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 1, 1, 10),
    _PppLinkStatusLocalToRemoteProtocolCompression_Type()
)
pppLinkStatusLocalToRemoteProtocolCompression.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppLinkStatusLocalToRemoteProtocolCompression.setStatus("mandatory")


class _PppLinkStatusRemoteToLocalProtocolCompression_Type(Integer32):
    """Custom type pppLinkStatusRemoteToLocalProtocolCompression based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_PppLinkStatusRemoteToLocalProtocolCompression_Type.__name__ = "Integer32"
_PppLinkStatusRemoteToLocalProtocolCompression_Object = MibTableColumn
pppLinkStatusRemoteToLocalProtocolCompression = _PppLinkStatusRemoteToLocalProtocolCompression_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 1, 1, 11),
    _PppLinkStatusRemoteToLocalProtocolCompression_Type()
)
pppLinkStatusRemoteToLocalProtocolCompression.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppLinkStatusRemoteToLocalProtocolCompression.setStatus("mandatory")


class _PppLinkStatusLocalToRemoteACCompression_Type(Integer32):
    """Custom type pppLinkStatusLocalToRemoteACCompression based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_PppLinkStatusLocalToRemoteACCompression_Type.__name__ = "Integer32"
_PppLinkStatusLocalToRemoteACCompression_Object = MibTableColumn
pppLinkStatusLocalToRemoteACCompression = _PppLinkStatusLocalToRemoteACCompression_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 1, 1, 12),
    _PppLinkStatusLocalToRemoteACCompression_Type()
)
pppLinkStatusLocalToRemoteACCompression.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppLinkStatusLocalToRemoteACCompression.setStatus("mandatory")


class _PppLinkStatusRemoteToLocalACCompression_Type(Integer32):
    """Custom type pppLinkStatusRemoteToLocalACCompression based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_PppLinkStatusRemoteToLocalACCompression_Type.__name__ = "Integer32"
_PppLinkStatusRemoteToLocalACCompression_Object = MibTableColumn
pppLinkStatusRemoteToLocalACCompression = _PppLinkStatusRemoteToLocalACCompression_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 1, 1, 13),
    _PppLinkStatusRemoteToLocalACCompression_Type()
)
pppLinkStatusRemoteToLocalACCompression.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppLinkStatusRemoteToLocalACCompression.setStatus("mandatory")


class _PppLinkStatusTransmitFcsSize_Type(Integer32):
    """Custom type pppLinkStatusTransmitFcsSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_PppLinkStatusTransmitFcsSize_Type.__name__ = "Integer32"
_PppLinkStatusTransmitFcsSize_Object = MibTableColumn
pppLinkStatusTransmitFcsSize = _PppLinkStatusTransmitFcsSize_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 1, 1, 14),
    _PppLinkStatusTransmitFcsSize_Type()
)
pppLinkStatusTransmitFcsSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppLinkStatusTransmitFcsSize.setStatus("mandatory")


class _PppLinkStatusReceiveFcsSize_Type(Integer32):
    """Custom type pppLinkStatusReceiveFcsSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_PppLinkStatusReceiveFcsSize_Type.__name__ = "Integer32"
_PppLinkStatusReceiveFcsSize_Object = MibTableColumn
pppLinkStatusReceiveFcsSize = _PppLinkStatusReceiveFcsSize_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 1, 1, 15),
    _PppLinkStatusReceiveFcsSize_Type()
)
pppLinkStatusReceiveFcsSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppLinkStatusReceiveFcsSize.setStatus("mandatory")
_PppLinkConfigTable_Object = MibTable
pppLinkConfigTable = _PppLinkConfigTable_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 2)
)
if mibBuilder.loadTexts:
    pppLinkConfigTable.setStatus("mandatory")
_PppLinkConfigEntry_Object = MibTableRow
pppLinkConfigEntry = _PppLinkConfigEntry_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 2, 1)
)
pppLinkConfigEntry.setIndexNames(
    (0, "MRVINREACH", "ifIndex"),
)
if mibBuilder.loadTexts:
    pppLinkConfigEntry.setStatus("mandatory")


class _PppLinkConfigInitialMRU_Type(Integer32):
    """Custom type pppLinkConfigInitialMRU based on Integer32"""
    defaultValue = 1500

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_PppLinkConfigInitialMRU_Type.__name__ = "Integer32"
_PppLinkConfigInitialMRU_Object = MibTableColumn
pppLinkConfigInitialMRU = _PppLinkConfigInitialMRU_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 2, 1, 1),
    _PppLinkConfigInitialMRU_Type()
)
pppLinkConfigInitialMRU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppLinkConfigInitialMRU.setStatus("mandatory")


class _PppLinkConfigReceiveACCMap_Type(OctetString):
    """Custom type pppLinkConfigReceiveACCMap based on OctetString"""
    defaultHexValue = "ffffffff"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_PppLinkConfigReceiveACCMap_Type.__name__ = "OctetString"
_PppLinkConfigReceiveACCMap_Object = MibTableColumn
pppLinkConfigReceiveACCMap = _PppLinkConfigReceiveACCMap_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 2, 1, 2),
    _PppLinkConfigReceiveACCMap_Type()
)
pppLinkConfigReceiveACCMap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppLinkConfigReceiveACCMap.setStatus("mandatory")


class _PppLinkConfigTransmitACCMap_Type(OctetString):
    """Custom type pppLinkConfigTransmitACCMap based on OctetString"""
    defaultHexValue = "ffffffff"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_PppLinkConfigTransmitACCMap_Type.__name__ = "OctetString"
_PppLinkConfigTransmitACCMap_Object = MibTableColumn
pppLinkConfigTransmitACCMap = _PppLinkConfigTransmitACCMap_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 2, 1, 3),
    _PppLinkConfigTransmitACCMap_Type()
)
pppLinkConfigTransmitACCMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppLinkConfigTransmitACCMap.setStatus("mandatory")


class _PppLinkConfigMagicNumber_Type(Integer32):
    """Custom type pppLinkConfigMagicNumber based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 1),
          ("true", 2))
    )


_PppLinkConfigMagicNumber_Type.__name__ = "Integer32"
_PppLinkConfigMagicNumber_Object = MibTableColumn
pppLinkConfigMagicNumber = _PppLinkConfigMagicNumber_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 2, 1, 4),
    _PppLinkConfigMagicNumber_Type()
)
pppLinkConfigMagicNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppLinkConfigMagicNumber.setStatus("mandatory")


class _PppLinkConfigFcsSize_Type(Integer32):
    """Custom type pppLinkConfigFcsSize based on Integer32"""
    defaultValue = 16

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_PppLinkConfigFcsSize_Type.__name__ = "Integer32"
_PppLinkConfigFcsSize_Object = MibTableColumn
pppLinkConfigFcsSize = _PppLinkConfigFcsSize_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 1, 2, 1, 5),
    _PppLinkConfigFcsSize_Type()
)
pppLinkConfigFcsSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppLinkConfigFcsSize.setStatus("mandatory")
_PppLqr_ObjectIdentity = ObjectIdentity
pppLqr = _PppLqr_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 2)
)
_PppTests_ObjectIdentity = ObjectIdentity
pppTests = _PppTests_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 3)
)
_PppEchoTest_ObjectIdentity = ObjectIdentity
pppEchoTest = _PppEchoTest_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 3, 1)
)
_PppDiscardTest_ObjectIdentity = ObjectIdentity
pppDiscardTest = _PppDiscardTest_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 10, 23, 1, 3, 2)
)
_PppIp_ObjectIdentity = ObjectIdentity
pppIp = _PppIp_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 10, 23, 3)
)
_PppIpTable_Object = MibTable
pppIpTable = _PppIpTable_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 3, 1)
)
if mibBuilder.loadTexts:
    pppIpTable.setStatus("mandatory")
_PppIpEntry_Object = MibTableRow
pppIpEntry = _PppIpEntry_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 3, 1, 1)
)
pppIpEntry.setIndexNames(
    (0, "MRVINREACH", "ifIndex"),
)
if mibBuilder.loadTexts:
    pppIpEntry.setStatus("mandatory")


class _PppIpOperStatus_Type(Integer32):
    """Custom type pppIpOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("not-opened", 2),
          ("opened", 1))
    )


_PppIpOperStatus_Type.__name__ = "Integer32"
_PppIpOperStatus_Object = MibTableColumn
pppIpOperStatus = _PppIpOperStatus_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 3, 1, 1, 1),
    _PppIpOperStatus_Type()
)
pppIpOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppIpOperStatus.setStatus("mandatory")


class _PppIpLocalToRemoteCompressionProtocol_Type(Integer32):
    """Custom type pppIpLocalToRemoteCompressionProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("vj-tcp", 2))
    )


_PppIpLocalToRemoteCompressionProtocol_Type.__name__ = "Integer32"
_PppIpLocalToRemoteCompressionProtocol_Object = MibTableColumn
pppIpLocalToRemoteCompressionProtocol = _PppIpLocalToRemoteCompressionProtocol_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 3, 1, 1, 2),
    _PppIpLocalToRemoteCompressionProtocol_Type()
)
pppIpLocalToRemoteCompressionProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppIpLocalToRemoteCompressionProtocol.setStatus("mandatory")


class _PppIpRemoteToLocalCompressionProtocol_Type(Integer32):
    """Custom type pppIpRemoteToLocalCompressionProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("vj-tcp", 2))
    )


_PppIpRemoteToLocalCompressionProtocol_Type.__name__ = "Integer32"
_PppIpRemoteToLocalCompressionProtocol_Object = MibTableColumn
pppIpRemoteToLocalCompressionProtocol = _PppIpRemoteToLocalCompressionProtocol_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 3, 1, 1, 3),
    _PppIpRemoteToLocalCompressionProtocol_Type()
)
pppIpRemoteToLocalCompressionProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppIpRemoteToLocalCompressionProtocol.setStatus("mandatory")


class _PppIpRemoteMaxSlotId_Type(Integer32):
    """Custom type pppIpRemoteMaxSlotId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PppIpRemoteMaxSlotId_Type.__name__ = "Integer32"
_PppIpRemoteMaxSlotId_Object = MibTableColumn
pppIpRemoteMaxSlotId = _PppIpRemoteMaxSlotId_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 3, 1, 1, 4),
    _PppIpRemoteMaxSlotId_Type()
)
pppIpRemoteMaxSlotId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppIpRemoteMaxSlotId.setStatus("mandatory")


class _PppIpLocalMaxSlotId_Type(Integer32):
    """Custom type pppIpLocalMaxSlotId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PppIpLocalMaxSlotId_Type.__name__ = "Integer32"
_PppIpLocalMaxSlotId_Object = MibTableColumn
pppIpLocalMaxSlotId = _PppIpLocalMaxSlotId_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 3, 1, 1, 5),
    _PppIpLocalMaxSlotId_Type()
)
pppIpLocalMaxSlotId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppIpLocalMaxSlotId.setStatus("mandatory")
_PppIpConfigTable_Object = MibTable
pppIpConfigTable = _PppIpConfigTable_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 3, 2)
)
if mibBuilder.loadTexts:
    pppIpConfigTable.setStatus("mandatory")
_PppIpConfigEntry_Object = MibTableRow
pppIpConfigEntry = _PppIpConfigEntry_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 3, 2, 1)
)
pppIpConfigEntry.setIndexNames(
    (0, "MRVINREACH", "ifIndex"),
)
if mibBuilder.loadTexts:
    pppIpConfigEntry.setStatus("mandatory")


class _PppIpConfigAdminStatus_Type(Integer32):
    """Custom type pppIpConfigAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("close", 2),
          ("open", 1))
    )


_PppIpConfigAdminStatus_Type.__name__ = "Integer32"
_PppIpConfigAdminStatus_Object = MibTableColumn
pppIpConfigAdminStatus = _PppIpConfigAdminStatus_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 3, 2, 1, 1),
    _PppIpConfigAdminStatus_Type()
)
pppIpConfigAdminStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppIpConfigAdminStatus.setStatus("mandatory")


class _PppIpConfigCompression_Type(Integer32):
    """Custom type pppIpConfigCompression based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("vj-tcp", 2))
    )


_PppIpConfigCompression_Type.__name__ = "Integer32"
_PppIpConfigCompression_Object = MibTableColumn
pppIpConfigCompression = _PppIpConfigCompression_Object(
    (1, 3, 6, 1, 2, 1, 10, 23, 3, 2, 1, 2),
    _PppIpConfigCompression_Type()
)
pppIpConfigCompression.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppIpConfigCompression.setStatus("mandatory")
_Rs232_ObjectIdentity = ObjectIdentity
rs232 = _Rs232_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 10, 33)
)
_Rs232Number_Type = Integer32
_Rs232Number_Object = MibScalar
rs232Number = _Rs232Number_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 1),
    _Rs232Number_Type()
)
rs232Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232Number.setStatus("mandatory")
_Rs232PortTable_Object = MibTable
rs232PortTable = _Rs232PortTable_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 2)
)
if mibBuilder.loadTexts:
    rs232PortTable.setStatus("mandatory")
_Rs232PortEntry_Object = MibTableRow
rs232PortEntry = _Rs232PortEntry_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 2, 1)
)
rs232PortEntry.setIndexNames(
    (0, "MRVINREACH", "rs232PortIndex"),
)
if mibBuilder.loadTexts:
    rs232PortEntry.setStatus("mandatory")
_Rs232PortIndex_Type = Integer32
_Rs232PortIndex_Object = MibTableColumn
rs232PortIndex = _Rs232PortIndex_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 2, 1, 1),
    _Rs232PortIndex_Type()
)
rs232PortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232PortIndex.setStatus("mandatory")


class _Rs232PortType_Type(Integer32):
    """Custom type rs232PortType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("other", 1),
          ("rs232", 2),
          ("rs422", 3),
          ("rs423", 4),
          ("v35", 5))
    )


_Rs232PortType_Type.__name__ = "Integer32"
_Rs232PortType_Object = MibTableColumn
rs232PortType = _Rs232PortType_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 2, 1, 2),
    _Rs232PortType_Type()
)
rs232PortType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232PortType.setStatus("mandatory")
_Rs232PortInSigNumber_Type = Integer32
_Rs232PortInSigNumber_Object = MibTableColumn
rs232PortInSigNumber = _Rs232PortInSigNumber_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 2, 1, 3),
    _Rs232PortInSigNumber_Type()
)
rs232PortInSigNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232PortInSigNumber.setStatus("mandatory")
_Rs232PortOutSigNumber_Type = Integer32
_Rs232PortOutSigNumber_Object = MibTableColumn
rs232PortOutSigNumber = _Rs232PortOutSigNumber_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 2, 1, 4),
    _Rs232PortOutSigNumber_Type()
)
rs232PortOutSigNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232PortOutSigNumber.setStatus("mandatory")
_Rs232PortInSpeed_Type = Integer32
_Rs232PortInSpeed_Object = MibTableColumn
rs232PortInSpeed = _Rs232PortInSpeed_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 2, 1, 5),
    _Rs232PortInSpeed_Type()
)
rs232PortInSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rs232PortInSpeed.setStatus("mandatory")
_Rs232PortOutSpeed_Type = Integer32
_Rs232PortOutSpeed_Object = MibTableColumn
rs232PortOutSpeed = _Rs232PortOutSpeed_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 2, 1, 6),
    _Rs232PortOutSpeed_Type()
)
rs232PortOutSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rs232PortOutSpeed.setStatus("mandatory")
_Rs232AsyncPortTable_Object = MibTable
rs232AsyncPortTable = _Rs232AsyncPortTable_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 3)
)
if mibBuilder.loadTexts:
    rs232AsyncPortTable.setStatus("mandatory")
_Rs232AsyncPortEntry_Object = MibTableRow
rs232AsyncPortEntry = _Rs232AsyncPortEntry_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 3, 1)
)
rs232AsyncPortEntry.setIndexNames(
    (0, "MRVINREACH", "rs232AsyncPortIndex"),
)
if mibBuilder.loadTexts:
    rs232AsyncPortEntry.setStatus("mandatory")
_Rs232AsyncPortIndex_Type = Integer32
_Rs232AsyncPortIndex_Object = MibTableColumn
rs232AsyncPortIndex = _Rs232AsyncPortIndex_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 3, 1, 1),
    _Rs232AsyncPortIndex_Type()
)
rs232AsyncPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232AsyncPortIndex.setStatus("mandatory")


class _Rs232AsyncPortBits_Type(Integer32):
    """Custom type rs232AsyncPortBits based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 8),
    )


_Rs232AsyncPortBits_Type.__name__ = "Integer32"
_Rs232AsyncPortBits_Object = MibTableColumn
rs232AsyncPortBits = _Rs232AsyncPortBits_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 3, 1, 2),
    _Rs232AsyncPortBits_Type()
)
rs232AsyncPortBits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rs232AsyncPortBits.setStatus("mandatory")


class _Rs232AsyncPortStopBits_Type(Integer32):
    """Custom type rs232AsyncPortStopBits based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("dynamic", 4),
          ("one", 1),
          ("one-and-half", 3),
          ("two", 2))
    )


_Rs232AsyncPortStopBits_Type.__name__ = "Integer32"
_Rs232AsyncPortStopBits_Object = MibTableColumn
rs232AsyncPortStopBits = _Rs232AsyncPortStopBits_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 3, 1, 3),
    _Rs232AsyncPortStopBits_Type()
)
rs232AsyncPortStopBits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rs232AsyncPortStopBits.setStatus("mandatory")


class _Rs232AsyncPortParity_Type(Integer32):
    """Custom type rs232AsyncPortParity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("even", 3),
          ("mark", 4),
          ("none", 1),
          ("odd", 2),
          ("space", 5))
    )


_Rs232AsyncPortParity_Type.__name__ = "Integer32"
_Rs232AsyncPortParity_Object = MibTableColumn
rs232AsyncPortParity = _Rs232AsyncPortParity_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 3, 1, 4),
    _Rs232AsyncPortParity_Type()
)
rs232AsyncPortParity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rs232AsyncPortParity.setStatus("mandatory")


class _Rs232AsyncPortAutobaud_Type(Integer32):
    """Custom type rs232AsyncPortAutobaud based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_Rs232AsyncPortAutobaud_Type.__name__ = "Integer32"
_Rs232AsyncPortAutobaud_Object = MibTableColumn
rs232AsyncPortAutobaud = _Rs232AsyncPortAutobaud_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 3, 1, 5),
    _Rs232AsyncPortAutobaud_Type()
)
rs232AsyncPortAutobaud.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rs232AsyncPortAutobaud.setStatus("mandatory")
_Rs232AsyncPortParityErrs_Type = Counter32
_Rs232AsyncPortParityErrs_Object = MibTableColumn
rs232AsyncPortParityErrs = _Rs232AsyncPortParityErrs_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 3, 1, 6),
    _Rs232AsyncPortParityErrs_Type()
)
rs232AsyncPortParityErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232AsyncPortParityErrs.setStatus("mandatory")
_Rs232AsyncPortFramingErrs_Type = Counter32
_Rs232AsyncPortFramingErrs_Object = MibTableColumn
rs232AsyncPortFramingErrs = _Rs232AsyncPortFramingErrs_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 3, 1, 7),
    _Rs232AsyncPortFramingErrs_Type()
)
rs232AsyncPortFramingErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232AsyncPortFramingErrs.setStatus("mandatory")
_Rs232AsyncPortOverrunErrs_Type = Counter32
_Rs232AsyncPortOverrunErrs_Object = MibTableColumn
rs232AsyncPortOverrunErrs = _Rs232AsyncPortOverrunErrs_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 3, 1, 8),
    _Rs232AsyncPortOverrunErrs_Type()
)
rs232AsyncPortOverrunErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232AsyncPortOverrunErrs.setStatus("mandatory")
_Rs232SyncPortTable_Object = MibTable
rs232SyncPortTable = _Rs232SyncPortTable_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 4)
)
if mibBuilder.loadTexts:
    rs232SyncPortTable.setStatus("mandatory")
_Rs232SyncPortEntry_Object = MibTableRow
rs232SyncPortEntry = _Rs232SyncPortEntry_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 4, 1)
)
rs232SyncPortEntry.setIndexNames(
    (0, "MRVINREACH", "rs232SyncPortIndex"),
)
if mibBuilder.loadTexts:
    rs232SyncPortEntry.setStatus("mandatory")
_Rs232SyncPortIndex_Type = Integer32
_Rs232SyncPortIndex_Object = MibTableColumn
rs232SyncPortIndex = _Rs232SyncPortIndex_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 4, 1, 1),
    _Rs232SyncPortIndex_Type()
)
rs232SyncPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232SyncPortIndex.setStatus("mandatory")


class _Rs232SyncPortClockSource_Type(Integer32):
    """Custom type rs232SyncPortClockSource based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("external", 2),
          ("internal", 1),
          ("split", 3))
    )


_Rs232SyncPortClockSource_Type.__name__ = "Integer32"
_Rs232SyncPortClockSource_Object = MibTableColumn
rs232SyncPortClockSource = _Rs232SyncPortClockSource_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 4, 1, 2),
    _Rs232SyncPortClockSource_Type()
)
rs232SyncPortClockSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rs232SyncPortClockSource.setStatus("mandatory")
_Rs232SyncPortFrameCheckErrs_Type = Counter32
_Rs232SyncPortFrameCheckErrs_Object = MibTableColumn
rs232SyncPortFrameCheckErrs = _Rs232SyncPortFrameCheckErrs_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 4, 1, 3),
    _Rs232SyncPortFrameCheckErrs_Type()
)
rs232SyncPortFrameCheckErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232SyncPortFrameCheckErrs.setStatus("mandatory")
_Rs232SyncPortTransmitUnderrunErrs_Type = Counter32
_Rs232SyncPortTransmitUnderrunErrs_Object = MibTableColumn
rs232SyncPortTransmitUnderrunErrs = _Rs232SyncPortTransmitUnderrunErrs_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 4, 1, 4),
    _Rs232SyncPortTransmitUnderrunErrs_Type()
)
rs232SyncPortTransmitUnderrunErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232SyncPortTransmitUnderrunErrs.setStatus("mandatory")
_Rs232SyncPortReceiveOverrunErrs_Type = Counter32
_Rs232SyncPortReceiveOverrunErrs_Object = MibTableColumn
rs232SyncPortReceiveOverrunErrs = _Rs232SyncPortReceiveOverrunErrs_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 4, 1, 5),
    _Rs232SyncPortReceiveOverrunErrs_Type()
)
rs232SyncPortReceiveOverrunErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232SyncPortReceiveOverrunErrs.setStatus("mandatory")
_Rs232SyncPortInterruptedFrames_Type = Counter32
_Rs232SyncPortInterruptedFrames_Object = MibTableColumn
rs232SyncPortInterruptedFrames = _Rs232SyncPortInterruptedFrames_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 4, 1, 6),
    _Rs232SyncPortInterruptedFrames_Type()
)
rs232SyncPortInterruptedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232SyncPortInterruptedFrames.setStatus("mandatory")
_Rs232SyncPortAbortedFrames_Type = Counter32
_Rs232SyncPortAbortedFrames_Object = MibTableColumn
rs232SyncPortAbortedFrames = _Rs232SyncPortAbortedFrames_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 4, 1, 7),
    _Rs232SyncPortAbortedFrames_Type()
)
rs232SyncPortAbortedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232SyncPortAbortedFrames.setStatus("mandatory")
_Rs232InSigTable_Object = MibTable
rs232InSigTable = _Rs232InSigTable_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 5)
)
if mibBuilder.loadTexts:
    rs232InSigTable.setStatus("mandatory")
_Rs232InSigEntry_Object = MibTableRow
rs232InSigEntry = _Rs232InSigEntry_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 5, 1)
)
rs232InSigEntry.setIndexNames(
    (0, "MRVINREACH", "rs232InSigPortIndex"),
    (0, "MRVINREACH", "rs232InSigName"),
)
if mibBuilder.loadTexts:
    rs232InSigEntry.setStatus("mandatory")
_Rs232InSigPortIndex_Type = Integer32
_Rs232InSigPortIndex_Object = MibTableColumn
rs232InSigPortIndex = _Rs232InSigPortIndex_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 5, 1, 1),
    _Rs232InSigPortIndex_Type()
)
rs232InSigPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232InSigPortIndex.setStatus("mandatory")


class _Rs232InSigName_Type(Integer32):
    """Custom type rs232InSigName based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("cts", 2),
          ("dcd", 6),
          ("dsr", 3),
          ("dtr", 4),
          ("ri", 5),
          ("rts", 1),
          ("scts", 10),
          ("sdcd", 11),
          ("sq", 7),
          ("srs", 8),
          ("srts", 9))
    )


_Rs232InSigName_Type.__name__ = "Integer32"
_Rs232InSigName_Object = MibTableColumn
rs232InSigName = _Rs232InSigName_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 5, 1, 2),
    _Rs232InSigName_Type()
)
rs232InSigName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232InSigName.setStatus("mandatory")


class _Rs232InSigState_Type(Integer32):
    """Custom type rs232InSigState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("off", 3),
          ("on", 2))
    )


_Rs232InSigState_Type.__name__ = "Integer32"
_Rs232InSigState_Object = MibTableColumn
rs232InSigState = _Rs232InSigState_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 5, 1, 3),
    _Rs232InSigState_Type()
)
rs232InSigState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232InSigState.setStatus("mandatory")
_Rs232InSigChanges_Type = Counter32
_Rs232InSigChanges_Object = MibTableColumn
rs232InSigChanges = _Rs232InSigChanges_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 5, 1, 4),
    _Rs232InSigChanges_Type()
)
rs232InSigChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232InSigChanges.setStatus("mandatory")
_Rs232OutSigTable_Object = MibTable
rs232OutSigTable = _Rs232OutSigTable_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 6)
)
if mibBuilder.loadTexts:
    rs232OutSigTable.setStatus("mandatory")
_Rs232OutSigEntry_Object = MibTableRow
rs232OutSigEntry = _Rs232OutSigEntry_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 6, 1)
)
rs232OutSigEntry.setIndexNames(
    (0, "MRVINREACH", "rs232OutSigPortIndex"),
    (0, "MRVINREACH", "rs232OutSigName"),
)
if mibBuilder.loadTexts:
    rs232OutSigEntry.setStatus("mandatory")
_Rs232OutSigPortIndex_Type = Integer32
_Rs232OutSigPortIndex_Object = MibTableColumn
rs232OutSigPortIndex = _Rs232OutSigPortIndex_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 6, 1, 1),
    _Rs232OutSigPortIndex_Type()
)
rs232OutSigPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232OutSigPortIndex.setStatus("mandatory")


class _Rs232OutSigName_Type(Integer32):
    """Custom type rs232OutSigName based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("cts", 2),
          ("dcd", 6),
          ("dsr", 3),
          ("dtr", 4),
          ("ri", 5),
          ("rts", 1),
          ("scts", 10),
          ("sdcd", 11),
          ("sq", 7),
          ("srs", 8),
          ("srts", 9))
    )


_Rs232OutSigName_Type.__name__ = "Integer32"
_Rs232OutSigName_Object = MibTableColumn
rs232OutSigName = _Rs232OutSigName_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 6, 1, 2),
    _Rs232OutSigName_Type()
)
rs232OutSigName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232OutSigName.setStatus("mandatory")


class _Rs232OutSigState_Type(Integer32):
    """Custom type rs232OutSigState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("off", 3),
          ("on", 2))
    )


_Rs232OutSigState_Type.__name__ = "Integer32"
_Rs232OutSigState_Object = MibTableColumn
rs232OutSigState = _Rs232OutSigState_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 6, 1, 3),
    _Rs232OutSigState_Type()
)
rs232OutSigState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232OutSigState.setStatus("mandatory")
_Rs232OutSigChanges_Type = Counter32
_Rs232OutSigChanges_Object = MibTableColumn
rs232OutSigChanges = _Rs232OutSigChanges_Object(
    (1, 3, 6, 1, 2, 1, 10, 33, 6, 1, 4),
    _Rs232OutSigChanges_Type()
)
rs232OutSigChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rs232OutSigChanges.setStatus("mandatory")
_Snmp_ObjectIdentity = ObjectIdentity
snmp = _Snmp_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 11)
)
_SnmpInPkts_Type = Counter32
_SnmpInPkts_Object = MibScalar
snmpInPkts = _SnmpInPkts_Object(
    (1, 3, 6, 1, 2, 1, 11, 1),
    _SnmpInPkts_Type()
)
snmpInPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpInPkts.setStatus("mandatory")
_SnmpOutPkts_Type = Counter32
_SnmpOutPkts_Object = MibScalar
snmpOutPkts = _SnmpOutPkts_Object(
    (1, 3, 6, 1, 2, 1, 11, 2),
    _SnmpOutPkts_Type()
)
snmpOutPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpOutPkts.setStatus("mandatory")
_SnmpInBadVersions_Type = Counter32
_SnmpInBadVersions_Object = MibScalar
snmpInBadVersions = _SnmpInBadVersions_Object(
    (1, 3, 6, 1, 2, 1, 11, 3),
    _SnmpInBadVersions_Type()
)
snmpInBadVersions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpInBadVersions.setStatus("mandatory")
_SnmpInBadCommunityNames_Type = Counter32
_SnmpInBadCommunityNames_Object = MibScalar
snmpInBadCommunityNames = _SnmpInBadCommunityNames_Object(
    (1, 3, 6, 1, 2, 1, 11, 4),
    _SnmpInBadCommunityNames_Type()
)
snmpInBadCommunityNames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpInBadCommunityNames.setStatus("mandatory")
_SnmpInBadCommunityUses_Type = Counter32
_SnmpInBadCommunityUses_Object = MibScalar
snmpInBadCommunityUses = _SnmpInBadCommunityUses_Object(
    (1, 3, 6, 1, 2, 1, 11, 5),
    _SnmpInBadCommunityUses_Type()
)
snmpInBadCommunityUses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpInBadCommunityUses.setStatus("mandatory")
_SnmpInASNParseErrs_Type = Counter32
_SnmpInASNParseErrs_Object = MibScalar
snmpInASNParseErrs = _SnmpInASNParseErrs_Object(
    (1, 3, 6, 1, 2, 1, 11, 6),
    _SnmpInASNParseErrs_Type()
)
snmpInASNParseErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpInASNParseErrs.setStatus("mandatory")
_SnmpInTooBigs_Type = Counter32
_SnmpInTooBigs_Object = MibScalar
snmpInTooBigs = _SnmpInTooBigs_Object(
    (1, 3, 6, 1, 2, 1, 11, 8),
    _SnmpInTooBigs_Type()
)
snmpInTooBigs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpInTooBigs.setStatus("mandatory")
_SnmpInNoSuchNames_Type = Counter32
_SnmpInNoSuchNames_Object = MibScalar
snmpInNoSuchNames = _SnmpInNoSuchNames_Object(
    (1, 3, 6, 1, 2, 1, 11, 9),
    _SnmpInNoSuchNames_Type()
)
snmpInNoSuchNames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpInNoSuchNames.setStatus("mandatory")
_SnmpInBadValues_Type = Counter32
_SnmpInBadValues_Object = MibScalar
snmpInBadValues = _SnmpInBadValues_Object(
    (1, 3, 6, 1, 2, 1, 11, 10),
    _SnmpInBadValues_Type()
)
snmpInBadValues.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpInBadValues.setStatus("mandatory")
_SnmpInReadOnlys_Type = Counter32
_SnmpInReadOnlys_Object = MibScalar
snmpInReadOnlys = _SnmpInReadOnlys_Object(
    (1, 3, 6, 1, 2, 1, 11, 11),
    _SnmpInReadOnlys_Type()
)
snmpInReadOnlys.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpInReadOnlys.setStatus("mandatory")
_SnmpInGenErrs_Type = Counter32
_SnmpInGenErrs_Object = MibScalar
snmpInGenErrs = _SnmpInGenErrs_Object(
    (1, 3, 6, 1, 2, 1, 11, 12),
    _SnmpInGenErrs_Type()
)
snmpInGenErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpInGenErrs.setStatus("mandatory")
_SnmpInTotalReqVars_Type = Counter32
_SnmpInTotalReqVars_Object = MibScalar
snmpInTotalReqVars = _SnmpInTotalReqVars_Object(
    (1, 3, 6, 1, 2, 1, 11, 13),
    _SnmpInTotalReqVars_Type()
)
snmpInTotalReqVars.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpInTotalReqVars.setStatus("mandatory")
_SnmpInTotalSetVars_Type = Counter32
_SnmpInTotalSetVars_Object = MibScalar
snmpInTotalSetVars = _SnmpInTotalSetVars_Object(
    (1, 3, 6, 1, 2, 1, 11, 14),
    _SnmpInTotalSetVars_Type()
)
snmpInTotalSetVars.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpInTotalSetVars.setStatus("mandatory")
_SnmpInGetRequests_Type = Counter32
_SnmpInGetRequests_Object = MibScalar
snmpInGetRequests = _SnmpInGetRequests_Object(
    (1, 3, 6, 1, 2, 1, 11, 15),
    _SnmpInGetRequests_Type()
)
snmpInGetRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpInGetRequests.setStatus("mandatory")
_SnmpInGetNexts_Type = Counter32
_SnmpInGetNexts_Object = MibScalar
snmpInGetNexts = _SnmpInGetNexts_Object(
    (1, 3, 6, 1, 2, 1, 11, 16),
    _SnmpInGetNexts_Type()
)
snmpInGetNexts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpInGetNexts.setStatus("mandatory")
_SnmpInSetRequests_Type = Counter32
_SnmpInSetRequests_Object = MibScalar
snmpInSetRequests = _SnmpInSetRequests_Object(
    (1, 3, 6, 1, 2, 1, 11, 17),
    _SnmpInSetRequests_Type()
)
snmpInSetRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpInSetRequests.setStatus("mandatory")
_SnmpInGetResponses_Type = Counter32
_SnmpInGetResponses_Object = MibScalar
snmpInGetResponses = _SnmpInGetResponses_Object(
    (1, 3, 6, 1, 2, 1, 11, 18),
    _SnmpInGetResponses_Type()
)
snmpInGetResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpInGetResponses.setStatus("mandatory")
_SnmpInTraps_Type = Counter32
_SnmpInTraps_Object = MibScalar
snmpInTraps = _SnmpInTraps_Object(
    (1, 3, 6, 1, 2, 1, 11, 19),
    _SnmpInTraps_Type()
)
snmpInTraps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpInTraps.setStatus("mandatory")
_SnmpOutTooBigs_Type = Counter32
_SnmpOutTooBigs_Object = MibScalar
snmpOutTooBigs = _SnmpOutTooBigs_Object(
    (1, 3, 6, 1, 2, 1, 11, 20),
    _SnmpOutTooBigs_Type()
)
snmpOutTooBigs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpOutTooBigs.setStatus("mandatory")
_SnmpOutNoSuchNames_Type = Counter32
_SnmpOutNoSuchNames_Object = MibScalar
snmpOutNoSuchNames = _SnmpOutNoSuchNames_Object(
    (1, 3, 6, 1, 2, 1, 11, 21),
    _SnmpOutNoSuchNames_Type()
)
snmpOutNoSuchNames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpOutNoSuchNames.setStatus("mandatory")
_SnmpOutBadValues_Type = Counter32
_SnmpOutBadValues_Object = MibScalar
snmpOutBadValues = _SnmpOutBadValues_Object(
    (1, 3, 6, 1, 2, 1, 11, 22),
    _SnmpOutBadValues_Type()
)
snmpOutBadValues.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpOutBadValues.setStatus("mandatory")
_SnmpOutGenErrs_Type = Counter32
_SnmpOutGenErrs_Object = MibScalar
snmpOutGenErrs = _SnmpOutGenErrs_Object(
    (1, 3, 6, 1, 2, 1, 11, 24),
    _SnmpOutGenErrs_Type()
)
snmpOutGenErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpOutGenErrs.setStatus("mandatory")
_SnmpOutGetRequests_Type = Counter32
_SnmpOutGetRequests_Object = MibScalar
snmpOutGetRequests = _SnmpOutGetRequests_Object(
    (1, 3, 6, 1, 2, 1, 11, 25),
    _SnmpOutGetRequests_Type()
)
snmpOutGetRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpOutGetRequests.setStatus("mandatory")
_SnmpOutGetNexts_Type = Counter32
_SnmpOutGetNexts_Object = MibScalar
snmpOutGetNexts = _SnmpOutGetNexts_Object(
    (1, 3, 6, 1, 2, 1, 11, 26),
    _SnmpOutGetNexts_Type()
)
snmpOutGetNexts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpOutGetNexts.setStatus("mandatory")
_SnmpOutSetRequests_Type = Counter32
_SnmpOutSetRequests_Object = MibScalar
snmpOutSetRequests = _SnmpOutSetRequests_Object(
    (1, 3, 6, 1, 2, 1, 11, 27),
    _SnmpOutSetRequests_Type()
)
snmpOutSetRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpOutSetRequests.setStatus("mandatory")
_SnmpOutGetResponses_Type = Counter32
_SnmpOutGetResponses_Object = MibScalar
snmpOutGetResponses = _SnmpOutGetResponses_Object(
    (1, 3, 6, 1, 2, 1, 11, 28),
    _SnmpOutGetResponses_Type()
)
snmpOutGetResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpOutGetResponses.setStatus("mandatory")
_SnmpOutTraps_Type = Counter32
_SnmpOutTraps_Object = MibScalar
snmpOutTraps = _SnmpOutTraps_Object(
    (1, 3, 6, 1, 2, 1, 11, 29),
    _SnmpOutTraps_Type()
)
snmpOutTraps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpOutTraps.setStatus("mandatory")


class _SnmpEnableAuthenTraps_Type(Integer32):
    """Custom type snmpEnableAuthenTraps based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SnmpEnableAuthenTraps_Type.__name__ = "Integer32"
_SnmpEnableAuthenTraps_Object = MibScalar
snmpEnableAuthenTraps = _SnmpEnableAuthenTraps_Object(
    (1, 3, 6, 1, 2, 1, 11, 30),
    _SnmpEnableAuthenTraps_Type()
)
snmpEnableAuthenTraps.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpEnableAuthenTraps.setStatus("mandatory")
_Appletalk_ObjectIdentity = ObjectIdentity
appletalk = _Appletalk_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 13)
)
_Llap_ObjectIdentity = ObjectIdentity
llap = _Llap_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 13, 1)
)
_Aarp_ObjectIdentity = ObjectIdentity
aarp = _Aarp_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 13, 2)
)
_Atport_ObjectIdentity = ObjectIdentity
atport = _Atport_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 13, 3)
)
_Ddp_ObjectIdentity = ObjectIdentity
ddp = _Ddp_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 13, 4)
)
_Rtmp_ObjectIdentity = ObjectIdentity
rtmp = _Rtmp_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 13, 5)
)
_Kip_ObjectIdentity = ObjectIdentity
kip = _Kip_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 13, 6)
)
_Zip_ObjectIdentity = ObjectIdentity
zip = _Zip_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 13, 7)
)
_Nbp_ObjectIdentity = ObjectIdentity
nbp = _Nbp_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 13, 8)
)
_Atecho_ObjectIdentity = ObjectIdentity
atecho = _Atecho_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 13, 9)
)
_Ospf_ObjectIdentity = ObjectIdentity
ospf = _Ospf_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 14)
)
_OspfGeneralGroup_ObjectIdentity = ObjectIdentity
ospfGeneralGroup = _OspfGeneralGroup_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 14, 1)
)
_Dot1dBridge_ObjectIdentity = ObjectIdentity
dot1dBridge = _Dot1dBridge_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 17)
)
_Dot1dBase_ObjectIdentity = ObjectIdentity
dot1dBase = _Dot1dBase_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 17, 1)
)
_Dot1dBaseBridgeAddress_Type = MacAddress
_Dot1dBaseBridgeAddress_Object = MibScalar
dot1dBaseBridgeAddress = _Dot1dBaseBridgeAddress_Object(
    (1, 3, 6, 1, 2, 1, 17, 1, 1),
    _Dot1dBaseBridgeAddress_Type()
)
dot1dBaseBridgeAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dBaseBridgeAddress.setStatus("mandatory")
_Dot1dBaseNumPorts_Type = Integer32
_Dot1dBaseNumPorts_Object = MibScalar
dot1dBaseNumPorts = _Dot1dBaseNumPorts_Object(
    (1, 3, 6, 1, 2, 1, 17, 1, 2),
    _Dot1dBaseNumPorts_Type()
)
dot1dBaseNumPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dBaseNumPorts.setStatus("mandatory")


class _Dot1dBaseType_Type(Integer32):
    """Custom type dot1dBaseType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("sourceroute-only", 3),
          ("srt", 4),
          ("transparent-only", 2),
          ("unknown", 1))
    )


_Dot1dBaseType_Type.__name__ = "Integer32"
_Dot1dBaseType_Object = MibScalar
dot1dBaseType = _Dot1dBaseType_Object(
    (1, 3, 6, 1, 2, 1, 17, 1, 3),
    _Dot1dBaseType_Type()
)
dot1dBaseType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dBaseType.setStatus("mandatory")
_Dot1dBasePortTable_Object = MibTable
dot1dBasePortTable = _Dot1dBasePortTable_Object(
    (1, 3, 6, 1, 2, 1, 17, 1, 4)
)
if mibBuilder.loadTexts:
    dot1dBasePortTable.setStatus("mandatory")
_Dot1dBasePortEntry_Object = MibTableRow
dot1dBasePortEntry = _Dot1dBasePortEntry_Object(
    (1, 3, 6, 1, 2, 1, 17, 1, 4, 1)
)
dot1dBasePortEntry.setIndexNames(
    (0, "MRVINREACH", "dot1dBasePort"),
)
if mibBuilder.loadTexts:
    dot1dBasePortEntry.setStatus("mandatory")


class _Dot1dBasePort_Type(Integer32):
    """Custom type dot1dBasePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_Dot1dBasePort_Type.__name__ = "Integer32"
_Dot1dBasePort_Object = MibTableColumn
dot1dBasePort = _Dot1dBasePort_Object(
    (1, 3, 6, 1, 2, 1, 17, 1, 4, 1, 1),
    _Dot1dBasePort_Type()
)
dot1dBasePort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dBasePort.setStatus("mandatory")
_Dot1dBasePortIfIndex_Type = Integer32
_Dot1dBasePortIfIndex_Object = MibTableColumn
dot1dBasePortIfIndex = _Dot1dBasePortIfIndex_Object(
    (1, 3, 6, 1, 2, 1, 17, 1, 4, 1, 2),
    _Dot1dBasePortIfIndex_Type()
)
dot1dBasePortIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dBasePortIfIndex.setStatus("mandatory")
_Dot1dBasePortCircuit_Type = ObjectIdentifier
_Dot1dBasePortCircuit_Object = MibTableColumn
dot1dBasePortCircuit = _Dot1dBasePortCircuit_Object(
    (1, 3, 6, 1, 2, 1, 17, 1, 4, 1, 3),
    _Dot1dBasePortCircuit_Type()
)
dot1dBasePortCircuit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dBasePortCircuit.setStatus("mandatory")
_Dot1dBasePortDelayExceededDiscards_Type = Counter32
_Dot1dBasePortDelayExceededDiscards_Object = MibTableColumn
dot1dBasePortDelayExceededDiscards = _Dot1dBasePortDelayExceededDiscards_Object(
    (1, 3, 6, 1, 2, 1, 17, 1, 4, 1, 4),
    _Dot1dBasePortDelayExceededDiscards_Type()
)
dot1dBasePortDelayExceededDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dBasePortDelayExceededDiscards.setStatus("mandatory")
_Dot1dBasePortMtuExceededDiscards_Type = Counter32
_Dot1dBasePortMtuExceededDiscards_Object = MibTableColumn
dot1dBasePortMtuExceededDiscards = _Dot1dBasePortMtuExceededDiscards_Object(
    (1, 3, 6, 1, 2, 1, 17, 1, 4, 1, 5),
    _Dot1dBasePortMtuExceededDiscards_Type()
)
dot1dBasePortMtuExceededDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dBasePortMtuExceededDiscards.setStatus("mandatory")
_Dot1dStp_ObjectIdentity = ObjectIdentity
dot1dStp = _Dot1dStp_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 17, 2)
)


class _Dot1dStpProtocolSpecification_Type(Integer32):
    """Custom type dot1dStpProtocolSpecification based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decLb100", 2),
          ("ieee8021d", 3),
          ("unknown", 1))
    )


_Dot1dStpProtocolSpecification_Type.__name__ = "Integer32"
_Dot1dStpProtocolSpecification_Object = MibScalar
dot1dStpProtocolSpecification = _Dot1dStpProtocolSpecification_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 1),
    _Dot1dStpProtocolSpecification_Type()
)
dot1dStpProtocolSpecification.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dStpProtocolSpecification.setStatus("mandatory")


class _Dot1dStpPriority_Type(Integer32):
    """Custom type dot1dStpPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Dot1dStpPriority_Type.__name__ = "Integer32"
_Dot1dStpPriority_Object = MibScalar
dot1dStpPriority = _Dot1dStpPriority_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 2),
    _Dot1dStpPriority_Type()
)
dot1dStpPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1dStpPriority.setStatus("mandatory")
_Dot1dStpTimeSinceTopologyChange_Type = TimeTicks
_Dot1dStpTimeSinceTopologyChange_Object = MibScalar
dot1dStpTimeSinceTopologyChange = _Dot1dStpTimeSinceTopologyChange_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 3),
    _Dot1dStpTimeSinceTopologyChange_Type()
)
dot1dStpTimeSinceTopologyChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dStpTimeSinceTopologyChange.setStatus("mandatory")
_Dot1dStpTopChanges_Type = Counter32
_Dot1dStpTopChanges_Object = MibScalar
dot1dStpTopChanges = _Dot1dStpTopChanges_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 4),
    _Dot1dStpTopChanges_Type()
)
dot1dStpTopChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dStpTopChanges.setStatus("mandatory")
_Dot1dStpDesignatedRoot_Type = BridgeId
_Dot1dStpDesignatedRoot_Object = MibScalar
dot1dStpDesignatedRoot = _Dot1dStpDesignatedRoot_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 5),
    _Dot1dStpDesignatedRoot_Type()
)
dot1dStpDesignatedRoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dStpDesignatedRoot.setStatus("mandatory")
_Dot1dStpRootCost_Type = Integer32
_Dot1dStpRootCost_Object = MibScalar
dot1dStpRootCost = _Dot1dStpRootCost_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 6),
    _Dot1dStpRootCost_Type()
)
dot1dStpRootCost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dStpRootCost.setStatus("mandatory")
_Dot1dStpRootPort_Type = Integer32
_Dot1dStpRootPort_Object = MibScalar
dot1dStpRootPort = _Dot1dStpRootPort_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 7),
    _Dot1dStpRootPort_Type()
)
dot1dStpRootPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dStpRootPort.setStatus("mandatory")
_Dot1dStpMaxAge_Type = Timeout
_Dot1dStpMaxAge_Object = MibScalar
dot1dStpMaxAge = _Dot1dStpMaxAge_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 8),
    _Dot1dStpMaxAge_Type()
)
dot1dStpMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dStpMaxAge.setStatus("mandatory")
_Dot1dStpHelloTime_Type = Timeout
_Dot1dStpHelloTime_Object = MibScalar
dot1dStpHelloTime = _Dot1dStpHelloTime_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 9),
    _Dot1dStpHelloTime_Type()
)
dot1dStpHelloTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dStpHelloTime.setStatus("mandatory")
_Dot1dStpHoldTime_Type = Integer32
_Dot1dStpHoldTime_Object = MibScalar
dot1dStpHoldTime = _Dot1dStpHoldTime_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 10),
    _Dot1dStpHoldTime_Type()
)
dot1dStpHoldTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dStpHoldTime.setStatus("mandatory")
_Dot1dStpForwardDelay_Type = Timeout
_Dot1dStpForwardDelay_Object = MibScalar
dot1dStpForwardDelay = _Dot1dStpForwardDelay_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 11),
    _Dot1dStpForwardDelay_Type()
)
dot1dStpForwardDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dStpForwardDelay.setStatus("mandatory")


class _Dot1dStpBridgeMaxAge_Type(Timeout):
    """Custom type dot1dStpBridgeMaxAge based on Timeout"""
    subtypeSpec = Timeout.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(600, 4000),
    )


_Dot1dStpBridgeMaxAge_Type.__name__ = "Timeout"
_Dot1dStpBridgeMaxAge_Object = MibScalar
dot1dStpBridgeMaxAge = _Dot1dStpBridgeMaxAge_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 12),
    _Dot1dStpBridgeMaxAge_Type()
)
dot1dStpBridgeMaxAge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1dStpBridgeMaxAge.setStatus("mandatory")


class _Dot1dStpBridgeHelloTime_Type(Timeout):
    """Custom type dot1dStpBridgeHelloTime based on Timeout"""
    subtypeSpec = Timeout.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(100, 1000),
    )


_Dot1dStpBridgeHelloTime_Type.__name__ = "Timeout"
_Dot1dStpBridgeHelloTime_Object = MibScalar
dot1dStpBridgeHelloTime = _Dot1dStpBridgeHelloTime_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 13),
    _Dot1dStpBridgeHelloTime_Type()
)
dot1dStpBridgeHelloTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1dStpBridgeHelloTime.setStatus("mandatory")


class _Dot1dStpBridgeForwardDelay_Type(Timeout):
    """Custom type dot1dStpBridgeForwardDelay based on Timeout"""
    subtypeSpec = Timeout.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(400, 3000),
    )


_Dot1dStpBridgeForwardDelay_Type.__name__ = "Timeout"
_Dot1dStpBridgeForwardDelay_Object = MibScalar
dot1dStpBridgeForwardDelay = _Dot1dStpBridgeForwardDelay_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 14),
    _Dot1dStpBridgeForwardDelay_Type()
)
dot1dStpBridgeForwardDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1dStpBridgeForwardDelay.setStatus("mandatory")
_Dot1dStpPortTable_Object = MibTable
dot1dStpPortTable = _Dot1dStpPortTable_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 15)
)
if mibBuilder.loadTexts:
    dot1dStpPortTable.setStatus("mandatory")
_Dot1dStpPortEntry_Object = MibTableRow
dot1dStpPortEntry = _Dot1dStpPortEntry_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 15, 1)
)
dot1dStpPortEntry.setIndexNames(
    (0, "MRVINREACH", "dot1dStpPort"),
)
if mibBuilder.loadTexts:
    dot1dStpPortEntry.setStatus("mandatory")


class _Dot1dStpPort_Type(Integer32):
    """Custom type dot1dStpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_Dot1dStpPort_Type.__name__ = "Integer32"
_Dot1dStpPort_Object = MibTableColumn
dot1dStpPort = _Dot1dStpPort_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 15, 1, 1),
    _Dot1dStpPort_Type()
)
dot1dStpPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dStpPort.setStatus("mandatory")


class _Dot1dStpPortPriority_Type(Integer32):
    """Custom type dot1dStpPortPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_Dot1dStpPortPriority_Type.__name__ = "Integer32"
_Dot1dStpPortPriority_Object = MibTableColumn
dot1dStpPortPriority = _Dot1dStpPortPriority_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 15, 1, 2),
    _Dot1dStpPortPriority_Type()
)
dot1dStpPortPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1dStpPortPriority.setStatus("mandatory")


class _Dot1dStpPortState_Type(Integer32):
    """Custom type dot1dStpPortState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("blocking", 2),
          ("broken", 6),
          ("disabled", 1),
          ("forwarding", 5),
          ("learning", 4),
          ("listening", 3))
    )


_Dot1dStpPortState_Type.__name__ = "Integer32"
_Dot1dStpPortState_Object = MibTableColumn
dot1dStpPortState = _Dot1dStpPortState_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 15, 1, 3),
    _Dot1dStpPortState_Type()
)
dot1dStpPortState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dStpPortState.setStatus("mandatory")


class _Dot1dStpPortEnable_Type(Integer32):
    """Custom type dot1dStpPortEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_Dot1dStpPortEnable_Type.__name__ = "Integer32"
_Dot1dStpPortEnable_Object = MibTableColumn
dot1dStpPortEnable = _Dot1dStpPortEnable_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 15, 1, 4),
    _Dot1dStpPortEnable_Type()
)
dot1dStpPortEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1dStpPortEnable.setStatus("mandatory")


class _Dot1dStpPortPathCost_Type(Integer32):
    """Custom type dot1dStpPortPathCost based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_Dot1dStpPortPathCost_Type.__name__ = "Integer32"
_Dot1dStpPortPathCost_Object = MibTableColumn
dot1dStpPortPathCost = _Dot1dStpPortPathCost_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 15, 1, 5),
    _Dot1dStpPortPathCost_Type()
)
dot1dStpPortPathCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1dStpPortPathCost.setStatus("mandatory")
_Dot1dStpPortDesignatedRoot_Type = BridgeId
_Dot1dStpPortDesignatedRoot_Object = MibTableColumn
dot1dStpPortDesignatedRoot = _Dot1dStpPortDesignatedRoot_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 15, 1, 6),
    _Dot1dStpPortDesignatedRoot_Type()
)
dot1dStpPortDesignatedRoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dStpPortDesignatedRoot.setStatus("mandatory")
_Dot1dStpPortDesignatedCost_Type = Integer32
_Dot1dStpPortDesignatedCost_Object = MibTableColumn
dot1dStpPortDesignatedCost = _Dot1dStpPortDesignatedCost_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 15, 1, 7),
    _Dot1dStpPortDesignatedCost_Type()
)
dot1dStpPortDesignatedCost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dStpPortDesignatedCost.setStatus("mandatory")
_Dot1dStpPortDesignatedBridge_Type = BridgeId
_Dot1dStpPortDesignatedBridge_Object = MibTableColumn
dot1dStpPortDesignatedBridge = _Dot1dStpPortDesignatedBridge_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 15, 1, 8),
    _Dot1dStpPortDesignatedBridge_Type()
)
dot1dStpPortDesignatedBridge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dStpPortDesignatedBridge.setStatus("mandatory")


class _Dot1dStpPortDesignatedPort_Type(OctetString):
    """Custom type dot1dStpPortDesignatedPort based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(2, 2),
    )


_Dot1dStpPortDesignatedPort_Type.__name__ = "OctetString"
_Dot1dStpPortDesignatedPort_Object = MibTableColumn
dot1dStpPortDesignatedPort = _Dot1dStpPortDesignatedPort_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 15, 1, 9),
    _Dot1dStpPortDesignatedPort_Type()
)
dot1dStpPortDesignatedPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dStpPortDesignatedPort.setStatus("mandatory")
_Dot1dStpPortForwardTransitions_Type = Counter32
_Dot1dStpPortForwardTransitions_Object = MibTableColumn
dot1dStpPortForwardTransitions = _Dot1dStpPortForwardTransitions_Object(
    (1, 3, 6, 1, 2, 1, 17, 2, 15, 1, 10),
    _Dot1dStpPortForwardTransitions_Type()
)
dot1dStpPortForwardTransitions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dStpPortForwardTransitions.setStatus("mandatory")
_Dot1dSr_ObjectIdentity = ObjectIdentity
dot1dSr = _Dot1dSr_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 17, 3)
)
_Dot1dTp_ObjectIdentity = ObjectIdentity
dot1dTp = _Dot1dTp_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 17, 4)
)
_Dot1dTpLearnedEntryDiscards_Type = Counter32
_Dot1dTpLearnedEntryDiscards_Object = MibScalar
dot1dTpLearnedEntryDiscards = _Dot1dTpLearnedEntryDiscards_Object(
    (1, 3, 6, 1, 2, 1, 17, 4, 1),
    _Dot1dTpLearnedEntryDiscards_Type()
)
dot1dTpLearnedEntryDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dTpLearnedEntryDiscards.setStatus("mandatory")


class _Dot1dTpAgingTime_Type(Integer32):
    """Custom type dot1dTpAgingTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 1000000),
    )


_Dot1dTpAgingTime_Type.__name__ = "Integer32"
_Dot1dTpAgingTime_Object = MibScalar
dot1dTpAgingTime = _Dot1dTpAgingTime_Object(
    (1, 3, 6, 1, 2, 1, 17, 4, 2),
    _Dot1dTpAgingTime_Type()
)
dot1dTpAgingTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1dTpAgingTime.setStatus("mandatory")
_Dot1dTpFdbTable_Object = MibTable
dot1dTpFdbTable = _Dot1dTpFdbTable_Object(
    (1, 3, 6, 1, 2, 1, 17, 4, 3)
)
if mibBuilder.loadTexts:
    dot1dTpFdbTable.setStatus("mandatory")
_Dot1dTpFdbEntry_Object = MibTableRow
dot1dTpFdbEntry = _Dot1dTpFdbEntry_Object(
    (1, 3, 6, 1, 2, 1, 17, 4, 3, 1)
)
dot1dTpFdbEntry.setIndexNames(
    (0, "MRVINREACH", "dot1dTpFdbAddress"),
)
if mibBuilder.loadTexts:
    dot1dTpFdbEntry.setStatus("mandatory")
_Dot1dTpFdbAddress_Type = MacAddress
_Dot1dTpFdbAddress_Object = MibTableColumn
dot1dTpFdbAddress = _Dot1dTpFdbAddress_Object(
    (1, 3, 6, 1, 2, 1, 17, 4, 3, 1, 1),
    _Dot1dTpFdbAddress_Type()
)
dot1dTpFdbAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dTpFdbAddress.setStatus("mandatory")
_Dot1dTpFdbPort_Type = Integer32
_Dot1dTpFdbPort_Object = MibTableColumn
dot1dTpFdbPort = _Dot1dTpFdbPort_Object(
    (1, 3, 6, 1, 2, 1, 17, 4, 3, 1, 2),
    _Dot1dTpFdbPort_Type()
)
dot1dTpFdbPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dTpFdbPort.setStatus("mandatory")


class _Dot1dTpFdbStatus_Type(Integer32):
    """Custom type dot1dTpFdbStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("learned", 3),
          ("mgmt", 5),
          ("other", 1),
          ("self", 4))
    )


_Dot1dTpFdbStatus_Type.__name__ = "Integer32"
_Dot1dTpFdbStatus_Object = MibTableColumn
dot1dTpFdbStatus = _Dot1dTpFdbStatus_Object(
    (1, 3, 6, 1, 2, 1, 17, 4, 3, 1, 3),
    _Dot1dTpFdbStatus_Type()
)
dot1dTpFdbStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dTpFdbStatus.setStatus("mandatory")
_Dot1dTpPortTable_Object = MibTable
dot1dTpPortTable = _Dot1dTpPortTable_Object(
    (1, 3, 6, 1, 2, 1, 17, 4, 4)
)
if mibBuilder.loadTexts:
    dot1dTpPortTable.setStatus("mandatory")
_Dot1dTpPortEntry_Object = MibTableRow
dot1dTpPortEntry = _Dot1dTpPortEntry_Object(
    (1, 3, 6, 1, 2, 1, 17, 4, 4, 1)
)
dot1dTpPortEntry.setIndexNames(
    (0, "MRVINREACH", "dot1dTpPort"),
)
if mibBuilder.loadTexts:
    dot1dTpPortEntry.setStatus("mandatory")


class _Dot1dTpPort_Type(Integer32):
    """Custom type dot1dTpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_Dot1dTpPort_Type.__name__ = "Integer32"
_Dot1dTpPort_Object = MibTableColumn
dot1dTpPort = _Dot1dTpPort_Object(
    (1, 3, 6, 1, 2, 1, 17, 4, 4, 1, 1),
    _Dot1dTpPort_Type()
)
dot1dTpPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dTpPort.setStatus("mandatory")
_Dot1dTpPortMaxInfo_Type = Integer32
_Dot1dTpPortMaxInfo_Object = MibTableColumn
dot1dTpPortMaxInfo = _Dot1dTpPortMaxInfo_Object(
    (1, 3, 6, 1, 2, 1, 17, 4, 4, 1, 2),
    _Dot1dTpPortMaxInfo_Type()
)
dot1dTpPortMaxInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dTpPortMaxInfo.setStatus("mandatory")
_Dot1dTpPortInFrames_Type = Counter32
_Dot1dTpPortInFrames_Object = MibTableColumn
dot1dTpPortInFrames = _Dot1dTpPortInFrames_Object(
    (1, 3, 6, 1, 2, 1, 17, 4, 4, 1, 3),
    _Dot1dTpPortInFrames_Type()
)
dot1dTpPortInFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dTpPortInFrames.setStatus("mandatory")
_Dot1dTpPortOutFrames_Type = Counter32
_Dot1dTpPortOutFrames_Object = MibTableColumn
dot1dTpPortOutFrames = _Dot1dTpPortOutFrames_Object(
    (1, 3, 6, 1, 2, 1, 17, 4, 4, 1, 4),
    _Dot1dTpPortOutFrames_Type()
)
dot1dTpPortOutFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dTpPortOutFrames.setStatus("mandatory")
_Dot1dTpPortInDiscards_Type = Counter32
_Dot1dTpPortInDiscards_Object = MibTableColumn
dot1dTpPortInDiscards = _Dot1dTpPortInDiscards_Object(
    (1, 3, 6, 1, 2, 1, 17, 4, 4, 1, 5),
    _Dot1dTpPortInDiscards_Type()
)
dot1dTpPortInDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dot1dTpPortInDiscards.setStatus("mandatory")
_Dot1dStatic_ObjectIdentity = ObjectIdentity
dot1dStatic = _Dot1dStatic_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 17, 5)
)
_Dot1dStaticTable_Object = MibTable
dot1dStaticTable = _Dot1dStaticTable_Object(
    (1, 3, 6, 1, 2, 1, 17, 5, 1)
)
if mibBuilder.loadTexts:
    dot1dStaticTable.setStatus("mandatory")
_Dot1dStaticEntry_Object = MibTableRow
dot1dStaticEntry = _Dot1dStaticEntry_Object(
    (1, 3, 6, 1, 2, 1, 17, 5, 1, 1)
)
dot1dStaticEntry.setIndexNames(
    (0, "MRVINREACH", "dot1dStaticAddress"),
    (0, "MRVINREACH", "dot1dStaticReceivePort"),
)
if mibBuilder.loadTexts:
    dot1dStaticEntry.setStatus("mandatory")
_Dot1dStaticAddress_Type = MacAddress
_Dot1dStaticAddress_Object = MibTableColumn
dot1dStaticAddress = _Dot1dStaticAddress_Object(
    (1, 3, 6, 1, 2, 1, 17, 5, 1, 1, 1),
    _Dot1dStaticAddress_Type()
)
dot1dStaticAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1dStaticAddress.setStatus("mandatory")
_Dot1dStaticReceivePort_Type = Integer32
_Dot1dStaticReceivePort_Object = MibTableColumn
dot1dStaticReceivePort = _Dot1dStaticReceivePort_Object(
    (1, 3, 6, 1, 2, 1, 17, 5, 1, 1, 2),
    _Dot1dStaticReceivePort_Type()
)
dot1dStaticReceivePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1dStaticReceivePort.setStatus("mandatory")
_Dot1dStaticAllowedToGoTo_Type = OctetString
_Dot1dStaticAllowedToGoTo_Object = MibTableColumn
dot1dStaticAllowedToGoTo = _Dot1dStaticAllowedToGoTo_Object(
    (1, 3, 6, 1, 2, 1, 17, 5, 1, 1, 3),
    _Dot1dStaticAllowedToGoTo_Type()
)
dot1dStaticAllowedToGoTo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1dStaticAllowedToGoTo.setStatus("mandatory")


class _Dot1dStaticStatus_Type(Integer32):
    """Custom type dot1dStaticStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("deleteOnReset", 4),
          ("deleteOnTimeout", 5),
          ("invalid", 2),
          ("other", 1),
          ("permanent", 3))
    )


_Dot1dStaticStatus_Type.__name__ = "Integer32"
_Dot1dStaticStatus_Object = MibTableColumn
dot1dStaticStatus = _Dot1dStaticStatus_Object(
    (1, 3, 6, 1, 2, 1, 17, 5, 1, 1, 4),
    _Dot1dStaticStatus_Type()
)
dot1dStaticStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dot1dStaticStatus.setStatus("mandatory")
_Phiv_ObjectIdentity = ObjectIdentity
phiv = _Phiv_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 18)
)
_PhivSystem_ObjectIdentity = ObjectIdentity
phivSystem = _PhivSystem_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 18, 1)
)
_PhivManagement_ObjectIdentity = ObjectIdentity
phivManagement = _PhivManagement_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 18, 2)
)
_Session_ObjectIdentity = ObjectIdentity
session = _Session_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 18, 3)
)
_End_ObjectIdentity = ObjectIdentity
end = _End_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 18, 4)
)
_Routing_ObjectIdentity = ObjectIdentity
routing = _Routing_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 18, 5)
)
_Circuit_ObjectIdentity = ObjectIdentity
circuit = _Circuit_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 18, 6)
)
_PhivCircuitParametersTable_Object = MibTable
phivCircuitParametersTable = _PhivCircuitParametersTable_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 1)
)
if mibBuilder.loadTexts:
    phivCircuitParametersTable.setStatus("mandatory")
_PhivCircuitParametersEntry_Object = MibTableRow
phivCircuitParametersEntry = _PhivCircuitParametersEntry_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 1, 1)
)
phivCircuitParametersEntry.setIndexNames(
    (0, "MRVINREACH", "phivCircuitIndex"),
)
if mibBuilder.loadTexts:
    phivCircuitParametersEntry.setStatus("mandatory")
_PhivCircuitIndex_Type = Integer32
_PhivCircuitIndex_Object = MibTableColumn
phivCircuitIndex = _PhivCircuitIndex_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 1),
    _PhivCircuitIndex_Type()
)
phivCircuitIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitIndex.setStatus("mandatory")
_PhivCircuitLineIndex_Type = Integer32
_PhivCircuitLineIndex_Object = MibTableColumn
phivCircuitLineIndex = _PhivCircuitLineIndex_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 2),
    _PhivCircuitLineIndex_Type()
)
phivCircuitLineIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitLineIndex.setStatus("mandatory")


class _PhivCircuitCommonState_Type(Integer32):
    """Custom type phivCircuitCommonState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cleared", 4),
          ("off", 2),
          ("on", 1),
          ("service", 3))
    )


_PhivCircuitCommonState_Type.__name__ = "Integer32"
_PhivCircuitCommonState_Object = MibTableColumn
phivCircuitCommonState = _PhivCircuitCommonState_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 3),
    _PhivCircuitCommonState_Type()
)
phivCircuitCommonState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivCircuitCommonState.setStatus("mandatory")


class _PhivCircuitCommonSubState_Type(Integer32):
    """Custom type phivCircuitCommonSubState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("autodumping", 9),
          ("autoloading", 8),
          ("autoservice", 7),
          ("autotriggering", 10),
          ("dumping", 5),
          ("failed", 12),
          ("loading", 4),
          ("looping", 3),
          ("reflecting", 2),
          ("running", 13),
          ("starting", 1),
          ("synchronizing", 11),
          ("triggering", 6))
    )


_PhivCircuitCommonSubState_Type.__name__ = "Integer32"
_PhivCircuitCommonSubState_Object = MibTableColumn
phivCircuitCommonSubState = _PhivCircuitCommonSubState_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 4),
    _PhivCircuitCommonSubState_Type()
)
phivCircuitCommonSubState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitCommonSubState.setStatus("mandatory")


class _PhivCircuitCommonName_Type(DisplayString):
    """Custom type phivCircuitCommonName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_PhivCircuitCommonName_Type.__name__ = "DisplayString"
_PhivCircuitCommonName_Object = MibTableColumn
phivCircuitCommonName = _PhivCircuitCommonName_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 5),
    _PhivCircuitCommonName_Type()
)
phivCircuitCommonName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitCommonName.setStatus("mandatory")


class _PhivCircuitExecRecallTimer_Type(Integer32):
    """Custom type phivCircuitExecRecallTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PhivCircuitExecRecallTimer_Type.__name__ = "Integer32"
_PhivCircuitExecRecallTimer_Object = MibTableColumn
phivCircuitExecRecallTimer = _PhivCircuitExecRecallTimer_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 6),
    _PhivCircuitExecRecallTimer_Type()
)
phivCircuitExecRecallTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivCircuitExecRecallTimer.setStatus("mandatory")


class _PhivCircuitCommonType_Type(Integer32):
    """Custom type phivCircuitCommonType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("bisync", 9),
          ("ci", 7),
          ("ddcmp-control", 2),
          ("ddcmp-dmc", 5),
          ("ddcmp-point", 1),
          ("ddcmp-tributary", 3),
          ("ethernet", 6),
          ("fddi", 15),
          ("other", 14),
          ("qp2-dte20", 8),
          ("x25", 4))
    )


_PhivCircuitCommonType_Type.__name__ = "Integer32"
_PhivCircuitCommonType_Object = MibTableColumn
phivCircuitCommonType = _PhivCircuitCommonType_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 7),
    _PhivCircuitCommonType_Type()
)
phivCircuitCommonType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitCommonType.setStatus("mandatory")


class _PhivCircuitService_Type(Integer32):
    """Custom type phivCircuitService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_PhivCircuitService_Type.__name__ = "Integer32"
_PhivCircuitService_Object = MibTableColumn
phivCircuitService = _PhivCircuitService_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 8),
    _PhivCircuitService_Type()
)
phivCircuitService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivCircuitService.setStatus("mandatory")


class _PhivCircuitExecCost_Type(Integer32):
    """Custom type phivCircuitExecCost based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 25),
    )


_PhivCircuitExecCost_Type.__name__ = "Integer32"
_PhivCircuitExecCost_Object = MibTableColumn
phivCircuitExecCost = _PhivCircuitExecCost_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 9),
    _PhivCircuitExecCost_Type()
)
phivCircuitExecCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivCircuitExecCost.setStatus("mandatory")


class _PhivCircuitExecHelloTimer_Type(Integer32):
    """Custom type phivCircuitExecHelloTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_PhivCircuitExecHelloTimer_Type.__name__ = "Integer32"
_PhivCircuitExecHelloTimer_Object = MibTableColumn
phivCircuitExecHelloTimer = _PhivCircuitExecHelloTimer_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 10),
    _PhivCircuitExecHelloTimer_Type()
)
phivCircuitExecHelloTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivCircuitExecHelloTimer.setStatus("mandatory")
_PhivCircuitCountTable_Object = MibTable
phivCircuitCountTable = _PhivCircuitCountTable_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 2)
)
if mibBuilder.loadTexts:
    phivCircuitCountTable.setStatus("mandatory")
_PhivCircuitCountEntry_Object = MibTableRow
phivCircuitCountEntry = _PhivCircuitCountEntry_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 2, 1)
)
phivCircuitCountEntry.setIndexNames(
    (0, "MRVINREACH", "phivCircuitIndex"),
)
if mibBuilder.loadTexts:
    phivCircuitCountEntry.setStatus("mandatory")


class _PhivCircuitCountSecLastZeroed_Type(PhivCounter):
    """Custom type phivCircuitCountSecLastZeroed based on PhivCounter"""
    subtypeSpec = PhivCounter.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PhivCircuitCountSecLastZeroed_Type.__name__ = "PhivCounter"
_PhivCircuitCountSecLastZeroed_Object = MibTableColumn
phivCircuitCountSecLastZeroed = _PhivCircuitCountSecLastZeroed_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 1),
    _PhivCircuitCountSecLastZeroed_Type()
)
phivCircuitCountSecLastZeroed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitCountSecLastZeroed.setStatus("mandatory")
_PhivCircuitCountTermPacketsRecd_Type = PhivCounter
_PhivCircuitCountTermPacketsRecd_Object = MibTableColumn
phivCircuitCountTermPacketsRecd = _PhivCircuitCountTermPacketsRecd_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 2),
    _PhivCircuitCountTermPacketsRecd_Type()
)
phivCircuitCountTermPacketsRecd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitCountTermPacketsRecd.setStatus("mandatory")
_PhivCircuitCountOriginPackSent_Type = PhivCounter
_PhivCircuitCountOriginPackSent_Object = MibTableColumn
phivCircuitCountOriginPackSent = _PhivCircuitCountOriginPackSent_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 3),
    _PhivCircuitCountOriginPackSent_Type()
)
phivCircuitCountOriginPackSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitCountOriginPackSent.setStatus("mandatory")


class _PhivCircuitCountTermCongLoss_Type(PhivCounter):
    """Custom type phivCircuitCountTermCongLoss based on PhivCounter"""
    subtypeSpec = PhivCounter.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PhivCircuitCountTermCongLoss_Type.__name__ = "PhivCounter"
_PhivCircuitCountTermCongLoss_Object = MibTableColumn
phivCircuitCountTermCongLoss = _PhivCircuitCountTermCongLoss_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 4),
    _PhivCircuitCountTermCongLoss_Type()
)
phivCircuitCountTermCongLoss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitCountTermCongLoss.setStatus("mandatory")


class _PhivCircuitCountCorruptLoss_Type(PhivCounter):
    """Custom type phivCircuitCountCorruptLoss based on PhivCounter"""
    subtypeSpec = PhivCounter.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PhivCircuitCountCorruptLoss_Type.__name__ = "PhivCounter"
_PhivCircuitCountCorruptLoss_Object = MibTableColumn
phivCircuitCountCorruptLoss = _PhivCircuitCountCorruptLoss_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 5),
    _PhivCircuitCountCorruptLoss_Type()
)
phivCircuitCountCorruptLoss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitCountCorruptLoss.setStatus("mandatory")
_PhivCircuitCountTransitPksRecd_Type = PhivCounter
_PhivCircuitCountTransitPksRecd_Object = MibTableColumn
phivCircuitCountTransitPksRecd = _PhivCircuitCountTransitPksRecd_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 6),
    _PhivCircuitCountTransitPksRecd_Type()
)
phivCircuitCountTransitPksRecd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitCountTransitPksRecd.setStatus("mandatory")
_PhivCircuitCountTransitPkSent_Type = PhivCounter
_PhivCircuitCountTransitPkSent_Object = MibTableColumn
phivCircuitCountTransitPkSent = _PhivCircuitCountTransitPkSent_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 7),
    _PhivCircuitCountTransitPkSent_Type()
)
phivCircuitCountTransitPkSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitCountTransitPkSent.setStatus("mandatory")


class _PhivCircuitCountTransitCongestLoss_Type(PhivCounter):
    """Custom type phivCircuitCountTransitCongestLoss based on PhivCounter"""
    subtypeSpec = PhivCounter.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PhivCircuitCountTransitCongestLoss_Type.__name__ = "PhivCounter"
_PhivCircuitCountTransitCongestLoss_Object = MibTableColumn
phivCircuitCountTransitCongestLoss = _PhivCircuitCountTransitCongestLoss_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 8),
    _PhivCircuitCountTransitCongestLoss_Type()
)
phivCircuitCountTransitCongestLoss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitCountTransitCongestLoss.setStatus("mandatory")


class _PhivCircuitCountCircuitDown_Type(PhivCounter):
    """Custom type phivCircuitCountCircuitDown based on PhivCounter"""
    subtypeSpec = PhivCounter.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PhivCircuitCountCircuitDown_Type.__name__ = "PhivCounter"
_PhivCircuitCountCircuitDown_Object = MibTableColumn
phivCircuitCountCircuitDown = _PhivCircuitCountCircuitDown_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 9),
    _PhivCircuitCountCircuitDown_Type()
)
phivCircuitCountCircuitDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitCountCircuitDown.setStatus("mandatory")


class _PhivCircuitCountInitFailure_Type(PhivCounter):
    """Custom type phivCircuitCountInitFailure based on PhivCounter"""
    subtypeSpec = PhivCounter.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_PhivCircuitCountInitFailure_Type.__name__ = "PhivCounter"
_PhivCircuitCountInitFailure_Object = MibTableColumn
phivCircuitCountInitFailure = _PhivCircuitCountInitFailure_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 10),
    _PhivCircuitCountInitFailure_Type()
)
phivCircuitCountInitFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitCountInitFailure.setStatus("mandatory")
_PhivCircuitCountAdjDown_Type = PhivCounter
_PhivCircuitCountAdjDown_Object = MibTableColumn
phivCircuitCountAdjDown = _PhivCircuitCountAdjDown_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 11),
    _PhivCircuitCountAdjDown_Type()
)
phivCircuitCountAdjDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitCountAdjDown.setStatus("mandatory")
_PhivCircuitCountPeakAdj_Type = PhivCounter
_PhivCircuitCountPeakAdj_Object = MibTableColumn
phivCircuitCountPeakAdj = _PhivCircuitCountPeakAdj_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 12),
    _PhivCircuitCountPeakAdj_Type()
)
phivCircuitCountPeakAdj.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitCountPeakAdj.setStatus("mandatory")
_PhivCircuitCountBytesRecd_Type = PhivCounter
_PhivCircuitCountBytesRecd_Object = MibTableColumn
phivCircuitCountBytesRecd = _PhivCircuitCountBytesRecd_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 13),
    _PhivCircuitCountBytesRecd_Type()
)
phivCircuitCountBytesRecd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitCountBytesRecd.setStatus("mandatory")
_PhivCircuitCountBytesSent_Type = PhivCounter
_PhivCircuitCountBytesSent_Object = MibTableColumn
phivCircuitCountBytesSent = _PhivCircuitCountBytesSent_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 14),
    _PhivCircuitCountBytesSent_Type()
)
phivCircuitCountBytesSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitCountBytesSent.setStatus("mandatory")


class _PhivCircuitCountDataBlocksRecd_Type(PhivCounter):
    """Custom type phivCircuitCountDataBlocksRecd based on PhivCounter"""
    subtypeSpec = PhivCounter.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PhivCircuitCountDataBlocksRecd_Type.__name__ = "PhivCounter"
_PhivCircuitCountDataBlocksRecd_Object = MibTableColumn
phivCircuitCountDataBlocksRecd = _PhivCircuitCountDataBlocksRecd_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 15),
    _PhivCircuitCountDataBlocksRecd_Type()
)
phivCircuitCountDataBlocksRecd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitCountDataBlocksRecd.setStatus("mandatory")
_PhivCircuitCountDataBlocksSent_Type = PhivCounter
_PhivCircuitCountDataBlocksSent_Object = MibTableColumn
phivCircuitCountDataBlocksSent = _PhivCircuitCountDataBlocksSent_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 16),
    _PhivCircuitCountDataBlocksSent_Type()
)
phivCircuitCountDataBlocksSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitCountDataBlocksSent.setStatus("mandatory")


class _PhivCircuitCountUsrBuffUnav_Type(PhivCounter):
    """Custom type phivCircuitCountUsrBuffUnav based on PhivCounter"""
    subtypeSpec = PhivCounter.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_PhivCircuitCountUsrBuffUnav_Type.__name__ = "PhivCounter"
_PhivCircuitCountUsrBuffUnav_Object = MibTableColumn
phivCircuitCountUsrBuffUnav = _PhivCircuitCountUsrBuffUnav_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 17),
    _PhivCircuitCountUsrBuffUnav_Type()
)
phivCircuitCountUsrBuffUnav.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitCountUsrBuffUnav.setStatus("mandatory")
_PhivCircuitOrigQueueLimit_Type = Integer32
_PhivCircuitOrigQueueLimit_Object = MibScalar
phivCircuitOrigQueueLimit = _PhivCircuitOrigQueueLimit_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 3),
    _PhivCircuitOrigQueueLimit_Type()
)
phivCircuitOrigQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivCircuitOrigQueueLimit.setStatus("mandatory")


class _PhivCircuitCountZeroCount_Type(Integer32):
    """Custom type phivCircuitCountZeroCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("other", 1),
          ("reset", 2))
    )


_PhivCircuitCountZeroCount_Type.__name__ = "Integer32"
_PhivCircuitCountZeroCount_Object = MibScalar
phivCircuitCountZeroCount = _PhivCircuitCountZeroCount_Object(
    (1, 3, 6, 1, 2, 1, 18, 6, 4),
    _PhivCircuitCountZeroCount_Type()
)
phivCircuitCountZeroCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivCircuitCountZeroCount.setStatus("mandatory")
_Ddcmp_ObjectIdentity = ObjectIdentity
ddcmp = _Ddcmp_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 18, 7)
)
_Control_ObjectIdentity = ObjectIdentity
control = _Control_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 18, 8)
)
_Ethernet_ObjectIdentity = ObjectIdentity
ethernet = _Ethernet_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 18, 9)
)
_Counters_ObjectIdentity = ObjectIdentity
counters = _Counters_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 18, 10)
)
_Adjacency_ObjectIdentity = ObjectIdentity
adjacency = _Adjacency_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 18, 11)
)
_Line_ObjectIdentity = ObjectIdentity
line = _Line_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 18, 12)
)
_NonBroadcastLine_ObjectIdentity = ObjectIdentity
nonBroadcastLine = _NonBroadcastLine_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 18, 14)
)
_Area_ObjectIdentity = ObjectIdentity
area = _Area_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 18, 15)
)
_Char_ObjectIdentity = ObjectIdentity
char = _Char_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 19)
)
_CharNumber_Type = Integer32
_CharNumber_Object = MibScalar
charNumber = _CharNumber_Object(
    (1, 3, 6, 1, 2, 1, 19, 1),
    _CharNumber_Type()
)
charNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    charNumber.setStatus("mandatory")
_CharPortTable_Object = MibTable
charPortTable = _CharPortTable_Object(
    (1, 3, 6, 1, 2, 1, 19, 2)
)
if mibBuilder.loadTexts:
    charPortTable.setStatus("mandatory")
_CharPortEntry_Object = MibTableRow
charPortEntry = _CharPortEntry_Object(
    (1, 3, 6, 1, 2, 1, 19, 2, 1)
)
charPortEntry.setIndexNames(
    (0, "MRVINREACH", "charPortIndex"),
)
if mibBuilder.loadTexts:
    charPortEntry.setStatus("mandatory")
_CharPortIndex_Type = Integer32
_CharPortIndex_Object = MibTableColumn
charPortIndex = _CharPortIndex_Object(
    (1, 3, 6, 1, 2, 1, 19, 2, 1, 1),
    _CharPortIndex_Type()
)
charPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    charPortIndex.setStatus("mandatory")


class _CharPortName_Type(DisplayString):
    """Custom type charPortName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CharPortName_Type.__name__ = "DisplayString"
_CharPortName_Object = MibTableColumn
charPortName = _CharPortName_Object(
    (1, 3, 6, 1, 2, 1, 19, 2, 1, 2),
    _CharPortName_Type()
)
charPortName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    charPortName.setStatus("mandatory")


class _CharPortType_Type(Integer32):
    """Custom type charPortType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("physical", 1),
          ("virtual", 2))
    )


_CharPortType_Type.__name__ = "Integer32"
_CharPortType_Object = MibTableColumn
charPortType = _CharPortType_Object(
    (1, 3, 6, 1, 2, 1, 19, 2, 1, 3),
    _CharPortType_Type()
)
charPortType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    charPortType.setStatus("mandatory")
_CharPortHardware_Type = AutonomousType
_CharPortHardware_Object = MibTableColumn
charPortHardware = _CharPortHardware_Object(
    (1, 3, 6, 1, 2, 1, 19, 2, 1, 4),
    _CharPortHardware_Type()
)
charPortHardware.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    charPortHardware.setStatus("mandatory")


class _CharPortReset_Type(Integer32):
    """Custom type charPortReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_CharPortReset_Type.__name__ = "Integer32"
_CharPortReset_Object = MibTableColumn
charPortReset = _CharPortReset_Object(
    (1, 3, 6, 1, 2, 1, 19, 2, 1, 5),
    _CharPortReset_Type()
)
charPortReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    charPortReset.setStatus("mandatory")


class _CharPortAdminStatus_Type(Integer32):
    """Custom type charPortAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1),
          ("maintenance", 4),
          ("off", 3))
    )


_CharPortAdminStatus_Type.__name__ = "Integer32"
_CharPortAdminStatus_Object = MibTableColumn
charPortAdminStatus = _CharPortAdminStatus_Object(
    (1, 3, 6, 1, 2, 1, 19, 2, 1, 6),
    _CharPortAdminStatus_Type()
)
charPortAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    charPortAdminStatus.setStatus("mandatory")


class _CharPortOperStatus_Type(Integer32):
    """Custom type charPortOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("absent", 4),
          ("active", 5),
          ("down", 2),
          ("maintenance", 3),
          ("up", 1))
    )


_CharPortOperStatus_Type.__name__ = "Integer32"
_CharPortOperStatus_Object = MibTableColumn
charPortOperStatus = _CharPortOperStatus_Object(
    (1, 3, 6, 1, 2, 1, 19, 2, 1, 7),
    _CharPortOperStatus_Type()
)
charPortOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    charPortOperStatus.setStatus("mandatory")
_CharPortLastChange_Type = TimeTicks
_CharPortLastChange_Object = MibTableColumn
charPortLastChange = _CharPortLastChange_Object(
    (1, 3, 6, 1, 2, 1, 19, 2, 1, 8),
    _CharPortLastChange_Type()
)
charPortLastChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    charPortLastChange.setStatus("mandatory")


class _CharPortInFlowType_Type(Integer32):
    """Custom type charPortInFlowType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("ctsRts", 4),
          ("dsrDtr", 5),
          ("hardware", 3),
          ("none", 1),
          ("xonXoff", 2))
    )


_CharPortInFlowType_Type.__name__ = "Integer32"
_CharPortInFlowType_Object = MibTableColumn
charPortInFlowType = _CharPortInFlowType_Object(
    (1, 3, 6, 1, 2, 1, 19, 2, 1, 9),
    _CharPortInFlowType_Type()
)
charPortInFlowType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    charPortInFlowType.setStatus("mandatory")


class _CharPortOutFlowType_Type(Integer32):
    """Custom type charPortOutFlowType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("ctsRts", 4),
          ("dsrDtr", 5),
          ("hardware", 3),
          ("none", 1),
          ("xonXoff", 2))
    )


_CharPortOutFlowType_Type.__name__ = "Integer32"
_CharPortOutFlowType_Object = MibTableColumn
charPortOutFlowType = _CharPortOutFlowType_Object(
    (1, 3, 6, 1, 2, 1, 19, 2, 1, 10),
    _CharPortOutFlowType_Type()
)
charPortOutFlowType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    charPortOutFlowType.setStatus("mandatory")


class _CharPortInFlowState_Type(Integer32):
    """Custom type charPortInFlowState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("go", 4),
          ("none", 1),
          ("stop", 3),
          ("unknown", 2))
    )


_CharPortInFlowState_Type.__name__ = "Integer32"
_CharPortInFlowState_Object = MibTableColumn
charPortInFlowState = _CharPortInFlowState_Object(
    (1, 3, 6, 1, 2, 1, 19, 2, 1, 11),
    _CharPortInFlowState_Type()
)
charPortInFlowState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    charPortInFlowState.setStatus("mandatory")


class _CharPortOutFlowState_Type(Integer32):
    """Custom type charPortOutFlowState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("go", 4),
          ("none", 1),
          ("stop", 3),
          ("unknown", 2))
    )


_CharPortOutFlowState_Type.__name__ = "Integer32"
_CharPortOutFlowState_Object = MibTableColumn
charPortOutFlowState = _CharPortOutFlowState_Object(
    (1, 3, 6, 1, 2, 1, 19, 2, 1, 12),
    _CharPortOutFlowState_Type()
)
charPortOutFlowState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    charPortOutFlowState.setStatus("mandatory")
_CharPortInCharacters_Type = Counter32
_CharPortInCharacters_Object = MibTableColumn
charPortInCharacters = _CharPortInCharacters_Object(
    (1, 3, 6, 1, 2, 1, 19, 2, 1, 13),
    _CharPortInCharacters_Type()
)
charPortInCharacters.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    charPortInCharacters.setStatus("mandatory")
_CharPortOutCharacters_Type = Counter32
_CharPortOutCharacters_Object = MibTableColumn
charPortOutCharacters = _CharPortOutCharacters_Object(
    (1, 3, 6, 1, 2, 1, 19, 2, 1, 14),
    _CharPortOutCharacters_Type()
)
charPortOutCharacters.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    charPortOutCharacters.setStatus("mandatory")


class _CharPortAdminOrigin_Type(Integer32):
    """Custom type charPortAdminOrigin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("dynamic", 1),
          ("local", 3),
          ("network", 2),
          ("none", 4))
    )


_CharPortAdminOrigin_Type.__name__ = "Integer32"
_CharPortAdminOrigin_Object = MibTableColumn
charPortAdminOrigin = _CharPortAdminOrigin_Object(
    (1, 3, 6, 1, 2, 1, 19, 2, 1, 15),
    _CharPortAdminOrigin_Type()
)
charPortAdminOrigin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    charPortAdminOrigin.setStatus("mandatory")
_CharPortSessionMaximum_Type = Integer32
_CharPortSessionMaximum_Object = MibTableColumn
charPortSessionMaximum = _CharPortSessionMaximum_Object(
    (1, 3, 6, 1, 2, 1, 19, 2, 1, 16),
    _CharPortSessionMaximum_Type()
)
charPortSessionMaximum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    charPortSessionMaximum.setStatus("mandatory")
_CharPortSessionNumber_Type = Gauge32
_CharPortSessionNumber_Object = MibTableColumn
charPortSessionNumber = _CharPortSessionNumber_Object(
    (1, 3, 6, 1, 2, 1, 19, 2, 1, 17),
    _CharPortSessionNumber_Type()
)
charPortSessionNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    charPortSessionNumber.setStatus("mandatory")
_CharPortSessionIndex_Type = Integer32
_CharPortSessionIndex_Object = MibTableColumn
charPortSessionIndex = _CharPortSessionIndex_Object(
    (1, 3, 6, 1, 2, 1, 19, 2, 1, 18),
    _CharPortSessionIndex_Type()
)
charPortSessionIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    charPortSessionIndex.setStatus("mandatory")
_CharSessTable_Object = MibTable
charSessTable = _CharSessTable_Object(
    (1, 3, 6, 1, 2, 1, 19, 3)
)
if mibBuilder.loadTexts:
    charSessTable.setStatus("mandatory")
_CharSessEntry_Object = MibTableRow
charSessEntry = _CharSessEntry_Object(
    (1, 3, 6, 1, 2, 1, 19, 3, 1)
)
charSessEntry.setIndexNames(
    (0, "MRVINREACH", "charSessPortIndex"),
    (0, "MRVINREACH", "charSessIndex"),
)
if mibBuilder.loadTexts:
    charSessEntry.setStatus("mandatory")
_CharSessPortIndex_Type = Integer32
_CharSessPortIndex_Object = MibTableColumn
charSessPortIndex = _CharSessPortIndex_Object(
    (1, 3, 6, 1, 2, 1, 19, 3, 1, 1),
    _CharSessPortIndex_Type()
)
charSessPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    charSessPortIndex.setStatus("mandatory")
_CharSessIndex_Type = Integer32
_CharSessIndex_Object = MibTableColumn
charSessIndex = _CharSessIndex_Object(
    (1, 3, 6, 1, 2, 1, 19, 3, 1, 2),
    _CharSessIndex_Type()
)
charSessIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    charSessIndex.setStatus("mandatory")


class _CharSessKill_Type(Integer32):
    """Custom type charSessKill based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_CharSessKill_Type.__name__ = "Integer32"
_CharSessKill_Object = MibTableColumn
charSessKill = _CharSessKill_Object(
    (1, 3, 6, 1, 2, 1, 19, 3, 1, 3),
    _CharSessKill_Type()
)
charSessKill.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    charSessKill.setStatus("mandatory")


class _CharSessState_Type(Integer32):
    """Custom type charSessState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("connected", 2),
          ("connecting", 1),
          ("disconnecting", 3))
    )


_CharSessState_Type.__name__ = "Integer32"
_CharSessState_Object = MibTableColumn
charSessState = _CharSessState_Object(
    (1, 3, 6, 1, 2, 1, 19, 3, 1, 4),
    _CharSessState_Type()
)
charSessState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    charSessState.setStatus("mandatory")
_CharSessProtocol_Type = AutonomousType
_CharSessProtocol_Object = MibTableColumn
charSessProtocol = _CharSessProtocol_Object(
    (1, 3, 6, 1, 2, 1, 19, 3, 1, 5),
    _CharSessProtocol_Type()
)
charSessProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    charSessProtocol.setStatus("mandatory")


class _CharSessOperOrigin_Type(Integer32):
    """Custom type charSessOperOrigin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("local", 3),
          ("network", 2),
          ("unknown", 1))
    )


_CharSessOperOrigin_Type.__name__ = "Integer32"
_CharSessOperOrigin_Object = MibTableColumn
charSessOperOrigin = _CharSessOperOrigin_Object(
    (1, 3, 6, 1, 2, 1, 19, 3, 1, 6),
    _CharSessOperOrigin_Type()
)
charSessOperOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    charSessOperOrigin.setStatus("mandatory")
_CharSessInCharacters_Type = Counter32
_CharSessInCharacters_Object = MibTableColumn
charSessInCharacters = _CharSessInCharacters_Object(
    (1, 3, 6, 1, 2, 1, 19, 3, 1, 7),
    _CharSessInCharacters_Type()
)
charSessInCharacters.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    charSessInCharacters.setStatus("mandatory")
_CharSessOutCharacters_Type = Counter32
_CharSessOutCharacters_Object = MibTableColumn
charSessOutCharacters = _CharSessOutCharacters_Object(
    (1, 3, 6, 1, 2, 1, 19, 3, 1, 8),
    _CharSessOutCharacters_Type()
)
charSessOutCharacters.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    charSessOutCharacters.setStatus("mandatory")
_CharSessConnectionId_Type = InstancePointer
_CharSessConnectionId_Object = MibTableColumn
charSessConnectionId = _CharSessConnectionId_Object(
    (1, 3, 6, 1, 2, 1, 19, 3, 1, 9),
    _CharSessConnectionId_Type()
)
charSessConnectionId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    charSessConnectionId.setStatus("mandatory")
_CharSessStartTime_Type = TimeTicks
_CharSessStartTime_Object = MibTableColumn
charSessStartTime = _CharSessStartTime_Object(
    (1, 3, 6, 1, 2, 1, 19, 3, 1, 10),
    _CharSessStartTime_Type()
)
charSessStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    charSessStartTime.setStatus("mandatory")
_WellKnownProtocols_ObjectIdentity = ObjectIdentity
wellKnownProtocols = _WellKnownProtocols_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 19, 4)
)
_ProtocolOther_ObjectIdentity = ObjectIdentity
protocolOther = _ProtocolOther_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 19, 4, 1)
)
_ProtocolTelnet_ObjectIdentity = ObjectIdentity
protocolTelnet = _ProtocolTelnet_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 19, 4, 2)
)
_ProtocolRlogin_ObjectIdentity = ObjectIdentity
protocolRlogin = _ProtocolRlogin_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 19, 4, 3)
)
_ProtocolLat_ObjectIdentity = ObjectIdentity
protocolLat = _ProtocolLat_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 19, 4, 4)
)
_ProtocolX29_ObjectIdentity = ObjectIdentity
protocolX29 = _ProtocolX29_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 19, 4, 5)
)
_ProtocolVtp_ObjectIdentity = ObjectIdentity
protocolVtp = _ProtocolVtp_ObjectIdentity(
    (1, 3, 6, 1, 2, 1, 19, 4, 6)
)
_Experimental_ObjectIdentity = ObjectIdentity
experimental = _Experimental_ObjectIdentity(
    (1, 3, 6, 1, 3)
)
_Private_ObjectIdentity = ObjectIdentity
private = _Private_ObjectIdentity(
    (1, 3, 6, 1, 4)
)
_Enterprises_ObjectIdentity = ObjectIdentity
enterprises = _Enterprises_ObjectIdentity(
    (1, 3, 6, 1, 4, 1)
)
_MrvInReachProductDivision_ObjectIdentity = ObjectIdentity
mrvInReachProductDivision = _MrvInReachProductDivision_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33)
)
_XSystem_ObjectIdentity = ObjectIdentity
xSystem = _XSystem_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 1)
)


class _SysIdent_Type(DisplayString):
    """Custom type sysIdent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SysIdent_Type.__name__ = "DisplayString"
_SysIdent_Object = MibScalar
sysIdent = _SysIdent_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 1),
    _SysIdent_Type()
)
sysIdent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysIdent.setStatus("mandatory")


class _SysDefineMode_Type(Integer32):
    """Custom type sysDefineMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("operAndPerm", 2),
          ("permOnly", 1))
    )


_SysDefineMode_Type.__name__ = "Integer32"
_SysDefineMode_Object = MibScalar
sysDefineMode = _SysDefineMode_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 2),
    _SysDefineMode_Type()
)
sysDefineMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysDefineMode.setStatus("mandatory")
_SysDateTime_Type = DateTime
_SysDateTime_Object = MibScalar
sysDateTime = _SysDateTime_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 3),
    _SysDateTime_Type()
)
sysDateTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysDateTime.setStatus("mandatory")


class _SysTimeZone_Type(OctetString):
    """Custom type sysTimeZone based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(2, 2),
    )


_SysTimeZone_Type.__name__ = "OctetString"
_SysTimeZone_Object = MibScalar
sysTimeZone = _SysTimeZone_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 4),
    _SysTimeZone_Type()
)
sysTimeZone.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysTimeZone.setStatus("mandatory")


class _SysLoadSoftware_Type(DisplayString):
    """Custom type sysLoadSoftware based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SysLoadSoftware_Type.__name__ = "DisplayString"
_SysLoadSoftware_Object = MibScalar
sysLoadSoftware = _SysLoadSoftware_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 5),
    _SysLoadSoftware_Type()
)
sysLoadSoftware.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysLoadSoftware.setStatus("mandatory")


class _SysDump_Type(Integer32):
    """Custom type sysDump based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SysDump_Type.__name__ = "Integer32"
_SysDump_Object = MibScalar
sysDump = _SysDump_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 6),
    _SysDump_Type()
)
sysDump.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysDump.setStatus("mandatory")


class _SysMaintenancePassword_Type(OctetString):
    """Custom type sysMaintenancePassword based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_SysMaintenancePassword_Type.__name__ = "OctetString"
_SysMaintenancePassword_Object = MibScalar
sysMaintenancePassword = _SysMaintenancePassword_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 7),
    _SysMaintenancePassword_Type()
)
sysMaintenancePassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysMaintenancePassword.setStatus("mandatory")


class _SysLocalName_Type(DisplayString):
    """Custom type sysLocalName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_SysLocalName_Type.__name__ = "DisplayString"
_SysLocalName_Object = MibScalar
sysLocalName = _SysLocalName_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 8),
    _SysLocalName_Type()
)
sysLocalName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysLocalName.setStatus("mandatory")


class _SysSoftwareVersionType_Type(Integer32):
    """Custom type sysSoftwareVersionType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("alpha", 1),
          ("beta", 2),
          ("production", 3),
          ("special", 4))
    )


_SysSoftwareVersionType_Type.__name__ = "Integer32"
_SysSoftwareVersionType_Object = MibScalar
sysSoftwareVersionType = _SysSoftwareVersionType_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 9),
    _SysSoftwareVersionType_Type()
)
sysSoftwareVersionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysSoftwareVersionType.setStatus("mandatory")


class _SysSoftwareVersion_Type(OctetString):
    """Custom type sysSoftwareVersion based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_SysSoftwareVersion_Type.__name__ = "OctetString"
_SysSoftwareVersion_Object = MibScalar
sysSoftwareVersion = _SysSoftwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 10),
    _SysSoftwareVersion_Type()
)
sysSoftwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysSoftwareVersion.setStatus("mandatory")
_SysRomVersion_Type = Integer32
_SysRomVersion_Object = MibScalar
sysRomVersion = _SysRomVersion_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 11),
    _SysRomVersion_Type()
)
sysRomVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysRomVersion.setStatus("mandatory")
_SysHardwareType_Type = HardwareType
_SysHardwareType_Object = MibScalar
sysHardwareType = _SysHardwareType_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 12),
    _SysHardwareType_Type()
)
sysHardwareType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysHardwareType.setStatus("mandatory")
_SysHardwareVersion_Type = Integer32
_SysHardwareVersion_Object = MibScalar
sysHardwareVersion = _SysHardwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 13),
    _SysHardwareVersion_Type()
)
sysHardwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysHardwareVersion.setStatus("mandatory")
_SysChassisType_Type = ChassisType
_SysChassisType_Object = MibScalar
sysChassisType = _SysChassisType_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 14),
    _SysChassisType_Type()
)
sysChassisType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysChassisType.setStatus("mandatory")
_SysChassisVersion_Type = Integer32
_SysChassisVersion_Object = MibScalar
sysChassisVersion = _SysChassisVersion_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 15),
    _SysChassisVersion_Type()
)
sysChassisVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysChassisVersion.setStatus("mandatory")


class _SysCrash_Type(Integer32):
    """Custom type sysCrash based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_SysCrash_Type.__name__ = "Integer32"
_SysCrash_Object = MibScalar
sysCrash = _SysCrash_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 16),
    _SysCrash_Type()
)
sysCrash.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysCrash.setStatus("mandatory")


class _SysInitialize_Type(Integer32):
    """Custom type sysInitialize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cancel", 4),
          ("conditionalExecute", 2),
          ("ready", 1),
          ("unconditionalExecute", 3))
    )


_SysInitialize_Type.__name__ = "Integer32"
_SysInitialize_Object = MibScalar
sysInitialize = _SysInitialize_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 17),
    _SysInitialize_Type()
)
sysInitialize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysInitialize.setStatus("mandatory")


class _SysInitializeDelay_Type(Integer32):
    """Custom type sysInitializeDelay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32767),
    )


_SysInitializeDelay_Type.__name__ = "Integer32"
_SysInitializeDelay_Object = MibScalar
sysInitializeDelay = _SysInitializeDelay_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 18),
    _SysInitializeDelay_Type()
)
sysInitializeDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysInitializeDelay.setStatus("mandatory")


class _SysZeroAll_Type(Integer32):
    """Custom type sysZeroAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_SysZeroAll_Type.__name__ = "Integer32"
_SysZeroAll_Object = MibScalar
sysZeroAll = _SysZeroAll_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 19),
    _SysZeroAll_Type()
)
sysZeroAll.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysZeroAll.setStatus("mandatory")


class _SysZeroBase_Type(Integer32):
    """Custom type sysZeroBase based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_SysZeroBase_Type.__name__ = "Integer32"
_SysZeroBase_Object = MibScalar
sysZeroBase = _SysZeroBase_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 20),
    _SysZeroBase_Type()
)
sysZeroBase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysZeroBase.setStatus("mandatory")
_SysZeroBaseTime_Type = TimeTicks
_SysZeroBaseTime_Object = MibScalar
sysZeroBaseTime = _SysZeroBaseTime_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 21),
    _SysZeroBaseTime_Type()
)
sysZeroBaseTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysZeroBaseTime.setStatus("mandatory")


class _SysLoaderName_Type(DisplayString):
    """Custom type sysLoaderName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SysLoaderName_Type.__name__ = "DisplayString"
_SysLoaderName_Object = MibScalar
sysLoaderName = _SysLoaderName_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 22),
    _SysLoaderName_Type()
)
sysLoaderName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysLoaderName.setStatus("mandatory")
_SysLoaderAddressType_Type = AddressType
_SysLoaderAddressType_Object = MibScalar
sysLoaderAddressType = _SysLoaderAddressType_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 23),
    _SysLoaderAddressType_Type()
)
sysLoaderAddressType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysLoaderAddressType.setStatus("mandatory")
_SysLoaderAddress_Type = OctetString
_SysLoaderAddress_Object = MibScalar
sysLoaderAddress = _SysLoaderAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 24),
    _SysLoaderAddress_Type()
)
sysLoaderAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysLoaderAddress.setStatus("mandatory")
_SysDumperAddressType_Type = AddressType
_SysDumperAddressType_Object = MibScalar
sysDumperAddressType = _SysDumperAddressType_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 25),
    _SysDumperAddressType_Type()
)
sysDumperAddressType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysDumperAddressType.setStatus("mandatory")
_SysDumperAddress_Type = OctetString
_SysDumperAddress_Object = MibScalar
sysDumperAddress = _SysDumperAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 26),
    _SysDumperAddress_Type()
)
sysDumperAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysDumperAddress.setStatus("mandatory")
_SysResourceLacks_Type = Counter32
_SysResourceLacks_Object = MibScalar
sysResourceLacks = _SysResourceLacks_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 27),
    _SysResourceLacks_Type()
)
sysResourceLacks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysResourceLacks.setStatus("mandatory")


class _SysChassisState_Type(Integer32):
    """Custom type sysChassisState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("fault", 3),
          ("loop", 4),
          ("noFault", 2),
          ("notApplicable", 1))
    )


_SysChassisState_Type.__name__ = "Integer32"
_SysChassisState_Object = MibScalar
sysChassisState = _SysChassisState_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 28),
    _SysChassisState_Type()
)
sysChassisState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysChassisState.setStatus("mandatory")
_SysChassisFaultTransitions_Type = Counter32
_SysChassisFaultTransitions_Object = MibScalar
sysChassisFaultTransitions = _SysChassisFaultTransitions_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 29),
    _SysChassisFaultTransitions_Type()
)
sysChassisFaultTransitions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysChassisFaultTransitions.setStatus("mandatory")
_SysResourceNumber_Type = Integer32
_SysResourceNumber_Object = MibScalar
sysResourceNumber = _SysResourceNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 30),
    _SysResourceNumber_Type()
)
sysResourceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysResourceNumber.setStatus("mandatory")
_SysFeatureNumber_Type = Integer32
_SysFeatureNumber_Object = MibScalar
sysFeatureNumber = _SysFeatureNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 31),
    _SysFeatureNumber_Type()
)
sysFeatureNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysFeatureNumber.setStatus("mandatory")
_ResTable_Object = MibTable
resTable = _ResTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 32)
)
if mibBuilder.loadTexts:
    resTable.setStatus("mandatory")
_ResEntry_Object = MibTableRow
resEntry = _ResEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 32, 1)
)
resEntry.setIndexNames(
    (0, "MRVINREACH", "resType"),
)
if mibBuilder.loadTexts:
    resEntry.setStatus("mandatory")


class _ResType_Type(Integer32):
    """Custom type resType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43)
        )
    )
    namedValues = NamedValues(
        *(("appleFilterTable", 19),
          ("appleRouteCache", 18),
          ("bridgeFilterTable", 25),
          ("bridgeInactiveFilters", 29),
          ("bridgeLearnedFilters", 28),
          ("bridgeProtocolFilters", 30),
          ("bridgeSourceFilters", 27),
          ("bridgeStaticFilters", 26),
          ("circuits", 38),
          ("cpuPercent", 1),
          ("freeMemory", 8),
          ("globalMemoryPercent", 9),
          ("interfaces", 37),
          ("ipFilterCache", 11),
          ("ipFilterTable", 15),
          ("ipFragmentTable", 33),
          ("ipIgmpTable", 39),
          ("ipMulticastTable", 40),
          ("ipPolicyTable", 14),
          ("ipRouteCache", 12),
          ("ipRouteTable", 41),
          ("ipcMessage", 6),
          ("ipxRipFilterTable", 42),
          ("ipxRipTable", 22),
          ("ipxRouteCache", 13),
          ("ipxSapFilterTable", 43),
          ("ipxSapTable", 23),
          ("latAnnouncementCompressionTable", 31),
          ("memoryPercent", 2),
          ("packetBuffer", 5),
          ("packetCompressionTable", 32),
          ("packetHeaders", 36),
          ("phivDecnetFilterTable", 17),
          ("phivDecnetPolicyTable", 16),
          ("phivDecnetRouteCache", 10),
          ("process", 3),
          ("repeaterGlobalSecurityTable", 35),
          ("repeaterPortAccessTable", 20),
          ("repeaterPortNameTable", 21),
          ("repeaterPortSecurityTable", 24),
          ("repeaterRedundancyTable", 34),
          ("textPool", 7),
          ("timer", 4))
    )


_ResType_Type.__name__ = "Integer32"
_ResType_Object = MibTableColumn
resType = _ResType_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 32, 1, 1),
    _ResType_Type()
)
resType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    resType.setStatus("mandatory")
_ResCurrent_Type = Gauge32
_ResCurrent_Object = MibTableColumn
resCurrent = _ResCurrent_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 32, 1, 2),
    _ResCurrent_Type()
)
resCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    resCurrent.setStatus("mandatory")
_ResWorst_Type = Gauge32
_ResWorst_Object = MibTableColumn
resWorst = _ResWorst_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 32, 1, 3),
    _ResWorst_Type()
)
resWorst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    resWorst.setStatus("mandatory")
_ResAdminMaximum_Type = Integer32
_ResAdminMaximum_Object = MibTableColumn
resAdminMaximum = _ResAdminMaximum_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 32, 1, 4),
    _ResAdminMaximum_Type()
)
resAdminMaximum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    resAdminMaximum.setStatus("mandatory")
_ResLacks_Type = Counter32
_ResLacks_Object = MibTableColumn
resLacks = _ResLacks_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 32, 1, 5),
    _ResLacks_Type()
)
resLacks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    resLacks.setStatus("mandatory")
_ResLackTime_Type = DateTime
_ResLackTime_Object = MibTableColumn
resLackTime = _ResLackTime_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 32, 1, 6),
    _ResLackTime_Type()
)
resLackTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    resLackTime.setStatus("mandatory")
_ResOperMaximum_Type = Integer32
_ResOperMaximum_Object = MibTableColumn
resOperMaximum = _ResOperMaximum_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 32, 1, 7),
    _ResOperMaximum_Type()
)
resOperMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    resOperMaximum.setStatus("mandatory")
_FeatTable_Object = MibTable
featTable = _FeatTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 33)
)
if mibBuilder.loadTexts:
    featTable.setStatus("mandatory")
_FeatEntry_Object = MibTableRow
featEntry = _FeatEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 33, 1)
)
featEntry.setIndexNames(
    (0, "MRVINREACH", "featType"),
)
if mibBuilder.loadTexts:
    featEntry.setStatus("mandatory")


class _FeatType_Type(Integer32):
    """Custom type featType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39)
        )
    )
    namedValues = NamedValues(
        *(("allPorts", 15),
          ("apd", 30),
          ("arap", 25),
          ("changeEthernetAddress", 20),
          ("enviromentalManager", 36),
          ("eventLog", 8),
          ("expanded800", 21),
          ("fingerDaemon", 26),
          ("frameRelay", 18),
          ("help", 1),
          ("internetSecurity", 9),
          ("ipFiltering", 33),
          ("ipMulticastSpecial", 19),
          ("ipxFiltering", 32),
          ("ipxRouting", 31),
          ("kerberos", 12),
          ("kerberos5", 34),
          ("lat", 7),
          ("lpDaemon", 22),
          ("menu", 5),
          ("multisessions", 6),
          ("ppp", 23),
          ("radius", 35),
          ("rlogin", 14),
          ("routeDaemon", 27),
          ("rwhoDaemon", 28),
          ("scriptServer", 11),
          ("securID", 29),
          ("slip", 10),
          ("snmp", 2),
          ("ssh", 38),
          ("telnet", 13),
          ("terminalServer", 37),
          ("tl1", 39),
          ("tn3270", 4),
          ("unixCommands", 24),
          ("x25", 17),
          ("xprinter", 16),
          ("xremote", 3))
    )


_FeatType_Type.__name__ = "Integer32"
_FeatType_Object = MibTableColumn
featType = _FeatType_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 33, 1, 1),
    _FeatType_Type()
)
featType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    featType.setStatus("mandatory")


class _FeatStatus_Type(Integer32):
    """Custom type featStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2),
          ("locked", 3))
    )


_FeatStatus_Type.__name__ = "Integer32"
_FeatStatus_Object = MibTableColumn
featStatus = _FeatStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 33, 1, 2),
    _FeatStatus_Type()
)
featStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    featStatus.setStatus("mandatory")


class _FeatKey_Type(DisplayString):
    """Custom type featKey based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 8),
    )


_FeatKey_Type.__name__ = "DisplayString"
_FeatKey_Object = MibTableColumn
featKey = _FeatKey_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 33, 1, 3),
    _FeatKey_Type()
)
featKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    featKey.setStatus("mandatory")
_XBootControl_ObjectIdentity = ObjectIdentity
xBootControl = _XBootControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 1, 34)
)


class _BootControlLoadInternetFile_Type(DisplayString):
    """Custom type bootControlLoadInternetFile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_BootControlLoadInternetFile_Type.__name__ = "DisplayString"
_BootControlLoadInternetFile_Object = MibScalar
bootControlLoadInternetFile = _BootControlLoadInternetFile_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 34, 1),
    _BootControlLoadInternetFile_Type()
)
bootControlLoadInternetFile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootControlLoadInternetFile.setStatus("deprecated")
_BootControlLoadInternetServer_Type = IpAddress
_BootControlLoadInternetServer_Object = MibScalar
bootControlLoadInternetServer = _BootControlLoadInternetServer_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 34, 2),
    _BootControlLoadInternetServer_Type()
)
bootControlLoadInternetServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootControlLoadInternetServer.setStatus("deprecated")
_BootControlLoadInternetGateway_Type = IpAddress
_BootControlLoadInternetGateway_Object = MibScalar
bootControlLoadInternetGateway = _BootControlLoadInternetGateway_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 34, 3),
    _BootControlLoadInternetGateway_Type()
)
bootControlLoadInternetGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootControlLoadInternetGateway.setStatus("deprecated")


class _BootControlLoadBootpTftp_Type(Integer32):
    """Custom type bootControlLoadBootpTftp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootControlLoadBootpTftp_Type.__name__ = "Integer32"
_BootControlLoadBootpTftp_Object = MibScalar
bootControlLoadBootpTftp = _BootControlLoadBootpTftp_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 34, 4),
    _BootControlLoadBootpTftp_Type()
)
bootControlLoadBootpTftp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootControlLoadBootpTftp.setStatus("deprecated")


class _BootControlLoadTftpDirect_Type(Integer32):
    """Custom type bootControlLoadTftpDirect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootControlLoadTftpDirect_Type.__name__ = "Integer32"
_BootControlLoadTftpDirect_Object = MibScalar
bootControlLoadTftpDirect = _BootControlLoadTftpDirect_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 34, 5),
    _BootControlLoadTftpDirect_Type()
)
bootControlLoadTftpDirect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootControlLoadTftpDirect.setStatus("deprecated")


class _BootControlLoadLocal_Type(Integer32):
    """Custom type bootControlLoadLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootControlLoadLocal_Type.__name__ = "Integer32"
_BootControlLoadLocal_Object = MibScalar
bootControlLoadLocal = _BootControlLoadLocal_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 34, 6),
    _BootControlLoadLocal_Type()
)
bootControlLoadLocal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootControlLoadLocal.setStatus("deprecated")


class _BootControlLoadMop_Type(Integer32):
    """Custom type bootControlLoadMop based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootControlLoadMop_Type.__name__ = "Integer32"
_BootControlLoadMop_Object = MibScalar
bootControlLoadMop = _BootControlLoadMop_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 34, 7),
    _BootControlLoadMop_Type()
)
bootControlLoadMop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootControlLoadMop.setStatus("deprecated")


class _BootControlLoadProprietary_Type(Integer32):
    """Custom type bootControlLoadProprietary based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootControlLoadProprietary_Type.__name__ = "Integer32"
_BootControlLoadProprietary_Object = MibScalar
bootControlLoadProprietary = _BootControlLoadProprietary_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 34, 8),
    _BootControlLoadProprietary_Type()
)
bootControlLoadProprietary.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootControlLoadProprietary.setStatus("deprecated")


class _BootControlLoadRarpTftp_Type(Integer32):
    """Custom type bootControlLoadRarpTftp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootControlLoadRarpTftp_Type.__name__ = "Integer32"
_BootControlLoadRarpTftp_Object = MibScalar
bootControlLoadRarpTftp = _BootControlLoadRarpTftp_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 34, 9),
    _BootControlLoadRarpTftp_Type()
)
bootControlLoadRarpTftp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootControlLoadRarpTftp.setStatus("deprecated")


class _BootControlDumpBootpTftp_Type(Integer32):
    """Custom type bootControlDumpBootpTftp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootControlDumpBootpTftp_Type.__name__ = "Integer32"
_BootControlDumpBootpTftp_Object = MibScalar
bootControlDumpBootpTftp = _BootControlDumpBootpTftp_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 34, 10),
    _BootControlDumpBootpTftp_Type()
)
bootControlDumpBootpTftp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootControlDumpBootpTftp.setStatus("deprecated")


class _BootControlDumpLocal_Type(Integer32):
    """Custom type bootControlDumpLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootControlDumpLocal_Type.__name__ = "Integer32"
_BootControlDumpLocal_Object = MibScalar
bootControlDumpLocal = _BootControlDumpLocal_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 34, 11),
    _BootControlDumpLocal_Type()
)
bootControlDumpLocal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootControlDumpLocal.setStatus("deprecated")


class _BootControlDumpMop_Type(Integer32):
    """Custom type bootControlDumpMop based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootControlDumpMop_Type.__name__ = "Integer32"
_BootControlDumpMop_Object = MibScalar
bootControlDumpMop = _BootControlDumpMop_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 34, 12),
    _BootControlDumpMop_Type()
)
bootControlDumpMop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootControlDumpMop.setStatus("deprecated")


class _BootControlDumpProprietary_Type(Integer32):
    """Custom type bootControlDumpProprietary based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootControlDumpProprietary_Type.__name__ = "Integer32"
_BootControlDumpProprietary_Object = MibScalar
bootControlDumpProprietary = _BootControlDumpProprietary_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 34, 13),
    _BootControlDumpProprietary_Type()
)
bootControlDumpProprietary.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootControlDumpProprietary.setStatus("deprecated")


class _BootControlDumpRarpTftp_Type(Integer32):
    """Custom type bootControlDumpRarpTftp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootControlDumpRarpTftp_Type.__name__ = "Integer32"
_BootControlDumpRarpTftp_Object = MibScalar
bootControlDumpRarpTftp = _BootControlDumpRarpTftp_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 34, 14),
    _BootControlDumpRarpTftp_Type()
)
bootControlDumpRarpTftp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootControlDumpRarpTftp.setStatus("deprecated")


class _BootControlParamBootpTftp_Type(Integer32):
    """Custom type bootControlParamBootpTftp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootControlParamBootpTftp_Type.__name__ = "Integer32"
_BootControlParamBootpTftp_Object = MibScalar
bootControlParamBootpTftp = _BootControlParamBootpTftp_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 34, 15),
    _BootControlParamBootpTftp_Type()
)
bootControlParamBootpTftp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootControlParamBootpTftp.setStatus("deprecated")


class _BootControlParamLocal_Type(Integer32):
    """Custom type bootControlParamLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootControlParamLocal_Type.__name__ = "Integer32"
_BootControlParamLocal_Object = MibScalar
bootControlParamLocal = _BootControlParamLocal_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 34, 16),
    _BootControlParamLocal_Type()
)
bootControlParamLocal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootControlParamLocal.setStatus("deprecated")


class _BootControlParamMop_Type(Integer32):
    """Custom type bootControlParamMop based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootControlParamMop_Type.__name__ = "Integer32"
_BootControlParamMop_Object = MibScalar
bootControlParamMop = _BootControlParamMop_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 34, 17),
    _BootControlParamMop_Type()
)
bootControlParamMop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootControlParamMop.setStatus("deprecated")


class _BootControlParamProprietary_Type(Integer32):
    """Custom type bootControlParamProprietary based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootControlParamProprietary_Type.__name__ = "Integer32"
_BootControlParamProprietary_Object = MibScalar
bootControlParamProprietary = _BootControlParamProprietary_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 34, 18),
    _BootControlParamProprietary_Type()
)
bootControlParamProprietary.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootControlParamProprietary.setStatus("deprecated")


class _BootControlParamRarpTftp_Type(Integer32):
    """Custom type bootControlParamRarpTftp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootControlParamRarpTftp_Type.__name__ = "Integer32"
_BootControlParamRarpTftp_Object = MibScalar
bootControlParamRarpTftp = _BootControlParamRarpTftp_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 34, 19),
    _BootControlParamRarpTftp_Type()
)
bootControlParamRarpTftp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootControlParamRarpTftp.setStatus("deprecated")
_SysInstalledMemory_Type = Gauge32
_SysInstalledMemory_Object = MibScalar
sysInstalledMemory = _SysInstalledMemory_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 35),
    _SysInstalledMemory_Type()
)
sysInstalledMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInstalledMemory.setStatus("mandatory")


class _SysTemperatureLevel_Type(Integer32):
    """Custom type sysTemperatureLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("high", 3),
          ("normal", 2),
          ("unknown", 1))
    )


_SysTemperatureLevel_Type.__name__ = "Integer32"
_SysTemperatureLevel_Object = MibScalar
sysTemperatureLevel = _SysTemperatureLevel_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 36),
    _SysTemperatureLevel_Type()
)
sysTemperatureLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysTemperatureLevel.setStatus("mandatory")
_BootRecordTable_Object = MibTable
bootRecordTable = _BootRecordTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37)
)
if mibBuilder.loadTexts:
    bootRecordTable.setStatus("mandatory")
_BootRecordEntry_Object = MibTableRow
bootRecordEntry = _BootRecordEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1)
)
bootRecordEntry.setIndexNames(
    (0, "MRVINREACH", "bootRecordIndex"),
)
if mibBuilder.loadTexts:
    bootRecordEntry.setStatus("mandatory")
_BootRecordIndex_Type = Integer32
_BootRecordIndex_Object = MibTableColumn
bootRecordIndex = _BootRecordIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 1),
    _BootRecordIndex_Type()
)
bootRecordIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bootRecordIndex.setStatus("mandatory")


class _BootRecordLoadInternetFile_Type(DisplayString):
    """Custom type bootRecordLoadInternetFile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_BootRecordLoadInternetFile_Type.__name__ = "DisplayString"
_BootRecordLoadInternetFile_Object = MibTableColumn
bootRecordLoadInternetFile = _BootRecordLoadInternetFile_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 2),
    _BootRecordLoadInternetFile_Type()
)
bootRecordLoadInternetFile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordLoadInternetFile.setStatus("mandatory")
_BootRecordLoadInternetServer_Type = IpAddress
_BootRecordLoadInternetServer_Object = MibTableColumn
bootRecordLoadInternetServer = _BootRecordLoadInternetServer_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 3),
    _BootRecordLoadInternetServer_Type()
)
bootRecordLoadInternetServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordLoadInternetServer.setStatus("mandatory")
_BootRecordLoadInternetGateway_Type = IpAddress
_BootRecordLoadInternetGateway_Object = MibTableColumn
bootRecordLoadInternetGateway = _BootRecordLoadInternetGateway_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 4),
    _BootRecordLoadInternetGateway_Type()
)
bootRecordLoadInternetGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordLoadInternetGateway.setStatus("mandatory")


class _BootRecordLoadBootpTftp_Type(Integer32):
    """Custom type bootRecordLoadBootpTftp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootRecordLoadBootpTftp_Type.__name__ = "Integer32"
_BootRecordLoadBootpTftp_Object = MibTableColumn
bootRecordLoadBootpTftp = _BootRecordLoadBootpTftp_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 5),
    _BootRecordLoadBootpTftp_Type()
)
bootRecordLoadBootpTftp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordLoadBootpTftp.setStatus("mandatory")


class _BootRecordLoadTftpDirect_Type(Integer32):
    """Custom type bootRecordLoadTftpDirect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootRecordLoadTftpDirect_Type.__name__ = "Integer32"
_BootRecordLoadTftpDirect_Object = MibTableColumn
bootRecordLoadTftpDirect = _BootRecordLoadTftpDirect_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 6),
    _BootRecordLoadTftpDirect_Type()
)
bootRecordLoadTftpDirect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordLoadTftpDirect.setStatus("mandatory")


class _BootRecordLoadLocal_Type(Integer32):
    """Custom type bootRecordLoadLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootRecordLoadLocal_Type.__name__ = "Integer32"
_BootRecordLoadLocal_Object = MibTableColumn
bootRecordLoadLocal = _BootRecordLoadLocal_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 7),
    _BootRecordLoadLocal_Type()
)
bootRecordLoadLocal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordLoadLocal.setStatus("mandatory")


class _BootRecordLoadMop_Type(Integer32):
    """Custom type bootRecordLoadMop based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootRecordLoadMop_Type.__name__ = "Integer32"
_BootRecordLoadMop_Object = MibTableColumn
bootRecordLoadMop = _BootRecordLoadMop_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 8),
    _BootRecordLoadMop_Type()
)
bootRecordLoadMop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordLoadMop.setStatus("mandatory")


class _BootRecordLoadProprietary_Type(Integer32):
    """Custom type bootRecordLoadProprietary based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootRecordLoadProprietary_Type.__name__ = "Integer32"
_BootRecordLoadProprietary_Object = MibTableColumn
bootRecordLoadProprietary = _BootRecordLoadProprietary_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 9),
    _BootRecordLoadProprietary_Type()
)
bootRecordLoadProprietary.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordLoadProprietary.setStatus("mandatory")


class _BootRecordLoadRarpTftp_Type(Integer32):
    """Custom type bootRecordLoadRarpTftp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootRecordLoadRarpTftp_Type.__name__ = "Integer32"
_BootRecordLoadRarpTftp_Object = MibTableColumn
bootRecordLoadRarpTftp = _BootRecordLoadRarpTftp_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 10),
    _BootRecordLoadRarpTftp_Type()
)
bootRecordLoadRarpTftp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordLoadRarpTftp.setStatus("mandatory")


class _BootRecordDumpBootpTftp_Type(Integer32):
    """Custom type bootRecordDumpBootpTftp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootRecordDumpBootpTftp_Type.__name__ = "Integer32"
_BootRecordDumpBootpTftp_Object = MibTableColumn
bootRecordDumpBootpTftp = _BootRecordDumpBootpTftp_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 11),
    _BootRecordDumpBootpTftp_Type()
)
bootRecordDumpBootpTftp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordDumpBootpTftp.setStatus("mandatory")


class _BootRecordDumpLocal_Type(Integer32):
    """Custom type bootRecordDumpLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootRecordDumpLocal_Type.__name__ = "Integer32"
_BootRecordDumpLocal_Object = MibTableColumn
bootRecordDumpLocal = _BootRecordDumpLocal_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 12),
    _BootRecordDumpLocal_Type()
)
bootRecordDumpLocal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordDumpLocal.setStatus("mandatory")


class _BootRecordDumpMop_Type(Integer32):
    """Custom type bootRecordDumpMop based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootRecordDumpMop_Type.__name__ = "Integer32"
_BootRecordDumpMop_Object = MibTableColumn
bootRecordDumpMop = _BootRecordDumpMop_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 13),
    _BootRecordDumpMop_Type()
)
bootRecordDumpMop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordDumpMop.setStatus("mandatory")


class _BootRecordDumpProprietary_Type(Integer32):
    """Custom type bootRecordDumpProprietary based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootRecordDumpProprietary_Type.__name__ = "Integer32"
_BootRecordDumpProprietary_Object = MibTableColumn
bootRecordDumpProprietary = _BootRecordDumpProprietary_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 14),
    _BootRecordDumpProprietary_Type()
)
bootRecordDumpProprietary.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordDumpProprietary.setStatus("mandatory")


class _BootRecordDumpRarpTftp_Type(Integer32):
    """Custom type bootRecordDumpRarpTftp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootRecordDumpRarpTftp_Type.__name__ = "Integer32"
_BootRecordDumpRarpTftp_Object = MibTableColumn
bootRecordDumpRarpTftp = _BootRecordDumpRarpTftp_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 15),
    _BootRecordDumpRarpTftp_Type()
)
bootRecordDumpRarpTftp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordDumpRarpTftp.setStatus("mandatory")


class _BootRecordParamBootpTftp_Type(Integer32):
    """Custom type bootRecordParamBootpTftp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootRecordParamBootpTftp_Type.__name__ = "Integer32"
_BootRecordParamBootpTftp_Object = MibTableColumn
bootRecordParamBootpTftp = _BootRecordParamBootpTftp_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 16),
    _BootRecordParamBootpTftp_Type()
)
bootRecordParamBootpTftp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordParamBootpTftp.setStatus("mandatory")


class _BootRecordParamLocal_Type(Integer32):
    """Custom type bootRecordParamLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootRecordParamLocal_Type.__name__ = "Integer32"
_BootRecordParamLocal_Object = MibTableColumn
bootRecordParamLocal = _BootRecordParamLocal_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 17),
    _BootRecordParamLocal_Type()
)
bootRecordParamLocal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordParamLocal.setStatus("mandatory")


class _BootRecordParamMop_Type(Integer32):
    """Custom type bootRecordParamMop based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootRecordParamMop_Type.__name__ = "Integer32"
_BootRecordParamMop_Object = MibTableColumn
bootRecordParamMop = _BootRecordParamMop_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 18),
    _BootRecordParamMop_Type()
)
bootRecordParamMop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordParamMop.setStatus("mandatory")


class _BootRecordParamProprietary_Type(Integer32):
    """Custom type bootRecordParamProprietary based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootRecordParamProprietary_Type.__name__ = "Integer32"
_BootRecordParamProprietary_Object = MibTableColumn
bootRecordParamProprietary = _BootRecordParamProprietary_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 19),
    _BootRecordParamProprietary_Type()
)
bootRecordParamProprietary.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordParamProprietary.setStatus("mandatory")


class _BootRecordParamRarpTftp_Type(Integer32):
    """Custom type bootRecordParamRarpTftp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootRecordParamRarpTftp_Type.__name__ = "Integer32"
_BootRecordParamRarpTftp_Object = MibTableColumn
bootRecordParamRarpTftp = _BootRecordParamRarpTftp_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 20),
    _BootRecordParamRarpTftp_Type()
)
bootRecordParamRarpTftp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordParamRarpTftp.setStatus("mandatory")


class _BootRecordStatus_Type(Integer32):
    """Custom type bootRecordStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootRecordStatus_Type.__name__ = "Integer32"
_BootRecordStatus_Object = MibTableColumn
bootRecordStatus = _BootRecordStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 21),
    _BootRecordStatus_Type()
)
bootRecordStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordStatus.setStatus("mandatory")


class _BootRecordMopFile_Type(DisplayString):
    """Custom type bootRecordMopFile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_BootRecordMopFile_Type.__name__ = "DisplayString"
_BootRecordMopFile_Object = MibTableColumn
bootRecordMopFile = _BootRecordMopFile_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 22),
    _BootRecordMopFile_Type()
)
bootRecordMopFile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordMopFile.setStatus("mandatory")
_BootRecordInternetAddress_Type = IpAddress
_BootRecordInternetAddress_Object = MibTableColumn
bootRecordInternetAddress = _BootRecordInternetAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 23),
    _BootRecordInternetAddress_Type()
)
bootRecordInternetAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordInternetAddress.setStatus("mandatory")


class _BootRecordParamTftpDirect_Type(Integer32):
    """Custom type bootRecordParamTftpDirect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BootRecordParamTftpDirect_Type.__name__ = "Integer32"
_BootRecordParamTftpDirect_Object = MibTableColumn
bootRecordParamTftpDirect = _BootRecordParamTftpDirect_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 24),
    _BootRecordParamTftpDirect_Type()
)
bootRecordParamTftpDirect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordParamTftpDirect.setStatus("mandatory")


class _BootRecordInternetDelimiter_Type(DisplayString):
    """Custom type bootRecordInternetDelimiter based on DisplayString"""
    defaultHexValue = "00"

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1),
    )


_BootRecordInternetDelimiter_Type.__name__ = "DisplayString"
_BootRecordInternetDelimiter_Object = MibTableColumn
bootRecordInternetDelimiter = _BootRecordInternetDelimiter_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 37, 1, 25),
    _BootRecordInternetDelimiter_Type()
)
bootRecordInternetDelimiter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootRecordInternetDelimiter.setStatus("mandatory")


class _SysLastAgentError_Type(Integer32):
    """Custom type sysLastAgentError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("badClient", 10),
          ("badCommunity", 7),
          ("badType", 9),
          ("badValue", 4),
          ("badVersion", 8),
          ("genErr", 6),
          ("noError", 1),
          ("noSuchName", 3),
          ("readOnly", 5),
          ("tooBig", 2))
    )


_SysLastAgentError_Type.__name__ = "Integer32"
_SysLastAgentError_Object = MibScalar
sysLastAgentError = _SysLastAgentError_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 38),
    _SysLastAgentError_Type()
)
sysLastAgentError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysLastAgentError.setStatus("mandatory")


class _SysRcpMulticast_Type(Integer32):
    """Custom type sysRcpMulticast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SysRcpMulticast_Type.__name__ = "Integer32"
_SysRcpMulticast_Object = MibScalar
sysRcpMulticast = _SysRcpMulticast_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 40),
    _SysRcpMulticast_Type()
)
sysRcpMulticast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysRcpMulticast.setStatus("mandatory")
_SysTimeServerAddress_Type = TypedAddress
_SysTimeServerAddress_Object = MibScalar
sysTimeServerAddress = _SysTimeServerAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 41),
    _SysTimeServerAddress_Type()
)
sysTimeServerAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysTimeServerAddress.setStatus("mandatory")
_SysTimeServerConfiguredAddress_Type = TypedAddress
_SysTimeServerConfiguredAddress_Object = MibScalar
sysTimeServerConfiguredAddress = _SysTimeServerConfiguredAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 46),
    _SysTimeServerConfiguredAddress_Type()
)
sysTimeServerConfiguredAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysTimeServerConfiguredAddress.setStatus("mandatory")


class _SysTimeServerConfiguredStatus_Type(Integer32):
    """Custom type sysTimeServerConfiguredStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2),
          ("required", 3))
    )


_SysTimeServerConfiguredStatus_Type.__name__ = "Integer32"
_SysTimeServerConfiguredStatus_Object = MibScalar
sysTimeServerConfiguredStatus = _SysTimeServerConfiguredStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 47),
    _SysTimeServerConfiguredStatus_Type()
)
sysTimeServerConfiguredStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysTimeServerConfiguredStatus.setStatus("mandatory")


class _SysBootRecordOverrideDefinedAddress_Type(Integer32):
    """Custom type sysBootRecordOverrideDefinedAddress based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SysBootRecordOverrideDefinedAddress_Type.__name__ = "Integer32"
_SysBootRecordOverrideDefinedAddress_Object = MibScalar
sysBootRecordOverrideDefinedAddress = _SysBootRecordOverrideDefinedAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 48),
    _SysBootRecordOverrideDefinedAddress_Type()
)
sysBootRecordOverrideDefinedAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysBootRecordOverrideDefinedAddress.setStatus("mandatory")


class _SysBootRecordMessageEnable_Type(Integer32):
    """Custom type sysBootRecordMessageEnable based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SysBootRecordMessageEnable_Type.__name__ = "Integer32"
_SysBootRecordMessageEnable_Object = MibScalar
sysBootRecordMessageEnable = _SysBootRecordMessageEnable_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 49),
    _SysBootRecordMessageEnable_Type()
)
sysBootRecordMessageEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysBootRecordMessageEnable.setStatus("mandatory")


class _SysBootRecordParamDefaults_Type(Integer32):
    """Custom type sysBootRecordParamDefaults based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SysBootRecordParamDefaults_Type.__name__ = "Integer32"
_SysBootRecordParamDefaults_Object = MibScalar
sysBootRecordParamDefaults = _SysBootRecordParamDefaults_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 50),
    _SysBootRecordParamDefaults_Type()
)
sysBootRecordParamDefaults.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysBootRecordParamDefaults.setStatus("mandatory")


class _SysLoginAuthFailureTrapType_Type(Integer32):
    """Custom type sysLoginAuthFailureTrapType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("chap", 4),
          ("kerberos", 5),
          ("limitedPrivilegedPassword", 9),
          ("loginPassword", 2),
          ("none", 1),
          ("pap", 3),
          ("privilegedPassword", 8),
          ("radius", 7),
          ("securId", 6))
    )


_SysLoginAuthFailureTrapType_Type.__name__ = "Integer32"
_SysLoginAuthFailureTrapType_Object = MibScalar
sysLoginAuthFailureTrapType = _SysLoginAuthFailureTrapType_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 78),
    _SysLoginAuthFailureTrapType_Type()
)
sysLoginAuthFailureTrapType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysLoginAuthFailureTrapType.setStatus("mandatory")


class _SysLoginAuthTrapIdentity_Type(DisplayString):
    """Custom type sysLoginAuthTrapIdentity based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SysLoginAuthTrapIdentity_Type.__name__ = "DisplayString"
_SysLoginAuthTrapIdentity_Object = MibScalar
sysLoginAuthTrapIdentity = _SysLoginAuthTrapIdentity_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 81),
    _SysLoginAuthTrapIdentity_Type()
)
sysLoginAuthTrapIdentity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysLoginAuthTrapIdentity.setStatus("mandatory")


class _SysLocalScriptServer_Type(Integer32):
    """Custom type sysLocalScriptServer based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SysLocalScriptServer_Type.__name__ = "Integer32"
_SysLocalScriptServer_Object = MibScalar
sysLocalScriptServer = _SysLocalScriptServer_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 82),
    _SysLocalScriptServer_Type()
)
sysLocalScriptServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysLocalScriptServer.setStatus("mandatory")


class _SysInReachManagementSecurityStatus_Type(Integer32):
    """Custom type sysInReachManagementSecurityStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SysInReachManagementSecurityStatus_Type.__name__ = "Integer32"
_SysInReachManagementSecurityStatus_Object = MibScalar
sysInReachManagementSecurityStatus = _SysInReachManagementSecurityStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 83),
    _SysInReachManagementSecurityStatus_Type()
)
sysInReachManagementSecurityStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInReachManagementSecurityStatus.setStatus("mandatory")
_SysProductName_Type = DisplayString
_SysProductName_Object = MibScalar
sysProductName = _SysProductName_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 84),
    _SysProductName_Type()
)
sysProductName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysProductName.setStatus("mandatory")


class _SysModemPresent_Type(Integer32):
    """Custom type sysModemPresent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("modem", 2),
          ("noModem", 1))
    )


_SysModemPresent_Type.__name__ = "Integer32"
_SysModemPresent_Object = MibScalar
sysModemPresent = _SysModemPresent_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 85),
    _SysModemPresent_Type()
)
sysModemPresent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysModemPresent.setStatus("mandatory")


class _SysCauseAction_Type(Integer32):
    """Custom type sysCauseAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SysCauseAction_Type.__name__ = "Integer32"
_SysCauseAction_Object = MibScalar
sysCauseAction = _SysCauseAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 86),
    _SysCauseAction_Type()
)
sysCauseAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysCauseAction.setStatus("mandatory")


class _SysWebServerConfigAdminStatus_Type(Integer32):
    """Custom type sysWebServerConfigAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SysWebServerConfigAdminStatus_Type.__name__ = "Integer32"
_SysWebServerConfigAdminStatus_Object = MibScalar
sysWebServerConfigAdminStatus = _SysWebServerConfigAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 87),
    _SysWebServerConfigAdminStatus_Type()
)
sysWebServerConfigAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysWebServerConfigAdminStatus.setStatus("mandatory")


class _SysTl1SourceIdentifier_Type(DisplayString):
    """Custom type sysTl1SourceIdentifier based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_SysTl1SourceIdentifier_Type.__name__ = "DisplayString"
_SysTl1SourceIdentifier_Object = MibScalar
sysTl1SourceIdentifier = _SysTl1SourceIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 88),
    _SysTl1SourceIdentifier_Type()
)
sysTl1SourceIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysTl1SourceIdentifier.setStatus("mandatory")


class _SysInitializeDelayParameter_Type(Integer32):
    """Custom type sysInitializeDelayParameter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_SysInitializeDelayParameter_Type.__name__ = "Integer32"
_SysInitializeDelayParameter_Object = MibScalar
sysInitializeDelayParameter = _SysInitializeDelayParameter_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 89),
    _SysInitializeDelayParameter_Type()
)
sysInitializeDelayParameter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysInitializeDelayParameter.setStatus("mandatory")


class _SysTimeProtocol_Type(Integer32):
    """Custom type sysTimeProtocol based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SysTimeProtocol_Type.__name__ = "Integer32"
_SysTimeProtocol_Object = MibScalar
sysTimeProtocol = _SysTimeProtocol_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 90),
    _SysTimeProtocol_Type()
)
sysTimeProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysTimeProtocol.setStatus("mandatory")


class _SysTimeBroadcast_Type(Integer32):
    """Custom type sysTimeBroadcast based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SysTimeBroadcast_Type.__name__ = "Integer32"
_SysTimeBroadcast_Object = MibScalar
sysTimeBroadcast = _SysTimeBroadcast_Object(
    (1, 3, 6, 1, 4, 1, 33, 1, 91),
    _SysTimeBroadcast_Type()
)
sysTimeBroadcast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sysTimeBroadcast.setStatus("mandatory")
_CharacterDep_ObjectIdentity = ObjectIdentity
characterDep = _CharacterDep_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 2)
)
_XLat_ObjectIdentity = ObjectIdentity
xLat = _XLat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 3)
)


class _LatAnnounceServices_Type(Integer32):
    """Custom type latAnnounceServices based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_LatAnnounceServices_Type.__name__ = "Integer32"
_LatAnnounceServices_Object = MibScalar
latAnnounceServices = _LatAnnounceServices_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 1),
    _LatAnnounceServices_Type()
)
latAnnounceServices.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latAnnounceServices.setStatus("mandatory")


class _LatCircuitTimer_Type(Integer32):
    """Custom type latCircuitTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 200),
    )


_LatCircuitTimer_Type.__name__ = "Integer32"
_LatCircuitTimer_Object = MibScalar
latCircuitTimer = _LatCircuitTimer_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 2),
    _LatCircuitTimer_Type()
)
latCircuitTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latCircuitTimer.setStatus("mandatory")


class _LatIdentificationLengthLimit_Type(Integer32):
    """Custom type latIdentificationLengthLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_LatIdentificationLengthLimit_Type.__name__ = "Integer32"
_LatIdentificationLengthLimit_Object = MibScalar
latIdentificationLengthLimit = _LatIdentificationLengthLimit_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 3),
    _LatIdentificationLengthLimit_Type()
)
latIdentificationLengthLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latIdentificationLengthLimit.setStatus("mandatory")


class _LatKeepaliveTimer_Type(Integer32):
    """Custom type latKeepaliveTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 180),
    )


_LatKeepaliveTimer_Type.__name__ = "Integer32"
_LatKeepaliveTimer_Object = MibScalar
latKeepaliveTimer = _LatKeepaliveTimer_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 4),
    _LatKeepaliveTimer_Type()
)
latKeepaliveTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latKeepaliveTimer.setStatus("mandatory")


class _LatMulticastTimer_Type(Integer32):
    """Custom type latMulticastTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 180),
    )


_LatMulticastTimer_Type.__name__ = "Integer32"
_LatMulticastTimer_Object = MibScalar
latMulticastTimer = _LatMulticastTimer_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 5),
    _LatMulticastTimer_Type()
)
latMulticastTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latMulticastTimer.setStatus("mandatory")


class _LatNodeLimit_Type(Integer32):
    """Custom type latNodeLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_LatNodeLimit_Type.__name__ = "Integer32"
_LatNodeLimit_Object = MibScalar
latNodeLimit = _LatNodeLimit_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 6),
    _LatNodeLimit_Type()
)
latNodeLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latNodeLimit.setStatus("mandatory")


class _LatNumber_Type(Integer32):
    """Custom type latNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32767),
    )


_LatNumber_Type.__name__ = "Integer32"
_LatNumber_Object = MibScalar
latNumber = _LatNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 7),
    _LatNumber_Type()
)
latNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latNumber.setStatus("mandatory")


class _LatRetransmitLimit_Type(Integer32):
    """Custom type latRetransmitLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(4, 120),
    )


_LatRetransmitLimit_Type.__name__ = "Integer32"
_LatRetransmitLimit_Object = MibScalar
latRetransmitLimit = _LatRetransmitLimit_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 8),
    _LatRetransmitLimit_Type()
)
latRetransmitLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latRetransmitLimit.setStatus("mandatory")


class _LatLocalServiceGroups_Type(OctetString):
    """Custom type latLocalServiceGroups based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(32, 32),
    )


_LatLocalServiceGroups_Type.__name__ = "OctetString"
_LatLocalServiceGroups_Object = MibScalar
latLocalServiceGroups = _LatLocalServiceGroups_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 9),
    _LatLocalServiceGroups_Type()
)
latLocalServiceGroups.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latLocalServiceGroups.setStatus("mandatory")


class _LatGroupPurge_Type(Integer32):
    """Custom type latGroupPurge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_LatGroupPurge_Type.__name__ = "Integer32"
_LatGroupPurge_Object = MibScalar
latGroupPurge = _LatGroupPurge_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 10),
    _LatGroupPurge_Type()
)
latGroupPurge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latGroupPurge.setStatus("mandatory")


class _LatNodePurge_Type(Integer32):
    """Custom type latNodePurge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_LatNodePurge_Type.__name__ = "Integer32"
_LatNodePurge_Object = MibScalar
latNodePurge = _LatNodePurge_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 11),
    _LatNodePurge_Type()
)
latNodePurge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latNodePurge.setStatus("mandatory")
_LatNodesRejected_Type = Counter32
_LatNodesRejected_Object = MibScalar
latNodesRejected = _LatNodesRejected_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 12),
    _LatNodesRejected_Type()
)
latNodesRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodesRejected.setStatus("mandatory")
_LatInMessages_Type = Counter32
_LatInMessages_Object = MibScalar
latInMessages = _LatInMessages_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 13),
    _LatInMessages_Type()
)
latInMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latInMessages.setStatus("mandatory")
_LatOutMessages_Type = Counter32
_LatOutMessages_Object = MibScalar
latOutMessages = _LatOutMessages_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 14),
    _LatOutMessages_Type()
)
latOutMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latOutMessages.setStatus("mandatory")
_LatInSessionsAccepted_Type = Counter32
_LatInSessionsAccepted_Object = MibScalar
latInSessionsAccepted = _LatInSessionsAccepted_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 15),
    _LatInSessionsAccepted_Type()
)
latInSessionsAccepted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latInSessionsAccepted.setStatus("mandatory")
_LatInSessionsRejected_Type = Counter32
_LatInSessionsRejected_Object = MibScalar
latInSessionsRejected = _LatInSessionsRejected_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 16),
    _LatInSessionsRejected_Type()
)
latInSessionsRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latInSessionsRejected.setStatus("mandatory")
_LatAddressChange_Type = Counter32
_LatAddressChange_Object = MibScalar
latAddressChange = _LatAddressChange_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 17),
    _LatAddressChange_Type()
)
latAddressChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latAddressChange.setStatus("mandatory")
_LatInDuplicates_Type = Counter32
_LatInDuplicates_Object = MibScalar
latInDuplicates = _LatInDuplicates_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 18),
    _LatInDuplicates_Type()
)
latInDuplicates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latInDuplicates.setStatus("mandatory")
_LatOutRetransmits_Type = Counter32
_LatOutRetransmits_Object = MibScalar
latOutRetransmits = _LatOutRetransmits_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 19),
    _LatOutRetransmits_Type()
)
latOutRetransmits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latOutRetransmits.setStatus("mandatory")
_LatInBadMessages_Type = Counter32
_LatInBadMessages_Object = MibScalar
latInBadMessages = _LatInBadMessages_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 20),
    _LatInBadMessages_Type()
)
latInBadMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latInBadMessages.setStatus("mandatory")
_LatInBadSlots_Type = Counter32
_LatInBadSlots_Object = MibScalar
latInBadSlots = _LatInBadSlots_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 21),
    _LatInBadSlots_Type()
)
latInBadSlots.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latInBadSlots.setStatus("mandatory")
_LatInBadMulticasts_Type = Counter32
_LatInBadMulticasts_Object = MibScalar
latInBadMulticasts = _LatInBadMulticasts_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 22),
    _LatInBadMulticasts_Type()
)
latInBadMulticasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latInBadMulticasts.setStatus("mandatory")
_LatPortTable_Object = MibTable
latPortTable = _LatPortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 23)
)
if mibBuilder.loadTexts:
    latPortTable.setStatus("mandatory")
_LatPortEntry_Object = MibTableRow
latPortEntry = _LatPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 23, 1)
)
latPortEntry.setIndexNames(
    (0, "MRVINREACH", "latPortIndex"),
)
if mibBuilder.loadTexts:
    latPortEntry.setStatus("mandatory")
_LatPortIndex_Type = Integer32
_LatPortIndex_Object = MibTableColumn
latPortIndex = _LatPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 23, 1, 1),
    _LatPortIndex_Type()
)
latPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latPortIndex.setStatus("mandatory")


class _LatPortAuthorizedGroups_Type(OctetString):
    """Custom type latPortAuthorizedGroups based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(32, 32),
    )


_LatPortAuthorizedGroups_Type.__name__ = "OctetString"
_LatPortAuthorizedGroups_Object = MibTableColumn
latPortAuthorizedGroups = _LatPortAuthorizedGroups_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 23, 1, 2),
    _LatPortAuthorizedGroups_Type()
)
latPortAuthorizedGroups.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latPortAuthorizedGroups.setStatus("mandatory")


class _LatPortAutoPrompt_Type(Integer32):
    """Custom type latPortAutoPrompt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_LatPortAutoPrompt_Type.__name__ = "Integer32"
_LatPortAutoPrompt_Object = MibTableColumn
latPortAutoPrompt = _LatPortAutoPrompt_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 23, 1, 3),
    _LatPortAutoPrompt_Type()
)
latPortAutoPrompt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latPortAutoPrompt.setStatus("mandatory")


class _LatPortCurrentGroups_Type(OctetString):
    """Custom type latPortCurrentGroups based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(32, 32),
    )


_LatPortCurrentGroups_Type.__name__ = "OctetString"
_LatPortCurrentGroups_Object = MibTableColumn
latPortCurrentGroups = _LatPortCurrentGroups_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 23, 1, 4),
    _LatPortCurrentGroups_Type()
)
latPortCurrentGroups.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latPortCurrentGroups.setStatus("mandatory")


class _LatPortRemoteModification_Type(Integer32):
    """Custom type latPortRemoteModification based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_LatPortRemoteModification_Type.__name__ = "Integer32"
_LatPortRemoteModification_Object = MibTableColumn
latPortRemoteModification = _LatPortRemoteModification_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 23, 1, 5),
    _LatPortRemoteModification_Type()
)
latPortRemoteModification.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latPortRemoteModification.setStatus("mandatory")
_LatOfferedServiceTable_Object = MibTable
latOfferedServiceTable = _LatOfferedServiceTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 24)
)
if mibBuilder.loadTexts:
    latOfferedServiceTable.setStatus("mandatory")
_LatOfferedServiceEntry_Object = MibTableRow
latOfferedServiceEntry = _LatOfferedServiceEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 24, 1)
)
latOfferedServiceEntry.setIndexNames(
    (0, "MRVINREACH", "latOfferedServiceName"),
)
if mibBuilder.loadTexts:
    latOfferedServiceEntry.setStatus("mandatory")


class _LatOfferedServiceName_Type(DisplayString):
    """Custom type latOfferedServiceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_LatOfferedServiceName_Type.__name__ = "DisplayString"
_LatOfferedServiceName_Object = MibTableColumn
latOfferedServiceName = _LatOfferedServiceName_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 24, 1, 1),
    _LatOfferedServiceName_Type()
)
latOfferedServiceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latOfferedServiceName.setStatus("mandatory")


class _LatOfferedServiceStatus_Type(Integer32):
    """Custom type latOfferedServiceStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_LatOfferedServiceStatus_Type.__name__ = "Integer32"
_LatOfferedServiceStatus_Object = MibTableColumn
latOfferedServiceStatus = _LatOfferedServiceStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 24, 1, 2),
    _LatOfferedServiceStatus_Type()
)
latOfferedServiceStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latOfferedServiceStatus.setStatus("mandatory")


class _LatOfferedServiceAllowConnections_Type(Integer32):
    """Custom type latOfferedServiceAllowConnections based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_LatOfferedServiceAllowConnections_Type.__name__ = "Integer32"
_LatOfferedServiceAllowConnections_Object = MibTableColumn
latOfferedServiceAllowConnections = _LatOfferedServiceAllowConnections_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 24, 1, 3),
    _LatOfferedServiceAllowConnections_Type()
)
latOfferedServiceAllowConnections.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latOfferedServiceAllowConnections.setStatus("mandatory")


class _LatOfferedServiceIdentification_Type(DisplayString):
    """Custom type latOfferedServiceIdentification based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_LatOfferedServiceIdentification_Type.__name__ = "DisplayString"
_LatOfferedServiceIdentification_Object = MibTableColumn
latOfferedServiceIdentification = _LatOfferedServiceIdentification_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 24, 1, 4),
    _LatOfferedServiceIdentification_Type()
)
latOfferedServiceIdentification.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latOfferedServiceIdentification.setStatus("mandatory")


class _LatOfferedServicePassword_Type(DisplayString):
    """Custom type latOfferedServicePassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_LatOfferedServicePassword_Type.__name__ = "DisplayString"
_LatOfferedServicePassword_Object = MibTableColumn
latOfferedServicePassword = _LatOfferedServicePassword_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 24, 1, 5),
    _LatOfferedServicePassword_Type()
)
latOfferedServicePassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latOfferedServicePassword.setStatus("mandatory")
_LatOfferedServicePortMap_Type = OctetString
_LatOfferedServicePortMap_Object = MibTableColumn
latOfferedServicePortMap = _LatOfferedServicePortMap_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 24, 1, 6),
    _LatOfferedServicePortMap_Type()
)
latOfferedServicePortMap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latOfferedServicePortMap.setStatus("mandatory")


class _LatOfferedServiceQueuing_Type(Integer32):
    """Custom type latOfferedServiceQueuing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_LatOfferedServiceQueuing_Type.__name__ = "Integer32"
_LatOfferedServiceQueuing_Object = MibTableColumn
latOfferedServiceQueuing = _LatOfferedServiceQueuing_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 24, 1, 7),
    _LatOfferedServiceQueuing_Type()
)
latOfferedServiceQueuing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latOfferedServiceQueuing.setStatus("mandatory")


class _LatOfferedServiceEnvironmentalManager_Type(Integer32):
    """Custom type latOfferedServiceEnvironmentalManager based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_LatOfferedServiceEnvironmentalManager_Type.__name__ = "Integer32"
_LatOfferedServiceEnvironmentalManager_Object = MibTableColumn
latOfferedServiceEnvironmentalManager = _LatOfferedServiceEnvironmentalManager_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 24, 1, 8),
    _LatOfferedServiceEnvironmentalManager_Type()
)
latOfferedServiceEnvironmentalManager.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latOfferedServiceEnvironmentalManager.setStatus("mandatory")
_LatVisibleServiceTable_Object = MibTable
latVisibleServiceTable = _LatVisibleServiceTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 25)
)
if mibBuilder.loadTexts:
    latVisibleServiceTable.setStatus("mandatory")
_LatVisibleServiceEntry_Object = MibTableRow
latVisibleServiceEntry = _LatVisibleServiceEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 25, 1)
)
latVisibleServiceEntry.setIndexNames(
    (0, "MRVINREACH", "latVisibleServiceName"),
)
if mibBuilder.loadTexts:
    latVisibleServiceEntry.setStatus("mandatory")


class _LatVisibleServiceName_Type(DisplayString):
    """Custom type latVisibleServiceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_LatVisibleServiceName_Type.__name__ = "DisplayString"
_LatVisibleServiceName_Object = MibTableColumn
latVisibleServiceName = _LatVisibleServiceName_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 25, 1, 1),
    _LatVisibleServiceName_Type()
)
latVisibleServiceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latVisibleServiceName.setStatus("mandatory")


class _LatVisibleServiceStatus_Type(Integer32):
    """Custom type latVisibleServiceStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("available", 1),
          ("connected", 6),
          ("reachable", 5),
          ("unavailable", 2),
          ("unknown", 3),
          ("unreachable", 4))
    )


_LatVisibleServiceStatus_Type.__name__ = "Integer32"
_LatVisibleServiceStatus_Object = MibTableColumn
latVisibleServiceStatus = _LatVisibleServiceStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 25, 1, 2),
    _LatVisibleServiceStatus_Type()
)
latVisibleServiceStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latVisibleServiceStatus.setStatus("mandatory")


class _LatVisibleServiceNode_Type(DisplayString):
    """Custom type latVisibleServiceNode based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_LatVisibleServiceNode_Type.__name__ = "DisplayString"
_LatVisibleServiceNode_Object = MibTableColumn
latVisibleServiceNode = _LatVisibleServiceNode_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 25, 1, 3),
    _LatVisibleServiceNode_Type()
)
latVisibleServiceNode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latVisibleServiceNode.setStatus("mandatory")
_LatVisibleServiceConnectedSessions_Type = Gauge32
_LatVisibleServiceConnectedSessions_Object = MibTableColumn
latVisibleServiceConnectedSessions = _LatVisibleServiceConnectedSessions_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 25, 1, 4),
    _LatVisibleServiceConnectedSessions_Type()
)
latVisibleServiceConnectedSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latVisibleServiceConnectedSessions.setStatus("mandatory")


class _LatVisibleServiceIdentification_Type(DisplayString):
    """Custom type latVisibleServiceIdentification based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_LatVisibleServiceIdentification_Type.__name__ = "DisplayString"
_LatVisibleServiceIdentification_Object = MibTableColumn
latVisibleServiceIdentification = _LatVisibleServiceIdentification_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 25, 1, 5),
    _LatVisibleServiceIdentification_Type()
)
latVisibleServiceIdentification.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latVisibleServiceIdentification.setStatus("mandatory")
_LatVisibleServiceRating_Type = Gauge32
_LatVisibleServiceRating_Object = MibTableColumn
latVisibleServiceRating = _LatVisibleServiceRating_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 25, 1, 6),
    _LatVisibleServiceRating_Type()
)
latVisibleServiceRating.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latVisibleServiceRating.setStatus("mandatory")
_LatNodeTable_Object = MibTable
latNodeTable = _LatNodeTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26)
)
if mibBuilder.loadTexts:
    latNodeTable.setStatus("mandatory")
_LatNodeEntry_Object = MibTableRow
latNodeEntry = _LatNodeEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1)
)
latNodeEntry.setIndexNames(
    (0, "MRVINREACH", "latNodeName"),
)
if mibBuilder.loadTexts:
    latNodeEntry.setStatus("mandatory")


class _LatNodeName_Type(DisplayString):
    """Custom type latNodeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_LatNodeName_Type.__name__ = "DisplayString"
_LatNodeName_Object = MibTableColumn
latNodeName = _LatNodeName_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 1),
    _LatNodeName_Type()
)
latNodeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeName.setStatus("mandatory")


class _LatNodeStatus_Type(Integer32):
    """Custom type latNodeStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("available", 1),
          ("connected", 6),
          ("reachable", 5),
          ("unavailable", 2),
          ("unknown", 3),
          ("unreachable", 4))
    )


_LatNodeStatus_Type.__name__ = "Integer32"
_LatNodeStatus_Object = MibTableColumn
latNodeStatus = _LatNodeStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 2),
    _LatNodeStatus_Type()
)
latNodeStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeStatus.setStatus("mandatory")
_LatNodeConnectedSessions_Type = Gauge32
_LatNodeConnectedSessions_Object = MibTableColumn
latNodeConnectedSessions = _LatNodeConnectedSessions_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 3),
    _LatNodeConnectedSessions_Type()
)
latNodeConnectedSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeConnectedSessions.setStatus("mandatory")


class _LatNodeAddress_Type(OctetString):
    """Custom type latNodeAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )


_LatNodeAddress_Type.__name__ = "OctetString"
_LatNodeAddress_Object = MibTableColumn
latNodeAddress = _LatNodeAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 4),
    _LatNodeAddress_Type()
)
latNodeAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeAddress.setStatus("mandatory")
_LatNodeDataLinkFrame_Type = Integer32
_LatNodeDataLinkFrame_Object = MibTableColumn
latNodeDataLinkFrame = _LatNodeDataLinkFrame_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 5),
    _LatNodeDataLinkFrame_Type()
)
latNodeDataLinkFrame.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeDataLinkFrame.setStatus("mandatory")


class _LatNodeIdentification_Type(DisplayString):
    """Custom type latNodeIdentification based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_LatNodeIdentification_Type.__name__ = "DisplayString"
_LatNodeIdentification_Object = MibTableColumn
latNodeIdentification = _LatNodeIdentification_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 6),
    _LatNodeIdentification_Type()
)
latNodeIdentification.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeIdentification.setStatus("mandatory")


class _LatNodeGroups_Type(OctetString):
    """Custom type latNodeGroups based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(32, 32),
    )


_LatNodeGroups_Type.__name__ = "OctetString"
_LatNodeGroups_Object = MibTableColumn
latNodeGroups = _LatNodeGroups_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 7),
    _LatNodeGroups_Type()
)
latNodeGroups.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeGroups.setStatus("mandatory")
_LatNodeServiceNumber_Type = Gauge32
_LatNodeServiceNumber_Object = MibTableColumn
latNodeServiceNumber = _LatNodeServiceNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 8),
    _LatNodeServiceNumber_Type()
)
latNodeServiceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeServiceNumber.setStatus("mandatory")


class _LatNodeZero_Type(Integer32):
    """Custom type latNodeZero based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_LatNodeZero_Type.__name__ = "Integer32"
_LatNodeZero_Object = MibTableColumn
latNodeZero = _LatNodeZero_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 9),
    _LatNodeZero_Type()
)
latNodeZero.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latNodeZero.setStatus("mandatory")
_LatNodeZeroTime_Type = TimeTicks
_LatNodeZeroTime_Object = MibTableColumn
latNodeZeroTime = _LatNodeZeroTime_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 10),
    _LatNodeZeroTime_Type()
)
latNodeZeroTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeZeroTime.setStatus("mandatory")
_LatNodeInMessages_Type = Counter32
_LatNodeInMessages_Object = MibTableColumn
latNodeInMessages = _LatNodeInMessages_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 11),
    _LatNodeInMessages_Type()
)
latNodeInMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeInMessages.setStatus("mandatory")
_LatNodeOutMessages_Type = Counter32
_LatNodeOutMessages_Object = MibTableColumn
latNodeOutMessages = _LatNodeOutMessages_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 12),
    _LatNodeOutMessages_Type()
)
latNodeOutMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeOutMessages.setStatus("mandatory")
_LatNodeInSlots_Type = Counter32
_LatNodeInSlots_Object = MibTableColumn
latNodeInSlots = _LatNodeInSlots_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 13),
    _LatNodeInSlots_Type()
)
latNodeInSlots.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeInSlots.setStatus("mandatory")
_LatNodeOutSlots_Type = Counter32
_LatNodeOutSlots_Object = MibTableColumn
latNodeOutSlots = _LatNodeOutSlots_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 14),
    _LatNodeOutSlots_Type()
)
latNodeOutSlots.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeOutSlots.setStatus("mandatory")
_LatNodeInBytes_Type = Counter32
_LatNodeInBytes_Object = MibTableColumn
latNodeInBytes = _LatNodeInBytes_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 15),
    _LatNodeInBytes_Type()
)
latNodeInBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeInBytes.setStatus("mandatory")
_LatNodeOutBytes_Type = Counter32
_LatNodeOutBytes_Object = MibTableColumn
latNodeOutBytes = _LatNodeOutBytes_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 16),
    _LatNodeOutBytes_Type()
)
latNodeOutBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeOutBytes.setStatus("mandatory")
_LatNodeAddressChange_Type = Counter32
_LatNodeAddressChange_Object = MibTableColumn
latNodeAddressChange = _LatNodeAddressChange_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 17),
    _LatNodeAddressChange_Type()
)
latNodeAddressChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeAddressChange.setStatus("mandatory")
_LatNodeInDuplicates_Type = Counter32
_LatNodeInDuplicates_Object = MibTableColumn
latNodeInDuplicates = _LatNodeInDuplicates_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 18),
    _LatNodeInDuplicates_Type()
)
latNodeInDuplicates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeInDuplicates.setStatus("mandatory")
_LatNodeOutRetransmits_Type = Counter32
_LatNodeOutRetransmits_Object = MibTableColumn
latNodeOutRetransmits = _LatNodeOutRetransmits_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 19),
    _LatNodeOutRetransmits_Type()
)
latNodeOutRetransmits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeOutRetransmits.setStatus("mandatory")
_LatNodeInBadMessages_Type = Counter32
_LatNodeInBadMessages_Object = MibTableColumn
latNodeInBadMessages = _LatNodeInBadMessages_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 20),
    _LatNodeInBadMessages_Type()
)
latNodeInBadMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeInBadMessages.setStatus("mandatory")
_LatNodeInBadSlots_Type = Counter32
_LatNodeInBadSlots_Object = MibTableColumn
latNodeInBadSlots = _LatNodeInBadSlots_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 21),
    _LatNodeInBadSlots_Type()
)
latNodeInBadSlots.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeInBadSlots.setStatus("mandatory")
_LatNodeInSessionsAccepted_Type = Counter32
_LatNodeInSessionsAccepted_Object = MibTableColumn
latNodeInSessionsAccepted = _LatNodeInSessionsAccepted_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 22),
    _LatNodeInSessionsAccepted_Type()
)
latNodeInSessionsAccepted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeInSessionsAccepted.setStatus("mandatory")
_LatNodeInSessionsRejected_Type = Counter32
_LatNodeInSessionsRejected_Object = MibTableColumn
latNodeInSessionsRejected = _LatNodeInSessionsRejected_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 26, 1, 23),
    _LatNodeInSessionsRejected_Type()
)
latNodeInSessionsRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    latNodeInSessionsRejected.setStatus("mandatory")


class _LatSolicits_Type(Integer32):
    """Custom type latSolicits based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_LatSolicits_Type.__name__ = "Integer32"
_LatSolicits_Object = MibScalar
latSolicits = _LatSolicits_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 27),
    _LatSolicits_Type()
)
latSolicits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latSolicits.setStatus("mandatory")


class _LatImmediateAck_Type(Integer32):
    """Custom type latImmediateAck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_LatImmediateAck_Type.__name__ = "Integer32"
_LatImmediateAck_Object = MibScalar
latImmediateAck = _LatImmediateAck_Object(
    (1, 3, 6, 1, 4, 1, 33, 3, 28),
    _LatImmediateAck_Type()
)
latImmediateAck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    latImmediateAck.setStatus("mandatory")
_XInternetDep_ObjectIdentity = ObjectIdentity
xInternetDep = _XInternetDep_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 4)
)
_XBootServer_ObjectIdentity = ObjectIdentity
xBootServer = _XBootServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 6)
)
_XBsBasic_ObjectIdentity = ObjectIdentity
xBsBasic = _XBsBasic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 6, 1)
)


class _BasicLogLimit_Type(Integer32):
    """Custom type basicLogLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_BasicLogLimit_Type.__name__ = "Integer32"
_BasicLogLimit_Object = MibScalar
basicLogLimit = _BasicLogLimit_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 1),
    _BasicLogLimit_Type()
)
basicLogLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicLogLimit.setStatus("mandatory")


class _BasicActiveLimit_Type(Integer32):
    """Custom type basicActiveLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_BasicActiveLimit_Type.__name__ = "Integer32"
_BasicActiveLimit_Object = MibScalar
basicActiveLimit = _BasicActiveLimit_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 2),
    _BasicActiveLimit_Type()
)
basicActiveLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicActiveLimit.setStatus("mandatory")
_BasicActiveNumber_Type = Gauge32
_BasicActiveNumber_Object = MibScalar
basicActiveNumber = _BasicActiveNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 3),
    _BasicActiveNumber_Type()
)
basicActiveNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicActiveNumber.setStatus("mandatory")
_BasicClientNumber_Type = Gauge32
_BasicClientNumber_Object = MibScalar
basicClientNumber = _BasicClientNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 4),
    _BasicClientNumber_Type()
)
basicClientNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicClientNumber.setStatus("mandatory")
_BasicOffersSent_Type = Counter32
_BasicOffersSent_Object = MibScalar
basicOffersSent = _BasicOffersSent_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 5),
    _BasicOffersSent_Type()
)
basicOffersSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicOffersSent.setStatus("mandatory")
_BasicEventTotal_Type = Gauge32
_BasicEventTotal_Object = MibScalar
basicEventTotal = _BasicEventTotal_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 6),
    _BasicEventTotal_Type()
)
basicEventTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicEventTotal.setStatus("mandatory")


class _BasicEventPurge_Type(Integer32):
    """Custom type basicEventPurge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_BasicEventPurge_Type.__name__ = "Integer32"
_BasicEventPurge_Object = MibScalar
basicEventPurge = _BasicEventPurge_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 7),
    _BasicEventPurge_Type()
)
basicEventPurge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicEventPurge.setStatus("mandatory")
_ActiveTable_Object = MibTable
activeTable = _ActiveTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 8)
)
if mibBuilder.loadTexts:
    activeTable.setStatus("mandatory")
_ActiveEntry_Object = MibTableRow
activeEntry = _ActiveEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 8, 1)
)
activeEntry.setIndexNames(
    (0, "MRVINREACH", "activeIdentificationType"),
    (0, "MRVINREACH", "activeIdentification"),
)
if mibBuilder.loadTexts:
    activeEntry.setStatus("mandatory")
_ActiveIdentificationType_Type = AddressType
_ActiveIdentificationType_Object = MibTableColumn
activeIdentificationType = _ActiveIdentificationType_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 8, 1, 1),
    _ActiveIdentificationType_Type()
)
activeIdentificationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    activeIdentificationType.setStatus("mandatory")


class _ActiveIdentification_Type(OctetString):
    """Custom type activeIdentification based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 6),
    )


_ActiveIdentification_Type.__name__ = "OctetString"
_ActiveIdentification_Object = MibTableColumn
activeIdentification = _ActiveIdentification_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 8, 1, 2),
    _ActiveIdentification_Type()
)
activeIdentification.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    activeIdentification.setStatus("mandatory")


class _ActiveFunction_Type(Integer32):
    """Custom type activeFunction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("dump", 3),
          ("imageUpdate", 4),
          ("load", 2),
          ("parameterStore", 1))
    )


_ActiveFunction_Type.__name__ = "Integer32"
_ActiveFunction_Object = MibTableColumn
activeFunction = _ActiveFunction_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 8, 1, 3),
    _ActiveFunction_Type()
)
activeFunction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    activeFunction.setStatus("mandatory")


class _ActiveSoftwareVersionType_Type(Integer32):
    """Custom type activeSoftwareVersionType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("alpha", 1),
          ("beta", 2),
          ("diagnostic", 5),
          ("notApplicable", 6),
          ("production", 3),
          ("special", 4))
    )


_ActiveSoftwareVersionType_Type.__name__ = "Integer32"
_ActiveSoftwareVersionType_Object = MibTableColumn
activeSoftwareVersionType = _ActiveSoftwareVersionType_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 8, 1, 4),
    _ActiveSoftwareVersionType_Type()
)
activeSoftwareVersionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    activeSoftwareVersionType.setStatus("mandatory")


class _ActiveSoftwareVersion_Type(OctetString):
    """Custom type activeSoftwareVersion based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_ActiveSoftwareVersion_Type.__name__ = "OctetString"
_ActiveSoftwareVersion_Object = MibTableColumn
activeSoftwareVersion = _ActiveSoftwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 8, 1, 5),
    _ActiveSoftwareVersion_Type()
)
activeSoftwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    activeSoftwareVersion.setStatus("mandatory")
_ActiveParameterVersion_Type = Integer32
_ActiveParameterVersion_Object = MibTableColumn
activeParameterVersion = _ActiveParameterVersion_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 8, 1, 6),
    _ActiveParameterVersion_Type()
)
activeParameterVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    activeParameterVersion.setStatus("mandatory")
_ActiveCurrentSequence_Type = Integer32
_ActiveCurrentSequence_Object = MibTableColumn
activeCurrentSequence = _ActiveCurrentSequence_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 8, 1, 7),
    _ActiveCurrentSequence_Type()
)
activeCurrentSequence.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    activeCurrentSequence.setStatus("mandatory")
_ActiveBytesRemaining_Type = Integer32
_ActiveBytesRemaining_Object = MibTableColumn
activeBytesRemaining = _ActiveBytesRemaining_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 8, 1, 8),
    _ActiveBytesRemaining_Type()
)
activeBytesRemaining.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    activeBytesRemaining.setStatus("mandatory")


class _ActiveFile_Type(DisplayString):
    """Custom type activeFile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ActiveFile_Type.__name__ = "DisplayString"
_ActiveFile_Object = MibTableColumn
activeFile = _ActiveFile_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 8, 1, 9),
    _ActiveFile_Type()
)
activeFile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    activeFile.setStatus("mandatory")
_ActiveStatus_Type = DialogStatus
_ActiveStatus_Object = MibTableColumn
activeStatus = _ActiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 8, 1, 10),
    _ActiveStatus_Type()
)
activeStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    activeStatus.setStatus("mandatory")


class _ActiveState_Type(Integer32):
    """Custom type activeState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("cleanup", 10),
          ("closeFile", 9),
          ("closePartner", 8),
          ("done", 11),
          ("error", 12),
          ("idle", 1),
          ("internal1", 2),
          ("internal2", 3),
          ("openFile", 5),
          ("openPartner", 4),
          ("receivePartner", 6),
          ("writeFile", 7))
    )


_ActiveState_Type.__name__ = "Integer32"
_ActiveState_Object = MibTableColumn
activeState = _ActiveState_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 8, 1, 11),
    _ActiveState_Type()
)
activeState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    activeState.setStatus("mandatory")
_ClientTable_Object = MibTable
clientTable = _ClientTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 9)
)
if mibBuilder.loadTexts:
    clientTable.setStatus("mandatory")
_ClientEntry_Object = MibTableRow
clientEntry = _ClientEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 9, 1)
)
clientEntry.setIndexNames(
    (0, "MRVINREACH", "clientIdentificationType"),
    (0, "MRVINREACH", "clientIdentification"),
)
if mibBuilder.loadTexts:
    clientEntry.setStatus("mandatory")
_ClientIdentificationType_Type = AddressType
_ClientIdentificationType_Object = MibTableColumn
clientIdentificationType = _ClientIdentificationType_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 9, 1, 1),
    _ClientIdentificationType_Type()
)
clientIdentificationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clientIdentificationType.setStatus("mandatory")


class _ClientIdentification_Type(OctetString):
    """Custom type clientIdentification based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 6),
    )


_ClientIdentification_Type.__name__ = "OctetString"
_ClientIdentification_Object = MibTableColumn
clientIdentification = _ClientIdentification_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 9, 1, 2),
    _ClientIdentification_Type()
)
clientIdentification.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clientIdentification.setStatus("mandatory")


class _ClientEntryStatus_Type(Integer32):
    """Custom type clientEntryStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ClientEntryStatus_Type.__name__ = "Integer32"
_ClientEntryStatus_Object = MibTableColumn
clientEntryStatus = _ClientEntryStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 9, 1, 3),
    _ClientEntryStatus_Type()
)
clientEntryStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    clientEntryStatus.setStatus("mandatory")


class _ClientName_Type(DisplayString):
    """Custom type clientName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_ClientName_Type.__name__ = "DisplayString"
_ClientName_Object = MibTableColumn
clientName = _ClientName_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 9, 1, 4),
    _ClientName_Type()
)
clientName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    clientName.setStatus("mandatory")


class _ClientLoadFile_Type(DisplayString):
    """Custom type clientLoadFile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_ClientLoadFile_Type.__name__ = "DisplayString"
_ClientLoadFile_Object = MibTableColumn
clientLoadFile = _ClientLoadFile_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 9, 1, 5),
    _ClientLoadFile_Type()
)
clientLoadFile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    clientLoadFile.setStatus("mandatory")


class _ClientDiagnosticFile_Type(DisplayString):
    """Custom type clientDiagnosticFile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_ClientDiagnosticFile_Type.__name__ = "DisplayString"
_ClientDiagnosticFile_Object = MibTableColumn
clientDiagnosticFile = _ClientDiagnosticFile_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 9, 1, 6),
    _ClientDiagnosticFile_Type()
)
clientDiagnosticFile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    clientDiagnosticFile.setStatus("mandatory")


class _ClientLoadService_Type(Integer32):
    """Custom type clientLoadService based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_ClientLoadService_Type.__name__ = "Integer32"
_ClientLoadService_Object = MibTableColumn
clientLoadService = _ClientLoadService_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 9, 1, 7),
    _ClientLoadService_Type()
)
clientLoadService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    clientLoadService.setStatus("mandatory")


class _ClientDumpService_Type(Integer32):
    """Custom type clientDumpService based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_ClientDumpService_Type.__name__ = "Integer32"
_ClientDumpService_Object = MibTableColumn
clientDumpService = _ClientDumpService_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 9, 1, 8),
    _ClientDumpService_Type()
)
clientDumpService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    clientDumpService.setStatus("mandatory")
_NamedTable_Object = MibTable
namedTable = _NamedTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 10)
)
if mibBuilder.loadTexts:
    namedTable.setStatus("mandatory")
_NamedEntry_Object = MibTableRow
namedEntry = _NamedEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 10, 1)
)
namedEntry.setIndexNames(
    (0, "MRVINREACH", "namedName"),
)
if mibBuilder.loadTexts:
    namedEntry.setStatus("mandatory")
_NamedIdentificationType_Type = AddressType
_NamedIdentificationType_Object = MibTableColumn
namedIdentificationType = _NamedIdentificationType_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 10, 1, 1),
    _NamedIdentificationType_Type()
)
namedIdentificationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    namedIdentificationType.setStatus("mandatory")


class _NamedIdentification_Type(OctetString):
    """Custom type namedIdentification based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 6),
    )


_NamedIdentification_Type.__name__ = "OctetString"
_NamedIdentification_Object = MibTableColumn
namedIdentification = _NamedIdentification_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 10, 1, 2),
    _NamedIdentification_Type()
)
namedIdentification.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    namedIdentification.setStatus("mandatory")


class _NamedEntryStatus_Type(Integer32):
    """Custom type namedEntryStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_NamedEntryStatus_Type.__name__ = "Integer32"
_NamedEntryStatus_Object = MibTableColumn
namedEntryStatus = _NamedEntryStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 10, 1, 3),
    _NamedEntryStatus_Type()
)
namedEntryStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    namedEntryStatus.setStatus("mandatory")


class _NamedName_Type(DisplayString):
    """Custom type namedName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NamedName_Type.__name__ = "DisplayString"
_NamedName_Object = MibTableColumn
namedName = _NamedName_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 10, 1, 4),
    _NamedName_Type()
)
namedName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    namedName.setStatus("mandatory")


class _NamedLoadFile_Type(DisplayString):
    """Custom type namedLoadFile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NamedLoadFile_Type.__name__ = "DisplayString"
_NamedLoadFile_Object = MibTableColumn
namedLoadFile = _NamedLoadFile_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 10, 1, 5),
    _NamedLoadFile_Type()
)
namedLoadFile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    namedLoadFile.setStatus("mandatory")


class _NamedDiagnosticFile_Type(DisplayString):
    """Custom type namedDiagnosticFile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NamedDiagnosticFile_Type.__name__ = "DisplayString"
_NamedDiagnosticFile_Object = MibTableColumn
namedDiagnosticFile = _NamedDiagnosticFile_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 10, 1, 6),
    _NamedDiagnosticFile_Type()
)
namedDiagnosticFile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    namedDiagnosticFile.setStatus("mandatory")


class _NamedLoadService_Type(Integer32):
    """Custom type namedLoadService based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_NamedLoadService_Type.__name__ = "Integer32"
_NamedLoadService_Object = MibTableColumn
namedLoadService = _NamedLoadService_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 10, 1, 7),
    _NamedLoadService_Type()
)
namedLoadService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    namedLoadService.setStatus("mandatory")


class _NamedDumpService_Type(Integer32):
    """Custom type namedDumpService based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_NamedDumpService_Type.__name__ = "Integer32"
_NamedDumpService_Object = MibTableColumn
namedDumpService = _NamedDumpService_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 10, 1, 8),
    _NamedDumpService_Type()
)
namedDumpService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    namedDumpService.setStatus("mandatory")
_XEventTable_Object = MibTable
xEventTable = _XEventTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 11)
)
if mibBuilder.loadTexts:
    xEventTable.setStatus("mandatory")
_XEventEntry_Object = MibTableRow
xEventEntry = _XEventEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 11, 1)
)
xEventEntry.setIndexNames(
    (0, "MRVINREACH", "xEventIndex"),
)
if mibBuilder.loadTexts:
    xEventEntry.setStatus("mandatory")
_XEventIndex_Type = Integer32
_XEventIndex_Object = MibTableColumn
xEventIndex = _XEventIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 11, 1, 1),
    _XEventIndex_Type()
)
xEventIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xEventIndex.setStatus("mandatory")


class _XEventText_Type(DisplayString):
    """Custom type xEventText based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_XEventText_Type.__name__ = "DisplayString"
_XEventText_Object = MibTableColumn
xEventText = _XEventText_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 11, 1, 2),
    _XEventText_Type()
)
xEventText.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xEventText.setStatus("mandatory")
_BasicDeviceNumber_Type = Integer32
_BasicDeviceNumber_Object = MibScalar
basicDeviceNumber = _BasicDeviceNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 12),
    _BasicDeviceNumber_Type()
)
basicDeviceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicDeviceNumber.setStatus("mandatory")
_DeviceTable_Object = MibTable
deviceTable = _DeviceTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 13)
)
if mibBuilder.loadTexts:
    deviceTable.setStatus("mandatory")
_DeviceEntry_Object = MibTableRow
deviceEntry = _DeviceEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 13, 1)
)
deviceEntry.setIndexNames(
    (0, "MRVINREACH", "deviceIndex"),
)
if mibBuilder.loadTexts:
    deviceEntry.setStatus("mandatory")
_DeviceIndex_Type = Integer32
_DeviceIndex_Object = MibTableColumn
deviceIndex = _DeviceIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 13, 1, 1),
    _DeviceIndex_Type()
)
deviceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deviceIndex.setStatus("mandatory")


class _DeviceName_Type(DisplayString):
    """Custom type deviceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_DeviceName_Type.__name__ = "DisplayString"
_DeviceName_Object = MibTableColumn
deviceName = _DeviceName_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 13, 1, 2),
    _DeviceName_Type()
)
deviceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deviceName.setStatus("mandatory")


class _DeviceDescr_Type(DisplayString):
    """Custom type deviceDescr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_DeviceDescr_Type.__name__ = "DisplayString"
_DeviceDescr_Object = MibTableColumn
deviceDescr = _DeviceDescr_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 13, 1, 3),
    _DeviceDescr_Type()
)
deviceDescr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deviceDescr.setStatus("mandatory")


class _DeviceOperation_Type(Integer32):
    """Custom type deviceOperation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("erase", 5),
          ("format", 3),
          ("idle", 4),
          ("loadingClient", 8),
          ("paramStore", 6),
          ("read", 1),
          ("unpack", 7),
          ("write", 2))
    )


_DeviceOperation_Type.__name__ = "Integer32"
_DeviceOperation_Object = MibTableColumn
deviceOperation = _DeviceOperation_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 13, 1, 4),
    _DeviceOperation_Type()
)
deviceOperation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deviceOperation.setStatus("mandatory")


class _DeviceFormat_Type(Integer32):
    """Custom type deviceFormat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("formatted", 2),
          ("unformatted", 1),
          ("unknown", 3))
    )


_DeviceFormat_Type.__name__ = "Integer32"
_DeviceFormat_Object = MibTableColumn
deviceFormat = _DeviceFormat_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 13, 1, 5),
    _DeviceFormat_Type()
)
deviceFormat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deviceFormat.setStatus("mandatory")


class _DeviceProtection_Type(Integer32):
    """Custom type deviceProtection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("unknown", 3),
          ("write-enabled", 1),
          ("write-protected", 2))
    )


_DeviceProtection_Type.__name__ = "Integer32"
_DeviceProtection_Object = MibTableColumn
deviceProtection = _DeviceProtection_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 13, 1, 6),
    _DeviceProtection_Type()
)
deviceProtection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deviceProtection.setStatus("mandatory")


class _DeviceFormatMedium_Type(Integer32):
    """Custom type deviceFormatMedium based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_DeviceFormatMedium_Type.__name__ = "Integer32"
_DeviceFormatMedium_Object = MibTableColumn
deviceFormatMedium = _DeviceFormatMedium_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 13, 1, 7),
    _DeviceFormatMedium_Type()
)
deviceFormatMedium.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deviceFormatMedium.setStatus("mandatory")


class _DeviceGetFile_Type(Integer32):
    """Custom type deviceGetFile based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("abort", 3),
          ("execute", 2),
          ("ready", 1))
    )


_DeviceGetFile_Type.__name__ = "Integer32"
_DeviceGetFile_Object = MibTableColumn
deviceGetFile = _DeviceGetFile_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 13, 1, 8),
    _DeviceGetFile_Type()
)
deviceGetFile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deviceGetFile.setStatus("mandatory")
_DeviceGetFileHostIdentificationType_Type = AddressType
_DeviceGetFileHostIdentificationType_Object = MibTableColumn
deviceGetFileHostIdentificationType = _DeviceGetFileHostIdentificationType_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 13, 1, 9),
    _DeviceGetFileHostIdentificationType_Type()
)
deviceGetFileHostIdentificationType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deviceGetFileHostIdentificationType.setStatus("mandatory")


class _DeviceGetFileHostIdentification_Type(OctetString):
    """Custom type deviceGetFileHostIdentification based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 6),
    )


_DeviceGetFileHostIdentification_Type.__name__ = "OctetString"
_DeviceGetFileHostIdentification_Object = MibTableColumn
deviceGetFileHostIdentification = _DeviceGetFileHostIdentification_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 13, 1, 10),
    _DeviceGetFileHostIdentification_Type()
)
deviceGetFileHostIdentification.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deviceGetFileHostIdentification.setStatus("mandatory")


class _DeviceGetFileName_Type(DisplayString):
    """Custom type deviceGetFileName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_DeviceGetFileName_Type.__name__ = "DisplayString"
_DeviceGetFileName_Object = MibTableColumn
deviceGetFileName = _DeviceGetFileName_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 13, 1, 11),
    _DeviceGetFileName_Type()
)
deviceGetFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deviceGetFileName.setStatus("mandatory")


class _DeviceGetFileArea_Type(Integer32):
    """Custom type deviceGetFileArea based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_DeviceGetFileArea_Type.__name__ = "Integer32"
_DeviceGetFileArea_Object = MibTableColumn
deviceGetFileArea = _DeviceGetFileArea_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 13, 1, 12),
    _DeviceGetFileArea_Type()
)
deviceGetFileArea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deviceGetFileArea.setStatus("mandatory")


class _DeviceFormatOption_Type(Integer32):
    """Custom type deviceFormatOption based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_DeviceFormatOption_Type.__name__ = "Integer32"
_DeviceFormatOption_Object = MibTableColumn
deviceFormatOption = _DeviceFormatOption_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 13, 1, 13),
    _DeviceFormatOption_Type()
)
deviceFormatOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deviceFormatOption.setStatus("mandatory")


class _DeviceFormatRedundantParams_Type(Integer32):
    """Custom type deviceFormatRedundantParams based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("nonredundant", 1),
          ("redundant", 2))
    )


_DeviceFormatRedundantParams_Type.__name__ = "Integer32"
_DeviceFormatRedundantParams_Object = MibTableColumn
deviceFormatRedundantParams = _DeviceFormatRedundantParams_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 13, 1, 14),
    _DeviceFormatRedundantParams_Type()
)
deviceFormatRedundantParams.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deviceFormatRedundantParams.setStatus("mandatory")
_DevicePreviousStatus_Type = DialogStatus
_DevicePreviousStatus_Object = MibTableColumn
devicePreviousStatus = _DevicePreviousStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 1, 13, 1, 15),
    _DevicePreviousStatus_Type()
)
devicePreviousStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    devicePreviousStatus.setStatus("mandatory")
_XDump_ObjectIdentity = ObjectIdentity
xDump = _XDump_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 6, 2)
)


class _DumpService_Type(Integer32):
    """Custom type dumpService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_DumpService_Type.__name__ = "Integer32"
_DumpService_Object = MibScalar
dumpService = _DumpService_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 2, 1),
    _DumpService_Type()
)
dumpService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dumpService.setStatus("mandatory")


class _DumpDrive_Type(Integer32):
    """Custom type dumpDrive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_DumpDrive_Type.__name__ = "Integer32"
_DumpDrive_Object = MibScalar
dumpDrive = _DumpDrive_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 2, 2),
    _DumpDrive_Type()
)
dumpDrive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dumpDrive.setStatus("mandatory")


class _DumpMerit_Type(Integer32):
    """Custom type dumpMerit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_DumpMerit_Type.__name__ = "Integer32"
_DumpMerit_Object = MibScalar
dumpMerit = _DumpMerit_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 2, 3),
    _DumpMerit_Type()
)
dumpMerit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dumpMerit.setStatus("mandatory")


class _DumpSize_Type(Integer32):
    """Custom type dumpSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("full", 2),
          ("small", 1))
    )


_DumpSize_Type.__name__ = "Integer32"
_DumpSize_Object = MibScalar
dumpSize = _DumpSize_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 2, 4),
    _DumpSize_Type()
)
dumpSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dumpSize.setStatus("mandatory")
_DumpCompleted_Type = Counter32
_DumpCompleted_Object = MibScalar
dumpCompleted = _DumpCompleted_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 2, 5),
    _DumpCompleted_Type()
)
dumpCompleted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dumpCompleted.setStatus("mandatory")
_DumpActive_Type = Gauge32
_DumpActive_Object = MibScalar
dumpActive = _DumpActive_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 2, 6),
    _DumpActive_Type()
)
dumpActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dumpActive.setStatus("mandatory")
_DumpFileNumber_Type = Gauge32
_DumpFileNumber_Object = MibScalar
dumpFileNumber = _DumpFileNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 2, 7),
    _DumpFileNumber_Type()
)
dumpFileNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dumpFileNumber.setStatus("mandatory")
_DumpFileTable_Object = MibTable
dumpFileTable = _DumpFileTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 2, 8)
)
if mibBuilder.loadTexts:
    dumpFileTable.setStatus("mandatory")
_DumpFileEntry_Object = MibTableRow
dumpFileEntry = _DumpFileEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 2, 8, 1)
)
dumpFileEntry.setIndexNames(
    (0, "MRVINREACH", "dumpFileIdentificationType"),
    (0, "MRVINREACH", "dumpFileIdentification"),
)
if mibBuilder.loadTexts:
    dumpFileEntry.setStatus("mandatory")
_DumpFileIdentificationType_Type = AddressType
_DumpFileIdentificationType_Object = MibTableColumn
dumpFileIdentificationType = _DumpFileIdentificationType_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 2, 8, 1, 1),
    _DumpFileIdentificationType_Type()
)
dumpFileIdentificationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dumpFileIdentificationType.setStatus("mandatory")


class _DumpFileIdentification_Type(OctetString):
    """Custom type dumpFileIdentification based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 6),
    )


_DumpFileIdentification_Type.__name__ = "OctetString"
_DumpFileIdentification_Object = MibTableColumn
dumpFileIdentification = _DumpFileIdentification_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 2, 8, 1, 2),
    _DumpFileIdentification_Type()
)
dumpFileIdentification.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dumpFileIdentification.setStatus("mandatory")


class _DumpFileEntryStatus_Type(Integer32):
    """Custom type dumpFileEntryStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_DumpFileEntryStatus_Type.__name__ = "Integer32"
_DumpFileEntryStatus_Object = MibTableColumn
dumpFileEntryStatus = _DumpFileEntryStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 2, 8, 1, 3),
    _DumpFileEntryStatus_Type()
)
dumpFileEntryStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dumpFileEntryStatus.setStatus("mandatory")
_DumpFileCreation_Type = DateTime
_DumpFileCreation_Object = MibTableColumn
dumpFileCreation = _DumpFileCreation_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 2, 8, 1, 4),
    _DumpFileCreation_Type()
)
dumpFileCreation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dumpFileCreation.setStatus("mandatory")
_DumpFileSize_Type = Integer32
_DumpFileSize_Object = MibTableColumn
dumpFileSize = _DumpFileSize_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 2, 8, 1, 5),
    _DumpFileSize_Type()
)
dumpFileSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dumpFileSize.setStatus("mandatory")
_XLoad_ObjectIdentity = ObjectIdentity
xLoad = _XLoad_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 6, 3)
)


class _LoadService_Type(Integer32):
    """Custom type loadService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_LoadService_Type.__name__ = "Integer32"
_LoadService_Object = MibScalar
loadService = _LoadService_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 3, 1),
    _LoadService_Type()
)
loadService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    loadService.setStatus("mandatory")


class _LoadMerit_Type(Integer32):
    """Custom type loadMerit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_LoadMerit_Type.__name__ = "Integer32"
_LoadMerit_Object = MibScalar
loadMerit = _LoadMerit_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 3, 2),
    _LoadMerit_Type()
)
loadMerit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    loadMerit.setStatus("mandatory")
_LoadCompleted_Type = Counter32
_LoadCompleted_Object = MibScalar
loadCompleted = _LoadCompleted_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 3, 3),
    _LoadCompleted_Type()
)
loadCompleted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    loadCompleted.setStatus("mandatory")
_LoadActive_Type = Gauge32
_LoadActive_Object = MibScalar
loadActive = _LoadActive_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 3, 4),
    _LoadActive_Type()
)
loadActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    loadActive.setStatus("mandatory")
_LoadFileNumber_Type = Gauge32
_LoadFileNumber_Object = MibScalar
loadFileNumber = _LoadFileNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 3, 5),
    _LoadFileNumber_Type()
)
loadFileNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    loadFileNumber.setStatus("mandatory")
_LoadFileTable_Object = MibTable
loadFileTable = _LoadFileTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 3, 6)
)
if mibBuilder.loadTexts:
    loadFileTable.setStatus("mandatory")
_LoadFileEntry_Object = MibTableRow
loadFileEntry = _LoadFileEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 3, 6, 1)
)
loadFileEntry.setIndexNames(
    (0, "MRVINREACH", "loadFileName"),
)
if mibBuilder.loadTexts:
    loadFileEntry.setStatus("mandatory")


class _LoadFileName_Type(DisplayString):
    """Custom type loadFileName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_LoadFileName_Type.__name__ = "DisplayString"
_LoadFileName_Object = MibTableColumn
loadFileName = _LoadFileName_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 3, 6, 1, 1),
    _LoadFileName_Type()
)
loadFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    loadFileName.setStatus("mandatory")
_LoadFileCreation_Type = DateTime
_LoadFileCreation_Object = MibTableColumn
loadFileCreation = _LoadFileCreation_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 3, 6, 1, 2),
    _LoadFileCreation_Type()
)
loadFileCreation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    loadFileCreation.setStatus("mandatory")
_LoadFileSize_Type = Integer32
_LoadFileSize_Object = MibTableColumn
loadFileSize = _LoadFileSize_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 3, 6, 1, 3),
    _LoadFileSize_Type()
)
loadFileSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    loadFileSize.setStatus("mandatory")


class _LoadFileSoftwareVersionType_Type(Integer32):
    """Custom type loadFileSoftwareVersionType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("alpha", 1),
          ("beta", 2),
          ("production", 3),
          ("special", 4))
    )


_LoadFileSoftwareVersionType_Type.__name__ = "Integer32"
_LoadFileSoftwareVersionType_Object = MibTableColumn
loadFileSoftwareVersionType = _LoadFileSoftwareVersionType_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 3, 6, 1, 4),
    _LoadFileSoftwareVersionType_Type()
)
loadFileSoftwareVersionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    loadFileSoftwareVersionType.setStatus("mandatory")


class _LoadFileSoftwareVersion_Type(OctetString):
    """Custom type loadFileSoftwareVersion based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_LoadFileSoftwareVersion_Type.__name__ = "OctetString"
_LoadFileSoftwareVersion_Object = MibTableColumn
loadFileSoftwareVersion = _LoadFileSoftwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 3, 6, 1, 5),
    _LoadFileSoftwareVersion_Type()
)
loadFileSoftwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    loadFileSoftwareVersion.setStatus("mandatory")
_XParam_ObjectIdentity = ObjectIdentity
xParam = _XParam_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 6, 4)
)


class _ParamService_Type(Integer32):
    """Custom type paramService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_ParamService_Type.__name__ = "Integer32"
_ParamService_Object = MibScalar
paramService = _ParamService_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 4, 1),
    _ParamService_Type()
)
paramService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    paramService.setStatus("mandatory")


class _ParamDefaultService_Type(Integer32):
    """Custom type paramDefaultService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_ParamDefaultService_Type.__name__ = "Integer32"
_ParamDefaultService_Object = MibScalar
paramDefaultService = _ParamDefaultService_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 4, 2),
    _ParamDefaultService_Type()
)
paramDefaultService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    paramDefaultService.setStatus("mandatory")


class _ParamDrive_Type(Integer32):
    """Custom type paramDrive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_ParamDrive_Type.__name__ = "Integer32"
_ParamDrive_Object = MibScalar
paramDrive = _ParamDrive_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 4, 3),
    _ParamDrive_Type()
)
paramDrive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    paramDrive.setStatus("mandatory")
_ParamActive_Type = Gauge32
_ParamActive_Object = MibScalar
paramActive = _ParamActive_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 4, 4),
    _ParamActive_Type()
)
paramActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramActive.setStatus("mandatory")
_ParamStorageActive_Type = Gauge32
_ParamStorageActive_Object = MibScalar
paramStorageActive = _ParamStorageActive_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 4, 5),
    _ParamStorageActive_Type()
)
paramStorageActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramStorageActive.setStatus("mandatory")
_ParamFileNumber_Type = Gauge32
_ParamFileNumber_Object = MibScalar
paramFileNumber = _ParamFileNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 4, 6),
    _ParamFileNumber_Type()
)
paramFileNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramFileNumber.setStatus("mandatory")
_ParamFileTable_Object = MibTable
paramFileTable = _ParamFileTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 4, 7)
)
if mibBuilder.loadTexts:
    paramFileTable.setStatus("mandatory")
_ParamFileEntry_Object = MibTableRow
paramFileEntry = _ParamFileEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 4, 7, 1)
)
paramFileEntry.setIndexNames(
    (0, "MRVINREACH", "paramFileIdentificationType"),
    (0, "MRVINREACH", "paramFileIdentification"),
)
if mibBuilder.loadTexts:
    paramFileEntry.setStatus("mandatory")
_ParamFileIdentificationType_Type = AddressType
_ParamFileIdentificationType_Object = MibTableColumn
paramFileIdentificationType = _ParamFileIdentificationType_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 4, 7, 1, 1),
    _ParamFileIdentificationType_Type()
)
paramFileIdentificationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramFileIdentificationType.setStatus("mandatory")


class _ParamFileIdentification_Type(OctetString):
    """Custom type paramFileIdentification based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 6),
    )


_ParamFileIdentification_Type.__name__ = "OctetString"
_ParamFileIdentification_Object = MibTableColumn
paramFileIdentification = _ParamFileIdentification_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 4, 7, 1, 2),
    _ParamFileIdentification_Type()
)
paramFileIdentification.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramFileIdentification.setStatus("mandatory")


class _ParamFileEntryStatus_Type(Integer32):
    """Custom type paramFileEntryStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ParamFileEntryStatus_Type.__name__ = "Integer32"
_ParamFileEntryStatus_Object = MibTableColumn
paramFileEntryStatus = _ParamFileEntryStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 4, 7, 1, 3),
    _ParamFileEntryStatus_Type()
)
paramFileEntryStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    paramFileEntryStatus.setStatus("mandatory")
_ParamFileWrite_Type = DateTime
_ParamFileWrite_Object = MibTableColumn
paramFileWrite = _ParamFileWrite_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 4, 7, 1, 4),
    _ParamFileWrite_Type()
)
paramFileWrite.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramFileWrite.setStatus("mandatory")
_ParamFileSize_Type = Integer32
_ParamFileSize_Object = MibTableColumn
paramFileSize = _ParamFileSize_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 4, 7, 1, 5),
    _ParamFileSize_Type()
)
paramFileSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramFileSize.setStatus("mandatory")
_ParamFileParameterVersion_Type = Integer32
_ParamFileParameterVersion_Object = MibTableColumn
paramFileParameterVersion = _ParamFileParameterVersion_Object(
    (1, 3, 6, 1, 4, 1, 33, 6, 4, 7, 1, 6),
    _ParamFileParameterVersion_Type()
)
paramFileParameterVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramFileParameterVersion.setStatus("mandatory")
_XParamClient_ObjectIdentity = ObjectIdentity
xParamClient = _XParamClient_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 7)
)
_ParamClientLoaderName_Type = DisplayString
_ParamClientLoaderName_Object = MibScalar
paramClientLoaderName = _ParamClientLoaderName_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 1),
    _ParamClientLoaderName_Type()
)
paramClientLoaderName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramClientLoaderName.setStatus("mandatory")
_ParamClientLoaderAddressType_Type = AddressType
_ParamClientLoaderAddressType_Object = MibScalar
paramClientLoaderAddressType = _ParamClientLoaderAddressType_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 2),
    _ParamClientLoaderAddressType_Type()
)
paramClientLoaderAddressType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramClientLoaderAddressType.setStatus("mandatory")
_ParamClientLoaderAddress_Type = OctetString
_ParamClientLoaderAddress_Object = MibScalar
paramClientLoaderAddress = _ParamClientLoaderAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 3),
    _ParamClientLoaderAddress_Type()
)
paramClientLoaderAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramClientLoaderAddress.setStatus("mandatory")
_ParamClientParameterVersion_Type = Integer32
_ParamClientParameterVersion_Object = MibScalar
paramClientParameterVersion = _ParamClientParameterVersion_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 4),
    _ParamClientParameterVersion_Type()
)
paramClientParameterVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    paramClientParameterVersion.setStatus("mandatory")
_ParamClientUpdateTime_Type = DateTime
_ParamClientUpdateTime_Object = MibScalar
paramClientUpdateTime = _ParamClientUpdateTime_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 5),
    _ParamClientUpdateTime_Type()
)
paramClientUpdateTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramClientUpdateTime.setStatus("mandatory")


class _ParamClientServerCheck_Type(Integer32):
    """Custom type paramClientServerCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_ParamClientServerCheck_Type.__name__ = "Integer32"
_ParamClientServerCheck_Object = MibScalar
paramClientServerCheck = _ParamClientServerCheck_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 6),
    _ParamClientServerCheck_Type()
)
paramClientServerCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    paramClientServerCheck.setStatus("mandatory")


class _ParamClientCheckInterval_Type(Integer32):
    """Custom type paramClientCheckInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 120),
    )


_ParamClientCheckInterval_Type.__name__ = "Integer32"
_ParamClientCheckInterval_Object = MibScalar
paramClientCheckInterval = _ParamClientCheckInterval_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 7),
    _ParamClientCheckInterval_Type()
)
paramClientCheckInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    paramClientCheckInterval.setStatus("mandatory")


class _ParamClientCheckNow_Type(Integer32):
    """Custom type paramClientCheckNow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_ParamClientCheckNow_Type.__name__ = "Integer32"
_ParamClientCheckNow_Object = MibScalar
paramClientCheckNow = _ParamClientCheckNow_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 8),
    _ParamClientCheckNow_Type()
)
paramClientCheckNow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    paramClientCheckNow.setStatus("mandatory")


class _ParamClientServerLimit_Type(Integer32):
    """Custom type paramClientServerLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_ParamClientServerLimit_Type.__name__ = "Integer32"
_ParamClientServerLimit_Object = MibScalar
paramClientServerLimit = _ParamClientServerLimit_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 9),
    _ParamClientServerLimit_Type()
)
paramClientServerLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    paramClientServerLimit.setStatus("mandatory")


class _ParamClientRetransmitInterval_Type(Integer32):
    """Custom type paramClientRetransmitInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 30),
    )


_ParamClientRetransmitInterval_Type.__name__ = "Integer32"
_ParamClientRetransmitInterval_Object = MibScalar
paramClientRetransmitInterval = _ParamClientRetransmitInterval_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 10),
    _ParamClientRetransmitInterval_Type()
)
paramClientRetransmitInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    paramClientRetransmitInterval.setStatus("mandatory")


class _ParamClientRetransmitLimit_Type(Integer32):
    """Custom type paramClientRetransmitLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_ParamClientRetransmitLimit_Type.__name__ = "Integer32"
_ParamClientRetransmitLimit_Object = MibScalar
paramClientRetransmitLimit = _ParamClientRetransmitLimit_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 11),
    _ParamClientRetransmitLimit_Type()
)
paramClientRetransmitLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    paramClientRetransmitLimit.setStatus("mandatory")


class _ParamClientState_Type(Integer32):
    """Custom type paramClientState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("hold", 11),
          ("idle", 2),
          ("internal1", 3),
          ("internal2", 4),
          ("internal3", 5),
          ("internal4", 6),
          ("internal5", 7),
          ("internal6", 8),
          ("internal7", 9),
          ("internal8", 10),
          ("other", 1),
          ("retry", 12))
    )


_ParamClientState_Type.__name__ = "Integer32"
_ParamClientState_Object = MibScalar
paramClientState = _ParamClientState_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 12),
    _ParamClientState_Type()
)
paramClientState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramClientState.setStatus("mandatory")
_ParamClientProtocolErrors_Type = Counter32
_ParamClientProtocolErrors_Object = MibScalar
paramClientProtocolErrors = _ParamClientProtocolErrors_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 13),
    _ParamClientProtocolErrors_Type()
)
paramClientProtocolErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramClientProtocolErrors.setStatus("mandatory")
_ParamClientServerRejects_Type = Counter32
_ParamClientServerRejects_Object = MibScalar
paramClientServerRejects = _ParamClientServerRejects_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 14),
    _ParamClientServerRejects_Type()
)
paramClientServerRejects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramClientServerRejects.setStatus("mandatory")
_ParamClientServerNumber_Type = Integer32
_ParamClientServerNumber_Object = MibScalar
paramClientServerNumber = _ParamClientServerNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 15),
    _ParamClientServerNumber_Type()
)
paramClientServerNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramClientServerNumber.setStatus("mandatory")
_ParamServerTable_Object = MibTable
paramServerTable = _ParamServerTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 16)
)
if mibBuilder.loadTexts:
    paramServerTable.setStatus("mandatory")
_ParamServerEntry_Object = MibTableRow
paramServerEntry = _ParamServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 16, 1)
)
paramServerEntry.setIndexNames(
    (0, "MRVINREACH", "paramServerName"),
)
if mibBuilder.loadTexts:
    paramServerEntry.setStatus("mandatory")


class _ParamServerName_Type(DisplayString):
    """Custom type paramServerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 16),
    )


_ParamServerName_Type.__name__ = "DisplayString"
_ParamServerName_Object = MibTableColumn
paramServerName = _ParamServerName_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 16, 1, 1),
    _ParamServerName_Type()
)
paramServerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramServerName.setStatus("mandatory")


class _ParamServerEntryStatus_Type(Integer32):
    """Custom type paramServerEntryStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ParamServerEntryStatus_Type.__name__ = "Integer32"
_ParamServerEntryStatus_Object = MibTableColumn
paramServerEntryStatus = _ParamServerEntryStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 16, 1, 2),
    _ParamServerEntryStatus_Type()
)
paramServerEntryStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    paramServerEntryStatus.setStatus("mandatory")


class _ParamServerAddressType_Type(AddressType):
    """Custom type paramServerAddressType based on AddressType"""


_ParamServerAddressType_Object = MibTableColumn
paramServerAddressType = _ParamServerAddressType_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 16, 1, 3),
    _ParamServerAddressType_Type()
)
paramServerAddressType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    paramServerAddressType.setStatus("mandatory")
_ParamServerAddress_Type = OctetString
_ParamServerAddress_Object = MibTableColumn
paramServerAddress = _ParamServerAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 16, 1, 4),
    _ParamServerAddress_Type()
)
paramServerAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    paramServerAddress.setStatus("mandatory")


class _ParamServerStoredVersion_Type(Integer32):
    """Custom type paramServerStoredVersion based on Integer32"""
    defaultValue = 0


_ParamServerStoredVersion_Object = MibTableColumn
paramServerStoredVersion = _ParamServerStoredVersion_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 16, 1, 5),
    _ParamServerStoredVersion_Type()
)
paramServerStoredVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramServerStoredVersion.setStatus("mandatory")


class _ParamServerStoredTime_Type(DateTime):
    """Custom type paramServerStoredTime based on DateTime"""
    defaultHexValue = "00"


_ParamServerStoredTime_Object = MibTableColumn
paramServerStoredTime = _ParamServerStoredTime_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 16, 1, 6),
    _ParamServerStoredTime_Type()
)
paramServerStoredTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramServerStoredTime.setStatus("mandatory")


class _ParamServerStoredStatus_Type(Integer32):
    """Custom type paramServerStoredStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("ahead", 3),
          ("behind", 4),
          ("current", 2),
          ("failed", 6),
          ("failing", 5),
          ("noMemCard", 8),
          ("query", 7),
          ("unknown", 1))
    )


_ParamServerStoredStatus_Type.__name__ = "Integer32"
_ParamServerStoredStatus_Object = MibTableColumn
paramServerStoredStatus = _ParamServerStoredStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 16, 1, 7),
    _ParamServerStoredStatus_Type()
)
paramServerStoredStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramServerStoredStatus.setStatus("mandatory")


class _ParamServerStoredFailure_Type(Integer32):
    """Custom type paramServerStoredFailure based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("close", 10),
          ("delete", 11),
          ("fileData", 13),
          ("none", 2),
          ("open", 4),
          ("other", 1),
          ("protocolIn", 8),
          ("protocolOut", 3),
          ("read", 5),
          ("rename", 12),
          ("resource", 7),
          ("response", 9),
          ("write", 6))
    )


_ParamServerStoredFailure_Type.__name__ = "Integer32"
_ParamServerStoredFailure_Object = MibTableColumn
paramServerStoredFailure = _ParamServerStoredFailure_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 16, 1, 8),
    _ParamServerStoredFailure_Type()
)
paramServerStoredFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramServerStoredFailure.setStatus("mandatory")


class _ParamClientPath_Type(DisplayString):
    """Custom type paramClientPath based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_ParamClientPath_Type.__name__ = "DisplayString"
_ParamClientPath_Object = MibScalar
paramClientPath = _ParamClientPath_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 17),
    _ParamClientPath_Type()
)
paramClientPath.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    paramClientPath.setStatus("mandatory")


class _ParamClientChassisStorageState_Type(Integer32):
    """Custom type paramClientChassisStorageState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("behind", 8),
          ("busBusy", 5),
          ("current", 3),
          ("failing", 7),
          ("notApplicable", 1),
          ("retrying", 6),
          ("unknown", 2),
          ("verifying", 4))
    )


_ParamClientChassisStorageState_Type.__name__ = "Integer32"
_ParamClientChassisStorageState_Object = MibScalar
paramClientChassisStorageState = _ParamClientChassisStorageState_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 18),
    _ParamClientChassisStorageState_Type()
)
paramClientChassisStorageState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    paramClientChassisStorageState.setStatus("mandatory")


class _ParamClientTftpBroadcast_Type(Integer32):
    """Custom type paramClientTftpBroadcast based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_ParamClientTftpBroadcast_Type.__name__ = "Integer32"
_ParamClientTftpBroadcast_Object = MibScalar
paramClientTftpBroadcast = _ParamClientTftpBroadcast_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 20),
    _ParamClientTftpBroadcast_Type()
)
paramClientTftpBroadcast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    paramClientTftpBroadcast.setStatus("mandatory")


class _ParamClientWriteNow_Type(Integer32):
    """Custom type paramClientWriteNow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_ParamClientWriteNow_Type.__name__ = "Integer32"
_ParamClientWriteNow_Object = MibScalar
paramClientWriteNow = _ParamClientWriteNow_Object(
    (1, 3, 6, 1, 4, 1, 33, 7, 21),
    _ParamClientWriteNow_Type()
)
paramClientWriteNow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    paramClientWriteNow.setStatus("mandatory")
_Agent_ObjectIdentity = ObjectIdentity
agent = _Agent_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8)
)
_TerminalServer_ObjectIdentity = ObjectIdentity
terminalServer = _TerminalServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1)
)
_TsMxCard1M_ObjectIdentity = ObjectIdentity
tsMxCard1M = _TsMxCard1M_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 1)
)
_TsMxBox1M_ObjectIdentity = ObjectIdentity
tsMxBox1M = _TsMxBox1M_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 2)
)
_TsMxCard_ObjectIdentity = ObjectIdentity
tsMxCard = _TsMxCard_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 3)
)
_TsMxBox_ObjectIdentity = ObjectIdentity
tsMxBox = _TsMxBox_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 4)
)
_TsN9_ObjectIdentity = ObjectIdentity
tsN9 = _TsN9_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 5)
)
_TsPrint_ObjectIdentity = ObjectIdentity
tsPrint = _TsPrint_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 6)
)
_TsX25_ObjectIdentity = ObjectIdentity
tsX25 = _TsX25_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 7)
)
_Em1608_ObjectIdentity = ObjectIdentity
em1608 = _Em1608_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 29)
)
_Ir7520_ObjectIdentity = ObjectIdentity
ir7520 = _Ir7520_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 30)
)
_Ir9020_ObjectIdentity = ObjectIdentity
ir9020 = _Ir9020_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 31)
)
_Ir7020_ObjectIdentity = ObjectIdentity
ir7020 = _Ir7020_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 32)
)
_IrMgr0Rdc_ObjectIdentity = ObjectIdentity
irMgr0Rdc = _IrMgr0Rdc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 124)
)
_Ir9040_ObjectIdentity = ObjectIdentity
ir9040 = _Ir9040_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 125)
)
_Ir7040_ObjectIdentity = ObjectIdentity
ir7040 = _Ir7040_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 126)
)
_IrMgr0_ObjectIdentity = ObjectIdentity
irMgr0 = _IrMgr0_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 127)
)
_IrM800_ObjectIdentity = ObjectIdentity
irM800 = _IrM800_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 128)
)
_IrM700_ObjectIdentity = ObjectIdentity
irM700 = _IrM700_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 129)
)
_Ir8020_ObjectIdentity = ObjectIdentity
ir8020 = _Ir8020_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 130)
)
_Ir8040_ObjectIdentity = ObjectIdentity
ir8040 = _Ir8040_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 131)
)
_Ir7004_ObjectIdentity = ObjectIdentity
ir7004 = _Ir7004_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 132)
)
_Ir7008_ObjectIdentity = ObjectIdentity
ir7008 = _Ir7008_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 133)
)
_Ir8004_ObjectIdentity = ObjectIdentity
ir8004 = _Ir8004_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 134)
)
_Ir8008_ObjectIdentity = ObjectIdentity
ir8008 = _Ir8008_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 135)
)
_IrM900_ObjectIdentity = ObjectIdentity
irM900 = _IrM900_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 136)
)
_IrMGR0AC_ObjectIdentity = ObjectIdentity
irMGR0AC = _IrMGR0AC_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 137)
)
_IrMGR0AC_IN_ObjectIdentity = ObjectIdentity
irMGR0AC_IN = _IrMGR0AC_IN_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 138)
)
_Ir9004_ObjectIdentity = ObjectIdentity
ir9004 = _Ir9004_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 139)
)
_Ir9008_ObjectIdentity = ObjectIdentity
ir9008 = _Ir9008_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 140)
)
_Ir9504_ObjectIdentity = ObjectIdentity
ir9504 = _Ir9504_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 1, 141)
)
_Bridge_ObjectIdentity = ObjectIdentity
bridge = _Bridge_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 3)
)
_Repeater_ObjectIdentity = ObjectIdentity
repeater = _Repeater_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 4)
)
_RpMx_ObjectIdentity = ObjectIdentity
rpMx = _RpMx_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 4, 1)
)
_RpN9_ObjectIdentity = ObjectIdentity
rpN9 = _RpN9_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 4, 2)
)
_BridgeRouter_ObjectIdentity = ObjectIdentity
bridgeRouter = _BridgeRouter_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 5)
)
_BridgeRouterMx_ObjectIdentity = ObjectIdentity
bridgeRouterMx = _BridgeRouterMx_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 5, 1)
)
_BridgeRouterN9_ObjectIdentity = ObjectIdentity
bridgeRouterN9 = _BridgeRouterN9_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 5, 2)
)
_BridgeRouterN3_ObjectIdentity = ObjectIdentity
bridgeRouterN3 = _BridgeRouterN3_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 5, 3)
)
_BridgeRouterN2_ObjectIdentity = ObjectIdentity
bridgeRouterN2 = _BridgeRouterN2_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 5, 4)
)
_BridgeRouterEB_ObjectIdentity = ObjectIdentity
bridgeRouterEB = _BridgeRouterEB_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 5, 5)
)
_BridgeRouterRepeater_ObjectIdentity = ObjectIdentity
bridgeRouterRepeater = _BridgeRouterRepeater_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 7)
)
_Switch_ObjectIdentity = ObjectIdentity
switch = _Switch_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 8)
)
_Oem_ObjectIdentity = ObjectIdentity
oem = _Oem_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 9)
)
_NetVantage_ObjectIdentity = ObjectIdentity
netVantage = _NetVantage_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 9, 1)
)
_Nv8516TT_ObjectIdentity = ObjectIdentity
nv8516TT = _Nv8516TT_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 9, 1, 1)
)
_Nv8516FF_ObjectIdentity = ObjectIdentity
nv8516FF = _Nv8516FF_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 9, 1, 2)
)
_Nbase_ObjectIdentity = ObjectIdentity
nbase = _Nbase_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 10)
)
_NbaseSwitch_ObjectIdentity = ObjectIdentity
nbaseSwitch = _NbaseSwitch_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 10, 1)
)
_NbaseSwitchN9_ObjectIdentity = ObjectIdentity
nbaseSwitchN9 = _NbaseSwitchN9_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 8, 10, 1, 1)
)
_XInternet_ObjectIdentity = ObjectIdentity
xInternet = _XInternet_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10)
)
_XIp_ObjectIdentity = ObjectIdentity
xIp = _XIp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 1)
)
_IpGatewayAddress1_Type = IpAddress
_IpGatewayAddress1_Object = MibScalar
ipGatewayAddress1 = _IpGatewayAddress1_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 1, 1),
    _IpGatewayAddress1_Type()
)
ipGatewayAddress1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipGatewayAddress1.setStatus("mandatory")
_IpGatewayAddress2_Type = IpAddress
_IpGatewayAddress2_Object = MibScalar
ipGatewayAddress2 = _IpGatewayAddress2_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 1, 2),
    _IpGatewayAddress2_Type()
)
ipGatewayAddress2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipGatewayAddress2.setStatus("mandatory")


class _IpAutoSubnetMask_Type(Integer32):
    """Custom type ipAutoSubnetMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpAutoSubnetMask_Type.__name__ = "Integer32"
_IpAutoSubnetMask_Object = MibScalar
ipAutoSubnetMask = _IpAutoSubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 1, 3),
    _IpAutoSubnetMask_Type()
)
ipAutoSubnetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAutoSubnetMask.setStatus("deprecated")


class _IpReassembly_Type(Integer32):
    """Custom type ipReassembly based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpReassembly_Type.__name__ = "Integer32"
_IpReassembly_Object = MibScalar
ipReassembly = _IpReassembly_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 1, 4),
    _IpReassembly_Type()
)
ipReassembly.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipReassembly.setStatus("mandatory")
_IpFragmentsQueuedHigh_Type = Gauge32
_IpFragmentsQueuedHigh_Object = MibScalar
ipFragmentsQueuedHigh = _IpFragmentsQueuedHigh_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 1, 5),
    _IpFragmentsQueuedHigh_Type()
)
ipFragmentsQueuedHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipFragmentsQueuedHigh.setStatus("mandatory")
_IpFragmentsQueuedCurrent_Type = Gauge32
_IpFragmentsQueuedCurrent_Object = MibScalar
ipFragmentsQueuedCurrent = _IpFragmentsQueuedCurrent_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 1, 6),
    _IpFragmentsQueuedCurrent_Type()
)
ipFragmentsQueuedCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipFragmentsQueuedCurrent.setStatus("mandatory")
_IpGenAdExtTable_Object = MibTable
ipGenAdExtTable = _IpGenAdExtTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 1, 7)
)
if mibBuilder.loadTexts:
    ipGenAdExtTable.setStatus("mandatory")
_IpGenAdExtEntry_Object = MibTableRow
ipGenAdExtEntry = _IpGenAdExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 1, 7, 1)
)
ipGenAdExtEntry.setIndexNames(
    (0, "MRVINREACH", "ipAdEntAddr"),
)
if mibBuilder.loadTexts:
    ipGenAdExtEntry.setStatus("mandatory")


class _IpGenAdEntExtType_Type(Integer32):
    """Custom type ipGenAdEntExtType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ppp", 4),
          ("primary", 1),
          ("rotary", 2),
          ("slip", 3))
    )


_IpGenAdEntExtType_Type.__name__ = "Integer32"
_IpGenAdEntExtType_Object = MibTableColumn
ipGenAdEntExtType = _IpGenAdEntExtType_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 1, 7, 1, 1),
    _IpGenAdEntExtType_Type()
)
ipGenAdEntExtType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipGenAdEntExtType.setStatus("mandatory")


class _IpGenAdEntExtBroadcast_Type(IpAddress):
    """Custom type ipGenAdEntExtBroadcast based on IpAddress"""
    defaultHexValue = "ffffffff"


_IpGenAdEntExtBroadcast_Object = MibTableColumn
ipGenAdEntExtBroadcast = _IpGenAdEntExtBroadcast_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 1, 7, 1, 2),
    _IpGenAdEntExtBroadcast_Type()
)
ipGenAdEntExtBroadcast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipGenAdEntExtBroadcast.setStatus("mandatory")


class _IpARPTimeout_Type(Integer32):
    """Custom type ipARPTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_IpARPTimeout_Type.__name__ = "Integer32"
_IpARPTimeout_Object = MibScalar
ipARPTimeout = _IpARPTimeout_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 1, 8),
    _IpARPTimeout_Type()
)
ipARPTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipARPTimeout.setStatus("mandatory")


class _IpGatewayPingInterval_Type(Integer32):
    """Custom type ipGatewayPingInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 300),
    )


_IpGatewayPingInterval_Type.__name__ = "Integer32"
_IpGatewayPingInterval_Object = MibScalar
ipGatewayPingInterval = _IpGatewayPingInterval_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 1, 9),
    _IpGatewayPingInterval_Type()
)
ipGatewayPingInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipGatewayPingInterval.setStatus("mandatory")


class _IpConfigureBootp_Type(Integer32):
    """Custom type ipConfigureBootp based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpConfigureBootp_Type.__name__ = "Integer32"
_IpConfigureBootp_Object = MibScalar
ipConfigureBootp = _IpConfigureBootp_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 1, 11),
    _IpConfigureBootp_Type()
)
ipConfigureBootp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipConfigureBootp.setStatus("mandatory")
_XTcp_ObjectIdentity = ObjectIdentity
xTcp = _XTcp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 2)
)
_TcpPortTable_Object = MibTable
tcpPortTable = _TcpPortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 2, 1)
)
if mibBuilder.loadTexts:
    tcpPortTable.setStatus("mandatory")
_TcpPortEntry_Object = MibTableRow
tcpPortEntry = _TcpPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 2, 1, 1)
)
tcpPortEntry.setIndexNames(
    (0, "MRVINREACH", "tcpPortIndex"),
)
if mibBuilder.loadTexts:
    tcpPortEntry.setStatus("mandatory")
_TcpPortIndex_Type = Integer32
_TcpPortIndex_Object = MibTableColumn
tcpPortIndex = _TcpPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 2, 1, 1, 1),
    _TcpPortIndex_Type()
)
tcpPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpPortIndex.setStatus("mandatory")


class _TcpPortConnectByAddress_Type(Integer32):
    """Custom type tcpPortConnectByAddress based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_TcpPortConnectByAddress_Type.__name__ = "Integer32"
_TcpPortConnectByAddress_Object = MibTableColumn
tcpPortConnectByAddress = _TcpPortConnectByAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 2, 1, 1, 2),
    _TcpPortConnectByAddress_Type()
)
tcpPortConnectByAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tcpPortConnectByAddress.setStatus("mandatory")


class _TcpPortWindowSize_Type(Integer32):
    """Custom type tcpPortWindowSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(64, 8192),
    )


_TcpPortWindowSize_Type.__name__ = "Integer32"
_TcpPortWindowSize_Object = MibTableColumn
tcpPortWindowSize = _TcpPortWindowSize_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 2, 1, 1, 3),
    _TcpPortWindowSize_Type()
)
tcpPortWindowSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tcpPortWindowSize.setStatus("mandatory")


class _TcpPortKeepAliveLimit_Type(Integer32):
    """Custom type tcpPortKeepAliveLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
    )


_TcpPortKeepAliveLimit_Type.__name__ = "Integer32"
_TcpPortKeepAliveLimit_Object = MibTableColumn
tcpPortKeepAliveLimit = _TcpPortKeepAliveLimit_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 2, 1, 1, 4),
    _TcpPortKeepAliveLimit_Type()
)
tcpPortKeepAliveLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tcpPortKeepAliveLimit.setStatus("mandatory")


class _TcpResequencing_Type(Integer32):
    """Custom type tcpResequencing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_TcpResequencing_Type.__name__ = "Integer32"
_TcpResequencing_Object = MibScalar
tcpResequencing = _TcpResequencing_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 2, 2),
    _TcpResequencing_Type()
)
tcpResequencing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tcpResequencing.setStatus("mandatory")
_TcpQueuedSegs_Type = Gauge32
_TcpQueuedSegs_Object = MibScalar
tcpQueuedSegs = _TcpQueuedSegs_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 2, 3),
    _TcpQueuedSegs_Type()
)
tcpQueuedSegs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpQueuedSegs.setStatus("mandatory")
_TcpDiscardSegs_Type = Counter32
_TcpDiscardSegs_Object = MibScalar
tcpDiscardSegs = _TcpDiscardSegs_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 2, 4),
    _TcpDiscardSegs_Type()
)
tcpDiscardSegs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpDiscardSegs.setStatus("mandatory")


class _TcpConnectTimer_Type(Integer32):
    """Custom type tcpConnectTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(4, 32),
    )


_TcpConnectTimer_Type.__name__ = "Integer32"
_TcpConnectTimer_Object = MibScalar
tcpConnectTimer = _TcpConnectTimer_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 2, 5),
    _TcpConnectTimer_Type()
)
tcpConnectTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tcpConnectTimer.setStatus("mandatory")


class _TcpLocalPortBase_Type(Integer32):
    """Custom type tcpLocalPortBase based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_TcpLocalPortBase_Type.__name__ = "Integer32"
_TcpLocalPortBase_Object = MibScalar
tcpLocalPortBase = _TcpLocalPortBase_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 2, 6),
    _TcpLocalPortBase_Type()
)
tcpLocalPortBase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tcpLocalPortBase.setStatus("mandatory")


class _TcpLocalPortIncrement_Type(Integer32):
    """Custom type tcpLocalPortIncrement based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_TcpLocalPortIncrement_Type.__name__ = "Integer32"
_TcpLocalPortIncrement_Object = MibScalar
tcpLocalPortIncrement = _TcpLocalPortIncrement_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 2, 7),
    _TcpLocalPortIncrement_Type()
)
tcpLocalPortIncrement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tcpLocalPortIncrement.setStatus("mandatory")


class _TcpRoutingTblSz_Type(Integer32):
    """Custom type tcpRoutingTblSz based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(64, 512),
    )


_TcpRoutingTblSz_Type.__name__ = "Integer32"
_TcpRoutingTblSz_Object = MibScalar
tcpRoutingTblSz = _TcpRoutingTblSz_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 2, 8),
    _TcpRoutingTblSz_Type()
)
tcpRoutingTblSz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tcpRoutingTblSz.setStatus("mandatory")


class _TcpDataSendDelay_Type(Integer32):
    """Custom type tcpDataSendDelay based on Integer32"""
    defaultValue = 50

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3000),
    )


_TcpDataSendDelay_Type.__name__ = "Integer32"
_TcpDataSendDelay_Object = MibScalar
tcpDataSendDelay = _TcpDataSendDelay_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 2, 9),
    _TcpDataSendDelay_Type()
)
tcpDataSendDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tcpDataSendDelay.setStatus("mandatory")


class _TcpAckDelay_Type(Integer32):
    """Custom type tcpAckDelay based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_TcpAckDelay_Type.__name__ = "Integer32"
_TcpAckDelay_Object = MibScalar
tcpAckDelay = _TcpAckDelay_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 2, 10),
    _TcpAckDelay_Type()
)
tcpAckDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tcpAckDelay.setStatus("mandatory")


class _TcpRetransmitMin_Type(Integer32):
    """Custom type tcpRetransmitMin based on Integer32"""
    defaultValue = 640

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(600, 3000),
    )


_TcpRetransmitMin_Type.__name__ = "Integer32"
_TcpRetransmitMin_Object = MibScalar
tcpRetransmitMin = _TcpRetransmitMin_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 2, 11),
    _TcpRetransmitMin_Type()
)
tcpRetransmitMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tcpRetransmitMin.setStatus("mandatory")
_XSnmpAgent_ObjectIdentity = ObjectIdentity
xSnmpAgent = _XSnmpAgent_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 3)
)


class _SnmpAgentGetCommunity_Type(DisplayString):
    """Custom type snmpAgentGetCommunity based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SnmpAgentGetCommunity_Type.__name__ = "DisplayString"
_SnmpAgentGetCommunity_Object = MibScalar
snmpAgentGetCommunity = _SnmpAgentGetCommunity_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 1),
    _SnmpAgentGetCommunity_Type()
)
snmpAgentGetCommunity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentGetCommunity.setStatus("mandatory")


class _SnmpAgentSetCommunity_Type(DisplayString):
    """Custom type snmpAgentSetCommunity based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SnmpAgentSetCommunity_Type.__name__ = "DisplayString"
_SnmpAgentSetCommunity_Object = MibScalar
snmpAgentSetCommunity = _SnmpAgentSetCommunity_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 2),
    _SnmpAgentSetCommunity_Type()
)
snmpAgentSetCommunity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentSetCommunity.setStatus("mandatory")


class _SnmpAgentTrapCommunity_Type(DisplayString):
    """Custom type snmpAgentTrapCommunity based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SnmpAgentTrapCommunity_Type.__name__ = "DisplayString"
_SnmpAgentTrapCommunity_Object = MibScalar
snmpAgentTrapCommunity = _SnmpAgentTrapCommunity_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 3),
    _SnmpAgentTrapCommunity_Type()
)
snmpAgentTrapCommunity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentTrapCommunity.setStatus("mandatory")
_SnmpAgentGetClientNumber_Type = Integer32
_SnmpAgentGetClientNumber_Object = MibScalar
snmpAgentGetClientNumber = _SnmpAgentGetClientNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 4),
    _SnmpAgentGetClientNumber_Type()
)
snmpAgentGetClientNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentGetClientNumber.setStatus("mandatory")
_SnmpAgentSetClientNumber_Type = Integer32
_SnmpAgentSetClientNumber_Object = MibScalar
snmpAgentSetClientNumber = _SnmpAgentSetClientNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 5),
    _SnmpAgentSetClientNumber_Type()
)
snmpAgentSetClientNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentSetClientNumber.setStatus("mandatory")
_SnmpAgentTrapClientNumber_Type = Integer32
_SnmpAgentTrapClientNumber_Object = MibScalar
snmpAgentTrapClientNumber = _SnmpAgentTrapClientNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 6),
    _SnmpAgentTrapClientNumber_Type()
)
snmpAgentTrapClientNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentTrapClientNumber.setStatus("mandatory")
_GetClientTable_Object = MibTable
getClientTable = _GetClientTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 7)
)
if mibBuilder.loadTexts:
    getClientTable.setStatus("mandatory")
_GetClientEntry_Object = MibTableRow
getClientEntry = _GetClientEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 7, 1)
)
getClientEntry.setIndexNames(
    (0, "MRVINREACH", "getClientIndex"),
)
if mibBuilder.loadTexts:
    getClientEntry.setStatus("mandatory")
_GetClientIndex_Type = Integer32
_GetClientIndex_Object = MibTableColumn
getClientIndex = _GetClientIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 7, 1, 1),
    _GetClientIndex_Type()
)
getClientIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    getClientIndex.setStatus("mandatory")


class _GetClientEntryStatus_Type(Integer32):
    """Custom type getClientEntryStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_GetClientEntryStatus_Type.__name__ = "Integer32"
_GetClientEntryStatus_Object = MibTableColumn
getClientEntryStatus = _GetClientEntryStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 7, 1, 2),
    _GetClientEntryStatus_Type()
)
getClientEntryStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    getClientEntryStatus.setStatus("mandatory")


class _GetClientAddressType_Type(AddressType):
    """Custom type getClientAddressType based on AddressType"""


_GetClientAddressType_Object = MibTableColumn
getClientAddressType = _GetClientAddressType_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 7, 1, 3),
    _GetClientAddressType_Type()
)
getClientAddressType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    getClientAddressType.setStatus("mandatory")
_GetClientAddress_Type = OctetString
_GetClientAddress_Object = MibTableColumn
getClientAddress = _GetClientAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 7, 1, 4),
    _GetClientAddress_Type()
)
getClientAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    getClientAddress.setStatus("mandatory")
_SetClientTable_Object = MibTable
setClientTable = _SetClientTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 8)
)
if mibBuilder.loadTexts:
    setClientTable.setStatus("mandatory")
_SetClientEntry_Object = MibTableRow
setClientEntry = _SetClientEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 8, 1)
)
setClientEntry.setIndexNames(
    (0, "MRVINREACH", "setClientIndex"),
)
if mibBuilder.loadTexts:
    setClientEntry.setStatus("mandatory")
_SetClientIndex_Type = Integer32
_SetClientIndex_Object = MibTableColumn
setClientIndex = _SetClientIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 8, 1, 1),
    _SetClientIndex_Type()
)
setClientIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setClientIndex.setStatus("mandatory")


class _SetClientEntryStatus_Type(Integer32):
    """Custom type setClientEntryStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_SetClientEntryStatus_Type.__name__ = "Integer32"
_SetClientEntryStatus_Object = MibTableColumn
setClientEntryStatus = _SetClientEntryStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 8, 1, 2),
    _SetClientEntryStatus_Type()
)
setClientEntryStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setClientEntryStatus.setStatus("mandatory")


class _SetClientAddressType_Type(AddressType):
    """Custom type setClientAddressType based on AddressType"""


_SetClientAddressType_Object = MibTableColumn
setClientAddressType = _SetClientAddressType_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 8, 1, 3),
    _SetClientAddressType_Type()
)
setClientAddressType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setClientAddressType.setStatus("mandatory")
_SetClientAddress_Type = OctetString
_SetClientAddress_Object = MibTableColumn
setClientAddress = _SetClientAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 8, 1, 4),
    _SetClientAddress_Type()
)
setClientAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setClientAddress.setStatus("mandatory")
_TrapClientTable_Object = MibTable
trapClientTable = _TrapClientTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 9)
)
if mibBuilder.loadTexts:
    trapClientTable.setStatus("mandatory")
_TrapClientEntry_Object = MibTableRow
trapClientEntry = _TrapClientEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 9, 1)
)
trapClientEntry.setIndexNames(
    (0, "MRVINREACH", "trapClientIndex"),
)
if mibBuilder.loadTexts:
    trapClientEntry.setStatus("mandatory")
_TrapClientIndex_Type = Integer32
_TrapClientIndex_Object = MibTableColumn
trapClientIndex = _TrapClientIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 9, 1, 1),
    _TrapClientIndex_Type()
)
trapClientIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapClientIndex.setStatus("mandatory")


class _TrapClientEntryStatus_Type(Integer32):
    """Custom type trapClientEntryStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_TrapClientEntryStatus_Type.__name__ = "Integer32"
_TrapClientEntryStatus_Object = MibTableColumn
trapClientEntryStatus = _TrapClientEntryStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 9, 1, 2),
    _TrapClientEntryStatus_Type()
)
trapClientEntryStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    trapClientEntryStatus.setStatus("mandatory")


class _TrapClientAddressType_Type(AddressType):
    """Custom type trapClientAddressType based on AddressType"""


_TrapClientAddressType_Object = MibTableColumn
trapClientAddressType = _TrapClientAddressType_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 9, 1, 3),
    _TrapClientAddressType_Type()
)
trapClientAddressType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    trapClientAddressType.setStatus("mandatory")
_TrapClientAddress_Type = OctetString
_TrapClientAddress_Object = MibTableColumn
trapClientAddress = _TrapClientAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 9, 1, 4),
    _TrapClientAddress_Type()
)
trapClientAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    trapClientAddress.setStatus("mandatory")
_SnmpAgentAuthFailureAddress_Type = TypedAddress
_SnmpAgentAuthFailureAddress_Object = MibScalar
snmpAgentAuthFailureAddress = _SnmpAgentAuthFailureAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 10),
    _SnmpAgentAuthFailureAddress_Type()
)
snmpAgentAuthFailureAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentAuthFailureAddress.setStatus("mandatory")


class _SnmpAgentCommunityAuthenticationAlways_Type(Integer32):
    """Custom type snmpAgentCommunityAuthenticationAlways based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SnmpAgentCommunityAuthenticationAlways_Type.__name__ = "Integer32"
_SnmpAgentCommunityAuthenticationAlways_Object = MibScalar
snmpAgentCommunityAuthenticationAlways = _SnmpAgentCommunityAuthenticationAlways_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 14),
    _SnmpAgentCommunityAuthenticationAlways_Type()
)
snmpAgentCommunityAuthenticationAlways.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentCommunityAuthenticationAlways.setStatus("mandatory")


class _SnmpAgentTrapClientPingHost1_Type(Integer32):
    """Custom type snmpAgentTrapClientPingHost1 based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SnmpAgentTrapClientPingHost1_Type.__name__ = "Integer32"
_SnmpAgentTrapClientPingHost1_Object = MibScalar
snmpAgentTrapClientPingHost1 = _SnmpAgentTrapClientPingHost1_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 15),
    _SnmpAgentTrapClientPingHost1_Type()
)
snmpAgentTrapClientPingHost1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentTrapClientPingHost1.setStatus("mandatory")


class _SnmpAgentTrapClientPingHost2_Type(Integer32):
    """Custom type snmpAgentTrapClientPingHost2 based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SnmpAgentTrapClientPingHost2_Type.__name__ = "Integer32"
_SnmpAgentTrapClientPingHost2_Object = MibScalar
snmpAgentTrapClientPingHost2 = _SnmpAgentTrapClientPingHost2_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 16),
    _SnmpAgentTrapClientPingHost2_Type()
)
snmpAgentTrapClientPingHost2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentTrapClientPingHost2.setStatus("mandatory")


class _SnmpAgentTrapClientPingHost1PollInterval_Type(Integer32):
    """Custom type snmpAgentTrapClientPingHost1PollInterval based on Integer32"""
    defaultValue = 60

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SnmpAgentTrapClientPingHost1PollInterval_Type.__name__ = "Integer32"
_SnmpAgentTrapClientPingHost1PollInterval_Object = MibScalar
snmpAgentTrapClientPingHost1PollInterval = _SnmpAgentTrapClientPingHost1PollInterval_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 17),
    _SnmpAgentTrapClientPingHost1PollInterval_Type()
)
snmpAgentTrapClientPingHost1PollInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentTrapClientPingHost1PollInterval.setStatus("mandatory")


class _SnmpAgentTrapClientPingHost2PollInterval_Type(Integer32):
    """Custom type snmpAgentTrapClientPingHost2PollInterval based on Integer32"""
    defaultValue = 60

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SnmpAgentTrapClientPingHost2PollInterval_Type.__name__ = "Integer32"
_SnmpAgentTrapClientPingHost2PollInterval_Object = MibScalar
snmpAgentTrapClientPingHost2PollInterval = _SnmpAgentTrapClientPingHost2PollInterval_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 18),
    _SnmpAgentTrapClientPingHost2PollInterval_Type()
)
snmpAgentTrapClientPingHost2PollInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentTrapClientPingHost2PollInterval.setStatus("mandatory")


class _SnmpAgentTrapClientPingHost1PollRetries_Type(Integer32):
    """Custom type snmpAgentTrapClientPingHost1PollRetries based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SnmpAgentTrapClientPingHost1PollRetries_Type.__name__ = "Integer32"
_SnmpAgentTrapClientPingHost1PollRetries_Object = MibScalar
snmpAgentTrapClientPingHost1PollRetries = _SnmpAgentTrapClientPingHost1PollRetries_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 19),
    _SnmpAgentTrapClientPingHost1PollRetries_Type()
)
snmpAgentTrapClientPingHost1PollRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentTrapClientPingHost1PollRetries.setStatus("mandatory")


class _SnmpAgentTrapClientPingHost2PollRetries_Type(Integer32):
    """Custom type snmpAgentTrapClientPingHost2PollRetries based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SnmpAgentTrapClientPingHost2PollRetries_Type.__name__ = "Integer32"
_SnmpAgentTrapClientPingHost2PollRetries_Object = MibScalar
snmpAgentTrapClientPingHost2PollRetries = _SnmpAgentTrapClientPingHost2PollRetries_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 20),
    _SnmpAgentTrapClientPingHost2PollRetries_Type()
)
snmpAgentTrapClientPingHost2PollRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentTrapClientPingHost2PollRetries.setStatus("mandatory")


class _SnmpAgentTrapClientQuerySourceHost1_Type(Integer32):
    """Custom type snmpAgentTrapClientQuerySourceHost1 based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SnmpAgentTrapClientQuerySourceHost1_Type.__name__ = "Integer32"
_SnmpAgentTrapClientQuerySourceHost1_Object = MibScalar
snmpAgentTrapClientQuerySourceHost1 = _SnmpAgentTrapClientQuerySourceHost1_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 21),
    _SnmpAgentTrapClientQuerySourceHost1_Type()
)
snmpAgentTrapClientQuerySourceHost1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentTrapClientQuerySourceHost1.setStatus("mandatory")


class _SnmpAgentTrapClientQuerySourceHost2_Type(Integer32):
    """Custom type snmpAgentTrapClientQuerySourceHost2 based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SnmpAgentTrapClientQuerySourceHost2_Type.__name__ = "Integer32"
_SnmpAgentTrapClientQuerySourceHost2_Object = MibScalar
snmpAgentTrapClientQuerySourceHost2 = _SnmpAgentTrapClientQuerySourceHost2_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 22),
    _SnmpAgentTrapClientQuerySourceHost2_Type()
)
snmpAgentTrapClientQuerySourceHost2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentTrapClientQuerySourceHost2.setStatus("mandatory")


class _SnmpAgentTrapClientQuerySourceHost1Timeout_Type(Integer32):
    """Custom type snmpAgentTrapClientQuerySourceHost1Timeout based on Integer32"""
    defaultValue = 60

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SnmpAgentTrapClientQuerySourceHost1Timeout_Type.__name__ = "Integer32"
_SnmpAgentTrapClientQuerySourceHost1Timeout_Object = MibScalar
snmpAgentTrapClientQuerySourceHost1Timeout = _SnmpAgentTrapClientQuerySourceHost1Timeout_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 23),
    _SnmpAgentTrapClientQuerySourceHost1Timeout_Type()
)
snmpAgentTrapClientQuerySourceHost1Timeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentTrapClientQuerySourceHost1Timeout.setStatus("mandatory")


class _SnmpAgentTrapClientQuerySourceHost2Timeout_Type(Integer32):
    """Custom type snmpAgentTrapClientQuerySourceHost2Timeout based on Integer32"""
    defaultValue = 60

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SnmpAgentTrapClientQuerySourceHost2Timeout_Type.__name__ = "Integer32"
_SnmpAgentTrapClientQuerySourceHost2Timeout_Object = MibScalar
snmpAgentTrapClientQuerySourceHost2Timeout = _SnmpAgentTrapClientQuerySourceHost2Timeout_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 3, 24),
    _SnmpAgentTrapClientQuerySourceHost2Timeout_Type()
)
snmpAgentTrapClientQuerySourceHost2Timeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentTrapClientQuerySourceHost2Timeout.setStatus("mandatory")
_XDomainResolver_ObjectIdentity = ObjectIdentity
xDomainResolver = _XDomainResolver_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 4)
)


class _DomainResolverSuffix_Type(DisplayString):
    """Custom type domainResolverSuffix based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 115),
    )


_DomainResolverSuffix_Type.__name__ = "DisplayString"
_DomainResolverSuffix_Object = MibScalar
domainResolverSuffix = _DomainResolverSuffix_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 4, 1),
    _DomainResolverSuffix_Type()
)
domainResolverSuffix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    domainResolverSuffix.setStatus("mandatory")
_DomainResolverAddress1_Type = IpAddress
_DomainResolverAddress1_Object = MibScalar
domainResolverAddress1 = _DomainResolverAddress1_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 4, 2),
    _DomainResolverAddress1_Type()
)
domainResolverAddress1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    domainResolverAddress1.setStatus("mandatory")
_DomainResolverAddress2_Type = IpAddress
_DomainResolverAddress2_Object = MibScalar
domainResolverAddress2 = _DomainResolverAddress2_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 4, 3),
    _DomainResolverAddress2_Type()
)
domainResolverAddress2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    domainResolverAddress2.setStatus("mandatory")


class _DomainResolverTtl_Type(Integer32):
    """Custom type domainResolverTtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 168),
    )


_DomainResolverTtl_Type.__name__ = "Integer32"
_DomainResolverTtl_Object = MibScalar
domainResolverTtl = _DomainResolverTtl_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 4, 4),
    _DomainResolverTtl_Type()
)
domainResolverTtl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    domainResolverTtl.setStatus("mandatory")
_DomainResolverNameNumber_Type = Integer32
_DomainResolverNameNumber_Object = MibScalar
domainResolverNameNumber = _DomainResolverNameNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 4, 5),
    _DomainResolverNameNumber_Type()
)
domainResolverNameNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainResolverNameNumber.setStatus("mandatory")
_NameTable_Object = MibTable
nameTable = _NameTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 4, 6)
)
if mibBuilder.loadTexts:
    nameTable.setStatus("mandatory")
_NameEntry_Object = MibTableRow
nameEntry = _NameEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 4, 6, 1)
)
nameEntry.setIndexNames(
    (0, "MRVINREACH", "nameName"),
    (0, "MRVINREACH", "nameAddress"),
)
if mibBuilder.loadTexts:
    nameEntry.setStatus("mandatory")


class _NameName_Type(DisplayString):
    """Custom type nameName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 50),
    )


_NameName_Type.__name__ = "DisplayString"
_NameName_Object = MibTableColumn
nameName = _NameName_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 4, 6, 1, 1),
    _NameName_Type()
)
nameName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nameName.setStatus("mandatory")
_NameAddress_Type = IpAddress
_NameAddress_Object = MibTableColumn
nameAddress = _NameAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 4, 6, 1, 2),
    _NameAddress_Type()
)
nameAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nameAddress.setStatus("mandatory")


class _NameStatus_Type(Integer32):
    """Custom type nameStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_NameStatus_Type.__name__ = "Integer32"
_NameStatus_Object = MibTableColumn
nameStatus = _NameStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 4, 6, 1, 3),
    _NameStatus_Type()
)
nameStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nameStatus.setStatus("mandatory")


class _NameSource_Type(Integer32):
    """Custom type nameSource based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("manager", 1),
          ("primary", 2),
          ("rwho", 4),
          ("secondary", 3))
    )


_NameSource_Type.__name__ = "Integer32"
_NameSource_Object = MibTableColumn
nameSource = _NameSource_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 4, 6, 1, 4),
    _NameSource_Type()
)
nameSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nameSource.setStatus("mandatory")
_NameTtl_Type = Integer32
_NameTtl_Object = MibTableColumn
nameTtl = _NameTtl_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 4, 6, 1, 5),
    _NameTtl_Type()
)
nameTtl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nameTtl.setStatus("mandatory")
_DomainResolverPpp_ObjectIdentity = ObjectIdentity
domainResolverPpp = _DomainResolverPpp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 4, 7)
)
_DomainResolverPppPrimaryServer_Type = IpAddress
_DomainResolverPppPrimaryServer_Object = MibScalar
domainResolverPppPrimaryServer = _DomainResolverPppPrimaryServer_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 4, 7, 1),
    _DomainResolverPppPrimaryServer_Type()
)
domainResolverPppPrimaryServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    domainResolverPppPrimaryServer.setStatus("mandatory")
_DomainResolverPppSecondaryServer_Type = IpAddress
_DomainResolverPppSecondaryServer_Object = MibScalar
domainResolverPppSecondaryServer = _DomainResolverPppSecondaryServer_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 4, 7, 2),
    _DomainResolverPppSecondaryServer_Type()
)
domainResolverPppSecondaryServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    domainResolverPppSecondaryServer.setStatus("mandatory")
_XSlip_ObjectIdentity = ObjectIdentity
xSlip = _XSlip_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 5)
)
_SlipTable_Object = MibTable
slipTable = _SlipTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 5, 1)
)
if mibBuilder.loadTexts:
    slipTable.setStatus("mandatory")
_SlipEntry_Object = MibTableRow
slipEntry = _SlipEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 5, 1, 1)
)
slipEntry.setIndexNames(
    (0, "MRVINREACH", "slipIndex"),
)
if mibBuilder.loadTexts:
    slipEntry.setStatus("mandatory")
_SlipIndex_Type = Integer32
_SlipIndex_Object = MibTableColumn
slipIndex = _SlipIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 5, 1, 1, 1),
    _SlipIndex_Type()
)
slipIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slipIndex.setStatus("mandatory")


class _SlipState_Type(Integer32):
    """Custom type slipState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("compressed", 3),
          ("off", 1),
          ("on", 2))
    )


_SlipState_Type.__name__ = "Integer32"
_SlipState_Object = MibTableColumn
slipState = _SlipState_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 5, 1, 1, 2),
    _SlipState_Type()
)
slipState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slipState.setStatus("mandatory")
_SlipLocalAddress_Type = IpAddress
_SlipLocalAddress_Object = MibTableColumn
slipLocalAddress = _SlipLocalAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 5, 1, 1, 3),
    _SlipLocalAddress_Type()
)
slipLocalAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slipLocalAddress.setStatus("mandatory")
_SlipRemoteAddress_Type = IpAddress
_SlipRemoteAddress_Object = MibTableColumn
slipRemoteAddress = _SlipRemoteAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 5, 1, 1, 4),
    _SlipRemoteAddress_Type()
)
slipRemoteAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slipRemoteAddress.setStatus("mandatory")
_SlipMask_Type = IpAddress
_SlipMask_Object = MibTableColumn
slipMask = _SlipMask_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 5, 1, 1, 5),
    _SlipMask_Type()
)
slipMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slipMask.setStatus("mandatory")
_SlipPortPacketsReceived_Type = Counter32
_SlipPortPacketsReceived_Object = MibTableColumn
slipPortPacketsReceived = _SlipPortPacketsReceived_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 5, 1, 1, 6),
    _SlipPortPacketsReceived_Type()
)
slipPortPacketsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slipPortPacketsReceived.setStatus("mandatory")
_SlipPortPacketsSent_Type = Counter32
_SlipPortPacketsSent_Object = MibTableColumn
slipPortPacketsSent = _SlipPortPacketsSent_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 5, 1, 1, 7),
    _SlipPortPacketsSent_Type()
)
slipPortPacketsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slipPortPacketsSent.setStatus("mandatory")
_SlipPortPacketsDiscarded_Type = Counter32
_SlipPortPacketsDiscarded_Object = MibTableColumn
slipPortPacketsDiscarded = _SlipPortPacketsDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 5, 1, 1, 8),
    _SlipPortPacketsDiscarded_Type()
)
slipPortPacketsDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slipPortPacketsDiscarded.setStatus("mandatory")
_SlipPortPacketLengthErrors_Type = Counter32
_SlipPortPacketLengthErrors_Object = MibTableColumn
slipPortPacketLengthErrors = _SlipPortPacketLengthErrors_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 5, 1, 1, 9),
    _SlipPortPacketLengthErrors_Type()
)
slipPortPacketLengthErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slipPortPacketLengthErrors.setStatus("mandatory")
_SlipPortPacketChecksumErrors_Type = Counter32
_SlipPortPacketChecksumErrors_Object = MibTableColumn
slipPortPacketChecksumErrors = _SlipPortPacketChecksumErrors_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 5, 1, 1, 10),
    _SlipPortPacketChecksumErrors_Type()
)
slipPortPacketChecksumErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slipPortPacketChecksumErrors.setStatus("mandatory")
_SlipNetworkPacketsReceived_Type = Counter32
_SlipNetworkPacketsReceived_Object = MibTableColumn
slipNetworkPacketsReceived = _SlipNetworkPacketsReceived_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 5, 1, 1, 11),
    _SlipNetworkPacketsReceived_Type()
)
slipNetworkPacketsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slipNetworkPacketsReceived.setStatus("mandatory")
_SlipNetworkPacketsSent_Type = Counter32
_SlipNetworkPacketsSent_Object = MibTableColumn
slipNetworkPacketsSent = _SlipNetworkPacketsSent_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 5, 1, 1, 12),
    _SlipNetworkPacketsSent_Type()
)
slipNetworkPacketsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slipNetworkPacketsSent.setStatus("mandatory")
_SlipNetworkPacketsDiscarded_Type = Counter32
_SlipNetworkPacketsDiscarded_Object = MibTableColumn
slipNetworkPacketsDiscarded = _SlipNetworkPacketsDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 5, 1, 1, 13),
    _SlipNetworkPacketsDiscarded_Type()
)
slipNetworkPacketsDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slipNetworkPacketsDiscarded.setStatus("mandatory")
_XTelnet_ObjectIdentity = ObjectIdentity
xTelnet = _XTelnet_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 6)
)
_TelnetPortTable_Object = MibTable
telnetPortTable = _TelnetPortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 1)
)
if mibBuilder.loadTexts:
    telnetPortTable.setStatus("mandatory")
_TelnetPortEntry_Object = MibTableRow
telnetPortEntry = _TelnetPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 1, 1)
)
telnetPortEntry.setIndexNames(
    (0, "MRVINREACH", "telnetPortIndex"),
)
if mibBuilder.loadTexts:
    telnetPortEntry.setStatus("mandatory")
_TelnetPortIndex_Type = Integer32
_TelnetPortIndex_Object = MibTableColumn
telnetPortIndex = _TelnetPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 1, 1, 1),
    _TelnetPortIndex_Type()
)
telnetPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    telnetPortIndex.setStatus("mandatory")


class _TelnetPortIncomingTcpPort_Type(Integer32):
    """Custom type telnetPortIncomingTcpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_TelnetPortIncomingTcpPort_Type.__name__ = "Integer32"
_TelnetPortIncomingTcpPort_Object = MibTableColumn
telnetPortIncomingTcpPort = _TelnetPortIncomingTcpPort_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 1, 1, 2),
    _TelnetPortIncomingTcpPort_Type()
)
telnetPortIncomingTcpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetPortIncomingTcpPort.setStatus("mandatory")
_TelnetPortOutgoingTcpPort_Type = Integer32
_TelnetPortOutgoingTcpPort_Object = MibTableColumn
telnetPortOutgoingTcpPort = _TelnetPortOutgoingTcpPort_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 1, 1, 3),
    _TelnetPortOutgoingTcpPort_Type()
)
telnetPortOutgoingTcpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetPortOutgoingTcpPort.setStatus("mandatory")


class _TelnetPortNewlineTranslation_Type(Integer32):
    """Custom type telnetPortNewlineTranslation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("cr", 2),
          ("crLf", 4),
          ("crNull", 3),
          ("lfToCrLf", 6),
          ("none", 1),
          ("std", 5))
    )


_TelnetPortNewlineTranslation_Type.__name__ = "Integer32"
_TelnetPortNewlineTranslation_Object = MibTableColumn
telnetPortNewlineTranslation = _TelnetPortNewlineTranslation_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 1, 1, 4),
    _TelnetPortNewlineTranslation_Type()
)
telnetPortNewlineTranslation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetPortNewlineTranslation.setStatus("mandatory")


class _TelnetPortTerminalType_Type(DisplayString):
    """Custom type telnetPortTerminalType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 21),
    )


_TelnetPortTerminalType_Type.__name__ = "DisplayString"
_TelnetPortTerminalType_Object = MibTableColumn
telnetPortTerminalType = _TelnetPortTerminalType_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 1, 1, 5),
    _TelnetPortTerminalType_Type()
)
telnetPortTerminalType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetPortTerminalType.setStatus("mandatory")


class _TelnetPortEorReflection_Type(Integer32):
    """Custom type telnetPortEorReflection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_TelnetPortEorReflection_Type.__name__ = "Integer32"
_TelnetPortEorReflection_Object = MibTableColumn
telnetPortEorReflection = _TelnetPortEorReflection_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 1, 1, 6),
    _TelnetPortEorReflection_Type()
)
telnetPortEorReflection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetPortEorReflection.setStatus("mandatory")


class _TelnetPortBinaryMode_Type(Integer32):
    """Custom type telnetPortBinaryMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("complete", 2),
          ("disabled", 3),
          ("flowControl", 1))
    )


_TelnetPortBinaryMode_Type.__name__ = "Integer32"
_TelnetPortBinaryMode_Object = MibTableColumn
telnetPortBinaryMode = _TelnetPortBinaryMode_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 1, 1, 7),
    _TelnetPortBinaryMode_Type()
)
telnetPortBinaryMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetPortBinaryMode.setStatus("mandatory")


class _TelnetPortSendLocation_Type(Integer32):
    """Custom type telnetPortSendLocation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_TelnetPortSendLocation_Type.__name__ = "Integer32"
_TelnetPortSendLocation_Object = MibTableColumn
telnetPortSendLocation = _TelnetPortSendLocation_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 1, 1, 8),
    _TelnetPortSendLocation_Type()
)
telnetPortSendLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetPortSendLocation.setStatus("mandatory")


class _TelnetPortClientLocation_Type(DisplayString):
    """Custom type telnetPortClientLocation based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_TelnetPortClientLocation_Type.__name__ = "DisplayString"
_TelnetPortClientLocation_Object = MibTableColumn
telnetPortClientLocation = _TelnetPortClientLocation_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 1, 1, 9),
    _TelnetPortClientLocation_Type()
)
telnetPortClientLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    telnetPortClientLocation.setStatus("mandatory")


class _TelnetPortPassiveSendLocation_Type(Integer32):
    """Custom type telnetPortPassiveSendLocation based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_TelnetPortPassiveSendLocation_Type.__name__ = "Integer32"
_TelnetPortPassiveSendLocation_Object = MibTableColumn
telnetPortPassiveSendLocation = _TelnetPortPassiveSendLocation_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 1, 1, 10),
    _TelnetPortPassiveSendLocation_Type()
)
telnetPortPassiveSendLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetPortPassiveSendLocation.setStatus("mandatory")
_TelnetSerialPortTable_Object = MibTable
telnetSerialPortTable = _TelnetSerialPortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2)
)
if mibBuilder.loadTexts:
    telnetSerialPortTable.setStatus("mandatory")
_TelnetSerialPortEntry_Object = MibTableRow
telnetSerialPortEntry = _TelnetSerialPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1)
)
telnetSerialPortEntry.setIndexNames(
    (0, "MRVINREACH", "telnetSerialPortIndex"),
)
if mibBuilder.loadTexts:
    telnetSerialPortEntry.setStatus("mandatory")
_TelnetSerialPortIndex_Type = Integer32
_TelnetSerialPortIndex_Object = MibTableColumn
telnetSerialPortIndex = _TelnetSerialPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 1),
    _TelnetSerialPortIndex_Type()
)
telnetSerialPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    telnetSerialPortIndex.setStatus("mandatory")


class _TelnetSerialPortOptionDisplay_Type(Integer32):
    """Custom type telnetSerialPortOptionDisplay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_TelnetSerialPortOptionDisplay_Type.__name__ = "Integer32"
_TelnetSerialPortOptionDisplay_Object = MibTableColumn
telnetSerialPortOptionDisplay = _TelnetSerialPortOptionDisplay_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 2),
    _TelnetSerialPortOptionDisplay_Type()
)
telnetSerialPortOptionDisplay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortOptionDisplay.setStatus("mandatory")


class _TelnetSerialPortCsiEscape_Type(Integer32):
    """Custom type telnetSerialPortCsiEscape based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_TelnetSerialPortCsiEscape_Type.__name__ = "Integer32"
_TelnetSerialPortCsiEscape_Object = MibTableColumn
telnetSerialPortCsiEscape = _TelnetSerialPortCsiEscape_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 3),
    _TelnetSerialPortCsiEscape_Type()
)
telnetSerialPortCsiEscape.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortCsiEscape.setStatus("mandatory")


class _TelnetSerialPortEchoMode_Type(Integer32):
    """Custom type telnetSerialPortEchoMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("character", 5),
          ("disabled", 3),
          ("line", 6),
          ("local", 1),
          ("noecho", 7),
          ("passive", 4),
          ("remote", 2))
    )


_TelnetSerialPortEchoMode_Type.__name__ = "Integer32"
_TelnetSerialPortEchoMode_Object = MibTableColumn
telnetSerialPortEchoMode = _TelnetSerialPortEchoMode_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 4),
    _TelnetSerialPortEchoMode_Type()
)
telnetSerialPortEchoMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortEchoMode.setStatus("mandatory")


class _TelnetSerialPortNewlineMode_Type(Integer32):
    """Custom type telnetSerialPortNewlineMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("crLf", 2),
          ("crNull", 1),
          ("verbatim", 3))
    )


_TelnetSerialPortNewlineMode_Type.__name__ = "Integer32"
_TelnetSerialPortNewlineMode_Object = MibTableColumn
telnetSerialPortNewlineMode = _TelnetSerialPortNewlineMode_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 5),
    _TelnetSerialPortNewlineMode_Type()
)
telnetSerialPortNewlineMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortNewlineMode.setStatus("mandatory")


class _TelnetSerialPortTransmitMode_Type(Integer32):
    """Custom type telnetSerialPortTransmitMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("buffered", 2),
          ("controlchar", 4),
          ("immediate", 1),
          ("timed", 3))
    )


_TelnetSerialPortTransmitMode_Type.__name__ = "Integer32"
_TelnetSerialPortTransmitMode_Object = MibTableColumn
telnetSerialPortTransmitMode = _TelnetSerialPortTransmitMode_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 6),
    _TelnetSerialPortTransmitMode_Type()
)
telnetSerialPortTransmitMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortTransmitMode.setStatus("mandatory")


class _TelnetSerialPortTransmitCharacterTimes_Type(Integer32):
    """Custom type telnetSerialPortTransmitCharacterTimes based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_TelnetSerialPortTransmitCharacterTimes_Type.__name__ = "Integer32"
_TelnetSerialPortTransmitCharacterTimes_Object = MibTableColumn
telnetSerialPortTransmitCharacterTimes = _TelnetSerialPortTransmitCharacterTimes_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 7),
    _TelnetSerialPortTransmitCharacterTimes_Type()
)
telnetSerialPortTransmitCharacterTimes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortTransmitCharacterTimes.setStatus("mandatory")


class _TelnetSerialPortAbortOutputCharacter_Type(Integer32):
    """Custom type telnetSerialPortAbortOutputCharacter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_TelnetSerialPortAbortOutputCharacter_Type.__name__ = "Integer32"
_TelnetSerialPortAbortOutputCharacter_Object = MibTableColumn
telnetSerialPortAbortOutputCharacter = _TelnetSerialPortAbortOutputCharacter_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 8),
    _TelnetSerialPortAbortOutputCharacter_Type()
)
telnetSerialPortAbortOutputCharacter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortAbortOutputCharacter.setStatus("mandatory")


class _TelnetSerialPortAttentionCharacter_Type(Integer32):
    """Custom type telnetSerialPortAttentionCharacter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_TelnetSerialPortAttentionCharacter_Type.__name__ = "Integer32"
_TelnetSerialPortAttentionCharacter_Object = MibTableColumn
telnetSerialPortAttentionCharacter = _TelnetSerialPortAttentionCharacter_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 9),
    _TelnetSerialPortAttentionCharacter_Type()
)
telnetSerialPortAttentionCharacter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortAttentionCharacter.setStatus("mandatory")


class _TelnetSerialPortEraseKeyCharacter_Type(Integer32):
    """Custom type telnetSerialPortEraseKeyCharacter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_TelnetSerialPortEraseKeyCharacter_Type.__name__ = "Integer32"
_TelnetSerialPortEraseKeyCharacter_Object = MibTableColumn
telnetSerialPortEraseKeyCharacter = _TelnetSerialPortEraseKeyCharacter_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 10),
    _TelnetSerialPortEraseKeyCharacter_Type()
)
telnetSerialPortEraseKeyCharacter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortEraseKeyCharacter.setStatus("mandatory")


class _TelnetSerialPortEraseLineCharacter_Type(Integer32):
    """Custom type telnetSerialPortEraseLineCharacter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_TelnetSerialPortEraseLineCharacter_Type.__name__ = "Integer32"
_TelnetSerialPortEraseLineCharacter_Object = MibTableColumn
telnetSerialPortEraseLineCharacter = _TelnetSerialPortEraseLineCharacter_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 11),
    _TelnetSerialPortEraseLineCharacter_Type()
)
telnetSerialPortEraseLineCharacter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortEraseLineCharacter.setStatus("mandatory")


class _TelnetSerialPortInterruptCharacter_Type(Integer32):
    """Custom type telnetSerialPortInterruptCharacter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_TelnetSerialPortInterruptCharacter_Type.__name__ = "Integer32"
_TelnetSerialPortInterruptCharacter_Object = MibTableColumn
telnetSerialPortInterruptCharacter = _TelnetSerialPortInterruptCharacter_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 12),
    _TelnetSerialPortInterruptCharacter_Type()
)
telnetSerialPortInterruptCharacter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortInterruptCharacter.setStatus("mandatory")


class _TelnetSerialPortQueryCharacter_Type(Integer32):
    """Custom type telnetSerialPortQueryCharacter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_TelnetSerialPortQueryCharacter_Type.__name__ = "Integer32"
_TelnetSerialPortQueryCharacter_Object = MibTableColumn
telnetSerialPortQueryCharacter = _TelnetSerialPortQueryCharacter_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 13),
    _TelnetSerialPortQueryCharacter_Type()
)
telnetSerialPortQueryCharacter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortQueryCharacter.setStatus("mandatory")


class _TelnetSerialPortSynchronizeCharacter_Type(Integer32):
    """Custom type telnetSerialPortSynchronizeCharacter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_TelnetSerialPortSynchronizeCharacter_Type.__name__ = "Integer32"
_TelnetSerialPortSynchronizeCharacter_Object = MibTableColumn
telnetSerialPortSynchronizeCharacter = _TelnetSerialPortSynchronizeCharacter_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 14),
    _TelnetSerialPortSynchronizeCharacter_Type()
)
telnetSerialPortSynchronizeCharacter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortSynchronizeCharacter.setStatus("mandatory")


class _TelnetSerialPortUrgentBreak_Type(Integer32):
    """Custom type telnetSerialPortUrgentBreak based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_TelnetSerialPortUrgentBreak_Type.__name__ = "Integer32"
_TelnetSerialPortUrgentBreak_Object = MibTableColumn
telnetSerialPortUrgentBreak = _TelnetSerialPortUrgentBreak_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 15),
    _TelnetSerialPortUrgentBreak_Type()
)
telnetSerialPortUrgentBreak.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortUrgentBreak.setStatus("mandatory")


class _TelnetSerialPortRs491_Type(Integer32):
    """Custom type telnetSerialPortRs491 based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_TelnetSerialPortRs491_Type.__name__ = "Integer32"
_TelnetSerialPortRs491_Object = MibTableColumn
telnetSerialPortRs491 = _TelnetSerialPortRs491_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 16),
    _TelnetSerialPortRs491_Type()
)
telnetSerialPortRs491.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortRs491.setStatus("mandatory")


class _TelnetSerialPortTransmitBufferedTime_Type(Integer32):
    """Custom type telnetSerialPortTransmitBufferedTime based on Integer32"""
    defaultValue = 80

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 1500),
    )


_TelnetSerialPortTransmitBufferedTime_Type.__name__ = "Integer32"
_TelnetSerialPortTransmitBufferedTime_Object = MibTableColumn
telnetSerialPortTransmitBufferedTime = _TelnetSerialPortTransmitBufferedTime_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 17),
    _TelnetSerialPortTransmitBufferedTime_Type()
)
telnetSerialPortTransmitBufferedTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortTransmitBufferedTime.setStatus("mandatory")


class _TelnetSerialPortInterpretInterruptAsBreak_Type(Integer32):
    """Custom type telnetSerialPortInterpretInterruptAsBreak based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_TelnetSerialPortInterpretInterruptAsBreak_Type.__name__ = "Integer32"
_TelnetSerialPortInterpretInterruptAsBreak_Object = MibTableColumn
telnetSerialPortInterpretInterruptAsBreak = _TelnetSerialPortInterpretInterruptAsBreak_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 18),
    _TelnetSerialPortInterpretInterruptAsBreak_Type()
)
telnetSerialPortInterpretInterruptAsBreak.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortInterpretInterruptAsBreak.setStatus("mandatory")


class _TelnetSerialPortPass8d_Type(Integer32):
    """Custom type telnetSerialPortPass8d based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_TelnetSerialPortPass8d_Type.__name__ = "Integer32"
_TelnetSerialPortPass8d_Object = MibTableColumn
telnetSerialPortPass8d = _TelnetSerialPortPass8d_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 19),
    _TelnetSerialPortPass8d_Type()
)
telnetSerialPortPass8d.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortPass8d.setStatus("mandatory")


class _TelnetSerialPortComControlClient_Type(Integer32):
    """Custom type telnetSerialPortComControlClient based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_TelnetSerialPortComControlClient_Type.__name__ = "Integer32"
_TelnetSerialPortComControlClient_Object = MibTableColumn
telnetSerialPortComControlClient = _TelnetSerialPortComControlClient_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 20),
    _TelnetSerialPortComControlClient_Type()
)
telnetSerialPortComControlClient.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortComControlClient.setStatus("mandatory")


class _TelnetSerialPortComControlServer_Type(Integer32):
    """Custom type telnetSerialPortComControlServer based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_TelnetSerialPortComControlServer_Type.__name__ = "Integer32"
_TelnetSerialPortComControlServer_Object = MibTableColumn
telnetSerialPortComControlServer = _TelnetSerialPortComControlServer_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 21),
    _TelnetSerialPortComControlServer_Type()
)
telnetSerialPortComControlServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortComControlServer.setStatus("mandatory")


class _TelnetSerialPortComControlServerRaisesDtr_Type(Integer32):
    """Custom type telnetSerialPortComControlServerRaisesDtr based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_TelnetSerialPortComControlServerRaisesDtr_Type.__name__ = "Integer32"
_TelnetSerialPortComControlServerRaisesDtr_Object = MibTableColumn
telnetSerialPortComControlServerRaisesDtr = _TelnetSerialPortComControlServerRaisesDtr_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 22),
    _TelnetSerialPortComControlServerRaisesDtr_Type()
)
telnetSerialPortComControlServerRaisesDtr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortComControlServerRaisesDtr.setStatus("mandatory")


class _TelnetSerialPortComControlClientTogglesDtr_Type(Integer32):
    """Custom type telnetSerialPortComControlClientTogglesDtr based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_TelnetSerialPortComControlClientTogglesDtr_Type.__name__ = "Integer32"
_TelnetSerialPortComControlClientTogglesDtr_Object = MibTableColumn
telnetSerialPortComControlClientTogglesDtr = _TelnetSerialPortComControlClientTogglesDtr_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 6, 2, 1, 23),
    _TelnetSerialPortComControlClientTogglesDtr_Type()
)
telnetSerialPortComControlClientTogglesDtr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    telnetSerialPortComControlClientTogglesDtr.setStatus("mandatory")
_XTn3270_ObjectIdentity = ObjectIdentity
xTn3270 = _XTn3270_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 7)
)
_Tn3270DeviceNumber_Type = Integer32
_Tn3270DeviceNumber_Object = MibScalar
tn3270DeviceNumber = _Tn3270DeviceNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 1),
    _Tn3270DeviceNumber_Type()
)
tn3270DeviceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tn3270DeviceNumber.setStatus("mandatory")
_Tn3270LanguageNumber_Type = Integer32
_Tn3270LanguageNumber_Object = MibScalar
tn3270LanguageNumber = _Tn3270LanguageNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 2),
    _Tn3270LanguageNumber_Type()
)
tn3270LanguageNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tn3270LanguageNumber.setStatus("mandatory")


class _Tn3270PortKeymapStatus_Type(Integer32):
    """Custom type tn3270PortKeymapStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_Tn3270PortKeymapStatus_Type.__name__ = "Integer32"
_Tn3270PortKeymapStatus_Object = MibScalar
tn3270PortKeymapStatus = _Tn3270PortKeymapStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 3),
    _Tn3270PortKeymapStatus_Type()
)
tn3270PortKeymapStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tn3270PortKeymapStatus.setStatus("mandatory")
_Tn3270DeviceTable_Object = MibTable
tn3270DeviceTable = _Tn3270DeviceTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 4)
)
if mibBuilder.loadTexts:
    tn3270DeviceTable.setStatus("mandatory")
_Tn3270DeviceEntry_Object = MibTableRow
tn3270DeviceEntry = _Tn3270DeviceEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 4, 1)
)
tn3270DeviceEntry.setIndexNames(
    (0, "MRVINREACH", "tn3270DeviceName"),
)
if mibBuilder.loadTexts:
    tn3270DeviceEntry.setStatus("mandatory")


class _Tn3270DeviceName_Type(DisplayString):
    """Custom type tn3270DeviceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 8),
    )


_Tn3270DeviceName_Type.__name__ = "DisplayString"
_Tn3270DeviceName_Object = MibTableColumn
tn3270DeviceName = _Tn3270DeviceName_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 4, 1, 1),
    _Tn3270DeviceName_Type()
)
tn3270DeviceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tn3270DeviceName.setStatus("mandatory")


class _Tn3270DeviceStatus_Type(Integer32):
    """Custom type tn3270DeviceStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_Tn3270DeviceStatus_Type.__name__ = "Integer32"
_Tn3270DeviceStatus_Object = MibTableColumn
tn3270DeviceStatus = _Tn3270DeviceStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 4, 1, 2),
    _Tn3270DeviceStatus_Type()
)
tn3270DeviceStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tn3270DeviceStatus.setStatus("mandatory")


class _Tn3270DeviceType_Type(DisplayString):
    """Custom type tn3270DeviceType based on DisplayString"""
    defaultValue = OctetString("VT100")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 21),
    )


_Tn3270DeviceType_Type.__name__ = "DisplayString"
_Tn3270DeviceType_Object = MibTableColumn
tn3270DeviceType = _Tn3270DeviceType_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 4, 1, 3),
    _Tn3270DeviceType_Type()
)
tn3270DeviceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tn3270DeviceType.setStatus("mandatory")


class _Tn3270Device3278Model_Type(Integer32):
    """Custom type tn3270Device3278Model based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("model2", 1),
          ("model5", 2))
    )


_Tn3270Device3278Model_Type.__name__ = "Integer32"
_Tn3270Device3278Model_Object = MibTableColumn
tn3270Device3278Model = _Tn3270Device3278Model_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 4, 1, 4),
    _Tn3270Device3278Model_Type()
)
tn3270Device3278Model.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tn3270Device3278Model.setStatus("mandatory")


class _Tn3270DeviceKeyNumber_Type(Integer32):
    """Custom type tn3270DeviceKeyNumber based on Integer32"""
    defaultValue = 70


_Tn3270DeviceKeyNumber_Object = MibTableColumn
tn3270DeviceKeyNumber = _Tn3270DeviceKeyNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 4, 1, 5),
    _Tn3270DeviceKeyNumber_Type()
)
tn3270DeviceKeyNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tn3270DeviceKeyNumber.setStatus("mandatory")


class _Tn3270DeviceScreenNumber_Type(Integer32):
    """Custom type tn3270DeviceScreenNumber based on Integer32"""
    defaultValue = 24


_Tn3270DeviceScreenNumber_Object = MibTableColumn
tn3270DeviceScreenNumber = _Tn3270DeviceScreenNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 4, 1, 6),
    _Tn3270DeviceScreenNumber_Type()
)
tn3270DeviceScreenNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tn3270DeviceScreenNumber.setStatus("mandatory")
_Tn3270KeyTable_Object = MibTable
tn3270KeyTable = _Tn3270KeyTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 5)
)
if mibBuilder.loadTexts:
    tn3270KeyTable.setStatus("mandatory")
_Tn3270KeyEntry_Object = MibTableRow
tn3270KeyEntry = _Tn3270KeyEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 5, 1)
)
tn3270KeyEntry.setIndexNames(
    (0, "MRVINREACH", "tn3270KeyDeviceName"),
    (0, "MRVINREACH", "tn3270KeyName"),
)
if mibBuilder.loadTexts:
    tn3270KeyEntry.setStatus("mandatory")


class _Tn3270KeyDeviceName_Type(DisplayString):
    """Custom type tn3270KeyDeviceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 8),
    )


_Tn3270KeyDeviceName_Type.__name__ = "DisplayString"
_Tn3270KeyDeviceName_Object = MibTableColumn
tn3270KeyDeviceName = _Tn3270KeyDeviceName_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 5, 1, 1),
    _Tn3270KeyDeviceName_Type()
)
tn3270KeyDeviceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tn3270KeyDeviceName.setStatus("mandatory")


class _Tn3270KeyName_Type(Integer32):
    """Custom type tn3270KeyName based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70)
        )
    )
    namedValues = NamedValues(
        *(("backtab", 3),
          ("centsign", 15),
          ("clear", 68),
          ("cursordown", 7),
          ("cursorleft", 5),
          ("cursorright", 6),
          ("cursorsel", 69),
          ("cursorup", 4),
          ("delete", 9),
          ("duplicate", 16),
          ("enter", 67),
          ("eraseeof", 10),
          ("eraseinput", 11),
          ("fastleft", 21),
          ("fastright", 22),
          ("fieldmark", 17),
          ("flushinput", 13),
          ("home", 8),
          ("insert", 12),
          ("newline", 1),
          ("pa1", 63),
          ("pa2", 64),
          ("pa3", 65),
          ("pf1", 39),
          ("pf10", 48),
          ("pf11", 49),
          ("pf12", 50),
          ("pf13", 51),
          ("pf14", 52),
          ("pf15", 53),
          ("pf16", 54),
          ("pf17", 55),
          ("pf18", 56),
          ("pf19", 57),
          ("pf2", 40),
          ("pf20", 58),
          ("pf21", 59),
          ("pf22", 60),
          ("pf23", 61),
          ("pf24", 62),
          ("pf3", 41),
          ("pf4", 42),
          ("pf5", 43),
          ("pf6", 44),
          ("pf7", 45),
          ("pf8", 46),
          ("pf9", 47),
          ("print", 24),
          ("refresh", 14),
          ("reset", 20),
          ("scroll", 18),
          ("showkeys", 23),
          ("status", 19),
          ("sysreq", 66),
          ("tab", 2),
          ("test", 70))
    )


_Tn3270KeyName_Type.__name__ = "Integer32"
_Tn3270KeyName_Object = MibTableColumn
tn3270KeyName = _Tn3270KeyName_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 5, 1, 2),
    _Tn3270KeyName_Type()
)
tn3270KeyName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tn3270KeyName.setStatus("mandatory")


class _Tn3270KeyStatus_Type(Integer32):
    """Custom type tn3270KeyStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_Tn3270KeyStatus_Type.__name__ = "Integer32"
_Tn3270KeyStatus_Object = MibTableColumn
tn3270KeyStatus = _Tn3270KeyStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 5, 1, 3),
    _Tn3270KeyStatus_Type()
)
tn3270KeyStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tn3270KeyStatus.setStatus("deprecated")


class _Tn3270KeyCharacterSequence_Type(OctetString):
    """Custom type tn3270KeyCharacterSequence based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Tn3270KeyCharacterSequence_Type.__name__ = "OctetString"
_Tn3270KeyCharacterSequence_Object = MibTableColumn
tn3270KeyCharacterSequence = _Tn3270KeyCharacterSequence_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 5, 1, 4),
    _Tn3270KeyCharacterSequence_Type()
)
tn3270KeyCharacterSequence.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tn3270KeyCharacterSequence.setStatus("mandatory")


class _Tn3270KeyDescription_Type(DisplayString):
    """Custom type tn3270KeyDescription based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 5),
    )


_Tn3270KeyDescription_Type.__name__ = "DisplayString"
_Tn3270KeyDescription_Object = MibTableColumn
tn3270KeyDescription = _Tn3270KeyDescription_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 5, 1, 5),
    _Tn3270KeyDescription_Type()
)
tn3270KeyDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tn3270KeyDescription.setStatus("mandatory")
_Tn3270ScreenTable_Object = MibTable
tn3270ScreenTable = _Tn3270ScreenTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 6)
)
if mibBuilder.loadTexts:
    tn3270ScreenTable.setStatus("mandatory")
_Tn3270ScreenEntry_Object = MibTableRow
tn3270ScreenEntry = _Tn3270ScreenEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 6, 1)
)
tn3270ScreenEntry.setIndexNames(
    (0, "MRVINREACH", "tn3270ScreenDeviceName"),
    (0, "MRVINREACH", "tn3270ScreenActionName"),
)
if mibBuilder.loadTexts:
    tn3270ScreenEntry.setStatus("mandatory")


class _Tn3270ScreenDeviceName_Type(DisplayString):
    """Custom type tn3270ScreenDeviceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 8),
    )


_Tn3270ScreenDeviceName_Type.__name__ = "DisplayString"
_Tn3270ScreenDeviceName_Object = MibTableColumn
tn3270ScreenDeviceName = _Tn3270ScreenDeviceName_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 6, 1, 1),
    _Tn3270ScreenDeviceName_Type()
)
tn3270ScreenDeviceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tn3270ScreenDeviceName.setStatus("mandatory")


class _Tn3270ScreenActionName_Type(Integer32):
    """Custom type tn3270ScreenActionName based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33)
        )
    )
    namedValues = NamedValues(
        *(("base", 32),
          ("beep", 6),
          ("blinkoff", 11),
          ("blinkon", 10),
          ("boldoff", 9),
          ("boldon", 8),
          ("charset", 7),
          ("clearscr", 2),
          ("col132", 4),
          ("col80", 5),
          ("colorBlue", 16),
          ("colorGreen", 19),
          ("colorPink", 18),
          ("colorRed", 17),
          ("colorTurquoise", 20),
          ("colorWhite", 22),
          ("colorYellow", 21),
          ("eraseeol", 1),
          ("movecursor", 3),
          ("reset1", 28),
          ("reset2", 29),
          ("reset3", 30),
          ("reset4", 31),
          ("reverseoff", 15),
          ("reverseon", 14),
          ("sgr", 33),
          ("status1", 26),
          ("status2", 27),
          ("underscoreoff", 13),
          ("underscoreon", 12))
    )


_Tn3270ScreenActionName_Type.__name__ = "Integer32"
_Tn3270ScreenActionName_Object = MibTableColumn
tn3270ScreenActionName = _Tn3270ScreenActionName_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 6, 1, 2),
    _Tn3270ScreenActionName_Type()
)
tn3270ScreenActionName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tn3270ScreenActionName.setStatus("mandatory")


class _Tn3270ScreenStatus_Type(Integer32):
    """Custom type tn3270ScreenStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_Tn3270ScreenStatus_Type.__name__ = "Integer32"
_Tn3270ScreenStatus_Object = MibTableColumn
tn3270ScreenStatus = _Tn3270ScreenStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 6, 1, 3),
    _Tn3270ScreenStatus_Type()
)
tn3270ScreenStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tn3270ScreenStatus.setStatus("deprecated")


class _Tn3270ScreenCharacterSequence_Type(OctetString):
    """Custom type tn3270ScreenCharacterSequence based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_Tn3270ScreenCharacterSequence_Type.__name__ = "OctetString"
_Tn3270ScreenCharacterSequence_Object = MibTableColumn
tn3270ScreenCharacterSequence = _Tn3270ScreenCharacterSequence_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 6, 1, 4),
    _Tn3270ScreenCharacterSequence_Type()
)
tn3270ScreenCharacterSequence.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tn3270ScreenCharacterSequence.setStatus("mandatory")
_Tn3270LanguageTable_Object = MibTable
tn3270LanguageTable = _Tn3270LanguageTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 7)
)
if mibBuilder.loadTexts:
    tn3270LanguageTable.setStatus("mandatory")
_Tn3270LanguageEntry_Object = MibTableRow
tn3270LanguageEntry = _Tn3270LanguageEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 7, 1)
)
tn3270LanguageEntry.setIndexNames(
    (0, "MRVINREACH", "tn3270LanguageName"),
)
if mibBuilder.loadTexts:
    tn3270LanguageEntry.setStatus("mandatory")


class _Tn3270LanguageName_Type(DisplayString):
    """Custom type tn3270LanguageName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 8),
    )


_Tn3270LanguageName_Type.__name__ = "DisplayString"
_Tn3270LanguageName_Object = MibTableColumn
tn3270LanguageName = _Tn3270LanguageName_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 7, 1, 1),
    _Tn3270LanguageName_Type()
)
tn3270LanguageName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tn3270LanguageName.setStatus("mandatory")


class _Tn3270LanguageStatus_Type(Integer32):
    """Custom type tn3270LanguageStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_Tn3270LanguageStatus_Type.__name__ = "Integer32"
_Tn3270LanguageStatus_Object = MibTableColumn
tn3270LanguageStatus = _Tn3270LanguageStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 7, 1, 2),
    _Tn3270LanguageStatus_Type()
)
tn3270LanguageStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tn3270LanguageStatus.setStatus("mandatory")
_EToALanguageTable_Object = MibTable
eToALanguageTable = _EToALanguageTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 8)
)
if mibBuilder.loadTexts:
    eToALanguageTable.setStatus("mandatory")
_EToALanguageEntry_Object = MibTableRow
eToALanguageEntry = _EToALanguageEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 8, 1)
)
eToALanguageEntry.setIndexNames(
    (0, "MRVINREACH", "eToALanguageName"),
    (0, "MRVINREACH", "eToAOffset"),
)
if mibBuilder.loadTexts:
    eToALanguageEntry.setStatus("mandatory")


class _EToALanguageName_Type(DisplayString):
    """Custom type eToALanguageName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 8),
    )


_EToALanguageName_Type.__name__ = "DisplayString"
_EToALanguageName_Object = MibTableColumn
eToALanguageName = _EToALanguageName_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 8, 1, 1),
    _EToALanguageName_Type()
)
eToALanguageName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eToALanguageName.setStatus("mandatory")


class _EToAOffset_Type(Integer32):
    """Custom type eToAOffset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(65, 256),
    )


_EToAOffset_Type.__name__ = "Integer32"
_EToAOffset_Object = MibTableColumn
eToAOffset = _EToAOffset_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 8, 1, 2),
    _EToAOffset_Type()
)
eToAOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eToAOffset.setStatus("mandatory")


class _EToAValue_Type(Integer32):
    """Custom type eToAValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(32, 255),
    )


_EToAValue_Type.__name__ = "Integer32"
_EToAValue_Object = MibTableColumn
eToAValue = _EToAValue_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 8, 1, 3),
    _EToAValue_Type()
)
eToAValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    eToAValue.setStatus("mandatory")
_AToELanguageTable_Object = MibTable
aToELanguageTable = _AToELanguageTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 9)
)
if mibBuilder.loadTexts:
    aToELanguageTable.setStatus("mandatory")
_AToELanguageEntry_Object = MibTableRow
aToELanguageEntry = _AToELanguageEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 9, 1)
)
aToELanguageEntry.setIndexNames(
    (0, "MRVINREACH", "aToELanguageName"),
    (0, "MRVINREACH", "aToEOffset"),
)
if mibBuilder.loadTexts:
    aToELanguageEntry.setStatus("mandatory")


class _AToELanguageName_Type(DisplayString):
    """Custom type aToELanguageName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 8),
    )


_AToELanguageName_Type.__name__ = "DisplayString"
_AToELanguageName_Object = MibTableColumn
aToELanguageName = _AToELanguageName_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 9, 1, 1),
    _AToELanguageName_Type()
)
aToELanguageName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aToELanguageName.setStatus("mandatory")


class _AToEOffset_Type(Integer32):
    """Custom type aToEOffset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(33, 256),
    )


_AToEOffset_Type.__name__ = "Integer32"
_AToEOffset_Object = MibTableColumn
aToEOffset = _AToEOffset_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 9, 1, 2),
    _AToEOffset_Type()
)
aToEOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aToEOffset.setStatus("mandatory")


class _AToEValue_Type(Integer32):
    """Custom type aToEValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AToEValue_Type.__name__ = "Integer32"
_AToEValue_Object = MibTableColumn
aToEValue = _AToEValue_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 9, 1, 3),
    _AToEValue_Type()
)
aToEValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aToEValue.setStatus("mandatory")
_Tn3270PortTable_Object = MibTable
tn3270PortTable = _Tn3270PortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 10)
)
if mibBuilder.loadTexts:
    tn3270PortTable.setStatus("mandatory")
_Tn3270PortEntry_Object = MibTableRow
tn3270PortEntry = _Tn3270PortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 10, 1)
)
tn3270PortEntry.setIndexNames(
    (0, "MRVINREACH", "tn3270PortIndex"),
)
if mibBuilder.loadTexts:
    tn3270PortEntry.setStatus("mandatory")
_Tn3270PortIndex_Type = Integer32
_Tn3270PortIndex_Object = MibTableColumn
tn3270PortIndex = _Tn3270PortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 10, 1, 1),
    _Tn3270PortIndex_Type()
)
tn3270PortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tn3270PortIndex.setStatus("mandatory")


class _Tn3270PortDeviceName_Type(DisplayString):
    """Custom type tn3270PortDeviceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Tn3270PortDeviceName_Type.__name__ = "DisplayString"
_Tn3270PortDeviceName_Object = MibTableColumn
tn3270PortDeviceName = _Tn3270PortDeviceName_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 10, 1, 2),
    _Tn3270PortDeviceName_Type()
)
tn3270PortDeviceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tn3270PortDeviceName.setStatus("mandatory")


class _Tn3270PortLanguageName_Type(DisplayString):
    """Custom type tn3270PortLanguageName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Tn3270PortLanguageName_Type.__name__ = "DisplayString"
_Tn3270PortLanguageName_Object = MibTableColumn
tn3270PortLanguageName = _Tn3270PortLanguageName_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 10, 1, 3),
    _Tn3270PortLanguageName_Type()
)
tn3270PortLanguageName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tn3270PortLanguageName.setStatus("mandatory")


class _Tn3270PortExtendedAttributes_Type(Integer32):
    """Custom type tn3270PortExtendedAttributes based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_Tn3270PortExtendedAttributes_Type.__name__ = "Integer32"
_Tn3270PortExtendedAttributes_Object = MibTableColumn
tn3270PortExtendedAttributes = _Tn3270PortExtendedAttributes_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 10, 1, 4),
    _Tn3270PortExtendedAttributes_Type()
)
tn3270PortExtendedAttributes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tn3270PortExtendedAttributes.setStatus("mandatory")


class _Tn3270PortEorNegotiation_Type(Integer32):
    """Custom type tn3270PortEorNegotiation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_Tn3270PortEorNegotiation_Type.__name__ = "Integer32"
_Tn3270PortEorNegotiation_Object = MibTableColumn
tn3270PortEorNegotiation = _Tn3270PortEorNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 10, 1, 5),
    _Tn3270PortEorNegotiation_Type()
)
tn3270PortEorNegotiation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tn3270PortEorNegotiation.setStatus("mandatory")


class _Tn3270PortErrorLock_Type(Integer32):
    """Custom type tn3270PortErrorLock based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_Tn3270PortErrorLock_Type.__name__ = "Integer32"
_Tn3270PortErrorLock_Object = MibTableColumn
tn3270PortErrorLock = _Tn3270PortErrorLock_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 10, 1, 6),
    _Tn3270PortErrorLock_Type()
)
tn3270PortErrorLock.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tn3270PortErrorLock.setStatus("mandatory")
_Tn3270PortPrinterPort_Type = Integer32
_Tn3270PortPrinterPort_Object = MibTableColumn
tn3270PortPrinterPort = _Tn3270PortPrinterPort_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 10, 1, 7),
    _Tn3270PortPrinterPort_Type()
)
tn3270PortPrinterPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tn3270PortPrinterPort.setStatus("mandatory")


class _Tn3270PortOutgoingTcpPort_Type(Integer32):
    """Custom type tn3270PortOutgoingTcpPort based on Integer32"""
    defaultValue = 23

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_Tn3270PortOutgoingTcpPort_Type.__name__ = "Integer32"
_Tn3270PortOutgoingTcpPort_Object = MibTableColumn
tn3270PortOutgoingTcpPort = _Tn3270PortOutgoingTcpPort_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 10, 1, 8),
    _Tn3270PortOutgoingTcpPort_Type()
)
tn3270PortOutgoingTcpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tn3270PortOutgoingTcpPort.setStatus("mandatory")


class _Tn3270PortSpaceInsert_Type(Integer32):
    """Custom type tn3270PortSpaceInsert based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_Tn3270PortSpaceInsert_Type.__name__ = "Integer32"
_Tn3270PortSpaceInsert_Object = MibTableColumn
tn3270PortSpaceInsert = _Tn3270PortSpaceInsert_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 10, 1, 9),
    _Tn3270PortSpaceInsert_Type()
)
tn3270PortSpaceInsert.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tn3270PortSpaceInsert.setStatus("mandatory")


class _Tn3270PortTypeAhead_Type(Integer32):
    """Custom type tn3270PortTypeAhead based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_Tn3270PortTypeAhead_Type.__name__ = "Integer32"
_Tn3270PortTypeAhead_Object = MibTableColumn
tn3270PortTypeAhead = _Tn3270PortTypeAhead_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 10, 1, 10),
    _Tn3270PortTypeAhead_Type()
)
tn3270PortTypeAhead.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tn3270PortTypeAhead.setStatus("mandatory")


class _Tn3270PrefixKeyMap_Type(Integer32):
    """Custom type tn3270PrefixKeyMap based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_Tn3270PrefixKeyMap_Type.__name__ = "Integer32"
_Tn3270PrefixKeyMap_Object = MibTableColumn
tn3270PrefixKeyMap = _Tn3270PrefixKeyMap_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 10, 1, 11),
    _Tn3270PrefixKeyMap_Type()
)
tn3270PrefixKeyMap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tn3270PrefixKeyMap.setStatus("mandatory")


class _Tn3270PortScanner_Type(Integer32):
    """Custom type tn3270PortScanner based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_Tn3270PortScanner_Type.__name__ = "Integer32"
_Tn3270PortScanner_Object = MibTableColumn
tn3270PortScanner = _Tn3270PortScanner_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 7, 10, 1, 12),
    _Tn3270PortScanner_Type()
)
tn3270PortScanner.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tn3270PortScanner.setStatus("mandatory")
_XKerberos_ObjectIdentity = ObjectIdentity
xKerberos = _XKerberos_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 8)
)


class _KerbStatus_Type(Integer32):
    """Custom type kerbStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("login", 2),
          ("none", 1))
    )


_KerbStatus_Type.__name__ = "Integer32"
_KerbStatus_Object = MibScalar
kerbStatus = _KerbStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 1),
    _KerbStatus_Type()
)
kerbStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    kerbStatus.setStatus("mandatory")


class _KerbRealm_Type(DisplayString):
    """Custom type kerbRealm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_KerbRealm_Type.__name__ = "DisplayString"
_KerbRealm_Object = MibScalar
kerbRealm = _KerbRealm_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 2),
    _KerbRealm_Type()
)
kerbRealm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    kerbRealm.setStatus("mandatory")


class _KerbQueryLimit_Type(Integer32):
    """Custom type kerbQueryLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_KerbQueryLimit_Type.__name__ = "Integer32"
_KerbQueryLimit_Object = MibScalar
kerbQueryLimit = _KerbQueryLimit_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 3),
    _KerbQueryLimit_Type()
)
kerbQueryLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    kerbQueryLimit.setStatus("mandatory")


class _KerbMasterName_Type(DisplayString):
    """Custom type kerbMasterName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_KerbMasterName_Type.__name__ = "DisplayString"
_KerbMasterName_Object = MibScalar
kerbMasterName = _KerbMasterName_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 4),
    _KerbMasterName_Type()
)
kerbMasterName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    kerbMasterName.setStatus("mandatory")


class _KerbServerName1_Type(DisplayString):
    """Custom type kerbServerName1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_KerbServerName1_Type.__name__ = "DisplayString"
_KerbServerName1_Object = MibScalar
kerbServerName1 = _KerbServerName1_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 5),
    _KerbServerName1_Type()
)
kerbServerName1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    kerbServerName1.setStatus("mandatory")


class _KerbServerName2_Type(DisplayString):
    """Custom type kerbServerName2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_KerbServerName2_Type.__name__ = "DisplayString"
_KerbServerName2_Object = MibScalar
kerbServerName2 = _KerbServerName2_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 6),
    _KerbServerName2_Type()
)
kerbServerName2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    kerbServerName2.setStatus("mandatory")
_KerbInsecureLogins_Type = Counter32
_KerbInsecureLogins_Object = MibScalar
kerbInsecureLogins = _KerbInsecureLogins_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 7),
    _KerbInsecureLogins_Type()
)
kerbInsecureLogins.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kerbInsecureLogins.setStatus("mandatory")
_KerbSecureLogins_Type = Counter32
_KerbSecureLogins_Object = MibScalar
kerbSecureLogins = _KerbSecureLogins_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 8),
    _KerbSecureLogins_Type()
)
kerbSecureLogins.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kerbSecureLogins.setStatus("mandatory")
_KerbSecureLoginsFailed_Type = Counter32
_KerbSecureLoginsFailed_Object = MibScalar
kerbSecureLoginsFailed = _KerbSecureLoginsFailed_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 9),
    _KerbSecureLoginsFailed_Type()
)
kerbSecureLoginsFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kerbSecureLoginsFailed.setStatus("mandatory")
_KerbPasswordChangeFailed_Type = Counter32
_KerbPasswordChangeFailed_Object = MibScalar
kerbPasswordChangeFailed = _KerbPasswordChangeFailed_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 10),
    _KerbPasswordChangeFailed_Type()
)
kerbPasswordChangeFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kerbPasswordChangeFailed.setStatus("mandatory")
_KerbError_Type = Integer32
_KerbError_Object = MibScalar
kerbError = _KerbError_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 11),
    _KerbError_Type()
)
kerbError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kerbError.setStatus("mandatory")
_KerbErrorTime_Type = DateTime
_KerbErrorTime_Object = MibScalar
kerbErrorTime = _KerbErrorTime_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 12),
    _KerbErrorTime_Type()
)
kerbErrorTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kerbErrorTime.setStatus("mandatory")
_KerbMasterAccess_Type = Counter32
_KerbMasterAccess_Object = MibScalar
kerbMasterAccess = _KerbMasterAccess_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 13),
    _KerbMasterAccess_Type()
)
kerbMasterAccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kerbMasterAccess.setStatus("mandatory")
_KerbMasterAccessFailed_Type = Counter32
_KerbMasterAccessFailed_Object = MibScalar
kerbMasterAccessFailed = _KerbMasterAccessFailed_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 14),
    _KerbMasterAccessFailed_Type()
)
kerbMasterAccessFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kerbMasterAccessFailed.setStatus("mandatory")
_KerbServerAccess1_Type = Counter32
_KerbServerAccess1_Object = MibScalar
kerbServerAccess1 = _KerbServerAccess1_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 15),
    _KerbServerAccess1_Type()
)
kerbServerAccess1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kerbServerAccess1.setStatus("mandatory")
_KerbServerAccessFailed1_Type = Counter32
_KerbServerAccessFailed1_Object = MibScalar
kerbServerAccessFailed1 = _KerbServerAccessFailed1_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 16),
    _KerbServerAccessFailed1_Type()
)
kerbServerAccessFailed1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kerbServerAccessFailed1.setStatus("mandatory")
_KerbServerAccess2_Type = Counter32
_KerbServerAccess2_Object = MibScalar
kerbServerAccess2 = _KerbServerAccess2_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 17),
    _KerbServerAccess2_Type()
)
kerbServerAccess2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kerbServerAccess2.setStatus("mandatory")
_KerbServerAccessFailed2_Type = Counter32
_KerbServerAccessFailed2_Object = MibScalar
kerbServerAccessFailed2 = _KerbServerAccessFailed2_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 18),
    _KerbServerAccessFailed2_Type()
)
kerbServerAccessFailed2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kerbServerAccessFailed2.setStatus("mandatory")
_KerbPortTable_Object = MibTable
kerbPortTable = _KerbPortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 19)
)
if mibBuilder.loadTexts:
    kerbPortTable.setStatus("mandatory")
_KerbPortEntry_Object = MibTableRow
kerbPortEntry = _KerbPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 19, 1)
)
kerbPortEntry.setIndexNames(
    (0, "MRVINREACH", "kerbPortIndex"),
)
if mibBuilder.loadTexts:
    kerbPortEntry.setStatus("mandatory")
_KerbPortIndex_Type = Integer32
_KerbPortIndex_Object = MibTableColumn
kerbPortIndex = _KerbPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 19, 1, 1),
    _KerbPortIndex_Type()
)
kerbPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kerbPortIndex.setStatus("mandatory")


class _KerbPortStatus_Type(Integer32):
    """Custom type kerbPortStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("login", 2),
          ("none", 1))
    )


_KerbPortStatus_Type.__name__ = "Integer32"
_KerbPortStatus_Object = MibTableColumn
kerbPortStatus = _KerbPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 19, 1, 2),
    _KerbPortStatus_Type()
)
kerbPortStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    kerbPortStatus.setStatus("mandatory")


class _KerbServerPort_Type(Integer32):
    """Custom type kerbServerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(88,
              750)
        )
    )
    namedValues = NamedValues(
        *(("experimentalPort", 750),
          ("standardPort", 88))
    )


_KerbServerPort_Type.__name__ = "Integer32"
_KerbServerPort_Object = MibScalar
kerbServerPort = _KerbServerPort_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 8, 20),
    _KerbServerPort_Type()
)
kerbServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    kerbServerPort.setStatus("mandatory")
_XPortSecurity_ObjectIdentity = ObjectIdentity
xPortSecurity = _XPortSecurity_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 9)
)
_PsEntryNumber_Type = Integer32
_PsEntryNumber_Object = MibScalar
psEntryNumber = _PsEntryNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 9, 1),
    _PsEntryNumber_Type()
)
psEntryNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    psEntryNumber.setStatus("mandatory")
_PsEntryNumberLimit_Type = Integer32
_PsEntryNumberLimit_Object = MibScalar
psEntryNumberLimit = _PsEntryNumberLimit_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 9, 2),
    _PsEntryNumberLimit_Type()
)
psEntryNumberLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    psEntryNumberLimit.setStatus("mandatory")
_PsEntryInvalidIndex_Type = Integer32
_PsEntryInvalidIndex_Object = MibScalar
psEntryInvalidIndex = _PsEntryInvalidIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 9, 3),
    _PsEntryInvalidIndex_Type()
)
psEntryInvalidIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    psEntryInvalidIndex.setStatus("mandatory")
_PsPortTable_Object = MibTable
psPortTable = _PsPortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 9, 4)
)
if mibBuilder.loadTexts:
    psPortTable.setStatus("mandatory")
_PsPortEntry_Object = MibTableRow
psPortEntry = _PsPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 9, 4, 1)
)
psPortEntry.setIndexNames(
    (0, "MRVINREACH", "psPortIndex"),
)
if mibBuilder.loadTexts:
    psPortEntry.setStatus("mandatory")
_PsPortIndex_Type = Integer32
_PsPortIndex_Object = MibTableColumn
psPortIndex = _PsPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 9, 4, 1, 1),
    _PsPortIndex_Type()
)
psPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    psPortIndex.setStatus("mandatory")


class _PsPortDefaultInboundAccess_Type(Integer32):
    """Custom type psPortDefaultInboundAccess based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("allow", 1),
          ("deny", 2))
    )


_PsPortDefaultInboundAccess_Type.__name__ = "Integer32"
_PsPortDefaultInboundAccess_Object = MibTableColumn
psPortDefaultInboundAccess = _PsPortDefaultInboundAccess_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 9, 4, 1, 2),
    _PsPortDefaultInboundAccess_Type()
)
psPortDefaultInboundAccess.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    psPortDefaultInboundAccess.setStatus("mandatory")


class _PsPortDefaultOutboundAccess_Type(Integer32):
    """Custom type psPortDefaultOutboundAccess based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("allow", 1),
          ("deny", 2))
    )


_PsPortDefaultOutboundAccess_Type.__name__ = "Integer32"
_PsPortDefaultOutboundAccess_Object = MibTableColumn
psPortDefaultOutboundAccess = _PsPortDefaultOutboundAccess_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 9, 4, 1, 3),
    _PsPortDefaultOutboundAccess_Type()
)
psPortDefaultOutboundAccess.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    psPortDefaultOutboundAccess.setStatus("mandatory")


class _PsClrInternetSecurity_Type(Integer32):
    """Custom type psClrInternetSecurity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_PsClrInternetSecurity_Type.__name__ = "Integer32"
_PsClrInternetSecurity_Object = MibTableColumn
psClrInternetSecurity = _PsClrInternetSecurity_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 9, 4, 1, 4),
    _PsClrInternetSecurity_Type()
)
psClrInternetSecurity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    psClrInternetSecurity.setStatus("mandatory")
_PsTable_Object = MibTable
psTable = _PsTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 9, 5)
)
if mibBuilder.loadTexts:
    psTable.setStatus("mandatory")
_PsEntry_Object = MibTableRow
psEntry = _PsEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 9, 5, 1)
)
psEntry.setIndexNames(
    (0, "MRVINREACH", "psEntryIndex"),
)
if mibBuilder.loadTexts:
    psEntry.setStatus("mandatory")
_PsEntryIndex_Type = Integer32
_PsEntryIndex_Object = MibTableColumn
psEntryIndex = _PsEntryIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 9, 5, 1, 1),
    _PsEntryIndex_Type()
)
psEntryIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    psEntryIndex.setStatus("mandatory")


class _PsEntryStatus_Type(Integer32):
    """Custom type psEntryStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_PsEntryStatus_Type.__name__ = "Integer32"
_PsEntryStatus_Object = MibTableColumn
psEntryStatus = _PsEntryStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 9, 5, 1, 2),
    _PsEntryStatus_Type()
)
psEntryStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    psEntryStatus.setStatus("mandatory")
_PsEntryAddress_Type = IpAddress
_PsEntryAddress_Object = MibTableColumn
psEntryAddress = _PsEntryAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 9, 5, 1, 3),
    _PsEntryAddress_Type()
)
psEntryAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    psEntryAddress.setStatus("mandatory")
_PsEntryMask_Type = IpAddress
_PsEntryMask_Object = MibTableColumn
psEntryMask = _PsEntryMask_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 9, 5, 1, 4),
    _PsEntryMask_Type()
)
psEntryMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    psEntryMask.setStatus("mandatory")


class _PsEntryAccess_Type(Integer32):
    """Custom type psEntryAccess based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("allow", 1),
          ("deny", 2))
    )


_PsEntryAccess_Type.__name__ = "Integer32"
_PsEntryAccess_Object = MibTableColumn
psEntryAccess = _PsEntryAccess_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 9, 5, 1, 5),
    _PsEntryAccess_Type()
)
psEntryAccess.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    psEntryAccess.setStatus("mandatory")


class _PsEntryDirection_Type(Integer32):
    """Custom type psEntryDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inbound", 1),
          ("outbound", 2))
    )


_PsEntryDirection_Type.__name__ = "Integer32"
_PsEntryDirection_Object = MibTableColumn
psEntryDirection = _PsEntryDirection_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 9, 5, 1, 6),
    _PsEntryDirection_Type()
)
psEntryDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    psEntryDirection.setStatus("mandatory")
_PsEntryPortMap_Type = OctetString
_PsEntryPortMap_Object = MibTableColumn
psEntryPortMap = _PsEntryPortMap_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 9, 5, 1, 7),
    _PsEntryPortMap_Type()
)
psEntryPortMap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    psEntryPortMap.setStatus("mandatory")
_XXremote_ObjectIdentity = ObjectIdentity
xXremote = _XXremote_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 10)
)


class _XremoteServerName1_Type(DisplayString):
    """Custom type xremoteServerName1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_XremoteServerName1_Type.__name__ = "DisplayString"
_XremoteServerName1_Object = MibScalar
xremoteServerName1 = _XremoteServerName1_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 10, 1),
    _XremoteServerName1_Type()
)
xremoteServerName1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xremoteServerName1.setStatus("mandatory")


class _XremoteServerName2_Type(DisplayString):
    """Custom type xremoteServerName2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_XremoteServerName2_Type.__name__ = "DisplayString"
_XremoteServerName2_Object = MibScalar
xremoteServerName2 = _XremoteServerName2_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 10, 2),
    _XremoteServerName2_Type()
)
xremoteServerName2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xremoteServerName2.setStatus("mandatory")
_XremoteServerAccess1_Type = Counter32
_XremoteServerAccess1_Object = MibScalar
xremoteServerAccess1 = _XremoteServerAccess1_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 10, 3),
    _XremoteServerAccess1_Type()
)
xremoteServerAccess1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xremoteServerAccess1.setStatus("mandatory")
_XremoteServerAccessFailed1_Type = Counter32
_XremoteServerAccessFailed1_Object = MibScalar
xremoteServerAccessFailed1 = _XremoteServerAccessFailed1_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 10, 4),
    _XremoteServerAccessFailed1_Type()
)
xremoteServerAccessFailed1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xremoteServerAccessFailed1.setStatus("mandatory")
_XremoteServerAccess2_Type = Counter32
_XremoteServerAccess2_Object = MibScalar
xremoteServerAccess2 = _XremoteServerAccess2_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 10, 5),
    _XremoteServerAccess2_Type()
)
xremoteServerAccess2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xremoteServerAccess2.setStatus("mandatory")
_XremoteServerAccessFailed2_Type = Counter32
_XremoteServerAccessFailed2_Object = MibScalar
xremoteServerAccessFailed2 = _XremoteServerAccessFailed2_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 10, 6),
    _XremoteServerAccessFailed2_Type()
)
xremoteServerAccessFailed2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xremoteServerAccessFailed2.setStatus("mandatory")
_XremoteSessions_Type = Gauge32
_XremoteSessions_Object = MibScalar
xremoteSessions = _XremoteSessions_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 10, 7),
    _XremoteSessions_Type()
)
xremoteSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xremoteSessions.setStatus("mandatory")
_XremotePortTable_Object = MibTable
xremotePortTable = _XremotePortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 10, 8)
)
if mibBuilder.loadTexts:
    xremotePortTable.setStatus("mandatory")
_XremotePortEntry_Object = MibTableRow
xremotePortEntry = _XremotePortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 10, 8, 1)
)
xremotePortEntry.setIndexNames(
    (0, "MRVINREACH", "xremotePortIndex"),
)
if mibBuilder.loadTexts:
    xremotePortEntry.setStatus("mandatory")
_XremotePortIndex_Type = Integer32
_XremotePortIndex_Object = MibTableColumn
xremotePortIndex = _XremotePortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 10, 8, 1, 1),
    _XremotePortIndex_Type()
)
xremotePortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xremotePortIndex.setStatus("mandatory")


class _XremotePortXremote_Type(Integer32):
    """Custom type xremotePortXremote based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_XremotePortXremote_Type.__name__ = "Integer32"
_XremotePortXremote_Object = MibTableColumn
xremotePortXremote = _XremotePortXremote_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 10, 8, 1, 2),
    _XremotePortXremote_Type()
)
xremotePortXremote.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xremotePortXremote.setStatus("mandatory")


class _XremotePortXdmQuery_Type(Integer32):
    """Custom type xremotePortXdmQuery based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("broadcast", 2),
          ("indirect", 3),
          ("specific", 1))
    )


_XremotePortXdmQuery_Type.__name__ = "Integer32"
_XremotePortXdmQuery_Object = MibTableColumn
xremotePortXdmQuery = _XremotePortXdmQuery_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 10, 8, 1, 3),
    _XremotePortXdmQuery_Type()
)
xremotePortXdmQuery.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xremotePortXdmQuery.setStatus("mandatory")


class _XremotePortXdmHost_Type(DisplayString):
    """Custom type xremotePortXdmHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_XremotePortXdmHost_Type.__name__ = "DisplayString"
_XremotePortXdmHost_Object = MibTableColumn
xremotePortXdmHost = _XremotePortXdmHost_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 10, 8, 1, 4),
    _XremotePortXdmHost_Type()
)
xremotePortXdmHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xremotePortXdmHost.setStatus("mandatory")
_XremoteServerClients_Type = Gauge32
_XremoteServerClients_Object = MibScalar
xremoteServerClients = _XremoteServerClients_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 10, 9),
    _XremoteServerClients_Type()
)
xremoteServerClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xremoteServerClients.setStatus("mandatory")
_XRotary_ObjectIdentity = ObjectIdentity
xRotary = _XRotary_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 11)
)
_RotaryNumber_Type = Integer32
_RotaryNumber_Object = MibScalar
rotaryNumber = _RotaryNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 11, 1),
    _RotaryNumber_Type()
)
rotaryNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rotaryNumber.setStatus("mandatory")
_RotaryTable_Object = MibTable
rotaryTable = _RotaryTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 11, 2)
)
if mibBuilder.loadTexts:
    rotaryTable.setStatus("mandatory")
_RotaryEntry_Object = MibTableRow
rotaryEntry = _RotaryEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 11, 2, 1)
)
rotaryEntry.setIndexNames(
    (0, "MRVINREACH", "rotaryAddress"),
)
if mibBuilder.loadTexts:
    rotaryEntry.setStatus("mandatory")
_RotaryAddress_Type = IpAddress
_RotaryAddress_Object = MibTableColumn
rotaryAddress = _RotaryAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 11, 2, 1, 1),
    _RotaryAddress_Type()
)
rotaryAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rotaryAddress.setStatus("mandatory")


class _RotaryStatus_Type(Integer32):
    """Custom type rotaryStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_RotaryStatus_Type.__name__ = "Integer32"
_RotaryStatus_Object = MibTableColumn
rotaryStatus = _RotaryStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 11, 2, 1, 2),
    _RotaryStatus_Type()
)
rotaryStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rotaryStatus.setStatus("mandatory")
_RotaryPortMap_Type = OctetString
_RotaryPortMap_Object = MibTableColumn
rotaryPortMap = _RotaryPortMap_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 11, 2, 1, 3),
    _RotaryPortMap_Type()
)
rotaryPortMap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    rotaryPortMap.setStatus("mandatory")
_XEgp_ObjectIdentity = ObjectIdentity
xEgp = _XEgp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 12)
)


class _EgpRouting_Type(Integer32):
    """Custom type egpRouting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_EgpRouting_Type.__name__ = "Integer32"
_EgpRouting_Object = MibScalar
egpRouting = _EgpRouting_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 12, 1),
    _EgpRouting_Type()
)
egpRouting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    egpRouting.setStatus("mandatory")


class _EgpStatus_Type(Integer32):
    """Custom type egpStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("noAS", 6),
          ("noEgpRouting", 4),
          ("noIpRouting", 3),
          ("noMemory", 2),
          ("noNeighbors", 5))
    )


_EgpStatus_Type.__name__ = "Integer32"
_EgpStatus_Object = MibScalar
egpStatus = _EgpStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 12, 2),
    _EgpStatus_Type()
)
egpStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    egpStatus.setStatus("mandatory")
_EgpNbrTable_Object = MibTable
egpNbrTable = _EgpNbrTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 12, 3)
)
if mibBuilder.loadTexts:
    egpNbrTable.setStatus("mandatory")
_EgpNbrEntry_Object = MibTableRow
egpNbrEntry = _EgpNbrEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 12, 3, 1)
)
egpNbrEntry.setIndexNames(
    (0, "MRVINREACH", "egpNbrAddr"),
)
if mibBuilder.loadTexts:
    egpNbrEntry.setStatus("mandatory")
_EgpNbrAddr_Type = IpAddress
_EgpNbrAddr_Object = MibTableColumn
egpNbrAddr = _EgpNbrAddr_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 12, 3, 1, 1),
    _EgpNbrAddr_Type()
)
egpNbrAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    egpNbrAddr.setStatus("mandatory")


class _EgpNbrIntervalDead_Type(Integer32):
    """Custom type egpNbrIntervalDead based on Integer32"""
    defaultValue = 30000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_EgpNbrIntervalDead_Type.__name__ = "Integer32"
_EgpNbrIntervalDead_Object = MibTableColumn
egpNbrIntervalDead = _EgpNbrIntervalDead_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 12, 3, 1, 2),
    _EgpNbrIntervalDead_Type()
)
egpNbrIntervalDead.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    egpNbrIntervalDead.setStatus("mandatory")


class _EgpNbrStatus_Type(Integer32):
    """Custom type egpNbrStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_EgpNbrStatus_Type.__name__ = "Integer32"
_EgpNbrStatus_Object = MibTableColumn
egpNbrStatus = _EgpNbrStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 12, 3, 1, 3),
    _EgpNbrStatus_Type()
)
egpNbrStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    egpNbrStatus.setStatus("mandatory")
_XOspf_ObjectIdentity = ObjectIdentity
xOspf = _XOspf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 13)
)


class _OspfAutoConfigure_Type(Integer32):
    """Custom type ospfAutoConfigure based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_OspfAutoConfigure_Type.__name__ = "Integer32"
_OspfAutoConfigure_Object = MibScalar
ospfAutoConfigure = _OspfAutoConfigure_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 13, 1),
    _OspfAutoConfigure_Type()
)
ospfAutoConfigure.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfAutoConfigure.setStatus("mandatory")


class _OspfStatus_Type(Integer32):
    """Custom type ospfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("noAreas", 5),
          ("noBackBone", 10),
          ("noBackBoneAndInterface", 9),
          ("noBackBoneAndVirtualInterfaces", 8),
          ("noInterfaces", 6),
          ("noIpRouting", 3),
          ("noMemory", 2),
          ("noOspfRouting", 4),
          ("noRtrId", 7))
    )


_OspfStatus_Type.__name__ = "Integer32"
_OspfStatus_Object = MibScalar
ospfStatus = _OspfStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 13, 2),
    _OspfStatus_Type()
)
ospfStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfStatus.setStatus("mandatory")
_OspfIfMtrcTable_Object = MibTable
ospfIfMtrcTable = _OspfIfMtrcTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 13, 3)
)
if mibBuilder.loadTexts:
    ospfIfMtrcTable.setStatus("mandatory")
_OspfIfMtrcEntry_Object = MibTableRow
ospfIfMtrcEntry = _OspfIfMtrcEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 13, 3, 1)
)
ospfIfMtrcEntry.setIndexNames(
    (0, "MRVINREACH", "ospfIfMtrcIpAddress"),
    (0, "MRVINREACH", "ospfIfMtrcAddressLessIf"),
    (0, "MRVINREACH", "ospfIfMtrcTos"),
)
if mibBuilder.loadTexts:
    ospfIfMtrcEntry.setStatus("mandatory")
_OspfIfMtrcIpAddress_Type = IpAddress
_OspfIfMtrcIpAddress_Object = MibTableColumn
ospfIfMtrcIpAddress = _OspfIfMtrcIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 13, 3, 1, 1),
    _OspfIfMtrcIpAddress_Type()
)
ospfIfMtrcIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfIfMtrcIpAddress.setStatus("mandatory")
_OspfIfMtrcAddressLessIf_Type = Integer32
_OspfIfMtrcAddressLessIf_Object = MibTableColumn
ospfIfMtrcAddressLessIf = _OspfIfMtrcAddressLessIf_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 13, 3, 1, 2),
    _OspfIfMtrcAddressLessIf_Type()
)
ospfIfMtrcAddressLessIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfIfMtrcAddressLessIf.setStatus("mandatory")


class _OspfIfMtrcTos_Type(Integer32):
    """Custom type ospfIfMtrcTos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_OspfIfMtrcTos_Type.__name__ = "Integer32"
_OspfIfMtrcTos_Object = MibTableColumn
ospfIfMtrcTos = _OspfIfMtrcTos_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 13, 3, 1, 3),
    _OspfIfMtrcTos_Type()
)
ospfIfMtrcTos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfIfMtrcTos.setStatus("mandatory")


class _OspfIfMtrcCostActual_Type(Integer32):
    """Custom type ospfIfMtrcCostActual based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_OspfIfMtrcCostActual_Type.__name__ = "Integer32"
_OspfIfMtrcCostActual_Object = MibTableColumn
ospfIfMtrcCostActual = _OspfIfMtrcCostActual_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 13, 3, 1, 4),
    _OspfIfMtrcCostActual_Type()
)
ospfIfMtrcCostActual.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfIfMtrcCostActual.setStatus("mandatory")
_OspfXIfTable_Object = MibTable
ospfXIfTable = _OspfXIfTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 13, 4)
)
if mibBuilder.loadTexts:
    ospfXIfTable.setStatus("mandatory")
_OspfXIfEntry_Object = MibTableRow
ospfXIfEntry = _OspfXIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 13, 4, 1)
)
ospfXIfEntry.setIndexNames(
    (0, "MRVINREACH", "ospfXIfIpAddress"),
    (0, "MRVINREACH", "ospfXIfAddressLessIf"),
)
if mibBuilder.loadTexts:
    ospfXIfEntry.setStatus("mandatory")
_OspfXIfIpAddress_Type = IpAddress
_OspfXIfIpAddress_Object = MibTableColumn
ospfXIfIpAddress = _OspfXIfIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 13, 4, 1, 1),
    _OspfXIfIpAddress_Type()
)
ospfXIfIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfXIfIpAddress.setStatus("mandatory")
_OspfXIfAddressLessIf_Type = Integer32
_OspfXIfAddressLessIf_Object = MibTableColumn
ospfXIfAddressLessIf = _OspfXIfAddressLessIf_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 13, 4, 1, 2),
    _OspfXIfAddressLessIf_Type()
)
ospfXIfAddressLessIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfXIfAddressLessIf.setStatus("mandatory")


class _OspfXIfTypeActual_Type(Integer32):
    """Custom type ospfXIfTypeActual based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("broadcast", 1),
          ("nonbroadcast", 2),
          ("pointToPoint", 3))
    )


_OspfXIfTypeActual_Type.__name__ = "Integer32"
_OspfXIfTypeActual_Object = MibTableColumn
ospfXIfTypeActual = _OspfXIfTypeActual_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 13, 4, 1, 3),
    _OspfXIfTypeActual_Type()
)
ospfXIfTypeActual.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfXIfTypeActual.setStatus("mandatory")


class _OspfXIfStatus_Type(Integer32):
    """Custom type ospfXIfStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_OspfXIfStatus_Type.__name__ = "Integer32"
_OspfXIfStatus_Object = MibTableColumn
ospfXIfStatus = _OspfXIfStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 13, 4, 1, 4),
    _OspfXIfStatus_Type()
)
ospfXIfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfXIfStatus.setStatus("mandatory")
_OspfXAreaTable_Object = MibTable
ospfXAreaTable = _OspfXAreaTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 13, 5)
)
if mibBuilder.loadTexts:
    ospfXAreaTable.setStatus("mandatory")
_OspfXAreaEntry_Object = MibTableRow
ospfXAreaEntry = _OspfXAreaEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 13, 5, 1)
)
ospfXAreaEntry.setIndexNames(
    (0, "MRVINREACH", "ospfXAreaId"),
)
if mibBuilder.loadTexts:
    ospfXAreaEntry.setStatus("mandatory")
_OspfXAreaId_Type = IpAddress
_OspfXAreaId_Object = MibTableColumn
ospfXAreaId = _OspfXAreaId_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 13, 5, 1, 1),
    _OspfXAreaId_Type()
)
ospfXAreaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfXAreaId.setStatus("mandatory")


class _OspfXAreaStatus_Type(Integer32):
    """Custom type ospfXAreaStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_OspfXAreaStatus_Type.__name__ = "Integer32"
_OspfXAreaStatus_Object = MibTableColumn
ospfXAreaStatus = _OspfXAreaStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 13, 5, 1, 2),
    _OspfXAreaStatus_Type()
)
ospfXAreaStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfXAreaStatus.setStatus("mandatory")
_XRouterIp_ObjectIdentity = ObjectIdentity
xRouterIp = _XRouterIp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 14)
)
_IpAdExtTable_Object = MibTable
ipAdExtTable = _IpAdExtTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 1)
)
if mibBuilder.loadTexts:
    ipAdExtTable.setStatus("mandatory")
_IpAdExtEntry_Object = MibTableRow
ipAdExtEntry = _IpAdExtEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 1, 1)
)
ipAdExtEntry.setIndexNames(
    (0, "MRVINREACH", "ipAdEntExtAddress"),
)
if mibBuilder.loadTexts:
    ipAdExtEntry.setStatus("mandatory")
_IpAdEntExtAddress_Type = IpAddress
_IpAdEntExtAddress_Object = MibTableColumn
ipAdEntExtAddress = _IpAdEntExtAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 1, 1, 1),
    _IpAdEntExtAddress_Type()
)
ipAdEntExtAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAdEntExtAddress.setStatus("mandatory")


class _IpAdEntExtProxyArp_Type(Integer32):
    """Custom type ipAdEntExtProxyArp based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpAdEntExtProxyArp_Type.__name__ = "Integer32"
_IpAdEntExtProxyArp_Object = MibTableColumn
ipAdEntExtProxyArp = _IpAdEntExtProxyArp_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 1, 1, 2),
    _IpAdEntExtProxyArp_Type()
)
ipAdEntExtProxyArp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAdEntExtProxyArp.setStatus("mandatory")


class _IpAdEntExtRip_Type(Integer32):
    """Custom type ipAdEntExtRip based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpAdEntExtRip_Type.__name__ = "Integer32"
_IpAdEntExtRip_Object = MibTableColumn
ipAdEntExtRip = _IpAdEntExtRip_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 1, 1, 3),
    _IpAdEntExtRip_Type()
)
ipAdEntExtRip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAdEntExtRip.setStatus("deprecated")
_IpRouterIfTable_Object = MibTable
ipRouterIfTable = _IpRouterIfTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 2)
)
if mibBuilder.loadTexts:
    ipRouterIfTable.setStatus("mandatory")
_IpRouterIfEntry_Object = MibTableRow
ipRouterIfEntry = _IpRouterIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 2, 1)
)
ipRouterIfEntry.setIndexNames(
    (0, "MRVINREACH", "ipRouterIfIndex"),
)
if mibBuilder.loadTexts:
    ipRouterIfEntry.setStatus("mandatory")
_IpRouterIfIndex_Type = Integer32
_IpRouterIfIndex_Object = MibTableColumn
ipRouterIfIndex = _IpRouterIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 2, 1, 1),
    _IpRouterIfIndex_Type()
)
ipRouterIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipRouterIfIndex.setStatus("mandatory")


class _IpRouterIfProtocolPriority_Type(Integer32):
    """Custom type ipRouterIfProtocolPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              5)
        )
    )
    namedValues = NamedValues(
        *(("high", 5),
          ("low", 1),
          ("medium", 3))
    )


_IpRouterIfProtocolPriority_Type.__name__ = "Integer32"
_IpRouterIfProtocolPriority_Object = MibTableColumn
ipRouterIfProtocolPriority = _IpRouterIfProtocolPriority_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 2, 1, 2),
    _IpRouterIfProtocolPriority_Type()
)
ipRouterIfProtocolPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipRouterIfProtocolPriority.setStatus("mandatory")


class _IpRouterIfMTU_Type(Integer32):
    """Custom type ipRouterIfMTU based on Integer32"""
    defaultValue = 1500

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(128, 65535),
    )


_IpRouterIfMTU_Type.__name__ = "Integer32"
_IpRouterIfMTU_Object = MibTableColumn
ipRouterIfMTU = _IpRouterIfMTU_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 2, 1, 3),
    _IpRouterIfMTU_Type()
)
ipRouterIfMTU.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipRouterIfMTU.setStatus("mandatory")


class _IpRouterIfRDP_Type(Integer32):
    """Custom type ipRouterIfRDP based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_IpRouterIfRDP_Type.__name__ = "Integer32"
_IpRouterIfRDP_Object = MibTableColumn
ipRouterIfRDP = _IpRouterIfRDP_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 2, 1, 4),
    _IpRouterIfRDP_Type()
)
ipRouterIfRDP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipRouterIfRDP.setStatus("mandatory")
_IpRouterIfArpPacketsIn_Type = Counter32
_IpRouterIfArpPacketsIn_Object = MibTableColumn
ipRouterIfArpPacketsIn = _IpRouterIfArpPacketsIn_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 2, 1, 5),
    _IpRouterIfArpPacketsIn_Type()
)
ipRouterIfArpPacketsIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipRouterIfArpPacketsIn.setStatus("mandatory")
_IpRouterIfArpPacketsOut_Type = Counter32
_IpRouterIfArpPacketsOut_Object = MibTableColumn
ipRouterIfArpPacketsOut = _IpRouterIfArpPacketsOut_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 2, 1, 6),
    _IpRouterIfArpPacketsOut_Type()
)
ipRouterIfArpPacketsOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipRouterIfArpPacketsOut.setStatus("mandatory")
_IpRouterIfPacketsIn_Type = Counter32
_IpRouterIfPacketsIn_Object = MibTableColumn
ipRouterIfPacketsIn = _IpRouterIfPacketsIn_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 2, 1, 7),
    _IpRouterIfPacketsIn_Type()
)
ipRouterIfPacketsIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipRouterIfPacketsIn.setStatus("mandatory")
_IpRouterIfPacketsOut_Type = Counter32
_IpRouterIfPacketsOut_Object = MibTableColumn
ipRouterIfPacketsOut = _IpRouterIfPacketsOut_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 2, 1, 8),
    _IpRouterIfPacketsOut_Type()
)
ipRouterIfPacketsOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipRouterIfPacketsOut.setStatus("mandatory")
_IpRouterIfForwardsIn_Type = Counter32
_IpRouterIfForwardsIn_Object = MibTableColumn
ipRouterIfForwardsIn = _IpRouterIfForwardsIn_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 2, 1, 9),
    _IpRouterIfForwardsIn_Type()
)
ipRouterIfForwardsIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipRouterIfForwardsIn.setStatus("mandatory")
_IpRouterIfForwardsOut_Type = Counter32
_IpRouterIfForwardsOut_Object = MibTableColumn
ipRouterIfForwardsOut = _IpRouterIfForwardsOut_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 2, 1, 10),
    _IpRouterIfForwardsOut_Type()
)
ipRouterIfForwardsOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipRouterIfForwardsOut.setStatus("mandatory")
_XIpTraffic_ObjectIdentity = ObjectIdentity
xIpTraffic = _XIpTraffic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 3)
)


class _IpTrafficSort_Type(Integer32):
    """Custom type ipTrafficSort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_IpTrafficSort_Type.__name__ = "Integer32"
_IpTrafficSort_Object = MibScalar
ipTrafficSort = _IpTrafficSort_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 3, 1),
    _IpTrafficSort_Type()
)
ipTrafficSort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipTrafficSort.setStatus("mandatory")
_IpTrafficTable_Object = MibTable
ipTrafficTable = _IpTrafficTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 3, 2)
)
if mibBuilder.loadTexts:
    ipTrafficTable.setStatus("mandatory")
_IpTrafficEntry_Object = MibTableRow
ipTrafficEntry = _IpTrafficEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 3, 2, 1)
)
ipTrafficEntry.setIndexNames(
    (0, "MRVINREACH", "ipTrafficIndex"),
)
if mibBuilder.loadTexts:
    ipTrafficEntry.setStatus("mandatory")
_IpTrafficIndex_Type = Integer32
_IpTrafficIndex_Object = MibTableColumn
ipTrafficIndex = _IpTrafficIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 3, 2, 1, 1),
    _IpTrafficIndex_Type()
)
ipTrafficIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipTrafficIndex.setStatus("mandatory")
_IpTrafficPercent_Type = Integer32
_IpTrafficPercent_Object = MibTableColumn
ipTrafficPercent = _IpTrafficPercent_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 3, 2, 1, 2),
    _IpTrafficPercent_Type()
)
ipTrafficPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipTrafficPercent.setStatus("mandatory")
_IpTrafficDstAddr_Type = IpAddress
_IpTrafficDstAddr_Object = MibTableColumn
ipTrafficDstAddr = _IpTrafficDstAddr_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 3, 2, 1, 3),
    _IpTrafficDstAddr_Type()
)
ipTrafficDstAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipTrafficDstAddr.setStatus("mandatory")
_IpTrafficSrcAddr_Type = IpAddress
_IpTrafficSrcAddr_Object = MibTableColumn
ipTrafficSrcAddr = _IpTrafficSrcAddr_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 3, 2, 1, 4),
    _IpTrafficSrcAddr_Type()
)
ipTrafficSrcAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipTrafficSrcAddr.setStatus("mandatory")


class _IpTrafficProtocol_Type(Integer32):
    """Custom type ipTrafficProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_IpTrafficProtocol_Type.__name__ = "Integer32"
_IpTrafficProtocol_Object = MibTableColumn
ipTrafficProtocol = _IpTrafficProtocol_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 3, 2, 1, 5),
    _IpTrafficProtocol_Type()
)
ipTrafficProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipTrafficProtocol.setStatus("mandatory")


class _IpTrafficDstPort_Type(Integer32):
    """Custom type ipTrafficDstPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_IpTrafficDstPort_Type.__name__ = "Integer32"
_IpTrafficDstPort_Object = MibTableColumn
ipTrafficDstPort = _IpTrafficDstPort_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 3, 2, 1, 6),
    _IpTrafficDstPort_Type()
)
ipTrafficDstPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipTrafficDstPort.setStatus("mandatory")


class _IpTrafficSrcPort_Type(Integer32):
    """Custom type ipTrafficSrcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_IpTrafficSrcPort_Type.__name__ = "Integer32"
_IpTrafficSrcPort_Object = MibTableColumn
ipTrafficSrcPort = _IpTrafficSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 3, 2, 1, 7),
    _IpTrafficSrcPort_Type()
)
ipTrafficSrcPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipTrafficSrcPort.setStatus("mandatory")
_IpTrafficIf_Type = Integer32
_IpTrafficIf_Object = MibTableColumn
ipTrafficIf = _IpTrafficIf_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 3, 2, 1, 8),
    _IpTrafficIf_Type()
)
ipTrafficIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipTrafficIf.setStatus("mandatory")


class _IpTrafficMonitoring_Type(Integer32):
    """Custom type ipTrafficMonitoring based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_IpTrafficMonitoring_Type.__name__ = "Integer32"
_IpTrafficMonitoring_Object = MibScalar
ipTrafficMonitoring = _IpTrafficMonitoring_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 3, 3),
    _IpTrafficMonitoring_Type()
)
ipTrafficMonitoring.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipTrafficMonitoring.setStatus("mandatory")
_XIpNetToMediaTable_Object = MibTable
xIpNetToMediaTable = _XIpNetToMediaTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 4)
)
if mibBuilder.loadTexts:
    xIpNetToMediaTable.setStatus("mandatory")
_XIpNetToMediaEntry_Object = MibTableRow
xIpNetToMediaEntry = _XIpNetToMediaEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 4, 1)
)
xIpNetToMediaEntry.setIndexNames(
    (0, "MRVINREACH", "ifIndex"),
    (0, "MRVINREACH", "ipNetToMediaNetAddress"),
)
if mibBuilder.loadTexts:
    xIpNetToMediaEntry.setStatus("mandatory")
_XIpNetToMediaCircuit_Type = Integer32
_XIpNetToMediaCircuit_Object = MibTableColumn
xIpNetToMediaCircuit = _XIpNetToMediaCircuit_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 4, 1, 1),
    _XIpNetToMediaCircuit_Type()
)
xIpNetToMediaCircuit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xIpNetToMediaCircuit.setStatus("mandatory")


class _XIpNetToMediaReverseArp_Type(Integer32):
    """Custom type xIpNetToMediaReverseArp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_XIpNetToMediaReverseArp_Type.__name__ = "Integer32"
_XIpNetToMediaReverseArp_Object = MibTableColumn
xIpNetToMediaReverseArp = _XIpNetToMediaReverseArp_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 14, 4, 1, 2),
    _XIpNetToMediaReverseArp_Type()
)
xIpNetToMediaReverseArp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xIpNetToMediaReverseArp.setStatus("mandatory")
_XRouterUdp_ObjectIdentity = ObjectIdentity
xRouterUdp = _XRouterUdp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 15)
)
_UdpBcstServerTable_Object = MibTable
udpBcstServerTable = _UdpBcstServerTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 15, 1)
)
if mibBuilder.loadTexts:
    udpBcstServerTable.setStatus("mandatory")
_UdpBcstServerEntry_Object = MibTableRow
udpBcstServerEntry = _UdpBcstServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 15, 1, 1)
)
udpBcstServerEntry.setIndexNames(
    (0, "MRVINREACH", "udpBcstServerAddress"),
)
if mibBuilder.loadTexts:
    udpBcstServerEntry.setStatus("mandatory")
_UdpBcstServerAddress_Type = IpAddress
_UdpBcstServerAddress_Object = MibTableColumn
udpBcstServerAddress = _UdpBcstServerAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 15, 1, 1, 1),
    _UdpBcstServerAddress_Type()
)
udpBcstServerAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udpBcstServerAddress.setStatus("mandatory")


class _UdpBcstServerStatus_Type(Integer32):
    """Custom type udpBcstServerStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_UdpBcstServerStatus_Type.__name__ = "Integer32"
_UdpBcstServerStatus_Object = MibTableColumn
udpBcstServerStatus = _UdpBcstServerStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 15, 1, 1, 2),
    _UdpBcstServerStatus_Type()
)
udpBcstServerStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    udpBcstServerStatus.setStatus("mandatory")
_UdpBcstPortTable_Object = MibTable
udpBcstPortTable = _UdpBcstPortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 15, 2)
)
if mibBuilder.loadTexts:
    udpBcstPortTable.setStatus("mandatory")
_UdpBcstPortEntry_Object = MibTableRow
udpBcstPortEntry = _UdpBcstPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 15, 2, 1)
)
udpBcstPortEntry.setIndexNames(
    (0, "MRVINREACH", "udpBcstPort"),
)
if mibBuilder.loadTexts:
    udpBcstPortEntry.setStatus("mandatory")
_UdpBcstPort_Type = Integer32
_UdpBcstPort_Object = MibTableColumn
udpBcstPort = _UdpBcstPort_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 15, 2, 1, 1),
    _UdpBcstPort_Type()
)
udpBcstPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udpBcstPort.setStatus("mandatory")


class _UdpBcstPortStatus_Type(Integer32):
    """Custom type udpBcstPortStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_UdpBcstPortStatus_Type.__name__ = "Integer32"
_UdpBcstPortStatus_Object = MibTableColumn
udpBcstPortStatus = _UdpBcstPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 15, 2, 1, 2),
    _UdpBcstPortStatus_Type()
)
udpBcstPortStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    udpBcstPortStatus.setStatus("mandatory")


class _UdpBcstRouting_Type(Integer32):
    """Custom type udpBcstRouting based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_UdpBcstRouting_Type.__name__ = "Integer32"
_UdpBcstRouting_Object = MibScalar
udpBcstRouting = _UdpBcstRouting_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 15, 3),
    _UdpBcstRouting_Type()
)
udpBcstRouting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    udpBcstRouting.setStatus("mandatory")
_XRouterPolicy_ObjectIdentity = ObjectIdentity
xRouterPolicy = _XRouterPolicy_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 16)
)
_XImport_ObjectIdentity = ObjectIdentity
xImport = _XImport_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1)
)
_ImpEgpRuleTable_Object = MibTable
impEgpRuleTable = _ImpEgpRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 1)
)
if mibBuilder.loadTexts:
    impEgpRuleTable.setStatus("mandatory")
_ImpEgpRuleEntry_Object = MibTableRow
impEgpRuleEntry = _ImpEgpRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 1, 1)
)
impEgpRuleEntry.setIndexNames(
    (0, "MRVINREACH", "impEgpRuleAs"),
    (0, "MRVINREACH", "impEgpRuleNetwork"),
)
if mibBuilder.loadTexts:
    impEgpRuleEntry.setStatus("mandatory")


class _ImpEgpRuleAs_Type(Integer32):
    """Custom type impEgpRuleAs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ImpEgpRuleAs_Type.__name__ = "Integer32"
_ImpEgpRuleAs_Object = MibTableColumn
impEgpRuleAs = _ImpEgpRuleAs_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 1, 1, 1),
    _ImpEgpRuleAs_Type()
)
impEgpRuleAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    impEgpRuleAs.setStatus("mandatory")
_ImpEgpRuleNetwork_Type = IpAddress
_ImpEgpRuleNetwork_Object = MibTableColumn
impEgpRuleNetwork = _ImpEgpRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 1, 1, 2),
    _ImpEgpRuleNetwork_Type()
)
impEgpRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    impEgpRuleNetwork.setStatus("mandatory")


class _ImpEgpRuleAction_Type(Integer32):
    """Custom type impEgpRuleAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("accept", 2),
          ("discard", 1))
    )


_ImpEgpRuleAction_Type.__name__ = "Integer32"
_ImpEgpRuleAction_Object = MibTableColumn
impEgpRuleAction = _ImpEgpRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 1, 1, 3),
    _ImpEgpRuleAction_Type()
)
impEgpRuleAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    impEgpRuleAction.setStatus("mandatory")


class _ImpEgpRulePreference_Type(Integer32):
    """Custom type impEgpRulePreference based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_ImpEgpRulePreference_Type.__name__ = "Integer32"
_ImpEgpRulePreference_Object = MibTableColumn
impEgpRulePreference = _ImpEgpRulePreference_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 1, 1, 4),
    _ImpEgpRulePreference_Type()
)
impEgpRulePreference.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    impEgpRulePreference.setStatus("mandatory")


class _ImpEgpRuleType_Type(Integer32):
    """Custom type impEgpRuleType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_ImpEgpRuleType_Type.__name__ = "Integer32"
_ImpEgpRuleType_Object = MibTableColumn
impEgpRuleType = _ImpEgpRuleType_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 1, 1, 5),
    _ImpEgpRuleType_Type()
)
impEgpRuleType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    impEgpRuleType.setStatus("mandatory")


class _ImpEgpRuleMetricAction_Type(Integer32):
    """Custom type impEgpRuleMetricAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ImpEgpRuleMetricAction_Type.__name__ = "Integer32"
_ImpEgpRuleMetricAction_Object = MibTableColumn
impEgpRuleMetricAction = _ImpEgpRuleMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 1, 1, 6),
    _ImpEgpRuleMetricAction_Type()
)
impEgpRuleMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    impEgpRuleMetricAction.setStatus("mandatory")


class _ImpEgpRuleMetric_Type(Integer32):
    """Custom type impEgpRuleMetric based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_ImpEgpRuleMetric_Type.__name__ = "Integer32"
_ImpEgpRuleMetric_Object = MibTableColumn
impEgpRuleMetric = _ImpEgpRuleMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 1, 1, 7),
    _ImpEgpRuleMetric_Type()
)
impEgpRuleMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    impEgpRuleMetric.setStatus("mandatory")


class _ImpEgpRuleStatus_Type(Integer32):
    """Custom type impEgpRuleStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ImpEgpRuleStatus_Type.__name__ = "Integer32"
_ImpEgpRuleStatus_Object = MibTableColumn
impEgpRuleStatus = _ImpEgpRuleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 1, 1, 8),
    _ImpEgpRuleStatus_Type()
)
impEgpRuleStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    impEgpRuleStatus.setStatus("mandatory")
_ImpOspfRuleTable_Object = MibTable
impOspfRuleTable = _ImpOspfRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 2)
)
if mibBuilder.loadTexts:
    impOspfRuleTable.setStatus("mandatory")
_ImpOspfRuleEntry_Object = MibTableRow
impOspfRuleEntry = _ImpOspfRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 2, 1)
)
impOspfRuleEntry.setIndexNames(
    (0, "MRVINREACH", "impOspfRuleNetwork"),
)
if mibBuilder.loadTexts:
    impOspfRuleEntry.setStatus("mandatory")
_ImpOspfRuleNetwork_Type = IpAddress
_ImpOspfRuleNetwork_Object = MibTableColumn
impOspfRuleNetwork = _ImpOspfRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 2, 1, 1),
    _ImpOspfRuleNetwork_Type()
)
impOspfRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    impOspfRuleNetwork.setStatus("mandatory")


class _ImpOspfRulePreference_Type(Integer32):
    """Custom type impOspfRulePreference based on Integer32"""
    defaultValue = 8

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_ImpOspfRulePreference_Type.__name__ = "Integer32"
_ImpOspfRulePreference_Object = MibTableColumn
impOspfRulePreference = _ImpOspfRulePreference_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 2, 1, 2),
    _ImpOspfRulePreference_Type()
)
impOspfRulePreference.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    impOspfRulePreference.setStatus("mandatory")


class _ImpOspfRuleStatus_Type(Integer32):
    """Custom type impOspfRuleStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ImpOspfRuleStatus_Type.__name__ = "Integer32"
_ImpOspfRuleStatus_Object = MibTableColumn
impOspfRuleStatus = _ImpOspfRuleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 2, 1, 3),
    _ImpOspfRuleStatus_Type()
)
impOspfRuleStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    impOspfRuleStatus.setStatus("mandatory")
_ImpRipRuleTable_Object = MibTable
impRipRuleTable = _ImpRipRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 3)
)
if mibBuilder.loadTexts:
    impRipRuleTable.setStatus("mandatory")
_ImpRipRuleEntry_Object = MibTableRow
impRipRuleEntry = _ImpRipRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 3, 1)
)
impRipRuleEntry.setIndexNames(
    (0, "MRVINREACH", "impRipRuleFromIf"),
    (0, "MRVINREACH", "impRipRuleNetwork"),
)
if mibBuilder.loadTexts:
    impRipRuleEntry.setStatus("mandatory")
_ImpRipRuleFromIf_Type = IpAddress
_ImpRipRuleFromIf_Object = MibTableColumn
impRipRuleFromIf = _ImpRipRuleFromIf_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 3, 1, 1),
    _ImpRipRuleFromIf_Type()
)
impRipRuleFromIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    impRipRuleFromIf.setStatus("mandatory")
_ImpRipRuleNetwork_Type = IpAddress
_ImpRipRuleNetwork_Object = MibTableColumn
impRipRuleNetwork = _ImpRipRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 3, 1, 2),
    _ImpRipRuleNetwork_Type()
)
impRipRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    impRipRuleNetwork.setStatus("mandatory")


class _ImpRipRuleAction_Type(Integer32):
    """Custom type impRipRuleAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("accept", 2),
          ("discard", 1))
    )


_ImpRipRuleAction_Type.__name__ = "Integer32"
_ImpRipRuleAction_Object = MibTableColumn
impRipRuleAction = _ImpRipRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 3, 1, 3),
    _ImpRipRuleAction_Type()
)
impRipRuleAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    impRipRuleAction.setStatus("mandatory")


class _ImpRipRulePreference_Type(Integer32):
    """Custom type impRipRulePreference based on Integer32"""
    defaultValue = 12

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_ImpRipRulePreference_Type.__name__ = "Integer32"
_ImpRipRulePreference_Object = MibTableColumn
impRipRulePreference = _ImpRipRulePreference_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 3, 1, 4),
    _ImpRipRulePreference_Type()
)
impRipRulePreference.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    impRipRulePreference.setStatus("mandatory")


class _ImpRipRuleType_Type(Integer32):
    """Custom type impRipRuleType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_ImpRipRuleType_Type.__name__ = "Integer32"
_ImpRipRuleType_Object = MibTableColumn
impRipRuleType = _ImpRipRuleType_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 3, 1, 5),
    _ImpRipRuleType_Type()
)
impRipRuleType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    impRipRuleType.setStatus("mandatory")


class _ImpRipRuleMetricAction_Type(Integer32):
    """Custom type impRipRuleMetricAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ImpRipRuleMetricAction_Type.__name__ = "Integer32"
_ImpRipRuleMetricAction_Object = MibTableColumn
impRipRuleMetricAction = _ImpRipRuleMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 3, 1, 6),
    _ImpRipRuleMetricAction_Type()
)
impRipRuleMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    impRipRuleMetricAction.setStatus("mandatory")


class _ImpRipRuleMetric_Type(Integer32):
    """Custom type impRipRuleMetric based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_ImpRipRuleMetric_Type.__name__ = "Integer32"
_ImpRipRuleMetric_Object = MibTableColumn
impRipRuleMetric = _ImpRipRuleMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 3, 1, 7),
    _ImpRipRuleMetric_Type()
)
impRipRuleMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    impRipRuleMetric.setStatus("mandatory")


class _ImpRipRuleStatus_Type(Integer32):
    """Custom type impRipRuleStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ImpRipRuleStatus_Type.__name__ = "Integer32"
_ImpRipRuleStatus_Object = MibTableColumn
impRipRuleStatus = _ImpRipRuleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 3, 1, 8),
    _ImpRipRuleStatus_Type()
)
impRipRuleStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    impRipRuleStatus.setStatus("mandatory")
_ImpIsisRuleTable_Object = MibTable
impIsisRuleTable = _ImpIsisRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 4)
)
if mibBuilder.loadTexts:
    impIsisRuleTable.setStatus("mandatory")
_ImpIsisRuleEntry_Object = MibTableRow
impIsisRuleEntry = _ImpIsisRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 4, 1)
)
impIsisRuleEntry.setIndexNames(
    (0, "MRVINREACH", "impIsisRuleNetwork"),
)
if mibBuilder.loadTexts:
    impIsisRuleEntry.setStatus("mandatory")
_ImpIsisRuleNetwork_Type = IpAddress
_ImpIsisRuleNetwork_Object = MibTableColumn
impIsisRuleNetwork = _ImpIsisRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 4, 1, 1),
    _ImpIsisRuleNetwork_Type()
)
impIsisRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    impIsisRuleNetwork.setStatus("mandatory")


class _ImpIsisRuleAction_Type(Integer32):
    """Custom type impIsisRuleAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("accept", 2),
          ("discard", 1))
    )


_ImpIsisRuleAction_Type.__name__ = "Integer32"
_ImpIsisRuleAction_Object = MibTableColumn
impIsisRuleAction = _ImpIsisRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 4, 1, 2),
    _ImpIsisRuleAction_Type()
)
impIsisRuleAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    impIsisRuleAction.setStatus("mandatory")


class _ImpIsisRulePreference_Type(Integer32):
    """Custom type impIsisRulePreference based on Integer32"""
    defaultValue = 6

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_ImpIsisRulePreference_Type.__name__ = "Integer32"
_ImpIsisRulePreference_Object = MibTableColumn
impIsisRulePreference = _ImpIsisRulePreference_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 4, 1, 3),
    _ImpIsisRulePreference_Type()
)
impIsisRulePreference.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    impIsisRulePreference.setStatus("mandatory")


class _ImpIsisRuleType_Type(Integer32):
    """Custom type impIsisRuleType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_ImpIsisRuleType_Type.__name__ = "Integer32"
_ImpIsisRuleType_Object = MibTableColumn
impIsisRuleType = _ImpIsisRuleType_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 4, 1, 4),
    _ImpIsisRuleType_Type()
)
impIsisRuleType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    impIsisRuleType.setStatus("mandatory")


class _ImpIsisRuleMetricAction_Type(Integer32):
    """Custom type impIsisRuleMetricAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ImpIsisRuleMetricAction_Type.__name__ = "Integer32"
_ImpIsisRuleMetricAction_Object = MibTableColumn
impIsisRuleMetricAction = _ImpIsisRuleMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 4, 1, 5),
    _ImpIsisRuleMetricAction_Type()
)
impIsisRuleMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    impIsisRuleMetricAction.setStatus("mandatory")


class _ImpIsisRuleMetric_Type(Integer32):
    """Custom type impIsisRuleMetric based on Integer32"""
    defaultValue = 0


_ImpIsisRuleMetric_Object = MibTableColumn
impIsisRuleMetric = _ImpIsisRuleMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 4, 1, 6),
    _ImpIsisRuleMetric_Type()
)
impIsisRuleMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    impIsisRuleMetric.setStatus("mandatory")


class _ImpIsisRuleStatus_Type(Integer32):
    """Custom type impIsisRuleStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ImpIsisRuleStatus_Type.__name__ = "Integer32"
_ImpIsisRuleStatus_Object = MibTableColumn
impIsisRuleStatus = _ImpIsisRuleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 1, 4, 1, 7),
    _ImpIsisRuleStatus_Type()
)
impIsisRuleStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    impIsisRuleStatus.setStatus("mandatory")
_XExport_ObjectIdentity = ObjectIdentity
xExport = _XExport_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2)
)
_ExpEgpToEgpRuleTable_Object = MibTable
expEgpToEgpRuleTable = _ExpEgpToEgpRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 1)
)
if mibBuilder.loadTexts:
    expEgpToEgpRuleTable.setStatus("mandatory")
_ExpEgpToEgpRuleEntry_Object = MibTableRow
expEgpToEgpRuleEntry = _ExpEgpToEgpRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 1, 1)
)
expEgpToEgpRuleEntry.setIndexNames(
    (0, "MRVINREACH", "expEgpToEgpRuleToAs"),
    (0, "MRVINREACH", "expEgpToEgpRuleNetwork"),
    (0, "MRVINREACH", "expEgpToEgpRuleFromAs"),
)
if mibBuilder.loadTexts:
    expEgpToEgpRuleEntry.setStatus("mandatory")


class _ExpEgpToEgpRuleToAs_Type(Integer32):
    """Custom type expEgpToEgpRuleToAs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ExpEgpToEgpRuleToAs_Type.__name__ = "Integer32"
_ExpEgpToEgpRuleToAs_Object = MibTableColumn
expEgpToEgpRuleToAs = _ExpEgpToEgpRuleToAs_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 1, 1, 1),
    _ExpEgpToEgpRuleToAs_Type()
)
expEgpToEgpRuleToAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expEgpToEgpRuleToAs.setStatus("mandatory")
_ExpEgpToEgpRuleNetwork_Type = IpAddress
_ExpEgpToEgpRuleNetwork_Object = MibTableColumn
expEgpToEgpRuleNetwork = _ExpEgpToEgpRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 1, 1, 2),
    _ExpEgpToEgpRuleNetwork_Type()
)
expEgpToEgpRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expEgpToEgpRuleNetwork.setStatus("mandatory")


class _ExpEgpToEgpRuleFromAs_Type(Integer32):
    """Custom type expEgpToEgpRuleFromAs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ExpEgpToEgpRuleFromAs_Type.__name__ = "Integer32"
_ExpEgpToEgpRuleFromAs_Object = MibTableColumn
expEgpToEgpRuleFromAs = _ExpEgpToEgpRuleFromAs_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 1, 1, 3),
    _ExpEgpToEgpRuleFromAs_Type()
)
expEgpToEgpRuleFromAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expEgpToEgpRuleFromAs.setStatus("mandatory")


class _ExpEgpToEgpRuleAction_Type(Integer32):
    """Custom type expEgpToEgpRuleAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertise", 2),
          ("hide", 1))
    )


_ExpEgpToEgpRuleAction_Type.__name__ = "Integer32"
_ExpEgpToEgpRuleAction_Object = MibTableColumn
expEgpToEgpRuleAction = _ExpEgpToEgpRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 1, 1, 4),
    _ExpEgpToEgpRuleAction_Type()
)
expEgpToEgpRuleAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expEgpToEgpRuleAction.setStatus("mandatory")


class _ExpEgpToEgpRuleMetricAction_Type(Integer32):
    """Custom type expEgpToEgpRuleMetricAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpEgpToEgpRuleMetricAction_Type.__name__ = "Integer32"
_ExpEgpToEgpRuleMetricAction_Object = MibTableColumn
expEgpToEgpRuleMetricAction = _ExpEgpToEgpRuleMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 1, 1, 5),
    _ExpEgpToEgpRuleMetricAction_Type()
)
expEgpToEgpRuleMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expEgpToEgpRuleMetricAction.setStatus("mandatory")


class _ExpEgpToEgpRuleMetric_Type(Integer32):
    """Custom type expEgpToEgpRuleMetric based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_ExpEgpToEgpRuleMetric_Type.__name__ = "Integer32"
_ExpEgpToEgpRuleMetric_Object = MibTableColumn
expEgpToEgpRuleMetric = _ExpEgpToEgpRuleMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 1, 1, 6),
    _ExpEgpToEgpRuleMetric_Type()
)
expEgpToEgpRuleMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expEgpToEgpRuleMetric.setStatus("mandatory")


class _ExpEgpToEgpRuleStatus_Type(Integer32):
    """Custom type expEgpToEgpRuleStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ExpEgpToEgpRuleStatus_Type.__name__ = "Integer32"
_ExpEgpToEgpRuleStatus_Object = MibTableColumn
expEgpToEgpRuleStatus = _ExpEgpToEgpRuleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 1, 1, 7),
    _ExpEgpToEgpRuleStatus_Type()
)
expEgpToEgpRuleStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expEgpToEgpRuleStatus.setStatus("mandatory")
_ExpOspfToEgpRuleTable_Object = MibTable
expOspfToEgpRuleTable = _ExpOspfToEgpRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 2)
)
if mibBuilder.loadTexts:
    expOspfToEgpRuleTable.setStatus("mandatory")
_ExpOspfToEgpRuleEntry_Object = MibTableRow
expOspfToEgpRuleEntry = _ExpOspfToEgpRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 2, 1)
)
expOspfToEgpRuleEntry.setIndexNames(
    (0, "MRVINREACH", "expOspfToEgpRuleToAs"),
    (0, "MRVINREACH", "expOspfToEgpRuleNetwork"),
    (0, "MRVINREACH", "expOspfToEgpRuleFromAs"),
)
if mibBuilder.loadTexts:
    expOspfToEgpRuleEntry.setStatus("mandatory")


class _ExpOspfToEgpRuleToAs_Type(Integer32):
    """Custom type expOspfToEgpRuleToAs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ExpOspfToEgpRuleToAs_Type.__name__ = "Integer32"
_ExpOspfToEgpRuleToAs_Object = MibTableColumn
expOspfToEgpRuleToAs = _ExpOspfToEgpRuleToAs_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 2, 1, 1),
    _ExpOspfToEgpRuleToAs_Type()
)
expOspfToEgpRuleToAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expOspfToEgpRuleToAs.setStatus("mandatory")
_ExpOspfToEgpRuleNetwork_Type = IpAddress
_ExpOspfToEgpRuleNetwork_Object = MibTableColumn
expOspfToEgpRuleNetwork = _ExpOspfToEgpRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 2, 1, 2),
    _ExpOspfToEgpRuleNetwork_Type()
)
expOspfToEgpRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expOspfToEgpRuleNetwork.setStatus("mandatory")


class _ExpOspfToEgpRuleFromAs_Type(Integer32):
    """Custom type expOspfToEgpRuleFromAs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ExpOspfToEgpRuleFromAs_Type.__name__ = "Integer32"
_ExpOspfToEgpRuleFromAs_Object = MibTableColumn
expOspfToEgpRuleFromAs = _ExpOspfToEgpRuleFromAs_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 2, 1, 3),
    _ExpOspfToEgpRuleFromAs_Type()
)
expOspfToEgpRuleFromAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expOspfToEgpRuleFromAs.setStatus("mandatory")


class _ExpOspfToEgpRuleAction_Type(Integer32):
    """Custom type expOspfToEgpRuleAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertise", 2),
          ("hide", 1))
    )


_ExpOspfToEgpRuleAction_Type.__name__ = "Integer32"
_ExpOspfToEgpRuleAction_Object = MibTableColumn
expOspfToEgpRuleAction = _ExpOspfToEgpRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 2, 1, 4),
    _ExpOspfToEgpRuleAction_Type()
)
expOspfToEgpRuleAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expOspfToEgpRuleAction.setStatus("mandatory")


class _ExpOspfToEgpRuleMetricAction_Type(Integer32):
    """Custom type expOspfToEgpRuleMetricAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpOspfToEgpRuleMetricAction_Type.__name__ = "Integer32"
_ExpOspfToEgpRuleMetricAction_Object = MibTableColumn
expOspfToEgpRuleMetricAction = _ExpOspfToEgpRuleMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 2, 1, 5),
    _ExpOspfToEgpRuleMetricAction_Type()
)
expOspfToEgpRuleMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expOspfToEgpRuleMetricAction.setStatus("mandatory")


class _ExpOspfToEgpRuleMetric_Type(Integer32):
    """Custom type expOspfToEgpRuleMetric based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_ExpOspfToEgpRuleMetric_Type.__name__ = "Integer32"
_ExpOspfToEgpRuleMetric_Object = MibTableColumn
expOspfToEgpRuleMetric = _ExpOspfToEgpRuleMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 2, 1, 6),
    _ExpOspfToEgpRuleMetric_Type()
)
expOspfToEgpRuleMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expOspfToEgpRuleMetric.setStatus("mandatory")


class _ExpOspfToEgpRuleStatus_Type(Integer32):
    """Custom type expOspfToEgpRuleStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ExpOspfToEgpRuleStatus_Type.__name__ = "Integer32"
_ExpOspfToEgpRuleStatus_Object = MibTableColumn
expOspfToEgpRuleStatus = _ExpOspfToEgpRuleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 2, 1, 7),
    _ExpOspfToEgpRuleStatus_Type()
)
expOspfToEgpRuleStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expOspfToEgpRuleStatus.setStatus("mandatory")
_ExpStaticToEgpRuleTable_Object = MibTable
expStaticToEgpRuleTable = _ExpStaticToEgpRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 3)
)
if mibBuilder.loadTexts:
    expStaticToEgpRuleTable.setStatus("mandatory")
_ExpStaticToEgpRuleEntry_Object = MibTableRow
expStaticToEgpRuleEntry = _ExpStaticToEgpRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 3, 1)
)
expStaticToEgpRuleEntry.setIndexNames(
    (0, "MRVINREACH", "expStaticToEgpRuleToAs"),
    (0, "MRVINREACH", "expStaticToEgpRuleNetwork"),
)
if mibBuilder.loadTexts:
    expStaticToEgpRuleEntry.setStatus("mandatory")


class _ExpStaticToEgpRuleToAs_Type(Integer32):
    """Custom type expStaticToEgpRuleToAs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ExpStaticToEgpRuleToAs_Type.__name__ = "Integer32"
_ExpStaticToEgpRuleToAs_Object = MibTableColumn
expStaticToEgpRuleToAs = _ExpStaticToEgpRuleToAs_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 3, 1, 1),
    _ExpStaticToEgpRuleToAs_Type()
)
expStaticToEgpRuleToAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expStaticToEgpRuleToAs.setStatus("mandatory")
_ExpStaticToEgpRuleNetwork_Type = IpAddress
_ExpStaticToEgpRuleNetwork_Object = MibTableColumn
expStaticToEgpRuleNetwork = _ExpStaticToEgpRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 3, 1, 2),
    _ExpStaticToEgpRuleNetwork_Type()
)
expStaticToEgpRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expStaticToEgpRuleNetwork.setStatus("mandatory")


class _ExpStaticToEgpRuleAction_Type(Integer32):
    """Custom type expStaticToEgpRuleAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertise", 2),
          ("hide", 1))
    )


_ExpStaticToEgpRuleAction_Type.__name__ = "Integer32"
_ExpStaticToEgpRuleAction_Object = MibTableColumn
expStaticToEgpRuleAction = _ExpStaticToEgpRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 3, 1, 3),
    _ExpStaticToEgpRuleAction_Type()
)
expStaticToEgpRuleAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expStaticToEgpRuleAction.setStatus("mandatory")


class _ExpStaticToEgpRuleMetricAction_Type(Integer32):
    """Custom type expStaticToEgpRuleMetricAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpStaticToEgpRuleMetricAction_Type.__name__ = "Integer32"
_ExpStaticToEgpRuleMetricAction_Object = MibTableColumn
expStaticToEgpRuleMetricAction = _ExpStaticToEgpRuleMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 3, 1, 4),
    _ExpStaticToEgpRuleMetricAction_Type()
)
expStaticToEgpRuleMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expStaticToEgpRuleMetricAction.setStatus("mandatory")


class _ExpStaticToEgpRuleMetric_Type(Integer32):
    """Custom type expStaticToEgpRuleMetric based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_ExpStaticToEgpRuleMetric_Type.__name__ = "Integer32"
_ExpStaticToEgpRuleMetric_Object = MibTableColumn
expStaticToEgpRuleMetric = _ExpStaticToEgpRuleMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 3, 1, 5),
    _ExpStaticToEgpRuleMetric_Type()
)
expStaticToEgpRuleMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expStaticToEgpRuleMetric.setStatus("mandatory")


class _ExpStaticToEgpRuleStatus_Type(Integer32):
    """Custom type expStaticToEgpRuleStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ExpStaticToEgpRuleStatus_Type.__name__ = "Integer32"
_ExpStaticToEgpRuleStatus_Object = MibTableColumn
expStaticToEgpRuleStatus = _ExpStaticToEgpRuleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 3, 1, 6),
    _ExpStaticToEgpRuleStatus_Type()
)
expStaticToEgpRuleStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expStaticToEgpRuleStatus.setStatus("mandatory")
_ExpEgpToOspfRuleTable_Object = MibTable
expEgpToOspfRuleTable = _ExpEgpToOspfRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 4)
)
if mibBuilder.loadTexts:
    expEgpToOspfRuleTable.setStatus("mandatory")
_ExpEgpToOspfRuleEntry_Object = MibTableRow
expEgpToOspfRuleEntry = _ExpEgpToOspfRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 4, 1)
)
expEgpToOspfRuleEntry.setIndexNames(
    (0, "MRVINREACH", "expEgpToOspfRuleNetwork"),
    (0, "MRVINREACH", "expEgpToOspfRuleFromAs"),
)
if mibBuilder.loadTexts:
    expEgpToOspfRuleEntry.setStatus("mandatory")
_ExpEgpToOspfRuleNetwork_Type = IpAddress
_ExpEgpToOspfRuleNetwork_Object = MibTableColumn
expEgpToOspfRuleNetwork = _ExpEgpToOspfRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 4, 1, 1),
    _ExpEgpToOspfRuleNetwork_Type()
)
expEgpToOspfRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expEgpToOspfRuleNetwork.setStatus("mandatory")


class _ExpEgpToOspfRuleFromAs_Type(Integer32):
    """Custom type expEgpToOspfRuleFromAs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ExpEgpToOspfRuleFromAs_Type.__name__ = "Integer32"
_ExpEgpToOspfRuleFromAs_Object = MibTableColumn
expEgpToOspfRuleFromAs = _ExpEgpToOspfRuleFromAs_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 4, 1, 2),
    _ExpEgpToOspfRuleFromAs_Type()
)
expEgpToOspfRuleFromAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expEgpToOspfRuleFromAs.setStatus("mandatory")


class _ExpEgpToOspfRuleAction_Type(Integer32):
    """Custom type expEgpToOspfRuleAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertise", 2),
          ("hide", 1))
    )


_ExpEgpToOspfRuleAction_Type.__name__ = "Integer32"
_ExpEgpToOspfRuleAction_Object = MibTableColumn
expEgpToOspfRuleAction = _ExpEgpToOspfRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 4, 1, 3),
    _ExpEgpToOspfRuleAction_Type()
)
expEgpToOspfRuleAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expEgpToOspfRuleAction.setStatus("mandatory")


class _ExpEgpToOspfRuleStatus_Type(Integer32):
    """Custom type expEgpToOspfRuleStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ExpEgpToOspfRuleStatus_Type.__name__ = "Integer32"
_ExpEgpToOspfRuleStatus_Object = MibTableColumn
expEgpToOspfRuleStatus = _ExpEgpToOspfRuleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 4, 1, 4),
    _ExpEgpToOspfRuleStatus_Type()
)
expEgpToOspfRuleStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expEgpToOspfRuleStatus.setStatus("mandatory")
_ExpRipToEgpRuleTable_Object = MibTable
expRipToEgpRuleTable = _ExpRipToEgpRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 5)
)
if mibBuilder.loadTexts:
    expRipToEgpRuleTable.setStatus("mandatory")
_ExpRipToEgpRuleEntry_Object = MibTableRow
expRipToEgpRuleEntry = _ExpRipToEgpRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 5, 1)
)
expRipToEgpRuleEntry.setIndexNames(
    (0, "MRVINREACH", "expRipToEgpRuleToAs"),
    (0, "MRVINREACH", "expRipToEgpRuleNetwork"),
)
if mibBuilder.loadTexts:
    expRipToEgpRuleEntry.setStatus("mandatory")


class _ExpRipToEgpRuleToAs_Type(Integer32):
    """Custom type expRipToEgpRuleToAs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ExpRipToEgpRuleToAs_Type.__name__ = "Integer32"
_ExpRipToEgpRuleToAs_Object = MibTableColumn
expRipToEgpRuleToAs = _ExpRipToEgpRuleToAs_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 5, 1, 1),
    _ExpRipToEgpRuleToAs_Type()
)
expRipToEgpRuleToAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expRipToEgpRuleToAs.setStatus("mandatory")
_ExpRipToEgpRuleNetwork_Type = IpAddress
_ExpRipToEgpRuleNetwork_Object = MibTableColumn
expRipToEgpRuleNetwork = _ExpRipToEgpRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 5, 1, 2),
    _ExpRipToEgpRuleNetwork_Type()
)
expRipToEgpRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expRipToEgpRuleNetwork.setStatus("mandatory")


class _ExpRipToEgpRuleAction_Type(Integer32):
    """Custom type expRipToEgpRuleAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertise", 2),
          ("hide", 1))
    )


_ExpRipToEgpRuleAction_Type.__name__ = "Integer32"
_ExpRipToEgpRuleAction_Object = MibTableColumn
expRipToEgpRuleAction = _ExpRipToEgpRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 5, 1, 3),
    _ExpRipToEgpRuleAction_Type()
)
expRipToEgpRuleAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expRipToEgpRuleAction.setStatus("mandatory")


class _ExpRipToEgpRuleMetricAction_Type(Integer32):
    """Custom type expRipToEgpRuleMetricAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpRipToEgpRuleMetricAction_Type.__name__ = "Integer32"
_ExpRipToEgpRuleMetricAction_Object = MibTableColumn
expRipToEgpRuleMetricAction = _ExpRipToEgpRuleMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 5, 1, 4),
    _ExpRipToEgpRuleMetricAction_Type()
)
expRipToEgpRuleMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expRipToEgpRuleMetricAction.setStatus("mandatory")


class _ExpRipToEgpRuleMetric_Type(Integer32):
    """Custom type expRipToEgpRuleMetric based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_ExpRipToEgpRuleMetric_Type.__name__ = "Integer32"
_ExpRipToEgpRuleMetric_Object = MibTableColumn
expRipToEgpRuleMetric = _ExpRipToEgpRuleMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 5, 1, 5),
    _ExpRipToEgpRuleMetric_Type()
)
expRipToEgpRuleMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expRipToEgpRuleMetric.setStatus("mandatory")


class _ExpRipToEgpRuleStatus_Type(Integer32):
    """Custom type expRipToEgpRuleStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ExpRipToEgpRuleStatus_Type.__name__ = "Integer32"
_ExpRipToEgpRuleStatus_Object = MibTableColumn
expRipToEgpRuleStatus = _ExpRipToEgpRuleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 5, 1, 6),
    _ExpRipToEgpRuleStatus_Type()
)
expRipToEgpRuleStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expRipToEgpRuleStatus.setStatus("mandatory")
_ExpRipToOspfRuleTable_Object = MibTable
expRipToOspfRuleTable = _ExpRipToOspfRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 6)
)
if mibBuilder.loadTexts:
    expRipToOspfRuleTable.setStatus("mandatory")
_ExpRipToOspfRuleEntry_Object = MibTableRow
expRipToOspfRuleEntry = _ExpRipToOspfRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 6, 1)
)
expRipToOspfRuleEntry.setIndexNames(
    (0, "MRVINREACH", "expRipToOspfRuleNetwork"),
)
if mibBuilder.loadTexts:
    expRipToOspfRuleEntry.setStatus("mandatory")
_ExpRipToOspfRuleNetwork_Type = IpAddress
_ExpRipToOspfRuleNetwork_Object = MibTableColumn
expRipToOspfRuleNetwork = _ExpRipToOspfRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 6, 1, 1),
    _ExpRipToOspfRuleNetwork_Type()
)
expRipToOspfRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expRipToOspfRuleNetwork.setStatus("mandatory")


class _ExpRipToOspfRuleAction_Type(Integer32):
    """Custom type expRipToOspfRuleAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertise", 2),
          ("hide", 1))
    )


_ExpRipToOspfRuleAction_Type.__name__ = "Integer32"
_ExpRipToOspfRuleAction_Object = MibTableColumn
expRipToOspfRuleAction = _ExpRipToOspfRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 6, 1, 2),
    _ExpRipToOspfRuleAction_Type()
)
expRipToOspfRuleAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expRipToOspfRuleAction.setStatus("mandatory")


class _ExpRipToOspfRuleStatus_Type(Integer32):
    """Custom type expRipToOspfRuleStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ExpRipToOspfRuleStatus_Type.__name__ = "Integer32"
_ExpRipToOspfRuleStatus_Object = MibTableColumn
expRipToOspfRuleStatus = _ExpRipToOspfRuleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 6, 1, 3),
    _ExpRipToOspfRuleStatus_Type()
)
expRipToOspfRuleStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expRipToOspfRuleStatus.setStatus("mandatory")
_ExpEgpToRipRuleTable_Object = MibTable
expEgpToRipRuleTable = _ExpEgpToRipRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 7)
)
if mibBuilder.loadTexts:
    expEgpToRipRuleTable.setStatus("mandatory")
_ExpEgpToRipRuleEntry_Object = MibTableRow
expEgpToRipRuleEntry = _ExpEgpToRipRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 7, 1)
)
expEgpToRipRuleEntry.setIndexNames(
    (0, "MRVINREACH", "expEgpToRipRuleToIf"),
    (0, "MRVINREACH", "expEgpToRipRuleNetwork"),
    (0, "MRVINREACH", "expEgpToRipRuleFromAs"),
)
if mibBuilder.loadTexts:
    expEgpToRipRuleEntry.setStatus("mandatory")
_ExpEgpToRipRuleToIf_Type = IpAddress
_ExpEgpToRipRuleToIf_Object = MibTableColumn
expEgpToRipRuleToIf = _ExpEgpToRipRuleToIf_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 7, 1, 1),
    _ExpEgpToRipRuleToIf_Type()
)
expEgpToRipRuleToIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expEgpToRipRuleToIf.setStatus("mandatory")
_ExpEgpToRipRuleNetwork_Type = IpAddress
_ExpEgpToRipRuleNetwork_Object = MibTableColumn
expEgpToRipRuleNetwork = _ExpEgpToRipRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 7, 1, 2),
    _ExpEgpToRipRuleNetwork_Type()
)
expEgpToRipRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expEgpToRipRuleNetwork.setStatus("mandatory")


class _ExpEgpToRipRuleFromAs_Type(Integer32):
    """Custom type expEgpToRipRuleFromAs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ExpEgpToRipRuleFromAs_Type.__name__ = "Integer32"
_ExpEgpToRipRuleFromAs_Object = MibTableColumn
expEgpToRipRuleFromAs = _ExpEgpToRipRuleFromAs_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 7, 1, 3),
    _ExpEgpToRipRuleFromAs_Type()
)
expEgpToRipRuleFromAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expEgpToRipRuleFromAs.setStatus("mandatory")


class _ExpEgpToRipRuleAction_Type(Integer32):
    """Custom type expEgpToRipRuleAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertise", 2),
          ("hide", 1))
    )


_ExpEgpToRipRuleAction_Type.__name__ = "Integer32"
_ExpEgpToRipRuleAction_Object = MibTableColumn
expEgpToRipRuleAction = _ExpEgpToRipRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 7, 1, 4),
    _ExpEgpToRipRuleAction_Type()
)
expEgpToRipRuleAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expEgpToRipRuleAction.setStatus("mandatory")


class _ExpEgpToRipRuleMetricAction_Type(Integer32):
    """Custom type expEgpToRipRuleMetricAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpEgpToRipRuleMetricAction_Type.__name__ = "Integer32"
_ExpEgpToRipRuleMetricAction_Object = MibTableColumn
expEgpToRipRuleMetricAction = _ExpEgpToRipRuleMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 7, 1, 5),
    _ExpEgpToRipRuleMetricAction_Type()
)
expEgpToRipRuleMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expEgpToRipRuleMetricAction.setStatus("mandatory")


class _ExpEgpToRipRuleMetric_Type(Integer32):
    """Custom type expEgpToRipRuleMetric based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_ExpEgpToRipRuleMetric_Type.__name__ = "Integer32"
_ExpEgpToRipRuleMetric_Object = MibTableColumn
expEgpToRipRuleMetric = _ExpEgpToRipRuleMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 7, 1, 6),
    _ExpEgpToRipRuleMetric_Type()
)
expEgpToRipRuleMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expEgpToRipRuleMetric.setStatus("mandatory")


class _ExpEgpToRipRuleStatus_Type(Integer32):
    """Custom type expEgpToRipRuleStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ExpEgpToRipRuleStatus_Type.__name__ = "Integer32"
_ExpEgpToRipRuleStatus_Object = MibTableColumn
expEgpToRipRuleStatus = _ExpEgpToRipRuleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 7, 1, 7),
    _ExpEgpToRipRuleStatus_Type()
)
expEgpToRipRuleStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expEgpToRipRuleStatus.setStatus("mandatory")
_ExpOspfToRipRuleTable_Object = MibTable
expOspfToRipRuleTable = _ExpOspfToRipRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 8)
)
if mibBuilder.loadTexts:
    expOspfToRipRuleTable.setStatus("mandatory")
_ExpOspfToRipRuleEntry_Object = MibTableRow
expOspfToRipRuleEntry = _ExpOspfToRipRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 8, 1)
)
expOspfToRipRuleEntry.setIndexNames(
    (0, "MRVINREACH", "expOspfToRipRuleToIf"),
    (0, "MRVINREACH", "expOspfToRipRuleNetwork"),
    (0, "MRVINREACH", "expOspfToRipRuleFromAs"),
)
if mibBuilder.loadTexts:
    expOspfToRipRuleEntry.setStatus("mandatory")
_ExpOspfToRipRuleToIf_Type = IpAddress
_ExpOspfToRipRuleToIf_Object = MibTableColumn
expOspfToRipRuleToIf = _ExpOspfToRipRuleToIf_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 8, 1, 1),
    _ExpOspfToRipRuleToIf_Type()
)
expOspfToRipRuleToIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expOspfToRipRuleToIf.setStatus("mandatory")
_ExpOspfToRipRuleNetwork_Type = IpAddress
_ExpOspfToRipRuleNetwork_Object = MibTableColumn
expOspfToRipRuleNetwork = _ExpOspfToRipRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 8, 1, 2),
    _ExpOspfToRipRuleNetwork_Type()
)
expOspfToRipRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expOspfToRipRuleNetwork.setStatus("mandatory")


class _ExpOspfToRipRuleFromAs_Type(Integer32):
    """Custom type expOspfToRipRuleFromAs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ExpOspfToRipRuleFromAs_Type.__name__ = "Integer32"
_ExpOspfToRipRuleFromAs_Object = MibTableColumn
expOspfToRipRuleFromAs = _ExpOspfToRipRuleFromAs_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 8, 1, 3),
    _ExpOspfToRipRuleFromAs_Type()
)
expOspfToRipRuleFromAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expOspfToRipRuleFromAs.setStatus("mandatory")


class _ExpOspfToRipRuleAction_Type(Integer32):
    """Custom type expOspfToRipRuleAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertise", 2),
          ("hide", 1))
    )


_ExpOspfToRipRuleAction_Type.__name__ = "Integer32"
_ExpOspfToRipRuleAction_Object = MibTableColumn
expOspfToRipRuleAction = _ExpOspfToRipRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 8, 1, 4),
    _ExpOspfToRipRuleAction_Type()
)
expOspfToRipRuleAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expOspfToRipRuleAction.setStatus("mandatory")


class _ExpOspfToRipRuleMetricAction_Type(Integer32):
    """Custom type expOspfToRipRuleMetricAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpOspfToRipRuleMetricAction_Type.__name__ = "Integer32"
_ExpOspfToRipRuleMetricAction_Object = MibTableColumn
expOspfToRipRuleMetricAction = _ExpOspfToRipRuleMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 8, 1, 5),
    _ExpOspfToRipRuleMetricAction_Type()
)
expOspfToRipRuleMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expOspfToRipRuleMetricAction.setStatus("mandatory")


class _ExpOspfToRipRuleMetric_Type(Integer32):
    """Custom type expOspfToRipRuleMetric based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_ExpOspfToRipRuleMetric_Type.__name__ = "Integer32"
_ExpOspfToRipRuleMetric_Object = MibTableColumn
expOspfToRipRuleMetric = _ExpOspfToRipRuleMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 8, 1, 6),
    _ExpOspfToRipRuleMetric_Type()
)
expOspfToRipRuleMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expOspfToRipRuleMetric.setStatus("mandatory")


class _ExpOspfToRipRuleStatus_Type(Integer32):
    """Custom type expOspfToRipRuleStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ExpOspfToRipRuleStatus_Type.__name__ = "Integer32"
_ExpOspfToRipRuleStatus_Object = MibTableColumn
expOspfToRipRuleStatus = _ExpOspfToRipRuleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 8, 1, 7),
    _ExpOspfToRipRuleStatus_Type()
)
expOspfToRipRuleStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expOspfToRipRuleStatus.setStatus("mandatory")
_ExpRipToRipRuleTable_Object = MibTable
expRipToRipRuleTable = _ExpRipToRipRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 9)
)
if mibBuilder.loadTexts:
    expRipToRipRuleTable.setStatus("mandatory")
_ExpRipToRipRuleEntry_Object = MibTableRow
expRipToRipRuleEntry = _ExpRipToRipRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 9, 1)
)
expRipToRipRuleEntry.setIndexNames(
    (0, "MRVINREACH", "expRipToRipRuleToIf"),
    (0, "MRVINREACH", "expRipToRipRuleNetwork"),
)
if mibBuilder.loadTexts:
    expRipToRipRuleEntry.setStatus("mandatory")
_ExpRipToRipRuleToIf_Type = IpAddress
_ExpRipToRipRuleToIf_Object = MibTableColumn
expRipToRipRuleToIf = _ExpRipToRipRuleToIf_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 9, 1, 1),
    _ExpRipToRipRuleToIf_Type()
)
expRipToRipRuleToIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expRipToRipRuleToIf.setStatus("mandatory")
_ExpRipToRipRuleNetwork_Type = IpAddress
_ExpRipToRipRuleNetwork_Object = MibTableColumn
expRipToRipRuleNetwork = _ExpRipToRipRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 9, 1, 2),
    _ExpRipToRipRuleNetwork_Type()
)
expRipToRipRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expRipToRipRuleNetwork.setStatus("mandatory")


class _ExpRipToRipRuleAction_Type(Integer32):
    """Custom type expRipToRipRuleAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertise", 2),
          ("hide", 1))
    )


_ExpRipToRipRuleAction_Type.__name__ = "Integer32"
_ExpRipToRipRuleAction_Object = MibTableColumn
expRipToRipRuleAction = _ExpRipToRipRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 9, 1, 3),
    _ExpRipToRipRuleAction_Type()
)
expRipToRipRuleAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expRipToRipRuleAction.setStatus("mandatory")


class _ExpRipToRipRuleMetricAction_Type(Integer32):
    """Custom type expRipToRipRuleMetricAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpRipToRipRuleMetricAction_Type.__name__ = "Integer32"
_ExpRipToRipRuleMetricAction_Object = MibTableColumn
expRipToRipRuleMetricAction = _ExpRipToRipRuleMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 9, 1, 4),
    _ExpRipToRipRuleMetricAction_Type()
)
expRipToRipRuleMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expRipToRipRuleMetricAction.setStatus("mandatory")


class _ExpRipToRipRuleMetric_Type(Integer32):
    """Custom type expRipToRipRuleMetric based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_ExpRipToRipRuleMetric_Type.__name__ = "Integer32"
_ExpRipToRipRuleMetric_Object = MibTableColumn
expRipToRipRuleMetric = _ExpRipToRipRuleMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 9, 1, 5),
    _ExpRipToRipRuleMetric_Type()
)
expRipToRipRuleMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expRipToRipRuleMetric.setStatus("mandatory")


class _ExpRipToRipRuleStatus_Type(Integer32):
    """Custom type expRipToRipRuleStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ExpRipToRipRuleStatus_Type.__name__ = "Integer32"
_ExpRipToRipRuleStatus_Object = MibTableColumn
expRipToRipRuleStatus = _ExpRipToRipRuleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 9, 1, 6),
    _ExpRipToRipRuleStatus_Type()
)
expRipToRipRuleStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expRipToRipRuleStatus.setStatus("mandatory")
_ExpStaticToRipRuleTable_Object = MibTable
expStaticToRipRuleTable = _ExpStaticToRipRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 10)
)
if mibBuilder.loadTexts:
    expStaticToRipRuleTable.setStatus("mandatory")
_ExpStaticToRipRuleEntry_Object = MibTableRow
expStaticToRipRuleEntry = _ExpStaticToRipRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 10, 1)
)
expStaticToRipRuleEntry.setIndexNames(
    (0, "MRVINREACH", "expStaticToRipRuleToIf"),
    (0, "MRVINREACH", "expStaticToRipRuleNetwork"),
)
if mibBuilder.loadTexts:
    expStaticToRipRuleEntry.setStatus("mandatory")
_ExpStaticToRipRuleToIf_Type = IpAddress
_ExpStaticToRipRuleToIf_Object = MibTableColumn
expStaticToRipRuleToIf = _ExpStaticToRipRuleToIf_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 10, 1, 1),
    _ExpStaticToRipRuleToIf_Type()
)
expStaticToRipRuleToIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expStaticToRipRuleToIf.setStatus("mandatory")
_ExpStaticToRipRuleNetwork_Type = IpAddress
_ExpStaticToRipRuleNetwork_Object = MibTableColumn
expStaticToRipRuleNetwork = _ExpStaticToRipRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 10, 1, 2),
    _ExpStaticToRipRuleNetwork_Type()
)
expStaticToRipRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expStaticToRipRuleNetwork.setStatus("mandatory")


class _ExpStaticToRipRuleAction_Type(Integer32):
    """Custom type expStaticToRipRuleAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertise", 2),
          ("hide", 1))
    )


_ExpStaticToRipRuleAction_Type.__name__ = "Integer32"
_ExpStaticToRipRuleAction_Object = MibTableColumn
expStaticToRipRuleAction = _ExpStaticToRipRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 10, 1, 3),
    _ExpStaticToRipRuleAction_Type()
)
expStaticToRipRuleAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expStaticToRipRuleAction.setStatus("mandatory")


class _ExpStaticToRipRuleMetricAction_Type(Integer32):
    """Custom type expStaticToRipRuleMetricAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpStaticToRipRuleMetricAction_Type.__name__ = "Integer32"
_ExpStaticToRipRuleMetricAction_Object = MibTableColumn
expStaticToRipRuleMetricAction = _ExpStaticToRipRuleMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 10, 1, 4),
    _ExpStaticToRipRuleMetricAction_Type()
)
expStaticToRipRuleMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expStaticToRipRuleMetricAction.setStatus("mandatory")


class _ExpStaticToRipRuleMetric_Type(Integer32):
    """Custom type expStaticToRipRuleMetric based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_ExpStaticToRipRuleMetric_Type.__name__ = "Integer32"
_ExpStaticToRipRuleMetric_Object = MibTableColumn
expStaticToRipRuleMetric = _ExpStaticToRipRuleMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 10, 1, 5),
    _ExpStaticToRipRuleMetric_Type()
)
expStaticToRipRuleMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expStaticToRipRuleMetric.setStatus("mandatory")


class _ExpStaticToRipRuleStatus_Type(Integer32):
    """Custom type expStaticToRipRuleStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ExpStaticToRipRuleStatus_Type.__name__ = "Integer32"
_ExpStaticToRipRuleStatus_Object = MibTableColumn
expStaticToRipRuleStatus = _ExpStaticToRipRuleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 10, 1, 6),
    _ExpStaticToRipRuleStatus_Type()
)
expStaticToRipRuleStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expStaticToRipRuleStatus.setStatus("mandatory")
_ExpIsisToEgpRuleTable_Object = MibTable
expIsisToEgpRuleTable = _ExpIsisToEgpRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 11)
)
if mibBuilder.loadTexts:
    expIsisToEgpRuleTable.setStatus("mandatory")
_ExpIsisToEgpRuleEntry_Object = MibTableRow
expIsisToEgpRuleEntry = _ExpIsisToEgpRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 11, 1)
)
expIsisToEgpRuleEntry.setIndexNames(
    (0, "MRVINREACH", "expIsisToEgpRuleToAs"),
    (0, "MRVINREACH", "expIsisToEgpRuleNetwork"),
)
if mibBuilder.loadTexts:
    expIsisToEgpRuleEntry.setStatus("mandatory")


class _ExpIsisToEgpRuleToAs_Type(Integer32):
    """Custom type expIsisToEgpRuleToAs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ExpIsisToEgpRuleToAs_Type.__name__ = "Integer32"
_ExpIsisToEgpRuleToAs_Object = MibTableColumn
expIsisToEgpRuleToAs = _ExpIsisToEgpRuleToAs_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 11, 1, 1),
    _ExpIsisToEgpRuleToAs_Type()
)
expIsisToEgpRuleToAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expIsisToEgpRuleToAs.setStatus("mandatory")
_ExpIsisToEgpRuleNetwork_Type = IpAddress
_ExpIsisToEgpRuleNetwork_Object = MibTableColumn
expIsisToEgpRuleNetwork = _ExpIsisToEgpRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 11, 1, 2),
    _ExpIsisToEgpRuleNetwork_Type()
)
expIsisToEgpRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expIsisToEgpRuleNetwork.setStatus("mandatory")


class _ExpIsisToEgpRuleAction_Type(Integer32):
    """Custom type expIsisToEgpRuleAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertise", 2),
          ("hide", 1))
    )


_ExpIsisToEgpRuleAction_Type.__name__ = "Integer32"
_ExpIsisToEgpRuleAction_Object = MibTableColumn
expIsisToEgpRuleAction = _ExpIsisToEgpRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 11, 1, 3),
    _ExpIsisToEgpRuleAction_Type()
)
expIsisToEgpRuleAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expIsisToEgpRuleAction.setStatus("mandatory")


class _ExpIsisToEgpRuleMetricAction_Type(Integer32):
    """Custom type expIsisToEgpRuleMetricAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpIsisToEgpRuleMetricAction_Type.__name__ = "Integer32"
_ExpIsisToEgpRuleMetricAction_Object = MibTableColumn
expIsisToEgpRuleMetricAction = _ExpIsisToEgpRuleMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 11, 1, 4),
    _ExpIsisToEgpRuleMetricAction_Type()
)
expIsisToEgpRuleMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expIsisToEgpRuleMetricAction.setStatus("mandatory")


class _ExpIsisToEgpRuleMetric_Type(Integer32):
    """Custom type expIsisToEgpRuleMetric based on Integer32"""
    defaultValue = 0


_ExpIsisToEgpRuleMetric_Object = MibTableColumn
expIsisToEgpRuleMetric = _ExpIsisToEgpRuleMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 11, 1, 5),
    _ExpIsisToEgpRuleMetric_Type()
)
expIsisToEgpRuleMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expIsisToEgpRuleMetric.setStatus("mandatory")


class _ExpIsisToEgpRuleStatus_Type(Integer32):
    """Custom type expIsisToEgpRuleStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ExpIsisToEgpRuleStatus_Type.__name__ = "Integer32"
_ExpIsisToEgpRuleStatus_Object = MibTableColumn
expIsisToEgpRuleStatus = _ExpIsisToEgpRuleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 11, 1, 6),
    _ExpIsisToEgpRuleStatus_Type()
)
expIsisToEgpRuleStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expIsisToEgpRuleStatus.setStatus("mandatory")
_ExpIsisToOspfRuleTable_Object = MibTable
expIsisToOspfRuleTable = _ExpIsisToOspfRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 12)
)
if mibBuilder.loadTexts:
    expIsisToOspfRuleTable.setStatus("mandatory")
_ExpIsisToOspfRuleEntry_Object = MibTableRow
expIsisToOspfRuleEntry = _ExpIsisToOspfRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 12, 1)
)
expIsisToOspfRuleEntry.setIndexNames(
    (0, "MRVINREACH", "expIsisToOspfRuleNetwork"),
)
if mibBuilder.loadTexts:
    expIsisToOspfRuleEntry.setStatus("mandatory")
_ExpIsisToOspfRuleNetwork_Type = IpAddress
_ExpIsisToOspfRuleNetwork_Object = MibTableColumn
expIsisToOspfRuleNetwork = _ExpIsisToOspfRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 12, 1, 1),
    _ExpIsisToOspfRuleNetwork_Type()
)
expIsisToOspfRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expIsisToOspfRuleNetwork.setStatus("mandatory")


class _ExpIsisToOspfRuleAction_Type(Integer32):
    """Custom type expIsisToOspfRuleAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertise", 2),
          ("hide", 1))
    )


_ExpIsisToOspfRuleAction_Type.__name__ = "Integer32"
_ExpIsisToOspfRuleAction_Object = MibTableColumn
expIsisToOspfRuleAction = _ExpIsisToOspfRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 12, 1, 2),
    _ExpIsisToOspfRuleAction_Type()
)
expIsisToOspfRuleAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expIsisToOspfRuleAction.setStatus("mandatory")


class _ExpIsisToOspfRuleStatus_Type(Integer32):
    """Custom type expIsisToOspfRuleStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ExpIsisToOspfRuleStatus_Type.__name__ = "Integer32"
_ExpIsisToOspfRuleStatus_Object = MibTableColumn
expIsisToOspfRuleStatus = _ExpIsisToOspfRuleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 12, 1, 3),
    _ExpIsisToOspfRuleStatus_Type()
)
expIsisToOspfRuleStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expIsisToOspfRuleStatus.setStatus("mandatory")
_ExpIsisToRipRuleTable_Object = MibTable
expIsisToRipRuleTable = _ExpIsisToRipRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 13)
)
if mibBuilder.loadTexts:
    expIsisToRipRuleTable.setStatus("mandatory")
_ExpIsisToRipRuleEntry_Object = MibTableRow
expIsisToRipRuleEntry = _ExpIsisToRipRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 13, 1)
)
expIsisToRipRuleEntry.setIndexNames(
    (0, "MRVINREACH", "expIsisToRipRuleNetwork"),
)
if mibBuilder.loadTexts:
    expIsisToRipRuleEntry.setStatus("mandatory")
_ExpIsisToRipRuleToIf_Type = IpAddress
_ExpIsisToRipRuleToIf_Object = MibTableColumn
expIsisToRipRuleToIf = _ExpIsisToRipRuleToIf_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 13, 1, 1),
    _ExpIsisToRipRuleToIf_Type()
)
expIsisToRipRuleToIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expIsisToRipRuleToIf.setStatus("mandatory")
_ExpIsisToRipRuleNetwork_Type = IpAddress
_ExpIsisToRipRuleNetwork_Object = MibTableColumn
expIsisToRipRuleNetwork = _ExpIsisToRipRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 13, 1, 2),
    _ExpIsisToRipRuleNetwork_Type()
)
expIsisToRipRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expIsisToRipRuleNetwork.setStatus("mandatory")


class _ExpIsisToRipRuleAction_Type(Integer32):
    """Custom type expIsisToRipRuleAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertise", 2),
          ("hide", 1))
    )


_ExpIsisToRipRuleAction_Type.__name__ = "Integer32"
_ExpIsisToRipRuleAction_Object = MibTableColumn
expIsisToRipRuleAction = _ExpIsisToRipRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 13, 1, 3),
    _ExpIsisToRipRuleAction_Type()
)
expIsisToRipRuleAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expIsisToRipRuleAction.setStatus("mandatory")


class _ExpIsisToRipRuleMetricAction_Type(Integer32):
    """Custom type expIsisToRipRuleMetricAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpIsisToRipRuleMetricAction_Type.__name__ = "Integer32"
_ExpIsisToRipRuleMetricAction_Object = MibTableColumn
expIsisToRipRuleMetricAction = _ExpIsisToRipRuleMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 13, 1, 4),
    _ExpIsisToRipRuleMetricAction_Type()
)
expIsisToRipRuleMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expIsisToRipRuleMetricAction.setStatus("mandatory")


class _ExpIsisToRipRuleMetric_Type(Integer32):
    """Custom type expIsisToRipRuleMetric based on Integer32"""
    defaultValue = 0


_ExpIsisToRipRuleMetric_Object = MibTableColumn
expIsisToRipRuleMetric = _ExpIsisToRipRuleMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 13, 1, 5),
    _ExpIsisToRipRuleMetric_Type()
)
expIsisToRipRuleMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expIsisToRipRuleMetric.setStatus("mandatory")


class _ExpIsisToRipRuleStatus_Type(Integer32):
    """Custom type expIsisToRipRuleStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ExpIsisToRipRuleStatus_Type.__name__ = "Integer32"
_ExpIsisToRipRuleStatus_Object = MibTableColumn
expIsisToRipRuleStatus = _ExpIsisToRipRuleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 13, 1, 6),
    _ExpIsisToRipRuleStatus_Type()
)
expIsisToRipRuleStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expIsisToRipRuleStatus.setStatus("mandatory")
_ExpEgpToIsisRuleTable_Object = MibTable
expEgpToIsisRuleTable = _ExpEgpToIsisRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 14)
)
if mibBuilder.loadTexts:
    expEgpToIsisRuleTable.setStatus("mandatory")
_ExpEgpToIsisRuleEntry_Object = MibTableRow
expEgpToIsisRuleEntry = _ExpEgpToIsisRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 14, 1)
)
expEgpToIsisRuleEntry.setIndexNames(
    (0, "MRVINREACH", "expEgpToIsisRuleNetwork"),
    (0, "MRVINREACH", "expEgpToIsisRuleFromAs"),
)
if mibBuilder.loadTexts:
    expEgpToIsisRuleEntry.setStatus("mandatory")
_ExpEgpToIsisRuleNetwork_Type = IpAddress
_ExpEgpToIsisRuleNetwork_Object = MibTableColumn
expEgpToIsisRuleNetwork = _ExpEgpToIsisRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 14, 1, 1),
    _ExpEgpToIsisRuleNetwork_Type()
)
expEgpToIsisRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expEgpToIsisRuleNetwork.setStatus("mandatory")


class _ExpEgpToIsisRuleFromAs_Type(Integer32):
    """Custom type expEgpToIsisRuleFromAs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ExpEgpToIsisRuleFromAs_Type.__name__ = "Integer32"
_ExpEgpToIsisRuleFromAs_Object = MibTableColumn
expEgpToIsisRuleFromAs = _ExpEgpToIsisRuleFromAs_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 14, 1, 2),
    _ExpEgpToIsisRuleFromAs_Type()
)
expEgpToIsisRuleFromAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expEgpToIsisRuleFromAs.setStatus("mandatory")


class _ExpEgpToIsisRuleAction_Type(Integer32):
    """Custom type expEgpToIsisRuleAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertise", 2),
          ("hide", 1))
    )


_ExpEgpToIsisRuleAction_Type.__name__ = "Integer32"
_ExpEgpToIsisRuleAction_Object = MibTableColumn
expEgpToIsisRuleAction = _ExpEgpToIsisRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 14, 1, 3),
    _ExpEgpToIsisRuleAction_Type()
)
expEgpToIsisRuleAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expEgpToIsisRuleAction.setStatus("mandatory")


class _ExpEgpToIsisRuleMetricType_Type(Integer32):
    """Custom type expEgpToIsisRuleMetricType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("external", 2),
          ("internal", 1))
    )


_ExpEgpToIsisRuleMetricType_Type.__name__ = "Integer32"
_ExpEgpToIsisRuleMetricType_Object = MibTableColumn
expEgpToIsisRuleMetricType = _ExpEgpToIsisRuleMetricType_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 14, 1, 4),
    _ExpEgpToIsisRuleMetricType_Type()
)
expEgpToIsisRuleMetricType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expEgpToIsisRuleMetricType.setStatus("mandatory")


class _ExpEgpToIsisRuleDefaultMetricAction_Type(Integer32):
    """Custom type expEgpToIsisRuleDefaultMetricAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpEgpToIsisRuleDefaultMetricAction_Type.__name__ = "Integer32"
_ExpEgpToIsisRuleDefaultMetricAction_Object = MibTableColumn
expEgpToIsisRuleDefaultMetricAction = _ExpEgpToIsisRuleDefaultMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 14, 1, 5),
    _ExpEgpToIsisRuleDefaultMetricAction_Type()
)
expEgpToIsisRuleDefaultMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expEgpToIsisRuleDefaultMetricAction.setStatus("mandatory")


class _ExpEgpToIsisRuleDefaultMetric_Type(Integer32):
    """Custom type expEgpToIsisRuleDefaultMetric based on Integer32"""
    defaultValue = 1


_ExpEgpToIsisRuleDefaultMetric_Object = MibTableColumn
expEgpToIsisRuleDefaultMetric = _ExpEgpToIsisRuleDefaultMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 14, 1, 6),
    _ExpEgpToIsisRuleDefaultMetric_Type()
)
expEgpToIsisRuleDefaultMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expEgpToIsisRuleDefaultMetric.setStatus("mandatory")


class _ExpEgpToIsisRuleDelayMetricAction_Type(Integer32):
    """Custom type expEgpToIsisRuleDelayMetricAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpEgpToIsisRuleDelayMetricAction_Type.__name__ = "Integer32"
_ExpEgpToIsisRuleDelayMetricAction_Object = MibTableColumn
expEgpToIsisRuleDelayMetricAction = _ExpEgpToIsisRuleDelayMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 14, 1, 7),
    _ExpEgpToIsisRuleDelayMetricAction_Type()
)
expEgpToIsisRuleDelayMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expEgpToIsisRuleDelayMetricAction.setStatus("mandatory")


class _ExpEgpToIsisRuleDelayMetric_Type(Integer32):
    """Custom type expEgpToIsisRuleDelayMetric based on Integer32"""
    defaultValue = 0


_ExpEgpToIsisRuleDelayMetric_Object = MibTableColumn
expEgpToIsisRuleDelayMetric = _ExpEgpToIsisRuleDelayMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 14, 1, 8),
    _ExpEgpToIsisRuleDelayMetric_Type()
)
expEgpToIsisRuleDelayMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expEgpToIsisRuleDelayMetric.setStatus("mandatory")


class _ExpEgpToIsisRuleErrorMetricAction_Type(Integer32):
    """Custom type expEgpToIsisRuleErrorMetricAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpEgpToIsisRuleErrorMetricAction_Type.__name__ = "Integer32"
_ExpEgpToIsisRuleErrorMetricAction_Object = MibTableColumn
expEgpToIsisRuleErrorMetricAction = _ExpEgpToIsisRuleErrorMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 14, 1, 9),
    _ExpEgpToIsisRuleErrorMetricAction_Type()
)
expEgpToIsisRuleErrorMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expEgpToIsisRuleErrorMetricAction.setStatus("mandatory")


class _ExpEgpToIsisRuleErrorMetric_Type(Integer32):
    """Custom type expEgpToIsisRuleErrorMetric based on Integer32"""
    defaultValue = 0


_ExpEgpToIsisRuleErrorMetric_Object = MibTableColumn
expEgpToIsisRuleErrorMetric = _ExpEgpToIsisRuleErrorMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 14, 1, 10),
    _ExpEgpToIsisRuleErrorMetric_Type()
)
expEgpToIsisRuleErrorMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expEgpToIsisRuleErrorMetric.setStatus("mandatory")


class _ExpEgpToIsisRuleExpenseMetricAction_Type(Integer32):
    """Custom type expEgpToIsisRuleExpenseMetricAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpEgpToIsisRuleExpenseMetricAction_Type.__name__ = "Integer32"
_ExpEgpToIsisRuleExpenseMetricAction_Object = MibTableColumn
expEgpToIsisRuleExpenseMetricAction = _ExpEgpToIsisRuleExpenseMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 14, 1, 11),
    _ExpEgpToIsisRuleExpenseMetricAction_Type()
)
expEgpToIsisRuleExpenseMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expEgpToIsisRuleExpenseMetricAction.setStatus("mandatory")


class _ExpEgpToIsisRuleExpenseMetric_Type(Integer32):
    """Custom type expEgpToIsisRuleExpenseMetric based on Integer32"""
    defaultValue = 0


_ExpEgpToIsisRuleExpenseMetric_Object = MibTableColumn
expEgpToIsisRuleExpenseMetric = _ExpEgpToIsisRuleExpenseMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 14, 1, 12),
    _ExpEgpToIsisRuleExpenseMetric_Type()
)
expEgpToIsisRuleExpenseMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expEgpToIsisRuleExpenseMetric.setStatus("mandatory")


class _ExpEgpToIsisRuleStatus_Type(Integer32):
    """Custom type expEgpToIsisRuleStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ExpEgpToIsisRuleStatus_Type.__name__ = "Integer32"
_ExpEgpToIsisRuleStatus_Object = MibTableColumn
expEgpToIsisRuleStatus = _ExpEgpToIsisRuleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 14, 1, 13),
    _ExpEgpToIsisRuleStatus_Type()
)
expEgpToIsisRuleStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expEgpToIsisRuleStatus.setStatus("mandatory")
_ExpOspfToIsisRuleTable_Object = MibTable
expOspfToIsisRuleTable = _ExpOspfToIsisRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 15)
)
if mibBuilder.loadTexts:
    expOspfToIsisRuleTable.setStatus("mandatory")
_ExpOspfToIsisRuleEntry_Object = MibTableRow
expOspfToIsisRuleEntry = _ExpOspfToIsisRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 15, 1)
)
expOspfToIsisRuleEntry.setIndexNames(
    (0, "MRVINREACH", "expOspfToIsisRuleNetwork"),
    (0, "MRVINREACH", "expOspfToIsisRuleFromAs"),
)
if mibBuilder.loadTexts:
    expOspfToIsisRuleEntry.setStatus("mandatory")
_ExpOspfToIsisRuleNetwork_Type = IpAddress
_ExpOspfToIsisRuleNetwork_Object = MibTableColumn
expOspfToIsisRuleNetwork = _ExpOspfToIsisRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 15, 1, 1),
    _ExpOspfToIsisRuleNetwork_Type()
)
expOspfToIsisRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expOspfToIsisRuleNetwork.setStatus("mandatory")


class _ExpOspfToIsisRuleFromAs_Type(Integer32):
    """Custom type expOspfToIsisRuleFromAs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ExpOspfToIsisRuleFromAs_Type.__name__ = "Integer32"
_ExpOspfToIsisRuleFromAs_Object = MibTableColumn
expOspfToIsisRuleFromAs = _ExpOspfToIsisRuleFromAs_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 15, 1, 2),
    _ExpOspfToIsisRuleFromAs_Type()
)
expOspfToIsisRuleFromAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expOspfToIsisRuleFromAs.setStatus("mandatory")


class _ExpOspfToIsisRuleAction_Type(Integer32):
    """Custom type expOspfToIsisRuleAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertise", 2),
          ("hide", 1))
    )


_ExpOspfToIsisRuleAction_Type.__name__ = "Integer32"
_ExpOspfToIsisRuleAction_Object = MibTableColumn
expOspfToIsisRuleAction = _ExpOspfToIsisRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 15, 1, 3),
    _ExpOspfToIsisRuleAction_Type()
)
expOspfToIsisRuleAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expOspfToIsisRuleAction.setStatus("mandatory")


class _ExpOspfToIsisRuleMetricType_Type(Integer32):
    """Custom type expOspfToIsisRuleMetricType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("external", 2),
          ("internal", 1))
    )


_ExpOspfToIsisRuleMetricType_Type.__name__ = "Integer32"
_ExpOspfToIsisRuleMetricType_Object = MibTableColumn
expOspfToIsisRuleMetricType = _ExpOspfToIsisRuleMetricType_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 15, 1, 4),
    _ExpOspfToIsisRuleMetricType_Type()
)
expOspfToIsisRuleMetricType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expOspfToIsisRuleMetricType.setStatus("mandatory")


class _ExpOspfToIsisRuleDefaultMetricAction_Type(Integer32):
    """Custom type expOspfToIsisRuleDefaultMetricAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpOspfToIsisRuleDefaultMetricAction_Type.__name__ = "Integer32"
_ExpOspfToIsisRuleDefaultMetricAction_Object = MibTableColumn
expOspfToIsisRuleDefaultMetricAction = _ExpOspfToIsisRuleDefaultMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 15, 1, 5),
    _ExpOspfToIsisRuleDefaultMetricAction_Type()
)
expOspfToIsisRuleDefaultMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expOspfToIsisRuleDefaultMetricAction.setStatus("mandatory")


class _ExpOspfToIsisRuleDefaultMetric_Type(Integer32):
    """Custom type expOspfToIsisRuleDefaultMetric based on Integer32"""
    defaultValue = 1


_ExpOspfToIsisRuleDefaultMetric_Object = MibTableColumn
expOspfToIsisRuleDefaultMetric = _ExpOspfToIsisRuleDefaultMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 15, 1, 6),
    _ExpOspfToIsisRuleDefaultMetric_Type()
)
expOspfToIsisRuleDefaultMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expOspfToIsisRuleDefaultMetric.setStatus("mandatory")


class _ExpOspfToIsisRuleDelayMetricAction_Type(Integer32):
    """Custom type expOspfToIsisRuleDelayMetricAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpOspfToIsisRuleDelayMetricAction_Type.__name__ = "Integer32"
_ExpOspfToIsisRuleDelayMetricAction_Object = MibTableColumn
expOspfToIsisRuleDelayMetricAction = _ExpOspfToIsisRuleDelayMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 15, 1, 7),
    _ExpOspfToIsisRuleDelayMetricAction_Type()
)
expOspfToIsisRuleDelayMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expOspfToIsisRuleDelayMetricAction.setStatus("mandatory")


class _ExpOspfToIsisRuleDelayMetric_Type(Integer32):
    """Custom type expOspfToIsisRuleDelayMetric based on Integer32"""
    defaultValue = 0


_ExpOspfToIsisRuleDelayMetric_Object = MibTableColumn
expOspfToIsisRuleDelayMetric = _ExpOspfToIsisRuleDelayMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 15, 1, 8),
    _ExpOspfToIsisRuleDelayMetric_Type()
)
expOspfToIsisRuleDelayMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expOspfToIsisRuleDelayMetric.setStatus("mandatory")


class _ExpOspfToIsisRuleErrorMetricAction_Type(Integer32):
    """Custom type expOspfToIsisRuleErrorMetricAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpOspfToIsisRuleErrorMetricAction_Type.__name__ = "Integer32"
_ExpOspfToIsisRuleErrorMetricAction_Object = MibTableColumn
expOspfToIsisRuleErrorMetricAction = _ExpOspfToIsisRuleErrorMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 15, 1, 9),
    _ExpOspfToIsisRuleErrorMetricAction_Type()
)
expOspfToIsisRuleErrorMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expOspfToIsisRuleErrorMetricAction.setStatus("mandatory")


class _ExpOspfToIsisRuleErrorMetric_Type(Integer32):
    """Custom type expOspfToIsisRuleErrorMetric based on Integer32"""
    defaultValue = 0


_ExpOspfToIsisRuleErrorMetric_Object = MibTableColumn
expOspfToIsisRuleErrorMetric = _ExpOspfToIsisRuleErrorMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 15, 1, 10),
    _ExpOspfToIsisRuleErrorMetric_Type()
)
expOspfToIsisRuleErrorMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expOspfToIsisRuleErrorMetric.setStatus("mandatory")


class _ExpOspfToIsisRuleExpenseMetricAction_Type(Integer32):
    """Custom type expOspfToIsisRuleExpenseMetricAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpOspfToIsisRuleExpenseMetricAction_Type.__name__ = "Integer32"
_ExpOspfToIsisRuleExpenseMetricAction_Object = MibTableColumn
expOspfToIsisRuleExpenseMetricAction = _ExpOspfToIsisRuleExpenseMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 15, 1, 11),
    _ExpOspfToIsisRuleExpenseMetricAction_Type()
)
expOspfToIsisRuleExpenseMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expOspfToIsisRuleExpenseMetricAction.setStatus("mandatory")


class _ExpOspfToIsisRuleExpenseMetric_Type(Integer32):
    """Custom type expOspfToIsisRuleExpenseMetric based on Integer32"""
    defaultValue = 0


_ExpOspfToIsisRuleExpenseMetric_Object = MibTableColumn
expOspfToIsisRuleExpenseMetric = _ExpOspfToIsisRuleExpenseMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 15, 1, 12),
    _ExpOspfToIsisRuleExpenseMetric_Type()
)
expOspfToIsisRuleExpenseMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expOspfToIsisRuleExpenseMetric.setStatus("mandatory")


class _ExpOspfToIsisRuleStatus_Type(Integer32):
    """Custom type expOspfToIsisRuleStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ExpOspfToIsisRuleStatus_Type.__name__ = "Integer32"
_ExpOspfToIsisRuleStatus_Object = MibTableColumn
expOspfToIsisRuleStatus = _ExpOspfToIsisRuleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 15, 1, 13),
    _ExpOspfToIsisRuleStatus_Type()
)
expOspfToIsisRuleStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expOspfToIsisRuleStatus.setStatus("mandatory")
_ExpRipToIsisRuleTable_Object = MibTable
expRipToIsisRuleTable = _ExpRipToIsisRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 16)
)
if mibBuilder.loadTexts:
    expRipToIsisRuleTable.setStatus("mandatory")
_ExpRipToIsisRuleEntry_Object = MibTableRow
expRipToIsisRuleEntry = _ExpRipToIsisRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 16, 1)
)
expRipToIsisRuleEntry.setIndexNames(
    (0, "MRVINREACH", "expRipToIsisRuleNetwork"),
)
if mibBuilder.loadTexts:
    expRipToIsisRuleEntry.setStatus("mandatory")
_ExpRipToIsisRuleNetwork_Type = IpAddress
_ExpRipToIsisRuleNetwork_Object = MibTableColumn
expRipToIsisRuleNetwork = _ExpRipToIsisRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 16, 1, 1),
    _ExpRipToIsisRuleNetwork_Type()
)
expRipToIsisRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expRipToIsisRuleNetwork.setStatus("mandatory")


class _ExpRipToIsisRuleAction_Type(Integer32):
    """Custom type expRipToIsisRuleAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertise", 2),
          ("hide", 1))
    )


_ExpRipToIsisRuleAction_Type.__name__ = "Integer32"
_ExpRipToIsisRuleAction_Object = MibTableColumn
expRipToIsisRuleAction = _ExpRipToIsisRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 16, 1, 2),
    _ExpRipToIsisRuleAction_Type()
)
expRipToIsisRuleAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expRipToIsisRuleAction.setStatus("mandatory")


class _ExpRipToIsisRuleMetricType_Type(Integer32):
    """Custom type expRipToIsisRuleMetricType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("external", 2),
          ("internal", 1))
    )


_ExpRipToIsisRuleMetricType_Type.__name__ = "Integer32"
_ExpRipToIsisRuleMetricType_Object = MibTableColumn
expRipToIsisRuleMetricType = _ExpRipToIsisRuleMetricType_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 16, 1, 3),
    _ExpRipToIsisRuleMetricType_Type()
)
expRipToIsisRuleMetricType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expRipToIsisRuleMetricType.setStatus("mandatory")


class _ExpRipToIsisRuleDefaultMetricAction_Type(Integer32):
    """Custom type expRipToIsisRuleDefaultMetricAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpRipToIsisRuleDefaultMetricAction_Type.__name__ = "Integer32"
_ExpRipToIsisRuleDefaultMetricAction_Object = MibTableColumn
expRipToIsisRuleDefaultMetricAction = _ExpRipToIsisRuleDefaultMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 16, 1, 4),
    _ExpRipToIsisRuleDefaultMetricAction_Type()
)
expRipToIsisRuleDefaultMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expRipToIsisRuleDefaultMetricAction.setStatus("mandatory")


class _ExpRipToIsisRuleDefaultMetric_Type(Integer32):
    """Custom type expRipToIsisRuleDefaultMetric based on Integer32"""
    defaultValue = 1


_ExpRipToIsisRuleDefaultMetric_Object = MibTableColumn
expRipToIsisRuleDefaultMetric = _ExpRipToIsisRuleDefaultMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 16, 1, 5),
    _ExpRipToIsisRuleDefaultMetric_Type()
)
expRipToIsisRuleDefaultMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expRipToIsisRuleDefaultMetric.setStatus("mandatory")


class _ExpRipToIsisRuleDelayMetricAction_Type(Integer32):
    """Custom type expRipToIsisRuleDelayMetricAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpRipToIsisRuleDelayMetricAction_Type.__name__ = "Integer32"
_ExpRipToIsisRuleDelayMetricAction_Object = MibTableColumn
expRipToIsisRuleDelayMetricAction = _ExpRipToIsisRuleDelayMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 16, 1, 6),
    _ExpRipToIsisRuleDelayMetricAction_Type()
)
expRipToIsisRuleDelayMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expRipToIsisRuleDelayMetricAction.setStatus("mandatory")


class _ExpRipToIsisRuleDelayMetric_Type(Integer32):
    """Custom type expRipToIsisRuleDelayMetric based on Integer32"""
    defaultValue = 0


_ExpRipToIsisRuleDelayMetric_Object = MibTableColumn
expRipToIsisRuleDelayMetric = _ExpRipToIsisRuleDelayMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 16, 1, 7),
    _ExpRipToIsisRuleDelayMetric_Type()
)
expRipToIsisRuleDelayMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expRipToIsisRuleDelayMetric.setStatus("mandatory")


class _ExpRipToIsisRuleErrorMetricAction_Type(Integer32):
    """Custom type expRipToIsisRuleErrorMetricAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpRipToIsisRuleErrorMetricAction_Type.__name__ = "Integer32"
_ExpRipToIsisRuleErrorMetricAction_Object = MibTableColumn
expRipToIsisRuleErrorMetricAction = _ExpRipToIsisRuleErrorMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 16, 1, 8),
    _ExpRipToIsisRuleErrorMetricAction_Type()
)
expRipToIsisRuleErrorMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expRipToIsisRuleErrorMetricAction.setStatus("mandatory")


class _ExpRipToIsisRuleErrorMetric_Type(Integer32):
    """Custom type expRipToIsisRuleErrorMetric based on Integer32"""
    defaultValue = 0


_ExpRipToIsisRuleErrorMetric_Object = MibTableColumn
expRipToIsisRuleErrorMetric = _ExpRipToIsisRuleErrorMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 16, 1, 9),
    _ExpRipToIsisRuleErrorMetric_Type()
)
expRipToIsisRuleErrorMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expRipToIsisRuleErrorMetric.setStatus("mandatory")


class _ExpRipToIsisRuleExpenseMetricAction_Type(Integer32):
    """Custom type expRipToIsisRuleExpenseMetricAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpRipToIsisRuleExpenseMetricAction_Type.__name__ = "Integer32"
_ExpRipToIsisRuleExpenseMetricAction_Object = MibTableColumn
expRipToIsisRuleExpenseMetricAction = _ExpRipToIsisRuleExpenseMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 16, 1, 10),
    _ExpRipToIsisRuleExpenseMetricAction_Type()
)
expRipToIsisRuleExpenseMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expRipToIsisRuleExpenseMetricAction.setStatus("mandatory")


class _ExpRipToIsisRuleExpenseMetric_Type(Integer32):
    """Custom type expRipToIsisRuleExpenseMetric based on Integer32"""
    defaultValue = 0


_ExpRipToIsisRuleExpenseMetric_Object = MibTableColumn
expRipToIsisRuleExpenseMetric = _ExpRipToIsisRuleExpenseMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 16, 1, 11),
    _ExpRipToIsisRuleExpenseMetric_Type()
)
expRipToIsisRuleExpenseMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expRipToIsisRuleExpenseMetric.setStatus("mandatory")


class _ExpRipToIsisRuleStatus_Type(Integer32):
    """Custom type expRipToIsisRuleStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ExpRipToIsisRuleStatus_Type.__name__ = "Integer32"
_ExpRipToIsisRuleStatus_Object = MibTableColumn
expRipToIsisRuleStatus = _ExpRipToIsisRuleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 16, 1, 12),
    _ExpRipToIsisRuleStatus_Type()
)
expRipToIsisRuleStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expRipToIsisRuleStatus.setStatus("mandatory")
_ExpStaticToIsisRuleTable_Object = MibTable
expStaticToIsisRuleTable = _ExpStaticToIsisRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 17)
)
if mibBuilder.loadTexts:
    expStaticToIsisRuleTable.setStatus("mandatory")
_ExpStaticToIsisRuleEntry_Object = MibTableRow
expStaticToIsisRuleEntry = _ExpStaticToIsisRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 17, 1)
)
expStaticToIsisRuleEntry.setIndexNames(
    (0, "MRVINREACH", "expStaticToIsisRuleNetwork"),
)
if mibBuilder.loadTexts:
    expStaticToIsisRuleEntry.setStatus("mandatory")
_ExpStaticToIsisRuleNetwork_Type = IpAddress
_ExpStaticToIsisRuleNetwork_Object = MibTableColumn
expStaticToIsisRuleNetwork = _ExpStaticToIsisRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 17, 1, 1),
    _ExpStaticToIsisRuleNetwork_Type()
)
expStaticToIsisRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    expStaticToIsisRuleNetwork.setStatus("mandatory")


class _ExpStaticToIsisRuleAction_Type(Integer32):
    """Custom type expStaticToIsisRuleAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertise", 2),
          ("hide", 1))
    )


_ExpStaticToIsisRuleAction_Type.__name__ = "Integer32"
_ExpStaticToIsisRuleAction_Object = MibTableColumn
expStaticToIsisRuleAction = _ExpStaticToIsisRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 17, 1, 2),
    _ExpStaticToIsisRuleAction_Type()
)
expStaticToIsisRuleAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expStaticToIsisRuleAction.setStatus("mandatory")


class _ExpStaticToIsisRuleMetricType_Type(Integer32):
    """Custom type expStaticToIsisRuleMetricType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("external", 2),
          ("internal", 1))
    )


_ExpStaticToIsisRuleMetricType_Type.__name__ = "Integer32"
_ExpStaticToIsisRuleMetricType_Object = MibTableColumn
expStaticToIsisRuleMetricType = _ExpStaticToIsisRuleMetricType_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 17, 1, 3),
    _ExpStaticToIsisRuleMetricType_Type()
)
expStaticToIsisRuleMetricType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expStaticToIsisRuleMetricType.setStatus("mandatory")


class _ExpStaticToIsisRuleDefaultMetricAction_Type(Integer32):
    """Custom type expStaticToIsisRuleDefaultMetricAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpStaticToIsisRuleDefaultMetricAction_Type.__name__ = "Integer32"
_ExpStaticToIsisRuleDefaultMetricAction_Object = MibTableColumn
expStaticToIsisRuleDefaultMetricAction = _ExpStaticToIsisRuleDefaultMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 17, 1, 4),
    _ExpStaticToIsisRuleDefaultMetricAction_Type()
)
expStaticToIsisRuleDefaultMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expStaticToIsisRuleDefaultMetricAction.setStatus("mandatory")


class _ExpStaticToIsisRuleDefaultMetric_Type(Integer32):
    """Custom type expStaticToIsisRuleDefaultMetric based on Integer32"""
    defaultValue = 1


_ExpStaticToIsisRuleDefaultMetric_Object = MibTableColumn
expStaticToIsisRuleDefaultMetric = _ExpStaticToIsisRuleDefaultMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 17, 1, 5),
    _ExpStaticToIsisRuleDefaultMetric_Type()
)
expStaticToIsisRuleDefaultMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expStaticToIsisRuleDefaultMetric.setStatus("mandatory")


class _ExpStaticToIsisRuleDelayMetricAction_Type(Integer32):
    """Custom type expStaticToIsisRuleDelayMetricAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpStaticToIsisRuleDelayMetricAction_Type.__name__ = "Integer32"
_ExpStaticToIsisRuleDelayMetricAction_Object = MibTableColumn
expStaticToIsisRuleDelayMetricAction = _ExpStaticToIsisRuleDelayMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 17, 1, 6),
    _ExpStaticToIsisRuleDelayMetricAction_Type()
)
expStaticToIsisRuleDelayMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expStaticToIsisRuleDelayMetricAction.setStatus("mandatory")


class _ExpStaticToIsisRuleDelayMetric_Type(Integer32):
    """Custom type expStaticToIsisRuleDelayMetric based on Integer32"""
    defaultValue = 0


_ExpStaticToIsisRuleDelayMetric_Object = MibTableColumn
expStaticToIsisRuleDelayMetric = _ExpStaticToIsisRuleDelayMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 17, 1, 7),
    _ExpStaticToIsisRuleDelayMetric_Type()
)
expStaticToIsisRuleDelayMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expStaticToIsisRuleDelayMetric.setStatus("mandatory")


class _ExpStaticToIsisRuleErrorMetricAction_Type(Integer32):
    """Custom type expStaticToIsisRuleErrorMetricAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpStaticToIsisRuleErrorMetricAction_Type.__name__ = "Integer32"
_ExpStaticToIsisRuleErrorMetricAction_Object = MibTableColumn
expStaticToIsisRuleErrorMetricAction = _ExpStaticToIsisRuleErrorMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 17, 1, 8),
    _ExpStaticToIsisRuleErrorMetricAction_Type()
)
expStaticToIsisRuleErrorMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expStaticToIsisRuleErrorMetricAction.setStatus("mandatory")


class _ExpStaticToIsisRuleErrorMetric_Type(Integer32):
    """Custom type expStaticToIsisRuleErrorMetric based on Integer32"""
    defaultValue = 0


_ExpStaticToIsisRuleErrorMetric_Object = MibTableColumn
expStaticToIsisRuleErrorMetric = _ExpStaticToIsisRuleErrorMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 17, 1, 9),
    _ExpStaticToIsisRuleErrorMetric_Type()
)
expStaticToIsisRuleErrorMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expStaticToIsisRuleErrorMetric.setStatus("mandatory")


class _ExpStaticToIsisRuleExpenseMetricAction_Type(Integer32):
    """Custom type expStaticToIsisRuleExpenseMetricAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("decrement", 3),
          ("increment", 2),
          ("replace", 1))
    )


_ExpStaticToIsisRuleExpenseMetricAction_Type.__name__ = "Integer32"
_ExpStaticToIsisRuleExpenseMetricAction_Object = MibTableColumn
expStaticToIsisRuleExpenseMetricAction = _ExpStaticToIsisRuleExpenseMetricAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 17, 1, 10),
    _ExpStaticToIsisRuleExpenseMetricAction_Type()
)
expStaticToIsisRuleExpenseMetricAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expStaticToIsisRuleExpenseMetricAction.setStatus("mandatory")


class _ExpStaticToIsisRuleExpenseMetric_Type(Integer32):
    """Custom type expStaticToIsisRuleExpenseMetric based on Integer32"""
    defaultValue = 0


_ExpStaticToIsisRuleExpenseMetric_Object = MibTableColumn
expStaticToIsisRuleExpenseMetric = _ExpStaticToIsisRuleExpenseMetric_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 17, 1, 11),
    _ExpStaticToIsisRuleExpenseMetric_Type()
)
expStaticToIsisRuleExpenseMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expStaticToIsisRuleExpenseMetric.setStatus("mandatory")


class _ExpStaticToIsisRuleStatus_Type(Integer32):
    """Custom type expStaticToIsisRuleStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ExpStaticToIsisRuleStatus_Type.__name__ = "Integer32"
_ExpStaticToIsisRuleStatus_Object = MibTableColumn
expStaticToIsisRuleStatus = _ExpStaticToIsisRuleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 2, 17, 1, 12),
    _ExpStaticToIsisRuleStatus_Type()
)
expStaticToIsisRuleStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    expStaticToIsisRuleStatus.setStatus("mandatory")
_XFilter_ObjectIdentity = ObjectIdentity
xFilter = _XFilter_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3)
)
_IpIfFilterTable_Object = MibTable
ipIfFilterTable = _IpIfFilterTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 1)
)
if mibBuilder.loadTexts:
    ipIfFilterTable.setStatus("deprecated")
_IpIfFilterEntry_Object = MibTableRow
ipIfFilterEntry = _IpIfFilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 1, 1)
)
ipIfFilterEntry.setIndexNames(
    (0, "MRVINREACH", "ipIfFilterIndex"),
    (0, "MRVINREACH", "ipIfFilterProtocol"),
    (0, "MRVINREACH", "ipIfFilterDstPort"),
    (0, "MRVINREACH", "ipIfFilterSrcPort"),
    (0, "MRVINREACH", "ipIfFilterDstAddr"),
    (0, "MRVINREACH", "ipIfFilterDstMask"),
    (0, "MRVINREACH", "ipIfFilterSrcAddr"),
    (0, "MRVINREACH", "ipIfFilterSrcMask"),
)
if mibBuilder.loadTexts:
    ipIfFilterEntry.setStatus("deprecated")
_IpIfFilterIndex_Type = Integer32
_IpIfFilterIndex_Object = MibTableColumn
ipIfFilterIndex = _IpIfFilterIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 1, 1, 1),
    _IpIfFilterIndex_Type()
)
ipIfFilterIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipIfFilterIndex.setStatus("deprecated")
_IpIfFilterDstAddr_Type = IpAddress
_IpIfFilterDstAddr_Object = MibTableColumn
ipIfFilterDstAddr = _IpIfFilterDstAddr_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 1, 1, 2),
    _IpIfFilterDstAddr_Type()
)
ipIfFilterDstAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipIfFilterDstAddr.setStatus("deprecated")
_IpIfFilterDstMask_Type = IpAddress
_IpIfFilterDstMask_Object = MibTableColumn
ipIfFilterDstMask = _IpIfFilterDstMask_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 1, 1, 3),
    _IpIfFilterDstMask_Type()
)
ipIfFilterDstMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipIfFilterDstMask.setStatus("deprecated")
_IpIfFilterSrcAddr_Type = IpAddress
_IpIfFilterSrcAddr_Object = MibTableColumn
ipIfFilterSrcAddr = _IpIfFilterSrcAddr_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 1, 1, 4),
    _IpIfFilterSrcAddr_Type()
)
ipIfFilterSrcAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipIfFilterSrcAddr.setStatus("deprecated")
_IpIfFilterSrcMask_Type = IpAddress
_IpIfFilterSrcMask_Object = MibTableColumn
ipIfFilterSrcMask = _IpIfFilterSrcMask_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 1, 1, 5),
    _IpIfFilterSrcMask_Type()
)
ipIfFilterSrcMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipIfFilterSrcMask.setStatus("deprecated")


class _IpIfFilterProtocol_Type(Integer32):
    """Custom type ipIfFilterProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_IpIfFilterProtocol_Type.__name__ = "Integer32"
_IpIfFilterProtocol_Object = MibTableColumn
ipIfFilterProtocol = _IpIfFilterProtocol_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 1, 1, 6),
    _IpIfFilterProtocol_Type()
)
ipIfFilterProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipIfFilterProtocol.setStatus("deprecated")


class _IpIfFilterDstPort_Type(Integer32):
    """Custom type ipIfFilterDstPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65536),
    )


_IpIfFilterDstPort_Type.__name__ = "Integer32"
_IpIfFilterDstPort_Object = MibTableColumn
ipIfFilterDstPort = _IpIfFilterDstPort_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 1, 1, 7),
    _IpIfFilterDstPort_Type()
)
ipIfFilterDstPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipIfFilterDstPort.setStatus("deprecated")


class _IpIfFilterSrcPort_Type(Integer32):
    """Custom type ipIfFilterSrcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65536),
    )


_IpIfFilterSrcPort_Type.__name__ = "Integer32"
_IpIfFilterSrcPort_Object = MibTableColumn
ipIfFilterSrcPort = _IpIfFilterSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 1, 1, 8),
    _IpIfFilterSrcPort_Type()
)
ipIfFilterSrcPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipIfFilterSrcPort.setStatus("deprecated")


class _IpIfFilterAction_Type(Integer32):
    """Custom type ipIfFilterAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("discard", 1),
          ("forward", 2))
    )


_IpIfFilterAction_Type.__name__ = "Integer32"
_IpIfFilterAction_Object = MibTableColumn
ipIfFilterAction = _IpIfFilterAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 1, 1, 9),
    _IpIfFilterAction_Type()
)
ipIfFilterAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipIfFilterAction.setStatus("deprecated")


class _IpIfFilterStatus_Type(Integer32):
    """Custom type ipIfFilterStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_IpIfFilterStatus_Type.__name__ = "Integer32"
_IpIfFilterStatus_Object = MibTableColumn
ipIfFilterStatus = _IpIfFilterStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 1, 1, 10),
    _IpIfFilterStatus_Type()
)
ipIfFilterStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipIfFilterStatus.setStatus("deprecated")


class _IpFilterState_Type(Integer32):
    """Custom type ipFilterState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpFilterState_Type.__name__ = "Integer32"
_IpFilterState_Object = MibScalar
ipFilterState = _IpFilterState_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 2),
    _IpFilterState_Type()
)
ipFilterState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipFilterState.setStatus("mandatory")
_IpIfFilter2Table_Object = MibTable
ipIfFilter2Table = _IpIfFilter2Table_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 3)
)
if mibBuilder.loadTexts:
    ipIfFilter2Table.setStatus("mandatory")
_IpIfFilter2Entry_Object = MibTableRow
ipIfFilter2Entry = _IpIfFilter2Entry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 3, 1)
)
ipIfFilter2Entry.setIndexNames(
    (0, "MRVINREACH", "ipIfFilter2Index"),
    (0, "MRVINREACH", "ipIfFilter2Protocol"),
    (0, "MRVINREACH", "ipIfFilter2DstPortStart"),
    (0, "MRVINREACH", "ipIfFilter2DstPortEnd"),
    (0, "MRVINREACH", "ipIfFilter2TcpSyn"),
    (0, "MRVINREACH", "ipIfFilter2SrcPortStart"),
    (0, "MRVINREACH", "ipIfFilter2SrcPortEnd"),
    (0, "MRVINREACH", "ipIfFilter2DstMask"),
    (0, "MRVINREACH", "ipIfFilter2DstAddr"),
    (0, "MRVINREACH", "ipIfFilter2SrcMask"),
    (0, "MRVINREACH", "ipIfFilter2SrcAddr"),
)
if mibBuilder.loadTexts:
    ipIfFilter2Entry.setStatus("mandatory")
_IpIfFilter2Index_Type = Integer32
_IpIfFilter2Index_Object = MibTableColumn
ipIfFilter2Index = _IpIfFilter2Index_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 3, 1, 1),
    _IpIfFilter2Index_Type()
)
ipIfFilter2Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipIfFilter2Index.setStatus("mandatory")
_IpIfFilter2DstAddr_Type = IpAddress
_IpIfFilter2DstAddr_Object = MibTableColumn
ipIfFilter2DstAddr = _IpIfFilter2DstAddr_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 3, 1, 2),
    _IpIfFilter2DstAddr_Type()
)
ipIfFilter2DstAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipIfFilter2DstAddr.setStatus("mandatory")
_IpIfFilter2DstMask_Type = IpAddress
_IpIfFilter2DstMask_Object = MibTableColumn
ipIfFilter2DstMask = _IpIfFilter2DstMask_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 3, 1, 3),
    _IpIfFilter2DstMask_Type()
)
ipIfFilter2DstMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipIfFilter2DstMask.setStatus("mandatory")
_IpIfFilter2SrcAddr_Type = IpAddress
_IpIfFilter2SrcAddr_Object = MibTableColumn
ipIfFilter2SrcAddr = _IpIfFilter2SrcAddr_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 3, 1, 4),
    _IpIfFilter2SrcAddr_Type()
)
ipIfFilter2SrcAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipIfFilter2SrcAddr.setStatus("mandatory")
_IpIfFilter2SrcMask_Type = IpAddress
_IpIfFilter2SrcMask_Object = MibTableColumn
ipIfFilter2SrcMask = _IpIfFilter2SrcMask_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 3, 1, 5),
    _IpIfFilter2SrcMask_Type()
)
ipIfFilter2SrcMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipIfFilter2SrcMask.setStatus("mandatory")


class _IpIfFilter2Protocol_Type(Integer32):
    """Custom type ipIfFilter2Protocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_IpIfFilter2Protocol_Type.__name__ = "Integer32"
_IpIfFilter2Protocol_Object = MibTableColumn
ipIfFilter2Protocol = _IpIfFilter2Protocol_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 3, 1, 6),
    _IpIfFilter2Protocol_Type()
)
ipIfFilter2Protocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipIfFilter2Protocol.setStatus("mandatory")


class _IpIfFilter2DstPortStart_Type(Integer32):
    """Custom type ipIfFilter2DstPortStart based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_IpIfFilter2DstPortStart_Type.__name__ = "Integer32"
_IpIfFilter2DstPortStart_Object = MibTableColumn
ipIfFilter2DstPortStart = _IpIfFilter2DstPortStart_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 3, 1, 7),
    _IpIfFilter2DstPortStart_Type()
)
ipIfFilter2DstPortStart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipIfFilter2DstPortStart.setStatus("mandatory")


class _IpIfFilter2SrcPortStart_Type(Integer32):
    """Custom type ipIfFilter2SrcPortStart based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_IpIfFilter2SrcPortStart_Type.__name__ = "Integer32"
_IpIfFilter2SrcPortStart_Object = MibTableColumn
ipIfFilter2SrcPortStart = _IpIfFilter2SrcPortStart_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 3, 1, 8),
    _IpIfFilter2SrcPortStart_Type()
)
ipIfFilter2SrcPortStart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipIfFilter2SrcPortStart.setStatus("mandatory")


class _IpIfFilter2Action_Type(Integer32):
    """Custom type ipIfFilter2Action based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("discard", 1),
          ("forward", 2))
    )


_IpIfFilter2Action_Type.__name__ = "Integer32"
_IpIfFilter2Action_Object = MibTableColumn
ipIfFilter2Action = _IpIfFilter2Action_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 3, 1, 9),
    _IpIfFilter2Action_Type()
)
ipIfFilter2Action.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipIfFilter2Action.setStatus("mandatory")


class _IpIfFilter2Status_Type(Integer32):
    """Custom type ipIfFilter2Status based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_IpIfFilter2Status_Type.__name__ = "Integer32"
_IpIfFilter2Status_Object = MibTableColumn
ipIfFilter2Status = _IpIfFilter2Status_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 3, 1, 10),
    _IpIfFilter2Status_Type()
)
ipIfFilter2Status.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipIfFilter2Status.setStatus("mandatory")


class _IpIfFilter2DstPortEnd_Type(Integer32):
    """Custom type ipIfFilter2DstPortEnd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_IpIfFilter2DstPortEnd_Type.__name__ = "Integer32"
_IpIfFilter2DstPortEnd_Object = MibTableColumn
ipIfFilter2DstPortEnd = _IpIfFilter2DstPortEnd_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 3, 1, 11),
    _IpIfFilter2DstPortEnd_Type()
)
ipIfFilter2DstPortEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipIfFilter2DstPortEnd.setStatus("mandatory")


class _IpIfFilter2SrcPortEnd_Type(Integer32):
    """Custom type ipIfFilter2SrcPortEnd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_IpIfFilter2SrcPortEnd_Type.__name__ = "Integer32"
_IpIfFilter2SrcPortEnd_Object = MibTableColumn
ipIfFilter2SrcPortEnd = _IpIfFilter2SrcPortEnd_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 3, 1, 12),
    _IpIfFilter2SrcPortEnd_Type()
)
ipIfFilter2SrcPortEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipIfFilter2SrcPortEnd.setStatus("mandatory")


class _IpIfFilter2TcpSyn_Type(Integer32):
    """Custom type ipIfFilter2TcpSyn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("all", 3),
          ("off", 1),
          ("on", 2))
    )


_IpIfFilter2TcpSyn_Type.__name__ = "Integer32"
_IpIfFilter2TcpSyn_Object = MibTableColumn
ipIfFilter2TcpSyn = _IpIfFilter2TcpSyn_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 3, 1, 13),
    _IpIfFilter2TcpSyn_Type()
)
ipIfFilter2TcpSyn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipIfFilter2TcpSyn.setStatus("mandatory")


class _IpIfFilter2ProtocolPriority_Type(Integer32):
    """Custom type ipIfFilter2ProtocolPriority based on Integer32"""
    defaultValue = 256

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              5,
              256)
        )
    )
    namedValues = NamedValues(
        *(("high", 5),
          ("low", 1),
          ("medium", 3),
          ("none", 256))
    )


_IpIfFilter2ProtocolPriority_Type.__name__ = "Integer32"
_IpIfFilter2ProtocolPriority_Object = MibTableColumn
ipIfFilter2ProtocolPriority = _IpIfFilter2ProtocolPriority_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 16, 3, 3, 1, 14),
    _IpIfFilter2ProtocolPriority_Type()
)
ipIfFilter2ProtocolPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipIfFilter2ProtocolPriority.setStatus("mandatory")
_XRip_ObjectIdentity = ObjectIdentity
xRip = _XRip_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 18)
)


class _RipState_Type(Integer32):
    """Custom type ripState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_RipState_Type.__name__ = "Integer32"
_RipState_Object = MibScalar
ripState = _RipState_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 18, 1),
    _RipState_Type()
)
ripState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripState.setStatus("mandatory")


class _RipStatus_Type(Integer32):
    """Custom type ripStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("ipDisabled", 3),
          ("noMemory", 5),
          ("noNetworksEnabled", 4),
          ("ripDisabled", 2))
    )


_RipStatus_Type.__name__ = "Integer32"
_RipStatus_Object = MibScalar
ripStatus = _RipStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 18, 2),
    _RipStatus_Type()
)
ripStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripStatus.setStatus("mandatory")
_RipNetTable_Object = MibTable
ripNetTable = _RipNetTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 18, 3)
)
if mibBuilder.loadTexts:
    ripNetTable.setStatus("mandatory")
_RipNetEntry_Object = MibTableRow
ripNetEntry = _RipNetEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 18, 3, 1)
)
ripNetEntry.setIndexNames(
    (0, "MRVINREACH", "ripNetNet"),
)
if mibBuilder.loadTexts:
    ripNetEntry.setStatus("mandatory")
_RipNetNet_Type = IpAddress
_RipNetNet_Object = MibTableColumn
ripNetNet = _RipNetNet_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 18, 3, 1, 1),
    _RipNetNet_Type()
)
ripNetNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripNetNet.setStatus("mandatory")


class _RipNetState_Type(Integer32):
    """Custom type ripNetState based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("full", 3),
          ("routerDiscovery", 2))
    )


_RipNetState_Type.__name__ = "Integer32"
_RipNetState_Object = MibTableColumn
ripNetState = _RipNetState_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 18, 3, 1, 2),
    _RipNetState_Type()
)
ripNetState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripNetState.setStatus("mandatory")
_RipNetRipsIn_Type = Counter32
_RipNetRipsIn_Object = MibTableColumn
ripNetRipsIn = _RipNetRipsIn_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 18, 3, 1, 3),
    _RipNetRipsIn_Type()
)
ripNetRipsIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripNetRipsIn.setStatus("mandatory")
_RipNetRipsOut_Type = Counter32
_RipNetRipsOut_Object = MibTableColumn
ripNetRipsOut = _RipNetRipsOut_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 18, 3, 1, 4),
    _RipNetRipsOut_Type()
)
ripNetRipsOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ripNetRipsOut.setStatus("mandatory")


class _RipNetAlgorithm_Type(Integer32):
    """Custom type ripNetAlgorithm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("poisonedReverse", 1),
          ("splitHorizon", 2))
    )


_RipNetAlgorithm_Type.__name__ = "Integer32"
_RipNetAlgorithm_Object = MibTableColumn
ripNetAlgorithm = _RipNetAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 18, 3, 1, 5),
    _RipNetAlgorithm_Type()
)
ripNetAlgorithm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ripNetAlgorithm.setStatus("mandatory")
_Xlpd_ObjectIdentity = ObjectIdentity
xlpd = _Xlpd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 19)
)
_LpdQueueTable_Object = MibTable
lpdQueueTable = _LpdQueueTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 1)
)
if mibBuilder.loadTexts:
    lpdQueueTable.setStatus("mandatory")
_LpdQueueEntry_Object = MibTableRow
lpdQueueEntry = _LpdQueueEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 1, 1)
)
lpdQueueEntry.setIndexNames(
    (0, "MRVINREACH", "lpdQueueName"),
)
if mibBuilder.loadTexts:
    lpdQueueEntry.setStatus("mandatory")


class _LpdQueueStatus_Type(Integer32):
    """Custom type lpdQueueStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_LpdQueueStatus_Type.__name__ = "Integer32"
_LpdQueueStatus_Object = MibTableColumn
lpdQueueStatus = _LpdQueueStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 1, 1, 1),
    _LpdQueueStatus_Type()
)
lpdQueueStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lpdQueueStatus.setStatus("mandatory")


class _LpdQueueName_Type(DisplayString):
    """Custom type lpdQueueName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_LpdQueueName_Type.__name__ = "DisplayString"
_LpdQueueName_Object = MibTableColumn
lpdQueueName = _LpdQueueName_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 1, 1, 2),
    _LpdQueueName_Type()
)
lpdQueueName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lpdQueueName.setStatus("mandatory")


class _LpdQueuePorts_Type(OctetString):
    """Custom type lpdQueuePorts based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 16),
    )


_LpdQueuePorts_Type.__name__ = "OctetString"
_LpdQueuePorts_Object = MibTableColumn
lpdQueuePorts = _LpdQueuePorts_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 1, 1, 3),
    _LpdQueuePorts_Type()
)
lpdQueuePorts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lpdQueuePorts.setStatus("mandatory")


class _LpdQueueEnabled_Type(Integer32):
    """Custom type lpdQueueEnabled based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_LpdQueueEnabled_Type.__name__ = "Integer32"
_LpdQueueEnabled_Object = MibTableColumn
lpdQueueEnabled = _LpdQueueEnabled_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 1, 1, 4),
    _LpdQueueEnabled_Type()
)
lpdQueueEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lpdQueueEnabled.setStatus("mandatory")


class _LpdQueueLfConversion_Type(Integer32):
    """Custom type lpdQueueLfConversion based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("lf", 1),
          ("lfcr", 2))
    )


_LpdQueueLfConversion_Type.__name__ = "Integer32"
_LpdQueueLfConversion_Object = MibTableColumn
lpdQueueLfConversion = _LpdQueueLfConversion_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 1, 1, 5),
    _LpdQueueLfConversion_Type()
)
lpdQueueLfConversion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lpdQueueLfConversion.setStatus("mandatory")
_LpdQueueTotalJobs_Type = Gauge32
_LpdQueueTotalJobs_Object = MibTableColumn
lpdQueueTotalJobs = _LpdQueueTotalJobs_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 1, 1, 6),
    _LpdQueueTotalJobs_Type()
)
lpdQueueTotalJobs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lpdQueueTotalJobs.setStatus("mandatory")
_LpdQueueActiveJobs_Type = Gauge32
_LpdQueueActiveJobs_Object = MibTableColumn
lpdQueueActiveJobs = _LpdQueueActiveJobs_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 1, 1, 7),
    _LpdQueueActiveJobs_Type()
)
lpdQueueActiveJobs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lpdQueueActiveJobs.setStatus("mandatory")
_LpdQueueWaitingJobs_Type = Gauge32
_LpdQueueWaitingJobs_Object = MibTableColumn
lpdQueueWaitingJobs = _LpdQueueWaitingJobs_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 1, 1, 8),
    _LpdQueueWaitingJobs_Type()
)
lpdQueueWaitingJobs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lpdQueueWaitingJobs.setStatus("mandatory")
_LpdQueueProcessedJobs_Type = Counter32
_LpdQueueProcessedJobs_Object = MibTableColumn
lpdQueueProcessedJobs = _LpdQueueProcessedJobs_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 1, 1, 9),
    _LpdQueueProcessedJobs_Type()
)
lpdQueueProcessedJobs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lpdQueueProcessedJobs.setStatus("mandatory")


class _LpdQueueFormFeed_Type(Integer32):
    """Custom type lpdQueueFormFeed based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("formfeedafter", 1),
          ("formfeedbefore", 2),
          ("formfeednone", 3))
    )


_LpdQueueFormFeed_Type.__name__ = "Integer32"
_LpdQueueFormFeed_Object = MibTableColumn
lpdQueueFormFeed = _LpdQueueFormFeed_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 1, 1, 10),
    _LpdQueueFormFeed_Type()
)
lpdQueueFormFeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lpdQueueFormFeed.setStatus("mandatory")


class _LpdQueueBypass_Type(Integer32):
    """Custom type lpdQueueBypass based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_LpdQueueBypass_Type.__name__ = "Integer32"
_LpdQueueBypass_Object = MibTableColumn
lpdQueueBypass = _LpdQueueBypass_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 1, 1, 11),
    _LpdQueueBypass_Type()
)
lpdQueueBypass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lpdQueueBypass.setStatus("mandatory")
_LpdJobTable_Object = MibTable
lpdJobTable = _LpdJobTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 2)
)
if mibBuilder.loadTexts:
    lpdJobTable.setStatus("mandatory")
_LpdJobEntry_Object = MibTableRow
lpdJobEntry = _LpdJobEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 2, 1)
)
lpdJobEntry.setIndexNames(
    (0, "MRVINREACH", "lpdQueueName"),
    (0, "MRVINREACH", "lpdJobNumber"),
)
if mibBuilder.loadTexts:
    lpdJobEntry.setStatus("mandatory")


class _LpdJobStatus_Type(Integer32):
    """Custom type lpdJobStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_LpdJobStatus_Type.__name__ = "Integer32"
_LpdJobStatus_Object = MibTableColumn
lpdJobStatus = _LpdJobStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 2, 1, 1),
    _LpdJobStatus_Type()
)
lpdJobStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lpdJobStatus.setStatus("mandatory")


class _LpdJobNumber_Type(Integer32):
    """Custom type lpdJobNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5000),
    )


_LpdJobNumber_Type.__name__ = "Integer32"
_LpdJobNumber_Object = MibTableColumn
lpdJobNumber = _LpdJobNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 2, 1, 2),
    _LpdJobNumber_Type()
)
lpdJobNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lpdJobNumber.setStatus("mandatory")


class _LpdJobAssignedPort_Type(Integer32):
    """Custom type lpdJobAssignedPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_LpdJobAssignedPort_Type.__name__ = "Integer32"
_LpdJobAssignedPort_Object = MibTableColumn
lpdJobAssignedPort = _LpdJobAssignedPort_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 2, 1, 3),
    _LpdJobAssignedPort_Type()
)
lpdJobAssignedPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lpdJobAssignedPort.setStatus("mandatory")


class _LpdJobFileSize_Type(Integer32):
    """Custom type lpdJobFileSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_LpdJobFileSize_Type.__name__ = "Integer32"
_LpdJobFileSize_Object = MibTableColumn
lpdJobFileSize = _LpdJobFileSize_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 2, 1, 4),
    _LpdJobFileSize_Type()
)
lpdJobFileSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lpdJobFileSize.setStatus("mandatory")


class _LpdJobHostName_Type(DisplayString):
    """Custom type lpdJobHostName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 34),
    )


_LpdJobHostName_Type.__name__ = "DisplayString"
_LpdJobHostName_Object = MibTableColumn
lpdJobHostName = _LpdJobHostName_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 2, 1, 5),
    _LpdJobHostName_Type()
)
lpdJobHostName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lpdJobHostName.setStatus("mandatory")


class _LpdJobFileName_Type(DisplayString):
    """Custom type lpdJobFileName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 34),
    )


_LpdJobFileName_Type.__name__ = "DisplayString"
_LpdJobFileName_Object = MibTableColumn
lpdJobFileName = _LpdJobFileName_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 2, 1, 6),
    _LpdJobFileName_Type()
)
lpdJobFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lpdJobFileName.setStatus("mandatory")


class _LpdJobState_Type(Integer32):
    """Custom type lpdJobState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("aborted", 6),
          ("assigned", 3),
          ("completed", 7),
          ("error", 8),
          ("flushing", 9),
          ("initialized", 1),
          ("printingControl", 5),
          ("printingData", 4),
          ("waiting", 2))
    )


_LpdJobState_Type.__name__ = "Integer32"
_LpdJobState_Object = MibTableColumn
lpdJobState = _LpdJobState_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 19, 2, 1, 7),
    _LpdJobState_Type()
)
lpdJobState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lpdJobState.setStatus("mandatory")
_XSecurID_ObjectIdentity = ObjectIdentity
xSecurID = _XSecurID_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 20)
)


class _SecurIDServerName0_Type(DisplayString):
    """Custom type securIDServerName0 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SecurIDServerName0_Type.__name__ = "DisplayString"
_SecurIDServerName0_Object = MibScalar
securIDServerName0 = _SecurIDServerName0_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 1),
    _SecurIDServerName0_Type()
)
securIDServerName0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    securIDServerName0.setStatus("mandatory")


class _SecurIDServerName1_Type(DisplayString):
    """Custom type securIDServerName1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SecurIDServerName1_Type.__name__ = "DisplayString"
_SecurIDServerName1_Object = MibScalar
securIDServerName1 = _SecurIDServerName1_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 2),
    _SecurIDServerName1_Type()
)
securIDServerName1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    securIDServerName1.setStatus("mandatory")


class _SecurIDServerName2_Type(DisplayString):
    """Custom type securIDServerName2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SecurIDServerName2_Type.__name__ = "DisplayString"
_SecurIDServerName2_Object = MibScalar
securIDServerName2 = _SecurIDServerName2_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 3),
    _SecurIDServerName2_Type()
)
securIDServerName2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    securIDServerName2.setStatus("mandatory")


class _SecurIDServerName3_Type(DisplayString):
    """Custom type securIDServerName3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SecurIDServerName3_Type.__name__ = "DisplayString"
_SecurIDServerName3_Object = MibScalar
securIDServerName3 = _SecurIDServerName3_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 4),
    _SecurIDServerName3_Type()
)
securIDServerName3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    securIDServerName3.setStatus("mandatory")


class _SecurIDServerName4_Type(DisplayString):
    """Custom type securIDServerName4 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SecurIDServerName4_Type.__name__ = "DisplayString"
_SecurIDServerName4_Object = MibScalar
securIDServerName4 = _SecurIDServerName4_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 5),
    _SecurIDServerName4_Type()
)
securIDServerName4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    securIDServerName4.setStatus("mandatory")


class _SecurIDMaxRetries_Type(Integer32):
    """Custom type securIDMaxRetries based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_SecurIDMaxRetries_Type.__name__ = "Integer32"
_SecurIDMaxRetries_Object = MibScalar
securIDMaxRetries = _SecurIDMaxRetries_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 6),
    _SecurIDMaxRetries_Type()
)
securIDMaxRetries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    securIDMaxRetries.setStatus("mandatory")


class _SecurIDBaseTimeout_Type(Integer32):
    """Custom type securIDBaseTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_SecurIDBaseTimeout_Type.__name__ = "Integer32"
_SecurIDBaseTimeout_Object = MibScalar
securIDBaseTimeout = _SecurIDBaseTimeout_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 7),
    _SecurIDBaseTimeout_Type()
)
securIDBaseTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    securIDBaseTimeout.setStatus("mandatory")


class _SecurIDPort_Type(Integer32):
    """Custom type securIDPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_SecurIDPort_Type.__name__ = "Integer32"
_SecurIDPort_Object = MibScalar
securIDPort = _SecurIDPort_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 8),
    _SecurIDPort_Type()
)
securIDPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    securIDPort.setStatus("mandatory")


class _SecurIDQueryLimit_Type(Integer32):
    """Custom type securIDQueryLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_SecurIDQueryLimit_Type.__name__ = "Integer32"
_SecurIDQueryLimit_Object = MibScalar
securIDQueryLimit = _SecurIDQueryLimit_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 9),
    _SecurIDQueryLimit_Type()
)
securIDQueryLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    securIDQueryLimit.setStatus("mandatory")


class _SecurIDEncryptionMode_Type(Integer32):
    """Custom type securIDEncryptionMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("des", 2),
          ("sdiBlockCipher", 1))
    )


_SecurIDEncryptionMode_Type.__name__ = "Integer32"
_SecurIDEncryptionMode_Object = MibScalar
securIDEncryptionMode = _SecurIDEncryptionMode_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 10),
    _SecurIDEncryptionMode_Type()
)
securIDEncryptionMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    securIDEncryptionMode.setStatus("mandatory")
_SecurIDInsecureLogins_Type = Counter32
_SecurIDInsecureLogins_Object = MibScalar
securIDInsecureLogins = _SecurIDInsecureLogins_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 11),
    _SecurIDInsecureLogins_Type()
)
securIDInsecureLogins.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securIDInsecureLogins.setStatus("mandatory")
_SecurIDSecureLogins_Type = Counter32
_SecurIDSecureLogins_Object = MibScalar
securIDSecureLogins = _SecurIDSecureLogins_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 12),
    _SecurIDSecureLogins_Type()
)
securIDSecureLogins.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securIDSecureLogins.setStatus("mandatory")
_SecurIDSecureLoginsFailed_Type = Counter32
_SecurIDSecureLoginsFailed_Object = MibScalar
securIDSecureLoginsFailed = _SecurIDSecureLoginsFailed_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 13),
    _SecurIDSecureLoginsFailed_Type()
)
securIDSecureLoginsFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securIDSecureLoginsFailed.setStatus("mandatory")
_SecurIDServerAccess0_Type = Counter32
_SecurIDServerAccess0_Object = MibScalar
securIDServerAccess0 = _SecurIDServerAccess0_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 14),
    _SecurIDServerAccess0_Type()
)
securIDServerAccess0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securIDServerAccess0.setStatus("mandatory")
_SecurIDServerAccessFailed0_Type = Counter32
_SecurIDServerAccessFailed0_Object = MibScalar
securIDServerAccessFailed0 = _SecurIDServerAccessFailed0_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 15),
    _SecurIDServerAccessFailed0_Type()
)
securIDServerAccessFailed0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securIDServerAccessFailed0.setStatus("mandatory")
_SecurIDServerAccess1_Type = Counter32
_SecurIDServerAccess1_Object = MibScalar
securIDServerAccess1 = _SecurIDServerAccess1_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 16),
    _SecurIDServerAccess1_Type()
)
securIDServerAccess1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securIDServerAccess1.setStatus("mandatory")
_SecurIDServerAccessFailed1_Type = Counter32
_SecurIDServerAccessFailed1_Object = MibScalar
securIDServerAccessFailed1 = _SecurIDServerAccessFailed1_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 17),
    _SecurIDServerAccessFailed1_Type()
)
securIDServerAccessFailed1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securIDServerAccessFailed1.setStatus("mandatory")
_SecurIDServerAccess2_Type = Counter32
_SecurIDServerAccess2_Object = MibScalar
securIDServerAccess2 = _SecurIDServerAccess2_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 18),
    _SecurIDServerAccess2_Type()
)
securIDServerAccess2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securIDServerAccess2.setStatus("mandatory")
_SecurIDServerAccessFailed2_Type = Counter32
_SecurIDServerAccessFailed2_Object = MibScalar
securIDServerAccessFailed2 = _SecurIDServerAccessFailed2_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 19),
    _SecurIDServerAccessFailed2_Type()
)
securIDServerAccessFailed2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securIDServerAccessFailed2.setStatus("mandatory")
_SecurIDServerAccess3_Type = Counter32
_SecurIDServerAccess3_Object = MibScalar
securIDServerAccess3 = _SecurIDServerAccess3_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 20),
    _SecurIDServerAccess3_Type()
)
securIDServerAccess3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securIDServerAccess3.setStatus("mandatory")
_SecurIDServerAccessFailed3_Type = Counter32
_SecurIDServerAccessFailed3_Object = MibScalar
securIDServerAccessFailed3 = _SecurIDServerAccessFailed3_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 21),
    _SecurIDServerAccessFailed3_Type()
)
securIDServerAccessFailed3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securIDServerAccessFailed3.setStatus("mandatory")
_SecurIDServerAccess4_Type = Counter32
_SecurIDServerAccess4_Object = MibScalar
securIDServerAccess4 = _SecurIDServerAccess4_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 22),
    _SecurIDServerAccess4_Type()
)
securIDServerAccess4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securIDServerAccess4.setStatus("mandatory")
_SecurIDServerAccessFailed4_Type = Counter32
_SecurIDServerAccessFailed4_Object = MibScalar
securIDServerAccessFailed4 = _SecurIDServerAccessFailed4_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 23),
    _SecurIDServerAccessFailed4_Type()
)
securIDServerAccessFailed4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securIDServerAccessFailed4.setStatus("mandatory")


class _SecurIDErrorPortIndex_Type(Integer32):
    """Custom type securIDErrorPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 40),
    )


_SecurIDErrorPortIndex_Type.__name__ = "Integer32"
_SecurIDErrorPortIndex_Object = MibScalar
securIDErrorPortIndex = _SecurIDErrorPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 24),
    _SecurIDErrorPortIndex_Type()
)
securIDErrorPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securIDErrorPortIndex.setStatus("mandatory")


class _SecurIDError_Type(Integer32):
    """Custom type securIDError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 40),
    )


_SecurIDError_Type.__name__ = "Integer32"
_SecurIDError_Object = MibScalar
securIDError = _SecurIDError_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 25),
    _SecurIDError_Type()
)
securIDError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securIDError.setStatus("mandatory")


class _SecurIDErrorUsername_Type(DisplayString):
    """Custom type securIDErrorUsername based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SecurIDErrorUsername_Type.__name__ = "DisplayString"
_SecurIDErrorUsername_Object = MibScalar
securIDErrorUsername = _SecurIDErrorUsername_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 26),
    _SecurIDErrorUsername_Type()
)
securIDErrorUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securIDErrorUsername.setStatus("mandatory")
_SecurIDPortTable_Object = MibTable
securIDPortTable = _SecurIDPortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 27)
)
if mibBuilder.loadTexts:
    securIDPortTable.setStatus("mandatory")
_SecurIDPortEntry_Object = MibTableRow
securIDPortEntry = _SecurIDPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 27, 1)
)
securIDPortEntry.setIndexNames(
    (0, "MRVINREACH", "securIDPortIndex"),
)
if mibBuilder.loadTexts:
    securIDPortEntry.setStatus("mandatory")
_SecurIDPortIndex_Type = Integer32
_SecurIDPortIndex_Object = MibTableColumn
securIDPortIndex = _SecurIDPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 27, 1, 1),
    _SecurIDPortIndex_Type()
)
securIDPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securIDPortIndex.setStatus("mandatory")


class _SecurIDPortStatus_Type(Integer32):
    """Custom type securIDPortStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SecurIDPortStatus_Type.__name__ = "Integer32"
_SecurIDPortStatus_Object = MibTableColumn
securIDPortStatus = _SecurIDPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 20, 27, 1, 2),
    _SecurIDPortStatus_Type()
)
securIDPortStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    securIDPortStatus.setStatus("mandatory")
_XSsh_ObjectIdentity = ObjectIdentity
xSsh = _XSsh_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 10, 23)
)
_SshPortTable_Object = MibTable
sshPortTable = _SshPortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 23, 1)
)
if mibBuilder.loadTexts:
    sshPortTable.setStatus("mandatory")
_SshPortEntry_Object = MibTableRow
sshPortEntry = _SshPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 23, 1, 1)
)
sshPortEntry.setIndexNames(
    (0, "MRVINREACH", "sshPortIndex"),
)
if mibBuilder.loadTexts:
    sshPortEntry.setStatus("mandatory")
_SshPortIndex_Type = Integer32
_SshPortIndex_Object = MibTableColumn
sshPortIndex = _SshPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 23, 1, 1, 1),
    _SshPortIndex_Type()
)
sshPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sshPortIndex.setStatus("mandatory")


class _SshPortIncomingTcpPort_Type(Integer32):
    """Custom type sshPortIncomingTcpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_SshPortIncomingTcpPort_Type.__name__ = "Integer32"
_SshPortIncomingTcpPort_Object = MibTableColumn
sshPortIncomingTcpPort = _SshPortIncomingTcpPort_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 23, 1, 1, 2),
    _SshPortIncomingTcpPort_Type()
)
sshPortIncomingTcpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshPortIncomingTcpPort.setStatus("mandatory")


class _SshPortNewlineFiltering_Type(Integer32):
    """Custom type sshPortNewlineFiltering based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("crLfToCr", 4),
          ("crLfToCrNull", 5),
          ("crNullToCr", 6),
          ("crNullToCrLf", 7),
          ("crToCrLf", 2),
          ("crToCrNull", 3),
          ("none", 1))
    )


_SshPortNewlineFiltering_Type.__name__ = "Integer32"
_SshPortNewlineFiltering_Object = MibTableColumn
sshPortNewlineFiltering = _SshPortNewlineFiltering_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 23, 1, 1, 3),
    _SshPortNewlineFiltering_Type()
)
sshPortNewlineFiltering.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshPortNewlineFiltering.setStatus("mandatory")


class _SshPortNewline_Type(Integer32):
    """Custom type sshPortNewline based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("crLfToCr", 4),
          ("crLfToCrNull", 5),
          ("crNullToCr", 6),
          ("crNullToCrLf", 7),
          ("crToCrLf", 2),
          ("crToCrNull", 3),
          ("none", 1))
    )


_SshPortNewline_Type.__name__ = "Integer32"
_SshPortNewline_Object = MibTableColumn
sshPortNewline = _SshPortNewline_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 23, 1, 1, 4),
    _SshPortNewline_Type()
)
sshPortNewline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshPortNewline.setStatus("mandatory")


class _SshPortTransmitBufferedTime_Type(Integer32):
    """Custom type sshPortTransmitBufferedTime based on Integer32"""
    defaultValue = 80

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 1500),
    )


_SshPortTransmitBufferedTime_Type.__name__ = "Integer32"
_SshPortTransmitBufferedTime_Object = MibTableColumn
sshPortTransmitBufferedTime = _SshPortTransmitBufferedTime_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 23, 1, 1, 5),
    _SshPortTransmitBufferedTime_Type()
)
sshPortTransmitBufferedTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshPortTransmitBufferedTime.setStatus("mandatory")


class _SshPortRemoteProtocol_Type(Integer32):
    """Custom type sshPortRemoteProtocol based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("both", 3),
          ("ssh", 1),
          ("telnet", 2))
    )


_SshPortRemoteProtocol_Type.__name__ = "Integer32"
_SshPortRemoteProtocol_Object = MibTableColumn
sshPortRemoteProtocol = _SshPortRemoteProtocol_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 23, 1, 1, 6),
    _SshPortRemoteProtocol_Type()
)
sshPortRemoteProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshPortRemoteProtocol.setStatus("mandatory")


class _SshPortBreakSequence_Type(OctetString):
    """Custom type sshPortBreakSequence based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_SshPortBreakSequence_Type.__name__ = "OctetString"
_SshPortBreakSequence_Object = MibTableColumn
sshPortBreakSequence = _SshPortBreakSequence_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 23, 1, 1, 7),
    _SshPortBreakSequence_Type()
)
sshPortBreakSequence.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshPortBreakSequence.setStatus("mandatory")


class _SshCipherMask_Type(OctetString):
    """Custom type sshCipherMask based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(2, 2),
    )


_SshCipherMask_Type.__name__ = "OctetString"
_SshCipherMask_Object = MibScalar
sshCipherMask = _SshCipherMask_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 23, 2),
    _SshCipherMask_Type()
)
sshCipherMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshCipherMask.setStatus("mandatory")


class _SshAuthenticationTimeout_Type(Integer32):
    """Custom type sshAuthenticationTimeout based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 120),
    )


_SshAuthenticationTimeout_Type.__name__ = "Integer32"
_SshAuthenticationTimeout_Object = MibScalar
sshAuthenticationTimeout = _SshAuthenticationTimeout_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 23, 3),
    _SshAuthenticationTimeout_Type()
)
sshAuthenticationTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshAuthenticationTimeout.setStatus("mandatory")


class _SshHostKeyLength_Type(Integer32):
    """Custom type sshHostKeyLength based on Integer32"""
    defaultValue = 1024

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(512, 2048),
    )


_SshHostKeyLength_Type.__name__ = "Integer32"
_SshHostKeyLength_Object = MibScalar
sshHostKeyLength = _SshHostKeyLength_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 23, 4),
    _SshHostKeyLength_Type()
)
sshHostKeyLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshHostKeyLength.setStatus("mandatory")


class _SshHostKeyGenerate_Type(Integer32):
    """Custom type sshHostKeyGenerate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("generate", 2),
          ("ready", 1),
          ("update", 3))
    )


_SshHostKeyGenerate_Type.__name__ = "Integer32"
_SshHostKeyGenerate_Object = MibScalar
sshHostKeyGenerate = _SshHostKeyGenerate_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 23, 5),
    _SshHostKeyGenerate_Type()
)
sshHostKeyGenerate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshHostKeyGenerate.setStatus("mandatory")


class _SshServerKeyLength_Type(Integer32):
    """Custom type sshServerKeyLength based on Integer32"""
    defaultValue = 768

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(512, 2048),
    )


_SshServerKeyLength_Type.__name__ = "Integer32"
_SshServerKeyLength_Object = MibScalar
sshServerKeyLength = _SshServerKeyLength_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 23, 6),
    _SshServerKeyLength_Type()
)
sshServerKeyLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerKeyLength.setStatus("mandatory")


class _SshServerKeyTtl_Type(Integer32):
    """Custom type sshServerKeyTtl based on Integer32"""
    defaultValue = 60

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 1440),
    )


_SshServerKeyTtl_Type.__name__ = "Integer32"
_SshServerKeyTtl_Object = MibScalar
sshServerKeyTtl = _SshServerKeyTtl_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 23, 7),
    _SshServerKeyTtl_Type()
)
sshServerKeyTtl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerKeyTtl.setStatus("mandatory")


class _SshServerMaxBufferSize_Type(Integer32):
    """Custom type sshServerMaxBufferSize based on Integer32"""
    defaultValue = 4096

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(4096, 262144),
    )


_SshServerMaxBufferSize_Type.__name__ = "Integer32"
_SshServerMaxBufferSize_Object = MibScalar
sshServerMaxBufferSize = _SshServerMaxBufferSize_Object(
    (1, 3, 6, 1, 4, 1, 33, 10, 23, 8),
    _SshServerMaxBufferSize_Type()
)
sshServerMaxBufferSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerMaxBufferSize.setStatus("mandatory")
_XEthernet_ObjectIdentity = ObjectIdentity
xEthernet = _XEthernet_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 11)
)
_EtherTable_Object = MibTable
etherTable = _EtherTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 11, 1)
)
if mibBuilder.loadTexts:
    etherTable.setStatus("mandatory")
_EtherEntry_Object = MibTableRow
etherEntry = _EtherEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 11, 1, 1)
)
etherEntry.setIndexNames(
    (0, "MRVINREACH", "etherIndex"),
)
if mibBuilder.loadTexts:
    etherEntry.setStatus("mandatory")
_EtherIndex_Type = Integer32
_EtherIndex_Object = MibTableColumn
etherIndex = _EtherIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 11, 1, 1, 1),
    _EtherIndex_Type()
)
etherIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    etherIndex.setStatus("mandatory")
_EtherAlignmentErrors_Type = Counter32
_EtherAlignmentErrors_Object = MibTableColumn
etherAlignmentErrors = _EtherAlignmentErrors_Object(
    (1, 3, 6, 1, 4, 1, 33, 11, 1, 1, 2),
    _EtherAlignmentErrors_Type()
)
etherAlignmentErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    etherAlignmentErrors.setStatus("mandatory")
_EtherFCSErrors_Type = Counter32
_EtherFCSErrors_Object = MibTableColumn
etherFCSErrors = _EtherFCSErrors_Object(
    (1, 3, 6, 1, 4, 1, 33, 11, 1, 1, 3),
    _EtherFCSErrors_Type()
)
etherFCSErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    etherFCSErrors.setStatus("mandatory")
_EtherTxTable_Object = MibTable
etherTxTable = _EtherTxTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 11, 2)
)
if mibBuilder.loadTexts:
    etherTxTable.setStatus("mandatory")
_EtherTxEntry_Object = MibTableRow
etherTxEntry = _EtherTxEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 11, 2, 1)
)
etherTxEntry.setIndexNames(
    (0, "MRVINREACH", "etherTxIndex"),
)
if mibBuilder.loadTexts:
    etherTxEntry.setStatus("mandatory")
_EtherTxIndex_Type = Integer32
_EtherTxIndex_Object = MibTableColumn
etherTxIndex = _EtherTxIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 11, 2, 1, 1),
    _EtherTxIndex_Type()
)
etherTxIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    etherTxIndex.setStatus("mandatory")
_EtherTxSingleCollisionFrames_Type = Counter32
_EtherTxSingleCollisionFrames_Object = MibTableColumn
etherTxSingleCollisionFrames = _EtherTxSingleCollisionFrames_Object(
    (1, 3, 6, 1, 4, 1, 33, 11, 2, 1, 2),
    _EtherTxSingleCollisionFrames_Type()
)
etherTxSingleCollisionFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    etherTxSingleCollisionFrames.setStatus("mandatory")
_EtherTxMultipleCollisionFrames_Type = Counter32
_EtherTxMultipleCollisionFrames_Object = MibTableColumn
etherTxMultipleCollisionFrames = _EtherTxMultipleCollisionFrames_Object(
    (1, 3, 6, 1, 4, 1, 33, 11, 2, 1, 3),
    _EtherTxMultipleCollisionFrames_Type()
)
etherTxMultipleCollisionFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    etherTxMultipleCollisionFrames.setStatus("mandatory")
_EtherMulticastTable_Object = MibTable
etherMulticastTable = _EtherMulticastTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 11, 3)
)
if mibBuilder.loadTexts:
    etherMulticastTable.setStatus("mandatory")
_EtherMulticastEntry_Object = MibTableRow
etherMulticastEntry = _EtherMulticastEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 11, 3, 1)
)
etherMulticastEntry.setIndexNames(
    (0, "MRVINREACH", "etherMulticastIndex"),
)
if mibBuilder.loadTexts:
    etherMulticastEntry.setStatus("mandatory")
_EtherMulticastIndex_Type = Integer32
_EtherMulticastIndex_Object = MibTableColumn
etherMulticastIndex = _EtherMulticastIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 11, 3, 1, 1),
    _EtherMulticastIndex_Type()
)
etherMulticastIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    etherMulticastIndex.setStatus("mandatory")
_EtherMulticastBytesIn_Type = Counter32
_EtherMulticastBytesIn_Object = MibTableColumn
etherMulticastBytesIn = _EtherMulticastBytesIn_Object(
    (1, 3, 6, 1, 4, 1, 33, 11, 3, 1, 2),
    _EtherMulticastBytesIn_Type()
)
etherMulticastBytesIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    etherMulticastBytesIn.setStatus("mandatory")
_EtherMulticastBytesOut_Type = Counter32
_EtherMulticastBytesOut_Object = MibTableColumn
etherMulticastBytesOut = _EtherMulticastBytesOut_Object(
    (1, 3, 6, 1, 4, 1, 33, 11, 3, 1, 3),
    _EtherMulticastBytesOut_Type()
)
etherMulticastBytesOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    etherMulticastBytesOut.setStatus("mandatory")
_EtherXTxTable_Object = MibTable
etherXTxTable = _EtherXTxTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 11, 4)
)
if mibBuilder.loadTexts:
    etherXTxTable.setStatus("mandatory")
_EtherXTxEntry_Object = MibTableRow
etherXTxEntry = _EtherXTxEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 11, 4, 1)
)
etherXTxEntry.setIndexNames(
    (0, "MRVINREACH", "etherXTxIndex"),
)
if mibBuilder.loadTexts:
    etherXTxEntry.setStatus("mandatory")
_EtherXTxIndex_Type = Integer32
_EtherXTxIndex_Object = MibTableColumn
etherXTxIndex = _EtherXTxIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 11, 4, 1, 1),
    _EtherXTxIndex_Type()
)
etherXTxIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    etherXTxIndex.setStatus("mandatory")
_EtherXTxExcessiveCollisions_Type = Counter32
_EtherXTxExcessiveCollisions_Object = MibTableColumn
etherXTxExcessiveCollisions = _EtherXTxExcessiveCollisions_Object(
    (1, 3, 6, 1, 4, 1, 33, 11, 4, 1, 2),
    _EtherXTxExcessiveCollisions_Type()
)
etherXTxExcessiveCollisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    etherXTxExcessiveCollisions.setStatus("mandatory")
_XBootClient_ObjectIdentity = ObjectIdentity
xBootClient = _XBootClient_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 12)
)


class _BootClientStatus_Type(DisplayString):
    """Custom type bootClientStatus based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1400),
    )


_BootClientStatus_Type.__name__ = "DisplayString"
_BootClientStatus_Object = MibScalar
bootClientStatus = _BootClientStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 12, 1),
    _BootClientStatus_Type()
)
bootClientStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bootClientStatus.setStatus("mandatory")
_XCharacter_ObjectIdentity = ObjectIdentity
xCharacter = _XCharacter_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 13)
)
_XBasic_ObjectIdentity = ObjectIdentity
xBasic = _XBasic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 13, 1)
)


class _BasicBroadcast_Type(Integer32):
    """Custom type basicBroadcast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicBroadcast_Type.__name__ = "Integer32"
_BasicBroadcast_Object = MibScalar
basicBroadcast = _BasicBroadcast_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 1),
    _BasicBroadcast_Type()
)
basicBroadcast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicBroadcast.setStatus("mandatory")


class _BasicErrorReport_Type(Integer32):
    """Custom type basicErrorReport based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicErrorReport_Type.__name__ = "Integer32"
_BasicErrorReport_Object = MibScalar
basicErrorReport = _BasicErrorReport_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 2),
    _BasicErrorReport_Type()
)
basicErrorReport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicErrorReport.setStatus("mandatory")


class _BasicLock_Type(Integer32):
    """Custom type basicLock based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicLock_Type.__name__ = "Integer32"
_BasicLock_Object = MibScalar
basicLock = _BasicLock_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 3),
    _BasicLock_Type()
)
basicLock.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicLock.setStatus("mandatory")


class _BasicInactivityTimer_Type(Integer32):
    """Custom type basicInactivityTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 480),
    )


_BasicInactivityTimer_Type.__name__ = "Integer32"
_BasicInactivityTimer_Object = MibScalar
basicInactivityTimer = _BasicInactivityTimer_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 4),
    _BasicInactivityTimer_Type()
)
basicInactivityTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicInactivityTimer.setStatus("mandatory")


class _BasicPasswordRetryLimit_Type(Integer32):
    """Custom type basicPasswordRetryLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 250),
    )


_BasicPasswordRetryLimit_Type.__name__ = "Integer32"
_BasicPasswordRetryLimit_Object = MibScalar
basicPasswordRetryLimit = _BasicPasswordRetryLimit_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 5),
    _BasicPasswordRetryLimit_Type()
)
basicPasswordRetryLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPasswordRetryLimit.setStatus("mandatory")


class _BasicPrivilegedPassword_Type(DisplayString):
    """Custom type basicPrivilegedPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_BasicPrivilegedPassword_Type.__name__ = "DisplayString"
_BasicPrivilegedPassword_Object = MibScalar
basicPrivilegedPassword = _BasicPrivilegedPassword_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 6),
    _BasicPrivilegedPassword_Type()
)
basicPrivilegedPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPrivilegedPassword.setStatus("mandatory")


class _BasicLoginPassword_Type(DisplayString):
    """Custom type basicLoginPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_BasicLoginPassword_Type.__name__ = "DisplayString"
_BasicLoginPassword_Object = MibScalar
basicLoginPassword = _BasicLoginPassword_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 7),
    _BasicLoginPassword_Type()
)
basicLoginPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicLoginPassword.setStatus("mandatory")


class _BasicLoginPrompt_Type(DisplayString):
    """Custom type basicLoginPrompt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_BasicLoginPrompt_Type.__name__ = "DisplayString"
_BasicLoginPrompt_Object = MibScalar
basicLoginPrompt = _BasicLoginPrompt_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 8),
    _BasicLoginPrompt_Type()
)
basicLoginPrompt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicLoginPrompt.setStatus("mandatory")


class _BasicWelcome_Type(DisplayString):
    """Custom type basicWelcome based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_BasicWelcome_Type.__name__ = "DisplayString"
_BasicWelcome_Object = MibScalar
basicWelcome = _BasicWelcome_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 9),
    _BasicWelcome_Type()
)
basicWelcome.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicWelcome.setStatus("mandatory")
_BasicActivePorts_Type = Gauge32
_BasicActivePorts_Object = MibScalar
basicActivePorts = _BasicActivePorts_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 10),
    _BasicActivePorts_Type()
)
basicActivePorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicActivePorts.setStatus("mandatory")
_BasicActivePortsHigh_Type = Gauge32
_BasicActivePortsHigh_Object = MibScalar
basicActivePortsHigh = _BasicActivePortsHigh_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 11),
    _BasicActivePortsHigh_Type()
)
basicActivePortsHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicActivePortsHigh.setStatus("mandatory")
_BasicActiveUsers_Type = Gauge32
_BasicActiveUsers_Object = MibScalar
basicActiveUsers = _BasicActiveUsers_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 12),
    _BasicActiveUsers_Type()
)
basicActiveUsers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicActiveUsers.setStatus("mandatory")
_BasicActiveUsersHigh_Type = Gauge32
_BasicActiveUsersHigh_Object = MibScalar
basicActiveUsersHigh = _BasicActiveUsersHigh_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 13),
    _BasicActiveUsersHigh_Type()
)
basicActiveUsersHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicActiveUsersHigh.setStatus("mandatory")
_BasicSessions_Type = Gauge32
_BasicSessions_Object = MibScalar
basicSessions = _BasicSessions_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 14),
    _BasicSessions_Type()
)
basicSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicSessions.setStatus("mandatory")
_BasicSessionsHigh_Type = Gauge32
_BasicSessionsHigh_Object = MibScalar
basicSessionsHigh = _BasicSessionsHigh_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 15),
    _BasicSessionsHigh_Type()
)
basicSessionsHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicSessionsHigh.setStatus("mandatory")


class _BasicSessionsLimit_Type(Integer32):
    """Custom type basicSessionsLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_BasicSessionsLimit_Type.__name__ = "Integer32"
_BasicSessionsLimit_Object = MibScalar
basicSessionsLimit = _BasicSessionsLimit_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 16),
    _BasicSessionsLimit_Type()
)
basicSessionsLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSessionsLimit.setStatus("mandatory")
_BasicPortTable_Object = MibTable
basicPortTable = _BasicPortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17)
)
if mibBuilder.loadTexts:
    basicPortTable.setStatus("mandatory")
_BasicPortEntry_Object = MibTableRow
basicPortEntry = _BasicPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1)
)
basicPortEntry.setIndexNames(
    (0, "MRVINREACH", "basicPortIndex"),
)
if mibBuilder.loadTexts:
    basicPortEntry.setStatus("mandatory")
_BasicPortIndex_Type = Integer32
_BasicPortIndex_Object = MibTableColumn
basicPortIndex = _BasicPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 1),
    _BasicPortIndex_Type()
)
basicPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPortIndex.setStatus("mandatory")


class _BasicPortDefaultDestAction_Type(Integer32):
    """Custom type basicPortDefaultDestAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dedicated", 1),
          ("preferred", 2))
    )


_BasicPortDefaultDestAction_Type.__name__ = "Integer32"
_BasicPortDefaultDestAction_Object = MibTableColumn
basicPortDefaultDestAction = _BasicPortDefaultDestAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 2),
    _BasicPortDefaultDestAction_Type()
)
basicPortDefaultDestAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortDefaultDestAction.setStatus("mandatory")


class _BasicPortDefaultDestProtocol_Type(Integer32):
    """Custom type basicPortDefaultDestProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("any", 3),
          ("lat", 1),
          ("telnet", 2))
    )


_BasicPortDefaultDestProtocol_Type.__name__ = "Integer32"
_BasicPortDefaultDestProtocol_Object = MibTableColumn
basicPortDefaultDestProtocol = _BasicPortDefaultDestProtocol_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 3),
    _BasicPortDefaultDestProtocol_Type()
)
basicPortDefaultDestProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortDefaultDestProtocol.setStatus("mandatory")


class _BasicPortDefaultDestName_Type(DisplayString):
    """Custom type basicPortDefaultDestName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_BasicPortDefaultDestName_Type.__name__ = "DisplayString"
_BasicPortDefaultDestName_Object = MibTableColumn
basicPortDefaultDestName = _BasicPortDefaultDestName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 4),
    _BasicPortDefaultDestName_Type()
)
basicPortDefaultDestName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortDefaultDestName.setStatus("mandatory")


class _BasicPortDefaultDestLATNodeName_Type(DisplayString):
    """Custom type basicPortDefaultDestLATNodeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_BasicPortDefaultDestLATNodeName_Type.__name__ = "DisplayString"
_BasicPortDefaultDestLATNodeName_Object = MibTableColumn
basicPortDefaultDestLATNodeName = _BasicPortDefaultDestLATNodeName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 5),
    _BasicPortDefaultDestLATNodeName_Type()
)
basicPortDefaultDestLATNodeName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortDefaultDestLATNodeName.setStatus("mandatory")


class _BasicPortDefaultDestLATPortName_Type(DisplayString):
    """Custom type basicPortDefaultDestLATPortName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_BasicPortDefaultDestLATPortName_Type.__name__ = "DisplayString"
_BasicPortDefaultDestLATPortName_Object = MibTableColumn
basicPortDefaultDestLATPortName = _BasicPortDefaultDestLATPortName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 6),
    _BasicPortDefaultDestLATPortName_Type()
)
basicPortDefaultDestLATPortName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortDefaultDestLATPortName.setStatus("mandatory")


class _BasicPortAutoConnect_Type(Integer32):
    """Custom type basicPortAutoConnect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortAutoConnect_Type.__name__ = "Integer32"
_BasicPortAutoConnect_Object = MibTableColumn
basicPortAutoConnect = _BasicPortAutoConnect_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 7),
    _BasicPortAutoConnect_Type()
)
basicPortAutoConnect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortAutoConnect.setStatus("mandatory")


class _BasicPortAutoLogin_Type(Integer32):
    """Custom type basicPortAutoLogin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortAutoLogin_Type.__name__ = "Integer32"
_BasicPortAutoLogin_Object = MibTableColumn
basicPortAutoLogin = _BasicPortAutoLogin_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 8),
    _BasicPortAutoLogin_Type()
)
basicPortAutoLogin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortAutoLogin.setStatus("mandatory")


class _BasicPortBroadcast_Type(Integer32):
    """Custom type basicPortBroadcast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortBroadcast_Type.__name__ = "Integer32"
_BasicPortBroadcast_Object = MibTableColumn
basicPortBroadcast = _BasicPortBroadcast_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 9),
    _BasicPortBroadcast_Type()
)
basicPortBroadcast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortBroadcast.setStatus("mandatory")


class _BasicPortConnectResume_Type(Integer32):
    """Custom type basicPortConnectResume based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortConnectResume_Type.__name__ = "Integer32"
_BasicPortConnectResume_Object = MibTableColumn
basicPortConnectResume = _BasicPortConnectResume_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 10),
    _BasicPortConnectResume_Type()
)
basicPortConnectResume.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortConnectResume.setStatus("mandatory")


class _BasicPortDialup_Type(Integer32):
    """Custom type basicPortDialup based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortDialup_Type.__name__ = "Integer32"
_BasicPortDialup_Object = MibTableColumn
basicPortDialup = _BasicPortDialup_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 11),
    _BasicPortDialup_Type()
)
basicPortDialup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortDialup.setStatus("mandatory")


class _BasicPortIdleTimeout_Type(Integer32):
    """Custom type basicPortIdleTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 480),
    )


_BasicPortIdleTimeout_Type.__name__ = "Integer32"
_BasicPortIdleTimeout_Object = MibTableColumn
basicPortIdleTimeout = _BasicPortIdleTimeout_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 12),
    _BasicPortIdleTimeout_Type()
)
basicPortIdleTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortIdleTimeout.setStatus("mandatory")


class _BasicPortInactivityLogout_Type(Integer32):
    """Custom type basicPortInactivityLogout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortInactivityLogout_Type.__name__ = "Integer32"
_BasicPortInactivityLogout_Object = MibTableColumn
basicPortInactivityLogout = _BasicPortInactivityLogout_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 13),
    _BasicPortInactivityLogout_Type()
)
basicPortInactivityLogout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortInactivityLogout.setStatus("mandatory")


class _BasicPortLossNotification_Type(Integer32):
    """Custom type basicPortLossNotification based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortLossNotification_Type.__name__ = "Integer32"
_BasicPortLossNotification_Object = MibTableColumn
basicPortLossNotification = _BasicPortLossNotification_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 14),
    _BasicPortLossNotification_Type()
)
basicPortLossNotification.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortLossNotification.setStatus("mandatory")


class _BasicPortMessageCodes_Type(Integer32):
    """Custom type basicPortMessageCodes based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortMessageCodes_Type.__name__ = "Integer32"
_BasicPortMessageCodes_Object = MibTableColumn
basicPortMessageCodes = _BasicPortMessageCodes_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 15),
    _BasicPortMessageCodes_Type()
)
basicPortMessageCodes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortMessageCodes.setStatus("mandatory")


class _BasicPortMultisessions_Type(Integer32):
    """Custom type basicPortMultisessions based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortMultisessions_Type.__name__ = "Integer32"
_BasicPortMultisessions_Object = MibTableColumn
basicPortMultisessions = _BasicPortMultisessions_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 16),
    _BasicPortMultisessions_Type()
)
basicPortMultisessions.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortMultisessions.setStatus("mandatory")


class _BasicPortDefaultUserName_Type(DisplayString):
    """Custom type basicPortDefaultUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_BasicPortDefaultUserName_Type.__name__ = "DisplayString"
_BasicPortDefaultUserName_Object = MibTableColumn
basicPortDefaultUserName = _BasicPortDefaultUserName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 17),
    _BasicPortDefaultUserName_Type()
)
basicPortDefaultUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortDefaultUserName.setStatus("mandatory")


class _BasicPortVerification_Type(Integer32):
    """Custom type basicPortVerification based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortVerification_Type.__name__ = "Integer32"
_BasicPortVerification_Object = MibTableColumn
basicPortVerification = _BasicPortVerification_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 18),
    _BasicPortVerification_Type()
)
basicPortVerification.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortVerification.setStatus("mandatory")


class _BasicPortDefaultProtocol_Type(Integer32):
    """Custom type basicPortDefaultProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              13)
        )
    )
    namedValues = NamedValues(
        *(("anylat", 3),
          ("anytelnet", 13),
          ("lat", 1),
          ("telnet", 2))
    )


_BasicPortDefaultProtocol_Type.__name__ = "Integer32"
_BasicPortDefaultProtocol_Object = MibTableColumn
basicPortDefaultProtocol = _BasicPortDefaultProtocol_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 19),
    _BasicPortDefaultProtocol_Type()
)
basicPortDefaultProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortDefaultProtocol.setStatus("mandatory")
_BasicPortLogins_Type = Counter32
_BasicPortLogins_Object = MibTableColumn
basicPortLogins = _BasicPortLogins_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 20),
    _BasicPortLogins_Type()
)
basicPortLogins.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPortLogins.setStatus("mandatory")
_BasicPortRemoteSessions_Type = Counter32
_BasicPortRemoteSessions_Object = MibTableColumn
basicPortRemoteSessions = _BasicPortRemoteSessions_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 21),
    _BasicPortRemoteSessions_Type()
)
basicPortRemoteSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPortRemoteSessions.setStatus("mandatory")
_BasicPortIdleTimeouts_Type = Counter32
_BasicPortIdleTimeouts_Object = MibTableColumn
basicPortIdleTimeouts = _BasicPortIdleTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 22),
    _BasicPortIdleTimeouts_Type()
)
basicPortIdleTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPortIdleTimeouts.setStatus("mandatory")


class _BasicPortStatus_Type(Integer32):
    """Custom type basicPortStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61)
        )
    )
    namedValues = NamedValues(
        *(("apd", 61),
          ("arapConnecting", 55),
          ("arapDialDone", 52),
          ("arapDialback", 48),
          ("arapEnabling", 54),
          ("arapExit", 53),
          ("arapInit", 41),
          ("arapLoad", 50),
          ("arapRead", 51),
          ("arapSearch", 49),
          ("arapUser", 47),
          ("autobaud", 27),
          ("available", 28),
          ("cancelQueue", 26),
          ("cclAnswer", 42),
          ("cclDone", 60),
          ("cclExecute", 59),
          ("cclHangup", 44),
          ("cclLoadError", 57),
          ("cclLoadWaiting", 58),
          ("cclLoading", 56),
          ("cclOriginate", 43),
          ("checkConnect", 6),
          ("checkModem", 29),
          ("connectPassword", 23),
          ("connectWait", 16),
          ("connected", 8),
          ("connecting", 5),
          ("cslip", 40),
          ("dialback1", 35),
          ("dialback2", 36),
          ("dialback3", 37),
          ("disconnect", 10),
          ("disconnecting", 9),
          ("executingCommand", 4),
          ("idle", 1),
          ("kerberos", 45),
          ("local", 2),
          ("locked", 12),
          ("login", 18),
          ("loginWait", 14),
          ("logout", 17),
          ("permanent", 13),
          ("ppp", 39),
          ("reset", 20),
          ("retryConnect", 15),
          ("scriptLoad", 33),
          ("scriptRun", 34),
          ("scriptSearch", 32),
          ("securID", 46),
          ("signalWait", 31),
          ("slip", 30),
          ("suspended", 11),
          ("testServiceOut", 22),
          ("testServiceWait", 21),
          ("waitInput", 3),
          ("waitLogout", 24),
          ("waitOutput", 7),
          ("waitQueue", 25),
          ("waitSession", 19),
          ("xremote", 38))
    )


_BasicPortStatus_Type.__name__ = "Integer32"
_BasicPortStatus_Object = MibTableColumn
basicPortStatus = _BasicPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 23),
    _BasicPortStatus_Type()
)
basicPortStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPortStatus.setStatus("mandatory")


class _BasicPortLastInCharacter_Type(Integer32):
    """Custom type basicPortLastInCharacter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BasicPortLastInCharacter_Type.__name__ = "Integer32"
_BasicPortLastInCharacter_Object = MibTableColumn
basicPortLastInCharacter = _BasicPortLastInCharacter_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 24),
    _BasicPortLastInCharacter_Type()
)
basicPortLastInCharacter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPortLastInCharacter.setStatus("mandatory")


class _BasicPortLastOutCharacter_Type(Integer32):
    """Custom type basicPortLastOutCharacter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BasicPortLastOutCharacter_Type.__name__ = "Integer32"
_BasicPortLastOutCharacter_Object = MibTableColumn
basicPortLastOutCharacter = _BasicPortLastOutCharacter_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 25),
    _BasicPortLastOutCharacter_Type()
)
basicPortLastOutCharacter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPortLastOutCharacter.setStatus("mandatory")


class _BasicPortActiveUserName_Type(DisplayString):
    """Custom type basicPortActiveUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_BasicPortActiveUserName_Type.__name__ = "DisplayString"
_BasicPortActiveUserName_Object = MibTableColumn
basicPortActiveUserName = _BasicPortActiveUserName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 26),
    _BasicPortActiveUserName_Type()
)
basicPortActiveUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPortActiveUserName.setStatus("mandatory")


class _BasicPortDefaultSessionMode_Type(Integer32):
    """Custom type basicPortDefaultSessionMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("binary", 2),
          ("binaryWithFlow", 3),
          ("interactive", 1),
          ("transparent", 4))
    )


_BasicPortDefaultSessionMode_Type.__name__ = "Integer32"
_BasicPortDefaultSessionMode_Object = MibTableColumn
basicPortDefaultSessionMode = _BasicPortDefaultSessionMode_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 27),
    _BasicPortDefaultSessionMode_Type()
)
basicPortDefaultSessionMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortDefaultSessionMode.setStatus("mandatory")


class _BasicPortZero_Type(Integer32):
    """Custom type basicPortZero based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_BasicPortZero_Type.__name__ = "Integer32"
_BasicPortZero_Object = MibTableColumn
basicPortZero = _BasicPortZero_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 28),
    _BasicPortZero_Type()
)
basicPortZero.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortZero.setStatus("mandatory")
_BasicPortZeroTime_Type = TimeTicks
_BasicPortZeroTime_Object = MibTableColumn
basicPortZeroTime = _BasicPortZeroTime_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 29),
    _BasicPortZeroTime_Type()
)
basicPortZeroTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPortZeroTime.setStatus("mandatory")


class _BasicPortUnixCommands_Type(Integer32):
    """Custom type basicPortUnixCommands based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2),
          ("only", 4),
          ("primary", 3))
    )


_BasicPortUnixCommands_Type.__name__ = "Integer32"
_BasicPortUnixCommands_Object = MibTableColumn
basicPortUnixCommands = _BasicPortUnixCommands_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 30),
    _BasicPortUnixCommands_Type()
)
basicPortUnixCommands.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortUnixCommands.setStatus("mandatory")


class _BasicPortSessionMode_Type(Integer32):
    """Custom type basicPortSessionMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("binary", 2),
          ("binaryWithFlow", 3),
          ("interactive", 1),
          ("noActiveSessions", 5),
          ("transparent", 4))
    )


_BasicPortSessionMode_Type.__name__ = "Integer32"
_BasicPortSessionMode_Object = MibTableColumn
basicPortSessionMode = _BasicPortSessionMode_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 31),
    _BasicPortSessionMode_Type()
)
basicPortSessionMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortSessionMode.setStatus("mandatory")


class _BasicPortRemoteDisconnectNotify_Type(Integer32):
    """Custom type basicPortRemoteDisconnectNotify based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortRemoteDisconnectNotify_Type.__name__ = "Integer32"
_BasicPortRemoteDisconnectNotify_Object = MibTableColumn
basicPortRemoteDisconnectNotify = _BasicPortRemoteDisconnectNotify_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 32),
    _BasicPortRemoteDisconnectNotify_Type()
)
basicPortRemoteDisconnectNotify.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortRemoteDisconnectNotify.setStatus("mandatory")


class _BasicPortDefaultDestControlled_Type(Integer32):
    """Custom type basicPortDefaultDestControlled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortDefaultDestControlled_Type.__name__ = "Integer32"
_BasicPortDefaultDestControlled_Object = MibTableColumn
basicPortDefaultDestControlled = _BasicPortDefaultDestControlled_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 33),
    _BasicPortDefaultDestControlled_Type()
)
basicPortDefaultDestControlled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortDefaultDestControlled.setStatus("mandatory")


class _BasicPortControlledPortLogin_Type(OctetString):
    """Custom type basicPortControlledPortLogin based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_BasicPortControlledPortLogin_Type.__name__ = "OctetString"
_BasicPortControlledPortLogin_Object = MibTableColumn
basicPortControlledPortLogin = _BasicPortControlledPortLogin_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 34),
    _BasicPortControlledPortLogin_Type()
)
basicPortControlledPortLogin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortControlledPortLogin.setStatus("mandatory")


class _BasicPortControlledPortLogout_Type(OctetString):
    """Custom type basicPortControlledPortLogout based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_BasicPortControlledPortLogout_Type.__name__ = "OctetString"
_BasicPortControlledPortLogout_Object = MibTableColumn
basicPortControlledPortLogout = _BasicPortControlledPortLogout_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 35),
    _BasicPortControlledPortLogout_Type()
)
basicPortControlledPortLogout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortControlledPortLogout.setStatus("mandatory")


class _BasicPortControlledSessionInitialize_Type(OctetString):
    """Custom type basicPortControlledSessionInitialize based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_BasicPortControlledSessionInitialize_Type.__name__ = "OctetString"
_BasicPortControlledSessionInitialize_Object = MibTableColumn
basicPortControlledSessionInitialize = _BasicPortControlledSessionInitialize_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 36),
    _BasicPortControlledSessionInitialize_Type()
)
basicPortControlledSessionInitialize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortControlledSessionInitialize.setStatus("mandatory")


class _BasicPortControlledSessionTerminate_Type(OctetString):
    """Custom type basicPortControlledSessionTerminate based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_BasicPortControlledSessionTerminate_Type.__name__ = "OctetString"
_BasicPortControlledSessionTerminate_Object = MibTableColumn
basicPortControlledSessionTerminate = _BasicPortControlledSessionTerminate_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 37),
    _BasicPortControlledSessionTerminate_Type()
)
basicPortControlledSessionTerminate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortControlledSessionTerminate.setStatus("mandatory")


class _BasicPortRloginTransparentMode_Type(Integer32):
    """Custom type basicPortRloginTransparentMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortRloginTransparentMode_Type.__name__ = "Integer32"
_BasicPortRloginTransparentMode_Object = MibTableColumn
basicPortRloginTransparentMode = _BasicPortRloginTransparentMode_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 38),
    _BasicPortRloginTransparentMode_Type()
)
basicPortRloginTransparentMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortRloginTransparentMode.setStatus("mandatory")


class _BasicPortLoginDuration_Type(Integer32):
    """Custom type basicPortLoginDuration based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 64800),
    )


_BasicPortLoginDuration_Type.__name__ = "Integer32"
_BasicPortLoginDuration_Object = MibTableColumn
basicPortLoginDuration = _BasicPortLoginDuration_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 39),
    _BasicPortLoginDuration_Type()
)
basicPortLoginDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortLoginDuration.setStatus("mandatory")


class _BasicPortOutboundSecurity_Type(Integer32):
    """Custom type basicPortOutboundSecurity based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortOutboundSecurity_Type.__name__ = "Integer32"
_BasicPortOutboundSecurity_Object = MibTableColumn
basicPortOutboundSecurity = _BasicPortOutboundSecurity_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 40),
    _BasicPortOutboundSecurity_Type()
)
basicPortOutboundSecurity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortOutboundSecurity.setStatus("mandatory")


class _BasicPortXonTimer_Type(Integer32):
    """Custom type basicPortXonTimer based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2550),
    )


_BasicPortXonTimer_Type.__name__ = "Integer32"
_BasicPortXonTimer_Object = MibTableColumn
basicPortXonTimer = _BasicPortXonTimer_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 41),
    _BasicPortXonTimer_Type()
)
basicPortXonTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortXonTimer.setStatus("mandatory")


class _BasicPortDefaultDedicatedSessionType_Type(Integer32):
    """Custom type basicPortDefaultDedicatedSessionType based on Integer32"""
    defaultHexValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 168),
    )


_BasicPortDefaultDedicatedSessionType_Type.__name__ = "Integer32"
_BasicPortDefaultDedicatedSessionType_Object = MibTableColumn
basicPortDefaultDedicatedSessionType = _BasicPortDefaultDedicatedSessionType_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 42),
    _BasicPortDefaultDedicatedSessionType_Type()
)
basicPortDefaultDedicatedSessionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortDefaultDedicatedSessionType.setStatus("mandatory")


class _BasicPortIdleTimeReceive_Type(Integer32):
    """Custom type basicPortIdleTimeReceive based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortIdleTimeReceive_Type.__name__ = "Integer32"
_BasicPortIdleTimeReceive_Object = MibTableColumn
basicPortIdleTimeReceive = _BasicPortIdleTimeReceive_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 43),
    _BasicPortIdleTimeReceive_Type()
)
basicPortIdleTimeReceive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortIdleTimeReceive.setStatus("mandatory")


class _BasicPortIdleTimeTransmit_Type(Integer32):
    """Custom type basicPortIdleTimeTransmit based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortIdleTimeTransmit_Type.__name__ = "Integer32"
_BasicPortIdleTimeTransmit_Object = MibTableColumn
basicPortIdleTimeTransmit = _BasicPortIdleTimeTransmit_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 44),
    _BasicPortIdleTimeTransmit_Type()
)
basicPortIdleTimeTransmit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortIdleTimeTransmit.setStatus("mandatory")


class _BasicPortZeroDisconnectSession_Type(Integer32):
    """Custom type basicPortZeroDisconnectSession based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortZeroDisconnectSession_Type.__name__ = "Integer32"
_BasicPortZeroDisconnectSession_Object = MibTableColumn
basicPortZeroDisconnectSession = _BasicPortZeroDisconnectSession_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 45),
    _BasicPortZeroDisconnectSession_Type()
)
basicPortZeroDisconnectSession.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortZeroDisconnectSession.setStatus("mandatory")


class _BasicPortConsolePort_Type(Integer32):
    """Custom type basicPortConsolePort based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortConsolePort_Type.__name__ = "Integer32"
_BasicPortConsolePort_Object = MibTableColumn
basicPortConsolePort = _BasicPortConsolePort_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 46),
    _BasicPortConsolePort_Type()
)
basicPortConsolePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortConsolePort.setStatus("mandatory")


class _BasicPortLoginPassword_Type(DisplayString):
    """Custom type basicPortLoginPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_BasicPortLoginPassword_Type.__name__ = "DisplayString"
_BasicPortLoginPassword_Object = MibTableColumn
basicPortLoginPassword = _BasicPortLoginPassword_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 47),
    _BasicPortLoginPassword_Type()
)
basicPortLoginPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortLoginPassword.setStatus("mandatory")


class _BasicPortSensor_Type(Integer32):
    """Custom type basicPortSensor based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortSensor_Type.__name__ = "Integer32"
_BasicPortSensor_Object = MibTableColumn
basicPortSensor = _BasicPortSensor_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 48),
    _BasicPortSensor_Type()
)
basicPortSensor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortSensor.setStatus("mandatory")


class _BasicPortAlarmControl_Type(Integer32):
    """Custom type basicPortAlarmControl based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortAlarmControl_Type.__name__ = "Integer32"
_BasicPortAlarmControl_Object = MibTableColumn
basicPortAlarmControl = _BasicPortAlarmControl_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 49),
    _BasicPortAlarmControl_Type()
)
basicPortAlarmControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortAlarmControl.setStatus("mandatory")


class _BasicPortCommandLogging_Type(Integer32):
    """Custom type basicPortCommandLogging based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortCommandLogging_Type.__name__ = "Integer32"
_BasicPortCommandLogging_Object = MibTableColumn
basicPortCommandLogging = _BasicPortCommandLogging_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 50),
    _BasicPortCommandLogging_Type()
)
basicPortCommandLogging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortCommandLogging.setStatus("mandatory")


class _BasicPortBreakSequence_Type(OctetString):
    """Custom type basicPortBreakSequence based on OctetString"""
    defaultHexValue = "00"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_BasicPortBreakSequence_Type.__name__ = "OctetString"
_BasicPortBreakSequence_Object = MibTableColumn
basicPortBreakSequence = _BasicPortBreakSequence_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 51),
    _BasicPortBreakSequence_Type()
)
basicPortBreakSequence.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortBreakSequence.setStatus("mandatory")


class _BasicPortTl1Mode_Type(Integer32):
    """Custom type basicPortTl1Mode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("hml", 2),
          ("mml", 3),
          ("mmlNoEcho", 4))
    )


_BasicPortTl1Mode_Type.__name__ = "Integer32"
_BasicPortTl1Mode_Object = MibTableColumn
basicPortTl1Mode = _BasicPortTl1Mode_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 53),
    _BasicPortTl1Mode_Type()
)
basicPortTl1Mode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortTl1Mode.setStatus("mandatory")


class _BasicPortTl1Console_Type(Integer32):
    """Custom type basicPortTl1Console based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortTl1Console_Type.__name__ = "Integer32"
_BasicPortTl1Console_Object = MibTableColumn
basicPortTl1Console = _BasicPortTl1Console_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 54),
    _BasicPortTl1Console_Type()
)
basicPortTl1Console.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortTl1Console.setStatus("mandatory")


class _BasicPortFallThrough_Type(Integer32):
    """Custom type basicPortFallThrough based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortFallThrough_Type.__name__ = "Integer32"
_BasicPortFallThrough_Object = MibTableColumn
basicPortFallThrough = _BasicPortFallThrough_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 55),
    _BasicPortFallThrough_Type()
)
basicPortFallThrough.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortFallThrough.setStatus("mandatory")


class _BasicPortCommandLoggingSuppressControlCharacters_Type(Integer32):
    """Custom type basicPortCommandLoggingSuppressControlCharacters based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortCommandLoggingSuppressControlCharacters_Type.__name__ = "Integer32"
_BasicPortCommandLoggingSuppressControlCharacters_Object = MibTableColumn
basicPortCommandLoggingSuppressControlCharacters = _BasicPortCommandLoggingSuppressControlCharacters_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 56),
    _BasicPortCommandLoggingSuppressControlCharacters_Type()
)
basicPortCommandLoggingSuppressControlCharacters.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortCommandLoggingSuppressControlCharacters.setStatus("mandatory")


class _BasicPortDataLogging_Type(Integer32):
    """Custom type basicPortDataLogging based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortDataLogging_Type.__name__ = "Integer32"
_BasicPortDataLogging_Object = MibTableColumn
basicPortDataLogging = _BasicPortDataLogging_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 57),
    _BasicPortDataLogging_Type()
)
basicPortDataLogging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortDataLogging.setStatus("mandatory")


class _BasicPortDataLoggingSuppressControlCharacters_Type(Integer32):
    """Custom type basicPortDataLoggingSuppressControlCharacters based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortDataLoggingSuppressControlCharacters_Type.__name__ = "Integer32"
_BasicPortDataLoggingSuppressControlCharacters_Object = MibTableColumn
basicPortDataLoggingSuppressControlCharacters = _BasicPortDataLoggingSuppressControlCharacters_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 58),
    _BasicPortDataLoggingSuppressControlCharacters_Type()
)
basicPortDataLoggingSuppressControlCharacters.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortDataLoggingSuppressControlCharacters.setStatus("mandatory")


class _BasicPortOnboardSecurity_Type(Integer32):
    """Custom type basicPortOnboardSecurity based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortOnboardSecurity_Type.__name__ = "Integer32"
_BasicPortOnboardSecurity_Object = MibTableColumn
basicPortOnboardSecurity = _BasicPortOnboardSecurity_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 59),
    _BasicPortOnboardSecurity_Type()
)
basicPortOnboardSecurity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortOnboardSecurity.setStatus("mandatory")


class _BasicPortFallBack_Type(Integer32):
    """Custom type basicPortFallBack based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortFallBack_Type.__name__ = "Integer32"
_BasicPortFallBack_Object = MibTableColumn
basicPortFallBack = _BasicPortFallBack_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 60),
    _BasicPortFallBack_Type()
)
basicPortFallBack.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortFallBack.setStatus("mandatory")


class _BasicPortAlarmMaster_Type(Integer32):
    """Custom type basicPortAlarmMaster based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortAlarmMaster_Type.__name__ = "Integer32"
_BasicPortAlarmMaster_Object = MibTableColumn
basicPortAlarmMaster = _BasicPortAlarmMaster_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 61),
    _BasicPortAlarmMaster_Type()
)
basicPortAlarmMaster.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortAlarmMaster.setStatus("mandatory")


class _BasicPortAlarmMasterAccounting_Type(Integer32):
    """Custom type basicPortAlarmMasterAccounting based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortAlarmMasterAccounting_Type.__name__ = "Integer32"
_BasicPortAlarmMasterAccounting_Object = MibTableColumn
basicPortAlarmMasterAccounting = _BasicPortAlarmMasterAccounting_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 62),
    _BasicPortAlarmMasterAccounting_Type()
)
basicPortAlarmMasterAccounting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortAlarmMasterAccounting.setStatus("mandatory")


class _BasicPortAlarmMasterAudibleAlarm_Type(Integer32):
    """Custom type basicPortAlarmMasterAudibleAlarm based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortAlarmMasterAudibleAlarm_Type.__name__ = "Integer32"
_BasicPortAlarmMasterAudibleAlarm_Object = MibTableColumn
basicPortAlarmMasterAudibleAlarm = _BasicPortAlarmMasterAudibleAlarm_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 63),
    _BasicPortAlarmMasterAudibleAlarm_Type()
)
basicPortAlarmMasterAudibleAlarm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortAlarmMasterAudibleAlarm.setStatus("mandatory")


class _BasicPortAlarmMasterFixTime_Type(Integer32):
    """Custom type basicPortAlarmMasterFixTime based on Integer32"""
    defaultValue = 30

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 720),
    )


_BasicPortAlarmMasterFixTime_Type.__name__ = "Integer32"
_BasicPortAlarmMasterFixTime_Object = MibTableColumn
basicPortAlarmMasterFixTime = _BasicPortAlarmMasterFixTime_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 64),
    _BasicPortAlarmMasterFixTime_Type()
)
basicPortAlarmMasterFixTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortAlarmMasterFixTime.setStatus("mandatory")


class _BasicPortAlarmMasterLcdDisplayString_Type(DisplayString):
    """Custom type basicPortAlarmMasterLcdDisplayString based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(32, 32),
    )


_BasicPortAlarmMasterLcdDisplayString_Type.__name__ = "DisplayString"
_BasicPortAlarmMasterLcdDisplayString_Object = MibTableColumn
basicPortAlarmMasterLcdDisplayString = _BasicPortAlarmMasterLcdDisplayString_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 65),
    _BasicPortAlarmMasterLcdDisplayString_Type()
)
basicPortAlarmMasterLcdDisplayString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortAlarmMasterLcdDisplayString.setStatus("mandatory")


class _BasicPortAlarmMasterReboot_Type(Integer32):
    """Custom type basicPortAlarmMasterReboot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_BasicPortAlarmMasterReboot_Type.__name__ = "Integer32"
_BasicPortAlarmMasterReboot_Object = MibTableColumn
basicPortAlarmMasterReboot = _BasicPortAlarmMasterReboot_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 66),
    _BasicPortAlarmMasterReboot_Type()
)
basicPortAlarmMasterReboot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortAlarmMasterReboot.setStatus("mandatory")
_BasicPortAlarmMasterUpdateFirmwareHost_Type = IpAddress
_BasicPortAlarmMasterUpdateFirmwareHost_Object = MibTableColumn
basicPortAlarmMasterUpdateFirmwareHost = _BasicPortAlarmMasterUpdateFirmwareHost_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 67),
    _BasicPortAlarmMasterUpdateFirmwareHost_Type()
)
basicPortAlarmMasterUpdateFirmwareHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortAlarmMasterUpdateFirmwareHost.setStatus("mandatory")


class _BasicPortAlarmMasterUpdateFirmwareFileName_Type(DisplayString):
    """Custom type basicPortAlarmMasterUpdateFirmwareFileName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_BasicPortAlarmMasterUpdateFirmwareFileName_Type.__name__ = "DisplayString"
_BasicPortAlarmMasterUpdateFirmwareFileName_Object = MibTableColumn
basicPortAlarmMasterUpdateFirmwareFileName = _BasicPortAlarmMasterUpdateFirmwareFileName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 68),
    _BasicPortAlarmMasterUpdateFirmwareFileName_Type()
)
basicPortAlarmMasterUpdateFirmwareFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortAlarmMasterUpdateFirmwareFileName.setStatus("mandatory")


class _BasicPortAlarmMasterUpdateFirmware_Type(Integer32):
    """Custom type basicPortAlarmMasterUpdateFirmware based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_BasicPortAlarmMasterUpdateFirmware_Type.__name__ = "Integer32"
_BasicPortAlarmMasterUpdateFirmware_Object = MibTableColumn
basicPortAlarmMasterUpdateFirmware = _BasicPortAlarmMasterUpdateFirmware_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 69),
    _BasicPortAlarmMasterUpdateFirmware_Type()
)
basicPortAlarmMasterUpdateFirmware.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortAlarmMasterUpdateFirmware.setStatus("mandatory")


class _BasicPortAlarmMasterStatus_Type(Integer32):
    """Custom type basicPortAlarmMasterStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("cleared", 1),
          ("critical", 6),
          ("indeterminate", 2),
          ("major", 5),
          ("minor", 4),
          ("warning", 3))
    )


_BasicPortAlarmMasterStatus_Type.__name__ = "Integer32"
_BasicPortAlarmMasterStatus_Object = MibTableColumn
basicPortAlarmMasterStatus = _BasicPortAlarmMasterStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 70),
    _BasicPortAlarmMasterStatus_Type()
)
basicPortAlarmMasterStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPortAlarmMasterStatus.setStatus("mandatory")


class _BasicPortAlarmMasterFaultSeverity_Type(Integer32):
    """Custom type basicPortAlarmMasterFaultSeverity based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("critical", 6),
          ("indeterminate", 2),
          ("major", 5),
          ("minor", 4),
          ("warning", 3))
    )


_BasicPortAlarmMasterFaultSeverity_Type.__name__ = "Integer32"
_BasicPortAlarmMasterFaultSeverity_Object = MibTableColumn
basicPortAlarmMasterFaultSeverity = _BasicPortAlarmMasterFaultSeverity_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 71),
    _BasicPortAlarmMasterFaultSeverity_Type()
)
basicPortAlarmMasterFaultSeverity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortAlarmMasterFaultSeverity.setStatus("mandatory")


class _BasicPortPowerMaster_Type(Integer32):
    """Custom type basicPortPowerMaster based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortPowerMaster_Type.__name__ = "Integer32"
_BasicPortPowerMaster_Object = MibTableColumn
basicPortPowerMaster = _BasicPortPowerMaster_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 72),
    _BasicPortPowerMaster_Type()
)
basicPortPowerMaster.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortPowerMaster.setStatus("mandatory")


class _BasicPortPowerMasterTimeDelay_Type(Integer32):
    """Custom type basicPortPowerMasterTimeDelay based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              100,
              200,
              300,
              400,
              500,
              600,
              700,
              800,
              900)
        )
    )
    namedValues = NamedValues(
        *(("eightHundred", 800),
          ("fiveHundred", 500),
          ("fourHundred", 400),
          ("nineHundred", 900),
          ("none", 1),
          ("oneHundred", 100),
          ("sevenHundred", 700),
          ("sixHundred", 600),
          ("threeHundred", 300),
          ("twoHundred", 200))
    )


_BasicPortPowerMasterTimeDelay_Type.__name__ = "Integer32"
_BasicPortPowerMasterTimeDelay_Object = MibTableColumn
basicPortPowerMasterTimeDelay = _BasicPortPowerMasterTimeDelay_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 73),
    _BasicPortPowerMasterTimeDelay_Type()
)
basicPortPowerMasterTimeDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortPowerMasterTimeDelay.setStatus("mandatory")


class _BasicPortPowerMasterSwitch_Type(Integer32):
    """Custom type basicPortPowerMasterSwitch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("off", 2),
          ("on", 3),
          ("ready", 1))
    )


_BasicPortPowerMasterSwitch_Type.__name__ = "Integer32"
_BasicPortPowerMasterSwitch_Object = MibTableColumn
basicPortPowerMasterSwitch = _BasicPortPowerMasterSwitch_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 74),
    _BasicPortPowerMasterSwitch_Type()
)
basicPortPowerMasterSwitch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortPowerMasterSwitch.setStatus("mandatory")


class _BasicPortPowerMasterModel_Type(DisplayString):
    """Custom type basicPortPowerMasterModel based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_BasicPortPowerMasterModel_Type.__name__ = "DisplayString"
_BasicPortPowerMasterModel_Object = MibTableColumn
basicPortPowerMasterModel = _BasicPortPowerMasterModel_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 75),
    _BasicPortPowerMasterModel_Type()
)
basicPortPowerMasterModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPortPowerMasterModel.setStatus("mandatory")


class _BasicPortPowerMasterSerialNumber_Type(DisplayString):
    """Custom type basicPortPowerMasterSerialNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_BasicPortPowerMasterSerialNumber_Type.__name__ = "DisplayString"
_BasicPortPowerMasterSerialNumber_Object = MibTableColumn
basicPortPowerMasterSerialNumber = _BasicPortPowerMasterSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 76),
    _BasicPortPowerMasterSerialNumber_Type()
)
basicPortPowerMasterSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPortPowerMasterSerialNumber.setStatus("mandatory")


class _BasicPortPowerMasterFirmware_Type(DisplayString):
    """Custom type basicPortPowerMasterFirmware based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_BasicPortPowerMasterFirmware_Type.__name__ = "DisplayString"
_BasicPortPowerMasterFirmware_Object = MibTableColumn
basicPortPowerMasterFirmware = _BasicPortPowerMasterFirmware_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 77),
    _BasicPortPowerMasterFirmware_Type()
)
basicPortPowerMasterFirmware.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPortPowerMasterFirmware.setStatus("mandatory")


class _BasicPortLockout_Type(Integer32):
    """Custom type basicPortLockout based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortLockout_Type.__name__ = "Integer32"
_BasicPortLockout_Object = MibTableColumn
basicPortLockout = _BasicPortLockout_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 78),
    _BasicPortLockout_Type()
)
basicPortLockout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortLockout.setStatus("mandatory")


class _BasicPortAsciiToTrapTranslation_Type(Integer32):
    """Custom type basicPortAsciiToTrapTranslation based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortAsciiToTrapTranslation_Type.__name__ = "Integer32"
_BasicPortAsciiToTrapTranslation_Object = MibTableColumn
basicPortAsciiToTrapTranslation = _BasicPortAsciiToTrapTranslation_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 79),
    _BasicPortAsciiToTrapTranslation_Type()
)
basicPortAsciiToTrapTranslation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortAsciiToTrapTranslation.setStatus("mandatory")


class _BasicPortAsciiToTrapTranslationTrapSeverity_Type(Integer32):
    """Custom type basicPortAsciiToTrapTranslationTrapSeverity based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("cleared", 1),
          ("critical", 6),
          ("indeterminate", 2),
          ("major", 5),
          ("minor", 4),
          ("warning", 3))
    )


_BasicPortAsciiToTrapTranslationTrapSeverity_Type.__name__ = "Integer32"
_BasicPortAsciiToTrapTranslationTrapSeverity_Object = MibTableColumn
basicPortAsciiToTrapTranslationTrapSeverity = _BasicPortAsciiToTrapTranslationTrapSeverity_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 80),
    _BasicPortAsciiToTrapTranslationTrapSeverity_Type()
)
basicPortAsciiToTrapTranslationTrapSeverity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortAsciiToTrapTranslationTrapSeverity.setStatus("mandatory")
_BasicPortAsciiToTrapTranslationMessages_Type = Counter32
_BasicPortAsciiToTrapTranslationMessages_Object = MibTableColumn
basicPortAsciiToTrapTranslationMessages = _BasicPortAsciiToTrapTranslationMessages_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 81),
    _BasicPortAsciiToTrapTranslationMessages_Type()
)
basicPortAsciiToTrapTranslationMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPortAsciiToTrapTranslationMessages.setStatus("mandatory")


class _BasicPortAsciiToTrapTranslationLastMessage_Type(DisplayString):
    """Custom type basicPortAsciiToTrapTranslationLastMessage based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_BasicPortAsciiToTrapTranslationLastMessage_Type.__name__ = "DisplayString"
_BasicPortAsciiToTrapTranslationLastMessage_Object = MibTableColumn
basicPortAsciiToTrapTranslationLastMessage = _BasicPortAsciiToTrapTranslationLastMessage_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 82),
    _BasicPortAsciiToTrapTranslationLastMessage_Type()
)
basicPortAsciiToTrapTranslationLastMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPortAsciiToTrapTranslationLastMessage.setStatus("mandatory")


class _BasicPortPowerMasterAlarmSeverity_Type(Integer32):
    """Custom type basicPortPowerMasterAlarmSeverity based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("critical", 6),
          ("indeterminate", 2),
          ("major", 5),
          ("minor", 4),
          ("warning", 3))
    )


_BasicPortPowerMasterAlarmSeverity_Type.__name__ = "Integer32"
_BasicPortPowerMasterAlarmSeverity_Object = MibTableColumn
basicPortPowerMasterAlarmSeverity = _BasicPortPowerMasterAlarmSeverity_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 83),
    _BasicPortPowerMasterAlarmSeverity_Type()
)
basicPortPowerMasterAlarmSeverity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortPowerMasterAlarmSeverity.setStatus("mandatory")


class _BasicPortPowerMasterDeviceStatus_Type(Integer32):
    """Custom type basicPortPowerMasterDeviceStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("cleared", 1),
          ("critical", 6),
          ("indeterminate", 2),
          ("major", 5),
          ("minor", 4),
          ("warning", 3))
    )


_BasicPortPowerMasterDeviceStatus_Type.__name__ = "Integer32"
_BasicPortPowerMasterDeviceStatus_Object = MibTableColumn
basicPortPowerMasterDeviceStatus = _BasicPortPowerMasterDeviceStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 84),
    _BasicPortPowerMasterDeviceStatus_Type()
)
basicPortPowerMasterDeviceStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPortPowerMasterDeviceStatus.setStatus("mandatory")


class _BasicPortBuffering_Type(Integer32):
    """Custom type basicPortBuffering based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortBuffering_Type.__name__ = "Integer32"
_BasicPortBuffering_Object = MibTableColumn
basicPortBuffering = _BasicPortBuffering_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 85),
    _BasicPortBuffering_Type()
)
basicPortBuffering.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortBuffering.setStatus("mandatory")


class _BasicPortLogFacilityLevel_Type(Integer32):
    """Custom type basicPortLogFacilityLevel based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("local0", 2),
          ("local1", 3),
          ("local2", 4),
          ("local3", 5),
          ("local4", 6),
          ("local5", 7),
          ("local6", 8),
          ("local7", 9),
          ("none", 1),
          ("user", 10))
    )


_BasicPortLogFacilityLevel_Type.__name__ = "Integer32"
_BasicPortLogFacilityLevel_Object = MibTableColumn
basicPortLogFacilityLevel = _BasicPortLogFacilityLevel_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 86),
    _BasicPortLogFacilityLevel_Type()
)
basicPortLogFacilityLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortLogFacilityLevel.setStatus("mandatory")


class _BasicPortPppDialBackup_Type(Integer32):
    """Custom type basicPortPppDialBackup based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortPppDialBackup_Type.__name__ = "Integer32"
_BasicPortPppDialBackup_Object = MibTableColumn
basicPortPppDialBackup = _BasicPortPppDialBackup_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 87),
    _BasicPortPppDialBackup_Type()
)
basicPortPppDialBackup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortPppDialBackup.setStatus("mandatory")


class _BasicPortPppDialBackupNumber_Type(DisplayString):
    """Custom type basicPortPppDialBackupNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_BasicPortPppDialBackupNumber_Type.__name__ = "DisplayString"
_BasicPortPppDialBackupNumber_Object = MibTableColumn
basicPortPppDialBackupNumber = _BasicPortPppDialBackupNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 88),
    _BasicPortPppDialBackupNumber_Type()
)
basicPortPppDialBackupNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortPppDialBackupNumber.setStatus("mandatory")


class _BasicPortPppDialBackupRedialTimer_Type(Integer32):
    """Custom type basicPortPppDialBackupRedialTimer based on Integer32"""
    defaultValue = 30

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 65535),
    )


_BasicPortPppDialBackupRedialTimer_Type.__name__ = "Integer32"
_BasicPortPppDialBackupRedialTimer_Object = MibTableColumn
basicPortPppDialBackupRedialTimer = _BasicPortPppDialBackupRedialTimer_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 89),
    _BasicPortPppDialBackupRedialTimer_Type()
)
basicPortPppDialBackupRedialTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortPppDialBackupRedialTimer.setStatus("mandatory")


class _BasicPortPppDialBackupRedialRetries_Type(Integer32):
    """Custom type basicPortPppDialBackupRedialRetries based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_BasicPortPppDialBackupRedialRetries_Type.__name__ = "Integer32"
_BasicPortPppDialBackupRedialRetries_Object = MibTableColumn
basicPortPppDialBackupRedialRetries = _BasicPortPppDialBackupRedialRetries_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 90),
    _BasicPortPppDialBackupRedialRetries_Type()
)
basicPortPppDialBackupRedialRetries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortPppDialBackupRedialRetries.setStatus("mandatory")


class _BasicPortPppDialBackupDisconnectTimer_Type(Integer32):
    """Custom type basicPortPppDialBackupDisconnectTimer based on Integer32"""
    defaultValue = 30

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_BasicPortPppDialBackupDisconnectTimer_Type.__name__ = "Integer32"
_BasicPortPppDialBackupDisconnectTimer_Object = MibTableColumn
basicPortPppDialBackupDisconnectTimer = _BasicPortPppDialBackupDisconnectTimer_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 91),
    _BasicPortPppDialBackupDisconnectTimer_Type()
)
basicPortPppDialBackupDisconnectTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortPppDialBackupDisconnectTimer.setStatus("mandatory")
_BasicPortPppDialBackupLocalAddress_Type = IpAddress
_BasicPortPppDialBackupLocalAddress_Object = MibTableColumn
basicPortPppDialBackupLocalAddress = _BasicPortPppDialBackupLocalAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 92),
    _BasicPortPppDialBackupLocalAddress_Type()
)
basicPortPppDialBackupLocalAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortPppDialBackupLocalAddress.setStatus("mandatory")
_BasicPortPppDialBackupDestinationAddress_Type = IpAddress
_BasicPortPppDialBackupDestinationAddress_Object = MibTableColumn
basicPortPppDialBackupDestinationAddress = _BasicPortPppDialBackupDestinationAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 93),
    _BasicPortPppDialBackupDestinationAddress_Type()
)
basicPortPppDialBackupDestinationAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortPppDialBackupDestinationAddress.setStatus("mandatory")


class _BasicPortPppDialBackupAddresses_Type(Integer32):
    """Custom type basicPortPppDialBackupAddresses based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_BasicPortPppDialBackupAddresses_Type.__name__ = "Integer32"
_BasicPortPppDialBackupAddresses_Object = MibTableColumn
basicPortPppDialBackupAddresses = _BasicPortPppDialBackupAddresses_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 17, 1, 94),
    _BasicPortPppDialBackupAddresses_Type()
)
basicPortPppDialBackupAddresses.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortPppDialBackupAddresses.setStatus("mandatory")
_BasicSerialPortTable_Object = MibTable
basicSerialPortTable = _BasicSerialPortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18)
)
if mibBuilder.loadTexts:
    basicSerialPortTable.setStatus("mandatory")
_BasicSerialPortEntry_Object = MibTableRow
basicSerialPortEntry = _BasicSerialPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1)
)
basicSerialPortEntry.setIndexNames(
    (0, "MRVINREACH", "basicSerialPortIndex"),
)
if mibBuilder.loadTexts:
    basicSerialPortEntry.setStatus("mandatory")
_BasicSerialPortIndex_Type = Integer32
_BasicSerialPortIndex_Object = MibTableColumn
basicSerialPortIndex = _BasicSerialPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 1),
    _BasicSerialPortIndex_Type()
)
basicSerialPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicSerialPortIndex.setStatus("mandatory")


class _BasicSerialPortBreak_Type(Integer32):
    """Custom type basicSerialPortBreak based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ignore", 1),
          ("localSwitch", 2),
          ("sendRemote", 3))
    )


_BasicSerialPortBreak_Type.__name__ = "Integer32"
_BasicSerialPortBreak_Object = MibTableColumn
basicSerialPortBreak = _BasicSerialPortBreak_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 2),
    _BasicSerialPortBreak_Type()
)
basicSerialPortBreak.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortBreak.setStatus("mandatory")


class _BasicSerialPortInterrupts_Type(Integer32):
    """Custom type basicSerialPortInterrupts based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortInterrupts_Type.__name__ = "Integer32"
_BasicSerialPortInterrupts_Object = MibTableColumn
basicSerialPortInterrupts = _BasicSerialPortInterrupts_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 3),
    _BasicSerialPortInterrupts_Type()
)
basicSerialPortInterrupts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortInterrupts.setStatus("mandatory")


class _BasicSerialPortNoLoss_Type(Integer32):
    """Custom type basicSerialPortNoLoss based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortNoLoss_Type.__name__ = "Integer32"
_BasicSerialPortNoLoss_Object = MibTableColumn
basicSerialPortNoLoss = _BasicSerialPortNoLoss_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 4),
    _BasicSerialPortNoLoss_Type()
)
basicSerialPortNoLoss.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortNoLoss.setStatus("mandatory")


class _BasicSerialPortPause_Type(Integer32):
    """Custom type basicSerialPortPause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortPause_Type.__name__ = "Integer32"
_BasicSerialPortPause_Object = MibTableColumn
basicSerialPortPause = _BasicSerialPortPause_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 5),
    _BasicSerialPortPause_Type()
)
basicSerialPortPause.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortPause.setStatus("mandatory")


class _BasicSerialPortPrompt_Type(DisplayString):
    """Custom type basicSerialPortPrompt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_BasicSerialPortPrompt_Type.__name__ = "DisplayString"
_BasicSerialPortPrompt_Object = MibTableColumn
basicSerialPortPrompt = _BasicSerialPortPrompt_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 6),
    _BasicSerialPortPrompt_Type()
)
basicSerialPortPrompt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortPrompt.setStatus("mandatory")


class _BasicSerialPortTerminalType_Type(Integer32):
    """Custom type basicSerialPortTerminalType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ansi", 1),
          ("hardcopy", 2),
          ("softcopy", 3))
    )


_BasicSerialPortTerminalType_Type.__name__ = "Integer32"
_BasicSerialPortTerminalType_Object = MibTableColumn
basicSerialPortTerminalType = _BasicSerialPortTerminalType_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 7),
    _BasicSerialPortTerminalType_Type()
)
basicSerialPortTerminalType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortTerminalType.setStatus("mandatory")


class _BasicSerialPortTypeaheadLimit_Type(Integer32):
    """Custom type basicSerialPortTypeaheadLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(80, 16384),
    )


_BasicSerialPortTypeaheadLimit_Type.__name__ = "Integer32"
_BasicSerialPortTypeaheadLimit_Object = MibTableColumn
basicSerialPortTypeaheadLimit = _BasicSerialPortTypeaheadLimit_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 8),
    _BasicSerialPortTypeaheadLimit_Type()
)
basicSerialPortTypeaheadLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortTypeaheadLimit.setStatus("mandatory")


class _BasicSerialPortBackwardSwitch_Type(Integer32):
    """Custom type basicSerialPortBackwardSwitch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BasicSerialPortBackwardSwitch_Type.__name__ = "Integer32"
_BasicSerialPortBackwardSwitch_Object = MibTableColumn
basicSerialPortBackwardSwitch = _BasicSerialPortBackwardSwitch_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 9),
    _BasicSerialPortBackwardSwitch_Type()
)
basicSerialPortBackwardSwitch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortBackwardSwitch.setStatus("mandatory")


class _BasicSerialPortForwardSwitch_Type(Integer32):
    """Custom type basicSerialPortForwardSwitch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BasicSerialPortForwardSwitch_Type.__name__ = "Integer32"
_BasicSerialPortForwardSwitch_Object = MibTableColumn
basicSerialPortForwardSwitch = _BasicSerialPortForwardSwitch_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 10),
    _BasicSerialPortForwardSwitch_Type()
)
basicSerialPortForwardSwitch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortForwardSwitch.setStatus("mandatory")


class _BasicSerialPortLocalSwitch_Type(Integer32):
    """Custom type basicSerialPortLocalSwitch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BasicSerialPortLocalSwitch_Type.__name__ = "Integer32"
_BasicSerialPortLocalSwitch_Object = MibTableColumn
basicSerialPortLocalSwitch = _BasicSerialPortLocalSwitch_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 11),
    _BasicSerialPortLocalSwitch_Type()
)
basicSerialPortLocalSwitch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortLocalSwitch.setStatus("mandatory")


class _BasicSerialPortModemControl_Type(Integer32):
    """Custom type basicSerialPortModemControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortModemControl_Type.__name__ = "Integer32"
_BasicSerialPortModemControl_Object = MibTableColumn
basicSerialPortModemControl = _BasicSerialPortModemControl_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 12),
    _BasicSerialPortModemControl_Type()
)
basicSerialPortModemControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortModemControl.setStatus("mandatory")


class _BasicSerialPortSignalCheck_Type(Integer32):
    """Custom type basicSerialPortSignalCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortSignalCheck_Type.__name__ = "Integer32"
_BasicSerialPortSignalCheck_Object = MibTableColumn
basicSerialPortSignalCheck = _BasicSerialPortSignalCheck_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 13),
    _BasicSerialPortSignalCheck_Type()
)
basicSerialPortSignalCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortSignalCheck.setStatus("mandatory")


class _BasicSerialPortDSRLogout_Type(Integer32):
    """Custom type basicSerialPortDSRLogout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortDSRLogout_Type.__name__ = "Integer32"
_BasicSerialPortDSRLogout_Object = MibTableColumn
basicSerialPortDSRLogout = _BasicSerialPortDSRLogout_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 14),
    _BasicSerialPortDSRLogout_Type()
)
basicSerialPortDSRLogout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortDSRLogout.setStatus("mandatory")


class _BasicSerialPortDSRObserve_Type(Integer32):
    """Custom type basicSerialPortDSRObserve based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortDSRObserve_Type.__name__ = "Integer32"
_BasicSerialPortDSRObserve_Object = MibTableColumn
basicSerialPortDSRObserve = _BasicSerialPortDSRObserve_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 15),
    _BasicSerialPortDSRObserve_Type()
)
basicSerialPortDSRObserve.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortDSRObserve.setStatus("mandatory")


class _BasicSerialPortDCDTimeout_Type(Integer32):
    """Custom type basicSerialPortDCDTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_BasicSerialPortDCDTimeout_Type.__name__ = "Integer32"
_BasicSerialPortDCDTimeout_Object = MibTableColumn
basicSerialPortDCDTimeout = _BasicSerialPortDCDTimeout_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 16),
    _BasicSerialPortDCDTimeout_Type()
)
basicSerialPortDCDTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortDCDTimeout.setStatus("mandatory")


class _BasicSerialPortDTRAssert_Type(Integer32):
    """Custom type basicSerialPortDTRAssert based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("always", 1),
          ("onConnection", 3),
          ("onConnectionOrRing", 2),
          ("onRing", 4))
    )


_BasicSerialPortDTRAssert_Type.__name__ = "Integer32"
_BasicSerialPortDTRAssert_Object = MibTableColumn
basicSerialPortDTRAssert = _BasicSerialPortDTRAssert_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 17),
    _BasicSerialPortDTRAssert_Type()
)
basicSerialPortDTRAssert.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortDTRAssert.setStatus("mandatory")


class _BasicSerialPortLimitedCommands_Type(Integer32):
    """Custom type basicSerialPortLimitedCommands based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortLimitedCommands_Type.__name__ = "Integer32"
_BasicSerialPortLimitedCommands_Object = MibTableColumn
basicSerialPortLimitedCommands = _BasicSerialPortLimitedCommands_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 18),
    _BasicSerialPortLimitedCommands_Type()
)
basicSerialPortLimitedCommands.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortLimitedCommands.setStatus("mandatory")


class _BasicSerialPortLimitedView_Type(Integer32):
    """Custom type basicSerialPortLimitedView based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortLimitedView_Type.__name__ = "Integer32"
_BasicSerialPortLimitedView_Object = MibTableColumn
basicSerialPortLimitedView = _BasicSerialPortLimitedView_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 19),
    _BasicSerialPortLimitedView_Type()
)
basicSerialPortLimitedView.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortLimitedView.setStatus("mandatory")


class _BasicSerialPortPassword_Type(Integer32):
    """Custom type basicSerialPortPassword based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortPassword_Type.__name__ = "Integer32"
_BasicSerialPortPassword_Object = MibTableColumn
basicSerialPortPassword = _BasicSerialPortPassword_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 20),
    _BasicSerialPortPassword_Type()
)
basicSerialPortPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortPassword.setStatus("mandatory")


class _BasicSerialPortLineEditor_Type(Integer32):
    """Custom type basicSerialPortLineEditor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortLineEditor_Type.__name__ = "Integer32"
_BasicSerialPortLineEditor_Object = MibTableColumn
basicSerialPortLineEditor = _BasicSerialPortLineEditor_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 21),
    _BasicSerialPortLineEditor_Type()
)
basicSerialPortLineEditor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortLineEditor.setStatus("mandatory")


class _BasicSerialPortLineEditorBackspace_Type(Integer32):
    """Custom type basicSerialPortLineEditorBackspace based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BasicSerialPortLineEditorBackspace_Type.__name__ = "Integer32"
_BasicSerialPortLineEditorBackspace_Object = MibTableColumn
basicSerialPortLineEditorBackspace = _BasicSerialPortLineEditorBackspace_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 22),
    _BasicSerialPortLineEditorBackspace_Type()
)
basicSerialPortLineEditorBackspace.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortLineEditorBackspace.setStatus("mandatory")


class _BasicSerialPortLineEditorBeginning_Type(Integer32):
    """Custom type basicSerialPortLineEditorBeginning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BasicSerialPortLineEditorBeginning_Type.__name__ = "Integer32"
_BasicSerialPortLineEditorBeginning_Object = MibTableColumn
basicSerialPortLineEditorBeginning = _BasicSerialPortLineEditorBeginning_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 23),
    _BasicSerialPortLineEditorBeginning_Type()
)
basicSerialPortLineEditorBeginning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortLineEditorBeginning.setStatus("mandatory")


class _BasicSerialPortLineEditorCancel_Type(Integer32):
    """Custom type basicSerialPortLineEditorCancel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BasicSerialPortLineEditorCancel_Type.__name__ = "Integer32"
_BasicSerialPortLineEditorCancel_Object = MibTableColumn
basicSerialPortLineEditorCancel = _BasicSerialPortLineEditorCancel_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 24),
    _BasicSerialPortLineEditorCancel_Type()
)
basicSerialPortLineEditorCancel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortLineEditorCancel.setStatus("mandatory")


class _BasicSerialPortLineEditorDeleteBeginning_Type(Integer32):
    """Custom type basicSerialPortLineEditorDeleteBeginning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BasicSerialPortLineEditorDeleteBeginning_Type.__name__ = "Integer32"
_BasicSerialPortLineEditorDeleteBeginning_Object = MibTableColumn
basicSerialPortLineEditorDeleteBeginning = _BasicSerialPortLineEditorDeleteBeginning_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 25),
    _BasicSerialPortLineEditorDeleteBeginning_Type()
)
basicSerialPortLineEditorDeleteBeginning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortLineEditorDeleteBeginning.setStatus("mandatory")


class _BasicSerialPortLineEditorDeleteLine_Type(Integer32):
    """Custom type basicSerialPortLineEditorDeleteLine based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BasicSerialPortLineEditorDeleteLine_Type.__name__ = "Integer32"
_BasicSerialPortLineEditorDeleteLine_Object = MibTableColumn
basicSerialPortLineEditorDeleteLine = _BasicSerialPortLineEditorDeleteLine_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 26),
    _BasicSerialPortLineEditorDeleteLine_Type()
)
basicSerialPortLineEditorDeleteLine.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortLineEditorDeleteLine.setStatus("mandatory")


class _BasicSerialPortLineEditorEnd_Type(Integer32):
    """Custom type basicSerialPortLineEditorEnd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BasicSerialPortLineEditorEnd_Type.__name__ = "Integer32"
_BasicSerialPortLineEditorEnd_Object = MibTableColumn
basicSerialPortLineEditorEnd = _BasicSerialPortLineEditorEnd_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 27),
    _BasicSerialPortLineEditorEnd_Type()
)
basicSerialPortLineEditorEnd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortLineEditorEnd.setStatus("mandatory")


class _BasicSerialPortLineEditorForward_Type(Integer32):
    """Custom type basicSerialPortLineEditorForward based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BasicSerialPortLineEditorForward_Type.__name__ = "Integer32"
_BasicSerialPortLineEditorForward_Object = MibTableColumn
basicSerialPortLineEditorForward = _BasicSerialPortLineEditorForward_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 28),
    _BasicSerialPortLineEditorForward_Type()
)
basicSerialPortLineEditorForward.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortLineEditorForward.setStatus("mandatory")


class _BasicSerialPortLineEditorInsertToggle_Type(Integer32):
    """Custom type basicSerialPortLineEditorInsertToggle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BasicSerialPortLineEditorInsertToggle_Type.__name__ = "Integer32"
_BasicSerialPortLineEditorInsertToggle_Object = MibTableColumn
basicSerialPortLineEditorInsertToggle = _BasicSerialPortLineEditorInsertToggle_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 29),
    _BasicSerialPortLineEditorInsertToggle_Type()
)
basicSerialPortLineEditorInsertToggle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortLineEditorInsertToggle.setStatus("mandatory")


class _BasicSerialPortLineEditorNextLine_Type(Integer32):
    """Custom type basicSerialPortLineEditorNextLine based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BasicSerialPortLineEditorNextLine_Type.__name__ = "Integer32"
_BasicSerialPortLineEditorNextLine_Object = MibTableColumn
basicSerialPortLineEditorNextLine = _BasicSerialPortLineEditorNextLine_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 30),
    _BasicSerialPortLineEditorNextLine_Type()
)
basicSerialPortLineEditorNextLine.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortLineEditorNextLine.setStatus("mandatory")


class _BasicSerialPortLineEditorPreviousLine_Type(Integer32):
    """Custom type basicSerialPortLineEditorPreviousLine based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BasicSerialPortLineEditorPreviousLine_Type.__name__ = "Integer32"
_BasicSerialPortLineEditorPreviousLine_Object = MibTableColumn
basicSerialPortLineEditorPreviousLine = _BasicSerialPortLineEditorPreviousLine_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 31),
    _BasicSerialPortLineEditorPreviousLine_Type()
)
basicSerialPortLineEditorPreviousLine.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortLineEditorPreviousLine.setStatus("mandatory")


class _BasicSerialPortLineEditorQuotingCharacter_Type(Integer32):
    """Custom type basicSerialPortLineEditorQuotingCharacter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BasicSerialPortLineEditorQuotingCharacter_Type.__name__ = "Integer32"
_BasicSerialPortLineEditorQuotingCharacter_Object = MibTableColumn
basicSerialPortLineEditorQuotingCharacter = _BasicSerialPortLineEditorQuotingCharacter_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 32),
    _BasicSerialPortLineEditorQuotingCharacter_Type()
)
basicSerialPortLineEditorQuotingCharacter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortLineEditorQuotingCharacter.setStatus("mandatory")


class _BasicSerialPortLineEditorRedisplay_Type(Integer32):
    """Custom type basicSerialPortLineEditorRedisplay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BasicSerialPortLineEditorRedisplay_Type.__name__ = "Integer32"
_BasicSerialPortLineEditorRedisplay_Object = MibTableColumn
basicSerialPortLineEditorRedisplay = _BasicSerialPortLineEditorRedisplay_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 33),
    _BasicSerialPortLineEditorRedisplay_Type()
)
basicSerialPortLineEditorRedisplay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortLineEditorRedisplay.setStatus("mandatory")


class _BasicSerialPortQuadartReceiveDiscard_Type(Integer32):
    """Custom type basicSerialPortQuadartReceiveDiscard based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortQuadartReceiveDiscard_Type.__name__ = "Integer32"
_BasicSerialPortQuadartReceiveDiscard_Object = MibTableColumn
basicSerialPortQuadartReceiveDiscard = _BasicSerialPortQuadartReceiveDiscard_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 34),
    _BasicSerialPortQuadartReceiveDiscard_Type()
)
basicSerialPortQuadartReceiveDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortQuadartReceiveDiscard.setStatus("mandatory")


class _BasicSerialPortAPDProtocols_Type(OctetString):
    """Custom type basicSerialPortAPDProtocols based on OctetString"""
    defaultHexValue = "00"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(2, 2),
    )


_BasicSerialPortAPDProtocols_Type.__name__ = "OctetString"
_BasicSerialPortAPDProtocols_Object = MibTableColumn
basicSerialPortAPDProtocols = _BasicSerialPortAPDProtocols_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 35),
    _BasicSerialPortAPDProtocols_Type()
)
basicSerialPortAPDProtocols.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortAPDProtocols.setStatus("mandatory")


class _BasicSerialPortAPDTimeout_Type(Integer32):
    """Custom type basicSerialPortAPDTimeout based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BasicSerialPortAPDTimeout_Type.__name__ = "Integer32"
_BasicSerialPortAPDTimeout_Object = MibTableColumn
basicSerialPortAPDTimeout = _BasicSerialPortAPDTimeout_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 36),
    _BasicSerialPortAPDTimeout_Type()
)
basicSerialPortAPDTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortAPDTimeout.setStatus("mandatory")


class _BasicSerialPortAPDDefaultProtocol_Type(OctetString):
    """Custom type basicSerialPortAPDDefaultProtocol based on OctetString"""
    defaultHexValue = "00"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(2, 2),
    )


_BasicSerialPortAPDDefaultProtocol_Type.__name__ = "OctetString"
_BasicSerialPortAPDDefaultProtocol_Object = MibTableColumn
basicSerialPortAPDDefaultProtocol = _BasicSerialPortAPDDefaultProtocol_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 37),
    _BasicSerialPortAPDDefaultProtocol_Type()
)
basicSerialPortAPDDefaultProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortAPDDefaultProtocol.setStatus("mandatory")


class _BasicSerialPortUsernameCharSet_Type(Integer32):
    """Custom type basicSerialPortUsernameCharSet based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("seven-bit", 2))
    )


_BasicSerialPortUsernameCharSet_Type.__name__ = "Integer32"
_BasicSerialPortUsernameCharSet_Object = MibTableColumn
basicSerialPortUsernameCharSet = _BasicSerialPortUsernameCharSet_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 38),
    _BasicSerialPortUsernameCharSet_Type()
)
basicSerialPortUsernameCharSet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortUsernameCharSet.setStatus("mandatory")


class _BasicSerialPortAutoHangup_Type(Integer32):
    """Custom type basicSerialPortAutoHangup based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortAutoHangup_Type.__name__ = "Integer32"
_BasicSerialPortAutoHangup_Object = MibTableColumn
basicSerialPortAutoHangup = _BasicSerialPortAutoHangup_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 39),
    _BasicSerialPortAutoHangup_Type()
)
basicSerialPortAutoHangup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortAutoHangup.setStatus("mandatory")


class _BasicSerialPortCommandSize_Type(Integer32):
    """Custom type basicSerialPortCommandSize based on Integer32"""
    defaultValue = 80

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(80, 16384),
    )


_BasicSerialPortCommandSize_Type.__name__ = "Integer32"
_BasicSerialPortCommandSize_Object = MibTableColumn
basicSerialPortCommandSize = _BasicSerialPortCommandSize_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 40),
    _BasicSerialPortCommandSize_Type()
)
basicSerialPortCommandSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortCommandSize.setStatus("mandatory")


class _BasicSerialPortAutoProtocolDetectPrompt_Type(Integer32):
    """Custom type basicSerialPortAutoProtocolDetectPrompt based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortAutoProtocolDetectPrompt_Type.__name__ = "Integer32"
_BasicSerialPortAutoProtocolDetectPrompt_Object = MibTableColumn
basicSerialPortAutoProtocolDetectPrompt = _BasicSerialPortAutoProtocolDetectPrompt_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 41),
    _BasicSerialPortAutoProtocolDetectPrompt_Type()
)
basicSerialPortAutoProtocolDetectPrompt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortAutoProtocolDetectPrompt.setStatus("mandatory")


class _BasicSerialPortUsernamePrompt_Type(DisplayString):
    """Custom type basicSerialPortUsernamePrompt based on DisplayString"""
    defaultValue = OctetString("Enter username>")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 25),
    )


_BasicSerialPortUsernamePrompt_Type.__name__ = "DisplayString"
_BasicSerialPortUsernamePrompt_Object = MibTableColumn
basicSerialPortUsernamePrompt = _BasicSerialPortUsernamePrompt_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 42),
    _BasicSerialPortUsernamePrompt_Type()
)
basicSerialPortUsernamePrompt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortUsernamePrompt.setStatus("mandatory")


class _BasicSerialPortPasswordPrompt_Type(DisplayString):
    """Custom type basicSerialPortPasswordPrompt based on DisplayString"""
    defaultValue = OctetString("Enter user password>")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 25),
    )


_BasicSerialPortPasswordPrompt_Type.__name__ = "DisplayString"
_BasicSerialPortPasswordPrompt_Object = MibTableColumn
basicSerialPortPasswordPrompt = _BasicSerialPortPasswordPrompt_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 43),
    _BasicSerialPortPasswordPrompt_Type()
)
basicSerialPortPasswordPrompt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortPasswordPrompt.setStatus("mandatory")


class _BasicSerialPortAutoProtocolDetectSecurityInteractiveOnly_Type(Integer32):
    """Custom type basicSerialPortAutoProtocolDetectSecurityInteractiveOnly based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortAutoProtocolDetectSecurityInteractiveOnly_Type.__name__ = "Integer32"
_BasicSerialPortAutoProtocolDetectSecurityInteractiveOnly_Object = MibTableColumn
basicSerialPortAutoProtocolDetectSecurityInteractiveOnly = _BasicSerialPortAutoProtocolDetectSecurityInteractiveOnly_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 44),
    _BasicSerialPortAutoProtocolDetectSecurityInteractiveOnly_Type()
)
basicSerialPortAutoProtocolDetectSecurityInteractiveOnly.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortAutoProtocolDetectSecurityInteractiveOnly.setStatus("mandatory")


class _BasicSerialPortDedicatedUserData_Type(DisplayString):
    """Custom type basicSerialPortDedicatedUserData based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_BasicSerialPortDedicatedUserData_Type.__name__ = "DisplayString"
_BasicSerialPortDedicatedUserData_Object = MibTableColumn
basicSerialPortDedicatedUserData = _BasicSerialPortDedicatedUserData_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 45),
    _BasicSerialPortDedicatedUserData_Type()
)
basicSerialPortDedicatedUserData.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortDedicatedUserData.setStatus("mandatory")


class _BasicSerialPortIpAutoDiscovery_Type(Integer32):
    """Custom type basicSerialPortIpAutoDiscovery based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortIpAutoDiscovery_Type.__name__ = "Integer32"
_BasicSerialPortIpAutoDiscovery_Object = MibTableColumn
basicSerialPortIpAutoDiscovery = _BasicSerialPortIpAutoDiscovery_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 47),
    _BasicSerialPortIpAutoDiscovery_Type()
)
basicSerialPortIpAutoDiscovery.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortIpAutoDiscovery.setStatus("deprecated")


class _BasicSerialPortDedicatedKickStartData_Type(DisplayString):
    """Custom type basicSerialPortDedicatedKickStartData based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_BasicSerialPortDedicatedKickStartData_Type.__name__ = "DisplayString"
_BasicSerialPortDedicatedKickStartData_Object = MibTableColumn
basicSerialPortDedicatedKickStartData = _BasicSerialPortDedicatedKickStartData_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 48),
    _BasicSerialPortDedicatedKickStartData_Type()
)
basicSerialPortDedicatedKickStartData.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortDedicatedKickStartData.setStatus("mandatory")


class _BasicSerialPortBreakLength_Type(Integer32):
    """Custom type basicSerialPortBreakLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ms250", 1),
          ("ms500", 2),
          ("ms750", 3))
    )


_BasicSerialPortBreakLength_Type.__name__ = "Integer32"
_BasicSerialPortBreakLength_Object = MibTableColumn
basicSerialPortBreakLength = _BasicSerialPortBreakLength_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 50),
    _BasicSerialPortBreakLength_Type()
)
basicSerialPortBreakLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortBreakLength.setStatus("mandatory")


class _BasicSerialPortRotaryRoundRobin_Type(Integer32):
    """Custom type basicSerialPortRotaryRoundRobin based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortRotaryRoundRobin_Type.__name__ = "Integer32"
_BasicSerialPortRotaryRoundRobin_Object = MibTableColumn
basicSerialPortRotaryRoundRobin = _BasicSerialPortRotaryRoundRobin_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 51),
    _BasicSerialPortRotaryRoundRobin_Type()
)
basicSerialPortRotaryRoundRobin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortRotaryRoundRobin.setStatus("mandatory")


class _BasicSerialPortWelcomeBeforeAuthentication_Type(Integer32):
    """Custom type basicSerialPortWelcomeBeforeAuthentication based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortWelcomeBeforeAuthentication_Type.__name__ = "Integer32"
_BasicSerialPortWelcomeBeforeAuthentication_Object = MibTableColumn
basicSerialPortWelcomeBeforeAuthentication = _BasicSerialPortWelcomeBeforeAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 52),
    _BasicSerialPortWelcomeBeforeAuthentication_Type()
)
basicSerialPortWelcomeBeforeAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortWelcomeBeforeAuthentication.setStatus("mandatory")


class _BasicSerialPortGatewayAutoDiscovery_Type(Integer32):
    """Custom type basicSerialPortGatewayAutoDiscovery based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortGatewayAutoDiscovery_Type.__name__ = "Integer32"
_BasicSerialPortGatewayAutoDiscovery_Object = MibTableColumn
basicSerialPortGatewayAutoDiscovery = _BasicSerialPortGatewayAutoDiscovery_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 53),
    _BasicSerialPortGatewayAutoDiscovery_Type()
)
basicSerialPortGatewayAutoDiscovery.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortGatewayAutoDiscovery.setStatus("deprecated")


class _BasicSerialPortSubnetAutoDiscovery_Type(Integer32):
    """Custom type basicSerialPortSubnetAutoDiscovery based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortSubnetAutoDiscovery_Type.__name__ = "Integer32"
_BasicSerialPortSubnetAutoDiscovery_Object = MibTableColumn
basicSerialPortSubnetAutoDiscovery = _BasicSerialPortSubnetAutoDiscovery_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 54),
    _BasicSerialPortSubnetAutoDiscovery_Type()
)
basicSerialPortSubnetAutoDiscovery.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortSubnetAutoDiscovery.setStatus("deprecated")


class _BasicSerialPortRaiseLowerDtr_Type(Integer32):
    """Custom type basicSerialPortRaiseLowerDtr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("high", 2),
          ("low", 1))
    )


_BasicSerialPortRaiseLowerDtr_Type.__name__ = "Integer32"
_BasicSerialPortRaiseLowerDtr_Object = MibTableColumn
basicSerialPortRaiseLowerDtr = _BasicSerialPortRaiseLowerDtr_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 55),
    _BasicSerialPortRaiseLowerDtr_Type()
)
basicSerialPortRaiseLowerDtr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortRaiseLowerDtr.setStatus("mandatory")


class _BasicSerialPortRaiseControlDtr_Type(Integer32):
    """Custom type basicSerialPortRaiseControlDtr based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortRaiseControlDtr_Type.__name__ = "Integer32"
_BasicSerialPortRaiseControlDtr_Object = MibTableColumn
basicSerialPortRaiseControlDtr = _BasicSerialPortRaiseControlDtr_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 56),
    _BasicSerialPortRaiseControlDtr_Type()
)
basicSerialPortRaiseControlDtr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortRaiseControlDtr.setStatus("mandatory")


class _BasicSerialPortIpConfigureBootp_Type(Integer32):
    """Custom type basicSerialPortIpConfigureBootp based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSerialPortIpConfigureBootp_Type.__name__ = "Integer32"
_BasicSerialPortIpConfigureBootp_Object = MibTableColumn
basicSerialPortIpConfigureBootp = _BasicSerialPortIpConfigureBootp_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 18, 1, 57),
    _BasicSerialPortIpConfigureBootp_Type()
)
basicSerialPortIpConfigureBootp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicSerialPortIpConfigureBootp.setStatus("deprecated")


class _BasicConsoleLogoutDisconnect_Type(Integer32):
    """Custom type basicConsoleLogoutDisconnect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicConsoleLogoutDisconnect_Type.__name__ = "Integer32"
_BasicConsoleLogoutDisconnect_Object = MibScalar
basicConsoleLogoutDisconnect = _BasicConsoleLogoutDisconnect_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 19),
    _BasicConsoleLogoutDisconnect_Type()
)
basicConsoleLogoutDisconnect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicConsoleLogoutDisconnect.setStatus("mandatory")


class _BasicControlledPorts_Type(Integer32):
    """Custom type basicControlledPorts based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicControlledPorts_Type.__name__ = "Integer32"
_BasicControlledPorts_Object = MibScalar
basicControlledPorts = _BasicControlledPorts_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 20),
    _BasicControlledPorts_Type()
)
basicControlledPorts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicControlledPorts.setStatus("mandatory")
_BasicPortSessionTable_Object = MibTable
basicPortSessionTable = _BasicPortSessionTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 21)
)
if mibBuilder.loadTexts:
    basicPortSessionTable.setStatus("mandatory")
_BasicPortSessEntry_Object = MibTableRow
basicPortSessEntry = _BasicPortSessEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 21, 1)
)
basicPortSessEntry.setIndexNames(
    (0, "MRVINREACH", "basicPortPortIndex"),
    (0, "MRVINREACH", "basicPortSessIndex"),
)
if mibBuilder.loadTexts:
    basicPortSessEntry.setStatus("mandatory")
_BasicPortPortIndex_Type = Integer32
_BasicPortPortIndex_Object = MibTableColumn
basicPortPortIndex = _BasicPortPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 21, 1, 1),
    _BasicPortPortIndex_Type()
)
basicPortPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPortPortIndex.setStatus("mandatory")
_BasicPortSessIndex_Type = Integer32
_BasicPortSessIndex_Object = MibTableColumn
basicPortSessIndex = _BasicPortSessIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 21, 1, 2),
    _BasicPortSessIndex_Type()
)
basicPortSessIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPortSessIndex.setStatus("mandatory")


class _BasicSessControlled_Type(Integer32):
    """Custom type basicSessControlled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicSessControlled_Type.__name__ = "Integer32"
_BasicSessControlled_Object = MibTableColumn
basicSessControlled = _BasicSessControlled_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 21, 1, 3),
    _BasicSessControlled_Type()
)
basicSessControlled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicSessControlled.setStatus("mandatory")


class _BasicPortSessEncryption_Type(Integer32):
    """Custom type basicPortSessEncryption based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortSessEncryption_Type.__name__ = "Integer32"
_BasicPortSessEncryption_Object = MibScalar
basicPortSessEncryption = _BasicPortSessEncryption_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 22),
    _BasicPortSessEncryption_Type()
)
basicPortSessEncryption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortSessEncryption.setStatus("mandatory")


class _BasicTemperatureUnits_Type(Integer32):
    """Custom type basicTemperatureUnits based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("celcius", 2),
          ("fahrenheit", 1))
    )


_BasicTemperatureUnits_Type.__name__ = "Integer32"
_BasicTemperatureUnits_Object = MibScalar
basicTemperatureUnits = _BasicTemperatureUnits_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 23),
    _BasicTemperatureUnits_Type()
)
basicTemperatureUnits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicTemperatureUnits.setStatus("mandatory")


class _BasicEnvironmentalManagerCircuitBreaker_Type(Integer32):
    """Custom type basicEnvironmentalManagerCircuitBreaker based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicEnvironmentalManagerCircuitBreaker_Type.__name__ = "Integer32"
_BasicEnvironmentalManagerCircuitBreaker_Object = MibScalar
basicEnvironmentalManagerCircuitBreaker = _BasicEnvironmentalManagerCircuitBreaker_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 24),
    _BasicEnvironmentalManagerCircuitBreaker_Type()
)
basicEnvironmentalManagerCircuitBreaker.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicEnvironmentalManagerCircuitBreaker.setStatus("mandatory")
_BasicContactClosureOrAlarmInputTable_Object = MibTable
basicContactClosureOrAlarmInputTable = _BasicContactClosureOrAlarmInputTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 25)
)
if mibBuilder.loadTexts:
    basicContactClosureOrAlarmInputTable.setStatus("mandatory")
_BasicContactClosureOrAlarmInputEntry_Object = MibTableRow
basicContactClosureOrAlarmInputEntry = _BasicContactClosureOrAlarmInputEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 25, 1)
)
basicContactClosureOrAlarmInputEntry.setIndexNames(
    (0, "MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
)
if mibBuilder.loadTexts:
    basicContactClosureOrAlarmInputEntry.setStatus("mandatory")


class _BasicContactClosureOrAlarmInputValue_Type(Integer32):
    """Custom type basicContactClosureOrAlarmInputValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("closed", 2),
          ("open", 1))
    )


_BasicContactClosureOrAlarmInputValue_Type.__name__ = "Integer32"
_BasicContactClosureOrAlarmInputValue_Object = MibTableColumn
basicContactClosureOrAlarmInputValue = _BasicContactClosureOrAlarmInputValue_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 25, 1, 1),
    _BasicContactClosureOrAlarmInputValue_Type()
)
basicContactClosureOrAlarmInputValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicContactClosureOrAlarmInputValue.setStatus("mandatory")


class _BasicContactClosureOrAlarmInputName_Type(DisplayString):
    """Custom type basicContactClosureOrAlarmInputName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_BasicContactClosureOrAlarmInputName_Type.__name__ = "DisplayString"
_BasicContactClosureOrAlarmInputName_Object = MibTableColumn
basicContactClosureOrAlarmInputName = _BasicContactClosureOrAlarmInputName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 25, 1, 2),
    _BasicContactClosureOrAlarmInputName_Type()
)
basicContactClosureOrAlarmInputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicContactClosureOrAlarmInputName.setStatus("mandatory")


class _BasicContactClosureOrAlarmInputTrapEnable_Type(Integer32):
    """Custom type basicContactClosureOrAlarmInputTrapEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicContactClosureOrAlarmInputTrapEnable_Type.__name__ = "Integer32"
_BasicContactClosureOrAlarmInputTrapEnable_Object = MibTableColumn
basicContactClosureOrAlarmInputTrapEnable = _BasicContactClosureOrAlarmInputTrapEnable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 25, 1, 3),
    _BasicContactClosureOrAlarmInputTrapEnable_Type()
)
basicContactClosureOrAlarmInputTrapEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicContactClosureOrAlarmInputTrapEnable.setStatus("mandatory")


class _BasicContactClosureOrAlarmInputFaultSeverity_Type(Integer32):
    """Custom type basicContactClosureOrAlarmInputFaultSeverity based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("critical", 6),
          ("indeterminate", 2),
          ("major", 5),
          ("minor", 4),
          ("warning", 3))
    )


_BasicContactClosureOrAlarmInputFaultSeverity_Type.__name__ = "Integer32"
_BasicContactClosureOrAlarmInputFaultSeverity_Object = MibTableColumn
basicContactClosureOrAlarmInputFaultSeverity = _BasicContactClosureOrAlarmInputFaultSeverity_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 25, 1, 4),
    _BasicContactClosureOrAlarmInputFaultSeverity_Type()
)
basicContactClosureOrAlarmInputFaultSeverity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicContactClosureOrAlarmInputFaultSeverity.setStatus("mandatory")


class _BasicContactClosureOrAlarmInputFaultState_Type(Integer32):
    """Custom type basicContactClosureOrAlarmInputFaultState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("closed", 2),
          ("open", 1))
    )


_BasicContactClosureOrAlarmInputFaultState_Type.__name__ = "Integer32"
_BasicContactClosureOrAlarmInputFaultState_Object = MibTableColumn
basicContactClosureOrAlarmInputFaultState = _BasicContactClosureOrAlarmInputFaultState_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 25, 1, 5),
    _BasicContactClosureOrAlarmInputFaultState_Type()
)
basicContactClosureOrAlarmInputFaultState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicContactClosureOrAlarmInputFaultState.setStatus("mandatory")


class _BasicContactClosureOrAlarmInputStatus_Type(Integer32):
    """Custom type basicContactClosureOrAlarmInputStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("cleared", 1),
          ("critical", 6),
          ("indeterminate", 2),
          ("major", 5),
          ("minor", 4),
          ("warning", 3))
    )


_BasicContactClosureOrAlarmInputStatus_Type.__name__ = "Integer32"
_BasicContactClosureOrAlarmInputStatus_Object = MibTableColumn
basicContactClosureOrAlarmInputStatus = _BasicContactClosureOrAlarmInputStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 25, 1, 6),
    _BasicContactClosureOrAlarmInputStatus_Type()
)
basicContactClosureOrAlarmInputStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicContactClosureOrAlarmInputStatus.setStatus("mandatory")


class _BasicContactClosureOrAlarmInputZone_Type(DisplayString):
    """Custom type basicContactClosureOrAlarmInputZone based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_BasicContactClosureOrAlarmInputZone_Type.__name__ = "DisplayString"
_BasicContactClosureOrAlarmInputZone_Object = MibTableColumn
basicContactClosureOrAlarmInputZone = _BasicContactClosureOrAlarmInputZone_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 25, 1, 7),
    _BasicContactClosureOrAlarmInputZone_Type()
)
basicContactClosureOrAlarmInputZone.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicContactClosureOrAlarmInputZone.setStatus("mandatory")


class _BasicContactClosureOrAlarmInputRelatedEquipment_Type(DisplayString):
    """Custom type basicContactClosureOrAlarmInputRelatedEquipment based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_BasicContactClosureOrAlarmInputRelatedEquipment_Type.__name__ = "DisplayString"
_BasicContactClosureOrAlarmInputRelatedEquipment_Object = MibTableColumn
basicContactClosureOrAlarmInputRelatedEquipment = _BasicContactClosureOrAlarmInputRelatedEquipment_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 25, 1, 8),
    _BasicContactClosureOrAlarmInputRelatedEquipment_Type()
)
basicContactClosureOrAlarmInputRelatedEquipment.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicContactClosureOrAlarmInputRelatedEquipment.setStatus("mandatory")


class _BasicContactClosureOrAlarmInputSiteId_Type(DisplayString):
    """Custom type basicContactClosureOrAlarmInputSiteId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_BasicContactClosureOrAlarmInputSiteId_Type.__name__ = "DisplayString"
_BasicContactClosureOrAlarmInputSiteId_Object = MibTableColumn
basicContactClosureOrAlarmInputSiteId = _BasicContactClosureOrAlarmInputSiteId_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 25, 1, 9),
    _BasicContactClosureOrAlarmInputSiteId_Type()
)
basicContactClosureOrAlarmInputSiteId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicContactClosureOrAlarmInputSiteId.setStatus("mandatory")
_BasicContactClosureOrAlarmInputIndex_Type = Integer32
_BasicContactClosureOrAlarmInputIndex_Object = MibTableColumn
basicContactClosureOrAlarmInputIndex = _BasicContactClosureOrAlarmInputIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 25, 1, 10),
    _BasicContactClosureOrAlarmInputIndex_Type()
)
basicContactClosureOrAlarmInputIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicContactClosureOrAlarmInputIndex.setStatus("mandatory")


class _BasicContactClosureOrAlarmInputManufacturer_Type(DisplayString):
    """Custom type basicContactClosureOrAlarmInputManufacturer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_BasicContactClosureOrAlarmInputManufacturer_Type.__name__ = "DisplayString"
_BasicContactClosureOrAlarmInputManufacturer_Object = MibTableColumn
basicContactClosureOrAlarmInputManufacturer = _BasicContactClosureOrAlarmInputManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 25, 1, 11),
    _BasicContactClosureOrAlarmInputManufacturer_Type()
)
basicContactClosureOrAlarmInputManufacturer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicContactClosureOrAlarmInputManufacturer.setStatus("mandatory")


class _BasicContactClosureOrAlarmInputModel_Type(DisplayString):
    """Custom type basicContactClosureOrAlarmInputModel based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_BasicContactClosureOrAlarmInputModel_Type.__name__ = "DisplayString"
_BasicContactClosureOrAlarmInputModel_Object = MibTableColumn
basicContactClosureOrAlarmInputModel = _BasicContactClosureOrAlarmInputModel_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 25, 1, 12),
    _BasicContactClosureOrAlarmInputModel_Type()
)
basicContactClosureOrAlarmInputModel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicContactClosureOrAlarmInputModel.setStatus("mandatory")
_BasicPowerOutletTable_Object = MibTable
basicPowerOutletTable = _BasicPowerOutletTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 26)
)
if mibBuilder.loadTexts:
    basicPowerOutletTable.setStatus("mandatory")
_BasicPowerOutletEntry_Object = MibTableRow
basicPowerOutletEntry = _BasicPowerOutletEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 26, 1)
)
basicPowerOutletEntry.setIndexNames(
    (0, "MRVINREACH", "basicPowerOutletIndex"),
)
if mibBuilder.loadTexts:
    basicPowerOutletEntry.setStatus("mandatory")


class _BasicPowerOutletOnOff_Type(Integer32):
    """Custom type basicPowerOutletOnOff based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 2))
    )


_BasicPowerOutletOnOff_Type.__name__ = "Integer32"
_BasicPowerOutletOnOff_Object = MibTableColumn
basicPowerOutletOnOff = _BasicPowerOutletOnOff_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 26, 1, 1),
    _BasicPowerOutletOnOff_Type()
)
basicPowerOutletOnOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPowerOutletOnOff.setStatus("mandatory")


class _BasicPowerOutletReboot_Type(Integer32):
    """Custom type basicPowerOutletReboot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_BasicPowerOutletReboot_Type.__name__ = "Integer32"
_BasicPowerOutletReboot_Object = MibTableColumn
basicPowerOutletReboot = _BasicPowerOutletReboot_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 26, 1, 2),
    _BasicPowerOutletReboot_Type()
)
basicPowerOutletReboot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPowerOutletReboot.setStatus("mandatory")


class _BasicPowerOutletName_Type(DisplayString):
    """Custom type basicPowerOutletName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_BasicPowerOutletName_Type.__name__ = "DisplayString"
_BasicPowerOutletName_Object = MibTableColumn
basicPowerOutletName = _BasicPowerOutletName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 26, 1, 3),
    _BasicPowerOutletName_Type()
)
basicPowerOutletName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPowerOutletName.setStatus("mandatory")


class _BasicPowerOutletRedundant_Type(Integer32):
    """Custom type basicPowerOutletRedundant based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPowerOutletRedundant_Type.__name__ = "Integer32"
_BasicPowerOutletRedundant_Object = MibTableColumn
basicPowerOutletRedundant = _BasicPowerOutletRedundant_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 26, 1, 4),
    _BasicPowerOutletRedundant_Type()
)
basicPowerOutletRedundant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPowerOutletRedundant.setStatus("mandatory")


class _BasicPowerOutletConsoleName_Type(DisplayString):
    """Custom type basicPowerOutletConsoleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_BasicPowerOutletConsoleName_Type.__name__ = "DisplayString"
_BasicPowerOutletConsoleName_Object = MibTableColumn
basicPowerOutletConsoleName = _BasicPowerOutletConsoleName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 26, 1, 5),
    _BasicPowerOutletConsoleName_Type()
)
basicPowerOutletConsoleName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPowerOutletConsoleName.setStatus("mandatory")


class _BasicPowerOutletHighCurrent_Type(Integer32):
    """Custom type basicPowerOutletHighCurrent based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPowerOutletHighCurrent_Type.__name__ = "Integer32"
_BasicPowerOutletHighCurrent_Object = MibTableColumn
basicPowerOutletHighCurrent = _BasicPowerOutletHighCurrent_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 26, 1, 6),
    _BasicPowerOutletHighCurrent_Type()
)
basicPowerOutletHighCurrent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPowerOutletHighCurrent.setStatus("mandatory")
_BasicPowerOutletIndex_Type = Integer32
_BasicPowerOutletIndex_Object = MibTableColumn
basicPowerOutletIndex = _BasicPowerOutletIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 26, 1, 10),
    _BasicPowerOutletIndex_Type()
)
basicPowerOutletIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPowerOutletIndex.setStatus("mandatory")
_BasicTemperatureHumiditySensor_ObjectIdentity = ObjectIdentity
basicTemperatureHumiditySensor = _BasicTemperatureHumiditySensor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 27)
)
_BasicTemperatureSensorTable_Object = MibTable
basicTemperatureSensorTable = _BasicTemperatureSensorTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 27, 1)
)
if mibBuilder.loadTexts:
    basicTemperatureSensorTable.setStatus("mandatory")
_BasicTemperatureSensorEntry_Object = MibTableRow
basicTemperatureSensorEntry = _BasicTemperatureSensorEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 27, 1, 1)
)
basicTemperatureSensorEntry.setIndexNames(
    (0, "MRVINREACH", "basicTemperatureSensorIndex"),
)
if mibBuilder.loadTexts:
    basicTemperatureSensorEntry.setStatus("mandatory")
_BasicTempTrapHighThreshold_Type = Integer32
_BasicTempTrapHighThreshold_Object = MibTableColumn
basicTempTrapHighThreshold = _BasicTempTrapHighThreshold_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 27, 1, 1, 1),
    _BasicTempTrapHighThreshold_Type()
)
basicTempTrapHighThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicTempTrapHighThreshold.setStatus("mandatory")
_BasicTempTrapLowThreshold_Type = Integer32
_BasicTempTrapLowThreshold_Object = MibTableColumn
basicTempTrapLowThreshold = _BasicTempTrapLowThreshold_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 27, 1, 1, 2),
    _BasicTempTrapLowThreshold_Type()
)
basicTempTrapLowThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicTempTrapLowThreshold.setStatus("mandatory")


class _BasicTemperatureSensor_Type(Integer32):
    """Custom type basicTemperatureSensor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicTemperatureSensor_Type.__name__ = "Integer32"
_BasicTemperatureSensor_Object = MibTableColumn
basicTemperatureSensor = _BasicTemperatureSensor_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 27, 1, 1, 3),
    _BasicTemperatureSensor_Type()
)
basicTemperatureSensor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicTemperatureSensor.setStatus("mandatory")
_BasicTemperatureValue_Type = Integer32
_BasicTemperatureValue_Object = MibTableColumn
basicTemperatureValue = _BasicTemperatureValue_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 27, 1, 1, 4),
    _BasicTemperatureValue_Type()
)
basicTemperatureValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicTemperatureValue.setStatus("mandatory")


class _BasicTemperatureAlarmSeverity_Type(Integer32):
    """Custom type basicTemperatureAlarmSeverity based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("critical", 6),
          ("indeterminate", 2),
          ("major", 5),
          ("minor", 4),
          ("warning", 3))
    )


_BasicTemperatureAlarmSeverity_Type.__name__ = "Integer32"
_BasicTemperatureAlarmSeverity_Object = MibTableColumn
basicTemperatureAlarmSeverity = _BasicTemperatureAlarmSeverity_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 27, 1, 1, 5),
    _BasicTemperatureAlarmSeverity_Type()
)
basicTemperatureAlarmSeverity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicTemperatureAlarmSeverity.setStatus("mandatory")


class _BasicTemperatureAlarmStatus_Type(Integer32):
    """Custom type basicTemperatureAlarmStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("cleared", 1),
          ("critical", 6),
          ("indeterminate", 2),
          ("major", 5),
          ("minor", 4),
          ("warning", 3))
    )


_BasicTemperatureAlarmStatus_Type.__name__ = "Integer32"
_BasicTemperatureAlarmStatus_Object = MibTableColumn
basicTemperatureAlarmStatus = _BasicTemperatureAlarmStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 27, 1, 1, 6),
    _BasicTemperatureAlarmStatus_Type()
)
basicTemperatureAlarmStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicTemperatureAlarmStatus.setStatus("mandatory")


class _BasicTemperatureHumiditySensorName_Type(DisplayString):
    """Custom type basicTemperatureHumiditySensorName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_BasicTemperatureHumiditySensorName_Type.__name__ = "DisplayString"
_BasicTemperatureHumiditySensorName_Object = MibTableColumn
basicTemperatureHumiditySensorName = _BasicTemperatureHumiditySensorName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 27, 1, 1, 7),
    _BasicTemperatureHumiditySensorName_Type()
)
basicTemperatureHumiditySensorName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicTemperatureHumiditySensorName.setStatus("mandatory")
_BasicTemperatureSensorIndex_Type = Integer32
_BasicTemperatureSensorIndex_Object = MibTableColumn
basicTemperatureSensorIndex = _BasicTemperatureSensorIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 27, 1, 1, 10),
    _BasicTemperatureSensorIndex_Type()
)
basicTemperatureSensorIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicTemperatureSensorIndex.setStatus("mandatory")
_BasicHumiditySensorTable_Object = MibTable
basicHumiditySensorTable = _BasicHumiditySensorTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 27, 2)
)
if mibBuilder.loadTexts:
    basicHumiditySensorTable.setStatus("mandatory")
_BasicHumiditySensorEntry_Object = MibTableRow
basicHumiditySensorEntry = _BasicHumiditySensorEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 27, 2, 1)
)
basicHumiditySensorEntry.setIndexNames(
    (0, "MRVINREACH", "basicHumiditySensorIndex"),
)
if mibBuilder.loadTexts:
    basicHumiditySensorEntry.setStatus("mandatory")
_BasicHumidityTrapHighThreshold_Type = Integer32
_BasicHumidityTrapHighThreshold_Object = MibTableColumn
basicHumidityTrapHighThreshold = _BasicHumidityTrapHighThreshold_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 27, 2, 1, 1),
    _BasicHumidityTrapHighThreshold_Type()
)
basicHumidityTrapHighThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicHumidityTrapHighThreshold.setStatus("mandatory")
_BasicHumidityTrapLowThreshold_Type = Integer32
_BasicHumidityTrapLowThreshold_Object = MibTableColumn
basicHumidityTrapLowThreshold = _BasicHumidityTrapLowThreshold_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 27, 2, 1, 2),
    _BasicHumidityTrapLowThreshold_Type()
)
basicHumidityTrapLowThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicHumidityTrapLowThreshold.setStatus("mandatory")


class _BasicHumiditySensor_Type(Integer32):
    """Custom type basicHumiditySensor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicHumiditySensor_Type.__name__ = "Integer32"
_BasicHumiditySensor_Object = MibTableColumn
basicHumiditySensor = _BasicHumiditySensor_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 27, 2, 1, 3),
    _BasicHumiditySensor_Type()
)
basicHumiditySensor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicHumiditySensor.setStatus("mandatory")
_BasicHumidityValue_Type = Integer32
_BasicHumidityValue_Object = MibTableColumn
basicHumidityValue = _BasicHumidityValue_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 27, 2, 1, 4),
    _BasicHumidityValue_Type()
)
basicHumidityValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicHumidityValue.setStatus("mandatory")


class _BasicHumidityAlarmSeverity_Type(Integer32):
    """Custom type basicHumidityAlarmSeverity based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("critical", 6),
          ("indeterminate", 2),
          ("major", 5),
          ("minor", 4),
          ("warning", 3))
    )


_BasicHumidityAlarmSeverity_Type.__name__ = "Integer32"
_BasicHumidityAlarmSeverity_Object = MibTableColumn
basicHumidityAlarmSeverity = _BasicHumidityAlarmSeverity_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 27, 2, 1, 5),
    _BasicHumidityAlarmSeverity_Type()
)
basicHumidityAlarmSeverity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicHumidityAlarmSeverity.setStatus("mandatory")


class _BasicHumidityAlarmStatus_Type(Integer32):
    """Custom type basicHumidityAlarmStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("cleared", 1),
          ("critical", 6),
          ("indeterminate", 2),
          ("major", 5),
          ("minor", 4),
          ("warning", 3))
    )


_BasicHumidityAlarmStatus_Type.__name__ = "Integer32"
_BasicHumidityAlarmStatus_Object = MibTableColumn
basicHumidityAlarmStatus = _BasicHumidityAlarmStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 27, 2, 1, 6),
    _BasicHumidityAlarmStatus_Type()
)
basicHumidityAlarmStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicHumidityAlarmStatus.setStatus("mandatory")
_BasicHumiditySensorIndex_Type = Integer32
_BasicHumiditySensorIndex_Object = MibTableColumn
basicHumiditySensorIndex = _BasicHumiditySensorIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 27, 2, 1, 10),
    _BasicHumiditySensorIndex_Type()
)
basicHumiditySensorIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicHumiditySensorIndex.setStatus("mandatory")
_BasicControlSignalTable_Object = MibTable
basicControlSignalTable = _BasicControlSignalTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 28)
)
if mibBuilder.loadTexts:
    basicControlSignalTable.setStatus("mandatory")
_BasicControlSignalEntry_Object = MibTableRow
basicControlSignalEntry = _BasicControlSignalEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 28, 1)
)
basicControlSignalEntry.setIndexNames(
    (0, "MRVINREACH", "basicControlSignalIndex"),
)
if mibBuilder.loadTexts:
    basicControlSignalEntry.setStatus("mandatory")


class _BasicControlSignalValue_Type(Integer32):
    """Custom type basicControlSignalValue based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("high", 1),
          ("low", 2))
    )


_BasicControlSignalValue_Type.__name__ = "Integer32"
_BasicControlSignalValue_Object = MibTableColumn
basicControlSignalValue = _BasicControlSignalValue_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 28, 1, 1),
    _BasicControlSignalValue_Type()
)
basicControlSignalValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicControlSignalValue.setStatus("mandatory")
_BasicControlSignalIndex_Type = Integer32
_BasicControlSignalIndex_Object = MibTableColumn
basicControlSignalIndex = _BasicControlSignalIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 28, 1, 10),
    _BasicControlSignalIndex_Type()
)
basicControlSignalIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicControlSignalIndex.setStatus("mandatory")


class _BasicPowerAlarmTimer_Type(Integer32):
    """Custom type basicPowerAlarmTimer based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_BasicPowerAlarmTimer_Type.__name__ = "Integer32"
_BasicPowerAlarmTimer_Object = MibScalar
basicPowerAlarmTimer = _BasicPowerAlarmTimer_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 29),
    _BasicPowerAlarmTimer_Type()
)
basicPowerAlarmTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPowerAlarmTimer.setStatus("mandatory")
_BasicControlOutputTable_Object = MibTable
basicControlOutputTable = _BasicControlOutputTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 30)
)
if mibBuilder.loadTexts:
    basicControlOutputTable.setStatus("mandatory")
_BasicControlOutputEntry_Object = MibTableRow
basicControlOutputEntry = _BasicControlOutputEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 30, 1)
)
basicControlOutputEntry.setIndexNames(
    (0, "MRVINREACH", "basicControlOutputIndex"),
)
if mibBuilder.loadTexts:
    basicControlOutputEntry.setStatus("mandatory")


class _BasicControlOutputSignalDtrRts_Type(Integer32):
    """Custom type basicControlOutputSignalDtrRts based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("high", 2),
          ("low", 1))
    )


_BasicControlOutputSignalDtrRts_Type.__name__ = "Integer32"
_BasicControlOutputSignalDtrRts_Object = MibTableColumn
basicControlOutputSignalDtrRts = _BasicControlOutputSignalDtrRts_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 30, 1, 1),
    _BasicControlOutputSignalDtrRts_Type()
)
basicControlOutputSignalDtrRts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicControlOutputSignalDtrRts.setStatus("mandatory")


class _BasicControlOutputName_Type(DisplayString):
    """Custom type basicControlOutputName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_BasicControlOutputName_Type.__name__ = "DisplayString"
_BasicControlOutputName_Object = MibTableColumn
basicControlOutputName = _BasicControlOutputName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 30, 1, 2),
    _BasicControlOutputName_Type()
)
basicControlOutputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicControlOutputName.setStatus("mandatory")
_BasicControlOutputIndex_Type = Integer32
_BasicControlOutputIndex_Object = MibTableColumn
basicControlOutputIndex = _BasicControlOutputIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 30, 1, 10),
    _BasicControlOutputIndex_Type()
)
basicControlOutputIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicControlOutputIndex.setStatus("mandatory")


class _BasicPowerStatusFuseA_Type(Integer32):
    """Custom type basicPowerStatusFuseA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 2))
    )


_BasicPowerStatusFuseA_Type.__name__ = "Integer32"
_BasicPowerStatusFuseA_Object = MibScalar
basicPowerStatusFuseA = _BasicPowerStatusFuseA_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 31),
    _BasicPowerStatusFuseA_Type()
)
basicPowerStatusFuseA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPowerStatusFuseA.setStatus("mandatory")


class _BasicPowerStatusFuseB_Type(Integer32):
    """Custom type basicPowerStatusFuseB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 2))
    )


_BasicPowerStatusFuseB_Type.__name__ = "Integer32"
_BasicPowerStatusFuseB_Object = MibScalar
basicPowerStatusFuseB = _BasicPowerStatusFuseB_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 32),
    _BasicPowerStatusFuseB_Type()
)
basicPowerStatusFuseB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPowerStatusFuseB.setStatus("mandatory")


class _BasicPowerSupplyStatusA_Type(Integer32):
    """Custom type basicPowerSupplyStatusA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 2))
    )


_BasicPowerSupplyStatusA_Type.__name__ = "Integer32"
_BasicPowerSupplyStatusA_Object = MibScalar
basicPowerSupplyStatusA = _BasicPowerSupplyStatusA_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 33),
    _BasicPowerSupplyStatusA_Type()
)
basicPowerSupplyStatusA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPowerSupplyStatusA.setStatus("mandatory")


class _BasicPowerSupplyStatusB_Type(Integer32):
    """Custom type basicPowerSupplyStatusB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 2))
    )


_BasicPowerSupplyStatusB_Type.__name__ = "Integer32"
_BasicPowerSupplyStatusB_Object = MibScalar
basicPowerSupplyStatusB = _BasicPowerSupplyStatusB_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 34),
    _BasicPowerSupplyStatusB_Type()
)
basicPowerSupplyStatusB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPowerSupplyStatusB.setStatus("mandatory")
_BasicPortTrapTable_Object = MibTable
basicPortTrapTable = _BasicPortTrapTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 35)
)
if mibBuilder.loadTexts:
    basicPortTrapTable.setStatus("mandatory")
_BasicPortTrapEntry_Object = MibTableRow
basicPortTrapEntry = _BasicPortTrapEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 35, 1)
)
basicPortTrapEntry.setIndexNames(
    (0, "MRVINREACH", "basicPortTrapIndex"),
    (0, "MRVINREACH", "basicPortSignalName"),
)
if mibBuilder.loadTexts:
    basicPortTrapEntry.setStatus("mandatory")
_BasicPortTrapIndex_Type = Integer32
_BasicPortTrapIndex_Object = MibTableColumn
basicPortTrapIndex = _BasicPortTrapIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 35, 1, 1),
    _BasicPortTrapIndex_Type()
)
basicPortTrapIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPortTrapIndex.setStatus("mandatory")


class _BasicPortSignalName_Type(Integer32):
    """Custom type basicPortSignalName based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("cts", 2),
          ("dcd", 6),
          ("dsr", 3),
          ("dtr", 4),
          ("ri", 5),
          ("rts", 1))
    )


_BasicPortSignalName_Type.__name__ = "Integer32"
_BasicPortSignalName_Object = MibTableColumn
basicPortSignalName = _BasicPortSignalName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 35, 1, 2),
    _BasicPortSignalName_Type()
)
basicPortSignalName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPortSignalName.setStatus("mandatory")


class _BasicPortTrapStatus_Type(Integer32):
    """Custom type basicPortTrapStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicPortTrapStatus_Type.__name__ = "Integer32"
_BasicPortTrapStatus_Object = MibTableColumn
basicPortTrapStatus = _BasicPortTrapStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 35, 1, 3),
    _BasicPortTrapStatus_Type()
)
basicPortTrapStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPortTrapStatus.setStatus("mandatory")
_BasicAlarmMasterInputTable_Object = MibTable
basicAlarmMasterInputTable = _BasicAlarmMasterInputTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 36)
)
if mibBuilder.loadTexts:
    basicAlarmMasterInputTable.setStatus("mandatory")
_BasicAlarmMasterInputEntry_Object = MibTableRow
basicAlarmMasterInputEntry = _BasicAlarmMasterInputEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 36, 1)
)
basicAlarmMasterInputEntry.setIndexNames(
    (0, "MRVINREACH", "basicAlarmMasterInputPort"),
    (0, "MRVINREACH", "basicAlarmMasterInputSlot"),
    (0, "MRVINREACH", "basicAlarmMasterInputPoint"),
)
if mibBuilder.loadTexts:
    basicAlarmMasterInputEntry.setStatus("mandatory")
_BasicAlarmMasterInputPort_Type = Integer32
_BasicAlarmMasterInputPort_Object = MibTableColumn
basicAlarmMasterInputPort = _BasicAlarmMasterInputPort_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 36, 1, 1),
    _BasicAlarmMasterInputPort_Type()
)
basicAlarmMasterInputPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicAlarmMasterInputPort.setStatus("mandatory")
_BasicAlarmMasterInputSlot_Type = Integer32
_BasicAlarmMasterInputSlot_Object = MibTableColumn
basicAlarmMasterInputSlot = _BasicAlarmMasterInputSlot_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 36, 1, 2),
    _BasicAlarmMasterInputSlot_Type()
)
basicAlarmMasterInputSlot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicAlarmMasterInputSlot.setStatus("mandatory")
_BasicAlarmMasterInputPoint_Type = Integer32
_BasicAlarmMasterInputPoint_Object = MibTableColumn
basicAlarmMasterInputPoint = _BasicAlarmMasterInputPoint_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 36, 1, 3),
    _BasicAlarmMasterInputPoint_Type()
)
basicAlarmMasterInputPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicAlarmMasterInputPoint.setStatus("mandatory")


class _BasicAlarmMasterInputName_Type(DisplayString):
    """Custom type basicAlarmMasterInputName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_BasicAlarmMasterInputName_Type.__name__ = "DisplayString"
_BasicAlarmMasterInputName_Object = MibTableColumn
basicAlarmMasterInputName = _BasicAlarmMasterInputName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 36, 1, 4),
    _BasicAlarmMasterInputName_Type()
)
basicAlarmMasterInputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicAlarmMasterInputName.setStatus("mandatory")


class _BasicAlarmMasterInputTrapEnable_Type(Integer32):
    """Custom type basicAlarmMasterInputTrapEnable based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicAlarmMasterInputTrapEnable_Type.__name__ = "Integer32"
_BasicAlarmMasterInputTrapEnable_Object = MibTableColumn
basicAlarmMasterInputTrapEnable = _BasicAlarmMasterInputTrapEnable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 36, 1, 5),
    _BasicAlarmMasterInputTrapEnable_Type()
)
basicAlarmMasterInputTrapEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicAlarmMasterInputTrapEnable.setStatus("mandatory")


class _BasicAlarmMasterControlOutputSignal_Type(Integer32):
    """Custom type basicAlarmMasterControlOutputSignal based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("closed", 2),
          ("open", 1))
    )


_BasicAlarmMasterControlOutputSignal_Type.__name__ = "Integer32"
_BasicAlarmMasterControlOutputSignal_Object = MibTableColumn
basicAlarmMasterControlOutputSignal = _BasicAlarmMasterControlOutputSignal_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 36, 1, 6),
    _BasicAlarmMasterControlOutputSignal_Type()
)
basicAlarmMasterControlOutputSignal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicAlarmMasterControlOutputSignal.setStatus("mandatory")


class _BasicAlarmMasterInputEnable_Type(Integer32):
    """Custom type basicAlarmMasterInputEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicAlarmMasterInputEnable_Type.__name__ = "Integer32"
_BasicAlarmMasterInputEnable_Object = MibTableColumn
basicAlarmMasterInputEnable = _BasicAlarmMasterInputEnable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 36, 1, 7),
    _BasicAlarmMasterInputEnable_Type()
)
basicAlarmMasterInputEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicAlarmMasterInputEnable.setStatus("mandatory")


class _BasicAlarmMasterInputDebounceInterval_Type(Integer32):
    """Custom type basicAlarmMasterInputDebounceInterval based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
    )


_BasicAlarmMasterInputDebounceInterval_Type.__name__ = "Integer32"
_BasicAlarmMasterInputDebounceInterval_Object = MibTableColumn
basicAlarmMasterInputDebounceInterval = _BasicAlarmMasterInputDebounceInterval_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 36, 1, 8),
    _BasicAlarmMasterInputDebounceInterval_Type()
)
basicAlarmMasterInputDebounceInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicAlarmMasterInputDebounceInterval.setStatus("mandatory")


class _BasicAlarmMasterInputFaultSeverity_Type(Integer32):
    """Custom type basicAlarmMasterInputFaultSeverity based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("critical", 6),
          ("indeterminate", 2),
          ("major", 5),
          ("minor", 4),
          ("warning", 3))
    )


_BasicAlarmMasterInputFaultSeverity_Type.__name__ = "Integer32"
_BasicAlarmMasterInputFaultSeverity_Object = MibTableColumn
basicAlarmMasterInputFaultSeverity = _BasicAlarmMasterInputFaultSeverity_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 36, 1, 9),
    _BasicAlarmMasterInputFaultSeverity_Type()
)
basicAlarmMasterInputFaultSeverity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicAlarmMasterInputFaultSeverity.setStatus("mandatory")


class _BasicAlarmMasterInputFaultState_Type(Integer32):
    """Custom type basicAlarmMasterInputFaultState based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("closed", 2),
          ("open", 1))
    )


_BasicAlarmMasterInputFaultState_Type.__name__ = "Integer32"
_BasicAlarmMasterInputFaultState_Object = MibTableColumn
basicAlarmMasterInputFaultState = _BasicAlarmMasterInputFaultState_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 36, 1, 10),
    _BasicAlarmMasterInputFaultState_Type()
)
basicAlarmMasterInputFaultState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicAlarmMasterInputFaultState.setStatus("mandatory")


class _BasicAlarmMasterInputStatus_Type(Integer32):
    """Custom type basicAlarmMasterInputStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("cleared", 1),
          ("critical", 6),
          ("indeterminate", 2),
          ("major", 5),
          ("minor", 4),
          ("warning", 3))
    )


_BasicAlarmMasterInputStatus_Type.__name__ = "Integer32"
_BasicAlarmMasterInputStatus_Object = MibTableColumn
basicAlarmMasterInputStatus = _BasicAlarmMasterInputStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 36, 1, 11),
    _BasicAlarmMasterInputStatus_Type()
)
basicAlarmMasterInputStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicAlarmMasterInputStatus.setStatus("mandatory")


class _BasicAlarmMasterInputValue_Type(Integer32):
    """Custom type basicAlarmMasterInputValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("closed", 2),
          ("open", 1))
    )


_BasicAlarmMasterInputValue_Type.__name__ = "Integer32"
_BasicAlarmMasterInputValue_Object = MibTableColumn
basicAlarmMasterInputValue = _BasicAlarmMasterInputValue_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 36, 1, 12),
    _BasicAlarmMasterInputValue_Type()
)
basicAlarmMasterInputValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicAlarmMasterInputValue.setStatus("mandatory")


class _BasicAlarmMasterDisplay_Type(Integer32):
    """Custom type basicAlarmMasterDisplay based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BasicAlarmMasterDisplay_Type.__name__ = "Integer32"
_BasicAlarmMasterDisplay_Object = MibTableColumn
basicAlarmMasterDisplay = _BasicAlarmMasterDisplay_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 36, 1, 13),
    _BasicAlarmMasterDisplay_Type()
)
basicAlarmMasterDisplay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicAlarmMasterDisplay.setStatus("mandatory")


class _BasicAlarmMasterInputZone_Type(DisplayString):
    """Custom type basicAlarmMasterInputZone based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_BasicAlarmMasterInputZone_Type.__name__ = "DisplayString"
_BasicAlarmMasterInputZone_Object = MibTableColumn
basicAlarmMasterInputZone = _BasicAlarmMasterInputZone_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 36, 1, 14),
    _BasicAlarmMasterInputZone_Type()
)
basicAlarmMasterInputZone.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicAlarmMasterInputZone.setStatus("mandatory")


class _BasicAlarmMasterInputRelatedEquipment_Type(DisplayString):
    """Custom type basicAlarmMasterInputRelatedEquipment based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_BasicAlarmMasterInputRelatedEquipment_Type.__name__ = "DisplayString"
_BasicAlarmMasterInputRelatedEquipment_Object = MibTableColumn
basicAlarmMasterInputRelatedEquipment = _BasicAlarmMasterInputRelatedEquipment_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 36, 1, 15),
    _BasicAlarmMasterInputRelatedEquipment_Type()
)
basicAlarmMasterInputRelatedEquipment.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicAlarmMasterInputRelatedEquipment.setStatus("mandatory")


class _BasicAlarmMasterInputSiteId_Type(DisplayString):
    """Custom type basicAlarmMasterInputSiteId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_BasicAlarmMasterInputSiteId_Type.__name__ = "DisplayString"
_BasicAlarmMasterInputSiteId_Object = MibTableColumn
basicAlarmMasterInputSiteId = _BasicAlarmMasterInputSiteId_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 36, 1, 16),
    _BasicAlarmMasterInputSiteId_Type()
)
basicAlarmMasterInputSiteId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicAlarmMasterInputSiteId.setStatus("mandatory")


class _BasicAlarmMasterInputManufacturer_Type(DisplayString):
    """Custom type basicAlarmMasterInputManufacturer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_BasicAlarmMasterInputManufacturer_Type.__name__ = "DisplayString"
_BasicAlarmMasterInputManufacturer_Object = MibTableColumn
basicAlarmMasterInputManufacturer = _BasicAlarmMasterInputManufacturer_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 36, 1, 17),
    _BasicAlarmMasterInputManufacturer_Type()
)
basicAlarmMasterInputManufacturer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicAlarmMasterInputManufacturer.setStatus("mandatory")


class _BasicAlarmMasterInputModel_Type(DisplayString):
    """Custom type basicAlarmMasterInputModel based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_BasicAlarmMasterInputModel_Type.__name__ = "DisplayString"
_BasicAlarmMasterInputModel_Object = MibTableColumn
basicAlarmMasterInputModel = _BasicAlarmMasterInputModel_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 36, 1, 18),
    _BasicAlarmMasterInputModel_Type()
)
basicAlarmMasterInputModel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicAlarmMasterInputModel.setStatus("mandatory")
_BasicPowerMasterOutletTable_Object = MibTable
basicPowerMasterOutletTable = _BasicPowerMasterOutletTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 37)
)
if mibBuilder.loadTexts:
    basicPowerMasterOutletTable.setStatus("mandatory")
_BasicPowerMasterOutletEntry_Object = MibTableRow
basicPowerMasterOutletEntry = _BasicPowerMasterOutletEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 37, 1)
)
basicPowerMasterOutletEntry.setIndexNames(
    (0, "MRVINREACH", "basicPowerMasterPortIndex"),
    (0, "MRVINREACH", "basicPowerMasterOutletIndex"),
)
if mibBuilder.loadTexts:
    basicPowerMasterOutletEntry.setStatus("mandatory")
_BasicPowerMasterPortIndex_Type = Integer32
_BasicPowerMasterPortIndex_Object = MibTableColumn
basicPowerMasterPortIndex = _BasicPowerMasterPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 37, 1, 1),
    _BasicPowerMasterPortIndex_Type()
)
basicPowerMasterPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPowerMasterPortIndex.setStatus("mandatory")
_BasicPowerMasterOutletIndex_Type = Integer32
_BasicPowerMasterOutletIndex_Object = MibTableColumn
basicPowerMasterOutletIndex = _BasicPowerMasterOutletIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 37, 1, 2),
    _BasicPowerMasterOutletIndex_Type()
)
basicPowerMasterOutletIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPowerMasterOutletIndex.setStatus("mandatory")


class _BasicPowerMasterOutletName_Type(DisplayString):
    """Custom type basicPowerMasterOutletName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_BasicPowerMasterOutletName_Type.__name__ = "DisplayString"
_BasicPowerMasterOutletName_Object = MibTableColumn
basicPowerMasterOutletName = _BasicPowerMasterOutletName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 37, 1, 3),
    _BasicPowerMasterOutletName_Type()
)
basicPowerMasterOutletName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPowerMasterOutletName.setStatus("mandatory")


class _BasicPowerMasterOutletState_Type(Integer32):
    """Custom type basicPowerMasterOutletState based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 2))
    )


_BasicPowerMasterOutletState_Type.__name__ = "Integer32"
_BasicPowerMasterOutletState_Object = MibTableColumn
basicPowerMasterOutletState = _BasicPowerMasterOutletState_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 37, 1, 4),
    _BasicPowerMasterOutletState_Type()
)
basicPowerMasterOutletState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicPowerMasterOutletState.setStatus("mandatory")


class _BasicPowerMasterOutletAmperageStatus_Type(DisplayString):
    """Custom type basicPowerMasterOutletAmperageStatus based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 5),
    )


_BasicPowerMasterOutletAmperageStatus_Type.__name__ = "DisplayString"
_BasicPowerMasterOutletAmperageStatus_Object = MibTableColumn
basicPowerMasterOutletAmperageStatus = _BasicPowerMasterOutletAmperageStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 37, 1, 5),
    _BasicPowerMasterOutletAmperageStatus_Type()
)
basicPowerMasterOutletAmperageStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicPowerMasterOutletAmperageStatus.setStatus("mandatory")
_BasicControlOutputRelayTable_Object = MibTable
basicControlOutputRelayTable = _BasicControlOutputRelayTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 38)
)
if mibBuilder.loadTexts:
    basicControlOutputRelayTable.setStatus("mandatory")
_BasicControlOutputRelayEntry_Object = MibTableRow
basicControlOutputRelayEntry = _BasicControlOutputRelayEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 38, 1)
)
basicControlOutputRelayEntry.setIndexNames(
    (0, "MRVINREACH", "basicControlOutputRelayIndex"),
)
if mibBuilder.loadTexts:
    basicControlOutputRelayEntry.setStatus("mandatory")
_BasicControlOutputRelayIndex_Type = Integer32
_BasicControlOutputRelayIndex_Object = MibTableColumn
basicControlOutputRelayIndex = _BasicControlOutputRelayIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 38, 1, 1),
    _BasicControlOutputRelayIndex_Type()
)
basicControlOutputRelayIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicControlOutputRelayIndex.setStatus("mandatory")


class _BasicControlOutputRelayName_Type(DisplayString):
    """Custom type basicControlOutputRelayName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_BasicControlOutputRelayName_Type.__name__ = "DisplayString"
_BasicControlOutputRelayName_Object = MibTableColumn
basicControlOutputRelayName = _BasicControlOutputRelayName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 38, 1, 2),
    _BasicControlOutputRelayName_Type()
)
basicControlOutputRelayName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicControlOutputRelayName.setStatus("mandatory")


class _BasicControlOutputRelayState_Type(Integer32):
    """Custom type basicControlOutputRelayState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("close", 2),
          ("open", 1))
    )


_BasicControlOutputRelayState_Type.__name__ = "Integer32"
_BasicControlOutputRelayState_Object = MibTableColumn
basicControlOutputRelayState = _BasicControlOutputRelayState_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 38, 1, 3),
    _BasicControlOutputRelayState_Type()
)
basicControlOutputRelayState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicControlOutputRelayState.setStatus("mandatory")


class _BasicControlOutputRelayStatus_Type(Integer32):
    """Custom type basicControlOutputRelayStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("close", 2),
          ("open", 1))
    )


_BasicControlOutputRelayStatus_Type.__name__ = "Integer32"
_BasicControlOutputRelayStatus_Object = MibTableColumn
basicControlOutputRelayStatus = _BasicControlOutputRelayStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 38, 1, 4),
    _BasicControlOutputRelayStatus_Type()
)
basicControlOutputRelayStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicControlOutputRelayStatus.setStatus("mandatory")


class _BasicAutoProtocolDetectMessage_Type(DisplayString):
    """Custom type basicAutoProtocolDetectMessage based on DisplayString"""
    defaultValue = OctetString("AutoProtocolDetect - Begin protocol or enter 4 returns for interactive mode.")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_BasicAutoProtocolDetectMessage_Type.__name__ = "DisplayString"
_BasicAutoProtocolDetectMessage_Object = MibScalar
basicAutoProtocolDetectMessage = _BasicAutoProtocolDetectMessage_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 1, 100),
    _BasicAutoProtocolDetectMessage_Type()
)
basicAutoProtocolDetectMessage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicAutoProtocolDetectMessage.setStatus("mandatory")
_XQueue_ObjectIdentity = ObjectIdentity
xQueue = _XQueue_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 13, 2)
)


class _QueueLimit_Type(Integer32):
    """Custom type queueLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 100),
    )


_QueueLimit_Type.__name__ = "Integer32"
_QueueLimit_Object = MibScalar
queueLimit = _QueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 2, 1),
    _QueueLimit_Type()
)
queueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    queueLimit.setStatus("mandatory")
_QueueHigh_Type = Gauge32
_QueueHigh_Object = MibScalar
queueHigh = _QueueHigh_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 2, 2),
    _QueueHigh_Type()
)
queueHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    queueHigh.setStatus("mandatory")
_QueueNumber_Type = Gauge32
_QueueNumber_Object = MibScalar
queueNumber = _QueueNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 2, 3),
    _QueueNumber_Type()
)
queueNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    queueNumber.setStatus("mandatory")
_QueueTable_Object = MibTable
queueTable = _QueueTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 2, 4)
)
if mibBuilder.loadTexts:
    queueTable.setStatus("mandatory")
_QueueEntry_Object = MibTableRow
queueEntry = _QueueEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 2, 4, 1)
)
queueEntry.setIndexNames(
    (0, "MRVINREACH", "queueJob"),
)
if mibBuilder.loadTexts:
    queueEntry.setStatus("mandatory")
_QueueJob_Type = Integer32
_QueueJob_Object = MibTableColumn
queueJob = _QueueJob_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 2, 4, 1, 1),
    _QueueJob_Type()
)
queueJob.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    queueJob.setStatus("mandatory")


class _QueueStatus_Type(Integer32):
    """Custom type queueStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_QueueStatus_Type.__name__ = "Integer32"
_QueueStatus_Object = MibTableColumn
queueStatus = _QueueStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 2, 4, 1, 2),
    _QueueStatus_Type()
)
queueStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    queueStatus.setStatus("mandatory")


class _QueueSourceName_Type(DisplayString):
    """Custom type queueSourceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_QueueSourceName_Type.__name__ = "DisplayString"
_QueueSourceName_Object = MibTableColumn
queueSourceName = _QueueSourceName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 2, 4, 1, 3),
    _QueueSourceName_Type()
)
queueSourceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    queueSourceName.setStatus("mandatory")


class _QueueServiceName_Type(DisplayString):
    """Custom type queueServiceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_QueueServiceName_Type.__name__ = "DisplayString"
_QueueServiceName_Object = MibTableColumn
queueServiceName = _QueueServiceName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 2, 4, 1, 4),
    _QueueServiceName_Type()
)
queueServiceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    queueServiceName.setStatus("mandatory")
_QueueServicePortIndex_Type = Integer32
_QueueServicePortIndex_Object = MibTableColumn
queueServicePortIndex = _QueueServicePortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 2, 4, 1, 5),
    _QueueServicePortIndex_Type()
)
queueServicePortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    queueServicePortIndex.setStatus("mandatory")


class _QueueServicePortName_Type(DisplayString):
    """Custom type queueServicePortName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_QueueServicePortName_Type.__name__ = "DisplayString"
_QueueServicePortName_Object = MibTableColumn
queueServicePortName = _QueueServicePortName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 2, 4, 1, 6),
    _QueueServicePortName_Type()
)
queueServicePortName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    queueServicePortName.setStatus("mandatory")
_QueuePortTable_Object = MibTable
queuePortTable = _QueuePortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 2, 5)
)
if mibBuilder.loadTexts:
    queuePortTable.setStatus("mandatory")
_QueuePortEntry_Object = MibTableRow
queuePortEntry = _QueuePortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 2, 5, 1)
)
queuePortEntry.setIndexNames(
    (0, "MRVINREACH", "queuePortIndex"),
)
if mibBuilder.loadTexts:
    queuePortEntry.setStatus("mandatory")
_QueuePortIndex_Type = Integer32
_QueuePortIndex_Object = MibTableColumn
queuePortIndex = _QueuePortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 2, 5, 1, 1),
    _QueuePortIndex_Type()
)
queuePortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    queuePortIndex.setStatus("mandatory")


class _QueuePortQueuing_Type(Integer32):
    """Custom type queuePortQueuing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_QueuePortQueuing_Type.__name__ = "Integer32"
_QueuePortQueuing_Object = MibTableColumn
queuePortQueuing = _QueuePortQueuing_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 2, 5, 1, 2),
    _QueuePortQueuing_Type()
)
queuePortQueuing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    queuePortQueuing.setStatus("mandatory")
_XMenu_ObjectIdentity = ObjectIdentity
xMenu = _XMenu_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 13, 3)
)
_MenuNumber_Type = Gauge32
_MenuNumber_Object = MibScalar
menuNumber = _MenuNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 3, 1),
    _MenuNumber_Type()
)
menuNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    menuNumber.setStatus("mandatory")


class _MenuContinuePrompt_Type(DisplayString):
    """Custom type menuContinuePrompt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_MenuContinuePrompt_Type.__name__ = "DisplayString"
_MenuContinuePrompt_Object = MibScalar
menuContinuePrompt = _MenuContinuePrompt_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 3, 2),
    _MenuContinuePrompt_Type()
)
menuContinuePrompt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    menuContinuePrompt.setStatus("mandatory")


class _MenuSelectionPrompt_Type(DisplayString):
    """Custom type menuSelectionPrompt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_MenuSelectionPrompt_Type.__name__ = "DisplayString"
_MenuSelectionPrompt_Object = MibScalar
menuSelectionPrompt = _MenuSelectionPrompt_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 3, 3),
    _MenuSelectionPrompt_Type()
)
menuSelectionPrompt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    menuSelectionPrompt.setStatus("mandatory")
_MenuTable_Object = MibTable
menuTable = _MenuTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 3, 4)
)
if mibBuilder.loadTexts:
    menuTable.setStatus("mandatory")
_MenuEntry_Object = MibTableRow
menuEntry = _MenuEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 3, 4, 1)
)
menuEntry.setIndexNames(
    (0, "MRVINREACH", "menuIndex"),
)
if mibBuilder.loadTexts:
    menuEntry.setStatus("mandatory")
_MenuIndex_Type = Integer32
_MenuIndex_Object = MibTableColumn
menuIndex = _MenuIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 3, 4, 1, 1),
    _MenuIndex_Type()
)
menuIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    menuIndex.setStatus("mandatory")


class _MenuStatus_Type(Integer32):
    """Custom type menuStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_MenuStatus_Type.__name__ = "Integer32"
_MenuStatus_Object = MibTableColumn
menuStatus = _MenuStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 3, 4, 1, 2),
    _MenuStatus_Type()
)
menuStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    menuStatus.setStatus("mandatory")


class _MenuText_Type(DisplayString):
    """Custom type menuText based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 30),
    )


_MenuText_Type.__name__ = "DisplayString"
_MenuText_Object = MibTableColumn
menuText = _MenuText_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 3, 4, 1, 3),
    _MenuText_Type()
)
menuText.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    menuText.setStatus("mandatory")


class _MenuCommand_Type(DisplayString):
    """Custom type menuCommand based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_MenuCommand_Type.__name__ = "DisplayString"
_MenuCommand_Object = MibTableColumn
menuCommand = _MenuCommand_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 3, 4, 1, 4),
    _MenuCommand_Type()
)
menuCommand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    menuCommand.setStatus("mandatory")
_MenuPortTable_Object = MibTable
menuPortTable = _MenuPortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 3, 5)
)
if mibBuilder.loadTexts:
    menuPortTable.setStatus("mandatory")
_MenuPortEntry_Object = MibTableRow
menuPortEntry = _MenuPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 3, 5, 1)
)
menuPortEntry.setIndexNames(
    (0, "MRVINREACH", "menuPortIndex"),
)
if mibBuilder.loadTexts:
    menuPortEntry.setStatus("mandatory")
_MenuPortIndex_Type = Integer32
_MenuPortIndex_Object = MibTableColumn
menuPortIndex = _MenuPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 3, 5, 1, 1),
    _MenuPortIndex_Type()
)
menuPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    menuPortIndex.setStatus("mandatory")


class _MenuPortMenuStatus_Type(Integer32):
    """Custom type menuPortMenuStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2),
          ("privileged", 3))
    )


_MenuPortMenuStatus_Type.__name__ = "Integer32"
_MenuPortMenuStatus_Object = MibTableColumn
menuPortMenuStatus = _MenuPortMenuStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 3, 5, 1, 2),
    _MenuPortMenuStatus_Type()
)
menuPortMenuStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    menuPortMenuStatus.setStatus("mandatory")


class _MenuPortNestedMenuStatus_Type(Integer32):
    """Custom type menuPortNestedMenuStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2),
          ("required", 3))
    )


_MenuPortNestedMenuStatus_Type.__name__ = "Integer32"
_MenuPortNestedMenuStatus_Object = MibTableColumn
menuPortNestedMenuStatus = _MenuPortNestedMenuStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 3, 5, 1, 3),
    _MenuPortNestedMenuStatus_Type()
)
menuPortNestedMenuStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    menuPortNestedMenuStatus.setStatus("mandatory")


class _MenuPortNestedMenuPrivilege_Type(Integer32):
    """Custom type menuPortNestedMenuPrivilege based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_MenuPortNestedMenuPrivilege_Type.__name__ = "Integer32"
_MenuPortNestedMenuPrivilege_Object = MibTableColumn
menuPortNestedMenuPrivilege = _MenuPortNestedMenuPrivilege_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 3, 5, 1, 4),
    _MenuPortNestedMenuPrivilege_Type()
)
menuPortNestedMenuPrivilege.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    menuPortNestedMenuPrivilege.setStatus("mandatory")


class _MenuPortNestedTopLevel_Type(Integer32):
    """Custom type menuPortNestedTopLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_MenuPortNestedTopLevel_Type.__name__ = "Integer32"
_MenuPortNestedTopLevel_Object = MibTableColumn
menuPortNestedTopLevel = _MenuPortNestedTopLevel_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 3, 5, 1, 5),
    _MenuPortNestedTopLevel_Type()
)
menuPortNestedTopLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    menuPortNestedTopLevel.setStatus("mandatory")


class _MenuNestedName_Type(DisplayString):
    """Custom type menuNestedName based on DisplayString"""
    defaultValue = OctetString("NESTMENU.TXT")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_MenuNestedName_Type.__name__ = "DisplayString"
_MenuNestedName_Object = MibScalar
menuNestedName = _MenuNestedName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 3, 6),
    _MenuNestedName_Type()
)
menuNestedName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    menuNestedName.setStatus("mandatory")


class _MenuNestedScriptMaximum_Type(Integer32):
    """Custom type menuNestedScriptMaximum based on Integer32"""
    defaultValue = 16384

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 204800),
    )


_MenuNestedScriptMaximum_Type.__name__ = "Integer32"
_MenuNestedScriptMaximum_Object = MibScalar
menuNestedScriptMaximum = _MenuNestedScriptMaximum_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 3, 7),
    _MenuNestedScriptMaximum_Type()
)
menuNestedScriptMaximum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    menuNestedScriptMaximum.setStatus("mandatory")


class _MenuNestedSystemName_Type(Integer32):
    """Custom type menuNestedSystemName based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_MenuNestedSystemName_Type.__name__ = "Integer32"
_MenuNestedSystemName_Object = MibScalar
menuNestedSystemName = _MenuNestedSystemName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 3, 8),
    _MenuNestedSystemName_Type()
)
menuNestedSystemName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    menuNestedSystemName.setStatus("mandatory")


class _MenuNestedEthernet_Type(Integer32):
    """Custom type menuNestedEthernet based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_MenuNestedEthernet_Type.__name__ = "Integer32"
_MenuNestedEthernet_Object = MibScalar
menuNestedEthernet = _MenuNestedEthernet_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 3, 9),
    _MenuNestedEthernet_Type()
)
menuNestedEthernet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    menuNestedEthernet.setStatus("mandatory")
_XNetLogin_ObjectIdentity = ObjectIdentity
xNetLogin = _XNetLogin_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 13, 4)
)
_NetLoginNumber_Type = Integer32
_NetLoginNumber_Object = MibScalar
netLoginNumber = _NetLoginNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 4, 1),
    _NetLoginNumber_Type()
)
netLoginNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netLoginNumber.setStatus("mandatory")
_NetLoginServerTable_Object = MibTable
netLoginServerTable = _NetLoginServerTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 4, 2)
)
if mibBuilder.loadTexts:
    netLoginServerTable.setStatus("mandatory")
_NetLoginServerEntry_Object = MibTableRow
netLoginServerEntry = _NetLoginServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 4, 2, 1)
)
netLoginServerEntry.setIndexNames(
    (0, "MRVINREACH", "netLoginServerName"),
)
if mibBuilder.loadTexts:
    netLoginServerEntry.setStatus("mandatory")


class _NetLoginServerName_Type(DisplayString):
    """Custom type netLoginServerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 50),
    )


_NetLoginServerName_Type.__name__ = "DisplayString"
_NetLoginServerName_Object = MibTableColumn
netLoginServerName = _NetLoginServerName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 4, 2, 1, 1),
    _NetLoginServerName_Type()
)
netLoginServerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netLoginServerName.setStatus("mandatory")


class _NetLoginServerStatus_Type(Integer32):
    """Custom type netLoginServerStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_NetLoginServerStatus_Type.__name__ = "Integer32"
_NetLoginServerStatus_Object = MibTableColumn
netLoginServerStatus = _NetLoginServerStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 4, 2, 1, 2),
    _NetLoginServerStatus_Type()
)
netLoginServerStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    netLoginServerStatus.setStatus("mandatory")


class _NetLoginServerPath_Type(DisplayString):
    """Custom type netLoginServerPath based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_NetLoginServerPath_Type.__name__ = "DisplayString"
_NetLoginServerPath_Object = MibTableColumn
netLoginServerPath = _NetLoginServerPath_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 4, 2, 1, 3),
    _NetLoginServerPath_Type()
)
netLoginServerPath.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    netLoginServerPath.setStatus("mandatory")


class _NetLoginServerSeparator_Type(DisplayString):
    """Custom type netLoginServerSeparator based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1),
    )


_NetLoginServerSeparator_Type.__name__ = "DisplayString"
_NetLoginServerSeparator_Object = MibTableColumn
netLoginServerSeparator = _NetLoginServerSeparator_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 4, 2, 1, 4),
    _NetLoginServerSeparator_Type()
)
netLoginServerSeparator.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    netLoginServerSeparator.setStatus("mandatory")
_NetLoginPortTable_Object = MibTable
netLoginPortTable = _NetLoginPortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 4, 3)
)
if mibBuilder.loadTexts:
    netLoginPortTable.setStatus("mandatory")
_NetLoginPortEntry_Object = MibTableRow
netLoginPortEntry = _NetLoginPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 4, 3, 1)
)
netLoginPortEntry.setIndexNames(
    (0, "MRVINREACH", "netLoginPortIndex"),
)
if mibBuilder.loadTexts:
    netLoginPortEntry.setStatus("mandatory")
_NetLoginPortIndex_Type = Integer32
_NetLoginPortIndex_Object = MibTableColumn
netLoginPortIndex = _NetLoginPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 4, 3, 1, 1),
    _NetLoginPortIndex_Type()
)
netLoginPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netLoginPortIndex.setStatus("mandatory")


class _NetLoginPortScriptUse_Type(Integer32):
    """Custom type netLoginPortScriptUse based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2),
          ("required", 3))
    )


_NetLoginPortScriptUse_Type.__name__ = "Integer32"
_NetLoginPortScriptUse_Object = MibTableColumn
netLoginPortScriptUse = _NetLoginPortScriptUse_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 4, 3, 1, 2),
    _NetLoginPortScriptUse_Type()
)
netLoginPortScriptUse.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    netLoginPortScriptUse.setStatus("mandatory")


class _NetLoginPortScriptEcho_Type(Integer32):
    """Custom type netLoginPortScriptEcho based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_NetLoginPortScriptEcho_Type.__name__ = "Integer32"
_NetLoginPortScriptEcho_Object = MibTableColumn
netLoginPortScriptEcho = _NetLoginPortScriptEcho_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 4, 3, 1, 3),
    _NetLoginPortScriptEcho_Type()
)
netLoginPortScriptEcho.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    netLoginPortScriptEcho.setStatus("mandatory")
_NetLoginPortLoaderAddressType_Type = AddressType
_NetLoginPortLoaderAddressType_Object = MibTableColumn
netLoginPortLoaderAddressType = _NetLoginPortLoaderAddressType_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 4, 3, 1, 4),
    _NetLoginPortLoaderAddressType_Type()
)
netLoginPortLoaderAddressType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netLoginPortLoaderAddressType.setStatus("mandatory")
_NetLoginPortLoaderAddress_Type = OctetString
_NetLoginPortLoaderAddress_Object = MibTableColumn
netLoginPortLoaderAddress = _NetLoginPortLoaderAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 4, 3, 1, 5),
    _NetLoginPortLoaderAddress_Type()
)
netLoginPortLoaderAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netLoginPortLoaderAddress.setStatus("mandatory")
_NetLoginPortLoaderFile_Type = DisplayString
_NetLoginPortLoaderFile_Object = MibTableColumn
netLoginPortLoaderFile = _NetLoginPortLoaderFile_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 4, 3, 1, 6),
    _NetLoginPortLoaderFile_Type()
)
netLoginPortLoaderFile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    netLoginPortLoaderFile.setStatus("mandatory")


class _NetLoginPortExecuteFile_Type(DisplayString):
    """Custom type netLoginPortExecuteFile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_NetLoginPortExecuteFile_Type.__name__ = "DisplayString"
_NetLoginPortExecuteFile_Object = MibTableColumn
netLoginPortExecuteFile = _NetLoginPortExecuteFile_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 4, 3, 1, 7),
    _NetLoginPortExecuteFile_Type()
)
netLoginPortExecuteFile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    netLoginPortExecuteFile.setStatus("mandatory")
_XDial_ObjectIdentity = ObjectIdentity
xDial = _XDial_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 13, 5)
)
_DialPortTable_Object = MibTable
dialPortTable = _DialPortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 5, 1)
)
if mibBuilder.loadTexts:
    dialPortTable.setStatus("mandatory")
_DialPortEntry_Object = MibTableRow
dialPortEntry = _DialPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 5, 1, 1)
)
dialPortEntry.setIndexNames(
    (0, "MRVINREACH", "dialPortIndex"),
)
if mibBuilder.loadTexts:
    dialPortEntry.setStatus("mandatory")
_DialPortIndex_Type = Integer32
_DialPortIndex_Object = MibTableColumn
dialPortIndex = _DialPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 5, 1, 1, 1),
    _DialPortIndex_Type()
)
dialPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dialPortIndex.setStatus("mandatory")


class _DialPortDialback_Type(Integer32):
    """Custom type dialPortDialback based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_DialPortDialback_Type.__name__ = "Integer32"
_DialPortDialback_Object = MibTableColumn
dialPortDialback = _DialPortDialback_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 5, 1, 1, 2),
    _DialPortDialback_Type()
)
dialPortDialback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dialPortDialback.setStatus("mandatory")


class _DialPortDialbackTimeout_Type(Integer32):
    """Custom type dialPortDialbackTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 60),
    )


_DialPortDialbackTimeout_Type.__name__ = "Integer32"
_DialPortDialbackTimeout_Object = MibTableColumn
dialPortDialbackTimeout = _DialPortDialbackTimeout_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 5, 1, 1, 3),
    _DialPortDialbackTimeout_Type()
)
dialPortDialbackTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dialPortDialbackTimeout.setStatus("mandatory")


class _DialPortDialout_Type(Integer32):
    """Custom type dialPortDialout based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("ppp", 4),
          ("query", 2),
          ("slip", 3))
    )


_DialPortDialout_Type.__name__ = "Integer32"
_DialPortDialout_Object = MibTableColumn
dialPortDialout = _DialPortDialout_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 5, 1, 1, 4),
    _DialPortDialout_Type()
)
dialPortDialout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dialPortDialout.setStatus("mandatory")


class _DialPortDialbackNoUsername_Type(Integer32):
    """Custom type dialPortDialbackNoUsername based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_DialPortDialbackNoUsername_Type.__name__ = "Integer32"
_DialPortDialbackNoUsername_Object = MibTableColumn
dialPortDialbackNoUsername = _DialPortDialbackNoUsername_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 5, 1, 1, 5),
    _DialPortDialbackNoUsername_Type()
)
dialPortDialbackNoUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dialPortDialbackNoUsername.setStatus("mandatory")
_XSessionLog_ObjectIdentity = ObjectIdentity
xSessionLog = _XSessionLog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 13, 6)
)


class _SessionLogLimit_Type(Integer32):
    """Custom type sessionLogLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000),
    )


_SessionLogLimit_Type.__name__ = "Integer32"
_SessionLogLimit_Object = MibScalar
sessionLogLimit = _SessionLogLimit_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 1),
    _SessionLogLimit_Type()
)
sessionLogLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sessionLogLimit.setStatus("mandatory")
_SessionLogTable_Object = MibTable
sessionLogTable = _SessionLogTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 2)
)
if mibBuilder.loadTexts:
    sessionLogTable.setStatus("mandatory")
_SessionLogEntry_Object = MibTableRow
sessionLogEntry = _SessionLogEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 2, 1)
)
sessionLogEntry.setIndexNames(
    (0, "MRVINREACH", "sessionLogIndex"),
)
if mibBuilder.loadTexts:
    sessionLogEntry.setStatus("mandatory")
_SessionLogIndex_Type = Integer32
_SessionLogIndex_Object = MibTableColumn
sessionLogIndex = _SessionLogIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 2, 1, 1),
    _SessionLogIndex_Type()
)
sessionLogIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessionLogIndex.setStatus("mandatory")


class _SessionLogConnectionID_Type(Integer32):
    """Custom type sessionLogConnectionID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SessionLogConnectionID_Type.__name__ = "Integer32"
_SessionLogConnectionID_Object = MibTableColumn
sessionLogConnectionID = _SessionLogConnectionID_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 2, 1, 2),
    _SessionLogConnectionID_Type()
)
sessionLogConnectionID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessionLogConnectionID.setStatus("mandatory")
_SessionLogPort_Type = Integer32
_SessionLogPort_Object = MibTableColumn
sessionLogPort = _SessionLogPort_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 2, 1, 3),
    _SessionLogPort_Type()
)
sessionLogPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessionLogPort.setStatus("mandatory")


class _SessionLogEvent_Type(Integer32):
    """Custom type sessionLogEvent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("connectLocal", 2),
          ("connectRemote", 3),
          ("disconnect", 4),
          ("login", 1),
          ("processDefined", 15),
          ("rCPConnect", 5),
          ("rCPDisconnect", 6),
          ("x25Connect", 13),
          ("x25Disconnect", 14))
    )


_SessionLogEvent_Type.__name__ = "Integer32"
_SessionLogEvent_Object = MibTableColumn
sessionLogEvent = _SessionLogEvent_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 2, 1, 4),
    _SessionLogEvent_Type()
)
sessionLogEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessionLogEvent.setStatus("mandatory")


class _SessionLogEventDetail_Type(Integer32):
    """Custom type sessionLogEventDetail based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36)
        )
    )
    namedValues = NamedValues(
        *(("accessDenied", 28),
          ("badCircuitTimer", 15),
          ("badMessageOrSlot", 17),
          ("badPassword", 22),
          ("badServiceClass", 16),
          ("domainTooLong", 32),
          ("duplicateQueueID", 6),
          ("internetConnectDisabled", 36),
          ("noImmeditatAccess", 27),
          ("noNodeResources", 12),
          ("noProgress", 19),
          ("noServiceResourced", 8),
          ("noSuchNode", 33),
          ("noSuchPort", 21),
          ("noSuchService", 24),
          ("noSuchServiceOnNode", 34),
          ("noUsers", 7),
          ("nodeUserdisconnect", 14),
          ("none", 1),
          ("notInQueue", 26),
          ("protocolBadCircuit", 2),
          ("protocolBadCredits", 3),
          ("protocolBadRange", 5),
          ("protocolBadReasonCode", 30),
          ("protocolBadSolicit", 29),
          ("protocolBadStartOrRun", 4),
          ("rejectService", 35),
          ("serverUserDisconnect", 11),
          ("serviceBusy", 23),
          ("serviceDisabled", 25),
          ("serviceNotOnPort", 20),
          ("serviceUnavailable", 10),
          ("serviceUserDisconnect", 9),
          ("systemShutdown", 13),
          ("timeout", 18),
          ("unsupportedTest", 31))
    )


_SessionLogEventDetail_Type.__name__ = "Integer32"
_SessionLogEventDetail_Object = MibTableColumn
sessionLogEventDetail = _SessionLogEventDetail_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 2, 1, 5),
    _SessionLogEventDetail_Type()
)
sessionLogEventDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessionLogEventDetail.setStatus("mandatory")


class _SessionLogUserName_Type(DisplayString):
    """Custom type sessionLogUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SessionLogUserName_Type.__name__ = "DisplayString"
_SessionLogUserName_Object = MibTableColumn
sessionLogUserName = _SessionLogUserName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 2, 1, 6),
    _SessionLogUserName_Type()
)
sessionLogUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessionLogUserName.setStatus("mandatory")


class _SessionLogRemoteName_Type(DisplayString):
    """Custom type sessionLogRemoteName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SessionLogRemoteName_Type.__name__ = "DisplayString"
_SessionLogRemoteName_Object = MibTableColumn
sessionLogRemoteName = _SessionLogRemoteName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 2, 1, 7),
    _SessionLogRemoteName_Type()
)
sessionLogRemoteName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessionLogRemoteName.setStatus("mandatory")
_SessionLogConnectTime_Type = DateTime
_SessionLogConnectTime_Object = MibTableColumn
sessionLogConnectTime = _SessionLogConnectTime_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 2, 1, 8),
    _SessionLogConnectTime_Type()
)
sessionLogConnectTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessionLogConnectTime.setStatus("mandatory")
_SessionLogDisconnectTime_Type = DateTime
_SessionLogDisconnectTime_Object = MibTableColumn
sessionLogDisconnectTime = _SessionLogDisconnectTime_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 2, 1, 9),
    _SessionLogDisconnectTime_Type()
)
sessionLogDisconnectTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessionLogDisconnectTime.setStatus("mandatory")
_SessionLogInCharacters_Type = Counter32
_SessionLogInCharacters_Object = MibTableColumn
sessionLogInCharacters = _SessionLogInCharacters_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 2, 1, 10),
    _SessionLogInCharacters_Type()
)
sessionLogInCharacters.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessionLogInCharacters.setStatus("mandatory")
_SessionLogOutCharacters_Type = Counter32
_SessionLogOutCharacters_Object = MibTableColumn
sessionLogOutCharacters = _SessionLogOutCharacters_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 2, 1, 11),
    _SessionLogOutCharacters_Type()
)
sessionLogOutCharacters.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessionLogOutCharacters.setStatus("mandatory")


class _SessionLogVerboseEvent_Type(Integer32):
    """Custom type sessionLogVerboseEvent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              12,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("connectLocal", 2),
          ("connectRcp", 5),
          ("connectRemote", 3),
          ("connectX25", 13),
          ("disconnect", 4),
          ("disconnectRcp", 6),
          ("disconnectX25", 14),
          ("login", 1),
          ("lpd", 12),
          ("telnetMaint", 7),
          ("userDefined", 15),
          ("xprinter", 9),
          ("xremote", 8))
    )


_SessionLogVerboseEvent_Type.__name__ = "Integer32"
_SessionLogVerboseEvent_Object = MibTableColumn
sessionLogVerboseEvent = _SessionLogVerboseEvent_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 2, 1, 12),
    _SessionLogVerboseEvent_Type()
)
sessionLogVerboseEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessionLogVerboseEvent.setStatus("mandatory")


class _SessionLogX25Direction_Type(Integer32):
    """Custom type sessionLogX25Direction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inbound", 1),
          ("outbound", 2))
    )


_SessionLogX25Direction_Type.__name__ = "Integer32"
_SessionLogX25Direction_Object = MibTableColumn
sessionLogX25Direction = _SessionLogX25Direction_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 2, 1, 13),
    _SessionLogX25Direction_Type()
)
sessionLogX25Direction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessionLogX25Direction.setStatus("mandatory")
_SessionLogVerboseMessage_Type = DisplayString
_SessionLogVerboseMessage_Object = MibTableColumn
sessionLogVerboseMessage = _SessionLogVerboseMessage_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 2, 1, 14),
    _SessionLogVerboseMessage_Type()
)
sessionLogVerboseMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessionLogVerboseMessage.setStatus("mandatory")


class _SessionLogX25CallerAddress_Type(OctetString):
    """Custom type sessionLogX25CallerAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_SessionLogX25CallerAddress_Type.__name__ = "OctetString"
_SessionLogX25CallerAddress_Object = MibTableColumn
sessionLogX25CallerAddress = _SessionLogX25CallerAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 2, 1, 15),
    _SessionLogX25CallerAddress_Type()
)
sessionLogX25CallerAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessionLogX25CallerAddress.setStatus("mandatory")


class _SessionLogX25CalledAddress_Type(OctetString):
    """Custom type sessionLogX25CalledAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_SessionLogX25CalledAddress_Type.__name__ = "OctetString"
_SessionLogX25CalledAddress_Object = MibTableColumn
sessionLogX25CalledAddress = _SessionLogX25CalledAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 2, 1, 16),
    _SessionLogX25CalledAddress_Type()
)
sessionLogX25CalledAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessionLogX25CalledAddress.setStatus("mandatory")
_SessionLogX25DisconnectCause_Type = Integer32
_SessionLogX25DisconnectCause_Object = MibTableColumn
sessionLogX25DisconnectCause = _SessionLogX25DisconnectCause_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 2, 1, 17),
    _SessionLogX25DisconnectCause_Type()
)
sessionLogX25DisconnectCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessionLogX25DisconnectCause.setStatus("mandatory")
_SessionLogX25DisconnectDiagnostic_Type = Integer32
_SessionLogX25DisconnectDiagnostic_Object = MibTableColumn
sessionLogX25DisconnectDiagnostic = _SessionLogX25DisconnectDiagnostic_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 2, 1, 18),
    _SessionLogX25DisconnectDiagnostic_Type()
)
sessionLogX25DisconnectDiagnostic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessionLogX25DisconnectDiagnostic.setStatus("mandatory")


class _SessionLogHostType_Type(Integer32):
    """Custom type sessionLogHostType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("unix", 2))
    )


_SessionLogHostType_Type.__name__ = "Integer32"
_SessionLogHostType_Object = MibScalar
sessionLogHostType = _SessionLogHostType_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 3),
    _SessionLogHostType_Type()
)
sessionLogHostType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sessionLogHostType.setStatus("mandatory")


class _SessionLogHostAddress_Type(OctetString):
    """Custom type sessionLogHostAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_SessionLogHostAddress_Type.__name__ = "OctetString"
_SessionLogHostAddress_Object = MibScalar
sessionLogHostAddress = _SessionLogHostAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 4),
    _SessionLogHostAddress_Type()
)
sessionLogHostAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sessionLogHostAddress.setStatus("mandatory")


class _SessionLogVerbose_Type(Integer32):
    """Custom type sessionLogVerbose based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SessionLogVerbose_Type.__name__ = "Integer32"
_SessionLogVerbose_Object = MibScalar
sessionLogVerbose = _SessionLogVerbose_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 5),
    _SessionLogVerbose_Type()
)
sessionLogVerbose.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sessionLogVerbose.setStatus("mandatory")


class _SessionLogPriority_Type(Integer32):
    """Custom type sessionLogPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SessionLogPriority_Type.__name__ = "Integer32"
_SessionLogPriority_Object = MibScalar
sessionLogPriority = _SessionLogPriority_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 6),
    _SessionLogPriority_Type()
)
sessionLogPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sessionLogPriority.setStatus("mandatory")


class _SessionLogEmpty_Type(Integer32):
    """Custom type sessionLogEmpty based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_SessionLogEmpty_Type.__name__ = "Integer32"
_SessionLogEmpty_Object = MibScalar
sessionLogEmpty = _SessionLogEmpty_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 7),
    _SessionLogEmpty_Type()
)
sessionLogEmpty.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sessionLogEmpty.setStatus("mandatory")


class _SessionLogFacility_Type(Integer32):
    """Custom type sessionLogFacility based on Integer32"""
    defaultValue = 9

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("local0", 1),
          ("local1", 2),
          ("local2", 3),
          ("local3", 4),
          ("local4", 5),
          ("local5", 6),
          ("local6", 7),
          ("local7", 8),
          ("user", 9))
    )


_SessionLogFacility_Type.__name__ = "Integer32"
_SessionLogFacility_Object = MibScalar
sessionLogFacility = _SessionLogFacility_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 8),
    _SessionLogFacility_Type()
)
sessionLogFacility.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sessionLogFacility.setStatus("mandatory")


class _SessionLogReliable_Type(Integer32):
    """Custom type sessionLogReliable based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SessionLogReliable_Type.__name__ = "Integer32"
_SessionLogReliable_Object = MibScalar
sessionLogReliable = _SessionLogReliable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 9),
    _SessionLogReliable_Type()
)
sessionLogReliable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sessionLogReliable.setStatus("mandatory")


class _SessionLogHostSecondaryType_Type(Integer32):
    """Custom type sessionLogHostSecondaryType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("unix", 2))
    )


_SessionLogHostSecondaryType_Type.__name__ = "Integer32"
_SessionLogHostSecondaryType_Object = MibScalar
sessionLogHostSecondaryType = _SessionLogHostSecondaryType_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 10),
    _SessionLogHostSecondaryType_Type()
)
sessionLogHostSecondaryType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sessionLogHostSecondaryType.setStatus("mandatory")


class _SessionLogHostSecondaryAddress_Type(OctetString):
    """Custom type sessionLogHostSecondaryAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_SessionLogHostSecondaryAddress_Type.__name__ = "OctetString"
_SessionLogHostSecondaryAddress_Object = MibScalar
sessionLogHostSecondaryAddress = _SessionLogHostSecondaryAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 11),
    _SessionLogHostSecondaryAddress_Type()
)
sessionLogHostSecondaryAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sessionLogHostSecondaryAddress.setStatus("mandatory")


class _SessionLogZeroAccountingAll_Type(Integer32):
    """Custom type sessionLogZeroAccountingAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_SessionLogZeroAccountingAll_Type.__name__ = "Integer32"
_SessionLogZeroAccountingAll_Object = MibScalar
sessionLogZeroAccountingAll = _SessionLogZeroAccountingAll_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 12),
    _SessionLogZeroAccountingAll_Type()
)
sessionLogZeroAccountingAll.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sessionLogZeroAccountingAll.setStatus("mandatory")


class _SessionLogZeroCommandLogging_Type(Integer32):
    """Custom type sessionLogZeroCommandLogging based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_SessionLogZeroCommandLogging_Type.__name__ = "Integer32"
_SessionLogZeroCommandLogging_Object = MibScalar
sessionLogZeroCommandLogging = _SessionLogZeroCommandLogging_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 13),
    _SessionLogZeroCommandLogging_Type()
)
sessionLogZeroCommandLogging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sessionLogZeroCommandLogging.setStatus("mandatory")


class _SessionLogTl1AutonomousLogSize_Type(Integer32):
    """Custom type sessionLogTl1AutonomousLogSize based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000),
    )


_SessionLogTl1AutonomousLogSize_Type.__name__ = "Integer32"
_SessionLogTl1AutonomousLogSize_Object = MibScalar
sessionLogTl1AutonomousLogSize = _SessionLogTl1AutonomousLogSize_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 14),
    _SessionLogTl1AutonomousLogSize_Type()
)
sessionLogTl1AutonomousLogSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sessionLogTl1AutonomousLogSize.setStatus("mandatory")


class _SessionLogTl1CommandLogSize_Type(Integer32):
    """Custom type sessionLogTl1CommandLogSize based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000),
    )


_SessionLogTl1CommandLogSize_Type.__name__ = "Integer32"
_SessionLogTl1CommandLogSize_Object = MibScalar
sessionLogTl1CommandLogSize = _SessionLogTl1CommandLogSize_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 15),
    _SessionLogTl1CommandLogSize_Type()
)
sessionLogTl1CommandLogSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sessionLogTl1CommandLogSize.setStatus("mandatory")


class _SessionLogZeroDataLogging_Type(Integer32):
    """Custom type sessionLogZeroDataLogging based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_SessionLogZeroDataLogging_Type.__name__ = "Integer32"
_SessionLogZeroDataLogging_Object = MibScalar
sessionLogZeroDataLogging = _SessionLogZeroDataLogging_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 16),
    _SessionLogZeroDataLogging_Type()
)
sessionLogZeroDataLogging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sessionLogZeroDataLogging.setStatus("mandatory")


class _SessionLogZeroAlarmLogging_Type(Integer32):
    """Custom type sessionLogZeroAlarmLogging based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_SessionLogZeroAlarmLogging_Type.__name__ = "Integer32"
_SessionLogZeroAlarmLogging_Object = MibScalar
sessionLogZeroAlarmLogging = _SessionLogZeroAlarmLogging_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 6, 17),
    _SessionLogZeroAlarmLogging_Type()
)
sessionLogZeroAlarmLogging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sessionLogZeroAlarmLogging.setStatus("mandatory")
_XCcl_ObjectIdentity = ObjectIdentity
xCcl = _XCcl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 13, 7)
)
_CclParsedScriptTable_Object = MibTable
cclParsedScriptTable = _CclParsedScriptTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 7, 1)
)
if mibBuilder.loadTexts:
    cclParsedScriptTable.setStatus("mandatory")
_CclParsedScriptEntry_Object = MibTableRow
cclParsedScriptEntry = _CclParsedScriptEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 7, 1, 1)
)
cclParsedScriptEntry.setIndexNames(
    (0, "MRVINREACH", "cclScriptName"),
)
if mibBuilder.loadTexts:
    cclParsedScriptEntry.setStatus("mandatory")


class _CclScriptName_Type(DisplayString):
    """Custom type cclScriptName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_CclScriptName_Type.__name__ = "DisplayString"
_CclScriptName_Object = MibTableColumn
cclScriptName = _CclScriptName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 7, 1, 1, 1),
    _CclScriptName_Type()
)
cclScriptName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cclScriptName.setStatus("mandatory")


class _CclScriptControl_Type(Integer32):
    """Custom type cclScriptControl based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("refresh", 1))
    )


_CclScriptControl_Type.__name__ = "Integer32"
_CclScriptControl_Object = MibTableColumn
cclScriptControl = _CclScriptControl_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 7, 1, 1, 2),
    _CclScriptControl_Type()
)
cclScriptControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cclScriptControl.setStatus("mandatory")
_CclPortTable_Object = MibTable
cclPortTable = _CclPortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 7, 2)
)
if mibBuilder.loadTexts:
    cclPortTable.setStatus("mandatory")
_CclPortEntry_Object = MibTableRow
cclPortEntry = _CclPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 7, 2, 1)
)
cclPortEntry.setIndexNames(
    (0, "MRVINREACH", "charPortIndex"),
)
if mibBuilder.loadTexts:
    cclPortEntry.setStatus("mandatory")


class _CclPortCclName_Type(DisplayString):
    """Custom type cclPortCclName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CclPortCclName_Type.__name__ = "DisplayString"
_CclPortCclName_Object = MibTableColumn
cclPortCclName = _CclPortCclName_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 7, 2, 1, 1),
    _CclPortCclName_Type()
)
cclPortCclName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cclPortCclName.setStatus("mandatory")


class _CclPortModemAudible_Type(Integer32):
    """Custom type cclPortModemAudible based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_CclPortModemAudible_Type.__name__ = "Integer32"
_CclPortModemAudible_Object = MibTableColumn
cclPortModemAudible = _CclPortModemAudible_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 7, 2, 1, 2),
    _CclPortModemAudible_Type()
)
cclPortModemAudible.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cclPortModemAudible.setStatus("mandatory")
_XBroadcastGroup_ObjectIdentity = ObjectIdentity
xBroadcastGroup = _XBroadcastGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 13, 8)
)
_BroadcastGroupTable_Object = MibTable
broadcastGroupTable = _BroadcastGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 8, 1)
)
if mibBuilder.loadTexts:
    broadcastGroupTable.setStatus("mandatory")
_BroadcastGroupEntry_Object = MibTableRow
broadcastGroupEntry = _BroadcastGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 8, 1, 1)
)
broadcastGroupEntry.setIndexNames(
    (0, "MRVINREACH", "broadcastGroupIndex"),
)
if mibBuilder.loadTexts:
    broadcastGroupEntry.setStatus("mandatory")


class _BroadcastGroupIndex_Type(Integer32):
    """Custom type broadcastGroupIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_BroadcastGroupIndex_Type.__name__ = "Integer32"
_BroadcastGroupIndex_Object = MibTableColumn
broadcastGroupIndex = _BroadcastGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 8, 1, 1, 1),
    _BroadcastGroupIndex_Type()
)
broadcastGroupIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    broadcastGroupIndex.setStatus("mandatory")


class _BroadcastGroupStatus_Type(Integer32):
    """Custom type broadcastGroupStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BroadcastGroupStatus_Type.__name__ = "Integer32"
_BroadcastGroupStatus_Object = MibTableColumn
broadcastGroupStatus = _BroadcastGroupStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 8, 1, 1, 2),
    _BroadcastGroupStatus_Type()
)
broadcastGroupStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    broadcastGroupStatus.setStatus("mandatory")
_BroadcastGroupMaster_Type = Integer32
_BroadcastGroupMaster_Object = MibTableColumn
broadcastGroupMaster = _BroadcastGroupMaster_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 8, 1, 1, 3),
    _BroadcastGroupMaster_Type()
)
broadcastGroupMaster.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    broadcastGroupMaster.setStatus("mandatory")
_BroadcastGroupSlaves_Type = OctetString
_BroadcastGroupSlaves_Object = MibTableColumn
broadcastGroupSlaves = _BroadcastGroupSlaves_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 8, 1, 1, 4),
    _BroadcastGroupSlaves_Type()
)
broadcastGroupSlaves.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    broadcastGroupSlaves.setStatus("mandatory")
_BroadcastGroupSlavesBroadcastOnly_Type = OctetString
_BroadcastGroupSlavesBroadcastOnly_Object = MibTableColumn
broadcastGroupSlavesBroadcastOnly = _BroadcastGroupSlavesBroadcastOnly_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 8, 1, 1, 5),
    _BroadcastGroupSlavesBroadcastOnly_Type()
)
broadcastGroupSlavesBroadcastOnly.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    broadcastGroupSlavesBroadcastOnly.setStatus("mandatory")


class _BroadcastGroupSlaveTcpPort_Type(Integer32):
    """Custom type broadcastGroupSlaveTcpPort based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65554),
    )


_BroadcastGroupSlaveTcpPort_Type.__name__ = "Integer32"
_BroadcastGroupSlaveTcpPort_Object = MibTableColumn
broadcastGroupSlaveTcpPort = _BroadcastGroupSlaveTcpPort_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 8, 1, 1, 6),
    _BroadcastGroupSlaveTcpPort_Type()
)
broadcastGroupSlaveTcpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    broadcastGroupSlaveTcpPort.setStatus("mandatory")


class _BroadcastGroupSlaveTcpBroadcastOnly_Type(Integer32):
    """Custom type broadcastGroupSlaveTcpBroadcastOnly based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BroadcastGroupSlaveTcpBroadcastOnly_Type.__name__ = "Integer32"
_BroadcastGroupSlaveTcpBroadcastOnly_Object = MibTableColumn
broadcastGroupSlaveTcpBroadcastOnly = _BroadcastGroupSlaveTcpBroadcastOnly_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 8, 1, 1, 7),
    _BroadcastGroupSlaveTcpBroadcastOnly_Type()
)
broadcastGroupSlaveTcpBroadcastOnly.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    broadcastGroupSlaveTcpBroadcastOnly.setStatus("mandatory")
_XPingHosts_ObjectIdentity = ObjectIdentity
xPingHosts = _XPingHosts_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 13, 9)
)
_PingHostsTable_Object = MibTable
pingHostsTable = _PingHostsTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 9, 1)
)
if mibBuilder.loadTexts:
    pingHostsTable.setStatus("mandatory")
_PingHostsEntry_Object = MibTableRow
pingHostsEntry = _PingHostsEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 9, 1, 1)
)
pingHostsEntry.setIndexNames(
    (0, "MRVINREACH", "icmpPingHostIndex"),
)
if mibBuilder.loadTexts:
    pingHostsEntry.setStatus("mandatory")


class _IcmpPingHostIndex_Type(Integer32):
    """Custom type icmpPingHostIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_IcmpPingHostIndex_Type.__name__ = "Integer32"
_IcmpPingHostIndex_Object = MibTableColumn
icmpPingHostIndex = _IcmpPingHostIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 9, 1, 1, 1),
    _IcmpPingHostIndex_Type()
)
icmpPingHostIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpPingHostIndex.setStatus("mandatory")
_IcmpPingHostAddress_Type = IpAddress
_IcmpPingHostAddress_Object = MibTableColumn
icmpPingHostAddress = _IcmpPingHostAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 9, 1, 1, 2),
    _IcmpPingHostAddress_Type()
)
icmpPingHostAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    icmpPingHostAddress.setStatus("mandatory")


class _IcmpPingHostDescription_Type(DisplayString):
    """Custom type icmpPingHostDescription based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_IcmpPingHostDescription_Type.__name__ = "DisplayString"
_IcmpPingHostDescription_Object = MibTableColumn
icmpPingHostDescription = _IcmpPingHostDescription_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 9, 1, 1, 3),
    _IcmpPingHostDescription_Type()
)
icmpPingHostDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    icmpPingHostDescription.setStatus("mandatory")


class _IcmpPingHostNotificationType_Type(Integer32):
    """Custom type icmpPingHostNotificationType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("snmp", 2))
    )


_IcmpPingHostNotificationType_Type.__name__ = "Integer32"
_IcmpPingHostNotificationType_Object = MibTableColumn
icmpPingHostNotificationType = _IcmpPingHostNotificationType_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 9, 1, 1, 4),
    _IcmpPingHostNotificationType_Type()
)
icmpPingHostNotificationType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    icmpPingHostNotificationType.setStatus("mandatory")


class _IcmpPingHostPollingInterval_Type(Integer32):
    """Custom type icmpPingHostPollingInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 65535),
    )


_IcmpPingHostPollingInterval_Type.__name__ = "Integer32"
_IcmpPingHostPollingInterval_Object = MibTableColumn
icmpPingHostPollingInterval = _IcmpPingHostPollingInterval_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 9, 1, 1, 5),
    _IcmpPingHostPollingInterval_Type()
)
icmpPingHostPollingInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    icmpPingHostPollingInterval.setStatus("mandatory")


class _IcmpPingHostMaximumRetries_Type(Integer32):
    """Custom type icmpPingHostMaximumRetries based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_IcmpPingHostMaximumRetries_Type.__name__ = "Integer32"
_IcmpPingHostMaximumRetries_Object = MibTableColumn
icmpPingHostMaximumRetries = _IcmpPingHostMaximumRetries_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 9, 1, 1, 6),
    _IcmpPingHostMaximumRetries_Type()
)
icmpPingHostMaximumRetries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    icmpPingHostMaximumRetries.setStatus("mandatory")


class _IcmpPingHostTrapSeverityLevel_Type(Integer32):
    """Custom type icmpPingHostTrapSeverityLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("critical", 6),
          ("indeterminate", 2),
          ("major", 5),
          ("minor", 4),
          ("warning", 3))
    )


_IcmpPingHostTrapSeverityLevel_Type.__name__ = "Integer32"
_IcmpPingHostTrapSeverityLevel_Object = MibTableColumn
icmpPingHostTrapSeverityLevel = _IcmpPingHostTrapSeverityLevel_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 9, 1, 1, 7),
    _IcmpPingHostTrapSeverityLevel_Type()
)
icmpPingHostTrapSeverityLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    icmpPingHostTrapSeverityLevel.setStatus("mandatory")


class _IcmpPingHostStatus_Type(Integer32):
    """Custom type icmpPingHostStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("cleared", 1),
          ("critical", 6),
          ("indeterminate", 2),
          ("major", 5),
          ("minor", 4),
          ("warning", 3))
    )


_IcmpPingHostStatus_Type.__name__ = "Integer32"
_IcmpPingHostStatus_Object = MibTableColumn
icmpPingHostStatus = _IcmpPingHostStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 13, 9, 1, 1, 8),
    _IcmpPingHostStatus_Type()
)
icmpPingHostStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpPingHostStatus.setStatus("mandatory")
_XDecnet_ObjectIdentity = ObjectIdentity
xDecnet = _XDecnet_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 14)
)
_XRcp_ObjectIdentity = ObjectIdentity
xRcp = _XRcp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 14, 1)
)


class _RcpRemoteAddress_Type(OctetString):
    """Custom type rcpRemoteAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_RcpRemoteAddress_Type.__name__ = "OctetString"
_RcpRemoteAddress_Object = MibScalar
rcpRemoteAddress = _RcpRemoteAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 1, 1),
    _RcpRemoteAddress_Type()
)
rcpRemoteAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rcpRemoteAddress.setStatus("mandatory")
_XPhiv_ObjectIdentity = ObjectIdentity
xPhiv = _XPhiv_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 14, 2)
)
_XPhivRoute_ObjectIdentity = ObjectIdentity
xPhivRoute = _XPhivRoute_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 1)
)


class _PhivPathSelection_Type(Integer32):
    """Custom type phivPathSelection based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("roundRobin", 1),
          ("samePath", 2))
    )


_PhivPathSelection_Type.__name__ = "Integer32"
_PhivPathSelection_Object = MibScalar
phivPathSelection = _PhivPathSelection_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 1, 1),
    _PhivPathSelection_Type()
)
phivPathSelection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivPathSelection.setStatus("mandatory")


class _PhivMaxPaths_Type(Integer32):
    """Custom type phivMaxPaths based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_PhivMaxPaths_Type.__name__ = "Integer32"
_PhivMaxPaths_Object = MibScalar
phivMaxPaths = _PhivMaxPaths_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 1, 2),
    _PhivMaxPaths_Type()
)
phivMaxPaths.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivMaxPaths.setStatus("mandatory")


class _PhivStatus_Type(Integer32):
    """Custom type phivStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("badCost", 5),
          ("disabled", 2),
          ("noAddressSpecified", 3),
          ("noInterfacesEnabled", 4))
    )


_PhivStatus_Type.__name__ = "Integer32"
_PhivStatus_Object = MibScalar
phivStatus = _PhivStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 1, 3),
    _PhivStatus_Type()
)
phivStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivStatus.setStatus("mandatory")
_XPhivCircuit_ObjectIdentity = ObjectIdentity
xPhivCircuit = _XPhivCircuit_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 2)
)
_PhivCircuitTable_Object = MibTable
phivCircuitTable = _PhivCircuitTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 2, 1)
)
if mibBuilder.loadTexts:
    phivCircuitTable.setStatus("mandatory")
_PhivCircuitEntry_Object = MibTableRow
phivCircuitEntry = _PhivCircuitEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 2, 1, 1)
)
phivCircuitEntry.setIndexNames(
    (0, "MRVINREACH", "xPhivCircuitIndex"),
)
if mibBuilder.loadTexts:
    phivCircuitEntry.setStatus("mandatory")
_XPhivCircuitIndex_Type = Integer32
_XPhivCircuitIndex_Object = MibTableColumn
xPhivCircuitIndex = _XPhivCircuitIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 2, 1, 1, 1),
    _XPhivCircuitIndex_Type()
)
xPhivCircuitIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPhivCircuitIndex.setStatus("mandatory")


class _PhivCircuitRoutingTimer_Type(Integer32):
    """Custom type phivCircuitRoutingTimer based on Integer32"""
    defaultValue = 40

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_PhivCircuitRoutingTimer_Type.__name__ = "Integer32"
_PhivCircuitRoutingTimer_Object = MibTableColumn
phivCircuitRoutingTimer = _PhivCircuitRoutingTimer_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 2, 1, 1, 2),
    _PhivCircuitRoutingTimer_Type()
)
phivCircuitRoutingTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivCircuitRoutingTimer.setStatus("mandatory")
_PhivCircuitOperCost_Type = Integer32
_PhivCircuitOperCost_Object = MibTableColumn
phivCircuitOperCost = _PhivCircuitOperCost_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 2, 1, 1, 3),
    _PhivCircuitOperCost_Type()
)
phivCircuitOperCost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitOperCost.setStatus("mandatory")
_PhivCircuitErrors_Type = Counter32
_PhivCircuitErrors_Object = MibTableColumn
phivCircuitErrors = _PhivCircuitErrors_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 2, 1, 1, 4),
    _PhivCircuitErrors_Type()
)
phivCircuitErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitErrors.setStatus("mandatory")


class _PhivCircuitLastError_Type(Integer32):
    """Custom type phivCircuitLastError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("addressOutOfRange", 2),
          ("ageExceeded", 3),
          ("destinationUnreachable", 4),
          ("noError", 1),
          ("packetFormatError", 5),
          ("packetOversized", 6),
          ("partialRoutingUpdate", 7),
          ("verificationReject", 8))
    )


_PhivCircuitLastError_Type.__name__ = "Integer32"
_PhivCircuitLastError_Object = MibTableColumn
phivCircuitLastError = _PhivCircuitLastError_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 2, 1, 1, 5),
    _PhivCircuitLastError_Type()
)
phivCircuitLastError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitLastError.setStatus("mandatory")
_PhivCircuitLastErrorTime_Type = DateTime
_PhivCircuitLastErrorTime_Object = MibTableColumn
phivCircuitLastErrorTime = _PhivCircuitLastErrorTime_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 2, 1, 1, 6),
    _PhivCircuitLastErrorTime_Type()
)
phivCircuitLastErrorTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitLastErrorTime.setStatus("mandatory")


class _PhivCircuitLastErrorData_Type(OctetString):
    """Custom type phivCircuitLastErrorData based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(22, 22),
    )


_PhivCircuitLastErrorData_Type.__name__ = "OctetString"
_PhivCircuitLastErrorData_Object = MibTableColumn
phivCircuitLastErrorData = _PhivCircuitLastErrorData_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 2, 1, 1, 7),
    _PhivCircuitLastErrorData_Type()
)
phivCircuitLastErrorData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitLastErrorData.setStatus("mandatory")


class _PhivCircuitProtocolPriority_Type(Integer32):
    """Custom type phivCircuitProtocolPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              5)
        )
    )
    namedValues = NamedValues(
        *(("high", 5),
          ("low", 1),
          ("medium", 3))
    )


_PhivCircuitProtocolPriority_Type.__name__ = "Integer32"
_PhivCircuitProtocolPriority_Object = MibTableColumn
phivCircuitProtocolPriority = _PhivCircuitProtocolPriority_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 2, 1, 1, 8),
    _PhivCircuitProtocolPriority_Type()
)
phivCircuitProtocolPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivCircuitProtocolPriority.setStatus("mandatory")


class _PhivCircuitRoutingPriority_Type(Integer32):
    """Custom type phivCircuitRoutingPriority based on Integer32"""
    defaultValue = 64

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 127),
    )


_PhivCircuitRoutingPriority_Type.__name__ = "Integer32"
_PhivCircuitRoutingPriority_Object = MibTableColumn
phivCircuitRoutingPriority = _PhivCircuitRoutingPriority_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 2, 1, 1, 9),
    _PhivCircuitRoutingPriority_Type()
)
phivCircuitRoutingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivCircuitRoutingPriority.setStatus("mandatory")
_XPhivImport_ObjectIdentity = ObjectIdentity
xPhivImport = _XPhivImport_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 3)
)
_PhivCircuitImportTable_Object = MibTable
phivCircuitImportTable = _PhivCircuitImportTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 3, 1)
)
if mibBuilder.loadTexts:
    phivCircuitImportTable.setStatus("mandatory")
_PhivCircuitImportEntry_Object = MibTableRow
phivCircuitImportEntry = _PhivCircuitImportEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 3, 1, 1)
)
phivCircuitImportEntry.setIndexNames(
    (0, "MRVINREACH", "phivCircuitImportIf"),
    (0, "MRVINREACH", "phivCircuitImportAddr"),
    (0, "MRVINREACH", "phivCircuitImportMask"),
)
if mibBuilder.loadTexts:
    phivCircuitImportEntry.setStatus("mandatory")
_PhivCircuitImportIf_Type = Integer32
_PhivCircuitImportIf_Object = MibTableColumn
phivCircuitImportIf = _PhivCircuitImportIf_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 3, 1, 1, 1),
    _PhivCircuitImportIf_Type()
)
phivCircuitImportIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitImportIf.setStatus("mandatory")
_PhivCircuitImportAddr_Type = PhivAddr
_PhivCircuitImportAddr_Object = MibTableColumn
phivCircuitImportAddr = _PhivCircuitImportAddr_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 3, 1, 1, 2),
    _PhivCircuitImportAddr_Type()
)
phivCircuitImportAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitImportAddr.setStatus("mandatory")
_PhivCircuitImportMask_Type = PhivAddr
_PhivCircuitImportMask_Object = MibTableColumn
phivCircuitImportMask = _PhivCircuitImportMask_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 3, 1, 1, 3),
    _PhivCircuitImportMask_Type()
)
phivCircuitImportMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitImportMask.setStatus("mandatory")


class _PhivCircuitImportAction_Type(Integer32):
    """Custom type phivCircuitImportAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("accept", 2),
          ("discard", 1))
    )


_PhivCircuitImportAction_Type.__name__ = "Integer32"
_PhivCircuitImportAction_Object = MibTableColumn
phivCircuitImportAction = _PhivCircuitImportAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 3, 1, 1, 4),
    _PhivCircuitImportAction_Type()
)
phivCircuitImportAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivCircuitImportAction.setStatus("mandatory")


class _PhivCircuitImportStatus_Type(Integer32):
    """Custom type phivCircuitImportStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_PhivCircuitImportStatus_Type.__name__ = "Integer32"
_PhivCircuitImportStatus_Object = MibTableColumn
phivCircuitImportStatus = _PhivCircuitImportStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 3, 1, 1, 5),
    _PhivCircuitImportStatus_Type()
)
phivCircuitImportStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivCircuitImportStatus.setStatus("mandatory")
_XPhivImportArea_ObjectIdentity = ObjectIdentity
xPhivImportArea = _XPhivImportArea_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 4)
)
_PhivCircuitImportAreaTable_Object = MibTable
phivCircuitImportAreaTable = _PhivCircuitImportAreaTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 4, 1)
)
if mibBuilder.loadTexts:
    phivCircuitImportAreaTable.setStatus("mandatory")
_PhivCircuitImportAreaEntry_Object = MibTableRow
phivCircuitImportAreaEntry = _PhivCircuitImportAreaEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 4, 1, 1)
)
phivCircuitImportAreaEntry.setIndexNames(
    (0, "MRVINREACH", "phivCircuitImportAreaIf"),
    (0, "MRVINREACH", "phivCircuitImportAreaAddr"),
    (0, "MRVINREACH", "phivCircuitImportAreaMask"),
)
if mibBuilder.loadTexts:
    phivCircuitImportAreaEntry.setStatus("mandatory")
_PhivCircuitImportAreaIf_Type = Integer32
_PhivCircuitImportAreaIf_Object = MibTableColumn
phivCircuitImportAreaIf = _PhivCircuitImportAreaIf_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 4, 1, 1, 1),
    _PhivCircuitImportAreaIf_Type()
)
phivCircuitImportAreaIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitImportAreaIf.setStatus("mandatory")
_PhivCircuitImportAreaAddr_Type = PhivAddr
_PhivCircuitImportAreaAddr_Object = MibTableColumn
phivCircuitImportAreaAddr = _PhivCircuitImportAreaAddr_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 4, 1, 1, 2),
    _PhivCircuitImportAreaAddr_Type()
)
phivCircuitImportAreaAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitImportAreaAddr.setStatus("mandatory")
_PhivCircuitImportAreaMask_Type = PhivAddr
_PhivCircuitImportAreaMask_Object = MibTableColumn
phivCircuitImportAreaMask = _PhivCircuitImportAreaMask_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 4, 1, 1, 3),
    _PhivCircuitImportAreaMask_Type()
)
phivCircuitImportAreaMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitImportAreaMask.setStatus("mandatory")


class _PhivCircuitImportAreaAction_Type(Integer32):
    """Custom type phivCircuitImportAreaAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("accept", 2),
          ("discard", 1))
    )


_PhivCircuitImportAreaAction_Type.__name__ = "Integer32"
_PhivCircuitImportAreaAction_Object = MibTableColumn
phivCircuitImportAreaAction = _PhivCircuitImportAreaAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 4, 1, 1, 4),
    _PhivCircuitImportAreaAction_Type()
)
phivCircuitImportAreaAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivCircuitImportAreaAction.setStatus("mandatory")


class _PhivCircuitImportAreaStatus_Type(Integer32):
    """Custom type phivCircuitImportAreaStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_PhivCircuitImportAreaStatus_Type.__name__ = "Integer32"
_PhivCircuitImportAreaStatus_Object = MibTableColumn
phivCircuitImportAreaStatus = _PhivCircuitImportAreaStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 4, 1, 1, 5),
    _PhivCircuitImportAreaStatus_Type()
)
phivCircuitImportAreaStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivCircuitImportAreaStatus.setStatus("mandatory")
_XPhivExport_ObjectIdentity = ObjectIdentity
xPhivExport = _XPhivExport_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 5)
)
_PhivCircuitExportTable_Object = MibTable
phivCircuitExportTable = _PhivCircuitExportTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 5, 1)
)
if mibBuilder.loadTexts:
    phivCircuitExportTable.setStatus("mandatory")
_PhivCircuitExportEntry_Object = MibTableRow
phivCircuitExportEntry = _PhivCircuitExportEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 5, 1, 1)
)
phivCircuitExportEntry.setIndexNames(
    (0, "MRVINREACH", "phivCircuitExportIf"),
    (0, "MRVINREACH", "phivCircuitExportAddr"),
    (0, "MRVINREACH", "phivCircuitExportMask"),
)
if mibBuilder.loadTexts:
    phivCircuitExportEntry.setStatus("mandatory")
_PhivCircuitExportIf_Type = Integer32
_PhivCircuitExportIf_Object = MibTableColumn
phivCircuitExportIf = _PhivCircuitExportIf_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 5, 1, 1, 1),
    _PhivCircuitExportIf_Type()
)
phivCircuitExportIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitExportIf.setStatus("mandatory")
_PhivCircuitExportAddr_Type = PhivAddr
_PhivCircuitExportAddr_Object = MibTableColumn
phivCircuitExportAddr = _PhivCircuitExportAddr_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 5, 1, 1, 2),
    _PhivCircuitExportAddr_Type()
)
phivCircuitExportAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitExportAddr.setStatus("mandatory")
_PhivCircuitExportMask_Type = PhivAddr
_PhivCircuitExportMask_Object = MibTableColumn
phivCircuitExportMask = _PhivCircuitExportMask_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 5, 1, 1, 3),
    _PhivCircuitExportMask_Type()
)
phivCircuitExportMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitExportMask.setStatus("mandatory")


class _PhivCircuitExportAction_Type(Integer32):
    """Custom type phivCircuitExportAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertise", 2),
          ("hide", 1))
    )


_PhivCircuitExportAction_Type.__name__ = "Integer32"
_PhivCircuitExportAction_Object = MibTableColumn
phivCircuitExportAction = _PhivCircuitExportAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 5, 1, 1, 4),
    _PhivCircuitExportAction_Type()
)
phivCircuitExportAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivCircuitExportAction.setStatus("mandatory")


class _PhivCircuitExportStatus_Type(Integer32):
    """Custom type phivCircuitExportStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_PhivCircuitExportStatus_Type.__name__ = "Integer32"
_PhivCircuitExportStatus_Object = MibTableColumn
phivCircuitExportStatus = _PhivCircuitExportStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 5, 1, 1, 5),
    _PhivCircuitExportStatus_Type()
)
phivCircuitExportStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivCircuitExportStatus.setStatus("mandatory")
_XPhivExportArea_ObjectIdentity = ObjectIdentity
xPhivExportArea = _XPhivExportArea_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 6)
)
_PhivCircuitExportAreaTable_Object = MibTable
phivCircuitExportAreaTable = _PhivCircuitExportAreaTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 6, 1)
)
if mibBuilder.loadTexts:
    phivCircuitExportAreaTable.setStatus("mandatory")
_PhivCircuitExportAreaEntry_Object = MibTableRow
phivCircuitExportAreaEntry = _PhivCircuitExportAreaEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 6, 1, 1)
)
phivCircuitExportAreaEntry.setIndexNames(
    (0, "MRVINREACH", "phivCircuitExportAreaIf"),
    (0, "MRVINREACH", "phivCircuitExportAreaAddr"),
    (0, "MRVINREACH", "phivCircuitExportAreaMask"),
)
if mibBuilder.loadTexts:
    phivCircuitExportAreaEntry.setStatus("mandatory")
_PhivCircuitExportAreaIf_Type = Integer32
_PhivCircuitExportAreaIf_Object = MibTableColumn
phivCircuitExportAreaIf = _PhivCircuitExportAreaIf_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 6, 1, 1, 1),
    _PhivCircuitExportAreaIf_Type()
)
phivCircuitExportAreaIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitExportAreaIf.setStatus("mandatory")
_PhivCircuitExportAreaAddr_Type = PhivAddr
_PhivCircuitExportAreaAddr_Object = MibTableColumn
phivCircuitExportAreaAddr = _PhivCircuitExportAreaAddr_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 6, 1, 1, 2),
    _PhivCircuitExportAreaAddr_Type()
)
phivCircuitExportAreaAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitExportAreaAddr.setStatus("mandatory")
_PhivCircuitExportAreaMask_Type = PhivAddr
_PhivCircuitExportAreaMask_Object = MibTableColumn
phivCircuitExportAreaMask = _PhivCircuitExportAreaMask_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 6, 1, 1, 3),
    _PhivCircuitExportAreaMask_Type()
)
phivCircuitExportAreaMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitExportAreaMask.setStatus("mandatory")


class _PhivCircuitExportAreaAction_Type(Integer32):
    """Custom type phivCircuitExportAreaAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertise", 2),
          ("hide", 1))
    )


_PhivCircuitExportAreaAction_Type.__name__ = "Integer32"
_PhivCircuitExportAreaAction_Object = MibTableColumn
phivCircuitExportAreaAction = _PhivCircuitExportAreaAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 6, 1, 1, 4),
    _PhivCircuitExportAreaAction_Type()
)
phivCircuitExportAreaAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivCircuitExportAreaAction.setStatus("mandatory")


class _PhivCircuitExportAreaStatus_Type(Integer32):
    """Custom type phivCircuitExportAreaStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_PhivCircuitExportAreaStatus_Type.__name__ = "Integer32"
_PhivCircuitExportAreaStatus_Object = MibTableColumn
phivCircuitExportAreaStatus = _PhivCircuitExportAreaStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 6, 1, 1, 5),
    _PhivCircuitExportAreaStatus_Type()
)
phivCircuitExportAreaStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivCircuitExportAreaStatus.setStatus("mandatory")
_XPhivFilter_ObjectIdentity = ObjectIdentity
xPhivFilter = _XPhivFilter_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 7)
)
_PhivCircuitFilterTable_Object = MibTable
phivCircuitFilterTable = _PhivCircuitFilterTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 7, 1)
)
if mibBuilder.loadTexts:
    phivCircuitFilterTable.setStatus("mandatory")
_PhivCircuitFilterEntry_Object = MibTableRow
phivCircuitFilterEntry = _PhivCircuitFilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 7, 1, 1)
)
phivCircuitFilterEntry.setIndexNames(
    (0, "MRVINREACH", "phivCircuitFilterIf"),
    (0, "MRVINREACH", "phivCircuitFilterDstAddr"),
    (0, "MRVINREACH", "phivCircuitFilterDstMask"),
    (0, "MRVINREACH", "phivCircuitFilterSrcAddr"),
    (0, "MRVINREACH", "phivCircuitFilterSrcMask"),
)
if mibBuilder.loadTexts:
    phivCircuitFilterEntry.setStatus("mandatory")
_PhivCircuitFilterIf_Type = Integer32
_PhivCircuitFilterIf_Object = MibTableColumn
phivCircuitFilterIf = _PhivCircuitFilterIf_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 7, 1, 1, 1),
    _PhivCircuitFilterIf_Type()
)
phivCircuitFilterIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitFilterIf.setStatus("mandatory")
_PhivCircuitFilterDstAddr_Type = PhivAddr
_PhivCircuitFilterDstAddr_Object = MibTableColumn
phivCircuitFilterDstAddr = _PhivCircuitFilterDstAddr_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 7, 1, 1, 2),
    _PhivCircuitFilterDstAddr_Type()
)
phivCircuitFilterDstAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitFilterDstAddr.setStatus("mandatory")
_PhivCircuitFilterDstMask_Type = PhivAddr
_PhivCircuitFilterDstMask_Object = MibTableColumn
phivCircuitFilterDstMask = _PhivCircuitFilterDstMask_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 7, 1, 1, 3),
    _PhivCircuitFilterDstMask_Type()
)
phivCircuitFilterDstMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitFilterDstMask.setStatus("mandatory")
_PhivCircuitFilterSrcAddr_Type = PhivAddr
_PhivCircuitFilterSrcAddr_Object = MibTableColumn
phivCircuitFilterSrcAddr = _PhivCircuitFilterSrcAddr_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 7, 1, 1, 4),
    _PhivCircuitFilterSrcAddr_Type()
)
phivCircuitFilterSrcAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitFilterSrcAddr.setStatus("mandatory")
_PhivCircuitFilterSrcMask_Type = PhivAddr
_PhivCircuitFilterSrcMask_Object = MibTableColumn
phivCircuitFilterSrcMask = _PhivCircuitFilterSrcMask_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 7, 1, 1, 5),
    _PhivCircuitFilterSrcMask_Type()
)
phivCircuitFilterSrcMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivCircuitFilterSrcMask.setStatus("mandatory")


class _PhivCircuitFilterAction_Type(Integer32):
    """Custom type phivCircuitFilterAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("discard", 1),
          ("forward", 2))
    )


_PhivCircuitFilterAction_Type.__name__ = "Integer32"
_PhivCircuitFilterAction_Object = MibTableColumn
phivCircuitFilterAction = _PhivCircuitFilterAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 7, 1, 1, 6),
    _PhivCircuitFilterAction_Type()
)
phivCircuitFilterAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivCircuitFilterAction.setStatus("mandatory")


class _PhivCircuitFilterStatus_Type(Integer32):
    """Custom type phivCircuitFilterStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_PhivCircuitFilterStatus_Type.__name__ = "Integer32"
_PhivCircuitFilterStatus_Object = MibTableColumn
phivCircuitFilterStatus = _PhivCircuitFilterStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 7, 1, 1, 7),
    _PhivCircuitFilterStatus_Type()
)
phivCircuitFilterStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivCircuitFilterStatus.setStatus("mandatory")
_XPhivTraffic_ObjectIdentity = ObjectIdentity
xPhivTraffic = _XPhivTraffic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 8)
)


class _PhivTrafficSort_Type(Integer32):
    """Custom type phivTrafficSort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_PhivTrafficSort_Type.__name__ = "Integer32"
_PhivTrafficSort_Object = MibScalar
phivTrafficSort = _PhivTrafficSort_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 8, 1),
    _PhivTrafficSort_Type()
)
phivTrafficSort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    phivTrafficSort.setStatus("mandatory")
_PhivTrafficTable_Object = MibTable
phivTrafficTable = _PhivTrafficTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 8, 2)
)
if mibBuilder.loadTexts:
    phivTrafficTable.setStatus("mandatory")
_PhivTrafficEntry_Object = MibTableRow
phivTrafficEntry = _PhivTrafficEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 8, 2, 1)
)
phivTrafficEntry.setIndexNames(
    (0, "MRVINREACH", "phivTrafficIndex"),
)
if mibBuilder.loadTexts:
    phivTrafficEntry.setStatus("mandatory")
_PhivTrafficIndex_Type = Integer32
_PhivTrafficIndex_Object = MibTableColumn
phivTrafficIndex = _PhivTrafficIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 8, 2, 1, 1),
    _PhivTrafficIndex_Type()
)
phivTrafficIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivTrafficIndex.setStatus("mandatory")


class _PhivTrafficPercent_Type(Integer32):
    """Custom type phivTrafficPercent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000),
    )


_PhivTrafficPercent_Type.__name__ = "Integer32"
_PhivTrafficPercent_Object = MibTableColumn
phivTrafficPercent = _PhivTrafficPercent_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 8, 2, 1, 2),
    _PhivTrafficPercent_Type()
)
phivTrafficPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivTrafficPercent.setStatus("mandatory")
_PhivTrafficDst_Type = PhivAddr
_PhivTrafficDst_Object = MibTableColumn
phivTrafficDst = _PhivTrafficDst_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 8, 2, 1, 3),
    _PhivTrafficDst_Type()
)
phivTrafficDst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivTrafficDst.setStatus("mandatory")
_PhivTrafficSrc_Type = PhivAddr
_PhivTrafficSrc_Object = MibTableColumn
phivTrafficSrc = _PhivTrafficSrc_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 8, 2, 1, 4),
    _PhivTrafficSrc_Type()
)
phivTrafficSrc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivTrafficSrc.setStatus("mandatory")
_PhivTrafficIf_Type = Integer32
_PhivTrafficIf_Object = MibTableColumn
phivTrafficIf = _PhivTrafficIf_Object(
    (1, 3, 6, 1, 4, 1, 33, 14, 2, 8, 2, 1, 5),
    _PhivTrafficIf_Type()
)
phivTrafficIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    phivTrafficIf.setStatus("mandatory")
_XIpx_ObjectIdentity = ObjectIdentity
xIpx = _XIpx_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 15)
)
_XIpxSystem_ObjectIdentity = ObjectIdentity
xIpxSystem = _XIpxSystem_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 15, 1)
)


class _IpxRouting_Type(Integer32):
    """Custom type ipxRouting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpxRouting_Type.__name__ = "Integer32"
_IpxRouting_Object = MibScalar
ipxRouting = _IpxRouting_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 1, 1),
    _IpxRouting_Type()
)
ipxRouting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxRouting.setStatus("mandatory")


class _IpxInternalNetwork_Type(Integer32):
    """Custom type ipxInternalNetwork based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967294),
    )


_IpxInternalNetwork_Type.__name__ = "Integer32"
_IpxInternalNetwork_Object = MibScalar
ipxInternalNetwork = _IpxInternalNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 1, 2),
    _IpxInternalNetwork_Type()
)
ipxInternalNetwork.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxInternalNetwork.setStatus("mandatory")
_XIpxIf_ObjectIdentity = ObjectIdentity
xIpxIf = _XIpxIf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 15, 2)
)
_IpxIfTable_Object = MibTable
ipxIfTable = _IpxIfTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 2, 1)
)
if mibBuilder.loadTexts:
    ipxIfTable.setStatus("mandatory")
_IpxIfEntry_Object = MibTableRow
ipxIfEntry = _IpxIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 2, 1, 1)
)
ipxIfEntry.setIndexNames(
    (0, "MRVINREACH", "ipxIfIndex"),
)
if mibBuilder.loadTexts:
    ipxIfEntry.setStatus("mandatory")
_IpxIfIndex_Type = Integer32
_IpxIfIndex_Object = MibTableColumn
ipxIfIndex = _IpxIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 2, 1, 1, 1),
    _IpxIfIndex_Type()
)
ipxIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfIndex.setStatus("mandatory")


class _IpxIfState_Type(Integer32):
    """Custom type ipxIfState based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpxIfState_Type.__name__ = "Integer32"
_IpxIfState_Object = MibTableColumn
ipxIfState = _IpxIfState_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 2, 1, 1, 2),
    _IpxIfState_Type()
)
ipxIfState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxIfState.setStatus("mandatory")


class _IpxIfNetwork_Type(Integer32):
    """Custom type ipxIfNetwork based on Integer32"""
    defaultValue = 0


_IpxIfNetwork_Object = MibTableColumn
ipxIfNetwork = _IpxIfNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 2, 1, 1, 3),
    _IpxIfNetwork_Type()
)
ipxIfNetwork.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxIfNetwork.setStatus("mandatory")


class _IpxIfFrameStyle_Type(Integer32):
    """Custom type ipxIfFrameStyle based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ethernet", 1),
          ("ieee8022", 3),
          ("ieee8023", 2),
          ("ieee802Snap", 4))
    )


_IpxIfFrameStyle_Type.__name__ = "Integer32"
_IpxIfFrameStyle_Object = MibTableColumn
ipxIfFrameStyle = _IpxIfFrameStyle_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 2, 1, 1, 4),
    _IpxIfFrameStyle_Type()
)
ipxIfFrameStyle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxIfFrameStyle.setStatus("mandatory")
_IpxIfFramesIn_Type = Counter32
_IpxIfFramesIn_Object = MibTableColumn
ipxIfFramesIn = _IpxIfFramesIn_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 2, 1, 1, 5),
    _IpxIfFramesIn_Type()
)
ipxIfFramesIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfFramesIn.setStatus("mandatory")
_IpxIfFramesOut_Type = Counter32
_IpxIfFramesOut_Object = MibTableColumn
ipxIfFramesOut = _IpxIfFramesOut_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 2, 1, 1, 6),
    _IpxIfFramesOut_Type()
)
ipxIfFramesOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfFramesOut.setStatus("mandatory")
_IpxIfErrors_Type = Counter32
_IpxIfErrors_Object = MibTableColumn
ipxIfErrors = _IpxIfErrors_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 2, 1, 1, 7),
    _IpxIfErrors_Type()
)
ipxIfErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfErrors.setStatus("mandatory")
_IpxIfTransitDelay_Type = Integer32
_IpxIfTransitDelay_Object = MibTableColumn
ipxIfTransitDelay = _IpxIfTransitDelay_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 2, 1, 1, 8),
    _IpxIfTransitDelay_Type()
)
ipxIfTransitDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxIfTransitDelay.setStatus("mandatory")
_IpxIfTransitDelayActual_Type = Integer32
_IpxIfTransitDelayActual_Object = MibTableColumn
ipxIfTransitDelayActual = _IpxIfTransitDelayActual_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 2, 1, 1, 9),
    _IpxIfTransitDelayActual_Type()
)
ipxIfTransitDelayActual.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfTransitDelayActual.setStatus("mandatory")


class _IpxIfProtocolPriority_Type(Integer32):
    """Custom type ipxIfProtocolPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              5)
        )
    )
    namedValues = NamedValues(
        *(("high", 5),
          ("low", 1),
          ("medium", 3))
    )


_IpxIfProtocolPriority_Type.__name__ = "Integer32"
_IpxIfProtocolPriority_Object = MibTableColumn
ipxIfProtocolPriority = _IpxIfProtocolPriority_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 2, 1, 1, 10),
    _IpxIfProtocolPriority_Type()
)
ipxIfProtocolPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxIfProtocolPriority.setStatus("mandatory")


class _IpxIfWatchdogSpoof_Type(Integer32):
    """Custom type ipxIfWatchdogSpoof based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpxIfWatchdogSpoof_Type.__name__ = "Integer32"
_IpxIfWatchdogSpoof_Object = MibTableColumn
ipxIfWatchdogSpoof = _IpxIfWatchdogSpoof_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 2, 1, 1, 11),
    _IpxIfWatchdogSpoof_Type()
)
ipxIfWatchdogSpoof.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxIfWatchdogSpoof.setStatus("mandatory")


class _IpxIfStatusNetwork_Type(Integer32):
    """Custom type ipxIfStatusNetwork based on Integer32"""
    defaultValue = 0


_IpxIfStatusNetwork_Object = MibTableColumn
ipxIfStatusNetwork = _IpxIfStatusNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 2, 1, 1, 12),
    _IpxIfStatusNetwork_Type()
)
ipxIfStatusNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfStatusNetwork.setStatus("mandatory")
_XIpxNetbios_ObjectIdentity = ObjectIdentity
xIpxNetbios = _XIpxNetbios_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 15, 3)
)


class _IpxNetbiosHopLimit_Type(Integer32):
    """Custom type ipxNetbiosHopLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_IpxNetbiosHopLimit_Type.__name__ = "Integer32"
_IpxNetbiosHopLimit_Object = MibScalar
ipxNetbiosHopLimit = _IpxNetbiosHopLimit_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 3, 1),
    _IpxNetbiosHopLimit_Type()
)
ipxNetbiosHopLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxNetbiosHopLimit.setStatus("mandatory")
_IpxNetbiosIfTable_Object = MibTable
ipxNetbiosIfTable = _IpxNetbiosIfTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 3, 2)
)
if mibBuilder.loadTexts:
    ipxNetbiosIfTable.setStatus("mandatory")
_IpxNetbiosIfEntry_Object = MibTableRow
ipxNetbiosIfEntry = _IpxNetbiosIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 3, 2, 1)
)
ipxNetbiosIfEntry.setIndexNames(
    (0, "MRVINREACH", "ipxNetbiosIfIndex"),
)
if mibBuilder.loadTexts:
    ipxNetbiosIfEntry.setStatus("mandatory")
_IpxNetbiosIfIndex_Type = Integer32
_IpxNetbiosIfIndex_Object = MibTableColumn
ipxNetbiosIfIndex = _IpxNetbiosIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 3, 2, 1, 1),
    _IpxNetbiosIfIndex_Type()
)
ipxNetbiosIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxNetbiosIfIndex.setStatus("mandatory")


class _IpxIfNetbiosForwarding_Type(Integer32):
    """Custom type ipxIfNetbiosForwarding based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpxIfNetbiosForwarding_Type.__name__ = "Integer32"
_IpxIfNetbiosForwarding_Object = MibTableColumn
ipxIfNetbiosForwarding = _IpxIfNetbiosForwarding_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 3, 2, 1, 2),
    _IpxIfNetbiosForwarding_Type()
)
ipxIfNetbiosForwarding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxIfNetbiosForwarding.setStatus("mandatory")
_IpxIfNetbiosIn_Type = Counter32
_IpxIfNetbiosIn_Object = MibTableColumn
ipxIfNetbiosIn = _IpxIfNetbiosIn_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 3, 2, 1, 3),
    _IpxIfNetbiosIn_Type()
)
ipxIfNetbiosIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfNetbiosIn.setStatus("mandatory")
_IpxIfNetbiosOut_Type = Counter32
_IpxIfNetbiosOut_Object = MibTableColumn
ipxIfNetbiosOut = _IpxIfNetbiosOut_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 3, 2, 1, 4),
    _IpxIfNetbiosOut_Type()
)
ipxIfNetbiosOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfNetbiosOut.setStatus("mandatory")
_XIpxRip_ObjectIdentity = ObjectIdentity
xIpxRip = _XIpxRip_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 15, 4)
)
_IpxRipIfTable_Object = MibTable
ipxRipIfTable = _IpxRipIfTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 1)
)
if mibBuilder.loadTexts:
    ipxRipIfTable.setStatus("mandatory")
_IpxRipIfEntry_Object = MibTableRow
ipxRipIfEntry = _IpxRipIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 1, 1)
)
ipxRipIfEntry.setIndexNames(
    (0, "MRVINREACH", "ipxRipIfIndex"),
)
if mibBuilder.loadTexts:
    ipxRipIfEntry.setStatus("mandatory")
_IpxRipIfIndex_Type = Integer32
_IpxRipIfIndex_Object = MibTableColumn
ipxRipIfIndex = _IpxRipIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 1, 1, 1),
    _IpxRipIfIndex_Type()
)
ipxRipIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxRipIfIndex.setStatus("mandatory")


class _IpxIfRipBcst_Type(Integer32):
    """Custom type ipxIfRipBcst based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("demandCircuit", 4),
          ("disabled", 1),
          ("enabled", 2),
          ("propUpdateOnly", 3))
    )


_IpxIfRipBcst_Type.__name__ = "Integer32"
_IpxIfRipBcst_Object = MibTableColumn
ipxIfRipBcst = _IpxIfRipBcst_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 1, 1, 2),
    _IpxIfRipBcst_Type()
)
ipxIfRipBcst.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxIfRipBcst.setStatus("mandatory")


class _IpxIfRipBcstDiscardTimeout_Type(Integer32):
    """Custom type ipxIfRipBcstDiscardTimeout based on Integer32"""
    defaultValue = 180


_IpxIfRipBcstDiscardTimeout_Object = MibTableColumn
ipxIfRipBcstDiscardTimeout = _IpxIfRipBcstDiscardTimeout_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 1, 1, 3),
    _IpxIfRipBcstDiscardTimeout_Type()
)
ipxIfRipBcstDiscardTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxIfRipBcstDiscardTimeout.setStatus("mandatory")


class _IpxIfRipBcstTimer_Type(Integer32):
    """Custom type ipxIfRipBcstTimer based on Integer32"""
    defaultValue = 60


_IpxIfRipBcstTimer_Object = MibTableColumn
ipxIfRipBcstTimer = _IpxIfRipBcstTimer_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 1, 1, 4),
    _IpxIfRipBcstTimer_Type()
)
ipxIfRipBcstTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxIfRipBcstTimer.setStatus("mandatory")
_IpxIfRipIn_Type = Counter32
_IpxIfRipIn_Object = MibTableColumn
ipxIfRipIn = _IpxIfRipIn_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 1, 1, 5),
    _IpxIfRipIn_Type()
)
ipxIfRipIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfRipIn.setStatus("mandatory")
_IpxIfRipOut_Type = Counter32
_IpxIfRipOut_Object = MibTableColumn
ipxIfRipOut = _IpxIfRipOut_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 1, 1, 6),
    _IpxIfRipOut_Type()
)
ipxIfRipOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfRipOut.setStatus("mandatory")
_IpxIfRipAgedOut_Type = Counter32
_IpxIfRipAgedOut_Object = MibTableColumn
ipxIfRipAgedOut = _IpxIfRipAgedOut_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 1, 1, 7),
    _IpxIfRipAgedOut_Type()
)
ipxIfRipAgedOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfRipAgedOut.setStatus("mandatory")
_IpxRipTable_Object = MibTable
ipxRipTable = _IpxRipTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 2)
)
if mibBuilder.loadTexts:
    ipxRipTable.setStatus("mandatory")
_IpxRipEntry_Object = MibTableRow
ipxRipEntry = _IpxRipEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 2, 1)
)
ipxRipEntry.setIndexNames(
    (0, "MRVINREACH", "ipxRipNetwork"),
)
if mibBuilder.loadTexts:
    ipxRipEntry.setStatus("mandatory")
_IpxRipNetwork_Type = Integer32
_IpxRipNetwork_Object = MibTableColumn
ipxRipNetwork = _IpxRipNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 2, 1, 1),
    _IpxRipNetwork_Type()
)
ipxRipNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxRipNetwork.setStatus("mandatory")


class _IpxRipRouter_Type(OctetString):
    """Custom type ipxRipRouter based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )


_IpxRipRouter_Type.__name__ = "OctetString"
_IpxRipRouter_Object = MibTableColumn
ipxRipRouter = _IpxRipRouter_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 2, 1, 2),
    _IpxRipRouter_Type()
)
ipxRipRouter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxRipRouter.setStatus("mandatory")
_IpxRipInterface_Type = Integer32
_IpxRipInterface_Object = MibTableColumn
ipxRipInterface = _IpxRipInterface_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 2, 1, 3),
    _IpxRipInterface_Type()
)
ipxRipInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxRipInterface.setStatus("mandatory")
_IpxRipHops_Type = Integer32
_IpxRipHops_Object = MibTableColumn
ipxRipHops = _IpxRipHops_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 2, 1, 4),
    _IpxRipHops_Type()
)
ipxRipHops.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxRipHops.setStatus("mandatory")
_IpxRipTransTime_Type = Integer32
_IpxRipTransTime_Object = MibTableColumn
ipxRipTransTime = _IpxRipTransTime_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 2, 1, 5),
    _IpxRipTransTime_Type()
)
ipxRipTransTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxRipTransTime.setStatus("mandatory")
_IpxRipAge_Type = Integer32
_IpxRipAge_Object = MibTableColumn
ipxRipAge = _IpxRipAge_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 2, 1, 6),
    _IpxRipAge_Type()
)
ipxRipAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxRipAge.setStatus("mandatory")
_IpxRipRtTable_Object = MibTable
ipxRipRtTable = _IpxRipRtTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 3)
)
if mibBuilder.loadTexts:
    ipxRipRtTable.setStatus("mandatory")
_IpxRipRtEntry_Object = MibTableRow
ipxRipRtEntry = _IpxRipRtEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 3, 1)
)
ipxRipRtEntry.setIndexNames(
    (0, "MRVINREACH", "ipxRipRtNetwork"),
    (0, "MRVINREACH", "ipxRipRtInterface"),
    (0, "MRVINREACH", "ipxRipRtOrigin"),
    (0, "MRVINREACH", "ipxRipRtRouter"),
)
if mibBuilder.loadTexts:
    ipxRipRtEntry.setStatus("mandatory")
_IpxRipRtNetwork_Type = Integer32
_IpxRipRtNetwork_Object = MibTableColumn
ipxRipRtNetwork = _IpxRipRtNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 3, 1, 1),
    _IpxRipRtNetwork_Type()
)
ipxRipRtNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxRipRtNetwork.setStatus("mandatory")


class _IpxRipRtRouter_Type(OctetString):
    """Custom type ipxRipRtRouter based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )


_IpxRipRtRouter_Type.__name__ = "OctetString"
_IpxRipRtRouter_Object = MibTableColumn
ipxRipRtRouter = _IpxRipRtRouter_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 3, 1, 2),
    _IpxRipRtRouter_Type()
)
ipxRipRtRouter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxRipRtRouter.setStatus("mandatory")
_IpxRipRtInterface_Type = Integer32
_IpxRipRtInterface_Object = MibTableColumn
ipxRipRtInterface = _IpxRipRtInterface_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 3, 1, 3),
    _IpxRipRtInterface_Type()
)
ipxRipRtInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxRipRtInterface.setStatus("mandatory")


class _IpxRipRtHops_Type(Integer32):
    """Custom type ipxRipRtHops based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_IpxRipRtHops_Type.__name__ = "Integer32"
_IpxRipRtHops_Object = MibTableColumn
ipxRipRtHops = _IpxRipRtHops_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 3, 1, 4),
    _IpxRipRtHops_Type()
)
ipxRipRtHops.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxRipRtHops.setStatus("mandatory")


class _IpxRipRtTransTime_Type(Integer32):
    """Custom type ipxRipRtTransTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_IpxRipRtTransTime_Type.__name__ = "Integer32"
_IpxRipRtTransTime_Object = MibTableColumn
ipxRipRtTransTime = _IpxRipRtTransTime_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 3, 1, 5),
    _IpxRipRtTransTime_Type()
)
ipxRipRtTransTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxRipRtTransTime.setStatus("mandatory")


class _IpxRipRtOrigin_Type(Integer32):
    """Custom type ipxRipRtOrigin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("nlspLearned", 3),
          ("ripLearned", 1),
          ("static", 2))
    )


_IpxRipRtOrigin_Type.__name__ = "Integer32"
_IpxRipRtOrigin_Object = MibTableColumn
ipxRipRtOrigin = _IpxRipRtOrigin_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 3, 1, 6),
    _IpxRipRtOrigin_Type()
)
ipxRipRtOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxRipRtOrigin.setStatus("mandatory")


class _IpxRipRtRowStatus_Type(Integer32):
    """Custom type ipxRipRtRowStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_IpxRipRtRowStatus_Type.__name__ = "Integer32"
_IpxRipRtRowStatus_Object = MibTableColumn
ipxRipRtRowStatus = _IpxRipRtRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 4, 3, 1, 7),
    _IpxRipRtRowStatus_Type()
)
ipxRipRtRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxRipRtRowStatus.setStatus("mandatory")
_XIpxSap_ObjectIdentity = ObjectIdentity
xIpxSap = _XIpxSap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 15, 5)
)
_IpxSapIfTable_Object = MibTable
ipxSapIfTable = _IpxSapIfTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 1)
)
if mibBuilder.loadTexts:
    ipxSapIfTable.setStatus("mandatory")
_IpxSapIfEntry_Object = MibTableRow
ipxSapIfEntry = _IpxSapIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 1, 1)
)
ipxSapIfEntry.setIndexNames(
    (0, "MRVINREACH", "ipxSapIfIndex"),
)
if mibBuilder.loadTexts:
    ipxSapIfEntry.setStatus("mandatory")
_IpxSapIfIndex_Type = Integer32
_IpxSapIfIndex_Object = MibTableColumn
ipxSapIfIndex = _IpxSapIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 1, 1, 1),
    _IpxSapIfIndex_Type()
)
ipxSapIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxSapIfIndex.setStatus("mandatory")


class _IpxIfSapBcst_Type(Integer32):
    """Custom type ipxIfSapBcst based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("demandCircuit", 4),
          ("disabled", 1),
          ("enabled", 2),
          ("propUpdateOnly", 3))
    )


_IpxIfSapBcst_Type.__name__ = "Integer32"
_IpxIfSapBcst_Object = MibTableColumn
ipxIfSapBcst = _IpxIfSapBcst_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 1, 1, 2),
    _IpxIfSapBcst_Type()
)
ipxIfSapBcst.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxIfSapBcst.setStatus("mandatory")


class _IpxIfSapBcstDiscardTimeout_Type(Integer32):
    """Custom type ipxIfSapBcstDiscardTimeout based on Integer32"""
    defaultValue = 180


_IpxIfSapBcstDiscardTimeout_Object = MibTableColumn
ipxIfSapBcstDiscardTimeout = _IpxIfSapBcstDiscardTimeout_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 1, 1, 3),
    _IpxIfSapBcstDiscardTimeout_Type()
)
ipxIfSapBcstDiscardTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxIfSapBcstDiscardTimeout.setStatus("mandatory")


class _IpxIfSapBcstTimer_Type(Integer32):
    """Custom type ipxIfSapBcstTimer based on Integer32"""
    defaultValue = 60


_IpxIfSapBcstTimer_Object = MibTableColumn
ipxIfSapBcstTimer = _IpxIfSapBcstTimer_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 1, 1, 4),
    _IpxIfSapBcstTimer_Type()
)
ipxIfSapBcstTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxIfSapBcstTimer.setStatus("mandatory")
_IpxIfSapIn_Type = Counter32
_IpxIfSapIn_Object = MibTableColumn
ipxIfSapIn = _IpxIfSapIn_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 1, 1, 5),
    _IpxIfSapIn_Type()
)
ipxIfSapIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfSapIn.setStatus("mandatory")
_IpxIfSapOut_Type = Counter32
_IpxIfSapOut_Object = MibTableColumn
ipxIfSapOut = _IpxIfSapOut_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 1, 1, 6),
    _IpxIfSapOut_Type()
)
ipxIfSapOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfSapOut.setStatus("mandatory")
_IpxIfSapAgedOut_Type = Counter32
_IpxIfSapAgedOut_Object = MibTableColumn
ipxIfSapAgedOut = _IpxIfSapAgedOut_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 1, 1, 7),
    _IpxIfSapAgedOut_Type()
)
ipxIfSapAgedOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfSapAgedOut.setStatus("mandatory")
_IpxSapTable_Object = MibTable
ipxSapTable = _IpxSapTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 2)
)
if mibBuilder.loadTexts:
    ipxSapTable.setStatus("mandatory")
_IpxSapEntry_Object = MibTableRow
ipxSapEntry = _IpxSapEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 2, 1)
)
ipxSapEntry.setIndexNames(
    (0, "MRVINREACH", "ipxSapName"),
    (0, "MRVINREACH", "ipxSapType"),
)
if mibBuilder.loadTexts:
    ipxSapEntry.setStatus("mandatory")


class _IpxSapName_Type(DisplayString):
    """Custom type ipxSapName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(48, 48),
    )


_IpxSapName_Type.__name__ = "DisplayString"
_IpxSapName_Object = MibTableColumn
ipxSapName = _IpxSapName_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 2, 1, 1),
    _IpxSapName_Type()
)
ipxSapName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxSapName.setStatus("mandatory")
_IpxSapNetwork_Type = Integer32
_IpxSapNetwork_Object = MibTableColumn
ipxSapNetwork = _IpxSapNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 2, 1, 2),
    _IpxSapNetwork_Type()
)
ipxSapNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxSapNetwork.setStatus("mandatory")


class _IpxSapHost_Type(OctetString):
    """Custom type ipxSapHost based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )


_IpxSapHost_Type.__name__ = "OctetString"
_IpxSapHost_Object = MibTableColumn
ipxSapHost = _IpxSapHost_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 2, 1, 3),
    _IpxSapHost_Type()
)
ipxSapHost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxSapHost.setStatus("mandatory")
_IpxSapSocket_Type = Integer32
_IpxSapSocket_Object = MibTableColumn
ipxSapSocket = _IpxSapSocket_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 2, 1, 4),
    _IpxSapSocket_Type()
)
ipxSapSocket.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxSapSocket.setStatus("mandatory")
_IpxSapInterface_Type = Integer32
_IpxSapInterface_Object = MibTableColumn
ipxSapInterface = _IpxSapInterface_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 2, 1, 5),
    _IpxSapInterface_Type()
)
ipxSapInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxSapInterface.setStatus("mandatory")


class _IpxSapType_Type(Integer32):
    """Custom type ipxSapType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("administration", 11),
          ("archiveQueue", 8),
          ("archiveServer", 9),
          ("gateway1", 6),
          ("jobQueue", 10),
          ("jobServer", 5),
          ("novellFileServer", 4),
          ("printQueue", 3),
          ("printServer", 7),
          ("user", 1),
          ("userGroup", 2))
    )


_IpxSapType_Type.__name__ = "Integer32"
_IpxSapType_Object = MibTableColumn
ipxSapType = _IpxSapType_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 2, 1, 6),
    _IpxSapType_Type()
)
ipxSapType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxSapType.setStatus("mandatory")
_IpxSapAge_Type = Integer32
_IpxSapAge_Object = MibTableColumn
ipxSapAge = _IpxSapAge_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 2, 1, 7),
    _IpxSapAge_Type()
)
ipxSapAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxSapAge.setStatus("mandatory")
_IpxSapSvTable_Object = MibTable
ipxSapSvTable = _IpxSapSvTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 3)
)
if mibBuilder.loadTexts:
    ipxSapSvTable.setStatus("mandatory")
_IpxSapSvEntry_Object = MibTableRow
ipxSapSvEntry = _IpxSapSvEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 3, 1)
)
ipxSapSvEntry.setIndexNames(
    (0, "MRVINREACH", "ipxSapSvName"),
    (0, "MRVINREACH", "ipxSapSvType"),
    (0, "MRVINREACH", "ipxSapSvOrigin"),
    (0, "MRVINREACH", "ipxSapSvNetwork"),
    (0, "MRVINREACH", "ipxSapSvSocket"),
    (0, "MRVINREACH", "ipxSapSvHost"),
)
if mibBuilder.loadTexts:
    ipxSapSvEntry.setStatus("mandatory")


class _IpxSapSvName_Type(DisplayString):
    """Custom type ipxSapSvName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 48),
    )


_IpxSapSvName_Type.__name__ = "DisplayString"
_IpxSapSvName_Object = MibTableColumn
ipxSapSvName = _IpxSapSvName_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 3, 1, 1),
    _IpxSapSvName_Type()
)
ipxSapSvName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxSapSvName.setStatus("mandatory")
_IpxSapSvNetwork_Type = Integer32
_IpxSapSvNetwork_Object = MibTableColumn
ipxSapSvNetwork = _IpxSapSvNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 3, 1, 2),
    _IpxSapSvNetwork_Type()
)
ipxSapSvNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxSapSvNetwork.setStatus("mandatory")


class _IpxSapSvHost_Type(OctetString):
    """Custom type ipxSapSvHost based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )


_IpxSapSvHost_Type.__name__ = "OctetString"
_IpxSapSvHost_Object = MibTableColumn
ipxSapSvHost = _IpxSapSvHost_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 3, 1, 3),
    _IpxSapSvHost_Type()
)
ipxSapSvHost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxSapSvHost.setStatus("mandatory")


class _IpxSapSvSocket_Type(Integer32):
    """Custom type ipxSapSvSocket based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_IpxSapSvSocket_Type.__name__ = "Integer32"
_IpxSapSvSocket_Object = MibTableColumn
ipxSapSvSocket = _IpxSapSvSocket_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 3, 1, 4),
    _IpxSapSvSocket_Type()
)
ipxSapSvSocket.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxSapSvSocket.setStatus("mandatory")
_IpxSapSvInterface_Type = Integer32
_IpxSapSvInterface_Object = MibTableColumn
ipxSapSvInterface = _IpxSapSvInterface_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 3, 1, 5),
    _IpxSapSvInterface_Type()
)
ipxSapSvInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxSapSvInterface.setStatus("mandatory")


class _IpxSapSvOrigin_Type(Integer32):
    """Custom type ipxSapSvOrigin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipxSapLearned", 1),
          ("ipxStatic", 2))
    )


_IpxSapSvOrigin_Type.__name__ = "Integer32"
_IpxSapSvOrigin_Object = MibTableColumn
ipxSapSvOrigin = _IpxSapSvOrigin_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 3, 1, 6),
    _IpxSapSvOrigin_Type()
)
ipxSapSvOrigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxSapSvOrigin.setStatus("mandatory")


class _IpxSapSvType_Type(Integer32):
    """Custom type ipxSapSvType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("administration", 11),
          ("archiveQueue", 8),
          ("archiveServer", 9),
          ("gateway1", 6),
          ("jobQueue", 10),
          ("jobServer", 5),
          ("novellFileServer", 4),
          ("printQueue", 3),
          ("printServer", 7),
          ("user", 1),
          ("userGroup", 2))
    )


_IpxSapSvType_Type.__name__ = "Integer32"
_IpxSapSvType_Object = MibTableColumn
ipxSapSvType = _IpxSapSvType_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 3, 1, 7),
    _IpxSapSvType_Type()
)
ipxSapSvType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxSapSvType.setStatus("mandatory")


class _IpxSapSvHops_Type(Integer32):
    """Custom type ipxSapSvHops based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_IpxSapSvHops_Type.__name__ = "Integer32"
_IpxSapSvHops_Object = MibTableColumn
ipxSapSvHops = _IpxSapSvHops_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 3, 1, 8),
    _IpxSapSvHops_Type()
)
ipxSapSvHops.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxSapSvHops.setStatus("mandatory")


class _IpxSapSvRowStatus_Type(Integer32):
    """Custom type ipxSapSvRowStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpxSapSvRowStatus_Type.__name__ = "Integer32"
_IpxSapSvRowStatus_Object = MibTableColumn
ipxSapSvRowStatus = _IpxSapSvRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 3, 1, 9),
    _IpxSapSvRowStatus_Type()
)
ipxSapSvRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxSapSvRowStatus.setStatus("mandatory")
_IpxSapSvAge_Type = Integer32
_IpxSapSvAge_Object = MibTableColumn
ipxSapSvAge = _IpxSapSvAge_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 5, 3, 1, 10),
    _IpxSapSvAge_Type()
)
ipxSapSvAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxSapSvAge.setStatus("mandatory")
_XIpxFilter_ObjectIdentity = ObjectIdentity
xIpxFilter = _XIpxFilter_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 15, 6)
)
_IpxIfFilterTable_Object = MibTable
ipxIfFilterTable = _IpxIfFilterTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 1)
)
if mibBuilder.loadTexts:
    ipxIfFilterTable.setStatus("mandatory")
_IpxIfFilterEntry_Object = MibTableRow
ipxIfFilterEntry = _IpxIfFilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 1, 1)
)
ipxIfFilterEntry.setIndexNames(
    (0, "MRVINREACH", "ipxIfIndex"),
    (0, "MRVINREACH", "ipxIfFilterDestNetwork"),
    (0, "MRVINREACH", "ipxIfFilterDestNode"),
    (0, "MRVINREACH", "ipxIfFilterSourceNetwork"),
    (0, "MRVINREACH", "ipxIfFilterSourceNode"),
    (0, "MRVINREACH", "ipxIfFilterPacketType"),
    (0, "MRVINREACH", "ipxIfFilterStatusDestNetworkAll"),
    (0, "MRVINREACH", "ipxIfFilterStatusDestNodeAll"),
    (0, "MRVINREACH", "ipxIfFilterStatusSourceNetworkAll"),
    (0, "MRVINREACH", "ipxIfFilterStatusSourceNodeAll"),
    (0, "MRVINREACH", "ipxIfFilterStatusPacketTypeAll"),
)
if mibBuilder.loadTexts:
    ipxIfFilterEntry.setStatus("mandatory")
_IpxIfFilterIndex_Type = Integer32
_IpxIfFilterIndex_Object = MibTableColumn
ipxIfFilterIndex = _IpxIfFilterIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 1, 1, 1),
    _IpxIfFilterIndex_Type()
)
ipxIfFilterIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfFilterIndex.setStatus("mandatory")
_IpxIfFilterDestNetwork_Type = Integer32
_IpxIfFilterDestNetwork_Object = MibTableColumn
ipxIfFilterDestNetwork = _IpxIfFilterDestNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 1, 1, 2),
    _IpxIfFilterDestNetwork_Type()
)
ipxIfFilterDestNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfFilterDestNetwork.setStatus("mandatory")


class _IpxIfFilterDestNode_Type(OctetString):
    """Custom type ipxIfFilterDestNode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )


_IpxIfFilterDestNode_Type.__name__ = "OctetString"
_IpxIfFilterDestNode_Object = MibTableColumn
ipxIfFilterDestNode = _IpxIfFilterDestNode_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 1, 1, 3),
    _IpxIfFilterDestNode_Type()
)
ipxIfFilterDestNode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfFilterDestNode.setStatus("mandatory")
_IpxIfFilterSourceNetwork_Type = Integer32
_IpxIfFilterSourceNetwork_Object = MibTableColumn
ipxIfFilterSourceNetwork = _IpxIfFilterSourceNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 1, 1, 4),
    _IpxIfFilterSourceNetwork_Type()
)
ipxIfFilterSourceNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfFilterSourceNetwork.setStatus("mandatory")


class _IpxIfFilterSourceNode_Type(OctetString):
    """Custom type ipxIfFilterSourceNode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )


_IpxIfFilterSourceNode_Type.__name__ = "OctetString"
_IpxIfFilterSourceNode_Object = MibTableColumn
ipxIfFilterSourceNode = _IpxIfFilterSourceNode_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 1, 1, 5),
    _IpxIfFilterSourceNode_Type()
)
ipxIfFilterSourceNode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfFilterSourceNode.setStatus("mandatory")


class _IpxIfFilterPacketType_Type(Integer32):
    """Custom type ipxIfFilterPacketType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_IpxIfFilterPacketType_Type.__name__ = "Integer32"
_IpxIfFilterPacketType_Object = MibTableColumn
ipxIfFilterPacketType = _IpxIfFilterPacketType_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 1, 1, 6),
    _IpxIfFilterPacketType_Type()
)
ipxIfFilterPacketType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfFilterPacketType.setStatus("mandatory")


class _IpxIfFilterAction_Type(Integer32):
    """Custom type ipxIfFilterAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("discard", 2),
          ("forward", 1))
    )


_IpxIfFilterAction_Type.__name__ = "Integer32"
_IpxIfFilterAction_Object = MibTableColumn
ipxIfFilterAction = _IpxIfFilterAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 1, 1, 7),
    _IpxIfFilterAction_Type()
)
ipxIfFilterAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxIfFilterAction.setStatus("mandatory")


class _IpxIfFilterRowStatus_Type(Integer32):
    """Custom type ipxIfFilterRowStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_IpxIfFilterRowStatus_Type.__name__ = "Integer32"
_IpxIfFilterRowStatus_Object = MibTableColumn
ipxIfFilterRowStatus = _IpxIfFilterRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 1, 1, 8),
    _IpxIfFilterRowStatus_Type()
)
ipxIfFilterRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxIfFilterRowStatus.setStatus("mandatory")


class _IpxIfFilterStatusDestNetworkAll_Type(Integer32):
    """Custom type ipxIfFilterStatusDestNetworkAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpxIfFilterStatusDestNetworkAll_Type.__name__ = "Integer32"
_IpxIfFilterStatusDestNetworkAll_Object = MibTableColumn
ipxIfFilterStatusDestNetworkAll = _IpxIfFilterStatusDestNetworkAll_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 1, 1, 9),
    _IpxIfFilterStatusDestNetworkAll_Type()
)
ipxIfFilterStatusDestNetworkAll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfFilterStatusDestNetworkAll.setStatus("mandatory")


class _IpxIfFilterStatusDestNodeAll_Type(Integer32):
    """Custom type ipxIfFilterStatusDestNodeAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpxIfFilterStatusDestNodeAll_Type.__name__ = "Integer32"
_IpxIfFilterStatusDestNodeAll_Object = MibTableColumn
ipxIfFilterStatusDestNodeAll = _IpxIfFilterStatusDestNodeAll_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 1, 1, 10),
    _IpxIfFilterStatusDestNodeAll_Type()
)
ipxIfFilterStatusDestNodeAll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfFilterStatusDestNodeAll.setStatus("mandatory")


class _IpxIfFilterStatusSourceNetworkAll_Type(Integer32):
    """Custom type ipxIfFilterStatusSourceNetworkAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpxIfFilterStatusSourceNetworkAll_Type.__name__ = "Integer32"
_IpxIfFilterStatusSourceNetworkAll_Object = MibTableColumn
ipxIfFilterStatusSourceNetworkAll = _IpxIfFilterStatusSourceNetworkAll_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 1, 1, 11),
    _IpxIfFilterStatusSourceNetworkAll_Type()
)
ipxIfFilterStatusSourceNetworkAll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfFilterStatusSourceNetworkAll.setStatus("mandatory")


class _IpxIfFilterStatusSourceNodeAll_Type(Integer32):
    """Custom type ipxIfFilterStatusSourceNodeAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpxIfFilterStatusSourceNodeAll_Type.__name__ = "Integer32"
_IpxIfFilterStatusSourceNodeAll_Object = MibTableColumn
ipxIfFilterStatusSourceNodeAll = _IpxIfFilterStatusSourceNodeAll_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 1, 1, 12),
    _IpxIfFilterStatusSourceNodeAll_Type()
)
ipxIfFilterStatusSourceNodeAll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfFilterStatusSourceNodeAll.setStatus("mandatory")


class _IpxIfFilterStatusPacketTypeAll_Type(Integer32):
    """Custom type ipxIfFilterStatusPacketTypeAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpxIfFilterStatusPacketTypeAll_Type.__name__ = "Integer32"
_IpxIfFilterStatusPacketTypeAll_Object = MibTableColumn
ipxIfFilterStatusPacketTypeAll = _IpxIfFilterStatusPacketTypeAll_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 1, 1, 13),
    _IpxIfFilterStatusPacketTypeAll_Type()
)
ipxIfFilterStatusPacketTypeAll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfFilterStatusPacketTypeAll.setStatus("mandatory")
_IpxIfRipFilterTable_Object = MibTable
ipxIfRipFilterTable = _IpxIfRipFilterTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 2)
)
if mibBuilder.loadTexts:
    ipxIfRipFilterTable.setStatus("mandatory")
_IpxIfRipFilterEntry_Object = MibTableRow
ipxIfRipFilterEntry = _IpxIfRipFilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 2, 1)
)
ipxIfRipFilterEntry.setIndexNames(
    (0, "MRVINREACH", "ipxIfIndex"),
    (0, "MRVINREACH", "ipxIfRipFilterType"),
    (0, "MRVINREACH", "ipxIfRipFilterNetwork"),
    (0, "MRVINREACH", "ipxIfRipFilterNetworkAll"),
    (0, "MRVINREACH", "ipxIfRipFilterHost"),
)
if mibBuilder.loadTexts:
    ipxIfRipFilterEntry.setStatus("mandatory")
_IpxIfRipFilterNetwork_Type = Integer32
_IpxIfRipFilterNetwork_Object = MibTableColumn
ipxIfRipFilterNetwork = _IpxIfRipFilterNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 2, 1, 1),
    _IpxIfRipFilterNetwork_Type()
)
ipxIfRipFilterNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfRipFilterNetwork.setStatus("mandatory")


class _IpxIfRipFilterType_Type(Integer32):
    """Custom type ipxIfRipFilterType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("export", 2),
          ("import", 1))
    )


_IpxIfRipFilterType_Type.__name__ = "Integer32"
_IpxIfRipFilterType_Object = MibTableColumn
ipxIfRipFilterType = _IpxIfRipFilterType_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 2, 1, 2),
    _IpxIfRipFilterType_Type()
)
ipxIfRipFilterType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfRipFilterType.setStatus("mandatory")


class _IpxIfRipFilterAction_Type(Integer32):
    """Custom type ipxIfRipFilterAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("allow", 1),
          ("deny", 2))
    )


_IpxIfRipFilterAction_Type.__name__ = "Integer32"
_IpxIfRipFilterAction_Object = MibTableColumn
ipxIfRipFilterAction = _IpxIfRipFilterAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 2, 1, 3),
    _IpxIfRipFilterAction_Type()
)
ipxIfRipFilterAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxIfRipFilterAction.setStatus("mandatory")


class _IpxIfRipFilterRowStatus_Type(Integer32):
    """Custom type ipxIfRipFilterRowStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_IpxIfRipFilterRowStatus_Type.__name__ = "Integer32"
_IpxIfRipFilterRowStatus_Object = MibTableColumn
ipxIfRipFilterRowStatus = _IpxIfRipFilterRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 2, 1, 4),
    _IpxIfRipFilterRowStatus_Type()
)
ipxIfRipFilterRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxIfRipFilterRowStatus.setStatus("mandatory")


class _IpxIfRipFilterNetworkAll_Type(Integer32):
    """Custom type ipxIfRipFilterNetworkAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpxIfRipFilterNetworkAll_Type.__name__ = "Integer32"
_IpxIfRipFilterNetworkAll_Object = MibTableColumn
ipxIfRipFilterNetworkAll = _IpxIfRipFilterNetworkAll_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 2, 1, 5),
    _IpxIfRipFilterNetworkAll_Type()
)
ipxIfRipFilterNetworkAll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfRipFilterNetworkAll.setStatus("mandatory")


class _IpxIfRipFilterHost_Type(OctetString):
    """Custom type ipxIfRipFilterHost based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )


_IpxIfRipFilterHost_Type.__name__ = "OctetString"
_IpxIfRipFilterHost_Object = MibTableColumn
ipxIfRipFilterHost = _IpxIfRipFilterHost_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 2, 1, 6),
    _IpxIfRipFilterHost_Type()
)
ipxIfRipFilterHost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfRipFilterHost.setStatus("mandatory")
_IpxIfSapFilterTable_Object = MibTable
ipxIfSapFilterTable = _IpxIfSapFilterTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 3)
)
if mibBuilder.loadTexts:
    ipxIfSapFilterTable.setStatus("mandatory")
_IpxIfSapFilterEntry_Object = MibTableRow
ipxIfSapFilterEntry = _IpxIfSapFilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 3, 1)
)
ipxIfSapFilterEntry.setIndexNames(
    (0, "MRVINREACH", "ipxIfIndex"),
    (0, "MRVINREACH", "ipxIfSapFilterType"),
    (0, "MRVINREACH", "ipxIfSapFilterName"),
    (0, "MRVINREACH", "ipxIfSapFilterServiceType"),
    (0, "MRVINREACH", "ipxIfSapFilterServiceTypeAll"),
    (0, "MRVINREACH", "ipxIfSapFilterNetwork"),
    (0, "MRVINREACH", "ipxIfSapFilterNetworkAll"),
    (0, "MRVINREACH", "ipxIfSapFilterHost"),
)
if mibBuilder.loadTexts:
    ipxIfSapFilterEntry.setStatus("mandatory")
_IpxIfSapFilterNetwork_Type = Integer32
_IpxIfSapFilterNetwork_Object = MibTableColumn
ipxIfSapFilterNetwork = _IpxIfSapFilterNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 3, 1, 1),
    _IpxIfSapFilterNetwork_Type()
)
ipxIfSapFilterNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfSapFilterNetwork.setStatus("mandatory")


class _IpxIfSapFilterType_Type(Integer32):
    """Custom type ipxIfSapFilterType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("export", 2),
          ("import", 1))
    )


_IpxIfSapFilterType_Type.__name__ = "Integer32"
_IpxIfSapFilterType_Object = MibTableColumn
ipxIfSapFilterType = _IpxIfSapFilterType_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 3, 1, 2),
    _IpxIfSapFilterType_Type()
)
ipxIfSapFilterType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfSapFilterType.setStatus("mandatory")


class _IpxIfSapFilterServiceType_Type(Integer32):
    """Custom type ipxIfSapFilterServiceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_IpxIfSapFilterServiceType_Type.__name__ = "Integer32"
_IpxIfSapFilterServiceType_Object = MibTableColumn
ipxIfSapFilterServiceType = _IpxIfSapFilterServiceType_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 3, 1, 3),
    _IpxIfSapFilterServiceType_Type()
)
ipxIfSapFilterServiceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfSapFilterServiceType.setStatus("mandatory")


class _IpxIfSapFilterAction_Type(Integer32):
    """Custom type ipxIfSapFilterAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("allow", 1),
          ("deny", 2))
    )


_IpxIfSapFilterAction_Type.__name__ = "Integer32"
_IpxIfSapFilterAction_Object = MibTableColumn
ipxIfSapFilterAction = _IpxIfSapFilterAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 3, 1, 4),
    _IpxIfSapFilterAction_Type()
)
ipxIfSapFilterAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxIfSapFilterAction.setStatus("mandatory")


class _IpxIfSapFilterRowStatus_Type(Integer32):
    """Custom type ipxIfSapFilterRowStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_IpxIfSapFilterRowStatus_Type.__name__ = "Integer32"
_IpxIfSapFilterRowStatus_Object = MibTableColumn
ipxIfSapFilterRowStatus = _IpxIfSapFilterRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 3, 1, 5),
    _IpxIfSapFilterRowStatus_Type()
)
ipxIfSapFilterRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxIfSapFilterRowStatus.setStatus("mandatory")


class _IpxIfSapFilterNetworkAll_Type(Integer32):
    """Custom type ipxIfSapFilterNetworkAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpxIfSapFilterNetworkAll_Type.__name__ = "Integer32"
_IpxIfSapFilterNetworkAll_Object = MibTableColumn
ipxIfSapFilterNetworkAll = _IpxIfSapFilterNetworkAll_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 3, 1, 6),
    _IpxIfSapFilterNetworkAll_Type()
)
ipxIfSapFilterNetworkAll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfSapFilterNetworkAll.setStatus("mandatory")


class _IpxIfSapFilterServiceTypeAll_Type(Integer32):
    """Custom type ipxIfSapFilterServiceTypeAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpxIfSapFilterServiceTypeAll_Type.__name__ = "Integer32"
_IpxIfSapFilterServiceTypeAll_Object = MibTableColumn
ipxIfSapFilterServiceTypeAll = _IpxIfSapFilterServiceTypeAll_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 3, 1, 7),
    _IpxIfSapFilterServiceTypeAll_Type()
)
ipxIfSapFilterServiceTypeAll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfSapFilterServiceTypeAll.setStatus("mandatory")


class _IpxIfSapFilterName_Type(DisplayString):
    """Custom type ipxIfSapFilterName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 48),
    )


_IpxIfSapFilterName_Type.__name__ = "DisplayString"
_IpxIfSapFilterName_Object = MibTableColumn
ipxIfSapFilterName = _IpxIfSapFilterName_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 3, 1, 8),
    _IpxIfSapFilterName_Type()
)
ipxIfSapFilterName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfSapFilterName.setStatus("mandatory")


class _IpxIfSapFilterHost_Type(OctetString):
    """Custom type ipxIfSapFilterHost based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )


_IpxIfSapFilterHost_Type.__name__ = "OctetString"
_IpxIfSapFilterHost_Object = MibTableColumn
ipxIfSapFilterHost = _IpxIfSapFilterHost_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 6, 3, 1, 9),
    _IpxIfSapFilterHost_Type()
)
ipxIfSapFilterHost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxIfSapFilterHost.setStatus("mandatory")
_XIpxPrinter_ObjectIdentity = ObjectIdentity
xIpxPrinter = _XIpxPrinter_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 15, 8)
)
_IpxPrinterPortTable_Object = MibTable
ipxPrinterPortTable = _IpxPrinterPortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 8, 1)
)
if mibBuilder.loadTexts:
    ipxPrinterPortTable.setStatus("mandatory")
_IpxPrinterPortEntry_Object = MibTableRow
ipxPrinterPortEntry = _IpxPrinterPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 8, 1, 1)
)
ipxPrinterPortEntry.setIndexNames(
    (0, "MRVINREACH", "ipxPrinterPortIndex"),
)
if mibBuilder.loadTexts:
    ipxPrinterPortEntry.setStatus("mandatory")
_IpxPrinterPortIndex_Type = Integer32
_IpxPrinterPortIndex_Object = MibTableColumn
ipxPrinterPortIndex = _IpxPrinterPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 8, 1, 1, 1),
    _IpxPrinterPortIndex_Type()
)
ipxPrinterPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipxPrinterPortIndex.setStatus("mandatory")


class _IpxPrinterPortStatus_Type(Integer32):
    """Custom type ipxPrinterPortStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_IpxPrinterPortStatus_Type.__name__ = "Integer32"
_IpxPrinterPortStatus_Object = MibTableColumn
ipxPrinterPortStatus = _IpxPrinterPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 8, 1, 1, 2),
    _IpxPrinterPortStatus_Type()
)
ipxPrinterPortStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxPrinterPortStatus.setStatus("mandatory")


class _IpxPrinterPortServer_Type(DisplayString):
    """Custom type ipxPrinterPortServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 48),
    )


_IpxPrinterPortServer_Type.__name__ = "DisplayString"
_IpxPrinterPortServer_Object = MibTableColumn
ipxPrinterPortServer = _IpxPrinterPortServer_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 8, 1, 1, 3),
    _IpxPrinterPortServer_Type()
)
ipxPrinterPortServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxPrinterPortServer.setStatus("mandatory")


class _IpxPrinterPortPrinter_Type(Integer32):
    """Custom type ipxPrinterPortPrinter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_IpxPrinterPortPrinter_Type.__name__ = "Integer32"
_IpxPrinterPortPrinter_Object = MibTableColumn
ipxPrinterPortPrinter = _IpxPrinterPortPrinter_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 8, 1, 1, 4),
    _IpxPrinterPortPrinter_Type()
)
ipxPrinterPortPrinter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxPrinterPortPrinter.setStatus("mandatory")


class _IpxTimeout_Type(Integer32):
    """Custom type ipxTimeout based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(15, 300),
    )


_IpxTimeout_Type.__name__ = "Integer32"
_IpxTimeout_Object = MibTableColumn
ipxTimeout = _IpxTimeout_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 8, 1, 1, 5),
    _IpxTimeout_Type()
)
ipxTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxTimeout.setStatus("mandatory")


class _IpxPrinterEthernet_Type(Integer32):
    """Custom type ipxPrinterEthernet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpxPrinterEthernet_Type.__name__ = "Integer32"
_IpxPrinterEthernet_Object = MibScalar
ipxPrinterEthernet = _IpxPrinterEthernet_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 8, 2),
    _IpxPrinterEthernet_Type()
)
ipxPrinterEthernet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxPrinterEthernet.setStatus("mandatory")


class _IpxPrinterMac_Type(Integer32):
    """Custom type ipxPrinterMac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpxPrinterMac_Type.__name__ = "Integer32"
_IpxPrinterMac_Object = MibScalar
ipxPrinterMac = _IpxPrinterMac_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 8, 3),
    _IpxPrinterMac_Type()
)
ipxPrinterMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxPrinterMac.setStatus("mandatory")


class _IpxPrinterMac802_2_Type(Integer32):
    """Custom type ipxPrinterMac802_2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpxPrinterMac802_2_Type.__name__ = "Integer32"
_IpxPrinterMac802_2_Object = MibScalar
ipxPrinterMac802_2 = _IpxPrinterMac802_2_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 8, 4),
    _IpxPrinterMac802_2_Type()
)
ipxPrinterMac802_2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxPrinterMac802_2.setStatus("mandatory")


class _IpxPrinterMac802_2_Snap_Type(Integer32):
    """Custom type ipxPrinterMac802_2_Snap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpxPrinterMac802_2_Snap_Type.__name__ = "Integer32"
_IpxPrinterMac802_2_Snap_Object = MibScalar
ipxPrinterMac802_2_Snap = _IpxPrinterMac802_2_Snap_Object(
    (1, 3, 6, 1, 4, 1, 33, 15, 8, 5),
    _IpxPrinterMac802_2_Snap_Type()
)
ipxPrinterMac802_2_Snap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipxPrinterMac802_2_Snap.setStatus("mandatory")
_XChassis_ObjectIdentity = ObjectIdentity
xChassis = _XChassis_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 16)
)
_XChassisBasic_ObjectIdentity = ObjectIdentity
xChassisBasic = _XChassisBasic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 16, 1)
)
_BasicBase802Address_Type = MacAddress
_BasicBase802Address_Object = MibScalar
basicBase802Address = _BasicBase802Address_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 1, 1),
    _BasicBase802Address_Type()
)
basicBase802Address.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicBase802Address.setStatus("mandatory")
_BasicSlot_Type = Integer32
_BasicSlot_Object = MibScalar
basicSlot = _BasicSlot_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 1, 2),
    _BasicSlot_Type()
)
basicSlot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicSlot.setStatus("mandatory")
_BasicSlotNumber_Type = Integer32
_BasicSlotNumber_Object = MibScalar
basicSlotNumber = _BasicSlotNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 1, 3),
    _BasicSlotNumber_Type()
)
basicSlotNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    basicSlotNumber.setStatus("mandatory")
_BasicNewBase802Address_Type = MacAddress
_BasicNewBase802Address_Object = MibScalar
basicNewBase802Address = _BasicNewBase802Address_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 1, 4),
    _BasicNewBase802Address_Type()
)
basicNewBase802Address.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    basicNewBase802Address.setStatus("mandatory")
_XSegment_ObjectIdentity = ObjectIdentity
xSegment = _XSegment_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 16, 2)
)
_SegmentTable_Object = MibTable
segmentTable = _SegmentTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 2, 1)
)
if mibBuilder.loadTexts:
    segmentTable.setStatus("mandatory")
_SegmentEntry_Object = MibTableRow
segmentEntry = _SegmentEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 2, 1, 1)
)
segmentEntry.setIndexNames(
    (0, "MRVINREACH", "segmentType"),
    (0, "MRVINREACH", "segmentIndex"),
)
if mibBuilder.loadTexts:
    segmentEntry.setStatus("mandatory")
_SegmentType_Type = NetworkType
_SegmentType_Object = MibTableColumn
segmentType = _SegmentType_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 2, 1, 1, 1),
    _SegmentType_Type()
)
segmentType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    segmentType.setStatus("mandatory")
_SegmentIndex_Type = Letter
_SegmentIndex_Object = MibTableColumn
segmentIndex = _SegmentIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 2, 1, 1, 2),
    _SegmentIndex_Type()
)
segmentIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    segmentIndex.setStatus("mandatory")
_XPort_ObjectIdentity = ObjectIdentity
xPort = _XPort_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 16, 3)
)
_PortIOCardType_Type = IOType
_PortIOCardType_Object = MibScalar
portIOCardType = _PortIOCardType_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 3, 1),
    _PortIOCardType_Type()
)
portIOCardType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portIOCardType.setStatus("mandatory")
_PortIOCardSerialNumber_Type = SerialNumber
_PortIOCardSerialNumber_Object = MibScalar
portIOCardSerialNumber = _PortIOCardSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 3, 2),
    _PortIOCardSerialNumber_Type()
)
portIOCardSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portIOCardSerialNumber.setStatus("mandatory")


class _PortIOCardOperStatus_Type(Integer32):
    """Custom type portIOCardOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("good", 3),
          ("mismatch", 2),
          ("unknown", 1))
    )


_PortIOCardOperStatus_Type.__name__ = "Integer32"
_PortIOCardOperStatus_Object = MibScalar
portIOCardOperStatus = _PortIOCardOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 3, 3),
    _PortIOCardOperStatus_Type()
)
portIOCardOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portIOCardOperStatus.setStatus("mandatory")
_PortTable_Object = MibTable
portTable = _PortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 3, 4)
)
if mibBuilder.loadTexts:
    portTable.setStatus("mandatory")
_PortEntry_Object = MibTableRow
portEntry = _PortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 3, 4, 1)
)
portEntry.setIndexNames(
    (0, "MRVINREACH", "portType"),
    (0, "MRVINREACH", "portIndex"),
)
if mibBuilder.loadTexts:
    portEntry.setStatus("mandatory")
_PortType_Type = NetworkType
_PortType_Object = MibTableColumn
portType = _PortType_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 3, 4, 1, 1),
    _PortType_Type()
)
portType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portType.setStatus("mandatory")
_PortIndex_Type = Integer32
_PortIndex_Object = MibTableColumn
portIndex = _PortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 3, 4, 1, 2),
    _PortIndex_Type()
)
portIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portIndex.setStatus("mandatory")
_XController_ObjectIdentity = ObjectIdentity
xController = _XController_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 16, 4)
)
_ControllerTable_Object = MibTable
controllerTable = _ControllerTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 4, 1)
)
if mibBuilder.loadTexts:
    controllerTable.setStatus("mandatory")
_ControllerEntry_Object = MibTableRow
controllerEntry = _ControllerEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 4, 1, 1)
)
controllerEntry.setIndexNames(
    (0, "MRVINREACH", "controllerType"),
    (0, "MRVINREACH", "controllerIndex"),
)
if mibBuilder.loadTexts:
    controllerEntry.setStatus("mandatory")
_ControllerType_Type = NetworkType
_ControllerType_Object = MibTableColumn
controllerType = _ControllerType_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 4, 1, 1, 1),
    _ControllerType_Type()
)
controllerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controllerType.setStatus("mandatory")
_ControllerIndex_Type = Integer32
_ControllerIndex_Object = MibTableColumn
controllerIndex = _ControllerIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 4, 1, 1, 2),
    _ControllerIndex_Type()
)
controllerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controllerIndex.setStatus("mandatory")
_ControllerNetwork_Type = ObjectIdentifier
_ControllerNetwork_Object = MibTableColumn
controllerNetwork = _ControllerNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 4, 1, 1, 3),
    _ControllerNetwork_Type()
)
controllerNetwork.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controllerNetwork.setStatus("mandatory")
_XInterface_ObjectIdentity = ObjectIdentity
xInterface = _XInterface_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 16, 5)
)
_InterfaceTable_Object = MibTable
interfaceTable = _InterfaceTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 5, 1)
)
if mibBuilder.loadTexts:
    interfaceTable.setStatus("mandatory")
_InterfaceEntry_Object = MibTableRow
interfaceEntry = _InterfaceEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 5, 1, 1)
)
interfaceEntry.setIndexNames(
    (0, "MRVINREACH", "interfaceIndex"),
)
if mibBuilder.loadTexts:
    interfaceEntry.setStatus("mandatory")
_InterfaceIndex_Type = Integer32
_InterfaceIndex_Object = MibTableColumn
interfaceIndex = _InterfaceIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 5, 1, 1, 1),
    _InterfaceIndex_Type()
)
interfaceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceIndex.setStatus("mandatory")
_InterfaceNetwork_Type = ObjectIdentifier
_InterfaceNetwork_Object = MibTableColumn
interfaceNetwork = _InterfaceNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 5, 1, 1, 2),
    _InterfaceNetwork_Type()
)
interfaceNetwork.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceNetwork.setStatus("mandatory")
_XSlotBootControl_ObjectIdentity = ObjectIdentity
xSlotBootControl = _XSlotBootControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 16, 6)
)
_SlotBootControlTable_Object = MibTable
slotBootControlTable = _SlotBootControlTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 1)
)
if mibBuilder.loadTexts:
    slotBootControlTable.setStatus("mandatory")
_SlotBootControlEntry_Object = MibTableRow
slotBootControlEntry = _SlotBootControlEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 1, 1)
)
slotBootControlEntry.setIndexNames(
    (0, "MRVINREACH", "slotBootControlSlot"),
    (0, "MRVINREACH", "slotBootControlIndex"),
)
if mibBuilder.loadTexts:
    slotBootControlEntry.setStatus("mandatory")
_SlotBootControlSlot_Type = Integer32
_SlotBootControlSlot_Object = MibTableColumn
slotBootControlSlot = _SlotBootControlSlot_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 1, 1, 1),
    _SlotBootControlSlot_Type()
)
slotBootControlSlot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotBootControlSlot.setStatus("mandatory")
_SlotBootControlIndex_Type = Integer32
_SlotBootControlIndex_Object = MibTableColumn
slotBootControlIndex = _SlotBootControlIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 1, 1, 2),
    _SlotBootControlIndex_Type()
)
slotBootControlIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotBootControlIndex.setStatus("mandatory")


class _SlotBootControlStatus_Type(Integer32):
    """Custom type slotBootControlStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SlotBootControlStatus_Type.__name__ = "Integer32"
_SlotBootControlStatus_Object = MibTableColumn
slotBootControlStatus = _SlotBootControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 1, 1, 3),
    _SlotBootControlStatus_Type()
)
slotBootControlStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlStatus.setStatus("mandatory")
_SlotBootControlController_Type = ObjectIdentifier
_SlotBootControlController_Object = MibTableColumn
slotBootControlController = _SlotBootControlController_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 1, 1, 4),
    _SlotBootControlController_Type()
)
slotBootControlController.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlController.setStatus("mandatory")
_SlotBootControlNetwork_Type = ObjectIdentifier
_SlotBootControlNetwork_Object = MibTableColumn
slotBootControlNetwork = _SlotBootControlNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 1, 1, 5),
    _SlotBootControlNetwork_Type()
)
slotBootControlNetwork.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlNetwork.setStatus("mandatory")


class _SlotBootControlMopFile_Type(DisplayString):
    """Custom type slotBootControlMopFile based on DisplayString"""
    defaultHexValue = "00"

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_SlotBootControlMopFile_Type.__name__ = "DisplayString"
_SlotBootControlMopFile_Object = MibTableColumn
slotBootControlMopFile = _SlotBootControlMopFile_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 1, 1, 6),
    _SlotBootControlMopFile_Type()
)
slotBootControlMopFile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlMopFile.setStatus("mandatory")


class _SlotBootControlInternetFile_Type(DisplayString):
    """Custom type slotBootControlInternetFile based on DisplayString"""
    defaultHexValue = "00"

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SlotBootControlInternetFile_Type.__name__ = "DisplayString"
_SlotBootControlInternetFile_Object = MibTableColumn
slotBootControlInternetFile = _SlotBootControlInternetFile_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 1, 1, 7),
    _SlotBootControlInternetFile_Type()
)
slotBootControlInternetFile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlInternetFile.setStatus("mandatory")


class _SlotBootControlInternetAddress_Type(IpAddress):
    """Custom type slotBootControlInternetAddress based on IpAddress"""
    defaultValue = 0


_SlotBootControlInternetAddress_Object = MibTableColumn
slotBootControlInternetAddress = _SlotBootControlInternetAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 1, 1, 8),
    _SlotBootControlInternetAddress_Type()
)
slotBootControlInternetAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlInternetAddress.setStatus("mandatory")


class _SlotBootControlInternetServer_Type(IpAddress):
    """Custom type slotBootControlInternetServer based on IpAddress"""
    defaultValue = 0


_SlotBootControlInternetServer_Object = MibTableColumn
slotBootControlInternetServer = _SlotBootControlInternetServer_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 1, 1, 9),
    _SlotBootControlInternetServer_Type()
)
slotBootControlInternetServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlInternetServer.setStatus("mandatory")


class _SlotBootControlInternetGateway_Type(IpAddress):
    """Custom type slotBootControlInternetGateway based on IpAddress"""
    defaultValue = 0


_SlotBootControlInternetGateway_Object = MibTableColumn
slotBootControlInternetGateway = _SlotBootControlInternetGateway_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 1, 1, 10),
    _SlotBootControlInternetGateway_Type()
)
slotBootControlInternetGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlInternetGateway.setStatus("mandatory")


class _SlotBootControlInternetDelimiter_Type(DisplayString):
    """Custom type slotBootControlInternetDelimiter based on DisplayString"""
    defaultHexValue = "00"

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1),
    )


_SlotBootControlInternetDelimiter_Type.__name__ = "DisplayString"
_SlotBootControlInternetDelimiter_Object = MibTableColumn
slotBootControlInternetDelimiter = _SlotBootControlInternetDelimiter_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 1, 1, 11),
    _SlotBootControlInternetDelimiter_Type()
)
slotBootControlInternetDelimiter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlInternetDelimiter.setStatus("mandatory")
_SlotBootControlFlagTable_Object = MibTable
slotBootControlFlagTable = _SlotBootControlFlagTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 2)
)
if mibBuilder.loadTexts:
    slotBootControlFlagTable.setStatus("mandatory")
_SlotBootControlFlagEntry_Object = MibTableRow
slotBootControlFlagEntry = _SlotBootControlFlagEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 2, 1)
)
slotBootControlFlagEntry.setIndexNames(
    (0, "MRVINREACH", "slotBootControlSlot"),
    (0, "MRVINREACH", "slotBootControlIndex"),
)
if mibBuilder.loadTexts:
    slotBootControlFlagEntry.setStatus("mandatory")


class _SlotBootControlFlagLoadBootpTftp_Type(Integer32):
    """Custom type slotBootControlFlagLoadBootpTftp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SlotBootControlFlagLoadBootpTftp_Type.__name__ = "Integer32"
_SlotBootControlFlagLoadBootpTftp_Object = MibTableColumn
slotBootControlFlagLoadBootpTftp = _SlotBootControlFlagLoadBootpTftp_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 2, 1, 1),
    _SlotBootControlFlagLoadBootpTftp_Type()
)
slotBootControlFlagLoadBootpTftp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlFlagLoadBootpTftp.setStatus("mandatory")


class _SlotBootControlFlagParamBootpTftp_Type(Integer32):
    """Custom type slotBootControlFlagParamBootpTftp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SlotBootControlFlagParamBootpTftp_Type.__name__ = "Integer32"
_SlotBootControlFlagParamBootpTftp_Object = MibTableColumn
slotBootControlFlagParamBootpTftp = _SlotBootControlFlagParamBootpTftp_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 2, 1, 2),
    _SlotBootControlFlagParamBootpTftp_Type()
)
slotBootControlFlagParamBootpTftp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlFlagParamBootpTftp.setStatus("mandatory")


class _SlotBootControlFlagDumpBootpTftp_Type(Integer32):
    """Custom type slotBootControlFlagDumpBootpTftp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SlotBootControlFlagDumpBootpTftp_Type.__name__ = "Integer32"
_SlotBootControlFlagDumpBootpTftp_Object = MibTableColumn
slotBootControlFlagDumpBootpTftp = _SlotBootControlFlagDumpBootpTftp_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 2, 1, 3),
    _SlotBootControlFlagDumpBootpTftp_Type()
)
slotBootControlFlagDumpBootpTftp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlFlagDumpBootpTftp.setStatus("mandatory")


class _SlotBootControlFlagLoadTftpDirect_Type(Integer32):
    """Custom type slotBootControlFlagLoadTftpDirect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SlotBootControlFlagLoadTftpDirect_Type.__name__ = "Integer32"
_SlotBootControlFlagLoadTftpDirect_Object = MibTableColumn
slotBootControlFlagLoadTftpDirect = _SlotBootControlFlagLoadTftpDirect_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 2, 1, 4),
    _SlotBootControlFlagLoadTftpDirect_Type()
)
slotBootControlFlagLoadTftpDirect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlFlagLoadTftpDirect.setStatus("mandatory")


class _SlotBootControlFlagParamTftpDirect_Type(Integer32):
    """Custom type slotBootControlFlagParamTftpDirect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SlotBootControlFlagParamTftpDirect_Type.__name__ = "Integer32"
_SlotBootControlFlagParamTftpDirect_Object = MibTableColumn
slotBootControlFlagParamTftpDirect = _SlotBootControlFlagParamTftpDirect_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 2, 1, 5),
    _SlotBootControlFlagParamTftpDirect_Type()
)
slotBootControlFlagParamTftpDirect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlFlagParamTftpDirect.setStatus("mandatory")


class _SlotBootControlFlagDumpTftpDirect_Type(Integer32):
    """Custom type slotBootControlFlagDumpTftpDirect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SlotBootControlFlagDumpTftpDirect_Type.__name__ = "Integer32"
_SlotBootControlFlagDumpTftpDirect_Object = MibTableColumn
slotBootControlFlagDumpTftpDirect = _SlotBootControlFlagDumpTftpDirect_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 2, 1, 6),
    _SlotBootControlFlagDumpTftpDirect_Type()
)
slotBootControlFlagDumpTftpDirect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlFlagDumpTftpDirect.setStatus("mandatory")


class _SlotBootControlFlagLoadLocal_Type(Integer32):
    """Custom type slotBootControlFlagLoadLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SlotBootControlFlagLoadLocal_Type.__name__ = "Integer32"
_SlotBootControlFlagLoadLocal_Object = MibTableColumn
slotBootControlFlagLoadLocal = _SlotBootControlFlagLoadLocal_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 2, 1, 7),
    _SlotBootControlFlagLoadLocal_Type()
)
slotBootControlFlagLoadLocal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlFlagLoadLocal.setStatus("mandatory")


class _SlotBootControlFlagParamLocal_Type(Integer32):
    """Custom type slotBootControlFlagParamLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SlotBootControlFlagParamLocal_Type.__name__ = "Integer32"
_SlotBootControlFlagParamLocal_Object = MibTableColumn
slotBootControlFlagParamLocal = _SlotBootControlFlagParamLocal_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 2, 1, 8),
    _SlotBootControlFlagParamLocal_Type()
)
slotBootControlFlagParamLocal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlFlagParamLocal.setStatus("mandatory")


class _SlotBootControlFlagDumpLocal_Type(Integer32):
    """Custom type slotBootControlFlagDumpLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SlotBootControlFlagDumpLocal_Type.__name__ = "Integer32"
_SlotBootControlFlagDumpLocal_Object = MibTableColumn
slotBootControlFlagDumpLocal = _SlotBootControlFlagDumpLocal_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 2, 1, 9),
    _SlotBootControlFlagDumpLocal_Type()
)
slotBootControlFlagDumpLocal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlFlagDumpLocal.setStatus("mandatory")


class _SlotBootControlFlagLoadMop_Type(Integer32):
    """Custom type slotBootControlFlagLoadMop based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SlotBootControlFlagLoadMop_Type.__name__ = "Integer32"
_SlotBootControlFlagLoadMop_Object = MibTableColumn
slotBootControlFlagLoadMop = _SlotBootControlFlagLoadMop_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 2, 1, 10),
    _SlotBootControlFlagLoadMop_Type()
)
slotBootControlFlagLoadMop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlFlagLoadMop.setStatus("mandatory")


class _SlotBootControlFlagParamMop_Type(Integer32):
    """Custom type slotBootControlFlagParamMop based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SlotBootControlFlagParamMop_Type.__name__ = "Integer32"
_SlotBootControlFlagParamMop_Object = MibTableColumn
slotBootControlFlagParamMop = _SlotBootControlFlagParamMop_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 2, 1, 11),
    _SlotBootControlFlagParamMop_Type()
)
slotBootControlFlagParamMop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlFlagParamMop.setStatus("mandatory")


class _SlotBootControlFlagDumpMop_Type(Integer32):
    """Custom type slotBootControlFlagDumpMop based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SlotBootControlFlagDumpMop_Type.__name__ = "Integer32"
_SlotBootControlFlagDumpMop_Object = MibTableColumn
slotBootControlFlagDumpMop = _SlotBootControlFlagDumpMop_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 2, 1, 12),
    _SlotBootControlFlagDumpMop_Type()
)
slotBootControlFlagDumpMop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlFlagDumpMop.setStatus("mandatory")


class _SlotBootControlFlagLoadXmop_Type(Integer32):
    """Custom type slotBootControlFlagLoadXmop based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SlotBootControlFlagLoadXmop_Type.__name__ = "Integer32"
_SlotBootControlFlagLoadXmop_Object = MibTableColumn
slotBootControlFlagLoadXmop = _SlotBootControlFlagLoadXmop_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 2, 1, 13),
    _SlotBootControlFlagLoadXmop_Type()
)
slotBootControlFlagLoadXmop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlFlagLoadXmop.setStatus("mandatory")


class _SlotBootControlFlagParamXmop_Type(Integer32):
    """Custom type slotBootControlFlagParamXmop based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SlotBootControlFlagParamXmop_Type.__name__ = "Integer32"
_SlotBootControlFlagParamXmop_Object = MibTableColumn
slotBootControlFlagParamXmop = _SlotBootControlFlagParamXmop_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 2, 1, 14),
    _SlotBootControlFlagParamXmop_Type()
)
slotBootControlFlagParamXmop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlFlagParamXmop.setStatus("mandatory")


class _SlotBootControlFlagDumpXmop_Type(Integer32):
    """Custom type slotBootControlFlagDumpXmop based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SlotBootControlFlagDumpXmop_Type.__name__ = "Integer32"
_SlotBootControlFlagDumpXmop_Object = MibTableColumn
slotBootControlFlagDumpXmop = _SlotBootControlFlagDumpXmop_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 2, 1, 15),
    _SlotBootControlFlagDumpXmop_Type()
)
slotBootControlFlagDumpXmop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlFlagDumpXmop.setStatus("mandatory")


class _SlotBootControlFlagLoadRarpTftp_Type(Integer32):
    """Custom type slotBootControlFlagLoadRarpTftp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SlotBootControlFlagLoadRarpTftp_Type.__name__ = "Integer32"
_SlotBootControlFlagLoadRarpTftp_Object = MibTableColumn
slotBootControlFlagLoadRarpTftp = _SlotBootControlFlagLoadRarpTftp_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 2, 1, 16),
    _SlotBootControlFlagLoadRarpTftp_Type()
)
slotBootControlFlagLoadRarpTftp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlFlagLoadRarpTftp.setStatus("mandatory")


class _SlotBootControlFlagParamRarpTftp_Type(Integer32):
    """Custom type slotBootControlFlagParamRarpTftp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SlotBootControlFlagParamRarpTftp_Type.__name__ = "Integer32"
_SlotBootControlFlagParamRarpTftp_Object = MibTableColumn
slotBootControlFlagParamRarpTftp = _SlotBootControlFlagParamRarpTftp_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 2, 1, 17),
    _SlotBootControlFlagParamRarpTftp_Type()
)
slotBootControlFlagParamRarpTftp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlFlagParamRarpTftp.setStatus("mandatory")


class _SlotBootControlFlagDumpRarpTftp_Type(Integer32):
    """Custom type slotBootControlFlagDumpRarpTftp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_SlotBootControlFlagDumpRarpTftp_Type.__name__ = "Integer32"
_SlotBootControlFlagDumpRarpTftp_Object = MibTableColumn
slotBootControlFlagDumpRarpTftp = _SlotBootControlFlagDumpRarpTftp_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 2, 1, 18),
    _SlotBootControlFlagDumpRarpTftp_Type()
)
slotBootControlFlagDumpRarpTftp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotBootControlFlagDumpRarpTftp.setStatus("mandatory")
_SlotBootControlStorageTable_Object = MibTable
slotBootControlStorageTable = _SlotBootControlStorageTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 3)
)
if mibBuilder.loadTexts:
    slotBootControlStorageTable.setStatus("mandatory")
_SlotBootControlStorageEntry_Object = MibTableRow
slotBootControlStorageEntry = _SlotBootControlStorageEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 3, 1)
)
slotBootControlStorageEntry.setIndexNames(
    (0, "MRVINREACH", "slotBootControlStorageClientSlot"),
    (0, "MRVINREACH", "slotBootControlStorageServerSlot"),
)
if mibBuilder.loadTexts:
    slotBootControlStorageEntry.setStatus("mandatory")
_SlotBootControlStorageClientSlot_Type = Integer32
_SlotBootControlStorageClientSlot_Object = MibTableColumn
slotBootControlStorageClientSlot = _SlotBootControlStorageClientSlot_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 3, 1, 1),
    _SlotBootControlStorageClientSlot_Type()
)
slotBootControlStorageClientSlot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotBootControlStorageClientSlot.setStatus("mandatory")
_SlotBootControlStorageServerSlot_Type = Integer32
_SlotBootControlStorageServerSlot_Object = MibTableColumn
slotBootControlStorageServerSlot = _SlotBootControlStorageServerSlot_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 3, 1, 2),
    _SlotBootControlStorageServerSlot_Type()
)
slotBootControlStorageServerSlot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotBootControlStorageServerSlot.setStatus("mandatory")


class _SlotBootControlStorageStatus_Type(Integer32):
    """Custom type slotBootControlStorageStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("failed", 2),
          ("notpresent", 4),
          ("ok", 3),
          ("present", 1))
    )


_SlotBootControlStorageStatus_Type.__name__ = "Integer32"
_SlotBootControlStorageStatus_Object = MibTableColumn
slotBootControlStorageStatus = _SlotBootControlStorageStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 3, 1, 3),
    _SlotBootControlStorageStatus_Type()
)
slotBootControlStorageStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotBootControlStorageStatus.setStatus("mandatory")
_SlotBootControlStorageFailures_Type = Counter32
_SlotBootControlStorageFailures_Object = MibTableColumn
slotBootControlStorageFailures = _SlotBootControlStorageFailures_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 6, 3, 1, 4),
    _SlotBootControlStorageFailures_Type()
)
slotBootControlStorageFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotBootControlStorageFailures.setStatus("mandatory")
_XSlot_ObjectIdentity = ObjectIdentity
xSlot = _XSlot_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 16, 7)
)
_SlotTable_Object = MibTable
slotTable = _SlotTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1)
)
if mibBuilder.loadTexts:
    slotTable.setStatus("mandatory")
_SlotEntry_Object = MibTableRow
slotEntry = _SlotEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1)
)
slotEntry.setIndexNames(
    (0, "MRVINREACH", "slotIndex"),
)
if mibBuilder.loadTexts:
    slotEntry.setStatus("mandatory")
_SlotIndex_Type = Integer32
_SlotIndex_Object = MibTableColumn
slotIndex = _SlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 1),
    _SlotIndex_Type()
)
slotIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotIndex.setStatus("mandatory")


class _SlotAdminAction_Type(Integer32):
    """Custom type slotAdminAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ready", 1),
          ("reset", 2),
          ("resetHold", 3))
    )


_SlotAdminAction_Type.__name__ = "Integer32"
_SlotAdminAction_Object = MibTableColumn
slotAdminAction = _SlotAdminAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 2),
    _SlotAdminAction_Type()
)
slotAdminAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotAdminAction.setStatus("mandatory")


class _SlotOperStatus_Type(Integer32):
    """Custom type slotOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              64,
              65,
              66,
              67,
              68,
              69)
        )
    )
    namedValues = NamedValues(
        *(("attended", 9),
          ("broken", 67),
          ("dumpRequested", 3),
          ("dumping", 4),
          ("inhibited", 12),
          ("initializing", 8),
          ("internal10", 10),
          ("internal11", 11),
          ("invalidConfigStorage", 14),
          ("loadRequested", 1),
          ("loading", 2),
          ("maxserverCard", 13),
          ("notApplicable", 69),
          ("notResponding", 66),
          ("paramLoading", 6),
          ("paramRequested", 5),
          ("resetHold", 64),
          ("running", 7),
          ("securityLockdown", 15),
          ("selfTest", 65),
          ("unknown", 68))
    )


_SlotOperStatus_Type.__name__ = "Integer32"
_SlotOperStatus_Object = MibTableColumn
slotOperStatus = _SlotOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 3),
    _SlotOperStatus_Type()
)
slotOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotOperStatus.setStatus("mandatory")
_SlotSecondsSinceReset_Type = Gauge32
_SlotSecondsSinceReset_Object = MibTableColumn
slotSecondsSinceReset = _SlotSecondsSinceReset_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 4),
    _SlotSecondsSinceReset_Type()
)
slotSecondsSinceReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotSecondsSinceReset.setStatus("mandatory")
_SlotHardwareType_Type = HardwareType
_SlotHardwareType_Object = MibTableColumn
slotHardwareType = _SlotHardwareType_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 5),
    _SlotHardwareType_Type()
)
slotHardwareType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotHardwareType.setStatus("mandatory")
_SlotHardwareSerialNumber_Type = SerialNumber
_SlotHardwareSerialNumber_Object = MibTableColumn
slotHardwareSerialNumber = _SlotHardwareSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 6),
    _SlotHardwareSerialNumber_Type()
)
slotHardwareSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotHardwareSerialNumber.setStatus("mandatory")
_SlotHardwareRevision_Type = Integer32
_SlotHardwareRevision_Object = MibTableColumn
slotHardwareRevision = _SlotHardwareRevision_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 7),
    _SlotHardwareRevision_Type()
)
slotHardwareRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotHardwareRevision.setStatus("mandatory")
_SlotIOCardType_Type = IOType
_SlotIOCardType_Object = MibTableColumn
slotIOCardType = _SlotIOCardType_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 8),
    _SlotIOCardType_Type()
)
slotIOCardType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotIOCardType.setStatus("mandatory")
_SlotIOCardSerialNumber_Type = SerialNumber
_SlotIOCardSerialNumber_Object = MibTableColumn
slotIOCardSerialNumber = _SlotIOCardSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 9),
    _SlotIOCardSerialNumber_Type()
)
slotIOCardSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotIOCardSerialNumber.setStatus("mandatory")


class _SlotIOCardOperStatus_Type(Integer32):
    """Custom type slotIOCardOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("good", 3),
          ("mismatch", 2),
          ("notApplicable", 4),
          ("unknown", 1))
    )


_SlotIOCardOperStatus_Type.__name__ = "Integer32"
_SlotIOCardOperStatus_Object = MibTableColumn
slotIOCardOperStatus = _SlotIOCardOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 10),
    _SlotIOCardOperStatus_Type()
)
slotIOCardOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotIOCardOperStatus.setStatus("mandatory")
_SlotBootstrapFirmwareRevision_Type = Integer32
_SlotBootstrapFirmwareRevision_Object = MibTableColumn
slotBootstrapFirmwareRevision = _SlotBootstrapFirmwareRevision_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 11),
    _SlotBootstrapFirmwareRevision_Type()
)
slotBootstrapFirmwareRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotBootstrapFirmwareRevision.setStatus("mandatory")
_SlotElementalFirmwareRevision_Type = Integer32
_SlotElementalFirmwareRevision_Object = MibTableColumn
slotElementalFirmwareRevision = _SlotElementalFirmwareRevision_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 12),
    _SlotElementalFirmwareRevision_Type()
)
slotElementalFirmwareRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotElementalFirmwareRevision.setStatus("mandatory")
_SlotMemorySize_Type = Integer32
_SlotMemorySize_Object = MibTableColumn
slotMemorySize = _SlotMemorySize_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 13),
    _SlotMemorySize_Type()
)
slotMemorySize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotMemorySize.setStatus("mandatory")
_SlotLedNumber_Type = Gauge32
_SlotLedNumber_Object = MibTableColumn
slotLedNumber = _SlotLedNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 14),
    _SlotLedNumber_Type()
)
slotLedNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotLedNumber.setStatus("mandatory")


class _SlotLedStatus_Type(OctetString):
    """Custom type slotLedStatus based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SlotLedStatus_Type.__name__ = "OctetString"
_SlotLedStatus_Object = MibTableColumn
slotLedStatus = _SlotLedStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 15),
    _SlotLedStatus_Type()
)
slotLedStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotLedStatus.setStatus("mandatory")
_SlotBase802Address_Type = MacAddress
_SlotBase802Address_Object = MibTableColumn
slotBase802Address = _SlotBase802Address_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 16),
    _SlotBase802Address_Type()
)
slotBase802Address.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotBase802Address.setStatus("mandatory")
_SlotIpAddress_Type = IpAddress
_SlotIpAddress_Object = MibTableColumn
slotIpAddress = _SlotIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 17),
    _SlotIpAddress_Type()
)
slotIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotIpAddress.setStatus("mandatory")


class _SlotPlus5Status_Type(Integer32):
    """Custom type slotPlus5Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("broken", 2),
          ("good", 3),
          ("unknown", 1))
    )


_SlotPlus5Status_Type.__name__ = "Integer32"
_SlotPlus5Status_Object = MibTableColumn
slotPlus5Status = _SlotPlus5Status_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 18),
    _SlotPlus5Status_Type()
)
slotPlus5Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotPlus5Status.setStatus("mandatory")


class _SlotPlus12Status_Type(Integer32):
    """Custom type slotPlus12Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("broken", 2),
          ("good", 3),
          ("unknown", 1))
    )


_SlotPlus12Status_Type.__name__ = "Integer32"
_SlotPlus12Status_Object = MibTableColumn
slotPlus12Status = _SlotPlus12Status_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 19),
    _SlotPlus12Status_Type()
)
slotPlus12Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotPlus12Status.setStatus("mandatory")


class _SlotMinus12Status_Type(Integer32):
    """Custom type slotMinus12Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("broken", 2),
          ("good", 3),
          ("unknown", 1))
    )


_SlotMinus12Status_Type.__name__ = "Integer32"
_SlotMinus12Status_Object = MibTableColumn
slotMinus12Status = _SlotMinus12Status_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 20),
    _SlotMinus12Status_Type()
)
slotMinus12Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotMinus12Status.setStatus("mandatory")
_SlotPlus5Watts_Type = Gauge32
_SlotPlus5Watts_Object = MibTableColumn
slotPlus5Watts = _SlotPlus5Watts_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 21),
    _SlotPlus5Watts_Type()
)
slotPlus5Watts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotPlus5Watts.setStatus("mandatory")
_SlotPlus12Watts_Type = Gauge32
_SlotPlus12Watts_Object = MibTableColumn
slotPlus12Watts = _SlotPlus12Watts_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 22),
    _SlotPlus12Watts_Type()
)
slotPlus12Watts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotPlus12Watts.setStatus("mandatory")
_SlotMinus12Watts_Type = Gauge32
_SlotMinus12Watts_Object = MibTableColumn
slotMinus12Watts = _SlotMinus12Watts_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 23),
    _SlotMinus12Watts_Type()
)
slotMinus12Watts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotMinus12Watts.setStatus("mandatory")
_SlotIOCardHardwareVersion_Type = Integer32
_SlotIOCardHardwareVersion_Object = MibTableColumn
slotIOCardHardwareVersion = _SlotIOCardHardwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 24),
    _SlotIOCardHardwareVersion_Type()
)
slotIOCardHardwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotIOCardHardwareVersion.setStatus("mandatory")


class _SlotRestoreNVS_Type(Integer32):
    """Custom type slotRestoreNVS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_SlotRestoreNVS_Type.__name__ = "Integer32"
_SlotRestoreNVS_Object = MibTableColumn
slotRestoreNVS = _SlotRestoreNVS_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 25),
    _SlotRestoreNVS_Type()
)
slotRestoreNVS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotRestoreNVS.setStatus("mandatory")


class _SlotDefaultNVS_Type(Integer32):
    """Custom type slotDefaultNVS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_SlotDefaultNVS_Type.__name__ = "Integer32"
_SlotDefaultNVS_Object = MibTableColumn
slotDefaultNVS = _SlotDefaultNVS_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 1, 1, 26),
    _SlotDefaultNVS_Type()
)
slotDefaultNVS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slotDefaultNVS.setStatus("mandatory")
_SlotBootTable_Object = MibTable
slotBootTable = _SlotBootTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 2)
)
if mibBuilder.loadTexts:
    slotBootTable.setStatus("mandatory")
_SlotBootEntry_Object = MibTableRow
slotBootEntry = _SlotBootEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 2, 1)
)
slotBootEntry.setIndexNames(
    (0, "MRVINREACH", "slotBootIndex"),
)
if mibBuilder.loadTexts:
    slotBootEntry.setStatus("mandatory")
_SlotBootIndex_Type = Integer32
_SlotBootIndex_Object = MibTableColumn
slotBootIndex = _SlotBootIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 2, 1, 1),
    _SlotBootIndex_Type()
)
slotBootIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotBootIndex.setStatus("mandatory")
_SlotBootIfIndex_Type = Integer32
_SlotBootIfIndex_Object = MibTableColumn
slotBootIfIndex = _SlotBootIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 2, 1, 2),
    _SlotBootIfIndex_Type()
)
slotBootIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotBootIfIndex.setStatus("mandatory")
_SlotBootNetwork_Type = ObjectIdentifier
_SlotBootNetwork_Object = MibTableColumn
slotBootNetwork = _SlotBootNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 2, 1, 3),
    _SlotBootNetwork_Type()
)
slotBootNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotBootNetwork.setStatus("mandatory")


class _SlotBootProtocol_Type(Integer32):
    """Custom type slotBootProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("bootpTftp", 6),
          ("local", 8),
          ("managementBus", 9),
          ("mop", 3),
          ("other", 1),
          ("rarpTftp", 5),
          ("tftp", 7),
          ("unknown", 2),
          ("xmop", 4))
    )


_SlotBootProtocol_Type.__name__ = "Integer32"
_SlotBootProtocol_Object = MibTableColumn
slotBootProtocol = _SlotBootProtocol_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 2, 1, 4),
    _SlotBootProtocol_Type()
)
slotBootProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotBootProtocol.setStatus("mandatory")
_SlotBoot802Address_Type = MacAddress
_SlotBoot802Address_Object = MibTableColumn
slotBoot802Address = _SlotBoot802Address_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 2, 1, 5),
    _SlotBoot802Address_Type()
)
slotBoot802Address.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotBoot802Address.setStatus("mandatory")
_SlotBootAddressType_Type = AddressType
_SlotBootAddressType_Object = MibTableColumn
slotBootAddressType = _SlotBootAddressType_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 2, 1, 6),
    _SlotBootAddressType_Type()
)
slotBootAddressType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotBootAddressType.setStatus("mandatory")


class _SlotBootAddress_Type(OctetString):
    """Custom type slotBootAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_SlotBootAddress_Type.__name__ = "OctetString"
_SlotBootAddress_Object = MibTableColumn
slotBootAddress = _SlotBootAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 2, 1, 7),
    _SlotBootAddress_Type()
)
slotBootAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotBootAddress.setStatus("mandatory")
_SlotBootServerAddressType_Type = AddressType
_SlotBootServerAddressType_Object = MibTableColumn
slotBootServerAddressType = _SlotBootServerAddressType_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 2, 1, 8),
    _SlotBootServerAddressType_Type()
)
slotBootServerAddressType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotBootServerAddressType.setStatus("mandatory")


class _SlotBootServerAddress_Type(OctetString):
    """Custom type slotBootServerAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_SlotBootServerAddress_Type.__name__ = "OctetString"
_SlotBootServerAddress_Object = MibTableColumn
slotBootServerAddress = _SlotBootServerAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 2, 1, 9),
    _SlotBootServerAddress_Type()
)
slotBootServerAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotBootServerAddress.setStatus("mandatory")
_SlotBootGatewayAddress_Type = IpAddress
_SlotBootGatewayAddress_Object = MibTableColumn
slotBootGatewayAddress = _SlotBootGatewayAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 2, 1, 10),
    _SlotBootGatewayAddress_Type()
)
slotBootGatewayAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotBootGatewayAddress.setStatus("mandatory")


class _SlotBootFileName_Type(DisplayString):
    """Custom type slotBootFileName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SlotBootFileName_Type.__name__ = "DisplayString"
_SlotBootFileName_Object = MibTableColumn
slotBootFileName = _SlotBootFileName_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 2, 1, 11),
    _SlotBootFileName_Type()
)
slotBootFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotBootFileName.setStatus("mandatory")
_SlotBootBlockNumber_Type = Gauge32
_SlotBootBlockNumber_Object = MibTableColumn
slotBootBlockNumber = _SlotBootBlockNumber_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 2, 1, 12),
    _SlotBootBlockNumber_Type()
)
slotBootBlockNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotBootBlockNumber.setStatus("mandatory")


class _SlotBootCrashCode_Type(OctetString):
    """Custom type slotBootCrashCode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_SlotBootCrashCode_Type.__name__ = "OctetString"
_SlotBootCrashCode_Object = MibTableColumn
slotBootCrashCode = _SlotBootCrashCode_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 2, 1, 13),
    _SlotBootCrashCode_Type()
)
slotBootCrashCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotBootCrashCode.setStatus("mandatory")
_SlotControllerTable_Object = MibTable
slotControllerTable = _SlotControllerTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 3)
)
if mibBuilder.loadTexts:
    slotControllerTable.setStatus("mandatory")
_SlotControllerEntry_Object = MibTableRow
slotControllerEntry = _SlotControllerEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 3, 1)
)
slotControllerEntry.setIndexNames(
    (0, "MRVINREACH", "slotControllerType"),
    (0, "MRVINREACH", "slotControllerIndex"),
)
if mibBuilder.loadTexts:
    slotControllerEntry.setStatus("mandatory")
_SlotControllerType_Type = NetworkType
_SlotControllerType_Object = MibTableColumn
slotControllerType = _SlotControllerType_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 3, 1, 1),
    _SlotControllerType_Type()
)
slotControllerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotControllerType.setStatus("mandatory")
_SlotControllerIndex_Type = Integer32
_SlotControllerIndex_Object = MibTableColumn
slotControllerIndex = _SlotControllerIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 3, 1, 2),
    _SlotControllerIndex_Type()
)
slotControllerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotControllerIndex.setStatus("mandatory")
_SlotControllerNetwork_Type = ObjectIdentifier
_SlotControllerNetwork_Object = MibTableColumn
slotControllerNetwork = _SlotControllerNetwork_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 7, 3, 1, 3),
    _SlotControllerNetwork_Type()
)
slotControllerNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slotControllerNetwork.setStatus("mandatory")
_XPowerSupply_ObjectIdentity = ObjectIdentity
xPowerSupply = _XPowerSupply_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 16, 8)
)
_PowerSupplyTable_Object = MibTable
powerSupplyTable = _PowerSupplyTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1)
)
if mibBuilder.loadTexts:
    powerSupplyTable.setStatus("mandatory")
_PowerSupplyEntry_Object = MibTableRow
powerSupplyEntry = _PowerSupplyEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1)
)
powerSupplyEntry.setIndexNames(
    (0, "MRVINREACH", "powerSupplyIndex"),
)
if mibBuilder.loadTexts:
    powerSupplyEntry.setStatus("mandatory")
_PowerSupplyIndex_Type = Integer32
_PowerSupplyIndex_Object = MibTableColumn
powerSupplyIndex = _PowerSupplyIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 1),
    _PowerSupplyIndex_Type()
)
powerSupplyIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyIndex.setStatus("mandatory")


class _PowerSupplyAdminAction_Type(Integer32):
    """Custom type powerSupplyAdminAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ready", 1),
          ("reset", 2),
          ("resetHold", 3))
    )


_PowerSupplyAdminAction_Type.__name__ = "Integer32"
_PowerSupplyAdminAction_Object = MibTableColumn
powerSupplyAdminAction = _PowerSupplyAdminAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 2),
    _PowerSupplyAdminAction_Type()
)
powerSupplyAdminAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    powerSupplyAdminAction.setStatus("mandatory")
_PowerSupplyFirmwareVersion_Type = Integer32
_PowerSupplyFirmwareVersion_Object = MibTableColumn
powerSupplyFirmwareVersion = _PowerSupplyFirmwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 3),
    _PowerSupplyFirmwareVersion_Type()
)
powerSupplyFirmwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyFirmwareVersion.setStatus("mandatory")


class _PowerSupplyRedundancyStatus_Type(Integer32):
    """Custom type powerSupplyRedundancyStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("engaged", 4),
          ("redundant", 3),
          ("unknown", 1))
    )


_PowerSupplyRedundancyStatus_Type.__name__ = "Integer32"
_PowerSupplyRedundancyStatus_Object = MibTableColumn
powerSupplyRedundancyStatus = _PowerSupplyRedundancyStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 4),
    _PowerSupplyRedundancyStatus_Type()
)
powerSupplyRedundancyStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyRedundancyStatus.setStatus("mandatory")


class _PowerSupplyPlus5Status_Type(Integer32):
    """Custom type powerSupplyPlus5Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("broken", 3),
          ("good", 2),
          ("unknown", 1))
    )


_PowerSupplyPlus5Status_Type.__name__ = "Integer32"
_PowerSupplyPlus5Status_Object = MibTableColumn
powerSupplyPlus5Status = _PowerSupplyPlus5Status_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 5),
    _PowerSupplyPlus5Status_Type()
)
powerSupplyPlus5Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyPlus5Status.setStatus("mandatory")


class _PowerSupplyPlus12Status_Type(Integer32):
    """Custom type powerSupplyPlus12Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("broken", 3),
          ("good", 2),
          ("unknown", 1))
    )


_PowerSupplyPlus12Status_Type.__name__ = "Integer32"
_PowerSupplyPlus12Status_Object = MibTableColumn
powerSupplyPlus12Status = _PowerSupplyPlus12Status_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 6),
    _PowerSupplyPlus12Status_Type()
)
powerSupplyPlus12Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyPlus12Status.setStatus("mandatory")


class _PowerSupplyMinus12Status_Type(Integer32):
    """Custom type powerSupplyMinus12Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("broken", 3),
          ("good", 2),
          ("unknown", 1))
    )


_PowerSupplyMinus12Status_Type.__name__ = "Integer32"
_PowerSupplyMinus12Status_Object = MibTableColumn
powerSupplyMinus12Status = _PowerSupplyMinus12Status_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 7),
    _PowerSupplyMinus12Status_Type()
)
powerSupplyMinus12Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyMinus12Status.setStatus("mandatory")


class _PowerSupplyThermalWarningStatus_Type(Integer32):
    """Custom type powerSupplyThermalWarningStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("broken", 3),
          ("good", 2),
          ("unknown", 1))
    )


_PowerSupplyThermalWarningStatus_Type.__name__ = "Integer32"
_PowerSupplyThermalWarningStatus_Object = MibTableColumn
powerSupplyThermalWarningStatus = _PowerSupplyThermalWarningStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 8),
    _PowerSupplyThermalWarningStatus_Type()
)
powerSupplyThermalWarningStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyThermalWarningStatus.setStatus("mandatory")


class _PowerSupplyThermalShutdownStatus_Type(Integer32):
    """Custom type powerSupplyThermalShutdownStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("broken", 3),
          ("good", 2),
          ("unknown", 1))
    )


_PowerSupplyThermalShutdownStatus_Type.__name__ = "Integer32"
_PowerSupplyThermalShutdownStatus_Object = MibTableColumn
powerSupplyThermalShutdownStatus = _PowerSupplyThermalShutdownStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 9),
    _PowerSupplyThermalShutdownStatus_Type()
)
powerSupplyThermalShutdownStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyThermalShutdownStatus.setStatus("mandatory")


class _PowerSupplyFanStatus_Type(Integer32):
    """Custom type powerSupplyFanStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("broken", 3),
          ("good", 2),
          ("unknown", 1))
    )


_PowerSupplyFanStatus_Type.__name__ = "Integer32"
_PowerSupplyFanStatus_Object = MibTableColumn
powerSupplyFanStatus = _PowerSupplyFanStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 10),
    _PowerSupplyFanStatus_Type()
)
powerSupplyFanStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyFanStatus.setStatus("mandatory")


class _PowerSupplyHardwareInhibitStatus_Type(Integer32):
    """Custom type powerSupplyHardwareInhibitStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("broken", 3),
          ("good", 2),
          ("unknown", 1))
    )


_PowerSupplyHardwareInhibitStatus_Type.__name__ = "Integer32"
_PowerSupplyHardwareInhibitStatus_Object = MibTableColumn
powerSupplyHardwareInhibitStatus = _PowerSupplyHardwareInhibitStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 11),
    _PowerSupplyHardwareInhibitStatus_Type()
)
powerSupplyHardwareInhibitStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyHardwareInhibitStatus.setStatus("mandatory")


class _PowerSupplyPlus5History_Type(Integer32):
    """Custom type powerSupplyPlus5History based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("broken", 3),
          ("good", 2),
          ("unknown", 1))
    )


_PowerSupplyPlus5History_Type.__name__ = "Integer32"
_PowerSupplyPlus5History_Object = MibTableColumn
powerSupplyPlus5History = _PowerSupplyPlus5History_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 12),
    _PowerSupplyPlus5History_Type()
)
powerSupplyPlus5History.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyPlus5History.setStatus("mandatory")


class _PowerSupplyPlus12History_Type(Integer32):
    """Custom type powerSupplyPlus12History based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("broken", 3),
          ("good", 2),
          ("unknown", 1))
    )


_PowerSupplyPlus12History_Type.__name__ = "Integer32"
_PowerSupplyPlus12History_Object = MibTableColumn
powerSupplyPlus12History = _PowerSupplyPlus12History_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 13),
    _PowerSupplyPlus12History_Type()
)
powerSupplyPlus12History.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyPlus12History.setStatus("mandatory")


class _PowerSupplyMinus12History_Type(Integer32):
    """Custom type powerSupplyMinus12History based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("broken", 3),
          ("good", 2),
          ("unknown", 1))
    )


_PowerSupplyMinus12History_Type.__name__ = "Integer32"
_PowerSupplyMinus12History_Object = MibTableColumn
powerSupplyMinus12History = _PowerSupplyMinus12History_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 14),
    _PowerSupplyMinus12History_Type()
)
powerSupplyMinus12History.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyMinus12History.setStatus("mandatory")


class _PowerSupplyThermalWarningHistory_Type(Integer32):
    """Custom type powerSupplyThermalWarningHistory based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("broken", 3),
          ("good", 2),
          ("unknown", 1))
    )


_PowerSupplyThermalWarningHistory_Type.__name__ = "Integer32"
_PowerSupplyThermalWarningHistory_Object = MibTableColumn
powerSupplyThermalWarningHistory = _PowerSupplyThermalWarningHistory_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 15),
    _PowerSupplyThermalWarningHistory_Type()
)
powerSupplyThermalWarningHistory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyThermalWarningHistory.setStatus("mandatory")


class _PowerSupplyThermalShutdownHistory_Type(Integer32):
    """Custom type powerSupplyThermalShutdownHistory based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("broken", 3),
          ("good", 2),
          ("unknown", 1))
    )


_PowerSupplyThermalShutdownHistory_Type.__name__ = "Integer32"
_PowerSupplyThermalShutdownHistory_Object = MibTableColumn
powerSupplyThermalShutdownHistory = _PowerSupplyThermalShutdownHistory_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 16),
    _PowerSupplyThermalShutdownHistory_Type()
)
powerSupplyThermalShutdownHistory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyThermalShutdownHistory.setStatus("mandatory")


class _PowerSupplyFanHistory_Type(Integer32):
    """Custom type powerSupplyFanHistory based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("broken", 3),
          ("good", 2),
          ("unknown", 1))
    )


_PowerSupplyFanHistory_Type.__name__ = "Integer32"
_PowerSupplyFanHistory_Object = MibTableColumn
powerSupplyFanHistory = _PowerSupplyFanHistory_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 17),
    _PowerSupplyFanHistory_Type()
)
powerSupplyFanHistory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyFanHistory.setStatus("mandatory")


class _PowerSupplyHardwareInhibitHistory_Type(Integer32):
    """Custom type powerSupplyHardwareInhibitHistory based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("broken", 3),
          ("good", 2),
          ("unknown", 1))
    )


_PowerSupplyHardwareInhibitHistory_Type.__name__ = "Integer32"
_PowerSupplyHardwareInhibitHistory_Object = MibTableColumn
powerSupplyHardwareInhibitHistory = _PowerSupplyHardwareInhibitHistory_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 18),
    _PowerSupplyHardwareInhibitHistory_Type()
)
powerSupplyHardwareInhibitHistory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyHardwareInhibitHistory.setStatus("mandatory")
_PowerSupplyPlus5Volts_Type = Gauge32
_PowerSupplyPlus5Volts_Object = MibTableColumn
powerSupplyPlus5Volts = _PowerSupplyPlus5Volts_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 19),
    _PowerSupplyPlus5Volts_Type()
)
powerSupplyPlus5Volts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyPlus5Volts.setStatus("mandatory")
_PowerSupplyPlus12Volts_Type = Gauge32
_PowerSupplyPlus12Volts_Object = MibTableColumn
powerSupplyPlus12Volts = _PowerSupplyPlus12Volts_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 20),
    _PowerSupplyPlus12Volts_Type()
)
powerSupplyPlus12Volts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyPlus12Volts.setStatus("mandatory")
_PowerSupplyMinus12Volts_Type = Gauge32
_PowerSupplyMinus12Volts_Object = MibTableColumn
powerSupplyMinus12Volts = _PowerSupplyMinus12Volts_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 21),
    _PowerSupplyMinus12Volts_Type()
)
powerSupplyMinus12Volts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyMinus12Volts.setStatus("mandatory")
_PowerSupplyWatts_Type = Gauge32
_PowerSupplyWatts_Object = MibTableColumn
powerSupplyWatts = _PowerSupplyWatts_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 22),
    _PowerSupplyWatts_Type()
)
powerSupplyWatts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyWatts.setStatus("mandatory")
_PowerSupplyWattsMax_Type = Gauge32
_PowerSupplyWattsMax_Object = MibTableColumn
powerSupplyWattsMax = _PowerSupplyWattsMax_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 23),
    _PowerSupplyWattsMax_Type()
)
powerSupplyWattsMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyWattsMax.setStatus("mandatory")
_PowerSupplyChassisWatts_Type = Gauge32
_PowerSupplyChassisWatts_Object = MibTableColumn
powerSupplyChassisWatts = _PowerSupplyChassisWatts_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 24),
    _PowerSupplyChassisWatts_Type()
)
powerSupplyChassisWatts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyChassisWatts.setStatus("mandatory")
_PowerSupplyChassisWattsMax_Type = Gauge32
_PowerSupplyChassisWattsMax_Object = MibTableColumn
powerSupplyChassisWattsMax = _PowerSupplyChassisWattsMax_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 25),
    _PowerSupplyChassisWattsMax_Type()
)
powerSupplyChassisWattsMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyChassisWattsMax.setStatus("mandatory")


class _PowerSupplyHardwareType_Type(Integer32):
    """Custom type powerSupplyHardwareType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bb190", 3),
          ("other", 1),
          ("ps130", 2))
    )


_PowerSupplyHardwareType_Type.__name__ = "Integer32"
_PowerSupplyHardwareType_Object = MibTableColumn
powerSupplyHardwareType = _PowerSupplyHardwareType_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 8, 1, 1, 26),
    _PowerSupplyHardwareType_Type()
)
powerSupplyHardwareType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyHardwareType.setStatus("mandatory")
_XFirmwareUpdate_ObjectIdentity = ObjectIdentity
xFirmwareUpdate = _XFirmwareUpdate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 16, 9)
)
_FirmwareUpdateTable_Object = MibTable
firmwareUpdateTable = _FirmwareUpdateTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 9, 1)
)
if mibBuilder.loadTexts:
    firmwareUpdateTable.setStatus("mandatory")
_FirmwareUpdateEntry_Object = MibTableRow
firmwareUpdateEntry = _FirmwareUpdateEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 9, 1, 1)
)
firmwareUpdateEntry.setIndexNames(
    (0, "MRVINREACH", "firmwareUpdateSlotIndex"),
)
if mibBuilder.loadTexts:
    firmwareUpdateEntry.setStatus("mandatory")
_FirmwareUpdateSlotIndex_Type = Integer32
_FirmwareUpdateSlotIndex_Object = MibTableColumn
firmwareUpdateSlotIndex = _FirmwareUpdateSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 9, 1, 1, 1),
    _FirmwareUpdateSlotIndex_Type()
)
firmwareUpdateSlotIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firmwareUpdateSlotIndex.setStatus("mandatory")
_FirmwareUpdateDefaultFileName_Type = DisplayString
_FirmwareUpdateDefaultFileName_Object = MibTableColumn
firmwareUpdateDefaultFileName = _FirmwareUpdateDefaultFileName_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 9, 1, 1, 2),
    _FirmwareUpdateDefaultFileName_Type()
)
firmwareUpdateDefaultFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firmwareUpdateDefaultFileName.setStatus("mandatory")
_FirmwareUpdateFileName_Type = DisplayString
_FirmwareUpdateFileName_Object = MibTableColumn
firmwareUpdateFileName = _FirmwareUpdateFileName_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 9, 1, 1, 3),
    _FirmwareUpdateFileName_Type()
)
firmwareUpdateFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    firmwareUpdateFileName.setStatus("mandatory")


class _FirmwareUpdateStatus_Type(Integer32):
    """Custom type firmwareUpdateStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_FirmwareUpdateStatus_Type.__name__ = "Integer32"
_FirmwareUpdateStatus_Object = MibTableColumn
firmwareUpdateStatus = _FirmwareUpdateStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 9, 1, 1, 4),
    _FirmwareUpdateStatus_Type()
)
firmwareUpdateStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    firmwareUpdateStatus.setStatus("mandatory")


class _FirmwareUpdateState_Type(Integer32):
    """Custom type firmwareUpdateState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("idle", 1),
          ("writing", 2))
    )


_FirmwareUpdateState_Type.__name__ = "Integer32"
_FirmwareUpdateState_Object = MibTableColumn
firmwareUpdateState = _FirmwareUpdateState_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 9, 1, 1, 5),
    _FirmwareUpdateState_Type()
)
firmwareUpdateState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firmwareUpdateState.setStatus("mandatory")


class _FirmwareUpdateCompletionStatus_Type(Integer32):
    """Custom type firmwareUpdateCompletionStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("badFileName", 5),
          ("busError", 4),
          ("noTarget", 3),
          ("none", 1),
          ("success", 2),
          ("targetError", 6),
          ("timeout", 7))
    )


_FirmwareUpdateCompletionStatus_Type.__name__ = "Integer32"
_FirmwareUpdateCompletionStatus_Object = MibTableColumn
firmwareUpdateCompletionStatus = _FirmwareUpdateCompletionStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 9, 1, 1, 6),
    _FirmwareUpdateCompletionStatus_Type()
)
firmwareUpdateCompletionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firmwareUpdateCompletionStatus.setStatus("mandatory")


class _FirmwareUpdateMethod_Type(Integer32):
    """Custom type firmwareUpdateMethod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("card", 1),
          ("local", 2))
    )


_FirmwareUpdateMethod_Type.__name__ = "Integer32"
_FirmwareUpdateMethod_Object = MibTableColumn
firmwareUpdateMethod = _FirmwareUpdateMethod_Object(
    (1, 3, 6, 1, 4, 1, 33, 16, 9, 1, 1, 7),
    _FirmwareUpdateMethod_Type()
)
firmwareUpdateMethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    firmwareUpdateMethod.setStatus("mandatory")
_XApple_ObjectIdentity = ObjectIdentity
xApple = _XApple_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 21)
)
_XAppleSystem_ObjectIdentity = ObjectIdentity
xAppleSystem = _XAppleSystem_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 21, 1)
)


class _AppleState_Type(Integer32):
    """Custom type appleState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AppleState_Type.__name__ = "Integer32"
_AppleState_Object = MibScalar
appleState = _AppleState_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 1, 1),
    _AppleState_Type()
)
appleState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    appleState.setStatus("mandatory")


class _AppleStatus_Type(Integer32):
    """Custom type appleStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 2),
          ("badConfig", 4),
          ("disabled", 1),
          ("noInterface", 3),
          ("noInterfaceActive", 5))
    )


_AppleStatus_Type.__name__ = "Integer32"
_AppleStatus_Object = MibScalar
appleStatus = _AppleStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 1, 2),
    _AppleStatus_Type()
)
appleStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appleStatus.setStatus("mandatory")
_AppleStatusIf_Type = Integer32
_AppleStatusIf_Object = MibScalar
appleStatusIf = _AppleStatusIf_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 1, 3),
    _AppleStatusIf_Type()
)
appleStatusIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appleStatusIf.setStatus("mandatory")
_XApplePort_ObjectIdentity = ObjectIdentity
xApplePort = _XApplePort_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 21, 2)
)
_ApplePortTable_Object = MibTable
applePortTable = _ApplePortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 1)
)
if mibBuilder.loadTexts:
    applePortTable.setStatus("mandatory")
_ApplePortEntry_Object = MibTableRow
applePortEntry = _ApplePortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1)
)
applePortEntry.setIndexNames(
    (0, "MRVINREACH", "applePortIndex"),
)
if mibBuilder.loadTexts:
    applePortEntry.setStatus("mandatory")
_ApplePortIndex_Type = Integer32
_ApplePortIndex_Object = MibTableColumn
applePortIndex = _ApplePortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 1),
    _ApplePortIndex_Type()
)
applePortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortIndex.setStatus("mandatory")


class _ApplePortProtocolPriority_Type(Integer32):
    """Custom type applePortProtocolPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              5)
        )
    )
    namedValues = NamedValues(
        *(("high", 5),
          ("low", 1),
          ("medium", 3))
    )


_ApplePortProtocolPriority_Type.__name__ = "Integer32"
_ApplePortProtocolPriority_Object = MibTableColumn
applePortProtocolPriority = _ApplePortProtocolPriority_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 2),
    _ApplePortProtocolPriority_Type()
)
applePortProtocolPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    applePortProtocolPriority.setStatus("mandatory")


class _ApplePortArpInterval_Type(Integer32):
    """Custom type applePortArpInterval based on Integer32"""
    defaultValue = 33

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(33, 65535),
    )


_ApplePortArpInterval_Type.__name__ = "Integer32"
_ApplePortArpInterval_Object = MibTableColumn
applePortArpInterval = _ApplePortArpInterval_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 3),
    _ApplePortArpInterval_Type()
)
applePortArpInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    applePortArpInterval.setStatus("mandatory")


class _ApplePortArpRetransmitCount_Type(Integer32):
    """Custom type applePortArpRetransmitCount based on Integer32"""
    defaultValue = 20

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_ApplePortArpRetransmitCount_Type.__name__ = "Integer32"
_ApplePortArpRetransmitCount_Object = MibTableColumn
applePortArpRetransmitCount = _ApplePortArpRetransmitCount_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 4),
    _ApplePortArpRetransmitCount_Type()
)
applePortArpRetransmitCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    applePortArpRetransmitCount.setStatus("mandatory")


class _ApplePortChecksum_Type(Integer32):
    """Custom type applePortChecksum based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_ApplePortChecksum_Type.__name__ = "Integer32"
_ApplePortChecksum_Object = MibTableColumn
applePortChecksum = _ApplePortChecksum_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 5),
    _ApplePortChecksum_Type()
)
applePortChecksum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    applePortChecksum.setStatus("mandatory")
_ApplePortPacketsIn_Type = Counter32
_ApplePortPacketsIn_Object = MibTableColumn
applePortPacketsIn = _ApplePortPacketsIn_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 6),
    _ApplePortPacketsIn_Type()
)
applePortPacketsIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortPacketsIn.setStatus("mandatory")
_ApplePortPacketsOut_Type = Counter32
_ApplePortPacketsOut_Object = MibTableColumn
applePortPacketsOut = _ApplePortPacketsOut_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 7),
    _ApplePortPacketsOut_Type()
)
applePortPacketsOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortPacketsOut.setStatus("mandatory")
_ApplePortForwardsIn_Type = Counter32
_ApplePortForwardsIn_Object = MibTableColumn
applePortForwardsIn = _ApplePortForwardsIn_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 8),
    _ApplePortForwardsIn_Type()
)
applePortForwardsIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortForwardsIn.setStatus("mandatory")
_ApplePortForwardsOut_Type = Counter32
_ApplePortForwardsOut_Object = MibTableColumn
applePortForwardsOut = _ApplePortForwardsOut_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 9),
    _ApplePortForwardsOut_Type()
)
applePortForwardsOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortForwardsOut.setStatus("mandatory")
_ApplePortNetAddress_Type = DdpAddress
_ApplePortNetAddress_Object = MibTableColumn
applePortNetAddress = _ApplePortNetAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 10),
    _ApplePortNetAddress_Type()
)
applePortNetAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortNetAddress.setStatus("mandatory")


class _ApplePortNetStart_Type(OctetString):
    """Custom type applePortNetStart based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(2, 2),
    )


_ApplePortNetStart_Type.__name__ = "OctetString"
_ApplePortNetStart_Object = MibTableColumn
applePortNetStart = _ApplePortNetStart_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 11),
    _ApplePortNetStart_Type()
)
applePortNetStart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortNetStart.setStatus("mandatory")


class _ApplePortNetEnd_Type(OctetString):
    """Custom type applePortNetEnd based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(2, 2),
    )


_ApplePortNetEnd_Type.__name__ = "OctetString"
_ApplePortNetEnd_Object = MibTableColumn
applePortNetEnd = _ApplePortNetEnd_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 12),
    _ApplePortNetEnd_Type()
)
applePortNetEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortNetEnd.setStatus("mandatory")
_ApplePortErrors_Type = Counter32
_ApplePortErrors_Object = MibTableColumn
applePortErrors = _ApplePortErrors_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 13),
    _ApplePortErrors_Type()
)
applePortErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortErrors.setStatus("mandatory")


class _ApplePortLastError_Type(Integer32):
    """Custom type applePortLastError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("broadcast", 1),
          ("checksum", 2),
          ("hopCount", 3),
          ("noProtocol", 4),
          ("noRoute", 5),
          ("shortDDP", 6),
          ("tooLong", 7),
          ("tooShort", 8))
    )


_ApplePortLastError_Type.__name__ = "Integer32"
_ApplePortLastError_Object = MibTableColumn
applePortLastError = _ApplePortLastError_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 14),
    _ApplePortLastError_Type()
)
applePortLastError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortLastError.setStatus("mandatory")
_ApplePortLastErrorTime_Type = TimeTicks
_ApplePortLastErrorTime_Object = MibTableColumn
applePortLastErrorTime = _ApplePortLastErrorTime_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 15),
    _ApplePortLastErrorTime_Type()
)
applePortLastErrorTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortLastErrorTime.setStatus("mandatory")


class _ApplePortLastErrorData_Type(OctetString):
    """Custom type applePortLastErrorData based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(22, 22),
    )


_ApplePortLastErrorData_Type.__name__ = "OctetString"
_ApplePortLastErrorData_Object = MibTableColumn
applePortLastErrorData = _ApplePortLastErrorData_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 16),
    _ApplePortLastErrorData_Type()
)
applePortLastErrorData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortLastErrorData.setStatus("mandatory")


class _ApplePortBringBackTime_Type(Integer32):
    """Custom type applePortBringBackTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ApplePortBringBackTime_Type.__name__ = "Integer32"
_ApplePortBringBackTime_Object = MibTableColumn
applePortBringBackTime = _ApplePortBringBackTime_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 17),
    _ApplePortBringBackTime_Type()
)
applePortBringBackTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    applePortBringBackTime.setStatus("mandatory")


class _ApplePortUseNeighborNotify_Type(Integer32):
    """Custom type applePortUseNeighborNotify based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_ApplePortUseNeighborNotify_Type.__name__ = "Integer32"
_ApplePortUseNeighborNotify_Object = MibTableColumn
applePortUseNeighborNotify = _ApplePortUseNeighborNotify_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 18),
    _ApplePortUseNeighborNotify_Type()
)
applePortUseNeighborNotify.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    applePortUseNeighborNotify.setStatus("mandatory")


class _ApplePortRouterType_Type(Integer32):
    """Custom type applePortRouterType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("full", 1),
          ("half", 2))
    )


_ApplePortRouterType_Type.__name__ = "Integer32"
_ApplePortRouterType_Object = MibTableColumn
applePortRouterType = _ApplePortRouterType_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 19),
    _ApplePortRouterType_Type()
)
applePortRouterType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    applePortRouterType.setStatus("mandatory")
_ApplePortZoneTable_Object = MibTable
applePortZoneTable = _ApplePortZoneTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 2)
)
if mibBuilder.loadTexts:
    applePortZoneTable.setStatus("mandatory")
_ApplePortZoneEntry_Object = MibTableRow
applePortZoneEntry = _ApplePortZoneEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 2, 1)
)
applePortZoneEntry.setIndexNames(
    (0, "MRVINREACH", "applePortZoneIndex"),
    (0, "MRVINREACH", "applePortZoneName"),
)
if mibBuilder.loadTexts:
    applePortZoneEntry.setStatus("mandatory")
_ApplePortZoneIndex_Type = Integer32
_ApplePortZoneIndex_Object = MibTableColumn
applePortZoneIndex = _ApplePortZoneIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 2, 1, 1),
    _ApplePortZoneIndex_Type()
)
applePortZoneIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortZoneIndex.setStatus("mandatory")


class _ApplePortZoneName_Type(OctetString):
    """Custom type applePortZoneName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(32, 32),
    )


_ApplePortZoneName_Type.__name__ = "OctetString"
_ApplePortZoneName_Object = MibTableColumn
applePortZoneName = _ApplePortZoneName_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 2, 1, 2),
    _ApplePortZoneName_Type()
)
applePortZoneName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortZoneName.setStatus("mandatory")


class _ApplePortZoneStatus_Type(Integer32):
    """Custom type applePortZoneStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ApplePortZoneStatus_Type.__name__ = "Integer32"
_ApplePortZoneStatus_Object = MibTableColumn
applePortZoneStatus = _ApplePortZoneStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 2, 2, 1, 3),
    _ApplePortZoneStatus_Type()
)
applePortZoneStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    applePortZoneStatus.setStatus("mandatory")
_XApplePolicy_ObjectIdentity = ObjectIdentity
xApplePolicy = _XApplePolicy_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 21, 3)
)
_ApplePortExportTable_Object = MibTable
applePortExportTable = _ApplePortExportTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 3, 1)
)
if mibBuilder.loadTexts:
    applePortExportTable.setStatus("mandatory")
_ApplePortExportEntry_Object = MibTableRow
applePortExportEntry = _ApplePortExportEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 3, 1, 1)
)
applePortExportEntry.setIndexNames(
    (0, "MRVINREACH", "applePortExportIndex"),
    (0, "MRVINREACH", "applePortExportZone"),
    (0, "MRVINREACH", "applePortExportName"),
    (0, "MRVINREACH", "applePortExportType"),
)
if mibBuilder.loadTexts:
    applePortExportEntry.setStatus("mandatory")
_ApplePortExportIndex_Type = Integer32
_ApplePortExportIndex_Object = MibTableColumn
applePortExportIndex = _ApplePortExportIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 3, 1, 1, 1),
    _ApplePortExportIndex_Type()
)
applePortExportIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortExportIndex.setStatus("mandatory")


class _ApplePortExportZone_Type(OctetString):
    """Custom type applePortExportZone based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ApplePortExportZone_Type.__name__ = "OctetString"
_ApplePortExportZone_Object = MibTableColumn
applePortExportZone = _ApplePortExportZone_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 3, 1, 1, 2),
    _ApplePortExportZone_Type()
)
applePortExportZone.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortExportZone.setStatus("mandatory")


class _ApplePortExportName_Type(OctetString):
    """Custom type applePortExportName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ApplePortExportName_Type.__name__ = "OctetString"
_ApplePortExportName_Object = MibTableColumn
applePortExportName = _ApplePortExportName_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 3, 1, 1, 3),
    _ApplePortExportName_Type()
)
applePortExportName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortExportName.setStatus("mandatory")


class _ApplePortExportType_Type(OctetString):
    """Custom type applePortExportType based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ApplePortExportType_Type.__name__ = "OctetString"
_ApplePortExportType_Object = MibTableColumn
applePortExportType = _ApplePortExportType_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 3, 1, 1, 4),
    _ApplePortExportType_Type()
)
applePortExportType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortExportType.setStatus("mandatory")


class _ApplePortExportAction_Type(Integer32):
    """Custom type applePortExportAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertise", 2),
          ("hide", 1))
    )


_ApplePortExportAction_Type.__name__ = "Integer32"
_ApplePortExportAction_Object = MibTableColumn
applePortExportAction = _ApplePortExportAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 3, 1, 1, 5),
    _ApplePortExportAction_Type()
)
applePortExportAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    applePortExportAction.setStatus("mandatory")


class _ApplePortExportStatus_Type(Integer32):
    """Custom type applePortExportStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ApplePortExportStatus_Type.__name__ = "Integer32"
_ApplePortExportStatus_Object = MibTableColumn
applePortExportStatus = _ApplePortExportStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 3, 1, 1, 6),
    _ApplePortExportStatus_Type()
)
applePortExportStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    applePortExportStatus.setStatus("mandatory")
_ApplePortImportTable_Object = MibTable
applePortImportTable = _ApplePortImportTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 3, 2)
)
if mibBuilder.loadTexts:
    applePortImportTable.setStatus("mandatory")
_ApplePortImportEntry_Object = MibTableRow
applePortImportEntry = _ApplePortImportEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 3, 2, 1)
)
applePortImportEntry.setIndexNames(
    (0, "MRVINREACH", "applePortImportIndex"),
    (0, "MRVINREACH", "applePortImportZone"),
    (0, "MRVINREACH", "applePortImportName"),
    (0, "MRVINREACH", "applePortImportType"),
)
if mibBuilder.loadTexts:
    applePortImportEntry.setStatus("mandatory")
_ApplePortImportIndex_Type = Integer32
_ApplePortImportIndex_Object = MibTableColumn
applePortImportIndex = _ApplePortImportIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 3, 2, 1, 1),
    _ApplePortImportIndex_Type()
)
applePortImportIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortImportIndex.setStatus("mandatory")


class _ApplePortImportZone_Type(OctetString):
    """Custom type applePortImportZone based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ApplePortImportZone_Type.__name__ = "OctetString"
_ApplePortImportZone_Object = MibTableColumn
applePortImportZone = _ApplePortImportZone_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 3, 2, 1, 2),
    _ApplePortImportZone_Type()
)
applePortImportZone.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortImportZone.setStatus("mandatory")


class _ApplePortImportName_Type(OctetString):
    """Custom type applePortImportName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ApplePortImportName_Type.__name__ = "OctetString"
_ApplePortImportName_Object = MibTableColumn
applePortImportName = _ApplePortImportName_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 3, 2, 1, 3),
    _ApplePortImportName_Type()
)
applePortImportName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortImportName.setStatus("mandatory")


class _ApplePortImportType_Type(OctetString):
    """Custom type applePortImportType based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ApplePortImportType_Type.__name__ = "OctetString"
_ApplePortImportType_Object = MibTableColumn
applePortImportType = _ApplePortImportType_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 3, 2, 1, 4),
    _ApplePortImportType_Type()
)
applePortImportType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applePortImportType.setStatus("mandatory")


class _ApplePortImportAction_Type(Integer32):
    """Custom type applePortImportAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("accept", 2),
          ("discard", 1))
    )


_ApplePortImportAction_Type.__name__ = "Integer32"
_ApplePortImportAction_Object = MibTableColumn
applePortImportAction = _ApplePortImportAction_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 3, 2, 1, 5),
    _ApplePortImportAction_Type()
)
applePortImportAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    applePortImportAction.setStatus("mandatory")


class _ApplePortImportStatus_Type(Integer32):
    """Custom type applePortImportStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 1),
          ("valid", 2))
    )


_ApplePortImportStatus_Type.__name__ = "Integer32"
_ApplePortImportStatus_Object = MibTableColumn
applePortImportStatus = _ApplePortImportStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 3, 2, 1, 6),
    _ApplePortImportStatus_Type()
)
applePortImportStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    applePortImportStatus.setStatus("mandatory")
_XAppleNbp_ObjectIdentity = ObjectIdentity
xAppleNbp = _XAppleNbp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 21, 4)
)
_AppleNbpTable_Object = MibTable
appleNbpTable = _AppleNbpTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 4, 1)
)
if mibBuilder.loadTexts:
    appleNbpTable.setStatus("mandatory")
_AppleNbpEntry_Object = MibTableRow
appleNbpEntry = _AppleNbpEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 4, 1, 1)
)
appleNbpEntry.setIndexNames(
    (0, "MRVINREACH", "appleNbpZone"),
    (0, "MRVINREACH", "appleNbpName"),
    (0, "MRVINREACH", "appleNbpType"),
)
if mibBuilder.loadTexts:
    appleNbpEntry.setStatus("mandatory")


class _AppleNbpZone_Type(OctetString):
    """Custom type appleNbpZone based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_AppleNbpZone_Type.__name__ = "OctetString"
_AppleNbpZone_Object = MibTableColumn
appleNbpZone = _AppleNbpZone_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 4, 1, 1, 1),
    _AppleNbpZone_Type()
)
appleNbpZone.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appleNbpZone.setStatus("mandatory")


class _AppleNbpName_Type(OctetString):
    """Custom type appleNbpName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_AppleNbpName_Type.__name__ = "OctetString"
_AppleNbpName_Object = MibTableColumn
appleNbpName = _AppleNbpName_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 4, 1, 1, 2),
    _AppleNbpName_Type()
)
appleNbpName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appleNbpName.setStatus("mandatory")


class _AppleNbpType_Type(OctetString):
    """Custom type appleNbpType based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_AppleNbpType_Type.__name__ = "OctetString"
_AppleNbpType_Object = MibTableColumn
appleNbpType = _AppleNbpType_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 4, 1, 1, 3),
    _AppleNbpType_Type()
)
appleNbpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appleNbpType.setStatus("mandatory")
_AppleNbpNode_Type = DdpAddress
_AppleNbpNode_Object = MibTableColumn
appleNbpNode = _AppleNbpNode_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 4, 1, 1, 4),
    _AppleNbpNode_Type()
)
appleNbpNode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appleNbpNode.setStatus("mandatory")
_AppleNbpSocket_Type = Integer32
_AppleNbpSocket_Object = MibTableColumn
appleNbpSocket = _AppleNbpSocket_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 4, 1, 1, 5),
    _AppleNbpSocket_Type()
)
appleNbpSocket.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appleNbpSocket.setStatus("mandatory")
_XAppleTraffic_ObjectIdentity = ObjectIdentity
xAppleTraffic = _XAppleTraffic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 21, 5)
)


class _AppleTrafficSort_Type(Integer32):
    """Custom type appleTrafficSort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_AppleTrafficSort_Type.__name__ = "Integer32"
_AppleTrafficSort_Object = MibScalar
appleTrafficSort = _AppleTrafficSort_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 5, 1),
    _AppleTrafficSort_Type()
)
appleTrafficSort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    appleTrafficSort.setStatus("mandatory")
_AppleTrafficTable_Object = MibTable
appleTrafficTable = _AppleTrafficTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 5, 2)
)
if mibBuilder.loadTexts:
    appleTrafficTable.setStatus("mandatory")
_AppleTrafficEntry_Object = MibTableRow
appleTrafficEntry = _AppleTrafficEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 5, 2, 1)
)
appleTrafficEntry.setIndexNames(
    (0, "MRVINREACH", "appleTrafficIndex"),
)
if mibBuilder.loadTexts:
    appleTrafficEntry.setStatus("mandatory")
_AppleTrafficIndex_Type = Integer32
_AppleTrafficIndex_Object = MibTableColumn
appleTrafficIndex = _AppleTrafficIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 5, 2, 1, 1),
    _AppleTrafficIndex_Type()
)
appleTrafficIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appleTrafficIndex.setStatus("mandatory")


class _AppleTrafficPercent_Type(Integer32):
    """Custom type appleTrafficPercent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000),
    )


_AppleTrafficPercent_Type.__name__ = "Integer32"
_AppleTrafficPercent_Object = MibTableColumn
appleTrafficPercent = _AppleTrafficPercent_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 5, 2, 1, 2),
    _AppleTrafficPercent_Type()
)
appleTrafficPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appleTrafficPercent.setStatus("mandatory")
_AppleTrafficDst_Type = DdpAddress
_AppleTrafficDst_Object = MibTableColumn
appleTrafficDst = _AppleTrafficDst_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 5, 2, 1, 3),
    _AppleTrafficDst_Type()
)
appleTrafficDst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appleTrafficDst.setStatus("mandatory")
_AppleTrafficSrc_Type = DdpAddress
_AppleTrafficSrc_Object = MibTableColumn
appleTrafficSrc = _AppleTrafficSrc_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 5, 2, 1, 4),
    _AppleTrafficSrc_Type()
)
appleTrafficSrc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appleTrafficSrc.setStatus("mandatory")
_AppleTrafficIntf_Type = Integer32
_AppleTrafficIntf_Object = MibTableColumn
appleTrafficIntf = _AppleTrafficIntf_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 5, 2, 1, 5),
    _AppleTrafficIntf_Type()
)
appleTrafficIntf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appleTrafficIntf.setStatus("mandatory")


class _AppleTrafficMonitoring_Type(Integer32):
    """Custom type appleTrafficMonitoring based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_AppleTrafficMonitoring_Type.__name__ = "Integer32"
_AppleTrafficMonitoring_Object = MibScalar
appleTrafficMonitoring = _AppleTrafficMonitoring_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 5, 3),
    _AppleTrafficMonitoring_Type()
)
appleTrafficMonitoring.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    appleTrafficMonitoring.setStatus("mandatory")
_XAppleRemoteAccess_ObjectIdentity = ObjectIdentity
xAppleRemoteAccess = _XAppleRemoteAccess_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 21, 6)
)


class _ArapPassword_Type(DisplayString):
    """Custom type arapPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_ArapPassword_Type.__name__ = "DisplayString"
_ArapPassword_Object = MibScalar
arapPassword = _ArapPassword_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 6, 1),
    _ArapPassword_Type()
)
arapPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    arapPassword.setStatus("mandatory")


class _ArapDefaultZoneName_Type(DisplayString):
    """Custom type arapDefaultZoneName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ArapDefaultZoneName_Type.__name__ = "DisplayString"
_ArapDefaultZoneName_Object = MibScalar
arapDefaultZoneName = _ArapDefaultZoneName_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 6, 2),
    _ArapDefaultZoneName_Type()
)
arapDefaultZoneName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    arapDefaultZoneName.setStatus("mandatory")
_ArapPortTable_Object = MibTable
arapPortTable = _ArapPortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 6, 3)
)
if mibBuilder.loadTexts:
    arapPortTable.setStatus("mandatory")
_ArapPortEntry_Object = MibTableRow
arapPortEntry = _ArapPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 6, 3, 1)
)
arapPortEntry.setIndexNames(
    (0, "MRVINREACH", "charPortIndex"),
)
if mibBuilder.loadTexts:
    arapPortEntry.setStatus("mandatory")


class _ArapPortEnabled_Type(Integer32):
    """Custom type arapPortEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_ArapPortEnabled_Type.__name__ = "Integer32"
_ArapPortEnabled_Object = MibTableColumn
arapPortEnabled = _ArapPortEnabled_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 6, 3, 1, 1),
    _ArapPortEnabled_Type()
)
arapPortEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    arapPortEnabled.setStatus("mandatory")


class _ArapPortZoneAccess_Type(Integer32):
    """Custom type arapPortZoneAccess based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("all", 1),
          ("local", 2),
          ("namedzone", 4),
          ("none", 3))
    )


_ArapPortZoneAccess_Type.__name__ = "Integer32"
_ArapPortZoneAccess_Object = MibTableColumn
arapPortZoneAccess = _ArapPortZoneAccess_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 6, 3, 1, 2),
    _ArapPortZoneAccess_Type()
)
arapPortZoneAccess.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    arapPortZoneAccess.setStatus("mandatory")


class _ArapPortZoneName_Type(DisplayString):
    """Custom type arapPortZoneName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ArapPortZoneName_Type.__name__ = "DisplayString"
_ArapPortZoneName_Object = MibTableColumn
arapPortZoneName = _ArapPortZoneName_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 6, 3, 1, 3),
    _ArapPortZoneName_Type()
)
arapPortZoneName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    arapPortZoneName.setStatus("mandatory")
_ArapPortMaxConnectTime_Type = Integer32
_ArapPortMaxConnectTime_Object = MibTableColumn
arapPortMaxConnectTime = _ArapPortMaxConnectTime_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 6, 3, 1, 4),
    _ArapPortMaxConnectTime_Type()
)
arapPortMaxConnectTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    arapPortMaxConnectTime.setStatus("mandatory")


class _ArapPortGuestLoginsOk_Type(Integer32):
    """Custom type arapPortGuestLoginsOk based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_ArapPortGuestLoginsOk_Type.__name__ = "Integer32"
_ArapPortGuestLoginsOk_Object = MibTableColumn
arapPortGuestLoginsOk = _ArapPortGuestLoginsOk_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 6, 3, 1, 5),
    _ArapPortGuestLoginsOk_Type()
)
arapPortGuestLoginsOk.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    arapPortGuestLoginsOk.setStatus("mandatory")
_ArapPortTimeConnected_Type = Integer32
_ArapPortTimeConnected_Object = MibTableColumn
arapPortTimeConnected = _ArapPortTimeConnected_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 6, 3, 1, 6),
    _ArapPortTimeConnected_Type()
)
arapPortTimeConnected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    arapPortTimeConnected.setStatus("mandatory")
_ArapPortTimeRemaining_Type = Integer32
_ArapPortTimeRemaining_Object = MibTableColumn
arapPortTimeRemaining = _ArapPortTimeRemaining_Object(
    (1, 3, 6, 1, 4, 1, 33, 21, 6, 3, 1, 7),
    _ArapPortTimeRemaining_Type()
)
arapPortTimeRemaining.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    arapPortTimeRemaining.setStatus("mandatory")
_XPpp_ObjectIdentity = ObjectIdentity
xPpp = _XPpp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 22)
)
_XPppBasic_ObjectIdentity = ObjectIdentity
xPppBasic = _XPppBasic_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 22, 1)
)
_XPppConfigTable_Object = MibTable
xPppConfigTable = _XPppConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 1)
)
if mibBuilder.loadTexts:
    xPppConfigTable.setStatus("mandatory")
_XPppConfigEntry_Object = MibTableRow
xPppConfigEntry = _XPppConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 1, 1)
)
xPppConfigEntry.setIndexNames(
    (0, "MRVINREACH", "ifIndex"),
)
if mibBuilder.loadTexts:
    xPppConfigEntry.setStatus("mandatory")


class _XPppConfigOpen_Type(Integer32):
    """Custom type xPppConfigOpen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_XPppConfigOpen_Type.__name__ = "Integer32"
_XPppConfigOpen_Object = MibTableColumn
xPppConfigOpen = _XPppConfigOpen_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 1, 1, 1),
    _XPppConfigOpen_Type()
)
xPppConfigOpen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppConfigOpen.setStatus("mandatory")


class _XPppConfigActive_Type(Integer32):
    """Custom type xPppConfigActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("passive", 2))
    )


_XPppConfigActive_Type.__name__ = "Integer32"
_XPppConfigActive_Object = MibTableColumn
xPppConfigActive = _XPppConfigActive_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 1, 1, 2),
    _XPppConfigActive_Type()
)
xPppConfigActive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppConfigActive.setStatus("mandatory")


class _XPppConfigDefaults_Type(Integer32):
    """Custom type xPppConfigDefaults based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("execute", 2),
          ("ready", 1))
    )


_XPppConfigDefaults_Type.__name__ = "Integer32"
_XPppConfigDefaults_Object = MibTableColumn
xPppConfigDefaults = _XPppConfigDefaults_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 1, 1, 3),
    _XPppConfigDefaults_Type()
)
xPppConfigDefaults.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppConfigDefaults.setStatus("mandatory")


class _XPppConfigRestartTimer_Type(Integer32):
    """Custom type xPppConfigRestartTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_XPppConfigRestartTimer_Type.__name__ = "Integer32"
_XPppConfigRestartTimer_Object = MibTableColumn
xPppConfigRestartTimer = _XPppConfigRestartTimer_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 1, 1, 4),
    _XPppConfigRestartTimer_Type()
)
xPppConfigRestartTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppConfigRestartTimer.setStatus("mandatory")


class _XPppConfigConfLimit_Type(Integer32):
    """Custom type xPppConfigConfLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
    )


_XPppConfigConfLimit_Type.__name__ = "Integer32"
_XPppConfigConfLimit_Object = MibTableColumn
xPppConfigConfLimit = _XPppConfigConfLimit_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 1, 1, 5),
    _XPppConfigConfLimit_Type()
)
xPppConfigConfLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppConfigConfLimit.setStatus("mandatory")


class _XPppConfigFailLimit_Type(Integer32):
    """Custom type xPppConfigFailLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
    )


_XPppConfigFailLimit_Type.__name__ = "Integer32"
_XPppConfigFailLimit_Object = MibTableColumn
xPppConfigFailLimit = _XPppConfigFailLimit_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 1, 1, 6),
    _XPppConfigFailLimit_Type()
)
xPppConfigFailLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppConfigFailLimit.setStatus("mandatory")


class _XPppConfigPacketLogging_Type(Integer32):
    """Custom type xPppConfigPacketLogging based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("interpreted", 3),
          ("none", 1),
          ("raw", 2))
    )


_XPppConfigPacketLogging_Type.__name__ = "Integer32"
_XPppConfigPacketLogging_Object = MibTableColumn
xPppConfigPacketLogging = _XPppConfigPacketLogging_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 1, 1, 7),
    _XPppConfigPacketLogging_Type()
)
xPppConfigPacketLogging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppConfigPacketLogging.setStatus("mandatory")


class _XPppConfigKATimer_Type(Integer32):
    """Custom type xPppConfigKATimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_XPppConfigKATimer_Type.__name__ = "Integer32"
_XPppConfigKATimer_Object = MibTableColumn
xPppConfigKATimer = _XPppConfigKATimer_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 1, 1, 8),
    _XPppConfigKATimer_Type()
)
xPppConfigKATimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppConfigKATimer.setStatus("mandatory")
_XPppConfigKATimeout_Type = Integer32
_XPppConfigKATimeout_Object = MibTableColumn
xPppConfigKATimeout = _XPppConfigKATimeout_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 1, 1, 9),
    _XPppConfigKATimeout_Type()
)
xPppConfigKATimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppConfigKATimeout.setStatus("mandatory")
_XPppStatusTable_Object = MibTable
xPppStatusTable = _XPppStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 2)
)
if mibBuilder.loadTexts:
    xPppStatusTable.setStatus("mandatory")
_XPppStatusEntry_Object = MibTableRow
xPppStatusEntry = _XPppStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 2, 1)
)
xPppStatusEntry.setIndexNames(
    (0, "MRVINREACH", "ifIndex"),
)
if mibBuilder.loadTexts:
    xPppStatusEntry.setStatus("mandatory")


class _XPppStatusState_Type(Integer32):
    """Custom type xPppStatusState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_XPppStatusState_Type.__name__ = "Integer32"
_XPppStatusState_Object = MibTableColumn
xPppStatusState = _XPppStatusState_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 2, 1, 1),
    _XPppStatusState_Type()
)
xPppStatusState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppStatusState.setStatus("mandatory")


class _XPppLinkOpen_Type(Integer32):
    """Custom type xPppLinkOpen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("notOpen", 1),
          ("open", 2))
    )


_XPppLinkOpen_Type.__name__ = "Integer32"
_XPppLinkOpen_Object = MibTableColumn
xPppLinkOpen = _XPppLinkOpen_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 2, 1, 2),
    _XPppLinkOpen_Type()
)
xPppLinkOpen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLinkOpen.setStatus("mandatory")
_XPppHdlcRxTotalPkts_Type = Counter32
_XPppHdlcRxTotalPkts_Object = MibTableColumn
xPppHdlcRxTotalPkts = _XPppHdlcRxTotalPkts_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 2, 1, 3),
    _XPppHdlcRxTotalPkts_Type()
)
xPppHdlcRxTotalPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppHdlcRxTotalPkts.setStatus("mandatory")
_XPppHdlcTxTotalPkts_Type = Counter32
_XPppHdlcTxTotalPkts_Object = MibTableColumn
xPppHdlcTxTotalPkts = _XPppHdlcTxTotalPkts_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 2, 1, 4),
    _XPppHdlcTxTotalPkts_Type()
)
xPppHdlcTxTotalPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppHdlcTxTotalPkts.setStatus("mandatory")
_XPppHdlcRxFrameErrs_Type = Counter32
_XPppHdlcRxFrameErrs_Object = MibTableColumn
xPppHdlcRxFrameErrs = _XPppHdlcRxFrameErrs_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 2, 1, 5),
    _XPppHdlcRxFrameErrs_Type()
)
xPppHdlcRxFrameErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppHdlcRxFrameErrs.setStatus("mandatory")
_XPppHdlcRxNoBuffer_Type = Counter32
_XPppHdlcRxNoBuffer_Object = MibTableColumn
xPppHdlcRxNoBuffer = _XPppHdlcRxNoBuffer_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 2, 1, 6),
    _XPppHdlcRxNoBuffer_Type()
)
xPppHdlcRxNoBuffer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppHdlcRxNoBuffer.setStatus("mandatory")
_XPppHdlcTxNoBuffer_Type = Counter32
_XPppHdlcTxNoBuffer_Object = MibTableColumn
xPppHdlcTxNoBuffer = _XPppHdlcTxNoBuffer_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 2, 1, 7),
    _XPppHdlcTxNoBuffer_Type()
)
xPppHdlcTxNoBuffer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppHdlcTxNoBuffer.setStatus("mandatory")
_XPppHdlcRxBadFcs_Type = Counter32
_XPppHdlcRxBadFcs_Object = MibTableColumn
xPppHdlcRxBadFcs = _XPppHdlcRxBadFcs_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 2, 1, 8),
    _XPppHdlcRxBadFcs_Type()
)
xPppHdlcRxBadFcs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppHdlcRxBadFcs.setStatus("mandatory")
_XPppHdlcVJDiscards_Type = Counter32
_XPppHdlcVJDiscards_Object = MibTableColumn
xPppHdlcVJDiscards = _XPppHdlcVJDiscards_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 1, 2, 1, 9),
    _XPppHdlcVJDiscards_Type()
)
xPppHdlcVJDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppHdlcVJDiscards.setStatus("mandatory")
_XPppLcp_ObjectIdentity = ObjectIdentity
xPppLcp = _XPppLcp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 22, 2)
)
_XPppLcpConfigTable_Object = MibTable
xPppLcpConfigTable = _XPppLcpConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 1)
)
if mibBuilder.loadTexts:
    xPppLcpConfigTable.setStatus("mandatory")
_XPppLcpConfigEntry_Object = MibTableRow
xPppLcpConfigEntry = _XPppLcpConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 1, 1)
)
xPppLcpConfigEntry.setIndexNames(
    (0, "MRVINREACH", "ifIndex"),
)
if mibBuilder.loadTexts:
    xPppLcpConfigEntry.setStatus("mandatory")


class _XPppLcpConfigAuth_Type(Integer32):
    """Custom type xPppLcpConfigAuth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("pap", 2))
    )


_XPppLcpConfigAuth_Type.__name__ = "Integer32"
_XPppLcpConfigAuth_Object = MibTableColumn
xPppLcpConfigAuth = _XPppLcpConfigAuth_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 1, 1, 1),
    _XPppLcpConfigAuth_Type()
)
xPppLcpConfigAuth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppLcpConfigAuth.setStatus("mandatory")


class _XPppLcpConfigChapAuth_Type(Integer32):
    """Custom type xPppLcpConfigChapAuth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("chap", 2),
          ("none", 1))
    )


_XPppLcpConfigChapAuth_Type.__name__ = "Integer32"
_XPppLcpConfigChapAuth_Object = MibTableColumn
xPppLcpConfigChapAuth = _XPppLcpConfigChapAuth_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 1, 1, 2),
    _XPppLcpConfigChapAuth_Type()
)
xPppLcpConfigChapAuth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppLcpConfigChapAuth.setStatus("mandatory")
_XPppLcpStatusTable_Object = MibTable
xPppLcpStatusTable = _XPppLcpStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2)
)
if mibBuilder.loadTexts:
    xPppLcpStatusTable.setStatus("mandatory")
_XPppLcpStatusEntry_Object = MibTableRow
xPppLcpStatusEntry = _XPppLcpStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1)
)
xPppLcpStatusEntry.setIndexNames(
    (0, "MRVINREACH", "ifIndex"),
)
if mibBuilder.loadTexts:
    xPppLcpStatusEntry.setStatus("mandatory")


class _XPppLcpStatusState_Type(Integer32):
    """Custom type xPppLcpStatusState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("ackReceived", 4),
          ("ackSent", 5),
          ("closed", 1),
          ("closing", 7),
          ("listen", 2),
          ("open", 6),
          ("requestSent", 3))
    )


_XPppLcpStatusState_Type.__name__ = "Integer32"
_XPppLcpStatusState_Object = MibTableColumn
xPppLcpStatusState = _XPppLcpStatusState_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 1),
    _XPppLcpStatusState_Type()
)
xPppLcpStatusState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusState.setStatus("deprecated")


class _XPppLcpStatusRxAuth_Type(Integer32):
    """Custom type xPppLcpStatusRxAuth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("pap", 2))
    )


_XPppLcpStatusRxAuth_Type.__name__ = "Integer32"
_XPppLcpStatusRxAuth_Object = MibTableColumn
xPppLcpStatusRxAuth = _XPppLcpStatusRxAuth_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 2),
    _XPppLcpStatusRxAuth_Type()
)
xPppLcpStatusRxAuth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusRxAuth.setStatus("mandatory")


class _XPppLcpStatusTxAuth_Type(Integer32):
    """Custom type xPppLcpStatusTxAuth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("pap", 2))
    )


_XPppLcpStatusTxAuth_Type.__name__ = "Integer32"
_XPppLcpStatusTxAuth_Object = MibTableColumn
xPppLcpStatusTxAuth = _XPppLcpStatusTxAuth_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 3),
    _XPppLcpStatusTxAuth_Type()
)
xPppLcpStatusTxAuth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusTxAuth.setStatus("mandatory")
_XPppLcpStatusRxConReq_Type = Counter32
_XPppLcpStatusRxConReq_Object = MibTableColumn
xPppLcpStatusRxConReq = _XPppLcpStatusRxConReq_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 4),
    _XPppLcpStatusRxConReq_Type()
)
xPppLcpStatusRxConReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusRxConReq.setStatus("mandatory")
_XPppLcpStatusTxConReq_Type = Counter32
_XPppLcpStatusTxConReq_Object = MibTableColumn
xPppLcpStatusTxConReq = _XPppLcpStatusTxConReq_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 5),
    _XPppLcpStatusTxConReq_Type()
)
xPppLcpStatusTxConReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusTxConReq.setStatus("mandatory")
_XPppLcpStatusRxConNak_Type = Counter32
_XPppLcpStatusRxConNak_Object = MibTableColumn
xPppLcpStatusRxConNak = _XPppLcpStatusRxConNak_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 6),
    _XPppLcpStatusRxConNak_Type()
)
xPppLcpStatusRxConNak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusRxConNak.setStatus("mandatory")
_XPppLcpStatusTxConNak_Type = Counter32
_XPppLcpStatusTxConNak_Object = MibTableColumn
xPppLcpStatusTxConNak = _XPppLcpStatusTxConNak_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 7),
    _XPppLcpStatusTxConNak_Type()
)
xPppLcpStatusTxConNak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusTxConNak.setStatus("mandatory")
_XPppLcpStatusRxConAck_Type = Counter32
_XPppLcpStatusRxConAck_Object = MibTableColumn
xPppLcpStatusRxConAck = _XPppLcpStatusRxConAck_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 8),
    _XPppLcpStatusRxConAck_Type()
)
xPppLcpStatusRxConAck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusRxConAck.setStatus("mandatory")
_XPppLcpStatusTxConAck_Type = Counter32
_XPppLcpStatusTxConAck_Object = MibTableColumn
xPppLcpStatusTxConAck = _XPppLcpStatusTxConAck_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 9),
    _XPppLcpStatusTxConAck_Type()
)
xPppLcpStatusTxConAck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusTxConAck.setStatus("mandatory")
_XPppLcpStatusRxConRej_Type = Counter32
_XPppLcpStatusRxConRej_Object = MibTableColumn
xPppLcpStatusRxConRej = _XPppLcpStatusRxConRej_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 10),
    _XPppLcpStatusRxConRej_Type()
)
xPppLcpStatusRxConRej.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusRxConRej.setStatus("mandatory")
_XPppLcpStatusTxConRej_Type = Counter32
_XPppLcpStatusTxConRej_Object = MibTableColumn
xPppLcpStatusTxConRej = _XPppLcpStatusTxConRej_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 11),
    _XPppLcpStatusTxConRej_Type()
)
xPppLcpStatusTxConRej.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusTxConRej.setStatus("mandatory")
_XPppLcpStatusRxTrmReq_Type = Counter32
_XPppLcpStatusRxTrmReq_Object = MibTableColumn
xPppLcpStatusRxTrmReq = _XPppLcpStatusRxTrmReq_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 12),
    _XPppLcpStatusRxTrmReq_Type()
)
xPppLcpStatusRxTrmReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusRxTrmReq.setStatus("mandatory")
_XPppLcpStatusTxTrmReq_Type = Counter32
_XPppLcpStatusTxTrmReq_Object = MibTableColumn
xPppLcpStatusTxTrmReq = _XPppLcpStatusTxTrmReq_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 13),
    _XPppLcpStatusTxTrmReq_Type()
)
xPppLcpStatusTxTrmReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusTxTrmReq.setStatus("mandatory")
_XPppLcpStatusRxTrmAck_Type = Counter32
_XPppLcpStatusRxTrmAck_Object = MibTableColumn
xPppLcpStatusRxTrmAck = _XPppLcpStatusRxTrmAck_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 14),
    _XPppLcpStatusRxTrmAck_Type()
)
xPppLcpStatusRxTrmAck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusRxTrmAck.setStatus("mandatory")
_XPppLcpStatusTxTrmAck_Type = Counter32
_XPppLcpStatusTxTrmAck_Object = MibTableColumn
xPppLcpStatusTxTrmAck = _XPppLcpStatusTxTrmAck_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 15),
    _XPppLcpStatusTxTrmAck_Type()
)
xPppLcpStatusTxTrmAck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusTxTrmAck.setStatus("mandatory")
_XPppLcpStatusRxEcoReq_Type = Counter32
_XPppLcpStatusRxEcoReq_Object = MibTableColumn
xPppLcpStatusRxEcoReq = _XPppLcpStatusRxEcoReq_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 16),
    _XPppLcpStatusRxEcoReq_Type()
)
xPppLcpStatusRxEcoReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusRxEcoReq.setStatus("mandatory")
_XPppLcpStatusTxEcoReq_Type = Counter32
_XPppLcpStatusTxEcoReq_Object = MibTableColumn
xPppLcpStatusTxEcoReq = _XPppLcpStatusTxEcoReq_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 17),
    _XPppLcpStatusTxEcoReq_Type()
)
xPppLcpStatusTxEcoReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusTxEcoReq.setStatus("mandatory")
_XPppLcpStatusRxEcoRep_Type = Counter32
_XPppLcpStatusRxEcoRep_Object = MibTableColumn
xPppLcpStatusRxEcoRep = _XPppLcpStatusRxEcoRep_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 18),
    _XPppLcpStatusRxEcoRep_Type()
)
xPppLcpStatusRxEcoRep.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusRxEcoRep.setStatus("mandatory")
_XPppLcpStatusTxEcoRep_Type = Counter32
_XPppLcpStatusTxEcoRep_Object = MibTableColumn
xPppLcpStatusTxEcoRep = _XPppLcpStatusTxEcoRep_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 19),
    _XPppLcpStatusTxEcoRep_Type()
)
xPppLcpStatusTxEcoRep.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusTxEcoRep.setStatus("mandatory")
_XPppLcpStatusRxCodRej_Type = Counter32
_XPppLcpStatusRxCodRej_Object = MibTableColumn
xPppLcpStatusRxCodRej = _XPppLcpStatusRxCodRej_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 20),
    _XPppLcpStatusRxCodRej_Type()
)
xPppLcpStatusRxCodRej.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusRxCodRej.setStatus("mandatory")
_XPppLcpStatusTxCodRej_Type = Counter32
_XPppLcpStatusTxCodRej_Object = MibTableColumn
xPppLcpStatusTxCodRej = _XPppLcpStatusTxCodRej_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 21),
    _XPppLcpStatusTxCodRej_Type()
)
xPppLcpStatusTxCodRej.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusTxCodRej.setStatus("mandatory")
_XPppLcpStatusRxProRej_Type = Counter32
_XPppLcpStatusRxProRej_Object = MibTableColumn
xPppLcpStatusRxProRej = _XPppLcpStatusRxProRej_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 22),
    _XPppLcpStatusRxProRej_Type()
)
xPppLcpStatusRxProRej.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusRxProRej.setStatus("mandatory")
_XPppLcpStatusTxProRej_Type = Counter32
_XPppLcpStatusTxProRej_Object = MibTableColumn
xPppLcpStatusTxProRej = _XPppLcpStatusTxProRej_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 23),
    _XPppLcpStatusTxProRej_Type()
)
xPppLcpStatusTxProRej.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusTxProRej.setStatus("mandatory")


class _XPppLcpStatusState2_Type(Integer32):
    """Custom type xPppLcpStatusState2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("ackRcvd", 8),
          ("ackSent", 9),
          ("closed", 3),
          ("closing", 5),
          ("initial", 1),
          ("opened", 10),
          ("reqSent", 7),
          ("starting", 2),
          ("stopped", 4),
          ("stopping", 6))
    )


_XPppLcpStatusState2_Type.__name__ = "Integer32"
_XPppLcpStatusState2_Object = MibTableColumn
xPppLcpStatusState2 = _XPppLcpStatusState2_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 2, 2, 1, 24),
    _XPppLcpStatusState2_Type()
)
xPppLcpStatusState2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppLcpStatusState2.setStatus("mandatory")
_XPppIpcp_ObjectIdentity = ObjectIdentity
xPppIpcp = _XPppIpcp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 22, 3)
)
_XPppIpcpConfigTable_Object = MibTable
xPppIpcpConfigTable = _XPppIpcpConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 1)
)
if mibBuilder.loadTexts:
    xPppIpcpConfigTable.setStatus("mandatory")
_XPppIpcpConfigEntry_Object = MibTableRow
xPppIpcpConfigEntry = _XPppIpcpConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 1, 1)
)
xPppIpcpConfigEntry.setIndexNames(
    (0, "MRVINREACH", "ifIndex"),
)
if mibBuilder.loadTexts:
    xPppIpcpConfigEntry.setStatus("mandatory")
_XPppIpcpConfigLocalAddress_Type = IpAddress
_XPppIpcpConfigLocalAddress_Object = MibTableColumn
xPppIpcpConfigLocalAddress = _XPppIpcpConfigLocalAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 1, 1, 1),
    _XPppIpcpConfigLocalAddress_Type()
)
xPppIpcpConfigLocalAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppIpcpConfigLocalAddress.setStatus("mandatory")
_XPppIpcpConfigRemoteAddress_Type = IpAddress
_XPppIpcpConfigRemoteAddress_Object = MibTableColumn
xPppIpcpConfigRemoteAddress = _XPppIpcpConfigRemoteAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 1, 1, 2),
    _XPppIpcpConfigRemoteAddress_Type()
)
xPppIpcpConfigRemoteAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppIpcpConfigRemoteAddress.setStatus("mandatory")


class _XPppIpcpConfigVJCompSlots_Type(Integer32):
    """Custom type xPppIpcpConfigVJCompSlots based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 15),
    )


_XPppIpcpConfigVJCompSlots_Type.__name__ = "Integer32"
_XPppIpcpConfigVJCompSlots_Object = MibTableColumn
xPppIpcpConfigVJCompSlots = _XPppIpcpConfigVJCompSlots_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 1, 1, 3),
    _XPppIpcpConfigVJCompSlots_Type()
)
xPppIpcpConfigVJCompSlots.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppIpcpConfigVJCompSlots.setStatus("mandatory")
_XPppIpcpConfigRangeStart_Type = IpAddress
_XPppIpcpConfigRangeStart_Object = MibTableColumn
xPppIpcpConfigRangeStart = _XPppIpcpConfigRangeStart_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 1, 1, 4),
    _XPppIpcpConfigRangeStart_Type()
)
xPppIpcpConfigRangeStart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppIpcpConfigRangeStart.setStatus("mandatory")
_XPppIpcpConfigRangeEnd_Type = IpAddress
_XPppIpcpConfigRangeEnd_Object = MibTableColumn
xPppIpcpConfigRangeEnd = _XPppIpcpConfigRangeEnd_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 1, 1, 5),
    _XPppIpcpConfigRangeEnd_Type()
)
xPppIpcpConfigRangeEnd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppIpcpConfigRangeEnd.setStatus("mandatory")


class _XPppIpcpConfigState_Type(Integer32):
    """Custom type xPppIpcpConfigState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_XPppIpcpConfigState_Type.__name__ = "Integer32"
_XPppIpcpConfigState_Object = MibTableColumn
xPppIpcpConfigState = _XPppIpcpConfigState_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 1, 1, 6),
    _XPppIpcpConfigState_Type()
)
xPppIpcpConfigState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppIpcpConfigState.setStatus("mandatory")
_XPppIpcpConfigLocalRangeStart_Type = IpAddress
_XPppIpcpConfigLocalRangeStart_Object = MibTableColumn
xPppIpcpConfigLocalRangeStart = _XPppIpcpConfigLocalRangeStart_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 1, 1, 7),
    _XPppIpcpConfigLocalRangeStart_Type()
)
xPppIpcpConfigLocalRangeStart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppIpcpConfigLocalRangeStart.setStatus("mandatory")
_XPppIpcpConfigLocalRangeEnd_Type = IpAddress
_XPppIpcpConfigLocalRangeEnd_Object = MibTableColumn
xPppIpcpConfigLocalRangeEnd = _XPppIpcpConfigLocalRangeEnd_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 1, 1, 8),
    _XPppIpcpConfigLocalRangeEnd_Type()
)
xPppIpcpConfigLocalRangeEnd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppIpcpConfigLocalRangeEnd.setStatus("mandatory")


class _XPppIpcpConfigPppIpMask_Type(IpAddress):
    """Custom type xPppIpcpConfigPppIpMask based on IpAddress"""
    defaultHexValue = "ffffffff"


_XPppIpcpConfigPppIpMask_Object = MibTableColumn
xPppIpcpConfigPppIpMask = _XPppIpcpConfigPppIpMask_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 1, 1, 9),
    _XPppIpcpConfigPppIpMask_Type()
)
xPppIpcpConfigPppIpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppIpcpConfigPppIpMask.setStatus("mandatory")
_XPppIpcpAsyncConfigTable_Object = MibTable
xPppIpcpAsyncConfigTable = _XPppIpcpAsyncConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 2)
)
if mibBuilder.loadTexts:
    xPppIpcpAsyncConfigTable.setStatus("mandatory")
_XPppIpcpAsyncConfigEntry_Object = MibTableRow
xPppIpcpAsyncConfigEntry = _XPppIpcpAsyncConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 2, 1)
)
xPppIpcpAsyncConfigEntry.setIndexNames(
    (0, "MRVINREACH", "ifIndex"),
)
if mibBuilder.loadTexts:
    xPppIpcpAsyncConfigEntry.setStatus("mandatory")


class _XPppIpcpAsyncConfigBrdcast_Type(Integer32):
    """Custom type xPppIpcpAsyncConfigBrdcast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_XPppIpcpAsyncConfigBrdcast_Type.__name__ = "Integer32"
_XPppIpcpAsyncConfigBrdcast_Object = MibTableColumn
xPppIpcpAsyncConfigBrdcast = _XPppIpcpAsyncConfigBrdcast_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 2, 1, 1),
    _XPppIpcpAsyncConfigBrdcast_Type()
)
xPppIpcpAsyncConfigBrdcast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppIpcpAsyncConfigBrdcast.setStatus("mandatory")
_XPppIpcpStatusTable_Object = MibTable
xPppIpcpStatusTable = _XPppIpcpStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 3)
)
if mibBuilder.loadTexts:
    xPppIpcpStatusTable.setStatus("mandatory")
_XPppIpcpStatusEntry_Object = MibTableRow
xPppIpcpStatusEntry = _XPppIpcpStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 3, 1)
)
xPppIpcpStatusEntry.setIndexNames(
    (0, "MRVINREACH", "ifIndex"),
)
if mibBuilder.loadTexts:
    xPppIpcpStatusEntry.setStatus("mandatory")


class _XPppIpcpStatusState_Type(Integer32):
    """Custom type xPppIpcpStatusState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("ackReceived", 4),
          ("ackSent", 5),
          ("closed", 1),
          ("closing", 7),
          ("listen", 2),
          ("open", 6),
          ("requestSent", 3))
    )


_XPppIpcpStatusState_Type.__name__ = "Integer32"
_XPppIpcpStatusState_Object = MibTableColumn
xPppIpcpStatusState = _XPppIpcpStatusState_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 3, 1, 1),
    _XPppIpcpStatusState_Type()
)
xPppIpcpStatusState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpcpStatusState.setStatus("deprecated")
_XPppIpcpStatusLocalAddress_Type = IpAddress
_XPppIpcpStatusLocalAddress_Object = MibTableColumn
xPppIpcpStatusLocalAddress = _XPppIpcpStatusLocalAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 3, 1, 2),
    _XPppIpcpStatusLocalAddress_Type()
)
xPppIpcpStatusLocalAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpcpStatusLocalAddress.setStatus("mandatory")
_XPppIpcpStatusRemoteAddress_Type = IpAddress
_XPppIpcpStatusRemoteAddress_Object = MibTableColumn
xPppIpcpStatusRemoteAddress = _XPppIpcpStatusRemoteAddress_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 3, 1, 3),
    _XPppIpcpStatusRemoteAddress_Type()
)
xPppIpcpStatusRemoteAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpcpStatusRemoteAddress.setStatus("mandatory")
_XPppIpcpRxPkts_Type = Counter32
_XPppIpcpRxPkts_Object = MibTableColumn
xPppIpcpRxPkts = _XPppIpcpRxPkts_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 3, 1, 4),
    _XPppIpcpRxPkts_Type()
)
xPppIpcpRxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpcpRxPkts.setStatus("mandatory")
_XPppIpcpTxPkts_Type = Counter32
_XPppIpcpTxPkts_Object = MibTableColumn
xPppIpcpTxPkts = _XPppIpcpTxPkts_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 3, 1, 5),
    _XPppIpcpTxPkts_Type()
)
xPppIpcpTxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpcpTxPkts.setStatus("mandatory")
_XPppIpcpRxConReq_Type = Counter32
_XPppIpcpRxConReq_Object = MibTableColumn
xPppIpcpRxConReq = _XPppIpcpRxConReq_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 3, 1, 6),
    _XPppIpcpRxConReq_Type()
)
xPppIpcpRxConReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpcpRxConReq.setStatus("mandatory")
_XPppIpcpTxConReq_Type = Counter32
_XPppIpcpTxConReq_Object = MibTableColumn
xPppIpcpTxConReq = _XPppIpcpTxConReq_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 3, 1, 7),
    _XPppIpcpTxConReq_Type()
)
xPppIpcpTxConReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpcpTxConReq.setStatus("mandatory")
_XPppIpcpRxConNak_Type = Counter32
_XPppIpcpRxConNak_Object = MibTableColumn
xPppIpcpRxConNak = _XPppIpcpRxConNak_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 3, 1, 8),
    _XPppIpcpRxConNak_Type()
)
xPppIpcpRxConNak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpcpRxConNak.setStatus("mandatory")
_XPppIpcpTxConNak_Type = Counter32
_XPppIpcpTxConNak_Object = MibTableColumn
xPppIpcpTxConNak = _XPppIpcpTxConNak_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 3, 1, 9),
    _XPppIpcpTxConNak_Type()
)
xPppIpcpTxConNak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpcpTxConNak.setStatus("mandatory")
_XPppIpcpRxConAck_Type = Counter32
_XPppIpcpRxConAck_Object = MibTableColumn
xPppIpcpRxConAck = _XPppIpcpRxConAck_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 3, 1, 10),
    _XPppIpcpRxConAck_Type()
)
xPppIpcpRxConAck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpcpRxConAck.setStatus("mandatory")
_XPppIpcpTxConAck_Type = Counter32
_XPppIpcpTxConAck_Object = MibTableColumn
xPppIpcpTxConAck = _XPppIpcpTxConAck_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 3, 1, 11),
    _XPppIpcpTxConAck_Type()
)
xPppIpcpTxConAck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpcpTxConAck.setStatus("mandatory")
_XPppIpcpRxConRej_Type = Counter32
_XPppIpcpRxConRej_Object = MibTableColumn
xPppIpcpRxConRej = _XPppIpcpRxConRej_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 3, 1, 12),
    _XPppIpcpRxConRej_Type()
)
xPppIpcpRxConRej.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpcpRxConRej.setStatus("mandatory")
_XPppIpcpTxConRej_Type = Counter32
_XPppIpcpTxConRej_Object = MibTableColumn
xPppIpcpTxConRej = _XPppIpcpTxConRej_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 3, 1, 13),
    _XPppIpcpTxConRej_Type()
)
xPppIpcpTxConRej.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpcpTxConRej.setStatus("mandatory")
_XPppIpcpRxTrmReq_Type = Counter32
_XPppIpcpRxTrmReq_Object = MibTableColumn
xPppIpcpRxTrmReq = _XPppIpcpRxTrmReq_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 3, 1, 14),
    _XPppIpcpRxTrmReq_Type()
)
xPppIpcpRxTrmReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpcpRxTrmReq.setStatus("mandatory")
_XPppIpcpTxTrmReq_Type = Counter32
_XPppIpcpTxTrmReq_Object = MibTableColumn
xPppIpcpTxTrmReq = _XPppIpcpTxTrmReq_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 3, 1, 15),
    _XPppIpcpTxTrmReq_Type()
)
xPppIpcpTxTrmReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpcpTxTrmReq.setStatus("mandatory")
_XPppIpcpRxTrmAck_Type = Counter32
_XPppIpcpRxTrmAck_Object = MibTableColumn
xPppIpcpRxTrmAck = _XPppIpcpRxTrmAck_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 3, 1, 16),
    _XPppIpcpRxTrmAck_Type()
)
xPppIpcpRxTrmAck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpcpRxTrmAck.setStatus("mandatory")
_XPppIpcpTxTrmAck_Type = Counter32
_XPppIpcpTxTrmAck_Object = MibTableColumn
xPppIpcpTxTrmAck = _XPppIpcpTxTrmAck_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 3, 1, 17),
    _XPppIpcpTxTrmAck_Type()
)
xPppIpcpTxTrmAck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpcpTxTrmAck.setStatus("mandatory")


class _XPppIpcpStatusState2_Type(Integer32):
    """Custom type xPppIpcpStatusState2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("ackRcvd", 8),
          ("ackSent", 9),
          ("closed", 3),
          ("closing", 5),
          ("initial", 1),
          ("opened", 10),
          ("reqSent", 7),
          ("starting", 2),
          ("stopped", 4),
          ("stopping", 6))
    )


_XPppIpcpStatusState2_Type.__name__ = "Integer32"
_XPppIpcpStatusState2_Object = MibTableColumn
xPppIpcpStatusState2 = _XPppIpcpStatusState2_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 3, 3, 1, 18),
    _XPppIpcpStatusState2_Type()
)
xPppIpcpStatusState2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpcpStatusState2.setStatus("mandatory")
_XPppAuth_ObjectIdentity = ObjectIdentity
xPppAuth = _XPppAuth_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 22, 4)
)


class _XPppPapPassword_Type(OctetString):
    """Custom type xPppPapPassword based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_XPppPapPassword_Type.__name__ = "OctetString"
_XPppPapPassword_Object = MibScalar
xPppPapPassword = _XPppPapPassword_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 4, 1),
    _XPppPapPassword_Type()
)
xPppPapPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppPapPassword.setStatus("mandatory")
_XPppAuthConfigTable_Object = MibTable
xPppAuthConfigTable = _XPppAuthConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 4, 2)
)
if mibBuilder.loadTexts:
    xPppAuthConfigTable.setStatus("mandatory")
_XPppAuthConfigEntry_Object = MibTableRow
xPppAuthConfigEntry = _XPppAuthConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 4, 2, 1)
)
xPppAuthConfigEntry.setIndexNames(
    (0, "MRVINREACH", "ifIndex"),
)
if mibBuilder.loadTexts:
    xPppAuthConfigEntry.setStatus("mandatory")


class _XPppAuthChapChallengeTimer_Type(Integer32):
    """Custom type xPppAuthChapChallengeTimer based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 120),
    )


_XPppAuthChapChallengeTimer_Type.__name__ = "Integer32"
_XPppAuthChapChallengeTimer_Object = MibTableColumn
xPppAuthChapChallengeTimer = _XPppAuthChapChallengeTimer_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 4, 2, 1, 4),
    _XPppAuthChapChallengeTimer_Type()
)
xPppAuthChapChallengeTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppAuthChapChallengeTimer.setStatus("mandatory")


class _XPppAuthPapConfigState_Type(Integer32):
    """Custom type xPppAuthPapConfigState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2),
          ("kerberos", 3),
          ("radius", 4))
    )


_XPppAuthPapConfigState_Type.__name__ = "Integer32"
_XPppAuthPapConfigState_Object = MibTableColumn
xPppAuthPapConfigState = _XPppAuthPapConfigState_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 4, 2, 1, 5),
    _XPppAuthPapConfigState_Type()
)
xPppAuthPapConfigState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppAuthPapConfigState.setStatus("mandatory")


class _XPppAuthChapConfigState_Type(Integer32):
    """Custom type xPppAuthChapConfigState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2),
          ("radius", 4))
    )


_XPppAuthChapConfigState_Type.__name__ = "Integer32"
_XPppAuthChapConfigState_Object = MibTableColumn
xPppAuthChapConfigState = _XPppAuthChapConfigState_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 4, 2, 1, 6),
    _XPppAuthChapConfigState_Type()
)
xPppAuthChapConfigState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppAuthChapConfigState.setStatus("mandatory")
_XPppAuthStatusTable_Object = MibTable
xPppAuthStatusTable = _XPppAuthStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 4, 3)
)
if mibBuilder.loadTexts:
    xPppAuthStatusTable.setStatus("mandatory")
_XPppAuthStatusEntry_Object = MibTableRow
xPppAuthStatusEntry = _XPppAuthStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 4, 3, 1)
)
xPppAuthStatusEntry.setIndexNames(
    (0, "MRVINREACH", "ifIndex"),
)
if mibBuilder.loadTexts:
    xPppAuthStatusEntry.setStatus("mandatory")


class _XPppPapStatusState_Type(Integer32):
    """Custom type xPppPapStatusState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("ackRecv", 6),
          ("ackSent", 7),
          ("closed", 2),
          ("closing", 4),
          ("initial", 1),
          ("kerberosAckRecv", 11),
          ("kerberosAckSent", 12),
          ("kerberosReqSent", 9),
          ("kerberosStopped", 10),
          ("opened", 8),
          ("papKerberosOpened", 13),
          ("reqSent", 5),
          ("stopped", 3))
    )


_XPppPapStatusState_Type.__name__ = "Integer32"
_XPppPapStatusState_Object = MibTableColumn
xPppPapStatusState = _XPppPapStatusState_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 4, 3, 1, 4),
    _XPppPapStatusState_Type()
)
xPppPapStatusState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppPapStatusState.setStatus("mandatory")


class _XPppChapStatusState_Type(Integer32):
    """Custom type xPppChapStatusState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("challengeSent", 3),
          ("challengeSentAckRecv", 6),
          ("challengeSentResponseSent", 5),
          ("challengeWait", 2),
          ("idle", 1),
          ("open", 7),
          ("responseSent", 4))
    )


_XPppChapStatusState_Type.__name__ = "Integer32"
_XPppChapStatusState_Object = MibTableColumn
xPppChapStatusState = _XPppChapStatusState_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 4, 3, 1, 5),
    _XPppChapStatusState_Type()
)
xPppChapStatusState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppChapStatusState.setStatus("mandatory")


class _XPppChapPassword_Type(OctetString):
    """Custom type xPppChapPassword based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_XPppChapPassword_Type.__name__ = "OctetString"
_XPppChapPassword_Object = MibScalar
xPppChapPassword = _XPppChapPassword_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 4, 4),
    _XPppChapPassword_Type()
)
xPppChapPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppChapPassword.setStatus("mandatory")
_XPppIpxcp_ObjectIdentity = ObjectIdentity
xPppIpxcp = _XPppIpxcp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 22, 5)
)
_XPppIpxcpConfigTable_Object = MibTable
xPppIpxcpConfigTable = _XPppIpxcpConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 1)
)
if mibBuilder.loadTexts:
    xPppIpxcpConfigTable.setStatus("mandatory")
_XPppIpxcpConfigEntry_Object = MibTableRow
xPppIpxcpConfigEntry = _XPppIpxcpConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 1, 1)
)
xPppIpxcpConfigEntry.setIndexNames(
    (0, "MRVINREACH", "ifIndex"),
)
if mibBuilder.loadTexts:
    xPppIpxcpConfigEntry.setStatus("mandatory")


class _XPppIpxcpCipxCompression_Type(Integer32):
    """Custom type xPppIpxcpCipxCompression based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_XPppIpxcpCipxCompression_Type.__name__ = "Integer32"
_XPppIpxcpCipxCompression_Object = MibTableColumn
xPppIpxcpCipxCompression = _XPppIpxcpCipxCompression_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 1, 1, 1),
    _XPppIpxcpCipxCompression_Type()
)
xPppIpxcpCipxCompression.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppIpxcpCipxCompression.setStatus("mandatory")


class _XPppIpxcpConfigRemoteNode_Type(OctetString):
    """Custom type xPppIpxcpConfigRemoteNode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )


_XPppIpxcpConfigRemoteNode_Type.__name__ = "OctetString"
_XPppIpxcpConfigRemoteNode_Object = MibTableColumn
xPppIpxcpConfigRemoteNode = _XPppIpxcpConfigRemoteNode_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 1, 1, 2),
    _XPppIpxcpConfigRemoteNode_Type()
)
xPppIpxcpConfigRemoteNode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xPppIpxcpConfigRemoteNode.setStatus("mandatory")
_XPppIpxcpStatusTable_Object = MibTable
xPppIpxcpStatusTable = _XPppIpxcpStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 2)
)
if mibBuilder.loadTexts:
    xPppIpxcpStatusTable.setStatus("mandatory")
_XPppIpxcpStatusEntry_Object = MibTableRow
xPppIpxcpStatusEntry = _XPppIpxcpStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 2, 1)
)
xPppIpxcpStatusEntry.setIndexNames(
    (0, "MRVINREACH", "ifIndex"),
)
if mibBuilder.loadTexts:
    xPppIpxcpStatusEntry.setStatus("mandatory")


class _XPppIpxcpStatusState_Type(Integer32):
    """Custom type xPppIpxcpStatusState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("ackRcvd", 8),
          ("ackSent", 9),
          ("closed", 3),
          ("closing", 5),
          ("initial", 1),
          ("opened", 10),
          ("reqSent", 7),
          ("starting", 2),
          ("stopped", 4),
          ("stopping", 6))
    )


_XPppIpxcpStatusState_Type.__name__ = "Integer32"
_XPppIpxcpStatusState_Object = MibTableColumn
xPppIpxcpStatusState = _XPppIpxcpStatusState_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 2, 1, 1),
    _XPppIpxcpStatusState_Type()
)
xPppIpxcpStatusState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpxcpStatusState.setStatus("mandatory")


class _XPppIpxcpCipxInCompression_Type(Integer32):
    """Custom type xPppIpxcpCipxInCompression based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("closed", 2),
          ("open", 1))
    )


_XPppIpxcpCipxInCompression_Type.__name__ = "Integer32"
_XPppIpxcpCipxInCompression_Object = MibTableColumn
xPppIpxcpCipxInCompression = _XPppIpxcpCipxInCompression_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 2, 1, 2),
    _XPppIpxcpCipxInCompression_Type()
)
xPppIpxcpCipxInCompression.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpxcpCipxInCompression.setStatus("mandatory")


class _XPppIpxcpCipxOutCompression_Type(Integer32):
    """Custom type xPppIpxcpCipxOutCompression based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("closed", 2),
          ("open", 1))
    )


_XPppIpxcpCipxOutCompression_Type.__name__ = "Integer32"
_XPppIpxcpCipxOutCompression_Object = MibTableColumn
xPppIpxcpCipxOutCompression = _XPppIpxcpCipxOutCompression_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 2, 1, 3),
    _XPppIpxcpCipxOutCompression_Type()
)
xPppIpxcpCipxOutCompression.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpxcpCipxOutCompression.setStatus("mandatory")
_XPppIpxcpCipxInSlots_Type = Integer32
_XPppIpxcpCipxInSlots_Object = MibTableColumn
xPppIpxcpCipxInSlots = _XPppIpxcpCipxInSlots_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 2, 1, 4),
    _XPppIpxcpCipxInSlots_Type()
)
xPppIpxcpCipxInSlots.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpxcpCipxInSlots.setStatus("mandatory")
_XPppIpxcpCipxOutSlots_Type = Integer32
_XPppIpxcpCipxOutSlots_Object = MibTableColumn
xPppIpxcpCipxOutSlots = _XPppIpxcpCipxOutSlots_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 2, 1, 5),
    _XPppIpxcpCipxOutSlots_Type()
)
xPppIpxcpCipxOutSlots.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpxcpCipxOutSlots.setStatus("mandatory")


class _XPppIpxcpStatusRemoteNode_Type(OctetString):
    """Custom type xPppIpxcpStatusRemoteNode based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )


_XPppIpxcpStatusRemoteNode_Type.__name__ = "OctetString"
_XPppIpxcpStatusRemoteNode_Object = MibTableColumn
xPppIpxcpStatusRemoteNode = _XPppIpxcpStatusRemoteNode_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 2, 1, 6),
    _XPppIpxcpStatusRemoteNode_Type()
)
xPppIpxcpStatusRemoteNode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpxcpStatusRemoteNode.setStatus("mandatory")
_XPppIpxcpCountersTable_Object = MibTable
xPppIpxcpCountersTable = _XPppIpxcpCountersTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 3)
)
if mibBuilder.loadTexts:
    xPppIpxcpCountersTable.setStatus("mandatory")
_XPppIpxcpCountersEntry_Object = MibTableRow
xPppIpxcpCountersEntry = _XPppIpxcpCountersEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 3, 1)
)
xPppIpxcpCountersEntry.setIndexNames(
    (0, "MRVINREACH", "ifIndex"),
)
if mibBuilder.loadTexts:
    xPppIpxcpCountersEntry.setStatus("mandatory")
_XPppIpxcpRxConReq_Type = Counter32
_XPppIpxcpRxConReq_Object = MibTableColumn
xPppIpxcpRxConReq = _XPppIpxcpRxConReq_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 3, 1, 1),
    _XPppIpxcpRxConReq_Type()
)
xPppIpxcpRxConReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpxcpRxConReq.setStatus("mandatory")
_XPppIpxcpTxConReq_Type = Counter32
_XPppIpxcpTxConReq_Object = MibTableColumn
xPppIpxcpTxConReq = _XPppIpxcpTxConReq_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 3, 1, 2),
    _XPppIpxcpTxConReq_Type()
)
xPppIpxcpTxConReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpxcpTxConReq.setStatus("mandatory")
_XPppIpxcpRxConNak_Type = Counter32
_XPppIpxcpRxConNak_Object = MibTableColumn
xPppIpxcpRxConNak = _XPppIpxcpRxConNak_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 3, 1, 3),
    _XPppIpxcpRxConNak_Type()
)
xPppIpxcpRxConNak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpxcpRxConNak.setStatus("mandatory")
_XPppIpxcpTxConNak_Type = Counter32
_XPppIpxcpTxConNak_Object = MibTableColumn
xPppIpxcpTxConNak = _XPppIpxcpTxConNak_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 3, 1, 4),
    _XPppIpxcpTxConNak_Type()
)
xPppIpxcpTxConNak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpxcpTxConNak.setStatus("mandatory")
_XPppIpxcpRxConAck_Type = Counter32
_XPppIpxcpRxConAck_Object = MibTableColumn
xPppIpxcpRxConAck = _XPppIpxcpRxConAck_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 3, 1, 5),
    _XPppIpxcpRxConAck_Type()
)
xPppIpxcpRxConAck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpxcpRxConAck.setStatus("mandatory")
_XPppIpxcpTxConAck_Type = Counter32
_XPppIpxcpTxConAck_Object = MibTableColumn
xPppIpxcpTxConAck = _XPppIpxcpTxConAck_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 3, 1, 6),
    _XPppIpxcpTxConAck_Type()
)
xPppIpxcpTxConAck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpxcpTxConAck.setStatus("mandatory")
_XPppIpxcpRxConRej_Type = Counter32
_XPppIpxcpRxConRej_Object = MibTableColumn
xPppIpxcpRxConRej = _XPppIpxcpRxConRej_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 3, 1, 7),
    _XPppIpxcpRxConRej_Type()
)
xPppIpxcpRxConRej.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpxcpRxConRej.setStatus("mandatory")
_XPppIpxcpTxConRej_Type = Counter32
_XPppIpxcpTxConRej_Object = MibTableColumn
xPppIpxcpTxConRej = _XPppIpxcpTxConRej_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 3, 1, 8),
    _XPppIpxcpTxConRej_Type()
)
xPppIpxcpTxConRej.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpxcpTxConRej.setStatus("mandatory")
_XPppIpxcpRxTrmReq_Type = Counter32
_XPppIpxcpRxTrmReq_Object = MibTableColumn
xPppIpxcpRxTrmReq = _XPppIpxcpRxTrmReq_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 3, 1, 9),
    _XPppIpxcpRxTrmReq_Type()
)
xPppIpxcpRxTrmReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpxcpRxTrmReq.setStatus("mandatory")
_XPppIpxcpTxTrmReq_Type = Counter32
_XPppIpxcpTxTrmReq_Object = MibTableColumn
xPppIpxcpTxTrmReq = _XPppIpxcpTxTrmReq_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 3, 1, 10),
    _XPppIpxcpTxTrmReq_Type()
)
xPppIpxcpTxTrmReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpxcpTxTrmReq.setStatus("mandatory")
_XPppIpxcpRxTrmAck_Type = Counter32
_XPppIpxcpRxTrmAck_Object = MibTableColumn
xPppIpxcpRxTrmAck = _XPppIpxcpRxTrmAck_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 3, 1, 11),
    _XPppIpxcpRxTrmAck_Type()
)
xPppIpxcpRxTrmAck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpxcpRxTrmAck.setStatus("mandatory")
_XPppIpxcpTxTrmAck_Type = Counter32
_XPppIpxcpTxTrmAck_Object = MibTableColumn
xPppIpxcpTxTrmAck = _XPppIpxcpTxTrmAck_Object(
    (1, 3, 6, 1, 4, 1, 33, 22, 5, 3, 1, 12),
    _XPppIpxcpTxTrmAck_Type()
)
xPppIpxcpTxTrmAck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xPppIpxcpTxTrmAck.setStatus("mandatory")
_XRadius_ObjectIdentity = ObjectIdentity
xRadius = _XRadius_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 35)
)
_XRadiusPort_ObjectIdentity = ObjectIdentity
xRadiusPort = _XRadiusPort_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 35, 1)
)
_XRadiusPortTable_Object = MibTable
xRadiusPortTable = _XRadiusPortTable_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 1, 1)
)
if mibBuilder.loadTexts:
    xRadiusPortTable.setStatus("mandatory")
_XRadiusPortEntry_Object = MibTableRow
xRadiusPortEntry = _XRadiusPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 1, 1, 1)
)
xRadiusPortEntry.setIndexNames(
    (0, "MRVINREACH", "xRadiusPortIndex"),
)
if mibBuilder.loadTexts:
    xRadiusPortEntry.setStatus("mandatory")
_XRadiusPortIndex_Type = Integer32
_XRadiusPortIndex_Object = MibTableColumn
xRadiusPortIndex = _XRadiusPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 1, 1, 1, 1),
    _XRadiusPortIndex_Type()
)
xRadiusPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xRadiusPortIndex.setStatus("mandatory")


class _XRadiusPortStatus_Type(Integer32):
    """Custom type xRadiusPortStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_XRadiusPortStatus_Type.__name__ = "Integer32"
_XRadiusPortStatus_Object = MibTableColumn
xRadiusPortStatus = _XRadiusPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 1, 1, 1, 2),
    _XRadiusPortStatus_Type()
)
xRadiusPortStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xRadiusPortStatus.setStatus("mandatory")


class _XRadiusPortSolicitStatus_Type(Integer32):
    """Custom type xRadiusPortSolicitStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_XRadiusPortSolicitStatus_Type.__name__ = "Integer32"
_XRadiusPortSolicitStatus_Object = MibTableColumn
xRadiusPortSolicitStatus = _XRadiusPortSolicitStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 1, 1, 1, 3),
    _XRadiusPortSolicitStatus_Type()
)
xRadiusPortSolicitStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xRadiusPortSolicitStatus.setStatus("mandatory")


class _XRadiusAcctPortStatus_Type(Integer32):
    """Custom type xRadiusAcctPortStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2),
          ("limited", 3))
    )


_XRadiusAcctPortStatus_Type.__name__ = "Integer32"
_XRadiusAcctPortStatus_Object = MibTableColumn
xRadiusAcctPortStatus = _XRadiusAcctPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 1, 1, 1, 4),
    _XRadiusAcctPortStatus_Type()
)
xRadiusAcctPortStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xRadiusAcctPortStatus.setStatus("mandatory")
_XRadiusCircuit_ObjectIdentity = ObjectIdentity
xRadiusCircuit = _XRadiusCircuit_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 35, 2)
)
_XRadiusConfig_ObjectIdentity = ObjectIdentity
xRadiusConfig = _XRadiusConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 35, 3)
)


class _XRadiusAuthServerPort_Type(Integer32):
    """Custom type xRadiusAuthServerPort based on Integer32"""
    defaultValue = 1645

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_XRadiusAuthServerPort_Type.__name__ = "Integer32"
_XRadiusAuthServerPort_Object = MibScalar
xRadiusAuthServerPort = _XRadiusAuthServerPort_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 3, 1),
    _XRadiusAuthServerPort_Type()
)
xRadiusAuthServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xRadiusAuthServerPort.setStatus("mandatory")


class _XRadiusAcctServerPort_Type(Integer32):
    """Custom type xRadiusAcctServerPort based on Integer32"""
    defaultValue = 1646

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_XRadiusAcctServerPort_Type.__name__ = "Integer32"
_XRadiusAcctServerPort_Object = MibScalar
xRadiusAcctServerPort = _XRadiusAcctServerPort_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 3, 2),
    _XRadiusAcctServerPort_Type()
)
xRadiusAcctServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xRadiusAcctServerPort.setStatus("mandatory")


class _XRadiusTimeout_Type(Integer32):
    """Custom type xRadiusTimeout based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_XRadiusTimeout_Type.__name__ = "Integer32"
_XRadiusTimeout_Object = MibScalar
xRadiusTimeout = _XRadiusTimeout_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 3, 3),
    _XRadiusTimeout_Type()
)
xRadiusTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xRadiusTimeout.setStatus("mandatory")


class _XRadiusServerRetries_Type(Integer32):
    """Custom type xRadiusServerRetries based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_XRadiusServerRetries_Type.__name__ = "Integer32"
_XRadiusServerRetries_Object = MibScalar
xRadiusServerRetries = _XRadiusServerRetries_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 3, 4),
    _XRadiusServerRetries_Type()
)
xRadiusServerRetries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xRadiusServerRetries.setStatus("mandatory")


class _XRadiusAcctLogAttempts_Type(Integer32):
    """Custom type xRadiusAcctLogAttempts based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 50000),
    )


_XRadiusAcctLogAttempts_Type.__name__ = "Integer32"
_XRadiusAcctLogAttempts_Object = MibScalar
xRadiusAcctLogAttempts = _XRadiusAcctLogAttempts_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 3, 5),
    _XRadiusAcctLogAttempts_Type()
)
xRadiusAcctLogAttempts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xRadiusAcctLogAttempts.setStatus("mandatory")


class _XRadiusChapChallengeSize_Type(Integer32):
    """Custom type xRadiusChapChallengeSize based on Integer32"""
    defaultValue = 16

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(4, 128),
    )


_XRadiusChapChallengeSize_Type.__name__ = "Integer32"
_XRadiusChapChallengeSize_Object = MibScalar
xRadiusChapChallengeSize = _XRadiusChapChallengeSize_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 3, 6),
    _XRadiusChapChallengeSize_Type()
)
xRadiusChapChallengeSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xRadiusChapChallengeSize.setStatus("mandatory")


class _XRadiusLogging_Type(Integer32):
    """Custom type xRadiusLogging based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_XRadiusLogging_Type.__name__ = "Integer32"
_XRadiusLogging_Object = MibScalar
xRadiusLogging = _XRadiusLogging_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 3, 7),
    _XRadiusLogging_Type()
)
xRadiusLogging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xRadiusLogging.setStatus("mandatory")


class _XRadiusMessage_Type(DisplayString):
    """Custom type xRadiusMessage based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(40, 40),
    )


_XRadiusMessage_Type.__name__ = "DisplayString"
_XRadiusMessage_Object = MibScalar
xRadiusMessage = _XRadiusMessage_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 3, 8),
    _XRadiusMessage_Type()
)
xRadiusMessage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xRadiusMessage.setStatus("mandatory")
_XRadiusServers_ObjectIdentity = ObjectIdentity
xRadiusServers = _XRadiusServers_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 35, 4)
)
_XRadServer1SubGrp_ObjectIdentity = ObjectIdentity
xRadServer1SubGrp = _XRadServer1SubGrp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 35, 4, 1)
)


class _XRadiusServerName1_Type(OctetString):
    """Custom type xRadiusServerName1 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(51, 51),
    )


_XRadiusServerName1_Type.__name__ = "OctetString"
_XRadiusServerName1_Object = MibScalar
xRadiusServerName1 = _XRadiusServerName1_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 4, 1, 1),
    _XRadiusServerName1_Type()
)
xRadiusServerName1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xRadiusServerName1.setStatus("mandatory")


class _XRadiusSecret1_Type(OctetString):
    """Custom type xRadiusSecret1 based on OctetString"""
    defaultValue = OctetString("Default_Secret")

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(32, 32),
    )


_XRadiusSecret1_Type.__name__ = "OctetString"
_XRadiusSecret1_Object = MibScalar
xRadiusSecret1 = _XRadiusSecret1_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 4, 1, 2),
    _XRadiusSecret1_Type()
)
xRadiusSecret1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xRadiusSecret1.setStatus("obsolete")
_XRadiusServerAccess1_Type = Counter32
_XRadiusServerAccess1_Object = MibScalar
xRadiusServerAccess1 = _XRadiusServerAccess1_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 4, 1, 3),
    _XRadiusServerAccess1_Type()
)
xRadiusServerAccess1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xRadiusServerAccess1.setStatus("mandatory")
_XRadiusServerAccessFailed1_Type = Counter32
_XRadiusServerAccessFailed1_Object = MibScalar
xRadiusServerAccessFailed1 = _XRadiusServerAccessFailed1_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 4, 1, 4),
    _XRadiusServerAccessFailed1_Type()
)
xRadiusServerAccessFailed1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xRadiusServerAccessFailed1.setStatus("mandatory")
_XRadServer2SubGrp_ObjectIdentity = ObjectIdentity
xRadServer2SubGrp = _XRadServer2SubGrp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 35, 4, 2)
)


class _XRadiusServerName2_Type(OctetString):
    """Custom type xRadiusServerName2 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(51, 51),
    )


_XRadiusServerName2_Type.__name__ = "OctetString"
_XRadiusServerName2_Object = MibScalar
xRadiusServerName2 = _XRadiusServerName2_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 4, 2, 1),
    _XRadiusServerName2_Type()
)
xRadiusServerName2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    xRadiusServerName2.setStatus("mandatory")


class _XRadiusSecret2_Type(OctetString):
    """Custom type xRadiusSecret2 based on OctetString"""
    defaultValue = OctetString("Default_Secret")

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(32, 32),
    )


_XRadiusSecret2_Type.__name__ = "OctetString"
_XRadiusSecret2_Object = MibScalar
xRadiusSecret2 = _XRadiusSecret2_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 4, 2, 2),
    _XRadiusSecret2_Type()
)
xRadiusSecret2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xRadiusSecret2.setStatus("obsolete")
_XRadiusServerAccess2_Type = Counter32
_XRadiusServerAccess2_Object = MibScalar
xRadiusServerAccess2 = _XRadiusServerAccess2_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 4, 2, 3),
    _XRadiusServerAccess2_Type()
)
xRadiusServerAccess2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xRadiusServerAccess2.setStatus("mandatory")
_XRadiusServerAccessFailed2_Type = Counter32
_XRadiusServerAccessFailed2_Object = MibScalar
xRadiusServerAccessFailed2 = _XRadiusServerAccessFailed2_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 4, 2, 4),
    _XRadiusServerAccessFailed2_Type()
)
xRadiusServerAccessFailed2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xRadiusServerAccessFailed2.setStatus("mandatory")
_XRadiusCounters_ObjectIdentity = ObjectIdentity
xRadiusCounters = _XRadiusCounters_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 35, 5)
)
_XRadAuthCtsSubGrp_ObjectIdentity = ObjectIdentity
xRadAuthCtsSubGrp = _XRadAuthCtsSubGrp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 35, 5, 1)
)
_XRadiusLogins_Type = Counter32
_XRadiusLogins_Object = MibScalar
xRadiusLogins = _XRadiusLogins_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 5, 1, 1),
    _XRadiusLogins_Type()
)
xRadiusLogins.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xRadiusLogins.setStatus("mandatory")
_XRadiusLoginsFailed_Type = Counter32
_XRadiusLoginsFailed_Object = MibScalar
xRadiusLoginsFailed = _XRadiusLoginsFailed_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 5, 1, 2),
    _XRadiusLoginsFailed_Type()
)
xRadiusLoginsFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xRadiusLoginsFailed.setStatus("mandatory")
_XRadiusConfigFailed_Type = Counter32
_XRadiusConfigFailed_Object = MibScalar
xRadiusConfigFailed = _XRadiusConfigFailed_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 5, 1, 3),
    _XRadiusConfigFailed_Type()
)
xRadiusConfigFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xRadiusConfigFailed.setStatus("mandatory")
_XRadiusPolicyFailed_Type = Counter32
_XRadiusPolicyFailed_Object = MibScalar
xRadiusPolicyFailed = _XRadiusPolicyFailed_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 5, 1, 4),
    _XRadiusPolicyFailed_Type()
)
xRadiusPolicyFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xRadiusPolicyFailed.setStatus("mandatory")
_XRadAcctCtsSubGrp_ObjectIdentity = ObjectIdentity
xRadAcctCtsSubGrp = _XRadAcctCtsSubGrp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 35, 5, 2)
)
_XRadiusAcctSuccess_Type = Counter32
_XRadiusAcctSuccess_Object = MibScalar
xRadiusAcctSuccess = _XRadiusAcctSuccess_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 5, 2, 1),
    _XRadiusAcctSuccess_Type()
)
xRadiusAcctSuccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xRadiusAcctSuccess.setStatus("mandatory")
_XRadiusAcctFailed_Type = Counter32
_XRadiusAcctFailed_Object = MibScalar
xRadiusAcctFailed = _XRadiusAcctFailed_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 5, 2, 2),
    _XRadiusAcctFailed_Type()
)
xRadiusAcctFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xRadiusAcctFailed.setStatus("mandatory")
_XRadiusAcctReqWait_Type = Counter32
_XRadiusAcctReqWait_Object = MibScalar
xRadiusAcctReqWait = _XRadiusAcctReqWait_Object(
    (1, 3, 6, 1, 4, 1, 33, 35, 5, 2, 3),
    _XRadiusAcctReqWait_Type()
)
xRadiusAcctReqWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xRadiusAcctReqWait.setStatus("mandatory")
_XAlarm_ObjectIdentity = ObjectIdentity
xAlarm = _XAlarm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 33, 49)
)

# Managed Objects groups


# Notification objects

newRoot = NotificationType(
    (1, 3, 6, 1, 2, 1, 17, 0, 1)
)
if mibBuilder.loadTexts:
    newRoot.setStatus(
        ""
    )

topologyChange = NotificationType(
    (1, 3, 6, 1, 2, 1, 17, 0, 2)
)
if mibBuilder.loadTexts:
    topologyChange.setStatus(
        ""
    )

resourceFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 9)
)
resourceFailure.setObjects(
      *(("MRVINREACH", "resType"),
        ("MRVINREACH", "sysLocation"))
)
if mibBuilder.loadTexts:
    resourceFailure.setStatus(
        ""
    )

sysLoginAuthenticationFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 28)
)
sysLoginAuthenticationFailure.setObjects(
      *(("MRVINREACH", "sysLoginAuthFailureTrapType"),
        ("MRVINREACH", "sysLoginAuthTrapIdentity"))
)
if mibBuilder.loadTexts:
    sysLoginAuthenticationFailure.setStatus(
        ""
    )

contactClosureChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30)
)
contactClosureChanged.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    contactClosureChanged.setStatus(
        ""
    )

powerAlarmFuseBankA = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 31)
)
powerAlarmFuseBankA.setObjects(
      *(("MRVINREACH", "basicPowerStatusFuseA"),
        ("MRVINREACH", "sysLocation"))
)
if mibBuilder.loadTexts:
    powerAlarmFuseBankA.setStatus(
        ""
    )

powerAlarmFuseBankB = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 32)
)
powerAlarmFuseBankB.setObjects(
      *(("MRVINREACH", "basicPowerStatusFuseB"),
        ("MRVINREACH", "sysLocation"))
)
if mibBuilder.loadTexts:
    powerAlarmFuseBankB.setStatus(
        ""
    )

powerSupplyAlarmA = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 33)
)
powerSupplyAlarmA.setObjects(
      *(("MRVINREACH", "basicPowerSupplyStatusA"),
        ("MRVINREACH", "sysLocation"))
)
if mibBuilder.loadTexts:
    powerSupplyAlarmA.setStatus(
        ""
    )

powerSupplyAlarmB = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 34)
)
powerSupplyAlarmB.setObjects(
      *(("MRVINREACH", "basicPowerSupplyStatusB"),
        ("MRVINREACH", "sysLocation"))
)
if mibBuilder.loadTexts:
    powerSupplyAlarmB.setStatus(
        ""
    )

portInputSignalChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 35)
)
portInputSignalChange.setObjects(
      *(("MRVINREACH", "rs232InSigState"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "rs232PortIndex"))
)
if mibBuilder.loadTexts:
    portInputSignalChange.setStatus(
        ""
    )

portOutputSignalChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 36)
)
portOutputSignalChange.setObjects(
      *(("MRVINREACH", "rs232OutSigState"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "rs232PortIndex"))
)
if mibBuilder.loadTexts:
    portOutputSignalChange.setStatus(
        ""
    )

humidityThresholdExceeded = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 37)
)
humidityThresholdExceeded.setObjects(
      *(("MRVINREACH", "basicHumidityValue"),
        ("MRVINREACH", "basicTemperatureHumiditySensorName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicHumiditySensorIndex"),
        ("MRVINREACH", "basicHumidityAlarmStatus"))
)
if mibBuilder.loadTexts:
    humidityThresholdExceeded.setStatus(
        ""
    )

temperatureThresholdExceeded = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 38)
)
temperatureThresholdExceeded.setObjects(
      *(("MRVINREACH", "basicTemperatureValue"),
        ("MRVINREACH", "basicTemperatureHumiditySensorName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicTemperatureSensorIndex"),
        ("MRVINREACH", "basicTemperatureAlarmStatus"))
)
if mibBuilder.loadTexts:
    temperatureThresholdExceeded.setStatus(
        ""
    )

alarmMasterNotResponding = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 39)
)
alarmMasterNotResponding.setObjects(
      *(("MRVINREACH", "basicPortIndex"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicPortAlarmMasterStatus"))
)
if mibBuilder.loadTexts:
    alarmMasterNotResponding.setStatus(
        ""
    )

alarmMasterInputStateChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 41)
)
alarmMasterInputStateChange.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"))
)
if mibBuilder.loadTexts:
    alarmMasterInputStateChange.setStatus(
        ""
    )

asciiToTrapTranslation = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 42)
)
asciiToTrapTranslation.setObjects(
      *(("MRVINREACH", "basicPortAsciiToTrapTranslationTrapSeverity"),
        ("MRVINREACH", "basicPortAsciiToTrapTranslationLastMessage"))
)
if mibBuilder.loadTexts:
    asciiToTrapTranslation.setStatus(
        ""
    )

powerMasterNotResponding = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 43)
)
powerMasterNotResponding.setObjects(
      *(("MRVINREACH", "basicPortIndex"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicPortPowerMasterDeviceStatus"))
)
if mibBuilder.loadTexts:
    powerMasterNotResponding.setStatus(
        ""
    )

temperatureNormal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 44)
)
temperatureNormal.setObjects(
      *(("MRVINREACH", "basicTemperatureValue"),
        ("MRVINREACH", "basicTemperatureHumiditySensorName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicTemperatureSensorIndex"),
        ("MRVINREACH", "basicTemperatureAlarmStatus"))
)
if mibBuilder.loadTexts:
    temperatureNormal.setStatus(
        ""
    )

humidityNormal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 45)
)
humidityNormal.setObjects(
      *(("MRVINREACH", "basicHumidityValue"),
        ("MRVINREACH", "basicTemperatureHumiditySensorName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicHumiditySensorIndex"),
        ("MRVINREACH", "basicHumidityAlarmStatus"))
)
if mibBuilder.loadTexts:
    humidityNormal.setStatus(
        ""
    )

alarmMasterSideAOff = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 46)
)
alarmMasterSideAOff.setObjects(
      *(("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicPortIndex"))
)
if mibBuilder.loadTexts:
    alarmMasterSideAOff.setStatus(
        ""
    )

alarmMasterSideBOff = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 47)
)
alarmMasterSideBOff.setObjects(
      *(("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicPortIndex"))
)
if mibBuilder.loadTexts:
    alarmMasterSideBOff.setStatus(
        ""
    )

alarmMasterSideAOn = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 48)
)
alarmMasterSideAOn.setObjects(
      *(("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicPortIndex"))
)
if mibBuilder.loadTexts:
    alarmMasterSideAOn.setStatus(
        ""
    )

alarmMasterSideBOn = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 49)
)
alarmMasterSideBOn.setObjects(
      *(("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicPortIndex"))
)
if mibBuilder.loadTexts:
    alarmMasterSideBOn.setStatus(
        ""
    )

icmpPingHostNotReachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 50)
)
icmpPingHostNotReachable.setObjects(
      *(("MRVINREACH", "icmpPingHostAddress"),
        ("MRVINREACH", "icmpPingHostDescription"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "icmpPingHostPollingInterval"),
        ("MRVINREACH", "icmpPingHostMaximumRetries"),
        ("MRVINREACH", "icmpPingHostStatus"))
)
if mibBuilder.loadTexts:
    icmpPingHostNotReachable.setStatus(
        ""
    )

icmpPingHostResponding = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 51)
)
icmpPingHostResponding.setObjects(
      *(("MRVINREACH", "icmpPingHostAddress"),
        ("MRVINREACH", "icmpPingHostDescription"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "icmpPingHostPollingInterval"),
        ("MRVINREACH", "icmpPingHostMaximumRetries"),
        ("MRVINREACH", "icmpPingHostStatus"))
)
if mibBuilder.loadTexts:
    icmpPingHostResponding.setStatus(
        ""
    )

alarmInputLowDensity0001Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10001)
)
alarmInputLowDensity0001Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0001Alarm.setStatus(
        ""
    )

alarmInputLowDensity0002Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10002)
)
alarmInputLowDensity0002Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0002Alarm.setStatus(
        ""
    )

alarmInputLowDensity0003Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10003)
)
alarmInputLowDensity0003Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0003Alarm.setStatus(
        ""
    )

alarmInputLowDensity0004Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10004)
)
alarmInputLowDensity0004Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0004Alarm.setStatus(
        ""
    )

alarmInputLowDensity0005Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10005)
)
alarmInputLowDensity0005Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0005Alarm.setStatus(
        ""
    )

alarmInputLowDensity0006Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10006)
)
alarmInputLowDensity0006Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0006Alarm.setStatus(
        ""
    )

alarmInputLowDensity0007Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10007)
)
alarmInputLowDensity0007Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0007Alarm.setStatus(
        ""
    )

alarmInputLowDensity0008Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10008)
)
alarmInputLowDensity0008Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0008Alarm.setStatus(
        ""
    )

alarmInputLowDensity0009Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10009)
)
alarmInputLowDensity0009Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0009Alarm.setStatus(
        ""
    )

alarmInputLowDensity0010Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10010)
)
alarmInputLowDensity0010Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0010Alarm.setStatus(
        ""
    )

alarmInputLowDensity0011Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10011)
)
alarmInputLowDensity0011Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0011Alarm.setStatus(
        ""
    )

alarmInputLowDensity0012Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10012)
)
alarmInputLowDensity0012Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0012Alarm.setStatus(
        ""
    )

alarmInputLowDensity0013Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10013)
)
alarmInputLowDensity0013Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0013Alarm.setStatus(
        ""
    )

alarmInputLowDensity0014Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10014)
)
alarmInputLowDensity0014Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0014Alarm.setStatus(
        ""
    )

alarmInputLowDensity0015Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10015)
)
alarmInputLowDensity0015Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0015Alarm.setStatus(
        ""
    )

alarmInputLowDensity0016Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10016)
)
alarmInputLowDensity0016Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0016Alarm.setStatus(
        ""
    )

alarmInputLowDensity0017Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10017)
)
alarmInputLowDensity0017Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0017Alarm.setStatus(
        ""
    )

alarmInputLowDensity0018Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10018)
)
alarmInputLowDensity0018Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0018Alarm.setStatus(
        ""
    )

alarmInputLowDensity0019Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10019)
)
alarmInputLowDensity0019Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0019Alarm.setStatus(
        ""
    )

alarmInputLowDensity0020Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10020)
)
alarmInputLowDensity0020Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0020Alarm.setStatus(
        ""
    )

alarmInputLowDensity0021Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10021)
)
alarmInputLowDensity0021Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0021Alarm.setStatus(
        ""
    )

alarmInputLowDensity0022Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10022)
)
alarmInputLowDensity0022Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0022Alarm.setStatus(
        ""
    )

alarmInputLowDensity0023Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10023)
)
alarmInputLowDensity0023Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0023Alarm.setStatus(
        ""
    )

alarmInputLowDensity0024Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10024)
)
alarmInputLowDensity0024Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0024Alarm.setStatus(
        ""
    )

alarmInputLowDensity0025Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10025)
)
alarmInputLowDensity0025Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0025Alarm.setStatus(
        ""
    )

alarmInputLowDensity0026Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10026)
)
alarmInputLowDensity0026Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0026Alarm.setStatus(
        ""
    )

alarmInputLowDensity0027Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10027)
)
alarmInputLowDensity0027Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0027Alarm.setStatus(
        ""
    )

alarmInputLowDensity0028Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10028)
)
alarmInputLowDensity0028Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0028Alarm.setStatus(
        ""
    )

alarmInputLowDensity0029Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10029)
)
alarmInputLowDensity0029Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0029Alarm.setStatus(
        ""
    )

alarmInputLowDensity0030Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10030)
)
alarmInputLowDensity0030Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0030Alarm.setStatus(
        ""
    )

alarmInputLowDensity0031Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10031)
)
alarmInputLowDensity0031Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0031Alarm.setStatus(
        ""
    )

alarmInputLowDensity0032Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10032)
)
alarmInputLowDensity0032Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0032Alarm.setStatus(
        ""
    )

alarmInputLowDensity0033Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10033)
)
alarmInputLowDensity0033Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0033Alarm.setStatus(
        ""
    )

alarmInputLowDensity0034Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10034)
)
alarmInputLowDensity0034Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0034Alarm.setStatus(
        ""
    )

alarmInputLowDensity0035Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10035)
)
alarmInputLowDensity0035Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0035Alarm.setStatus(
        ""
    )

alarmInputLowDensity0036Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10036)
)
alarmInputLowDensity0036Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0036Alarm.setStatus(
        ""
    )

alarmInputLowDensity0037Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10037)
)
alarmInputLowDensity0037Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0037Alarm.setStatus(
        ""
    )

alarmInputLowDensity0038Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10038)
)
alarmInputLowDensity0038Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0038Alarm.setStatus(
        ""
    )

alarmInputLowDensity0039Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10039)
)
alarmInputLowDensity0039Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0039Alarm.setStatus(
        ""
    )

alarmInputLowDensity0040Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10040)
)
alarmInputLowDensity0040Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0040Alarm.setStatus(
        ""
    )

alarmInputLowDensity0041Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10041)
)
alarmInputLowDensity0041Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0041Alarm.setStatus(
        ""
    )

alarmInputLowDensity0042Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10042)
)
alarmInputLowDensity0042Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0042Alarm.setStatus(
        ""
    )

alarmInputLowDensity0043Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10043)
)
alarmInputLowDensity0043Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0043Alarm.setStatus(
        ""
    )

alarmInputLowDensity0044Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10044)
)
alarmInputLowDensity0044Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0044Alarm.setStatus(
        ""
    )

alarmInputLowDensity0045Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10045)
)
alarmInputLowDensity0045Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0045Alarm.setStatus(
        ""
    )

alarmInputLowDensity0046Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10046)
)
alarmInputLowDensity0046Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0046Alarm.setStatus(
        ""
    )

alarmInputLowDensity0047Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10047)
)
alarmInputLowDensity0047Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0047Alarm.setStatus(
        ""
    )

alarmInputLowDensity0048Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10048)
)
alarmInputLowDensity0048Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0048Alarm.setStatus(
        ""
    )

alarmInputLowDensity0049Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10049)
)
alarmInputLowDensity0049Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0049Alarm.setStatus(
        ""
    )

alarmInputLowDensity0050Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10050)
)
alarmInputLowDensity0050Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0050Alarm.setStatus(
        ""
    )

alarmInputLowDensity0051Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10051)
)
alarmInputLowDensity0051Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0051Alarm.setStatus(
        ""
    )

alarmInputLowDensity0052Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10052)
)
alarmInputLowDensity0052Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0052Alarm.setStatus(
        ""
    )

alarmInputLowDensity0053Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10053)
)
alarmInputLowDensity0053Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0053Alarm.setStatus(
        ""
    )

alarmInputLowDensity0054Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10054)
)
alarmInputLowDensity0054Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0054Alarm.setStatus(
        ""
    )

alarmInputLowDensity0055Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10055)
)
alarmInputLowDensity0055Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0055Alarm.setStatus(
        ""
    )

alarmInputLowDensity0056Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10056)
)
alarmInputLowDensity0056Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0056Alarm.setStatus(
        ""
    )

alarmInputLowDensity0057Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10057)
)
alarmInputLowDensity0057Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0057Alarm.setStatus(
        ""
    )

alarmInputLowDensity0058Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10058)
)
alarmInputLowDensity0058Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0058Alarm.setStatus(
        ""
    )

alarmInputLowDensity0059Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10059)
)
alarmInputLowDensity0059Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0059Alarm.setStatus(
        ""
    )

alarmInputLowDensity0060Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10060)
)
alarmInputLowDensity0060Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0060Alarm.setStatus(
        ""
    )

alarmInputLowDensity0061Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10061)
)
alarmInputLowDensity0061Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0061Alarm.setStatus(
        ""
    )

alarmInputLowDensity0062Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10062)
)
alarmInputLowDensity0062Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0062Alarm.setStatus(
        ""
    )

alarmInputLowDensity0063Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10063)
)
alarmInputLowDensity0063Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0063Alarm.setStatus(
        ""
    )

alarmInputLowDensity0064Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10064)
)
alarmInputLowDensity0064Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0064Alarm.setStatus(
        ""
    )

alarmInputLowDensity0065Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10065)
)
alarmInputLowDensity0065Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0065Alarm.setStatus(
        ""
    )

alarmInputLowDensity0066Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10066)
)
alarmInputLowDensity0066Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0066Alarm.setStatus(
        ""
    )

alarmInputLowDensity0067Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10067)
)
alarmInputLowDensity0067Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0067Alarm.setStatus(
        ""
    )

alarmInputLowDensity0068Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10068)
)
alarmInputLowDensity0068Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0068Alarm.setStatus(
        ""
    )

alarmInputLowDensity0069Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10069)
)
alarmInputLowDensity0069Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0069Alarm.setStatus(
        ""
    )

alarmInputLowDensity0070Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10070)
)
alarmInputLowDensity0070Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0070Alarm.setStatus(
        ""
    )

alarmInputLowDensity0071Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10071)
)
alarmInputLowDensity0071Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0071Alarm.setStatus(
        ""
    )

alarmInputLowDensity0072Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10072)
)
alarmInputLowDensity0072Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0072Alarm.setStatus(
        ""
    )

alarmInputLowDensity0073Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10073)
)
alarmInputLowDensity0073Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0073Alarm.setStatus(
        ""
    )

alarmInputLowDensity0074Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10074)
)
alarmInputLowDensity0074Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0074Alarm.setStatus(
        ""
    )

alarmInputLowDensity0075Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10075)
)
alarmInputLowDensity0075Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0075Alarm.setStatus(
        ""
    )

alarmInputLowDensity0076Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10076)
)
alarmInputLowDensity0076Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0076Alarm.setStatus(
        ""
    )

alarmInputLowDensity0077Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10077)
)
alarmInputLowDensity0077Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0077Alarm.setStatus(
        ""
    )

alarmInputLowDensity0078Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10078)
)
alarmInputLowDensity0078Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0078Alarm.setStatus(
        ""
    )

alarmInputLowDensity0079Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10079)
)
alarmInputLowDensity0079Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0079Alarm.setStatus(
        ""
    )

alarmInputLowDensity0080Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 10080)
)
alarmInputLowDensity0080Alarm.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0080Alarm.setStatus(
        ""
    )

alarmInputLowDensity0001Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20001)
)
alarmInputLowDensity0001Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0001Normal.setStatus(
        ""
    )

alarmInputLowDensity0002Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20002)
)
alarmInputLowDensity0002Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0002Normal.setStatus(
        ""
    )

alarmInputLowDensity0003Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20003)
)
alarmInputLowDensity0003Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0003Normal.setStatus(
        ""
    )

alarmInputLowDensity0004Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20004)
)
alarmInputLowDensity0004Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0004Normal.setStatus(
        ""
    )

alarmInputLowDensity0005Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20005)
)
alarmInputLowDensity0005Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0005Normal.setStatus(
        ""
    )

alarmInputLowDensity0006Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20006)
)
alarmInputLowDensity0006Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0006Normal.setStatus(
        ""
    )

alarmInputLowDensity0007Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20007)
)
alarmInputLowDensity0007Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0007Normal.setStatus(
        ""
    )

alarmInputLowDensity0008Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20008)
)
alarmInputLowDensity0008Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0008Normal.setStatus(
        ""
    )

alarmInputLowDensity0009Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20009)
)
alarmInputLowDensity0009Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0009Normal.setStatus(
        ""
    )

alarmInputLowDensity0010Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20010)
)
alarmInputLowDensity0010Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0010Normal.setStatus(
        ""
    )

alarmInputLowDensity0011Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20011)
)
alarmInputLowDensity0011Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0011Normal.setStatus(
        ""
    )

alarmInputLowDensity0012Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20012)
)
alarmInputLowDensity0012Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0012Normal.setStatus(
        ""
    )

alarmInputLowDensity0013Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20013)
)
alarmInputLowDensity0013Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0013Normal.setStatus(
        ""
    )

alarmInputLowDensity0014Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20014)
)
alarmInputLowDensity0014Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0014Normal.setStatus(
        ""
    )

alarmInputLowDensity0015Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20015)
)
alarmInputLowDensity0015Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0015Normal.setStatus(
        ""
    )

alarmInputLowDensity0016Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20016)
)
alarmInputLowDensity0016Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0016Normal.setStatus(
        ""
    )

alarmInputLowDensity0017Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20017)
)
alarmInputLowDensity0017Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0017Normal.setStatus(
        ""
    )

alarmInputLowDensity0018Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20018)
)
alarmInputLowDensity0018Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0018Normal.setStatus(
        ""
    )

alarmInputLowDensity0019Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20019)
)
alarmInputLowDensity0019Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0019Normal.setStatus(
        ""
    )

alarmInputLowDensity0020Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20020)
)
alarmInputLowDensity0020Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0020Normal.setStatus(
        ""
    )

alarmInputLowDensity0021Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20021)
)
alarmInputLowDensity0021Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0021Normal.setStatus(
        ""
    )

alarmInputLowDensity0022Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20022)
)
alarmInputLowDensity0022Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0022Normal.setStatus(
        ""
    )

alarmInputLowDensity0023Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20023)
)
alarmInputLowDensity0023Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0023Normal.setStatus(
        ""
    )

alarmInputLowDensity0024Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20024)
)
alarmInputLowDensity0024Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0024Normal.setStatus(
        ""
    )

alarmInputLowDensity0025Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20025)
)
alarmInputLowDensity0025Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0025Normal.setStatus(
        ""
    )

alarmInputLowDensity0026Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20026)
)
alarmInputLowDensity0026Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0026Normal.setStatus(
        ""
    )

alarmInputLowDensity0027Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20027)
)
alarmInputLowDensity0027Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0027Normal.setStatus(
        ""
    )

alarmInputLowDensity0028Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20028)
)
alarmInputLowDensity0028Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0028Normal.setStatus(
        ""
    )

alarmInputLowDensity0029Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20029)
)
alarmInputLowDensity0029Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0029Normal.setStatus(
        ""
    )

alarmInputLowDensity0030Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20030)
)
alarmInputLowDensity0030Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0030Normal.setStatus(
        ""
    )

alarmInputLowDensity0031Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20031)
)
alarmInputLowDensity0031Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0031Normal.setStatus(
        ""
    )

alarmInputLowDensity0032Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20032)
)
alarmInputLowDensity0032Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0032Normal.setStatus(
        ""
    )

alarmInputLowDensity0033Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20033)
)
alarmInputLowDensity0033Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0033Normal.setStatus(
        ""
    )

alarmInputLowDensity0034Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20034)
)
alarmInputLowDensity0034Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0034Normal.setStatus(
        ""
    )

alarmInputLowDensity0035Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20035)
)
alarmInputLowDensity0035Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0035Normal.setStatus(
        ""
    )

alarmInputLowDensity0036Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20036)
)
alarmInputLowDensity0036Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0036Normal.setStatus(
        ""
    )

alarmInputLowDensity0037Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20037)
)
alarmInputLowDensity0037Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0037Normal.setStatus(
        ""
    )

alarmInputLowDensity0038Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20038)
)
alarmInputLowDensity0038Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0038Normal.setStatus(
        ""
    )

alarmInputLowDensity0039Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20039)
)
alarmInputLowDensity0039Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0039Normal.setStatus(
        ""
    )

alarmInputLowDensity0040Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20040)
)
alarmInputLowDensity0040Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0040Normal.setStatus(
        ""
    )

alarmInputLowDensity0041Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20041)
)
alarmInputLowDensity0041Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0041Normal.setStatus(
        ""
    )

alarmInputLowDensity0042Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20042)
)
alarmInputLowDensity0042Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0042Normal.setStatus(
        ""
    )

alarmInputLowDensity0043Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20043)
)
alarmInputLowDensity0043Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0043Normal.setStatus(
        ""
    )

alarmInputLowDensity0044Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20044)
)
alarmInputLowDensity0044Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0044Normal.setStatus(
        ""
    )

alarmInputLowDensity0045Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20045)
)
alarmInputLowDensity0045Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0045Normal.setStatus(
        ""
    )

alarmInputLowDensity0046Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20046)
)
alarmInputLowDensity0046Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0046Normal.setStatus(
        ""
    )

alarmInputLowDensity0047Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20047)
)
alarmInputLowDensity0047Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0047Normal.setStatus(
        ""
    )

alarmInputLowDensity0048Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20048)
)
alarmInputLowDensity0048Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0048Normal.setStatus(
        ""
    )

alarmInputLowDensity0049Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20049)
)
alarmInputLowDensity0049Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0049Normal.setStatus(
        ""
    )

alarmInputLowDensity0050Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20050)
)
alarmInputLowDensity0050Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0050Normal.setStatus(
        ""
    )

alarmInputLowDensity0051Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20051)
)
alarmInputLowDensity0051Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0051Normal.setStatus(
        ""
    )

alarmInputLowDensity0052Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20052)
)
alarmInputLowDensity0052Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0052Normal.setStatus(
        ""
    )

alarmInputLowDensity0053Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20053)
)
alarmInputLowDensity0053Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0053Normal.setStatus(
        ""
    )

alarmInputLowDensity0054Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20054)
)
alarmInputLowDensity0054Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0054Normal.setStatus(
        ""
    )

alarmInputLowDensity0055Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20055)
)
alarmInputLowDensity0055Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0055Normal.setStatus(
        ""
    )

alarmInputLowDensity0056Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20056)
)
alarmInputLowDensity0056Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0056Normal.setStatus(
        ""
    )

alarmInputLowDensity0057Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20057)
)
alarmInputLowDensity0057Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0057Normal.setStatus(
        ""
    )

alarmInputLowDensity0058Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20058)
)
alarmInputLowDensity0058Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0058Normal.setStatus(
        ""
    )

alarmInputLowDensity0059Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20059)
)
alarmInputLowDensity0059Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0059Normal.setStatus(
        ""
    )

alarmInputLowDensity0060Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20060)
)
alarmInputLowDensity0060Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0060Normal.setStatus(
        ""
    )

alarmInputLowDensity0061Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20061)
)
alarmInputLowDensity0061Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0061Normal.setStatus(
        ""
    )

alarmInputLowDensity0062Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20062)
)
alarmInputLowDensity0062Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0062Normal.setStatus(
        ""
    )

alarmInputLowDensity0063Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20063)
)
alarmInputLowDensity0063Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0063Normal.setStatus(
        ""
    )

alarmInputLowDensity0064Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20064)
)
alarmInputLowDensity0064Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0064Normal.setStatus(
        ""
    )

alarmInputLowDensity0065Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20065)
)
alarmInputLowDensity0065Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0065Normal.setStatus(
        ""
    )

alarmInputLowDensity0066Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20066)
)
alarmInputLowDensity0066Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0066Normal.setStatus(
        ""
    )

alarmInputLowDensity0067Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20067)
)
alarmInputLowDensity0067Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0067Normal.setStatus(
        ""
    )

alarmInputLowDensity0068Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20068)
)
alarmInputLowDensity0068Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0068Normal.setStatus(
        ""
    )

alarmInputLowDensity0069Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20069)
)
alarmInputLowDensity0069Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0069Normal.setStatus(
        ""
    )

alarmInputLowDensity0070Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20070)
)
alarmInputLowDensity0070Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0070Normal.setStatus(
        ""
    )

alarmInputLowDensity0071Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20071)
)
alarmInputLowDensity0071Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0071Normal.setStatus(
        ""
    )

alarmInputLowDensity0072Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20072)
)
alarmInputLowDensity0072Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0072Normal.setStatus(
        ""
    )

alarmInputLowDensity0073Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20073)
)
alarmInputLowDensity0073Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0073Normal.setStatus(
        ""
    )

alarmInputLowDensity0074Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20074)
)
alarmInputLowDensity0074Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0074Normal.setStatus(
        ""
    )

alarmInputLowDensity0075Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20075)
)
alarmInputLowDensity0075Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0075Normal.setStatus(
        ""
    )

alarmInputLowDensity0076Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20076)
)
alarmInputLowDensity0076Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0076Normal.setStatus(
        ""
    )

alarmInputLowDensity0077Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20077)
)
alarmInputLowDensity0077Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0077Normal.setStatus(
        ""
    )

alarmInputLowDensity0078Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20078)
)
alarmInputLowDensity0078Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0078Normal.setStatus(
        ""
    )

alarmInputLowDensity0079Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20079)
)
alarmInputLowDensity0079Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0079Normal.setStatus(
        ""
    )

alarmInputLowDensity0080Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 20080)
)
alarmInputLowDensity0080Normal.setObjects(
      *(("MRVINREACH", "basicContactClosureOrAlarmInputValue"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputIndex"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputStatus"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputZone"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputRelatedEquipment"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputSiteId"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputManufacturer"),
        ("MRVINREACH", "basicContactClosureOrAlarmInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputLowDensity0080Normal.setStatus(
        ""
    )

alarmInputHighDensity0001Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30001)
)
alarmInputHighDensity0001Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0001Alarm.setStatus(
        ""
    )

alarmInputHighDensity0002Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30002)
)
alarmInputHighDensity0002Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0002Alarm.setStatus(
        ""
    )

alarmInputHighDensity0003Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30003)
)
alarmInputHighDensity0003Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0003Alarm.setStatus(
        ""
    )

alarmInputHighDensity0004Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30004)
)
alarmInputHighDensity0004Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0004Alarm.setStatus(
        ""
    )

alarmInputHighDensity0005Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30005)
)
alarmInputHighDensity0005Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0005Alarm.setStatus(
        ""
    )

alarmInputHighDensity0006Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30006)
)
alarmInputHighDensity0006Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0006Alarm.setStatus(
        ""
    )

alarmInputHighDensity0007Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30007)
)
alarmInputHighDensity0007Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0007Alarm.setStatus(
        ""
    )

alarmInputHighDensity0008Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30008)
)
alarmInputHighDensity0008Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0008Alarm.setStatus(
        ""
    )

alarmInputHighDensity0009Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30009)
)
alarmInputHighDensity0009Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0009Alarm.setStatus(
        ""
    )

alarmInputHighDensity0010Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30010)
)
alarmInputHighDensity0010Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0010Alarm.setStatus(
        ""
    )

alarmInputHighDensity0011Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30011)
)
alarmInputHighDensity0011Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0011Alarm.setStatus(
        ""
    )

alarmInputHighDensity0012Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30012)
)
alarmInputHighDensity0012Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0012Alarm.setStatus(
        ""
    )

alarmInputHighDensity0013Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30013)
)
alarmInputHighDensity0013Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0013Alarm.setStatus(
        ""
    )

alarmInputHighDensity0014Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30014)
)
alarmInputHighDensity0014Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0014Alarm.setStatus(
        ""
    )

alarmInputHighDensity0015Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30015)
)
alarmInputHighDensity0015Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0015Alarm.setStatus(
        ""
    )

alarmInputHighDensity0016Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30016)
)
alarmInputHighDensity0016Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0016Alarm.setStatus(
        ""
    )

alarmInputHighDensity0017Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30017)
)
alarmInputHighDensity0017Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0017Alarm.setStatus(
        ""
    )

alarmInputHighDensity0018Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30018)
)
alarmInputHighDensity0018Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0018Alarm.setStatus(
        ""
    )

alarmInputHighDensity0019Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30019)
)
alarmInputHighDensity0019Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0019Alarm.setStatus(
        ""
    )

alarmInputHighDensity0020Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30020)
)
alarmInputHighDensity0020Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0020Alarm.setStatus(
        ""
    )

alarmInputHighDensity0021Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30021)
)
alarmInputHighDensity0021Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0021Alarm.setStatus(
        ""
    )

alarmInputHighDensity0022Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30022)
)
alarmInputHighDensity0022Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0022Alarm.setStatus(
        ""
    )

alarmInputHighDensity0023Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30023)
)
alarmInputHighDensity0023Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0023Alarm.setStatus(
        ""
    )

alarmInputHighDensity0024Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30024)
)
alarmInputHighDensity0024Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0024Alarm.setStatus(
        ""
    )

alarmInputHighDensity0025Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30025)
)
alarmInputHighDensity0025Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0025Alarm.setStatus(
        ""
    )

alarmInputHighDensity0026Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30026)
)
alarmInputHighDensity0026Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0026Alarm.setStatus(
        ""
    )

alarmInputHighDensity0027Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30027)
)
alarmInputHighDensity0027Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0027Alarm.setStatus(
        ""
    )

alarmInputHighDensity0028Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30028)
)
alarmInputHighDensity0028Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0028Alarm.setStatus(
        ""
    )

alarmInputHighDensity0029Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30029)
)
alarmInputHighDensity0029Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0029Alarm.setStatus(
        ""
    )

alarmInputHighDensity0030Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30030)
)
alarmInputHighDensity0030Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0030Alarm.setStatus(
        ""
    )

alarmInputHighDensity0031Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30031)
)
alarmInputHighDensity0031Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0031Alarm.setStatus(
        ""
    )

alarmInputHighDensity0032Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30032)
)
alarmInputHighDensity0032Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0032Alarm.setStatus(
        ""
    )

alarmInputHighDensity0033Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30033)
)
alarmInputHighDensity0033Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0033Alarm.setStatus(
        ""
    )

alarmInputHighDensity0034Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30034)
)
alarmInputHighDensity0034Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0034Alarm.setStatus(
        ""
    )

alarmInputHighDensity0035Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30035)
)
alarmInputHighDensity0035Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0035Alarm.setStatus(
        ""
    )

alarmInputHighDensity0036Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30036)
)
alarmInputHighDensity0036Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0036Alarm.setStatus(
        ""
    )

alarmInputHighDensity0037Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30037)
)
alarmInputHighDensity0037Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0037Alarm.setStatus(
        ""
    )

alarmInputHighDensity0038Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30038)
)
alarmInputHighDensity0038Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0038Alarm.setStatus(
        ""
    )

alarmInputHighDensity0039Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30039)
)
alarmInputHighDensity0039Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0039Alarm.setStatus(
        ""
    )

alarmInputHighDensity0040Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30040)
)
alarmInputHighDensity0040Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0040Alarm.setStatus(
        ""
    )

alarmInputHighDensity0041Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30041)
)
alarmInputHighDensity0041Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0041Alarm.setStatus(
        ""
    )

alarmInputHighDensity0042Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30042)
)
alarmInputHighDensity0042Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0042Alarm.setStatus(
        ""
    )

alarmInputHighDensity0043Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30043)
)
alarmInputHighDensity0043Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0043Alarm.setStatus(
        ""
    )

alarmInputHighDensity0044Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30044)
)
alarmInputHighDensity0044Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0044Alarm.setStatus(
        ""
    )

alarmInputHighDensity0045Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30045)
)
alarmInputHighDensity0045Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0045Alarm.setStatus(
        ""
    )

alarmInputHighDensity0046Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30046)
)
alarmInputHighDensity0046Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0046Alarm.setStatus(
        ""
    )

alarmInputHighDensity0047Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30047)
)
alarmInputHighDensity0047Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0047Alarm.setStatus(
        ""
    )

alarmInputHighDensity0048Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30048)
)
alarmInputHighDensity0048Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0048Alarm.setStatus(
        ""
    )

alarmInputHighDensity0049Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30049)
)
alarmInputHighDensity0049Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0049Alarm.setStatus(
        ""
    )

alarmInputHighDensity0050Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30050)
)
alarmInputHighDensity0050Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0050Alarm.setStatus(
        ""
    )

alarmInputHighDensity0051Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30051)
)
alarmInputHighDensity0051Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0051Alarm.setStatus(
        ""
    )

alarmInputHighDensity0052Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30052)
)
alarmInputHighDensity0052Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0052Alarm.setStatus(
        ""
    )

alarmInputHighDensity0053Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30053)
)
alarmInputHighDensity0053Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0053Alarm.setStatus(
        ""
    )

alarmInputHighDensity0054Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30054)
)
alarmInputHighDensity0054Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0054Alarm.setStatus(
        ""
    )

alarmInputHighDensity0055Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30055)
)
alarmInputHighDensity0055Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0055Alarm.setStatus(
        ""
    )

alarmInputHighDensity0056Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30056)
)
alarmInputHighDensity0056Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0056Alarm.setStatus(
        ""
    )

alarmInputHighDensity0057Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30057)
)
alarmInputHighDensity0057Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0057Alarm.setStatus(
        ""
    )

alarmInputHighDensity0058Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30058)
)
alarmInputHighDensity0058Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0058Alarm.setStatus(
        ""
    )

alarmInputHighDensity0059Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30059)
)
alarmInputHighDensity0059Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0059Alarm.setStatus(
        ""
    )

alarmInputHighDensity0060Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30060)
)
alarmInputHighDensity0060Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0060Alarm.setStatus(
        ""
    )

alarmInputHighDensity0061Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30061)
)
alarmInputHighDensity0061Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0061Alarm.setStatus(
        ""
    )

alarmInputHighDensity0062Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30062)
)
alarmInputHighDensity0062Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0062Alarm.setStatus(
        ""
    )

alarmInputHighDensity0063Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30063)
)
alarmInputHighDensity0063Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0063Alarm.setStatus(
        ""
    )

alarmInputHighDensity0064Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30064)
)
alarmInputHighDensity0064Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0064Alarm.setStatus(
        ""
    )

alarmInputHighDensity0065Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30065)
)
alarmInputHighDensity0065Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0065Alarm.setStatus(
        ""
    )

alarmInputHighDensity0066Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30066)
)
alarmInputHighDensity0066Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0066Alarm.setStatus(
        ""
    )

alarmInputHighDensity0067Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30067)
)
alarmInputHighDensity0067Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0067Alarm.setStatus(
        ""
    )

alarmInputHighDensity0068Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30068)
)
alarmInputHighDensity0068Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0068Alarm.setStatus(
        ""
    )

alarmInputHighDensity0069Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30069)
)
alarmInputHighDensity0069Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0069Alarm.setStatus(
        ""
    )

alarmInputHighDensity0070Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30070)
)
alarmInputHighDensity0070Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0070Alarm.setStatus(
        ""
    )

alarmInputHighDensity0071Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30071)
)
alarmInputHighDensity0071Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0071Alarm.setStatus(
        ""
    )

alarmInputHighDensity0072Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30072)
)
alarmInputHighDensity0072Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0072Alarm.setStatus(
        ""
    )

alarmInputHighDensity0073Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30073)
)
alarmInputHighDensity0073Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0073Alarm.setStatus(
        ""
    )

alarmInputHighDensity0074Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30074)
)
alarmInputHighDensity0074Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0074Alarm.setStatus(
        ""
    )

alarmInputHighDensity0075Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30075)
)
alarmInputHighDensity0075Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0075Alarm.setStatus(
        ""
    )

alarmInputHighDensity0076Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30076)
)
alarmInputHighDensity0076Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0076Alarm.setStatus(
        ""
    )

alarmInputHighDensity0077Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30077)
)
alarmInputHighDensity0077Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0077Alarm.setStatus(
        ""
    )

alarmInputHighDensity0078Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30078)
)
alarmInputHighDensity0078Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0078Alarm.setStatus(
        ""
    )

alarmInputHighDensity0079Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30079)
)
alarmInputHighDensity0079Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0079Alarm.setStatus(
        ""
    )

alarmInputHighDensity0080Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30080)
)
alarmInputHighDensity0080Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0080Alarm.setStatus(
        ""
    )

alarmInputHighDensity0081Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30081)
)
alarmInputHighDensity0081Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0081Alarm.setStatus(
        ""
    )

alarmInputHighDensity0082Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30082)
)
alarmInputHighDensity0082Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0082Alarm.setStatus(
        ""
    )

alarmInputHighDensity0083Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30083)
)
alarmInputHighDensity0083Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0083Alarm.setStatus(
        ""
    )

alarmInputHighDensity0084Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30084)
)
alarmInputHighDensity0084Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0084Alarm.setStatus(
        ""
    )

alarmInputHighDensity0085Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30085)
)
alarmInputHighDensity0085Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0085Alarm.setStatus(
        ""
    )

alarmInputHighDensity0086Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30086)
)
alarmInputHighDensity0086Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0086Alarm.setStatus(
        ""
    )

alarmInputHighDensity0087Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30087)
)
alarmInputHighDensity0087Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0087Alarm.setStatus(
        ""
    )

alarmInputHighDensity0088Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30088)
)
alarmInputHighDensity0088Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0088Alarm.setStatus(
        ""
    )

alarmInputHighDensity0089Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30089)
)
alarmInputHighDensity0089Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0089Alarm.setStatus(
        ""
    )

alarmInputHighDensity0090Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30090)
)
alarmInputHighDensity0090Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0090Alarm.setStatus(
        ""
    )

alarmInputHighDensity0091Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30091)
)
alarmInputHighDensity0091Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0091Alarm.setStatus(
        ""
    )

alarmInputHighDensity0092Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30092)
)
alarmInputHighDensity0092Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0092Alarm.setStatus(
        ""
    )

alarmInputHighDensity0093Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30093)
)
alarmInputHighDensity0093Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0093Alarm.setStatus(
        ""
    )

alarmInputHighDensity0094Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30094)
)
alarmInputHighDensity0094Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0094Alarm.setStatus(
        ""
    )

alarmInputHighDensity0095Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30095)
)
alarmInputHighDensity0095Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0095Alarm.setStatus(
        ""
    )

alarmInputHighDensity0096Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30096)
)
alarmInputHighDensity0096Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0096Alarm.setStatus(
        ""
    )

alarmInputHighDensity0097Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30097)
)
alarmInputHighDensity0097Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0097Alarm.setStatus(
        ""
    )

alarmInputHighDensity0098Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30098)
)
alarmInputHighDensity0098Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0098Alarm.setStatus(
        ""
    )

alarmInputHighDensity0099Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30099)
)
alarmInputHighDensity0099Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0099Alarm.setStatus(
        ""
    )

alarmInputHighDensity0100Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30100)
)
alarmInputHighDensity0100Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0100Alarm.setStatus(
        ""
    )

alarmInputHighDensity0101Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30101)
)
alarmInputHighDensity0101Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0101Alarm.setStatus(
        ""
    )

alarmInputHighDensity0102Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30102)
)
alarmInputHighDensity0102Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0102Alarm.setStatus(
        ""
    )

alarmInputHighDensity0103Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30103)
)
alarmInputHighDensity0103Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0103Alarm.setStatus(
        ""
    )

alarmInputHighDensity0104Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30104)
)
alarmInputHighDensity0104Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0104Alarm.setStatus(
        ""
    )

alarmInputHighDensity0105Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30105)
)
alarmInputHighDensity0105Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0105Alarm.setStatus(
        ""
    )

alarmInputHighDensity0106Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30106)
)
alarmInputHighDensity0106Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0106Alarm.setStatus(
        ""
    )

alarmInputHighDensity0107Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30107)
)
alarmInputHighDensity0107Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0107Alarm.setStatus(
        ""
    )

alarmInputHighDensity0108Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30108)
)
alarmInputHighDensity0108Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0108Alarm.setStatus(
        ""
    )

alarmInputHighDensity0109Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30109)
)
alarmInputHighDensity0109Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0109Alarm.setStatus(
        ""
    )

alarmInputHighDensity0110Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30110)
)
alarmInputHighDensity0110Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0110Alarm.setStatus(
        ""
    )

alarmInputHighDensity0111Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30111)
)
alarmInputHighDensity0111Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0111Alarm.setStatus(
        ""
    )

alarmInputHighDensity0112Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30112)
)
alarmInputHighDensity0112Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0112Alarm.setStatus(
        ""
    )

alarmInputHighDensity0113Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30113)
)
alarmInputHighDensity0113Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0113Alarm.setStatus(
        ""
    )

alarmInputHighDensity0114Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30114)
)
alarmInputHighDensity0114Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0114Alarm.setStatus(
        ""
    )

alarmInputHighDensity0115Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30115)
)
alarmInputHighDensity0115Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0115Alarm.setStatus(
        ""
    )

alarmInputHighDensity0116Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30116)
)
alarmInputHighDensity0116Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0116Alarm.setStatus(
        ""
    )

alarmInputHighDensity0117Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30117)
)
alarmInputHighDensity0117Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0117Alarm.setStatus(
        ""
    )

alarmInputHighDensity0118Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30118)
)
alarmInputHighDensity0118Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0118Alarm.setStatus(
        ""
    )

alarmInputHighDensity0119Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30119)
)
alarmInputHighDensity0119Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0119Alarm.setStatus(
        ""
    )

alarmInputHighDensity0120Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30120)
)
alarmInputHighDensity0120Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0120Alarm.setStatus(
        ""
    )

alarmInputHighDensity0121Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30121)
)
alarmInputHighDensity0121Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0121Alarm.setStatus(
        ""
    )

alarmInputHighDensity0122Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30122)
)
alarmInputHighDensity0122Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0122Alarm.setStatus(
        ""
    )

alarmInputHighDensity0123Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30123)
)
alarmInputHighDensity0123Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0123Alarm.setStatus(
        ""
    )

alarmInputHighDensity0124Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30124)
)
alarmInputHighDensity0124Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0124Alarm.setStatus(
        ""
    )

alarmInputHighDensity0125Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30125)
)
alarmInputHighDensity0125Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0125Alarm.setStatus(
        ""
    )

alarmInputHighDensity0126Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30126)
)
alarmInputHighDensity0126Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0126Alarm.setStatus(
        ""
    )

alarmInputHighDensity0127Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30127)
)
alarmInputHighDensity0127Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0127Alarm.setStatus(
        ""
    )

alarmInputHighDensity0128Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30128)
)
alarmInputHighDensity0128Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0128Alarm.setStatus(
        ""
    )

alarmInputHighDensity0129Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30129)
)
alarmInputHighDensity0129Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0129Alarm.setStatus(
        ""
    )

alarmInputHighDensity0130Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30130)
)
alarmInputHighDensity0130Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0130Alarm.setStatus(
        ""
    )

alarmInputHighDensity0131Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30131)
)
alarmInputHighDensity0131Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0131Alarm.setStatus(
        ""
    )

alarmInputHighDensity0132Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30132)
)
alarmInputHighDensity0132Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0132Alarm.setStatus(
        ""
    )

alarmInputHighDensity0133Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30133)
)
alarmInputHighDensity0133Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0133Alarm.setStatus(
        ""
    )

alarmInputHighDensity0134Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30134)
)
alarmInputHighDensity0134Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0134Alarm.setStatus(
        ""
    )

alarmInputHighDensity0135Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30135)
)
alarmInputHighDensity0135Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0135Alarm.setStatus(
        ""
    )

alarmInputHighDensity0136Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30136)
)
alarmInputHighDensity0136Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0136Alarm.setStatus(
        ""
    )

alarmInputHighDensity0137Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30137)
)
alarmInputHighDensity0137Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0137Alarm.setStatus(
        ""
    )

alarmInputHighDensity0138Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30138)
)
alarmInputHighDensity0138Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0138Alarm.setStatus(
        ""
    )

alarmInputHighDensity0139Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30139)
)
alarmInputHighDensity0139Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0139Alarm.setStatus(
        ""
    )

alarmInputHighDensity0140Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30140)
)
alarmInputHighDensity0140Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0140Alarm.setStatus(
        ""
    )

alarmInputHighDensity0141Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30141)
)
alarmInputHighDensity0141Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0141Alarm.setStatus(
        ""
    )

alarmInputHighDensity0142Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30142)
)
alarmInputHighDensity0142Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0142Alarm.setStatus(
        ""
    )

alarmInputHighDensity0143Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30143)
)
alarmInputHighDensity0143Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0143Alarm.setStatus(
        ""
    )

alarmInputHighDensity0144Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30144)
)
alarmInputHighDensity0144Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0144Alarm.setStatus(
        ""
    )

alarmInputHighDensity0145Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30145)
)
alarmInputHighDensity0145Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0145Alarm.setStatus(
        ""
    )

alarmInputHighDensity0146Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30146)
)
alarmInputHighDensity0146Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0146Alarm.setStatus(
        ""
    )

alarmInputHighDensity0147Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30147)
)
alarmInputHighDensity0147Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0147Alarm.setStatus(
        ""
    )

alarmInputHighDensity0148Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30148)
)
alarmInputHighDensity0148Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0148Alarm.setStatus(
        ""
    )

alarmInputHighDensity0149Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30149)
)
alarmInputHighDensity0149Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0149Alarm.setStatus(
        ""
    )

alarmInputHighDensity0150Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30150)
)
alarmInputHighDensity0150Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0150Alarm.setStatus(
        ""
    )

alarmInputHighDensity0151Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30151)
)
alarmInputHighDensity0151Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0151Alarm.setStatus(
        ""
    )

alarmInputHighDensity0152Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30152)
)
alarmInputHighDensity0152Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0152Alarm.setStatus(
        ""
    )

alarmInputHighDensity0153Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30153)
)
alarmInputHighDensity0153Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0153Alarm.setStatus(
        ""
    )

alarmInputHighDensity0154Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30154)
)
alarmInputHighDensity0154Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0154Alarm.setStatus(
        ""
    )

alarmInputHighDensity0155Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30155)
)
alarmInputHighDensity0155Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0155Alarm.setStatus(
        ""
    )

alarmInputHighDensity0156Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30156)
)
alarmInputHighDensity0156Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0156Alarm.setStatus(
        ""
    )

alarmInputHighDensity0157Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30157)
)
alarmInputHighDensity0157Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0157Alarm.setStatus(
        ""
    )

alarmInputHighDensity0158Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30158)
)
alarmInputHighDensity0158Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0158Alarm.setStatus(
        ""
    )

alarmInputHighDensity0159Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30159)
)
alarmInputHighDensity0159Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0159Alarm.setStatus(
        ""
    )

alarmInputHighDensity0160Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30160)
)
alarmInputHighDensity0160Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0160Alarm.setStatus(
        ""
    )

alarmInputHighDensity0161Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30161)
)
alarmInputHighDensity0161Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0161Alarm.setStatus(
        ""
    )

alarmInputHighDensity0162Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30162)
)
alarmInputHighDensity0162Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0162Alarm.setStatus(
        ""
    )

alarmInputHighDensity0163Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30163)
)
alarmInputHighDensity0163Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0163Alarm.setStatus(
        ""
    )

alarmInputHighDensity0164Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30164)
)
alarmInputHighDensity0164Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0164Alarm.setStatus(
        ""
    )

alarmInputHighDensity0165Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30165)
)
alarmInputHighDensity0165Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0165Alarm.setStatus(
        ""
    )

alarmInputHighDensity0166Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30166)
)
alarmInputHighDensity0166Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0166Alarm.setStatus(
        ""
    )

alarmInputHighDensity0167Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30167)
)
alarmInputHighDensity0167Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0167Alarm.setStatus(
        ""
    )

alarmInputHighDensity0168Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30168)
)
alarmInputHighDensity0168Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0168Alarm.setStatus(
        ""
    )

alarmInputHighDensity0169Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30169)
)
alarmInputHighDensity0169Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0169Alarm.setStatus(
        ""
    )

alarmInputHighDensity0170Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30170)
)
alarmInputHighDensity0170Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0170Alarm.setStatus(
        ""
    )

alarmInputHighDensity0171Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30171)
)
alarmInputHighDensity0171Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0171Alarm.setStatus(
        ""
    )

alarmInputHighDensity0172Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30172)
)
alarmInputHighDensity0172Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0172Alarm.setStatus(
        ""
    )

alarmInputHighDensity0173Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30173)
)
alarmInputHighDensity0173Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0173Alarm.setStatus(
        ""
    )

alarmInputHighDensity0174Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30174)
)
alarmInputHighDensity0174Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0174Alarm.setStatus(
        ""
    )

alarmInputHighDensity0175Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30175)
)
alarmInputHighDensity0175Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0175Alarm.setStatus(
        ""
    )

alarmInputHighDensity0176Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30176)
)
alarmInputHighDensity0176Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0176Alarm.setStatus(
        ""
    )

alarmInputHighDensity0177Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30177)
)
alarmInputHighDensity0177Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0177Alarm.setStatus(
        ""
    )

alarmInputHighDensity0178Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30178)
)
alarmInputHighDensity0178Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0178Alarm.setStatus(
        ""
    )

alarmInputHighDensity0179Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30179)
)
alarmInputHighDensity0179Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0179Alarm.setStatus(
        ""
    )

alarmInputHighDensity0180Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30180)
)
alarmInputHighDensity0180Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0180Alarm.setStatus(
        ""
    )

alarmInputHighDensity0181Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30181)
)
alarmInputHighDensity0181Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0181Alarm.setStatus(
        ""
    )

alarmInputHighDensity0182Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30182)
)
alarmInputHighDensity0182Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0182Alarm.setStatus(
        ""
    )

alarmInputHighDensity0183Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30183)
)
alarmInputHighDensity0183Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0183Alarm.setStatus(
        ""
    )

alarmInputHighDensity0184Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30184)
)
alarmInputHighDensity0184Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0184Alarm.setStatus(
        ""
    )

alarmInputHighDensity0185Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30185)
)
alarmInputHighDensity0185Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0185Alarm.setStatus(
        ""
    )

alarmInputHighDensity0186Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30186)
)
alarmInputHighDensity0186Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0186Alarm.setStatus(
        ""
    )

alarmInputHighDensity0187Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30187)
)
alarmInputHighDensity0187Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0187Alarm.setStatus(
        ""
    )

alarmInputHighDensity0188Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30188)
)
alarmInputHighDensity0188Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0188Alarm.setStatus(
        ""
    )

alarmInputHighDensity0189Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30189)
)
alarmInputHighDensity0189Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0189Alarm.setStatus(
        ""
    )

alarmInputHighDensity0190Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30190)
)
alarmInputHighDensity0190Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0190Alarm.setStatus(
        ""
    )

alarmInputHighDensity0191Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30191)
)
alarmInputHighDensity0191Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0191Alarm.setStatus(
        ""
    )

alarmInputHighDensity0192Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30192)
)
alarmInputHighDensity0192Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0192Alarm.setStatus(
        ""
    )

alarmInputHighDensity0193Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30193)
)
alarmInputHighDensity0193Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0193Alarm.setStatus(
        ""
    )

alarmInputHighDensity0194Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30194)
)
alarmInputHighDensity0194Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0194Alarm.setStatus(
        ""
    )

alarmInputHighDensity0195Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30195)
)
alarmInputHighDensity0195Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0195Alarm.setStatus(
        ""
    )

alarmInputHighDensity0196Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30196)
)
alarmInputHighDensity0196Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0196Alarm.setStatus(
        ""
    )

alarmInputHighDensity0197Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30197)
)
alarmInputHighDensity0197Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0197Alarm.setStatus(
        ""
    )

alarmInputHighDensity0198Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30198)
)
alarmInputHighDensity0198Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0198Alarm.setStatus(
        ""
    )

alarmInputHighDensity0199Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30199)
)
alarmInputHighDensity0199Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0199Alarm.setStatus(
        ""
    )

alarmInputHighDensity0200Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30200)
)
alarmInputHighDensity0200Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0200Alarm.setStatus(
        ""
    )

alarmInputHighDensity0201Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30201)
)
alarmInputHighDensity0201Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0201Alarm.setStatus(
        ""
    )

alarmInputHighDensity0202Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30202)
)
alarmInputHighDensity0202Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0202Alarm.setStatus(
        ""
    )

alarmInputHighDensity0203Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30203)
)
alarmInputHighDensity0203Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0203Alarm.setStatus(
        ""
    )

alarmInputHighDensity0204Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30204)
)
alarmInputHighDensity0204Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0204Alarm.setStatus(
        ""
    )

alarmInputHighDensity0205Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30205)
)
alarmInputHighDensity0205Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0205Alarm.setStatus(
        ""
    )

alarmInputHighDensity0206Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30206)
)
alarmInputHighDensity0206Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0206Alarm.setStatus(
        ""
    )

alarmInputHighDensity0207Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30207)
)
alarmInputHighDensity0207Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0207Alarm.setStatus(
        ""
    )

alarmInputHighDensity0208Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30208)
)
alarmInputHighDensity0208Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0208Alarm.setStatus(
        ""
    )

alarmInputHighDensity0209Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30209)
)
alarmInputHighDensity0209Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0209Alarm.setStatus(
        ""
    )

alarmInputHighDensity0210Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30210)
)
alarmInputHighDensity0210Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0210Alarm.setStatus(
        ""
    )

alarmInputHighDensity0211Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30211)
)
alarmInputHighDensity0211Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0211Alarm.setStatus(
        ""
    )

alarmInputHighDensity0212Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30212)
)
alarmInputHighDensity0212Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0212Alarm.setStatus(
        ""
    )

alarmInputHighDensity0213Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30213)
)
alarmInputHighDensity0213Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0213Alarm.setStatus(
        ""
    )

alarmInputHighDensity0214Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30214)
)
alarmInputHighDensity0214Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0214Alarm.setStatus(
        ""
    )

alarmInputHighDensity0215Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30215)
)
alarmInputHighDensity0215Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0215Alarm.setStatus(
        ""
    )

alarmInputHighDensity0216Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30216)
)
alarmInputHighDensity0216Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0216Alarm.setStatus(
        ""
    )

alarmInputHighDensity0217Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30217)
)
alarmInputHighDensity0217Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0217Alarm.setStatus(
        ""
    )

alarmInputHighDensity0218Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30218)
)
alarmInputHighDensity0218Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0218Alarm.setStatus(
        ""
    )

alarmInputHighDensity0219Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30219)
)
alarmInputHighDensity0219Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0219Alarm.setStatus(
        ""
    )

alarmInputHighDensity0220Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30220)
)
alarmInputHighDensity0220Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0220Alarm.setStatus(
        ""
    )

alarmInputHighDensity0221Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30221)
)
alarmInputHighDensity0221Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0221Alarm.setStatus(
        ""
    )

alarmInputHighDensity0222Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30222)
)
alarmInputHighDensity0222Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0222Alarm.setStatus(
        ""
    )

alarmInputHighDensity0223Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30223)
)
alarmInputHighDensity0223Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0223Alarm.setStatus(
        ""
    )

alarmInputHighDensity0224Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30224)
)
alarmInputHighDensity0224Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0224Alarm.setStatus(
        ""
    )

alarmInputHighDensity0225Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30225)
)
alarmInputHighDensity0225Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0225Alarm.setStatus(
        ""
    )

alarmInputHighDensity0226Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30226)
)
alarmInputHighDensity0226Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0226Alarm.setStatus(
        ""
    )

alarmInputHighDensity0227Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30227)
)
alarmInputHighDensity0227Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0227Alarm.setStatus(
        ""
    )

alarmInputHighDensity0228Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30228)
)
alarmInputHighDensity0228Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0228Alarm.setStatus(
        ""
    )

alarmInputHighDensity0229Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30229)
)
alarmInputHighDensity0229Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0229Alarm.setStatus(
        ""
    )

alarmInputHighDensity0230Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30230)
)
alarmInputHighDensity0230Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0230Alarm.setStatus(
        ""
    )

alarmInputHighDensity0231Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30231)
)
alarmInputHighDensity0231Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0231Alarm.setStatus(
        ""
    )

alarmInputHighDensity0232Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30232)
)
alarmInputHighDensity0232Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0232Alarm.setStatus(
        ""
    )

alarmInputHighDensity0233Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30233)
)
alarmInputHighDensity0233Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0233Alarm.setStatus(
        ""
    )

alarmInputHighDensity0234Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30234)
)
alarmInputHighDensity0234Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0234Alarm.setStatus(
        ""
    )

alarmInputHighDensity0235Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30235)
)
alarmInputHighDensity0235Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0235Alarm.setStatus(
        ""
    )

alarmInputHighDensity0236Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30236)
)
alarmInputHighDensity0236Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0236Alarm.setStatus(
        ""
    )

alarmInputHighDensity0237Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30237)
)
alarmInputHighDensity0237Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0237Alarm.setStatus(
        ""
    )

alarmInputHighDensity0238Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30238)
)
alarmInputHighDensity0238Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0238Alarm.setStatus(
        ""
    )

alarmInputHighDensity0239Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30239)
)
alarmInputHighDensity0239Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0239Alarm.setStatus(
        ""
    )

alarmInputHighDensity0240Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30240)
)
alarmInputHighDensity0240Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0240Alarm.setStatus(
        ""
    )

alarmInputHighDensity0241Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30241)
)
alarmInputHighDensity0241Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0241Alarm.setStatus(
        ""
    )

alarmInputHighDensity0242Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30242)
)
alarmInputHighDensity0242Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0242Alarm.setStatus(
        ""
    )

alarmInputHighDensity0243Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30243)
)
alarmInputHighDensity0243Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0243Alarm.setStatus(
        ""
    )

alarmInputHighDensity0244Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30244)
)
alarmInputHighDensity0244Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0244Alarm.setStatus(
        ""
    )

alarmInputHighDensity0245Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30245)
)
alarmInputHighDensity0245Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0245Alarm.setStatus(
        ""
    )

alarmInputHighDensity0246Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30246)
)
alarmInputHighDensity0246Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0246Alarm.setStatus(
        ""
    )

alarmInputHighDensity0247Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30247)
)
alarmInputHighDensity0247Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0247Alarm.setStatus(
        ""
    )

alarmInputHighDensity0248Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30248)
)
alarmInputHighDensity0248Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0248Alarm.setStatus(
        ""
    )

alarmInputHighDensity0249Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30249)
)
alarmInputHighDensity0249Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0249Alarm.setStatus(
        ""
    )

alarmInputHighDensity0250Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30250)
)
alarmInputHighDensity0250Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0250Alarm.setStatus(
        ""
    )

alarmInputHighDensity0251Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30251)
)
alarmInputHighDensity0251Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0251Alarm.setStatus(
        ""
    )

alarmInputHighDensity0252Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30252)
)
alarmInputHighDensity0252Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0252Alarm.setStatus(
        ""
    )

alarmInputHighDensity0253Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30253)
)
alarmInputHighDensity0253Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0253Alarm.setStatus(
        ""
    )

alarmInputHighDensity0254Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30254)
)
alarmInputHighDensity0254Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0254Alarm.setStatus(
        ""
    )

alarmInputHighDensity0255Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30255)
)
alarmInputHighDensity0255Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0255Alarm.setStatus(
        ""
    )

alarmInputHighDensity0256Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30256)
)
alarmInputHighDensity0256Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0256Alarm.setStatus(
        ""
    )

alarmInputHighDensity0257Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30257)
)
alarmInputHighDensity0257Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0257Alarm.setStatus(
        ""
    )

alarmInputHighDensity0258Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30258)
)
alarmInputHighDensity0258Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0258Alarm.setStatus(
        ""
    )

alarmInputHighDensity0259Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30259)
)
alarmInputHighDensity0259Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0259Alarm.setStatus(
        ""
    )

alarmInputHighDensity0260Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30260)
)
alarmInputHighDensity0260Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0260Alarm.setStatus(
        ""
    )

alarmInputHighDensity0261Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30261)
)
alarmInputHighDensity0261Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0261Alarm.setStatus(
        ""
    )

alarmInputHighDensity0262Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30262)
)
alarmInputHighDensity0262Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0262Alarm.setStatus(
        ""
    )

alarmInputHighDensity0263Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30263)
)
alarmInputHighDensity0263Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0263Alarm.setStatus(
        ""
    )

alarmInputHighDensity0264Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30264)
)
alarmInputHighDensity0264Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0264Alarm.setStatus(
        ""
    )

alarmInputHighDensity0265Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30265)
)
alarmInputHighDensity0265Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0265Alarm.setStatus(
        ""
    )

alarmInputHighDensity0266Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30266)
)
alarmInputHighDensity0266Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0266Alarm.setStatus(
        ""
    )

alarmInputHighDensity0267Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30267)
)
alarmInputHighDensity0267Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0267Alarm.setStatus(
        ""
    )

alarmInputHighDensity0268Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30268)
)
alarmInputHighDensity0268Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0268Alarm.setStatus(
        ""
    )

alarmInputHighDensity0269Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30269)
)
alarmInputHighDensity0269Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0269Alarm.setStatus(
        ""
    )

alarmInputHighDensity0270Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30270)
)
alarmInputHighDensity0270Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0270Alarm.setStatus(
        ""
    )

alarmInputHighDensity0271Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30271)
)
alarmInputHighDensity0271Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0271Alarm.setStatus(
        ""
    )

alarmInputHighDensity0272Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30272)
)
alarmInputHighDensity0272Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0272Alarm.setStatus(
        ""
    )

alarmInputHighDensity0273Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30273)
)
alarmInputHighDensity0273Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0273Alarm.setStatus(
        ""
    )

alarmInputHighDensity0274Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30274)
)
alarmInputHighDensity0274Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0274Alarm.setStatus(
        ""
    )

alarmInputHighDensity0275Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30275)
)
alarmInputHighDensity0275Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0275Alarm.setStatus(
        ""
    )

alarmInputHighDensity0276Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30276)
)
alarmInputHighDensity0276Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0276Alarm.setStatus(
        ""
    )

alarmInputHighDensity0277Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30277)
)
alarmInputHighDensity0277Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0277Alarm.setStatus(
        ""
    )

alarmInputHighDensity0278Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30278)
)
alarmInputHighDensity0278Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0278Alarm.setStatus(
        ""
    )

alarmInputHighDensity0279Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30279)
)
alarmInputHighDensity0279Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0279Alarm.setStatus(
        ""
    )

alarmInputHighDensity0280Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30280)
)
alarmInputHighDensity0280Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0280Alarm.setStatus(
        ""
    )

alarmInputHighDensity0281Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30281)
)
alarmInputHighDensity0281Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0281Alarm.setStatus(
        ""
    )

alarmInputHighDensity0282Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30282)
)
alarmInputHighDensity0282Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0282Alarm.setStatus(
        ""
    )

alarmInputHighDensity0283Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30283)
)
alarmInputHighDensity0283Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0283Alarm.setStatus(
        ""
    )

alarmInputHighDensity0284Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30284)
)
alarmInputHighDensity0284Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0284Alarm.setStatus(
        ""
    )

alarmInputHighDensity0285Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30285)
)
alarmInputHighDensity0285Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0285Alarm.setStatus(
        ""
    )

alarmInputHighDensity0286Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30286)
)
alarmInputHighDensity0286Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0286Alarm.setStatus(
        ""
    )

alarmInputHighDensity0287Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30287)
)
alarmInputHighDensity0287Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0287Alarm.setStatus(
        ""
    )

alarmInputHighDensity0288Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30288)
)
alarmInputHighDensity0288Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0288Alarm.setStatus(
        ""
    )

alarmInputHighDensity0289Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30289)
)
alarmInputHighDensity0289Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0289Alarm.setStatus(
        ""
    )

alarmInputHighDensity0290Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30290)
)
alarmInputHighDensity0290Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0290Alarm.setStatus(
        ""
    )

alarmInputHighDensity0291Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30291)
)
alarmInputHighDensity0291Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0291Alarm.setStatus(
        ""
    )

alarmInputHighDensity0292Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30292)
)
alarmInputHighDensity0292Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0292Alarm.setStatus(
        ""
    )

alarmInputHighDensity0293Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30293)
)
alarmInputHighDensity0293Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0293Alarm.setStatus(
        ""
    )

alarmInputHighDensity0294Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30294)
)
alarmInputHighDensity0294Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0294Alarm.setStatus(
        ""
    )

alarmInputHighDensity0295Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30295)
)
alarmInputHighDensity0295Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0295Alarm.setStatus(
        ""
    )

alarmInputHighDensity0296Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30296)
)
alarmInputHighDensity0296Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0296Alarm.setStatus(
        ""
    )

alarmInputHighDensity0297Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30297)
)
alarmInputHighDensity0297Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0297Alarm.setStatus(
        ""
    )

alarmInputHighDensity0298Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30298)
)
alarmInputHighDensity0298Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0298Alarm.setStatus(
        ""
    )

alarmInputHighDensity0299Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30299)
)
alarmInputHighDensity0299Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0299Alarm.setStatus(
        ""
    )

alarmInputHighDensity0300Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30300)
)
alarmInputHighDensity0300Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0300Alarm.setStatus(
        ""
    )

alarmInputHighDensity0301Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30301)
)
alarmInputHighDensity0301Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0301Alarm.setStatus(
        ""
    )

alarmInputHighDensity0302Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30302)
)
alarmInputHighDensity0302Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0302Alarm.setStatus(
        ""
    )

alarmInputHighDensity0303Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30303)
)
alarmInputHighDensity0303Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0303Alarm.setStatus(
        ""
    )

alarmInputHighDensity0304Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30304)
)
alarmInputHighDensity0304Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0304Alarm.setStatus(
        ""
    )

alarmInputHighDensity0305Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30305)
)
alarmInputHighDensity0305Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0305Alarm.setStatus(
        ""
    )

alarmInputHighDensity0306Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30306)
)
alarmInputHighDensity0306Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0306Alarm.setStatus(
        ""
    )

alarmInputHighDensity0307Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30307)
)
alarmInputHighDensity0307Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0307Alarm.setStatus(
        ""
    )

alarmInputHighDensity0308Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30308)
)
alarmInputHighDensity0308Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0308Alarm.setStatus(
        ""
    )

alarmInputHighDensity0309Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30309)
)
alarmInputHighDensity0309Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0309Alarm.setStatus(
        ""
    )

alarmInputHighDensity0310Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30310)
)
alarmInputHighDensity0310Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0310Alarm.setStatus(
        ""
    )

alarmInputHighDensity0311Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30311)
)
alarmInputHighDensity0311Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0311Alarm.setStatus(
        ""
    )

alarmInputHighDensity0312Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30312)
)
alarmInputHighDensity0312Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0312Alarm.setStatus(
        ""
    )

alarmInputHighDensity0313Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30313)
)
alarmInputHighDensity0313Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0313Alarm.setStatus(
        ""
    )

alarmInputHighDensity0314Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30314)
)
alarmInputHighDensity0314Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0314Alarm.setStatus(
        ""
    )

alarmInputHighDensity0315Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30315)
)
alarmInputHighDensity0315Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0315Alarm.setStatus(
        ""
    )

alarmInputHighDensity0316Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30316)
)
alarmInputHighDensity0316Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0316Alarm.setStatus(
        ""
    )

alarmInputHighDensity0317Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30317)
)
alarmInputHighDensity0317Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0317Alarm.setStatus(
        ""
    )

alarmInputHighDensity0318Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30318)
)
alarmInputHighDensity0318Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0318Alarm.setStatus(
        ""
    )

alarmInputHighDensity0319Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30319)
)
alarmInputHighDensity0319Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0319Alarm.setStatus(
        ""
    )

alarmInputHighDensity0320Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30320)
)
alarmInputHighDensity0320Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0320Alarm.setStatus(
        ""
    )

alarmInputHighDensity0321Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30321)
)
alarmInputHighDensity0321Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0321Alarm.setStatus(
        ""
    )

alarmInputHighDensity0322Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30322)
)
alarmInputHighDensity0322Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0322Alarm.setStatus(
        ""
    )

alarmInputHighDensity0323Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30323)
)
alarmInputHighDensity0323Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0323Alarm.setStatus(
        ""
    )

alarmInputHighDensity0324Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30324)
)
alarmInputHighDensity0324Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0324Alarm.setStatus(
        ""
    )

alarmInputHighDensity0325Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30325)
)
alarmInputHighDensity0325Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0325Alarm.setStatus(
        ""
    )

alarmInputHighDensity0326Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30326)
)
alarmInputHighDensity0326Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0326Alarm.setStatus(
        ""
    )

alarmInputHighDensity0327Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30327)
)
alarmInputHighDensity0327Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0327Alarm.setStatus(
        ""
    )

alarmInputHighDensity0328Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30328)
)
alarmInputHighDensity0328Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0328Alarm.setStatus(
        ""
    )

alarmInputHighDensity0329Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30329)
)
alarmInputHighDensity0329Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0329Alarm.setStatus(
        ""
    )

alarmInputHighDensity0330Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30330)
)
alarmInputHighDensity0330Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0330Alarm.setStatus(
        ""
    )

alarmInputHighDensity0331Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30331)
)
alarmInputHighDensity0331Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0331Alarm.setStatus(
        ""
    )

alarmInputHighDensity0332Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30332)
)
alarmInputHighDensity0332Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0332Alarm.setStatus(
        ""
    )

alarmInputHighDensity0333Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30333)
)
alarmInputHighDensity0333Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0333Alarm.setStatus(
        ""
    )

alarmInputHighDensity0334Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30334)
)
alarmInputHighDensity0334Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0334Alarm.setStatus(
        ""
    )

alarmInputHighDensity0335Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30335)
)
alarmInputHighDensity0335Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0335Alarm.setStatus(
        ""
    )

alarmInputHighDensity0336Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30336)
)
alarmInputHighDensity0336Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0336Alarm.setStatus(
        ""
    )

alarmInputHighDensity0337Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30337)
)
alarmInputHighDensity0337Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0337Alarm.setStatus(
        ""
    )

alarmInputHighDensity0338Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30338)
)
alarmInputHighDensity0338Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0338Alarm.setStatus(
        ""
    )

alarmInputHighDensity0339Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30339)
)
alarmInputHighDensity0339Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0339Alarm.setStatus(
        ""
    )

alarmInputHighDensity0340Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30340)
)
alarmInputHighDensity0340Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0340Alarm.setStatus(
        ""
    )

alarmInputHighDensity0341Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30341)
)
alarmInputHighDensity0341Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0341Alarm.setStatus(
        ""
    )

alarmInputHighDensity0342Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30342)
)
alarmInputHighDensity0342Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0342Alarm.setStatus(
        ""
    )

alarmInputHighDensity0343Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30343)
)
alarmInputHighDensity0343Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0343Alarm.setStatus(
        ""
    )

alarmInputHighDensity0344Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30344)
)
alarmInputHighDensity0344Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0344Alarm.setStatus(
        ""
    )

alarmInputHighDensity0345Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30345)
)
alarmInputHighDensity0345Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0345Alarm.setStatus(
        ""
    )

alarmInputHighDensity0346Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30346)
)
alarmInputHighDensity0346Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0346Alarm.setStatus(
        ""
    )

alarmInputHighDensity0347Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30347)
)
alarmInputHighDensity0347Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0347Alarm.setStatus(
        ""
    )

alarmInputHighDensity0348Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30348)
)
alarmInputHighDensity0348Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0348Alarm.setStatus(
        ""
    )

alarmInputHighDensity0349Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30349)
)
alarmInputHighDensity0349Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0349Alarm.setStatus(
        ""
    )

alarmInputHighDensity0350Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30350)
)
alarmInputHighDensity0350Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0350Alarm.setStatus(
        ""
    )

alarmInputHighDensity0351Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30351)
)
alarmInputHighDensity0351Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0351Alarm.setStatus(
        ""
    )

alarmInputHighDensity0352Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30352)
)
alarmInputHighDensity0352Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0352Alarm.setStatus(
        ""
    )

alarmInputHighDensity0353Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30353)
)
alarmInputHighDensity0353Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0353Alarm.setStatus(
        ""
    )

alarmInputHighDensity0354Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30354)
)
alarmInputHighDensity0354Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0354Alarm.setStatus(
        ""
    )

alarmInputHighDensity0355Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30355)
)
alarmInputHighDensity0355Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0355Alarm.setStatus(
        ""
    )

alarmInputHighDensity0356Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30356)
)
alarmInputHighDensity0356Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0356Alarm.setStatus(
        ""
    )

alarmInputHighDensity0357Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30357)
)
alarmInputHighDensity0357Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0357Alarm.setStatus(
        ""
    )

alarmInputHighDensity0358Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30358)
)
alarmInputHighDensity0358Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0358Alarm.setStatus(
        ""
    )

alarmInputHighDensity0359Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30359)
)
alarmInputHighDensity0359Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0359Alarm.setStatus(
        ""
    )

alarmInputHighDensity0360Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30360)
)
alarmInputHighDensity0360Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0360Alarm.setStatus(
        ""
    )

alarmInputHighDensity0361Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30361)
)
alarmInputHighDensity0361Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0361Alarm.setStatus(
        ""
    )

alarmInputHighDensity0362Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30362)
)
alarmInputHighDensity0362Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0362Alarm.setStatus(
        ""
    )

alarmInputHighDensity0363Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30363)
)
alarmInputHighDensity0363Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0363Alarm.setStatus(
        ""
    )

alarmInputHighDensity0364Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30364)
)
alarmInputHighDensity0364Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0364Alarm.setStatus(
        ""
    )

alarmInputHighDensity0365Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30365)
)
alarmInputHighDensity0365Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0365Alarm.setStatus(
        ""
    )

alarmInputHighDensity0366Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30366)
)
alarmInputHighDensity0366Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0366Alarm.setStatus(
        ""
    )

alarmInputHighDensity0367Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30367)
)
alarmInputHighDensity0367Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0367Alarm.setStatus(
        ""
    )

alarmInputHighDensity0368Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30368)
)
alarmInputHighDensity0368Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0368Alarm.setStatus(
        ""
    )

alarmInputHighDensity0369Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30369)
)
alarmInputHighDensity0369Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0369Alarm.setStatus(
        ""
    )

alarmInputHighDensity0370Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30370)
)
alarmInputHighDensity0370Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0370Alarm.setStatus(
        ""
    )

alarmInputHighDensity0371Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30371)
)
alarmInputHighDensity0371Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0371Alarm.setStatus(
        ""
    )

alarmInputHighDensity0372Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30372)
)
alarmInputHighDensity0372Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0372Alarm.setStatus(
        ""
    )

alarmInputHighDensity0373Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30373)
)
alarmInputHighDensity0373Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0373Alarm.setStatus(
        ""
    )

alarmInputHighDensity0374Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30374)
)
alarmInputHighDensity0374Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0374Alarm.setStatus(
        ""
    )

alarmInputHighDensity0375Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30375)
)
alarmInputHighDensity0375Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0375Alarm.setStatus(
        ""
    )

alarmInputHighDensity0376Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30376)
)
alarmInputHighDensity0376Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0376Alarm.setStatus(
        ""
    )

alarmInputHighDensity0377Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30377)
)
alarmInputHighDensity0377Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0377Alarm.setStatus(
        ""
    )

alarmInputHighDensity0378Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30378)
)
alarmInputHighDensity0378Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0378Alarm.setStatus(
        ""
    )

alarmInputHighDensity0379Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30379)
)
alarmInputHighDensity0379Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0379Alarm.setStatus(
        ""
    )

alarmInputHighDensity0380Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30380)
)
alarmInputHighDensity0380Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0380Alarm.setStatus(
        ""
    )

alarmInputHighDensity0381Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30381)
)
alarmInputHighDensity0381Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0381Alarm.setStatus(
        ""
    )

alarmInputHighDensity0382Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30382)
)
alarmInputHighDensity0382Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0382Alarm.setStatus(
        ""
    )

alarmInputHighDensity0383Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30383)
)
alarmInputHighDensity0383Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0383Alarm.setStatus(
        ""
    )

alarmInputHighDensity0384Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 30384)
)
alarmInputHighDensity0384Alarm.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0384Alarm.setStatus(
        ""
    )

alarmInputHighDensity0001Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40001)
)
alarmInputHighDensity0001Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0001Normal.setStatus(
        ""
    )

alarmInputHighDensity0002Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40002)
)
alarmInputHighDensity0002Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0002Normal.setStatus(
        ""
    )

alarmInputHighDensity0003Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40003)
)
alarmInputHighDensity0003Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0003Normal.setStatus(
        ""
    )

alarmInputHighDensity0004Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40004)
)
alarmInputHighDensity0004Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0004Normal.setStatus(
        ""
    )

alarmInputHighDensity0005Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40005)
)
alarmInputHighDensity0005Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0005Normal.setStatus(
        ""
    )

alarmInputHighDensity0006Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40006)
)
alarmInputHighDensity0006Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0006Normal.setStatus(
        ""
    )

alarmInputHighDensity0007Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40007)
)
alarmInputHighDensity0007Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0007Normal.setStatus(
        ""
    )

alarmInputHighDensity0008Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40008)
)
alarmInputHighDensity0008Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0008Normal.setStatus(
        ""
    )

alarmInputHighDensity0009Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40009)
)
alarmInputHighDensity0009Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0009Normal.setStatus(
        ""
    )

alarmInputHighDensity0010Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40010)
)
alarmInputHighDensity0010Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0010Normal.setStatus(
        ""
    )

alarmInputHighDensity0011Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40011)
)
alarmInputHighDensity0011Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0011Normal.setStatus(
        ""
    )

alarmInputHighDensity0012Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40012)
)
alarmInputHighDensity0012Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0012Normal.setStatus(
        ""
    )

alarmInputHighDensity0013Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40013)
)
alarmInputHighDensity0013Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0013Normal.setStatus(
        ""
    )

alarmInputHighDensity0014Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40014)
)
alarmInputHighDensity0014Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0014Normal.setStatus(
        ""
    )

alarmInputHighDensity0015Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40015)
)
alarmInputHighDensity0015Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0015Normal.setStatus(
        ""
    )

alarmInputHighDensity0016Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40016)
)
alarmInputHighDensity0016Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0016Normal.setStatus(
        ""
    )

alarmInputHighDensity0017Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40017)
)
alarmInputHighDensity0017Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0017Normal.setStatus(
        ""
    )

alarmInputHighDensity0018Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40018)
)
alarmInputHighDensity0018Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0018Normal.setStatus(
        ""
    )

alarmInputHighDensity0019Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40019)
)
alarmInputHighDensity0019Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0019Normal.setStatus(
        ""
    )

alarmInputHighDensity0020Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40020)
)
alarmInputHighDensity0020Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0020Normal.setStatus(
        ""
    )

alarmInputHighDensity0021Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40021)
)
alarmInputHighDensity0021Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0021Normal.setStatus(
        ""
    )

alarmInputHighDensity0022Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40022)
)
alarmInputHighDensity0022Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0022Normal.setStatus(
        ""
    )

alarmInputHighDensity0023Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40023)
)
alarmInputHighDensity0023Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0023Normal.setStatus(
        ""
    )

alarmInputHighDensity0024Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40024)
)
alarmInputHighDensity0024Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0024Normal.setStatus(
        ""
    )

alarmInputHighDensity0025Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40025)
)
alarmInputHighDensity0025Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0025Normal.setStatus(
        ""
    )

alarmInputHighDensity0026Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40026)
)
alarmInputHighDensity0026Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0026Normal.setStatus(
        ""
    )

alarmInputHighDensity0027Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40027)
)
alarmInputHighDensity0027Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0027Normal.setStatus(
        ""
    )

alarmInputHighDensity0028Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40028)
)
alarmInputHighDensity0028Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0028Normal.setStatus(
        ""
    )

alarmInputHighDensity0029Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40029)
)
alarmInputHighDensity0029Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0029Normal.setStatus(
        ""
    )

alarmInputHighDensity0030Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40030)
)
alarmInputHighDensity0030Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0030Normal.setStatus(
        ""
    )

alarmInputHighDensity0031Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40031)
)
alarmInputHighDensity0031Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0031Normal.setStatus(
        ""
    )

alarmInputHighDensity0032Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40032)
)
alarmInputHighDensity0032Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0032Normal.setStatus(
        ""
    )

alarmInputHighDensity0033Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40033)
)
alarmInputHighDensity0033Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0033Normal.setStatus(
        ""
    )

alarmInputHighDensity0034Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40034)
)
alarmInputHighDensity0034Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0034Normal.setStatus(
        ""
    )

alarmInputHighDensity0035Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40035)
)
alarmInputHighDensity0035Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0035Normal.setStatus(
        ""
    )

alarmInputHighDensity0036Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40036)
)
alarmInputHighDensity0036Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0036Normal.setStatus(
        ""
    )

alarmInputHighDensity0037Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40037)
)
alarmInputHighDensity0037Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0037Normal.setStatus(
        ""
    )

alarmInputHighDensity0038Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40038)
)
alarmInputHighDensity0038Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0038Normal.setStatus(
        ""
    )

alarmInputHighDensity0039Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40039)
)
alarmInputHighDensity0039Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0039Normal.setStatus(
        ""
    )

alarmInputHighDensity0040Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40040)
)
alarmInputHighDensity0040Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0040Normal.setStatus(
        ""
    )

alarmInputHighDensity0041Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40041)
)
alarmInputHighDensity0041Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0041Normal.setStatus(
        ""
    )

alarmInputHighDensity0042Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40042)
)
alarmInputHighDensity0042Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0042Normal.setStatus(
        ""
    )

alarmInputHighDensity0043Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40043)
)
alarmInputHighDensity0043Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0043Normal.setStatus(
        ""
    )

alarmInputHighDensity0044Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40044)
)
alarmInputHighDensity0044Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0044Normal.setStatus(
        ""
    )

alarmInputHighDensity0045Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40045)
)
alarmInputHighDensity0045Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0045Normal.setStatus(
        ""
    )

alarmInputHighDensity0046Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40046)
)
alarmInputHighDensity0046Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0046Normal.setStatus(
        ""
    )

alarmInputHighDensity0047Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40047)
)
alarmInputHighDensity0047Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0047Normal.setStatus(
        ""
    )

alarmInputHighDensity0048Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40048)
)
alarmInputHighDensity0048Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0048Normal.setStatus(
        ""
    )

alarmInputHighDensity0049Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40049)
)
alarmInputHighDensity0049Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0049Normal.setStatus(
        ""
    )

alarmInputHighDensity0050Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40050)
)
alarmInputHighDensity0050Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0050Normal.setStatus(
        ""
    )

alarmInputHighDensity0051Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40051)
)
alarmInputHighDensity0051Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0051Normal.setStatus(
        ""
    )

alarmInputHighDensity0052Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40052)
)
alarmInputHighDensity0052Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0052Normal.setStatus(
        ""
    )

alarmInputHighDensity0053Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40053)
)
alarmInputHighDensity0053Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0053Normal.setStatus(
        ""
    )

alarmInputHighDensity0054Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40054)
)
alarmInputHighDensity0054Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0054Normal.setStatus(
        ""
    )

alarmInputHighDensity0055Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40055)
)
alarmInputHighDensity0055Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0055Normal.setStatus(
        ""
    )

alarmInputHighDensity0056Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40056)
)
alarmInputHighDensity0056Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0056Normal.setStatus(
        ""
    )

alarmInputHighDensity0057Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40057)
)
alarmInputHighDensity0057Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0057Normal.setStatus(
        ""
    )

alarmInputHighDensity0058Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40058)
)
alarmInputHighDensity0058Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0058Normal.setStatus(
        ""
    )

alarmInputHighDensity0059Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40059)
)
alarmInputHighDensity0059Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0059Normal.setStatus(
        ""
    )

alarmInputHighDensity0060Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40060)
)
alarmInputHighDensity0060Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0060Normal.setStatus(
        ""
    )

alarmInputHighDensity0061Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40061)
)
alarmInputHighDensity0061Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0061Normal.setStatus(
        ""
    )

alarmInputHighDensity0062Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40062)
)
alarmInputHighDensity0062Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0062Normal.setStatus(
        ""
    )

alarmInputHighDensity0063Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40063)
)
alarmInputHighDensity0063Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0063Normal.setStatus(
        ""
    )

alarmInputHighDensity0064Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40064)
)
alarmInputHighDensity0064Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0064Normal.setStatus(
        ""
    )

alarmInputHighDensity0065Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40065)
)
alarmInputHighDensity0065Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0065Normal.setStatus(
        ""
    )

alarmInputHighDensity0066Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40066)
)
alarmInputHighDensity0066Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0066Normal.setStatus(
        ""
    )

alarmInputHighDensity0067Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40067)
)
alarmInputHighDensity0067Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0067Normal.setStatus(
        ""
    )

alarmInputHighDensity0068Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40068)
)
alarmInputHighDensity0068Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0068Normal.setStatus(
        ""
    )

alarmInputHighDensity0069Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40069)
)
alarmInputHighDensity0069Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0069Normal.setStatus(
        ""
    )

alarmInputHighDensity0070Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40070)
)
alarmInputHighDensity0070Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0070Normal.setStatus(
        ""
    )

alarmInputHighDensity0071Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40071)
)
alarmInputHighDensity0071Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0071Normal.setStatus(
        ""
    )

alarmInputHighDensity0072Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40072)
)
alarmInputHighDensity0072Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0072Normal.setStatus(
        ""
    )

alarmInputHighDensity0073Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40073)
)
alarmInputHighDensity0073Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0073Normal.setStatus(
        ""
    )

alarmInputHighDensity0074Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40074)
)
alarmInputHighDensity0074Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0074Normal.setStatus(
        ""
    )

alarmInputHighDensity0075Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40075)
)
alarmInputHighDensity0075Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0075Normal.setStatus(
        ""
    )

alarmInputHighDensity0076Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40076)
)
alarmInputHighDensity0076Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0076Normal.setStatus(
        ""
    )

alarmInputHighDensity0077Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40077)
)
alarmInputHighDensity0077Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0077Normal.setStatus(
        ""
    )

alarmInputHighDensity0078Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40078)
)
alarmInputHighDensity0078Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0078Normal.setStatus(
        ""
    )

alarmInputHighDensity0079Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40079)
)
alarmInputHighDensity0079Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0079Normal.setStatus(
        ""
    )

alarmInputHighDensity0080Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40080)
)
alarmInputHighDensity0080Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0080Normal.setStatus(
        ""
    )

alarmInputHighDensity0081Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40081)
)
alarmInputHighDensity0081Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0081Normal.setStatus(
        ""
    )

alarmInputHighDensity0082Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40082)
)
alarmInputHighDensity0082Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0082Normal.setStatus(
        ""
    )

alarmInputHighDensity0083Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40083)
)
alarmInputHighDensity0083Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0083Normal.setStatus(
        ""
    )

alarmInputHighDensity0084Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40084)
)
alarmInputHighDensity0084Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0084Normal.setStatus(
        ""
    )

alarmInputHighDensity0085Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40085)
)
alarmInputHighDensity0085Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0085Normal.setStatus(
        ""
    )

alarmInputHighDensity0086Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40086)
)
alarmInputHighDensity0086Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0086Normal.setStatus(
        ""
    )

alarmInputHighDensity0087Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40087)
)
alarmInputHighDensity0087Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0087Normal.setStatus(
        ""
    )

alarmInputHighDensity0088Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40088)
)
alarmInputHighDensity0088Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0088Normal.setStatus(
        ""
    )

alarmInputHighDensity0089Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40089)
)
alarmInputHighDensity0089Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0089Normal.setStatus(
        ""
    )

alarmInputHighDensity0090Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40090)
)
alarmInputHighDensity0090Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0090Normal.setStatus(
        ""
    )

alarmInputHighDensity0091Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40091)
)
alarmInputHighDensity0091Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0091Normal.setStatus(
        ""
    )

alarmInputHighDensity0092Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40092)
)
alarmInputHighDensity0092Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0092Normal.setStatus(
        ""
    )

alarmInputHighDensity0093Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40093)
)
alarmInputHighDensity0093Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0093Normal.setStatus(
        ""
    )

alarmInputHighDensity0094Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40094)
)
alarmInputHighDensity0094Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0094Normal.setStatus(
        ""
    )

alarmInputHighDensity0095Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40095)
)
alarmInputHighDensity0095Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0095Normal.setStatus(
        ""
    )

alarmInputHighDensity0096Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40096)
)
alarmInputHighDensity0096Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0096Normal.setStatus(
        ""
    )

alarmInputHighDensity0097Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40097)
)
alarmInputHighDensity0097Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0097Normal.setStatus(
        ""
    )

alarmInputHighDensity0098Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40098)
)
alarmInputHighDensity0098Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0098Normal.setStatus(
        ""
    )

alarmInputHighDensity0099Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40099)
)
alarmInputHighDensity0099Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0099Normal.setStatus(
        ""
    )

alarmInputHighDensity0100Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40100)
)
alarmInputHighDensity0100Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0100Normal.setStatus(
        ""
    )

alarmInputHighDensity0101Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40101)
)
alarmInputHighDensity0101Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0101Normal.setStatus(
        ""
    )

alarmInputHighDensity0102Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40102)
)
alarmInputHighDensity0102Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0102Normal.setStatus(
        ""
    )

alarmInputHighDensity0103Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40103)
)
alarmInputHighDensity0103Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0103Normal.setStatus(
        ""
    )

alarmInputHighDensity0104Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40104)
)
alarmInputHighDensity0104Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0104Normal.setStatus(
        ""
    )

alarmInputHighDensity0105Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40105)
)
alarmInputHighDensity0105Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0105Normal.setStatus(
        ""
    )

alarmInputHighDensity0106Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40106)
)
alarmInputHighDensity0106Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0106Normal.setStatus(
        ""
    )

alarmInputHighDensity0107Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40107)
)
alarmInputHighDensity0107Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0107Normal.setStatus(
        ""
    )

alarmInputHighDensity0108Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40108)
)
alarmInputHighDensity0108Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0108Normal.setStatus(
        ""
    )

alarmInputHighDensity0109Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40109)
)
alarmInputHighDensity0109Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0109Normal.setStatus(
        ""
    )

alarmInputHighDensity0110Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40110)
)
alarmInputHighDensity0110Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0110Normal.setStatus(
        ""
    )

alarmInputHighDensity0111Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40111)
)
alarmInputHighDensity0111Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0111Normal.setStatus(
        ""
    )

alarmInputHighDensity0112Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40112)
)
alarmInputHighDensity0112Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0112Normal.setStatus(
        ""
    )

alarmInputHighDensity0113Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40113)
)
alarmInputHighDensity0113Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0113Normal.setStatus(
        ""
    )

alarmInputHighDensity0114Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40114)
)
alarmInputHighDensity0114Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0114Normal.setStatus(
        ""
    )

alarmInputHighDensity0115Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40115)
)
alarmInputHighDensity0115Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0115Normal.setStatus(
        ""
    )

alarmInputHighDensity0116Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40116)
)
alarmInputHighDensity0116Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0116Normal.setStatus(
        ""
    )

alarmInputHighDensity0117Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40117)
)
alarmInputHighDensity0117Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0117Normal.setStatus(
        ""
    )

alarmInputHighDensity0118Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40118)
)
alarmInputHighDensity0118Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0118Normal.setStatus(
        ""
    )

alarmInputHighDensity0119Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40119)
)
alarmInputHighDensity0119Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0119Normal.setStatus(
        ""
    )

alarmInputHighDensity0120Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40120)
)
alarmInputHighDensity0120Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0120Normal.setStatus(
        ""
    )

alarmInputHighDensity0121Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40121)
)
alarmInputHighDensity0121Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0121Normal.setStatus(
        ""
    )

alarmInputHighDensity0122Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40122)
)
alarmInputHighDensity0122Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0122Normal.setStatus(
        ""
    )

alarmInputHighDensity0123Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40123)
)
alarmInputHighDensity0123Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0123Normal.setStatus(
        ""
    )

alarmInputHighDensity0124Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40124)
)
alarmInputHighDensity0124Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0124Normal.setStatus(
        ""
    )

alarmInputHighDensity0125Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40125)
)
alarmInputHighDensity0125Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0125Normal.setStatus(
        ""
    )

alarmInputHighDensity0126Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40126)
)
alarmInputHighDensity0126Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0126Normal.setStatus(
        ""
    )

alarmInputHighDensity0127Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40127)
)
alarmInputHighDensity0127Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0127Normal.setStatus(
        ""
    )

alarmInputHighDensity0128Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40128)
)
alarmInputHighDensity0128Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0128Normal.setStatus(
        ""
    )

alarmInputHighDensity0129Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40129)
)
alarmInputHighDensity0129Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0129Normal.setStatus(
        ""
    )

alarmInputHighDensity0130Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40130)
)
alarmInputHighDensity0130Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0130Normal.setStatus(
        ""
    )

alarmInputHighDensity0131Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40131)
)
alarmInputHighDensity0131Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0131Normal.setStatus(
        ""
    )

alarmInputHighDensity0132Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40132)
)
alarmInputHighDensity0132Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0132Normal.setStatus(
        ""
    )

alarmInputHighDensity0133Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40133)
)
alarmInputHighDensity0133Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0133Normal.setStatus(
        ""
    )

alarmInputHighDensity0134Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40134)
)
alarmInputHighDensity0134Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0134Normal.setStatus(
        ""
    )

alarmInputHighDensity0135Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40135)
)
alarmInputHighDensity0135Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0135Normal.setStatus(
        ""
    )

alarmInputHighDensity0136Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40136)
)
alarmInputHighDensity0136Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0136Normal.setStatus(
        ""
    )

alarmInputHighDensity0137Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40137)
)
alarmInputHighDensity0137Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0137Normal.setStatus(
        ""
    )

alarmInputHighDensity0138Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40138)
)
alarmInputHighDensity0138Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0138Normal.setStatus(
        ""
    )

alarmInputHighDensity0139Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40139)
)
alarmInputHighDensity0139Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0139Normal.setStatus(
        ""
    )

alarmInputHighDensity0140Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40140)
)
alarmInputHighDensity0140Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0140Normal.setStatus(
        ""
    )

alarmInputHighDensity0141Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40141)
)
alarmInputHighDensity0141Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0141Normal.setStatus(
        ""
    )

alarmInputHighDensity0142Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40142)
)
alarmInputHighDensity0142Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0142Normal.setStatus(
        ""
    )

alarmInputHighDensity0143Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40143)
)
alarmInputHighDensity0143Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0143Normal.setStatus(
        ""
    )

alarmInputHighDensity0144Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40144)
)
alarmInputHighDensity0144Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0144Normal.setStatus(
        ""
    )

alarmInputHighDensity0145Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40145)
)
alarmInputHighDensity0145Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0145Normal.setStatus(
        ""
    )

alarmInputHighDensity0146Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40146)
)
alarmInputHighDensity0146Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0146Normal.setStatus(
        ""
    )

alarmInputHighDensity0147Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40147)
)
alarmInputHighDensity0147Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0147Normal.setStatus(
        ""
    )

alarmInputHighDensity0148Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40148)
)
alarmInputHighDensity0148Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0148Normal.setStatus(
        ""
    )

alarmInputHighDensity0149Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40149)
)
alarmInputHighDensity0149Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0149Normal.setStatus(
        ""
    )

alarmInputHighDensity0150Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40150)
)
alarmInputHighDensity0150Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0150Normal.setStatus(
        ""
    )

alarmInputHighDensity0151Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40151)
)
alarmInputHighDensity0151Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0151Normal.setStatus(
        ""
    )

alarmInputHighDensity0152Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40152)
)
alarmInputHighDensity0152Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0152Normal.setStatus(
        ""
    )

alarmInputHighDensity0153Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40153)
)
alarmInputHighDensity0153Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0153Normal.setStatus(
        ""
    )

alarmInputHighDensity0154Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40154)
)
alarmInputHighDensity0154Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0154Normal.setStatus(
        ""
    )

alarmInputHighDensity0155Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40155)
)
alarmInputHighDensity0155Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0155Normal.setStatus(
        ""
    )

alarmInputHighDensity0156Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40156)
)
alarmInputHighDensity0156Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0156Normal.setStatus(
        ""
    )

alarmInputHighDensity0157Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40157)
)
alarmInputHighDensity0157Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0157Normal.setStatus(
        ""
    )

alarmInputHighDensity0158Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40158)
)
alarmInputHighDensity0158Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0158Normal.setStatus(
        ""
    )

alarmInputHighDensity0159Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40159)
)
alarmInputHighDensity0159Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0159Normal.setStatus(
        ""
    )

alarmInputHighDensity0160Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40160)
)
alarmInputHighDensity0160Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0160Normal.setStatus(
        ""
    )

alarmInputHighDensity0161Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40161)
)
alarmInputHighDensity0161Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0161Normal.setStatus(
        ""
    )

alarmInputHighDensity0162Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40162)
)
alarmInputHighDensity0162Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0162Normal.setStatus(
        ""
    )

alarmInputHighDensity0163Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40163)
)
alarmInputHighDensity0163Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0163Normal.setStatus(
        ""
    )

alarmInputHighDensity0164Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40164)
)
alarmInputHighDensity0164Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0164Normal.setStatus(
        ""
    )

alarmInputHighDensity0165Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40165)
)
alarmInputHighDensity0165Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0165Normal.setStatus(
        ""
    )

alarmInputHighDensity0166Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40166)
)
alarmInputHighDensity0166Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0166Normal.setStatus(
        ""
    )

alarmInputHighDensity0167Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40167)
)
alarmInputHighDensity0167Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0167Normal.setStatus(
        ""
    )

alarmInputHighDensity0168Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40168)
)
alarmInputHighDensity0168Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0168Normal.setStatus(
        ""
    )

alarmInputHighDensity0169Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40169)
)
alarmInputHighDensity0169Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0169Normal.setStatus(
        ""
    )

alarmInputHighDensity0170Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40170)
)
alarmInputHighDensity0170Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0170Normal.setStatus(
        ""
    )

alarmInputHighDensity0171Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40171)
)
alarmInputHighDensity0171Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0171Normal.setStatus(
        ""
    )

alarmInputHighDensity0172Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40172)
)
alarmInputHighDensity0172Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0172Normal.setStatus(
        ""
    )

alarmInputHighDensity0173Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40173)
)
alarmInputHighDensity0173Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0173Normal.setStatus(
        ""
    )

alarmInputHighDensity0174Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40174)
)
alarmInputHighDensity0174Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0174Normal.setStatus(
        ""
    )

alarmInputHighDensity0175Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40175)
)
alarmInputHighDensity0175Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0175Normal.setStatus(
        ""
    )

alarmInputHighDensity0176Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40176)
)
alarmInputHighDensity0176Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0176Normal.setStatus(
        ""
    )

alarmInputHighDensity0177Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40177)
)
alarmInputHighDensity0177Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0177Normal.setStatus(
        ""
    )

alarmInputHighDensity0178Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40178)
)
alarmInputHighDensity0178Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0178Normal.setStatus(
        ""
    )

alarmInputHighDensity0179Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40179)
)
alarmInputHighDensity0179Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0179Normal.setStatus(
        ""
    )

alarmInputHighDensity0180Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40180)
)
alarmInputHighDensity0180Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0180Normal.setStatus(
        ""
    )

alarmInputHighDensity0181Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40181)
)
alarmInputHighDensity0181Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0181Normal.setStatus(
        ""
    )

alarmInputHighDensity0182Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40182)
)
alarmInputHighDensity0182Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0182Normal.setStatus(
        ""
    )

alarmInputHighDensity0183Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40183)
)
alarmInputHighDensity0183Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0183Normal.setStatus(
        ""
    )

alarmInputHighDensity0184Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40184)
)
alarmInputHighDensity0184Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0184Normal.setStatus(
        ""
    )

alarmInputHighDensity0185Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40185)
)
alarmInputHighDensity0185Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0185Normal.setStatus(
        ""
    )

alarmInputHighDensity0186Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40186)
)
alarmInputHighDensity0186Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0186Normal.setStatus(
        ""
    )

alarmInputHighDensity0187Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40187)
)
alarmInputHighDensity0187Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0187Normal.setStatus(
        ""
    )

alarmInputHighDensity0188Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40188)
)
alarmInputHighDensity0188Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0188Normal.setStatus(
        ""
    )

alarmInputHighDensity0189Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40189)
)
alarmInputHighDensity0189Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0189Normal.setStatus(
        ""
    )

alarmInputHighDensity0190Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40190)
)
alarmInputHighDensity0190Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0190Normal.setStatus(
        ""
    )

alarmInputHighDensity0191Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40191)
)
alarmInputHighDensity0191Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0191Normal.setStatus(
        ""
    )

alarmInputHighDensity0192Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40192)
)
alarmInputHighDensity0192Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0192Normal.setStatus(
        ""
    )

alarmInputHighDensity0193Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40193)
)
alarmInputHighDensity0193Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0193Normal.setStatus(
        ""
    )

alarmInputHighDensity0194Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40194)
)
alarmInputHighDensity0194Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0194Normal.setStatus(
        ""
    )

alarmInputHighDensity0195Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40195)
)
alarmInputHighDensity0195Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0195Normal.setStatus(
        ""
    )

alarmInputHighDensity0196Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40196)
)
alarmInputHighDensity0196Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0196Normal.setStatus(
        ""
    )

alarmInputHighDensity0197Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40197)
)
alarmInputHighDensity0197Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0197Normal.setStatus(
        ""
    )

alarmInputHighDensity0198Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40198)
)
alarmInputHighDensity0198Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0198Normal.setStatus(
        ""
    )

alarmInputHighDensity0199Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40199)
)
alarmInputHighDensity0199Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0199Normal.setStatus(
        ""
    )

alarmInputHighDensity0200Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40200)
)
alarmInputHighDensity0200Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0200Normal.setStatus(
        ""
    )

alarmInputHighDensity0201Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40201)
)
alarmInputHighDensity0201Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0201Normal.setStatus(
        ""
    )

alarmInputHighDensity0202Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40202)
)
alarmInputHighDensity0202Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0202Normal.setStatus(
        ""
    )

alarmInputHighDensity0203Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40203)
)
alarmInputHighDensity0203Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0203Normal.setStatus(
        ""
    )

alarmInputHighDensity0204Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40204)
)
alarmInputHighDensity0204Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0204Normal.setStatus(
        ""
    )

alarmInputHighDensity0205Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40205)
)
alarmInputHighDensity0205Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0205Normal.setStatus(
        ""
    )

alarmInputHighDensity0206Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40206)
)
alarmInputHighDensity0206Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0206Normal.setStatus(
        ""
    )

alarmInputHighDensity0207Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40207)
)
alarmInputHighDensity0207Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0207Normal.setStatus(
        ""
    )

alarmInputHighDensity0208Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40208)
)
alarmInputHighDensity0208Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0208Normal.setStatus(
        ""
    )

alarmInputHighDensity0209Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40209)
)
alarmInputHighDensity0209Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0209Normal.setStatus(
        ""
    )

alarmInputHighDensity0210Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40210)
)
alarmInputHighDensity0210Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0210Normal.setStatus(
        ""
    )

alarmInputHighDensity0211Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40211)
)
alarmInputHighDensity0211Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0211Normal.setStatus(
        ""
    )

alarmInputHighDensity0212Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40212)
)
alarmInputHighDensity0212Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0212Normal.setStatus(
        ""
    )

alarmInputHighDensity0213Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40213)
)
alarmInputHighDensity0213Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0213Normal.setStatus(
        ""
    )

alarmInputHighDensity0214Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40214)
)
alarmInputHighDensity0214Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0214Normal.setStatus(
        ""
    )

alarmInputHighDensity0215Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40215)
)
alarmInputHighDensity0215Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0215Normal.setStatus(
        ""
    )

alarmInputHighDensity0216Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40216)
)
alarmInputHighDensity0216Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0216Normal.setStatus(
        ""
    )

alarmInputHighDensity0217Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40217)
)
alarmInputHighDensity0217Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0217Normal.setStatus(
        ""
    )

alarmInputHighDensity0218Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40218)
)
alarmInputHighDensity0218Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0218Normal.setStatus(
        ""
    )

alarmInputHighDensity0219Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40219)
)
alarmInputHighDensity0219Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0219Normal.setStatus(
        ""
    )

alarmInputHighDensity0220Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40220)
)
alarmInputHighDensity0220Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0220Normal.setStatus(
        ""
    )

alarmInputHighDensity0221Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40221)
)
alarmInputHighDensity0221Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0221Normal.setStatus(
        ""
    )

alarmInputHighDensity0222Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40222)
)
alarmInputHighDensity0222Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0222Normal.setStatus(
        ""
    )

alarmInputHighDensity0223Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40223)
)
alarmInputHighDensity0223Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0223Normal.setStatus(
        ""
    )

alarmInputHighDensity0224Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40224)
)
alarmInputHighDensity0224Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0224Normal.setStatus(
        ""
    )

alarmInputHighDensity0225Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40225)
)
alarmInputHighDensity0225Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0225Normal.setStatus(
        ""
    )

alarmInputHighDensity0226Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40226)
)
alarmInputHighDensity0226Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0226Normal.setStatus(
        ""
    )

alarmInputHighDensity0227Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40227)
)
alarmInputHighDensity0227Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0227Normal.setStatus(
        ""
    )

alarmInputHighDensity0228Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40228)
)
alarmInputHighDensity0228Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0228Normal.setStatus(
        ""
    )

alarmInputHighDensity0229Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40229)
)
alarmInputHighDensity0229Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0229Normal.setStatus(
        ""
    )

alarmInputHighDensity0230Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40230)
)
alarmInputHighDensity0230Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0230Normal.setStatus(
        ""
    )

alarmInputHighDensity0231Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40231)
)
alarmInputHighDensity0231Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0231Normal.setStatus(
        ""
    )

alarmInputHighDensity0232Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40232)
)
alarmInputHighDensity0232Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0232Normal.setStatus(
        ""
    )

alarmInputHighDensity0233Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40233)
)
alarmInputHighDensity0233Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0233Normal.setStatus(
        ""
    )

alarmInputHighDensity0234Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40234)
)
alarmInputHighDensity0234Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0234Normal.setStatus(
        ""
    )

alarmInputHighDensity0235Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40235)
)
alarmInputHighDensity0235Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0235Normal.setStatus(
        ""
    )

alarmInputHighDensity0236Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40236)
)
alarmInputHighDensity0236Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0236Normal.setStatus(
        ""
    )

alarmInputHighDensity0237Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40237)
)
alarmInputHighDensity0237Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0237Normal.setStatus(
        ""
    )

alarmInputHighDensity0238Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40238)
)
alarmInputHighDensity0238Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0238Normal.setStatus(
        ""
    )

alarmInputHighDensity0239Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40239)
)
alarmInputHighDensity0239Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0239Normal.setStatus(
        ""
    )

alarmInputHighDensity0240Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40240)
)
alarmInputHighDensity0240Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0240Normal.setStatus(
        ""
    )

alarmInputHighDensity0241Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40241)
)
alarmInputHighDensity0241Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0241Normal.setStatus(
        ""
    )

alarmInputHighDensity0242Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40242)
)
alarmInputHighDensity0242Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0242Normal.setStatus(
        ""
    )

alarmInputHighDensity0243Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40243)
)
alarmInputHighDensity0243Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0243Normal.setStatus(
        ""
    )

alarmInputHighDensity0244Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40244)
)
alarmInputHighDensity0244Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0244Normal.setStatus(
        ""
    )

alarmInputHighDensity0245Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40245)
)
alarmInputHighDensity0245Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0245Normal.setStatus(
        ""
    )

alarmInputHighDensity0246Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40246)
)
alarmInputHighDensity0246Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0246Normal.setStatus(
        ""
    )

alarmInputHighDensity0247Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40247)
)
alarmInputHighDensity0247Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0247Normal.setStatus(
        ""
    )

alarmInputHighDensity0248Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40248)
)
alarmInputHighDensity0248Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0248Normal.setStatus(
        ""
    )

alarmInputHighDensity0249Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40249)
)
alarmInputHighDensity0249Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0249Normal.setStatus(
        ""
    )

alarmInputHighDensity0250Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40250)
)
alarmInputHighDensity0250Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0250Normal.setStatus(
        ""
    )

alarmInputHighDensity0251Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40251)
)
alarmInputHighDensity0251Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0251Normal.setStatus(
        ""
    )

alarmInputHighDensity0252Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40252)
)
alarmInputHighDensity0252Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0252Normal.setStatus(
        ""
    )

alarmInputHighDensity0253Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40253)
)
alarmInputHighDensity0253Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0253Normal.setStatus(
        ""
    )

alarmInputHighDensity0254Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40254)
)
alarmInputHighDensity0254Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0254Normal.setStatus(
        ""
    )

alarmInputHighDensity0255Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40255)
)
alarmInputHighDensity0255Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0255Normal.setStatus(
        ""
    )

alarmInputHighDensity0256Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40256)
)
alarmInputHighDensity0256Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0256Normal.setStatus(
        ""
    )

alarmInputHighDensity0257Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40257)
)
alarmInputHighDensity0257Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0257Normal.setStatus(
        ""
    )

alarmInputHighDensity0258Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40258)
)
alarmInputHighDensity0258Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0258Normal.setStatus(
        ""
    )

alarmInputHighDensity0259Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40259)
)
alarmInputHighDensity0259Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0259Normal.setStatus(
        ""
    )

alarmInputHighDensity0260Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40260)
)
alarmInputHighDensity0260Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0260Normal.setStatus(
        ""
    )

alarmInputHighDensity0261Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40261)
)
alarmInputHighDensity0261Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0261Normal.setStatus(
        ""
    )

alarmInputHighDensity0262Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40262)
)
alarmInputHighDensity0262Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0262Normal.setStatus(
        ""
    )

alarmInputHighDensity0263Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40263)
)
alarmInputHighDensity0263Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0263Normal.setStatus(
        ""
    )

alarmInputHighDensity0264Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40264)
)
alarmInputHighDensity0264Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0264Normal.setStatus(
        ""
    )

alarmInputHighDensity0265Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40265)
)
alarmInputHighDensity0265Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0265Normal.setStatus(
        ""
    )

alarmInputHighDensity0266Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40266)
)
alarmInputHighDensity0266Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0266Normal.setStatus(
        ""
    )

alarmInputHighDensity0267Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40267)
)
alarmInputHighDensity0267Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0267Normal.setStatus(
        ""
    )

alarmInputHighDensity0268Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40268)
)
alarmInputHighDensity0268Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0268Normal.setStatus(
        ""
    )

alarmInputHighDensity0269Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40269)
)
alarmInputHighDensity0269Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0269Normal.setStatus(
        ""
    )

alarmInputHighDensity0270Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40270)
)
alarmInputHighDensity0270Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0270Normal.setStatus(
        ""
    )

alarmInputHighDensity0271Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40271)
)
alarmInputHighDensity0271Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0271Normal.setStatus(
        ""
    )

alarmInputHighDensity0272Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40272)
)
alarmInputHighDensity0272Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0272Normal.setStatus(
        ""
    )

alarmInputHighDensity0273Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40273)
)
alarmInputHighDensity0273Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0273Normal.setStatus(
        ""
    )

alarmInputHighDensity0274Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40274)
)
alarmInputHighDensity0274Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0274Normal.setStatus(
        ""
    )

alarmInputHighDensity0275Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40275)
)
alarmInputHighDensity0275Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0275Normal.setStatus(
        ""
    )

alarmInputHighDensity0276Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40276)
)
alarmInputHighDensity0276Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0276Normal.setStatus(
        ""
    )

alarmInputHighDensity0277Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40277)
)
alarmInputHighDensity0277Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0277Normal.setStatus(
        ""
    )

alarmInputHighDensity0278Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40278)
)
alarmInputHighDensity0278Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0278Normal.setStatus(
        ""
    )

alarmInputHighDensity0279Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40279)
)
alarmInputHighDensity0279Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0279Normal.setStatus(
        ""
    )

alarmInputHighDensity0280Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40280)
)
alarmInputHighDensity0280Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0280Normal.setStatus(
        ""
    )

alarmInputHighDensity0281Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40281)
)
alarmInputHighDensity0281Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0281Normal.setStatus(
        ""
    )

alarmInputHighDensity0282Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40282)
)
alarmInputHighDensity0282Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0282Normal.setStatus(
        ""
    )

alarmInputHighDensity0283Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40283)
)
alarmInputHighDensity0283Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0283Normal.setStatus(
        ""
    )

alarmInputHighDensity0284Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40284)
)
alarmInputHighDensity0284Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0284Normal.setStatus(
        ""
    )

alarmInputHighDensity0285Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40285)
)
alarmInputHighDensity0285Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0285Normal.setStatus(
        ""
    )

alarmInputHighDensity0286Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40286)
)
alarmInputHighDensity0286Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0286Normal.setStatus(
        ""
    )

alarmInputHighDensity0287Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40287)
)
alarmInputHighDensity0287Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0287Normal.setStatus(
        ""
    )

alarmInputHighDensity0288Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40288)
)
alarmInputHighDensity0288Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0288Normal.setStatus(
        ""
    )

alarmInputHighDensity0289Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40289)
)
alarmInputHighDensity0289Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0289Normal.setStatus(
        ""
    )

alarmInputHighDensity0290Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40290)
)
alarmInputHighDensity0290Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0290Normal.setStatus(
        ""
    )

alarmInputHighDensity0291Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40291)
)
alarmInputHighDensity0291Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0291Normal.setStatus(
        ""
    )

alarmInputHighDensity0292Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40292)
)
alarmInputHighDensity0292Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0292Normal.setStatus(
        ""
    )

alarmInputHighDensity0293Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40293)
)
alarmInputHighDensity0293Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0293Normal.setStatus(
        ""
    )

alarmInputHighDensity0294Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40294)
)
alarmInputHighDensity0294Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0294Normal.setStatus(
        ""
    )

alarmInputHighDensity0295Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40295)
)
alarmInputHighDensity0295Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0295Normal.setStatus(
        ""
    )

alarmInputHighDensity0296Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40296)
)
alarmInputHighDensity0296Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0296Normal.setStatus(
        ""
    )

alarmInputHighDensity0297Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40297)
)
alarmInputHighDensity0297Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0297Normal.setStatus(
        ""
    )

alarmInputHighDensity0298Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40298)
)
alarmInputHighDensity0298Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0298Normal.setStatus(
        ""
    )

alarmInputHighDensity0299Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40299)
)
alarmInputHighDensity0299Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0299Normal.setStatus(
        ""
    )

alarmInputHighDensity0300Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40300)
)
alarmInputHighDensity0300Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0300Normal.setStatus(
        ""
    )

alarmInputHighDensity0301Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40301)
)
alarmInputHighDensity0301Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0301Normal.setStatus(
        ""
    )

alarmInputHighDensity0302Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40302)
)
alarmInputHighDensity0302Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0302Normal.setStatus(
        ""
    )

alarmInputHighDensity0303Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40303)
)
alarmInputHighDensity0303Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0303Normal.setStatus(
        ""
    )

alarmInputHighDensity0304Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40304)
)
alarmInputHighDensity0304Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0304Normal.setStatus(
        ""
    )

alarmInputHighDensity0305Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40305)
)
alarmInputHighDensity0305Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0305Normal.setStatus(
        ""
    )

alarmInputHighDensity0306Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40306)
)
alarmInputHighDensity0306Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0306Normal.setStatus(
        ""
    )

alarmInputHighDensity0307Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40307)
)
alarmInputHighDensity0307Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0307Normal.setStatus(
        ""
    )

alarmInputHighDensity0308Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40308)
)
alarmInputHighDensity0308Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0308Normal.setStatus(
        ""
    )

alarmInputHighDensity0309Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40309)
)
alarmInputHighDensity0309Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0309Normal.setStatus(
        ""
    )

alarmInputHighDensity0310Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40310)
)
alarmInputHighDensity0310Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0310Normal.setStatus(
        ""
    )

alarmInputHighDensity0311Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40311)
)
alarmInputHighDensity0311Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0311Normal.setStatus(
        ""
    )

alarmInputHighDensity0312Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40312)
)
alarmInputHighDensity0312Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0312Normal.setStatus(
        ""
    )

alarmInputHighDensity0313Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40313)
)
alarmInputHighDensity0313Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0313Normal.setStatus(
        ""
    )

alarmInputHighDensity0314Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40314)
)
alarmInputHighDensity0314Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0314Normal.setStatus(
        ""
    )

alarmInputHighDensity0315Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40315)
)
alarmInputHighDensity0315Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0315Normal.setStatus(
        ""
    )

alarmInputHighDensity0316Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40316)
)
alarmInputHighDensity0316Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0316Normal.setStatus(
        ""
    )

alarmInputHighDensity0317Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40317)
)
alarmInputHighDensity0317Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0317Normal.setStatus(
        ""
    )

alarmInputHighDensity0318Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40318)
)
alarmInputHighDensity0318Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0318Normal.setStatus(
        ""
    )

alarmInputHighDensity0319Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40319)
)
alarmInputHighDensity0319Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0319Normal.setStatus(
        ""
    )

alarmInputHighDensity0320Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40320)
)
alarmInputHighDensity0320Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0320Normal.setStatus(
        ""
    )

alarmInputHighDensity0321Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40321)
)
alarmInputHighDensity0321Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0321Normal.setStatus(
        ""
    )

alarmInputHighDensity0322Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40322)
)
alarmInputHighDensity0322Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0322Normal.setStatus(
        ""
    )

alarmInputHighDensity0323Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40323)
)
alarmInputHighDensity0323Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0323Normal.setStatus(
        ""
    )

alarmInputHighDensity0324Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40324)
)
alarmInputHighDensity0324Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0324Normal.setStatus(
        ""
    )

alarmInputHighDensity0325Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40325)
)
alarmInputHighDensity0325Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0325Normal.setStatus(
        ""
    )

alarmInputHighDensity0326Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40326)
)
alarmInputHighDensity0326Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0326Normal.setStatus(
        ""
    )

alarmInputHighDensity0327Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40327)
)
alarmInputHighDensity0327Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0327Normal.setStatus(
        ""
    )

alarmInputHighDensity0328Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40328)
)
alarmInputHighDensity0328Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0328Normal.setStatus(
        ""
    )

alarmInputHighDensity0329Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40329)
)
alarmInputHighDensity0329Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0329Normal.setStatus(
        ""
    )

alarmInputHighDensity0330Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40330)
)
alarmInputHighDensity0330Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0330Normal.setStatus(
        ""
    )

alarmInputHighDensity0331Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40331)
)
alarmInputHighDensity0331Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0331Normal.setStatus(
        ""
    )

alarmInputHighDensity0332Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40332)
)
alarmInputHighDensity0332Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0332Normal.setStatus(
        ""
    )

alarmInputHighDensity0333Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40333)
)
alarmInputHighDensity0333Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0333Normal.setStatus(
        ""
    )

alarmInputHighDensity0334Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40334)
)
alarmInputHighDensity0334Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0334Normal.setStatus(
        ""
    )

alarmInputHighDensity0335Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40335)
)
alarmInputHighDensity0335Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0335Normal.setStatus(
        ""
    )

alarmInputHighDensity0336Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40336)
)
alarmInputHighDensity0336Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0336Normal.setStatus(
        ""
    )

alarmInputHighDensity0337Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40337)
)
alarmInputHighDensity0337Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0337Normal.setStatus(
        ""
    )

alarmInputHighDensity0338Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40338)
)
alarmInputHighDensity0338Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0338Normal.setStatus(
        ""
    )

alarmInputHighDensity0339Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40339)
)
alarmInputHighDensity0339Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0339Normal.setStatus(
        ""
    )

alarmInputHighDensity0340Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40340)
)
alarmInputHighDensity0340Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0340Normal.setStatus(
        ""
    )

alarmInputHighDensity0341Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40341)
)
alarmInputHighDensity0341Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0341Normal.setStatus(
        ""
    )

alarmInputHighDensity0342Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40342)
)
alarmInputHighDensity0342Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0342Normal.setStatus(
        ""
    )

alarmInputHighDensity0343Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40343)
)
alarmInputHighDensity0343Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0343Normal.setStatus(
        ""
    )

alarmInputHighDensity0344Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40344)
)
alarmInputHighDensity0344Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0344Normal.setStatus(
        ""
    )

alarmInputHighDensity0345Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40345)
)
alarmInputHighDensity0345Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0345Normal.setStatus(
        ""
    )

alarmInputHighDensity0346Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40346)
)
alarmInputHighDensity0346Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0346Normal.setStatus(
        ""
    )

alarmInputHighDensity0347Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40347)
)
alarmInputHighDensity0347Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0347Normal.setStatus(
        ""
    )

alarmInputHighDensity0348Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40348)
)
alarmInputHighDensity0348Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0348Normal.setStatus(
        ""
    )

alarmInputHighDensity0349Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40349)
)
alarmInputHighDensity0349Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0349Normal.setStatus(
        ""
    )

alarmInputHighDensity0350Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40350)
)
alarmInputHighDensity0350Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0350Normal.setStatus(
        ""
    )

alarmInputHighDensity0351Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40351)
)
alarmInputHighDensity0351Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0351Normal.setStatus(
        ""
    )

alarmInputHighDensity0352Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40352)
)
alarmInputHighDensity0352Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0352Normal.setStatus(
        ""
    )

alarmInputHighDensity0353Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40353)
)
alarmInputHighDensity0353Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0353Normal.setStatus(
        ""
    )

alarmInputHighDensity0354Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40354)
)
alarmInputHighDensity0354Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0354Normal.setStatus(
        ""
    )

alarmInputHighDensity0355Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40355)
)
alarmInputHighDensity0355Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0355Normal.setStatus(
        ""
    )

alarmInputHighDensity0356Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40356)
)
alarmInputHighDensity0356Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0356Normal.setStatus(
        ""
    )

alarmInputHighDensity0357Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40357)
)
alarmInputHighDensity0357Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0357Normal.setStatus(
        ""
    )

alarmInputHighDensity0358Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40358)
)
alarmInputHighDensity0358Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0358Normal.setStatus(
        ""
    )

alarmInputHighDensity0359Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40359)
)
alarmInputHighDensity0359Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0359Normal.setStatus(
        ""
    )

alarmInputHighDensity0360Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40360)
)
alarmInputHighDensity0360Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0360Normal.setStatus(
        ""
    )

alarmInputHighDensity0361Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40361)
)
alarmInputHighDensity0361Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0361Normal.setStatus(
        ""
    )

alarmInputHighDensity0362Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40362)
)
alarmInputHighDensity0362Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0362Normal.setStatus(
        ""
    )

alarmInputHighDensity0363Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40363)
)
alarmInputHighDensity0363Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0363Normal.setStatus(
        ""
    )

alarmInputHighDensity0364Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40364)
)
alarmInputHighDensity0364Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0364Normal.setStatus(
        ""
    )

alarmInputHighDensity0365Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40365)
)
alarmInputHighDensity0365Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0365Normal.setStatus(
        ""
    )

alarmInputHighDensity0366Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40366)
)
alarmInputHighDensity0366Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0366Normal.setStatus(
        ""
    )

alarmInputHighDensity0367Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40367)
)
alarmInputHighDensity0367Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0367Normal.setStatus(
        ""
    )

alarmInputHighDensity0368Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40368)
)
alarmInputHighDensity0368Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0368Normal.setStatus(
        ""
    )

alarmInputHighDensity0369Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40369)
)
alarmInputHighDensity0369Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0369Normal.setStatus(
        ""
    )

alarmInputHighDensity0370Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40370)
)
alarmInputHighDensity0370Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0370Normal.setStatus(
        ""
    )

alarmInputHighDensity0371Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40371)
)
alarmInputHighDensity0371Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0371Normal.setStatus(
        ""
    )

alarmInputHighDensity0372Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40372)
)
alarmInputHighDensity0372Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0372Normal.setStatus(
        ""
    )

alarmInputHighDensity0373Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40373)
)
alarmInputHighDensity0373Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0373Normal.setStatus(
        ""
    )

alarmInputHighDensity0374Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40374)
)
alarmInputHighDensity0374Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0374Normal.setStatus(
        ""
    )

alarmInputHighDensity0375Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40375)
)
alarmInputHighDensity0375Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0375Normal.setStatus(
        ""
    )

alarmInputHighDensity0376Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40376)
)
alarmInputHighDensity0376Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0376Normal.setStatus(
        ""
    )

alarmInputHighDensity0377Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40377)
)
alarmInputHighDensity0377Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0377Normal.setStatus(
        ""
    )

alarmInputHighDensity0378Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40378)
)
alarmInputHighDensity0378Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0378Normal.setStatus(
        ""
    )

alarmInputHighDensity0379Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40379)
)
alarmInputHighDensity0379Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0379Normal.setStatus(
        ""
    )

alarmInputHighDensity0380Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40380)
)
alarmInputHighDensity0380Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0380Normal.setStatus(
        ""
    )

alarmInputHighDensity0381Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40381)
)
alarmInputHighDensity0381Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0381Normal.setStatus(
        ""
    )

alarmInputHighDensity0382Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40382)
)
alarmInputHighDensity0382Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0382Normal.setStatus(
        ""
    )

alarmInputHighDensity0383Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40383)
)
alarmInputHighDensity0383Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0383Normal.setStatus(
        ""
    )

alarmInputHighDensity0384Normal = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 0, 40384)
)
alarmInputHighDensity0384Normal.setObjects(
      *(("MRVINREACH", "basicAlarmMasterInputValue"),
        ("MRVINREACH", "basicAlarmMasterInputName"),
        ("MRVINREACH", "sysLocation"),
        ("MRVINREACH", "basicAlarmMasterInputPort"),
        ("MRVINREACH", "basicAlarmMasterInputStatus"),
        ("MRVINREACH", "basicAlarmMasterInputSlot"),
        ("MRVINREACH", "basicAlarmMasterInputPoint"),
        ("MRVINREACH", "basicAlarmMasterInputZone"),
        ("MRVINREACH", "basicAlarmMasterInputRelatedEquipment"),
        ("MRVINREACH", "basicAlarmMasterInputSiteId"),
        ("MRVINREACH", "basicAlarmMasterInputManufacturer"),
        ("MRVINREACH", "basicAlarmMasterInputModel"))
)
if mibBuilder.loadTexts:
    alarmInputHighDensity0384Normal.setStatus(
        ""
    )

resourceLack = NotificationType(
    (1, 3, 6, 1, 4, 1, 33, 1, 0, 1)
)
resourceLack.setObjects(
    ("MRVINREACH", "resType")
)
if mibBuilder.loadTexts:
    resourceLack.setStatus(
        ""
    )


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "MRVINREACH",
    **{"DisplayString": DisplayString,
       "PhysAddress": PhysAddress,
       "AutonomousType": AutonomousType,
       "InstancePointer": InstancePointer,
       "PhivAddr": PhivAddr,
       "PhivCounter": PhivCounter,
       "MacAddress": MacAddress,
       "BridgeId": BridgeId,
       "Timeout": Timeout,
       "AreaID": AreaID,
       "RouterID": RouterID,
       "Metric": Metric,
       "BigMetric": BigMetric,
       "TruthValue": TruthValue,
       "Status": Status,
       "Validation": Validation,
       "PositiveInteger": PositiveInteger,
       "HelloRange": HelloRange,
       "UpToMaxAge": UpToMaxAge,
       "InterfaceIndex": InterfaceIndex,
       "DesignatedRouterPriority": DesignatedRouterPriority,
       "TOSType": TOSType,
       "DateTime": DateTime,
       "AddressType": AddressType,
       "TypedAddress": TypedAddress,
       "SoftwareType": SoftwareType,
       "HardwareType": HardwareType,
       "ChassisType": ChassisType,
       "IOType": IOType,
       "DdpAddress": DdpAddress,
       "DialogStatus": DialogStatus,
       "NetworkType": NetworkType,
       "SerialNumber": SerialNumber,
       "Letter": Letter,
       "ccitt": ccitt,
       "null": null,
       "iso": iso,
       "org": org,
       "dod": dod,
       "internet": internet,
       "directory": directory,
       "mgmt": mgmt,
       "mib-2": mib_2,
       "system": system,
       "sysDescr": sysDescr,
       "sysObjectID": sysObjectID,
       "sysUpTime": sysUpTime,
       "sysContact": sysContact,
       "sysName": sysName,
       "sysLocation": sysLocation,
       "sysServices": sysServices,
       "interfaces": interfaces,
       "ifNumber": ifNumber,
       "ifTable": ifTable,
       "ifEntry": ifEntry,
       "ifIndex": ifIndex,
       "ifDescr": ifDescr,
       "ifType": ifType,
       "ifMtu": ifMtu,
       "ifSpeed": ifSpeed,
       "ifPhysAddress": ifPhysAddress,
       "ifAdminStatus": ifAdminStatus,
       "ifOperStatus": ifOperStatus,
       "ifLastChange": ifLastChange,
       "ifInOctets": ifInOctets,
       "ifInUcastPkts": ifInUcastPkts,
       "ifInNUcastPkts": ifInNUcastPkts,
       "ifInDiscards": ifInDiscards,
       "ifInErrors": ifInErrors,
       "ifInUnknownProtos": ifInUnknownProtos,
       "ifOutOctets": ifOutOctets,
       "ifOutUcastPkts": ifOutUcastPkts,
       "ifOutNUcastPkts": ifOutNUcastPkts,
       "ifOutDiscards": ifOutDiscards,
       "ifOutErrors": ifOutErrors,
       "ifOutQLen": ifOutQLen,
       "ifSpecific": ifSpecific,
       "at": at,
       "atTable": atTable,
       "atEntry": atEntry,
       "atIfIndex": atIfIndex,
       "atPhysAddress": atPhysAddress,
       "atNetAddress": atNetAddress,
       "ip": ip,
       "ipForwarding": ipForwarding,
       "ipDefaultTTL": ipDefaultTTL,
       "ipInReceives": ipInReceives,
       "ipInHdrErrors": ipInHdrErrors,
       "ipInAddrErrors": ipInAddrErrors,
       "ipForwDatagrams": ipForwDatagrams,
       "ipInUnknownProtos": ipInUnknownProtos,
       "ipInDiscards": ipInDiscards,
       "ipInDelivers": ipInDelivers,
       "ipOutRequests": ipOutRequests,
       "ipOutDiscards": ipOutDiscards,
       "ipOutNoRoutes": ipOutNoRoutes,
       "ipReasmTimeout": ipReasmTimeout,
       "ipReasmReqds": ipReasmReqds,
       "ipReasmOKs": ipReasmOKs,
       "ipReasmFails": ipReasmFails,
       "ipFragOKs": ipFragOKs,
       "ipFragFails": ipFragFails,
       "ipFragCreates": ipFragCreates,
       "ipAddrTable": ipAddrTable,
       "ipAddrEntry": ipAddrEntry,
       "ipAdEntAddr": ipAdEntAddr,
       "ipAdEntIfIndex": ipAdEntIfIndex,
       "ipAdEntNetMask": ipAdEntNetMask,
       "ipAdEntBcastAddr": ipAdEntBcastAddr,
       "ipAdEntReasmMaxSize": ipAdEntReasmMaxSize,
       "ipRouteTable": ipRouteTable,
       "ipRouteEntry": ipRouteEntry,
       "ipRouteDest": ipRouteDest,
       "ipRouteIfIndex": ipRouteIfIndex,
       "ipRouteMetric1": ipRouteMetric1,
       "ipRouteMetric2": ipRouteMetric2,
       "ipRouteMetric3": ipRouteMetric3,
       "ipRouteMetric4": ipRouteMetric4,
       "ipRouteNextHop": ipRouteNextHop,
       "ipRouteType": ipRouteType,
       "ipRouteProto": ipRouteProto,
       "ipRouteAge": ipRouteAge,
       "ipRouteMask": ipRouteMask,
       "ipRouteMetric5": ipRouteMetric5,
       "ipRouteInfo": ipRouteInfo,
       "ipNetToMediaTable": ipNetToMediaTable,
       "ipNetToMediaEntry": ipNetToMediaEntry,
       "ipNetToMediaIfIndex": ipNetToMediaIfIndex,
       "ipNetToMediaPhysAddress": ipNetToMediaPhysAddress,
       "ipNetToMediaNetAddress": ipNetToMediaNetAddress,
       "ipNetToMediaType": ipNetToMediaType,
       "ipRoutingDiscards": ipRoutingDiscards,
       "icmp": icmp,
       "icmpInMsgs": icmpInMsgs,
       "icmpInErrors": icmpInErrors,
       "icmpInDestUnreachs": icmpInDestUnreachs,
       "icmpInTimeExcds": icmpInTimeExcds,
       "icmpInParmProbs": icmpInParmProbs,
       "icmpInSrcQuenchs": icmpInSrcQuenchs,
       "icmpInRedirects": icmpInRedirects,
       "icmpInEchos": icmpInEchos,
       "icmpInEchoReps": icmpInEchoReps,
       "icmpInTimestamps": icmpInTimestamps,
       "icmpInTimestampReps": icmpInTimestampReps,
       "icmpInAddrMasks": icmpInAddrMasks,
       "icmpInAddrMaskReps": icmpInAddrMaskReps,
       "icmpOutMsgs": icmpOutMsgs,
       "icmpOutErrors": icmpOutErrors,
       "icmpOutDestUnreachs": icmpOutDestUnreachs,
       "icmpOutTimeExcds": icmpOutTimeExcds,
       "icmpOutParmProbs": icmpOutParmProbs,
       "icmpOutSrcQuenchs": icmpOutSrcQuenchs,
       "icmpOutRedirects": icmpOutRedirects,
       "icmpOutEchos": icmpOutEchos,
       "icmpOutEchoReps": icmpOutEchoReps,
       "icmpOutTimestamps": icmpOutTimestamps,
       "icmpOutTimestampReps": icmpOutTimestampReps,
       "icmpOutAddrMasks": icmpOutAddrMasks,
       "icmpOutAddrMaskReps": icmpOutAddrMaskReps,
       "tcp": tcp,
       "tcpRtoAlgorithm": tcpRtoAlgorithm,
       "tcpRtoMin": tcpRtoMin,
       "tcpRtoMax": tcpRtoMax,
       "tcpMaxConn": tcpMaxConn,
       "tcpActiveOpens": tcpActiveOpens,
       "tcpPassiveOpens": tcpPassiveOpens,
       "tcpAttemptFails": tcpAttemptFails,
       "tcpEstabResets": tcpEstabResets,
       "tcpCurrEstab": tcpCurrEstab,
       "tcpInSegs": tcpInSegs,
       "tcpOutSegs": tcpOutSegs,
       "tcpRetransSegs": tcpRetransSegs,
       "tcpConnTable": tcpConnTable,
       "tcpConnEntry": tcpConnEntry,
       "tcpConnState": tcpConnState,
       "tcpConnLocalAddress": tcpConnLocalAddress,
       "tcpConnLocalPort": tcpConnLocalPort,
       "tcpConnRemAddress": tcpConnRemAddress,
       "tcpConnRemPort": tcpConnRemPort,
       "tcpInErrs": tcpInErrs,
       "tcpOutRsts": tcpOutRsts,
       "udp": udp,
       "udpInDatagrams": udpInDatagrams,
       "udpNoPorts": udpNoPorts,
       "udpInErrors": udpInErrors,
       "udpOutDatagrams": udpOutDatagrams,
       "udpTable": udpTable,
       "udpEntry": udpEntry,
       "udpLocalAddress": udpLocalAddress,
       "udpLocalPort": udpLocalPort,
       "egp": egp,
       "egpInMsgs": egpInMsgs,
       "egpInErrors": egpInErrors,
       "egpOutMsgs": egpOutMsgs,
       "egpOutErrors": egpOutErrors,
       "egpNeighTable": egpNeighTable,
       "egpNeighEntry": egpNeighEntry,
       "egpNeighState": egpNeighState,
       "egpNeighAddr": egpNeighAddr,
       "egpNeighAs": egpNeighAs,
       "egpNeighInMsgs": egpNeighInMsgs,
       "egpNeighInErrs": egpNeighInErrs,
       "egpNeighOutMsgs": egpNeighOutMsgs,
       "egpNeighOutErrs": egpNeighOutErrs,
       "egpNeighInErrMsgs": egpNeighInErrMsgs,
       "egpNeighOutErrMsgs": egpNeighOutErrMsgs,
       "egpNeighStateUps": egpNeighStateUps,
       "egpNeighStateDowns": egpNeighStateDowns,
       "egpNeighIntervalHello": egpNeighIntervalHello,
       "egpNeighIntervalPoll": egpNeighIntervalPoll,
       "egpNeighMode": egpNeighMode,
       "egpNeighEventTrigger": egpNeighEventTrigger,
       "egpAs": egpAs,
       "transmission": transmission,
       "ppp": ppp,
       "pppLcp": pppLcp,
       "pppLink": pppLink,
       "pppLinkStatusTable": pppLinkStatusTable,
       "pppLinkStatusEntry": pppLinkStatusEntry,
       "pppLinkStatusPhysicalIndex": pppLinkStatusPhysicalIndex,
       "pppLinkStatusBadAddresses": pppLinkStatusBadAddresses,
       "pppLinkStatusBadControls": pppLinkStatusBadControls,
       "pppLinkStatusPacketTooLongs": pppLinkStatusPacketTooLongs,
       "pppLinkStatusBadFCSs": pppLinkStatusBadFCSs,
       "pppLinkStatusLocalMRU": pppLinkStatusLocalMRU,
       "pppLinkStatusRemoteMRU": pppLinkStatusRemoteMRU,
       "pppLinkStatusLocalToPeerACCMap": pppLinkStatusLocalToPeerACCMap,
       "pppLinkStatusPeerToLocalACCMap": pppLinkStatusPeerToLocalACCMap,
       "pppLinkStatusLocalToRemoteProtocolCompression": pppLinkStatusLocalToRemoteProtocolCompression,
       "pppLinkStatusRemoteToLocalProtocolCompression": pppLinkStatusRemoteToLocalProtocolCompression,
       "pppLinkStatusLocalToRemoteACCompression": pppLinkStatusLocalToRemoteACCompression,
       "pppLinkStatusRemoteToLocalACCompression": pppLinkStatusRemoteToLocalACCompression,
       "pppLinkStatusTransmitFcsSize": pppLinkStatusTransmitFcsSize,
       "pppLinkStatusReceiveFcsSize": pppLinkStatusReceiveFcsSize,
       "pppLinkConfigTable": pppLinkConfigTable,
       "pppLinkConfigEntry": pppLinkConfigEntry,
       "pppLinkConfigInitialMRU": pppLinkConfigInitialMRU,
       "pppLinkConfigReceiveACCMap": pppLinkConfigReceiveACCMap,
       "pppLinkConfigTransmitACCMap": pppLinkConfigTransmitACCMap,
       "pppLinkConfigMagicNumber": pppLinkConfigMagicNumber,
       "pppLinkConfigFcsSize": pppLinkConfigFcsSize,
       "pppLqr": pppLqr,
       "pppTests": pppTests,
       "pppEchoTest": pppEchoTest,
       "pppDiscardTest": pppDiscardTest,
       "pppIp": pppIp,
       "pppIpTable": pppIpTable,
       "pppIpEntry": pppIpEntry,
       "pppIpOperStatus": pppIpOperStatus,
       "pppIpLocalToRemoteCompressionProtocol": pppIpLocalToRemoteCompressionProtocol,
       "pppIpRemoteToLocalCompressionProtocol": pppIpRemoteToLocalCompressionProtocol,
       "pppIpRemoteMaxSlotId": pppIpRemoteMaxSlotId,
       "pppIpLocalMaxSlotId": pppIpLocalMaxSlotId,
       "pppIpConfigTable": pppIpConfigTable,
       "pppIpConfigEntry": pppIpConfigEntry,
       "pppIpConfigAdminStatus": pppIpConfigAdminStatus,
       "pppIpConfigCompression": pppIpConfigCompression,
       "rs232": rs232,
       "rs232Number": rs232Number,
       "rs232PortTable": rs232PortTable,
       "rs232PortEntry": rs232PortEntry,
       "rs232PortIndex": rs232PortIndex,
       "rs232PortType": rs232PortType,
       "rs232PortInSigNumber": rs232PortInSigNumber,
       "rs232PortOutSigNumber": rs232PortOutSigNumber,
       "rs232PortInSpeed": rs232PortInSpeed,
       "rs232PortOutSpeed": rs232PortOutSpeed,
       "rs232AsyncPortTable": rs232AsyncPortTable,
       "rs232AsyncPortEntry": rs232AsyncPortEntry,
       "rs232AsyncPortIndex": rs232AsyncPortIndex,
       "rs232AsyncPortBits": rs232AsyncPortBits,
       "rs232AsyncPortStopBits": rs232AsyncPortStopBits,
       "rs232AsyncPortParity": rs232AsyncPortParity,
       "rs232AsyncPortAutobaud": rs232AsyncPortAutobaud,
       "rs232AsyncPortParityErrs": rs232AsyncPortParityErrs,
       "rs232AsyncPortFramingErrs": rs232AsyncPortFramingErrs,
       "rs232AsyncPortOverrunErrs": rs232AsyncPortOverrunErrs,
       "rs232SyncPortTable": rs232SyncPortTable,
       "rs232SyncPortEntry": rs232SyncPortEntry,
       "rs232SyncPortIndex": rs232SyncPortIndex,
       "rs232SyncPortClockSource": rs232SyncPortClockSource,
       "rs232SyncPortFrameCheckErrs": rs232SyncPortFrameCheckErrs,
       "rs232SyncPortTransmitUnderrunErrs": rs232SyncPortTransmitUnderrunErrs,
       "rs232SyncPortReceiveOverrunErrs": rs232SyncPortReceiveOverrunErrs,
       "rs232SyncPortInterruptedFrames": rs232SyncPortInterruptedFrames,
       "rs232SyncPortAbortedFrames": rs232SyncPortAbortedFrames,
       "rs232InSigTable": rs232InSigTable,
       "rs232InSigEntry": rs232InSigEntry,
       "rs232InSigPortIndex": rs232InSigPortIndex,
       "rs232InSigName": rs232InSigName,
       "rs232InSigState": rs232InSigState,
       "rs232InSigChanges": rs232InSigChanges,
       "rs232OutSigTable": rs232OutSigTable,
       "rs232OutSigEntry": rs232OutSigEntry,
       "rs232OutSigPortIndex": rs232OutSigPortIndex,
       "rs232OutSigName": rs232OutSigName,
       "rs232OutSigState": rs232OutSigState,
       "rs232OutSigChanges": rs232OutSigChanges,
       "snmp": snmp,
       "snmpInPkts": snmpInPkts,
       "snmpOutPkts": snmpOutPkts,
       "snmpInBadVersions": snmpInBadVersions,
       "snmpInBadCommunityNames": snmpInBadCommunityNames,
       "snmpInBadCommunityUses": snmpInBadCommunityUses,
       "snmpInASNParseErrs": snmpInASNParseErrs,
       "snmpInTooBigs": snmpInTooBigs,
       "snmpInNoSuchNames": snmpInNoSuchNames,
       "snmpInBadValues": snmpInBadValues,
       "snmpInReadOnlys": snmpInReadOnlys,
       "snmpInGenErrs": snmpInGenErrs,
       "snmpInTotalReqVars": snmpInTotalReqVars,
       "snmpInTotalSetVars": snmpInTotalSetVars,
       "snmpInGetRequests": snmpInGetRequests,
       "snmpInGetNexts": snmpInGetNexts,
       "snmpInSetRequests": snmpInSetRequests,
       "snmpInGetResponses": snmpInGetResponses,
       "snmpInTraps": snmpInTraps,
       "snmpOutTooBigs": snmpOutTooBigs,
       "snmpOutNoSuchNames": snmpOutNoSuchNames,
       "snmpOutBadValues": snmpOutBadValues,
       "snmpOutGenErrs": snmpOutGenErrs,
       "snmpOutGetRequests": snmpOutGetRequests,
       "snmpOutGetNexts": snmpOutGetNexts,
       "snmpOutSetRequests": snmpOutSetRequests,
       "snmpOutGetResponses": snmpOutGetResponses,
       "snmpOutTraps": snmpOutTraps,
       "snmpEnableAuthenTraps": snmpEnableAuthenTraps,
       "appletalk": appletalk,
       "llap": llap,
       "aarp": aarp,
       "atport": atport,
       "ddp": ddp,
       "rtmp": rtmp,
       "kip": kip,
       "zip": zip,
       "nbp": nbp,
       "atecho": atecho,
       "ospf": ospf,
       "ospfGeneralGroup": ospfGeneralGroup,
       "dot1dBridge": dot1dBridge,
       "newRoot": newRoot,
       "topologyChange": topologyChange,
       "dot1dBase": dot1dBase,
       "dot1dBaseBridgeAddress": dot1dBaseBridgeAddress,
       "dot1dBaseNumPorts": dot1dBaseNumPorts,
       "dot1dBaseType": dot1dBaseType,
       "dot1dBasePortTable": dot1dBasePortTable,
       "dot1dBasePortEntry": dot1dBasePortEntry,
       "dot1dBasePort": dot1dBasePort,
       "dot1dBasePortIfIndex": dot1dBasePortIfIndex,
       "dot1dBasePortCircuit": dot1dBasePortCircuit,
       "dot1dBasePortDelayExceededDiscards": dot1dBasePortDelayExceededDiscards,
       "dot1dBasePortMtuExceededDiscards": dot1dBasePortMtuExceededDiscards,
       "dot1dStp": dot1dStp,
       "dot1dStpProtocolSpecification": dot1dStpProtocolSpecification,
       "dot1dStpPriority": dot1dStpPriority,
       "dot1dStpTimeSinceTopologyChange": dot1dStpTimeSinceTopologyChange,
       "dot1dStpTopChanges": dot1dStpTopChanges,
       "dot1dStpDesignatedRoot": dot1dStpDesignatedRoot,
       "dot1dStpRootCost": dot1dStpRootCost,
       "dot1dStpRootPort": dot1dStpRootPort,
       "dot1dStpMaxAge": dot1dStpMaxAge,
       "dot1dStpHelloTime": dot1dStpHelloTime,
       "dot1dStpHoldTime": dot1dStpHoldTime,
       "dot1dStpForwardDelay": dot1dStpForwardDelay,
       "dot1dStpBridgeMaxAge": dot1dStpBridgeMaxAge,
       "dot1dStpBridgeHelloTime": dot1dStpBridgeHelloTime,
       "dot1dStpBridgeForwardDelay": dot1dStpBridgeForwardDelay,
       "dot1dStpPortTable": dot1dStpPortTable,
       "dot1dStpPortEntry": dot1dStpPortEntry,
       "dot1dStpPort": dot1dStpPort,
       "dot1dStpPortPriority": dot1dStpPortPriority,
       "dot1dStpPortState": dot1dStpPortState,
       "dot1dStpPortEnable": dot1dStpPortEnable,
       "dot1dStpPortPathCost": dot1dStpPortPathCost,
       "dot1dStpPortDesignatedRoot": dot1dStpPortDesignatedRoot,
       "dot1dStpPortDesignatedCost": dot1dStpPortDesignatedCost,
       "dot1dStpPortDesignatedBridge": dot1dStpPortDesignatedBridge,
       "dot1dStpPortDesignatedPort": dot1dStpPortDesignatedPort,
       "dot1dStpPortForwardTransitions": dot1dStpPortForwardTransitions,
       "dot1dSr": dot1dSr,
       "dot1dTp": dot1dTp,
       "dot1dTpLearnedEntryDiscards": dot1dTpLearnedEntryDiscards,
       "dot1dTpAgingTime": dot1dTpAgingTime,
       "dot1dTpFdbTable": dot1dTpFdbTable,
       "dot1dTpFdbEntry": dot1dTpFdbEntry,
       "dot1dTpFdbAddress": dot1dTpFdbAddress,
       "dot1dTpFdbPort": dot1dTpFdbPort,
       "dot1dTpFdbStatus": dot1dTpFdbStatus,
       "dot1dTpPortTable": dot1dTpPortTable,
       "dot1dTpPortEntry": dot1dTpPortEntry,
       "dot1dTpPort": dot1dTpPort,
       "dot1dTpPortMaxInfo": dot1dTpPortMaxInfo,
       "dot1dTpPortInFrames": dot1dTpPortInFrames,
       "dot1dTpPortOutFrames": dot1dTpPortOutFrames,
       "dot1dTpPortInDiscards": dot1dTpPortInDiscards,
       "dot1dStatic": dot1dStatic,
       "dot1dStaticTable": dot1dStaticTable,
       "dot1dStaticEntry": dot1dStaticEntry,
       "dot1dStaticAddress": dot1dStaticAddress,
       "dot1dStaticReceivePort": dot1dStaticReceivePort,
       "dot1dStaticAllowedToGoTo": dot1dStaticAllowedToGoTo,
       "dot1dStaticStatus": dot1dStaticStatus,
       "phiv": phiv,
       "phivSystem": phivSystem,
       "phivManagement": phivManagement,
       "session": session,
       "end": end,
       "routing": routing,
       "circuit": circuit,
       "phivCircuitParametersTable": phivCircuitParametersTable,
       "phivCircuitParametersEntry": phivCircuitParametersEntry,
       "phivCircuitIndex": phivCircuitIndex,
       "phivCircuitLineIndex": phivCircuitLineIndex,
       "phivCircuitCommonState": phivCircuitCommonState,
       "phivCircuitCommonSubState": phivCircuitCommonSubState,
       "phivCircuitCommonName": phivCircuitCommonName,
       "phivCircuitExecRecallTimer": phivCircuitExecRecallTimer,
       "phivCircuitCommonType": phivCircuitCommonType,
       "phivCircuitService": phivCircuitService,
       "phivCircuitExecCost": phivCircuitExecCost,
       "phivCircuitExecHelloTimer": phivCircuitExecHelloTimer,
       "phivCircuitCountTable": phivCircuitCountTable,
       "phivCircuitCountEntry": phivCircuitCountEntry,
       "phivCircuitCountSecLastZeroed": phivCircuitCountSecLastZeroed,
       "phivCircuitCountTermPacketsRecd": phivCircuitCountTermPacketsRecd,
       "phivCircuitCountOriginPackSent": phivCircuitCountOriginPackSent,
       "phivCircuitCountTermCongLoss": phivCircuitCountTermCongLoss,
       "phivCircuitCountCorruptLoss": phivCircuitCountCorruptLoss,
       "phivCircuitCountTransitPksRecd": phivCircuitCountTransitPksRecd,
       "phivCircuitCountTransitPkSent": phivCircuitCountTransitPkSent,
       "phivCircuitCountTransitCongestLoss": phivCircuitCountTransitCongestLoss,
       "phivCircuitCountCircuitDown": phivCircuitCountCircuitDown,
       "phivCircuitCountInitFailure": phivCircuitCountInitFailure,
       "phivCircuitCountAdjDown": phivCircuitCountAdjDown,
       "phivCircuitCountPeakAdj": phivCircuitCountPeakAdj,
       "phivCircuitCountBytesRecd": phivCircuitCountBytesRecd,
       "phivCircuitCountBytesSent": phivCircuitCountBytesSent,
       "phivCircuitCountDataBlocksRecd": phivCircuitCountDataBlocksRecd,
       "phivCircuitCountDataBlocksSent": phivCircuitCountDataBlocksSent,
       "phivCircuitCountUsrBuffUnav": phivCircuitCountUsrBuffUnav,
       "phivCircuitOrigQueueLimit": phivCircuitOrigQueueLimit,
       "phivCircuitCountZeroCount": phivCircuitCountZeroCount,
       "ddcmp": ddcmp,
       "control": control,
       "ethernet": ethernet,
       "counters": counters,
       "adjacency": adjacency,
       "line": line,
       "nonBroadcastLine": nonBroadcastLine,
       "area": area,
       "char": char,
       "charNumber": charNumber,
       "charPortTable": charPortTable,
       "charPortEntry": charPortEntry,
       "charPortIndex": charPortIndex,
       "charPortName": charPortName,
       "charPortType": charPortType,
       "charPortHardware": charPortHardware,
       "charPortReset": charPortReset,
       "charPortAdminStatus": charPortAdminStatus,
       "charPortOperStatus": charPortOperStatus,
       "charPortLastChange": charPortLastChange,
       "charPortInFlowType": charPortInFlowType,
       "charPortOutFlowType": charPortOutFlowType,
       "charPortInFlowState": charPortInFlowState,
       "charPortOutFlowState": charPortOutFlowState,
       "charPortInCharacters": charPortInCharacters,
       "charPortOutCharacters": charPortOutCharacters,
       "charPortAdminOrigin": charPortAdminOrigin,
       "charPortSessionMaximum": charPortSessionMaximum,
       "charPortSessionNumber": charPortSessionNumber,
       "charPortSessionIndex": charPortSessionIndex,
       "charSessTable": charSessTable,
       "charSessEntry": charSessEntry,
       "charSessPortIndex": charSessPortIndex,
       "charSessIndex": charSessIndex,
       "charSessKill": charSessKill,
       "charSessState": charSessState,
       "charSessProtocol": charSessProtocol,
       "charSessOperOrigin": charSessOperOrigin,
       "charSessInCharacters": charSessInCharacters,
       "charSessOutCharacters": charSessOutCharacters,
       "charSessConnectionId": charSessConnectionId,
       "charSessStartTime": charSessStartTime,
       "wellKnownProtocols": wellKnownProtocols,
       "protocolOther": protocolOther,
       "protocolTelnet": protocolTelnet,
       "protocolRlogin": protocolRlogin,
       "protocolLat": protocolLat,
       "protocolX29": protocolX29,
       "protocolVtp": protocolVtp,
       "experimental": experimental,
       "private": private,
       "enterprises": enterprises,
       "mrvInReachProductDivision": mrvInReachProductDivision,
       "resourceFailure": resourceFailure,
       "sysLoginAuthenticationFailure": sysLoginAuthenticationFailure,
       "contactClosureChanged": contactClosureChanged,
       "powerAlarmFuseBankA": powerAlarmFuseBankA,
       "powerAlarmFuseBankB": powerAlarmFuseBankB,
       "powerSupplyAlarmA": powerSupplyAlarmA,
       "powerSupplyAlarmB": powerSupplyAlarmB,
       "portInputSignalChange": portInputSignalChange,
       "portOutputSignalChange": portOutputSignalChange,
       "humidityThresholdExceeded": humidityThresholdExceeded,
       "temperatureThresholdExceeded": temperatureThresholdExceeded,
       "alarmMasterNotResponding": alarmMasterNotResponding,
       "alarmMasterInputStateChange": alarmMasterInputStateChange,
       "asciiToTrapTranslation": asciiToTrapTranslation,
       "powerMasterNotResponding": powerMasterNotResponding,
       "temperatureNormal": temperatureNormal,
       "humidityNormal": humidityNormal,
       "alarmMasterSideAOff": alarmMasterSideAOff,
       "alarmMasterSideBOff": alarmMasterSideBOff,
       "alarmMasterSideAOn": alarmMasterSideAOn,
       "alarmMasterSideBOn": alarmMasterSideBOn,
       "icmpPingHostNotReachable": icmpPingHostNotReachable,
       "icmpPingHostResponding": icmpPingHostResponding,
       "alarmInputLowDensity0001Alarm": alarmInputLowDensity0001Alarm,
       "alarmInputLowDensity0002Alarm": alarmInputLowDensity0002Alarm,
       "alarmInputLowDensity0003Alarm": alarmInputLowDensity0003Alarm,
       "alarmInputLowDensity0004Alarm": alarmInputLowDensity0004Alarm,
       "alarmInputLowDensity0005Alarm": alarmInputLowDensity0005Alarm,
       "alarmInputLowDensity0006Alarm": alarmInputLowDensity0006Alarm,
       "alarmInputLowDensity0007Alarm": alarmInputLowDensity0007Alarm,
       "alarmInputLowDensity0008Alarm": alarmInputLowDensity0008Alarm,
       "alarmInputLowDensity0009Alarm": alarmInputLowDensity0009Alarm,
       "alarmInputLowDensity0010Alarm": alarmInputLowDensity0010Alarm,
       "alarmInputLowDensity0011Alarm": alarmInputLowDensity0011Alarm,
       "alarmInputLowDensity0012Alarm": alarmInputLowDensity0012Alarm,
       "alarmInputLowDensity0013Alarm": alarmInputLowDensity0013Alarm,
       "alarmInputLowDensity0014Alarm": alarmInputLowDensity0014Alarm,
       "alarmInputLowDensity0015Alarm": alarmInputLowDensity0015Alarm,
       "alarmInputLowDensity0016Alarm": alarmInputLowDensity0016Alarm,
       "alarmInputLowDensity0017Alarm": alarmInputLowDensity0017Alarm,
       "alarmInputLowDensity0018Alarm": alarmInputLowDensity0018Alarm,
       "alarmInputLowDensity0019Alarm": alarmInputLowDensity0019Alarm,
       "alarmInputLowDensity0020Alarm": alarmInputLowDensity0020Alarm,
       "alarmInputLowDensity0021Alarm": alarmInputLowDensity0021Alarm,
       "alarmInputLowDensity0022Alarm": alarmInputLowDensity0022Alarm,
       "alarmInputLowDensity0023Alarm": alarmInputLowDensity0023Alarm,
       "alarmInputLowDensity0024Alarm": alarmInputLowDensity0024Alarm,
       "alarmInputLowDensity0025Alarm": alarmInputLowDensity0025Alarm,
       "alarmInputLowDensity0026Alarm": alarmInputLowDensity0026Alarm,
       "alarmInputLowDensity0027Alarm": alarmInputLowDensity0027Alarm,
       "alarmInputLowDensity0028Alarm": alarmInputLowDensity0028Alarm,
       "alarmInputLowDensity0029Alarm": alarmInputLowDensity0029Alarm,
       "alarmInputLowDensity0030Alarm": alarmInputLowDensity0030Alarm,
       "alarmInputLowDensity0031Alarm": alarmInputLowDensity0031Alarm,
       "alarmInputLowDensity0032Alarm": alarmInputLowDensity0032Alarm,
       "alarmInputLowDensity0033Alarm": alarmInputLowDensity0033Alarm,
       "alarmInputLowDensity0034Alarm": alarmInputLowDensity0034Alarm,
       "alarmInputLowDensity0035Alarm": alarmInputLowDensity0035Alarm,
       "alarmInputLowDensity0036Alarm": alarmInputLowDensity0036Alarm,
       "alarmInputLowDensity0037Alarm": alarmInputLowDensity0037Alarm,
       "alarmInputLowDensity0038Alarm": alarmInputLowDensity0038Alarm,
       "alarmInputLowDensity0039Alarm": alarmInputLowDensity0039Alarm,
       "alarmInputLowDensity0040Alarm": alarmInputLowDensity0040Alarm,
       "alarmInputLowDensity0041Alarm": alarmInputLowDensity0041Alarm,
       "alarmInputLowDensity0042Alarm": alarmInputLowDensity0042Alarm,
       "alarmInputLowDensity0043Alarm": alarmInputLowDensity0043Alarm,
       "alarmInputLowDensity0044Alarm": alarmInputLowDensity0044Alarm,
       "alarmInputLowDensity0045Alarm": alarmInputLowDensity0045Alarm,
       "alarmInputLowDensity0046Alarm": alarmInputLowDensity0046Alarm,
       "alarmInputLowDensity0047Alarm": alarmInputLowDensity0047Alarm,
       "alarmInputLowDensity0048Alarm": alarmInputLowDensity0048Alarm,
       "alarmInputLowDensity0049Alarm": alarmInputLowDensity0049Alarm,
       "alarmInputLowDensity0050Alarm": alarmInputLowDensity0050Alarm,
       "alarmInputLowDensity0051Alarm": alarmInputLowDensity0051Alarm,
       "alarmInputLowDensity0052Alarm": alarmInputLowDensity0052Alarm,
       "alarmInputLowDensity0053Alarm": alarmInputLowDensity0053Alarm,
       "alarmInputLowDensity0054Alarm": alarmInputLowDensity0054Alarm,
       "alarmInputLowDensity0055Alarm": alarmInputLowDensity0055Alarm,
       "alarmInputLowDensity0056Alarm": alarmInputLowDensity0056Alarm,
       "alarmInputLowDensity0057Alarm": alarmInputLowDensity0057Alarm,
       "alarmInputLowDensity0058Alarm": alarmInputLowDensity0058Alarm,
       "alarmInputLowDensity0059Alarm": alarmInputLowDensity0059Alarm,
       "alarmInputLowDensity0060Alarm": alarmInputLowDensity0060Alarm,
       "alarmInputLowDensity0061Alarm": alarmInputLowDensity0061Alarm,
       "alarmInputLowDensity0062Alarm": alarmInputLowDensity0062Alarm,
       "alarmInputLowDensity0063Alarm": alarmInputLowDensity0063Alarm,
       "alarmInputLowDensity0064Alarm": alarmInputLowDensity0064Alarm,
       "alarmInputLowDensity0065Alarm": alarmInputLowDensity0065Alarm,
       "alarmInputLowDensity0066Alarm": alarmInputLowDensity0066Alarm,
       "alarmInputLowDensity0067Alarm": alarmInputLowDensity0067Alarm,
       "alarmInputLowDensity0068Alarm": alarmInputLowDensity0068Alarm,
       "alarmInputLowDensity0069Alarm": alarmInputLowDensity0069Alarm,
       "alarmInputLowDensity0070Alarm": alarmInputLowDensity0070Alarm,
       "alarmInputLowDensity0071Alarm": alarmInputLowDensity0071Alarm,
       "alarmInputLowDensity0072Alarm": alarmInputLowDensity0072Alarm,
       "alarmInputLowDensity0073Alarm": alarmInputLowDensity0073Alarm,
       "alarmInputLowDensity0074Alarm": alarmInputLowDensity0074Alarm,
       "alarmInputLowDensity0075Alarm": alarmInputLowDensity0075Alarm,
       "alarmInputLowDensity0076Alarm": alarmInputLowDensity0076Alarm,
       "alarmInputLowDensity0077Alarm": alarmInputLowDensity0077Alarm,
       "alarmInputLowDensity0078Alarm": alarmInputLowDensity0078Alarm,
       "alarmInputLowDensity0079Alarm": alarmInputLowDensity0079Alarm,
       "alarmInputLowDensity0080Alarm": alarmInputLowDensity0080Alarm,
       "alarmInputLowDensity0001Normal": alarmInputLowDensity0001Normal,
       "alarmInputLowDensity0002Normal": alarmInputLowDensity0002Normal,
       "alarmInputLowDensity0003Normal": alarmInputLowDensity0003Normal,
       "alarmInputLowDensity0004Normal": alarmInputLowDensity0004Normal,
       "alarmInputLowDensity0005Normal": alarmInputLowDensity0005Normal,
       "alarmInputLowDensity0006Normal": alarmInputLowDensity0006Normal,
       "alarmInputLowDensity0007Normal": alarmInputLowDensity0007Normal,
       "alarmInputLowDensity0008Normal": alarmInputLowDensity0008Normal,
       "alarmInputLowDensity0009Normal": alarmInputLowDensity0009Normal,
       "alarmInputLowDensity0010Normal": alarmInputLowDensity0010Normal,
       "alarmInputLowDensity0011Normal": alarmInputLowDensity0011Normal,
       "alarmInputLowDensity0012Normal": alarmInputLowDensity0012Normal,
       "alarmInputLowDensity0013Normal": alarmInputLowDensity0013Normal,
       "alarmInputLowDensity0014Normal": alarmInputLowDensity0014Normal,
       "alarmInputLowDensity0015Normal": alarmInputLowDensity0015Normal,
       "alarmInputLowDensity0016Normal": alarmInputLowDensity0016Normal,
       "alarmInputLowDensity0017Normal": alarmInputLowDensity0017Normal,
       "alarmInputLowDensity0018Normal": alarmInputLowDensity0018Normal,
       "alarmInputLowDensity0019Normal": alarmInputLowDensity0019Normal,
       "alarmInputLowDensity0020Normal": alarmInputLowDensity0020Normal,
       "alarmInputLowDensity0021Normal": alarmInputLowDensity0021Normal,
       "alarmInputLowDensity0022Normal": alarmInputLowDensity0022Normal,
       "alarmInputLowDensity0023Normal": alarmInputLowDensity0023Normal,
       "alarmInputLowDensity0024Normal": alarmInputLowDensity0024Normal,
       "alarmInputLowDensity0025Normal": alarmInputLowDensity0025Normal,
       "alarmInputLowDensity0026Normal": alarmInputLowDensity0026Normal,
       "alarmInputLowDensity0027Normal": alarmInputLowDensity0027Normal,
       "alarmInputLowDensity0028Normal": alarmInputLowDensity0028Normal,
       "alarmInputLowDensity0029Normal": alarmInputLowDensity0029Normal,
       "alarmInputLowDensity0030Normal": alarmInputLowDensity0030Normal,
       "alarmInputLowDensity0031Normal": alarmInputLowDensity0031Normal,
       "alarmInputLowDensity0032Normal": alarmInputLowDensity0032Normal,
       "alarmInputLowDensity0033Normal": alarmInputLowDensity0033Normal,
       "alarmInputLowDensity0034Normal": alarmInputLowDensity0034Normal,
       "alarmInputLowDensity0035Normal": alarmInputLowDensity0035Normal,
       "alarmInputLowDensity0036Normal": alarmInputLowDensity0036Normal,
       "alarmInputLowDensity0037Normal": alarmInputLowDensity0037Normal,
       "alarmInputLowDensity0038Normal": alarmInputLowDensity0038Normal,
       "alarmInputLowDensity0039Normal": alarmInputLowDensity0039Normal,
       "alarmInputLowDensity0040Normal": alarmInputLowDensity0040Normal,
       "alarmInputLowDensity0041Normal": alarmInputLowDensity0041Normal,
       "alarmInputLowDensity0042Normal": alarmInputLowDensity0042Normal,
       "alarmInputLowDensity0043Normal": alarmInputLowDensity0043Normal,
       "alarmInputLowDensity0044Normal": alarmInputLowDensity0044Normal,
       "alarmInputLowDensity0045Normal": alarmInputLowDensity0045Normal,
       "alarmInputLowDensity0046Normal": alarmInputLowDensity0046Normal,
       "alarmInputLowDensity0047Normal": alarmInputLowDensity0047Normal,
       "alarmInputLowDensity0048Normal": alarmInputLowDensity0048Normal,
       "alarmInputLowDensity0049Normal": alarmInputLowDensity0049Normal,
       "alarmInputLowDensity0050Normal": alarmInputLowDensity0050Normal,
       "alarmInputLowDensity0051Normal": alarmInputLowDensity0051Normal,
       "alarmInputLowDensity0052Normal": alarmInputLowDensity0052Normal,
       "alarmInputLowDensity0053Normal": alarmInputLowDensity0053Normal,
       "alarmInputLowDensity0054Normal": alarmInputLowDensity0054Normal,
       "alarmInputLowDensity0055Normal": alarmInputLowDensity0055Normal,
       "alarmInputLowDensity0056Normal": alarmInputLowDensity0056Normal,
       "alarmInputLowDensity0057Normal": alarmInputLowDensity0057Normal,
       "alarmInputLowDensity0058Normal": alarmInputLowDensity0058Normal,
       "alarmInputLowDensity0059Normal": alarmInputLowDensity0059Normal,
       "alarmInputLowDensity0060Normal": alarmInputLowDensity0060Normal,
       "alarmInputLowDensity0061Normal": alarmInputLowDensity0061Normal,
       "alarmInputLowDensity0062Normal": alarmInputLowDensity0062Normal,
       "alarmInputLowDensity0063Normal": alarmInputLowDensity0063Normal,
       "alarmInputLowDensity0064Normal": alarmInputLowDensity0064Normal,
       "alarmInputLowDensity0065Normal": alarmInputLowDensity0065Normal,
       "alarmInputLowDensity0066Normal": alarmInputLowDensity0066Normal,
       "alarmInputLowDensity0067Normal": alarmInputLowDensity0067Normal,
       "alarmInputLowDensity0068Normal": alarmInputLowDensity0068Normal,
       "alarmInputLowDensity0069Normal": alarmInputLowDensity0069Normal,
       "alarmInputLowDensity0070Normal": alarmInputLowDensity0070Normal,
       "alarmInputLowDensity0071Normal": alarmInputLowDensity0071Normal,
       "alarmInputLowDensity0072Normal": alarmInputLowDensity0072Normal,
       "alarmInputLowDensity0073Normal": alarmInputLowDensity0073Normal,
       "alarmInputLowDensity0074Normal": alarmInputLowDensity0074Normal,
       "alarmInputLowDensity0075Normal": alarmInputLowDensity0075Normal,
       "alarmInputLowDensity0076Normal": alarmInputLowDensity0076Normal,
       "alarmInputLowDensity0077Normal": alarmInputLowDensity0077Normal,
       "alarmInputLowDensity0078Normal": alarmInputLowDensity0078Normal,
       "alarmInputLowDensity0079Normal": alarmInputLowDensity0079Normal,
       "alarmInputLowDensity0080Normal": alarmInputLowDensity0080Normal,
       "alarmInputHighDensity0001Alarm": alarmInputHighDensity0001Alarm,
       "alarmInputHighDensity0002Alarm": alarmInputHighDensity0002Alarm,
       "alarmInputHighDensity0003Alarm": alarmInputHighDensity0003Alarm,
       "alarmInputHighDensity0004Alarm": alarmInputHighDensity0004Alarm,
       "alarmInputHighDensity0005Alarm": alarmInputHighDensity0005Alarm,
       "alarmInputHighDensity0006Alarm": alarmInputHighDensity0006Alarm,
       "alarmInputHighDensity0007Alarm": alarmInputHighDensity0007Alarm,
       "alarmInputHighDensity0008Alarm": alarmInputHighDensity0008Alarm,
       "alarmInputHighDensity0009Alarm": alarmInputHighDensity0009Alarm,
       "alarmInputHighDensity0010Alarm": alarmInputHighDensity0010Alarm,
       "alarmInputHighDensity0011Alarm": alarmInputHighDensity0011Alarm,
       "alarmInputHighDensity0012Alarm": alarmInputHighDensity0012Alarm,
       "alarmInputHighDensity0013Alarm": alarmInputHighDensity0013Alarm,
       "alarmInputHighDensity0014Alarm": alarmInputHighDensity0014Alarm,
       "alarmInputHighDensity0015Alarm": alarmInputHighDensity0015Alarm,
       "alarmInputHighDensity0016Alarm": alarmInputHighDensity0016Alarm,
       "alarmInputHighDensity0017Alarm": alarmInputHighDensity0017Alarm,
       "alarmInputHighDensity0018Alarm": alarmInputHighDensity0018Alarm,
       "alarmInputHighDensity0019Alarm": alarmInputHighDensity0019Alarm,
       "alarmInputHighDensity0020Alarm": alarmInputHighDensity0020Alarm,
       "alarmInputHighDensity0021Alarm": alarmInputHighDensity0021Alarm,
       "alarmInputHighDensity0022Alarm": alarmInputHighDensity0022Alarm,
       "alarmInputHighDensity0023Alarm": alarmInputHighDensity0023Alarm,
       "alarmInputHighDensity0024Alarm": alarmInputHighDensity0024Alarm,
       "alarmInputHighDensity0025Alarm": alarmInputHighDensity0025Alarm,
       "alarmInputHighDensity0026Alarm": alarmInputHighDensity0026Alarm,
       "alarmInputHighDensity0027Alarm": alarmInputHighDensity0027Alarm,
       "alarmInputHighDensity0028Alarm": alarmInputHighDensity0028Alarm,
       "alarmInputHighDensity0029Alarm": alarmInputHighDensity0029Alarm,
       "alarmInputHighDensity0030Alarm": alarmInputHighDensity0030Alarm,
       "alarmInputHighDensity0031Alarm": alarmInputHighDensity0031Alarm,
       "alarmInputHighDensity0032Alarm": alarmInputHighDensity0032Alarm,
       "alarmInputHighDensity0033Alarm": alarmInputHighDensity0033Alarm,
       "alarmInputHighDensity0034Alarm": alarmInputHighDensity0034Alarm,
       "alarmInputHighDensity0035Alarm": alarmInputHighDensity0035Alarm,
       "alarmInputHighDensity0036Alarm": alarmInputHighDensity0036Alarm,
       "alarmInputHighDensity0037Alarm": alarmInputHighDensity0037Alarm,
       "alarmInputHighDensity0038Alarm": alarmInputHighDensity0038Alarm,
       "alarmInputHighDensity0039Alarm": alarmInputHighDensity0039Alarm,
       "alarmInputHighDensity0040Alarm": alarmInputHighDensity0040Alarm,
       "alarmInputHighDensity0041Alarm": alarmInputHighDensity0041Alarm,
       "alarmInputHighDensity0042Alarm": alarmInputHighDensity0042Alarm,
       "alarmInputHighDensity0043Alarm": alarmInputHighDensity0043Alarm,
       "alarmInputHighDensity0044Alarm": alarmInputHighDensity0044Alarm,
       "alarmInputHighDensity0045Alarm": alarmInputHighDensity0045Alarm,
       "alarmInputHighDensity0046Alarm": alarmInputHighDensity0046Alarm,
       "alarmInputHighDensity0047Alarm": alarmInputHighDensity0047Alarm,
       "alarmInputHighDensity0048Alarm": alarmInputHighDensity0048Alarm,
       "alarmInputHighDensity0049Alarm": alarmInputHighDensity0049Alarm,
       "alarmInputHighDensity0050Alarm": alarmInputHighDensity0050Alarm,
       "alarmInputHighDensity0051Alarm": alarmInputHighDensity0051Alarm,
       "alarmInputHighDensity0052Alarm": alarmInputHighDensity0052Alarm,
       "alarmInputHighDensity0053Alarm": alarmInputHighDensity0053Alarm,
       "alarmInputHighDensity0054Alarm": alarmInputHighDensity0054Alarm,
       "alarmInputHighDensity0055Alarm": alarmInputHighDensity0055Alarm,
       "alarmInputHighDensity0056Alarm": alarmInputHighDensity0056Alarm,
       "alarmInputHighDensity0057Alarm": alarmInputHighDensity0057Alarm,
       "alarmInputHighDensity0058Alarm": alarmInputHighDensity0058Alarm,
       "alarmInputHighDensity0059Alarm": alarmInputHighDensity0059Alarm,
       "alarmInputHighDensity0060Alarm": alarmInputHighDensity0060Alarm,
       "alarmInputHighDensity0061Alarm": alarmInputHighDensity0061Alarm,
       "alarmInputHighDensity0062Alarm": alarmInputHighDensity0062Alarm,
       "alarmInputHighDensity0063Alarm": alarmInputHighDensity0063Alarm,
       "alarmInputHighDensity0064Alarm": alarmInputHighDensity0064Alarm,
       "alarmInputHighDensity0065Alarm": alarmInputHighDensity0065Alarm,
       "alarmInputHighDensity0066Alarm": alarmInputHighDensity0066Alarm,
       "alarmInputHighDensity0067Alarm": alarmInputHighDensity0067Alarm,
       "alarmInputHighDensity0068Alarm": alarmInputHighDensity0068Alarm,
       "alarmInputHighDensity0069Alarm": alarmInputHighDensity0069Alarm,
       "alarmInputHighDensity0070Alarm": alarmInputHighDensity0070Alarm,
       "alarmInputHighDensity0071Alarm": alarmInputHighDensity0071Alarm,
       "alarmInputHighDensity0072Alarm": alarmInputHighDensity0072Alarm,
       "alarmInputHighDensity0073Alarm": alarmInputHighDensity0073Alarm,
       "alarmInputHighDensity0074Alarm": alarmInputHighDensity0074Alarm,
       "alarmInputHighDensity0075Alarm": alarmInputHighDensity0075Alarm,
       "alarmInputHighDensity0076Alarm": alarmInputHighDensity0076Alarm,
       "alarmInputHighDensity0077Alarm": alarmInputHighDensity0077Alarm,
       "alarmInputHighDensity0078Alarm": alarmInputHighDensity0078Alarm,
       "alarmInputHighDensity0079Alarm": alarmInputHighDensity0079Alarm,
       "alarmInputHighDensity0080Alarm": alarmInputHighDensity0080Alarm,
       "alarmInputHighDensity0081Alarm": alarmInputHighDensity0081Alarm,
       "alarmInputHighDensity0082Alarm": alarmInputHighDensity0082Alarm,
       "alarmInputHighDensity0083Alarm": alarmInputHighDensity0083Alarm,
       "alarmInputHighDensity0084Alarm": alarmInputHighDensity0084Alarm,
       "alarmInputHighDensity0085Alarm": alarmInputHighDensity0085Alarm,
       "alarmInputHighDensity0086Alarm": alarmInputHighDensity0086Alarm,
       "alarmInputHighDensity0087Alarm": alarmInputHighDensity0087Alarm,
       "alarmInputHighDensity0088Alarm": alarmInputHighDensity0088Alarm,
       "alarmInputHighDensity0089Alarm": alarmInputHighDensity0089Alarm,
       "alarmInputHighDensity0090Alarm": alarmInputHighDensity0090Alarm,
       "alarmInputHighDensity0091Alarm": alarmInputHighDensity0091Alarm,
       "alarmInputHighDensity0092Alarm": alarmInputHighDensity0092Alarm,
       "alarmInputHighDensity0093Alarm": alarmInputHighDensity0093Alarm,
       "alarmInputHighDensity0094Alarm": alarmInputHighDensity0094Alarm,
       "alarmInputHighDensity0095Alarm": alarmInputHighDensity0095Alarm,
       "alarmInputHighDensity0096Alarm": alarmInputHighDensity0096Alarm,
       "alarmInputHighDensity0097Alarm": alarmInputHighDensity0097Alarm,
       "alarmInputHighDensity0098Alarm": alarmInputHighDensity0098Alarm,
       "alarmInputHighDensity0099Alarm": alarmInputHighDensity0099Alarm,
       "alarmInputHighDensity0100Alarm": alarmInputHighDensity0100Alarm,
       "alarmInputHighDensity0101Alarm": alarmInputHighDensity0101Alarm,
       "alarmInputHighDensity0102Alarm": alarmInputHighDensity0102Alarm,
       "alarmInputHighDensity0103Alarm": alarmInputHighDensity0103Alarm,
       "alarmInputHighDensity0104Alarm": alarmInputHighDensity0104Alarm,
       "alarmInputHighDensity0105Alarm": alarmInputHighDensity0105Alarm,
       "alarmInputHighDensity0106Alarm": alarmInputHighDensity0106Alarm,
       "alarmInputHighDensity0107Alarm": alarmInputHighDensity0107Alarm,
       "alarmInputHighDensity0108Alarm": alarmInputHighDensity0108Alarm,
       "alarmInputHighDensity0109Alarm": alarmInputHighDensity0109Alarm,
       "alarmInputHighDensity0110Alarm": alarmInputHighDensity0110Alarm,
       "alarmInputHighDensity0111Alarm": alarmInputHighDensity0111Alarm,
       "alarmInputHighDensity0112Alarm": alarmInputHighDensity0112Alarm,
       "alarmInputHighDensity0113Alarm": alarmInputHighDensity0113Alarm,
       "alarmInputHighDensity0114Alarm": alarmInputHighDensity0114Alarm,
       "alarmInputHighDensity0115Alarm": alarmInputHighDensity0115Alarm,
       "alarmInputHighDensity0116Alarm": alarmInputHighDensity0116Alarm,
       "alarmInputHighDensity0117Alarm": alarmInputHighDensity0117Alarm,
       "alarmInputHighDensity0118Alarm": alarmInputHighDensity0118Alarm,
       "alarmInputHighDensity0119Alarm": alarmInputHighDensity0119Alarm,
       "alarmInputHighDensity0120Alarm": alarmInputHighDensity0120Alarm,
       "alarmInputHighDensity0121Alarm": alarmInputHighDensity0121Alarm,
       "alarmInputHighDensity0122Alarm": alarmInputHighDensity0122Alarm,
       "alarmInputHighDensity0123Alarm": alarmInputHighDensity0123Alarm,
       "alarmInputHighDensity0124Alarm": alarmInputHighDensity0124Alarm,
       "alarmInputHighDensity0125Alarm": alarmInputHighDensity0125Alarm,
       "alarmInputHighDensity0126Alarm": alarmInputHighDensity0126Alarm,
       "alarmInputHighDensity0127Alarm": alarmInputHighDensity0127Alarm,
       "alarmInputHighDensity0128Alarm": alarmInputHighDensity0128Alarm,
       "alarmInputHighDensity0129Alarm": alarmInputHighDensity0129Alarm,
       "alarmInputHighDensity0130Alarm": alarmInputHighDensity0130Alarm,
       "alarmInputHighDensity0131Alarm": alarmInputHighDensity0131Alarm,
       "alarmInputHighDensity0132Alarm": alarmInputHighDensity0132Alarm,
       "alarmInputHighDensity0133Alarm": alarmInputHighDensity0133Alarm,
       "alarmInputHighDensity0134Alarm": alarmInputHighDensity0134Alarm,
       "alarmInputHighDensity0135Alarm": alarmInputHighDensity0135Alarm,
       "alarmInputHighDensity0136Alarm": alarmInputHighDensity0136Alarm,
       "alarmInputHighDensity0137Alarm": alarmInputHighDensity0137Alarm,
       "alarmInputHighDensity0138Alarm": alarmInputHighDensity0138Alarm,
       "alarmInputHighDensity0139Alarm": alarmInputHighDensity0139Alarm,
       "alarmInputHighDensity0140Alarm": alarmInputHighDensity0140Alarm,
       "alarmInputHighDensity0141Alarm": alarmInputHighDensity0141Alarm,
       "alarmInputHighDensity0142Alarm": alarmInputHighDensity0142Alarm,
       "alarmInputHighDensity0143Alarm": alarmInputHighDensity0143Alarm,
       "alarmInputHighDensity0144Alarm": alarmInputHighDensity0144Alarm,
       "alarmInputHighDensity0145Alarm": alarmInputHighDensity0145Alarm,
       "alarmInputHighDensity0146Alarm": alarmInputHighDensity0146Alarm,
       "alarmInputHighDensity0147Alarm": alarmInputHighDensity0147Alarm,
       "alarmInputHighDensity0148Alarm": alarmInputHighDensity0148Alarm,
       "alarmInputHighDensity0149Alarm": alarmInputHighDensity0149Alarm,
       "alarmInputHighDensity0150Alarm": alarmInputHighDensity0150Alarm,
       "alarmInputHighDensity0151Alarm": alarmInputHighDensity0151Alarm,
       "alarmInputHighDensity0152Alarm": alarmInputHighDensity0152Alarm,
       "alarmInputHighDensity0153Alarm": alarmInputHighDensity0153Alarm,
       "alarmInputHighDensity0154Alarm": alarmInputHighDensity0154Alarm,
       "alarmInputHighDensity0155Alarm": alarmInputHighDensity0155Alarm,
       "alarmInputHighDensity0156Alarm": alarmInputHighDensity0156Alarm,
       "alarmInputHighDensity0157Alarm": alarmInputHighDensity0157Alarm,
       "alarmInputHighDensity0158Alarm": alarmInputHighDensity0158Alarm,
       "alarmInputHighDensity0159Alarm": alarmInputHighDensity0159Alarm,
       "alarmInputHighDensity0160Alarm": alarmInputHighDensity0160Alarm,
       "alarmInputHighDensity0161Alarm": alarmInputHighDensity0161Alarm,
       "alarmInputHighDensity0162Alarm": alarmInputHighDensity0162Alarm,
       "alarmInputHighDensity0163Alarm": alarmInputHighDensity0163Alarm,
       "alarmInputHighDensity0164Alarm": alarmInputHighDensity0164Alarm,
       "alarmInputHighDensity0165Alarm": alarmInputHighDensity0165Alarm,
       "alarmInputHighDensity0166Alarm": alarmInputHighDensity0166Alarm,
       "alarmInputHighDensity0167Alarm": alarmInputHighDensity0167Alarm,
       "alarmInputHighDensity0168Alarm": alarmInputHighDensity0168Alarm,
       "alarmInputHighDensity0169Alarm": alarmInputHighDensity0169Alarm,
       "alarmInputHighDensity0170Alarm": alarmInputHighDensity0170Alarm,
       "alarmInputHighDensity0171Alarm": alarmInputHighDensity0171Alarm,
       "alarmInputHighDensity0172Alarm": alarmInputHighDensity0172Alarm,
       "alarmInputHighDensity0173Alarm": alarmInputHighDensity0173Alarm,
       "alarmInputHighDensity0174Alarm": alarmInputHighDensity0174Alarm,
       "alarmInputHighDensity0175Alarm": alarmInputHighDensity0175Alarm,
       "alarmInputHighDensity0176Alarm": alarmInputHighDensity0176Alarm,
       "alarmInputHighDensity0177Alarm": alarmInputHighDensity0177Alarm,
       "alarmInputHighDensity0178Alarm": alarmInputHighDensity0178Alarm,
       "alarmInputHighDensity0179Alarm": alarmInputHighDensity0179Alarm,
       "alarmInputHighDensity0180Alarm": alarmInputHighDensity0180Alarm,
       "alarmInputHighDensity0181Alarm": alarmInputHighDensity0181Alarm,
       "alarmInputHighDensity0182Alarm": alarmInputHighDensity0182Alarm,
       "alarmInputHighDensity0183Alarm": alarmInputHighDensity0183Alarm,
       "alarmInputHighDensity0184Alarm": alarmInputHighDensity0184Alarm,
       "alarmInputHighDensity0185Alarm": alarmInputHighDensity0185Alarm,
       "alarmInputHighDensity0186Alarm": alarmInputHighDensity0186Alarm,
       "alarmInputHighDensity0187Alarm": alarmInputHighDensity0187Alarm,
       "alarmInputHighDensity0188Alarm": alarmInputHighDensity0188Alarm,
       "alarmInputHighDensity0189Alarm": alarmInputHighDensity0189Alarm,
       "alarmInputHighDensity0190Alarm": alarmInputHighDensity0190Alarm,
       "alarmInputHighDensity0191Alarm": alarmInputHighDensity0191Alarm,
       "alarmInputHighDensity0192Alarm": alarmInputHighDensity0192Alarm,
       "alarmInputHighDensity0193Alarm": alarmInputHighDensity0193Alarm,
       "alarmInputHighDensity0194Alarm": alarmInputHighDensity0194Alarm,
       "alarmInputHighDensity0195Alarm": alarmInputHighDensity0195Alarm,
       "alarmInputHighDensity0196Alarm": alarmInputHighDensity0196Alarm,
       "alarmInputHighDensity0197Alarm": alarmInputHighDensity0197Alarm,
       "alarmInputHighDensity0198Alarm": alarmInputHighDensity0198Alarm,
       "alarmInputHighDensity0199Alarm": alarmInputHighDensity0199Alarm,
       "alarmInputHighDensity0200Alarm": alarmInputHighDensity0200Alarm,
       "alarmInputHighDensity0201Alarm": alarmInputHighDensity0201Alarm,
       "alarmInputHighDensity0202Alarm": alarmInputHighDensity0202Alarm,
       "alarmInputHighDensity0203Alarm": alarmInputHighDensity0203Alarm,
       "alarmInputHighDensity0204Alarm": alarmInputHighDensity0204Alarm,
       "alarmInputHighDensity0205Alarm": alarmInputHighDensity0205Alarm,
       "alarmInputHighDensity0206Alarm": alarmInputHighDensity0206Alarm,
       "alarmInputHighDensity0207Alarm": alarmInputHighDensity0207Alarm,
       "alarmInputHighDensity0208Alarm": alarmInputHighDensity0208Alarm,
       "alarmInputHighDensity0209Alarm": alarmInputHighDensity0209Alarm,
       "alarmInputHighDensity0210Alarm": alarmInputHighDensity0210Alarm,
       "alarmInputHighDensity0211Alarm": alarmInputHighDensity0211Alarm,
       "alarmInputHighDensity0212Alarm": alarmInputHighDensity0212Alarm,
       "alarmInputHighDensity0213Alarm": alarmInputHighDensity0213Alarm,
       "alarmInputHighDensity0214Alarm": alarmInputHighDensity0214Alarm,
       "alarmInputHighDensity0215Alarm": alarmInputHighDensity0215Alarm,
       "alarmInputHighDensity0216Alarm": alarmInputHighDensity0216Alarm,
       "alarmInputHighDensity0217Alarm": alarmInputHighDensity0217Alarm,
       "alarmInputHighDensity0218Alarm": alarmInputHighDensity0218Alarm,
       "alarmInputHighDensity0219Alarm": alarmInputHighDensity0219Alarm,
       "alarmInputHighDensity0220Alarm": alarmInputHighDensity0220Alarm,
       "alarmInputHighDensity0221Alarm": alarmInputHighDensity0221Alarm,
       "alarmInputHighDensity0222Alarm": alarmInputHighDensity0222Alarm,
       "alarmInputHighDensity0223Alarm": alarmInputHighDensity0223Alarm,
       "alarmInputHighDensity0224Alarm": alarmInputHighDensity0224Alarm,
       "alarmInputHighDensity0225Alarm": alarmInputHighDensity0225Alarm,
       "alarmInputHighDensity0226Alarm": alarmInputHighDensity0226Alarm,
       "alarmInputHighDensity0227Alarm": alarmInputHighDensity0227Alarm,
       "alarmInputHighDensity0228Alarm": alarmInputHighDensity0228Alarm,
       "alarmInputHighDensity0229Alarm": alarmInputHighDensity0229Alarm,
       "alarmInputHighDensity0230Alarm": alarmInputHighDensity0230Alarm,
       "alarmInputHighDensity0231Alarm": alarmInputHighDensity0231Alarm,
       "alarmInputHighDensity0232Alarm": alarmInputHighDensity0232Alarm,
       "alarmInputHighDensity0233Alarm": alarmInputHighDensity0233Alarm,
       "alarmInputHighDensity0234Alarm": alarmInputHighDensity0234Alarm,
       "alarmInputHighDensity0235Alarm": alarmInputHighDensity0235Alarm,
       "alarmInputHighDensity0236Alarm": alarmInputHighDensity0236Alarm,
       "alarmInputHighDensity0237Alarm": alarmInputHighDensity0237Alarm,
       "alarmInputHighDensity0238Alarm": alarmInputHighDensity0238Alarm,
       "alarmInputHighDensity0239Alarm": alarmInputHighDensity0239Alarm,
       "alarmInputHighDensity0240Alarm": alarmInputHighDensity0240Alarm,
       "alarmInputHighDensity0241Alarm": alarmInputHighDensity0241Alarm,
       "alarmInputHighDensity0242Alarm": alarmInputHighDensity0242Alarm,
       "alarmInputHighDensity0243Alarm": alarmInputHighDensity0243Alarm,
       "alarmInputHighDensity0244Alarm": alarmInputHighDensity0244Alarm,
       "alarmInputHighDensity0245Alarm": alarmInputHighDensity0245Alarm,
       "alarmInputHighDensity0246Alarm": alarmInputHighDensity0246Alarm,
       "alarmInputHighDensity0247Alarm": alarmInputHighDensity0247Alarm,
       "alarmInputHighDensity0248Alarm": alarmInputHighDensity0248Alarm,
       "alarmInputHighDensity0249Alarm": alarmInputHighDensity0249Alarm,
       "alarmInputHighDensity0250Alarm": alarmInputHighDensity0250Alarm,
       "alarmInputHighDensity0251Alarm": alarmInputHighDensity0251Alarm,
       "alarmInputHighDensity0252Alarm": alarmInputHighDensity0252Alarm,
       "alarmInputHighDensity0253Alarm": alarmInputHighDensity0253Alarm,
       "alarmInputHighDensity0254Alarm": alarmInputHighDensity0254Alarm,
       "alarmInputHighDensity0255Alarm": alarmInputHighDensity0255Alarm,
       "alarmInputHighDensity0256Alarm": alarmInputHighDensity0256Alarm,
       "alarmInputHighDensity0257Alarm": alarmInputHighDensity0257Alarm,
       "alarmInputHighDensity0258Alarm": alarmInputHighDensity0258Alarm,
       "alarmInputHighDensity0259Alarm": alarmInputHighDensity0259Alarm,
       "alarmInputHighDensity0260Alarm": alarmInputHighDensity0260Alarm,
       "alarmInputHighDensity0261Alarm": alarmInputHighDensity0261Alarm,
       "alarmInputHighDensity0262Alarm": alarmInputHighDensity0262Alarm,
       "alarmInputHighDensity0263Alarm": alarmInputHighDensity0263Alarm,
       "alarmInputHighDensity0264Alarm": alarmInputHighDensity0264Alarm,
       "alarmInputHighDensity0265Alarm": alarmInputHighDensity0265Alarm,
       "alarmInputHighDensity0266Alarm": alarmInputHighDensity0266Alarm,
       "alarmInputHighDensity0267Alarm": alarmInputHighDensity0267Alarm,
       "alarmInputHighDensity0268Alarm": alarmInputHighDensity0268Alarm,
       "alarmInputHighDensity0269Alarm": alarmInputHighDensity0269Alarm,
       "alarmInputHighDensity0270Alarm": alarmInputHighDensity0270Alarm,
       "alarmInputHighDensity0271Alarm": alarmInputHighDensity0271Alarm,
       "alarmInputHighDensity0272Alarm": alarmInputHighDensity0272Alarm,
       "alarmInputHighDensity0273Alarm": alarmInputHighDensity0273Alarm,
       "alarmInputHighDensity0274Alarm": alarmInputHighDensity0274Alarm,
       "alarmInputHighDensity0275Alarm": alarmInputHighDensity0275Alarm,
       "alarmInputHighDensity0276Alarm": alarmInputHighDensity0276Alarm,
       "alarmInputHighDensity0277Alarm": alarmInputHighDensity0277Alarm,
       "alarmInputHighDensity0278Alarm": alarmInputHighDensity0278Alarm,
       "alarmInputHighDensity0279Alarm": alarmInputHighDensity0279Alarm,
       "alarmInputHighDensity0280Alarm": alarmInputHighDensity0280Alarm,
       "alarmInputHighDensity0281Alarm": alarmInputHighDensity0281Alarm,
       "alarmInputHighDensity0282Alarm": alarmInputHighDensity0282Alarm,
       "alarmInputHighDensity0283Alarm": alarmInputHighDensity0283Alarm,
       "alarmInputHighDensity0284Alarm": alarmInputHighDensity0284Alarm,
       "alarmInputHighDensity0285Alarm": alarmInputHighDensity0285Alarm,
       "alarmInputHighDensity0286Alarm": alarmInputHighDensity0286Alarm,
       "alarmInputHighDensity0287Alarm": alarmInputHighDensity0287Alarm,
       "alarmInputHighDensity0288Alarm": alarmInputHighDensity0288Alarm,
       "alarmInputHighDensity0289Alarm": alarmInputHighDensity0289Alarm,
       "alarmInputHighDensity0290Alarm": alarmInputHighDensity0290Alarm,
       "alarmInputHighDensity0291Alarm": alarmInputHighDensity0291Alarm,
       "alarmInputHighDensity0292Alarm": alarmInputHighDensity0292Alarm,
       "alarmInputHighDensity0293Alarm": alarmInputHighDensity0293Alarm,
       "alarmInputHighDensity0294Alarm": alarmInputHighDensity0294Alarm,
       "alarmInputHighDensity0295Alarm": alarmInputHighDensity0295Alarm,
       "alarmInputHighDensity0296Alarm": alarmInputHighDensity0296Alarm,
       "alarmInputHighDensity0297Alarm": alarmInputHighDensity0297Alarm,
       "alarmInputHighDensity0298Alarm": alarmInputHighDensity0298Alarm,
       "alarmInputHighDensity0299Alarm": alarmInputHighDensity0299Alarm,
       "alarmInputHighDensity0300Alarm": alarmInputHighDensity0300Alarm,
       "alarmInputHighDensity0301Alarm": alarmInputHighDensity0301Alarm,
       "alarmInputHighDensity0302Alarm": alarmInputHighDensity0302Alarm,
       "alarmInputHighDensity0303Alarm": alarmInputHighDensity0303Alarm,
       "alarmInputHighDensity0304Alarm": alarmInputHighDensity0304Alarm,
       "alarmInputHighDensity0305Alarm": alarmInputHighDensity0305Alarm,
       "alarmInputHighDensity0306Alarm": alarmInputHighDensity0306Alarm,
       "alarmInputHighDensity0307Alarm": alarmInputHighDensity0307Alarm,
       "alarmInputHighDensity0308Alarm": alarmInputHighDensity0308Alarm,
       "alarmInputHighDensity0309Alarm": alarmInputHighDensity0309Alarm,
       "alarmInputHighDensity0310Alarm": alarmInputHighDensity0310Alarm,
       "alarmInputHighDensity0311Alarm": alarmInputHighDensity0311Alarm,
       "alarmInputHighDensity0312Alarm": alarmInputHighDensity0312Alarm,
       "alarmInputHighDensity0313Alarm": alarmInputHighDensity0313Alarm,
       "alarmInputHighDensity0314Alarm": alarmInputHighDensity0314Alarm,
       "alarmInputHighDensity0315Alarm": alarmInputHighDensity0315Alarm,
       "alarmInputHighDensity0316Alarm": alarmInputHighDensity0316Alarm,
       "alarmInputHighDensity0317Alarm": alarmInputHighDensity0317Alarm,
       "alarmInputHighDensity0318Alarm": alarmInputHighDensity0318Alarm,
       "alarmInputHighDensity0319Alarm": alarmInputHighDensity0319Alarm,
       "alarmInputHighDensity0320Alarm": alarmInputHighDensity0320Alarm,
       "alarmInputHighDensity0321Alarm": alarmInputHighDensity0321Alarm,
       "alarmInputHighDensity0322Alarm": alarmInputHighDensity0322Alarm,
       "alarmInputHighDensity0323Alarm": alarmInputHighDensity0323Alarm,
       "alarmInputHighDensity0324Alarm": alarmInputHighDensity0324Alarm,
       "alarmInputHighDensity0325Alarm": alarmInputHighDensity0325Alarm,
       "alarmInputHighDensity0326Alarm": alarmInputHighDensity0326Alarm,
       "alarmInputHighDensity0327Alarm": alarmInputHighDensity0327Alarm,
       "alarmInputHighDensity0328Alarm": alarmInputHighDensity0328Alarm,
       "alarmInputHighDensity0329Alarm": alarmInputHighDensity0329Alarm,
       "alarmInputHighDensity0330Alarm": alarmInputHighDensity0330Alarm,
       "alarmInputHighDensity0331Alarm": alarmInputHighDensity0331Alarm,
       "alarmInputHighDensity0332Alarm": alarmInputHighDensity0332Alarm,
       "alarmInputHighDensity0333Alarm": alarmInputHighDensity0333Alarm,
       "alarmInputHighDensity0334Alarm": alarmInputHighDensity0334Alarm,
       "alarmInputHighDensity0335Alarm": alarmInputHighDensity0335Alarm,
       "alarmInputHighDensity0336Alarm": alarmInputHighDensity0336Alarm,
       "alarmInputHighDensity0337Alarm": alarmInputHighDensity0337Alarm,
       "alarmInputHighDensity0338Alarm": alarmInputHighDensity0338Alarm,
       "alarmInputHighDensity0339Alarm": alarmInputHighDensity0339Alarm,
       "alarmInputHighDensity0340Alarm": alarmInputHighDensity0340Alarm,
       "alarmInputHighDensity0341Alarm": alarmInputHighDensity0341Alarm,
       "alarmInputHighDensity0342Alarm": alarmInputHighDensity0342Alarm,
       "alarmInputHighDensity0343Alarm": alarmInputHighDensity0343Alarm,
       "alarmInputHighDensity0344Alarm": alarmInputHighDensity0344Alarm,
       "alarmInputHighDensity0345Alarm": alarmInputHighDensity0345Alarm,
       "alarmInputHighDensity0346Alarm": alarmInputHighDensity0346Alarm,
       "alarmInputHighDensity0347Alarm": alarmInputHighDensity0347Alarm,
       "alarmInputHighDensity0348Alarm": alarmInputHighDensity0348Alarm,
       "alarmInputHighDensity0349Alarm": alarmInputHighDensity0349Alarm,
       "alarmInputHighDensity0350Alarm": alarmInputHighDensity0350Alarm,
       "alarmInputHighDensity0351Alarm": alarmInputHighDensity0351Alarm,
       "alarmInputHighDensity0352Alarm": alarmInputHighDensity0352Alarm,
       "alarmInputHighDensity0353Alarm": alarmInputHighDensity0353Alarm,
       "alarmInputHighDensity0354Alarm": alarmInputHighDensity0354Alarm,
       "alarmInputHighDensity0355Alarm": alarmInputHighDensity0355Alarm,
       "alarmInputHighDensity0356Alarm": alarmInputHighDensity0356Alarm,
       "alarmInputHighDensity0357Alarm": alarmInputHighDensity0357Alarm,
       "alarmInputHighDensity0358Alarm": alarmInputHighDensity0358Alarm,
       "alarmInputHighDensity0359Alarm": alarmInputHighDensity0359Alarm,
       "alarmInputHighDensity0360Alarm": alarmInputHighDensity0360Alarm,
       "alarmInputHighDensity0361Alarm": alarmInputHighDensity0361Alarm,
       "alarmInputHighDensity0362Alarm": alarmInputHighDensity0362Alarm,
       "alarmInputHighDensity0363Alarm": alarmInputHighDensity0363Alarm,
       "alarmInputHighDensity0364Alarm": alarmInputHighDensity0364Alarm,
       "alarmInputHighDensity0365Alarm": alarmInputHighDensity0365Alarm,
       "alarmInputHighDensity0366Alarm": alarmInputHighDensity0366Alarm,
       "alarmInputHighDensity0367Alarm": alarmInputHighDensity0367Alarm,
       "alarmInputHighDensity0368Alarm": alarmInputHighDensity0368Alarm,
       "alarmInputHighDensity0369Alarm": alarmInputHighDensity0369Alarm,
       "alarmInputHighDensity0370Alarm": alarmInputHighDensity0370Alarm,
       "alarmInputHighDensity0371Alarm": alarmInputHighDensity0371Alarm,
       "alarmInputHighDensity0372Alarm": alarmInputHighDensity0372Alarm,
       "alarmInputHighDensity0373Alarm": alarmInputHighDensity0373Alarm,
       "alarmInputHighDensity0374Alarm": alarmInputHighDensity0374Alarm,
       "alarmInputHighDensity0375Alarm": alarmInputHighDensity0375Alarm,
       "alarmInputHighDensity0376Alarm": alarmInputHighDensity0376Alarm,
       "alarmInputHighDensity0377Alarm": alarmInputHighDensity0377Alarm,
       "alarmInputHighDensity0378Alarm": alarmInputHighDensity0378Alarm,
       "alarmInputHighDensity0379Alarm": alarmInputHighDensity0379Alarm,
       "alarmInputHighDensity0380Alarm": alarmInputHighDensity0380Alarm,
       "alarmInputHighDensity0381Alarm": alarmInputHighDensity0381Alarm,
       "alarmInputHighDensity0382Alarm": alarmInputHighDensity0382Alarm,
       "alarmInputHighDensity0383Alarm": alarmInputHighDensity0383Alarm,
       "alarmInputHighDensity0384Alarm": alarmInputHighDensity0384Alarm,
       "alarmInputHighDensity0001Normal": alarmInputHighDensity0001Normal,
       "alarmInputHighDensity0002Normal": alarmInputHighDensity0002Normal,
       "alarmInputHighDensity0003Normal": alarmInputHighDensity0003Normal,
       "alarmInputHighDensity0004Normal": alarmInputHighDensity0004Normal,
       "alarmInputHighDensity0005Normal": alarmInputHighDensity0005Normal,
       "alarmInputHighDensity0006Normal": alarmInputHighDensity0006Normal,
       "alarmInputHighDensity0007Normal": alarmInputHighDensity0007Normal,
       "alarmInputHighDensity0008Normal": alarmInputHighDensity0008Normal,
       "alarmInputHighDensity0009Normal": alarmInputHighDensity0009Normal,
       "alarmInputHighDensity0010Normal": alarmInputHighDensity0010Normal,
       "alarmInputHighDensity0011Normal": alarmInputHighDensity0011Normal,
       "alarmInputHighDensity0012Normal": alarmInputHighDensity0012Normal,
       "alarmInputHighDensity0013Normal": alarmInputHighDensity0013Normal,
       "alarmInputHighDensity0014Normal": alarmInputHighDensity0014Normal,
       "alarmInputHighDensity0015Normal": alarmInputHighDensity0015Normal,
       "alarmInputHighDensity0016Normal": alarmInputHighDensity0016Normal,
       "alarmInputHighDensity0017Normal": alarmInputHighDensity0017Normal,
       "alarmInputHighDensity0018Normal": alarmInputHighDensity0018Normal,
       "alarmInputHighDensity0019Normal": alarmInputHighDensity0019Normal,
       "alarmInputHighDensity0020Normal": alarmInputHighDensity0020Normal,
       "alarmInputHighDensity0021Normal": alarmInputHighDensity0021Normal,
       "alarmInputHighDensity0022Normal": alarmInputHighDensity0022Normal,
       "alarmInputHighDensity0023Normal": alarmInputHighDensity0023Normal,
       "alarmInputHighDensity0024Normal": alarmInputHighDensity0024Normal,
       "alarmInputHighDensity0025Normal": alarmInputHighDensity0025Normal,
       "alarmInputHighDensity0026Normal": alarmInputHighDensity0026Normal,
       "alarmInputHighDensity0027Normal": alarmInputHighDensity0027Normal,
       "alarmInputHighDensity0028Normal": alarmInputHighDensity0028Normal,
       "alarmInputHighDensity0029Normal": alarmInputHighDensity0029Normal,
       "alarmInputHighDensity0030Normal": alarmInputHighDensity0030Normal,
       "alarmInputHighDensity0031Normal": alarmInputHighDensity0031Normal,
       "alarmInputHighDensity0032Normal": alarmInputHighDensity0032Normal,
       "alarmInputHighDensity0033Normal": alarmInputHighDensity0033Normal,
       "alarmInputHighDensity0034Normal": alarmInputHighDensity0034Normal,
       "alarmInputHighDensity0035Normal": alarmInputHighDensity0035Normal,
       "alarmInputHighDensity0036Normal": alarmInputHighDensity0036Normal,
       "alarmInputHighDensity0037Normal": alarmInputHighDensity0037Normal,
       "alarmInputHighDensity0038Normal": alarmInputHighDensity0038Normal,
       "alarmInputHighDensity0039Normal": alarmInputHighDensity0039Normal,
       "alarmInputHighDensity0040Normal": alarmInputHighDensity0040Normal,
       "alarmInputHighDensity0041Normal": alarmInputHighDensity0041Normal,
       "alarmInputHighDensity0042Normal": alarmInputHighDensity0042Normal,
       "alarmInputHighDensity0043Normal": alarmInputHighDensity0043Normal,
       "alarmInputHighDensity0044Normal": alarmInputHighDensity0044Normal,
       "alarmInputHighDensity0045Normal": alarmInputHighDensity0045Normal,
       "alarmInputHighDensity0046Normal": alarmInputHighDensity0046Normal,
       "alarmInputHighDensity0047Normal": alarmInputHighDensity0047Normal,
       "alarmInputHighDensity0048Normal": alarmInputHighDensity0048Normal,
       "alarmInputHighDensity0049Normal": alarmInputHighDensity0049Normal,
       "alarmInputHighDensity0050Normal": alarmInputHighDensity0050Normal,
       "alarmInputHighDensity0051Normal": alarmInputHighDensity0051Normal,
       "alarmInputHighDensity0052Normal": alarmInputHighDensity0052Normal,
       "alarmInputHighDensity0053Normal": alarmInputHighDensity0053Normal,
       "alarmInputHighDensity0054Normal": alarmInputHighDensity0054Normal,
       "alarmInputHighDensity0055Normal": alarmInputHighDensity0055Normal,
       "alarmInputHighDensity0056Normal": alarmInputHighDensity0056Normal,
       "alarmInputHighDensity0057Normal": alarmInputHighDensity0057Normal,
       "alarmInputHighDensity0058Normal": alarmInputHighDensity0058Normal,
       "alarmInputHighDensity0059Normal": alarmInputHighDensity0059Normal,
       "alarmInputHighDensity0060Normal": alarmInputHighDensity0060Normal,
       "alarmInputHighDensity0061Normal": alarmInputHighDensity0061Normal,
       "alarmInputHighDensity0062Normal": alarmInputHighDensity0062Normal,
       "alarmInputHighDensity0063Normal": alarmInputHighDensity0063Normal,
       "alarmInputHighDensity0064Normal": alarmInputHighDensity0064Normal,
       "alarmInputHighDensity0065Normal": alarmInputHighDensity0065Normal,
       "alarmInputHighDensity0066Normal": alarmInputHighDensity0066Normal,
       "alarmInputHighDensity0067Normal": alarmInputHighDensity0067Normal,
       "alarmInputHighDensity0068Normal": alarmInputHighDensity0068Normal,
       "alarmInputHighDensity0069Normal": alarmInputHighDensity0069Normal,
       "alarmInputHighDensity0070Normal": alarmInputHighDensity0070Normal,
       "alarmInputHighDensity0071Normal": alarmInputHighDensity0071Normal,
       "alarmInputHighDensity0072Normal": alarmInputHighDensity0072Normal,
       "alarmInputHighDensity0073Normal": alarmInputHighDensity0073Normal,
       "alarmInputHighDensity0074Normal": alarmInputHighDensity0074Normal,
       "alarmInputHighDensity0075Normal": alarmInputHighDensity0075Normal,
       "alarmInputHighDensity0076Normal": alarmInputHighDensity0076Normal,
       "alarmInputHighDensity0077Normal": alarmInputHighDensity0077Normal,
       "alarmInputHighDensity0078Normal": alarmInputHighDensity0078Normal,
       "alarmInputHighDensity0079Normal": alarmInputHighDensity0079Normal,
       "alarmInputHighDensity0080Normal": alarmInputHighDensity0080Normal,
       "alarmInputHighDensity0081Normal": alarmInputHighDensity0081Normal,
       "alarmInputHighDensity0082Normal": alarmInputHighDensity0082Normal,
       "alarmInputHighDensity0083Normal": alarmInputHighDensity0083Normal,
       "alarmInputHighDensity0084Normal": alarmInputHighDensity0084Normal,
       "alarmInputHighDensity0085Normal": alarmInputHighDensity0085Normal,
       "alarmInputHighDensity0086Normal": alarmInputHighDensity0086Normal,
       "alarmInputHighDensity0087Normal": alarmInputHighDensity0087Normal,
       "alarmInputHighDensity0088Normal": alarmInputHighDensity0088Normal,
       "alarmInputHighDensity0089Normal": alarmInputHighDensity0089Normal,
       "alarmInputHighDensity0090Normal": alarmInputHighDensity0090Normal,
       "alarmInputHighDensity0091Normal": alarmInputHighDensity0091Normal,
       "alarmInputHighDensity0092Normal": alarmInputHighDensity0092Normal,
       "alarmInputHighDensity0093Normal": alarmInputHighDensity0093Normal,
       "alarmInputHighDensity0094Normal": alarmInputHighDensity0094Normal,
       "alarmInputHighDensity0095Normal": alarmInputHighDensity0095Normal,
       "alarmInputHighDensity0096Normal": alarmInputHighDensity0096Normal,
       "alarmInputHighDensity0097Normal": alarmInputHighDensity0097Normal,
       "alarmInputHighDensity0098Normal": alarmInputHighDensity0098Normal,
       "alarmInputHighDensity0099Normal": alarmInputHighDensity0099Normal,
       "alarmInputHighDensity0100Normal": alarmInputHighDensity0100Normal,
       "alarmInputHighDensity0101Normal": alarmInputHighDensity0101Normal,
       "alarmInputHighDensity0102Normal": alarmInputHighDensity0102Normal,
       "alarmInputHighDensity0103Normal": alarmInputHighDensity0103Normal,
       "alarmInputHighDensity0104Normal": alarmInputHighDensity0104Normal,
       "alarmInputHighDensity0105Normal": alarmInputHighDensity0105Normal,
       "alarmInputHighDensity0106Normal": alarmInputHighDensity0106Normal,
       "alarmInputHighDensity0107Normal": alarmInputHighDensity0107Normal,
       "alarmInputHighDensity0108Normal": alarmInputHighDensity0108Normal,
       "alarmInputHighDensity0109Normal": alarmInputHighDensity0109Normal,
       "alarmInputHighDensity0110Normal": alarmInputHighDensity0110Normal,
       "alarmInputHighDensity0111Normal": alarmInputHighDensity0111Normal,
       "alarmInputHighDensity0112Normal": alarmInputHighDensity0112Normal,
       "alarmInputHighDensity0113Normal": alarmInputHighDensity0113Normal,
       "alarmInputHighDensity0114Normal": alarmInputHighDensity0114Normal,
       "alarmInputHighDensity0115Normal": alarmInputHighDensity0115Normal,
       "alarmInputHighDensity0116Normal": alarmInputHighDensity0116Normal,
       "alarmInputHighDensity0117Normal": alarmInputHighDensity0117Normal,
       "alarmInputHighDensity0118Normal": alarmInputHighDensity0118Normal,
       "alarmInputHighDensity0119Normal": alarmInputHighDensity0119Normal,
       "alarmInputHighDensity0120Normal": alarmInputHighDensity0120Normal,
       "alarmInputHighDensity0121Normal": alarmInputHighDensity0121Normal,
       "alarmInputHighDensity0122Normal": alarmInputHighDensity0122Normal,
       "alarmInputHighDensity0123Normal": alarmInputHighDensity0123Normal,
       "alarmInputHighDensity0124Normal": alarmInputHighDensity0124Normal,
       "alarmInputHighDensity0125Normal": alarmInputHighDensity0125Normal,
       "alarmInputHighDensity0126Normal": alarmInputHighDensity0126Normal,
       "alarmInputHighDensity0127Normal": alarmInputHighDensity0127Normal,
       "alarmInputHighDensity0128Normal": alarmInputHighDensity0128Normal,
       "alarmInputHighDensity0129Normal": alarmInputHighDensity0129Normal,
       "alarmInputHighDensity0130Normal": alarmInputHighDensity0130Normal,
       "alarmInputHighDensity0131Normal": alarmInputHighDensity0131Normal,
       "alarmInputHighDensity0132Normal": alarmInputHighDensity0132Normal,
       "alarmInputHighDensity0133Normal": alarmInputHighDensity0133Normal,
       "alarmInputHighDensity0134Normal": alarmInputHighDensity0134Normal,
       "alarmInputHighDensity0135Normal": alarmInputHighDensity0135Normal,
       "alarmInputHighDensity0136Normal": alarmInputHighDensity0136Normal,
       "alarmInputHighDensity0137Normal": alarmInputHighDensity0137Normal,
       "alarmInputHighDensity0138Normal": alarmInputHighDensity0138Normal,
       "alarmInputHighDensity0139Normal": alarmInputHighDensity0139Normal,
       "alarmInputHighDensity0140Normal": alarmInputHighDensity0140Normal,
       "alarmInputHighDensity0141Normal": alarmInputHighDensity0141Normal,
       "alarmInputHighDensity0142Normal": alarmInputHighDensity0142Normal,
       "alarmInputHighDensity0143Normal": alarmInputHighDensity0143Normal,
       "alarmInputHighDensity0144Normal": alarmInputHighDensity0144Normal,
       "alarmInputHighDensity0145Normal": alarmInputHighDensity0145Normal,
       "alarmInputHighDensity0146Normal": alarmInputHighDensity0146Normal,
       "alarmInputHighDensity0147Normal": alarmInputHighDensity0147Normal,
       "alarmInputHighDensity0148Normal": alarmInputHighDensity0148Normal,
       "alarmInputHighDensity0149Normal": alarmInputHighDensity0149Normal,
       "alarmInputHighDensity0150Normal": alarmInputHighDensity0150Normal,
       "alarmInputHighDensity0151Normal": alarmInputHighDensity0151Normal,
       "alarmInputHighDensity0152Normal": alarmInputHighDensity0152Normal,
       "alarmInputHighDensity0153Normal": alarmInputHighDensity0153Normal,
       "alarmInputHighDensity0154Normal": alarmInputHighDensity0154Normal,
       "alarmInputHighDensity0155Normal": alarmInputHighDensity0155Normal,
       "alarmInputHighDensity0156Normal": alarmInputHighDensity0156Normal,
       "alarmInputHighDensity0157Normal": alarmInputHighDensity0157Normal,
       "alarmInputHighDensity0158Normal": alarmInputHighDensity0158Normal,
       "alarmInputHighDensity0159Normal": alarmInputHighDensity0159Normal,
       "alarmInputHighDensity0160Normal": alarmInputHighDensity0160Normal,
       "alarmInputHighDensity0161Normal": alarmInputHighDensity0161Normal,
       "alarmInputHighDensity0162Normal": alarmInputHighDensity0162Normal,
       "alarmInputHighDensity0163Normal": alarmInputHighDensity0163Normal,
       "alarmInputHighDensity0164Normal": alarmInputHighDensity0164Normal,
       "alarmInputHighDensity0165Normal": alarmInputHighDensity0165Normal,
       "alarmInputHighDensity0166Normal": alarmInputHighDensity0166Normal,
       "alarmInputHighDensity0167Normal": alarmInputHighDensity0167Normal,
       "alarmInputHighDensity0168Normal": alarmInputHighDensity0168Normal,
       "alarmInputHighDensity0169Normal": alarmInputHighDensity0169Normal,
       "alarmInputHighDensity0170Normal": alarmInputHighDensity0170Normal,
       "alarmInputHighDensity0171Normal": alarmInputHighDensity0171Normal,
       "alarmInputHighDensity0172Normal": alarmInputHighDensity0172Normal,
       "alarmInputHighDensity0173Normal": alarmInputHighDensity0173Normal,
       "alarmInputHighDensity0174Normal": alarmInputHighDensity0174Normal,
       "alarmInputHighDensity0175Normal": alarmInputHighDensity0175Normal,
       "alarmInputHighDensity0176Normal": alarmInputHighDensity0176Normal,
       "alarmInputHighDensity0177Normal": alarmInputHighDensity0177Normal,
       "alarmInputHighDensity0178Normal": alarmInputHighDensity0178Normal,
       "alarmInputHighDensity0179Normal": alarmInputHighDensity0179Normal,
       "alarmInputHighDensity0180Normal": alarmInputHighDensity0180Normal,
       "alarmInputHighDensity0181Normal": alarmInputHighDensity0181Normal,
       "alarmInputHighDensity0182Normal": alarmInputHighDensity0182Normal,
       "alarmInputHighDensity0183Normal": alarmInputHighDensity0183Normal,
       "alarmInputHighDensity0184Normal": alarmInputHighDensity0184Normal,
       "alarmInputHighDensity0185Normal": alarmInputHighDensity0185Normal,
       "alarmInputHighDensity0186Normal": alarmInputHighDensity0186Normal,
       "alarmInputHighDensity0187Normal": alarmInputHighDensity0187Normal,
       "alarmInputHighDensity0188Normal": alarmInputHighDensity0188Normal,
       "alarmInputHighDensity0189Normal": alarmInputHighDensity0189Normal,
       "alarmInputHighDensity0190Normal": alarmInputHighDensity0190Normal,
       "alarmInputHighDensity0191Normal": alarmInputHighDensity0191Normal,
       "alarmInputHighDensity0192Normal": alarmInputHighDensity0192Normal,
       "alarmInputHighDensity0193Normal": alarmInputHighDensity0193Normal,
       "alarmInputHighDensity0194Normal": alarmInputHighDensity0194Normal,
       "alarmInputHighDensity0195Normal": alarmInputHighDensity0195Normal,
       "alarmInputHighDensity0196Normal": alarmInputHighDensity0196Normal,
       "alarmInputHighDensity0197Normal": alarmInputHighDensity0197Normal,
       "alarmInputHighDensity0198Normal": alarmInputHighDensity0198Normal,
       "alarmInputHighDensity0199Normal": alarmInputHighDensity0199Normal,
       "alarmInputHighDensity0200Normal": alarmInputHighDensity0200Normal,
       "alarmInputHighDensity0201Normal": alarmInputHighDensity0201Normal,
       "alarmInputHighDensity0202Normal": alarmInputHighDensity0202Normal,
       "alarmInputHighDensity0203Normal": alarmInputHighDensity0203Normal,
       "alarmInputHighDensity0204Normal": alarmInputHighDensity0204Normal,
       "alarmInputHighDensity0205Normal": alarmInputHighDensity0205Normal,
       "alarmInputHighDensity0206Normal": alarmInputHighDensity0206Normal,
       "alarmInputHighDensity0207Normal": alarmInputHighDensity0207Normal,
       "alarmInputHighDensity0208Normal": alarmInputHighDensity0208Normal,
       "alarmInputHighDensity0209Normal": alarmInputHighDensity0209Normal,
       "alarmInputHighDensity0210Normal": alarmInputHighDensity0210Normal,
       "alarmInputHighDensity0211Normal": alarmInputHighDensity0211Normal,
       "alarmInputHighDensity0212Normal": alarmInputHighDensity0212Normal,
       "alarmInputHighDensity0213Normal": alarmInputHighDensity0213Normal,
       "alarmInputHighDensity0214Normal": alarmInputHighDensity0214Normal,
       "alarmInputHighDensity0215Normal": alarmInputHighDensity0215Normal,
       "alarmInputHighDensity0216Normal": alarmInputHighDensity0216Normal,
       "alarmInputHighDensity0217Normal": alarmInputHighDensity0217Normal,
       "alarmInputHighDensity0218Normal": alarmInputHighDensity0218Normal,
       "alarmInputHighDensity0219Normal": alarmInputHighDensity0219Normal,
       "alarmInputHighDensity0220Normal": alarmInputHighDensity0220Normal,
       "alarmInputHighDensity0221Normal": alarmInputHighDensity0221Normal,
       "alarmInputHighDensity0222Normal": alarmInputHighDensity0222Normal,
       "alarmInputHighDensity0223Normal": alarmInputHighDensity0223Normal,
       "alarmInputHighDensity0224Normal": alarmInputHighDensity0224Normal,
       "alarmInputHighDensity0225Normal": alarmInputHighDensity0225Normal,
       "alarmInputHighDensity0226Normal": alarmInputHighDensity0226Normal,
       "alarmInputHighDensity0227Normal": alarmInputHighDensity0227Normal,
       "alarmInputHighDensity0228Normal": alarmInputHighDensity0228Normal,
       "alarmInputHighDensity0229Normal": alarmInputHighDensity0229Normal,
       "alarmInputHighDensity0230Normal": alarmInputHighDensity0230Normal,
       "alarmInputHighDensity0231Normal": alarmInputHighDensity0231Normal,
       "alarmInputHighDensity0232Normal": alarmInputHighDensity0232Normal,
       "alarmInputHighDensity0233Normal": alarmInputHighDensity0233Normal,
       "alarmInputHighDensity0234Normal": alarmInputHighDensity0234Normal,
       "alarmInputHighDensity0235Normal": alarmInputHighDensity0235Normal,
       "alarmInputHighDensity0236Normal": alarmInputHighDensity0236Normal,
       "alarmInputHighDensity0237Normal": alarmInputHighDensity0237Normal,
       "alarmInputHighDensity0238Normal": alarmInputHighDensity0238Normal,
       "alarmInputHighDensity0239Normal": alarmInputHighDensity0239Normal,
       "alarmInputHighDensity0240Normal": alarmInputHighDensity0240Normal,
       "alarmInputHighDensity0241Normal": alarmInputHighDensity0241Normal,
       "alarmInputHighDensity0242Normal": alarmInputHighDensity0242Normal,
       "alarmInputHighDensity0243Normal": alarmInputHighDensity0243Normal,
       "alarmInputHighDensity0244Normal": alarmInputHighDensity0244Normal,
       "alarmInputHighDensity0245Normal": alarmInputHighDensity0245Normal,
       "alarmInputHighDensity0246Normal": alarmInputHighDensity0246Normal,
       "alarmInputHighDensity0247Normal": alarmInputHighDensity0247Normal,
       "alarmInputHighDensity0248Normal": alarmInputHighDensity0248Normal,
       "alarmInputHighDensity0249Normal": alarmInputHighDensity0249Normal,
       "alarmInputHighDensity0250Normal": alarmInputHighDensity0250Normal,
       "alarmInputHighDensity0251Normal": alarmInputHighDensity0251Normal,
       "alarmInputHighDensity0252Normal": alarmInputHighDensity0252Normal,
       "alarmInputHighDensity0253Normal": alarmInputHighDensity0253Normal,
       "alarmInputHighDensity0254Normal": alarmInputHighDensity0254Normal,
       "alarmInputHighDensity0255Normal": alarmInputHighDensity0255Normal,
       "alarmInputHighDensity0256Normal": alarmInputHighDensity0256Normal,
       "alarmInputHighDensity0257Normal": alarmInputHighDensity0257Normal,
       "alarmInputHighDensity0258Normal": alarmInputHighDensity0258Normal,
       "alarmInputHighDensity0259Normal": alarmInputHighDensity0259Normal,
       "alarmInputHighDensity0260Normal": alarmInputHighDensity0260Normal,
       "alarmInputHighDensity0261Normal": alarmInputHighDensity0261Normal,
       "alarmInputHighDensity0262Normal": alarmInputHighDensity0262Normal,
       "alarmInputHighDensity0263Normal": alarmInputHighDensity0263Normal,
       "alarmInputHighDensity0264Normal": alarmInputHighDensity0264Normal,
       "alarmInputHighDensity0265Normal": alarmInputHighDensity0265Normal,
       "alarmInputHighDensity0266Normal": alarmInputHighDensity0266Normal,
       "alarmInputHighDensity0267Normal": alarmInputHighDensity0267Normal,
       "alarmInputHighDensity0268Normal": alarmInputHighDensity0268Normal,
       "alarmInputHighDensity0269Normal": alarmInputHighDensity0269Normal,
       "alarmInputHighDensity0270Normal": alarmInputHighDensity0270Normal,
       "alarmInputHighDensity0271Normal": alarmInputHighDensity0271Normal,
       "alarmInputHighDensity0272Normal": alarmInputHighDensity0272Normal,
       "alarmInputHighDensity0273Normal": alarmInputHighDensity0273Normal,
       "alarmInputHighDensity0274Normal": alarmInputHighDensity0274Normal,
       "alarmInputHighDensity0275Normal": alarmInputHighDensity0275Normal,
       "alarmInputHighDensity0276Normal": alarmInputHighDensity0276Normal,
       "alarmInputHighDensity0277Normal": alarmInputHighDensity0277Normal,
       "alarmInputHighDensity0278Normal": alarmInputHighDensity0278Normal,
       "alarmInputHighDensity0279Normal": alarmInputHighDensity0279Normal,
       "alarmInputHighDensity0280Normal": alarmInputHighDensity0280Normal,
       "alarmInputHighDensity0281Normal": alarmInputHighDensity0281Normal,
       "alarmInputHighDensity0282Normal": alarmInputHighDensity0282Normal,
       "alarmInputHighDensity0283Normal": alarmInputHighDensity0283Normal,
       "alarmInputHighDensity0284Normal": alarmInputHighDensity0284Normal,
       "alarmInputHighDensity0285Normal": alarmInputHighDensity0285Normal,
       "alarmInputHighDensity0286Normal": alarmInputHighDensity0286Normal,
       "alarmInputHighDensity0287Normal": alarmInputHighDensity0287Normal,
       "alarmInputHighDensity0288Normal": alarmInputHighDensity0288Normal,
       "alarmInputHighDensity0289Normal": alarmInputHighDensity0289Normal,
       "alarmInputHighDensity0290Normal": alarmInputHighDensity0290Normal,
       "alarmInputHighDensity0291Normal": alarmInputHighDensity0291Normal,
       "alarmInputHighDensity0292Normal": alarmInputHighDensity0292Normal,
       "alarmInputHighDensity0293Normal": alarmInputHighDensity0293Normal,
       "alarmInputHighDensity0294Normal": alarmInputHighDensity0294Normal,
       "alarmInputHighDensity0295Normal": alarmInputHighDensity0295Normal,
       "alarmInputHighDensity0296Normal": alarmInputHighDensity0296Normal,
       "alarmInputHighDensity0297Normal": alarmInputHighDensity0297Normal,
       "alarmInputHighDensity0298Normal": alarmInputHighDensity0298Normal,
       "alarmInputHighDensity0299Normal": alarmInputHighDensity0299Normal,
       "alarmInputHighDensity0300Normal": alarmInputHighDensity0300Normal,
       "alarmInputHighDensity0301Normal": alarmInputHighDensity0301Normal,
       "alarmInputHighDensity0302Normal": alarmInputHighDensity0302Normal,
       "alarmInputHighDensity0303Normal": alarmInputHighDensity0303Normal,
       "alarmInputHighDensity0304Normal": alarmInputHighDensity0304Normal,
       "alarmInputHighDensity0305Normal": alarmInputHighDensity0305Normal,
       "alarmInputHighDensity0306Normal": alarmInputHighDensity0306Normal,
       "alarmInputHighDensity0307Normal": alarmInputHighDensity0307Normal,
       "alarmInputHighDensity0308Normal": alarmInputHighDensity0308Normal,
       "alarmInputHighDensity0309Normal": alarmInputHighDensity0309Normal,
       "alarmInputHighDensity0310Normal": alarmInputHighDensity0310Normal,
       "alarmInputHighDensity0311Normal": alarmInputHighDensity0311Normal,
       "alarmInputHighDensity0312Normal": alarmInputHighDensity0312Normal,
       "alarmInputHighDensity0313Normal": alarmInputHighDensity0313Normal,
       "alarmInputHighDensity0314Normal": alarmInputHighDensity0314Normal,
       "alarmInputHighDensity0315Normal": alarmInputHighDensity0315Normal,
       "alarmInputHighDensity0316Normal": alarmInputHighDensity0316Normal,
       "alarmInputHighDensity0317Normal": alarmInputHighDensity0317Normal,
       "alarmInputHighDensity0318Normal": alarmInputHighDensity0318Normal,
       "alarmInputHighDensity0319Normal": alarmInputHighDensity0319Normal,
       "alarmInputHighDensity0320Normal": alarmInputHighDensity0320Normal,
       "alarmInputHighDensity0321Normal": alarmInputHighDensity0321Normal,
       "alarmInputHighDensity0322Normal": alarmInputHighDensity0322Normal,
       "alarmInputHighDensity0323Normal": alarmInputHighDensity0323Normal,
       "alarmInputHighDensity0324Normal": alarmInputHighDensity0324Normal,
       "alarmInputHighDensity0325Normal": alarmInputHighDensity0325Normal,
       "alarmInputHighDensity0326Normal": alarmInputHighDensity0326Normal,
       "alarmInputHighDensity0327Normal": alarmInputHighDensity0327Normal,
       "alarmInputHighDensity0328Normal": alarmInputHighDensity0328Normal,
       "alarmInputHighDensity0329Normal": alarmInputHighDensity0329Normal,
       "alarmInputHighDensity0330Normal": alarmInputHighDensity0330Normal,
       "alarmInputHighDensity0331Normal": alarmInputHighDensity0331Normal,
       "alarmInputHighDensity0332Normal": alarmInputHighDensity0332Normal,
       "alarmInputHighDensity0333Normal": alarmInputHighDensity0333Normal,
       "alarmInputHighDensity0334Normal": alarmInputHighDensity0334Normal,
       "alarmInputHighDensity0335Normal": alarmInputHighDensity0335Normal,
       "alarmInputHighDensity0336Normal": alarmInputHighDensity0336Normal,
       "alarmInputHighDensity0337Normal": alarmInputHighDensity0337Normal,
       "alarmInputHighDensity0338Normal": alarmInputHighDensity0338Normal,
       "alarmInputHighDensity0339Normal": alarmInputHighDensity0339Normal,
       "alarmInputHighDensity0340Normal": alarmInputHighDensity0340Normal,
       "alarmInputHighDensity0341Normal": alarmInputHighDensity0341Normal,
       "alarmInputHighDensity0342Normal": alarmInputHighDensity0342Normal,
       "alarmInputHighDensity0343Normal": alarmInputHighDensity0343Normal,
       "alarmInputHighDensity0344Normal": alarmInputHighDensity0344Normal,
       "alarmInputHighDensity0345Normal": alarmInputHighDensity0345Normal,
       "alarmInputHighDensity0346Normal": alarmInputHighDensity0346Normal,
       "alarmInputHighDensity0347Normal": alarmInputHighDensity0347Normal,
       "alarmInputHighDensity0348Normal": alarmInputHighDensity0348Normal,
       "alarmInputHighDensity0349Normal": alarmInputHighDensity0349Normal,
       "alarmInputHighDensity0350Normal": alarmInputHighDensity0350Normal,
       "alarmInputHighDensity0351Normal": alarmInputHighDensity0351Normal,
       "alarmInputHighDensity0352Normal": alarmInputHighDensity0352Normal,
       "alarmInputHighDensity0353Normal": alarmInputHighDensity0353Normal,
       "alarmInputHighDensity0354Normal": alarmInputHighDensity0354Normal,
       "alarmInputHighDensity0355Normal": alarmInputHighDensity0355Normal,
       "alarmInputHighDensity0356Normal": alarmInputHighDensity0356Normal,
       "alarmInputHighDensity0357Normal": alarmInputHighDensity0357Normal,
       "alarmInputHighDensity0358Normal": alarmInputHighDensity0358Normal,
       "alarmInputHighDensity0359Normal": alarmInputHighDensity0359Normal,
       "alarmInputHighDensity0360Normal": alarmInputHighDensity0360Normal,
       "alarmInputHighDensity0361Normal": alarmInputHighDensity0361Normal,
       "alarmInputHighDensity0362Normal": alarmInputHighDensity0362Normal,
       "alarmInputHighDensity0363Normal": alarmInputHighDensity0363Normal,
       "alarmInputHighDensity0364Normal": alarmInputHighDensity0364Normal,
       "alarmInputHighDensity0365Normal": alarmInputHighDensity0365Normal,
       "alarmInputHighDensity0366Normal": alarmInputHighDensity0366Normal,
       "alarmInputHighDensity0367Normal": alarmInputHighDensity0367Normal,
       "alarmInputHighDensity0368Normal": alarmInputHighDensity0368Normal,
       "alarmInputHighDensity0369Normal": alarmInputHighDensity0369Normal,
       "alarmInputHighDensity0370Normal": alarmInputHighDensity0370Normal,
       "alarmInputHighDensity0371Normal": alarmInputHighDensity0371Normal,
       "alarmInputHighDensity0372Normal": alarmInputHighDensity0372Normal,
       "alarmInputHighDensity0373Normal": alarmInputHighDensity0373Normal,
       "alarmInputHighDensity0374Normal": alarmInputHighDensity0374Normal,
       "alarmInputHighDensity0375Normal": alarmInputHighDensity0375Normal,
       "alarmInputHighDensity0376Normal": alarmInputHighDensity0376Normal,
       "alarmInputHighDensity0377Normal": alarmInputHighDensity0377Normal,
       "alarmInputHighDensity0378Normal": alarmInputHighDensity0378Normal,
       "alarmInputHighDensity0379Normal": alarmInputHighDensity0379Normal,
       "alarmInputHighDensity0380Normal": alarmInputHighDensity0380Normal,
       "alarmInputHighDensity0381Normal": alarmInputHighDensity0381Normal,
       "alarmInputHighDensity0382Normal": alarmInputHighDensity0382Normal,
       "alarmInputHighDensity0383Normal": alarmInputHighDensity0383Normal,
       "alarmInputHighDensity0384Normal": alarmInputHighDensity0384Normal,
       "xSystem": xSystem,
       "resourceLack": resourceLack,
       "sysIdent": sysIdent,
       "sysDefineMode": sysDefineMode,
       "sysDateTime": sysDateTime,
       "sysTimeZone": sysTimeZone,
       "sysLoadSoftware": sysLoadSoftware,
       "sysDump": sysDump,
       "sysMaintenancePassword": sysMaintenancePassword,
       "sysLocalName": sysLocalName,
       "sysSoftwareVersionType": sysSoftwareVersionType,
       "sysSoftwareVersion": sysSoftwareVersion,
       "sysRomVersion": sysRomVersion,
       "sysHardwareType": sysHardwareType,
       "sysHardwareVersion": sysHardwareVersion,
       "sysChassisType": sysChassisType,
       "sysChassisVersion": sysChassisVersion,
       "sysCrash": sysCrash,
       "sysInitialize": sysInitialize,
       "sysInitializeDelay": sysInitializeDelay,
       "sysZeroAll": sysZeroAll,
       "sysZeroBase": sysZeroBase,
       "sysZeroBaseTime": sysZeroBaseTime,
       "sysLoaderName": sysLoaderName,
       "sysLoaderAddressType": sysLoaderAddressType,
       "sysLoaderAddress": sysLoaderAddress,
       "sysDumperAddressType": sysDumperAddressType,
       "sysDumperAddress": sysDumperAddress,
       "sysResourceLacks": sysResourceLacks,
       "sysChassisState": sysChassisState,
       "sysChassisFaultTransitions": sysChassisFaultTransitions,
       "sysResourceNumber": sysResourceNumber,
       "sysFeatureNumber": sysFeatureNumber,
       "resTable": resTable,
       "resEntry": resEntry,
       "resType": resType,
       "resCurrent": resCurrent,
       "resWorst": resWorst,
       "resAdminMaximum": resAdminMaximum,
       "resLacks": resLacks,
       "resLackTime": resLackTime,
       "resOperMaximum": resOperMaximum,
       "featTable": featTable,
       "featEntry": featEntry,
       "featType": featType,
       "featStatus": featStatus,
       "featKey": featKey,
       "xBootControl": xBootControl,
       "bootControlLoadInternetFile": bootControlLoadInternetFile,
       "bootControlLoadInternetServer": bootControlLoadInternetServer,
       "bootControlLoadInternetGateway": bootControlLoadInternetGateway,
       "bootControlLoadBootpTftp": bootControlLoadBootpTftp,
       "bootControlLoadTftpDirect": bootControlLoadTftpDirect,
       "bootControlLoadLocal": bootControlLoadLocal,
       "bootControlLoadMop": bootControlLoadMop,
       "bootControlLoadProprietary": bootControlLoadProprietary,
       "bootControlLoadRarpTftp": bootControlLoadRarpTftp,
       "bootControlDumpBootpTftp": bootControlDumpBootpTftp,
       "bootControlDumpLocal": bootControlDumpLocal,
       "bootControlDumpMop": bootControlDumpMop,
       "bootControlDumpProprietary": bootControlDumpProprietary,
       "bootControlDumpRarpTftp": bootControlDumpRarpTftp,
       "bootControlParamBootpTftp": bootControlParamBootpTftp,
       "bootControlParamLocal": bootControlParamLocal,
       "bootControlParamMop": bootControlParamMop,
       "bootControlParamProprietary": bootControlParamProprietary,
       "bootControlParamRarpTftp": bootControlParamRarpTftp,
       "sysInstalledMemory": sysInstalledMemory,
       "sysTemperatureLevel": sysTemperatureLevel,
       "bootRecordTable": bootRecordTable,
       "bootRecordEntry": bootRecordEntry,
       "bootRecordIndex": bootRecordIndex,
       "bootRecordLoadInternetFile": bootRecordLoadInternetFile,
       "bootRecordLoadInternetServer": bootRecordLoadInternetServer,
       "bootRecordLoadInternetGateway": bootRecordLoadInternetGateway,
       "bootRecordLoadBootpTftp": bootRecordLoadBootpTftp,
       "bootRecordLoadTftpDirect": bootRecordLoadTftpDirect,
       "bootRecordLoadLocal": bootRecordLoadLocal,
       "bootRecordLoadMop": bootRecordLoadMop,
       "bootRecordLoadProprietary": bootRecordLoadProprietary,
       "bootRecordLoadRarpTftp": bootRecordLoadRarpTftp,
       "bootRecordDumpBootpTftp": bootRecordDumpBootpTftp,
       "bootRecordDumpLocal": bootRecordDumpLocal,
       "bootRecordDumpMop": bootRecordDumpMop,
       "bootRecordDumpProprietary": bootRecordDumpProprietary,
       "bootRecordDumpRarpTftp": bootRecordDumpRarpTftp,
       "bootRecordParamBootpTftp": bootRecordParamBootpTftp,
       "bootRecordParamLocal": bootRecordParamLocal,
       "bootRecordParamMop": bootRecordParamMop,
       "bootRecordParamProprietary": bootRecordParamProprietary,
       "bootRecordParamRarpTftp": bootRecordParamRarpTftp,
       "bootRecordStatus": bootRecordStatus,
       "bootRecordMopFile": bootRecordMopFile,
       "bootRecordInternetAddress": bootRecordInternetAddress,
       "bootRecordParamTftpDirect": bootRecordParamTftpDirect,
       "bootRecordInternetDelimiter": bootRecordInternetDelimiter,
       "sysLastAgentError": sysLastAgentError,
       "sysRcpMulticast": sysRcpMulticast,
       "sysTimeServerAddress": sysTimeServerAddress,
       "sysTimeServerConfiguredAddress": sysTimeServerConfiguredAddress,
       "sysTimeServerConfiguredStatus": sysTimeServerConfiguredStatus,
       "sysBootRecordOverrideDefinedAddress": sysBootRecordOverrideDefinedAddress,
       "sysBootRecordMessageEnable": sysBootRecordMessageEnable,
       "sysBootRecordParamDefaults": sysBootRecordParamDefaults,
       "sysLoginAuthFailureTrapType": sysLoginAuthFailureTrapType,
       "sysLoginAuthTrapIdentity": sysLoginAuthTrapIdentity,
       "sysLocalScriptServer": sysLocalScriptServer,
       "sysInReachManagementSecurityStatus": sysInReachManagementSecurityStatus,
       "sysProductName": sysProductName,
       "sysModemPresent": sysModemPresent,
       "sysCauseAction": sysCauseAction,
       "sysWebServerConfigAdminStatus": sysWebServerConfigAdminStatus,
       "sysTl1SourceIdentifier": sysTl1SourceIdentifier,
       "sysInitializeDelayParameter": sysInitializeDelayParameter,
       "sysTimeProtocol": sysTimeProtocol,
       "sysTimeBroadcast": sysTimeBroadcast,
       "characterDep": characterDep,
       "xLat": xLat,
       "latAnnounceServices": latAnnounceServices,
       "latCircuitTimer": latCircuitTimer,
       "latIdentificationLengthLimit": latIdentificationLengthLimit,
       "latKeepaliveTimer": latKeepaliveTimer,
       "latMulticastTimer": latMulticastTimer,
       "latNodeLimit": latNodeLimit,
       "latNumber": latNumber,
       "latRetransmitLimit": latRetransmitLimit,
       "latLocalServiceGroups": latLocalServiceGroups,
       "latGroupPurge": latGroupPurge,
       "latNodePurge": latNodePurge,
       "latNodesRejected": latNodesRejected,
       "latInMessages": latInMessages,
       "latOutMessages": latOutMessages,
       "latInSessionsAccepted": latInSessionsAccepted,
       "latInSessionsRejected": latInSessionsRejected,
       "latAddressChange": latAddressChange,
       "latInDuplicates": latInDuplicates,
       "latOutRetransmits": latOutRetransmits,
       "latInBadMessages": latInBadMessages,
       "latInBadSlots": latInBadSlots,
       "latInBadMulticasts": latInBadMulticasts,
       "latPortTable": latPortTable,
       "latPortEntry": latPortEntry,
       "latPortIndex": latPortIndex,
       "latPortAuthorizedGroups": latPortAuthorizedGroups,
       "latPortAutoPrompt": latPortAutoPrompt,
       "latPortCurrentGroups": latPortCurrentGroups,
       "latPortRemoteModification": latPortRemoteModification,
       "latOfferedServiceTable": latOfferedServiceTable,
       "latOfferedServiceEntry": latOfferedServiceEntry,
       "latOfferedServiceName": latOfferedServiceName,
       "latOfferedServiceStatus": latOfferedServiceStatus,
       "latOfferedServiceAllowConnections": latOfferedServiceAllowConnections,
       "latOfferedServiceIdentification": latOfferedServiceIdentification,
       "latOfferedServicePassword": latOfferedServicePassword,
       "latOfferedServicePortMap": latOfferedServicePortMap,
       "latOfferedServiceQueuing": latOfferedServiceQueuing,
       "latOfferedServiceEnvironmentalManager": latOfferedServiceEnvironmentalManager,
       "latVisibleServiceTable": latVisibleServiceTable,
       "latVisibleServiceEntry": latVisibleServiceEntry,
       "latVisibleServiceName": latVisibleServiceName,
       "latVisibleServiceStatus": latVisibleServiceStatus,
       "latVisibleServiceNode": latVisibleServiceNode,
       "latVisibleServiceConnectedSessions": latVisibleServiceConnectedSessions,
       "latVisibleServiceIdentification": latVisibleServiceIdentification,
       "latVisibleServiceRating": latVisibleServiceRating,
       "latNodeTable": latNodeTable,
       "latNodeEntry": latNodeEntry,
       "latNodeName": latNodeName,
       "latNodeStatus": latNodeStatus,
       "latNodeConnectedSessions": latNodeConnectedSessions,
       "latNodeAddress": latNodeAddress,
       "latNodeDataLinkFrame": latNodeDataLinkFrame,
       "latNodeIdentification": latNodeIdentification,
       "latNodeGroups": latNodeGroups,
       "latNodeServiceNumber": latNodeServiceNumber,
       "latNodeZero": latNodeZero,
       "latNodeZeroTime": latNodeZeroTime,
       "latNodeInMessages": latNodeInMessages,
       "latNodeOutMessages": latNodeOutMessages,
       "latNodeInSlots": latNodeInSlots,
       "latNodeOutSlots": latNodeOutSlots,
       "latNodeInBytes": latNodeInBytes,
       "latNodeOutBytes": latNodeOutBytes,
       "latNodeAddressChange": latNodeAddressChange,
       "latNodeInDuplicates": latNodeInDuplicates,
       "latNodeOutRetransmits": latNodeOutRetransmits,
       "latNodeInBadMessages": latNodeInBadMessages,
       "latNodeInBadSlots": latNodeInBadSlots,
       "latNodeInSessionsAccepted": latNodeInSessionsAccepted,
       "latNodeInSessionsRejected": latNodeInSessionsRejected,
       "latSolicits": latSolicits,
       "latImmediateAck": latImmediateAck,
       "xInternetDep": xInternetDep,
       "xBootServer": xBootServer,
       "xBsBasic": xBsBasic,
       "basicLogLimit": basicLogLimit,
       "basicActiveLimit": basicActiveLimit,
       "basicActiveNumber": basicActiveNumber,
       "basicClientNumber": basicClientNumber,
       "basicOffersSent": basicOffersSent,
       "basicEventTotal": basicEventTotal,
       "basicEventPurge": basicEventPurge,
       "activeTable": activeTable,
       "activeEntry": activeEntry,
       "activeIdentificationType": activeIdentificationType,
       "activeIdentification": activeIdentification,
       "activeFunction": activeFunction,
       "activeSoftwareVersionType": activeSoftwareVersionType,
       "activeSoftwareVersion": activeSoftwareVersion,
       "activeParameterVersion": activeParameterVersion,
       "activeCurrentSequence": activeCurrentSequence,
       "activeBytesRemaining": activeBytesRemaining,
       "activeFile": activeFile,
       "activeStatus": activeStatus,
       "activeState": activeState,
       "clientTable": clientTable,
       "clientEntry": clientEntry,
       "clientIdentificationType": clientIdentificationType,
       "clientIdentification": clientIdentification,
       "clientEntryStatus": clientEntryStatus,
       "clientName": clientName,
       "clientLoadFile": clientLoadFile,
       "clientDiagnosticFile": clientDiagnosticFile,
       "clientLoadService": clientLoadService,
       "clientDumpService": clientDumpService,
       "namedTable": namedTable,
       "namedEntry": namedEntry,
       "namedIdentificationType": namedIdentificationType,
       "namedIdentification": namedIdentification,
       "namedEntryStatus": namedEntryStatus,
       "namedName": namedName,
       "namedLoadFile": namedLoadFile,
       "namedDiagnosticFile": namedDiagnosticFile,
       "namedLoadService": namedLoadService,
       "namedDumpService": namedDumpService,
       "xEventTable": xEventTable,
       "xEventEntry": xEventEntry,
       "xEventIndex": xEventIndex,
       "xEventText": xEventText,
       "basicDeviceNumber": basicDeviceNumber,
       "deviceTable": deviceTable,
       "deviceEntry": deviceEntry,
       "deviceIndex": deviceIndex,
       "deviceName": deviceName,
       "deviceDescr": deviceDescr,
       "deviceOperation": deviceOperation,
       "deviceFormat": deviceFormat,
       "deviceProtection": deviceProtection,
       "deviceFormatMedium": deviceFormatMedium,
       "deviceGetFile": deviceGetFile,
       "deviceGetFileHostIdentificationType": deviceGetFileHostIdentificationType,
       "deviceGetFileHostIdentification": deviceGetFileHostIdentification,
       "deviceGetFileName": deviceGetFileName,
       "deviceGetFileArea": deviceGetFileArea,
       "deviceFormatOption": deviceFormatOption,
       "deviceFormatRedundantParams": deviceFormatRedundantParams,
       "devicePreviousStatus": devicePreviousStatus,
       "xDump": xDump,
       "dumpService": dumpService,
       "dumpDrive": dumpDrive,
       "dumpMerit": dumpMerit,
       "dumpSize": dumpSize,
       "dumpCompleted": dumpCompleted,
       "dumpActive": dumpActive,
       "dumpFileNumber": dumpFileNumber,
       "dumpFileTable": dumpFileTable,
       "dumpFileEntry": dumpFileEntry,
       "dumpFileIdentificationType": dumpFileIdentificationType,
       "dumpFileIdentification": dumpFileIdentification,
       "dumpFileEntryStatus": dumpFileEntryStatus,
       "dumpFileCreation": dumpFileCreation,
       "dumpFileSize": dumpFileSize,
       "xLoad": xLoad,
       "loadService": loadService,
       "loadMerit": loadMerit,
       "loadCompleted": loadCompleted,
       "loadActive": loadActive,
       "loadFileNumber": loadFileNumber,
       "loadFileTable": loadFileTable,
       "loadFileEntry": loadFileEntry,
       "loadFileName": loadFileName,
       "loadFileCreation": loadFileCreation,
       "loadFileSize": loadFileSize,
       "loadFileSoftwareVersionType": loadFileSoftwareVersionType,
       "loadFileSoftwareVersion": loadFileSoftwareVersion,
       "xParam": xParam,
       "paramService": paramService,
       "paramDefaultService": paramDefaultService,
       "paramDrive": paramDrive,
       "paramActive": paramActive,
       "paramStorageActive": paramStorageActive,
       "paramFileNumber": paramFileNumber,
       "paramFileTable": paramFileTable,
       "paramFileEntry": paramFileEntry,
       "paramFileIdentificationType": paramFileIdentificationType,
       "paramFileIdentification": paramFileIdentification,
       "paramFileEntryStatus": paramFileEntryStatus,
       "paramFileWrite": paramFileWrite,
       "paramFileSize": paramFileSize,
       "paramFileParameterVersion": paramFileParameterVersion,
       "xParamClient": xParamClient,
       "paramClientLoaderName": paramClientLoaderName,
       "paramClientLoaderAddressType": paramClientLoaderAddressType,
       "paramClientLoaderAddress": paramClientLoaderAddress,
       "paramClientParameterVersion": paramClientParameterVersion,
       "paramClientUpdateTime": paramClientUpdateTime,
       "paramClientServerCheck": paramClientServerCheck,
       "paramClientCheckInterval": paramClientCheckInterval,
       "paramClientCheckNow": paramClientCheckNow,
       "paramClientServerLimit": paramClientServerLimit,
       "paramClientRetransmitInterval": paramClientRetransmitInterval,
       "paramClientRetransmitLimit": paramClientRetransmitLimit,
       "paramClientState": paramClientState,
       "paramClientProtocolErrors": paramClientProtocolErrors,
       "paramClientServerRejects": paramClientServerRejects,
       "paramClientServerNumber": paramClientServerNumber,
       "paramServerTable": paramServerTable,
       "paramServerEntry": paramServerEntry,
       "paramServerName": paramServerName,
       "paramServerEntryStatus": paramServerEntryStatus,
       "paramServerAddressType": paramServerAddressType,
       "paramServerAddress": paramServerAddress,
       "paramServerStoredVersion": paramServerStoredVersion,
       "paramServerStoredTime": paramServerStoredTime,
       "paramServerStoredStatus": paramServerStoredStatus,
       "paramServerStoredFailure": paramServerStoredFailure,
       "paramClientPath": paramClientPath,
       "paramClientChassisStorageState": paramClientChassisStorageState,
       "paramClientTftpBroadcast": paramClientTftpBroadcast,
       "paramClientWriteNow": paramClientWriteNow,
       "agent": agent,
       "terminalServer": terminalServer,
       "tsMxCard1M": tsMxCard1M,
       "tsMxBox1M": tsMxBox1M,
       "tsMxCard": tsMxCard,
       "tsMxBox": tsMxBox,
       "tsN9": tsN9,
       "tsPrint": tsPrint,
       "tsX25": tsX25,
       "em1608": em1608,
       "ir7520": ir7520,
       "ir9020": ir9020,
       "ir7020": ir7020,
       "irMgr0Rdc": irMgr0Rdc,
       "ir9040": ir9040,
       "ir7040": ir7040,
       "irMgr0": irMgr0,
       "irM800": irM800,
       "irM700": irM700,
       "ir8020": ir8020,
       "ir8040": ir8040,
       "ir7004": ir7004,
       "ir7008": ir7008,
       "ir8004": ir8004,
       "ir8008": ir8008,
       "irM900": irM900,
       "irMGR0AC": irMGR0AC,
       "irMGR0AC-IN": irMGR0AC_IN,
       "ir9004": ir9004,
       "ir9008": ir9008,
       "ir9504": ir9504,
       "bridge": bridge,
       "repeater": repeater,
       "rpMx": rpMx,
       "rpN9": rpN9,
       "bridgeRouter": bridgeRouter,
       "bridgeRouterMx": bridgeRouterMx,
       "bridgeRouterN9": bridgeRouterN9,
       "bridgeRouterN3": bridgeRouterN3,
       "bridgeRouterN2": bridgeRouterN2,
       "bridgeRouterEB": bridgeRouterEB,
       "bridgeRouterRepeater": bridgeRouterRepeater,
       "switch": switch,
       "oem": oem,
       "netVantage": netVantage,
       "nv8516TT": nv8516TT,
       "nv8516FF": nv8516FF,
       "nbase": nbase,
       "nbaseSwitch": nbaseSwitch,
       "nbaseSwitchN9": nbaseSwitchN9,
       "xInternet": xInternet,
       "xIp": xIp,
       "ipGatewayAddress1": ipGatewayAddress1,
       "ipGatewayAddress2": ipGatewayAddress2,
       "ipAutoSubnetMask": ipAutoSubnetMask,
       "ipReassembly": ipReassembly,
       "ipFragmentsQueuedHigh": ipFragmentsQueuedHigh,
       "ipFragmentsQueuedCurrent": ipFragmentsQueuedCurrent,
       "ipGenAdExtTable": ipGenAdExtTable,
       "ipGenAdExtEntry": ipGenAdExtEntry,
       "ipGenAdEntExtType": ipGenAdEntExtType,
       "ipGenAdEntExtBroadcast": ipGenAdEntExtBroadcast,
       "ipARPTimeout": ipARPTimeout,
       "ipGatewayPingInterval": ipGatewayPingInterval,
       "ipConfigureBootp": ipConfigureBootp,
       "xTcp": xTcp,
       "tcpPortTable": tcpPortTable,
       "tcpPortEntry": tcpPortEntry,
       "tcpPortIndex": tcpPortIndex,
       "tcpPortConnectByAddress": tcpPortConnectByAddress,
       "tcpPortWindowSize": tcpPortWindowSize,
       "tcpPortKeepAliveLimit": tcpPortKeepAliveLimit,
       "tcpResequencing": tcpResequencing,
       "tcpQueuedSegs": tcpQueuedSegs,
       "tcpDiscardSegs": tcpDiscardSegs,
       "tcpConnectTimer": tcpConnectTimer,
       "tcpLocalPortBase": tcpLocalPortBase,
       "tcpLocalPortIncrement": tcpLocalPortIncrement,
       "tcpRoutingTblSz": tcpRoutingTblSz,
       "tcpDataSendDelay": tcpDataSendDelay,
       "tcpAckDelay": tcpAckDelay,
       "tcpRetransmitMin": tcpRetransmitMin,
       "xSnmpAgent": xSnmpAgent,
       "snmpAgentGetCommunity": snmpAgentGetCommunity,
       "snmpAgentSetCommunity": snmpAgentSetCommunity,
       "snmpAgentTrapCommunity": snmpAgentTrapCommunity,
       "snmpAgentGetClientNumber": snmpAgentGetClientNumber,
       "snmpAgentSetClientNumber": snmpAgentSetClientNumber,
       "snmpAgentTrapClientNumber": snmpAgentTrapClientNumber,
       "getClientTable": getClientTable,
       "getClientEntry": getClientEntry,
       "getClientIndex": getClientIndex,
       "getClientEntryStatus": getClientEntryStatus,
       "getClientAddressType": getClientAddressType,
       "getClientAddress": getClientAddress,
       "setClientTable": setClientTable,
       "setClientEntry": setClientEntry,
       "setClientIndex": setClientIndex,
       "setClientEntryStatus": setClientEntryStatus,
       "setClientAddressType": setClientAddressType,
       "setClientAddress": setClientAddress,
       "trapClientTable": trapClientTable,
       "trapClientEntry": trapClientEntry,
       "trapClientIndex": trapClientIndex,
       "trapClientEntryStatus": trapClientEntryStatus,
       "trapClientAddressType": trapClientAddressType,
       "trapClientAddress": trapClientAddress,
       "snmpAgentAuthFailureAddress": snmpAgentAuthFailureAddress,
       "snmpAgentCommunityAuthenticationAlways": snmpAgentCommunityAuthenticationAlways,
       "snmpAgentTrapClientPingHost1": snmpAgentTrapClientPingHost1,
       "snmpAgentTrapClientPingHost2": snmpAgentTrapClientPingHost2,
       "snmpAgentTrapClientPingHost1PollInterval": snmpAgentTrapClientPingHost1PollInterval,
       "snmpAgentTrapClientPingHost2PollInterval": snmpAgentTrapClientPingHost2PollInterval,
       "snmpAgentTrapClientPingHost1PollRetries": snmpAgentTrapClientPingHost1PollRetries,
       "snmpAgentTrapClientPingHost2PollRetries": snmpAgentTrapClientPingHost2PollRetries,
       "snmpAgentTrapClientQuerySourceHost1": snmpAgentTrapClientQuerySourceHost1,
       "snmpAgentTrapClientQuerySourceHost2": snmpAgentTrapClientQuerySourceHost2,
       "snmpAgentTrapClientQuerySourceHost1Timeout": snmpAgentTrapClientQuerySourceHost1Timeout,
       "snmpAgentTrapClientQuerySourceHost2Timeout": snmpAgentTrapClientQuerySourceHost2Timeout,
       "xDomainResolver": xDomainResolver,
       "domainResolverSuffix": domainResolverSuffix,
       "domainResolverAddress1": domainResolverAddress1,
       "domainResolverAddress2": domainResolverAddress2,
       "domainResolverTtl": domainResolverTtl,
       "domainResolverNameNumber": domainResolverNameNumber,
       "nameTable": nameTable,
       "nameEntry": nameEntry,
       "nameName": nameName,
       "nameAddress": nameAddress,
       "nameStatus": nameStatus,
       "nameSource": nameSource,
       "nameTtl": nameTtl,
       "domainResolverPpp": domainResolverPpp,
       "domainResolverPppPrimaryServer": domainResolverPppPrimaryServer,
       "domainResolverPppSecondaryServer": domainResolverPppSecondaryServer,
       "xSlip": xSlip,
       "slipTable": slipTable,
       "slipEntry": slipEntry,
       "slipIndex": slipIndex,
       "slipState": slipState,
       "slipLocalAddress": slipLocalAddress,
       "slipRemoteAddress": slipRemoteAddress,
       "slipMask": slipMask,
       "slipPortPacketsReceived": slipPortPacketsReceived,
       "slipPortPacketsSent": slipPortPacketsSent,
       "slipPortPacketsDiscarded": slipPortPacketsDiscarded,
       "slipPortPacketLengthErrors": slipPortPacketLengthErrors,
       "slipPortPacketChecksumErrors": slipPortPacketChecksumErrors,
       "slipNetworkPacketsReceived": slipNetworkPacketsReceived,
       "slipNetworkPacketsSent": slipNetworkPacketsSent,
       "slipNetworkPacketsDiscarded": slipNetworkPacketsDiscarded,
       "xTelnet": xTelnet,
       "telnetPortTable": telnetPortTable,
       "telnetPortEntry": telnetPortEntry,
       "telnetPortIndex": telnetPortIndex,
       "telnetPortIncomingTcpPort": telnetPortIncomingTcpPort,
       "telnetPortOutgoingTcpPort": telnetPortOutgoingTcpPort,
       "telnetPortNewlineTranslation": telnetPortNewlineTranslation,
       "telnetPortTerminalType": telnetPortTerminalType,
       "telnetPortEorReflection": telnetPortEorReflection,
       "telnetPortBinaryMode": telnetPortBinaryMode,
       "telnetPortSendLocation": telnetPortSendLocation,
       "telnetPortClientLocation": telnetPortClientLocation,
       "telnetPortPassiveSendLocation": telnetPortPassiveSendLocation,
       "telnetSerialPortTable": telnetSerialPortTable,
       "telnetSerialPortEntry": telnetSerialPortEntry,
       "telnetSerialPortIndex": telnetSerialPortIndex,
       "telnetSerialPortOptionDisplay": telnetSerialPortOptionDisplay,
       "telnetSerialPortCsiEscape": telnetSerialPortCsiEscape,
       "telnetSerialPortEchoMode": telnetSerialPortEchoMode,
       "telnetSerialPortNewlineMode": telnetSerialPortNewlineMode,
       "telnetSerialPortTransmitMode": telnetSerialPortTransmitMode,
       "telnetSerialPortTransmitCharacterTimes": telnetSerialPortTransmitCharacterTimes,
       "telnetSerialPortAbortOutputCharacter": telnetSerialPortAbortOutputCharacter,
       "telnetSerialPortAttentionCharacter": telnetSerialPortAttentionCharacter,
       "telnetSerialPortEraseKeyCharacter": telnetSerialPortEraseKeyCharacter,
       "telnetSerialPortEraseLineCharacter": telnetSerialPortEraseLineCharacter,
       "telnetSerialPortInterruptCharacter": telnetSerialPortInterruptCharacter,
       "telnetSerialPortQueryCharacter": telnetSerialPortQueryCharacter,
       "telnetSerialPortSynchronizeCharacter": telnetSerialPortSynchronizeCharacter,
       "telnetSerialPortUrgentBreak": telnetSerialPortUrgentBreak,
       "telnetSerialPortRs491": telnetSerialPortRs491,
       "telnetSerialPortTransmitBufferedTime": telnetSerialPortTransmitBufferedTime,
       "telnetSerialPortInterpretInterruptAsBreak": telnetSerialPortInterpretInterruptAsBreak,
       "telnetSerialPortPass8d": telnetSerialPortPass8d,
       "telnetSerialPortComControlClient": telnetSerialPortComControlClient,
       "telnetSerialPortComControlServer": telnetSerialPortComControlServer,
       "telnetSerialPortComControlServerRaisesDtr": telnetSerialPortComControlServerRaisesDtr,
       "telnetSerialPortComControlClientTogglesDtr": telnetSerialPortComControlClientTogglesDtr,
       "xTn3270": xTn3270,
       "tn3270DeviceNumber": tn3270DeviceNumber,
       "tn3270LanguageNumber": tn3270LanguageNumber,
       "tn3270PortKeymapStatus": tn3270PortKeymapStatus,
       "tn3270DeviceTable": tn3270DeviceTable,
       "tn3270DeviceEntry": tn3270DeviceEntry,
       "tn3270DeviceName": tn3270DeviceName,
       "tn3270DeviceStatus": tn3270DeviceStatus,
       "tn3270DeviceType": tn3270DeviceType,
       "tn3270Device3278Model": tn3270Device3278Model,
       "tn3270DeviceKeyNumber": tn3270DeviceKeyNumber,
       "tn3270DeviceScreenNumber": tn3270DeviceScreenNumber,
       "tn3270KeyTable": tn3270KeyTable,
       "tn3270KeyEntry": tn3270KeyEntry,
       "tn3270KeyDeviceName": tn3270KeyDeviceName,
       "tn3270KeyName": tn3270KeyName,
       "tn3270KeyStatus": tn3270KeyStatus,
       "tn3270KeyCharacterSequence": tn3270KeyCharacterSequence,
       "tn3270KeyDescription": tn3270KeyDescription,
       "tn3270ScreenTable": tn3270ScreenTable,
       "tn3270ScreenEntry": tn3270ScreenEntry,
       "tn3270ScreenDeviceName": tn3270ScreenDeviceName,
       "tn3270ScreenActionName": tn3270ScreenActionName,
       "tn3270ScreenStatus": tn3270ScreenStatus,
       "tn3270ScreenCharacterSequence": tn3270ScreenCharacterSequence,
       "tn3270LanguageTable": tn3270LanguageTable,
       "tn3270LanguageEntry": tn3270LanguageEntry,
       "tn3270LanguageName": tn3270LanguageName,
       "tn3270LanguageStatus": tn3270LanguageStatus,
       "eToALanguageTable": eToALanguageTable,
       "eToALanguageEntry": eToALanguageEntry,
       "eToALanguageName": eToALanguageName,
       "eToAOffset": eToAOffset,
       "eToAValue": eToAValue,
       "aToELanguageTable": aToELanguageTable,
       "aToELanguageEntry": aToELanguageEntry,
       "aToELanguageName": aToELanguageName,
       "aToEOffset": aToEOffset,
       "aToEValue": aToEValue,
       "tn3270PortTable": tn3270PortTable,
       "tn3270PortEntry": tn3270PortEntry,
       "tn3270PortIndex": tn3270PortIndex,
       "tn3270PortDeviceName": tn3270PortDeviceName,
       "tn3270PortLanguageName": tn3270PortLanguageName,
       "tn3270PortExtendedAttributes": tn3270PortExtendedAttributes,
       "tn3270PortEorNegotiation": tn3270PortEorNegotiation,
       "tn3270PortErrorLock": tn3270PortErrorLock,
       "tn3270PortPrinterPort": tn3270PortPrinterPort,
       "tn3270PortOutgoingTcpPort": tn3270PortOutgoingTcpPort,
       "tn3270PortSpaceInsert": tn3270PortSpaceInsert,
       "tn3270PortTypeAhead": tn3270PortTypeAhead,
       "tn3270PrefixKeyMap": tn3270PrefixKeyMap,
       "tn3270PortScanner": tn3270PortScanner,
       "xKerberos": xKerberos,
       "kerbStatus": kerbStatus,
       "kerbRealm": kerbRealm,
       "kerbQueryLimit": kerbQueryLimit,
       "kerbMasterName": kerbMasterName,
       "kerbServerName1": kerbServerName1,
       "kerbServerName2": kerbServerName2,
       "kerbInsecureLogins": kerbInsecureLogins,
       "kerbSecureLogins": kerbSecureLogins,
       "kerbSecureLoginsFailed": kerbSecureLoginsFailed,
       "kerbPasswordChangeFailed": kerbPasswordChangeFailed,
       "kerbError": kerbError,
       "kerbErrorTime": kerbErrorTime,
       "kerbMasterAccess": kerbMasterAccess,
       "kerbMasterAccessFailed": kerbMasterAccessFailed,
       "kerbServerAccess1": kerbServerAccess1,
       "kerbServerAccessFailed1": kerbServerAccessFailed1,
       "kerbServerAccess2": kerbServerAccess2,
       "kerbServerAccessFailed2": kerbServerAccessFailed2,
       "kerbPortTable": kerbPortTable,
       "kerbPortEntry": kerbPortEntry,
       "kerbPortIndex": kerbPortIndex,
       "kerbPortStatus": kerbPortStatus,
       "kerbServerPort": kerbServerPort,
       "xPortSecurity": xPortSecurity,
       "psEntryNumber": psEntryNumber,
       "psEntryNumberLimit": psEntryNumberLimit,
       "psEntryInvalidIndex": psEntryInvalidIndex,
       "psPortTable": psPortTable,
       "psPortEntry": psPortEntry,
       "psPortIndex": psPortIndex,
       "psPortDefaultInboundAccess": psPortDefaultInboundAccess,
       "psPortDefaultOutboundAccess": psPortDefaultOutboundAccess,
       "psClrInternetSecurity": psClrInternetSecurity,
       "psTable": psTable,
       "psEntry": psEntry,
       "psEntryIndex": psEntryIndex,
       "psEntryStatus": psEntryStatus,
       "psEntryAddress": psEntryAddress,
       "psEntryMask": psEntryMask,
       "psEntryAccess": psEntryAccess,
       "psEntryDirection": psEntryDirection,
       "psEntryPortMap": psEntryPortMap,
       "xXremote": xXremote,
       "xremoteServerName1": xremoteServerName1,
       "xremoteServerName2": xremoteServerName2,
       "xremoteServerAccess1": xremoteServerAccess1,
       "xremoteServerAccessFailed1": xremoteServerAccessFailed1,
       "xremoteServerAccess2": xremoteServerAccess2,
       "xremoteServerAccessFailed2": xremoteServerAccessFailed2,
       "xremoteSessions": xremoteSessions,
       "xremotePortTable": xremotePortTable,
       "xremotePortEntry": xremotePortEntry,
       "xremotePortIndex": xremotePortIndex,
       "xremotePortXremote": xremotePortXremote,
       "xremotePortXdmQuery": xremotePortXdmQuery,
       "xremotePortXdmHost": xremotePortXdmHost,
       "xremoteServerClients": xremoteServerClients,
       "xRotary": xRotary,
       "rotaryNumber": rotaryNumber,
       "rotaryTable": rotaryTable,
       "rotaryEntry": rotaryEntry,
       "rotaryAddress": rotaryAddress,
       "rotaryStatus": rotaryStatus,
       "rotaryPortMap": rotaryPortMap,
       "xEgp": xEgp,
       "egpRouting": egpRouting,
       "egpStatus": egpStatus,
       "egpNbrTable": egpNbrTable,
       "egpNbrEntry": egpNbrEntry,
       "egpNbrAddr": egpNbrAddr,
       "egpNbrIntervalDead": egpNbrIntervalDead,
       "egpNbrStatus": egpNbrStatus,
       "xOspf": xOspf,
       "ospfAutoConfigure": ospfAutoConfigure,
       "ospfStatus": ospfStatus,
       "ospfIfMtrcTable": ospfIfMtrcTable,
       "ospfIfMtrcEntry": ospfIfMtrcEntry,
       "ospfIfMtrcIpAddress": ospfIfMtrcIpAddress,
       "ospfIfMtrcAddressLessIf": ospfIfMtrcAddressLessIf,
       "ospfIfMtrcTos": ospfIfMtrcTos,
       "ospfIfMtrcCostActual": ospfIfMtrcCostActual,
       "ospfXIfTable": ospfXIfTable,
       "ospfXIfEntry": ospfXIfEntry,
       "ospfXIfIpAddress": ospfXIfIpAddress,
       "ospfXIfAddressLessIf": ospfXIfAddressLessIf,
       "ospfXIfTypeActual": ospfXIfTypeActual,
       "ospfXIfStatus": ospfXIfStatus,
       "ospfXAreaTable": ospfXAreaTable,
       "ospfXAreaEntry": ospfXAreaEntry,
       "ospfXAreaId": ospfXAreaId,
       "ospfXAreaStatus": ospfXAreaStatus,
       "xRouterIp": xRouterIp,
       "ipAdExtTable": ipAdExtTable,
       "ipAdExtEntry": ipAdExtEntry,
       "ipAdEntExtAddress": ipAdEntExtAddress,
       "ipAdEntExtProxyArp": ipAdEntExtProxyArp,
       "ipAdEntExtRip": ipAdEntExtRip,
       "ipRouterIfTable": ipRouterIfTable,
       "ipRouterIfEntry": ipRouterIfEntry,
       "ipRouterIfIndex": ipRouterIfIndex,
       "ipRouterIfProtocolPriority": ipRouterIfProtocolPriority,
       "ipRouterIfMTU": ipRouterIfMTU,
       "ipRouterIfRDP": ipRouterIfRDP,
       "ipRouterIfArpPacketsIn": ipRouterIfArpPacketsIn,
       "ipRouterIfArpPacketsOut": ipRouterIfArpPacketsOut,
       "ipRouterIfPacketsIn": ipRouterIfPacketsIn,
       "ipRouterIfPacketsOut": ipRouterIfPacketsOut,
       "ipRouterIfForwardsIn": ipRouterIfForwardsIn,
       "ipRouterIfForwardsOut": ipRouterIfForwardsOut,
       "xIpTraffic": xIpTraffic,
       "ipTrafficSort": ipTrafficSort,
       "ipTrafficTable": ipTrafficTable,
       "ipTrafficEntry": ipTrafficEntry,
       "ipTrafficIndex": ipTrafficIndex,
       "ipTrafficPercent": ipTrafficPercent,
       "ipTrafficDstAddr": ipTrafficDstAddr,
       "ipTrafficSrcAddr": ipTrafficSrcAddr,
       "ipTrafficProtocol": ipTrafficProtocol,
       "ipTrafficDstPort": ipTrafficDstPort,
       "ipTrafficSrcPort": ipTrafficSrcPort,
       "ipTrafficIf": ipTrafficIf,
       "ipTrafficMonitoring": ipTrafficMonitoring,
       "xIpNetToMediaTable": xIpNetToMediaTable,
       "xIpNetToMediaEntry": xIpNetToMediaEntry,
       "xIpNetToMediaCircuit": xIpNetToMediaCircuit,
       "xIpNetToMediaReverseArp": xIpNetToMediaReverseArp,
       "xRouterUdp": xRouterUdp,
       "udpBcstServerTable": udpBcstServerTable,
       "udpBcstServerEntry": udpBcstServerEntry,
       "udpBcstServerAddress": udpBcstServerAddress,
       "udpBcstServerStatus": udpBcstServerStatus,
       "udpBcstPortTable": udpBcstPortTable,
       "udpBcstPortEntry": udpBcstPortEntry,
       "udpBcstPort": udpBcstPort,
       "udpBcstPortStatus": udpBcstPortStatus,
       "udpBcstRouting": udpBcstRouting,
       "xRouterPolicy": xRouterPolicy,
       "xImport": xImport,
       "impEgpRuleTable": impEgpRuleTable,
       "impEgpRuleEntry": impEgpRuleEntry,
       "impEgpRuleAs": impEgpRuleAs,
       "impEgpRuleNetwork": impEgpRuleNetwork,
       "impEgpRuleAction": impEgpRuleAction,
       "impEgpRulePreference": impEgpRulePreference,
       "impEgpRuleType": impEgpRuleType,
       "impEgpRuleMetricAction": impEgpRuleMetricAction,
       "impEgpRuleMetric": impEgpRuleMetric,
       "impEgpRuleStatus": impEgpRuleStatus,
       "impOspfRuleTable": impOspfRuleTable,
       "impOspfRuleEntry": impOspfRuleEntry,
       "impOspfRuleNetwork": impOspfRuleNetwork,
       "impOspfRulePreference": impOspfRulePreference,
       "impOspfRuleStatus": impOspfRuleStatus,
       "impRipRuleTable": impRipRuleTable,
       "impRipRuleEntry": impRipRuleEntry,
       "impRipRuleFromIf": impRipRuleFromIf,
       "impRipRuleNetwork": impRipRuleNetwork,
       "impRipRuleAction": impRipRuleAction,
       "impRipRulePreference": impRipRulePreference,
       "impRipRuleType": impRipRuleType,
       "impRipRuleMetricAction": impRipRuleMetricAction,
       "impRipRuleMetric": impRipRuleMetric,
       "impRipRuleStatus": impRipRuleStatus,
       "impIsisRuleTable": impIsisRuleTable,
       "impIsisRuleEntry": impIsisRuleEntry,
       "impIsisRuleNetwork": impIsisRuleNetwork,
       "impIsisRuleAction": impIsisRuleAction,
       "impIsisRulePreference": impIsisRulePreference,
       "impIsisRuleType": impIsisRuleType,
       "impIsisRuleMetricAction": impIsisRuleMetricAction,
       "impIsisRuleMetric": impIsisRuleMetric,
       "impIsisRuleStatus": impIsisRuleStatus,
       "xExport": xExport,
       "expEgpToEgpRuleTable": expEgpToEgpRuleTable,
       "expEgpToEgpRuleEntry": expEgpToEgpRuleEntry,
       "expEgpToEgpRuleToAs": expEgpToEgpRuleToAs,
       "expEgpToEgpRuleNetwork": expEgpToEgpRuleNetwork,
       "expEgpToEgpRuleFromAs": expEgpToEgpRuleFromAs,
       "expEgpToEgpRuleAction": expEgpToEgpRuleAction,
       "expEgpToEgpRuleMetricAction": expEgpToEgpRuleMetricAction,
       "expEgpToEgpRuleMetric": expEgpToEgpRuleMetric,
       "expEgpToEgpRuleStatus": expEgpToEgpRuleStatus,
       "expOspfToEgpRuleTable": expOspfToEgpRuleTable,
       "expOspfToEgpRuleEntry": expOspfToEgpRuleEntry,
       "expOspfToEgpRuleToAs": expOspfToEgpRuleToAs,
       "expOspfToEgpRuleNetwork": expOspfToEgpRuleNetwork,
       "expOspfToEgpRuleFromAs": expOspfToEgpRuleFromAs,
       "expOspfToEgpRuleAction": expOspfToEgpRuleAction,
       "expOspfToEgpRuleMetricAction": expOspfToEgpRuleMetricAction,
       "expOspfToEgpRuleMetric": expOspfToEgpRuleMetric,
       "expOspfToEgpRuleStatus": expOspfToEgpRuleStatus,
       "expStaticToEgpRuleTable": expStaticToEgpRuleTable,
       "expStaticToEgpRuleEntry": expStaticToEgpRuleEntry,
       "expStaticToEgpRuleToAs": expStaticToEgpRuleToAs,
       "expStaticToEgpRuleNetwork": expStaticToEgpRuleNetwork,
       "expStaticToEgpRuleAction": expStaticToEgpRuleAction,
       "expStaticToEgpRuleMetricAction": expStaticToEgpRuleMetricAction,
       "expStaticToEgpRuleMetric": expStaticToEgpRuleMetric,
       "expStaticToEgpRuleStatus": expStaticToEgpRuleStatus,
       "expEgpToOspfRuleTable": expEgpToOspfRuleTable,
       "expEgpToOspfRuleEntry": expEgpToOspfRuleEntry,
       "expEgpToOspfRuleNetwork": expEgpToOspfRuleNetwork,
       "expEgpToOspfRuleFromAs": expEgpToOspfRuleFromAs,
       "expEgpToOspfRuleAction": expEgpToOspfRuleAction,
       "expEgpToOspfRuleStatus": expEgpToOspfRuleStatus,
       "expRipToEgpRuleTable": expRipToEgpRuleTable,
       "expRipToEgpRuleEntry": expRipToEgpRuleEntry,
       "expRipToEgpRuleToAs": expRipToEgpRuleToAs,
       "expRipToEgpRuleNetwork": expRipToEgpRuleNetwork,
       "expRipToEgpRuleAction": expRipToEgpRuleAction,
       "expRipToEgpRuleMetricAction": expRipToEgpRuleMetricAction,
       "expRipToEgpRuleMetric": expRipToEgpRuleMetric,
       "expRipToEgpRuleStatus": expRipToEgpRuleStatus,
       "expRipToOspfRuleTable": expRipToOspfRuleTable,
       "expRipToOspfRuleEntry": expRipToOspfRuleEntry,
       "expRipToOspfRuleNetwork": expRipToOspfRuleNetwork,
       "expRipToOspfRuleAction": expRipToOspfRuleAction,
       "expRipToOspfRuleStatus": expRipToOspfRuleStatus,
       "expEgpToRipRuleTable": expEgpToRipRuleTable,
       "expEgpToRipRuleEntry": expEgpToRipRuleEntry,
       "expEgpToRipRuleToIf": expEgpToRipRuleToIf,
       "expEgpToRipRuleNetwork": expEgpToRipRuleNetwork,
       "expEgpToRipRuleFromAs": expEgpToRipRuleFromAs,
       "expEgpToRipRuleAction": expEgpToRipRuleAction,
       "expEgpToRipRuleMetricAction": expEgpToRipRuleMetricAction,
       "expEgpToRipRuleMetric": expEgpToRipRuleMetric,
       "expEgpToRipRuleStatus": expEgpToRipRuleStatus,
       "expOspfToRipRuleTable": expOspfToRipRuleTable,
       "expOspfToRipRuleEntry": expOspfToRipRuleEntry,
       "expOspfToRipRuleToIf": expOspfToRipRuleToIf,
       "expOspfToRipRuleNetwork": expOspfToRipRuleNetwork,
       "expOspfToRipRuleFromAs": expOspfToRipRuleFromAs,
       "expOspfToRipRuleAction": expOspfToRipRuleAction,
       "expOspfToRipRuleMetricAction": expOspfToRipRuleMetricAction,
       "expOspfToRipRuleMetric": expOspfToRipRuleMetric,
       "expOspfToRipRuleStatus": expOspfToRipRuleStatus,
       "expRipToRipRuleTable": expRipToRipRuleTable,
       "expRipToRipRuleEntry": expRipToRipRuleEntry,
       "expRipToRipRuleToIf": expRipToRipRuleToIf,
       "expRipToRipRuleNetwork": expRipToRipRuleNetwork,
       "expRipToRipRuleAction": expRipToRipRuleAction,
       "expRipToRipRuleMetricAction": expRipToRipRuleMetricAction,
       "expRipToRipRuleMetric": expRipToRipRuleMetric,
       "expRipToRipRuleStatus": expRipToRipRuleStatus,
       "expStaticToRipRuleTable": expStaticToRipRuleTable,
       "expStaticToRipRuleEntry": expStaticToRipRuleEntry,
       "expStaticToRipRuleToIf": expStaticToRipRuleToIf,
       "expStaticToRipRuleNetwork": expStaticToRipRuleNetwork,
       "expStaticToRipRuleAction": expStaticToRipRuleAction,
       "expStaticToRipRuleMetricAction": expStaticToRipRuleMetricAction,
       "expStaticToRipRuleMetric": expStaticToRipRuleMetric,
       "expStaticToRipRuleStatus": expStaticToRipRuleStatus,
       "expIsisToEgpRuleTable": expIsisToEgpRuleTable,
       "expIsisToEgpRuleEntry": expIsisToEgpRuleEntry,
       "expIsisToEgpRuleToAs": expIsisToEgpRuleToAs,
       "expIsisToEgpRuleNetwork": expIsisToEgpRuleNetwork,
       "expIsisToEgpRuleAction": expIsisToEgpRuleAction,
       "expIsisToEgpRuleMetricAction": expIsisToEgpRuleMetricAction,
       "expIsisToEgpRuleMetric": expIsisToEgpRuleMetric,
       "expIsisToEgpRuleStatus": expIsisToEgpRuleStatus,
       "expIsisToOspfRuleTable": expIsisToOspfRuleTable,
       "expIsisToOspfRuleEntry": expIsisToOspfRuleEntry,
       "expIsisToOspfRuleNetwork": expIsisToOspfRuleNetwork,
       "expIsisToOspfRuleAction": expIsisToOspfRuleAction,
       "expIsisToOspfRuleStatus": expIsisToOspfRuleStatus,
       "expIsisToRipRuleTable": expIsisToRipRuleTable,
       "expIsisToRipRuleEntry": expIsisToRipRuleEntry,
       "expIsisToRipRuleToIf": expIsisToRipRuleToIf,
       "expIsisToRipRuleNetwork": expIsisToRipRuleNetwork,
       "expIsisToRipRuleAction": expIsisToRipRuleAction,
       "expIsisToRipRuleMetricAction": expIsisToRipRuleMetricAction,
       "expIsisToRipRuleMetric": expIsisToRipRuleMetric,
       "expIsisToRipRuleStatus": expIsisToRipRuleStatus,
       "expEgpToIsisRuleTable": expEgpToIsisRuleTable,
       "expEgpToIsisRuleEntry": expEgpToIsisRuleEntry,
       "expEgpToIsisRuleNetwork": expEgpToIsisRuleNetwork,
       "expEgpToIsisRuleFromAs": expEgpToIsisRuleFromAs,
       "expEgpToIsisRuleAction": expEgpToIsisRuleAction,
       "expEgpToIsisRuleMetricType": expEgpToIsisRuleMetricType,
       "expEgpToIsisRuleDefaultMetricAction": expEgpToIsisRuleDefaultMetricAction,
       "expEgpToIsisRuleDefaultMetric": expEgpToIsisRuleDefaultMetric,
       "expEgpToIsisRuleDelayMetricAction": expEgpToIsisRuleDelayMetricAction,
       "expEgpToIsisRuleDelayMetric": expEgpToIsisRuleDelayMetric,
       "expEgpToIsisRuleErrorMetricAction": expEgpToIsisRuleErrorMetricAction,
       "expEgpToIsisRuleErrorMetric": expEgpToIsisRuleErrorMetric,
       "expEgpToIsisRuleExpenseMetricAction": expEgpToIsisRuleExpenseMetricAction,
       "expEgpToIsisRuleExpenseMetric": expEgpToIsisRuleExpenseMetric,
       "expEgpToIsisRuleStatus": expEgpToIsisRuleStatus,
       "expOspfToIsisRuleTable": expOspfToIsisRuleTable,
       "expOspfToIsisRuleEntry": expOspfToIsisRuleEntry,
       "expOspfToIsisRuleNetwork": expOspfToIsisRuleNetwork,
       "expOspfToIsisRuleFromAs": expOspfToIsisRuleFromAs,
       "expOspfToIsisRuleAction": expOspfToIsisRuleAction,
       "expOspfToIsisRuleMetricType": expOspfToIsisRuleMetricType,
       "expOspfToIsisRuleDefaultMetricAction": expOspfToIsisRuleDefaultMetricAction,
       "expOspfToIsisRuleDefaultMetric": expOspfToIsisRuleDefaultMetric,
       "expOspfToIsisRuleDelayMetricAction": expOspfToIsisRuleDelayMetricAction,
       "expOspfToIsisRuleDelayMetric": expOspfToIsisRuleDelayMetric,
       "expOspfToIsisRuleErrorMetricAction": expOspfToIsisRuleErrorMetricAction,
       "expOspfToIsisRuleErrorMetric": expOspfToIsisRuleErrorMetric,
       "expOspfToIsisRuleExpenseMetricAction": expOspfToIsisRuleExpenseMetricAction,
       "expOspfToIsisRuleExpenseMetric": expOspfToIsisRuleExpenseMetric,
       "expOspfToIsisRuleStatus": expOspfToIsisRuleStatus,
       "expRipToIsisRuleTable": expRipToIsisRuleTable,
       "expRipToIsisRuleEntry": expRipToIsisRuleEntry,
       "expRipToIsisRuleNetwork": expRipToIsisRuleNetwork,
       "expRipToIsisRuleAction": expRipToIsisRuleAction,
       "expRipToIsisRuleMetricType": expRipToIsisRuleMetricType,
       "expRipToIsisRuleDefaultMetricAction": expRipToIsisRuleDefaultMetricAction,
       "expRipToIsisRuleDefaultMetric": expRipToIsisRuleDefaultMetric,
       "expRipToIsisRuleDelayMetricAction": expRipToIsisRuleDelayMetricAction,
       "expRipToIsisRuleDelayMetric": expRipToIsisRuleDelayMetric,
       "expRipToIsisRuleErrorMetricAction": expRipToIsisRuleErrorMetricAction,
       "expRipToIsisRuleErrorMetric": expRipToIsisRuleErrorMetric,
       "expRipToIsisRuleExpenseMetricAction": expRipToIsisRuleExpenseMetricAction,
       "expRipToIsisRuleExpenseMetric": expRipToIsisRuleExpenseMetric,
       "expRipToIsisRuleStatus": expRipToIsisRuleStatus,
       "expStaticToIsisRuleTable": expStaticToIsisRuleTable,
       "expStaticToIsisRuleEntry": expStaticToIsisRuleEntry,
       "expStaticToIsisRuleNetwork": expStaticToIsisRuleNetwork,
       "expStaticToIsisRuleAction": expStaticToIsisRuleAction,
       "expStaticToIsisRuleMetricType": expStaticToIsisRuleMetricType,
       "expStaticToIsisRuleDefaultMetricAction": expStaticToIsisRuleDefaultMetricAction,
       "expStaticToIsisRuleDefaultMetric": expStaticToIsisRuleDefaultMetric,
       "expStaticToIsisRuleDelayMetricAction": expStaticToIsisRuleDelayMetricAction,
       "expStaticToIsisRuleDelayMetric": expStaticToIsisRuleDelayMetric,
       "expStaticToIsisRuleErrorMetricAction": expStaticToIsisRuleErrorMetricAction,
       "expStaticToIsisRuleErrorMetric": expStaticToIsisRuleErrorMetric,
       "expStaticToIsisRuleExpenseMetricAction": expStaticToIsisRuleExpenseMetricAction,
       "expStaticToIsisRuleExpenseMetric": expStaticToIsisRuleExpenseMetric,
       "expStaticToIsisRuleStatus": expStaticToIsisRuleStatus,
       "xFilter": xFilter,
       "ipIfFilterTable": ipIfFilterTable,
       "ipIfFilterEntry": ipIfFilterEntry,
       "ipIfFilterIndex": ipIfFilterIndex,
       "ipIfFilterDstAddr": ipIfFilterDstAddr,
       "ipIfFilterDstMask": ipIfFilterDstMask,
       "ipIfFilterSrcAddr": ipIfFilterSrcAddr,
       "ipIfFilterSrcMask": ipIfFilterSrcMask,
       "ipIfFilterProtocol": ipIfFilterProtocol,
       "ipIfFilterDstPort": ipIfFilterDstPort,
       "ipIfFilterSrcPort": ipIfFilterSrcPort,
       "ipIfFilterAction": ipIfFilterAction,
       "ipIfFilterStatus": ipIfFilterStatus,
       "ipFilterState": ipFilterState,
       "ipIfFilter2Table": ipIfFilter2Table,
       "ipIfFilter2Entry": ipIfFilter2Entry,
       "ipIfFilter2Index": ipIfFilter2Index,
       "ipIfFilter2DstAddr": ipIfFilter2DstAddr,
       "ipIfFilter2DstMask": ipIfFilter2DstMask,
       "ipIfFilter2SrcAddr": ipIfFilter2SrcAddr,
       "ipIfFilter2SrcMask": ipIfFilter2SrcMask,
       "ipIfFilter2Protocol": ipIfFilter2Protocol,
       "ipIfFilter2DstPortStart": ipIfFilter2DstPortStart,
       "ipIfFilter2SrcPortStart": ipIfFilter2SrcPortStart,
       "ipIfFilter2Action": ipIfFilter2Action,
       "ipIfFilter2Status": ipIfFilter2Status,
       "ipIfFilter2DstPortEnd": ipIfFilter2DstPortEnd,
       "ipIfFilter2SrcPortEnd": ipIfFilter2SrcPortEnd,
       "ipIfFilter2TcpSyn": ipIfFilter2TcpSyn,
       "ipIfFilter2ProtocolPriority": ipIfFilter2ProtocolPriority,
       "xRip": xRip,
       "ripState": ripState,
       "ripStatus": ripStatus,
       "ripNetTable": ripNetTable,
       "ripNetEntry": ripNetEntry,
       "ripNetNet": ripNetNet,
       "ripNetState": ripNetState,
       "ripNetRipsIn": ripNetRipsIn,
       "ripNetRipsOut": ripNetRipsOut,
       "ripNetAlgorithm": ripNetAlgorithm,
       "xlpd": xlpd,
       "lpdQueueTable": lpdQueueTable,
       "lpdQueueEntry": lpdQueueEntry,
       "lpdQueueStatus": lpdQueueStatus,
       "lpdQueueName": lpdQueueName,
       "lpdQueuePorts": lpdQueuePorts,
       "lpdQueueEnabled": lpdQueueEnabled,
       "lpdQueueLfConversion": lpdQueueLfConversion,
       "lpdQueueTotalJobs": lpdQueueTotalJobs,
       "lpdQueueActiveJobs": lpdQueueActiveJobs,
       "lpdQueueWaitingJobs": lpdQueueWaitingJobs,
       "lpdQueueProcessedJobs": lpdQueueProcessedJobs,
       "lpdQueueFormFeed": lpdQueueFormFeed,
       "lpdQueueBypass": lpdQueueBypass,
       "lpdJobTable": lpdJobTable,
       "lpdJobEntry": lpdJobEntry,
       "lpdJobStatus": lpdJobStatus,
       "lpdJobNumber": lpdJobNumber,
       "lpdJobAssignedPort": lpdJobAssignedPort,
       "lpdJobFileSize": lpdJobFileSize,
       "lpdJobHostName": lpdJobHostName,
       "lpdJobFileName": lpdJobFileName,
       "lpdJobState": lpdJobState,
       "xSecurID": xSecurID,
       "securIDServerName0": securIDServerName0,
       "securIDServerName1": securIDServerName1,
       "securIDServerName2": securIDServerName2,
       "securIDServerName3": securIDServerName3,
       "securIDServerName4": securIDServerName4,
       "securIDMaxRetries": securIDMaxRetries,
       "securIDBaseTimeout": securIDBaseTimeout,
       "securIDPort": securIDPort,
       "securIDQueryLimit": securIDQueryLimit,
       "securIDEncryptionMode": securIDEncryptionMode,
       "securIDInsecureLogins": securIDInsecureLogins,
       "securIDSecureLogins": securIDSecureLogins,
       "securIDSecureLoginsFailed": securIDSecureLoginsFailed,
       "securIDServerAccess0": securIDServerAccess0,
       "securIDServerAccessFailed0": securIDServerAccessFailed0,
       "securIDServerAccess1": securIDServerAccess1,
       "securIDServerAccessFailed1": securIDServerAccessFailed1,
       "securIDServerAccess2": securIDServerAccess2,
       "securIDServerAccessFailed2": securIDServerAccessFailed2,
       "securIDServerAccess3": securIDServerAccess3,
       "securIDServerAccessFailed3": securIDServerAccessFailed3,
       "securIDServerAccess4": securIDServerAccess4,
       "securIDServerAccessFailed4": securIDServerAccessFailed4,
       "securIDErrorPortIndex": securIDErrorPortIndex,
       "securIDError": securIDError,
       "securIDErrorUsername": securIDErrorUsername,
       "securIDPortTable": securIDPortTable,
       "securIDPortEntry": securIDPortEntry,
       "securIDPortIndex": securIDPortIndex,
       "securIDPortStatus": securIDPortStatus,
       "xSsh": xSsh,
       "sshPortTable": sshPortTable,
       "sshPortEntry": sshPortEntry,
       "sshPortIndex": sshPortIndex,
       "sshPortIncomingTcpPort": sshPortIncomingTcpPort,
       "sshPortNewlineFiltering": sshPortNewlineFiltering,
       "sshPortNewline": sshPortNewline,
       "sshPortTransmitBufferedTime": sshPortTransmitBufferedTime,
       "sshPortRemoteProtocol": sshPortRemoteProtocol,
       "sshPortBreakSequence": sshPortBreakSequence,
       "sshCipherMask": sshCipherMask,
       "sshAuthenticationTimeout": sshAuthenticationTimeout,
       "sshHostKeyLength": sshHostKeyLength,
       "sshHostKeyGenerate": sshHostKeyGenerate,
       "sshServerKeyLength": sshServerKeyLength,
       "sshServerKeyTtl": sshServerKeyTtl,
       "sshServerMaxBufferSize": sshServerMaxBufferSize,
       "xEthernet": xEthernet,
       "etherTable": etherTable,
       "etherEntry": etherEntry,
       "etherIndex": etherIndex,
       "etherAlignmentErrors": etherAlignmentErrors,
       "etherFCSErrors": etherFCSErrors,
       "etherTxTable": etherTxTable,
       "etherTxEntry": etherTxEntry,
       "etherTxIndex": etherTxIndex,
       "etherTxSingleCollisionFrames": etherTxSingleCollisionFrames,
       "etherTxMultipleCollisionFrames": etherTxMultipleCollisionFrames,
       "etherMulticastTable": etherMulticastTable,
       "etherMulticastEntry": etherMulticastEntry,
       "etherMulticastIndex": etherMulticastIndex,
       "etherMulticastBytesIn": etherMulticastBytesIn,
       "etherMulticastBytesOut": etherMulticastBytesOut,
       "etherXTxTable": etherXTxTable,
       "etherXTxEntry": etherXTxEntry,
       "etherXTxIndex": etherXTxIndex,
       "etherXTxExcessiveCollisions": etherXTxExcessiveCollisions,
       "xBootClient": xBootClient,
       "bootClientStatus": bootClientStatus,
       "xCharacter": xCharacter,
       "xBasic": xBasic,
       "basicBroadcast": basicBroadcast,
       "basicErrorReport": basicErrorReport,
       "basicLock": basicLock,
       "basicInactivityTimer": basicInactivityTimer,
       "basicPasswordRetryLimit": basicPasswordRetryLimit,
       "basicPrivilegedPassword": basicPrivilegedPassword,
       "basicLoginPassword": basicLoginPassword,
       "basicLoginPrompt": basicLoginPrompt,
       "basicWelcome": basicWelcome,
       "basicActivePorts": basicActivePorts,
       "basicActivePortsHigh": basicActivePortsHigh,
       "basicActiveUsers": basicActiveUsers,
       "basicActiveUsersHigh": basicActiveUsersHigh,
       "basicSessions": basicSessions,
       "basicSessionsHigh": basicSessionsHigh,
       "basicSessionsLimit": basicSessionsLimit,
       "basicPortTable": basicPortTable,
       "basicPortEntry": basicPortEntry,
       "basicPortIndex": basicPortIndex,
       "basicPortDefaultDestAction": basicPortDefaultDestAction,
       "basicPortDefaultDestProtocol": basicPortDefaultDestProtocol,
       "basicPortDefaultDestName": basicPortDefaultDestName,
       "basicPortDefaultDestLATNodeName": basicPortDefaultDestLATNodeName,
       "basicPortDefaultDestLATPortName": basicPortDefaultDestLATPortName,
       "basicPortAutoConnect": basicPortAutoConnect,
       "basicPortAutoLogin": basicPortAutoLogin,
       "basicPortBroadcast": basicPortBroadcast,
       "basicPortConnectResume": basicPortConnectResume,
       "basicPortDialup": basicPortDialup,
       "basicPortIdleTimeout": basicPortIdleTimeout,
       "basicPortInactivityLogout": basicPortInactivityLogout,
       "basicPortLossNotification": basicPortLossNotification,
       "basicPortMessageCodes": basicPortMessageCodes,
       "basicPortMultisessions": basicPortMultisessions,
       "basicPortDefaultUserName": basicPortDefaultUserName,
       "basicPortVerification": basicPortVerification,
       "basicPortDefaultProtocol": basicPortDefaultProtocol,
       "basicPortLogins": basicPortLogins,
       "basicPortRemoteSessions": basicPortRemoteSessions,
       "basicPortIdleTimeouts": basicPortIdleTimeouts,
       "basicPortStatus": basicPortStatus,
       "basicPortLastInCharacter": basicPortLastInCharacter,
       "basicPortLastOutCharacter": basicPortLastOutCharacter,
       "basicPortActiveUserName": basicPortActiveUserName,
       "basicPortDefaultSessionMode": basicPortDefaultSessionMode,
       "basicPortZero": basicPortZero,
       "basicPortZeroTime": basicPortZeroTime,
       "basicPortUnixCommands": basicPortUnixCommands,
       "basicPortSessionMode": basicPortSessionMode,
       "basicPortRemoteDisconnectNotify": basicPortRemoteDisconnectNotify,
       "basicPortDefaultDestControlled": basicPortDefaultDestControlled,
       "basicPortControlledPortLogin": basicPortControlledPortLogin,
       "basicPortControlledPortLogout": basicPortControlledPortLogout,
       "basicPortControlledSessionInitialize": basicPortControlledSessionInitialize,
       "basicPortControlledSessionTerminate": basicPortControlledSessionTerminate,
       "basicPortRloginTransparentMode": basicPortRloginTransparentMode,
       "basicPortLoginDuration": basicPortLoginDuration,
       "basicPortOutboundSecurity": basicPortOutboundSecurity,
       "basicPortXonTimer": basicPortXonTimer,
       "basicPortDefaultDedicatedSessionType": basicPortDefaultDedicatedSessionType,
       "basicPortIdleTimeReceive": basicPortIdleTimeReceive,
       "basicPortIdleTimeTransmit": basicPortIdleTimeTransmit,
       "basicPortZeroDisconnectSession": basicPortZeroDisconnectSession,
       "basicPortConsolePort": basicPortConsolePort,
       "basicPortLoginPassword": basicPortLoginPassword,
       "basicPortSensor": basicPortSensor,
       "basicPortAlarmControl": basicPortAlarmControl,
       "basicPortCommandLogging": basicPortCommandLogging,
       "basicPortBreakSequence": basicPortBreakSequence,
       "basicPortTl1Mode": basicPortTl1Mode,
       "basicPortTl1Console": basicPortTl1Console,
       "basicPortFallThrough": basicPortFallThrough,
       "basicPortCommandLoggingSuppressControlCharacters": basicPortCommandLoggingSuppressControlCharacters,
       "basicPortDataLogging": basicPortDataLogging,
       "basicPortDataLoggingSuppressControlCharacters": basicPortDataLoggingSuppressControlCharacters,
       "basicPortOnboardSecurity": basicPortOnboardSecurity,
       "basicPortFallBack": basicPortFallBack,
       "basicPortAlarmMaster": basicPortAlarmMaster,
       "basicPortAlarmMasterAccounting": basicPortAlarmMasterAccounting,
       "basicPortAlarmMasterAudibleAlarm": basicPortAlarmMasterAudibleAlarm,
       "basicPortAlarmMasterFixTime": basicPortAlarmMasterFixTime,
       "basicPortAlarmMasterLcdDisplayString": basicPortAlarmMasterLcdDisplayString,
       "basicPortAlarmMasterReboot": basicPortAlarmMasterReboot,
       "basicPortAlarmMasterUpdateFirmwareHost": basicPortAlarmMasterUpdateFirmwareHost,
       "basicPortAlarmMasterUpdateFirmwareFileName": basicPortAlarmMasterUpdateFirmwareFileName,
       "basicPortAlarmMasterUpdateFirmware": basicPortAlarmMasterUpdateFirmware,
       "basicPortAlarmMasterStatus": basicPortAlarmMasterStatus,
       "basicPortAlarmMasterFaultSeverity": basicPortAlarmMasterFaultSeverity,
       "basicPortPowerMaster": basicPortPowerMaster,
       "basicPortPowerMasterTimeDelay": basicPortPowerMasterTimeDelay,
       "basicPortPowerMasterSwitch": basicPortPowerMasterSwitch,
       "basicPortPowerMasterModel": basicPortPowerMasterModel,
       "basicPortPowerMasterSerialNumber": basicPortPowerMasterSerialNumber,
       "basicPortPowerMasterFirmware": basicPortPowerMasterFirmware,
       "basicPortLockout": basicPortLockout,
       "basicPortAsciiToTrapTranslation": basicPortAsciiToTrapTranslation,
       "basicPortAsciiToTrapTranslationTrapSeverity": basicPortAsciiToTrapTranslationTrapSeverity,
       "basicPortAsciiToTrapTranslationMessages": basicPortAsciiToTrapTranslationMessages,
       "basicPortAsciiToTrapTranslationLastMessage": basicPortAsciiToTrapTranslationLastMessage,
       "basicPortPowerMasterAlarmSeverity": basicPortPowerMasterAlarmSeverity,
       "basicPortPowerMasterDeviceStatus": basicPortPowerMasterDeviceStatus,
       "basicPortBuffering": basicPortBuffering,
       "basicPortLogFacilityLevel": basicPortLogFacilityLevel,
       "basicPortPppDialBackup": basicPortPppDialBackup,
       "basicPortPppDialBackupNumber": basicPortPppDialBackupNumber,
       "basicPortPppDialBackupRedialTimer": basicPortPppDialBackupRedialTimer,
       "basicPortPppDialBackupRedialRetries": basicPortPppDialBackupRedialRetries,
       "basicPortPppDialBackupDisconnectTimer": basicPortPppDialBackupDisconnectTimer,
       "basicPortPppDialBackupLocalAddress": basicPortPppDialBackupLocalAddress,
       "basicPortPppDialBackupDestinationAddress": basicPortPppDialBackupDestinationAddress,
       "basicPortPppDialBackupAddresses": basicPortPppDialBackupAddresses,
       "basicSerialPortTable": basicSerialPortTable,
       "basicSerialPortEntry": basicSerialPortEntry,
       "basicSerialPortIndex": basicSerialPortIndex,
       "basicSerialPortBreak": basicSerialPortBreak,
       "basicSerialPortInterrupts": basicSerialPortInterrupts,
       "basicSerialPortNoLoss": basicSerialPortNoLoss,
       "basicSerialPortPause": basicSerialPortPause,
       "basicSerialPortPrompt": basicSerialPortPrompt,
       "basicSerialPortTerminalType": basicSerialPortTerminalType,
       "basicSerialPortTypeaheadLimit": basicSerialPortTypeaheadLimit,
       "basicSerialPortBackwardSwitch": basicSerialPortBackwardSwitch,
       "basicSerialPortForwardSwitch": basicSerialPortForwardSwitch,
       "basicSerialPortLocalSwitch": basicSerialPortLocalSwitch,
       "basicSerialPortModemControl": basicSerialPortModemControl,
       "basicSerialPortSignalCheck": basicSerialPortSignalCheck,
       "basicSerialPortDSRLogout": basicSerialPortDSRLogout,
       "basicSerialPortDSRObserve": basicSerialPortDSRObserve,
       "basicSerialPortDCDTimeout": basicSerialPortDCDTimeout,
       "basicSerialPortDTRAssert": basicSerialPortDTRAssert,
       "basicSerialPortLimitedCommands": basicSerialPortLimitedCommands,
       "basicSerialPortLimitedView": basicSerialPortLimitedView,
       "basicSerialPortPassword": basicSerialPortPassword,
       "basicSerialPortLineEditor": basicSerialPortLineEditor,
       "basicSerialPortLineEditorBackspace": basicSerialPortLineEditorBackspace,
       "basicSerialPortLineEditorBeginning": basicSerialPortLineEditorBeginning,
       "basicSerialPortLineEditorCancel": basicSerialPortLineEditorCancel,
       "basicSerialPortLineEditorDeleteBeginning": basicSerialPortLineEditorDeleteBeginning,
       "basicSerialPortLineEditorDeleteLine": basicSerialPortLineEditorDeleteLine,
       "basicSerialPortLineEditorEnd": basicSerialPortLineEditorEnd,
       "basicSerialPortLineEditorForward": basicSerialPortLineEditorForward,
       "basicSerialPortLineEditorInsertToggle": basicSerialPortLineEditorInsertToggle,
       "basicSerialPortLineEditorNextLine": basicSerialPortLineEditorNextLine,
       "basicSerialPortLineEditorPreviousLine": basicSerialPortLineEditorPreviousLine,
       "basicSerialPortLineEditorQuotingCharacter": basicSerialPortLineEditorQuotingCharacter,
       "basicSerialPortLineEditorRedisplay": basicSerialPortLineEditorRedisplay,
       "basicSerialPortQuadartReceiveDiscard": basicSerialPortQuadartReceiveDiscard,
       "basicSerialPortAPDProtocols": basicSerialPortAPDProtocols,
       "basicSerialPortAPDTimeout": basicSerialPortAPDTimeout,
       "basicSerialPortAPDDefaultProtocol": basicSerialPortAPDDefaultProtocol,
       "basicSerialPortUsernameCharSet": basicSerialPortUsernameCharSet,
       "basicSerialPortAutoHangup": basicSerialPortAutoHangup,
       "basicSerialPortCommandSize": basicSerialPortCommandSize,
       "basicSerialPortAutoProtocolDetectPrompt": basicSerialPortAutoProtocolDetectPrompt,
       "basicSerialPortUsernamePrompt": basicSerialPortUsernamePrompt,
       "basicSerialPortPasswordPrompt": basicSerialPortPasswordPrompt,
       "basicSerialPortAutoProtocolDetectSecurityInteractiveOnly": basicSerialPortAutoProtocolDetectSecurityInteractiveOnly,
       "basicSerialPortDedicatedUserData": basicSerialPortDedicatedUserData,
       "basicSerialPortIpAutoDiscovery": basicSerialPortIpAutoDiscovery,
       "basicSerialPortDedicatedKickStartData": basicSerialPortDedicatedKickStartData,
       "basicSerialPortBreakLength": basicSerialPortBreakLength,
       "basicSerialPortRotaryRoundRobin": basicSerialPortRotaryRoundRobin,
       "basicSerialPortWelcomeBeforeAuthentication": basicSerialPortWelcomeBeforeAuthentication,
       "basicSerialPortGatewayAutoDiscovery": basicSerialPortGatewayAutoDiscovery,
       "basicSerialPortSubnetAutoDiscovery": basicSerialPortSubnetAutoDiscovery,
       "basicSerialPortRaiseLowerDtr": basicSerialPortRaiseLowerDtr,
       "basicSerialPortRaiseControlDtr": basicSerialPortRaiseControlDtr,
       "basicSerialPortIpConfigureBootp": basicSerialPortIpConfigureBootp,
       "basicConsoleLogoutDisconnect": basicConsoleLogoutDisconnect,
       "basicControlledPorts": basicControlledPorts,
       "basicPortSessionTable": basicPortSessionTable,
       "basicPortSessEntry": basicPortSessEntry,
       "basicPortPortIndex": basicPortPortIndex,
       "basicPortSessIndex": basicPortSessIndex,
       "basicSessControlled": basicSessControlled,
       "basicPortSessEncryption": basicPortSessEncryption,
       "basicTemperatureUnits": basicTemperatureUnits,
       "basicEnvironmentalManagerCircuitBreaker": basicEnvironmentalManagerCircuitBreaker,
       "basicContactClosureOrAlarmInputTable": basicContactClosureOrAlarmInputTable,
       "basicContactClosureOrAlarmInputEntry": basicContactClosureOrAlarmInputEntry,
       "basicContactClosureOrAlarmInputValue": basicContactClosureOrAlarmInputValue,
       "basicContactClosureOrAlarmInputName": basicContactClosureOrAlarmInputName,
       "basicContactClosureOrAlarmInputTrapEnable": basicContactClosureOrAlarmInputTrapEnable,
       "basicContactClosureOrAlarmInputFaultSeverity": basicContactClosureOrAlarmInputFaultSeverity,
       "basicContactClosureOrAlarmInputFaultState": basicContactClosureOrAlarmInputFaultState,
       "basicContactClosureOrAlarmInputStatus": basicContactClosureOrAlarmInputStatus,
       "basicContactClosureOrAlarmInputZone": basicContactClosureOrAlarmInputZone,
       "basicContactClosureOrAlarmInputRelatedEquipment": basicContactClosureOrAlarmInputRelatedEquipment,
       "basicContactClosureOrAlarmInputSiteId": basicContactClosureOrAlarmInputSiteId,
       "basicContactClosureOrAlarmInputIndex": basicContactClosureOrAlarmInputIndex,
       "basicContactClosureOrAlarmInputManufacturer": basicContactClosureOrAlarmInputManufacturer,
       "basicContactClosureOrAlarmInputModel": basicContactClosureOrAlarmInputModel,
       "basicPowerOutletTable": basicPowerOutletTable,
       "basicPowerOutletEntry": basicPowerOutletEntry,
       "basicPowerOutletOnOff": basicPowerOutletOnOff,
       "basicPowerOutletReboot": basicPowerOutletReboot,
       "basicPowerOutletName": basicPowerOutletName,
       "basicPowerOutletRedundant": basicPowerOutletRedundant,
       "basicPowerOutletConsoleName": basicPowerOutletConsoleName,
       "basicPowerOutletHighCurrent": basicPowerOutletHighCurrent,
       "basicPowerOutletIndex": basicPowerOutletIndex,
       "basicTemperatureHumiditySensor": basicTemperatureHumiditySensor,
       "basicTemperatureSensorTable": basicTemperatureSensorTable,
       "basicTemperatureSensorEntry": basicTemperatureSensorEntry,
       "basicTempTrapHighThreshold": basicTempTrapHighThreshold,
       "basicTempTrapLowThreshold": basicTempTrapLowThreshold,
       "basicTemperatureSensor": basicTemperatureSensor,
       "basicTemperatureValue": basicTemperatureValue,
       "basicTemperatureAlarmSeverity": basicTemperatureAlarmSeverity,
       "basicTemperatureAlarmStatus": basicTemperatureAlarmStatus,
       "basicTemperatureHumiditySensorName": basicTemperatureHumiditySensorName,
       "basicTemperatureSensorIndex": basicTemperatureSensorIndex,
       "basicHumiditySensorTable": basicHumiditySensorTable,
       "basicHumiditySensorEntry": basicHumiditySensorEntry,
       "basicHumidityTrapHighThreshold": basicHumidityTrapHighThreshold,
       "basicHumidityTrapLowThreshold": basicHumidityTrapLowThreshold,
       "basicHumiditySensor": basicHumiditySensor,
       "basicHumidityValue": basicHumidityValue,
       "basicHumidityAlarmSeverity": basicHumidityAlarmSeverity,
       "basicHumidityAlarmStatus": basicHumidityAlarmStatus,
       "basicHumiditySensorIndex": basicHumiditySensorIndex,
       "basicControlSignalTable": basicControlSignalTable,
       "basicControlSignalEntry": basicControlSignalEntry,
       "basicControlSignalValue": basicControlSignalValue,
       "basicControlSignalIndex": basicControlSignalIndex,
       "basicPowerAlarmTimer": basicPowerAlarmTimer,
       "basicControlOutputTable": basicControlOutputTable,
       "basicControlOutputEntry": basicControlOutputEntry,
       "basicControlOutputSignalDtrRts": basicControlOutputSignalDtrRts,
       "basicControlOutputName": basicControlOutputName,
       "basicControlOutputIndex": basicControlOutputIndex,
       "basicPowerStatusFuseA": basicPowerStatusFuseA,
       "basicPowerStatusFuseB": basicPowerStatusFuseB,
       "basicPowerSupplyStatusA": basicPowerSupplyStatusA,
       "basicPowerSupplyStatusB": basicPowerSupplyStatusB,
       "basicPortTrapTable": basicPortTrapTable,
       "basicPortTrapEntry": basicPortTrapEntry,
       "basicPortTrapIndex": basicPortTrapIndex,
       "basicPortSignalName": basicPortSignalName,
       "basicPortTrapStatus": basicPortTrapStatus,
       "basicAlarmMasterInputTable": basicAlarmMasterInputTable,
       "basicAlarmMasterInputEntry": basicAlarmMasterInputEntry,
       "basicAlarmMasterInputPort": basicAlarmMasterInputPort,
       "basicAlarmMasterInputSlot": basicAlarmMasterInputSlot,
       "basicAlarmMasterInputPoint": basicAlarmMasterInputPoint,
       "basicAlarmMasterInputName": basicAlarmMasterInputName,
       "basicAlarmMasterInputTrapEnable": basicAlarmMasterInputTrapEnable,
       "basicAlarmMasterControlOutputSignal": basicAlarmMasterControlOutputSignal,
       "basicAlarmMasterInputEnable": basicAlarmMasterInputEnable,
       "basicAlarmMasterInputDebounceInterval": basicAlarmMasterInputDebounceInterval,
       "basicAlarmMasterInputFaultSeverity": basicAlarmMasterInputFaultSeverity,
       "basicAlarmMasterInputFaultState": basicAlarmMasterInputFaultState,
       "basicAlarmMasterInputStatus": basicAlarmMasterInputStatus,
       "basicAlarmMasterInputValue": basicAlarmMasterInputValue,
       "basicAlarmMasterDisplay": basicAlarmMasterDisplay,
       "basicAlarmMasterInputZone": basicAlarmMasterInputZone,
       "basicAlarmMasterInputRelatedEquipment": basicAlarmMasterInputRelatedEquipment,
       "basicAlarmMasterInputSiteId": basicAlarmMasterInputSiteId,
       "basicAlarmMasterInputManufacturer": basicAlarmMasterInputManufacturer,
       "basicAlarmMasterInputModel": basicAlarmMasterInputModel,
       "basicPowerMasterOutletTable": basicPowerMasterOutletTable,
       "basicPowerMasterOutletEntry": basicPowerMasterOutletEntry,
       "basicPowerMasterPortIndex": basicPowerMasterPortIndex,
       "basicPowerMasterOutletIndex": basicPowerMasterOutletIndex,
       "basicPowerMasterOutletName": basicPowerMasterOutletName,
       "basicPowerMasterOutletState": basicPowerMasterOutletState,
       "basicPowerMasterOutletAmperageStatus": basicPowerMasterOutletAmperageStatus,
       "basicControlOutputRelayTable": basicControlOutputRelayTable,
       "basicControlOutputRelayEntry": basicControlOutputRelayEntry,
       "basicControlOutputRelayIndex": basicControlOutputRelayIndex,
       "basicControlOutputRelayName": basicControlOutputRelayName,
       "basicControlOutputRelayState": basicControlOutputRelayState,
       "basicControlOutputRelayStatus": basicControlOutputRelayStatus,
       "basicAutoProtocolDetectMessage": basicAutoProtocolDetectMessage,
       "xQueue": xQueue,
       "queueLimit": queueLimit,
       "queueHigh": queueHigh,
       "queueNumber": queueNumber,
       "queueTable": queueTable,
       "queueEntry": queueEntry,
       "queueJob": queueJob,
       "queueStatus": queueStatus,
       "queueSourceName": queueSourceName,
       "queueServiceName": queueServiceName,
       "queueServicePortIndex": queueServicePortIndex,
       "queueServicePortName": queueServicePortName,
       "queuePortTable": queuePortTable,
       "queuePortEntry": queuePortEntry,
       "queuePortIndex": queuePortIndex,
       "queuePortQueuing": queuePortQueuing,
       "xMenu": xMenu,
       "menuNumber": menuNumber,
       "menuContinuePrompt": menuContinuePrompt,
       "menuSelectionPrompt": menuSelectionPrompt,
       "menuTable": menuTable,
       "menuEntry": menuEntry,
       "menuIndex": menuIndex,
       "menuStatus": menuStatus,
       "menuText": menuText,
       "menuCommand": menuCommand,
       "menuPortTable": menuPortTable,
       "menuPortEntry": menuPortEntry,
       "menuPortIndex": menuPortIndex,
       "menuPortMenuStatus": menuPortMenuStatus,
       "menuPortNestedMenuStatus": menuPortNestedMenuStatus,
       "menuPortNestedMenuPrivilege": menuPortNestedMenuPrivilege,
       "menuPortNestedTopLevel": menuPortNestedTopLevel,
       "menuNestedName": menuNestedName,
       "menuNestedScriptMaximum": menuNestedScriptMaximum,
       "menuNestedSystemName": menuNestedSystemName,
       "menuNestedEthernet": menuNestedEthernet,
       "xNetLogin": xNetLogin,
       "netLoginNumber": netLoginNumber,
       "netLoginServerTable": netLoginServerTable,
       "netLoginServerEntry": netLoginServerEntry,
       "netLoginServerName": netLoginServerName,
       "netLoginServerStatus": netLoginServerStatus,
       "netLoginServerPath": netLoginServerPath,
       "netLoginServerSeparator": netLoginServerSeparator,
       "netLoginPortTable": netLoginPortTable,
       "netLoginPortEntry": netLoginPortEntry,
       "netLoginPortIndex": netLoginPortIndex,
       "netLoginPortScriptUse": netLoginPortScriptUse,
       "netLoginPortScriptEcho": netLoginPortScriptEcho,
       "netLoginPortLoaderAddressType": netLoginPortLoaderAddressType,
       "netLoginPortLoaderAddress": netLoginPortLoaderAddress,
       "netLoginPortLoaderFile": netLoginPortLoaderFile,
       "netLoginPortExecuteFile": netLoginPortExecuteFile,
       "xDial": xDial,
       "dialPortTable": dialPortTable,
       "dialPortEntry": dialPortEntry,
       "dialPortIndex": dialPortIndex,
       "dialPortDialback": dialPortDialback,
       "dialPortDialbackTimeout": dialPortDialbackTimeout,
       "dialPortDialout": dialPortDialout,
       "dialPortDialbackNoUsername": dialPortDialbackNoUsername,
       "xSessionLog": xSessionLog,
       "sessionLogLimit": sessionLogLimit,
       "sessionLogTable": sessionLogTable,
       "sessionLogEntry": sessionLogEntry,
       "sessionLogIndex": sessionLogIndex,
       "sessionLogConnectionID": sessionLogConnectionID,
       "sessionLogPort": sessionLogPort,
       "sessionLogEvent": sessionLogEvent,
       "sessionLogEventDetail": sessionLogEventDetail,
       "sessionLogUserName": sessionLogUserName,
       "sessionLogRemoteName": sessionLogRemoteName,
       "sessionLogConnectTime": sessionLogConnectTime,
       "sessionLogDisconnectTime": sessionLogDisconnectTime,
       "sessionLogInCharacters": sessionLogInCharacters,
       "sessionLogOutCharacters": sessionLogOutCharacters,
       "sessionLogVerboseEvent": sessionLogVerboseEvent,
       "sessionLogX25Direction": sessionLogX25Direction,
       "sessionLogVerboseMessage": sessionLogVerboseMessage,
       "sessionLogX25CallerAddress": sessionLogX25CallerAddress,
       "sessionLogX25CalledAddress": sessionLogX25CalledAddress,
       "sessionLogX25DisconnectCause": sessionLogX25DisconnectCause,
       "sessionLogX25DisconnectDiagnostic": sessionLogX25DisconnectDiagnostic,
       "sessionLogHostType": sessionLogHostType,
       "sessionLogHostAddress": sessionLogHostAddress,
       "sessionLogVerbose": sessionLogVerbose,
       "sessionLogPriority": sessionLogPriority,
       "sessionLogEmpty": sessionLogEmpty,
       "sessionLogFacility": sessionLogFacility,
       "sessionLogReliable": sessionLogReliable,
       "sessionLogHostSecondaryType": sessionLogHostSecondaryType,
       "sessionLogHostSecondaryAddress": sessionLogHostSecondaryAddress,
       "sessionLogZeroAccountingAll": sessionLogZeroAccountingAll,
       "sessionLogZeroCommandLogging": sessionLogZeroCommandLogging,
       "sessionLogTl1AutonomousLogSize": sessionLogTl1AutonomousLogSize,
       "sessionLogTl1CommandLogSize": sessionLogTl1CommandLogSize,
       "sessionLogZeroDataLogging": sessionLogZeroDataLogging,
       "sessionLogZeroAlarmLogging": sessionLogZeroAlarmLogging,
       "xCcl": xCcl,
       "cclParsedScriptTable": cclParsedScriptTable,
       "cclParsedScriptEntry": cclParsedScriptEntry,
       "cclScriptName": cclScriptName,
       "cclScriptControl": cclScriptControl,
       "cclPortTable": cclPortTable,
       "cclPortEntry": cclPortEntry,
       "cclPortCclName": cclPortCclName,
       "cclPortModemAudible": cclPortModemAudible,
       "xBroadcastGroup": xBroadcastGroup,
       "broadcastGroupTable": broadcastGroupTable,
       "broadcastGroupEntry": broadcastGroupEntry,
       "broadcastGroupIndex": broadcastGroupIndex,
       "broadcastGroupStatus": broadcastGroupStatus,
       "broadcastGroupMaster": broadcastGroupMaster,
       "broadcastGroupSlaves": broadcastGroupSlaves,
       "broadcastGroupSlavesBroadcastOnly": broadcastGroupSlavesBroadcastOnly,
       "broadcastGroupSlaveTcpPort": broadcastGroupSlaveTcpPort,
       "broadcastGroupSlaveTcpBroadcastOnly": broadcastGroupSlaveTcpBroadcastOnly,
       "xPingHosts": xPingHosts,
       "pingHostsTable": pingHostsTable,
       "pingHostsEntry": pingHostsEntry,
       "icmpPingHostIndex": icmpPingHostIndex,
       "icmpPingHostAddress": icmpPingHostAddress,
       "icmpPingHostDescription": icmpPingHostDescription,
       "icmpPingHostNotificationType": icmpPingHostNotificationType,
       "icmpPingHostPollingInterval": icmpPingHostPollingInterval,
       "icmpPingHostMaximumRetries": icmpPingHostMaximumRetries,
       "icmpPingHostTrapSeverityLevel": icmpPingHostTrapSeverityLevel,
       "icmpPingHostStatus": icmpPingHostStatus,
       "xDecnet": xDecnet,
       "xRcp": xRcp,
       "rcpRemoteAddress": rcpRemoteAddress,
       "xPhiv": xPhiv,
       "xPhivRoute": xPhivRoute,
       "phivPathSelection": phivPathSelection,
       "phivMaxPaths": phivMaxPaths,
       "phivStatus": phivStatus,
       "xPhivCircuit": xPhivCircuit,
       "phivCircuitTable": phivCircuitTable,
       "phivCircuitEntry": phivCircuitEntry,
       "xPhivCircuitIndex": xPhivCircuitIndex,
       "phivCircuitRoutingTimer": phivCircuitRoutingTimer,
       "phivCircuitOperCost": phivCircuitOperCost,
       "phivCircuitErrors": phivCircuitErrors,
       "phivCircuitLastError": phivCircuitLastError,
       "phivCircuitLastErrorTime": phivCircuitLastErrorTime,
       "phivCircuitLastErrorData": phivCircuitLastErrorData,
       "phivCircuitProtocolPriority": phivCircuitProtocolPriority,
       "phivCircuitRoutingPriority": phivCircuitRoutingPriority,
       "xPhivImport": xPhivImport,
       "phivCircuitImportTable": phivCircuitImportTable,
       "phivCircuitImportEntry": phivCircuitImportEntry,
       "phivCircuitImportIf": phivCircuitImportIf,
       "phivCircuitImportAddr": phivCircuitImportAddr,
       "phivCircuitImportMask": phivCircuitImportMask,
       "phivCircuitImportAction": phivCircuitImportAction,
       "phivCircuitImportStatus": phivCircuitImportStatus,
       "xPhivImportArea": xPhivImportArea,
       "phivCircuitImportAreaTable": phivCircuitImportAreaTable,
       "phivCircuitImportAreaEntry": phivCircuitImportAreaEntry,
       "phivCircuitImportAreaIf": phivCircuitImportAreaIf,
       "phivCircuitImportAreaAddr": phivCircuitImportAreaAddr,
       "phivCircuitImportAreaMask": phivCircuitImportAreaMask,
       "phivCircuitImportAreaAction": phivCircuitImportAreaAction,
       "phivCircuitImportAreaStatus": phivCircuitImportAreaStatus,
       "xPhivExport": xPhivExport,
       "phivCircuitExportTable": phivCircuitExportTable,
       "phivCircuitExportEntry": phivCircuitExportEntry,
       "phivCircuitExportIf": phivCircuitExportIf,
       "phivCircuitExportAddr": phivCircuitExportAddr,
       "phivCircuitExportMask": phivCircuitExportMask,
       "phivCircuitExportAction": phivCircuitExportAction,
       "phivCircuitExportStatus": phivCircuitExportStatus,
       "xPhivExportArea": xPhivExportArea,
       "phivCircuitExportAreaTable": phivCircuitExportAreaTable,
       "phivCircuitExportAreaEntry": phivCircuitExportAreaEntry,
       "phivCircuitExportAreaIf": phivCircuitExportAreaIf,
       "phivCircuitExportAreaAddr": phivCircuitExportAreaAddr,
       "phivCircuitExportAreaMask": phivCircuitExportAreaMask,
       "phivCircuitExportAreaAction": phivCircuitExportAreaAction,
       "phivCircuitExportAreaStatus": phivCircuitExportAreaStatus,
       "xPhivFilter": xPhivFilter,
       "phivCircuitFilterTable": phivCircuitFilterTable,
       "phivCircuitFilterEntry": phivCircuitFilterEntry,
       "phivCircuitFilterIf": phivCircuitFilterIf,
       "phivCircuitFilterDstAddr": phivCircuitFilterDstAddr,
       "phivCircuitFilterDstMask": phivCircuitFilterDstMask,
       "phivCircuitFilterSrcAddr": phivCircuitFilterSrcAddr,
       "phivCircuitFilterSrcMask": phivCircuitFilterSrcMask,
       "phivCircuitFilterAction": phivCircuitFilterAction,
       "phivCircuitFilterStatus": phivCircuitFilterStatus,
       "xPhivTraffic": xPhivTraffic,
       "phivTrafficSort": phivTrafficSort,
       "phivTrafficTable": phivTrafficTable,
       "phivTrafficEntry": phivTrafficEntry,
       "phivTrafficIndex": phivTrafficIndex,
       "phivTrafficPercent": phivTrafficPercent,
       "phivTrafficDst": phivTrafficDst,
       "phivTrafficSrc": phivTrafficSrc,
       "phivTrafficIf": phivTrafficIf,
       "xIpx": xIpx,
       "xIpxSystem": xIpxSystem,
       "ipxRouting": ipxRouting,
       "ipxInternalNetwork": ipxInternalNetwork,
       "xIpxIf": xIpxIf,
       "ipxIfTable": ipxIfTable,
       "ipxIfEntry": ipxIfEntry,
       "ipxIfIndex": ipxIfIndex,
       "ipxIfState": ipxIfState,
       "ipxIfNetwork": ipxIfNetwork,
       "ipxIfFrameStyle": ipxIfFrameStyle,
       "ipxIfFramesIn": ipxIfFramesIn,
       "ipxIfFramesOut": ipxIfFramesOut,
       "ipxIfErrors": ipxIfErrors,
       "ipxIfTransitDelay": ipxIfTransitDelay,
       "ipxIfTransitDelayActual": ipxIfTransitDelayActual,
       "ipxIfProtocolPriority": ipxIfProtocolPriority,
       "ipxIfWatchdogSpoof": ipxIfWatchdogSpoof,
       "ipxIfStatusNetwork": ipxIfStatusNetwork,
       "xIpxNetbios": xIpxNetbios,
       "ipxNetbiosHopLimit": ipxNetbiosHopLimit,
       "ipxNetbiosIfTable": ipxNetbiosIfTable,
       "ipxNetbiosIfEntry": ipxNetbiosIfEntry,
       "ipxNetbiosIfIndex": ipxNetbiosIfIndex,
       "ipxIfNetbiosForwarding": ipxIfNetbiosForwarding,
       "ipxIfNetbiosIn": ipxIfNetbiosIn,
       "ipxIfNetbiosOut": ipxIfNetbiosOut,
       "xIpxRip": xIpxRip,
       "ipxRipIfTable": ipxRipIfTable,
       "ipxRipIfEntry": ipxRipIfEntry,
       "ipxRipIfIndex": ipxRipIfIndex,
       "ipxIfRipBcst": ipxIfRipBcst,
       "ipxIfRipBcstDiscardTimeout": ipxIfRipBcstDiscardTimeout,
       "ipxIfRipBcstTimer": ipxIfRipBcstTimer,
       "ipxIfRipIn": ipxIfRipIn,
       "ipxIfRipOut": ipxIfRipOut,
       "ipxIfRipAgedOut": ipxIfRipAgedOut,
       "ipxRipTable": ipxRipTable,
       "ipxRipEntry": ipxRipEntry,
       "ipxRipNetwork": ipxRipNetwork,
       "ipxRipRouter": ipxRipRouter,
       "ipxRipInterface": ipxRipInterface,
       "ipxRipHops": ipxRipHops,
       "ipxRipTransTime": ipxRipTransTime,
       "ipxRipAge": ipxRipAge,
       "ipxRipRtTable": ipxRipRtTable,
       "ipxRipRtEntry": ipxRipRtEntry,
       "ipxRipRtNetwork": ipxRipRtNetwork,
       "ipxRipRtRouter": ipxRipRtRouter,
       "ipxRipRtInterface": ipxRipRtInterface,
       "ipxRipRtHops": ipxRipRtHops,
       "ipxRipRtTransTime": ipxRipRtTransTime,
       "ipxRipRtOrigin": ipxRipRtOrigin,
       "ipxRipRtRowStatus": ipxRipRtRowStatus,
       "xIpxSap": xIpxSap,
       "ipxSapIfTable": ipxSapIfTable,
       "ipxSapIfEntry": ipxSapIfEntry,
       "ipxSapIfIndex": ipxSapIfIndex,
       "ipxIfSapBcst": ipxIfSapBcst,
       "ipxIfSapBcstDiscardTimeout": ipxIfSapBcstDiscardTimeout,
       "ipxIfSapBcstTimer": ipxIfSapBcstTimer,
       "ipxIfSapIn": ipxIfSapIn,
       "ipxIfSapOut": ipxIfSapOut,
       "ipxIfSapAgedOut": ipxIfSapAgedOut,
       "ipxSapTable": ipxSapTable,
       "ipxSapEntry": ipxSapEntry,
       "ipxSapName": ipxSapName,
       "ipxSapNetwork": ipxSapNetwork,
       "ipxSapHost": ipxSapHost,
       "ipxSapSocket": ipxSapSocket,
       "ipxSapInterface": ipxSapInterface,
       "ipxSapType": ipxSapType,
       "ipxSapAge": ipxSapAge,
       "ipxSapSvTable": ipxSapSvTable,
       "ipxSapSvEntry": ipxSapSvEntry,
       "ipxSapSvName": ipxSapSvName,
       "ipxSapSvNetwork": ipxSapSvNetwork,
       "ipxSapSvHost": ipxSapSvHost,
       "ipxSapSvSocket": ipxSapSvSocket,
       "ipxSapSvInterface": ipxSapSvInterface,
       "ipxSapSvOrigin": ipxSapSvOrigin,
       "ipxSapSvType": ipxSapSvType,
       "ipxSapSvHops": ipxSapSvHops,
       "ipxSapSvRowStatus": ipxSapSvRowStatus,
       "ipxSapSvAge": ipxSapSvAge,
       "xIpxFilter": xIpxFilter,
       "ipxIfFilterTable": ipxIfFilterTable,
       "ipxIfFilterEntry": ipxIfFilterEntry,
       "ipxIfFilterIndex": ipxIfFilterIndex,
       "ipxIfFilterDestNetwork": ipxIfFilterDestNetwork,
       "ipxIfFilterDestNode": ipxIfFilterDestNode,
       "ipxIfFilterSourceNetwork": ipxIfFilterSourceNetwork,
       "ipxIfFilterSourceNode": ipxIfFilterSourceNode,
       "ipxIfFilterPacketType": ipxIfFilterPacketType,
       "ipxIfFilterAction": ipxIfFilterAction,
       "ipxIfFilterRowStatus": ipxIfFilterRowStatus,
       "ipxIfFilterStatusDestNetworkAll": ipxIfFilterStatusDestNetworkAll,
       "ipxIfFilterStatusDestNodeAll": ipxIfFilterStatusDestNodeAll,
       "ipxIfFilterStatusSourceNetworkAll": ipxIfFilterStatusSourceNetworkAll,
       "ipxIfFilterStatusSourceNodeAll": ipxIfFilterStatusSourceNodeAll,
       "ipxIfFilterStatusPacketTypeAll": ipxIfFilterStatusPacketTypeAll,
       "ipxIfRipFilterTable": ipxIfRipFilterTable,
       "ipxIfRipFilterEntry": ipxIfRipFilterEntry,
       "ipxIfRipFilterNetwork": ipxIfRipFilterNetwork,
       "ipxIfRipFilterType": ipxIfRipFilterType,
       "ipxIfRipFilterAction": ipxIfRipFilterAction,
       "ipxIfRipFilterRowStatus": ipxIfRipFilterRowStatus,
       "ipxIfRipFilterNetworkAll": ipxIfRipFilterNetworkAll,
       "ipxIfRipFilterHost": ipxIfRipFilterHost,
       "ipxIfSapFilterTable": ipxIfSapFilterTable,
       "ipxIfSapFilterEntry": ipxIfSapFilterEntry,
       "ipxIfSapFilterNetwork": ipxIfSapFilterNetwork,
       "ipxIfSapFilterType": ipxIfSapFilterType,
       "ipxIfSapFilterServiceType": ipxIfSapFilterServiceType,
       "ipxIfSapFilterAction": ipxIfSapFilterAction,
       "ipxIfSapFilterRowStatus": ipxIfSapFilterRowStatus,
       "ipxIfSapFilterNetworkAll": ipxIfSapFilterNetworkAll,
       "ipxIfSapFilterServiceTypeAll": ipxIfSapFilterServiceTypeAll,
       "ipxIfSapFilterName": ipxIfSapFilterName,
       "ipxIfSapFilterHost": ipxIfSapFilterHost,
       "xIpxPrinter": xIpxPrinter,
       "ipxPrinterPortTable": ipxPrinterPortTable,
       "ipxPrinterPortEntry": ipxPrinterPortEntry,
       "ipxPrinterPortIndex": ipxPrinterPortIndex,
       "ipxPrinterPortStatus": ipxPrinterPortStatus,
       "ipxPrinterPortServer": ipxPrinterPortServer,
       "ipxPrinterPortPrinter": ipxPrinterPortPrinter,
       "ipxTimeout": ipxTimeout,
       "ipxPrinterEthernet": ipxPrinterEthernet,
       "ipxPrinterMac": ipxPrinterMac,
       "ipxPrinterMac802-2": ipxPrinterMac802_2,
       "ipxPrinterMac802-2-Snap": ipxPrinterMac802_2_Snap,
       "xChassis": xChassis,
       "xChassisBasic": xChassisBasic,
       "basicBase802Address": basicBase802Address,
       "basicSlot": basicSlot,
       "basicSlotNumber": basicSlotNumber,
       "basicNewBase802Address": basicNewBase802Address,
       "xSegment": xSegment,
       "segmentTable": segmentTable,
       "segmentEntry": segmentEntry,
       "segmentType": segmentType,
       "segmentIndex": segmentIndex,
       "xPort": xPort,
       "portIOCardType": portIOCardType,
       "portIOCardSerialNumber": portIOCardSerialNumber,
       "portIOCardOperStatus": portIOCardOperStatus,
       "portTable": portTable,
       "portEntry": portEntry,
       "portType": portType,
       "portIndex": portIndex,
       "xController": xController,
       "controllerTable": controllerTable,
       "controllerEntry": controllerEntry,
       "controllerType": controllerType,
       "controllerIndex": controllerIndex,
       "controllerNetwork": controllerNetwork,
       "xInterface": xInterface,
       "interfaceTable": interfaceTable,
       "interfaceEntry": interfaceEntry,
       "interfaceIndex": interfaceIndex,
       "interfaceNetwork": interfaceNetwork,
       "xSlotBootControl": xSlotBootControl,
       "slotBootControlTable": slotBootControlTable,
       "slotBootControlEntry": slotBootControlEntry,
       "slotBootControlSlot": slotBootControlSlot,
       "slotBootControlIndex": slotBootControlIndex,
       "slotBootControlStatus": slotBootControlStatus,
       "slotBootControlController": slotBootControlController,
       "slotBootControlNetwork": slotBootControlNetwork,
       "slotBootControlMopFile": slotBootControlMopFile,
       "slotBootControlInternetFile": slotBootControlInternetFile,
       "slotBootControlInternetAddress": slotBootControlInternetAddress,
       "slotBootControlInternetServer": slotBootControlInternetServer,
       "slotBootControlInternetGateway": slotBootControlInternetGateway,
       "slotBootControlInternetDelimiter": slotBootControlInternetDelimiter,
       "slotBootControlFlagTable": slotBootControlFlagTable,
       "slotBootControlFlagEntry": slotBootControlFlagEntry,
       "slotBootControlFlagLoadBootpTftp": slotBootControlFlagLoadBootpTftp,
       "slotBootControlFlagParamBootpTftp": slotBootControlFlagParamBootpTftp,
       "slotBootControlFlagDumpBootpTftp": slotBootControlFlagDumpBootpTftp,
       "slotBootControlFlagLoadTftpDirect": slotBootControlFlagLoadTftpDirect,
       "slotBootControlFlagParamTftpDirect": slotBootControlFlagParamTftpDirect,
       "slotBootControlFlagDumpTftpDirect": slotBootControlFlagDumpTftpDirect,
       "slotBootControlFlagLoadLocal": slotBootControlFlagLoadLocal,
       "slotBootControlFlagParamLocal": slotBootControlFlagParamLocal,
       "slotBootControlFlagDumpLocal": slotBootControlFlagDumpLocal,
       "slotBootControlFlagLoadMop": slotBootControlFlagLoadMop,
       "slotBootControlFlagParamMop": slotBootControlFlagParamMop,
       "slotBootControlFlagDumpMop": slotBootControlFlagDumpMop,
       "slotBootControlFlagLoadXmop": slotBootControlFlagLoadXmop,
       "slotBootControlFlagParamXmop": slotBootControlFlagParamXmop,
       "slotBootControlFlagDumpXmop": slotBootControlFlagDumpXmop,
       "slotBootControlFlagLoadRarpTftp": slotBootControlFlagLoadRarpTftp,
       "slotBootControlFlagParamRarpTftp": slotBootControlFlagParamRarpTftp,
       "slotBootControlFlagDumpRarpTftp": slotBootControlFlagDumpRarpTftp,
       "slotBootControlStorageTable": slotBootControlStorageTable,
       "slotBootControlStorageEntry": slotBootControlStorageEntry,
       "slotBootControlStorageClientSlot": slotBootControlStorageClientSlot,
       "slotBootControlStorageServerSlot": slotBootControlStorageServerSlot,
       "slotBootControlStorageStatus": slotBootControlStorageStatus,
       "slotBootControlStorageFailures": slotBootControlStorageFailures,
       "xSlot": xSlot,
       "slotTable": slotTable,
       "slotEntry": slotEntry,
       "slotIndex": slotIndex,
       "slotAdminAction": slotAdminAction,
       "slotOperStatus": slotOperStatus,
       "slotSecondsSinceReset": slotSecondsSinceReset,
       "slotHardwareType": slotHardwareType,
       "slotHardwareSerialNumber": slotHardwareSerialNumber,
       "slotHardwareRevision": slotHardwareRevision,
       "slotIOCardType": slotIOCardType,
       "slotIOCardSerialNumber": slotIOCardSerialNumber,
       "slotIOCardOperStatus": slotIOCardOperStatus,
       "slotBootstrapFirmwareRevision": slotBootstrapFirmwareRevision,
       "slotElementalFirmwareRevision": slotElementalFirmwareRevision,
       "slotMemorySize": slotMemorySize,
       "slotLedNumber": slotLedNumber,
       "slotLedStatus": slotLedStatus,
       "slotBase802Address": slotBase802Address,
       "slotIpAddress": slotIpAddress,
       "slotPlus5Status": slotPlus5Status,
       "slotPlus12Status": slotPlus12Status,
       "slotMinus12Status": slotMinus12Status,
       "slotPlus5Watts": slotPlus5Watts,
       "slotPlus12Watts": slotPlus12Watts,
       "slotMinus12Watts": slotMinus12Watts,
       "slotIOCardHardwareVersion": slotIOCardHardwareVersion,
       "slotRestoreNVS": slotRestoreNVS,
       "slotDefaultNVS": slotDefaultNVS,
       "slotBootTable": slotBootTable,
       "slotBootEntry": slotBootEntry,
       "slotBootIndex": slotBootIndex,
       "slotBootIfIndex": slotBootIfIndex,
       "slotBootNetwork": slotBootNetwork,
       "slotBootProtocol": slotBootProtocol,
       "slotBoot802Address": slotBoot802Address,
       "slotBootAddressType": slotBootAddressType,
       "slotBootAddress": slotBootAddress,
       "slotBootServerAddressType": slotBootServerAddressType,
       "slotBootServerAddress": slotBootServerAddress,
       "slotBootGatewayAddress": slotBootGatewayAddress,
       "slotBootFileName": slotBootFileName,
       "slotBootBlockNumber": slotBootBlockNumber,
       "slotBootCrashCode": slotBootCrashCode,
       "slotControllerTable": slotControllerTable,
       "slotControllerEntry": slotControllerEntry,
       "slotControllerType": slotControllerType,
       "slotControllerIndex": slotControllerIndex,
       "slotControllerNetwork": slotControllerNetwork,
       "xPowerSupply": xPowerSupply,
       "powerSupplyTable": powerSupplyTable,
       "powerSupplyEntry": powerSupplyEntry,
       "powerSupplyIndex": powerSupplyIndex,
       "powerSupplyAdminAction": powerSupplyAdminAction,
       "powerSupplyFirmwareVersion": powerSupplyFirmwareVersion,
       "powerSupplyRedundancyStatus": powerSupplyRedundancyStatus,
       "powerSupplyPlus5Status": powerSupplyPlus5Status,
       "powerSupplyPlus12Status": powerSupplyPlus12Status,
       "powerSupplyMinus12Status": powerSupplyMinus12Status,
       "powerSupplyThermalWarningStatus": powerSupplyThermalWarningStatus,
       "powerSupplyThermalShutdownStatus": powerSupplyThermalShutdownStatus,
       "powerSupplyFanStatus": powerSupplyFanStatus,
       "powerSupplyHardwareInhibitStatus": powerSupplyHardwareInhibitStatus,
       "powerSupplyPlus5History": powerSupplyPlus5History,
       "powerSupplyPlus12History": powerSupplyPlus12History,
       "powerSupplyMinus12History": powerSupplyMinus12History,
       "powerSupplyThermalWarningHistory": powerSupplyThermalWarningHistory,
       "powerSupplyThermalShutdownHistory": powerSupplyThermalShutdownHistory,
       "powerSupplyFanHistory": powerSupplyFanHistory,
       "powerSupplyHardwareInhibitHistory": powerSupplyHardwareInhibitHistory,
       "powerSupplyPlus5Volts": powerSupplyPlus5Volts,
       "powerSupplyPlus12Volts": powerSupplyPlus12Volts,
       "powerSupplyMinus12Volts": powerSupplyMinus12Volts,
       "powerSupplyWatts": powerSupplyWatts,
       "powerSupplyWattsMax": powerSupplyWattsMax,
       "powerSupplyChassisWatts": powerSupplyChassisWatts,
       "powerSupplyChassisWattsMax": powerSupplyChassisWattsMax,
       "powerSupplyHardwareType": powerSupplyHardwareType,
       "xFirmwareUpdate": xFirmwareUpdate,
       "firmwareUpdateTable": firmwareUpdateTable,
       "firmwareUpdateEntry": firmwareUpdateEntry,
       "firmwareUpdateSlotIndex": firmwareUpdateSlotIndex,
       "firmwareUpdateDefaultFileName": firmwareUpdateDefaultFileName,
       "firmwareUpdateFileName": firmwareUpdateFileName,
       "firmwareUpdateStatus": firmwareUpdateStatus,
       "firmwareUpdateState": firmwareUpdateState,
       "firmwareUpdateCompletionStatus": firmwareUpdateCompletionStatus,
       "firmwareUpdateMethod": firmwareUpdateMethod,
       "xApple": xApple,
       "xAppleSystem": xAppleSystem,
       "appleState": appleState,
       "appleStatus": appleStatus,
       "appleStatusIf": appleStatusIf,
       "xApplePort": xApplePort,
       "applePortTable": applePortTable,
       "applePortEntry": applePortEntry,
       "applePortIndex": applePortIndex,
       "applePortProtocolPriority": applePortProtocolPriority,
       "applePortArpInterval": applePortArpInterval,
       "applePortArpRetransmitCount": applePortArpRetransmitCount,
       "applePortChecksum": applePortChecksum,
       "applePortPacketsIn": applePortPacketsIn,
       "applePortPacketsOut": applePortPacketsOut,
       "applePortForwardsIn": applePortForwardsIn,
       "applePortForwardsOut": applePortForwardsOut,
       "applePortNetAddress": applePortNetAddress,
       "applePortNetStart": applePortNetStart,
       "applePortNetEnd": applePortNetEnd,
       "applePortErrors": applePortErrors,
       "applePortLastError": applePortLastError,
       "applePortLastErrorTime": applePortLastErrorTime,
       "applePortLastErrorData": applePortLastErrorData,
       "applePortBringBackTime": applePortBringBackTime,
       "applePortUseNeighborNotify": applePortUseNeighborNotify,
       "applePortRouterType": applePortRouterType,
       "applePortZoneTable": applePortZoneTable,
       "applePortZoneEntry": applePortZoneEntry,
       "applePortZoneIndex": applePortZoneIndex,
       "applePortZoneName": applePortZoneName,
       "applePortZoneStatus": applePortZoneStatus,
       "xApplePolicy": xApplePolicy,
       "applePortExportTable": applePortExportTable,
       "applePortExportEntry": applePortExportEntry,
       "applePortExportIndex": applePortExportIndex,
       "applePortExportZone": applePortExportZone,
       "applePortExportName": applePortExportName,
       "applePortExportType": applePortExportType,
       "applePortExportAction": applePortExportAction,
       "applePortExportStatus": applePortExportStatus,
       "applePortImportTable": applePortImportTable,
       "applePortImportEntry": applePortImportEntry,
       "applePortImportIndex": applePortImportIndex,
       "applePortImportZone": applePortImportZone,
       "applePortImportName": applePortImportName,
       "applePortImportType": applePortImportType,
       "applePortImportAction": applePortImportAction,
       "applePortImportStatus": applePortImportStatus,
       "xAppleNbp": xAppleNbp,
       "appleNbpTable": appleNbpTable,
       "appleNbpEntry": appleNbpEntry,
       "appleNbpZone": appleNbpZone,
       "appleNbpName": appleNbpName,
       "appleNbpType": appleNbpType,
       "appleNbpNode": appleNbpNode,
       "appleNbpSocket": appleNbpSocket,
       "xAppleTraffic": xAppleTraffic,
       "appleTrafficSort": appleTrafficSort,
       "appleTrafficTable": appleTrafficTable,
       "appleTrafficEntry": appleTrafficEntry,
       "appleTrafficIndex": appleTrafficIndex,
       "appleTrafficPercent": appleTrafficPercent,
       "appleTrafficDst": appleTrafficDst,
       "appleTrafficSrc": appleTrafficSrc,
       "appleTrafficIntf": appleTrafficIntf,
       "appleTrafficMonitoring": appleTrafficMonitoring,
       "xAppleRemoteAccess": xAppleRemoteAccess,
       "arapPassword": arapPassword,
       "arapDefaultZoneName": arapDefaultZoneName,
       "arapPortTable": arapPortTable,
       "arapPortEntry": arapPortEntry,
       "arapPortEnabled": arapPortEnabled,
       "arapPortZoneAccess": arapPortZoneAccess,
       "arapPortZoneName": arapPortZoneName,
       "arapPortMaxConnectTime": arapPortMaxConnectTime,
       "arapPortGuestLoginsOk": arapPortGuestLoginsOk,
       "arapPortTimeConnected": arapPortTimeConnected,
       "arapPortTimeRemaining": arapPortTimeRemaining,
       "xPpp": xPpp,
       "xPppBasic": xPppBasic,
       "xPppConfigTable": xPppConfigTable,
       "xPppConfigEntry": xPppConfigEntry,
       "xPppConfigOpen": xPppConfigOpen,
       "xPppConfigActive": xPppConfigActive,
       "xPppConfigDefaults": xPppConfigDefaults,
       "xPppConfigRestartTimer": xPppConfigRestartTimer,
       "xPppConfigConfLimit": xPppConfigConfLimit,
       "xPppConfigFailLimit": xPppConfigFailLimit,
       "xPppConfigPacketLogging": xPppConfigPacketLogging,
       "xPppConfigKATimer": xPppConfigKATimer,
       "xPppConfigKATimeout": xPppConfigKATimeout,
       "xPppStatusTable": xPppStatusTable,
       "xPppStatusEntry": xPppStatusEntry,
       "xPppStatusState": xPppStatusState,
       "xPppLinkOpen": xPppLinkOpen,
       "xPppHdlcRxTotalPkts": xPppHdlcRxTotalPkts,
       "xPppHdlcTxTotalPkts": xPppHdlcTxTotalPkts,
       "xPppHdlcRxFrameErrs": xPppHdlcRxFrameErrs,
       "xPppHdlcRxNoBuffer": xPppHdlcRxNoBuffer,
       "xPppHdlcTxNoBuffer": xPppHdlcTxNoBuffer,
       "xPppHdlcRxBadFcs": xPppHdlcRxBadFcs,
       "xPppHdlcVJDiscards": xPppHdlcVJDiscards,
       "xPppLcp": xPppLcp,
       "xPppLcpConfigTable": xPppLcpConfigTable,
       "xPppLcpConfigEntry": xPppLcpConfigEntry,
       "xPppLcpConfigAuth": xPppLcpConfigAuth,
       "xPppLcpConfigChapAuth": xPppLcpConfigChapAuth,
       "xPppLcpStatusTable": xPppLcpStatusTable,
       "xPppLcpStatusEntry": xPppLcpStatusEntry,
       "xPppLcpStatusState": xPppLcpStatusState,
       "xPppLcpStatusRxAuth": xPppLcpStatusRxAuth,
       "xPppLcpStatusTxAuth": xPppLcpStatusTxAuth,
       "xPppLcpStatusRxConReq": xPppLcpStatusRxConReq,
       "xPppLcpStatusTxConReq": xPppLcpStatusTxConReq,
       "xPppLcpStatusRxConNak": xPppLcpStatusRxConNak,
       "xPppLcpStatusTxConNak": xPppLcpStatusTxConNak,
       "xPppLcpStatusRxConAck": xPppLcpStatusRxConAck,
       "xPppLcpStatusTxConAck": xPppLcpStatusTxConAck,
       "xPppLcpStatusRxConRej": xPppLcpStatusRxConRej,
       "xPppLcpStatusTxConRej": xPppLcpStatusTxConRej,
       "xPppLcpStatusRxTrmReq": xPppLcpStatusRxTrmReq,
       "xPppLcpStatusTxTrmReq": xPppLcpStatusTxTrmReq,
       "xPppLcpStatusRxTrmAck": xPppLcpStatusRxTrmAck,
       "xPppLcpStatusTxTrmAck": xPppLcpStatusTxTrmAck,
       "xPppLcpStatusRxEcoReq": xPppLcpStatusRxEcoReq,
       "xPppLcpStatusTxEcoReq": xPppLcpStatusTxEcoReq,
       "xPppLcpStatusRxEcoRep": xPppLcpStatusRxEcoRep,
       "xPppLcpStatusTxEcoRep": xPppLcpStatusTxEcoRep,
       "xPppLcpStatusRxCodRej": xPppLcpStatusRxCodRej,
       "xPppLcpStatusTxCodRej": xPppLcpStatusTxCodRej,
       "xPppLcpStatusRxProRej": xPppLcpStatusRxProRej,
       "xPppLcpStatusTxProRej": xPppLcpStatusTxProRej,
       "xPppLcpStatusState2": xPppLcpStatusState2,
       "xPppIpcp": xPppIpcp,
       "xPppIpcpConfigTable": xPppIpcpConfigTable,
       "xPppIpcpConfigEntry": xPppIpcpConfigEntry,
       "xPppIpcpConfigLocalAddress": xPppIpcpConfigLocalAddress,
       "xPppIpcpConfigRemoteAddress": xPppIpcpConfigRemoteAddress,
       "xPppIpcpConfigVJCompSlots": xPppIpcpConfigVJCompSlots,
       "xPppIpcpConfigRangeStart": xPppIpcpConfigRangeStart,
       "xPppIpcpConfigRangeEnd": xPppIpcpConfigRangeEnd,
       "xPppIpcpConfigState": xPppIpcpConfigState,
       "xPppIpcpConfigLocalRangeStart": xPppIpcpConfigLocalRangeStart,
       "xPppIpcpConfigLocalRangeEnd": xPppIpcpConfigLocalRangeEnd,
       "xPppIpcpConfigPppIpMask": xPppIpcpConfigPppIpMask,
       "xPppIpcpAsyncConfigTable": xPppIpcpAsyncConfigTable,
       "xPppIpcpAsyncConfigEntry": xPppIpcpAsyncConfigEntry,
       "xPppIpcpAsyncConfigBrdcast": xPppIpcpAsyncConfigBrdcast,
       "xPppIpcpStatusTable": xPppIpcpStatusTable,
       "xPppIpcpStatusEntry": xPppIpcpStatusEntry,
       "xPppIpcpStatusState": xPppIpcpStatusState,
       "xPppIpcpStatusLocalAddress": xPppIpcpStatusLocalAddress,
       "xPppIpcpStatusRemoteAddress": xPppIpcpStatusRemoteAddress,
       "xPppIpcpRxPkts": xPppIpcpRxPkts,
       "xPppIpcpTxPkts": xPppIpcpTxPkts,
       "xPppIpcpRxConReq": xPppIpcpRxConReq,
       "xPppIpcpTxConReq": xPppIpcpTxConReq,
       "xPppIpcpRxConNak": xPppIpcpRxConNak,
       "xPppIpcpTxConNak": xPppIpcpTxConNak,
       "xPppIpcpRxConAck": xPppIpcpRxConAck,
       "xPppIpcpTxConAck": xPppIpcpTxConAck,
       "xPppIpcpRxConRej": xPppIpcpRxConRej,
       "xPppIpcpTxConRej": xPppIpcpTxConRej,
       "xPppIpcpRxTrmReq": xPppIpcpRxTrmReq,
       "xPppIpcpTxTrmReq": xPppIpcpTxTrmReq,
       "xPppIpcpRxTrmAck": xPppIpcpRxTrmAck,
       "xPppIpcpTxTrmAck": xPppIpcpTxTrmAck,
       "xPppIpcpStatusState2": xPppIpcpStatusState2,
       "xPppAuth": xPppAuth,
       "xPppPapPassword": xPppPapPassword,
       "xPppAuthConfigTable": xPppAuthConfigTable,
       "xPppAuthConfigEntry": xPppAuthConfigEntry,
       "xPppAuthChapChallengeTimer": xPppAuthChapChallengeTimer,
       "xPppAuthPapConfigState": xPppAuthPapConfigState,
       "xPppAuthChapConfigState": xPppAuthChapConfigState,
       "xPppAuthStatusTable": xPppAuthStatusTable,
       "xPppAuthStatusEntry": xPppAuthStatusEntry,
       "xPppPapStatusState": xPppPapStatusState,
       "xPppChapStatusState": xPppChapStatusState,
       "xPppChapPassword": xPppChapPassword,
       "xPppIpxcp": xPppIpxcp,
       "xPppIpxcpConfigTable": xPppIpxcpConfigTable,
       "xPppIpxcpConfigEntry": xPppIpxcpConfigEntry,
       "xPppIpxcpCipxCompression": xPppIpxcpCipxCompression,
       "xPppIpxcpConfigRemoteNode": xPppIpxcpConfigRemoteNode,
       "xPppIpxcpStatusTable": xPppIpxcpStatusTable,
       "xPppIpxcpStatusEntry": xPppIpxcpStatusEntry,
       "xPppIpxcpStatusState": xPppIpxcpStatusState,
       "xPppIpxcpCipxInCompression": xPppIpxcpCipxInCompression,
       "xPppIpxcpCipxOutCompression": xPppIpxcpCipxOutCompression,
       "xPppIpxcpCipxInSlots": xPppIpxcpCipxInSlots,
       "xPppIpxcpCipxOutSlots": xPppIpxcpCipxOutSlots,
       "xPppIpxcpStatusRemoteNode": xPppIpxcpStatusRemoteNode,
       "xPppIpxcpCountersTable": xPppIpxcpCountersTable,
       "xPppIpxcpCountersEntry": xPppIpxcpCountersEntry,
       "xPppIpxcpRxConReq": xPppIpxcpRxConReq,
       "xPppIpxcpTxConReq": xPppIpxcpTxConReq,
       "xPppIpxcpRxConNak": xPppIpxcpRxConNak,
       "xPppIpxcpTxConNak": xPppIpxcpTxConNak,
       "xPppIpxcpRxConAck": xPppIpxcpRxConAck,
       "xPppIpxcpTxConAck": xPppIpxcpTxConAck,
       "xPppIpxcpRxConRej": xPppIpxcpRxConRej,
       "xPppIpxcpTxConRej": xPppIpxcpTxConRej,
       "xPppIpxcpRxTrmReq": xPppIpxcpRxTrmReq,
       "xPppIpxcpTxTrmReq": xPppIpxcpTxTrmReq,
       "xPppIpxcpRxTrmAck": xPppIpxcpRxTrmAck,
       "xPppIpxcpTxTrmAck": xPppIpxcpTxTrmAck,
       "xRadius": xRadius,
       "xRadiusPort": xRadiusPort,
       "xRadiusPortTable": xRadiusPortTable,
       "xRadiusPortEntry": xRadiusPortEntry,
       "xRadiusPortIndex": xRadiusPortIndex,
       "xRadiusPortStatus": xRadiusPortStatus,
       "xRadiusPortSolicitStatus": xRadiusPortSolicitStatus,
       "xRadiusAcctPortStatus": xRadiusAcctPortStatus,
       "xRadiusCircuit": xRadiusCircuit,
       "xRadiusConfig": xRadiusConfig,
       "xRadiusAuthServerPort": xRadiusAuthServerPort,
       "xRadiusAcctServerPort": xRadiusAcctServerPort,
       "xRadiusTimeout": xRadiusTimeout,
       "xRadiusServerRetries": xRadiusServerRetries,
       "xRadiusAcctLogAttempts": xRadiusAcctLogAttempts,
       "xRadiusChapChallengeSize": xRadiusChapChallengeSize,
       "xRadiusLogging": xRadiusLogging,
       "xRadiusMessage": xRadiusMessage,
       "xRadiusServers": xRadiusServers,
       "xRadServer1SubGrp": xRadServer1SubGrp,
       "xRadiusServerName1": xRadiusServerName1,
       "xRadiusSecret1": xRadiusSecret1,
       "xRadiusServerAccess1": xRadiusServerAccess1,
       "xRadiusServerAccessFailed1": xRadiusServerAccessFailed1,
       "xRadServer2SubGrp": xRadServer2SubGrp,
       "xRadiusServerName2": xRadiusServerName2,
       "xRadiusSecret2": xRadiusSecret2,
       "xRadiusServerAccess2": xRadiusServerAccess2,
       "xRadiusServerAccessFailed2": xRadiusServerAccessFailed2,
       "xRadiusCounters": xRadiusCounters,
       "xRadAuthCtsSubGrp": xRadAuthCtsSubGrp,
       "xRadiusLogins": xRadiusLogins,
       "xRadiusLoginsFailed": xRadiusLoginsFailed,
       "xRadiusConfigFailed": xRadiusConfigFailed,
       "xRadiusPolicyFailed": xRadiusPolicyFailed,
       "xRadAcctCtsSubGrp": xRadAcctCtsSubGrp,
       "xRadiusAcctSuccess": xRadiusAcctSuccess,
       "xRadiusAcctFailed": xRadiusAcctFailed,
       "xRadiusAcctReqWait": xRadiusAcctReqWait,
       "xAlarm": xAlarm}
)
