#
# PySNMP MIB module JUNIPER-SUBSCRIBER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/tin/Dev/mibs.snmplabs.com/asn1/JUNIPER-SUBSCRIBER-MIB
# Produced by pysmi-0.3.4 at Fri Jan 31 21:32:26 2020
# On host bier platform Linux version 5.4.0-3-amd64 by user tin
# Using Python version 3.7.6 (default, Jan 19 2020, 22:34:52) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
jnxSubscriberMibRoot, = mibBuilder.importSymbols("JUNIPER-SMI", "jnxSubscriberMibRoot")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Unsigned32, Counter64, ModuleIdentity, iso, ObjectIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, IpAddress, Counter32, Bits, Gauge32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Unsigned32", "Counter64", "ModuleIdentity", "iso", "ObjectIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "IpAddress", "Counter32", "Bits", "Gauge32", "NotificationType")
DisplayString, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "MacAddress")
jnxSubscriberMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1))
jnxSubscriberMIB.setRevisions(('2010-05-11 00:00', '2012-05-02 00:00', '2013-12-13 00:00',))
if mibBuilder.loadTexts: jnxSubscriberMIB.setLastUpdated('201312130000Z')
if mibBuilder.loadTexts: jnxSubscriberMIB.setOrganization('Juniper Networks, Inc.')
class JnxSubscriberState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("init", 0), ("configured", 1), ("active", 2), ("terminating", 3), ("terminated", 4), ("unknown", 5))

class JnxSubscriberClientType(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("none", 0), ("dhcp", 1), ("vlan", 2), ("generic", 3), ("mobileIp", 4), ("vplsPw", 5), ("ppp", 6), ("ppppoe", 7), ("l2tp", 8), ("static", 9), ("mlppp", 10))

jnxSubscriberObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1))
jnxSubscriberGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1))
jnxSubscriberLogicalSystemObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 2))
jnxSubscriberRoutingInstanceObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 3))
jnxSubscriberTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberTotalCount.setStatus('current')
jnxSubscriberActiveCount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberActiveCount.setStatus('current')
jnxSubscriberTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 3), )
if mibBuilder.loadTexts: jnxSubscriberTable.setStatus('current')
jnxSubscriberInterfaceHardwareIndexTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 4), )
if mibBuilder.loadTexts: jnxSubscriberInterfaceHardwareIndexTable.setStatus('current')
jnxSubscriberPortCountTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 5), )
if mibBuilder.loadTexts: jnxSubscriberPortCountTable.setStatus('current')
jnxSubscriberAccountingTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 6), )
if mibBuilder.loadTexts: jnxSubscriberAccountingTable.setStatus('current')
jnxSubscriberInterfaceHardwareIndexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 4, 1), ).setIndexNames((0, "JUNIPER-SUBSCRIBER-MIB", "jnxSubscriberInterfaceHardwareIndexHandleHiWord"), (0, "JUNIPER-SUBSCRIBER-MIB", "jnxSubscriberInterfaceHardwareIndexHandleLoWord"))
if mibBuilder.loadTexts: jnxSubscriberInterfaceHardwareIndexEntry.setStatus('current')
jnxSubscriberInterfaceHardwareIndexHandleHiWord = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: jnxSubscriberInterfaceHardwareIndexHandleHiWord.setStatus('current')
jnxSubscriberInterfaceHardwareIndexHandleLoWord = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: jnxSubscriberInterfaceHardwareIndexHandleLoWord.setStatus('current')
jnxSubscriberInterfaceHardwareIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberInterfaceHardwareIndex.setStatus('current')
jnxSubscriberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 3, 1), ).setIndexNames((0, "JUNIPER-SUBSCRIBER-MIB", "jnxSubscriberHandleHiWord"), (0, "JUNIPER-SUBSCRIBER-MIB", "jnxSubscriberHandleLoWord"))
if mibBuilder.loadTexts: jnxSubscriberEntry.setStatus('current')
jnxSubscriberHandleHiWord = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: jnxSubscriberHandleHiWord.setStatus('current')
jnxSubscriberHandleLoWord = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: jnxSubscriberHandleLoWord.setStatus('current')
jnxSubscriberUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberUserName.setStatus('current')
jnxSubscriberClientType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 3, 1, 4), JnxSubscriberClientType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberClientType.setStatus('current')
jnxSubscriberIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberIpAddress.setStatus('current')
jnxSubscriberIpAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 3, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberIpAddressMask.setStatus('current')
jnxSubscriberLogicalSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 3, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberLogicalSystem.setStatus('current')
jnxSubscriberRoutingInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 3, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberRoutingInstance.setStatus('current')
jnxSubscriberInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 3, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberInterface.setStatus('current')
jnxSubscriberInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberInterfaceType.setStatus('current')
jnxSubscriberMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 3, 1, 11), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberMacAddress.setStatus('current')
jnxSubscriberState = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 3, 1, 12), JnxSubscriberState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberState.setStatus('current')
jnxSubscriberLoginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 3, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberLoginTime.setStatus('current')
jnxSubscriberAcctSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 3, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberAcctSessionId.setStatus('current')
jnxSubscriberPortCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 5, 1), ).setIndexNames((0, "JUNIPER-SUBSCRIBER-MIB", "jnxSubscriberPort"))
if mibBuilder.loadTexts: jnxSubscriberPortCountEntry.setStatus('current')
jnxSubscriberPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: jnxSubscriberPort.setStatus('current')
jnxSubscriberPortTunneledCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 5, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberPortTunneledCounter.setStatus('current')
jnxSubscriberPortTerminatedCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 5, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberPortTerminatedCounter.setStatus('current')
jnxSubscriberLogicalSystemTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 2, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberLogicalSystemTotalCount.setStatus('current')
jnxSubscriberLogicalSystemActiveCount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 2, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberLogicalSystemActiveCount.setStatus('current')
jnxSubscriberLogicalSystemTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 2, 3), )
if mibBuilder.loadTexts: jnxSubscriberLogicalSystemTable.setStatus('current')
jnxSubscriberLogicalSystemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 2, 3, 1), ).setIndexNames((0, "JUNIPER-SUBSCRIBER-MIB", "jnxSubscriberLogicalSystemHandleHiWord"), (0, "JUNIPER-SUBSCRIBER-MIB", "jnxSubscriberLogicalSystemHandleLoWord"))
if mibBuilder.loadTexts: jnxSubscriberLogicalSystemEntry.setStatus('current')
jnxSubscriberLogicalSystemHandleHiWord = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 2, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: jnxSubscriberLogicalSystemHandleHiWord.setStatus('current')
jnxSubscriberLogicalSystemHandleLoWord = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 2, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: jnxSubscriberLogicalSystemHandleLoWord.setStatus('current')
jnxSubscriberLogicalSystemState = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 2, 3, 1, 3), JnxSubscriberState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberLogicalSystemState.setStatus('current')
jnxSubscriberRoutingInstanceTotalCount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 3, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberRoutingInstanceTotalCount.setStatus('current')
jnxSubscriberRoutingInstanceActiveCount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 3, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberRoutingInstanceActiveCount.setStatus('current')
jnxSubscriberRoutingInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 3, 3), )
if mibBuilder.loadTexts: jnxSubscriberRoutingInstanceTable.setStatus('current')
jnxSubscriberRoutingInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 3, 3, 1), ).setIndexNames((0, "JUNIPER-SUBSCRIBER-MIB", "jnxSubscriberRoutingInstanceHandleHiWord"), (0, "JUNIPER-SUBSCRIBER-MIB", "jnxSubscriberRoutingInstanceHandleLoWord"))
if mibBuilder.loadTexts: jnxSubscriberRoutingInstanceEntry.setStatus('current')
jnxSubscriberRoutingInstanceHandleHiWord = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 3, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: jnxSubscriberRoutingInstanceHandleHiWord.setStatus('current')
jnxSubscriberRoutingInstanceHandleLoWord = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 3, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: jnxSubscriberRoutingInstanceHandleLoWord.setStatus('current')
jnxSubscriberRoutingInstanceState = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 3, 3, 1, 3), JnxSubscriberState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberRoutingInstanceState.setStatus('current')
jnxSubscriberAccountingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 6, 1), ).setIndexNames((0, "JUNIPER-SUBSCRIBER-MIB", "jnxSubscriberAccountingHandleHiWord"), (0, "JUNIPER-SUBSCRIBER-MIB", "jnxSubscriberAccountingHandleLoWord"))
if mibBuilder.loadTexts: jnxSubscriberAccountingEntry.setStatus('current')
jnxSubscriberAccountingHandleHiWord = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: jnxSubscriberAccountingHandleHiWord.setStatus('current')
jnxSubscriberAccountingHandleLoWord = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: jnxSubscriberAccountingHandleLoWord.setStatus('current')
jnxSubscriberAccountingUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 6, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberAccountingUserName.setStatus('current')
jnxSubscriberAccountingClientType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 6, 1, 4), JnxSubscriberClientType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberAccountingClientType.setStatus('current')
jnxSubscriberAccountingIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 6, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberAccountingIpAddress.setStatus('current')
jnxSubscriberAccountingIpAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 6, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberAccountingIpAddressMask.setStatus('current')
jnxSubscriberAccountingLogicalSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 6, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberAccountingLogicalSystem.setStatus('current')
jnxSubscriberAccountingRoutingInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 6, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberAccountingRoutingInstance.setStatus('current')
jnxSubscriberAccountingInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 6, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberAccountingInterface.setStatus('current')
jnxSubscriberAccountingInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberAccountingInterfaceType.setStatus('current')
jnxSubscriberAccountingMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 6, 1, 11), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberAccountingMacAddress.setStatus('current')
jnxSubscriberAccountingState = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 6, 1, 12), JnxSubscriberState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberAccountingState.setStatus('current')
jnxSubscriberAccountingLoginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 6, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberAccountingLoginTime.setStatus('current')
jnxSubscriberAccountingAcctSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 64, 1, 1, 1, 6, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSubscriberAccountingAcctSessionId.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-SUBSCRIBER-MIB", jnxSubscriberInterfaceHardwareIndexTable=jnxSubscriberInterfaceHardwareIndexTable, jnxSubscriberTotalCount=jnxSubscriberTotalCount, jnxSubscriberInterfaceType=jnxSubscriberInterfaceType, jnxSubscriberRoutingInstanceState=jnxSubscriberRoutingInstanceState, PYSNMP_MODULE_ID=jnxSubscriberMIB, jnxSubscriberInterfaceHardwareIndexHandleLoWord=jnxSubscriberInterfaceHardwareIndexHandleLoWord, jnxSubscriberClientType=jnxSubscriberClientType, jnxSubscriberLogicalSystemObjects=jnxSubscriberLogicalSystemObjects, jnxSubscriberActiveCount=jnxSubscriberActiveCount, jnxSubscriberUserName=jnxSubscriberUserName, jnxSubscriberIpAddressMask=jnxSubscriberIpAddressMask, jnxSubscriberAccountingHandleHiWord=jnxSubscriberAccountingHandleHiWord, jnxSubscriberInterfaceHardwareIndexEntry=jnxSubscriberInterfaceHardwareIndexEntry, jnxSubscriberAccountingHandleLoWord=jnxSubscriberAccountingHandleLoWord, jnxSubscriberEntry=jnxSubscriberEntry, jnxSubscriberIpAddress=jnxSubscriberIpAddress, jnxSubscriberAcctSessionId=jnxSubscriberAcctSessionId, jnxSubscriberLogicalSystemState=jnxSubscriberLogicalSystemState, jnxSubscriberRoutingInstanceTotalCount=jnxSubscriberRoutingInstanceTotalCount, JnxSubscriberClientType=JnxSubscriberClientType, jnxSubscriberAccountingUserName=jnxSubscriberAccountingUserName, jnxSubscriberAccountingLoginTime=jnxSubscriberAccountingLoginTime, jnxSubscriberInterfaceHardwareIndex=jnxSubscriberInterfaceHardwareIndex, jnxSubscriberLogicalSystem=jnxSubscriberLogicalSystem, jnxSubscriberRoutingInstanceEntry=jnxSubscriberRoutingInstanceEntry, jnxSubscriberAccountingRoutingInstance=jnxSubscriberAccountingRoutingInstance, JnxSubscriberState=JnxSubscriberState, jnxSubscriberAccountingEntry=jnxSubscriberAccountingEntry, jnxSubscriberHandleLoWord=jnxSubscriberHandleLoWord, jnxSubscriberPortTunneledCounter=jnxSubscriberPortTunneledCounter, jnxSubscriberAccountingInterfaceType=jnxSubscriberAccountingInterfaceType, jnxSubscriberObjects=jnxSubscriberObjects, jnxSubscriberLogicalSystemHandleHiWord=jnxSubscriberLogicalSystemHandleHiWord, jnxSubscriberLogicalSystemEntry=jnxSubscriberLogicalSystemEntry, jnxSubscriberAccountingInterface=jnxSubscriberAccountingInterface, jnxSubscriberPortCountTable=jnxSubscriberPortCountTable, jnxSubscriberRoutingInstanceObjects=jnxSubscriberRoutingInstanceObjects, jnxSubscriberRoutingInstanceTable=jnxSubscriberRoutingInstanceTable, jnxSubscriberMIB=jnxSubscriberMIB, jnxSubscriberGeneral=jnxSubscriberGeneral, jnxSubscriberAccountingTable=jnxSubscriberAccountingTable, jnxSubscriberHandleHiWord=jnxSubscriberHandleHiWord, jnxSubscriberLogicalSystemActiveCount=jnxSubscriberLogicalSystemActiveCount, jnxSubscriberAccountingIpAddress=jnxSubscriberAccountingIpAddress, jnxSubscriberRoutingInstanceHandleHiWord=jnxSubscriberRoutingInstanceHandleHiWord, jnxSubscriberAccountingLogicalSystem=jnxSubscriberAccountingLogicalSystem, jnxSubscriberAccountingState=jnxSubscriberAccountingState, jnxSubscriberAccountingIpAddressMask=jnxSubscriberAccountingIpAddressMask, jnxSubscriberLogicalSystemHandleLoWord=jnxSubscriberLogicalSystemHandleLoWord, jnxSubscriberInterfaceHardwareIndexHandleHiWord=jnxSubscriberInterfaceHardwareIndexHandleHiWord, jnxSubscriberPort=jnxSubscriberPort, jnxSubscriberLoginTime=jnxSubscriberLoginTime, jnxSubscriberState=jnxSubscriberState, jnxSubscriberLogicalSystemTable=jnxSubscriberLogicalSystemTable, jnxSubscriberInterface=jnxSubscriberInterface, jnxSubscriberAccountingAcctSessionId=jnxSubscriberAccountingAcctSessionId, jnxSubscriberAccountingClientType=jnxSubscriberAccountingClientType, jnxSubscriberRoutingInstance=jnxSubscriberRoutingInstance, jnxSubscriberMacAddress=jnxSubscriberMacAddress, jnxSubscriberPortCountEntry=jnxSubscriberPortCountEntry, jnxSubscriberRoutingInstanceHandleLoWord=jnxSubscriberRoutingInstanceHandleLoWord, jnxSubscriberTable=jnxSubscriberTable, jnxSubscriberRoutingInstanceActiveCount=jnxSubscriberRoutingInstanceActiveCount, jnxSubscriberLogicalSystemTotalCount=jnxSubscriberLogicalSystemTotalCount, jnxSubscriberAccountingMacAddress=jnxSubscriberAccountingMacAddress, jnxSubscriberPortTerminatedCounter=jnxSubscriberPortTerminatedCounter)
