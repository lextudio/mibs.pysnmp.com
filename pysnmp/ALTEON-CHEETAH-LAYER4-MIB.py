# SNMP MIB module (ALTEON-CHEETAH-LAYER4-MIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/lextm/pysnmp.com/mibs.pysnmp.com/asn1/ALTEON-CHEETAH-LAYER4-MIB
# Produced by pysmi-1.5.4 at Mon Oct 14 20:37:49 2024
# On host MacBook-Pro.local platform Darwin version 24.0.0 by user lextm
# Using Python version 3.12.0 (main, Nov 14 2023, 23:52:11) [Clang 15.0.0 (clang-1500.0.40.1)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint,
 ConstraintsUnion) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint",
    "ConstraintsUnion")

# Import SMI symbols from the MIBs this MIB depends on

(aws_switch,) = mibBuilder.importSymbols(
    "ALTEON-ROOT-MIB",
    "aws-switch")

(ModuleCompliance,
 NotificationGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "iso")

(DisplayString,
 PhysAddress,
 TextualConvention) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "PhysAddress",
    "TextualConvention")


# MODULE-IDENTITY

layer4 = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4)
)
layer4.setRevisions(
        ("2009-08-05 00:00",)
)


# Types definitions


# TEXTUAL-CONVENTIONS



# MIB Managed Objects in the order of their OIDs

_Layer4Configs_ObjectIdentity = ObjectIdentity
layer4Configs = _Layer4Configs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1)
)
_SlbCfg_ObjectIdentity = ObjectIdentity
slbCfg = _SlbCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1)
)
_SlbGeneralCfg_ObjectIdentity = ObjectIdentity
slbGeneralCfg = _SlbGeneralCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1)
)


class _SlbCurCfgGlobalControl_Type(Integer32):
    """Custom type slbCurCfgGlobalControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 3),
          ("enabled", 2))
    )


_SlbCurCfgGlobalControl_Type.__name__ = "Integer32"
_SlbCurCfgGlobalControl_Object = MibScalar
slbCurCfgGlobalControl = _SlbCurCfgGlobalControl_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 1),
    _SlbCurCfgGlobalControl_Type()
)
slbCurCfgGlobalControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGlobalControl.setStatus("current")


class _SlbNewCfgGlobalControl_Type(Integer32):
    """Custom type slbNewCfgGlobalControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 3),
          ("enabled", 2))
    )


_SlbNewCfgGlobalControl_Type.__name__ = "Integer32"
_SlbNewCfgGlobalControl_Object = MibScalar
slbNewCfgGlobalControl = _SlbNewCfgGlobalControl_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 2),
    _SlbNewCfgGlobalControl_Type()
)
slbNewCfgGlobalControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgGlobalControl.setStatus("current")
_SlbCurCfgImask_Type = IpAddress
_SlbCurCfgImask_Object = MibScalar
slbCurCfgImask = _SlbCurCfgImask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 3),
    _SlbCurCfgImask_Type()
)
slbCurCfgImask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgImask.setStatus("current")
_SlbNewCfgImask_Type = IpAddress
_SlbNewCfgImask_Object = MibScalar
slbNewCfgImask = _SlbNewCfgImask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 4),
    _SlbNewCfgImask_Type()
)
slbNewCfgImask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgImask.setStatus("current")
_SlbCurCfgMnet_Type = IpAddress
_SlbCurCfgMnet_Object = MibScalar
slbCurCfgMnet = _SlbCurCfgMnet_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 5),
    _SlbCurCfgMnet_Type()
)
slbCurCfgMnet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgMnet.setStatus("current")
_SlbNewCfgMnet_Type = IpAddress
_SlbNewCfgMnet_Object = MibScalar
slbNewCfgMnet = _SlbNewCfgMnet_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 6),
    _SlbNewCfgMnet_Type()
)
slbNewCfgMnet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgMnet.setStatus("current")
_SlbCurCfgMmask_Type = IpAddress
_SlbCurCfgMmask_Object = MibScalar
slbCurCfgMmask = _SlbCurCfgMmask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 7),
    _SlbCurCfgMmask_Type()
)
slbCurCfgMmask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgMmask.setStatus("current")
_SlbNewCfgMmask_Type = IpAddress
_SlbNewCfgMmask_Object = MibScalar
slbNewCfgMmask = _SlbNewCfgMmask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 8),
    _SlbNewCfgMmask_Type()
)
slbNewCfgMmask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgMmask.setStatus("current")


class _SlbCurCfgRadiusAuthenString_Type(DisplayString):
    """Custom type slbCurCfgRadiusAuthenString based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurCfgRadiusAuthenString_Type.__name__ = "DisplayString"
_SlbCurCfgRadiusAuthenString_Object = MibScalar
slbCurCfgRadiusAuthenString = _SlbCurCfgRadiusAuthenString_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 9),
    _SlbCurCfgRadiusAuthenString_Type()
)
slbCurCfgRadiusAuthenString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRadiusAuthenString.setStatus("current")


class _SlbNewCfgRadiusAuthenString_Type(DisplayString):
    """Custom type slbNewCfgRadiusAuthenString based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewCfgRadiusAuthenString_Type.__name__ = "DisplayString"
_SlbNewCfgRadiusAuthenString_Object = MibScalar
slbNewCfgRadiusAuthenString = _SlbNewCfgRadiusAuthenString_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 10),
    _SlbNewCfgRadiusAuthenString_Type()
)
slbNewCfgRadiusAuthenString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgRadiusAuthenString.setStatus("current")


class _SlbCurCfgDirectMode_Type(Integer32):
    """Custom type slbCurCfgDirectMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgDirectMode_Type.__name__ = "Integer32"
_SlbCurCfgDirectMode_Object = MibScalar
slbCurCfgDirectMode = _SlbCurCfgDirectMode_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 11),
    _SlbCurCfgDirectMode_Type()
)
slbCurCfgDirectMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgDirectMode.setStatus("current")


class _SlbNewCfgDirectMode_Type(Integer32):
    """Custom type slbNewCfgDirectMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgDirectMode_Type.__name__ = "Integer32"
_SlbNewCfgDirectMode_Object = MibScalar
slbNewCfgDirectMode = _SlbNewCfgDirectMode_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 12),
    _SlbNewCfgDirectMode_Type()
)
slbNewCfgDirectMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgDirectMode.setStatus("current")
_SlbCurCfgPmask_Type = IpAddress
_SlbCurCfgPmask_Object = MibScalar
slbCurCfgPmask = _SlbCurCfgPmask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 13),
    _SlbCurCfgPmask_Type()
)
slbCurCfgPmask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPmask.setStatus("current")
_SlbNewCfgPmask_Type = IpAddress
_SlbNewCfgPmask_Object = MibScalar
slbNewCfgPmask = _SlbNewCfgPmask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 14),
    _SlbNewCfgPmask_Type()
)
slbNewCfgPmask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgPmask.setStatus("current")


class _SlbCurCfgGrace_Type(Integer32):
    """Custom type slbCurCfgGrace based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgGrace_Type.__name__ = "Integer32"
_SlbCurCfgGrace_Object = MibScalar
slbCurCfgGrace = _SlbCurCfgGrace_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 15),
    _SlbCurCfgGrace_Type()
)
slbCurCfgGrace.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGrace.setStatus("current")


class _SlbNewCfgGrace_Type(Integer32):
    """Custom type slbNewCfgGrace based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgGrace_Type.__name__ = "Integer32"
_SlbNewCfgGrace_Object = MibScalar
slbNewCfgGrace = _SlbNewCfgGrace_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 16),
    _SlbNewCfgGrace_Type()
)
slbNewCfgGrace.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgGrace.setStatus("current")


class _SlbCurCfgVirtMatrixArch_Type(Integer32):
    """Custom type slbCurCfgVirtMatrixArch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtMatrixArch_Type.__name__ = "Integer32"
_SlbCurCfgVirtMatrixArch_Object = MibScalar
slbCurCfgVirtMatrixArch = _SlbCurCfgVirtMatrixArch_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 17),
    _SlbCurCfgVirtMatrixArch_Type()
)
slbCurCfgVirtMatrixArch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtMatrixArch.setStatus("current")


class _SlbNewCfgVirtMatrixArch_Type(Integer32):
    """Custom type slbNewCfgVirtMatrixArch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtMatrixArch_Type.__name__ = "Integer32"
_SlbNewCfgVirtMatrixArch_Object = MibScalar
slbNewCfgVirtMatrixArch = _SlbNewCfgVirtMatrixArch_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 18),
    _SlbNewCfgVirtMatrixArch_Type()
)
slbNewCfgVirtMatrixArch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgVirtMatrixArch.setStatus("current")


class _SlbCurCfgFastage_Type(Integer32):
    """Custom type slbCurCfgFastage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SlbCurCfgFastage_Type.__name__ = "Integer32"
_SlbCurCfgFastage_Object = MibScalar
slbCurCfgFastage = _SlbCurCfgFastage_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 19),
    _SlbCurCfgFastage_Type()
)
slbCurCfgFastage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgFastage.setStatus("current")


class _SlbNewCfgFastage_Type(Integer32):
    """Custom type slbNewCfgFastage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SlbNewCfgFastage_Type.__name__ = "Integer32"
_SlbNewCfgFastage_Object = MibScalar
slbNewCfgFastage = _SlbNewCfgFastage_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 20),
    _SlbNewCfgFastage_Type()
)
slbNewCfgFastage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgFastage.setStatus("current")


class _SlbCurCfgSlowage_Type(Integer32):
    """Custom type slbCurCfgSlowage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_SlbCurCfgSlowage_Type.__name__ = "Integer32"
_SlbCurCfgSlowage_Object = MibScalar
slbCurCfgSlowage = _SlbCurCfgSlowage_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 21),
    _SlbCurCfgSlowage_Type()
)
slbCurCfgSlowage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSlowage.setStatus("obsolete")


class _SlbNewCfgSlowage_Type(Integer32):
    """Custom type slbNewCfgSlowage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_SlbNewCfgSlowage_Type.__name__ = "Integer32"
_SlbNewCfgSlowage_Object = MibScalar
slbNewCfgSlowage = _SlbNewCfgSlowage_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 22),
    _SlbNewCfgSlowage_Type()
)
slbNewCfgSlowage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgSlowage.setStatus("obsolete")


class _SlbCurCfgTpcp_Type(Integer32):
    """Custom type slbCurCfgTpcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgTpcp_Type.__name__ = "Integer32"
_SlbCurCfgTpcp_Object = MibScalar
slbCurCfgTpcp = _SlbCurCfgTpcp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 23),
    _SlbCurCfgTpcp_Type()
)
slbCurCfgTpcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgTpcp.setStatus("current")


class _SlbNewCfgTpcp_Type(Integer32):
    """Custom type slbNewCfgTpcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgTpcp_Type.__name__ = "Integer32"
_SlbNewCfgTpcp_Object = MibScalar
slbNewCfgTpcp = _SlbNewCfgTpcp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 24),
    _SlbNewCfgTpcp_Type()
)
slbNewCfgTpcp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgTpcp.setStatus("current")


class _SlbCurCfgMetricInterval_Type(Integer32):
    """Custom type slbCurCfgMetricInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 256),
    )


_SlbCurCfgMetricInterval_Type.__name__ = "Integer32"
_SlbCurCfgMetricInterval_Object = MibScalar
slbCurCfgMetricInterval = _SlbCurCfgMetricInterval_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 25),
    _SlbCurCfgMetricInterval_Type()
)
slbCurCfgMetricInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgMetricInterval.setStatus("current")


class _SlbNewCfgMetricInterval_Type(Integer32):
    """Custom type slbNewCfgMetricInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 256),
    )


_SlbNewCfgMetricInterval_Type.__name__ = "Integer32"
_SlbNewCfgMetricInterval_Object = MibScalar
slbNewCfgMetricInterval = _SlbNewCfgMetricInterval_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 26),
    _SlbNewCfgMetricInterval_Type()
)
slbNewCfgMetricInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgMetricInterval.setStatus("current")


class _SlbCurCfgLdapVersion_Type(Integer32):
    """Custom type slbCurCfgLdapVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("version2", 1),
          ("version3", 2))
    )


_SlbCurCfgLdapVersion_Type.__name__ = "Integer32"
_SlbCurCfgLdapVersion_Object = MibScalar
slbCurCfgLdapVersion = _SlbCurCfgLdapVersion_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 27),
    _SlbCurCfgLdapVersion_Type()
)
slbCurCfgLdapVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgLdapVersion.setStatus("current")


class _SlbNewCfgLdapVersion_Type(Integer32):
    """Custom type slbNewCfgLdapVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("version2", 1),
          ("version3", 2))
    )


_SlbNewCfgLdapVersion_Type.__name__ = "Integer32"
_SlbNewCfgLdapVersion_Object = MibScalar
slbNewCfgLdapVersion = _SlbNewCfgLdapVersion_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 28),
    _SlbNewCfgLdapVersion_Type()
)
slbNewCfgLdapVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgLdapVersion.setStatus("current")


class _SlbCurCfgAllowHttpHc_Type(Integer32):
    """Custom type slbCurCfgAllowHttpHc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgAllowHttpHc_Type.__name__ = "Integer32"
_SlbCurCfgAllowHttpHc_Object = MibScalar
slbCurCfgAllowHttpHc = _SlbCurCfgAllowHttpHc_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 29),
    _SlbCurCfgAllowHttpHc_Type()
)
slbCurCfgAllowHttpHc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgAllowHttpHc.setStatus("current")


class _SlbNewCfgAllowHttpHc_Type(Integer32):
    """Custom type slbNewCfgAllowHttpHc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgAllowHttpHc_Type.__name__ = "Integer32"
_SlbNewCfgAllowHttpHc_Object = MibScalar
slbNewCfgAllowHttpHc = _SlbNewCfgAllowHttpHc_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 30),
    _SlbNewCfgAllowHttpHc_Type()
)
slbNewCfgAllowHttpHc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgAllowHttpHc.setStatus("current")


class _SlbCurCfgSubmac_Type(Integer32):
    """Custom type slbCurCfgSubmac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgSubmac_Type.__name__ = "Integer32"
_SlbCurCfgSubmac_Object = MibScalar
slbCurCfgSubmac = _SlbCurCfgSubmac_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 31),
    _SlbCurCfgSubmac_Type()
)
slbCurCfgSubmac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSubmac.setStatus("current")


class _SlbNewCfgSubmac_Type(Integer32):
    """Custom type slbNewCfgSubmac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgSubmac_Type.__name__ = "Integer32"
_SlbNewCfgSubmac_Object = MibScalar
slbNewCfgSubmac = _SlbNewCfgSubmac_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 32),
    _SlbNewCfgSubmac_Type()
)
slbNewCfgSubmac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgSubmac.setStatus("current")


class _SlbCurCfgProxyGratArp_Type(Integer32):
    """Custom type slbCurCfgProxyGratArp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgProxyGratArp_Type.__name__ = "Integer32"
_SlbCurCfgProxyGratArp_Object = MibScalar
slbCurCfgProxyGratArp = _SlbCurCfgProxyGratArp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 33),
    _SlbCurCfgProxyGratArp_Type()
)
slbCurCfgProxyGratArp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgProxyGratArp.setStatus("obsolete")


class _SlbNewCfgProxyGratArp_Type(Integer32):
    """Custom type slbNewCfgProxyGratArp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgProxyGratArp_Type.__name__ = "Integer32"
_SlbNewCfgProxyGratArp_Object = MibScalar
slbNewCfgProxyGratArp = _SlbNewCfgProxyGratArp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 34),
    _SlbNewCfgProxyGratArp_Type()
)
slbNewCfgProxyGratArp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgProxyGratArp.setStatus("obsolete")


class _SlbCurCfgRtsVlan_Type(Integer32):
    """Custom type slbCurCfgRtsVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgRtsVlan_Type.__name__ = "Integer32"
_SlbCurCfgRtsVlan_Object = MibScalar
slbCurCfgRtsVlan = _SlbCurCfgRtsVlan_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 35),
    _SlbCurCfgRtsVlan_Type()
)
slbCurCfgRtsVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRtsVlan.setStatus("current")


class _SlbNewCfgRtsVlan_Type(Integer32):
    """Custom type slbNewCfgRtsVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgRtsVlan_Type.__name__ = "Integer32"
_SlbNewCfgRtsVlan_Object = MibScalar
slbNewCfgRtsVlan = _SlbNewCfgRtsVlan_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 36),
    _SlbNewCfgRtsVlan_Type()
)
slbNewCfgRtsVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgRtsVlan.setStatus("current")


class _SlbCurCfgVirtualServiceStats_Type(Integer32):
    """Custom type slbCurCfgVirtualServiceStats based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtualServiceStats_Type.__name__ = "Integer32"
_SlbCurCfgVirtualServiceStats_Object = MibScalar
slbCurCfgVirtualServiceStats = _SlbCurCfgVirtualServiceStats_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 37),
    _SlbCurCfgVirtualServiceStats_Type()
)
slbCurCfgVirtualServiceStats.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtualServiceStats.setStatus("current")


class _SlbNewCfgVirtualServiceStats_Type(Integer32):
    """Custom type slbNewCfgVirtualServiceStats based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtualServiceStats_Type.__name__ = "Integer32"
_SlbNewCfgVirtualServiceStats_Object = MibScalar
slbNewCfgVirtualServiceStats = _SlbNewCfgVirtualServiceStats_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 38),
    _SlbNewCfgVirtualServiceStats_Type()
)
slbNewCfgVirtualServiceStats.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgVirtualServiceStats.setStatus("current")


class _SlbCurCfgSlbSessAtkIntrval_Type(Integer32):
    """Custom type slbCurCfgSlbSessAtkIntrval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
    )


_SlbCurCfgSlbSessAtkIntrval_Type.__name__ = "Integer32"
_SlbCurCfgSlbSessAtkIntrval_Object = MibScalar
slbCurCfgSlbSessAtkIntrval = _SlbCurCfgSlbSessAtkIntrval_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 39),
    _SlbCurCfgSlbSessAtkIntrval_Type()
)
slbCurCfgSlbSessAtkIntrval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSlbSessAtkIntrval.setStatus("current")


class _SlbNewCfgSlbSessAtkIntrval_Type(Integer32):
    """Custom type slbNewCfgSlbSessAtkIntrval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
    )


_SlbNewCfgSlbSessAtkIntrval_Type.__name__ = "Integer32"
_SlbNewCfgSlbSessAtkIntrval_Object = MibScalar
slbNewCfgSlbSessAtkIntrval = _SlbNewCfgSlbSessAtkIntrval_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 40),
    _SlbNewCfgSlbSessAtkIntrval_Type()
)
slbNewCfgSlbSessAtkIntrval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgSlbSessAtkIntrval.setStatus("current")


class _SlbCurCfgSlbSessAtkAllowlim_Type(Integer32):
    """Custom type slbCurCfgSlbSessAtkAllowlim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 11999961),
    )


_SlbCurCfgSlbSessAtkAllowlim_Type.__name__ = "Integer32"
_SlbCurCfgSlbSessAtkAllowlim_Object = MibScalar
slbCurCfgSlbSessAtkAllowlim = _SlbCurCfgSlbSessAtkAllowlim_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 41),
    _SlbCurCfgSlbSessAtkAllowlim_Type()
)
slbCurCfgSlbSessAtkAllowlim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSlbSessAtkAllowlim.setStatus("current")


class _SlbNewCfgSlbSessAtkAllowlim_Type(Integer32):
    """Custom type slbNewCfgSlbSessAtkAllowlim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 11999961),
    )


_SlbNewCfgSlbSessAtkAllowlim_Type.__name__ = "Integer32"
_SlbNewCfgSlbSessAtkAllowlim_Object = MibScalar
slbNewCfgSlbSessAtkAllowlim = _SlbNewCfgSlbSessAtkAllowlim_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 42),
    _SlbNewCfgSlbSessAtkAllowlim_Type()
)
slbNewCfgSlbSessAtkAllowlim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgSlbSessAtkAllowlim.setStatus("current")


class _SlbCurCfgNewSlowage_Type(Integer32):
    """Custom type slbCurCfgNewSlowage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 14),
    )


_SlbCurCfgNewSlowage_Type.__name__ = "Integer32"
_SlbCurCfgNewSlowage_Object = MibScalar
slbCurCfgNewSlowage = _SlbCurCfgNewSlowage_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 43),
    _SlbCurCfgNewSlowage_Type()
)
slbCurCfgNewSlowage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgNewSlowage.setStatus("current")


class _SlbNewCfgNewSlowage_Type(Integer32):
    """Custom type slbNewCfgNewSlowage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 14),
    )


_SlbNewCfgNewSlowage_Type.__name__ = "Integer32"
_SlbNewCfgNewSlowage_Object = MibScalar
slbNewCfgNewSlowage = _SlbNewCfgNewSlowage_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 44),
    _SlbNewCfgNewSlowage_Type()
)
slbNewCfgNewSlowage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgNewSlowage.setStatus("current")


class _SlbCurCfgPortBind_Type(Integer32):
    """Custom type slbCurCfgPortBind based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgPortBind_Type.__name__ = "Integer32"
_SlbCurCfgPortBind_Object = MibScalar
slbCurCfgPortBind = _SlbCurCfgPortBind_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 45),
    _SlbCurCfgPortBind_Type()
)
slbCurCfgPortBind.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPortBind.setStatus("current")


class _SlbNewCfgPortBind_Type(Integer32):
    """Custom type slbNewCfgPortBind based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgPortBind_Type.__name__ = "Integer32"
_SlbNewCfgPortBind_Object = MibScalar
slbNewCfgPortBind = _SlbNewCfgPortBind_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 46),
    _SlbNewCfgPortBind_Type()
)
slbNewCfgPortBind.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgPortBind.setStatus("current")


class _SlbCurCfgVmaSrcPort_Type(Integer32):
    """Custom type slbCurCfgVmaSrcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVmaSrcPort_Type.__name__ = "Integer32"
_SlbCurCfgVmaSrcPort_Object = MibScalar
slbCurCfgVmaSrcPort = _SlbCurCfgVmaSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 47),
    _SlbCurCfgVmaSrcPort_Type()
)
slbCurCfgVmaSrcPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVmaSrcPort.setStatus("current")


class _SlbNewCfgVmaSrcPort_Type(Integer32):
    """Custom type slbNewCfgVmaSrcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVmaSrcPort_Type.__name__ = "Integer32"
_SlbNewCfgVmaSrcPort_Object = MibScalar
slbNewCfgVmaSrcPort = _SlbNewCfgVmaSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 48),
    _SlbNewCfgVmaSrcPort_Type()
)
slbNewCfgVmaSrcPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgVmaSrcPort.setStatus("current")


class _SlbCurCfgIpTcpCksum_Type(Integer32):
    """Custom type slbCurCfgIpTcpCksum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgIpTcpCksum_Type.__name__ = "Integer32"
_SlbCurCfgIpTcpCksum_Object = MibScalar
slbCurCfgIpTcpCksum = _SlbCurCfgIpTcpCksum_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 49),
    _SlbCurCfgIpTcpCksum_Type()
)
slbCurCfgIpTcpCksum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgIpTcpCksum.setStatus("current")


class _SlbNewCfgIpTcpCksum_Type(Integer32):
    """Custom type slbNewCfgIpTcpCksum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgIpTcpCksum_Type.__name__ = "Integer32"
_SlbNewCfgIpTcpCksum_Object = MibScalar
slbNewCfgIpTcpCksum = _SlbNewCfgIpTcpCksum_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 50),
    _SlbNewCfgIpTcpCksum_Type()
)
slbNewCfgIpTcpCksum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgIpTcpCksum.setStatus("current")


class _SlbCurCfgAuxRipHash_Type(Integer32):
    """Custom type slbCurCfgAuxRipHash based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgAuxRipHash_Type.__name__ = "Integer32"
_SlbCurCfgAuxRipHash_Object = MibScalar
slbCurCfgAuxRipHash = _SlbCurCfgAuxRipHash_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 51),
    _SlbCurCfgAuxRipHash_Type()
)
slbCurCfgAuxRipHash.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgAuxRipHash.setStatus("current")


class _SlbNewCfgAuxRipHash_Type(Integer32):
    """Custom type slbNewCfgAuxRipHash based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgAuxRipHash_Type.__name__ = "Integer32"
_SlbNewCfgAuxRipHash_Object = MibScalar
slbNewCfgAuxRipHash = _SlbNewCfgAuxRipHash_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 52),
    _SlbNewCfgAuxRipHash_Type()
)
slbNewCfgAuxRipHash.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgAuxRipHash.setStatus("current")


class _SlbCurCfgClearBackup_Type(Integer32):
    """Custom type slbCurCfgClearBackup based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgClearBackup_Type.__name__ = "Integer32"
_SlbCurCfgClearBackup_Object = MibScalar
slbCurCfgClearBackup = _SlbCurCfgClearBackup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 53),
    _SlbCurCfgClearBackup_Type()
)
slbCurCfgClearBackup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgClearBackup.setStatus("current")


class _SlbNewCfgClearBackup_Type(Integer32):
    """Custom type slbNewCfgClearBackup based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgClearBackup_Type.__name__ = "Integer32"
_SlbNewCfgClearBackup_Object = MibScalar
slbNewCfgClearBackup = _SlbNewCfgClearBackup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 54),
    _SlbNewCfgClearBackup_Type()
)
slbNewCfgClearBackup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgClearBackup.setStatus("current")


class _SlbCurCfgmStat_Type(Integer32):
    """Custom type slbCurCfgmStat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3600),
    )


_SlbCurCfgmStat_Type.__name__ = "Integer32"
_SlbCurCfgmStat_Object = MibScalar
slbCurCfgmStat = _SlbCurCfgmStat_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 55),
    _SlbCurCfgmStat_Type()
)
slbCurCfgmStat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgmStat.setStatus("current")


class _SlbNewCfgmStat_Type(Integer32):
    """Custom type slbNewCfgmStat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3600),
    )


_SlbNewCfgmStat_Type.__name__ = "Integer32"
_SlbNewCfgmStat_Object = MibScalar
slbNewCfgmStat = _SlbNewCfgmStat_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 56),
    _SlbNewCfgmStat_Type()
)
slbNewCfgmStat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgmStat.setStatus("current")


class _SlbCurCfgvStat_Type(Integer32):
    """Custom type slbCurCfgvStat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgvStat_Type.__name__ = "Integer32"
_SlbCurCfgvStat_Object = MibScalar
slbCurCfgvStat = _SlbCurCfgvStat_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 57),
    _SlbCurCfgvStat_Type()
)
slbCurCfgvStat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgvStat.setStatus("current")


class _SlbNewCfgvStat_Type(Integer32):
    """Custom type slbNewCfgvStat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgvStat_Type.__name__ = "Integer32"
_SlbNewCfgvStat_Object = MibScalar
slbNewCfgvStat = _SlbNewCfgvStat_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 58),
    _SlbNewCfgvStat_Type()
)
slbNewCfgvStat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgvStat.setStatus("current")


class _SlbCurCfgVmaDip_Type(Integer32):
    """Custom type slbCurCfgVmaDip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVmaDip_Type.__name__ = "Integer32"
_SlbCurCfgVmaDip_Object = MibScalar
slbCurCfgVmaDip = _SlbCurCfgVmaDip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 59),
    _SlbCurCfgVmaDip_Type()
)
slbCurCfgVmaDip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVmaDip.setStatus("current")


class _SlbNewCfgVmaDip_Type(Integer32):
    """Custom type slbNewCfgVmaDip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVmaDip_Type.__name__ = "Integer32"
_SlbNewCfgVmaDip_Object = MibScalar
slbNewCfgVmaDip = _SlbNewCfgVmaDip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 60),
    _SlbNewCfgVmaDip_Type()
)
slbNewCfgVmaDip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgVmaDip.setStatus("current")


class _SlbCurCfgClsRst_Type(Integer32):
    """Custom type slbCurCfgClsRst based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgClsRst_Type.__name__ = "Integer32"
_SlbCurCfgClsRst_Object = MibScalar
slbCurCfgClsRst = _SlbCurCfgClsRst_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 61),
    _SlbCurCfgClsRst_Type()
)
slbCurCfgClsRst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgClsRst.setStatus("current")


class _SlbNewCfgClsRst_Type(Integer32):
    """Custom type slbNewCfgClsRst based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgClsRst_Type.__name__ = "Integer32"
_SlbNewCfgClsRst_Object = MibScalar
slbNewCfgClsRst = _SlbNewCfgClsRst_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 62),
    _SlbNewCfgClsRst_Type()
)
slbNewCfgClsRst.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgClsRst.setStatus("current")


class _SlbCurCfgRtsIpLkp_Type(Integer32):
    """Custom type slbCurCfgRtsIpLkp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgRtsIpLkp_Type.__name__ = "Integer32"
_SlbCurCfgRtsIpLkp_Object = MibScalar
slbCurCfgRtsIpLkp = _SlbCurCfgRtsIpLkp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 63),
    _SlbCurCfgRtsIpLkp_Type()
)
slbCurCfgRtsIpLkp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRtsIpLkp.setStatus("current")


class _SlbNewCfgRtsIpLkp_Type(Integer32):
    """Custom type slbNewCfgRtsIpLkp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgRtsIpLkp_Type.__name__ = "Integer32"
_SlbNewCfgRtsIpLkp_Object = MibScalar
slbNewCfgRtsIpLkp = _SlbNewCfgRtsIpLkp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 64),
    _SlbNewCfgRtsIpLkp_Type()
)
slbNewCfgRtsIpLkp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgRtsIpLkp.setStatus("current")


class _SlbCurCfgPprefix_Type(Integer32):
    """Custom type slbCurCfgPprefix based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 128),
    )


_SlbCurCfgPprefix_Type.__name__ = "Integer32"
_SlbCurCfgPprefix_Object = MibScalar
slbCurCfgPprefix = _SlbCurCfgPprefix_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 65),
    _SlbCurCfgPprefix_Type()
)
slbCurCfgPprefix.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPprefix.setStatus("current")


class _SlbNewCfgPprefix_Type(Integer32):
    """Custom type slbNewCfgPprefix based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 128),
    )


_SlbNewCfgPprefix_Type.__name__ = "Integer32"
_SlbNewCfgPprefix_Object = MibScalar
slbNewCfgPprefix = _SlbNewCfgPprefix_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 66),
    _SlbNewCfgPprefix_Type()
)
slbNewCfgPprefix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgPprefix.setStatus("current")


class _SlbCurCfgSubdmac_Type(Integer32):
    """Custom type slbCurCfgSubdmac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgSubdmac_Type.__name__ = "Integer32"
_SlbCurCfgSubdmac_Object = MibScalar
slbCurCfgSubdmac = _SlbCurCfgSubdmac_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 67),
    _SlbCurCfgSubdmac_Type()
)
slbCurCfgSubdmac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSubdmac.setStatus("current")


class _SlbNewCfgSubdmac_Type(Integer32):
    """Custom type slbNewCfgSubdmac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgSubdmac_Type.__name__ = "Integer32"
_SlbNewCfgSubdmac_Object = MibScalar
slbNewCfgSubdmac = _SlbNewCfgSubdmac_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 68),
    _SlbNewCfgSubdmac_Type()
)
slbNewCfgSubdmac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgSubdmac.setStatus("current")


class _SlbCurCfgpVlanTag_Type(Integer32):
    """Custom type slbCurCfgpVlanTag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgpVlanTag_Type.__name__ = "Integer32"
_SlbCurCfgpVlanTag_Object = MibScalar
slbCurCfgpVlanTag = _SlbCurCfgpVlanTag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 69),
    _SlbCurCfgpVlanTag_Type()
)
slbCurCfgpVlanTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgpVlanTag.setStatus("current")


class _SlbNewCfgpVlanTag_Type(Integer32):
    """Custom type slbNewCfgpVlanTag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgpVlanTag_Type.__name__ = "Integer32"
_SlbNewCfgpVlanTag_Object = MibScalar
slbNewCfgpVlanTag = _SlbNewCfgpVlanTag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 70),
    _SlbNewCfgpVlanTag_Type()
)
slbNewCfgpVlanTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgpVlanTag.setStatus("current")
_SlbCurCfgNmask_Type = IpAddress
_SlbCurCfgNmask_Object = MibScalar
slbCurCfgNmask = _SlbCurCfgNmask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 71),
    _SlbCurCfgNmask_Type()
)
slbCurCfgNmask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgNmask.setStatus("current")
_SlbNewCfgNmask_Type = IpAddress
_SlbNewCfgNmask_Object = MibScalar
slbNewCfgNmask = _SlbNewCfgNmask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 1, 72),
    _SlbNewCfgNmask_Type()
)
slbNewCfgNmask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgNmask.setStatus("current")
_RealServerCfg_ObjectIdentity = ObjectIdentity
realServerCfg = _RealServerCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2)
)
_SlbRealServerMaxSize_Type = Integer32
_SlbRealServerMaxSize_Object = MibScalar
slbRealServerMaxSize = _SlbRealServerMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 1),
    _SlbRealServerMaxSize_Type()
)
slbRealServerMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbRealServerMaxSize.setStatus("current")
_SlbCurCfgRealServerTable_Object = MibTable
slbCurCfgRealServerTable = _SlbCurCfgRealServerTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2)
)
if mibBuilder.loadTexts:
    slbCurCfgRealServerTable.setStatus("current")
_SlbCurCfgRealServerEntry_Object = MibTableRow
slbCurCfgRealServerEntry = _SlbCurCfgRealServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1)
)
slbCurCfgRealServerEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerIndex"),
)
if mibBuilder.loadTexts:
    slbCurCfgRealServerEntry.setStatus("current")
_SlbCurCfgRealServerIndex_Type = Integer32
_SlbCurCfgRealServerIndex_Object = MibTableColumn
slbCurCfgRealServerIndex = _SlbCurCfgRealServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 1),
    _SlbCurCfgRealServerIndex_Type()
)
slbCurCfgRealServerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerIndex.setStatus("current")
_SlbCurCfgRealServerIpAddr_Type = IpAddress
_SlbCurCfgRealServerIpAddr_Object = MibTableColumn
slbCurCfgRealServerIpAddr = _SlbCurCfgRealServerIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 2),
    _SlbCurCfgRealServerIpAddr_Type()
)
slbCurCfgRealServerIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerIpAddr.setStatus("current")


class _SlbCurCfgRealServerWeight_Type(Integer32):
    """Custom type slbCurCfgRealServerWeight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 48),
    )


_SlbCurCfgRealServerWeight_Type.__name__ = "Integer32"
_SlbCurCfgRealServerWeight_Object = MibTableColumn
slbCurCfgRealServerWeight = _SlbCurCfgRealServerWeight_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 3),
    _SlbCurCfgRealServerWeight_Type()
)
slbCurCfgRealServerWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerWeight.setStatus("current")


class _SlbCurCfgRealServerMaxConns_Type(Integer32):
    """Custom type slbCurCfgRealServerMaxConns based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 200000),
    )


_SlbCurCfgRealServerMaxConns_Type.__name__ = "Integer32"
_SlbCurCfgRealServerMaxConns_Object = MibTableColumn
slbCurCfgRealServerMaxConns = _SlbCurCfgRealServerMaxConns_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 4),
    _SlbCurCfgRealServerMaxConns_Type()
)
slbCurCfgRealServerMaxConns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerMaxConns.setStatus("current")


class _SlbCurCfgRealServerTimeOut_Type(Integer32):
    """Custom type slbCurCfgRealServerTimeOut based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 32768),
    )


_SlbCurCfgRealServerTimeOut_Type.__name__ = "Integer32"
_SlbCurCfgRealServerTimeOut_Object = MibTableColumn
slbCurCfgRealServerTimeOut = _SlbCurCfgRealServerTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 5),
    _SlbCurCfgRealServerTimeOut_Type()
)
slbCurCfgRealServerTimeOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerTimeOut.setStatus("current")
_SlbCurCfgRealServerBackUp_Type = Integer32
_SlbCurCfgRealServerBackUp_Object = MibTableColumn
slbCurCfgRealServerBackUp = _SlbCurCfgRealServerBackUp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 6),
    _SlbCurCfgRealServerBackUp_Type()
)
slbCurCfgRealServerBackUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerBackUp.setStatus("current")


class _SlbCurCfgRealServerPingInterval_Type(Integer32):
    """Custom type slbCurCfgRealServerPingInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 60),
    )


_SlbCurCfgRealServerPingInterval_Type.__name__ = "Integer32"
_SlbCurCfgRealServerPingInterval_Object = MibTableColumn
slbCurCfgRealServerPingInterval = _SlbCurCfgRealServerPingInterval_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 7),
    _SlbCurCfgRealServerPingInterval_Type()
)
slbCurCfgRealServerPingInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerPingInterval.setStatus("current")


class _SlbCurCfgRealServerFailRetry_Type(Integer32):
    """Custom type slbCurCfgRealServerFailRetry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 63),
    )


_SlbCurCfgRealServerFailRetry_Type.__name__ = "Integer32"
_SlbCurCfgRealServerFailRetry_Object = MibTableColumn
slbCurCfgRealServerFailRetry = _SlbCurCfgRealServerFailRetry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 8),
    _SlbCurCfgRealServerFailRetry_Type()
)
slbCurCfgRealServerFailRetry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerFailRetry.setStatus("current")


class _SlbCurCfgRealServerSuccRetry_Type(Integer32):
    """Custom type slbCurCfgRealServerSuccRetry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 63),
    )


_SlbCurCfgRealServerSuccRetry_Type.__name__ = "Integer32"
_SlbCurCfgRealServerSuccRetry_Object = MibTableColumn
slbCurCfgRealServerSuccRetry = _SlbCurCfgRealServerSuccRetry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 9),
    _SlbCurCfgRealServerSuccRetry_Type()
)
slbCurCfgRealServerSuccRetry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerSuccRetry.setStatus("current")


class _SlbCurCfgRealServerState_Type(Integer32):
    """Custom type slbCurCfgRealServerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 3),
          ("disabled-with-fastage", 4),
          ("enabled", 2))
    )


_SlbCurCfgRealServerState_Type.__name__ = "Integer32"
_SlbCurCfgRealServerState_Object = MibTableColumn
slbCurCfgRealServerState = _SlbCurCfgRealServerState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 10),
    _SlbCurCfgRealServerState_Type()
)
slbCurCfgRealServerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerState.setStatus("current")


class _SlbCurCfgRealServerType_Type(Integer32):
    """Custom type slbCurCfgRealServerType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("local-server", 1),
          ("remote-server", 2))
    )


_SlbCurCfgRealServerType_Type.__name__ = "Integer32"
_SlbCurCfgRealServerType_Object = MibTableColumn
slbCurCfgRealServerType = _SlbCurCfgRealServerType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 11),
    _SlbCurCfgRealServerType_Type()
)
slbCurCfgRealServerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerType.setStatus("current")


class _SlbCurCfgRealServerName_Type(DisplayString):
    """Custom type slbCurCfgRealServerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurCfgRealServerName_Type.__name__ = "DisplayString"
_SlbCurCfgRealServerName_Object = MibTableColumn
slbCurCfgRealServerName = _SlbCurCfgRealServerName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 12),
    _SlbCurCfgRealServerName_Type()
)
slbCurCfgRealServerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerName.setStatus("current")
_SlbCurCfgRealServerUrlBmap_Type = OctetString
_SlbCurCfgRealServerUrlBmap_Object = MibTableColumn
slbCurCfgRealServerUrlBmap = _SlbCurCfgRealServerUrlBmap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 13),
    _SlbCurCfgRealServerUrlBmap_Type()
)
slbCurCfgRealServerUrlBmap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerUrlBmap.setStatus("current")


class _SlbCurCfgRealServerCookie_Type(Integer32):
    """Custom type slbCurCfgRealServerCookie based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgRealServerCookie_Type.__name__ = "Integer32"
_SlbCurCfgRealServerCookie_Object = MibTableColumn
slbCurCfgRealServerCookie = _SlbCurCfgRealServerCookie_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 14),
    _SlbCurCfgRealServerCookie_Type()
)
slbCurCfgRealServerCookie.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerCookie.setStatus("current")


class _SlbCurCfgRealServerExcludeStr_Type(Integer32):
    """Custom type slbCurCfgRealServerExcludeStr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgRealServerExcludeStr_Type.__name__ = "Integer32"
_SlbCurCfgRealServerExcludeStr_Object = MibTableColumn
slbCurCfgRealServerExcludeStr = _SlbCurCfgRealServerExcludeStr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 15),
    _SlbCurCfgRealServerExcludeStr_Type()
)
slbCurCfgRealServerExcludeStr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerExcludeStr.setStatus("current")


class _SlbCurCfgRealServerSubmac_Type(Integer32):
    """Custom type slbCurCfgRealServerSubmac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgRealServerSubmac_Type.__name__ = "Integer32"
_SlbCurCfgRealServerSubmac_Object = MibTableColumn
slbCurCfgRealServerSubmac = _SlbCurCfgRealServerSubmac_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 16),
    _SlbCurCfgRealServerSubmac_Type()
)
slbCurCfgRealServerSubmac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerSubmac.setStatus("current")


class _SlbCurCfgRealServerProxy_Type(Integer32):
    """Custom type slbCurCfgRealServerProxy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgRealServerProxy_Type.__name__ = "Integer32"
_SlbCurCfgRealServerProxy_Object = MibTableColumn
slbCurCfgRealServerProxy = _SlbCurCfgRealServerProxy_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 17),
    _SlbCurCfgRealServerProxy_Type()
)
slbCurCfgRealServerProxy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerProxy.setStatus("current")


class _SlbCurCfgRealServerLdapwr_Type(Integer32):
    """Custom type slbCurCfgRealServerLdapwr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgRealServerLdapwr_Type.__name__ = "Integer32"
_SlbCurCfgRealServerLdapwr_Object = MibTableColumn
slbCurCfgRealServerLdapwr = _SlbCurCfgRealServerLdapwr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 18),
    _SlbCurCfgRealServerLdapwr_Type()
)
slbCurCfgRealServerLdapwr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerLdapwr.setStatus("current")


class _SlbCurCfgRealServerOid_Type(DisplayString):
    """Custom type slbCurCfgRealServerOid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SlbCurCfgRealServerOid_Type.__name__ = "DisplayString"
_SlbCurCfgRealServerOid_Object = MibTableColumn
slbCurCfgRealServerOid = _SlbCurCfgRealServerOid_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 19),
    _SlbCurCfgRealServerOid_Type()
)
slbCurCfgRealServerOid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerOid.setStatus("current")


class _SlbCurCfgRealServerCommString_Type(DisplayString):
    """Custom type slbCurCfgRealServerCommString based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurCfgRealServerCommString_Type.__name__ = "DisplayString"
_SlbCurCfgRealServerCommString_Object = MibTableColumn
slbCurCfgRealServerCommString = _SlbCurCfgRealServerCommString_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 20),
    _SlbCurCfgRealServerCommString_Type()
)
slbCurCfgRealServerCommString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerCommString.setStatus("current")


class _SlbCurCfgRealServerIdsvlan_Type(Integer32):
    """Custom type slbCurCfgRealServerIdsvlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4090),
    )


_SlbCurCfgRealServerIdsvlan_Type.__name__ = "Integer32"
_SlbCurCfgRealServerIdsvlan_Object = MibTableColumn
slbCurCfgRealServerIdsvlan = _SlbCurCfgRealServerIdsvlan_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 21),
    _SlbCurCfgRealServerIdsvlan_Type()
)
slbCurCfgRealServerIdsvlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerIdsvlan.setStatus("current")
_SlbCurCfgRealServerIdsport_Type = Integer32
_SlbCurCfgRealServerIdsport_Object = MibTableColumn
slbCurCfgRealServerIdsport = _SlbCurCfgRealServerIdsport_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 22),
    _SlbCurCfgRealServerIdsport_Type()
)
slbCurCfgRealServerIdsport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerIdsport.setStatus("current")


class _SlbCurCfgRealServerAvail_Type(Integer32):
    """Custom type slbCurCfgRealServerAvail based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 48),
    )


_SlbCurCfgRealServerAvail_Type.__name__ = "Integer32"
_SlbCurCfgRealServerAvail_Object = MibTableColumn
slbCurCfgRealServerAvail = _SlbCurCfgRealServerAvail_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 23),
    _SlbCurCfgRealServerAvail_Type()
)
slbCurCfgRealServerAvail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerAvail.setStatus("current")


class _SlbCurCfgRealServerFastHealthCheck_Type(Integer32):
    """Custom type slbCurCfgRealServerFastHealthCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgRealServerFastHealthCheck_Type.__name__ = "Integer32"
_SlbCurCfgRealServerFastHealthCheck_Object = MibTableColumn
slbCurCfgRealServerFastHealthCheck = _SlbCurCfgRealServerFastHealthCheck_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 24),
    _SlbCurCfgRealServerFastHealthCheck_Type()
)
slbCurCfgRealServerFastHealthCheck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerFastHealthCheck.setStatus("current")


class _SlbCurCfgRealServerSubdmac_Type(Integer32):
    """Custom type slbCurCfgRealServerSubdmac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgRealServerSubdmac_Type.__name__ = "Integer32"
_SlbCurCfgRealServerSubdmac_Object = MibTableColumn
slbCurCfgRealServerSubdmac = _SlbCurCfgRealServerSubdmac_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 25),
    _SlbCurCfgRealServerSubdmac_Type()
)
slbCurCfgRealServerSubdmac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerSubdmac.setStatus("current")


class _SlbCurCfgRealServerOverflow_Type(Integer32):
    """Custom type slbCurCfgRealServerOverflow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgRealServerOverflow_Type.__name__ = "Integer32"
_SlbCurCfgRealServerOverflow_Object = MibTableColumn
slbCurCfgRealServerOverflow = _SlbCurCfgRealServerOverflow_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 26),
    _SlbCurCfgRealServerOverflow_Type()
)
slbCurCfgRealServerOverflow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerOverflow.setStatus("current")


class _SlbCurCfgRealServerBkpPreempt_Type(Integer32):
    """Custom type slbCurCfgRealServerBkpPreempt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgRealServerBkpPreempt_Type.__name__ = "Integer32"
_SlbCurCfgRealServerBkpPreempt_Object = MibTableColumn
slbCurCfgRealServerBkpPreempt = _SlbCurCfgRealServerBkpPreempt_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 27),
    _SlbCurCfgRealServerBkpPreempt_Type()
)
slbCurCfgRealServerBkpPreempt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerBkpPreempt.setStatus("current")


class _SlbCurCfgRealServerIpVer_Type(Integer32):
    """Custom type slbCurCfgRealServerIpVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_SlbCurCfgRealServerIpVer_Type.__name__ = "Integer32"
_SlbCurCfgRealServerIpVer_Object = MibTableColumn
slbCurCfgRealServerIpVer = _SlbCurCfgRealServerIpVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 28),
    _SlbCurCfgRealServerIpVer_Type()
)
slbCurCfgRealServerIpVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerIpVer.setStatus("current")


class _SlbCurCfgRealServerIpv6Addr_Type(DisplayString):
    """Custom type slbCurCfgRealServerIpv6Addr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SlbCurCfgRealServerIpv6Addr_Type.__name__ = "DisplayString"
_SlbCurCfgRealServerIpv6Addr_Object = MibTableColumn
slbCurCfgRealServerIpv6Addr = _SlbCurCfgRealServerIpv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 2, 1, 29),
    _SlbCurCfgRealServerIpv6Addr_Type()
)
slbCurCfgRealServerIpv6Addr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServerIpv6Addr.setStatus("current")
_SlbNewCfgRealServerTable_Object = MibTable
slbNewCfgRealServerTable = _SlbNewCfgRealServerTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3)
)
if mibBuilder.loadTexts:
    slbNewCfgRealServerTable.setStatus("current")
_SlbNewCfgRealServerEntry_Object = MibTableRow
slbNewCfgRealServerEntry = _SlbNewCfgRealServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1)
)
slbNewCfgRealServerEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgRealServerIndex"),
)
if mibBuilder.loadTexts:
    slbNewCfgRealServerEntry.setStatus("current")
_SlbNewCfgRealServerIndex_Type = Integer32
_SlbNewCfgRealServerIndex_Object = MibTableColumn
slbNewCfgRealServerIndex = _SlbNewCfgRealServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 1),
    _SlbNewCfgRealServerIndex_Type()
)
slbNewCfgRealServerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgRealServerIndex.setStatus("current")
_SlbNewCfgRealServerIpAddr_Type = IpAddress
_SlbNewCfgRealServerIpAddr_Object = MibTableColumn
slbNewCfgRealServerIpAddr = _SlbNewCfgRealServerIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 2),
    _SlbNewCfgRealServerIpAddr_Type()
)
slbNewCfgRealServerIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerIpAddr.setStatus("current")


class _SlbNewCfgRealServerWeight_Type(Integer32):
    """Custom type slbNewCfgRealServerWeight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 48),
    )


_SlbNewCfgRealServerWeight_Type.__name__ = "Integer32"
_SlbNewCfgRealServerWeight_Object = MibTableColumn
slbNewCfgRealServerWeight = _SlbNewCfgRealServerWeight_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 3),
    _SlbNewCfgRealServerWeight_Type()
)
slbNewCfgRealServerWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerWeight.setStatus("current")


class _SlbNewCfgRealServerMaxConns_Type(Integer32):
    """Custom type slbNewCfgRealServerMaxConns based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 200000),
    )


_SlbNewCfgRealServerMaxConns_Type.__name__ = "Integer32"
_SlbNewCfgRealServerMaxConns_Object = MibTableColumn
slbNewCfgRealServerMaxConns = _SlbNewCfgRealServerMaxConns_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 4),
    _SlbNewCfgRealServerMaxConns_Type()
)
slbNewCfgRealServerMaxConns.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerMaxConns.setStatus("current")


class _SlbNewCfgRealServerTimeOut_Type(Integer32):
    """Custom type slbNewCfgRealServerTimeOut based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 32768),
    )


_SlbNewCfgRealServerTimeOut_Type.__name__ = "Integer32"
_SlbNewCfgRealServerTimeOut_Object = MibTableColumn
slbNewCfgRealServerTimeOut = _SlbNewCfgRealServerTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 5),
    _SlbNewCfgRealServerTimeOut_Type()
)
slbNewCfgRealServerTimeOut.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerTimeOut.setStatus("current")
_SlbNewCfgRealServerBackUp_Type = Integer32
_SlbNewCfgRealServerBackUp_Object = MibTableColumn
slbNewCfgRealServerBackUp = _SlbNewCfgRealServerBackUp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 6),
    _SlbNewCfgRealServerBackUp_Type()
)
slbNewCfgRealServerBackUp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerBackUp.setStatus("current")


class _SlbNewCfgRealServerPingInterval_Type(Integer32):
    """Custom type slbNewCfgRealServerPingInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 60),
    )


_SlbNewCfgRealServerPingInterval_Type.__name__ = "Integer32"
_SlbNewCfgRealServerPingInterval_Object = MibTableColumn
slbNewCfgRealServerPingInterval = _SlbNewCfgRealServerPingInterval_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 7),
    _SlbNewCfgRealServerPingInterval_Type()
)
slbNewCfgRealServerPingInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerPingInterval.setStatus("current")


class _SlbNewCfgRealServerFailRetry_Type(Integer32):
    """Custom type slbNewCfgRealServerFailRetry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 63),
    )


_SlbNewCfgRealServerFailRetry_Type.__name__ = "Integer32"
_SlbNewCfgRealServerFailRetry_Object = MibTableColumn
slbNewCfgRealServerFailRetry = _SlbNewCfgRealServerFailRetry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 8),
    _SlbNewCfgRealServerFailRetry_Type()
)
slbNewCfgRealServerFailRetry.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerFailRetry.setStatus("current")


class _SlbNewCfgRealServerSuccRetry_Type(Integer32):
    """Custom type slbNewCfgRealServerSuccRetry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 63),
    )


_SlbNewCfgRealServerSuccRetry_Type.__name__ = "Integer32"
_SlbNewCfgRealServerSuccRetry_Object = MibTableColumn
slbNewCfgRealServerSuccRetry = _SlbNewCfgRealServerSuccRetry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 9),
    _SlbNewCfgRealServerSuccRetry_Type()
)
slbNewCfgRealServerSuccRetry.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerSuccRetry.setStatus("current")


class _SlbNewCfgRealServerState_Type(Integer32):
    """Custom type slbNewCfgRealServerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 3),
          ("disabled-with-fastage", 4),
          ("enabled", 2))
    )


_SlbNewCfgRealServerState_Type.__name__ = "Integer32"
_SlbNewCfgRealServerState_Object = MibTableColumn
slbNewCfgRealServerState = _SlbNewCfgRealServerState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 10),
    _SlbNewCfgRealServerState_Type()
)
slbNewCfgRealServerState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerState.setStatus("current")


class _SlbNewCfgRealServerDelete_Type(Integer32):
    """Custom type slbNewCfgRealServerDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewCfgRealServerDelete_Type.__name__ = "Integer32"
_SlbNewCfgRealServerDelete_Object = MibTableColumn
slbNewCfgRealServerDelete = _SlbNewCfgRealServerDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 11),
    _SlbNewCfgRealServerDelete_Type()
)
slbNewCfgRealServerDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerDelete.setStatus("current")


class _SlbNewCfgRealServerType_Type(Integer32):
    """Custom type slbNewCfgRealServerType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("local-server", 1),
          ("remote-server", 2))
    )


_SlbNewCfgRealServerType_Type.__name__ = "Integer32"
_SlbNewCfgRealServerType_Object = MibTableColumn
slbNewCfgRealServerType = _SlbNewCfgRealServerType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 12),
    _SlbNewCfgRealServerType_Type()
)
slbNewCfgRealServerType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerType.setStatus("current")


class _SlbNewCfgRealServerName_Type(DisplayString):
    """Custom type slbNewCfgRealServerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewCfgRealServerName_Type.__name__ = "DisplayString"
_SlbNewCfgRealServerName_Object = MibTableColumn
slbNewCfgRealServerName = _SlbNewCfgRealServerName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 13),
    _SlbNewCfgRealServerName_Type()
)
slbNewCfgRealServerName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerName.setStatus("current")
_SlbNewCfgRealServerUrlBmap_Type = OctetString
_SlbNewCfgRealServerUrlBmap_Object = MibTableColumn
slbNewCfgRealServerUrlBmap = _SlbNewCfgRealServerUrlBmap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 14),
    _SlbNewCfgRealServerUrlBmap_Type()
)
slbNewCfgRealServerUrlBmap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgRealServerUrlBmap.setStatus("current")
_SlbNewCfgRealServerAddUrl_Type = Integer32
_SlbNewCfgRealServerAddUrl_Object = MibTableColumn
slbNewCfgRealServerAddUrl = _SlbNewCfgRealServerAddUrl_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 15),
    _SlbNewCfgRealServerAddUrl_Type()
)
slbNewCfgRealServerAddUrl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerAddUrl.setStatus("current")
_SlbNewCfgRealServerRemUrl_Type = Integer32
_SlbNewCfgRealServerRemUrl_Object = MibTableColumn
slbNewCfgRealServerRemUrl = _SlbNewCfgRealServerRemUrl_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 16),
    _SlbNewCfgRealServerRemUrl_Type()
)
slbNewCfgRealServerRemUrl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerRemUrl.setStatus("current")


class _SlbNewCfgRealServerCookie_Type(Integer32):
    """Custom type slbNewCfgRealServerCookie based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgRealServerCookie_Type.__name__ = "Integer32"
_SlbNewCfgRealServerCookie_Object = MibTableColumn
slbNewCfgRealServerCookie = _SlbNewCfgRealServerCookie_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 17),
    _SlbNewCfgRealServerCookie_Type()
)
slbNewCfgRealServerCookie.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerCookie.setStatus("current")


class _SlbNewCfgRealServerExcludeStr_Type(Integer32):
    """Custom type slbNewCfgRealServerExcludeStr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgRealServerExcludeStr_Type.__name__ = "Integer32"
_SlbNewCfgRealServerExcludeStr_Object = MibTableColumn
slbNewCfgRealServerExcludeStr = _SlbNewCfgRealServerExcludeStr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 18),
    _SlbNewCfgRealServerExcludeStr_Type()
)
slbNewCfgRealServerExcludeStr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerExcludeStr.setStatus("current")


class _SlbNewCfgRealServerSubmac_Type(Integer32):
    """Custom type slbNewCfgRealServerSubmac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgRealServerSubmac_Type.__name__ = "Integer32"
_SlbNewCfgRealServerSubmac_Object = MibTableColumn
slbNewCfgRealServerSubmac = _SlbNewCfgRealServerSubmac_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 19),
    _SlbNewCfgRealServerSubmac_Type()
)
slbNewCfgRealServerSubmac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerSubmac.setStatus("current")


class _SlbNewCfgRealServerProxy_Type(Integer32):
    """Custom type slbNewCfgRealServerProxy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgRealServerProxy_Type.__name__ = "Integer32"
_SlbNewCfgRealServerProxy_Object = MibTableColumn
slbNewCfgRealServerProxy = _SlbNewCfgRealServerProxy_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 20),
    _SlbNewCfgRealServerProxy_Type()
)
slbNewCfgRealServerProxy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerProxy.setStatus("current")


class _SlbNewCfgRealServerLdapwr_Type(Integer32):
    """Custom type slbNewCfgRealServerLdapwr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgRealServerLdapwr_Type.__name__ = "Integer32"
_SlbNewCfgRealServerLdapwr_Object = MibTableColumn
slbNewCfgRealServerLdapwr = _SlbNewCfgRealServerLdapwr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 21),
    _SlbNewCfgRealServerLdapwr_Type()
)
slbNewCfgRealServerLdapwr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerLdapwr.setStatus("current")


class _SlbNewCfgRealServerOid_Type(DisplayString):
    """Custom type slbNewCfgRealServerOid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SlbNewCfgRealServerOid_Type.__name__ = "DisplayString"
_SlbNewCfgRealServerOid_Object = MibTableColumn
slbNewCfgRealServerOid = _SlbNewCfgRealServerOid_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 22),
    _SlbNewCfgRealServerOid_Type()
)
slbNewCfgRealServerOid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerOid.setStatus("current")


class _SlbNewCfgRealServerCommString_Type(DisplayString):
    """Custom type slbNewCfgRealServerCommString based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewCfgRealServerCommString_Type.__name__ = "DisplayString"
_SlbNewCfgRealServerCommString_Object = MibTableColumn
slbNewCfgRealServerCommString = _SlbNewCfgRealServerCommString_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 23),
    _SlbNewCfgRealServerCommString_Type()
)
slbNewCfgRealServerCommString.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerCommString.setStatus("current")


class _SlbNewCfgRealServerIdsvlan_Type(Integer32):
    """Custom type slbNewCfgRealServerIdsvlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4090),
    )


_SlbNewCfgRealServerIdsvlan_Type.__name__ = "Integer32"
_SlbNewCfgRealServerIdsvlan_Object = MibTableColumn
slbNewCfgRealServerIdsvlan = _SlbNewCfgRealServerIdsvlan_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 24),
    _SlbNewCfgRealServerIdsvlan_Type()
)
slbNewCfgRealServerIdsvlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerIdsvlan.setStatus("current")
_SlbNewCfgRealServerIdsport_Type = Integer32
_SlbNewCfgRealServerIdsport_Object = MibTableColumn
slbNewCfgRealServerIdsport = _SlbNewCfgRealServerIdsport_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 25),
    _SlbNewCfgRealServerIdsport_Type()
)
slbNewCfgRealServerIdsport.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerIdsport.setStatus("current")


class _SlbNewCfgRealServerAvail_Type(Integer32):
    """Custom type slbNewCfgRealServerAvail based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 48),
    )


_SlbNewCfgRealServerAvail_Type.__name__ = "Integer32"
_SlbNewCfgRealServerAvail_Object = MibTableColumn
slbNewCfgRealServerAvail = _SlbNewCfgRealServerAvail_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 26),
    _SlbNewCfgRealServerAvail_Type()
)
slbNewCfgRealServerAvail.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerAvail.setStatus("current")


class _SlbNewCfgRealServerFastHealthCheck_Type(Integer32):
    """Custom type slbNewCfgRealServerFastHealthCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgRealServerFastHealthCheck_Type.__name__ = "Integer32"
_SlbNewCfgRealServerFastHealthCheck_Object = MibTableColumn
slbNewCfgRealServerFastHealthCheck = _SlbNewCfgRealServerFastHealthCheck_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 27),
    _SlbNewCfgRealServerFastHealthCheck_Type()
)
slbNewCfgRealServerFastHealthCheck.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerFastHealthCheck.setStatus("current")


class _SlbNewCfgRealServerSubdmac_Type(Integer32):
    """Custom type slbNewCfgRealServerSubdmac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgRealServerSubdmac_Type.__name__ = "Integer32"
_SlbNewCfgRealServerSubdmac_Object = MibTableColumn
slbNewCfgRealServerSubdmac = _SlbNewCfgRealServerSubdmac_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 28),
    _SlbNewCfgRealServerSubdmac_Type()
)
slbNewCfgRealServerSubdmac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerSubdmac.setStatus("current")


class _SlbNewCfgRealServerOverflow_Type(Integer32):
    """Custom type slbNewCfgRealServerOverflow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgRealServerOverflow_Type.__name__ = "Integer32"
_SlbNewCfgRealServerOverflow_Object = MibTableColumn
slbNewCfgRealServerOverflow = _SlbNewCfgRealServerOverflow_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 29),
    _SlbNewCfgRealServerOverflow_Type()
)
slbNewCfgRealServerOverflow.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerOverflow.setStatus("current")


class _SlbNewCfgRealServerBkpPreempt_Type(Integer32):
    """Custom type slbNewCfgRealServerBkpPreempt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgRealServerBkpPreempt_Type.__name__ = "Integer32"
_SlbNewCfgRealServerBkpPreempt_Object = MibTableColumn
slbNewCfgRealServerBkpPreempt = _SlbNewCfgRealServerBkpPreempt_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 30),
    _SlbNewCfgRealServerBkpPreempt_Type()
)
slbNewCfgRealServerBkpPreempt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerBkpPreempt.setStatus("current")


class _SlbNewCfgRealServerIpVer_Type(Integer32):
    """Custom type slbNewCfgRealServerIpVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_SlbNewCfgRealServerIpVer_Type.__name__ = "Integer32"
_SlbNewCfgRealServerIpVer_Object = MibTableColumn
slbNewCfgRealServerIpVer = _SlbNewCfgRealServerIpVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 31),
    _SlbNewCfgRealServerIpVer_Type()
)
slbNewCfgRealServerIpVer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerIpVer.setStatus("current")


class _SlbNewCfgRealServerIpv6Addr_Type(DisplayString):
    """Custom type slbNewCfgRealServerIpv6Addr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SlbNewCfgRealServerIpv6Addr_Type.__name__ = "DisplayString"
_SlbNewCfgRealServerIpv6Addr_Object = MibTableColumn
slbNewCfgRealServerIpv6Addr = _SlbNewCfgRealServerIpv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 32),
    _SlbNewCfgRealServerIpv6Addr_Type()
)
slbNewCfgRealServerIpv6Addr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServerIpv6Addr.setStatus("current")


class _SlbNewCfgRealServerNxtRportIdx_Type(Integer32):
    """Custom type slbNewCfgRealServerNxtRportIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 64),
    )


_SlbNewCfgRealServerNxtRportIdx_Type.__name__ = "Integer32"
_SlbNewCfgRealServerNxtRportIdx_Object = MibTableColumn
slbNewCfgRealServerNxtRportIdx = _SlbNewCfgRealServerNxtRportIdx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 33),
    _SlbNewCfgRealServerNxtRportIdx_Type()
)
slbNewCfgRealServerNxtRportIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgRealServerNxtRportIdx.setStatus("current")


class _SlbNewCfgRealServerNxtBuddyIdx_Type(Integer32):
    """Custom type slbNewCfgRealServerNxtBuddyIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4),
    )


_SlbNewCfgRealServerNxtBuddyIdx_Type.__name__ = "Integer32"
_SlbNewCfgRealServerNxtBuddyIdx_Object = MibTableColumn
slbNewCfgRealServerNxtBuddyIdx = _SlbNewCfgRealServerNxtBuddyIdx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 3, 1, 34),
    _SlbNewCfgRealServerNxtBuddyIdx_Type()
)
slbNewCfgRealServerNxtBuddyIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgRealServerNxtBuddyIdx.setStatus("current")
_SlbRealServPortTableMaxSize_Type = Integer32
_SlbRealServPortTableMaxSize_Object = MibScalar
slbRealServPortTableMaxSize = _SlbRealServPortTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 4),
    _SlbRealServPortTableMaxSize_Type()
)
slbRealServPortTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbRealServPortTableMaxSize.setStatus("current")
_SlbCurCfgRealServPortTable_Object = MibTable
slbCurCfgRealServPortTable = _SlbCurCfgRealServPortTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 5)
)
if mibBuilder.loadTexts:
    slbCurCfgRealServPortTable.setStatus("current")
_SlbCurCfgRealServPortEntry_Object = MibTableRow
slbCurCfgRealServPortEntry = _SlbCurCfgRealServPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 5, 1)
)
slbCurCfgRealServPortEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServPortIndex"),
)
if mibBuilder.loadTexts:
    slbCurCfgRealServPortEntry.setStatus("current")
_SlbCurCfgRealServIndex_Type = Integer32
_SlbCurCfgRealServIndex_Object = MibTableColumn
slbCurCfgRealServIndex = _SlbCurCfgRealServIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 5, 1, 1),
    _SlbCurCfgRealServIndex_Type()
)
slbCurCfgRealServIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServIndex.setStatus("current")
_SlbCurCfgRealServPortIndex_Type = Integer32
_SlbCurCfgRealServPortIndex_Object = MibTableColumn
slbCurCfgRealServPortIndex = _SlbCurCfgRealServPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 5, 1, 2),
    _SlbCurCfgRealServPortIndex_Type()
)
slbCurCfgRealServPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServPortIndex.setStatus("current")


class _SlbCurCfgRealServRealPort_Type(Integer32):
    """Custom type slbCurCfgRealServRealPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 65534),
    )


_SlbCurCfgRealServRealPort_Type.__name__ = "Integer32"
_SlbCurCfgRealServRealPort_Object = MibTableColumn
slbCurCfgRealServRealPort = _SlbCurCfgRealServRealPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 5, 1, 3),
    _SlbCurCfgRealServRealPort_Type()
)
slbCurCfgRealServRealPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServRealPort.setStatus("current")
_SlbNewCfgRealServPortTable_Object = MibTable
slbNewCfgRealServPortTable = _SlbNewCfgRealServPortTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 6)
)
if mibBuilder.loadTexts:
    slbNewCfgRealServPortTable.setStatus("current")
_SlbNewCfgRealServPortEntry_Object = MibTableRow
slbNewCfgRealServPortEntry = _SlbNewCfgRealServPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 6, 1)
)
slbNewCfgRealServPortEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgRealServIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgRealServPortIndex"),
)
if mibBuilder.loadTexts:
    slbNewCfgRealServPortEntry.setStatus("current")
_SlbNewCfgRealServIndex_Type = Integer32
_SlbNewCfgRealServIndex_Object = MibTableColumn
slbNewCfgRealServIndex = _SlbNewCfgRealServIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 6, 1, 1),
    _SlbNewCfgRealServIndex_Type()
)
slbNewCfgRealServIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgRealServIndex.setStatus("current")
_SlbNewCfgRealServPortIndex_Type = Integer32
_SlbNewCfgRealServPortIndex_Object = MibTableColumn
slbNewCfgRealServPortIndex = _SlbNewCfgRealServPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 6, 1, 2),
    _SlbNewCfgRealServPortIndex_Type()
)
slbNewCfgRealServPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgRealServPortIndex.setStatus("current")


class _SlbNewCfgRealServRealPort_Type(Integer32):
    """Custom type slbNewCfgRealServRealPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 65534),
    )


_SlbNewCfgRealServRealPort_Type.__name__ = "Integer32"
_SlbNewCfgRealServRealPort_Object = MibTableColumn
slbNewCfgRealServRealPort = _SlbNewCfgRealServRealPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 6, 1, 3),
    _SlbNewCfgRealServRealPort_Type()
)
slbNewCfgRealServRealPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServRealPort.setStatus("current")


class _SlbNewCfgRealServPortDelete_Type(Integer32):
    """Custom type slbNewCfgRealServPortDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewCfgRealServPortDelete_Type.__name__ = "Integer32"
_SlbNewCfgRealServPortDelete_Object = MibTableColumn
slbNewCfgRealServPortDelete = _SlbNewCfgRealServPortDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 6, 1, 4),
    _SlbNewCfgRealServPortDelete_Type()
)
slbNewCfgRealServPortDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServPortDelete.setStatus("current")


class _SlbNewCfgRealServRealPortFreeIdx_Type(Integer32):
    """Custom type slbNewCfgRealServRealPortFreeIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 64),
    )


_SlbNewCfgRealServRealPortFreeIdx_Type.__name__ = "Integer32"
_SlbNewCfgRealServRealPortFreeIdx_Object = MibTableColumn
slbNewCfgRealServRealPortFreeIdx = _SlbNewCfgRealServRealPortFreeIdx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 6, 1, 5),
    _SlbNewCfgRealServRealPortFreeIdx_Type()
)
slbNewCfgRealServRealPortFreeIdx.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgRealServRealPortFreeIdx.setStatus("current")
_SlbBuddyTableMaxSize_Type = Integer32
_SlbBuddyTableMaxSize_Object = MibScalar
slbBuddyTableMaxSize = _SlbBuddyTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 7),
    _SlbBuddyTableMaxSize_Type()
)
slbBuddyTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbBuddyTableMaxSize.setStatus("current")
_SlbCurCfgBuddyTable_Object = MibTable
slbCurCfgBuddyTable = _SlbCurCfgBuddyTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 8)
)
if mibBuilder.loadTexts:
    slbCurCfgBuddyTable.setStatus("current")
_SlbCurCfgBuddyEntry_Object = MibTableRow
slbCurCfgBuddyEntry = _SlbCurCfgBuddyEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 8, 1)
)
slbCurCfgBuddyEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealSerIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgBuddyIndex"),
)
if mibBuilder.loadTexts:
    slbCurCfgBuddyEntry.setStatus("current")
_SlbCurCfgRealSerIndex_Type = Integer32
_SlbCurCfgRealSerIndex_Object = MibTableColumn
slbCurCfgRealSerIndex = _SlbCurCfgRealSerIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 8, 1, 1),
    _SlbCurCfgRealSerIndex_Type()
)
slbCurCfgRealSerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealSerIndex.setStatus("current")
_SlbCurCfgBuddyIndex_Type = Integer32
_SlbCurCfgBuddyIndex_Object = MibTableColumn
slbCurCfgBuddyIndex = _SlbCurCfgBuddyIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 8, 1, 2),
    _SlbCurCfgBuddyIndex_Type()
)
slbCurCfgBuddyIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgBuddyIndex.setStatus("current")
_SlbCurCfgBuddyRealIndex_Type = Integer32
_SlbCurCfgBuddyRealIndex_Object = MibTableColumn
slbCurCfgBuddyRealIndex = _SlbCurCfgBuddyRealIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 8, 1, 3),
    _SlbCurCfgBuddyRealIndex_Type()
)
slbCurCfgBuddyRealIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgBuddyRealIndex.setStatus("current")
_SlbCurCfgBuddyGroupIndex_Type = Integer32
_SlbCurCfgBuddyGroupIndex_Object = MibTableColumn
slbCurCfgBuddyGroupIndex = _SlbCurCfgBuddyGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 8, 1, 4),
    _SlbCurCfgBuddyGroupIndex_Type()
)
slbCurCfgBuddyGroupIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgBuddyGroupIndex.setStatus("current")


class _SlbCurCfgBuddyService_Type(Integer32):
    """Custom type slbCurCfgBuddyService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(9, 65534),
    )


_SlbCurCfgBuddyService_Type.__name__ = "Integer32"
_SlbCurCfgBuddyService_Object = MibTableColumn
slbCurCfgBuddyService = _SlbCurCfgBuddyService_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 8, 1, 5),
    _SlbCurCfgBuddyService_Type()
)
slbCurCfgBuddyService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgBuddyService.setStatus("current")
_SlbNewCfgBuddyTable_Object = MibTable
slbNewCfgBuddyTable = _SlbNewCfgBuddyTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 9)
)
if mibBuilder.loadTexts:
    slbNewCfgBuddyTable.setStatus("current")
_SlbNewCfgBuddyEntry_Object = MibTableRow
slbNewCfgBuddyEntry = _SlbNewCfgBuddyEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 9, 1)
)
slbNewCfgBuddyEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgRealSerIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgBuddyIndex"),
)
if mibBuilder.loadTexts:
    slbNewCfgBuddyEntry.setStatus("current")
_SlbNewCfgRealSerIndex_Type = Integer32
_SlbNewCfgRealSerIndex_Object = MibTableColumn
slbNewCfgRealSerIndex = _SlbNewCfgRealSerIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 9, 1, 1),
    _SlbNewCfgRealSerIndex_Type()
)
slbNewCfgRealSerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgRealSerIndex.setStatus("current")
_SlbNewCfgBuddyIndex_Type = Integer32
_SlbNewCfgBuddyIndex_Object = MibTableColumn
slbNewCfgBuddyIndex = _SlbNewCfgBuddyIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 9, 1, 2),
    _SlbNewCfgBuddyIndex_Type()
)
slbNewCfgBuddyIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgBuddyIndex.setStatus("current")
_SlbNewCfgBuddyRealIndex_Type = Integer32
_SlbNewCfgBuddyRealIndex_Object = MibTableColumn
slbNewCfgBuddyRealIndex = _SlbNewCfgBuddyRealIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 9, 1, 3),
    _SlbNewCfgBuddyRealIndex_Type()
)
slbNewCfgBuddyRealIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgBuddyRealIndex.setStatus("current")
_SlbNewCfgBuddyGroupIndex_Type = Integer32
_SlbNewCfgBuddyGroupIndex_Object = MibTableColumn
slbNewCfgBuddyGroupIndex = _SlbNewCfgBuddyGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 9, 1, 4),
    _SlbNewCfgBuddyGroupIndex_Type()
)
slbNewCfgBuddyGroupIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgBuddyGroupIndex.setStatus("current")


class _SlbNewCfgBuddyService_Type(Integer32):
    """Custom type slbNewCfgBuddyService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(9, 65534),
    )


_SlbNewCfgBuddyService_Type.__name__ = "Integer32"
_SlbNewCfgBuddyService_Object = MibTableColumn
slbNewCfgBuddyService = _SlbNewCfgBuddyService_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 9, 1, 5),
    _SlbNewCfgBuddyService_Type()
)
slbNewCfgBuddyService.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgBuddyService.setStatus("current")


class _SlbNewCfgBuddyDelete_Type(Integer32):
    """Custom type slbNewCfgBuddyDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewCfgBuddyDelete_Type.__name__ = "Integer32"
_SlbNewCfgBuddyDelete_Object = MibTableColumn
slbNewCfgBuddyDelete = _SlbNewCfgBuddyDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 2, 9, 1, 6),
    _SlbNewCfgBuddyDelete_Type()
)
slbNewCfgBuddyDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgBuddyDelete.setStatus("current")
_RealServerGroupCfg_ObjectIdentity = ObjectIdentity
realServerGroupCfg = _RealServerGroupCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3)
)
_SlbGroupTableMaxSize_Type = Integer32
_SlbGroupTableMaxSize_Object = MibScalar
slbGroupTableMaxSize = _SlbGroupTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 1),
    _SlbGroupTableMaxSize_Type()
)
slbGroupTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbGroupTableMaxSize.setStatus("current")
_SlbGroupMaxIdsSize_Type = Integer32
_SlbGroupMaxIdsSize_Object = MibScalar
slbGroupMaxIdsSize = _SlbGroupMaxIdsSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 2),
    _SlbGroupMaxIdsSize_Type()
)
slbGroupMaxIdsSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbGroupMaxIdsSize.setStatus("current")
_SlbCurCfgGroupTable_Object = MibTable
slbCurCfgGroupTable = _SlbCurCfgGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3)
)
if mibBuilder.loadTexts:
    slbCurCfgGroupTable.setStatus("current")
_SlbCurCfgGroupEntry_Object = MibTableRow
slbCurCfgGroupEntry = _SlbCurCfgGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1)
)
slbCurCfgGroupEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgGroupIndex"),
)
if mibBuilder.loadTexts:
    slbCurCfgGroupEntry.setStatus("current")
_SlbCurCfgGroupIndex_Type = Integer32
_SlbCurCfgGroupIndex_Object = MibTableColumn
slbCurCfgGroupIndex = _SlbCurCfgGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 1),
    _SlbCurCfgGroupIndex_Type()
)
slbCurCfgGroupIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupIndex.setStatus("current")
_SlbCurCfgGroupRealServers_Type = OctetString
_SlbCurCfgGroupRealServers_Object = MibTableColumn
slbCurCfgGroupRealServers = _SlbCurCfgGroupRealServers_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 2),
    _SlbCurCfgGroupRealServers_Type()
)
slbCurCfgGroupRealServers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupRealServers.setStatus("current")


class _SlbCurCfgGroupMetric_Type(Integer32):
    """Custom type slbCurCfgGroupMetric based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("bandwidth", 6),
          ("hash", 4),
          ("leastConnections", 2),
          ("minMisses", 3),
          ("phash", 7),
          ("response", 5),
          ("roundRobin", 1),
          ("svcLeast", 8))
    )


_SlbCurCfgGroupMetric_Type.__name__ = "Integer32"
_SlbCurCfgGroupMetric_Object = MibTableColumn
slbCurCfgGroupMetric = _SlbCurCfgGroupMetric_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 3),
    _SlbCurCfgGroupMetric_Type()
)
slbCurCfgGroupMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupMetric.setStatus("current")
_SlbCurCfgGroupBackupServer_Type = Integer32
_SlbCurCfgGroupBackupServer_Object = MibTableColumn
slbCurCfgGroupBackupServer = _SlbCurCfgGroupBackupServer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 4),
    _SlbCurCfgGroupBackupServer_Type()
)
slbCurCfgGroupBackupServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupBackupServer.setStatus("current")
_SlbCurCfgGroupBackupGroup_Type = Integer32
_SlbCurCfgGroupBackupGroup_Object = MibTableColumn
slbCurCfgGroupBackupGroup = _SlbCurCfgGroupBackupGroup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 5),
    _SlbCurCfgGroupBackupGroup_Type()
)
slbCurCfgGroupBackupGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupBackupGroup.setStatus("current")


class _SlbCurCfgGroupHealthCheckUrl_Type(DisplayString):
    """Custom type slbCurCfgGroupHealthCheckUrl based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 127),
    )


_SlbCurCfgGroupHealthCheckUrl_Type.__name__ = "DisplayString"
_SlbCurCfgGroupHealthCheckUrl_Object = MibTableColumn
slbCurCfgGroupHealthCheckUrl = _SlbCurCfgGroupHealthCheckUrl_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 6),
    _SlbCurCfgGroupHealthCheckUrl_Type()
)
slbCurCfgGroupHealthCheckUrl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupHealthCheckUrl.setStatus("current")


class _SlbCurCfgGroupHealthCheckLayer_Type(Integer32):
    """Custom type slbCurCfgGroupHealthCheckLayer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137,
              138,
              139,
              140,
              141,
              142,
              143,
              144,
              145,
              146,
              147,
              148,
              149,
              150,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              158,
              159,
              160,
              161,
              162,
              163)
        )
    )
    namedValues = NamedValues(
        *(("arp", 33),
          ("dhcp", 47),
          ("dns", 4),
          ("ftp", 8),
          ("http", 3),
          ("httphead", 44),
          ("icmp", 1),
          ("imap", 9),
          ("ldap", 31),
          ("link", 28),
          ("nntp", 7),
          ("pop3", 6),
          ("radius", 10),
          ("radiusaa", 48),
          ("radiusacs", 39),
          ("rtsp", 42),
          ("script1", 12),
          ("script10", 21),
          ("script11", 22),
          ("script12", 23),
          ("script13", 24),
          ("script14", 25),
          ("script15", 26),
          ("script16", 27),
          ("script17", 116),
          ("script18", 117),
          ("script19", 118),
          ("script2", 13),
          ("script20", 119),
          ("script21", 120),
          ("script22", 121),
          ("script23", 122),
          ("script24", 123),
          ("script25", 124),
          ("script26", 125),
          ("script27", 126),
          ("script28", 127),
          ("script29", 128),
          ("script3", 14),
          ("script30", 129),
          ("script31", 130),
          ("script32", 131),
          ("script33", 132),
          ("script34", 133),
          ("script35", 134),
          ("script36", 135),
          ("script37", 136),
          ("script38", 137),
          ("script39", 138),
          ("script4", 15),
          ("script40", 139),
          ("script41", 140),
          ("script42", 141),
          ("script43", 142),
          ("script44", 143),
          ("script45", 144),
          ("script46", 145),
          ("script47", 146),
          ("script48", 147),
          ("script49", 148),
          ("script5", 16),
          ("script50", 149),
          ("script51", 150),
          ("script52", 151),
          ("script53", 152),
          ("script54", 153),
          ("script55", 154),
          ("script56", 155),
          ("script57", 156),
          ("script58", 157),
          ("script59", 158),
          ("script6", 17),
          ("script60", 159),
          ("script61", 160),
          ("script62", 161),
          ("script63", 162),
          ("script64", 163),
          ("script7", 18),
          ("script8", 19),
          ("script9", 20),
          ("sipoptions", 45),
          ("sipping", 43),
          ("smtp", 5),
          ("snmp1", 34),
          ("snmp2", 35),
          ("snmp3", 36),
          ("snmp4", 37),
          ("snmp5", 38),
          ("sslh", 11),
          ("sslv3", 49),
          ("tcp", 2),
          ("tftp", 40),
          ("udpdns", 32),
          ("wsp", 29),
          ("wtls", 30),
          ("wtp", 41),
          ("wts", 46))
    )


_SlbCurCfgGroupHealthCheckLayer_Type.__name__ = "Integer32"
_SlbCurCfgGroupHealthCheckLayer_Object = MibTableColumn
slbCurCfgGroupHealthCheckLayer = _SlbCurCfgGroupHealthCheckLayer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 7),
    _SlbCurCfgGroupHealthCheckLayer_Type()
)
slbCurCfgGroupHealthCheckLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupHealthCheckLayer.setStatus("current")


class _SlbCurCfgGroupName_Type(DisplayString):
    """Custom type slbCurCfgGroupName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurCfgGroupName_Type.__name__ = "DisplayString"
_SlbCurCfgGroupName_Object = MibTableColumn
slbCurCfgGroupName = _SlbCurCfgGroupName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 8),
    _SlbCurCfgGroupName_Type()
)
slbCurCfgGroupName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupName.setStatus("current")


class _SlbCurCfgGroupRealThreshold_Type(Integer32):
    """Custom type slbCurCfgGroupRealThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_SlbCurCfgGroupRealThreshold_Type.__name__ = "Integer32"
_SlbCurCfgGroupRealThreshold_Object = MibTableColumn
slbCurCfgGroupRealThreshold = _SlbCurCfgGroupRealThreshold_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 9),
    _SlbCurCfgGroupRealThreshold_Type()
)
slbCurCfgGroupRealThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupRealThreshold.setStatus("current")


class _SlbCurCfgGroupVipHealthCheck_Type(Integer32):
    """Custom type slbCurCfgGroupVipHealthCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgGroupVipHealthCheck_Type.__name__ = "Integer32"
_SlbCurCfgGroupVipHealthCheck_Object = MibTableColumn
slbCurCfgGroupVipHealthCheck = _SlbCurCfgGroupVipHealthCheck_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 10),
    _SlbCurCfgGroupVipHealthCheck_Type()
)
slbCurCfgGroupVipHealthCheck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupVipHealthCheck.setStatus("current")


class _SlbCurCfgGroupIdsState_Type(Integer32):
    """Custom type slbCurCfgGroupIdsState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgGroupIdsState_Type.__name__ = "Integer32"
_SlbCurCfgGroupIdsState_Object = MibTableColumn
slbCurCfgGroupIdsState = _SlbCurCfgGroupIdsState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 11),
    _SlbCurCfgGroupIdsState_Type()
)
slbCurCfgGroupIdsState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupIdsState.setStatus("current")


class _SlbCurCfgGroupIdsPort_Type(Integer32):
    """Custom type slbCurCfgGroupIdsPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SlbCurCfgGroupIdsPort_Type.__name__ = "Integer32"
_SlbCurCfgGroupIdsPort_Object = MibTableColumn
slbCurCfgGroupIdsPort = _SlbCurCfgGroupIdsPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 12),
    _SlbCurCfgGroupIdsPort_Type()
)
slbCurCfgGroupIdsPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupIdsPort.setStatus("current")


class _SlbCurCfgGroupIdsFlood_Type(Integer32):
    """Custom type slbCurCfgGroupIdsFlood based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgGroupIdsFlood_Type.__name__ = "Integer32"
_SlbCurCfgGroupIdsFlood_Object = MibTableColumn
slbCurCfgGroupIdsFlood = _SlbCurCfgGroupIdsFlood_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 13),
    _SlbCurCfgGroupIdsFlood_Type()
)
slbCurCfgGroupIdsFlood.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupIdsFlood.setStatus("current")


class _SlbCurCfgGroupMinmissHash_Type(Integer32):
    """Custom type slbCurCfgGroupMinmissHash based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("minmiss-24", 1),
          ("minmiss-32", 2))
    )


_SlbCurCfgGroupMinmissHash_Type.__name__ = "Integer32"
_SlbCurCfgGroupMinmissHash_Object = MibTableColumn
slbCurCfgGroupMinmissHash = _SlbCurCfgGroupMinmissHash_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 14),
    _SlbCurCfgGroupMinmissHash_Type()
)
slbCurCfgGroupMinmissHash.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupMinmissHash.setStatus("current")
_SlbCurCfgGroupPhashMask_Type = IpAddress
_SlbCurCfgGroupPhashMask_Object = MibTableColumn
slbCurCfgGroupPhashMask = _SlbCurCfgGroupPhashMask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 15),
    _SlbCurCfgGroupPhashMask_Type()
)
slbCurCfgGroupPhashMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupPhashMask.setStatus("current")


class _SlbCurCfgGroupRmetric_Type(Integer32):
    """Custom type slbCurCfgGroupRmetric based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("hash", 2),
          ("leastConnections", 3),
          ("roundRobin", 1))
    )


_SlbCurCfgGroupRmetric_Type.__name__ = "Integer32"
_SlbCurCfgGroupRmetric_Object = MibTableColumn
slbCurCfgGroupRmetric = _SlbCurCfgGroupRmetric_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 16),
    _SlbCurCfgGroupRmetric_Type()
)
slbCurCfgGroupRmetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupRmetric.setStatus("current")


class _SlbCurCfgGroupHealthCheckFormula_Type(DisplayString):
    """Custom type slbCurCfgGroupHealthCheckFormula based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurCfgGroupHealthCheckFormula_Type.__name__ = "DisplayString"
_SlbCurCfgGroupHealthCheckFormula_Object = MibTableColumn
slbCurCfgGroupHealthCheckFormula = _SlbCurCfgGroupHealthCheckFormula_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 17),
    _SlbCurCfgGroupHealthCheckFormula_Type()
)
slbCurCfgGroupHealthCheckFormula.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupHealthCheckFormula.setStatus("current")


class _SlbCurCfgGroupOperatorAccess_Type(Integer32):
    """Custom type slbCurCfgGroupOperatorAccess based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgGroupOperatorAccess_Type.__name__ = "Integer32"
_SlbCurCfgGroupOperatorAccess_Object = MibTableColumn
slbCurCfgGroupOperatorAccess = _SlbCurCfgGroupOperatorAccess_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 18),
    _SlbCurCfgGroupOperatorAccess_Type()
)
slbCurCfgGroupOperatorAccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupOperatorAccess.setStatus("current")
_SlbCurCfgGroupWlm_Type = Integer32
_SlbCurCfgGroupWlm_Object = MibTableColumn
slbCurCfgGroupWlm = _SlbCurCfgGroupWlm_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 19),
    _SlbCurCfgGroupWlm_Type()
)
slbCurCfgGroupWlm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupWlm.setStatus("current")


class _SlbCurCfgGroupRadiusAuthenString_Type(DisplayString):
    """Custom type slbCurCfgGroupRadiusAuthenString based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurCfgGroupRadiusAuthenString_Type.__name__ = "DisplayString"
_SlbCurCfgGroupRadiusAuthenString_Object = MibTableColumn
slbCurCfgGroupRadiusAuthenString = _SlbCurCfgGroupRadiusAuthenString_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 20),
    _SlbCurCfgGroupRadiusAuthenString_Type()
)
slbCurCfgGroupRadiusAuthenString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupRadiusAuthenString.setStatus("current")
_SlbCurCfgGroupSecBackupGroup_Type = Integer32
_SlbCurCfgGroupSecBackupGroup_Object = MibTableColumn
slbCurCfgGroupSecBackupGroup = _SlbCurCfgGroupSecBackupGroup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 21),
    _SlbCurCfgGroupSecBackupGroup_Type()
)
slbCurCfgGroupSecBackupGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupSecBackupGroup.setStatus("current")
_SlbCurCfgGroupSlowstart_Type = Integer32
_SlbCurCfgGroupSlowstart_Object = MibTableColumn
slbCurCfgGroupSlowstart = _SlbCurCfgGroupSlowstart_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 22),
    _SlbCurCfgGroupSlowstart_Type()
)
slbCurCfgGroupSlowstart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupSlowstart.setStatus("current")
_SlbCurCfgGroupMinThreshold_Type = Integer32
_SlbCurCfgGroupMinThreshold_Object = MibTableColumn
slbCurCfgGroupMinThreshold = _SlbCurCfgGroupMinThreshold_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 23),
    _SlbCurCfgGroupMinThreshold_Type()
)
slbCurCfgGroupMinThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupMinThreshold.setStatus("current")
_SlbCurCfgGroupMaxThreshold_Type = Integer32
_SlbCurCfgGroupMaxThreshold_Object = MibTableColumn
slbCurCfgGroupMaxThreshold = _SlbCurCfgGroupMaxThreshold_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 24),
    _SlbCurCfgGroupMaxThreshold_Type()
)
slbCurCfgGroupMaxThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupMaxThreshold.setStatus("current")


class _SlbCurCfgGroupIpVer_Type(Integer32):
    """Custom type slbCurCfgGroupIpVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2),
          ("mixed", 3))
    )


_SlbCurCfgGroupIpVer_Type.__name__ = "Integer32"
_SlbCurCfgGroupIpVer_Object = MibTableColumn
slbCurCfgGroupIpVer = _SlbCurCfgGroupIpVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 25),
    _SlbCurCfgGroupIpVer_Type()
)
slbCurCfgGroupIpVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupIpVer.setStatus("current")


class _SlbCurCfgGroupBackup_Type(DisplayString):
    """Custom type slbCurCfgGroupBackup based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SlbCurCfgGroupBackup_Type.__name__ = "DisplayString"
_SlbCurCfgGroupBackup_Object = MibTableColumn
slbCurCfgGroupBackup = _SlbCurCfgGroupBackup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 3, 1, 26),
    _SlbCurCfgGroupBackup_Type()
)
slbCurCfgGroupBackup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupBackup.setStatus("current")
_SlbNewCfgGroupTable_Object = MibTable
slbNewCfgGroupTable = _SlbNewCfgGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4)
)
if mibBuilder.loadTexts:
    slbNewCfgGroupTable.setStatus("current")
_SlbNewCfgGroupEntry_Object = MibTableRow
slbNewCfgGroupEntry = _SlbNewCfgGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1)
)
slbNewCfgGroupEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgGroupIndex"),
)
if mibBuilder.loadTexts:
    slbNewCfgGroupEntry.setStatus("current")
_SlbNewCfgGroupIndex_Type = Integer32
_SlbNewCfgGroupIndex_Object = MibTableColumn
slbNewCfgGroupIndex = _SlbNewCfgGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 1),
    _SlbNewCfgGroupIndex_Type()
)
slbNewCfgGroupIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgGroupIndex.setStatus("current")
_SlbNewCfgGroupRealServers_Type = OctetString
_SlbNewCfgGroupRealServers_Object = MibTableColumn
slbNewCfgGroupRealServers = _SlbNewCfgGroupRealServers_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 2),
    _SlbNewCfgGroupRealServers_Type()
)
slbNewCfgGroupRealServers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgGroupRealServers.setStatus("current")
_SlbNewCfgGroupAddServer_Type = Integer32
_SlbNewCfgGroupAddServer_Object = MibTableColumn
slbNewCfgGroupAddServer = _SlbNewCfgGroupAddServer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 3),
    _SlbNewCfgGroupAddServer_Type()
)
slbNewCfgGroupAddServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupAddServer.setStatus("current")
_SlbNewCfgGroupRemoveServer_Type = Integer32
_SlbNewCfgGroupRemoveServer_Object = MibTableColumn
slbNewCfgGroupRemoveServer = _SlbNewCfgGroupRemoveServer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 4),
    _SlbNewCfgGroupRemoveServer_Type()
)
slbNewCfgGroupRemoveServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupRemoveServer.setStatus("current")


class _SlbNewCfgGroupMetric_Type(Integer32):
    """Custom type slbNewCfgGroupMetric based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("bandwidth", 6),
          ("hash", 4),
          ("leastConnections", 2),
          ("minMisses", 3),
          ("phash", 7),
          ("response", 5),
          ("roundRobin", 1),
          ("svcLeast", 8))
    )


_SlbNewCfgGroupMetric_Type.__name__ = "Integer32"
_SlbNewCfgGroupMetric_Object = MibTableColumn
slbNewCfgGroupMetric = _SlbNewCfgGroupMetric_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 5),
    _SlbNewCfgGroupMetric_Type()
)
slbNewCfgGroupMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupMetric.setStatus("current")
_SlbNewCfgGroupBackupServer_Type = Integer32
_SlbNewCfgGroupBackupServer_Object = MibTableColumn
slbNewCfgGroupBackupServer = _SlbNewCfgGroupBackupServer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 6),
    _SlbNewCfgGroupBackupServer_Type()
)
slbNewCfgGroupBackupServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupBackupServer.setStatus("current")
_SlbNewCfgGroupBackupGroup_Type = Integer32
_SlbNewCfgGroupBackupGroup_Object = MibTableColumn
slbNewCfgGroupBackupGroup = _SlbNewCfgGroupBackupGroup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 7),
    _SlbNewCfgGroupBackupGroup_Type()
)
slbNewCfgGroupBackupGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupBackupGroup.setStatus("current")


class _SlbNewCfgGroupHealthCheckUrl_Type(DisplayString):
    """Custom type slbNewCfgGroupHealthCheckUrl based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 127),
    )


_SlbNewCfgGroupHealthCheckUrl_Type.__name__ = "DisplayString"
_SlbNewCfgGroupHealthCheckUrl_Object = MibTableColumn
slbNewCfgGroupHealthCheckUrl = _SlbNewCfgGroupHealthCheckUrl_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 8),
    _SlbNewCfgGroupHealthCheckUrl_Type()
)
slbNewCfgGroupHealthCheckUrl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupHealthCheckUrl.setStatus("current")


class _SlbNewCfgGroupHealthCheckLayer_Type(Integer32):
    """Custom type slbNewCfgGroupHealthCheckLayer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137,
              138,
              139,
              140,
              141,
              142,
              143,
              144,
              145,
              146,
              147,
              148,
              149,
              150,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              158,
              159,
              160,
              161,
              162,
              163)
        )
    )
    namedValues = NamedValues(
        *(("arp", 33),
          ("dhcp", 47),
          ("dns", 4),
          ("ftp", 8),
          ("http", 3),
          ("httphead", 44),
          ("icmp", 1),
          ("imap", 9),
          ("ldap", 31),
          ("link", 28),
          ("nntp", 7),
          ("pop3", 6),
          ("radius", 10),
          ("radiusaa", 48),
          ("radiusacs", 39),
          ("rtsp", 42),
          ("script1", 12),
          ("script10", 21),
          ("script11", 22),
          ("script12", 23),
          ("script13", 24),
          ("script14", 25),
          ("script15", 26),
          ("script16", 27),
          ("script17", 116),
          ("script18", 117),
          ("script19", 118),
          ("script2", 13),
          ("script20", 119),
          ("script21", 120),
          ("script22", 121),
          ("script23", 122),
          ("script24", 123),
          ("script25", 124),
          ("script26", 125),
          ("script27", 126),
          ("script28", 127),
          ("script29", 128),
          ("script3", 14),
          ("script30", 129),
          ("script31", 130),
          ("script32", 131),
          ("script33", 132),
          ("script34", 133),
          ("script35", 134),
          ("script36", 135),
          ("script37", 136),
          ("script38", 137),
          ("script39", 138),
          ("script4", 15),
          ("script40", 139),
          ("script41", 140),
          ("script42", 141),
          ("script43", 142),
          ("script44", 143),
          ("script45", 144),
          ("script46", 145),
          ("script47", 146),
          ("script48", 147),
          ("script49", 148),
          ("script5", 16),
          ("script50", 149),
          ("script51", 150),
          ("script52", 151),
          ("script53", 152),
          ("script54", 153),
          ("script55", 154),
          ("script56", 155),
          ("script57", 156),
          ("script58", 157),
          ("script59", 158),
          ("script6", 17),
          ("script60", 159),
          ("script61", 160),
          ("script62", 161),
          ("script63", 162),
          ("script64", 163),
          ("script7", 18),
          ("script8", 19),
          ("script9", 20),
          ("sipoptions", 45),
          ("sipping", 43),
          ("smtp", 5),
          ("snmp1", 34),
          ("snmp2", 35),
          ("snmp3", 36),
          ("snmp4", 37),
          ("snmp5", 38),
          ("sslh", 11),
          ("sslv3", 49),
          ("tcp", 2),
          ("tftp", 40),
          ("udpdns", 32),
          ("wsp", 29),
          ("wtls", 30),
          ("wtp", 41),
          ("wts", 46))
    )


_SlbNewCfgGroupHealthCheckLayer_Type.__name__ = "Integer32"
_SlbNewCfgGroupHealthCheckLayer_Object = MibTableColumn
slbNewCfgGroupHealthCheckLayer = _SlbNewCfgGroupHealthCheckLayer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 9),
    _SlbNewCfgGroupHealthCheckLayer_Type()
)
slbNewCfgGroupHealthCheckLayer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupHealthCheckLayer.setStatus("current")


class _SlbNewCfgGroupName_Type(DisplayString):
    """Custom type slbNewCfgGroupName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewCfgGroupName_Type.__name__ = "DisplayString"
_SlbNewCfgGroupName_Object = MibTableColumn
slbNewCfgGroupName = _SlbNewCfgGroupName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 10),
    _SlbNewCfgGroupName_Type()
)
slbNewCfgGroupName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupName.setStatus("current")


class _SlbNewCfgGroupRealThreshold_Type(Integer32):
    """Custom type slbNewCfgGroupRealThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_SlbNewCfgGroupRealThreshold_Type.__name__ = "Integer32"
_SlbNewCfgGroupRealThreshold_Object = MibTableColumn
slbNewCfgGroupRealThreshold = _SlbNewCfgGroupRealThreshold_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 11),
    _SlbNewCfgGroupRealThreshold_Type()
)
slbNewCfgGroupRealThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupRealThreshold.setStatus("current")


class _SlbNewCfgGroupVipHealthCheck_Type(Integer32):
    """Custom type slbNewCfgGroupVipHealthCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgGroupVipHealthCheck_Type.__name__ = "Integer32"
_SlbNewCfgGroupVipHealthCheck_Object = MibTableColumn
slbNewCfgGroupVipHealthCheck = _SlbNewCfgGroupVipHealthCheck_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 12),
    _SlbNewCfgGroupVipHealthCheck_Type()
)
slbNewCfgGroupVipHealthCheck.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupVipHealthCheck.setStatus("current")


class _SlbNewCfgGroupIdsState_Type(Integer32):
    """Custom type slbNewCfgGroupIdsState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgGroupIdsState_Type.__name__ = "Integer32"
_SlbNewCfgGroupIdsState_Object = MibTableColumn
slbNewCfgGroupIdsState = _SlbNewCfgGroupIdsState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 13),
    _SlbNewCfgGroupIdsState_Type()
)
slbNewCfgGroupIdsState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupIdsState.setStatus("current")


class _SlbNewCfgGroupIdsPort_Type(Integer32):
    """Custom type slbNewCfgGroupIdsPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SlbNewCfgGroupIdsPort_Type.__name__ = "Integer32"
_SlbNewCfgGroupIdsPort_Object = MibTableColumn
slbNewCfgGroupIdsPort = _SlbNewCfgGroupIdsPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 14),
    _SlbNewCfgGroupIdsPort_Type()
)
slbNewCfgGroupIdsPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupIdsPort.setStatus("current")


class _SlbNewCfgGroupDelete_Type(Integer32):
    """Custom type slbNewCfgGroupDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewCfgGroupDelete_Type.__name__ = "Integer32"
_SlbNewCfgGroupDelete_Object = MibTableColumn
slbNewCfgGroupDelete = _SlbNewCfgGroupDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 15),
    _SlbNewCfgGroupDelete_Type()
)
slbNewCfgGroupDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupDelete.setStatus("current")


class _SlbNewCfgGroupIdsFlood_Type(Integer32):
    """Custom type slbNewCfgGroupIdsFlood based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgGroupIdsFlood_Type.__name__ = "Integer32"
_SlbNewCfgGroupIdsFlood_Object = MibTableColumn
slbNewCfgGroupIdsFlood = _SlbNewCfgGroupIdsFlood_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 16),
    _SlbNewCfgGroupIdsFlood_Type()
)
slbNewCfgGroupIdsFlood.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupIdsFlood.setStatus("current")


class _SlbNewCfgGroupMinmissHash_Type(Integer32):
    """Custom type slbNewCfgGroupMinmissHash based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("minmiss-24", 1),
          ("minmiss-32", 2))
    )


_SlbNewCfgGroupMinmissHash_Type.__name__ = "Integer32"
_SlbNewCfgGroupMinmissHash_Object = MibTableColumn
slbNewCfgGroupMinmissHash = _SlbNewCfgGroupMinmissHash_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 17),
    _SlbNewCfgGroupMinmissHash_Type()
)
slbNewCfgGroupMinmissHash.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupMinmissHash.setStatus("current")
_SlbNewCfgGroupPhashMask_Type = IpAddress
_SlbNewCfgGroupPhashMask_Object = MibTableColumn
slbNewCfgGroupPhashMask = _SlbNewCfgGroupPhashMask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 18),
    _SlbNewCfgGroupPhashMask_Type()
)
slbNewCfgGroupPhashMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupPhashMask.setStatus("current")


class _SlbNewCfgGroupRmetric_Type(Integer32):
    """Custom type slbNewCfgGroupRmetric based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("hash", 2),
          ("leastConnections", 3),
          ("roundRobin", 1))
    )


_SlbNewCfgGroupRmetric_Type.__name__ = "Integer32"
_SlbNewCfgGroupRmetric_Object = MibTableColumn
slbNewCfgGroupRmetric = _SlbNewCfgGroupRmetric_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 19),
    _SlbNewCfgGroupRmetric_Type()
)
slbNewCfgGroupRmetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupRmetric.setStatus("current")


class _SlbNewCfgGroupHealthCheckFormula_Type(DisplayString):
    """Custom type slbNewCfgGroupHealthCheckFormula based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewCfgGroupHealthCheckFormula_Type.__name__ = "DisplayString"
_SlbNewCfgGroupHealthCheckFormula_Object = MibTableColumn
slbNewCfgGroupHealthCheckFormula = _SlbNewCfgGroupHealthCheckFormula_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 20),
    _SlbNewCfgGroupHealthCheckFormula_Type()
)
slbNewCfgGroupHealthCheckFormula.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupHealthCheckFormula.setStatus("current")


class _SlbNewCfgGroupOperatorAccess_Type(Integer32):
    """Custom type slbNewCfgGroupOperatorAccess based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgGroupOperatorAccess_Type.__name__ = "Integer32"
_SlbNewCfgGroupOperatorAccess_Object = MibTableColumn
slbNewCfgGroupOperatorAccess = _SlbNewCfgGroupOperatorAccess_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 21),
    _SlbNewCfgGroupOperatorAccess_Type()
)
slbNewCfgGroupOperatorAccess.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupOperatorAccess.setStatus("current")
_SlbNewCfgGroupWlm_Type = Integer32
_SlbNewCfgGroupWlm_Object = MibTableColumn
slbNewCfgGroupWlm = _SlbNewCfgGroupWlm_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 22),
    _SlbNewCfgGroupWlm_Type()
)
slbNewCfgGroupWlm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupWlm.setStatus("current")


class _SlbNewCfgGroupRadiusAuthenString_Type(DisplayString):
    """Custom type slbNewCfgGroupRadiusAuthenString based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewCfgGroupRadiusAuthenString_Type.__name__ = "DisplayString"
_SlbNewCfgGroupRadiusAuthenString_Object = MibTableColumn
slbNewCfgGroupRadiusAuthenString = _SlbNewCfgGroupRadiusAuthenString_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 23),
    _SlbNewCfgGroupRadiusAuthenString_Type()
)
slbNewCfgGroupRadiusAuthenString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgGroupRadiusAuthenString.setStatus("current")
_SlbNewCfgGroupSecBackupGroup_Type = Integer32
_SlbNewCfgGroupSecBackupGroup_Object = MibTableColumn
slbNewCfgGroupSecBackupGroup = _SlbNewCfgGroupSecBackupGroup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 24),
    _SlbNewCfgGroupSecBackupGroup_Type()
)
slbNewCfgGroupSecBackupGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupSecBackupGroup.setStatus("current")
_SlbNewCfgGroupSlowstart_Type = Integer32
_SlbNewCfgGroupSlowstart_Object = MibTableColumn
slbNewCfgGroupSlowstart = _SlbNewCfgGroupSlowstart_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 25),
    _SlbNewCfgGroupSlowstart_Type()
)
slbNewCfgGroupSlowstart.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupSlowstart.setStatus("current")
_SlbNewCfgGroupMinThreshold_Type = Integer32
_SlbNewCfgGroupMinThreshold_Object = MibTableColumn
slbNewCfgGroupMinThreshold = _SlbNewCfgGroupMinThreshold_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 26),
    _SlbNewCfgGroupMinThreshold_Type()
)
slbNewCfgGroupMinThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupMinThreshold.setStatus("current")
_SlbNewCfgGroupMaxThreshold_Type = Integer32
_SlbNewCfgGroupMaxThreshold_Object = MibTableColumn
slbNewCfgGroupMaxThreshold = _SlbNewCfgGroupMaxThreshold_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 27),
    _SlbNewCfgGroupMaxThreshold_Type()
)
slbNewCfgGroupMaxThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupMaxThreshold.setStatus("current")


class _SlbNewCfgGroupIpVer_Type(Integer32):
    """Custom type slbNewCfgGroupIpVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2),
          ("mixed", 3))
    )


_SlbNewCfgGroupIpVer_Type.__name__ = "Integer32"
_SlbNewCfgGroupIpVer_Object = MibTableColumn
slbNewCfgGroupIpVer = _SlbNewCfgGroupIpVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 28),
    _SlbNewCfgGroupIpVer_Type()
)
slbNewCfgGroupIpVer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupIpVer.setStatus("current")


class _SlbNewCfgGroupBackup_Type(DisplayString):
    """Custom type slbNewCfgGroupBackup based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SlbNewCfgGroupBackup_Type.__name__ = "DisplayString"
_SlbNewCfgGroupBackup_Object = MibTableColumn
slbNewCfgGroupBackup = _SlbNewCfgGroupBackup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 29),
    _SlbNewCfgGroupBackup_Type()
)
slbNewCfgGroupBackup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgGroupBackup.setStatus("current")


class _SlbNewCfgGroupBackupType_Type(Integer32):
    """Custom type slbNewCfgGroupBackupType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("group", 3),
          ("none", 1),
          ("server", 2))
    )


_SlbNewCfgGroupBackupType_Type.__name__ = "Integer32"
_SlbNewCfgGroupBackupType_Object = MibTableColumn
slbNewCfgGroupBackupType = _SlbNewCfgGroupBackupType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 4, 1, 30),
    _SlbNewCfgGroupBackupType_Type()
)
slbNewCfgGroupBackupType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupBackupType.setStatus("current")
_SlbCurCfgGroupRealServerTable_Object = MibTable
slbCurCfgGroupRealServerTable = _SlbCurCfgGroupRealServerTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 5)
)
if mibBuilder.loadTexts:
    slbCurCfgGroupRealServerTable.setStatus("current")
_SlbCurCfgGroupRealServerEntry_Object = MibTableRow
slbCurCfgGroupRealServerEntry = _SlbCurCfgGroupRealServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 5, 1)
)
slbCurCfgGroupRealServerEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServGroupIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgGroupRealServIndex"),
)
if mibBuilder.loadTexts:
    slbCurCfgGroupRealServerEntry.setStatus("current")
_SlbCurCfgRealServGroupIndex_Type = Integer32
_SlbCurCfgRealServGroupIndex_Object = MibTableColumn
slbCurCfgRealServGroupIndex = _SlbCurCfgRealServGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 5, 1, 1),
    _SlbCurCfgRealServGroupIndex_Type()
)
slbCurCfgRealServGroupIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgRealServGroupIndex.setStatus("current")
_SlbCurCfgGroupRealServIndex_Type = Integer32
_SlbCurCfgGroupRealServIndex_Object = MibTableColumn
slbCurCfgGroupRealServIndex = _SlbCurCfgGroupRealServIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 5, 1, 2),
    _SlbCurCfgGroupRealServIndex_Type()
)
slbCurCfgGroupRealServIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupRealServIndex.setStatus("current")


class _SlbCurCfgGroupRealServerState_Type(Integer32):
    """Custom type slbCurCfgGroupRealServerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgGroupRealServerState_Type.__name__ = "Integer32"
_SlbCurCfgGroupRealServerState_Object = MibTableColumn
slbCurCfgGroupRealServerState = _SlbCurCfgGroupRealServerState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 5, 1, 3),
    _SlbCurCfgGroupRealServerState_Type()
)
slbCurCfgGroupRealServerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgGroupRealServerState.setStatus("current")
_SlbNewCfgGroupRealServerTable_Object = MibTable
slbNewCfgGroupRealServerTable = _SlbNewCfgGroupRealServerTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 6)
)
if mibBuilder.loadTexts:
    slbNewCfgGroupRealServerTable.setStatus("current")
_SlbNewCfgGroupRealServerEntry_Object = MibTableRow
slbNewCfgGroupRealServerEntry = _SlbNewCfgGroupRealServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 6, 1)
)
slbNewCfgGroupRealServerEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgRealServGroupIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgGroupRealServIndex"),
)
if mibBuilder.loadTexts:
    slbNewCfgGroupRealServerEntry.setStatus("current")
_SlbNewCfgRealServGroupIndex_Type = Integer32
_SlbNewCfgRealServGroupIndex_Object = MibTableColumn
slbNewCfgRealServGroupIndex = _SlbNewCfgRealServGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 6, 1, 1),
    _SlbNewCfgRealServGroupIndex_Type()
)
slbNewCfgRealServGroupIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgRealServGroupIndex.setStatus("current")
_SlbNewCfgGroupRealServIndex_Type = Integer32
_SlbNewCfgGroupRealServIndex_Object = MibTableColumn
slbNewCfgGroupRealServIndex = _SlbNewCfgGroupRealServIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 6, 1, 2),
    _SlbNewCfgGroupRealServIndex_Type()
)
slbNewCfgGroupRealServIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgGroupRealServIndex.setStatus("current")


class _SlbNewCfgGroupRealServerState_Type(Integer32):
    """Custom type slbNewCfgGroupRealServerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgGroupRealServerState_Type.__name__ = "Integer32"
_SlbNewCfgGroupRealServerState_Object = MibTableColumn
slbNewCfgGroupRealServerState = _SlbNewCfgGroupRealServerState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 3, 6, 1, 3),
    _SlbNewCfgGroupRealServerState_Type()
)
slbNewCfgGroupRealServerState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgGroupRealServerState.setStatus("current")
_VirtualServerCfg_ObjectIdentity = ObjectIdentity
virtualServerCfg = _VirtualServerCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4)
)
_SlbVirtServerTableMaxSize_Type = Integer32
_SlbVirtServerTableMaxSize_Object = MibScalar
slbVirtServerTableMaxSize = _SlbVirtServerTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 1),
    _SlbVirtServerTableMaxSize_Type()
)
slbVirtServerTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbVirtServerTableMaxSize.setStatus("current")
_SlbCurCfgVirtServerTable_Object = MibTable
slbCurCfgVirtServerTable = _SlbCurCfgVirtServerTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 2)
)
if mibBuilder.loadTexts:
    slbCurCfgVirtServerTable.setStatus("current")
_SlbCurCfgVirtualServerEntry_Object = MibTableRow
slbCurCfgVirtualServerEntry = _SlbCurCfgVirtualServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 2, 1)
)
slbCurCfgVirtualServerEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgVirtServerIndex"),
)
if mibBuilder.loadTexts:
    slbCurCfgVirtualServerEntry.setStatus("current")
_SlbCurCfgVirtServerIndex_Type = Integer32
_SlbCurCfgVirtServerIndex_Object = MibTableColumn
slbCurCfgVirtServerIndex = _SlbCurCfgVirtServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 2, 1, 1),
    _SlbCurCfgVirtServerIndex_Type()
)
slbCurCfgVirtServerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServerIndex.setStatus("current")
_SlbCurCfgVirtServerIpAddress_Type = IpAddress
_SlbCurCfgVirtServerIpAddress_Object = MibTableColumn
slbCurCfgVirtServerIpAddress = _SlbCurCfgVirtServerIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 2, 1, 2),
    _SlbCurCfgVirtServerIpAddress_Type()
)
slbCurCfgVirtServerIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServerIpAddress.setStatus("current")


class _SlbCurCfgVirtServerLayer3Only_Type(Integer32):
    """Custom type slbCurCfgVirtServerLayer3Only based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("layer3Only", 1))
    )


_SlbCurCfgVirtServerLayer3Only_Type.__name__ = "Integer32"
_SlbCurCfgVirtServerLayer3Only_Object = MibTableColumn
slbCurCfgVirtServerLayer3Only = _SlbCurCfgVirtServerLayer3Only_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 2, 1, 3),
    _SlbCurCfgVirtServerLayer3Only_Type()
)
slbCurCfgVirtServerLayer3Only.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServerLayer3Only.setStatus("current")


class _SlbCurCfgVirtServerState_Type(Integer32):
    """Custom type slbCurCfgVirtServerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 3),
          ("enabled", 2))
    )


_SlbCurCfgVirtServerState_Type.__name__ = "Integer32"
_SlbCurCfgVirtServerState_Object = MibTableColumn
slbCurCfgVirtServerState = _SlbCurCfgVirtServerState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 2, 1, 4),
    _SlbCurCfgVirtServerState_Type()
)
slbCurCfgVirtServerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServerState.setStatus("current")


class _SlbCurCfgVirtServerDname_Type(DisplayString):
    """Custom type slbCurCfgVirtServerDname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SlbCurCfgVirtServerDname_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServerDname_Object = MibTableColumn
slbCurCfgVirtServerDname = _SlbCurCfgVirtServerDname_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 2, 1, 5),
    _SlbCurCfgVirtServerDname_Type()
)
slbCurCfgVirtServerDname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServerDname.setStatus("current")
_SlbCurCfgVirtServerBwmContract_Type = Integer32
_SlbCurCfgVirtServerBwmContract_Object = MibTableColumn
slbCurCfgVirtServerBwmContract = _SlbCurCfgVirtServerBwmContract_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 2, 1, 6),
    _SlbCurCfgVirtServerBwmContract_Type()
)
slbCurCfgVirtServerBwmContract.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServerBwmContract.setStatus("current")


class _SlbCurCfgVirtServerWeight_Type(Integer32):
    """Custom type slbCurCfgVirtServerWeight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 48),
    )


_SlbCurCfgVirtServerWeight_Type.__name__ = "Integer32"
_SlbCurCfgVirtServerWeight_Object = MibTableColumn
slbCurCfgVirtServerWeight = _SlbCurCfgVirtServerWeight_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 2, 1, 7),
    _SlbCurCfgVirtServerWeight_Type()
)
slbCurCfgVirtServerWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServerWeight.setStatus("current")


class _SlbCurCfgVirtServerAvail_Type(Integer32):
    """Custom type slbCurCfgVirtServerAvail based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 48),
    )


_SlbCurCfgVirtServerAvail_Type.__name__ = "Integer32"
_SlbCurCfgVirtServerAvail_Object = MibTableColumn
slbCurCfgVirtServerAvail = _SlbCurCfgVirtServerAvail_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 2, 1, 8),
    _SlbCurCfgVirtServerAvail_Type()
)
slbCurCfgVirtServerAvail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServerAvail.setStatus("current")
_SlbCurCfgVirtServerRule_Type = OctetString
_SlbCurCfgVirtServerRule_Object = MibTableColumn
slbCurCfgVirtServerRule = _SlbCurCfgVirtServerRule_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 2, 1, 9),
    _SlbCurCfgVirtServerRule_Type()
)
slbCurCfgVirtServerRule.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServerRule.setStatus("current")


class _SlbCurCfgVirtServerVname_Type(DisplayString):
    """Custom type slbCurCfgVirtServerVname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurCfgVirtServerVname_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServerVname_Object = MibTableColumn
slbCurCfgVirtServerVname = _SlbCurCfgVirtServerVname_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 2, 1, 10),
    _SlbCurCfgVirtServerVname_Type()
)
slbCurCfgVirtServerVname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServerVname.setStatus("current")


class _SlbCurCfgVirtServerIpVer_Type(Integer32):
    """Custom type slbCurCfgVirtServerIpVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_SlbCurCfgVirtServerIpVer_Type.__name__ = "Integer32"
_SlbCurCfgVirtServerIpVer_Object = MibTableColumn
slbCurCfgVirtServerIpVer = _SlbCurCfgVirtServerIpVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 2, 1, 11),
    _SlbCurCfgVirtServerIpVer_Type()
)
slbCurCfgVirtServerIpVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServerIpVer.setStatus("current")


class _SlbCurCfgVirtServerIpv6Addr_Type(DisplayString):
    """Custom type slbCurCfgVirtServerIpv6Addr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SlbCurCfgVirtServerIpv6Addr_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServerIpv6Addr_Object = MibTableColumn
slbCurCfgVirtServerIpv6Addr = _SlbCurCfgVirtServerIpv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 2, 1, 12),
    _SlbCurCfgVirtServerIpv6Addr_Type()
)
slbCurCfgVirtServerIpv6Addr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServerIpv6Addr.setStatus("current")


class _SlbCurCfgVirtServerCReset_Type(Integer32):
    """Custom type slbCurCfgVirtServerCReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServerCReset_Type.__name__ = "Integer32"
_SlbCurCfgVirtServerCReset_Object = MibTableColumn
slbCurCfgVirtServerCReset = _SlbCurCfgVirtServerCReset_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 2, 1, 13),
    _SlbCurCfgVirtServerCReset_Type()
)
slbCurCfgVirtServerCReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServerCReset.setStatus("current")
_SlbNewCfgVirtServerTable_Object = MibTable
slbNewCfgVirtServerTable = _SlbNewCfgVirtServerTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 3)
)
if mibBuilder.loadTexts:
    slbNewCfgVirtServerTable.setStatus("current")
_SlbNewCfgVirtualServerEntry_Object = MibTableRow
slbNewCfgVirtualServerEntry = _SlbNewCfgVirtualServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 3, 1)
)
slbNewCfgVirtualServerEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgVirtServerIndex"),
)
if mibBuilder.loadTexts:
    slbNewCfgVirtualServerEntry.setStatus("current")
_SlbNewCfgVirtServerIndex_Type = Integer32
_SlbNewCfgVirtServerIndex_Object = MibTableColumn
slbNewCfgVirtServerIndex = _SlbNewCfgVirtServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 3, 1, 1),
    _SlbNewCfgVirtServerIndex_Type()
)
slbNewCfgVirtServerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgVirtServerIndex.setStatus("current")
_SlbNewCfgVirtServerIpAddress_Type = IpAddress
_SlbNewCfgVirtServerIpAddress_Object = MibTableColumn
slbNewCfgVirtServerIpAddress = _SlbNewCfgVirtServerIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 3, 1, 2),
    _SlbNewCfgVirtServerIpAddress_Type()
)
slbNewCfgVirtServerIpAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServerIpAddress.setStatus("current")


class _SlbNewCfgVirtServerLayer3Only_Type(Integer32):
    """Custom type slbNewCfgVirtServerLayer3Only based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("layer3Only", 1))
    )


_SlbNewCfgVirtServerLayer3Only_Type.__name__ = "Integer32"
_SlbNewCfgVirtServerLayer3Only_Object = MibTableColumn
slbNewCfgVirtServerLayer3Only = _SlbNewCfgVirtServerLayer3Only_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 3, 1, 3),
    _SlbNewCfgVirtServerLayer3Only_Type()
)
slbNewCfgVirtServerLayer3Only.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServerLayer3Only.setStatus("current")


class _SlbNewCfgVirtServerState_Type(Integer32):
    """Custom type slbNewCfgVirtServerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 3),
          ("enabled", 2))
    )


_SlbNewCfgVirtServerState_Type.__name__ = "Integer32"
_SlbNewCfgVirtServerState_Object = MibTableColumn
slbNewCfgVirtServerState = _SlbNewCfgVirtServerState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 3, 1, 4),
    _SlbNewCfgVirtServerState_Type()
)
slbNewCfgVirtServerState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServerState.setStatus("current")


class _SlbNewCfgVirtServerDname_Type(DisplayString):
    """Custom type slbNewCfgVirtServerDname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SlbNewCfgVirtServerDname_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServerDname_Object = MibTableColumn
slbNewCfgVirtServerDname = _SlbNewCfgVirtServerDname_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 3, 1, 6),
    _SlbNewCfgVirtServerDname_Type()
)
slbNewCfgVirtServerDname.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServerDname.setStatus("current")
_SlbNewCfgVirtServerBwmContract_Type = Integer32
_SlbNewCfgVirtServerBwmContract_Object = MibTableColumn
slbNewCfgVirtServerBwmContract = _SlbNewCfgVirtServerBwmContract_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 3, 1, 7),
    _SlbNewCfgVirtServerBwmContract_Type()
)
slbNewCfgVirtServerBwmContract.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServerBwmContract.setStatus("current")


class _SlbNewCfgVirtServerDelete_Type(Integer32):
    """Custom type slbNewCfgVirtServerDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewCfgVirtServerDelete_Type.__name__ = "Integer32"
_SlbNewCfgVirtServerDelete_Object = MibTableColumn
slbNewCfgVirtServerDelete = _SlbNewCfgVirtServerDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 3, 1, 8),
    _SlbNewCfgVirtServerDelete_Type()
)
slbNewCfgVirtServerDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServerDelete.setStatus("current")


class _SlbNewCfgVirtServerWeight_Type(Integer32):
    """Custom type slbNewCfgVirtServerWeight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 48),
    )


_SlbNewCfgVirtServerWeight_Type.__name__ = "Integer32"
_SlbNewCfgVirtServerWeight_Object = MibTableColumn
slbNewCfgVirtServerWeight = _SlbNewCfgVirtServerWeight_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 3, 1, 9),
    _SlbNewCfgVirtServerWeight_Type()
)
slbNewCfgVirtServerWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServerWeight.setStatus("current")


class _SlbNewCfgVirtServerAvail_Type(Integer32):
    """Custom type slbNewCfgVirtServerAvail based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 48),
    )


_SlbNewCfgVirtServerAvail_Type.__name__ = "Integer32"
_SlbNewCfgVirtServerAvail_Object = MibTableColumn
slbNewCfgVirtServerAvail = _SlbNewCfgVirtServerAvail_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 3, 1, 10),
    _SlbNewCfgVirtServerAvail_Type()
)
slbNewCfgVirtServerAvail.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServerAvail.setStatus("current")
_SlbNewCfgVirtServerRule_Type = OctetString
_SlbNewCfgVirtServerRule_Object = MibTableColumn
slbNewCfgVirtServerRule = _SlbNewCfgVirtServerRule_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 3, 1, 11),
    _SlbNewCfgVirtServerRule_Type()
)
slbNewCfgVirtServerRule.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgVirtServerRule.setStatus("current")
_SlbNewCfgVirtServerAddRule_Type = Integer32
_SlbNewCfgVirtServerAddRule_Object = MibTableColumn
slbNewCfgVirtServerAddRule = _SlbNewCfgVirtServerAddRule_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 3, 1, 12),
    _SlbNewCfgVirtServerAddRule_Type()
)
slbNewCfgVirtServerAddRule.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServerAddRule.setStatus("current")
_SlbNewCfgVirtServerRemoveRule_Type = Integer32
_SlbNewCfgVirtServerRemoveRule_Object = MibTableColumn
slbNewCfgVirtServerRemoveRule = _SlbNewCfgVirtServerRemoveRule_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 3, 1, 13),
    _SlbNewCfgVirtServerRemoveRule_Type()
)
slbNewCfgVirtServerRemoveRule.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServerRemoveRule.setStatus("current")


class _SlbNewCfgVirtServerVname_Type(DisplayString):
    """Custom type slbNewCfgVirtServerVname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewCfgVirtServerVname_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServerVname_Object = MibTableColumn
slbNewCfgVirtServerVname = _SlbNewCfgVirtServerVname_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 3, 1, 14),
    _SlbNewCfgVirtServerVname_Type()
)
slbNewCfgVirtServerVname.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServerVname.setStatus("current")


class _SlbNewCfgVirtServerIpVer_Type(Integer32):
    """Custom type slbNewCfgVirtServerIpVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_SlbNewCfgVirtServerIpVer_Type.__name__ = "Integer32"
_SlbNewCfgVirtServerIpVer_Object = MibTableColumn
slbNewCfgVirtServerIpVer = _SlbNewCfgVirtServerIpVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 3, 1, 15),
    _SlbNewCfgVirtServerIpVer_Type()
)
slbNewCfgVirtServerIpVer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServerIpVer.setStatus("current")


class _SlbNewCfgVirtServerIpv6Addr_Type(DisplayString):
    """Custom type slbNewCfgVirtServerIpv6Addr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SlbNewCfgVirtServerIpv6Addr_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServerIpv6Addr_Object = MibTableColumn
slbNewCfgVirtServerIpv6Addr = _SlbNewCfgVirtServerIpv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 3, 1, 16),
    _SlbNewCfgVirtServerIpv6Addr_Type()
)
slbNewCfgVirtServerIpv6Addr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServerIpv6Addr.setStatus("current")


class _SlbNewCfgVirtServerFreeServiceIdx_Type(Integer32):
    """Custom type slbNewCfgVirtServerFreeServiceIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_SlbNewCfgVirtServerFreeServiceIdx_Type.__name__ = "Integer32"
_SlbNewCfgVirtServerFreeServiceIdx_Object = MibTableColumn
slbNewCfgVirtServerFreeServiceIdx = _SlbNewCfgVirtServerFreeServiceIdx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 3, 1, 17),
    _SlbNewCfgVirtServerFreeServiceIdx_Type()
)
slbNewCfgVirtServerFreeServiceIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgVirtServerFreeServiceIdx.setStatus("current")


class _SlbNewCfgVirtServerCReset_Type(Integer32):
    """Custom type slbNewCfgVirtServerCReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServerCReset_Type.__name__ = "Integer32"
_SlbNewCfgVirtServerCReset_Object = MibTableColumn
slbNewCfgVirtServerCReset = _SlbNewCfgVirtServerCReset_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 3, 1, 18),
    _SlbNewCfgVirtServerCReset_Type()
)
slbNewCfgVirtServerCReset.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServerCReset.setStatus("current")
_SlbVirtServicesTableMaxSize_Type = Integer32
_SlbVirtServicesTableMaxSize_Object = MibScalar
slbVirtServicesTableMaxSize = _SlbVirtServicesTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 4),
    _SlbVirtServicesTableMaxSize_Type()
)
slbVirtServicesTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbVirtServicesTableMaxSize.setStatus("current")
_SlbCurCfgVirtServicesTable_Object = MibTable
slbCurCfgVirtServicesTable = _SlbCurCfgVirtServicesTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5)
)
if mibBuilder.loadTexts:
    slbCurCfgVirtServicesTable.setStatus("current")
_SlbCurCfgVirtServicesEntry_Object = MibTableRow
slbCurCfgVirtServicesEntry = _SlbCurCfgVirtServicesEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1)
)
slbCurCfgVirtServicesEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgVirtServIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgVirtServiceIndex"),
)
if mibBuilder.loadTexts:
    slbCurCfgVirtServicesEntry.setStatus("current")
_SlbCurCfgVirtServIndex_Type = Integer32
_SlbCurCfgVirtServIndex_Object = MibTableColumn
slbCurCfgVirtServIndex = _SlbCurCfgVirtServIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 1),
    _SlbCurCfgVirtServIndex_Type()
)
slbCurCfgVirtServIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServIndex.setStatus("current")
_SlbCurCfgVirtServiceIndex_Type = Integer32
_SlbCurCfgVirtServiceIndex_Object = MibTableColumn
slbCurCfgVirtServiceIndex = _SlbCurCfgVirtServiceIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 2),
    _SlbCurCfgVirtServiceIndex_Type()
)
slbCurCfgVirtServiceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceIndex.setStatus("current")


class _SlbCurCfgVirtServiceVirtPort_Type(Integer32):
    """Custom type slbCurCfgVirtServiceVirtPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(9, 65534),
    )


_SlbCurCfgVirtServiceVirtPort_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceVirtPort_Object = MibTableColumn
slbCurCfgVirtServiceVirtPort = _SlbCurCfgVirtServiceVirtPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 3),
    _SlbCurCfgVirtServiceVirtPort_Type()
)
slbCurCfgVirtServiceVirtPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceVirtPort.setStatus("current")
_SlbCurCfgVirtServiceRealGroup_Type = Integer32
_SlbCurCfgVirtServiceRealGroup_Object = MibTableColumn
slbCurCfgVirtServiceRealGroup = _SlbCurCfgVirtServiceRealGroup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 4),
    _SlbCurCfgVirtServiceRealGroup_Type()
)
slbCurCfgVirtServiceRealGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceRealGroup.setStatus("current")


class _SlbCurCfgVirtServiceRealPort_Type(Integer32):
    """Custom type slbCurCfgVirtServiceRealPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SlbCurCfgVirtServiceRealPort_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceRealPort_Object = MibTableColumn
slbCurCfgVirtServiceRealPort = _SlbCurCfgVirtServiceRealPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 5),
    _SlbCurCfgVirtServiceRealPort_Type()
)
slbCurCfgVirtServiceRealPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceRealPort.setStatus("current")


class _SlbCurCfgVirtServiceUDPBalance_Type(Integer32):
    """Custom type slbCurCfgVirtServiceUDPBalance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 3),
          ("enabled", 2),
          ("stateless", 4))
    )


_SlbCurCfgVirtServiceUDPBalance_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceUDPBalance_Object = MibTableColumn
slbCurCfgVirtServiceUDPBalance = _SlbCurCfgVirtServiceUDPBalance_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 6),
    _SlbCurCfgVirtServiceUDPBalance_Type()
)
slbCurCfgVirtServiceUDPBalance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceUDPBalance.setStatus("current")


class _SlbCurCfgVirtServiceHname_Type(DisplayString):
    """Custom type slbCurCfgVirtServiceHname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 34),
    )


_SlbCurCfgVirtServiceHname_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServiceHname_Object = MibTableColumn
slbCurCfgVirtServiceHname = _SlbCurCfgVirtServiceHname_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 7),
    _SlbCurCfgVirtServiceHname_Type()
)
slbCurCfgVirtServiceHname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceHname.setStatus("current")
_SlbCurCfgVirtServiceBwmContract_Type = Integer32
_SlbCurCfgVirtServiceBwmContract_Object = MibTableColumn
slbCurCfgVirtServiceBwmContract = _SlbCurCfgVirtServiceBwmContract_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 8),
    _SlbCurCfgVirtServiceBwmContract_Type()
)
slbCurCfgVirtServiceBwmContract.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceBwmContract.setStatus("current")


class _SlbCurCfgVirtServiceDirServerRtn_Type(Integer32):
    """Custom type slbCurCfgVirtServiceDirServerRtn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceDirServerRtn_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceDirServerRtn_Object = MibTableColumn
slbCurCfgVirtServiceDirServerRtn = _SlbCurCfgVirtServiceDirServerRtn_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 9),
    _SlbCurCfgVirtServiceDirServerRtn_Type()
)
slbCurCfgVirtServiceDirServerRtn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceDirServerRtn.setStatus("current")


class _SlbCurCfgVirtServiceRtspUrlParse_Type(Integer32):
    """Custom type slbCurCfgVirtServiceRtspUrlParse based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("hash", 3),
          ("l4hash", 2),
          ("none", 1),
          ("patternMatch", 4))
    )


_SlbCurCfgVirtServiceRtspUrlParse_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceRtspUrlParse_Object = MibTableColumn
slbCurCfgVirtServiceRtspUrlParse = _SlbCurCfgVirtServiceRtspUrlParse_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 10),
    _SlbCurCfgVirtServiceRtspUrlParse_Type()
)
slbCurCfgVirtServiceRtspUrlParse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceRtspUrlParse.setStatus("current")


class _SlbCurCfgVirtServiceDBind_Type(Integer32):
    """Custom type slbCurCfgVirtServiceDBind based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1),
          ("forceproxy", 3))
    )


_SlbCurCfgVirtServiceDBind_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceDBind_Object = MibTableColumn
slbCurCfgVirtServiceDBind = _SlbCurCfgVirtServiceDBind_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 11),
    _SlbCurCfgVirtServiceDBind_Type()
)
slbCurCfgVirtServiceDBind.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceDBind.setStatus("current")


class _SlbCurCfgVirtServiceFtpParsing_Type(Integer32):
    """Custom type slbCurCfgVirtServiceFtpParsing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceFtpParsing_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceFtpParsing_Object = MibTableColumn
slbCurCfgVirtServiceFtpParsing = _SlbCurCfgVirtServiceFtpParsing_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 12),
    _SlbCurCfgVirtServiceFtpParsing_Type()
)
slbCurCfgVirtServiceFtpParsing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceFtpParsing.setStatus("current")


class _SlbCurCfgVirtServiceRemapUDPFrags_Type(Integer32):
    """Custom type slbCurCfgVirtServiceRemapUDPFrags based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceRemapUDPFrags_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceRemapUDPFrags_Object = MibTableColumn
slbCurCfgVirtServiceRemapUDPFrags = _SlbCurCfgVirtServiceRemapUDPFrags_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 13),
    _SlbCurCfgVirtServiceRemapUDPFrags_Type()
)
slbCurCfgVirtServiceRemapUDPFrags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceRemapUDPFrags.setStatus("current")


class _SlbCurCfgVirtServiceDnsSlb_Type(Integer32):
    """Custom type slbCurCfgVirtServiceDnsSlb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceDnsSlb_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceDnsSlb_Object = MibTableColumn
slbCurCfgVirtServiceDnsSlb = _SlbCurCfgVirtServiceDnsSlb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 14),
    _SlbCurCfgVirtServiceDnsSlb_Type()
)
slbCurCfgVirtServiceDnsSlb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceDnsSlb.setStatus("current")


class _SlbCurCfgVirtServiceResponseCount_Type(Integer32):
    """Custom type slbCurCfgVirtServiceResponseCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_SlbCurCfgVirtServiceResponseCount_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceResponseCount_Object = MibTableColumn
slbCurCfgVirtServiceResponseCount = _SlbCurCfgVirtServiceResponseCount_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 15),
    _SlbCurCfgVirtServiceResponseCount_Type()
)
slbCurCfgVirtServiceResponseCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceResponseCount.setStatus("current")


class _SlbCurCfgVirtServicePBind_Type(Integer32):
    """Custom type slbCurCfgVirtServicePBind based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("clientip", 2),
          ("cookie", 5),
          ("disabled", 3),
          ("sslid", 4))
    )


_SlbCurCfgVirtServicePBind_Type.__name__ = "Integer32"
_SlbCurCfgVirtServicePBind_Object = MibTableColumn
slbCurCfgVirtServicePBind = _SlbCurCfgVirtServicePBind_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 16),
    _SlbCurCfgVirtServicePBind_Type()
)
slbCurCfgVirtServicePBind.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServicePBind.setStatus("current")


class _SlbCurCfgVirtServiceCname_Type(DisplayString):
    """Custom type slbCurCfgVirtServiceCname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_SlbCurCfgVirtServiceCname_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServiceCname_Object = MibTableColumn
slbCurCfgVirtServiceCname = _SlbCurCfgVirtServiceCname_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 17),
    _SlbCurCfgVirtServiceCname_Type()
)
slbCurCfgVirtServiceCname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceCname.setStatus("current")


class _SlbCurCfgVirtServiceCoffset_Type(Integer32):
    """Custom type slbCurCfgVirtServiceCoffset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_SlbCurCfgVirtServiceCoffset_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceCoffset_Object = MibTableColumn
slbCurCfgVirtServiceCoffset = _SlbCurCfgVirtServiceCoffset_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 18),
    _SlbCurCfgVirtServiceCoffset_Type()
)
slbCurCfgVirtServiceCoffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceCoffset.setStatus("current")


class _SlbCurCfgVirtServiceClength_Type(Integer32):
    """Custom type slbCurCfgVirtServiceClength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_SlbCurCfgVirtServiceClength_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceClength_Object = MibTableColumn
slbCurCfgVirtServiceClength = _SlbCurCfgVirtServiceClength_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 19),
    _SlbCurCfgVirtServiceClength_Type()
)
slbCurCfgVirtServiceClength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceClength.setStatus("current")


class _SlbCurCfgVirtServiceUriCookie_Type(Integer32):
    """Custom type slbCurCfgVirtServiceUriCookie based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceUriCookie_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceUriCookie_Object = MibTableColumn
slbCurCfgVirtServiceUriCookie = _SlbCurCfgVirtServiceUriCookie_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 20),
    _SlbCurCfgVirtServiceUriCookie_Type()
)
slbCurCfgVirtServiceUriCookie.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceUriCookie.setStatus("current")


class _SlbCurCfgVirtServiceCExpire_Type(DisplayString):
    """Custom type slbCurCfgVirtServiceCExpire based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_SlbCurCfgVirtServiceCExpire_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServiceCExpire_Object = MibTableColumn
slbCurCfgVirtServiceCExpire = _SlbCurCfgVirtServiceCExpire_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 21),
    _SlbCurCfgVirtServiceCExpire_Type()
)
slbCurCfgVirtServiceCExpire.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceCExpire.setStatus("current")


class _SlbCurCfgVirtServiceCookieMode_Type(Integer32):
    """Custom type slbCurCfgVirtServiceCookieMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("insert", 3),
          ("passive", 2),
          ("rewrite", 1))
    )


_SlbCurCfgVirtServiceCookieMode_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceCookieMode_Object = MibTableColumn
slbCurCfgVirtServiceCookieMode = _SlbCurCfgVirtServiceCookieMode_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 22),
    _SlbCurCfgVirtServiceCookieMode_Type()
)
slbCurCfgVirtServiceCookieMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceCookieMode.setStatus("current")


class _SlbCurCfgVirtServiceHttpSlb_Type(Integer32):
    """Custom type slbCurCfgVirtServiceHttpSlb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("browser", 6),
          ("cookie", 4),
          ("disabled", 1),
          ("headerhash", 8),
          ("host", 5),
          ("others", 7),
          ("urlhash", 3),
          ("urlslb", 2),
          ("version", 9))
    )


_SlbCurCfgVirtServiceHttpSlb_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceHttpSlb_Object = MibTableColumn
slbCurCfgVirtServiceHttpSlb = _SlbCurCfgVirtServiceHttpSlb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 23),
    _SlbCurCfgVirtServiceHttpSlb_Type()
)
slbCurCfgVirtServiceHttpSlb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceHttpSlb.setStatus("current")


class _SlbCurCfgVirtServiceHttpSlbOption_Type(Integer32):
    """Custom type slbCurCfgVirtServiceHttpSlbOption based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("and", 1),
          ("none", 3),
          ("or", 2))
    )


_SlbCurCfgVirtServiceHttpSlbOption_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceHttpSlbOption_Object = MibTableColumn
slbCurCfgVirtServiceHttpSlbOption = _SlbCurCfgVirtServiceHttpSlbOption_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 24),
    _SlbCurCfgVirtServiceHttpSlbOption_Type()
)
slbCurCfgVirtServiceHttpSlbOption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceHttpSlbOption.setStatus("current")


class _SlbCurCfgVirtServiceHttpSlb2_Type(Integer32):
    """Custom type slbCurCfgVirtServiceHttpSlb2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("browser", 6),
          ("cookie", 4),
          ("disabled", 1),
          ("headerhash", 8),
          ("host", 5),
          ("others", 7),
          ("urlhash", 3),
          ("urlslb", 2),
          ("version", 9))
    )


_SlbCurCfgVirtServiceHttpSlb2_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceHttpSlb2_Object = MibTableColumn
slbCurCfgVirtServiceHttpSlb2 = _SlbCurCfgVirtServiceHttpSlb2_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 25),
    _SlbCurCfgVirtServiceHttpSlb2_Type()
)
slbCurCfgVirtServiceHttpSlb2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceHttpSlb2.setStatus("current")


class _SlbCurCfgVirtServiceHttpHdrName_Type(DisplayString):
    """Custom type slbCurCfgVirtServiceHttpHdrName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurCfgVirtServiceHttpHdrName_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServiceHttpHdrName_Object = MibTableColumn
slbCurCfgVirtServiceHttpHdrName = _SlbCurCfgVirtServiceHttpHdrName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 26),
    _SlbCurCfgVirtServiceHttpHdrName_Type()
)
slbCurCfgVirtServiceHttpHdrName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceHttpHdrName.setStatus("current")


class _SlbCurCfgVirtServiceUrlHashLen_Type(Integer32):
    """Custom type slbCurCfgVirtServiceUrlHashLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SlbCurCfgVirtServiceUrlHashLen_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceUrlHashLen_Object = MibTableColumn
slbCurCfgVirtServiceUrlHashLen = _SlbCurCfgVirtServiceUrlHashLen_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 27),
    _SlbCurCfgVirtServiceUrlHashLen_Type()
)
slbCurCfgVirtServiceUrlHashLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceUrlHashLen.setStatus("current")


class _SlbCurCfgVirtServiceDirect_Type(Integer32):
    """Custom type slbCurCfgVirtServiceDirect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceDirect_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceDirect_Object = MibTableColumn
slbCurCfgVirtServiceDirect = _SlbCurCfgVirtServiceDirect_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 28),
    _SlbCurCfgVirtServiceDirect_Type()
)
slbCurCfgVirtServiceDirect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceDirect.setStatus("current")


class _SlbCurCfgVirtServiceThash_Type(Integer32):
    """Custom type slbCurCfgVirtServiceThash based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("sip", 1),
          ("sip-sport", 2))
    )


_SlbCurCfgVirtServiceThash_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceThash_Object = MibTableColumn
slbCurCfgVirtServiceThash = _SlbCurCfgVirtServiceThash_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 29),
    _SlbCurCfgVirtServiceThash_Type()
)
slbCurCfgVirtServiceThash.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceThash.setStatus("current")


class _SlbCurCfgVirtServiceLdapreset_Type(Integer32):
    """Custom type slbCurCfgVirtServiceLdapreset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceLdapreset_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceLdapreset_Object = MibTableColumn
slbCurCfgVirtServiceLdapreset = _SlbCurCfgVirtServiceLdapreset_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 30),
    _SlbCurCfgVirtServiceLdapreset_Type()
)
slbCurCfgVirtServiceLdapreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceLdapreset.setStatus("current")


class _SlbCurCfgVirtServiceLdapslb_Type(Integer32):
    """Custom type slbCurCfgVirtServiceLdapslb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceLdapslb_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceLdapslb_Object = MibTableColumn
slbCurCfgVirtServiceLdapslb = _SlbCurCfgVirtServiceLdapslb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 31),
    _SlbCurCfgVirtServiceLdapslb_Type()
)
slbCurCfgVirtServiceLdapslb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceLdapslb.setStatus("current")


class _SlbCurCfgVirtServiceSip_Type(Integer32):
    """Custom type slbCurCfgVirtServiceSip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceSip_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceSip_Object = MibTableColumn
slbCurCfgVirtServiceSip = _SlbCurCfgVirtServiceSip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 32),
    _SlbCurCfgVirtServiceSip_Type()
)
slbCurCfgVirtServiceSip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceSip.setStatus("current")


class _SlbCurCfgVirtServiceXForwardedFor_Type(Integer32):
    """Custom type slbCurCfgVirtServiceXForwardedFor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceXForwardedFor_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceXForwardedFor_Object = MibTableColumn
slbCurCfgVirtServiceXForwardedFor = _SlbCurCfgVirtServiceXForwardedFor_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 33),
    _SlbCurCfgVirtServiceXForwardedFor_Type()
)
slbCurCfgVirtServiceXForwardedFor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceXForwardedFor.setStatus("current")


class _SlbCurCfgVirtServiceHttpRedir_Type(Integer32):
    """Custom type slbCurCfgVirtServiceHttpRedir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceHttpRedir_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceHttpRedir_Object = MibTableColumn
slbCurCfgVirtServiceHttpRedir = _SlbCurCfgVirtServiceHttpRedir_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 34),
    _SlbCurCfgVirtServiceHttpRedir_Type()
)
slbCurCfgVirtServiceHttpRedir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceHttpRedir.setStatus("current")


class _SlbCurCfgVirtServicePbindRport_Type(Integer32):
    """Custom type slbCurCfgVirtServicePbindRport based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServicePbindRport_Type.__name__ = "Integer32"
_SlbCurCfgVirtServicePbindRport_Object = MibTableColumn
slbCurCfgVirtServicePbindRport = _SlbCurCfgVirtServicePbindRport_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 35),
    _SlbCurCfgVirtServicePbindRport_Type()
)
slbCurCfgVirtServicePbindRport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServicePbindRport.setStatus("current")


class _SlbCurCfgVirtServiceEgressPip_Type(Integer32):
    """Custom type slbCurCfgVirtServiceEgressPip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceEgressPip_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceEgressPip_Object = MibTableColumn
slbCurCfgVirtServiceEgressPip = _SlbCurCfgVirtServiceEgressPip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 36),
    _SlbCurCfgVirtServiceEgressPip_Type()
)
slbCurCfgVirtServiceEgressPip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceEgressPip.setStatus("current")


class _SlbCurCfgVirtServiceCookieDname_Type(Integer32):
    """Custom type slbCurCfgVirtServiceCookieDname based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceCookieDname_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceCookieDname_Object = MibTableColumn
slbCurCfgVirtServiceCookieDname = _SlbCurCfgVirtServiceCookieDname_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 37),
    _SlbCurCfgVirtServiceCookieDname_Type()
)
slbCurCfgVirtServiceCookieDname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceCookieDname.setStatus("current")


class _SlbCurCfgVirtServiceWts_Type(Integer32):
    """Custom type slbCurCfgVirtServiceWts based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceWts_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceWts_Object = MibTableColumn
slbCurCfgVirtServiceWts = _SlbCurCfgVirtServiceWts_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 38),
    _SlbCurCfgVirtServiceWts_Type()
)
slbCurCfgVirtServiceWts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceWts.setStatus("current")


class _SlbCurCfgVirtServiceUhash_Type(Integer32):
    """Custom type slbCurCfgVirtServiceUhash based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceUhash_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceUhash_Object = MibTableColumn
slbCurCfgVirtServiceUhash = _SlbCurCfgVirtServiceUhash_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 39),
    _SlbCurCfgVirtServiceUhash_Type()
)
slbCurCfgVirtServiceUhash.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceUhash.setStatus("current")


class _SlbCurCfgVirtServiceTimeOut_Type(Integer32):
    """Custom type slbCurCfgVirtServiceTimeOut based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32768),
    )


_SlbCurCfgVirtServiceTimeOut_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceTimeOut_Object = MibTableColumn
slbCurCfgVirtServiceTimeOut = _SlbCurCfgVirtServiceTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 40),
    _SlbCurCfgVirtServiceTimeOut_Type()
)
slbCurCfgVirtServiceTimeOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceTimeOut.setStatus("current")


class _SlbCurCfgVirtServiceSdpNat_Type(Integer32):
    """Custom type slbCurCfgVirtServiceSdpNat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceSdpNat_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceSdpNat_Object = MibTableColumn
slbCurCfgVirtServiceSdpNat = _SlbCurCfgVirtServiceSdpNat_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 41),
    _SlbCurCfgVirtServiceSdpNat_Type()
)
slbCurCfgVirtServiceSdpNat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceSdpNat.setStatus("current")


class _SlbCurCfgVirtServiceSessionMirror_Type(Integer32):
    """Custom type slbCurCfgVirtServiceSessionMirror based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceSessionMirror_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceSessionMirror_Object = MibTableColumn
slbCurCfgVirtServiceSessionMirror = _SlbCurCfgVirtServiceSessionMirror_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 42),
    _SlbCurCfgVirtServiceSessionMirror_Type()
)
slbCurCfgVirtServiceSessionMirror.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceSessionMirror.setStatus("current")


class _SlbCurCfgVirtServiceSoftGrid_Type(Integer32):
    """Custom type slbCurCfgVirtServiceSoftGrid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceSoftGrid_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceSoftGrid_Object = MibTableColumn
slbCurCfgVirtServiceSoftGrid = _SlbCurCfgVirtServiceSoftGrid_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 43),
    _SlbCurCfgVirtServiceSoftGrid_Type()
)
slbCurCfgVirtServiceSoftGrid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceSoftGrid.setStatus("current")


class _SlbCurCfgVirtServiceConnPooling_Type(Integer32):
    """Custom type slbCurCfgVirtServiceConnPooling based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceConnPooling_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceConnPooling_Object = MibTableColumn
slbCurCfgVirtServiceConnPooling = _SlbCurCfgVirtServiceConnPooling_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 44),
    _SlbCurCfgVirtServiceConnPooling_Type()
)
slbCurCfgVirtServiceConnPooling.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceConnPooling.setStatus("current")


class _SlbCurCfgVirtPersistentTimeOut_Type(Integer32):
    """Custom type slbCurCfgVirtPersistentTimeOut based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32768),
    )


_SlbCurCfgVirtPersistentTimeOut_Type.__name__ = "Integer32"
_SlbCurCfgVirtPersistentTimeOut_Object = MibTableColumn
slbCurCfgVirtPersistentTimeOut = _SlbCurCfgVirtPersistentTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 5, 1, 45),
    _SlbCurCfgVirtPersistentTimeOut_Type()
)
slbCurCfgVirtPersistentTimeOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtPersistentTimeOut.setStatus("current")
_SlbNewCfgVirtServicesTable_Object = MibTable
slbNewCfgVirtServicesTable = _SlbNewCfgVirtServicesTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6)
)
if mibBuilder.loadTexts:
    slbNewCfgVirtServicesTable.setStatus("current")
_SlbNewCfgVirtServicesEntry_Object = MibTableRow
slbNewCfgVirtServicesEntry = _SlbNewCfgVirtServicesEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1)
)
slbNewCfgVirtServicesEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgVirtServIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgVirtServiceIndex"),
)
if mibBuilder.loadTexts:
    slbNewCfgVirtServicesEntry.setStatus("current")
_SlbNewCfgVirtServIndex_Type = Integer32
_SlbNewCfgVirtServIndex_Object = MibTableColumn
slbNewCfgVirtServIndex = _SlbNewCfgVirtServIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 1),
    _SlbNewCfgVirtServIndex_Type()
)
slbNewCfgVirtServIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgVirtServIndex.setStatus("current")


class _SlbNewCfgVirtServiceIndex_Type(Integer32):
    """Custom type slbNewCfgVirtServiceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_SlbNewCfgVirtServiceIndex_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceIndex_Object = MibTableColumn
slbNewCfgVirtServiceIndex = _SlbNewCfgVirtServiceIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 2),
    _SlbNewCfgVirtServiceIndex_Type()
)
slbNewCfgVirtServiceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceIndex.setStatus("current")


class _SlbNewCfgVirtServiceVirtPort_Type(Integer32):
    """Custom type slbNewCfgVirtServiceVirtPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(9, 65534),
    )


_SlbNewCfgVirtServiceVirtPort_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceVirtPort_Object = MibTableColumn
slbNewCfgVirtServiceVirtPort = _SlbNewCfgVirtServiceVirtPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 3),
    _SlbNewCfgVirtServiceVirtPort_Type()
)
slbNewCfgVirtServiceVirtPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceVirtPort.setStatus("current")
_SlbNewCfgVirtServiceRealGroup_Type = Integer32
_SlbNewCfgVirtServiceRealGroup_Object = MibTableColumn
slbNewCfgVirtServiceRealGroup = _SlbNewCfgVirtServiceRealGroup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 4),
    _SlbNewCfgVirtServiceRealGroup_Type()
)
slbNewCfgVirtServiceRealGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceRealGroup.setStatus("current")


class _SlbNewCfgVirtServiceRealPort_Type(Integer32):
    """Custom type slbNewCfgVirtServiceRealPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SlbNewCfgVirtServiceRealPort_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceRealPort_Object = MibTableColumn
slbNewCfgVirtServiceRealPort = _SlbNewCfgVirtServiceRealPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 5),
    _SlbNewCfgVirtServiceRealPort_Type()
)
slbNewCfgVirtServiceRealPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceRealPort.setStatus("current")


class _SlbNewCfgVirtServiceUDPBalance_Type(Integer32):
    """Custom type slbNewCfgVirtServiceUDPBalance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 3),
          ("enabled", 2),
          ("stateless", 4))
    )


_SlbNewCfgVirtServiceUDPBalance_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceUDPBalance_Object = MibTableColumn
slbNewCfgVirtServiceUDPBalance = _SlbNewCfgVirtServiceUDPBalance_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 6),
    _SlbNewCfgVirtServiceUDPBalance_Type()
)
slbNewCfgVirtServiceUDPBalance.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceUDPBalance.setStatus("current")


class _SlbNewCfgVirtServiceHname_Type(DisplayString):
    """Custom type slbNewCfgVirtServiceHname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 34),
    )


_SlbNewCfgVirtServiceHname_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServiceHname_Object = MibTableColumn
slbNewCfgVirtServiceHname = _SlbNewCfgVirtServiceHname_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 7),
    _SlbNewCfgVirtServiceHname_Type()
)
slbNewCfgVirtServiceHname.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceHname.setStatus("current")
_SlbNewCfgVirtServiceBwmContract_Type = Integer32
_SlbNewCfgVirtServiceBwmContract_Object = MibTableColumn
slbNewCfgVirtServiceBwmContract = _SlbNewCfgVirtServiceBwmContract_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 8),
    _SlbNewCfgVirtServiceBwmContract_Type()
)
slbNewCfgVirtServiceBwmContract.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceBwmContract.setStatus("current")


class _SlbNewCfgVirtServiceDirServerRtn_Type(Integer32):
    """Custom type slbNewCfgVirtServiceDirServerRtn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceDirServerRtn_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceDirServerRtn_Object = MibTableColumn
slbNewCfgVirtServiceDirServerRtn = _SlbNewCfgVirtServiceDirServerRtn_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 9),
    _SlbNewCfgVirtServiceDirServerRtn_Type()
)
slbNewCfgVirtServiceDirServerRtn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceDirServerRtn.setStatus("current")


class _SlbNewCfgVirtServiceRtspUrlParse_Type(Integer32):
    """Custom type slbNewCfgVirtServiceRtspUrlParse based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("hash", 3),
          ("l4hash", 2),
          ("none", 1),
          ("patternMatch", 4))
    )


_SlbNewCfgVirtServiceRtspUrlParse_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceRtspUrlParse_Object = MibTableColumn
slbNewCfgVirtServiceRtspUrlParse = _SlbNewCfgVirtServiceRtspUrlParse_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 10),
    _SlbNewCfgVirtServiceRtspUrlParse_Type()
)
slbNewCfgVirtServiceRtspUrlParse.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceRtspUrlParse.setStatus("current")


class _SlbNewCfgVirtServiceDBind_Type(Integer32):
    """Custom type slbNewCfgVirtServiceDBind based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1),
          ("forceproxy", 3))
    )


_SlbNewCfgVirtServiceDBind_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceDBind_Object = MibTableColumn
slbNewCfgVirtServiceDBind = _SlbNewCfgVirtServiceDBind_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 11),
    _SlbNewCfgVirtServiceDBind_Type()
)
slbNewCfgVirtServiceDBind.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceDBind.setStatus("current")


class _SlbNewCfgVirtServiceFtpParsing_Type(Integer32):
    """Custom type slbNewCfgVirtServiceFtpParsing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceFtpParsing_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceFtpParsing_Object = MibTableColumn
slbNewCfgVirtServiceFtpParsing = _SlbNewCfgVirtServiceFtpParsing_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 12),
    _SlbNewCfgVirtServiceFtpParsing_Type()
)
slbNewCfgVirtServiceFtpParsing.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceFtpParsing.setStatus("current")


class _SlbNewCfgVirtServiceRemapUDPFrags_Type(Integer32):
    """Custom type slbNewCfgVirtServiceRemapUDPFrags based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceRemapUDPFrags_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceRemapUDPFrags_Object = MibTableColumn
slbNewCfgVirtServiceRemapUDPFrags = _SlbNewCfgVirtServiceRemapUDPFrags_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 13),
    _SlbNewCfgVirtServiceRemapUDPFrags_Type()
)
slbNewCfgVirtServiceRemapUDPFrags.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceRemapUDPFrags.setStatus("current")


class _SlbNewCfgVirtServiceDnsSlb_Type(Integer32):
    """Custom type slbNewCfgVirtServiceDnsSlb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceDnsSlb_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceDnsSlb_Object = MibTableColumn
slbNewCfgVirtServiceDnsSlb = _SlbNewCfgVirtServiceDnsSlb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 14),
    _SlbNewCfgVirtServiceDnsSlb_Type()
)
slbNewCfgVirtServiceDnsSlb.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceDnsSlb.setStatus("current")


class _SlbNewCfgVirtServiceResponseCount_Type(Integer32):
    """Custom type slbNewCfgVirtServiceResponseCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_SlbNewCfgVirtServiceResponseCount_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceResponseCount_Object = MibTableColumn
slbNewCfgVirtServiceResponseCount = _SlbNewCfgVirtServiceResponseCount_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 15),
    _SlbNewCfgVirtServiceResponseCount_Type()
)
slbNewCfgVirtServiceResponseCount.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceResponseCount.setStatus("current")


class _SlbNewCfgVirtServicePBind_Type(Integer32):
    """Custom type slbNewCfgVirtServicePBind based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("clientip", 2),
          ("cookie", 5),
          ("disabled", 3),
          ("sslid", 4))
    )


_SlbNewCfgVirtServicePBind_Type.__name__ = "Integer32"
_SlbNewCfgVirtServicePBind_Object = MibTableColumn
slbNewCfgVirtServicePBind = _SlbNewCfgVirtServicePBind_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 16),
    _SlbNewCfgVirtServicePBind_Type()
)
slbNewCfgVirtServicePBind.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServicePBind.setStatus("current")


class _SlbNewCfgVirtServiceCname_Type(DisplayString):
    """Custom type slbNewCfgVirtServiceCname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_SlbNewCfgVirtServiceCname_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServiceCname_Object = MibTableColumn
slbNewCfgVirtServiceCname = _SlbNewCfgVirtServiceCname_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 17),
    _SlbNewCfgVirtServiceCname_Type()
)
slbNewCfgVirtServiceCname.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceCname.setStatus("current")


class _SlbNewCfgVirtServiceCoffset_Type(Integer32):
    """Custom type slbNewCfgVirtServiceCoffset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_SlbNewCfgVirtServiceCoffset_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceCoffset_Object = MibTableColumn
slbNewCfgVirtServiceCoffset = _SlbNewCfgVirtServiceCoffset_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 18),
    _SlbNewCfgVirtServiceCoffset_Type()
)
slbNewCfgVirtServiceCoffset.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceCoffset.setStatus("current")


class _SlbNewCfgVirtServiceClength_Type(Integer32):
    """Custom type slbNewCfgVirtServiceClength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_SlbNewCfgVirtServiceClength_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceClength_Object = MibTableColumn
slbNewCfgVirtServiceClength = _SlbNewCfgVirtServiceClength_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 19),
    _SlbNewCfgVirtServiceClength_Type()
)
slbNewCfgVirtServiceClength.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceClength.setStatus("current")


class _SlbNewCfgVirtServiceUriCookie_Type(Integer32):
    """Custom type slbNewCfgVirtServiceUriCookie based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceUriCookie_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceUriCookie_Object = MibTableColumn
slbNewCfgVirtServiceUriCookie = _SlbNewCfgVirtServiceUriCookie_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 20),
    _SlbNewCfgVirtServiceUriCookie_Type()
)
slbNewCfgVirtServiceUriCookie.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceUriCookie.setStatus("current")


class _SlbNewCfgVirtServiceCExpire_Type(DisplayString):
    """Custom type slbNewCfgVirtServiceCExpire based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_SlbNewCfgVirtServiceCExpire_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServiceCExpire_Object = MibTableColumn
slbNewCfgVirtServiceCExpire = _SlbNewCfgVirtServiceCExpire_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 21),
    _SlbNewCfgVirtServiceCExpire_Type()
)
slbNewCfgVirtServiceCExpire.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceCExpire.setStatus("current")


class _SlbNewCfgVirtServiceCookieMode_Type(Integer32):
    """Custom type slbNewCfgVirtServiceCookieMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("insert", 3),
          ("passive", 2),
          ("rewrite", 1))
    )


_SlbNewCfgVirtServiceCookieMode_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceCookieMode_Object = MibTableColumn
slbNewCfgVirtServiceCookieMode = _SlbNewCfgVirtServiceCookieMode_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 22),
    _SlbNewCfgVirtServiceCookieMode_Type()
)
slbNewCfgVirtServiceCookieMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceCookieMode.setStatus("current")


class _SlbNewCfgVirtServiceHttpSlb_Type(Integer32):
    """Custom type slbNewCfgVirtServiceHttpSlb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("browser", 6),
          ("cookie", 4),
          ("disabled", 1),
          ("headerhash", 8),
          ("host", 5),
          ("others", 7),
          ("urlhash", 3),
          ("urlslb", 2),
          ("version", 9))
    )


_SlbNewCfgVirtServiceHttpSlb_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceHttpSlb_Object = MibTableColumn
slbNewCfgVirtServiceHttpSlb = _SlbNewCfgVirtServiceHttpSlb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 23),
    _SlbNewCfgVirtServiceHttpSlb_Type()
)
slbNewCfgVirtServiceHttpSlb.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceHttpSlb.setStatus("current")


class _SlbNewCfgVirtServiceHttpSlbOption_Type(Integer32):
    """Custom type slbNewCfgVirtServiceHttpSlbOption based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("and", 1),
          ("none", 3),
          ("or", 2))
    )


_SlbNewCfgVirtServiceHttpSlbOption_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceHttpSlbOption_Object = MibTableColumn
slbNewCfgVirtServiceHttpSlbOption = _SlbNewCfgVirtServiceHttpSlbOption_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 24),
    _SlbNewCfgVirtServiceHttpSlbOption_Type()
)
slbNewCfgVirtServiceHttpSlbOption.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceHttpSlbOption.setStatus("current")


class _SlbNewCfgVirtServiceHttpSlb2_Type(Integer32):
    """Custom type slbNewCfgVirtServiceHttpSlb2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("browser", 6),
          ("cookie", 4),
          ("disabled", 1),
          ("headerhash", 8),
          ("host", 5),
          ("others", 7),
          ("urlhash", 3),
          ("urlslb", 2),
          ("version", 9))
    )


_SlbNewCfgVirtServiceHttpSlb2_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceHttpSlb2_Object = MibTableColumn
slbNewCfgVirtServiceHttpSlb2 = _SlbNewCfgVirtServiceHttpSlb2_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 25),
    _SlbNewCfgVirtServiceHttpSlb2_Type()
)
slbNewCfgVirtServiceHttpSlb2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceHttpSlb2.setStatus("current")


class _SlbNewCfgVirtServiceHttpHdrName_Type(DisplayString):
    """Custom type slbNewCfgVirtServiceHttpHdrName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewCfgVirtServiceHttpHdrName_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServiceHttpHdrName_Object = MibTableColumn
slbNewCfgVirtServiceHttpHdrName = _SlbNewCfgVirtServiceHttpHdrName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 26),
    _SlbNewCfgVirtServiceHttpHdrName_Type()
)
slbNewCfgVirtServiceHttpHdrName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceHttpHdrName.setStatus("current")


class _SlbNewCfgVirtServiceUrlHashLen_Type(Integer32):
    """Custom type slbNewCfgVirtServiceUrlHashLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SlbNewCfgVirtServiceUrlHashLen_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceUrlHashLen_Object = MibTableColumn
slbNewCfgVirtServiceUrlHashLen = _SlbNewCfgVirtServiceUrlHashLen_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 27),
    _SlbNewCfgVirtServiceUrlHashLen_Type()
)
slbNewCfgVirtServiceUrlHashLen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceUrlHashLen.setStatus("current")


class _SlbNewCfgVirtServiceDelete_Type(Integer32):
    """Custom type slbNewCfgVirtServiceDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewCfgVirtServiceDelete_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceDelete_Object = MibTableColumn
slbNewCfgVirtServiceDelete = _SlbNewCfgVirtServiceDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 28),
    _SlbNewCfgVirtServiceDelete_Type()
)
slbNewCfgVirtServiceDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceDelete.setStatus("current")


class _SlbNewCfgVirtServiceDirect_Type(Integer32):
    """Custom type slbNewCfgVirtServiceDirect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceDirect_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceDirect_Object = MibTableColumn
slbNewCfgVirtServiceDirect = _SlbNewCfgVirtServiceDirect_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 29),
    _SlbNewCfgVirtServiceDirect_Type()
)
slbNewCfgVirtServiceDirect.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceDirect.setStatus("current")


class _SlbNewCfgVirtServiceThash_Type(Integer32):
    """Custom type slbNewCfgVirtServiceThash based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("sip", 1),
          ("sip-sport", 2))
    )


_SlbNewCfgVirtServiceThash_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceThash_Object = MibTableColumn
slbNewCfgVirtServiceThash = _SlbNewCfgVirtServiceThash_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 30),
    _SlbNewCfgVirtServiceThash_Type()
)
slbNewCfgVirtServiceThash.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceThash.setStatus("current")


class _SlbNewCfgVirtServiceLdapreset_Type(Integer32):
    """Custom type slbNewCfgVirtServiceLdapreset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceLdapreset_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceLdapreset_Object = MibTableColumn
slbNewCfgVirtServiceLdapreset = _SlbNewCfgVirtServiceLdapreset_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 31),
    _SlbNewCfgVirtServiceLdapreset_Type()
)
slbNewCfgVirtServiceLdapreset.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceLdapreset.setStatus("current")


class _SlbNewCfgVirtServiceLdapslb_Type(Integer32):
    """Custom type slbNewCfgVirtServiceLdapslb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceLdapslb_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceLdapslb_Object = MibTableColumn
slbNewCfgVirtServiceLdapslb = _SlbNewCfgVirtServiceLdapslb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 32),
    _SlbNewCfgVirtServiceLdapslb_Type()
)
slbNewCfgVirtServiceLdapslb.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceLdapslb.setStatus("current")


class _SlbNewCfgVirtServiceSip_Type(Integer32):
    """Custom type slbNewCfgVirtServiceSip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceSip_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceSip_Object = MibTableColumn
slbNewCfgVirtServiceSip = _SlbNewCfgVirtServiceSip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 33),
    _SlbNewCfgVirtServiceSip_Type()
)
slbNewCfgVirtServiceSip.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceSip.setStatus("current")


class _SlbNewCfgVirtServiceXForwardedFor_Type(Integer32):
    """Custom type slbNewCfgVirtServiceXForwardedFor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceXForwardedFor_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceXForwardedFor_Object = MibTableColumn
slbNewCfgVirtServiceXForwardedFor = _SlbNewCfgVirtServiceXForwardedFor_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 34),
    _SlbNewCfgVirtServiceXForwardedFor_Type()
)
slbNewCfgVirtServiceXForwardedFor.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceXForwardedFor.setStatus("current")


class _SlbNewCfgVirtServiceHttpRedir_Type(Integer32):
    """Custom type slbNewCfgVirtServiceHttpRedir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceHttpRedir_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceHttpRedir_Object = MibTableColumn
slbNewCfgVirtServiceHttpRedir = _SlbNewCfgVirtServiceHttpRedir_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 35),
    _SlbNewCfgVirtServiceHttpRedir_Type()
)
slbNewCfgVirtServiceHttpRedir.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceHttpRedir.setStatus("current")


class _SlbNewCfgVirtServicePbindRport_Type(Integer32):
    """Custom type slbNewCfgVirtServicePbindRport based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServicePbindRport_Type.__name__ = "Integer32"
_SlbNewCfgVirtServicePbindRport_Object = MibTableColumn
slbNewCfgVirtServicePbindRport = _SlbNewCfgVirtServicePbindRport_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 36),
    _SlbNewCfgVirtServicePbindRport_Type()
)
slbNewCfgVirtServicePbindRport.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServicePbindRport.setStatus("current")


class _SlbNewCfgVirtServiceEgressPip_Type(Integer32):
    """Custom type slbNewCfgVirtServiceEgressPip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceEgressPip_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceEgressPip_Object = MibTableColumn
slbNewCfgVirtServiceEgressPip = _SlbNewCfgVirtServiceEgressPip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 37),
    _SlbNewCfgVirtServiceEgressPip_Type()
)
slbNewCfgVirtServiceEgressPip.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceEgressPip.setStatus("current")


class _SlbNewCfgVirtServiceCookieDname_Type(Integer32):
    """Custom type slbNewCfgVirtServiceCookieDname based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceCookieDname_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceCookieDname_Object = MibTableColumn
slbNewCfgVirtServiceCookieDname = _SlbNewCfgVirtServiceCookieDname_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 38),
    _SlbNewCfgVirtServiceCookieDname_Type()
)
slbNewCfgVirtServiceCookieDname.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceCookieDname.setStatus("current")


class _SlbNewCfgVirtServiceWts_Type(Integer32):
    """Custom type slbNewCfgVirtServiceWts based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceWts_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceWts_Object = MibTableColumn
slbNewCfgVirtServiceWts = _SlbNewCfgVirtServiceWts_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 39),
    _SlbNewCfgVirtServiceWts_Type()
)
slbNewCfgVirtServiceWts.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceWts.setStatus("current")


class _SlbNewCfgVirtServiceUhash_Type(Integer32):
    """Custom type slbNewCfgVirtServiceUhash based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceUhash_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceUhash_Object = MibTableColumn
slbNewCfgVirtServiceUhash = _SlbNewCfgVirtServiceUhash_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 40),
    _SlbNewCfgVirtServiceUhash_Type()
)
slbNewCfgVirtServiceUhash.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceUhash.setStatus("current")


class _SlbNewCfgVirtServiceTimeOut_Type(Integer32):
    """Custom type slbNewCfgVirtServiceTimeOut based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32768),
    )


_SlbNewCfgVirtServiceTimeOut_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceTimeOut_Object = MibTableColumn
slbNewCfgVirtServiceTimeOut = _SlbNewCfgVirtServiceTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 41),
    _SlbNewCfgVirtServiceTimeOut_Type()
)
slbNewCfgVirtServiceTimeOut.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceTimeOut.setStatus("current")


class _SlbNewCfgVirtServiceSdpNat_Type(Integer32):
    """Custom type slbNewCfgVirtServiceSdpNat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceSdpNat_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceSdpNat_Object = MibTableColumn
slbNewCfgVirtServiceSdpNat = _SlbNewCfgVirtServiceSdpNat_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 42),
    _SlbNewCfgVirtServiceSdpNat_Type()
)
slbNewCfgVirtServiceSdpNat.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceSdpNat.setStatus("current")


class _SlbNewCfgVirtServiceSessionMirror_Type(Integer32):
    """Custom type slbNewCfgVirtServiceSessionMirror based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceSessionMirror_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceSessionMirror_Object = MibTableColumn
slbNewCfgVirtServiceSessionMirror = _SlbNewCfgVirtServiceSessionMirror_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 43),
    _SlbNewCfgVirtServiceSessionMirror_Type()
)
slbNewCfgVirtServiceSessionMirror.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceSessionMirror.setStatus("current")


class _SlbNewCfgVirtServiceSoftGrid_Type(Integer32):
    """Custom type slbNewCfgVirtServiceSoftGrid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceSoftGrid_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceSoftGrid_Object = MibTableColumn
slbNewCfgVirtServiceSoftGrid = _SlbNewCfgVirtServiceSoftGrid_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 44),
    _SlbNewCfgVirtServiceSoftGrid_Type()
)
slbNewCfgVirtServiceSoftGrid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceSoftGrid.setStatus("current")


class _SlbNewCfgVirtServiceConnPooling_Type(Integer32):
    """Custom type slbNewCfgVirtServiceConnPooling based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceConnPooling_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceConnPooling_Object = MibTableColumn
slbNewCfgVirtServiceConnPooling = _SlbNewCfgVirtServiceConnPooling_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 45),
    _SlbNewCfgVirtServiceConnPooling_Type()
)
slbNewCfgVirtServiceConnPooling.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceConnPooling.setStatus("current")


class _SlbNewCfgVirtPersistentTimeOut_Type(Integer32):
    """Custom type slbNewCfgVirtPersistentTimeOut based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32768),
    )


_SlbNewCfgVirtPersistentTimeOut_Type.__name__ = "Integer32"
_SlbNewCfgVirtPersistentTimeOut_Object = MibTableColumn
slbNewCfgVirtPersistentTimeOut = _SlbNewCfgVirtPersistentTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 6, 1, 46),
    _SlbNewCfgVirtPersistentTimeOut_Type()
)
slbNewCfgVirtPersistentTimeOut.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtPersistentTimeOut.setStatus("current")
_SlbUrlBwmTableMaxSize_Type = Integer32
_SlbUrlBwmTableMaxSize_Object = MibScalar
slbUrlBwmTableMaxSize = _SlbUrlBwmTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 7),
    _SlbUrlBwmTableMaxSize_Type()
)
slbUrlBwmTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbUrlBwmTableMaxSize.setStatus("current")
_SlbCurCfgUrlBwmTable_Object = MibTable
slbCurCfgUrlBwmTable = _SlbCurCfgUrlBwmTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 8)
)
if mibBuilder.loadTexts:
    slbCurCfgUrlBwmTable.setStatus("current")
_SlbCurCfgUrlBwmEntry_Object = MibTableRow
slbCurCfgUrlBwmEntry = _SlbCurCfgUrlBwmEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 8, 1)
)
slbCurCfgUrlBwmEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgUrlBwmVirtServIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgUrlBwmVirtServiceIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgUrlBwmUrlId"),
)
if mibBuilder.loadTexts:
    slbCurCfgUrlBwmEntry.setStatus("current")
_SlbCurCfgUrlBwmVirtServIndex_Type = Integer32
_SlbCurCfgUrlBwmVirtServIndex_Object = MibTableColumn
slbCurCfgUrlBwmVirtServIndex = _SlbCurCfgUrlBwmVirtServIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 8, 1, 1),
    _SlbCurCfgUrlBwmVirtServIndex_Type()
)
slbCurCfgUrlBwmVirtServIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgUrlBwmVirtServIndex.setStatus("current")
_SlbCurCfgUrlBwmVirtServiceIndex_Type = Integer32
_SlbCurCfgUrlBwmVirtServiceIndex_Object = MibTableColumn
slbCurCfgUrlBwmVirtServiceIndex = _SlbCurCfgUrlBwmVirtServiceIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 8, 1, 2),
    _SlbCurCfgUrlBwmVirtServiceIndex_Type()
)
slbCurCfgUrlBwmVirtServiceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgUrlBwmVirtServiceIndex.setStatus("current")
_SlbCurCfgUrlBwmUrlId_Type = Integer32
_SlbCurCfgUrlBwmUrlId_Object = MibTableColumn
slbCurCfgUrlBwmUrlId = _SlbCurCfgUrlBwmUrlId_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 8, 1, 3),
    _SlbCurCfgUrlBwmUrlId_Type()
)
slbCurCfgUrlBwmUrlId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgUrlBwmUrlId.setStatus("current")
_SlbCurCfgUrlBwmContract_Type = Integer32
_SlbCurCfgUrlBwmContract_Object = MibTableColumn
slbCurCfgUrlBwmContract = _SlbCurCfgUrlBwmContract_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 8, 1, 4),
    _SlbCurCfgUrlBwmContract_Type()
)
slbCurCfgUrlBwmContract.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgUrlBwmContract.setStatus("current")
_SlbNewCfgUrlBwmTable_Object = MibTable
slbNewCfgUrlBwmTable = _SlbNewCfgUrlBwmTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 9)
)
if mibBuilder.loadTexts:
    slbNewCfgUrlBwmTable.setStatus("current")
_SlbNewCfgUrlBwmEntry_Object = MibTableRow
slbNewCfgUrlBwmEntry = _SlbNewCfgUrlBwmEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 9, 1)
)
slbNewCfgUrlBwmEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgUrlBwmVirtServIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgUrlBwmVirtServiceIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgUrlBwmUrlId"),
)
if mibBuilder.loadTexts:
    slbNewCfgUrlBwmEntry.setStatus("current")
_SlbNewCfgUrlBwmVirtServIndex_Type = Integer32
_SlbNewCfgUrlBwmVirtServIndex_Object = MibTableColumn
slbNewCfgUrlBwmVirtServIndex = _SlbNewCfgUrlBwmVirtServIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 9, 1, 1),
    _SlbNewCfgUrlBwmVirtServIndex_Type()
)
slbNewCfgUrlBwmVirtServIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgUrlBwmVirtServIndex.setStatus("current")
_SlbNewCfgUrlBwmVirtServiceIndex_Type = Integer32
_SlbNewCfgUrlBwmVirtServiceIndex_Object = MibTableColumn
slbNewCfgUrlBwmVirtServiceIndex = _SlbNewCfgUrlBwmVirtServiceIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 9, 1, 2),
    _SlbNewCfgUrlBwmVirtServiceIndex_Type()
)
slbNewCfgUrlBwmVirtServiceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgUrlBwmVirtServiceIndex.setStatus("current")
_SlbNewCfgUrlBwmUrlId_Type = Integer32
_SlbNewCfgUrlBwmUrlId_Object = MibTableColumn
slbNewCfgUrlBwmUrlId = _SlbNewCfgUrlBwmUrlId_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 9, 1, 3),
    _SlbNewCfgUrlBwmUrlId_Type()
)
slbNewCfgUrlBwmUrlId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgUrlBwmUrlId.setStatus("current")
_SlbNewCfgUrlBwmContract_Type = Integer32
_SlbNewCfgUrlBwmContract_Object = MibTableColumn
slbNewCfgUrlBwmContract = _SlbNewCfgUrlBwmContract_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 9, 1, 4),
    _SlbNewCfgUrlBwmContract_Type()
)
slbNewCfgUrlBwmContract.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgUrlBwmContract.setStatus("current")


class _SlbNewCfgUrlBwmDelete_Type(Integer32):
    """Custom type slbNewCfgUrlBwmDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewCfgUrlBwmDelete_Type.__name__ = "Integer32"
_SlbNewCfgUrlBwmDelete_Object = MibTableColumn
slbNewCfgUrlBwmDelete = _SlbNewCfgUrlBwmDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 9, 1, 5),
    _SlbNewCfgUrlBwmDelete_Type()
)
slbNewCfgUrlBwmDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgUrlBwmDelete.setStatus("current")
_SlbCurCfgContRuleTable_Object = MibTable
slbCurCfgContRuleTable = _SlbCurCfgContRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 10)
)
if mibBuilder.loadTexts:
    slbCurCfgContRuleTable.setStatus("current")
_SlbCurCfgContRuleEntry_Object = MibTableRow
slbCurCfgContRuleEntry = _SlbCurCfgContRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 10, 1)
)
slbCurCfgContRuleEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgContVirtServIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgContVirtServiceIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgContRuleIndex"),
)
if mibBuilder.loadTexts:
    slbCurCfgContRuleEntry.setStatus("current")
_SlbCurCfgContVirtServIndex_Type = Integer32
_SlbCurCfgContVirtServIndex_Object = MibTableColumn
slbCurCfgContVirtServIndex = _SlbCurCfgContVirtServIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 10, 1, 1),
    _SlbCurCfgContVirtServIndex_Type()
)
slbCurCfgContVirtServIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgContVirtServIndex.setStatus("current")
_SlbCurCfgContVirtServiceIndex_Type = Integer32
_SlbCurCfgContVirtServiceIndex_Object = MibTableColumn
slbCurCfgContVirtServiceIndex = _SlbCurCfgContVirtServiceIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 10, 1, 2),
    _SlbCurCfgContVirtServiceIndex_Type()
)
slbCurCfgContVirtServiceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgContVirtServiceIndex.setStatus("current")
_SlbCurCfgContRuleIndex_Type = Integer32
_SlbCurCfgContRuleIndex_Object = MibTableColumn
slbCurCfgContRuleIndex = _SlbCurCfgContRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 10, 1, 3),
    _SlbCurCfgContRuleIndex_Type()
)
slbCurCfgContRuleIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgContRuleIndex.setStatus("current")


class _SlbCurCfgContRuleName_Type(DisplayString):
    """Custom type slbCurCfgContRuleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurCfgContRuleName_Type.__name__ = "DisplayString"
_SlbCurCfgContRuleName_Object = MibTableColumn
slbCurCfgContRuleName = _SlbCurCfgContRuleName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 10, 1, 4),
    _SlbCurCfgContRuleName_Type()
)
slbCurCfgContRuleName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgContRuleName.setStatus("current")


class _SlbCurCfgContRuleContClass_Type(DisplayString):
    """Custom type slbCurCfgContRuleContClass based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurCfgContRuleContClass_Type.__name__ = "DisplayString"
_SlbCurCfgContRuleContClass_Object = MibTableColumn
slbCurCfgContRuleContClass = _SlbCurCfgContRuleContClass_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 10, 1, 5),
    _SlbCurCfgContRuleContClass_Type()
)
slbCurCfgContRuleContClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgContRuleContClass.setStatus("current")


class _SlbCurCfgContRuleAction_Type(Integer32):
    """Custom type slbCurCfgContRuleAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("appredir", 2),
          ("discard", 3),
          ("goto", 4),
          ("group", 1))
    )


_SlbCurCfgContRuleAction_Type.__name__ = "Integer32"
_SlbCurCfgContRuleAction_Object = MibTableColumn
slbCurCfgContRuleAction = _SlbCurCfgContRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 10, 1, 6),
    _SlbCurCfgContRuleAction_Type()
)
slbCurCfgContRuleAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgContRuleAction.setStatus("current")


class _SlbCurCfgContRuleRealGrpNum_Type(Integer32):
    """Custom type slbCurCfgContRuleRealGrpNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_SlbCurCfgContRuleRealGrpNum_Type.__name__ = "Integer32"
_SlbCurCfgContRuleRealGrpNum_Object = MibTableColumn
slbCurCfgContRuleRealGrpNum = _SlbCurCfgContRuleRealGrpNum_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 10, 1, 7),
    _SlbCurCfgContRuleRealGrpNum_Type()
)
slbCurCfgContRuleRealGrpNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgContRuleRealGrpNum.setStatus("current")


class _SlbCurCfgContRuleGotoRuleNum_Type(Integer32):
    """Custom type slbCurCfgContRuleGotoRuleNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12800),
    )


_SlbCurCfgContRuleGotoRuleNum_Type.__name__ = "Integer32"
_SlbCurCfgContRuleGotoRuleNum_Object = MibTableColumn
slbCurCfgContRuleGotoRuleNum = _SlbCurCfgContRuleGotoRuleNum_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 10, 1, 8),
    _SlbCurCfgContRuleGotoRuleNum_Type()
)
slbCurCfgContRuleGotoRuleNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgContRuleGotoRuleNum.setStatus("current")


class _SlbCurCfgContRuleRedirection_Type(DisplayString):
    """Custom type slbCurCfgContRuleRedirection based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SlbCurCfgContRuleRedirection_Type.__name__ = "DisplayString"
_SlbCurCfgContRuleRedirection_Object = MibTableColumn
slbCurCfgContRuleRedirection = _SlbCurCfgContRuleRedirection_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 10, 1, 9),
    _SlbCurCfgContRuleRedirection_Type()
)
slbCurCfgContRuleRedirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgContRuleRedirection.setStatus("current")


class _SlbCurCfgContRuleState_Type(Integer32):
    """Custom type slbCurCfgContRuleState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgContRuleState_Type.__name__ = "Integer32"
_SlbCurCfgContRuleState_Object = MibTableColumn
slbCurCfgContRuleState = _SlbCurCfgContRuleState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 10, 1, 10),
    _SlbCurCfgContRuleState_Type()
)
slbCurCfgContRuleState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgContRuleState.setStatus("current")
_SlbNewCfgContRuleTable_Object = MibTable
slbNewCfgContRuleTable = _SlbNewCfgContRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 11)
)
if mibBuilder.loadTexts:
    slbNewCfgContRuleTable.setStatus("current")
_SlbNewCfgContRuleEntry_Object = MibTableRow
slbNewCfgContRuleEntry = _SlbNewCfgContRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 11, 1)
)
slbNewCfgContRuleEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgContVirtServIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgContVirtServiceIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgContRuleIndex"),
)
if mibBuilder.loadTexts:
    slbNewCfgContRuleEntry.setStatus("current")
_SlbNewCfgContVirtServIndex_Type = Integer32
_SlbNewCfgContVirtServIndex_Object = MibTableColumn
slbNewCfgContVirtServIndex = _SlbNewCfgContVirtServIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 11, 1, 1),
    _SlbNewCfgContVirtServIndex_Type()
)
slbNewCfgContVirtServIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgContVirtServIndex.setStatus("current")
_SlbNewCfgContVirtServiceIndex_Type = Integer32
_SlbNewCfgContVirtServiceIndex_Object = MibTableColumn
slbNewCfgContVirtServiceIndex = _SlbNewCfgContVirtServiceIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 11, 1, 2),
    _SlbNewCfgContVirtServiceIndex_Type()
)
slbNewCfgContVirtServiceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgContVirtServiceIndex.setStatus("current")
_SlbNewCfgContRuleIndex_Type = Integer32
_SlbNewCfgContRuleIndex_Object = MibTableColumn
slbNewCfgContRuleIndex = _SlbNewCfgContRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 11, 1, 3),
    _SlbNewCfgContRuleIndex_Type()
)
slbNewCfgContRuleIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgContRuleIndex.setStatus("current")


class _SlbNewCfgContRuleName_Type(DisplayString):
    """Custom type slbNewCfgContRuleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewCfgContRuleName_Type.__name__ = "DisplayString"
_SlbNewCfgContRuleName_Object = MibTableColumn
slbNewCfgContRuleName = _SlbNewCfgContRuleName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 11, 1, 4),
    _SlbNewCfgContRuleName_Type()
)
slbNewCfgContRuleName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgContRuleName.setStatus("current")


class _SlbNewCfgContRuleContClass_Type(DisplayString):
    """Custom type slbNewCfgContRuleContClass based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewCfgContRuleContClass_Type.__name__ = "DisplayString"
_SlbNewCfgContRuleContClass_Object = MibTableColumn
slbNewCfgContRuleContClass = _SlbNewCfgContRuleContClass_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 11, 1, 5),
    _SlbNewCfgContRuleContClass_Type()
)
slbNewCfgContRuleContClass.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgContRuleContClass.setStatus("current")


class _SlbNewCfgContRuleAction_Type(Integer32):
    """Custom type slbNewCfgContRuleAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("appredir", 2),
          ("discard", 3),
          ("goto", 4),
          ("group", 1))
    )


_SlbNewCfgContRuleAction_Type.__name__ = "Integer32"
_SlbNewCfgContRuleAction_Object = MibTableColumn
slbNewCfgContRuleAction = _SlbNewCfgContRuleAction_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 11, 1, 6),
    _SlbNewCfgContRuleAction_Type()
)
slbNewCfgContRuleAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgContRuleAction.setStatus("current")


class _SlbNewCfgContRuleRealGrpNum_Type(Integer32):
    """Custom type slbNewCfgContRuleRealGrpNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_SlbNewCfgContRuleRealGrpNum_Type.__name__ = "Integer32"
_SlbNewCfgContRuleRealGrpNum_Object = MibTableColumn
slbNewCfgContRuleRealGrpNum = _SlbNewCfgContRuleRealGrpNum_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 11, 1, 7),
    _SlbNewCfgContRuleRealGrpNum_Type()
)
slbNewCfgContRuleRealGrpNum.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgContRuleRealGrpNum.setStatus("current")


class _SlbNewCfgContRuleGotoRuleNum_Type(Integer32):
    """Custom type slbNewCfgContRuleGotoRuleNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12800),
    )


_SlbNewCfgContRuleGotoRuleNum_Type.__name__ = "Integer32"
_SlbNewCfgContRuleGotoRuleNum_Object = MibTableColumn
slbNewCfgContRuleGotoRuleNum = _SlbNewCfgContRuleGotoRuleNum_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 11, 1, 8),
    _SlbNewCfgContRuleGotoRuleNum_Type()
)
slbNewCfgContRuleGotoRuleNum.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgContRuleGotoRuleNum.setStatus("current")


class _SlbNewCfgContRuleRedirection_Type(DisplayString):
    """Custom type slbNewCfgContRuleRedirection based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SlbNewCfgContRuleRedirection_Type.__name__ = "DisplayString"
_SlbNewCfgContRuleRedirection_Object = MibTableColumn
slbNewCfgContRuleRedirection = _SlbNewCfgContRuleRedirection_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 11, 1, 9),
    _SlbNewCfgContRuleRedirection_Type()
)
slbNewCfgContRuleRedirection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgContRuleRedirection.setStatus("current")


class _SlbNewCfgContRuleCopy_Type(Integer32):
    """Custom type slbNewCfgContRuleCopy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12800),
    )


_SlbNewCfgContRuleCopy_Type.__name__ = "Integer32"
_SlbNewCfgContRuleCopy_Object = MibTableColumn
slbNewCfgContRuleCopy = _SlbNewCfgContRuleCopy_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 11, 1, 10),
    _SlbNewCfgContRuleCopy_Type()
)
slbNewCfgContRuleCopy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgContRuleCopy.setStatus("current")


class _SlbNewCfgContRuleState_Type(Integer32):
    """Custom type slbNewCfgContRuleState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgContRuleState_Type.__name__ = "Integer32"
_SlbNewCfgContRuleState_Object = MibTableColumn
slbNewCfgContRuleState = _SlbNewCfgContRuleState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 11, 1, 11),
    _SlbNewCfgContRuleState_Type()
)
slbNewCfgContRuleState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgContRuleState.setStatus("current")


class _SlbNewCfgContRuleDelete_Type(Integer32):
    """Custom type slbNewCfgContRuleDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewCfgContRuleDelete_Type.__name__ = "Integer32"
_SlbNewCfgContRuleDelete_Object = MibTableColumn
slbNewCfgContRuleDelete = _SlbNewCfgContRuleDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 11, 1, 12),
    _SlbNewCfgContRuleDelete_Type()
)
slbNewCfgContRuleDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgContRuleDelete.setStatus("current")
_SlbCurCfgVirtServicesSecondPartTable_Object = MibTable
slbCurCfgVirtServicesSecondPartTable = _SlbCurCfgVirtServicesSecondPartTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 12)
)
if mibBuilder.loadTexts:
    slbCurCfgVirtServicesSecondPartTable.setStatus("current")
_SlbCurCfgVirtServicesSecondPartEntry_Object = MibTableRow
slbCurCfgVirtServicesSecondPartEntry = _SlbCurCfgVirtServicesSecondPartEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 12, 1)
)
slbCurCfgVirtServicesSecondPartEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgVirtServSecondPartIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgVirtServiceSecondPartIndex"),
)
if mibBuilder.loadTexts:
    slbCurCfgVirtServicesSecondPartEntry.setStatus("current")
_SlbCurCfgVirtServSecondPartIndex_Type = Integer32
_SlbCurCfgVirtServSecondPartIndex_Object = MibTableColumn
slbCurCfgVirtServSecondPartIndex = _SlbCurCfgVirtServSecondPartIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 12, 1, 1),
    _SlbCurCfgVirtServSecondPartIndex_Type()
)
slbCurCfgVirtServSecondPartIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServSecondPartIndex.setStatus("current")
_SlbCurCfgVirtServiceSecondPartIndex_Type = Integer32
_SlbCurCfgVirtServiceSecondPartIndex_Object = MibTableColumn
slbCurCfgVirtServiceSecondPartIndex = _SlbCurCfgVirtServiceSecondPartIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 12, 1, 2),
    _SlbCurCfgVirtServiceSecondPartIndex_Type()
)
slbCurCfgVirtServiceSecondPartIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceSecondPartIndex.setStatus("current")


class _SlbCurCfgVirtServiceConnmgtStatus_Type(Integer32):
    """Custom type slbCurCfgVirtServiceConnmgtStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("muxenabled", 2),
          ("pooling", 1))
    )


_SlbCurCfgVirtServiceConnmgtStatus_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceConnmgtStatus_Object = MibTableColumn
slbCurCfgVirtServiceConnmgtStatus = _SlbCurCfgVirtServiceConnmgtStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 12, 1, 3),
    _SlbCurCfgVirtServiceConnmgtStatus_Type()
)
slbCurCfgVirtServiceConnmgtStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceConnmgtStatus.setStatus("current")


class _SlbCurCfgVirtServiceConnmgtTimeout_Type(Integer32):
    """Custom type slbCurCfgVirtServiceConnmgtTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32768),
    )


_SlbCurCfgVirtServiceConnmgtTimeout_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceConnmgtTimeout_Object = MibTableColumn
slbCurCfgVirtServiceConnmgtTimeout = _SlbCurCfgVirtServiceConnmgtTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 12, 1, 4),
    _SlbCurCfgVirtServiceConnmgtTimeout_Type()
)
slbCurCfgVirtServiceConnmgtTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceConnmgtTimeout.setStatus("current")


class _SlbCurCfgVirtServiceCachepol_Type(DisplayString):
    """Custom type slbCurCfgVirtServiceCachepol based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurCfgVirtServiceCachepol_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServiceCachepol_Object = MibTableColumn
slbCurCfgVirtServiceCachepol = _SlbCurCfgVirtServiceCachepol_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 12, 1, 5),
    _SlbCurCfgVirtServiceCachepol_Type()
)
slbCurCfgVirtServiceCachepol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceCachepol.setStatus("current")


class _SlbCurCfgVirtServiceComppol_Type(DisplayString):
    """Custom type slbCurCfgVirtServiceComppol based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurCfgVirtServiceComppol_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServiceComppol_Object = MibTableColumn
slbCurCfgVirtServiceComppol = _SlbCurCfgVirtServiceComppol_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 12, 1, 6),
    _SlbCurCfgVirtServiceComppol_Type()
)
slbCurCfgVirtServiceComppol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceComppol.setStatus("current")


class _SlbCurCfgVirtServiceSSLpol_Type(DisplayString):
    """Custom type slbCurCfgVirtServiceSSLpol based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurCfgVirtServiceSSLpol_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServiceSSLpol_Object = MibTableColumn
slbCurCfgVirtServiceSSLpol = _SlbCurCfgVirtServiceSSLpol_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 12, 1, 7),
    _SlbCurCfgVirtServiceSSLpol_Type()
)
slbCurCfgVirtServiceSSLpol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceSSLpol.setStatus("current")


class _SlbCurCfgVirtServiceServCert_Type(DisplayString):
    """Custom type slbCurCfgVirtServiceServCert based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurCfgVirtServiceServCert_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServiceServCert_Object = MibTableColumn
slbCurCfgVirtServiceServCert = _SlbCurCfgVirtServiceServCert_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 12, 1, 8),
    _SlbCurCfgVirtServiceServCert_Type()
)
slbCurCfgVirtServiceServCert.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceServCert.setStatus("current")


class _SlbCurCfgVirtServiceHttpmodList_Type(DisplayString):
    """Custom type slbCurCfgVirtServiceHttpmodList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurCfgVirtServiceHttpmodList_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServiceHttpmodList_Object = MibTableColumn
slbCurCfgVirtServiceHttpmodList = _SlbCurCfgVirtServiceHttpmodList_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 12, 1, 9),
    _SlbCurCfgVirtServiceHttpmodList_Type()
)
slbCurCfgVirtServiceHttpmodList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceHttpmodList.setStatus("current")


class _SlbCurCfgVirtServiceCloaksrv_Type(Integer32):
    """Custom type slbCurCfgVirtServiceCloaksrv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceCloaksrv_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceCloaksrv_Object = MibTableColumn
slbCurCfgVirtServiceCloaksrv = _SlbCurCfgVirtServiceCloaksrv_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 12, 1, 10),
    _SlbCurCfgVirtServiceCloaksrv_Type()
)
slbCurCfgVirtServiceCloaksrv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceCloaksrv.setStatus("current")


class _SlbCurCfgVirtServErrcodeStatus_Type(Integer32):
    """Custom type slbCurCfgVirtServErrcodeStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("clear", 3),
          ("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServErrcodeStatus_Type.__name__ = "Integer32"
_SlbCurCfgVirtServErrcodeStatus_Object = MibTableColumn
slbCurCfgVirtServErrcodeStatus = _SlbCurCfgVirtServErrcodeStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 12, 1, 11),
    _SlbCurCfgVirtServErrcodeStatus_Type()
)
slbCurCfgVirtServErrcodeStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServErrcodeStatus.setStatus("current")


class _SlbCurCfgVirtServErrcodeMatch_Type(DisplayString):
    """Custom type slbCurCfgVirtServErrcodeMatch based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SlbCurCfgVirtServErrcodeMatch_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServErrcodeMatch_Object = MibTableColumn
slbCurCfgVirtServErrcodeMatch = _SlbCurCfgVirtServErrcodeMatch_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 12, 1, 12),
    _SlbCurCfgVirtServErrcodeMatch_Type()
)
slbCurCfgVirtServErrcodeMatch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServErrcodeMatch.setStatus("current")


class _SlbCurCfgVirtServErrcodeHttpRedir_Type(Integer32):
    """Custom type slbCurCfgVirtServErrcodeHttpRedir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 2),
          ("yes", 1))
    )


_SlbCurCfgVirtServErrcodeHttpRedir_Type.__name__ = "Integer32"
_SlbCurCfgVirtServErrcodeHttpRedir_Object = MibTableColumn
slbCurCfgVirtServErrcodeHttpRedir = _SlbCurCfgVirtServErrcodeHttpRedir_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 12, 1, 13),
    _SlbCurCfgVirtServErrcodeHttpRedir_Type()
)
slbCurCfgVirtServErrcodeHttpRedir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServErrcodeHttpRedir.setStatus("current")


class _SlbCurCfgVirtServErrcodeUrl_Type(DisplayString):
    """Custom type slbCurCfgVirtServErrcodeUrl based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 240),
    )


_SlbCurCfgVirtServErrcodeUrl_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServErrcodeUrl_Object = MibTableColumn
slbCurCfgVirtServErrcodeUrl = _SlbCurCfgVirtServErrcodeUrl_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 12, 1, 14),
    _SlbCurCfgVirtServErrcodeUrl_Type()
)
slbCurCfgVirtServErrcodeUrl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServErrcodeUrl.setStatus("current")


class _SlbCurCfgVirtServErrcode_Type(DisplayString):
    """Custom type slbCurCfgVirtServErrcode based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_SlbCurCfgVirtServErrcode_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServErrcode_Object = MibTableColumn
slbCurCfgVirtServErrcode = _SlbCurCfgVirtServErrcode_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 12, 1, 15),
    _SlbCurCfgVirtServErrcode_Type()
)
slbCurCfgVirtServErrcode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServErrcode.setStatus("current")


class _SlbCurCfgVirtServErrcodeNew_Type(DisplayString):
    """Custom type slbCurCfgVirtServErrcodeNew based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_SlbCurCfgVirtServErrcodeNew_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServErrcodeNew_Object = MibTableColumn
slbCurCfgVirtServErrcodeNew = _SlbCurCfgVirtServErrcodeNew_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 12, 1, 16),
    _SlbCurCfgVirtServErrcodeNew_Type()
)
slbCurCfgVirtServErrcodeNew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServErrcodeNew.setStatus("current")


class _SlbCurCfgVirtServErrcodeReason_Type(DisplayString):
    """Custom type slbCurCfgVirtServErrcodeReason based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SlbCurCfgVirtServErrcodeReason_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServErrcodeReason_Object = MibTableColumn
slbCurCfgVirtServErrcodeReason = _SlbCurCfgVirtServErrcodeReason_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 12, 1, 17),
    _SlbCurCfgVirtServErrcodeReason_Type()
)
slbCurCfgVirtServErrcodeReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServErrcodeReason.setStatus("current")


class _SlbCurCfgVirtServUrlchangStatus_Type(Integer32):
    """Custom type slbCurCfgVirtServUrlchangStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("clear", 3),
          ("disable", 2),
          ("enable", 1))
    )


_SlbCurCfgVirtServUrlchangStatus_Type.__name__ = "Integer32"
_SlbCurCfgVirtServUrlchangStatus_Object = MibTableColumn
slbCurCfgVirtServUrlchangStatus = _SlbCurCfgVirtServUrlchangStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 12, 1, 18),
    _SlbCurCfgVirtServUrlchangStatus_Type()
)
slbCurCfgVirtServUrlchangStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServUrlchangStatus.setStatus("current")


class _SlbCurCfgVirtServUrlchangHostType_Type(Integer32):
    """Custom type slbCurCfgVirtServUrlchangHostType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("any", 5),
          ("eq", 3),
          ("incl", 4),
          ("prefx", 2),
          ("sufx", 1))
    )


_SlbCurCfgVirtServUrlchangHostType_Type.__name__ = "Integer32"
_SlbCurCfgVirtServUrlchangHostType_Object = MibTableColumn
slbCurCfgVirtServUrlchangHostType = _SlbCurCfgVirtServUrlchangHostType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 12, 1, 19),
    _SlbCurCfgVirtServUrlchangHostType_Type()
)
slbCurCfgVirtServUrlchangHostType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServUrlchangHostType.setStatus("current")
_SlbCurCfgVirtServicesThirdPartTable_Object = MibTable
slbCurCfgVirtServicesThirdPartTable = _SlbCurCfgVirtServicesThirdPartTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 13)
)
if mibBuilder.loadTexts:
    slbCurCfgVirtServicesThirdPartTable.setStatus("current")
_SlbCurCfgVirtServicesThirdPartEntry_Object = MibTableRow
slbCurCfgVirtServicesThirdPartEntry = _SlbCurCfgVirtServicesThirdPartEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 13, 1)
)
slbCurCfgVirtServicesThirdPartEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgVirtServThirdPartIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgVirtServiceThirdPartIndex"),
)
if mibBuilder.loadTexts:
    slbCurCfgVirtServicesThirdPartEntry.setStatus("current")
_SlbCurCfgVirtServThirdPartIndex_Type = Integer32
_SlbCurCfgVirtServThirdPartIndex_Object = MibTableColumn
slbCurCfgVirtServThirdPartIndex = _SlbCurCfgVirtServThirdPartIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 13, 1, 1),
    _SlbCurCfgVirtServThirdPartIndex_Type()
)
slbCurCfgVirtServThirdPartIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServThirdPartIndex.setStatus("current")
_SlbCurCfgVirtServiceThirdPartIndex_Type = Integer32
_SlbCurCfgVirtServiceThirdPartIndex_Object = MibTableColumn
slbCurCfgVirtServiceThirdPartIndex = _SlbCurCfgVirtServiceThirdPartIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 13, 1, 2),
    _SlbCurCfgVirtServiceThirdPartIndex_Type()
)
slbCurCfgVirtServiceThirdPartIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceThirdPartIndex.setStatus("current")


class _SlbCurCfgVirtServUrlchangHostName_Type(DisplayString):
    """Custom type slbCurCfgVirtServUrlchangHostName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 250),
    )


_SlbCurCfgVirtServUrlchangHostName_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServUrlchangHostName_Object = MibTableColumn
slbCurCfgVirtServUrlchangHostName = _SlbCurCfgVirtServUrlchangHostName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 13, 1, 3),
    _SlbCurCfgVirtServUrlchangHostName_Type()
)
slbCurCfgVirtServUrlchangHostName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServUrlchangHostName.setStatus("current")


class _SlbCurCfgVirtServUrlchangPathType_Type(Integer32):
    """Custom type slbCurCfgVirtServUrlchangPathType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("any", 5),
          ("eq", 3),
          ("incl", 4),
          ("none", 6),
          ("prefx", 2),
          ("sufx", 1))
    )


_SlbCurCfgVirtServUrlchangPathType_Type.__name__ = "Integer32"
_SlbCurCfgVirtServUrlchangPathType_Object = MibTableColumn
slbCurCfgVirtServUrlchangPathType = _SlbCurCfgVirtServUrlchangPathType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 13, 1, 4),
    _SlbCurCfgVirtServUrlchangPathType_Type()
)
slbCurCfgVirtServUrlchangPathType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServUrlchangPathType.setStatus("current")


class _SlbCurCfgVirtServUrlchangPathMatch_Type(DisplayString):
    """Custom type slbCurCfgVirtServUrlchangPathMatch based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 250),
    )


_SlbCurCfgVirtServUrlchangPathMatch_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServUrlchangPathMatch_Object = MibTableColumn
slbCurCfgVirtServUrlchangPathMatch = _SlbCurCfgVirtServUrlchangPathMatch_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 13, 1, 5),
    _SlbCurCfgVirtServUrlchangPathMatch_Type()
)
slbCurCfgVirtServUrlchangPathMatch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServUrlchangPathMatch.setStatus("current")


class _SlbCurCfgVirtServUrlchangPageName_Type(DisplayString):
    """Custom type slbCurCfgVirtServUrlchangPageName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SlbCurCfgVirtServUrlchangPageName_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServUrlchangPageName_Object = MibTableColumn
slbCurCfgVirtServUrlchangPageName = _SlbCurCfgVirtServUrlchangPageName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 13, 1, 6),
    _SlbCurCfgVirtServUrlchangPageName_Type()
)
slbCurCfgVirtServUrlchangPageName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServUrlchangPageName.setStatus("current")


class _SlbCurCfgVirtServUrlchangPageType_Type(DisplayString):
    """Custom type slbCurCfgVirtServUrlchangPageType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SlbCurCfgVirtServUrlchangPageType_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServUrlchangPageType_Object = MibTableColumn
slbCurCfgVirtServUrlchangPageType = _SlbCurCfgVirtServUrlchangPageType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 13, 1, 7),
    _SlbCurCfgVirtServUrlchangPageType_Type()
)
slbCurCfgVirtServUrlchangPageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServUrlchangPageType.setStatus("current")


class _SlbCurCfgVirtServUrlchangActnType_Type(Integer32):
    """Custom type slbCurCfgVirtServUrlchangActnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("insert", 1),
          ("none", 4),
          ("remove", 3),
          ("replace", 2))
    )


_SlbCurCfgVirtServUrlchangActnType_Type.__name__ = "Integer32"
_SlbCurCfgVirtServUrlchangActnType_Object = MibTableColumn
slbCurCfgVirtServUrlchangActnType = _SlbCurCfgVirtServUrlchangActnType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 13, 1, 8),
    _SlbCurCfgVirtServUrlchangActnType_Type()
)
slbCurCfgVirtServUrlchangActnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServUrlchangActnType.setStatus("current")


class _SlbCurCfgVirtServUrlchangPathInsrt_Type(DisplayString):
    """Custom type slbCurCfgVirtServUrlchangPathInsrt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 250),
    )


_SlbCurCfgVirtServUrlchangPathInsrt_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServUrlchangPathInsrt_Object = MibTableColumn
slbCurCfgVirtServUrlchangPathInsrt = _SlbCurCfgVirtServUrlchangPathInsrt_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 13, 1, 9),
    _SlbCurCfgVirtServUrlchangPathInsrt_Type()
)
slbCurCfgVirtServUrlchangPathInsrt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServUrlchangPathInsrt.setStatus("current")


class _SlbCurCfgVirtServUrlchangInsrtPostn_Type(Integer32):
    """Custom type slbCurCfgVirtServUrlchangInsrtPostn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("after", 2),
          ("before", 1))
    )


_SlbCurCfgVirtServUrlchangInsrtPostn_Type.__name__ = "Integer32"
_SlbCurCfgVirtServUrlchangInsrtPostn_Object = MibTableColumn
slbCurCfgVirtServUrlchangInsrtPostn = _SlbCurCfgVirtServUrlchangInsrtPostn_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 13, 1, 10),
    _SlbCurCfgVirtServUrlchangInsrtPostn_Type()
)
slbCurCfgVirtServUrlchangInsrtPostn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServUrlchangInsrtPostn.setStatus("current")
_SlbCurCfgVirtServicesFourthPartTable_Object = MibTable
slbCurCfgVirtServicesFourthPartTable = _SlbCurCfgVirtServicesFourthPartTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 14)
)
if mibBuilder.loadTexts:
    slbCurCfgVirtServicesFourthPartTable.setStatus("current")
_SlbCurCfgVirtServicesFourthPartEntry_Object = MibTableRow
slbCurCfgVirtServicesFourthPartEntry = _SlbCurCfgVirtServicesFourthPartEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 14, 1)
)
slbCurCfgVirtServicesFourthPartEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgVirtServFourthPartIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgVirtServiceFourthPartIndex"),
)
if mibBuilder.loadTexts:
    slbCurCfgVirtServicesFourthPartEntry.setStatus("current")
_SlbCurCfgVirtServFourthPartIndex_Type = Integer32
_SlbCurCfgVirtServFourthPartIndex_Object = MibTableColumn
slbCurCfgVirtServFourthPartIndex = _SlbCurCfgVirtServFourthPartIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 14, 1, 1),
    _SlbCurCfgVirtServFourthPartIndex_Type()
)
slbCurCfgVirtServFourthPartIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServFourthPartIndex.setStatus("current")
_SlbCurCfgVirtServiceFourthPartIndex_Type = Integer32
_SlbCurCfgVirtServiceFourthPartIndex_Object = MibTableColumn
slbCurCfgVirtServiceFourthPartIndex = _SlbCurCfgVirtServiceFourthPartIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 14, 1, 2),
    _SlbCurCfgVirtServiceFourthPartIndex_Type()
)
slbCurCfgVirtServiceFourthPartIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceFourthPartIndex.setStatus("current")


class _SlbCurCfgVirtServUrlchangNewPgName_Type(DisplayString):
    """Custom type slbCurCfgVirtServUrlchangNewPgName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SlbCurCfgVirtServUrlchangNewPgName_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServUrlchangNewPgName_Object = MibTableColumn
slbCurCfgVirtServUrlchangNewPgName = _SlbCurCfgVirtServUrlchangNewPgName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 14, 1, 3),
    _SlbCurCfgVirtServUrlchangNewPgName_Type()
)
slbCurCfgVirtServUrlchangNewPgName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServUrlchangNewPgName.setStatus("current")


class _SlbCurCfgVirtServUrlchangNewPgType_Type(DisplayString):
    """Custom type slbCurCfgVirtServUrlchangNewPgType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SlbCurCfgVirtServUrlchangNewPgType_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServUrlchangNewPgType_Object = MibTableColumn
slbCurCfgVirtServUrlchangNewPgType = _SlbCurCfgVirtServUrlchangNewPgType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 14, 1, 4),
    _SlbCurCfgVirtServUrlchangNewPgType_Type()
)
slbCurCfgVirtServUrlchangNewPgType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServUrlchangNewPgType.setStatus("current")


class _SlbCurCfgVirtServPathHideStatus_Type(Integer32):
    """Custom type slbCurCfgVirtServPathHideStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("clear", 3),
          ("disable", 2),
          ("enable", 1))
    )


_SlbCurCfgVirtServPathHideStatus_Type.__name__ = "Integer32"
_SlbCurCfgVirtServPathHideStatus_Object = MibTableColumn
slbCurCfgVirtServPathHideStatus = _SlbCurCfgVirtServPathHideStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 14, 1, 5),
    _SlbCurCfgVirtServPathHideStatus_Type()
)
slbCurCfgVirtServPathHideStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServPathHideStatus.setStatus("current")


class _SlbCurCfgVirtServPathHideHostType_Type(Integer32):
    """Custom type slbCurCfgVirtServPathHideHostType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("any", 5),
          ("eq", 3),
          ("incl", 4),
          ("prefx", 2),
          ("sufx", 1))
    )


_SlbCurCfgVirtServPathHideHostType_Type.__name__ = "Integer32"
_SlbCurCfgVirtServPathHideHostType_Object = MibTableColumn
slbCurCfgVirtServPathHideHostType = _SlbCurCfgVirtServPathHideHostType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 14, 1, 6),
    _SlbCurCfgVirtServPathHideHostType_Type()
)
slbCurCfgVirtServPathHideHostType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServPathHideHostType.setStatus("current")


class _SlbCurCfgVirtServPathHideHostName_Type(DisplayString):
    """Custom type slbCurCfgVirtServPathHideHostName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 250),
    )


_SlbCurCfgVirtServPathHideHostName_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServPathHideHostName_Object = MibTableColumn
slbCurCfgVirtServPathHideHostName = _SlbCurCfgVirtServPathHideHostName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 14, 1, 7),
    _SlbCurCfgVirtServPathHideHostName_Type()
)
slbCurCfgVirtServPathHideHostName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServPathHideHostName.setStatus("current")


class _SlbCurCfgVirtServPathHidePathType_Type(Integer32):
    """Custom type slbCurCfgVirtServPathHidePathType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("eq", 3),
          ("none", 4),
          ("prefx", 2),
          ("sufx", 1))
    )


_SlbCurCfgVirtServPathHidePathType_Type.__name__ = "Integer32"
_SlbCurCfgVirtServPathHidePathType_Object = MibTableColumn
slbCurCfgVirtServPathHidePathType = _SlbCurCfgVirtServPathHidePathType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 14, 1, 8),
    _SlbCurCfgVirtServPathHidePathType_Type()
)
slbCurCfgVirtServPathHidePathType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServPathHidePathType.setStatus("current")


class _SlbCurCfgVirtServPathHidePathName_Type(DisplayString):
    """Custom type slbCurCfgVirtServPathHidePathName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 250),
    )


_SlbCurCfgVirtServPathHidePathName_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServPathHidePathName_Object = MibTableColumn
slbCurCfgVirtServPathHidePathName = _SlbCurCfgVirtServPathHidePathName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 14, 1, 9),
    _SlbCurCfgVirtServPathHidePathName_Type()
)
slbCurCfgVirtServPathHidePathName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServPathHidePathName.setStatus("current")


class _SlbCurCfgVirtServTextrepStatus_Type(Integer32):
    """Custom type slbCurCfgVirtServTextrepStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("clear", 3),
          ("disable", 2),
          ("enable", 1))
    )


_SlbCurCfgVirtServTextrepStatus_Type.__name__ = "Integer32"
_SlbCurCfgVirtServTextrepStatus_Object = MibTableColumn
slbCurCfgVirtServTextrepStatus = _SlbCurCfgVirtServTextrepStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 14, 1, 10),
    _SlbCurCfgVirtServTextrepStatus_Type()
)
slbCurCfgVirtServTextrepStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServTextrepStatus.setStatus("current")


class _SlbCurCfgVirtServTextrepAction_Type(Integer32):
    """Custom type slbCurCfgVirtServTextrepAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("remove", 2),
          ("replace", 1))
    )


_SlbCurCfgVirtServTextrepAction_Type.__name__ = "Integer32"
_SlbCurCfgVirtServTextrepAction_Object = MibTableColumn
slbCurCfgVirtServTextrepAction = _SlbCurCfgVirtServTextrepAction_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 14, 1, 11),
    _SlbCurCfgVirtServTextrepAction_Type()
)
slbCurCfgVirtServTextrepAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServTextrepAction.setStatus("current")
_SlbCurCfgVirtServicesFifthPartTable_Object = MibTable
slbCurCfgVirtServicesFifthPartTable = _SlbCurCfgVirtServicesFifthPartTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 15)
)
if mibBuilder.loadTexts:
    slbCurCfgVirtServicesFifthPartTable.setStatus("current")
_SlbCurCfgVirtServicesFifthPartEntry_Object = MibTableRow
slbCurCfgVirtServicesFifthPartEntry = _SlbCurCfgVirtServicesFifthPartEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 15, 1)
)
slbCurCfgVirtServicesFifthPartEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgVirtServFifthPartIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgVirtServiceFifthPartIndex"),
)
if mibBuilder.loadTexts:
    slbCurCfgVirtServicesFifthPartEntry.setStatus("current")
_SlbCurCfgVirtServFifthPartIndex_Type = Integer32
_SlbCurCfgVirtServFifthPartIndex_Object = MibTableColumn
slbCurCfgVirtServFifthPartIndex = _SlbCurCfgVirtServFifthPartIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 15, 1, 1),
    _SlbCurCfgVirtServFifthPartIndex_Type()
)
slbCurCfgVirtServFifthPartIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServFifthPartIndex.setStatus("current")
_SlbCurCfgVirtServiceFifthPartIndex_Type = Integer32
_SlbCurCfgVirtServiceFifthPartIndex_Object = MibTableColumn
slbCurCfgVirtServiceFifthPartIndex = _SlbCurCfgVirtServiceFifthPartIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 15, 1, 2),
    _SlbCurCfgVirtServiceFifthPartIndex_Type()
)
slbCurCfgVirtServiceFifthPartIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceFifthPartIndex.setStatus("current")


class _SlbCurCfgVirtServTextrepMatchText_Type(DisplayString):
    """Custom type slbCurCfgVirtServTextrepMatchText based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SlbCurCfgVirtServTextrepMatchText_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServTextrepMatchText_Object = MibTableColumn
slbCurCfgVirtServTextrepMatchText = _SlbCurCfgVirtServTextrepMatchText_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 15, 1, 3),
    _SlbCurCfgVirtServTextrepMatchText_Type()
)
slbCurCfgVirtServTextrepMatchText.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServTextrepMatchText.setStatus("current")


class _SlbCurCfgVirtServTextrepReplacTxt_Type(DisplayString):
    """Custom type slbCurCfgVirtServTextrepReplacTxt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SlbCurCfgVirtServTextrepReplacTxt_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServTextrepReplacTxt_Object = MibTableColumn
slbCurCfgVirtServTextrepReplacTxt = _SlbCurCfgVirtServTextrepReplacTxt_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 15, 1, 4),
    _SlbCurCfgVirtServTextrepReplacTxt_Type()
)
slbCurCfgVirtServTextrepReplacTxt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServTextrepReplacTxt.setStatus("current")


class _SlbCurCfgVirtServApplicationType_Type(Integer32):
    """Custom type slbCurCfgVirtServApplicationType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("basic-slb", 1),
          ("dns", 2),
          ("ftp", 3),
          ("ftp-data", 4),
          ("http", 6),
          ("https", 7),
          ("ldap", 5),
          ("rtsp", 9),
          ("sip", 10),
          ("ssl", 8),
          ("tftp", 12),
          ("wts", 11))
    )


_SlbCurCfgVirtServApplicationType_Type.__name__ = "Integer32"
_SlbCurCfgVirtServApplicationType_Object = MibTableColumn
slbCurCfgVirtServApplicationType = _SlbCurCfgVirtServApplicationType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 15, 1, 5),
    _SlbCurCfgVirtServApplicationType_Type()
)
slbCurCfgVirtServApplicationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServApplicationType.setStatus("current")


class _SlbCurCfgVirtServiceName_Type(DisplayString):
    """Custom type slbCurCfgVirtServiceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurCfgVirtServiceName_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServiceName_Object = MibTableColumn
slbCurCfgVirtServiceName = _SlbCurCfgVirtServiceName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 15, 1, 6),
    _SlbCurCfgVirtServiceName_Type()
)
slbCurCfgVirtServiceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceName.setStatus("current")


class _SlbCurCfgVirtServiceAction_Type(Integer32):
    """Custom type slbCurCfgVirtServiceAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("discard", 3),
          ("group", 1),
          ("redirect", 2))
    )


_SlbCurCfgVirtServiceAction_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceAction_Object = MibTableColumn
slbCurCfgVirtServiceAction = _SlbCurCfgVirtServiceAction_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 15, 1, 7),
    _SlbCurCfgVirtServiceAction_Type()
)
slbCurCfgVirtServiceAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceAction.setStatus("current")


class _SlbCurCfgVirtServiceRedirect_Type(DisplayString):
    """Custom type slbCurCfgVirtServiceRedirect based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SlbCurCfgVirtServiceRedirect_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServiceRedirect_Object = MibTableColumn
slbCurCfgVirtServiceRedirect = _SlbCurCfgVirtServiceRedirect_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 15, 1, 8),
    _SlbCurCfgVirtServiceRedirect_Type()
)
slbCurCfgVirtServiceRedirect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceRedirect.setStatus("current")


class _SlbCurCfgVirtServiceServCertGrpMark_Type(Integer32):
    """Custom type slbCurCfgVirtServiceServCertGrpMark based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cert", 1),
          ("group", 2))
    )


_SlbCurCfgVirtServiceServCertGrpMark_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceServCertGrpMark_Object = MibTableColumn
slbCurCfgVirtServiceServCertGrpMark = _SlbCurCfgVirtServiceServCertGrpMark_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 15, 1, 9),
    _SlbCurCfgVirtServiceServCertGrpMark_Type()
)
slbCurCfgVirtServiceServCertGrpMark.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceServCertGrpMark.setStatus("current")


class _SlbCurCfgVirtServiceDnsType_Type(Integer32):
    """Custom type slbCurCfgVirtServiceDnsType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("both", 3),
          ("dns", 1),
          ("dnssec", 2))
    )


_SlbCurCfgVirtServiceDnsType_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceDnsType_Object = MibTableColumn
slbCurCfgVirtServiceDnsType = _SlbCurCfgVirtServiceDnsType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 15, 1, 10),
    _SlbCurCfgVirtServiceDnsType_Type()
)
slbCurCfgVirtServiceDnsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceDnsType.setStatus("current")


class _SlbCurCfgVirtServiceClntproxType_Type(Integer32):
    """Custom type slbCurCfgVirtServiceClntproxType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("http", 2),
          ("https", 3),
          ("none", 1))
    )


_SlbCurCfgVirtServiceClntproxType_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceClntproxType_Object = MibTableColumn
slbCurCfgVirtServiceClntproxType = _SlbCurCfgVirtServiceClntproxType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 15, 1, 11),
    _SlbCurCfgVirtServiceClntproxType_Type()
)
slbCurCfgVirtServiceClntproxType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceClntproxType.setStatus("current")


class _SlbCurCfgVirtServiceZerowinSize_Type(Integer32):
    """Custom type slbCurCfgVirtServiceZerowinSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceZerowinSize_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceZerowinSize_Object = MibTableColumn
slbCurCfgVirtServiceZerowinSize = _SlbCurCfgVirtServiceZerowinSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 15, 1, 12),
    _SlbCurCfgVirtServiceZerowinSize_Type()
)
slbCurCfgVirtServiceZerowinSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceZerowinSize.setStatus("current")


class _SlbCurCfgVirtServiceCookiePath_Type(DisplayString):
    """Custom type slbCurCfgVirtServiceCookiePath based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurCfgVirtServiceCookiePath_Type.__name__ = "DisplayString"
_SlbCurCfgVirtServiceCookiePath_Object = MibTableColumn
slbCurCfgVirtServiceCookiePath = _SlbCurCfgVirtServiceCookiePath_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 15, 1, 13),
    _SlbCurCfgVirtServiceCookiePath_Type()
)
slbCurCfgVirtServiceCookiePath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceCookiePath.setStatus("current")


class _SlbCurCfgVirtServiceCookieSecure_Type(Integer32):
    """Custom type slbCurCfgVirtServiceCookieSecure based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_SlbCurCfgVirtServiceCookieSecure_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceCookieSecure_Object = MibTableColumn
slbCurCfgVirtServiceCookieSecure = _SlbCurCfgVirtServiceCookieSecure_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 15, 1, 14),
    _SlbCurCfgVirtServiceCookieSecure_Type()
)
slbCurCfgVirtServiceCookieSecure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceCookieSecure.setStatus("current")


class _SlbCurCfgVirtServiceNoRtsp_Type(Integer32):
    """Custom type slbCurCfgVirtServiceNoRtsp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceNoRtsp_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceNoRtsp_Object = MibTableColumn
slbCurCfgVirtServiceNoRtsp = _SlbCurCfgVirtServiceNoRtsp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 15, 1, 15),
    _SlbCurCfgVirtServiceNoRtsp_Type()
)
slbCurCfgVirtServiceNoRtsp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceNoRtsp.setStatus("current")


class _SlbCurCfgVirtServiceCkRebind_Type(Integer32):
    """Custom type slbCurCfgVirtServiceCkRebind based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceCkRebind_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceCkRebind_Object = MibTableColumn
slbCurCfgVirtServiceCkRebind = _SlbCurCfgVirtServiceCkRebind_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 15, 1, 16),
    _SlbCurCfgVirtServiceCkRebind_Type()
)
slbCurCfgVirtServiceCkRebind.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceCkRebind.setStatus("current")


class _SlbCurCfgVirtServiceParseLimit_Type(Integer32):
    """Custom type slbCurCfgVirtServiceParseLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceParseLimit_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceParseLimit_Object = MibTableColumn
slbCurCfgVirtServiceParseLimit = _SlbCurCfgVirtServiceParseLimit_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 15, 1, 17),
    _SlbCurCfgVirtServiceParseLimit_Type()
)
slbCurCfgVirtServiceParseLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceParseLimit.setStatus("current")


class _SlbCurCfgVirtServiceParseLength_Type(Integer32):
    """Custom type slbCurCfgVirtServiceParseLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 18200),
    )


_SlbCurCfgVirtServiceParseLength_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceParseLength_Object = MibTableColumn
slbCurCfgVirtServiceParseLength = _SlbCurCfgVirtServiceParseLength_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 15, 1, 18),
    _SlbCurCfgVirtServiceParseLength_Type()
)
slbCurCfgVirtServiceParseLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceParseLength.setStatus("current")


class _SlbCurCfgVirtServiceUriNorm_Type(Integer32):
    """Custom type slbCurCfgVirtServiceUriNorm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgVirtServiceUriNorm_Type.__name__ = "Integer32"
_SlbCurCfgVirtServiceUriNorm_Object = MibTableColumn
slbCurCfgVirtServiceUriNorm = _SlbCurCfgVirtServiceUriNorm_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 15, 1, 19),
    _SlbCurCfgVirtServiceUriNorm_Type()
)
slbCurCfgVirtServiceUriNorm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgVirtServiceUriNorm.setStatus("current")
_SlbNewCfgVirtServicesSecondPartTable_Object = MibTable
slbNewCfgVirtServicesSecondPartTable = _SlbNewCfgVirtServicesSecondPartTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 16)
)
if mibBuilder.loadTexts:
    slbNewCfgVirtServicesSecondPartTable.setStatus("current")
_SlbNewCfgVirtServicesSecondPartEntry_Object = MibTableRow
slbNewCfgVirtServicesSecondPartEntry = _SlbNewCfgVirtServicesSecondPartEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 16, 1)
)
slbNewCfgVirtServicesSecondPartEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgVirtServSecondPartIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgVirtServiceSecondPartIndex"),
)
if mibBuilder.loadTexts:
    slbNewCfgVirtServicesSecondPartEntry.setStatus("current")
_SlbNewCfgVirtServSecondPartIndex_Type = Integer32
_SlbNewCfgVirtServSecondPartIndex_Object = MibTableColumn
slbNewCfgVirtServSecondPartIndex = _SlbNewCfgVirtServSecondPartIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 16, 1, 1),
    _SlbNewCfgVirtServSecondPartIndex_Type()
)
slbNewCfgVirtServSecondPartIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgVirtServSecondPartIndex.setStatus("current")
_SlbNewCfgVirtServiceSecondPartIndex_Type = Integer32
_SlbNewCfgVirtServiceSecondPartIndex_Object = MibTableColumn
slbNewCfgVirtServiceSecondPartIndex = _SlbNewCfgVirtServiceSecondPartIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 16, 1, 2),
    _SlbNewCfgVirtServiceSecondPartIndex_Type()
)
slbNewCfgVirtServiceSecondPartIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceSecondPartIndex.setStatus("current")


class _SlbNewCfgVirtServiceConnmgtStatus_Type(Integer32):
    """Custom type slbNewCfgVirtServiceConnmgtStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("muxenabled", 2),
          ("pooling", 1))
    )


_SlbNewCfgVirtServiceConnmgtStatus_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceConnmgtStatus_Object = MibTableColumn
slbNewCfgVirtServiceConnmgtStatus = _SlbNewCfgVirtServiceConnmgtStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 16, 1, 3),
    _SlbNewCfgVirtServiceConnmgtStatus_Type()
)
slbNewCfgVirtServiceConnmgtStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceConnmgtStatus.setStatus("current")


class _SlbNewCfgVirtServiceConnmgtTimeout_Type(Integer32):
    """Custom type slbNewCfgVirtServiceConnmgtTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32768),
    )


_SlbNewCfgVirtServiceConnmgtTimeout_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceConnmgtTimeout_Object = MibTableColumn
slbNewCfgVirtServiceConnmgtTimeout = _SlbNewCfgVirtServiceConnmgtTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 16, 1, 4),
    _SlbNewCfgVirtServiceConnmgtTimeout_Type()
)
slbNewCfgVirtServiceConnmgtTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceConnmgtTimeout.setStatus("current")


class _SlbNewCfgVirtServiceCachepol_Type(DisplayString):
    """Custom type slbNewCfgVirtServiceCachepol based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewCfgVirtServiceCachepol_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServiceCachepol_Object = MibTableColumn
slbNewCfgVirtServiceCachepol = _SlbNewCfgVirtServiceCachepol_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 16, 1, 5),
    _SlbNewCfgVirtServiceCachepol_Type()
)
slbNewCfgVirtServiceCachepol.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceCachepol.setStatus("current")


class _SlbNewCfgVirtServiceComppol_Type(DisplayString):
    """Custom type slbNewCfgVirtServiceComppol based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewCfgVirtServiceComppol_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServiceComppol_Object = MibTableColumn
slbNewCfgVirtServiceComppol = _SlbNewCfgVirtServiceComppol_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 16, 1, 6),
    _SlbNewCfgVirtServiceComppol_Type()
)
slbNewCfgVirtServiceComppol.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceComppol.setStatus("current")


class _SlbNewCfgVirtServiceSSLpol_Type(DisplayString):
    """Custom type slbNewCfgVirtServiceSSLpol based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewCfgVirtServiceSSLpol_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServiceSSLpol_Object = MibTableColumn
slbNewCfgVirtServiceSSLpol = _SlbNewCfgVirtServiceSSLpol_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 16, 1, 7),
    _SlbNewCfgVirtServiceSSLpol_Type()
)
slbNewCfgVirtServiceSSLpol.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceSSLpol.setStatus("current")


class _SlbNewCfgVirtServiceServCert_Type(DisplayString):
    """Custom type slbNewCfgVirtServiceServCert based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewCfgVirtServiceServCert_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServiceServCert_Object = MibTableColumn
slbNewCfgVirtServiceServCert = _SlbNewCfgVirtServiceServCert_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 16, 1, 8),
    _SlbNewCfgVirtServiceServCert_Type()
)
slbNewCfgVirtServiceServCert.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceServCert.setStatus("current")


class _SlbNewCfgVirtServiceHttpmodList_Type(DisplayString):
    """Custom type slbNewCfgVirtServiceHttpmodList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewCfgVirtServiceHttpmodList_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServiceHttpmodList_Object = MibTableColumn
slbNewCfgVirtServiceHttpmodList = _SlbNewCfgVirtServiceHttpmodList_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 16, 1, 9),
    _SlbNewCfgVirtServiceHttpmodList_Type()
)
slbNewCfgVirtServiceHttpmodList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceHttpmodList.setStatus("current")


class _SlbNewCfgVirtServiceCloaksrv_Type(Integer32):
    """Custom type slbNewCfgVirtServiceCloaksrv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceCloaksrv_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceCloaksrv_Object = MibTableColumn
slbNewCfgVirtServiceCloaksrv = _SlbNewCfgVirtServiceCloaksrv_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 16, 1, 10),
    _SlbNewCfgVirtServiceCloaksrv_Type()
)
slbNewCfgVirtServiceCloaksrv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceCloaksrv.setStatus("current")


class _SlbNewCfgVirtServErrcodeStatus_Type(Integer32):
    """Custom type slbNewCfgVirtServErrcodeStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("clear", 3),
          ("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServErrcodeStatus_Type.__name__ = "Integer32"
_SlbNewCfgVirtServErrcodeStatus_Object = MibTableColumn
slbNewCfgVirtServErrcodeStatus = _SlbNewCfgVirtServErrcodeStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 16, 1, 11),
    _SlbNewCfgVirtServErrcodeStatus_Type()
)
slbNewCfgVirtServErrcodeStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServErrcodeStatus.setStatus("current")


class _SlbNewCfgVirtServErrcodeMatch_Type(DisplayString):
    """Custom type slbNewCfgVirtServErrcodeMatch based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SlbNewCfgVirtServErrcodeMatch_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServErrcodeMatch_Object = MibTableColumn
slbNewCfgVirtServErrcodeMatch = _SlbNewCfgVirtServErrcodeMatch_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 16, 1, 12),
    _SlbNewCfgVirtServErrcodeMatch_Type()
)
slbNewCfgVirtServErrcodeMatch.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServErrcodeMatch.setStatus("current")


class _SlbNewCfgVirtServErrcodeHttpRedir_Type(Integer32):
    """Custom type slbNewCfgVirtServErrcodeHttpRedir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 2),
          ("yes", 1))
    )


_SlbNewCfgVirtServErrcodeHttpRedir_Type.__name__ = "Integer32"
_SlbNewCfgVirtServErrcodeHttpRedir_Object = MibTableColumn
slbNewCfgVirtServErrcodeHttpRedir = _SlbNewCfgVirtServErrcodeHttpRedir_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 16, 1, 13),
    _SlbNewCfgVirtServErrcodeHttpRedir_Type()
)
slbNewCfgVirtServErrcodeHttpRedir.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServErrcodeHttpRedir.setStatus("current")


class _SlbNewCfgVirtServErrcodeUrl_Type(DisplayString):
    """Custom type slbNewCfgVirtServErrcodeUrl based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 240),
    )


_SlbNewCfgVirtServErrcodeUrl_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServErrcodeUrl_Object = MibTableColumn
slbNewCfgVirtServErrcodeUrl = _SlbNewCfgVirtServErrcodeUrl_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 16, 1, 14),
    _SlbNewCfgVirtServErrcodeUrl_Type()
)
slbNewCfgVirtServErrcodeUrl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServErrcodeUrl.setStatus("current")


class _SlbNewCfgVirtServErrcode_Type(DisplayString):
    """Custom type slbNewCfgVirtServErrcode based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_SlbNewCfgVirtServErrcode_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServErrcode_Object = MibTableColumn
slbNewCfgVirtServErrcode = _SlbNewCfgVirtServErrcode_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 16, 1, 15),
    _SlbNewCfgVirtServErrcode_Type()
)
slbNewCfgVirtServErrcode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServErrcode.setStatus("current")


class _SlbNewCfgVirtServErrcodeNew_Type(DisplayString):
    """Custom type slbNewCfgVirtServErrcodeNew based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_SlbNewCfgVirtServErrcodeNew_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServErrcodeNew_Object = MibTableColumn
slbNewCfgVirtServErrcodeNew = _SlbNewCfgVirtServErrcodeNew_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 16, 1, 16),
    _SlbNewCfgVirtServErrcodeNew_Type()
)
slbNewCfgVirtServErrcodeNew.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServErrcodeNew.setStatus("current")


class _SlbNewCfgVirtServErrcodeReason_Type(DisplayString):
    """Custom type slbNewCfgVirtServErrcodeReason based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SlbNewCfgVirtServErrcodeReason_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServErrcodeReason_Object = MibTableColumn
slbNewCfgVirtServErrcodeReason = _SlbNewCfgVirtServErrcodeReason_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 16, 1, 17),
    _SlbNewCfgVirtServErrcodeReason_Type()
)
slbNewCfgVirtServErrcodeReason.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServErrcodeReason.setStatus("current")


class _SlbNewCfgVirtServUrlchangStatus_Type(Integer32):
    """Custom type slbNewCfgVirtServUrlchangStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("clear", 3),
          ("disable", 2),
          ("enable", 1))
    )


_SlbNewCfgVirtServUrlchangStatus_Type.__name__ = "Integer32"
_SlbNewCfgVirtServUrlchangStatus_Object = MibTableColumn
slbNewCfgVirtServUrlchangStatus = _SlbNewCfgVirtServUrlchangStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 16, 1, 18),
    _SlbNewCfgVirtServUrlchangStatus_Type()
)
slbNewCfgVirtServUrlchangStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServUrlchangStatus.setStatus("current")


class _SlbNewCfgVirtServUrlchangHostType_Type(Integer32):
    """Custom type slbNewCfgVirtServUrlchangHostType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("any", 5),
          ("eq", 3),
          ("incl", 4),
          ("prefx", 2),
          ("sufx", 1))
    )


_SlbNewCfgVirtServUrlchangHostType_Type.__name__ = "Integer32"
_SlbNewCfgVirtServUrlchangHostType_Object = MibTableColumn
slbNewCfgVirtServUrlchangHostType = _SlbNewCfgVirtServUrlchangHostType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 16, 1, 19),
    _SlbNewCfgVirtServUrlchangHostType_Type()
)
slbNewCfgVirtServUrlchangHostType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServUrlchangHostType.setStatus("current")
_SlbNewCfgVirtServicesThirdPartTable_Object = MibTable
slbNewCfgVirtServicesThirdPartTable = _SlbNewCfgVirtServicesThirdPartTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 17)
)
if mibBuilder.loadTexts:
    slbNewCfgVirtServicesThirdPartTable.setStatus("current")
_SlbNewCfgVirtServicesThirdPartEntry_Object = MibTableRow
slbNewCfgVirtServicesThirdPartEntry = _SlbNewCfgVirtServicesThirdPartEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 17, 1)
)
slbNewCfgVirtServicesThirdPartEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgVirtServThirdPartIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgVirtServiceThirdPartIndex"),
)
if mibBuilder.loadTexts:
    slbNewCfgVirtServicesThirdPartEntry.setStatus("current")
_SlbNewCfgVirtServThirdPartIndex_Type = Integer32
_SlbNewCfgVirtServThirdPartIndex_Object = MibTableColumn
slbNewCfgVirtServThirdPartIndex = _SlbNewCfgVirtServThirdPartIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 17, 1, 1),
    _SlbNewCfgVirtServThirdPartIndex_Type()
)
slbNewCfgVirtServThirdPartIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgVirtServThirdPartIndex.setStatus("current")
_SlbNewCfgVirtServiceThirdPartIndex_Type = Integer32
_SlbNewCfgVirtServiceThirdPartIndex_Object = MibTableColumn
slbNewCfgVirtServiceThirdPartIndex = _SlbNewCfgVirtServiceThirdPartIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 17, 1, 2),
    _SlbNewCfgVirtServiceThirdPartIndex_Type()
)
slbNewCfgVirtServiceThirdPartIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceThirdPartIndex.setStatus("current")


class _SlbNewCfgVirtServUrlchangHostName_Type(DisplayString):
    """Custom type slbNewCfgVirtServUrlchangHostName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 250),
    )


_SlbNewCfgVirtServUrlchangHostName_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServUrlchangHostName_Object = MibTableColumn
slbNewCfgVirtServUrlchangHostName = _SlbNewCfgVirtServUrlchangHostName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 17, 1, 3),
    _SlbNewCfgVirtServUrlchangHostName_Type()
)
slbNewCfgVirtServUrlchangHostName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServUrlchangHostName.setStatus("current")


class _SlbNewCfgVirtServUrlchangPathType_Type(Integer32):
    """Custom type slbNewCfgVirtServUrlchangPathType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("any", 5),
          ("eq", 3),
          ("incl", 4),
          ("none", 6),
          ("prefx", 2),
          ("sufx", 1))
    )


_SlbNewCfgVirtServUrlchangPathType_Type.__name__ = "Integer32"
_SlbNewCfgVirtServUrlchangPathType_Object = MibTableColumn
slbNewCfgVirtServUrlchangPathType = _SlbNewCfgVirtServUrlchangPathType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 17, 1, 4),
    _SlbNewCfgVirtServUrlchangPathType_Type()
)
slbNewCfgVirtServUrlchangPathType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServUrlchangPathType.setStatus("current")


class _SlbNewCfgVirtServUrlchangPathMatch_Type(DisplayString):
    """Custom type slbNewCfgVirtServUrlchangPathMatch based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 250),
    )


_SlbNewCfgVirtServUrlchangPathMatch_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServUrlchangPathMatch_Object = MibTableColumn
slbNewCfgVirtServUrlchangPathMatch = _SlbNewCfgVirtServUrlchangPathMatch_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 17, 1, 5),
    _SlbNewCfgVirtServUrlchangPathMatch_Type()
)
slbNewCfgVirtServUrlchangPathMatch.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServUrlchangPathMatch.setStatus("current")


class _SlbNewCfgVirtServUrlchangPageName_Type(DisplayString):
    """Custom type slbNewCfgVirtServUrlchangPageName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SlbNewCfgVirtServUrlchangPageName_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServUrlchangPageName_Object = MibTableColumn
slbNewCfgVirtServUrlchangPageName = _SlbNewCfgVirtServUrlchangPageName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 17, 1, 6),
    _SlbNewCfgVirtServUrlchangPageName_Type()
)
slbNewCfgVirtServUrlchangPageName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServUrlchangPageName.setStatus("current")


class _SlbNewCfgVirtServUrlchangPageType_Type(DisplayString):
    """Custom type slbNewCfgVirtServUrlchangPageType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SlbNewCfgVirtServUrlchangPageType_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServUrlchangPageType_Object = MibTableColumn
slbNewCfgVirtServUrlchangPageType = _SlbNewCfgVirtServUrlchangPageType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 17, 1, 7),
    _SlbNewCfgVirtServUrlchangPageType_Type()
)
slbNewCfgVirtServUrlchangPageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServUrlchangPageType.setStatus("current")


class _SlbNewCfgVirtServUrlchangActnType_Type(Integer32):
    """Custom type slbNewCfgVirtServUrlchangActnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("insert", 1),
          ("none", 4),
          ("remove", 3),
          ("replace", 2))
    )


_SlbNewCfgVirtServUrlchangActnType_Type.__name__ = "Integer32"
_SlbNewCfgVirtServUrlchangActnType_Object = MibTableColumn
slbNewCfgVirtServUrlchangActnType = _SlbNewCfgVirtServUrlchangActnType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 17, 1, 8),
    _SlbNewCfgVirtServUrlchangActnType_Type()
)
slbNewCfgVirtServUrlchangActnType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServUrlchangActnType.setStatus("current")


class _SlbNewCfgVirtServUrlchangPathInsrt_Type(DisplayString):
    """Custom type slbNewCfgVirtServUrlchangPathInsrt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 250),
    )


_SlbNewCfgVirtServUrlchangPathInsrt_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServUrlchangPathInsrt_Object = MibTableColumn
slbNewCfgVirtServUrlchangPathInsrt = _SlbNewCfgVirtServUrlchangPathInsrt_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 17, 1, 9),
    _SlbNewCfgVirtServUrlchangPathInsrt_Type()
)
slbNewCfgVirtServUrlchangPathInsrt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServUrlchangPathInsrt.setStatus("current")


class _SlbNewCfgVirtServUrlchangInsrtPostn_Type(Integer32):
    """Custom type slbNewCfgVirtServUrlchangInsrtPostn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("after", 2),
          ("before", 1))
    )


_SlbNewCfgVirtServUrlchangInsrtPostn_Type.__name__ = "Integer32"
_SlbNewCfgVirtServUrlchangInsrtPostn_Object = MibTableColumn
slbNewCfgVirtServUrlchangInsrtPostn = _SlbNewCfgVirtServUrlchangInsrtPostn_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 17, 1, 10),
    _SlbNewCfgVirtServUrlchangInsrtPostn_Type()
)
slbNewCfgVirtServUrlchangInsrtPostn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServUrlchangInsrtPostn.setStatus("current")
_SlbNewCfgVirtServicesFourthPartTable_Object = MibTable
slbNewCfgVirtServicesFourthPartTable = _SlbNewCfgVirtServicesFourthPartTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 18)
)
if mibBuilder.loadTexts:
    slbNewCfgVirtServicesFourthPartTable.setStatus("current")
_SlbNewCfgVirtServicesFourthPartEntry_Object = MibTableRow
slbNewCfgVirtServicesFourthPartEntry = _SlbNewCfgVirtServicesFourthPartEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 18, 1)
)
slbNewCfgVirtServicesFourthPartEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgVirtServFourthPartIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgVirtServiceFourthPartIndex"),
)
if mibBuilder.loadTexts:
    slbNewCfgVirtServicesFourthPartEntry.setStatus("current")
_SlbNewCfgVirtServFourthPartIndex_Type = Integer32
_SlbNewCfgVirtServFourthPartIndex_Object = MibTableColumn
slbNewCfgVirtServFourthPartIndex = _SlbNewCfgVirtServFourthPartIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 18, 1, 1),
    _SlbNewCfgVirtServFourthPartIndex_Type()
)
slbNewCfgVirtServFourthPartIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgVirtServFourthPartIndex.setStatus("current")
_SlbNewCfgVirtServiceFourthPartIndex_Type = Integer32
_SlbNewCfgVirtServiceFourthPartIndex_Object = MibTableColumn
slbNewCfgVirtServiceFourthPartIndex = _SlbNewCfgVirtServiceFourthPartIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 18, 1, 2),
    _SlbNewCfgVirtServiceFourthPartIndex_Type()
)
slbNewCfgVirtServiceFourthPartIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceFourthPartIndex.setStatus("current")


class _SlbNewCfgVirtServUrlchangNewPgName_Type(DisplayString):
    """Custom type slbNewCfgVirtServUrlchangNewPgName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SlbNewCfgVirtServUrlchangNewPgName_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServUrlchangNewPgName_Object = MibTableColumn
slbNewCfgVirtServUrlchangNewPgName = _SlbNewCfgVirtServUrlchangNewPgName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 18, 1, 3),
    _SlbNewCfgVirtServUrlchangNewPgName_Type()
)
slbNewCfgVirtServUrlchangNewPgName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServUrlchangNewPgName.setStatus("current")


class _SlbNewCfgVirtServUrlchangNewPgType_Type(DisplayString):
    """Custom type slbNewCfgVirtServUrlchangNewPgType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SlbNewCfgVirtServUrlchangNewPgType_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServUrlchangNewPgType_Object = MibTableColumn
slbNewCfgVirtServUrlchangNewPgType = _SlbNewCfgVirtServUrlchangNewPgType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 18, 1, 4),
    _SlbNewCfgVirtServUrlchangNewPgType_Type()
)
slbNewCfgVirtServUrlchangNewPgType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServUrlchangNewPgType.setStatus("current")


class _SlbNewCfgVirtServPathHideStatus_Type(Integer32):
    """Custom type slbNewCfgVirtServPathHideStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("clear", 3),
          ("disable", 2),
          ("enable", 1))
    )


_SlbNewCfgVirtServPathHideStatus_Type.__name__ = "Integer32"
_SlbNewCfgVirtServPathHideStatus_Object = MibTableColumn
slbNewCfgVirtServPathHideStatus = _SlbNewCfgVirtServPathHideStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 18, 1, 5),
    _SlbNewCfgVirtServPathHideStatus_Type()
)
slbNewCfgVirtServPathHideStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServPathHideStatus.setStatus("current")


class _SlbNewCfgVirtServPathHideHostType_Type(Integer32):
    """Custom type slbNewCfgVirtServPathHideHostType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("any", 5),
          ("eq", 3),
          ("incl", 4),
          ("prefx", 2),
          ("sufx", 1))
    )


_SlbNewCfgVirtServPathHideHostType_Type.__name__ = "Integer32"
_SlbNewCfgVirtServPathHideHostType_Object = MibTableColumn
slbNewCfgVirtServPathHideHostType = _SlbNewCfgVirtServPathHideHostType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 18, 1, 6),
    _SlbNewCfgVirtServPathHideHostType_Type()
)
slbNewCfgVirtServPathHideHostType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServPathHideHostType.setStatus("current")


class _SlbNewCfgVirtServPathHideHostName_Type(DisplayString):
    """Custom type slbNewCfgVirtServPathHideHostName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 250),
    )


_SlbNewCfgVirtServPathHideHostName_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServPathHideHostName_Object = MibTableColumn
slbNewCfgVirtServPathHideHostName = _SlbNewCfgVirtServPathHideHostName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 18, 1, 7),
    _SlbNewCfgVirtServPathHideHostName_Type()
)
slbNewCfgVirtServPathHideHostName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServPathHideHostName.setStatus("current")


class _SlbNewCfgVirtServPathHidePathType_Type(Integer32):
    """Custom type slbNewCfgVirtServPathHidePathType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("eq", 3),
          ("none", 4),
          ("prefx", 2),
          ("sufx", 1))
    )


_SlbNewCfgVirtServPathHidePathType_Type.__name__ = "Integer32"
_SlbNewCfgVirtServPathHidePathType_Object = MibTableColumn
slbNewCfgVirtServPathHidePathType = _SlbNewCfgVirtServPathHidePathType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 18, 1, 8),
    _SlbNewCfgVirtServPathHidePathType_Type()
)
slbNewCfgVirtServPathHidePathType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServPathHidePathType.setStatus("current")


class _SlbNewCfgVirtServPathHidePathName_Type(DisplayString):
    """Custom type slbNewCfgVirtServPathHidePathName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 250),
    )


_SlbNewCfgVirtServPathHidePathName_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServPathHidePathName_Object = MibTableColumn
slbNewCfgVirtServPathHidePathName = _SlbNewCfgVirtServPathHidePathName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 18, 1, 9),
    _SlbNewCfgVirtServPathHidePathName_Type()
)
slbNewCfgVirtServPathHidePathName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServPathHidePathName.setStatus("current")


class _SlbNewCfgVirtServTextrepStatus_Type(Integer32):
    """Custom type slbNewCfgVirtServTextrepStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("clear", 3),
          ("disable", 2),
          ("enable", 1))
    )


_SlbNewCfgVirtServTextrepStatus_Type.__name__ = "Integer32"
_SlbNewCfgVirtServTextrepStatus_Object = MibTableColumn
slbNewCfgVirtServTextrepStatus = _SlbNewCfgVirtServTextrepStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 18, 1, 10),
    _SlbNewCfgVirtServTextrepStatus_Type()
)
slbNewCfgVirtServTextrepStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServTextrepStatus.setStatus("current")


class _SlbNewCfgVirtServTextrepAction_Type(Integer32):
    """Custom type slbNewCfgVirtServTextrepAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("remove", 2),
          ("replace", 1))
    )


_SlbNewCfgVirtServTextrepAction_Type.__name__ = "Integer32"
_SlbNewCfgVirtServTextrepAction_Object = MibTableColumn
slbNewCfgVirtServTextrepAction = _SlbNewCfgVirtServTextrepAction_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 18, 1, 11),
    _SlbNewCfgVirtServTextrepAction_Type()
)
slbNewCfgVirtServTextrepAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServTextrepAction.setStatus("current")
_SlbNewCfgVirtServicesFifthPartTable_Object = MibTable
slbNewCfgVirtServicesFifthPartTable = _SlbNewCfgVirtServicesFifthPartTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 19)
)
if mibBuilder.loadTexts:
    slbNewCfgVirtServicesFifthPartTable.setStatus("current")
_SlbNewCfgVirtServicesFifthPartEntry_Object = MibTableRow
slbNewCfgVirtServicesFifthPartEntry = _SlbNewCfgVirtServicesFifthPartEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 19, 1)
)
slbNewCfgVirtServicesFifthPartEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgVirtServFifthPartIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgVirtServiceFifthPartIndex"),
)
if mibBuilder.loadTexts:
    slbNewCfgVirtServicesFifthPartEntry.setStatus("current")
_SlbNewCfgVirtServFifthPartIndex_Type = Integer32
_SlbNewCfgVirtServFifthPartIndex_Object = MibTableColumn
slbNewCfgVirtServFifthPartIndex = _SlbNewCfgVirtServFifthPartIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 19, 1, 1),
    _SlbNewCfgVirtServFifthPartIndex_Type()
)
slbNewCfgVirtServFifthPartIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgVirtServFifthPartIndex.setStatus("current")
_SlbNewCfgVirtServiceFifthPartIndex_Type = Integer32
_SlbNewCfgVirtServiceFifthPartIndex_Object = MibTableColumn
slbNewCfgVirtServiceFifthPartIndex = _SlbNewCfgVirtServiceFifthPartIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 19, 1, 2),
    _SlbNewCfgVirtServiceFifthPartIndex_Type()
)
slbNewCfgVirtServiceFifthPartIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceFifthPartIndex.setStatus("current")


class _SlbNewCfgVirtServTextrepMatchText_Type(DisplayString):
    """Custom type slbNewCfgVirtServTextrepMatchText based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SlbNewCfgVirtServTextrepMatchText_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServTextrepMatchText_Object = MibTableColumn
slbNewCfgVirtServTextrepMatchText = _SlbNewCfgVirtServTextrepMatchText_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 19, 1, 3),
    _SlbNewCfgVirtServTextrepMatchText_Type()
)
slbNewCfgVirtServTextrepMatchText.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServTextrepMatchText.setStatus("current")


class _SlbNewCfgVirtServTextrepReplacTxt_Type(DisplayString):
    """Custom type slbNewCfgVirtServTextrepReplacTxt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SlbNewCfgVirtServTextrepReplacTxt_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServTextrepReplacTxt_Object = MibTableColumn
slbNewCfgVirtServTextrepReplacTxt = _SlbNewCfgVirtServTextrepReplacTxt_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 19, 1, 4),
    _SlbNewCfgVirtServTextrepReplacTxt_Type()
)
slbNewCfgVirtServTextrepReplacTxt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServTextrepReplacTxt.setStatus("current")


class _SlbNewCfgVirtServApplicationType_Type(Integer32):
    """Custom type slbNewCfgVirtServApplicationType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("basic-slb", 1),
          ("dns", 2),
          ("ftp", 3),
          ("ftp-data", 4),
          ("http", 6),
          ("https", 7),
          ("ldap", 5),
          ("rtsp", 9),
          ("sip", 10),
          ("ssl", 8),
          ("tftp", 12),
          ("wts", 11))
    )


_SlbNewCfgVirtServApplicationType_Type.__name__ = "Integer32"
_SlbNewCfgVirtServApplicationType_Object = MibTableColumn
slbNewCfgVirtServApplicationType = _SlbNewCfgVirtServApplicationType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 19, 1, 5),
    _SlbNewCfgVirtServApplicationType_Type()
)
slbNewCfgVirtServApplicationType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServApplicationType.setStatus("current")


class _SlbNewCfgVirtServiceName_Type(DisplayString):
    """Custom type slbNewCfgVirtServiceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewCfgVirtServiceName_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServiceName_Object = MibTableColumn
slbNewCfgVirtServiceName = _SlbNewCfgVirtServiceName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 19, 1, 6),
    _SlbNewCfgVirtServiceName_Type()
)
slbNewCfgVirtServiceName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceName.setStatus("current")


class _SlbNewCfgVirtServiceAction_Type(Integer32):
    """Custom type slbNewCfgVirtServiceAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("discard", 3),
          ("group", 1),
          ("redirect", 2))
    )


_SlbNewCfgVirtServiceAction_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceAction_Object = MibTableColumn
slbNewCfgVirtServiceAction = _SlbNewCfgVirtServiceAction_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 19, 1, 7),
    _SlbNewCfgVirtServiceAction_Type()
)
slbNewCfgVirtServiceAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceAction.setStatus("current")


class _SlbNewCfgVirtServiceRedirect_Type(DisplayString):
    """Custom type slbNewCfgVirtServiceRedirect based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SlbNewCfgVirtServiceRedirect_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServiceRedirect_Object = MibTableColumn
slbNewCfgVirtServiceRedirect = _SlbNewCfgVirtServiceRedirect_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 19, 1, 8),
    _SlbNewCfgVirtServiceRedirect_Type()
)
slbNewCfgVirtServiceRedirect.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceRedirect.setStatus("current")


class _SlbNewCfgVirtServiceServCertGrpMark_Type(Integer32):
    """Custom type slbNewCfgVirtServiceServCertGrpMark based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cert", 1),
          ("group", 2))
    )


_SlbNewCfgVirtServiceServCertGrpMark_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceServCertGrpMark_Object = MibTableColumn
slbNewCfgVirtServiceServCertGrpMark = _SlbNewCfgVirtServiceServCertGrpMark_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 19, 1, 9),
    _SlbNewCfgVirtServiceServCertGrpMark_Type()
)
slbNewCfgVirtServiceServCertGrpMark.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceServCertGrpMark.setStatus("current")


class _SlbNewCfgVirtServiceDnsType_Type(Integer32):
    """Custom type slbNewCfgVirtServiceDnsType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("both", 3),
          ("dns", 1),
          ("dnssec", 2))
    )


_SlbNewCfgVirtServiceDnsType_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceDnsType_Object = MibTableColumn
slbNewCfgVirtServiceDnsType = _SlbNewCfgVirtServiceDnsType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 19, 1, 10),
    _SlbNewCfgVirtServiceDnsType_Type()
)
slbNewCfgVirtServiceDnsType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceDnsType.setStatus("current")


class _SlbNewCfgVirtServiceClntproxType_Type(Integer32):
    """Custom type slbNewCfgVirtServiceClntproxType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("http", 2),
          ("https", 3),
          ("none", 1))
    )


_SlbNewCfgVirtServiceClntproxType_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceClntproxType_Object = MibTableColumn
slbNewCfgVirtServiceClntproxType = _SlbNewCfgVirtServiceClntproxType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 19, 1, 11),
    _SlbNewCfgVirtServiceClntproxType_Type()
)
slbNewCfgVirtServiceClntproxType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceClntproxType.setStatus("current")


class _SlbNewCfgVirtServiceZerowinSize_Type(Integer32):
    """Custom type slbNewCfgVirtServiceZerowinSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceZerowinSize_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceZerowinSize_Object = MibTableColumn
slbNewCfgVirtServiceZerowinSize = _SlbNewCfgVirtServiceZerowinSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 19, 1, 12),
    _SlbNewCfgVirtServiceZerowinSize_Type()
)
slbNewCfgVirtServiceZerowinSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceZerowinSize.setStatus("current")


class _SlbNewCfgVirtServiceCookiePath_Type(DisplayString):
    """Custom type slbNewCfgVirtServiceCookiePath based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewCfgVirtServiceCookiePath_Type.__name__ = "DisplayString"
_SlbNewCfgVirtServiceCookiePath_Object = MibTableColumn
slbNewCfgVirtServiceCookiePath = _SlbNewCfgVirtServiceCookiePath_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 19, 1, 13),
    _SlbNewCfgVirtServiceCookiePath_Type()
)
slbNewCfgVirtServiceCookiePath.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceCookiePath.setStatus("current")


class _SlbNewCfgVirtServiceCookieSecure_Type(Integer32):
    """Custom type slbNewCfgVirtServiceCookieSecure based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_SlbNewCfgVirtServiceCookieSecure_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceCookieSecure_Object = MibTableColumn
slbNewCfgVirtServiceCookieSecure = _SlbNewCfgVirtServiceCookieSecure_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 19, 1, 14),
    _SlbNewCfgVirtServiceCookieSecure_Type()
)
slbNewCfgVirtServiceCookieSecure.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceCookieSecure.setStatus("current")


class _SlbNewCfgVirtServiceNoRtsp_Type(Integer32):
    """Custom type slbNewCfgVirtServiceNoRtsp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceNoRtsp_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceNoRtsp_Object = MibTableColumn
slbNewCfgVirtServiceNoRtsp = _SlbNewCfgVirtServiceNoRtsp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 19, 1, 15),
    _SlbNewCfgVirtServiceNoRtsp_Type()
)
slbNewCfgVirtServiceNoRtsp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceNoRtsp.setStatus("current")


class _SlbNewCfgVirtServiceCkRebind_Type(Integer32):
    """Custom type slbNewCfgVirtServiceCkRebind based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceCkRebind_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceCkRebind_Object = MibTableColumn
slbNewCfgVirtServiceCkRebind = _SlbNewCfgVirtServiceCkRebind_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 19, 1, 16),
    _SlbNewCfgVirtServiceCkRebind_Type()
)
slbNewCfgVirtServiceCkRebind.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceCkRebind.setStatus("current")


class _SlbNewCfgVirtServiceParseLimit_Type(Integer32):
    """Custom type slbNewCfgVirtServiceParseLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceParseLimit_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceParseLimit_Object = MibTableColumn
slbNewCfgVirtServiceParseLimit = _SlbNewCfgVirtServiceParseLimit_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 19, 1, 17),
    _SlbNewCfgVirtServiceParseLimit_Type()
)
slbNewCfgVirtServiceParseLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceParseLimit.setStatus("current")


class _SlbNewCfgVirtServiceParseLength_Type(Integer32):
    """Custom type slbNewCfgVirtServiceParseLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 18200),
    )


_SlbNewCfgVirtServiceParseLength_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceParseLength_Object = MibTableColumn
slbNewCfgVirtServiceParseLength = _SlbNewCfgVirtServiceParseLength_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 19, 1, 18),
    _SlbNewCfgVirtServiceParseLength_Type()
)
slbNewCfgVirtServiceParseLength.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceParseLength.setStatus("current")


class _SlbNewCfgVirtServiceUriNorm_Type(Integer32):
    """Custom type slbNewCfgVirtServiceUriNorm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgVirtServiceUriNorm_Type.__name__ = "Integer32"
_SlbNewCfgVirtServiceUriNorm_Object = MibTableColumn
slbNewCfgVirtServiceUriNorm = _SlbNewCfgVirtServiceUriNorm_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 4, 19, 1, 19),
    _SlbNewCfgVirtServiceUriNorm_Type()
)
slbNewCfgVirtServiceUriNorm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgVirtServiceUriNorm.setStatus("current")
_PortCfg_ObjectIdentity = ObjectIdentity
portCfg = _PortCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5)
)
_SlbPortTableMaxSize_Type = Integer32
_SlbPortTableMaxSize_Object = MibScalar
slbPortTableMaxSize = _SlbPortTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 1),
    _SlbPortTableMaxSize_Type()
)
slbPortTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbPortTableMaxSize.setStatus("current")
_SlbCurCfgPortTable_Object = MibTable
slbCurCfgPortTable = _SlbCurCfgPortTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 2)
)
if mibBuilder.loadTexts:
    slbCurCfgPortTable.setStatus("current")
_SlbCurCfgPortEntry_Object = MibTableRow
slbCurCfgPortEntry = _SlbCurCfgPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 2, 1)
)
slbCurCfgPortEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgPortIndex"),
)
if mibBuilder.loadTexts:
    slbCurCfgPortEntry.setStatus("current")
_SlbCurCfgPortIndex_Type = Integer32
_SlbCurCfgPortIndex_Object = MibTableColumn
slbCurCfgPortIndex = _SlbCurCfgPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 2, 1, 1),
    _SlbCurCfgPortIndex_Type()
)
slbCurCfgPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPortIndex.setStatus("current")


class _SlbCurCfgPortSlbState_Type(Integer32):
    """Custom type slbCurCfgPortSlbState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("client", 2),
          ("client-server", 4),
          ("none", 1),
          ("server", 3))
    )


_SlbCurCfgPortSlbState_Type.__name__ = "Integer32"
_SlbCurCfgPortSlbState_Object = MibTableColumn
slbCurCfgPortSlbState = _SlbCurCfgPortSlbState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 2, 1, 2),
    _SlbCurCfgPortSlbState_Type()
)
slbCurCfgPortSlbState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPortSlbState.setStatus("current")


class _SlbCurCfgPortSlbHotStandby_Type(Integer32):
    """Custom type slbCurCfgPortSlbHotStandby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgPortSlbHotStandby_Type.__name__ = "Integer32"
_SlbCurCfgPortSlbHotStandby_Object = MibTableColumn
slbCurCfgPortSlbHotStandby = _SlbCurCfgPortSlbHotStandby_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 2, 1, 3),
    _SlbCurCfgPortSlbHotStandby_Type()
)
slbCurCfgPortSlbHotStandby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPortSlbHotStandby.setStatus("current")


class _SlbCurCfgPortSlbInterSwitch_Type(Integer32):
    """Custom type slbCurCfgPortSlbInterSwitch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgPortSlbInterSwitch_Type.__name__ = "Integer32"
_SlbCurCfgPortSlbInterSwitch_Object = MibTableColumn
slbCurCfgPortSlbInterSwitch = _SlbCurCfgPortSlbInterSwitch_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 2, 1, 4),
    _SlbCurCfgPortSlbInterSwitch_Type()
)
slbCurCfgPortSlbInterSwitch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPortSlbInterSwitch.setStatus("current")


class _SlbCurCfgPortSlbPipState_Type(Integer32):
    """Custom type slbCurCfgPortSlbPipState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgPortSlbPipState_Type.__name__ = "Integer32"
_SlbCurCfgPortSlbPipState_Object = MibTableColumn
slbCurCfgPortSlbPipState = _SlbCurCfgPortSlbPipState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 2, 1, 5),
    _SlbCurCfgPortSlbPipState_Type()
)
slbCurCfgPortSlbPipState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPortSlbPipState.setStatus("current")


class _SlbCurCfgPortSlbRtsState_Type(Integer32):
    """Custom type slbCurCfgPortSlbRtsState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgPortSlbRtsState_Type.__name__ = "Integer32"
_SlbCurCfgPortSlbRtsState_Object = MibTableColumn
slbCurCfgPortSlbRtsState = _SlbCurCfgPortSlbRtsState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 2, 1, 6),
    _SlbCurCfgPortSlbRtsState_Type()
)
slbCurCfgPortSlbRtsState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPortSlbRtsState.setStatus("current")


class _SlbCurCfgPortSlbIdslbState_Type(Integer32):
    """Custom type slbCurCfgPortSlbIdslbState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgPortSlbIdslbState_Type.__name__ = "Integer32"
_SlbCurCfgPortSlbIdslbState_Object = MibTableColumn
slbCurCfgPortSlbIdslbState = _SlbCurCfgPortSlbIdslbState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 2, 1, 7),
    _SlbCurCfgPortSlbIdslbState_Type()
)
slbCurCfgPortSlbIdslbState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPortSlbIdslbState.setStatus("current")


class _SlbCurCfgPortSlbFilter_Type(Integer32):
    """Custom type slbCurCfgPortSlbFilter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgPortSlbFilter_Type.__name__ = "Integer32"
_SlbCurCfgPortSlbFilter_Object = MibTableColumn
slbCurCfgPortSlbFilter = _SlbCurCfgPortSlbFilter_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 2, 1, 9),
    _SlbCurCfgPortSlbFilter_Type()
)
slbCurCfgPortSlbFilter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPortSlbFilter.setStatus("current")


class _SlbCurCfgPortSlbServState_Type(Integer32):
    """Custom type slbCurCfgPortSlbServState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgPortSlbServState_Type.__name__ = "Integer32"
_SlbCurCfgPortSlbServState_Object = MibTableColumn
slbCurCfgPortSlbServState = _SlbCurCfgPortSlbServState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 2, 1, 10),
    _SlbCurCfgPortSlbServState_Type()
)
slbCurCfgPortSlbServState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPortSlbServState.setStatus("current")


class _SlbCurCfgPortSlbClntState_Type(Integer32):
    """Custom type slbCurCfgPortSlbClntState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgPortSlbClntState_Type.__name__ = "Integer32"
_SlbCurCfgPortSlbClntState_Object = MibTableColumn
slbCurCfgPortSlbClntState = _SlbCurCfgPortSlbClntState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 2, 1, 11),
    _SlbCurCfgPortSlbClntState_Type()
)
slbCurCfgPortSlbClntState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPortSlbClntState.setStatus("current")


class _SlbCurCfgPortSlbL3Filter_Type(Integer32):
    """Custom type slbCurCfgPortSlbL3Filter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgPortSlbL3Filter_Type.__name__ = "Integer32"
_SlbCurCfgPortSlbL3Filter_Object = MibTableColumn
slbCurCfgPortSlbL3Filter = _SlbCurCfgPortSlbL3Filter_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 2, 1, 12),
    _SlbCurCfgPortSlbL3Filter_Type()
)
slbCurCfgPortSlbL3Filter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPortSlbL3Filter.setStatus("current")


class _SlbCurCfgPortSlbFilterBmap_Type(OctetString):
    """Custom type slbCurCfgPortSlbFilterBmap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_SlbCurCfgPortSlbFilterBmap_Type.__name__ = "OctetString"
_SlbCurCfgPortSlbFilterBmap_Object = MibTableColumn
slbCurCfgPortSlbFilterBmap = _SlbCurCfgPortSlbFilterBmap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 2, 1, 13),
    _SlbCurCfgPortSlbFilterBmap_Type()
)
slbCurCfgPortSlbFilterBmap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPortSlbFilterBmap.setStatus("current")


class _SlbCurCfgPortInterSwitchVlan_Type(Integer32):
    """Custom type slbCurCfgPortInterSwitchVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4090),
    )


_SlbCurCfgPortInterSwitchVlan_Type.__name__ = "Integer32"
_SlbCurCfgPortInterSwitchVlan_Object = MibTableColumn
slbCurCfgPortInterSwitchVlan = _SlbCurCfgPortInterSwitchVlan_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 2, 1, 14),
    _SlbCurCfgPortInterSwitchVlan_Type()
)
slbCurCfgPortInterSwitchVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPortInterSwitchVlan.setStatus("current")
_SlbCurCfgPortVlanBmap_Type = OctetString
_SlbCurCfgPortVlanBmap_Object = MibTableColumn
slbCurCfgPortVlanBmap = _SlbCurCfgPortVlanBmap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 2, 1, 15),
    _SlbCurCfgPortVlanBmap_Type()
)
slbCurCfgPortVlanBmap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPortVlanBmap.setStatus("current")
_SlbNewCfgPortTable_Object = MibTable
slbNewCfgPortTable = _SlbNewCfgPortTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 3)
)
if mibBuilder.loadTexts:
    slbNewCfgPortTable.setStatus("current")
_SlbNewCfgPortEntry_Object = MibTableRow
slbNewCfgPortEntry = _SlbNewCfgPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 3, 1)
)
slbNewCfgPortEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgPortIndex"),
)
if mibBuilder.loadTexts:
    slbNewCfgPortEntry.setStatus("current")
_SlbNewCfgPortIndex_Type = Integer32
_SlbNewCfgPortIndex_Object = MibTableColumn
slbNewCfgPortIndex = _SlbNewCfgPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 3, 1, 1),
    _SlbNewCfgPortIndex_Type()
)
slbNewCfgPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgPortIndex.setStatus("current")


class _SlbNewCfgPortSlbState_Type(Integer32):
    """Custom type slbNewCfgPortSlbState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("client", 2),
          ("client-server", 4),
          ("none", 1),
          ("server", 3))
    )


_SlbNewCfgPortSlbState_Type.__name__ = "Integer32"
_SlbNewCfgPortSlbState_Object = MibTableColumn
slbNewCfgPortSlbState = _SlbNewCfgPortSlbState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 3, 1, 2),
    _SlbNewCfgPortSlbState_Type()
)
slbNewCfgPortSlbState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgPortSlbState.setStatus("current")


class _SlbNewCfgPortSlbHotStandby_Type(Integer32):
    """Custom type slbNewCfgPortSlbHotStandby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgPortSlbHotStandby_Type.__name__ = "Integer32"
_SlbNewCfgPortSlbHotStandby_Object = MibTableColumn
slbNewCfgPortSlbHotStandby = _SlbNewCfgPortSlbHotStandby_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 3, 1, 3),
    _SlbNewCfgPortSlbHotStandby_Type()
)
slbNewCfgPortSlbHotStandby.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgPortSlbHotStandby.setStatus("current")


class _SlbNewCfgPortSlbInterSwitch_Type(Integer32):
    """Custom type slbNewCfgPortSlbInterSwitch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgPortSlbInterSwitch_Type.__name__ = "Integer32"
_SlbNewCfgPortSlbInterSwitch_Object = MibTableColumn
slbNewCfgPortSlbInterSwitch = _SlbNewCfgPortSlbInterSwitch_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 3, 1, 4),
    _SlbNewCfgPortSlbInterSwitch_Type()
)
slbNewCfgPortSlbInterSwitch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgPortSlbInterSwitch.setStatus("current")


class _SlbNewCfgPortSlbPipState_Type(Integer32):
    """Custom type slbNewCfgPortSlbPipState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgPortSlbPipState_Type.__name__ = "Integer32"
_SlbNewCfgPortSlbPipState_Object = MibTableColumn
slbNewCfgPortSlbPipState = _SlbNewCfgPortSlbPipState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 3, 1, 5),
    _SlbNewCfgPortSlbPipState_Type()
)
slbNewCfgPortSlbPipState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgPortSlbPipState.setStatus("current")


class _SlbNewCfgPortSlbRtsState_Type(Integer32):
    """Custom type slbNewCfgPortSlbRtsState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgPortSlbRtsState_Type.__name__ = "Integer32"
_SlbNewCfgPortSlbRtsState_Object = MibTableColumn
slbNewCfgPortSlbRtsState = _SlbNewCfgPortSlbRtsState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 3, 1, 6),
    _SlbNewCfgPortSlbRtsState_Type()
)
slbNewCfgPortSlbRtsState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgPortSlbRtsState.setStatus("current")


class _SlbNewCfgPortDelete_Type(Integer32):
    """Custom type slbNewCfgPortDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewCfgPortDelete_Type.__name__ = "Integer32"
_SlbNewCfgPortDelete_Object = MibTableColumn
slbNewCfgPortDelete = _SlbNewCfgPortDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 3, 1, 7),
    _SlbNewCfgPortDelete_Type()
)
slbNewCfgPortDelete.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgPortDelete.setStatus("current")


class _SlbNewCfgPortSlbIdslbState_Type(Integer32):
    """Custom type slbNewCfgPortSlbIdslbState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgPortSlbIdslbState_Type.__name__ = "Integer32"
_SlbNewCfgPortSlbIdslbState_Object = MibTableColumn
slbNewCfgPortSlbIdslbState = _SlbNewCfgPortSlbIdslbState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 3, 1, 8),
    _SlbNewCfgPortSlbIdslbState_Type()
)
slbNewCfgPortSlbIdslbState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgPortSlbIdslbState.setStatus("current")


class _SlbNewCfgPortSlbFilter_Type(Integer32):
    """Custom type slbNewCfgPortSlbFilter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgPortSlbFilter_Type.__name__ = "Integer32"
_SlbNewCfgPortSlbFilter_Object = MibTableColumn
slbNewCfgPortSlbFilter = _SlbNewCfgPortSlbFilter_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 3, 1, 10),
    _SlbNewCfgPortSlbFilter_Type()
)
slbNewCfgPortSlbFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgPortSlbFilter.setStatus("current")


class _SlbNewCfgPortSlbAddFilter_Type(Integer32):
    """Custom type slbNewCfgPortSlbAddFilter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2048),
    )


_SlbNewCfgPortSlbAddFilter_Type.__name__ = "Integer32"
_SlbNewCfgPortSlbAddFilter_Object = MibTableColumn
slbNewCfgPortSlbAddFilter = _SlbNewCfgPortSlbAddFilter_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 3, 1, 11),
    _SlbNewCfgPortSlbAddFilter_Type()
)
slbNewCfgPortSlbAddFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgPortSlbAddFilter.setStatus("current")


class _SlbNewCfgPortSlbRemFilter_Type(Integer32):
    """Custom type slbNewCfgPortSlbRemFilter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2048),
    )


_SlbNewCfgPortSlbRemFilter_Type.__name__ = "Integer32"
_SlbNewCfgPortSlbRemFilter_Object = MibTableColumn
slbNewCfgPortSlbRemFilter = _SlbNewCfgPortSlbRemFilter_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 3, 1, 12),
    _SlbNewCfgPortSlbRemFilter_Type()
)
slbNewCfgPortSlbRemFilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgPortSlbRemFilter.setStatus("current")


class _SlbNewCfgPortSlbServState_Type(Integer32):
    """Custom type slbNewCfgPortSlbServState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgPortSlbServState_Type.__name__ = "Integer32"
_SlbNewCfgPortSlbServState_Object = MibTableColumn
slbNewCfgPortSlbServState = _SlbNewCfgPortSlbServState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 3, 1, 13),
    _SlbNewCfgPortSlbServState_Type()
)
slbNewCfgPortSlbServState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgPortSlbServState.setStatus("current")


class _SlbNewCfgPortSlbClntState_Type(Integer32):
    """Custom type slbNewCfgPortSlbClntState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgPortSlbClntState_Type.__name__ = "Integer32"
_SlbNewCfgPortSlbClntState_Object = MibTableColumn
slbNewCfgPortSlbClntState = _SlbNewCfgPortSlbClntState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 3, 1, 14),
    _SlbNewCfgPortSlbClntState_Type()
)
slbNewCfgPortSlbClntState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgPortSlbClntState.setStatus("current")


class _SlbNewCfgPortSlbL3Filter_Type(Integer32):
    """Custom type slbNewCfgPortSlbL3Filter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgPortSlbL3Filter_Type.__name__ = "Integer32"
_SlbNewCfgPortSlbL3Filter_Object = MibTableColumn
slbNewCfgPortSlbL3Filter = _SlbNewCfgPortSlbL3Filter_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 3, 1, 15),
    _SlbNewCfgPortSlbL3Filter_Type()
)
slbNewCfgPortSlbL3Filter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgPortSlbL3Filter.setStatus("current")


class _SlbNewCfgPortSlbFilterBmap_Type(OctetString):
    """Custom type slbNewCfgPortSlbFilterBmap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_SlbNewCfgPortSlbFilterBmap_Type.__name__ = "OctetString"
_SlbNewCfgPortSlbFilterBmap_Object = MibTableColumn
slbNewCfgPortSlbFilterBmap = _SlbNewCfgPortSlbFilterBmap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 3, 1, 16),
    _SlbNewCfgPortSlbFilterBmap_Type()
)
slbNewCfgPortSlbFilterBmap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgPortSlbFilterBmap.setStatus("current")


class _SlbNewCfgPortInterSwitchVlan_Type(Integer32):
    """Custom type slbNewCfgPortInterSwitchVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4090),
    )


_SlbNewCfgPortInterSwitchVlan_Type.__name__ = "Integer32"
_SlbNewCfgPortInterSwitchVlan_Object = MibTableColumn
slbNewCfgPortInterSwitchVlan = _SlbNewCfgPortInterSwitchVlan_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 3, 1, 17),
    _SlbNewCfgPortInterSwitchVlan_Type()
)
slbNewCfgPortInterSwitchVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgPortInterSwitchVlan.setStatus("current")
_SlbNewCfgPortVlanBmap_Type = OctetString
_SlbNewCfgPortVlanBmap_Object = MibTableColumn
slbNewCfgPortVlanBmap = _SlbNewCfgPortVlanBmap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 5, 3, 1, 18),
    _SlbNewCfgPortVlanBmap_Type()
)
slbNewCfgPortVlanBmap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgPortVlanBmap.setStatus("current")
_SyncCfg_ObjectIdentity = ObjectIdentity
syncCfg = _SyncCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6)
)
_SyncGeneralCfg_ObjectIdentity = ObjectIdentity
syncGeneralCfg = _SyncGeneralCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1)
)


class _SlbCurCfgSyncFilt_Type(Integer32):
    """Custom type slbCurCfgSyncFilt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgSyncFilt_Type.__name__ = "Integer32"
_SlbCurCfgSyncFilt_Object = MibScalar
slbCurCfgSyncFilt = _SlbCurCfgSyncFilt_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 1),
    _SlbCurCfgSyncFilt_Type()
)
slbCurCfgSyncFilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSyncFilt.setStatus("current")


class _SlbNewCfgSyncFilt_Type(Integer32):
    """Custom type slbNewCfgSyncFilt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgSyncFilt_Type.__name__ = "Integer32"
_SlbNewCfgSyncFilt_Object = MibScalar
slbNewCfgSyncFilt = _SlbNewCfgSyncFilt_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 2),
    _SlbNewCfgSyncFilt_Type()
)
slbNewCfgSyncFilt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgSyncFilt.setStatus("current")


class _SlbCurCfgSyncPort_Type(Integer32):
    """Custom type slbCurCfgSyncPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgSyncPort_Type.__name__ = "Integer32"
_SlbCurCfgSyncPort_Object = MibScalar
slbCurCfgSyncPort = _SlbCurCfgSyncPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 3),
    _SlbCurCfgSyncPort_Type()
)
slbCurCfgSyncPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSyncPort.setStatus("current")


class _SlbNewCfgSyncPort_Type(Integer32):
    """Custom type slbNewCfgSyncPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgSyncPort_Type.__name__ = "Integer32"
_SlbNewCfgSyncPort_Object = MibScalar
slbNewCfgSyncPort = _SlbNewCfgSyncPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 4),
    _SlbNewCfgSyncPort_Type()
)
slbNewCfgSyncPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgSyncPort.setStatus("current")


class _SlbCurCfgSyncVrrp_Type(Integer32):
    """Custom type slbCurCfgSyncVrrp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgSyncVrrp_Type.__name__ = "Integer32"
_SlbCurCfgSyncVrrp_Object = MibScalar
slbCurCfgSyncVrrp = _SlbCurCfgSyncVrrp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 5),
    _SlbCurCfgSyncVrrp_Type()
)
slbCurCfgSyncVrrp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSyncVrrp.setStatus("current")


class _SlbNewCfgSyncVrrp_Type(Integer32):
    """Custom type slbNewCfgSyncVrrp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgSyncVrrp_Type.__name__ = "Integer32"
_SlbNewCfgSyncVrrp_Object = MibScalar
slbNewCfgSyncVrrp = _SlbNewCfgSyncVrrp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 6),
    _SlbNewCfgSyncVrrp_Type()
)
slbNewCfgSyncVrrp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgSyncVrrp.setStatus("current")


class _SlbCurCfgSyncPip_Type(Integer32):
    """Custom type slbCurCfgSyncPip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgSyncPip_Type.__name__ = "Integer32"
_SlbCurCfgSyncPip_Object = MibScalar
slbCurCfgSyncPip = _SlbCurCfgSyncPip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 7),
    _SlbCurCfgSyncPip_Type()
)
slbCurCfgSyncPip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSyncPip.setStatus("current")


class _SlbNewCfgSyncPip_Type(Integer32):
    """Custom type slbNewCfgSyncPip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgSyncPip_Type.__name__ = "Integer32"
_SlbNewCfgSyncPip_Object = MibScalar
slbNewCfgSyncPip = _SlbNewCfgSyncPip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 8),
    _SlbNewCfgSyncPip_Type()
)
slbNewCfgSyncPip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgSyncPip.setStatus("current")


class _SlbCurCfgSyncSfo_Type(Integer32):
    """Custom type slbCurCfgSyncSfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgSyncSfo_Type.__name__ = "Integer32"
_SlbCurCfgSyncSfo_Object = MibScalar
slbCurCfgSyncSfo = _SlbCurCfgSyncSfo_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 9),
    _SlbCurCfgSyncSfo_Type()
)
slbCurCfgSyncSfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSyncSfo.setStatus("current")


class _SlbNewCfgSyncSfo_Type(Integer32):
    """Custom type slbNewCfgSyncSfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgSyncSfo_Type.__name__ = "Integer32"
_SlbNewCfgSyncSfo_Object = MibScalar
slbNewCfgSyncSfo = _SlbNewCfgSyncSfo_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 10),
    _SlbNewCfgSyncSfo_Type()
)
slbNewCfgSyncSfo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgSyncSfo.setStatus("current")


class _SlbCurCfgSyncSfoUpdatePeriod_Type(Integer32):
    """Custom type slbCurCfgSyncSfoUpdatePeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_SlbCurCfgSyncSfoUpdatePeriod_Type.__name__ = "Integer32"
_SlbCurCfgSyncSfoUpdatePeriod_Object = MibScalar
slbCurCfgSyncSfoUpdatePeriod = _SlbCurCfgSyncSfoUpdatePeriod_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 11),
    _SlbCurCfgSyncSfoUpdatePeriod_Type()
)
slbCurCfgSyncSfoUpdatePeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSyncSfoUpdatePeriod.setStatus("current")


class _SlbNewCfgSyncSfoUpdatePeriod_Type(Integer32):
    """Custom type slbNewCfgSyncSfoUpdatePeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_SlbNewCfgSyncSfoUpdatePeriod_Type.__name__ = "Integer32"
_SlbNewCfgSyncSfoUpdatePeriod_Object = MibScalar
slbNewCfgSyncSfoUpdatePeriod = _SlbNewCfgSyncSfoUpdatePeriod_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 12),
    _SlbNewCfgSyncSfoUpdatePeriod_Type()
)
slbNewCfgSyncSfoUpdatePeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgSyncSfoUpdatePeriod.setStatus("current")


class _SlbCurCfgSyncBwm_Type(Integer32):
    """Custom type slbCurCfgSyncBwm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgSyncBwm_Type.__name__ = "Integer32"
_SlbCurCfgSyncBwm_Object = MibScalar
slbCurCfgSyncBwm = _SlbCurCfgSyncBwm_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 13),
    _SlbCurCfgSyncBwm_Type()
)
slbCurCfgSyncBwm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSyncBwm.setStatus("current")


class _SlbNewCfgSyncBwm_Type(Integer32):
    """Custom type slbNewCfgSyncBwm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgSyncBwm_Type.__name__ = "Integer32"
_SlbNewCfgSyncBwm_Object = MibScalar
slbNewCfgSyncBwm = _SlbNewCfgSyncBwm_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 14),
    _SlbNewCfgSyncBwm_Type()
)
slbNewCfgSyncBwm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgSyncBwm.setStatus("current")


class _SlbCurCfgSyncPeerPip_Type(Integer32):
    """Custom type slbCurCfgSyncPeerPip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgSyncPeerPip_Type.__name__ = "Integer32"
_SlbCurCfgSyncPeerPip_Object = MibScalar
slbCurCfgSyncPeerPip = _SlbCurCfgSyncPeerPip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 15),
    _SlbCurCfgSyncPeerPip_Type()
)
slbCurCfgSyncPeerPip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSyncPeerPip.setStatus("current")


class _SlbNewCfgSyncPeerPip_Type(Integer32):
    """Custom type slbNewCfgSyncPeerPip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgSyncPeerPip_Type.__name__ = "Integer32"
_SlbNewCfgSyncPeerPip_Object = MibScalar
slbNewCfgSyncPeerPip = _SlbNewCfgSyncPeerPip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 16),
    _SlbNewCfgSyncPeerPip_Type()
)
slbNewCfgSyncPeerPip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgSyncPeerPip.setStatus("current")


class _SlbCurCfgSyncCerts_Type(Integer32):
    """Custom type slbCurCfgSyncCerts based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgSyncCerts_Type.__name__ = "Integer32"
_SlbCurCfgSyncCerts_Object = MibScalar
slbCurCfgSyncCerts = _SlbCurCfgSyncCerts_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 17),
    _SlbCurCfgSyncCerts_Type()
)
slbCurCfgSyncCerts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSyncCerts.setStatus("current")


class _SlbNewCfgSyncCerts_Type(Integer32):
    """Custom type slbNewCfgSyncCerts based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgSyncCerts_Type.__name__ = "Integer32"
_SlbNewCfgSyncCerts_Object = MibScalar
slbNewCfgSyncCerts = _SlbNewCfgSyncCerts_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 18),
    _SlbNewCfgSyncCerts_Type()
)
slbNewCfgSyncCerts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgSyncCerts.setStatus("current")


class _SlbCurCfgSyncCertsPassPhrase_Type(DisplayString):
    """Custom type slbCurCfgSyncCertsPassPhrase based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurCfgSyncCertsPassPhrase_Type.__name__ = "DisplayString"
_SlbCurCfgSyncCertsPassPhrase_Object = MibScalar
slbCurCfgSyncCertsPassPhrase = _SlbCurCfgSyncCertsPassPhrase_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 19),
    _SlbCurCfgSyncCertsPassPhrase_Type()
)
slbCurCfgSyncCertsPassPhrase.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSyncCertsPassPhrase.setStatus("current")


class _SlbNewCfgSyncCertsPassPhrase_Type(DisplayString):
    """Custom type slbNewCfgSyncCertsPassPhrase based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewCfgSyncCertsPassPhrase_Type.__name__ = "DisplayString"
_SlbNewCfgSyncCertsPassPhrase_Object = MibScalar
slbNewCfgSyncCertsPassPhrase = _SlbNewCfgSyncCertsPassPhrase_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 20),
    _SlbNewCfgSyncCertsPassPhrase_Type()
)
slbNewCfgSyncCertsPassPhrase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgSyncCertsPassPhrase.setStatus("current")


class _SlbNewCfgSyncCertsConfPassPhrase_Type(DisplayString):
    """Custom type slbNewCfgSyncCertsConfPassPhrase based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewCfgSyncCertsConfPassPhrase_Type.__name__ = "DisplayString"
_SlbNewCfgSyncCertsConfPassPhrase_Object = MibScalar
slbNewCfgSyncCertsConfPassPhrase = _SlbNewCfgSyncCertsConfPassPhrase_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 21),
    _SlbNewCfgSyncCertsConfPassPhrase_Type()
)
slbNewCfgSyncCertsConfPassPhrase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgSyncCertsConfPassPhrase.setStatus("current")


class _SlbCurCfgSyncRoute_Type(Integer32):
    """Custom type slbCurCfgSyncRoute based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgSyncRoute_Type.__name__ = "Integer32"
_SlbCurCfgSyncRoute_Object = MibScalar
slbCurCfgSyncRoute = _SlbCurCfgSyncRoute_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 22),
    _SlbCurCfgSyncRoute_Type()
)
slbCurCfgSyncRoute.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSyncRoute.setStatus("current")


class _SlbNewCfgSyncRoute_Type(Integer32):
    """Custom type slbNewCfgSyncRoute based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgSyncRoute_Type.__name__ = "Integer32"
_SlbNewCfgSyncRoute_Object = MibScalar
slbNewCfgSyncRoute = _SlbNewCfgSyncRoute_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 1, 23),
    _SlbNewCfgSyncRoute_Type()
)
slbNewCfgSyncRoute.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgSyncRoute.setStatus("current")
_SlbPeerTableMaxSize_Type = Integer32
_SlbPeerTableMaxSize_Object = MibScalar
slbPeerTableMaxSize = _SlbPeerTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 2),
    _SlbPeerTableMaxSize_Type()
)
slbPeerTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbPeerTableMaxSize.setStatus("current")
_SlbCurCfgPeerTable_Object = MibTable
slbCurCfgPeerTable = _SlbCurCfgPeerTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 3)
)
if mibBuilder.loadTexts:
    slbCurCfgPeerTable.setStatus("current")
_SlbCurCfgPeerEntry_Object = MibTableRow
slbCurCfgPeerEntry = _SlbCurCfgPeerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 3, 1)
)
slbCurCfgPeerEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgPeerIndex"),
)
if mibBuilder.loadTexts:
    slbCurCfgPeerEntry.setStatus("current")
_SlbCurCfgPeerIndex_Type = Integer32
_SlbCurCfgPeerIndex_Object = MibTableColumn
slbCurCfgPeerIndex = _SlbCurCfgPeerIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 3, 1, 1),
    _SlbCurCfgPeerIndex_Type()
)
slbCurCfgPeerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPeerIndex.setStatus("current")
_SlbCurCfgPeerIpAddr_Type = IpAddress
_SlbCurCfgPeerIpAddr_Object = MibTableColumn
slbCurCfgPeerIpAddr = _SlbCurCfgPeerIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 3, 1, 2),
    _SlbCurCfgPeerIpAddr_Type()
)
slbCurCfgPeerIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPeerIpAddr.setStatus("current")


class _SlbCurCfgPeerState_Type(Integer32):
    """Custom type slbCurCfgPeerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_SlbCurCfgPeerState_Type.__name__ = "Integer32"
_SlbCurCfgPeerState_Object = MibTableColumn
slbCurCfgPeerState = _SlbCurCfgPeerState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 3, 1, 3),
    _SlbCurCfgPeerState_Type()
)
slbCurCfgPeerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPeerState.setStatus("current")


class _SlbCurCfgPeerIpv6Addr_Type(DisplayString):
    """Custom type slbCurCfgPeerIpv6Addr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SlbCurCfgPeerIpv6Addr_Type.__name__ = "DisplayString"
_SlbCurCfgPeerIpv6Addr_Object = MibTableColumn
slbCurCfgPeerIpv6Addr = _SlbCurCfgPeerIpv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 3, 1, 4),
    _SlbCurCfgPeerIpv6Addr_Type()
)
slbCurCfgPeerIpv6Addr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPeerIpv6Addr.setStatus("current")


class _SlbCurCfgPeerIpVersion_Type(Integer32):
    """Custom type slbCurCfgPeerIpVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 4),
          ("ipv6", 6))
    )


_SlbCurCfgPeerIpVersion_Type.__name__ = "Integer32"
_SlbCurCfgPeerIpVersion_Object = MibTableColumn
slbCurCfgPeerIpVersion = _SlbCurCfgPeerIpVersion_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 3, 1, 5),
    _SlbCurCfgPeerIpVersion_Type()
)
slbCurCfgPeerIpVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPeerIpVersion.setStatus("current")
_SlbNewCfgPeerTable_Object = MibTable
slbNewCfgPeerTable = _SlbNewCfgPeerTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 4)
)
if mibBuilder.loadTexts:
    slbNewCfgPeerTable.setStatus("current")
_SlbNewCfgPeerEntry_Object = MibTableRow
slbNewCfgPeerEntry = _SlbNewCfgPeerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 4, 1)
)
slbNewCfgPeerEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgPeerIndex"),
)
if mibBuilder.loadTexts:
    slbNewCfgPeerEntry.setStatus("current")
_SlbNewCfgPeerIndex_Type = Integer32
_SlbNewCfgPeerIndex_Object = MibTableColumn
slbNewCfgPeerIndex = _SlbNewCfgPeerIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 4, 1, 1),
    _SlbNewCfgPeerIndex_Type()
)
slbNewCfgPeerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgPeerIndex.setStatus("current")
_SlbNewCfgPeerIpAddr_Type = IpAddress
_SlbNewCfgPeerIpAddr_Object = MibTableColumn
slbNewCfgPeerIpAddr = _SlbNewCfgPeerIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 4, 1, 2),
    _SlbNewCfgPeerIpAddr_Type()
)
slbNewCfgPeerIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgPeerIpAddr.setStatus("current")


class _SlbNewCfgPeerState_Type(Integer32):
    """Custom type slbNewCfgPeerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_SlbNewCfgPeerState_Type.__name__ = "Integer32"
_SlbNewCfgPeerState_Object = MibTableColumn
slbNewCfgPeerState = _SlbNewCfgPeerState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 4, 1, 3),
    _SlbNewCfgPeerState_Type()
)
slbNewCfgPeerState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgPeerState.setStatus("current")


class _SlbNewCfgPeerDelete_Type(Integer32):
    """Custom type slbNewCfgPeerDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewCfgPeerDelete_Type.__name__ = "Integer32"
_SlbNewCfgPeerDelete_Object = MibTableColumn
slbNewCfgPeerDelete = _SlbNewCfgPeerDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 4, 1, 4),
    _SlbNewCfgPeerDelete_Type()
)
slbNewCfgPeerDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgPeerDelete.setStatus("current")


class _SlbNewCfgPeerIpv6Addr_Type(DisplayString):
    """Custom type slbNewCfgPeerIpv6Addr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SlbNewCfgPeerIpv6Addr_Type.__name__ = "DisplayString"
_SlbNewCfgPeerIpv6Addr_Object = MibTableColumn
slbNewCfgPeerIpv6Addr = _SlbNewCfgPeerIpv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 4, 1, 5),
    _SlbNewCfgPeerIpv6Addr_Type()
)
slbNewCfgPeerIpv6Addr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgPeerIpv6Addr.setStatus("current")


class _SlbNewCfgPeerIpVersion_Type(Integer32):
    """Custom type slbNewCfgPeerIpVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 4),
          ("ipv6", 6))
    )


_SlbNewCfgPeerIpVersion_Type.__name__ = "Integer32"
_SlbNewCfgPeerIpVersion_Object = MibTableColumn
slbNewCfgPeerIpVersion = _SlbNewCfgPeerIpVersion_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 6, 4, 1, 6),
    _SlbNewCfgPeerIpVersion_Type()
)
slbNewCfgPeerIpVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgPeerIpVersion.setStatus("current")
_WapCfg_ObjectIdentity = ObjectIdentity
wapCfg = _WapCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 7)
)


class _SlbCurCfgWapTpcp_Type(Integer32):
    """Custom type slbCurCfgWapTpcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgWapTpcp_Type.__name__ = "Integer32"
_SlbCurCfgWapTpcp_Object = MibScalar
slbCurCfgWapTpcp = _SlbCurCfgWapTpcp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 7, 1),
    _SlbCurCfgWapTpcp_Type()
)
slbCurCfgWapTpcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWapTpcp.setStatus("current")


class _SlbNewCfgWapTpcp_Type(Integer32):
    """Custom type slbNewCfgWapTpcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgWapTpcp_Type.__name__ = "Integer32"
_SlbNewCfgWapTpcp_Object = MibScalar
slbNewCfgWapTpcp = _SlbNewCfgWapTpcp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 7, 2),
    _SlbNewCfgWapTpcp_Type()
)
slbNewCfgWapTpcp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgWapTpcp.setStatus("current")


class _SlbCurCfgWapDebug_Type(Integer32):
    """Custom type slbCurCfgWapDebug based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10),
    )


_SlbCurCfgWapDebug_Type.__name__ = "Integer32"
_SlbCurCfgWapDebug_Object = MibScalar
slbCurCfgWapDebug = _SlbCurCfgWapDebug_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 7, 3),
    _SlbCurCfgWapDebug_Type()
)
slbCurCfgWapDebug.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWapDebug.setStatus("current")


class _SlbNewCfgWapDebug_Type(Integer32):
    """Custom type slbNewCfgWapDebug based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10),
    )


_SlbNewCfgWapDebug_Type.__name__ = "Integer32"
_SlbNewCfgWapDebug_Object = MibScalar
slbNewCfgWapDebug = _SlbNewCfgWapDebug_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 7, 4),
    _SlbNewCfgWapDebug_Type()
)
slbNewCfgWapDebug.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgWapDebug.setStatus("current")
_WaphcCfg_ObjectIdentity = ObjectIdentity
waphcCfg = _WaphcCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8)
)


class _SlbCurCfgWaphcWSPPort_Type(Integer32):
    """Custom type slbCurCfgWaphcWSPPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SlbCurCfgWaphcWSPPort_Type.__name__ = "Integer32"
_SlbCurCfgWaphcWSPPort_Object = MibScalar
slbCurCfgWaphcWSPPort = _SlbCurCfgWaphcWSPPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 1),
    _SlbCurCfgWaphcWSPPort_Type()
)
slbCurCfgWaphcWSPPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWaphcWSPPort.setStatus("current")


class _SlbNewCfgWaphcWSPPort_Type(Integer32):
    """Custom type slbNewCfgWaphcWSPPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SlbNewCfgWaphcWSPPort_Type.__name__ = "Integer32"
_SlbNewCfgWaphcWSPPort_Object = MibScalar
slbNewCfgWaphcWSPPort = _SlbNewCfgWaphcWSPPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 2),
    _SlbNewCfgWaphcWSPPort_Type()
)
slbNewCfgWaphcWSPPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgWaphcWSPPort.setStatus("current")


class _SlbCurCfgWaphcOffset_Type(Integer32):
    """Custom type slbCurCfgWaphcOffset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_SlbCurCfgWaphcOffset_Type.__name__ = "Integer32"
_SlbCurCfgWaphcOffset_Object = MibScalar
slbCurCfgWaphcOffset = _SlbCurCfgWaphcOffset_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 3),
    _SlbCurCfgWaphcOffset_Type()
)
slbCurCfgWaphcOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWaphcOffset.setStatus("current")


class _SlbNewCfgWaphcOffset_Type(Integer32):
    """Custom type slbNewCfgWaphcOffset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_SlbNewCfgWaphcOffset_Type.__name__ = "Integer32"
_SlbNewCfgWaphcOffset_Object = MibScalar
slbNewCfgWaphcOffset = _SlbNewCfgWaphcOffset_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 4),
    _SlbNewCfgWaphcOffset_Type()
)
slbNewCfgWaphcOffset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgWaphcOffset.setStatus("current")


class _SlbCurCfgWaphcSndContent_Type(OctetString):
    """Custom type slbCurCfgWaphcSndContent based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_SlbCurCfgWaphcSndContent_Type.__name__ = "OctetString"
_SlbCurCfgWaphcSndContent_Object = MibScalar
slbCurCfgWaphcSndContent = _SlbCurCfgWaphcSndContent_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 5),
    _SlbCurCfgWaphcSndContent_Type()
)
slbCurCfgWaphcSndContent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWaphcSndContent.setStatus("current")


class _SlbNewCfgWaphcSndContent_Type(OctetString):
    """Custom type slbNewCfgWaphcSndContent based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_SlbNewCfgWaphcSndContent_Type.__name__ = "OctetString"
_SlbNewCfgWaphcSndContent_Object = MibScalar
slbNewCfgWaphcSndContent = _SlbNewCfgWaphcSndContent_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 6),
    _SlbNewCfgWaphcSndContent_Type()
)
slbNewCfgWaphcSndContent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgWaphcSndContent.setStatus("current")


class _SlbCurCfgWaphcRcvContent_Type(OctetString):
    """Custom type slbCurCfgWaphcRcvContent based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_SlbCurCfgWaphcRcvContent_Type.__name__ = "OctetString"
_SlbCurCfgWaphcRcvContent_Object = MibScalar
slbCurCfgWaphcRcvContent = _SlbCurCfgWaphcRcvContent_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 7),
    _SlbCurCfgWaphcRcvContent_Type()
)
slbCurCfgWaphcRcvContent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWaphcRcvContent.setStatus("current")


class _SlbNewCfgWaphcRcvContent_Type(OctetString):
    """Custom type slbNewCfgWaphcRcvContent based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_SlbNewCfgWaphcRcvContent_Type.__name__ = "OctetString"
_SlbNewCfgWaphcRcvContent_Object = MibScalar
slbNewCfgWaphcRcvContent = _SlbNewCfgWaphcRcvContent_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 8),
    _SlbNewCfgWaphcRcvContent_Type()
)
slbNewCfgWaphcRcvContent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgWaphcRcvContent.setStatus("current")


class _SlbCurCfgWaphcWTLSPort_Type(Integer32):
    """Custom type slbCurCfgWaphcWTLSPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SlbCurCfgWaphcWTLSPort_Type.__name__ = "Integer32"
_SlbCurCfgWaphcWTLSPort_Object = MibScalar
slbCurCfgWaphcWTLSPort = _SlbCurCfgWaphcWTLSPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 9),
    _SlbCurCfgWaphcWTLSPort_Type()
)
slbCurCfgWaphcWTLSPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWaphcWTLSPort.setStatus("current")


class _SlbNewCfgWaphcWTLSPort_Type(Integer32):
    """Custom type slbNewCfgWaphcWTLSPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SlbNewCfgWaphcWTLSPort_Type.__name__ = "Integer32"
_SlbNewCfgWaphcWTLSPort_Object = MibScalar
slbNewCfgWaphcWTLSPort = _SlbNewCfgWaphcWTLSPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 10),
    _SlbNewCfgWaphcWTLSPort_Type()
)
slbNewCfgWaphcWTLSPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgWaphcWTLSPort.setStatus("current")


class _SlbCurCfgWaphcWTPSndContent_Type(OctetString):
    """Custom type slbCurCfgWaphcWTPSndContent based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_SlbCurCfgWaphcWTPSndContent_Type.__name__ = "OctetString"
_SlbCurCfgWaphcWTPSndContent_Object = MibScalar
slbCurCfgWaphcWTPSndContent = _SlbCurCfgWaphcWTPSndContent_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 11),
    _SlbCurCfgWaphcWTPSndContent_Type()
)
slbCurCfgWaphcWTPSndContent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWaphcWTPSndContent.setStatus("current")


class _SlbNewCfgWaphcWTPSndContent_Type(OctetString):
    """Custom type slbNewCfgWaphcWTPSndContent based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_SlbNewCfgWaphcWTPSndContent_Type.__name__ = "OctetString"
_SlbNewCfgWaphcWTPSndContent_Object = MibScalar
slbNewCfgWaphcWTPSndContent = _SlbNewCfgWaphcWTPSndContent_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 12),
    _SlbNewCfgWaphcWTPSndContent_Type()
)
slbNewCfgWaphcWTPSndContent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgWaphcWTPSndContent.setStatus("current")


class _SlbCurCfgWaphcWTPRcvContent_Type(OctetString):
    """Custom type slbCurCfgWaphcWTPRcvContent based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_SlbCurCfgWaphcWTPRcvContent_Type.__name__ = "OctetString"
_SlbCurCfgWaphcWTPRcvContent_Object = MibScalar
slbCurCfgWaphcWTPRcvContent = _SlbCurCfgWaphcWTPRcvContent_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 13),
    _SlbCurCfgWaphcWTPRcvContent_Type()
)
slbCurCfgWaphcWTPRcvContent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWaphcWTPRcvContent.setStatus("current")


class _SlbNewCfgWaphcWTPRcvContent_Type(OctetString):
    """Custom type slbNewCfgWaphcWTPRcvContent based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_SlbNewCfgWaphcWTPRcvContent_Type.__name__ = "OctetString"
_SlbNewCfgWaphcWTPRcvContent_Object = MibScalar
slbNewCfgWaphcWTPRcvContent = _SlbNewCfgWaphcWTPRcvContent_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 14),
    _SlbNewCfgWaphcWTPRcvContent_Type()
)
slbNewCfgWaphcWTPRcvContent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgWaphcWTPRcvContent.setStatus("current")


class _SlbCurCfgWaphcWTPConnContent_Type(OctetString):
    """Custom type slbCurCfgWaphcWTPConnContent based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_SlbCurCfgWaphcWTPConnContent_Type.__name__ = "OctetString"
_SlbCurCfgWaphcWTPConnContent_Object = MibScalar
slbCurCfgWaphcWTPConnContent = _SlbCurCfgWaphcWTPConnContent_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 15),
    _SlbCurCfgWaphcWTPConnContent_Type()
)
slbCurCfgWaphcWTPConnContent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWaphcWTPConnContent.setStatus("current")


class _SlbNewCfgWaphcWTPConnContent_Type(OctetString):
    """Custom type slbNewCfgWaphcWTPConnContent based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_SlbNewCfgWaphcWTPConnContent_Type.__name__ = "OctetString"
_SlbNewCfgWaphcWTPConnContent_Object = MibScalar
slbNewCfgWaphcWTPConnContent = _SlbNewCfgWaphcWTPConnContent_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 16),
    _SlbNewCfgWaphcWTPConnContent_Type()
)
slbNewCfgWaphcWTPConnContent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgWaphcWTPConnContent.setStatus("current")


class _SlbCurCfgWaphcWTPPort_Type(Integer32):
    """Custom type slbCurCfgWaphcWTPPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SlbCurCfgWaphcWTPPort_Type.__name__ = "Integer32"
_SlbCurCfgWaphcWTPPort_Object = MibScalar
slbCurCfgWaphcWTPPort = _SlbCurCfgWaphcWTPPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 17),
    _SlbCurCfgWaphcWTPPort_Type()
)
slbCurCfgWaphcWTPPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWaphcWTPPort.setStatus("current")


class _SlbNewCfgWaphcWTPPort_Type(Integer32):
    """Custom type slbNewCfgWaphcWTPPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SlbNewCfgWaphcWTPPort_Type.__name__ = "Integer32"
_SlbNewCfgWaphcWTPPort_Object = MibScalar
slbNewCfgWaphcWTPPort = _SlbNewCfgWaphcWTPPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 18),
    _SlbNewCfgWaphcWTPPort_Type()
)
slbNewCfgWaphcWTPPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgWaphcWTPPort.setStatus("current")


class _SlbCurCfgWaphcWTLSWSPPort_Type(Integer32):
    """Custom type slbCurCfgWaphcWTLSWSPPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SlbCurCfgWaphcWTLSWSPPort_Type.__name__ = "Integer32"
_SlbCurCfgWaphcWTLSWSPPort_Object = MibScalar
slbCurCfgWaphcWTLSWSPPort = _SlbCurCfgWaphcWTLSWSPPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 19),
    _SlbCurCfgWaphcWTLSWSPPort_Type()
)
slbCurCfgWaphcWTLSWSPPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWaphcWTLSWSPPort.setStatus("current")


class _SlbNewCfgWaphcWTLSWSPPort_Type(Integer32):
    """Custom type slbNewCfgWaphcWTLSWSPPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SlbNewCfgWaphcWTLSWSPPort_Type.__name__ = "Integer32"
_SlbNewCfgWaphcWTLSWSPPort_Object = MibScalar
slbNewCfgWaphcWTLSWSPPort = _SlbNewCfgWaphcWTLSWSPPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 20),
    _SlbNewCfgWaphcWTLSWSPPort_Type()
)
slbNewCfgWaphcWTLSWSPPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgWaphcWTLSWSPPort.setStatus("current")


class _SlbCurCfgWaphcWTPOffset_Type(Integer32):
    """Custom type slbCurCfgWaphcWTPOffset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_SlbCurCfgWaphcWTPOffset_Type.__name__ = "Integer32"
_SlbCurCfgWaphcWTPOffset_Object = MibScalar
slbCurCfgWaphcWTPOffset = _SlbCurCfgWaphcWTPOffset_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 21),
    _SlbCurCfgWaphcWTPOffset_Type()
)
slbCurCfgWaphcWTPOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWaphcWTPOffset.setStatus("current")


class _SlbNewCfgWaphcWTPOffset_Type(Integer32):
    """Custom type slbNewCfgWaphcWTPOffset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_SlbNewCfgWaphcWTPOffset_Type.__name__ = "Integer32"
_SlbNewCfgWaphcWTPOffset_Object = MibScalar
slbNewCfgWaphcWTPOffset = _SlbNewCfgWaphcWTPOffset_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 22),
    _SlbNewCfgWaphcWTPOffset_Type()
)
slbNewCfgWaphcWTPOffset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgWaphcWTPOffset.setStatus("current")


class _SlbCurCfgWaphcCouple_Type(Integer32):
    """Custom type slbCurCfgWaphcCouple based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgWaphcCouple_Type.__name__ = "Integer32"
_SlbCurCfgWaphcCouple_Object = MibScalar
slbCurCfgWaphcCouple = _SlbCurCfgWaphcCouple_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 23),
    _SlbCurCfgWaphcCouple_Type()
)
slbCurCfgWaphcCouple.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWaphcCouple.setStatus("current")


class _SlbNewCfgWaphcCouple_Type(Integer32):
    """Custom type slbNewCfgWaphcCouple based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgWaphcCouple_Type.__name__ = "Integer32"
_SlbNewCfgWaphcCouple_Object = MibScalar
slbNewCfgWaphcCouple = _SlbNewCfgWaphcCouple_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 24),
    _SlbNewCfgWaphcCouple_Type()
)
slbNewCfgWaphcCouple.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgWaphcCouple.setStatus("current")


class _SlbCurCfgWaphcConnPDU_Type(OctetString):
    """Custom type slbCurCfgWaphcConnPDU based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_SlbCurCfgWaphcConnPDU_Type.__name__ = "OctetString"
_SlbCurCfgWaphcConnPDU_Object = MibScalar
slbCurCfgWaphcConnPDU = _SlbCurCfgWaphcConnPDU_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 25),
    _SlbCurCfgWaphcConnPDU_Type()
)
slbCurCfgWaphcConnPDU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWaphcConnPDU.setStatus("current")


class _SlbNewCfgWaphcConnPDU_Type(OctetString):
    """Custom type slbNewCfgWaphcConnPDU based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_SlbNewCfgWaphcConnPDU_Type.__name__ = "OctetString"
_SlbNewCfgWaphcConnPDU_Object = MibScalar
slbNewCfgWaphcConnPDU = _SlbNewCfgWaphcConnPDU_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 26),
    _SlbNewCfgWaphcConnPDU_Type()
)
slbNewCfgWaphcConnPDU.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgWaphcConnPDU.setStatus("current")


class _SlbCurCfgWaphcSndPDU_Type(OctetString):
    """Custom type slbCurCfgWaphcSndPDU based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_SlbCurCfgWaphcSndPDU_Type.__name__ = "OctetString"
_SlbCurCfgWaphcSndPDU_Object = MibScalar
slbCurCfgWaphcSndPDU = _SlbCurCfgWaphcSndPDU_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 27),
    _SlbCurCfgWaphcSndPDU_Type()
)
slbCurCfgWaphcSndPDU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWaphcSndPDU.setStatus("current")


class _SlbNewCfgWaphcSndPDU_Type(OctetString):
    """Custom type slbNewCfgWaphcSndPDU based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_SlbNewCfgWaphcSndPDU_Type.__name__ = "OctetString"
_SlbNewCfgWaphcSndPDU_Object = MibScalar
slbNewCfgWaphcSndPDU = _SlbNewCfgWaphcSndPDU_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 28),
    _SlbNewCfgWaphcSndPDU_Type()
)
slbNewCfgWaphcSndPDU.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgWaphcSndPDU.setStatus("current")


class _SlbCurCfgWaphcRcvPDU_Type(OctetString):
    """Custom type slbCurCfgWaphcRcvPDU based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_SlbCurCfgWaphcRcvPDU_Type.__name__ = "OctetString"
_SlbCurCfgWaphcRcvPDU_Object = MibScalar
slbCurCfgWaphcRcvPDU = _SlbCurCfgWaphcRcvPDU_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 29),
    _SlbCurCfgWaphcRcvPDU_Type()
)
slbCurCfgWaphcRcvPDU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWaphcRcvPDU.setStatus("current")


class _SlbNewCfgWaphcRcvPDU_Type(OctetString):
    """Custom type slbNewCfgWaphcRcvPDU based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_SlbNewCfgWaphcRcvPDU_Type.__name__ = "OctetString"
_SlbNewCfgWaphcRcvPDU_Object = MibScalar
slbNewCfgWaphcRcvPDU = _SlbNewCfgWaphcRcvPDU_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 8, 30),
    _SlbNewCfgWaphcRcvPDU_Type()
)
slbNewCfgWaphcRcvPDU.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgWaphcRcvPDU.setStatus("current")
_SynAttackDetCfg_ObjectIdentity = ObjectIdentity
synAttackDetCfg = _SynAttackDetCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 9)
)


class _SynAttackCurCfgInterval_Type(Integer32):
    """Custom type synAttackCurCfgInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 3600),
    )


_SynAttackCurCfgInterval_Type.__name__ = "Integer32"
_SynAttackCurCfgInterval_Object = MibScalar
synAttackCurCfgInterval = _SynAttackCurCfgInterval_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 9, 1),
    _SynAttackCurCfgInterval_Type()
)
synAttackCurCfgInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    synAttackCurCfgInterval.setStatus("current")


class _SynAttackNewCfgInterval_Type(Integer32):
    """Custom type synAttackNewCfgInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 3600),
    )


_SynAttackNewCfgInterval_Type.__name__ = "Integer32"
_SynAttackNewCfgInterval_Object = MibScalar
synAttackNewCfgInterval = _SynAttackNewCfgInterval_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 9, 2),
    _SynAttackNewCfgInterval_Type()
)
synAttackNewCfgInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    synAttackNewCfgInterval.setStatus("current")


class _SynAttackCurCfgThreshhold_Type(Integer32):
    """Custom type synAttackCurCfgThreshhold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100000),
    )


_SynAttackCurCfgThreshhold_Type.__name__ = "Integer32"
_SynAttackCurCfgThreshhold_Object = MibScalar
synAttackCurCfgThreshhold = _SynAttackCurCfgThreshhold_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 9, 3),
    _SynAttackCurCfgThreshhold_Type()
)
synAttackCurCfgThreshhold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    synAttackCurCfgThreshhold.setStatus("current")


class _SynAttackNewCfgThreshhold_Type(Integer32):
    """Custom type synAttackNewCfgThreshhold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100000),
    )


_SynAttackNewCfgThreshhold_Type.__name__ = "Integer32"
_SynAttackNewCfgThreshhold_Object = MibScalar
synAttackNewCfgThreshhold = _SynAttackNewCfgThreshhold_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 9, 4),
    _SynAttackNewCfgThreshhold_Type()
)
synAttackNewCfgThreshhold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    synAttackNewCfgThreshhold.setStatus("current")


class _SynAttackCurCfgResponseInterval_Type(Integer32):
    """Custom type synAttackCurCfgResponseInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 1000),
    )


_SynAttackCurCfgResponseInterval_Type.__name__ = "Integer32"
_SynAttackCurCfgResponseInterval_Object = MibScalar
synAttackCurCfgResponseInterval = _SynAttackCurCfgResponseInterval_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 9, 5),
    _SynAttackCurCfgResponseInterval_Type()
)
synAttackCurCfgResponseInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    synAttackCurCfgResponseInterval.setStatus("current")


class _SynAttackNewCfgResponseInterval_Type(Integer32):
    """Custom type synAttackNewCfgResponseInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 1000),
    )


_SynAttackNewCfgResponseInterval_Type.__name__ = "Integer32"
_SynAttackNewCfgResponseInterval_Object = MibScalar
synAttackNewCfgResponseInterval = _SynAttackNewCfgResponseInterval_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 9, 6),
    _SynAttackNewCfgResponseInterval_Type()
)
synAttackNewCfgResponseInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    synAttackNewCfgResponseInterval.setStatus("current")


class _SynAttackCurCfgOnOff_Type(Integer32):
    """Custom type synAttackCurCfgOnOff based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 2),
          ("on", 1))
    )


_SynAttackCurCfgOnOff_Type.__name__ = "Integer32"
_SynAttackCurCfgOnOff_Object = MibScalar
synAttackCurCfgOnOff = _SynAttackCurCfgOnOff_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 9, 7),
    _SynAttackCurCfgOnOff_Type()
)
synAttackCurCfgOnOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    synAttackCurCfgOnOff.setStatus("current")


class _SynAttackNewCfgOnOff_Type(Integer32):
    """Custom type synAttackNewCfgOnOff based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 2),
          ("on", 1))
    )


_SynAttackNewCfgOnOff_Type.__name__ = "Integer32"
_SynAttackNewCfgOnOff_Object = MibScalar
synAttackNewCfgOnOff = _SynAttackNewCfgOnOff_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 9, 8),
    _SynAttackNewCfgOnOff_Type()
)
synAttackNewCfgOnOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    synAttackNewCfgOnOff.setStatus("current")
_HcsCfg_ObjectIdentity = ObjectIdentity
hcsCfg = _HcsCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13)
)
_HcsTableMaxSize_Type = Integer32
_HcsTableMaxSize_Object = MibScalar
hcsTableMaxSize = _HcsTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 1),
    _HcsTableMaxSize_Type()
)
hcsTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hcsTableMaxSize.setStatus("current")
_HcsCurCfgTable_Object = MibTable
hcsCurCfgTable = _HcsCurCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 2)
)
if mibBuilder.loadTexts:
    hcsCurCfgTable.setStatus("current")
_HcsCurCfgTableEntry_Object = MibTableRow
hcsCurCfgTableEntry = _HcsCurCfgTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 2, 1)
)
hcsCurCfgTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "hcsCurCfgScriptIndex"),
)
if mibBuilder.loadTexts:
    hcsCurCfgTableEntry.setStatus("current")
_HcsCurCfgScriptIndex_Type = Integer32
_HcsCurCfgScriptIndex_Object = MibTableColumn
hcsCurCfgScriptIndex = _HcsCurCfgScriptIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 2, 1, 1),
    _HcsCurCfgScriptIndex_Type()
)
hcsCurCfgScriptIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hcsCurCfgScriptIndex.setStatus("current")
_HcsCurCfgScriptString_Type = OctetString
_HcsCurCfgScriptString_Object = MibTableColumn
hcsCurCfgScriptString = _HcsCurCfgScriptString_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 2, 1, 2),
    _HcsCurCfgScriptString_Type()
)
hcsCurCfgScriptString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hcsCurCfgScriptString.setStatus("current")
_HcsNewCfgTable_Object = MibTable
hcsNewCfgTable = _HcsNewCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 3)
)
if mibBuilder.loadTexts:
    hcsNewCfgTable.setStatus("current")
_HcsNewCfgTableEntry_Object = MibTableRow
hcsNewCfgTableEntry = _HcsNewCfgTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 3, 1)
)
hcsNewCfgTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "hcsNewCfgScriptIndex"),
)
if mibBuilder.loadTexts:
    hcsNewCfgTableEntry.setStatus("current")
_HcsNewCfgScriptIndex_Type = Integer32
_HcsNewCfgScriptIndex_Object = MibTableColumn
hcsNewCfgScriptIndex = _HcsNewCfgScriptIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 3, 1, 1),
    _HcsNewCfgScriptIndex_Type()
)
hcsNewCfgScriptIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hcsNewCfgScriptIndex.setStatus("current")
_HcsNewCfgScriptString_Type = OctetString
_HcsNewCfgScriptString_Object = MibTableColumn
hcsNewCfgScriptString = _HcsNewCfgScriptString_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 3, 1, 2),
    _HcsNewCfgScriptString_Type()
)
hcsNewCfgScriptString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hcsNewCfgScriptString.setStatus("current")


class _HcsNewCfgAddSendCmd_Type(DisplayString):
    """Custom type hcsNewCfgAddSendCmd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_HcsNewCfgAddSendCmd_Type.__name__ = "DisplayString"
_HcsNewCfgAddSendCmd_Object = MibTableColumn
hcsNewCfgAddSendCmd = _HcsNewCfgAddSendCmd_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 3, 1, 4),
    _HcsNewCfgAddSendCmd_Type()
)
hcsNewCfgAddSendCmd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hcsNewCfgAddSendCmd.setStatus("obsolete")


class _HcsNewCfgAddExpectCmd_Type(DisplayString):
    """Custom type hcsNewCfgAddExpectCmd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_HcsNewCfgAddExpectCmd_Type.__name__ = "DisplayString"
_HcsNewCfgAddExpectCmd_Object = MibTableColumn
hcsNewCfgAddExpectCmd = _HcsNewCfgAddExpectCmd_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 3, 1, 5),
    _HcsNewCfgAddExpectCmd_Type()
)
hcsNewCfgAddExpectCmd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hcsNewCfgAddExpectCmd.setStatus("obsolete")


class _HcsNewCfgAddCloseCmd_Type(Integer32):
    """Custom type hcsNewCfgAddCloseCmd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("close", 2),
          ("other", 1))
    )


_HcsNewCfgAddCloseCmd_Type.__name__ = "Integer32"
_HcsNewCfgAddCloseCmd_Object = MibTableColumn
hcsNewCfgAddCloseCmd = _HcsNewCfgAddCloseCmd_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 3, 1, 6),
    _HcsNewCfgAddCloseCmd_Type()
)
hcsNewCfgAddCloseCmd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hcsNewCfgAddCloseCmd.setStatus("current")


class _HcsNewCfgRemLastCmd_Type(Integer32):
    """Custom type hcsNewCfgRemLastCmd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("other", 1),
          ("remove", 2))
    )


_HcsNewCfgRemLastCmd_Type.__name__ = "Integer32"
_HcsNewCfgRemLastCmd_Object = MibTableColumn
hcsNewCfgRemLastCmd = _HcsNewCfgRemLastCmd_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 3, 1, 7),
    _HcsNewCfgRemLastCmd_Type()
)
hcsNewCfgRemLastCmd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hcsNewCfgRemLastCmd.setStatus("current")


class _HcsNewCfgDeleteScript_Type(Integer32):
    """Custom type hcsNewCfgDeleteScript based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_HcsNewCfgDeleteScript_Type.__name__ = "Integer32"
_HcsNewCfgDeleteScript_Object = MibTableColumn
hcsNewCfgDeleteScript = _HcsNewCfgDeleteScript_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 3, 1, 8),
    _HcsNewCfgDeleteScript_Type()
)
hcsNewCfgDeleteScript.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hcsNewCfgDeleteScript.setStatus("current")


class _HcsNewCfgAddOffsetCmd_Type(Integer32):
    """Custom type hcsNewCfgAddOffsetCmd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1464),
    )


_HcsNewCfgAddOffsetCmd_Type.__name__ = "Integer32"
_HcsNewCfgAddOffsetCmd_Object = MibTableColumn
hcsNewCfgAddOffsetCmd = _HcsNewCfgAddOffsetCmd_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 3, 1, 9),
    _HcsNewCfgAddOffsetCmd_Type()
)
hcsNewCfgAddOffsetCmd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hcsNewCfgAddOffsetCmd.setStatus("current")


class _HcsNewCfgAddWaitCmd_Type(Integer32):
    """Custom type hcsNewCfgAddWaitCmd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_HcsNewCfgAddWaitCmd_Type.__name__ = "Integer32"
_HcsNewCfgAddWaitCmd_Object = MibTableColumn
hcsNewCfgAddWaitCmd = _HcsNewCfgAddWaitCmd_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 3, 1, 10),
    _HcsNewCfgAddWaitCmd_Type()
)
hcsNewCfgAddWaitCmd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hcsNewCfgAddWaitCmd.setStatus("current")


class _HcsNewCfgAddOpenProtCmd_Type(DisplayString):
    """Custom type hcsNewCfgAddOpenProtCmd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_HcsNewCfgAddOpenProtCmd_Type.__name__ = "DisplayString"
_HcsNewCfgAddOpenProtCmd_Object = MibTableColumn
hcsNewCfgAddOpenProtCmd = _HcsNewCfgAddOpenProtCmd_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 3, 1, 11),
    _HcsNewCfgAddOpenProtCmd_Type()
)
hcsNewCfgAddOpenProtCmd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hcsNewCfgAddOpenProtCmd.setStatus("current")


class _HcsNewCfgAddNsendCmd_Type(DisplayString):
    """Custom type hcsNewCfgAddNsendCmd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_HcsNewCfgAddNsendCmd_Type.__name__ = "DisplayString"
_HcsNewCfgAddNsendCmd_Object = MibTableColumn
hcsNewCfgAddNsendCmd = _HcsNewCfgAddNsendCmd_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 3, 1, 12),
    _HcsNewCfgAddNsendCmd_Type()
)
hcsNewCfgAddNsendCmd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hcsNewCfgAddNsendCmd.setStatus("obsolete")


class _HcsNewCfgAddNexpectCmd_Type(DisplayString):
    """Custom type hcsNewCfgAddNexpectCmd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_HcsNewCfgAddNexpectCmd_Type.__name__ = "DisplayString"
_HcsNewCfgAddNexpectCmd_Object = MibTableColumn
hcsNewCfgAddNexpectCmd = _HcsNewCfgAddNexpectCmd_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 3, 1, 13),
    _HcsNewCfgAddNexpectCmd_Type()
)
hcsNewCfgAddNexpectCmd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hcsNewCfgAddNexpectCmd.setStatus("obsolete")


class _HcsNewCfgAddDepthCmd_Type(Integer32):
    """Custom type hcsNewCfgAddDepthCmd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1464),
    )


_HcsNewCfgAddDepthCmd_Type.__name__ = "Integer32"
_HcsNewCfgAddDepthCmd_Object = MibTableColumn
hcsNewCfgAddDepthCmd = _HcsNewCfgAddDepthCmd_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 3, 1, 14),
    _HcsNewCfgAddDepthCmd_Type()
)
hcsNewCfgAddDepthCmd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hcsNewCfgAddDepthCmd.setStatus("current")


class _HcsNewCfgAddLongBsendCmd_Type(OctetString):
    """Custom type hcsNewCfgAddLongBsendCmd based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 506),
    )


_HcsNewCfgAddLongBsendCmd_Type.__name__ = "OctetString"
_HcsNewCfgAddLongBsendCmd_Object = MibTableColumn
hcsNewCfgAddLongBsendCmd = _HcsNewCfgAddLongBsendCmd_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 3, 1, 15),
    _HcsNewCfgAddLongBsendCmd_Type()
)
hcsNewCfgAddLongBsendCmd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hcsNewCfgAddLongBsendCmd.setStatus("current")


class _HcsNewCfgAddLongBexpectCmd_Type(OctetString):
    """Custom type hcsNewCfgAddLongBexpectCmd based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 504),
    )


_HcsNewCfgAddLongBexpectCmd_Type.__name__ = "OctetString"
_HcsNewCfgAddLongBexpectCmd_Object = MibTableColumn
hcsNewCfgAddLongBexpectCmd = _HcsNewCfgAddLongBexpectCmd_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 3, 1, 16),
    _HcsNewCfgAddLongBexpectCmd_Type()
)
hcsNewCfgAddLongBexpectCmd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hcsNewCfgAddLongBexpectCmd.setStatus("current")


class _HcsNewCfgAddLongSendCmd_Type(OctetString):
    """Custom type hcsNewCfgAddLongSendCmd based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 507),
    )


_HcsNewCfgAddLongSendCmd_Type.__name__ = "OctetString"
_HcsNewCfgAddLongSendCmd_Object = MibTableColumn
hcsNewCfgAddLongSendCmd = _HcsNewCfgAddLongSendCmd_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 3, 1, 17),
    _HcsNewCfgAddLongSendCmd_Type()
)
hcsNewCfgAddLongSendCmd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hcsNewCfgAddLongSendCmd.setStatus("current")


class _HcsNewCfgAddLongExpectCmd_Type(OctetString):
    """Custom type hcsNewCfgAddLongExpectCmd based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 505),
    )


_HcsNewCfgAddLongExpectCmd_Type.__name__ = "OctetString"
_HcsNewCfgAddLongExpectCmd_Object = MibTableColumn
hcsNewCfgAddLongExpectCmd = _HcsNewCfgAddLongExpectCmd_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 3, 1, 18),
    _HcsNewCfgAddLongExpectCmd_Type()
)
hcsNewCfgAddLongExpectCmd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hcsNewCfgAddLongExpectCmd.setStatus("current")


class _HcsNewCfgAddLongNsendCmd_Type(OctetString):
    """Custom type hcsNewCfgAddLongNsendCmd based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 506),
    )


_HcsNewCfgAddLongNsendCmd_Type.__name__ = "OctetString"
_HcsNewCfgAddLongNsendCmd_Object = MibTableColumn
hcsNewCfgAddLongNsendCmd = _HcsNewCfgAddLongNsendCmd_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 3, 1, 19),
    _HcsNewCfgAddLongNsendCmd_Type()
)
hcsNewCfgAddLongNsendCmd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hcsNewCfgAddLongNsendCmd.setStatus("current")


class _HcsNewCfgAddLongNexpectCmd_Type(OctetString):
    """Custom type hcsNewCfgAddLongNexpectCmd based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 504),
    )


_HcsNewCfgAddLongNexpectCmd_Type.__name__ = "OctetString"
_HcsNewCfgAddLongNexpectCmd_Object = MibTableColumn
hcsNewCfgAddLongNexpectCmd = _HcsNewCfgAddLongNexpectCmd_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 13, 3, 1, 20),
    _HcsNewCfgAddLongNexpectCmd_Type()
)
hcsNewCfgAddLongNexpectCmd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    hcsNewCfgAddLongNexpectCmd.setStatus("current")
_SnmphcCfg_ObjectIdentity = ObjectIdentity
snmphcCfg = _SnmphcCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 14)
)
_SnmphcTableMaxSize_Type = Integer32
_SnmphcTableMaxSize_Object = MibScalar
snmphcTableMaxSize = _SnmphcTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 14, 1),
    _SnmphcTableMaxSize_Type()
)
snmphcTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmphcTableMaxSize.setStatus("current")
_SnmphcCurCfgTable_Object = MibTable
snmphcCurCfgTable = _SnmphcCurCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 14, 2)
)
if mibBuilder.loadTexts:
    snmphcCurCfgTable.setStatus("current")
_SnmphcCurCfgTableEntry_Object = MibTableRow
snmphcCurCfgTableEntry = _SnmphcCurCfgTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 14, 2, 1)
)
snmphcCurCfgTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "snmphcCurCfgIndex"),
)
if mibBuilder.loadTexts:
    snmphcCurCfgTableEntry.setStatus("current")
_SnmphcCurCfgIndex_Type = Integer32
_SnmphcCurCfgIndex_Object = MibTableColumn
snmphcCurCfgIndex = _SnmphcCurCfgIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 14, 2, 1, 1),
    _SnmphcCurCfgIndex_Type()
)
snmphcCurCfgIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmphcCurCfgIndex.setStatus("current")


class _SnmphcCurCfgOid_Type(DisplayString):
    """Custom type snmphcCurCfgOid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SnmphcCurCfgOid_Type.__name__ = "DisplayString"
_SnmphcCurCfgOid_Object = MibTableColumn
snmphcCurCfgOid = _SnmphcCurCfgOid_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 14, 2, 1, 2),
    _SnmphcCurCfgOid_Type()
)
snmphcCurCfgOid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmphcCurCfgOid.setStatus("current")


class _SnmphcCurCfgCommString_Type(DisplayString):
    """Custom type snmphcCurCfgCommString based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SnmphcCurCfgCommString_Type.__name__ = "DisplayString"
_SnmphcCurCfgCommString_Object = MibTableColumn
snmphcCurCfgCommString = _SnmphcCurCfgCommString_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 14, 2, 1, 3),
    _SnmphcCurCfgCommString_Type()
)
snmphcCurCfgCommString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmphcCurCfgCommString.setStatus("current")


class _SnmphcCurCfgRcvContent_Type(DisplayString):
    """Custom type snmphcCurCfgRcvContent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SnmphcCurCfgRcvContent_Type.__name__ = "DisplayString"
_SnmphcCurCfgRcvContent_Object = MibTableColumn
snmphcCurCfgRcvContent = _SnmphcCurCfgRcvContent_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 14, 2, 1, 4),
    _SnmphcCurCfgRcvContent_Type()
)
snmphcCurCfgRcvContent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmphcCurCfgRcvContent.setStatus("current")


class _SnmphcCurCfgInvert_Type(Integer32):
    """Custom type snmphcCurCfgInvert based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SnmphcCurCfgInvert_Type.__name__ = "Integer32"
_SnmphcCurCfgInvert_Object = MibTableColumn
snmphcCurCfgInvert = _SnmphcCurCfgInvert_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 14, 2, 1, 5),
    _SnmphcCurCfgInvert_Type()
)
snmphcCurCfgInvert.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmphcCurCfgInvert.setStatus("current")


class _SnmphcCurCfgUseWeight_Type(Integer32):
    """Custom type snmphcCurCfgUseWeight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SnmphcCurCfgUseWeight_Type.__name__ = "Integer32"
_SnmphcCurCfgUseWeight_Object = MibTableColumn
snmphcCurCfgUseWeight = _SnmphcCurCfgUseWeight_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 14, 2, 1, 6),
    _SnmphcCurCfgUseWeight_Type()
)
snmphcCurCfgUseWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmphcCurCfgUseWeight.setStatus("current")
_SnmphcNewCfgTable_Object = MibTable
snmphcNewCfgTable = _SnmphcNewCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 14, 3)
)
if mibBuilder.loadTexts:
    snmphcNewCfgTable.setStatus("current")
_SnmphcNewCfgTableEntry_Object = MibTableRow
snmphcNewCfgTableEntry = _SnmphcNewCfgTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 14, 3, 1)
)
snmphcNewCfgTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "snmphcNewCfgIndex"),
)
if mibBuilder.loadTexts:
    snmphcNewCfgTableEntry.setStatus("current")
_SnmphcNewCfgIndex_Type = Integer32
_SnmphcNewCfgIndex_Object = MibTableColumn
snmphcNewCfgIndex = _SnmphcNewCfgIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 14, 3, 1, 1),
    _SnmphcNewCfgIndex_Type()
)
snmphcNewCfgIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmphcNewCfgIndex.setStatus("current")


class _SnmphcNewCfgOid_Type(DisplayString):
    """Custom type snmphcNewCfgOid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SnmphcNewCfgOid_Type.__name__ = "DisplayString"
_SnmphcNewCfgOid_Object = MibTableColumn
snmphcNewCfgOid = _SnmphcNewCfgOid_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 14, 3, 1, 2),
    _SnmphcNewCfgOid_Type()
)
snmphcNewCfgOid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    snmphcNewCfgOid.setStatus("current")


class _SnmphcNewCfgCommString_Type(DisplayString):
    """Custom type snmphcNewCfgCommString based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SnmphcNewCfgCommString_Type.__name__ = "DisplayString"
_SnmphcNewCfgCommString_Object = MibTableColumn
snmphcNewCfgCommString = _SnmphcNewCfgCommString_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 14, 3, 1, 3),
    _SnmphcNewCfgCommString_Type()
)
snmphcNewCfgCommString.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    snmphcNewCfgCommString.setStatus("current")


class _SnmphcNewCfgRcvContent_Type(DisplayString):
    """Custom type snmphcNewCfgRcvContent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SnmphcNewCfgRcvContent_Type.__name__ = "DisplayString"
_SnmphcNewCfgRcvContent_Object = MibTableColumn
snmphcNewCfgRcvContent = _SnmphcNewCfgRcvContent_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 14, 3, 1, 4),
    _SnmphcNewCfgRcvContent_Type()
)
snmphcNewCfgRcvContent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    snmphcNewCfgRcvContent.setStatus("current")


class _SnmphcNewCfgInvert_Type(Integer32):
    """Custom type snmphcNewCfgInvert based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SnmphcNewCfgInvert_Type.__name__ = "Integer32"
_SnmphcNewCfgInvert_Object = MibTableColumn
snmphcNewCfgInvert = _SnmphcNewCfgInvert_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 14, 3, 1, 5),
    _SnmphcNewCfgInvert_Type()
)
snmphcNewCfgInvert.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    snmphcNewCfgInvert.setStatus("current")


class _SnmphcNewCfgDeleteHc_Type(Integer32):
    """Custom type snmphcNewCfgDeleteHc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SnmphcNewCfgDeleteHc_Type.__name__ = "Integer32"
_SnmphcNewCfgDeleteHc_Object = MibTableColumn
snmphcNewCfgDeleteHc = _SnmphcNewCfgDeleteHc_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 14, 3, 1, 6),
    _SnmphcNewCfgDeleteHc_Type()
)
snmphcNewCfgDeleteHc.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    snmphcNewCfgDeleteHc.setStatus("current")


class _SnmphcNewCfgUseWeight_Type(Integer32):
    """Custom type snmphcNewCfgUseWeight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SnmphcNewCfgUseWeight_Type.__name__ = "Integer32"
_SnmphcNewCfgUseWeight_Object = MibTableColumn
snmphcNewCfgUseWeight = _SnmphcNewCfgUseWeight_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 14, 3, 1, 7),
    _SnmphcNewCfgUseWeight_Type()
)
snmphcNewCfgUseWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    snmphcNewCfgUseWeight.setStatus("current")
_PipTblCfg_ObjectIdentity = ObjectIdentity
pipTblCfg = _PipTblCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15)
)
_PipTableMaxSize_Type = Integer32
_PipTableMaxSize_Object = MibScalar
pipTableMaxSize = _PipTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 1),
    _PipTableMaxSize_Type()
)
pipTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pipTableMaxSize.setStatus("current")


class _PipCurCfgBaseType_Type(Integer32):
    """Custom type pipCurCfgBaseType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("port", 1),
          ("vlan", 2))
    )


_PipCurCfgBaseType_Type.__name__ = "Integer32"
_PipCurCfgBaseType_Object = MibScalar
pipCurCfgBaseType = _PipCurCfgBaseType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 2),
    _PipCurCfgBaseType_Type()
)
pipCurCfgBaseType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pipCurCfgBaseType.setStatus("current")
_PipCurCfgTable_Object = MibTable
pipCurCfgTable = _PipCurCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 3)
)
if mibBuilder.loadTexts:
    pipCurCfgTable.setStatus("current")
_PipCurCfgTableEntry_Object = MibTableRow
pipCurCfgTableEntry = _PipCurCfgTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 3, 1)
)
pipCurCfgTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "pipCurCfgPip"),
)
if mibBuilder.loadTexts:
    pipCurCfgTableEntry.setStatus("current")
_PipCurCfgPip_Type = IpAddress
_PipCurCfgPip_Object = MibTableColumn
pipCurCfgPip = _PipCurCfgPip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 3, 1, 1),
    _PipCurCfgPip_Type()
)
pipCurCfgPip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pipCurCfgPip.setStatus("current")


class _PipCurCfgPortMap_Type(OctetString):
    """Custom type pipCurCfgPortMap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_PipCurCfgPortMap_Type.__name__ = "OctetString"
_PipCurCfgPortMap_Object = MibTableColumn
pipCurCfgPortMap = _PipCurCfgPortMap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 3, 1, 2),
    _PipCurCfgPortMap_Type()
)
pipCurCfgPortMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pipCurCfgPortMap.setStatus("current")


class _PipCurCfgVlanMap_Type(OctetString):
    """Custom type pipCurCfgVlanMap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_PipCurCfgVlanMap_Type.__name__ = "OctetString"
_PipCurCfgVlanMap_Object = MibTableColumn
pipCurCfgVlanMap = _PipCurCfgVlanMap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 3, 1, 3),
    _PipCurCfgVlanMap_Type()
)
pipCurCfgVlanMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pipCurCfgVlanMap.setStatus("current")


class _PipNewCfgBaseType_Type(Integer32):
    """Custom type pipNewCfgBaseType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("port", 1),
          ("vlan", 2))
    )


_PipNewCfgBaseType_Type.__name__ = "Integer32"
_PipNewCfgBaseType_Object = MibScalar
pipNewCfgBaseType = _PipNewCfgBaseType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 4),
    _PipNewCfgBaseType_Type()
)
pipNewCfgBaseType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pipNewCfgBaseType.setStatus("current")
_PipNewCfgTable_Object = MibTable
pipNewCfgTable = _PipNewCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 5)
)
if mibBuilder.loadTexts:
    pipNewCfgTable.setStatus("current")
_PipNewCfgTableEntry_Object = MibTableRow
pipNewCfgTableEntry = _PipNewCfgTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 5, 1)
)
pipNewCfgTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "pipNewCfgPip"),
)
if mibBuilder.loadTexts:
    pipNewCfgTableEntry.setStatus("current")
_PipNewCfgPip_Type = IpAddress
_PipNewCfgPip_Object = MibTableColumn
pipNewCfgPip = _PipNewCfgPip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 5, 1, 1),
    _PipNewCfgPip_Type()
)
pipNewCfgPip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pipNewCfgPip.setStatus("current")


class _PipNewCfgPortMap_Type(OctetString):
    """Custom type pipNewCfgPortMap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_PipNewCfgPortMap_Type.__name__ = "OctetString"
_PipNewCfgPortMap_Object = MibTableColumn
pipNewCfgPortMap = _PipNewCfgPortMap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 5, 1, 2),
    _PipNewCfgPortMap_Type()
)
pipNewCfgPortMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pipNewCfgPortMap.setStatus("current")


class _PipNewCfgVlanMap_Type(OctetString):
    """Custom type pipNewCfgVlanMap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_PipNewCfgVlanMap_Type.__name__ = "OctetString"
_PipNewCfgVlanMap_Object = MibTableColumn
pipNewCfgVlanMap = _PipNewCfgVlanMap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 5, 1, 3),
    _PipNewCfgVlanMap_Type()
)
pipNewCfgVlanMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pipNewCfgVlanMap.setStatus("current")


class _PipNewCfgDelete_Type(Integer32):
    """Custom type pipNewCfgDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_PipNewCfgDelete_Type.__name__ = "Integer32"
_PipNewCfgDelete_Object = MibTableColumn
pipNewCfgDelete = _PipNewCfgDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 5, 1, 4),
    _PipNewCfgDelete_Type()
)
pipNewCfgDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    pipNewCfgDelete.setStatus("current")
_PipNewCfgAddPortVlan_Type = Integer32
_PipNewCfgAddPortVlan_Object = MibTableColumn
pipNewCfgAddPortVlan = _PipNewCfgAddPortVlan_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 5, 1, 5),
    _PipNewCfgAddPortVlan_Type()
)
pipNewCfgAddPortVlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    pipNewCfgAddPortVlan.setStatus("current")
_PipNewCfgRemovePortVlan_Type = Integer32
_PipNewCfgRemovePortVlan_Object = MibTableColumn
pipNewCfgRemovePortVlan = _PipNewCfgRemovePortVlan_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 5, 1, 6),
    _PipNewCfgRemovePortVlan_Type()
)
pipNewCfgRemovePortVlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    pipNewCfgRemovePortVlan.setStatus("current")
_PipNewCfgAddPort_Type = Integer32
_PipNewCfgAddPort_Object = MibTableColumn
pipNewCfgAddPort = _PipNewCfgAddPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 5, 1, 7),
    _PipNewCfgAddPort_Type()
)
pipNewCfgAddPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    pipNewCfgAddPort.setStatus("current")
_PipNewCfgAddVlan_Type = Integer32
_PipNewCfgAddVlan_Object = MibTableColumn
pipNewCfgAddVlan = _PipNewCfgAddVlan_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 5, 1, 8),
    _PipNewCfgAddVlan_Type()
)
pipNewCfgAddVlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    pipNewCfgAddVlan.setStatus("current")
_PipNewCfgRemovePort_Type = Integer32
_PipNewCfgRemovePort_Object = MibTableColumn
pipNewCfgRemovePort = _PipNewCfgRemovePort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 5, 1, 9),
    _PipNewCfgRemovePort_Type()
)
pipNewCfgRemovePort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    pipNewCfgRemovePort.setStatus("current")
_PipNewCfgRemoveVlan_Type = Integer32
_PipNewCfgRemoveVlan_Object = MibTableColumn
pipNewCfgRemoveVlan = _PipNewCfgRemoveVlan_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 5, 1, 10),
    _PipNewCfgRemoveVlan_Type()
)
pipNewCfgRemoveVlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    pipNewCfgRemoveVlan.setStatus("current")
_Pip6CurCfgTable_Object = MibTable
pip6CurCfgTable = _Pip6CurCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 6)
)
if mibBuilder.loadTexts:
    pip6CurCfgTable.setStatus("current")
_Pip6CurCfgTableEntry_Object = MibTableRow
pip6CurCfgTableEntry = _Pip6CurCfgTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 6, 1)
)
pip6CurCfgTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "pip6CurCfgPip"),
)
if mibBuilder.loadTexts:
    pip6CurCfgTableEntry.setStatus("current")


class _Pip6CurCfgPip_Type(DisplayString):
    """Custom type pip6CurCfgPip based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_Pip6CurCfgPip_Type.__name__ = "DisplayString"
_Pip6CurCfgPip_Object = MibTableColumn
pip6CurCfgPip = _Pip6CurCfgPip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 6, 1, 1),
    _Pip6CurCfgPip_Type()
)
pip6CurCfgPip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pip6CurCfgPip.setStatus("current")


class _Pip6CurCfgPortMap_Type(OctetString):
    """Custom type pip6CurCfgPortMap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Pip6CurCfgPortMap_Type.__name__ = "OctetString"
_Pip6CurCfgPortMap_Object = MibTableColumn
pip6CurCfgPortMap = _Pip6CurCfgPortMap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 6, 1, 2),
    _Pip6CurCfgPortMap_Type()
)
pip6CurCfgPortMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pip6CurCfgPortMap.setStatus("current")


class _Pip6CurCfgVlanMap_Type(OctetString):
    """Custom type pip6CurCfgVlanMap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_Pip6CurCfgVlanMap_Type.__name__ = "OctetString"
_Pip6CurCfgVlanMap_Object = MibTableColumn
pip6CurCfgVlanMap = _Pip6CurCfgVlanMap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 6, 1, 3),
    _Pip6CurCfgVlanMap_Type()
)
pip6CurCfgVlanMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pip6CurCfgVlanMap.setStatus("current")
_Pip6NewCfgTable_Object = MibTable
pip6NewCfgTable = _Pip6NewCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 7)
)
if mibBuilder.loadTexts:
    pip6NewCfgTable.setStatus("current")
_Pip6NewCfgTableEntry_Object = MibTableRow
pip6NewCfgTableEntry = _Pip6NewCfgTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 7, 1)
)
pip6NewCfgTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "pip6NewCfgPip"),
)
if mibBuilder.loadTexts:
    pip6NewCfgTableEntry.setStatus("current")


class _Pip6NewCfgPip_Type(DisplayString):
    """Custom type pip6NewCfgPip based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_Pip6NewCfgPip_Type.__name__ = "DisplayString"
_Pip6NewCfgPip_Object = MibTableColumn
pip6NewCfgPip = _Pip6NewCfgPip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 7, 1, 1),
    _Pip6NewCfgPip_Type()
)
pip6NewCfgPip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pip6NewCfgPip.setStatus("current")


class _Pip6NewCfgPortMap_Type(OctetString):
    """Custom type pip6NewCfgPortMap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Pip6NewCfgPortMap_Type.__name__ = "OctetString"
_Pip6NewCfgPortMap_Object = MibTableColumn
pip6NewCfgPortMap = _Pip6NewCfgPortMap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 7, 1, 2),
    _Pip6NewCfgPortMap_Type()
)
pip6NewCfgPortMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pip6NewCfgPortMap.setStatus("current")


class _Pip6NewCfgVlanMap_Type(OctetString):
    """Custom type pip6NewCfgVlanMap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_Pip6NewCfgVlanMap_Type.__name__ = "OctetString"
_Pip6NewCfgVlanMap_Object = MibTableColumn
pip6NewCfgVlanMap = _Pip6NewCfgVlanMap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 7, 1, 3),
    _Pip6NewCfgVlanMap_Type()
)
pip6NewCfgVlanMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pip6NewCfgVlanMap.setStatus("current")


class _Pip6NewCfgDelete_Type(Integer32):
    """Custom type pip6NewCfgDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_Pip6NewCfgDelete_Type.__name__ = "Integer32"
_Pip6NewCfgDelete_Object = MibTableColumn
pip6NewCfgDelete = _Pip6NewCfgDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 7, 1, 4),
    _Pip6NewCfgDelete_Type()
)
pip6NewCfgDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    pip6NewCfgDelete.setStatus("current")
_Pip6NewCfgAddPortVlan_Type = Integer32
_Pip6NewCfgAddPortVlan_Object = MibTableColumn
pip6NewCfgAddPortVlan = _Pip6NewCfgAddPortVlan_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 7, 1, 5),
    _Pip6NewCfgAddPortVlan_Type()
)
pip6NewCfgAddPortVlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    pip6NewCfgAddPortVlan.setStatus("current")
_Pip6NewCfgRemovePortVlan_Type = Integer32
_Pip6NewCfgRemovePortVlan_Object = MibTableColumn
pip6NewCfgRemovePortVlan = _Pip6NewCfgRemovePortVlan_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 7, 1, 6),
    _Pip6NewCfgRemovePortVlan_Type()
)
pip6NewCfgRemovePortVlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    pip6NewCfgRemovePortVlan.setStatus("current")
_Pip6NewCfgAddPort_Type = Integer32
_Pip6NewCfgAddPort_Object = MibTableColumn
pip6NewCfgAddPort = _Pip6NewCfgAddPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 7, 1, 7),
    _Pip6NewCfgAddPort_Type()
)
pip6NewCfgAddPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    pip6NewCfgAddPort.setStatus("current")
_Pip6NewCfgAddVlan_Type = Integer32
_Pip6NewCfgAddVlan_Object = MibTableColumn
pip6NewCfgAddVlan = _Pip6NewCfgAddVlan_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 7, 1, 8),
    _Pip6NewCfgAddVlan_Type()
)
pip6NewCfgAddVlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    pip6NewCfgAddVlan.setStatus("current")
_Pip6NewCfgRemovePort_Type = Integer32
_Pip6NewCfgRemovePort_Object = MibTableColumn
pip6NewCfgRemovePort = _Pip6NewCfgRemovePort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 7, 1, 9),
    _Pip6NewCfgRemovePort_Type()
)
pip6NewCfgRemovePort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    pip6NewCfgRemovePort.setStatus("current")
_Pip6NewCfgRemoveVlan_Type = Integer32
_Pip6NewCfgRemoveVlan_Object = MibTableColumn
pip6NewCfgRemoveVlan = _Pip6NewCfgRemoveVlan_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 15, 7, 1, 10),
    _Pip6NewCfgRemoveVlan_Type()
)
pip6NewCfgRemoveVlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    pip6NewCfgRemoveVlan.setStatus("current")
_LinklbCfg_ObjectIdentity = ObjectIdentity
linklbCfg = _LinklbCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16)
)


class _SlbCurCfgLinklbState_Type(Integer32):
    """Custom type slbCurCfgLinklbState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgLinklbState_Type.__name__ = "Integer32"
_SlbCurCfgLinklbState_Object = MibScalar
slbCurCfgLinklbState = _SlbCurCfgLinklbState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 1),
    _SlbCurCfgLinklbState_Type()
)
slbCurCfgLinklbState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgLinklbState.setStatus("current")


class _SlbNewCfgLinklbState_Type(Integer32):
    """Custom type slbNewCfgLinklbState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgLinklbState_Type.__name__ = "Integer32"
_SlbNewCfgLinklbState_Object = MibScalar
slbNewCfgLinklbState = _SlbNewCfgLinklbState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 2),
    _SlbNewCfgLinklbState_Type()
)
slbNewCfgLinklbState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgLinklbState.setStatus("current")
_SlbCurCfgLinklbRealGroup_Type = Integer32
_SlbCurCfgLinklbRealGroup_Object = MibScalar
slbCurCfgLinklbRealGroup = _SlbCurCfgLinklbRealGroup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 3),
    _SlbCurCfgLinklbRealGroup_Type()
)
slbCurCfgLinklbRealGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgLinklbRealGroup.setStatus("current")
_SlbNewCfgLinklbRealGroup_Type = Integer32
_SlbNewCfgLinklbRealGroup_Object = MibScalar
slbNewCfgLinklbRealGroup = _SlbNewCfgLinklbRealGroup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 4),
    _SlbNewCfgLinklbRealGroup_Type()
)
slbNewCfgLinklbRealGroup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgLinklbRealGroup.setStatus("current")
_SlbLinklbDrecord_ObjectIdentity = ObjectIdentity
slbLinklbDrecord = _SlbLinklbDrecord_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5)
)
_SlbDrecordTableMaxSize_Type = Integer32
_SlbDrecordTableMaxSize_Object = MibScalar
slbDrecordTableMaxSize = _SlbDrecordTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 1),
    _SlbDrecordTableMaxSize_Type()
)
slbDrecordTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbDrecordTableMaxSize.setStatus("current")
_SlbCurCfgDrecordTable_Object = MibTable
slbCurCfgDrecordTable = _SlbCurCfgDrecordTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 2)
)
if mibBuilder.loadTexts:
    slbCurCfgDrecordTable.setStatus("current")
_SlbCurCfgDrecordEntry_Object = MibTableRow
slbCurCfgDrecordEntry = _SlbCurCfgDrecordEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 2, 1)
)
slbCurCfgDrecordEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgDrecordIndex"),
)
if mibBuilder.loadTexts:
    slbCurCfgDrecordEntry.setStatus("current")


class _SlbCurCfgDrecordIndex_Type(Integer32):
    """Custom type slbCurCfgDrecordIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_SlbCurCfgDrecordIndex_Type.__name__ = "Integer32"
_SlbCurCfgDrecordIndex_Object = MibTableColumn
slbCurCfgDrecordIndex = _SlbCurCfgDrecordIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 2, 1, 1),
    _SlbCurCfgDrecordIndex_Type()
)
slbCurCfgDrecordIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgDrecordIndex.setStatus("current")


class _SlbCurCfgDomainRecordState_Type(Integer32):
    """Custom type slbCurCfgDomainRecordState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgDomainRecordState_Type.__name__ = "Integer32"
_SlbCurCfgDomainRecordState_Object = MibTableColumn
slbCurCfgDomainRecordState = _SlbCurCfgDomainRecordState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 2, 1, 2),
    _SlbCurCfgDomainRecordState_Type()
)
slbCurCfgDomainRecordState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgDomainRecordState.setStatus("current")


class _SlbCurCfgDomainRecordName_Type(DisplayString):
    """Custom type slbCurCfgDomainRecordName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 34),
    )


_SlbCurCfgDomainRecordName_Type.__name__ = "DisplayString"
_SlbCurCfgDomainRecordName_Object = MibTableColumn
slbCurCfgDomainRecordName = _SlbCurCfgDomainRecordName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 2, 1, 3),
    _SlbCurCfgDomainRecordName_Type()
)
slbCurCfgDomainRecordName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgDomainRecordName.setStatus("current")
_SlbNewCfgDrecordTable_Object = MibTable
slbNewCfgDrecordTable = _SlbNewCfgDrecordTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 3)
)
if mibBuilder.loadTexts:
    slbNewCfgDrecordTable.setStatus("current")
_SlbNewCfgDrecordEntry_Object = MibTableRow
slbNewCfgDrecordEntry = _SlbNewCfgDrecordEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 3, 1)
)
slbNewCfgDrecordEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgDrecordIndex"),
)
if mibBuilder.loadTexts:
    slbNewCfgDrecordEntry.setStatus("current")


class _SlbNewCfgDrecordIndex_Type(Integer32):
    """Custom type slbNewCfgDrecordIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_SlbNewCfgDrecordIndex_Type.__name__ = "Integer32"
_SlbNewCfgDrecordIndex_Object = MibTableColumn
slbNewCfgDrecordIndex = _SlbNewCfgDrecordIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 3, 1, 1),
    _SlbNewCfgDrecordIndex_Type()
)
slbNewCfgDrecordIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgDrecordIndex.setStatus("current")


class _SlbNewCfgDomainRecordState_Type(Integer32):
    """Custom type slbNewCfgDomainRecordState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgDomainRecordState_Type.__name__ = "Integer32"
_SlbNewCfgDomainRecordState_Object = MibTableColumn
slbNewCfgDomainRecordState = _SlbNewCfgDomainRecordState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 3, 1, 2),
    _SlbNewCfgDomainRecordState_Type()
)
slbNewCfgDomainRecordState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgDomainRecordState.setStatus("current")


class _SlbNewCfgDomainRecordName_Type(DisplayString):
    """Custom type slbNewCfgDomainRecordName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 34),
    )


_SlbNewCfgDomainRecordName_Type.__name__ = "DisplayString"
_SlbNewCfgDomainRecordName_Object = MibTableColumn
slbNewCfgDomainRecordName = _SlbNewCfgDomainRecordName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 3, 1, 3),
    _SlbNewCfgDomainRecordName_Type()
)
slbNewCfgDomainRecordName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgDomainRecordName.setStatus("current")


class _SlbNewCfgDrecordDelete_Type(Integer32):
    """Custom type slbNewCfgDrecordDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewCfgDrecordDelete_Type.__name__ = "Integer32"
_SlbNewCfgDrecordDelete_Object = MibTableColumn
slbNewCfgDrecordDelete = _SlbNewCfgDrecordDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 3, 1, 4),
    _SlbNewCfgDrecordDelete_Type()
)
slbNewCfgDrecordDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgDrecordDelete.setStatus("current")
_SlbDrecordVirtRealMappingTableMaxSize_Type = Integer32
_SlbDrecordVirtRealMappingTableMaxSize_Object = MibScalar
slbDrecordVirtRealMappingTableMaxSize = _SlbDrecordVirtRealMappingTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 4),
    _SlbDrecordVirtRealMappingTableMaxSize_Type()
)
slbDrecordVirtRealMappingTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbDrecordVirtRealMappingTableMaxSize.setStatus("current")
_SlbCurCfgDrecordVirtRealMappingTable_Object = MibTable
slbCurCfgDrecordVirtRealMappingTable = _SlbCurCfgDrecordVirtRealMappingTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 5)
)
if mibBuilder.loadTexts:
    slbCurCfgDrecordVirtRealMappingTable.setStatus("current")
_SlbCurCfgDrecordVirtRealMappingEntry_Object = MibTableRow
slbCurCfgDrecordVirtRealMappingEntry = _SlbCurCfgDrecordVirtRealMappingEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 5, 1)
)
slbCurCfgDrecordVirtRealMappingEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgDomainRecordIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgEntryIndex"),
)
if mibBuilder.loadTexts:
    slbCurCfgDrecordVirtRealMappingEntry.setStatus("current")


class _SlbCurCfgDomainRecordIndex_Type(Integer32):
    """Custom type slbCurCfgDomainRecordIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_SlbCurCfgDomainRecordIndex_Type.__name__ = "Integer32"
_SlbCurCfgDomainRecordIndex_Object = MibTableColumn
slbCurCfgDomainRecordIndex = _SlbCurCfgDomainRecordIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 5, 1, 1),
    _SlbCurCfgDomainRecordIndex_Type()
)
slbCurCfgDomainRecordIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgDomainRecordIndex.setStatus("current")


class _SlbCurCfgEntryIndex_Type(Integer32):
    """Custom type slbCurCfgEntryIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_SlbCurCfgEntryIndex_Type.__name__ = "Integer32"
_SlbCurCfgEntryIndex_Object = MibTableColumn
slbCurCfgEntryIndex = _SlbCurCfgEntryIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 5, 1, 2),
    _SlbCurCfgEntryIndex_Type()
)
slbCurCfgEntryIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgEntryIndex.setStatus("current")
_SlbCurCfgDrecordVirtServer_Type = Integer32
_SlbCurCfgDrecordVirtServer_Object = MibTableColumn
slbCurCfgDrecordVirtServer = _SlbCurCfgDrecordVirtServer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 5, 1, 3),
    _SlbCurCfgDrecordVirtServer_Type()
)
slbCurCfgDrecordVirtServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgDrecordVirtServer.setStatus("current")
_SlbCurCfgDrecordRealServer_Type = Integer32
_SlbCurCfgDrecordRealServer_Object = MibTableColumn
slbCurCfgDrecordRealServer = _SlbCurCfgDrecordRealServer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 5, 1, 4),
    _SlbCurCfgDrecordRealServer_Type()
)
slbCurCfgDrecordRealServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgDrecordRealServer.setStatus("current")


class _SlbCurCfgDrecordEntryState_Type(Integer32):
    """Custom type slbCurCfgDrecordEntryState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgDrecordEntryState_Type.__name__ = "Integer32"
_SlbCurCfgDrecordEntryState_Object = MibTableColumn
slbCurCfgDrecordEntryState = _SlbCurCfgDrecordEntryState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 5, 1, 5),
    _SlbCurCfgDrecordEntryState_Type()
)
slbCurCfgDrecordEntryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgDrecordEntryState.setStatus("current")
_SlbNewCfgDrecordVirtRealMappingTable_Object = MibTable
slbNewCfgDrecordVirtRealMappingTable = _SlbNewCfgDrecordVirtRealMappingTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 6)
)
if mibBuilder.loadTexts:
    slbNewCfgDrecordVirtRealMappingTable.setStatus("current")
_SlbNewCfgDrecordVirtRealMappingEntry_Object = MibTableRow
slbNewCfgDrecordVirtRealMappingEntry = _SlbNewCfgDrecordVirtRealMappingEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 6, 1)
)
slbNewCfgDrecordVirtRealMappingEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgDomainRecordIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgEntryIndex"),
)
if mibBuilder.loadTexts:
    slbNewCfgDrecordVirtRealMappingEntry.setStatus("current")


class _SlbNewCfgDomainRecordIndex_Type(Integer32):
    """Custom type slbNewCfgDomainRecordIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_SlbNewCfgDomainRecordIndex_Type.__name__ = "Integer32"
_SlbNewCfgDomainRecordIndex_Object = MibTableColumn
slbNewCfgDomainRecordIndex = _SlbNewCfgDomainRecordIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 6, 1, 1),
    _SlbNewCfgDomainRecordIndex_Type()
)
slbNewCfgDomainRecordIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgDomainRecordIndex.setStatus("current")


class _SlbNewCfgEntryIndex_Type(Integer32):
    """Custom type slbNewCfgEntryIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_SlbNewCfgEntryIndex_Type.__name__ = "Integer32"
_SlbNewCfgEntryIndex_Object = MibTableColumn
slbNewCfgEntryIndex = _SlbNewCfgEntryIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 6, 1, 2),
    _SlbNewCfgEntryIndex_Type()
)
slbNewCfgEntryIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgEntryIndex.setStatus("current")
_SlbNewCfgDrecordVirtServer_Type = Integer32
_SlbNewCfgDrecordVirtServer_Object = MibTableColumn
slbNewCfgDrecordVirtServer = _SlbNewCfgDrecordVirtServer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 6, 1, 3),
    _SlbNewCfgDrecordVirtServer_Type()
)
slbNewCfgDrecordVirtServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgDrecordVirtServer.setStatus("current")
_SlbNewCfgDrecordRealServer_Type = Integer32
_SlbNewCfgDrecordRealServer_Object = MibTableColumn
slbNewCfgDrecordRealServer = _SlbNewCfgDrecordRealServer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 6, 1, 4),
    _SlbNewCfgDrecordRealServer_Type()
)
slbNewCfgDrecordRealServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgDrecordRealServer.setStatus("current")


class _SlbNewCfgDrecordEntryState_Type(Integer32):
    """Custom type slbNewCfgDrecordEntryState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgDrecordEntryState_Type.__name__ = "Integer32"
_SlbNewCfgDrecordEntryState_Object = MibTableColumn
slbNewCfgDrecordEntryState = _SlbNewCfgDrecordEntryState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 6, 1, 5),
    _SlbNewCfgDrecordEntryState_Type()
)
slbNewCfgDrecordEntryState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgDrecordEntryState.setStatus("current")


class _SlbNewCfgDrecordEntryDelete_Type(Integer32):
    """Custom type slbNewCfgDrecordEntryDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewCfgDrecordEntryDelete_Type.__name__ = "Integer32"
_SlbNewCfgDrecordEntryDelete_Object = MibTableColumn
slbNewCfgDrecordEntryDelete = _SlbNewCfgDrecordEntryDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 5, 6, 1, 6),
    _SlbNewCfgDrecordEntryDelete_Type()
)
slbNewCfgDrecordEntryDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgDrecordEntryDelete.setStatus("current")


class _SlbCurCfgLinklbTTL_Type(Integer32):
    """Custom type slbCurCfgLinklbTTL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SlbCurCfgLinklbTTL_Type.__name__ = "Integer32"
_SlbCurCfgLinklbTTL_Object = MibScalar
slbCurCfgLinklbTTL = _SlbCurCfgLinklbTTL_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 6),
    _SlbCurCfgLinklbTTL_Type()
)
slbCurCfgLinklbTTL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgLinklbTTL.setStatus("current")


class _SlbNewCfgLinklbTTL_Type(Integer32):
    """Custom type slbNewCfgLinklbTTL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SlbNewCfgLinklbTTL_Type.__name__ = "Integer32"
_SlbNewCfgLinklbTTL_Object = MibScalar
slbNewCfgLinklbTTL = _SlbNewCfgLinklbTTL_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 16, 7),
    _SlbNewCfgLinklbTTL_Type()
)
slbNewCfgLinklbTTL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewCfgLinklbTTL.setStatus("current")
_SmtportCfg_ObjectIdentity = ObjectIdentity
smtportCfg = _SmtportCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 17)
)
_SlbSmtportTableMaxSize_Type = Integer32
_SlbSmtportTableMaxSize_Object = MibScalar
slbSmtportTableMaxSize = _SlbSmtportTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 17, 1),
    _SlbSmtportTableMaxSize_Type()
)
slbSmtportTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbSmtportTableMaxSize.setStatus("current")
_SlbCurCfgSmtportTable_Object = MibTable
slbCurCfgSmtportTable = _SlbCurCfgSmtportTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 17, 2)
)
if mibBuilder.loadTexts:
    slbCurCfgSmtportTable.setStatus("current")
_SlbCurCfgSmtportEntry_Object = MibTableRow
slbCurCfgSmtportEntry = _SlbCurCfgSmtportEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 17, 2, 1)
)
slbCurCfgSmtportEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgSmtportIndex"),
)
if mibBuilder.loadTexts:
    slbCurCfgSmtportEntry.setStatus("current")
_SlbCurCfgSmtportIndex_Type = Integer32
_SlbCurCfgSmtportIndex_Object = MibTableColumn
slbCurCfgSmtportIndex = _SlbCurCfgSmtportIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 17, 2, 1, 1),
    _SlbCurCfgSmtportIndex_Type()
)
slbCurCfgSmtportIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSmtportIndex.setStatus("current")


class _SlbCurCfgSmtportNum_Type(Integer32):
    """Custom type slbCurCfgSmtportNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 65534),
    )


_SlbCurCfgSmtportNum_Type.__name__ = "Integer32"
_SlbCurCfgSmtportNum_Object = MibTableColumn
slbCurCfgSmtportNum = _SlbCurCfgSmtportNum_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 17, 2, 1, 2),
    _SlbCurCfgSmtportNum_Type()
)
slbCurCfgSmtportNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSmtportNum.setStatus("current")
_SlbNewCfgSmtportTable_Object = MibTable
slbNewCfgSmtportTable = _SlbNewCfgSmtportTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 17, 3)
)
if mibBuilder.loadTexts:
    slbNewCfgSmtportTable.setStatus("current")
_SlbNewCfgSmtportEntry_Object = MibTableRow
slbNewCfgSmtportEntry = _SlbNewCfgSmtportEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 17, 3, 1)
)
slbNewCfgSmtportEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgSmtportIndex"),
)
if mibBuilder.loadTexts:
    slbNewCfgSmtportEntry.setStatus("current")
_SlbNewCfgSmtportIndex_Type = Integer32
_SlbNewCfgSmtportIndex_Object = MibTableColumn
slbNewCfgSmtportIndex = _SlbNewCfgSmtportIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 17, 3, 1, 1),
    _SlbNewCfgSmtportIndex_Type()
)
slbNewCfgSmtportIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgSmtportIndex.setStatus("current")


class _SlbNewCfgSmtportNum_Type(Integer32):
    """Custom type slbNewCfgSmtportNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 65534),
    )


_SlbNewCfgSmtportNum_Type.__name__ = "Integer32"
_SlbNewCfgSmtportNum_Object = MibTableColumn
slbNewCfgSmtportNum = _SlbNewCfgSmtportNum_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 17, 3, 1, 2),
    _SlbNewCfgSmtportNum_Type()
)
slbNewCfgSmtportNum.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgSmtportNum.setStatus("current")


class _SlbNewCfgSmtportDelete_Type(Integer32):
    """Custom type slbNewCfgSmtportDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewCfgSmtportDelete_Type.__name__ = "Integer32"
_SlbNewCfgSmtportDelete_Object = MibTableColumn
slbNewCfgSmtportDelete = _SlbNewCfgSmtportDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 17, 3, 1, 3),
    _SlbNewCfgSmtportDelete_Type()
)
slbNewCfgSmtportDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgSmtportDelete.setStatus("current")
_SlbSmtportTableAvaibleIndex_Type = Integer32
_SlbSmtportTableAvaibleIndex_Object = MibScalar
slbSmtportTableAvaibleIndex = _SlbSmtportTableAvaibleIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 17, 4),
    _SlbSmtportTableAvaibleIndex_Type()
)
slbSmtportTableAvaibleIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbSmtportTableAvaibleIndex.setStatus("current")
_AcclCfg_ObjectIdentity = ObjectIdentity
acclCfg = _AcclCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18)
)
_Caching_ObjectIdentity = ObjectIdentity
caching = _Caching_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1)
)


class _SlbCurAcclCfgCachememcache_Type(Integer32):
    """Custom type slbCurAcclCfgCachememcache based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 50),
    )


_SlbCurAcclCfgCachememcache_Type.__name__ = "Integer32"
_SlbCurAcclCfgCachememcache_Object = MibScalar
slbCurAcclCfgCachememcache = _SlbCurAcclCfgCachememcache_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 1),
    _SlbCurAcclCfgCachememcache_Type()
)
slbCurAcclCfgCachememcache.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCachememcache.setStatus("current")


class _SlbNewAcclCfgCachememcache_Type(Integer32):
    """Custom type slbNewAcclCfgCachememcache based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 50),
    )


_SlbNewAcclCfgCachememcache_Type.__name__ = "Integer32"
_SlbNewAcclCfgCachememcache_Object = MibScalar
slbNewAcclCfgCachememcache = _SlbNewAcclCfgCachememcache_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 2),
    _SlbNewAcclCfgCachememcache_Type()
)
slbNewAcclCfgCachememcache.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewAcclCfgCachememcache.setStatus("current")


class _SlbCurAcclCfgCacheOnOff_Type(Integer32):
    """Custom type slbCurAcclCfgCacheOnOff based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 2),
          ("on", 1))
    )


_SlbCurAcclCfgCacheOnOff_Type.__name__ = "Integer32"
_SlbCurAcclCfgCacheOnOff_Object = MibScalar
slbCurAcclCfgCacheOnOff = _SlbCurAcclCfgCacheOnOff_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 3),
    _SlbCurAcclCfgCacheOnOff_Type()
)
slbCurAcclCfgCacheOnOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCacheOnOff.setStatus("current")


class _SlbNewAcclCfgCacheOnOff_Type(Integer32):
    """Custom type slbNewAcclCfgCacheOnOff based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 2),
          ("on", 1))
    )


_SlbNewAcclCfgCacheOnOff_Type.__name__ = "Integer32"
_SlbNewAcclCfgCacheOnOff_Object = MibScalar
slbNewAcclCfgCacheOnOff = _SlbNewAcclCfgCacheOnOff_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 4),
    _SlbNewAcclCfgCacheOnOff_Type()
)
slbNewAcclCfgCacheOnOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheOnOff.setStatus("current")
_SlbCurAcclCfgCachePolTable_Object = MibTable
slbCurAcclCfgCachePolTable = _SlbCurAcclCfgCachePolTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 5)
)
if mibBuilder.loadTexts:
    slbCurAcclCfgCachePolTable.setStatus("current")
_SlbCurAcclCfgCachePolEntry_Object = MibTableRow
slbCurAcclCfgCachePolEntry = _SlbCurAcclCfgCachePolEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 5, 1)
)
slbCurAcclCfgCachePolEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurAcclCfgCachePolNameIdIndex"),
)
if mibBuilder.loadTexts:
    slbCurAcclCfgCachePolEntry.setStatus("current")


class _SlbCurAcclCfgCachePolNameIdIndex_Type(DisplayString):
    """Custom type slbCurAcclCfgCachePolNameIdIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurAcclCfgCachePolNameIdIndex_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCachePolNameIdIndex_Object = MibTableColumn
slbCurAcclCfgCachePolNameIdIndex = _SlbCurAcclCfgCachePolNameIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 5, 1, 1),
    _SlbCurAcclCfgCachePolNameIdIndex_Type()
)
slbCurAcclCfgCachePolNameIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCachePolNameIdIndex.setStatus("current")


class _SlbCurAcclCfgCachePolName_Type(DisplayString):
    """Custom type slbCurAcclCfgCachePolName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurAcclCfgCachePolName_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCachePolName_Object = MibTableColumn
slbCurAcclCfgCachePolName = _SlbCurAcclCfgCachePolName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 5, 1, 2),
    _SlbCurAcclCfgCachePolName_Type()
)
slbCurAcclCfgCachePolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCachePolName.setStatus("current")
_SlbCurAcclCfgCachePolExpireTime_Type = Integer32
_SlbCurAcclCfgCachePolExpireTime_Object = MibTableColumn
slbCurAcclCfgCachePolExpireTime = _SlbCurAcclCfgCachePolExpireTime_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 5, 1, 3),
    _SlbCurAcclCfgCachePolExpireTime_Type()
)
slbCurAcclCfgCachePolExpireTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCachePolExpireTime.setStatus("current")
_SlbCurAcclCfgCachePolMinSize_Type = Integer32
_SlbCurAcclCfgCachePolMinSize_Object = MibTableColumn
slbCurAcclCfgCachePolMinSize = _SlbCurAcclCfgCachePolMinSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 5, 1, 4),
    _SlbCurAcclCfgCachePolMinSize_Type()
)
slbCurAcclCfgCachePolMinSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCachePolMinSize.setStatus("current")
_SlbCurAcclCfgCachePolMaxSize_Type = Integer32
_SlbCurAcclCfgCachePolMaxSize_Object = MibTableColumn
slbCurAcclCfgCachePolMaxSize = _SlbCurAcclCfgCachePolMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 5, 1, 5),
    _SlbCurAcclCfgCachePolMaxSize_Type()
)
slbCurAcclCfgCachePolMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCachePolMaxSize.setStatus("current")


class _SlbCurAcclCfgCachePolURLList_Type(DisplayString):
    """Custom type slbCurAcclCfgCachePolURLList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurAcclCfgCachePolURLList_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCachePolURLList_Object = MibTableColumn
slbCurAcclCfgCachePolURLList = _SlbCurAcclCfgCachePolURLList_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 5, 1, 6),
    _SlbCurAcclCfgCachePolURLList_Type()
)
slbCurAcclCfgCachePolURLList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCachePolURLList.setStatus("current")


class _SlbCurAcclCfgCachePolStore_Type(Integer32):
    """Custom type slbCurAcclCfgCachePolStore based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cacheall", 2),
          ("srvrhdr", 1))
    )


_SlbCurAcclCfgCachePolStore_Type.__name__ = "Integer32"
_SlbCurAcclCfgCachePolStore_Object = MibTableColumn
slbCurAcclCfgCachePolStore = _SlbCurAcclCfgCachePolStore_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 5, 1, 7),
    _SlbCurAcclCfgCachePolStore_Type()
)
slbCurAcclCfgCachePolStore.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCachePolStore.setStatus("current")


class _SlbCurAcclCfgCachePolServe_Type(Integer32):
    """Custom type slbCurAcclCfgCachePolServe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("cache", 3),
          ("clnthdr", 1),
          ("refresh", 2))
    )


_SlbCurAcclCfgCachePolServe_Type.__name__ = "Integer32"
_SlbCurAcclCfgCachePolServe_Object = MibTableColumn
slbCurAcclCfgCachePolServe = _SlbCurAcclCfgCachePolServe_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 5, 1, 8),
    _SlbCurAcclCfgCachePolServe_Type()
)
slbCurAcclCfgCachePolServe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCachePolServe.setStatus("current")


class _SlbCurAcclCfgCachePolQuery_Type(Integer32):
    """Custom type slbCurAcclCfgCachePolQuery based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("consider", 1),
          ("ignore", 2))
    )


_SlbCurAcclCfgCachePolQuery_Type.__name__ = "Integer32"
_SlbCurAcclCfgCachePolQuery_Object = MibTableColumn
slbCurAcclCfgCachePolQuery = _SlbCurAcclCfgCachePolQuery_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 5, 1, 9),
    _SlbCurAcclCfgCachePolQuery_Type()
)
slbCurAcclCfgCachePolQuery.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCachePolQuery.setStatus("current")


class _SlbCurAcclCfgCachePolBrowser_Type(Integer32):
    """Custom type slbCurAcclCfgCachePolBrowser based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurAcclCfgCachePolBrowser_Type.__name__ = "Integer32"
_SlbCurAcclCfgCachePolBrowser_Object = MibTableColumn
slbCurAcclCfgCachePolBrowser = _SlbCurAcclCfgCachePolBrowser_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 5, 1, 10),
    _SlbCurAcclCfgCachePolBrowser_Type()
)
slbCurAcclCfgCachePolBrowser.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCachePolBrowser.setStatus("current")


class _SlbCurAcclCfgCachePolAdminStatus_Type(Integer32):
    """Custom type slbCurAcclCfgCachePolAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurAcclCfgCachePolAdminStatus_Type.__name__ = "Integer32"
_SlbCurAcclCfgCachePolAdminStatus_Object = MibTableColumn
slbCurAcclCfgCachePolAdminStatus = _SlbCurAcclCfgCachePolAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 5, 1, 11),
    _SlbCurAcclCfgCachePolAdminStatus_Type()
)
slbCurAcclCfgCachePolAdminStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCachePolAdminStatus.setStatus("current")
_SlbNewAcclCfgCachePolTable_Object = MibTable
slbNewAcclCfgCachePolTable = _SlbNewAcclCfgCachePolTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 6)
)
if mibBuilder.loadTexts:
    slbNewAcclCfgCachePolTable.setStatus("current")
_SlbNewAcclCfgCachePolEntry_Object = MibTableRow
slbNewAcclCfgCachePolEntry = _SlbNewAcclCfgCachePolEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 6, 1)
)
slbNewAcclCfgCachePolEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewAcclCfgCachePolNameIdIndex"),
)
if mibBuilder.loadTexts:
    slbNewAcclCfgCachePolEntry.setStatus("current")


class _SlbNewAcclCfgCachePolNameIdIndex_Type(DisplayString):
    """Custom type slbNewAcclCfgCachePolNameIdIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewAcclCfgCachePolNameIdIndex_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCachePolNameIdIndex_Object = MibTableColumn
slbNewAcclCfgCachePolNameIdIndex = _SlbNewAcclCfgCachePolNameIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 6, 1, 1),
    _SlbNewAcclCfgCachePolNameIdIndex_Type()
)
slbNewAcclCfgCachePolNameIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewAcclCfgCachePolNameIdIndex.setStatus("current")


class _SlbNewAcclCfgCachePolName_Type(DisplayString):
    """Custom type slbNewAcclCfgCachePolName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewAcclCfgCachePolName_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCachePolName_Object = MibTableColumn
slbNewAcclCfgCachePolName = _SlbNewAcclCfgCachePolName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 6, 1, 2),
    _SlbNewAcclCfgCachePolName_Type()
)
slbNewAcclCfgCachePolName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCachePolName.setStatus("current")
_SlbNewAcclCfgCachePolExpireTime_Type = Integer32
_SlbNewAcclCfgCachePolExpireTime_Object = MibTableColumn
slbNewAcclCfgCachePolExpireTime = _SlbNewAcclCfgCachePolExpireTime_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 6, 1, 3),
    _SlbNewAcclCfgCachePolExpireTime_Type()
)
slbNewAcclCfgCachePolExpireTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCachePolExpireTime.setStatus("current")
_SlbNewAcclCfgCachePolMinSize_Type = Integer32
_SlbNewAcclCfgCachePolMinSize_Object = MibTableColumn
slbNewAcclCfgCachePolMinSize = _SlbNewAcclCfgCachePolMinSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 6, 1, 4),
    _SlbNewAcclCfgCachePolMinSize_Type()
)
slbNewAcclCfgCachePolMinSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCachePolMinSize.setStatus("current")
_SlbNewAcclCfgCachePolMaxSize_Type = Integer32
_SlbNewAcclCfgCachePolMaxSize_Object = MibTableColumn
slbNewAcclCfgCachePolMaxSize = _SlbNewAcclCfgCachePolMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 6, 1, 5),
    _SlbNewAcclCfgCachePolMaxSize_Type()
)
slbNewAcclCfgCachePolMaxSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCachePolMaxSize.setStatus("current")


class _SlbNewAcclCfgCachePolURLList_Type(DisplayString):
    """Custom type slbNewAcclCfgCachePolURLList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewAcclCfgCachePolURLList_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCachePolURLList_Object = MibTableColumn
slbNewAcclCfgCachePolURLList = _SlbNewAcclCfgCachePolURLList_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 6, 1, 6),
    _SlbNewAcclCfgCachePolURLList_Type()
)
slbNewAcclCfgCachePolURLList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCachePolURLList.setStatus("current")


class _SlbNewAcclCfgCachePolStore_Type(Integer32):
    """Custom type slbNewAcclCfgCachePolStore based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cacheall", 2),
          ("srvrhdr", 1))
    )


_SlbNewAcclCfgCachePolStore_Type.__name__ = "Integer32"
_SlbNewAcclCfgCachePolStore_Object = MibTableColumn
slbNewAcclCfgCachePolStore = _SlbNewAcclCfgCachePolStore_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 6, 1, 7),
    _SlbNewAcclCfgCachePolStore_Type()
)
slbNewAcclCfgCachePolStore.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCachePolStore.setStatus("current")


class _SlbNewAcclCfgCachePolServe_Type(Integer32):
    """Custom type slbNewAcclCfgCachePolServe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("cache", 3),
          ("clnthdr", 1),
          ("refresh", 2))
    )


_SlbNewAcclCfgCachePolServe_Type.__name__ = "Integer32"
_SlbNewAcclCfgCachePolServe_Object = MibTableColumn
slbNewAcclCfgCachePolServe = _SlbNewAcclCfgCachePolServe_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 6, 1, 8),
    _SlbNewAcclCfgCachePolServe_Type()
)
slbNewAcclCfgCachePolServe.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCachePolServe.setStatus("current")


class _SlbNewAcclCfgCachePolQuery_Type(Integer32):
    """Custom type slbNewAcclCfgCachePolQuery based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("consider", 1),
          ("ignore", 2))
    )


_SlbNewAcclCfgCachePolQuery_Type.__name__ = "Integer32"
_SlbNewAcclCfgCachePolQuery_Object = MibTableColumn
slbNewAcclCfgCachePolQuery = _SlbNewAcclCfgCachePolQuery_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 6, 1, 9),
    _SlbNewAcclCfgCachePolQuery_Type()
)
slbNewAcclCfgCachePolQuery.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCachePolQuery.setStatus("current")


class _SlbNewAcclCfgCachePolBrowser_Type(Integer32):
    """Custom type slbNewAcclCfgCachePolBrowser based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewAcclCfgCachePolBrowser_Type.__name__ = "Integer32"
_SlbNewAcclCfgCachePolBrowser_Object = MibTableColumn
slbNewAcclCfgCachePolBrowser = _SlbNewAcclCfgCachePolBrowser_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 6, 1, 10),
    _SlbNewAcclCfgCachePolBrowser_Type()
)
slbNewAcclCfgCachePolBrowser.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCachePolBrowser.setStatus("current")


class _SlbNewAcclCfgCachePolAdminStatus_Type(Integer32):
    """Custom type slbNewAcclCfgCachePolAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewAcclCfgCachePolAdminStatus_Type.__name__ = "Integer32"
_SlbNewAcclCfgCachePolAdminStatus_Object = MibTableColumn
slbNewAcclCfgCachePolAdminStatus = _SlbNewAcclCfgCachePolAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 6, 1, 11),
    _SlbNewAcclCfgCachePolAdminStatus_Type()
)
slbNewAcclCfgCachePolAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCachePolAdminStatus.setStatus("current")


class _SlbNewAcclCfgCachePolDelete_Type(Integer32):
    """Custom type slbNewAcclCfgCachePolDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewAcclCfgCachePolDelete_Type.__name__ = "Integer32"
_SlbNewAcclCfgCachePolDelete_Object = MibTableColumn
slbNewAcclCfgCachePolDelete = _SlbNewAcclCfgCachePolDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 6, 1, 12),
    _SlbNewAcclCfgCachePolDelete_Type()
)
slbNewAcclCfgCachePolDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCachePolDelete.setStatus("current")
_SlbCurAcclCfgCacheUrlListTable_Object = MibTable
slbCurAcclCfgCacheUrlListTable = _SlbCurAcclCfgCacheUrlListTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 7)
)
if mibBuilder.loadTexts:
    slbCurAcclCfgCacheUrlListTable.setStatus("current")
_SlbCurAcclCfgCacheUrlListEntry_Object = MibTableRow
slbCurAcclCfgCacheUrlListEntry = _SlbCurAcclCfgCacheUrlListEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 7, 1)
)
slbCurAcclCfgCacheUrlListEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurAcclCfgCacheUrlListIdIndex"),
)
if mibBuilder.loadTexts:
    slbCurAcclCfgCacheUrlListEntry.setStatus("current")


class _SlbCurAcclCfgCacheUrlListIdIndex_Type(DisplayString):
    """Custom type slbCurAcclCfgCacheUrlListIdIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurAcclCfgCacheUrlListIdIndex_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCacheUrlListIdIndex_Object = MibTableColumn
slbCurAcclCfgCacheUrlListIdIndex = _SlbCurAcclCfgCacheUrlListIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 7, 1, 1),
    _SlbCurAcclCfgCacheUrlListIdIndex_Type()
)
slbCurAcclCfgCacheUrlListIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCacheUrlListIdIndex.setStatus("current")


class _SlbCurAcclCfgCacheUrlListName_Type(DisplayString):
    """Custom type slbCurAcclCfgCacheUrlListName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurAcclCfgCacheUrlListName_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCacheUrlListName_Object = MibTableColumn
slbCurAcclCfgCacheUrlListName = _SlbCurAcclCfgCacheUrlListName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 7, 1, 2),
    _SlbCurAcclCfgCacheUrlListName_Type()
)
slbCurAcclCfgCacheUrlListName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCacheUrlListName.setStatus("current")


class _SlbCurAcclCfgCacheUrlListAdminStatus_Type(Integer32):
    """Custom type slbCurAcclCfgCacheUrlListAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurAcclCfgCacheUrlListAdminStatus_Type.__name__ = "Integer32"
_SlbCurAcclCfgCacheUrlListAdminStatus_Object = MibTableColumn
slbCurAcclCfgCacheUrlListAdminStatus = _SlbCurAcclCfgCacheUrlListAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 7, 1, 3),
    _SlbCurAcclCfgCacheUrlListAdminStatus_Type()
)
slbCurAcclCfgCacheUrlListAdminStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCacheUrlListAdminStatus.setStatus("current")
_SlbNewAcclCfgCacheUrlListTable_Object = MibTable
slbNewAcclCfgCacheUrlListTable = _SlbNewAcclCfgCacheUrlListTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 8)
)
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheUrlListTable.setStatus("current")
_SlbNewAcclCfgCacheUrlListEntry_Object = MibTableRow
slbNewAcclCfgCacheUrlListEntry = _SlbNewAcclCfgCacheUrlListEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 8, 1)
)
slbNewAcclCfgCacheUrlListEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewAcclCfgCacheUrlListIdIndex"),
)
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheUrlListEntry.setStatus("current")


class _SlbNewAcclCfgCacheUrlListIdIndex_Type(DisplayString):
    """Custom type slbNewAcclCfgCacheUrlListIdIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewAcclCfgCacheUrlListIdIndex_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCacheUrlListIdIndex_Object = MibTableColumn
slbNewAcclCfgCacheUrlListIdIndex = _SlbNewAcclCfgCacheUrlListIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 8, 1, 1),
    _SlbNewAcclCfgCacheUrlListIdIndex_Type()
)
slbNewAcclCfgCacheUrlListIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheUrlListIdIndex.setStatus("current")


class _SlbNewAcclCfgCacheUrlListName_Type(DisplayString):
    """Custom type slbNewAcclCfgCacheUrlListName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewAcclCfgCacheUrlListName_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCacheUrlListName_Object = MibTableColumn
slbNewAcclCfgCacheUrlListName = _SlbNewAcclCfgCacheUrlListName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 8, 1, 2),
    _SlbNewAcclCfgCacheUrlListName_Type()
)
slbNewAcclCfgCacheUrlListName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheUrlListName.setStatus("current")


class _SlbNewAcclCfgCacheUrlListAdminStatus_Type(Integer32):
    """Custom type slbNewAcclCfgCacheUrlListAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewAcclCfgCacheUrlListAdminStatus_Type.__name__ = "Integer32"
_SlbNewAcclCfgCacheUrlListAdminStatus_Object = MibTableColumn
slbNewAcclCfgCacheUrlListAdminStatus = _SlbNewAcclCfgCacheUrlListAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 8, 1, 3),
    _SlbNewAcclCfgCacheUrlListAdminStatus_Type()
)
slbNewAcclCfgCacheUrlListAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheUrlListAdminStatus.setStatus("current")


class _SlbNewAcclCfgCacheUrlListDel_Type(Integer32):
    """Custom type slbNewAcclCfgCacheUrlListDel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewAcclCfgCacheUrlListDel_Type.__name__ = "Integer32"
_SlbNewAcclCfgCacheUrlListDel_Object = MibTableColumn
slbNewAcclCfgCacheUrlListDel = _SlbNewAcclCfgCacheUrlListDel_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 8, 1, 5),
    _SlbNewAcclCfgCacheUrlListDel_Type()
)
slbNewAcclCfgCacheUrlListDel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheUrlListDel.setStatus("current")
_SlbNewAcclCfgCacheUrlListCopy_Type = DisplayString
_SlbNewAcclCfgCacheUrlListCopy_Object = MibTableColumn
slbNewAcclCfgCacheUrlListCopy = _SlbNewAcclCfgCacheUrlListCopy_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 8, 1, 6),
    _SlbNewAcclCfgCacheUrlListCopy_Type()
)
slbNewAcclCfgCacheUrlListCopy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheUrlListCopy.setStatus("current")
_SlbCurAcclCfgCacheUrlRuleTable_Object = MibTable
slbCurAcclCfgCacheUrlRuleTable = _SlbCurAcclCfgCacheUrlRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 9)
)
if mibBuilder.loadTexts:
    slbCurAcclCfgCacheUrlRuleTable.setStatus("current")
_SlbCurAcclCfgCacheUrlRuleEntry_Object = MibTableRow
slbCurAcclCfgCacheUrlRuleEntry = _SlbCurAcclCfgCacheUrlRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 9, 1)
)
slbCurAcclCfgCacheUrlRuleEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurAcclCfgCacheUrlRuleListIdIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurAcclCfgCacheUrlRuleIndex"),
)
if mibBuilder.loadTexts:
    slbCurAcclCfgCacheUrlRuleEntry.setStatus("current")


class _SlbCurAcclCfgCacheUrlRuleListIdIndex_Type(DisplayString):
    """Custom type slbCurAcclCfgCacheUrlRuleListIdIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurAcclCfgCacheUrlRuleListIdIndex_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCacheUrlRuleListIdIndex_Object = MibTableColumn
slbCurAcclCfgCacheUrlRuleListIdIndex = _SlbCurAcclCfgCacheUrlRuleListIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 9, 1, 1),
    _SlbCurAcclCfgCacheUrlRuleListIdIndex_Type()
)
slbCurAcclCfgCacheUrlRuleListIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCacheUrlRuleListIdIndex.setStatus("current")
_SlbCurAcclCfgCacheUrlRuleIndex_Type = Integer32
_SlbCurAcclCfgCacheUrlRuleIndex_Object = MibTableColumn
slbCurAcclCfgCacheUrlRuleIndex = _SlbCurAcclCfgCacheUrlRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 9, 1, 2),
    _SlbCurAcclCfgCacheUrlRuleIndex_Type()
)
slbCurAcclCfgCacheUrlRuleIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCacheUrlRuleIndex.setStatus("current")


class _SlbCurAcclCfgCacheUrlRuleName_Type(DisplayString):
    """Custom type slbCurAcclCfgCacheUrlRuleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurAcclCfgCacheUrlRuleName_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCacheUrlRuleName_Object = MibTableColumn
slbCurAcclCfgCacheUrlRuleName = _SlbCurAcclCfgCacheUrlRuleName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 9, 1, 3),
    _SlbCurAcclCfgCacheUrlRuleName_Type()
)
slbCurAcclCfgCacheUrlRuleName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCacheUrlRuleName.setStatus("current")


class _SlbCurAcclCfgCacheUrlRuleDomainM_Type(Integer32):
    """Custom type slbCurAcclCfgCacheUrlRuleDomainM based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("any", 1),
          ("regex", 3),
          ("text", 2))
    )


_SlbCurAcclCfgCacheUrlRuleDomainM_Type.__name__ = "Integer32"
_SlbCurAcclCfgCacheUrlRuleDomainM_Object = MibTableColumn
slbCurAcclCfgCacheUrlRuleDomainM = _SlbCurAcclCfgCacheUrlRuleDomainM_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 9, 1, 4),
    _SlbCurAcclCfgCacheUrlRuleDomainM_Type()
)
slbCurAcclCfgCacheUrlRuleDomainM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCacheUrlRuleDomainM.setStatus("current")


class _SlbCurAcclCfgCacheUrlRuleDomain_Type(DisplayString):
    """Custom type slbCurAcclCfgCacheUrlRuleDomain based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SlbCurAcclCfgCacheUrlRuleDomain_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCacheUrlRuleDomain_Object = MibTableColumn
slbCurAcclCfgCacheUrlRuleDomain = _SlbCurAcclCfgCacheUrlRuleDomain_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 9, 1, 5),
    _SlbCurAcclCfgCacheUrlRuleDomain_Type()
)
slbCurAcclCfgCacheUrlRuleDomain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCacheUrlRuleDomain.setStatus("current")


class _SlbCurAcclCfgCacheUrlRuleURLm_Type(Integer32):
    """Custom type slbCurAcclCfgCacheUrlRuleURLm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("any", 1),
          ("regex", 3),
          ("text", 2))
    )


_SlbCurAcclCfgCacheUrlRuleURLm_Type.__name__ = "Integer32"
_SlbCurAcclCfgCacheUrlRuleURLm_Object = MibTableColumn
slbCurAcclCfgCacheUrlRuleURLm = _SlbCurAcclCfgCacheUrlRuleURLm_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 9, 1, 6),
    _SlbCurAcclCfgCacheUrlRuleURLm_Type()
)
slbCurAcclCfgCacheUrlRuleURLm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCacheUrlRuleURLm.setStatus("current")
_SlbCurAcclCfgCacheUrlRuleURL_Type = DisplayString
_SlbCurAcclCfgCacheUrlRuleURL_Object = MibTableColumn
slbCurAcclCfgCacheUrlRuleURL = _SlbCurAcclCfgCacheUrlRuleURL_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 9, 1, 7),
    _SlbCurAcclCfgCacheUrlRuleURL_Type()
)
slbCurAcclCfgCacheUrlRuleURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCacheUrlRuleURL.setStatus("current")
_SlbCurAcclCfgCacheUrlRuleExpire_Type = Integer32
_SlbCurAcclCfgCacheUrlRuleExpire_Object = MibTableColumn
slbCurAcclCfgCacheUrlRuleExpire = _SlbCurAcclCfgCacheUrlRuleExpire_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 9, 1, 8),
    _SlbCurAcclCfgCacheUrlRuleExpire_Type()
)
slbCurAcclCfgCacheUrlRuleExpire.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCacheUrlRuleExpire.setStatus("current")


class _SlbCurAcclCfgCacheUrlRuleCache_Type(Integer32):
    """Custom type slbCurAcclCfgCacheUrlRuleCache based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurAcclCfgCacheUrlRuleCache_Type.__name__ = "Integer32"
_SlbCurAcclCfgCacheUrlRuleCache_Object = MibTableColumn
slbCurAcclCfgCacheUrlRuleCache = _SlbCurAcclCfgCacheUrlRuleCache_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 9, 1, 9),
    _SlbCurAcclCfgCacheUrlRuleCache_Type()
)
slbCurAcclCfgCacheUrlRuleCache.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCacheUrlRuleCache.setStatus("current")


class _SlbCurAcclCfgCacheUrlRuleAdminStatus_Type(Integer32):
    """Custom type slbCurAcclCfgCacheUrlRuleAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurAcclCfgCacheUrlRuleAdminStatus_Type.__name__ = "Integer32"
_SlbCurAcclCfgCacheUrlRuleAdminStatus_Object = MibTableColumn
slbCurAcclCfgCacheUrlRuleAdminStatus = _SlbCurAcclCfgCacheUrlRuleAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 9, 1, 10),
    _SlbCurAcclCfgCacheUrlRuleAdminStatus_Type()
)
slbCurAcclCfgCacheUrlRuleAdminStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCacheUrlRuleAdminStatus.setStatus("current")
_SlbNewAcclCfgCacheUrlRuleTable_Object = MibTable
slbNewAcclCfgCacheUrlRuleTable = _SlbNewAcclCfgCacheUrlRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 10)
)
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheUrlRuleTable.setStatus("current")
_SlbNewAcclCfgCacheUrlRuleEntry_Object = MibTableRow
slbNewAcclCfgCacheUrlRuleEntry = _SlbNewAcclCfgCacheUrlRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 10, 1)
)
slbNewAcclCfgCacheUrlRuleEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewAcclCfgCacheUrlRuleListIdIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewAcclCfgCacheUrlRuleIndex"),
)
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheUrlRuleEntry.setStatus("current")


class _SlbNewAcclCfgCacheUrlRuleListIdIndex_Type(DisplayString):
    """Custom type slbNewAcclCfgCacheUrlRuleListIdIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewAcclCfgCacheUrlRuleListIdIndex_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCacheUrlRuleListIdIndex_Object = MibTableColumn
slbNewAcclCfgCacheUrlRuleListIdIndex = _SlbNewAcclCfgCacheUrlRuleListIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 10, 1, 1),
    _SlbNewAcclCfgCacheUrlRuleListIdIndex_Type()
)
slbNewAcclCfgCacheUrlRuleListIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheUrlRuleListIdIndex.setStatus("current")
_SlbNewAcclCfgCacheUrlRuleIndex_Type = Integer32
_SlbNewAcclCfgCacheUrlRuleIndex_Object = MibTableColumn
slbNewAcclCfgCacheUrlRuleIndex = _SlbNewAcclCfgCacheUrlRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 10, 1, 2),
    _SlbNewAcclCfgCacheUrlRuleIndex_Type()
)
slbNewAcclCfgCacheUrlRuleIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheUrlRuleIndex.setStatus("current")


class _SlbNewAcclCfgCacheUrlRuleName_Type(DisplayString):
    """Custom type slbNewAcclCfgCacheUrlRuleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewAcclCfgCacheUrlRuleName_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCacheUrlRuleName_Object = MibTableColumn
slbNewAcclCfgCacheUrlRuleName = _SlbNewAcclCfgCacheUrlRuleName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 10, 1, 3),
    _SlbNewAcclCfgCacheUrlRuleName_Type()
)
slbNewAcclCfgCacheUrlRuleName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheUrlRuleName.setStatus("current")


class _SlbNewAcclCfgCacheUrlRuleDomainM_Type(Integer32):
    """Custom type slbNewAcclCfgCacheUrlRuleDomainM based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("any", 1),
          ("regex", 3),
          ("text", 2))
    )


_SlbNewAcclCfgCacheUrlRuleDomainM_Type.__name__ = "Integer32"
_SlbNewAcclCfgCacheUrlRuleDomainM_Object = MibTableColumn
slbNewAcclCfgCacheUrlRuleDomainM = _SlbNewAcclCfgCacheUrlRuleDomainM_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 10, 1, 4),
    _SlbNewAcclCfgCacheUrlRuleDomainM_Type()
)
slbNewAcclCfgCacheUrlRuleDomainM.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheUrlRuleDomainM.setStatus("current")


class _SlbNewAcclCfgCacheUrlRuleDomain_Type(DisplayString):
    """Custom type slbNewAcclCfgCacheUrlRuleDomain based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SlbNewAcclCfgCacheUrlRuleDomain_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCacheUrlRuleDomain_Object = MibTableColumn
slbNewAcclCfgCacheUrlRuleDomain = _SlbNewAcclCfgCacheUrlRuleDomain_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 10, 1, 5),
    _SlbNewAcclCfgCacheUrlRuleDomain_Type()
)
slbNewAcclCfgCacheUrlRuleDomain.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheUrlRuleDomain.setStatus("current")


class _SlbNewAcclCfgCacheUrlRuleURLm_Type(Integer32):
    """Custom type slbNewAcclCfgCacheUrlRuleURLm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("any", 1),
          ("regex", 3),
          ("text", 2))
    )


_SlbNewAcclCfgCacheUrlRuleURLm_Type.__name__ = "Integer32"
_SlbNewAcclCfgCacheUrlRuleURLm_Object = MibTableColumn
slbNewAcclCfgCacheUrlRuleURLm = _SlbNewAcclCfgCacheUrlRuleURLm_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 10, 1, 6),
    _SlbNewAcclCfgCacheUrlRuleURLm_Type()
)
slbNewAcclCfgCacheUrlRuleURLm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheUrlRuleURLm.setStatus("current")
_SlbNewAcclCfgCacheUrlRuleURL_Type = DisplayString
_SlbNewAcclCfgCacheUrlRuleURL_Object = MibTableColumn
slbNewAcclCfgCacheUrlRuleURL = _SlbNewAcclCfgCacheUrlRuleURL_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 10, 1, 7),
    _SlbNewAcclCfgCacheUrlRuleURL_Type()
)
slbNewAcclCfgCacheUrlRuleURL.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheUrlRuleURL.setStatus("current")
_SlbNewAcclCfgCacheUrlRuleExpire_Type = Integer32
_SlbNewAcclCfgCacheUrlRuleExpire_Object = MibTableColumn
slbNewAcclCfgCacheUrlRuleExpire = _SlbNewAcclCfgCacheUrlRuleExpire_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 10, 1, 8),
    _SlbNewAcclCfgCacheUrlRuleExpire_Type()
)
slbNewAcclCfgCacheUrlRuleExpire.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheUrlRuleExpire.setStatus("current")


class _SlbNewAcclCfgCacheUrlRuleCache_Type(Integer32):
    """Custom type slbNewAcclCfgCacheUrlRuleCache based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewAcclCfgCacheUrlRuleCache_Type.__name__ = "Integer32"
_SlbNewAcclCfgCacheUrlRuleCache_Object = MibTableColumn
slbNewAcclCfgCacheUrlRuleCache = _SlbNewAcclCfgCacheUrlRuleCache_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 10, 1, 9),
    _SlbNewAcclCfgCacheUrlRuleCache_Type()
)
slbNewAcclCfgCacheUrlRuleCache.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheUrlRuleCache.setStatus("current")


class _SlbNewAcclCfgCacheUrlRuleAdminStatus_Type(Integer32):
    """Custom type slbNewAcclCfgCacheUrlRuleAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewAcclCfgCacheUrlRuleAdminStatus_Type.__name__ = "Integer32"
_SlbNewAcclCfgCacheUrlRuleAdminStatus_Object = MibTableColumn
slbNewAcclCfgCacheUrlRuleAdminStatus = _SlbNewAcclCfgCacheUrlRuleAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 10, 1, 10),
    _SlbNewAcclCfgCacheUrlRuleAdminStatus_Type()
)
slbNewAcclCfgCacheUrlRuleAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheUrlRuleAdminStatus.setStatus("current")


class _SlbNewAcclCfgCacheUrlRuleDelete_Type(Integer32):
    """Custom type slbNewAcclCfgCacheUrlRuleDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewAcclCfgCacheUrlRuleDelete_Type.__name__ = "Integer32"
_SlbNewAcclCfgCacheUrlRuleDelete_Object = MibTableColumn
slbNewAcclCfgCacheUrlRuleDelete = _SlbNewAcclCfgCacheUrlRuleDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 10, 1, 11),
    _SlbNewAcclCfgCacheUrlRuleDelete_Type()
)
slbNewAcclCfgCacheUrlRuleDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheUrlRuleDelete.setStatus("current")
_SlbNewAcclCfgCacheUrlRuleCopy_Type = Integer32
_SlbNewAcclCfgCacheUrlRuleCopy_Object = MibTableColumn
slbNewAcclCfgCacheUrlRuleCopy = _SlbNewAcclCfgCacheUrlRuleCopy_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 1, 10, 1, 12),
    _SlbNewAcclCfgCacheUrlRuleCopy_Type()
)
slbNewAcclCfgCacheUrlRuleCopy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCacheUrlRuleCopy.setStatus("current")
_Compression_ObjectIdentity = ObjectIdentity
compression = _Compression_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2)
)


class _SlbCurAcclCfgCompOnOff_Type(Integer32):
    """Custom type slbCurAcclCfgCompOnOff based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 2),
          ("on", 1))
    )


_SlbCurAcclCfgCompOnOff_Type.__name__ = "Integer32"
_SlbCurAcclCfgCompOnOff_Object = MibScalar
slbCurAcclCfgCompOnOff = _SlbCurAcclCfgCompOnOff_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 1),
    _SlbCurAcclCfgCompOnOff_Type()
)
slbCurAcclCfgCompOnOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompOnOff.setStatus("current")


class _SlbNewAcclCfgCompOnOff_Type(Integer32):
    """Custom type slbNewAcclCfgCompOnOff based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 2),
          ("on", 1))
    )


_SlbNewAcclCfgCompOnOff_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompOnOff_Object = MibScalar
slbNewAcclCfgCompOnOff = _SlbNewAcclCfgCompOnOff_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 2),
    _SlbNewAcclCfgCompOnOff_Type()
)
slbNewAcclCfgCompOnOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompOnOff.setStatus("current")
_SlbCurAcclCfgCompPolTable_Object = MibTable
slbCurAcclCfgCompPolTable = _SlbCurAcclCfgCompPolTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 3)
)
if mibBuilder.loadTexts:
    slbCurAcclCfgCompPolTable.setStatus("current")
_SlbCurAcclCfgCompPolEntry_Object = MibTableRow
slbCurAcclCfgCompPolEntry = _SlbCurAcclCfgCompPolEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 3, 1)
)
slbCurAcclCfgCompPolEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurAcclCfgCompPolNameIdIndex"),
)
if mibBuilder.loadTexts:
    slbCurAcclCfgCompPolEntry.setStatus("current")


class _SlbCurAcclCfgCompPolNameIdIndex_Type(DisplayString):
    """Custom type slbCurAcclCfgCompPolNameIdIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurAcclCfgCompPolNameIdIndex_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCompPolNameIdIndex_Object = MibTableColumn
slbCurAcclCfgCompPolNameIdIndex = _SlbCurAcclCfgCompPolNameIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 3, 1, 1),
    _SlbCurAcclCfgCompPolNameIdIndex_Type()
)
slbCurAcclCfgCompPolNameIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompPolNameIdIndex.setStatus("current")


class _SlbCurAcclCfgCompPolName_Type(DisplayString):
    """Custom type slbCurAcclCfgCompPolName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurAcclCfgCompPolName_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCompPolName_Object = MibTableColumn
slbCurAcclCfgCompPolName = _SlbCurAcclCfgCompPolName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 3, 1, 2),
    _SlbCurAcclCfgCompPolName_Type()
)
slbCurAcclCfgCompPolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompPolName.setStatus("current")


class _SlbCurAcclCfgCompPolAlgrthm_Type(Integer32):
    """Custom type slbCurAcclCfgCompPolAlgrthm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("deflate", 2),
          ("gzip", 1))
    )


_SlbCurAcclCfgCompPolAlgrthm_Type.__name__ = "Integer32"
_SlbCurAcclCfgCompPolAlgrthm_Object = MibTableColumn
slbCurAcclCfgCompPolAlgrthm = _SlbCurAcclCfgCompPolAlgrthm_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 3, 1, 3),
    _SlbCurAcclCfgCompPolAlgrthm_Type()
)
slbCurAcclCfgCompPolAlgrthm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompPolAlgrthm.setStatus("current")


class _SlbCurAcclCfgCompPolComplv1_Type(Integer32):
    """Custom type slbCurAcclCfgCompPolComplv1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 9),
    )


_SlbCurAcclCfgCompPolComplv1_Type.__name__ = "Integer32"
_SlbCurAcclCfgCompPolComplv1_Object = MibTableColumn
slbCurAcclCfgCompPolComplv1 = _SlbCurAcclCfgCompPolComplv1_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 3, 1, 4),
    _SlbCurAcclCfgCompPolComplv1_Type()
)
slbCurAcclCfgCompPolComplv1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompPolComplv1.setStatus("current")


class _SlbCurAcclCfgCompPolMinSize_Type(Integer32):
    """Custom type slbCurAcclCfgCompPolMinSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SlbCurAcclCfgCompPolMinSize_Type.__name__ = "Integer32"
_SlbCurAcclCfgCompPolMinSize_Object = MibTableColumn
slbCurAcclCfgCompPolMinSize = _SlbCurAcclCfgCompPolMinSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 3, 1, 5),
    _SlbCurAcclCfgCompPolMinSize_Type()
)
slbCurAcclCfgCompPolMinSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompPolMinSize.setStatus("current")
_SlbCurAcclCfgCompPolMaxSize_Type = Integer32
_SlbCurAcclCfgCompPolMaxSize_Object = MibTableColumn
slbCurAcclCfgCompPolMaxSize = _SlbCurAcclCfgCompPolMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 3, 1, 6),
    _SlbCurAcclCfgCompPolMaxSize_Type()
)
slbCurAcclCfgCompPolMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompPolMaxSize.setStatus("current")


class _SlbCurAcclCfgCompPolURLList_Type(DisplayString):
    """Custom type slbCurAcclCfgCompPolURLList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurAcclCfgCompPolURLList_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCompPolURLList_Object = MibTableColumn
slbCurAcclCfgCompPolURLList = _SlbCurAcclCfgCompPolURLList_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 3, 1, 7),
    _SlbCurAcclCfgCompPolURLList_Type()
)
slbCurAcclCfgCompPolURLList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompPolURLList.setStatus("current")


class _SlbCurAcclCfgCompPolBrwsList_Type(DisplayString):
    """Custom type slbCurAcclCfgCompPolBrwsList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurAcclCfgCompPolBrwsList_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCompPolBrwsList_Object = MibTableColumn
slbCurAcclCfgCompPolBrwsList = _SlbCurAcclCfgCompPolBrwsList_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 3, 1, 8),
    _SlbCurAcclCfgCompPolBrwsList_Type()
)
slbCurAcclCfgCompPolBrwsList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompPolBrwsList.setStatus("current")


class _SlbCurAcclCfgCompPolPreDefBrwsRuleList_Type(Integer32):
    """Custom type slbCurAcclCfgCompPolPreDefBrwsRuleList based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurAcclCfgCompPolPreDefBrwsRuleList_Type.__name__ = "Integer32"
_SlbCurAcclCfgCompPolPreDefBrwsRuleList_Object = MibTableColumn
slbCurAcclCfgCompPolPreDefBrwsRuleList = _SlbCurAcclCfgCompPolPreDefBrwsRuleList_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 3, 1, 9),
    _SlbCurAcclCfgCompPolPreDefBrwsRuleList_Type()
)
slbCurAcclCfgCompPolPreDefBrwsRuleList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompPolPreDefBrwsRuleList.setStatus("current")


class _SlbCurAcclCfgCompPolCompsrv_Type(Integer32):
    """Custom type slbCurAcclCfgCompPolCompsrv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurAcclCfgCompPolCompsrv_Type.__name__ = "Integer32"
_SlbCurAcclCfgCompPolCompsrv_Object = MibTableColumn
slbCurAcclCfgCompPolCompsrv = _SlbCurAcclCfgCompPolCompsrv_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 3, 1, 10),
    _SlbCurAcclCfgCompPolCompsrv_Type()
)
slbCurAcclCfgCompPolCompsrv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompPolCompsrv.setStatus("current")


class _SlbCurAcclCfgCompPolAdminStatus_Type(Integer32):
    """Custom type slbCurAcclCfgCompPolAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurAcclCfgCompPolAdminStatus_Type.__name__ = "Integer32"
_SlbCurAcclCfgCompPolAdminStatus_Object = MibTableColumn
slbCurAcclCfgCompPolAdminStatus = _SlbCurAcclCfgCompPolAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 3, 1, 11),
    _SlbCurAcclCfgCompPolAdminStatus_Type()
)
slbCurAcclCfgCompPolAdminStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompPolAdminStatus.setStatus("current")
_SlbNewAcclCfgCompPolTable_Object = MibTable
slbNewAcclCfgCompPolTable = _SlbNewAcclCfgCompPolTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 4)
)
if mibBuilder.loadTexts:
    slbNewAcclCfgCompPolTable.setStatus("current")
_SlbNewAcclCfgCompPolEntry_Object = MibTableRow
slbNewAcclCfgCompPolEntry = _SlbNewAcclCfgCompPolEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 4, 1)
)
slbNewAcclCfgCompPolEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewAcclCfgCompPolNameIdIndex"),
)
if mibBuilder.loadTexts:
    slbNewAcclCfgCompPolEntry.setStatus("current")


class _SlbNewAcclCfgCompPolNameIdIndex_Type(DisplayString):
    """Custom type slbNewAcclCfgCompPolNameIdIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewAcclCfgCompPolNameIdIndex_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCompPolNameIdIndex_Object = MibTableColumn
slbNewAcclCfgCompPolNameIdIndex = _SlbNewAcclCfgCompPolNameIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 4, 1, 1),
    _SlbNewAcclCfgCompPolNameIdIndex_Type()
)
slbNewAcclCfgCompPolNameIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompPolNameIdIndex.setStatus("current")


class _SlbNewAcclCfgCompPolName_Type(DisplayString):
    """Custom type slbNewAcclCfgCompPolName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewAcclCfgCompPolName_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCompPolName_Object = MibTableColumn
slbNewAcclCfgCompPolName = _SlbNewAcclCfgCompPolName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 4, 1, 2),
    _SlbNewAcclCfgCompPolName_Type()
)
slbNewAcclCfgCompPolName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompPolName.setStatus("current")


class _SlbNewAcclCfgCompPolAlgrthm_Type(Integer32):
    """Custom type slbNewAcclCfgCompPolAlgrthm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("deflate", 2),
          ("gzip", 1))
    )


_SlbNewAcclCfgCompPolAlgrthm_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompPolAlgrthm_Object = MibTableColumn
slbNewAcclCfgCompPolAlgrthm = _SlbNewAcclCfgCompPolAlgrthm_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 4, 1, 3),
    _SlbNewAcclCfgCompPolAlgrthm_Type()
)
slbNewAcclCfgCompPolAlgrthm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompPolAlgrthm.setStatus("current")


class _SlbNewAcclCfgCompPolComplv1_Type(Integer32):
    """Custom type slbNewAcclCfgCompPolComplv1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 9),
    )


_SlbNewAcclCfgCompPolComplv1_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompPolComplv1_Object = MibTableColumn
slbNewAcclCfgCompPolComplv1 = _SlbNewAcclCfgCompPolComplv1_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 4, 1, 4),
    _SlbNewAcclCfgCompPolComplv1_Type()
)
slbNewAcclCfgCompPolComplv1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompPolComplv1.setStatus("current")


class _SlbNewAcclCfgCompPolMinSize_Type(Integer32):
    """Custom type slbNewAcclCfgCompPolMinSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SlbNewAcclCfgCompPolMinSize_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompPolMinSize_Object = MibTableColumn
slbNewAcclCfgCompPolMinSize = _SlbNewAcclCfgCompPolMinSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 4, 1, 5),
    _SlbNewAcclCfgCompPolMinSize_Type()
)
slbNewAcclCfgCompPolMinSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompPolMinSize.setStatus("current")
_SlbNewAcclCfgCompPolMaxSize_Type = Integer32
_SlbNewAcclCfgCompPolMaxSize_Object = MibTableColumn
slbNewAcclCfgCompPolMaxSize = _SlbNewAcclCfgCompPolMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 4, 1, 6),
    _SlbNewAcclCfgCompPolMaxSize_Type()
)
slbNewAcclCfgCompPolMaxSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompPolMaxSize.setStatus("current")


class _SlbNewAcclCfgCompPolURLList_Type(DisplayString):
    """Custom type slbNewAcclCfgCompPolURLList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewAcclCfgCompPolURLList_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCompPolURLList_Object = MibTableColumn
slbNewAcclCfgCompPolURLList = _SlbNewAcclCfgCompPolURLList_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 4, 1, 7),
    _SlbNewAcclCfgCompPolURLList_Type()
)
slbNewAcclCfgCompPolURLList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompPolURLList.setStatus("current")


class _SlbNewAcclCfgCompPolBrwsList_Type(DisplayString):
    """Custom type slbNewAcclCfgCompPolBrwsList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewAcclCfgCompPolBrwsList_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCompPolBrwsList_Object = MibTableColumn
slbNewAcclCfgCompPolBrwsList = _SlbNewAcclCfgCompPolBrwsList_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 4, 1, 8),
    _SlbNewAcclCfgCompPolBrwsList_Type()
)
slbNewAcclCfgCompPolBrwsList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompPolBrwsList.setStatus("current")


class _SlbNewAcclCfgCompPolPreDefBrwsRuleList_Type(Integer32):
    """Custom type slbNewAcclCfgCompPolPreDefBrwsRuleList based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewAcclCfgCompPolPreDefBrwsRuleList_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompPolPreDefBrwsRuleList_Object = MibTableColumn
slbNewAcclCfgCompPolPreDefBrwsRuleList = _SlbNewAcclCfgCompPolPreDefBrwsRuleList_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 4, 1, 9),
    _SlbNewAcclCfgCompPolPreDefBrwsRuleList_Type()
)
slbNewAcclCfgCompPolPreDefBrwsRuleList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompPolPreDefBrwsRuleList.setStatus("current")


class _SlbNewAcclCfgCompPolCompsrv_Type(Integer32):
    """Custom type slbNewAcclCfgCompPolCompsrv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewAcclCfgCompPolCompsrv_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompPolCompsrv_Object = MibTableColumn
slbNewAcclCfgCompPolCompsrv = _SlbNewAcclCfgCompPolCompsrv_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 4, 1, 10),
    _SlbNewAcclCfgCompPolCompsrv_Type()
)
slbNewAcclCfgCompPolCompsrv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompPolCompsrv.setStatus("current")


class _SlbNewAcclCfgCompPolAdminStatus_Type(Integer32):
    """Custom type slbNewAcclCfgCompPolAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewAcclCfgCompPolAdminStatus_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompPolAdminStatus_Object = MibTableColumn
slbNewAcclCfgCompPolAdminStatus = _SlbNewAcclCfgCompPolAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 4, 1, 11),
    _SlbNewAcclCfgCompPolAdminStatus_Type()
)
slbNewAcclCfgCompPolAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompPolAdminStatus.setStatus("current")


class _SlbNewAcclCfgCompPolDelete_Type(Integer32):
    """Custom type slbNewAcclCfgCompPolDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewAcclCfgCompPolDelete_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompPolDelete_Object = MibTableColumn
slbNewAcclCfgCompPolDelete = _SlbNewAcclCfgCompPolDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 4, 1, 12),
    _SlbNewAcclCfgCompPolDelete_Type()
)
slbNewAcclCfgCompPolDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompPolDelete.setStatus("current")
_SlbCurAcclCfgCompUrlListTable_Object = MibTable
slbCurAcclCfgCompUrlListTable = _SlbCurAcclCfgCompUrlListTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 5)
)
if mibBuilder.loadTexts:
    slbCurAcclCfgCompUrlListTable.setStatus("current")
_SlbCurAcclCfgCompUrlListEntry_Object = MibTableRow
slbCurAcclCfgCompUrlListEntry = _SlbCurAcclCfgCompUrlListEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 5, 1)
)
slbCurAcclCfgCompUrlListEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurAcclCfgCompUrlListIdIndex"),
)
if mibBuilder.loadTexts:
    slbCurAcclCfgCompUrlListEntry.setStatus("current")


class _SlbCurAcclCfgCompUrlListIdIndex_Type(DisplayString):
    """Custom type slbCurAcclCfgCompUrlListIdIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurAcclCfgCompUrlListIdIndex_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCompUrlListIdIndex_Object = MibTableColumn
slbCurAcclCfgCompUrlListIdIndex = _SlbCurAcclCfgCompUrlListIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 5, 1, 1),
    _SlbCurAcclCfgCompUrlListIdIndex_Type()
)
slbCurAcclCfgCompUrlListIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompUrlListIdIndex.setStatus("current")


class _SlbCurAcclCfgCompUrlListName_Type(DisplayString):
    """Custom type slbCurAcclCfgCompUrlListName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurAcclCfgCompUrlListName_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCompUrlListName_Object = MibTableColumn
slbCurAcclCfgCompUrlListName = _SlbCurAcclCfgCompUrlListName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 5, 1, 2),
    _SlbCurAcclCfgCompUrlListName_Type()
)
slbCurAcclCfgCompUrlListName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompUrlListName.setStatus("current")


class _SlbCurAcclCfgCompUrlListAdminStatus_Type(Integer32):
    """Custom type slbCurAcclCfgCompUrlListAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurAcclCfgCompUrlListAdminStatus_Type.__name__ = "Integer32"
_SlbCurAcclCfgCompUrlListAdminStatus_Object = MibTableColumn
slbCurAcclCfgCompUrlListAdminStatus = _SlbCurAcclCfgCompUrlListAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 5, 1, 3),
    _SlbCurAcclCfgCompUrlListAdminStatus_Type()
)
slbCurAcclCfgCompUrlListAdminStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompUrlListAdminStatus.setStatus("current")
_SlbNewAcclCfgCompUrlListTable_Object = MibTable
slbNewAcclCfgCompUrlListTable = _SlbNewAcclCfgCompUrlListTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 6)
)
if mibBuilder.loadTexts:
    slbNewAcclCfgCompUrlListTable.setStatus("current")
_SlbNewAcclCfgCompUrlListEntry_Object = MibTableRow
slbNewAcclCfgCompUrlListEntry = _SlbNewAcclCfgCompUrlListEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 6, 1)
)
slbNewAcclCfgCompUrlListEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewAcclCfgCompUrlListIdIndex"),
)
if mibBuilder.loadTexts:
    slbNewAcclCfgCompUrlListEntry.setStatus("current")


class _SlbNewAcclCfgCompUrlListIdIndex_Type(DisplayString):
    """Custom type slbNewAcclCfgCompUrlListIdIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewAcclCfgCompUrlListIdIndex_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCompUrlListIdIndex_Object = MibTableColumn
slbNewAcclCfgCompUrlListIdIndex = _SlbNewAcclCfgCompUrlListIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 6, 1, 1),
    _SlbNewAcclCfgCompUrlListIdIndex_Type()
)
slbNewAcclCfgCompUrlListIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompUrlListIdIndex.setStatus("current")


class _SlbNewAcclCfgCompUrlListName_Type(DisplayString):
    """Custom type slbNewAcclCfgCompUrlListName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewAcclCfgCompUrlListName_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCompUrlListName_Object = MibTableColumn
slbNewAcclCfgCompUrlListName = _SlbNewAcclCfgCompUrlListName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 6, 1, 2),
    _SlbNewAcclCfgCompUrlListName_Type()
)
slbNewAcclCfgCompUrlListName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompUrlListName.setStatus("current")


class _SlbNewAcclCfgCompUrlListAdminStatus_Type(Integer32):
    """Custom type slbNewAcclCfgCompUrlListAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewAcclCfgCompUrlListAdminStatus_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompUrlListAdminStatus_Object = MibTableColumn
slbNewAcclCfgCompUrlListAdminStatus = _SlbNewAcclCfgCompUrlListAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 6, 1, 3),
    _SlbNewAcclCfgCompUrlListAdminStatus_Type()
)
slbNewAcclCfgCompUrlListAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompUrlListAdminStatus.setStatus("current")


class _SlbNewAcclCfgCompUrlListDel_Type(Integer32):
    """Custom type slbNewAcclCfgCompUrlListDel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewAcclCfgCompUrlListDel_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompUrlListDel_Object = MibTableColumn
slbNewAcclCfgCompUrlListDel = _SlbNewAcclCfgCompUrlListDel_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 6, 1, 4),
    _SlbNewAcclCfgCompUrlListDel_Type()
)
slbNewAcclCfgCompUrlListDel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompUrlListDel.setStatus("current")
_SlbNewAcclCfgCompUrlListCopy_Type = DisplayString
_SlbNewAcclCfgCompUrlListCopy_Object = MibTableColumn
slbNewAcclCfgCompUrlListCopy = _SlbNewAcclCfgCompUrlListCopy_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 6, 1, 5),
    _SlbNewAcclCfgCompUrlListCopy_Type()
)
slbNewAcclCfgCompUrlListCopy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompUrlListCopy.setStatus("current")
_SlbCurAcclCfgCompUrlRuleTable_Object = MibTable
slbCurAcclCfgCompUrlRuleTable = _SlbCurAcclCfgCompUrlRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 7)
)
if mibBuilder.loadTexts:
    slbCurAcclCfgCompUrlRuleTable.setStatus("current")
_SlbCurAcclCfgCompUrlRuleEntry_Object = MibTableRow
slbCurAcclCfgCompUrlRuleEntry = _SlbCurAcclCfgCompUrlRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 7, 1)
)
slbCurAcclCfgCompUrlRuleEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurAcclCfgCompUrlRuleListIdIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurAcclCfgCompUrlRuleIndex"),
)
if mibBuilder.loadTexts:
    slbCurAcclCfgCompUrlRuleEntry.setStatus("current")


class _SlbCurAcclCfgCompUrlRuleListIdIndex_Type(DisplayString):
    """Custom type slbCurAcclCfgCompUrlRuleListIdIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurAcclCfgCompUrlRuleListIdIndex_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCompUrlRuleListIdIndex_Object = MibTableColumn
slbCurAcclCfgCompUrlRuleListIdIndex = _SlbCurAcclCfgCompUrlRuleListIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 7, 1, 1),
    _SlbCurAcclCfgCompUrlRuleListIdIndex_Type()
)
slbCurAcclCfgCompUrlRuleListIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompUrlRuleListIdIndex.setStatus("current")
_SlbCurAcclCfgCompUrlRuleIndex_Type = Integer32
_SlbCurAcclCfgCompUrlRuleIndex_Object = MibTableColumn
slbCurAcclCfgCompUrlRuleIndex = _SlbCurAcclCfgCompUrlRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 7, 1, 2),
    _SlbCurAcclCfgCompUrlRuleIndex_Type()
)
slbCurAcclCfgCompUrlRuleIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompUrlRuleIndex.setStatus("current")


class _SlbCurAcclCfgCompUrlRuleName_Type(DisplayString):
    """Custom type slbCurAcclCfgCompUrlRuleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurAcclCfgCompUrlRuleName_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCompUrlRuleName_Object = MibTableColumn
slbCurAcclCfgCompUrlRuleName = _SlbCurAcclCfgCompUrlRuleName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 7, 1, 3),
    _SlbCurAcclCfgCompUrlRuleName_Type()
)
slbCurAcclCfgCompUrlRuleName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompUrlRuleName.setStatus("current")


class _SlbCurAcclCfgCompUrlRuleDomainM_Type(Integer32):
    """Custom type slbCurAcclCfgCompUrlRuleDomainM based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("any", 1),
          ("regex", 3),
          ("text", 2))
    )


_SlbCurAcclCfgCompUrlRuleDomainM_Type.__name__ = "Integer32"
_SlbCurAcclCfgCompUrlRuleDomainM_Object = MibTableColumn
slbCurAcclCfgCompUrlRuleDomainM = _SlbCurAcclCfgCompUrlRuleDomainM_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 7, 1, 4),
    _SlbCurAcclCfgCompUrlRuleDomainM_Type()
)
slbCurAcclCfgCompUrlRuleDomainM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompUrlRuleDomainM.setStatus("current")


class _SlbCurAcclCfgCompUrlRuleDomain_Type(DisplayString):
    """Custom type slbCurAcclCfgCompUrlRuleDomain based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SlbCurAcclCfgCompUrlRuleDomain_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCompUrlRuleDomain_Object = MibTableColumn
slbCurAcclCfgCompUrlRuleDomain = _SlbCurAcclCfgCompUrlRuleDomain_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 7, 1, 5),
    _SlbCurAcclCfgCompUrlRuleDomain_Type()
)
slbCurAcclCfgCompUrlRuleDomain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompUrlRuleDomain.setStatus("current")


class _SlbCurAcclCfgCompUrlRuleURLm_Type(Integer32):
    """Custom type slbCurAcclCfgCompUrlRuleURLm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("any", 1),
          ("regex", 3),
          ("text", 2))
    )


_SlbCurAcclCfgCompUrlRuleURLm_Type.__name__ = "Integer32"
_SlbCurAcclCfgCompUrlRuleURLm_Object = MibTableColumn
slbCurAcclCfgCompUrlRuleURLm = _SlbCurAcclCfgCompUrlRuleURLm_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 7, 1, 6),
    _SlbCurAcclCfgCompUrlRuleURLm_Type()
)
slbCurAcclCfgCompUrlRuleURLm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompUrlRuleURLm.setStatus("current")
_SlbCurAcclCfgCompUrlRuleURL_Type = DisplayString
_SlbCurAcclCfgCompUrlRuleURL_Object = MibTableColumn
slbCurAcclCfgCompUrlRuleURL = _SlbCurAcclCfgCompUrlRuleURL_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 7, 1, 7),
    _SlbCurAcclCfgCompUrlRuleURL_Type()
)
slbCurAcclCfgCompUrlRuleURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompUrlRuleURL.setStatus("current")


class _SlbCurAcclCfgCompUrlRuleCompress_Type(Integer32):
    """Custom type slbCurAcclCfgCompUrlRuleCompress based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurAcclCfgCompUrlRuleCompress_Type.__name__ = "Integer32"
_SlbCurAcclCfgCompUrlRuleCompress_Object = MibTableColumn
slbCurAcclCfgCompUrlRuleCompress = _SlbCurAcclCfgCompUrlRuleCompress_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 7, 1, 8),
    _SlbCurAcclCfgCompUrlRuleCompress_Type()
)
slbCurAcclCfgCompUrlRuleCompress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompUrlRuleCompress.setStatus("current")


class _SlbCurAcclCfgCompUrlRuleAdminStatus_Type(Integer32):
    """Custom type slbCurAcclCfgCompUrlRuleAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurAcclCfgCompUrlRuleAdminStatus_Type.__name__ = "Integer32"
_SlbCurAcclCfgCompUrlRuleAdminStatus_Object = MibTableColumn
slbCurAcclCfgCompUrlRuleAdminStatus = _SlbCurAcclCfgCompUrlRuleAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 7, 1, 9),
    _SlbCurAcclCfgCompUrlRuleAdminStatus_Type()
)
slbCurAcclCfgCompUrlRuleAdminStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompUrlRuleAdminStatus.setStatus("current")
_SlbNewAcclCfgCompUrlRuleTable_Object = MibTable
slbNewAcclCfgCompUrlRuleTable = _SlbNewAcclCfgCompUrlRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 8)
)
if mibBuilder.loadTexts:
    slbNewAcclCfgCompUrlRuleTable.setStatus("current")
_SlbNewAcclCfgCompUrlRuleEntry_Object = MibTableRow
slbNewAcclCfgCompUrlRuleEntry = _SlbNewAcclCfgCompUrlRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 8, 1)
)
slbNewAcclCfgCompUrlRuleEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewAcclCfgCompUrlRuleListIdIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewAcclCfgCompUrlRuleIndex"),
)
if mibBuilder.loadTexts:
    slbNewAcclCfgCompUrlRuleEntry.setStatus("current")


class _SlbNewAcclCfgCompUrlRuleListIdIndex_Type(DisplayString):
    """Custom type slbNewAcclCfgCompUrlRuleListIdIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewAcclCfgCompUrlRuleListIdIndex_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCompUrlRuleListIdIndex_Object = MibTableColumn
slbNewAcclCfgCompUrlRuleListIdIndex = _SlbNewAcclCfgCompUrlRuleListIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 8, 1, 1),
    _SlbNewAcclCfgCompUrlRuleListIdIndex_Type()
)
slbNewAcclCfgCompUrlRuleListIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompUrlRuleListIdIndex.setStatus("current")
_SlbNewAcclCfgCompUrlRuleIndex_Type = Integer32
_SlbNewAcclCfgCompUrlRuleIndex_Object = MibTableColumn
slbNewAcclCfgCompUrlRuleIndex = _SlbNewAcclCfgCompUrlRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 8, 1, 2),
    _SlbNewAcclCfgCompUrlRuleIndex_Type()
)
slbNewAcclCfgCompUrlRuleIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompUrlRuleIndex.setStatus("current")


class _SlbNewAcclCfgCompUrlRuleName_Type(DisplayString):
    """Custom type slbNewAcclCfgCompUrlRuleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewAcclCfgCompUrlRuleName_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCompUrlRuleName_Object = MibTableColumn
slbNewAcclCfgCompUrlRuleName = _SlbNewAcclCfgCompUrlRuleName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 8, 1, 3),
    _SlbNewAcclCfgCompUrlRuleName_Type()
)
slbNewAcclCfgCompUrlRuleName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompUrlRuleName.setStatus("current")


class _SlbNewAcclCfgCompUrlRuleDomainM_Type(Integer32):
    """Custom type slbNewAcclCfgCompUrlRuleDomainM based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("any", 1),
          ("regex", 3),
          ("text", 2))
    )


_SlbNewAcclCfgCompUrlRuleDomainM_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompUrlRuleDomainM_Object = MibTableColumn
slbNewAcclCfgCompUrlRuleDomainM = _SlbNewAcclCfgCompUrlRuleDomainM_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 8, 1, 4),
    _SlbNewAcclCfgCompUrlRuleDomainM_Type()
)
slbNewAcclCfgCompUrlRuleDomainM.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompUrlRuleDomainM.setStatus("current")


class _SlbNewAcclCfgCompUrlRuleDomain_Type(DisplayString):
    """Custom type slbNewAcclCfgCompUrlRuleDomain based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SlbNewAcclCfgCompUrlRuleDomain_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCompUrlRuleDomain_Object = MibTableColumn
slbNewAcclCfgCompUrlRuleDomain = _SlbNewAcclCfgCompUrlRuleDomain_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 8, 1, 5),
    _SlbNewAcclCfgCompUrlRuleDomain_Type()
)
slbNewAcclCfgCompUrlRuleDomain.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompUrlRuleDomain.setStatus("current")


class _SlbNewAcclCfgCompUrlRuleURLm_Type(Integer32):
    """Custom type slbNewAcclCfgCompUrlRuleURLm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("any", 1),
          ("regex", 3),
          ("text", 2))
    )


_SlbNewAcclCfgCompUrlRuleURLm_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompUrlRuleURLm_Object = MibTableColumn
slbNewAcclCfgCompUrlRuleURLm = _SlbNewAcclCfgCompUrlRuleURLm_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 8, 1, 6),
    _SlbNewAcclCfgCompUrlRuleURLm_Type()
)
slbNewAcclCfgCompUrlRuleURLm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompUrlRuleURLm.setStatus("current")
_SlbNewAcclCfgCompUrlRuleURL_Type = DisplayString
_SlbNewAcclCfgCompUrlRuleURL_Object = MibTableColumn
slbNewAcclCfgCompUrlRuleURL = _SlbNewAcclCfgCompUrlRuleURL_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 8, 1, 7),
    _SlbNewAcclCfgCompUrlRuleURL_Type()
)
slbNewAcclCfgCompUrlRuleURL.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompUrlRuleURL.setStatus("current")


class _SlbNewAcclCfgCompUrlRuleCompress_Type(Integer32):
    """Custom type slbNewAcclCfgCompUrlRuleCompress based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewAcclCfgCompUrlRuleCompress_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompUrlRuleCompress_Object = MibTableColumn
slbNewAcclCfgCompUrlRuleCompress = _SlbNewAcclCfgCompUrlRuleCompress_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 8, 1, 8),
    _SlbNewAcclCfgCompUrlRuleCompress_Type()
)
slbNewAcclCfgCompUrlRuleCompress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompUrlRuleCompress.setStatus("current")


class _SlbNewAcclCfgCompUrlRuleAdminStatus_Type(Integer32):
    """Custom type slbNewAcclCfgCompUrlRuleAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewAcclCfgCompUrlRuleAdminStatus_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompUrlRuleAdminStatus_Object = MibTableColumn
slbNewAcclCfgCompUrlRuleAdminStatus = _SlbNewAcclCfgCompUrlRuleAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 8, 1, 9),
    _SlbNewAcclCfgCompUrlRuleAdminStatus_Type()
)
slbNewAcclCfgCompUrlRuleAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompUrlRuleAdminStatus.setStatus("current")


class _SlbNewAcclCfgCompUrlRuleDelete_Type(Integer32):
    """Custom type slbNewAcclCfgCompUrlRuleDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewAcclCfgCompUrlRuleDelete_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompUrlRuleDelete_Object = MibTableColumn
slbNewAcclCfgCompUrlRuleDelete = _SlbNewAcclCfgCompUrlRuleDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 8, 1, 10),
    _SlbNewAcclCfgCompUrlRuleDelete_Type()
)
slbNewAcclCfgCompUrlRuleDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompUrlRuleDelete.setStatus("current")
_SlbNewAcclCfgCompUrlRuleCopy_Type = DisplayString
_SlbNewAcclCfgCompUrlRuleCopy_Object = MibTableColumn
slbNewAcclCfgCompUrlRuleCopy = _SlbNewAcclCfgCompUrlRuleCopy_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 8, 1, 11),
    _SlbNewAcclCfgCompUrlRuleCopy_Type()
)
slbNewAcclCfgCompUrlRuleCopy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompUrlRuleCopy.setStatus("current")
_SlbCurAcclCfgCompBrwsListTable_Object = MibTable
slbCurAcclCfgCompBrwsListTable = _SlbCurAcclCfgCompBrwsListTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 9)
)
if mibBuilder.loadTexts:
    slbCurAcclCfgCompBrwsListTable.setStatus("current")
_SlbCurAcclCfgCompBrwsListEntry_Object = MibTableRow
slbCurAcclCfgCompBrwsListEntry = _SlbCurAcclCfgCompBrwsListEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 9, 1)
)
slbCurAcclCfgCompBrwsListEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurAcclCfgCompBrwsListIdIndex"),
)
if mibBuilder.loadTexts:
    slbCurAcclCfgCompBrwsListEntry.setStatus("current")


class _SlbCurAcclCfgCompBrwsListIdIndex_Type(DisplayString):
    """Custom type slbCurAcclCfgCompBrwsListIdIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurAcclCfgCompBrwsListIdIndex_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCompBrwsListIdIndex_Object = MibTableColumn
slbCurAcclCfgCompBrwsListIdIndex = _SlbCurAcclCfgCompBrwsListIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 9, 1, 1),
    _SlbCurAcclCfgCompBrwsListIdIndex_Type()
)
slbCurAcclCfgCompBrwsListIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompBrwsListIdIndex.setStatus("current")


class _SlbCurAcclCfgCompBrwsListName_Type(DisplayString):
    """Custom type slbCurAcclCfgCompBrwsListName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurAcclCfgCompBrwsListName_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCompBrwsListName_Object = MibTableColumn
slbCurAcclCfgCompBrwsListName = _SlbCurAcclCfgCompBrwsListName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 9, 1, 2),
    _SlbCurAcclCfgCompBrwsListName_Type()
)
slbCurAcclCfgCompBrwsListName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompBrwsListName.setStatus("current")


class _SlbCurAcclCfgCompBrwsListAdminStatus_Type(Integer32):
    """Custom type slbCurAcclCfgCompBrwsListAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurAcclCfgCompBrwsListAdminStatus_Type.__name__ = "Integer32"
_SlbCurAcclCfgCompBrwsListAdminStatus_Object = MibTableColumn
slbCurAcclCfgCompBrwsListAdminStatus = _SlbCurAcclCfgCompBrwsListAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 9, 1, 3),
    _SlbCurAcclCfgCompBrwsListAdminStatus_Type()
)
slbCurAcclCfgCompBrwsListAdminStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompBrwsListAdminStatus.setStatus("current")
_SlbNewAcclCfgCompBrwsListTable_Object = MibTable
slbNewAcclCfgCompBrwsListTable = _SlbNewAcclCfgCompBrwsListTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 10)
)
if mibBuilder.loadTexts:
    slbNewAcclCfgCompBrwsListTable.setStatus("current")
_SlbNewAcclCfgCompBrwsListEntry_Object = MibTableRow
slbNewAcclCfgCompBrwsListEntry = _SlbNewAcclCfgCompBrwsListEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 10, 1)
)
slbNewAcclCfgCompBrwsListEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewAcclCfgCompBrwsListIdIndex"),
)
if mibBuilder.loadTexts:
    slbNewAcclCfgCompBrwsListEntry.setStatus("current")


class _SlbNewAcclCfgCompBrwsListIdIndex_Type(DisplayString):
    """Custom type slbNewAcclCfgCompBrwsListIdIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewAcclCfgCompBrwsListIdIndex_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCompBrwsListIdIndex_Object = MibTableColumn
slbNewAcclCfgCompBrwsListIdIndex = _SlbNewAcclCfgCompBrwsListIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 10, 1, 1),
    _SlbNewAcclCfgCompBrwsListIdIndex_Type()
)
slbNewAcclCfgCompBrwsListIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompBrwsListIdIndex.setStatus("current")


class _SlbNewAcclCfgCompBrwsListName_Type(DisplayString):
    """Custom type slbNewAcclCfgCompBrwsListName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewAcclCfgCompBrwsListName_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCompBrwsListName_Object = MibTableColumn
slbNewAcclCfgCompBrwsListName = _SlbNewAcclCfgCompBrwsListName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 10, 1, 2),
    _SlbNewAcclCfgCompBrwsListName_Type()
)
slbNewAcclCfgCompBrwsListName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompBrwsListName.setStatus("current")


class _SlbNewAcclCfgCompBrwsListAdminStatus_Type(Integer32):
    """Custom type slbNewAcclCfgCompBrwsListAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewAcclCfgCompBrwsListAdminStatus_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompBrwsListAdminStatus_Object = MibTableColumn
slbNewAcclCfgCompBrwsListAdminStatus = _SlbNewAcclCfgCompBrwsListAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 10, 1, 3),
    _SlbNewAcclCfgCompBrwsListAdminStatus_Type()
)
slbNewAcclCfgCompBrwsListAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompBrwsListAdminStatus.setStatus("current")


class _SlbNewAcclCfgCompBrwsListDel_Type(Integer32):
    """Custom type slbNewAcclCfgCompBrwsListDel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewAcclCfgCompBrwsListDel_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompBrwsListDel_Object = MibTableColumn
slbNewAcclCfgCompBrwsListDel = _SlbNewAcclCfgCompBrwsListDel_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 10, 1, 4),
    _SlbNewAcclCfgCompBrwsListDel_Type()
)
slbNewAcclCfgCompBrwsListDel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompBrwsListDel.setStatus("current")
_SlbNewAcclCfgCompBrwsListCopy_Type = DisplayString
_SlbNewAcclCfgCompBrwsListCopy_Object = MibTableColumn
slbNewAcclCfgCompBrwsListCopy = _SlbNewAcclCfgCompBrwsListCopy_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 10, 1, 5),
    _SlbNewAcclCfgCompBrwsListCopy_Type()
)
slbNewAcclCfgCompBrwsListCopy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompBrwsListCopy.setStatus("current")
_SlbCurAcclCfgCompBrwsRuleTable_Object = MibTable
slbCurAcclCfgCompBrwsRuleTable = _SlbCurAcclCfgCompBrwsRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 11)
)
if mibBuilder.loadTexts:
    slbCurAcclCfgCompBrwsRuleTable.setStatus("current")
_SlbCurAcclCfgCompBrwsRuleEntry_Object = MibTableRow
slbCurAcclCfgCompBrwsRuleEntry = _SlbCurAcclCfgCompBrwsRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 11, 1)
)
slbCurAcclCfgCompBrwsRuleEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurAcclCfgCompBrwsRuleListIdIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurAcclCfgCompBrwsRuleIndex"),
)
if mibBuilder.loadTexts:
    slbCurAcclCfgCompBrwsRuleEntry.setStatus("current")


class _SlbCurAcclCfgCompBrwsRuleListIdIndex_Type(DisplayString):
    """Custom type slbCurAcclCfgCompBrwsRuleListIdIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurAcclCfgCompBrwsRuleListIdIndex_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCompBrwsRuleListIdIndex_Object = MibTableColumn
slbCurAcclCfgCompBrwsRuleListIdIndex = _SlbCurAcclCfgCompBrwsRuleListIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 11, 1, 1),
    _SlbCurAcclCfgCompBrwsRuleListIdIndex_Type()
)
slbCurAcclCfgCompBrwsRuleListIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompBrwsRuleListIdIndex.setStatus("current")
_SlbCurAcclCfgCompBrwsRuleIndex_Type = Integer32
_SlbCurAcclCfgCompBrwsRuleIndex_Object = MibTableColumn
slbCurAcclCfgCompBrwsRuleIndex = _SlbCurAcclCfgCompBrwsRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 11, 1, 2),
    _SlbCurAcclCfgCompBrwsRuleIndex_Type()
)
slbCurAcclCfgCompBrwsRuleIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompBrwsRuleIndex.setStatus("current")


class _SlbCurAcclCfgCompBrwsRuleName_Type(DisplayString):
    """Custom type slbCurAcclCfgCompBrwsRuleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurAcclCfgCompBrwsRuleName_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCompBrwsRuleName_Object = MibTableColumn
slbCurAcclCfgCompBrwsRuleName = _SlbCurAcclCfgCompBrwsRuleName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 11, 1, 3),
    _SlbCurAcclCfgCompBrwsRuleName_Type()
)
slbCurAcclCfgCompBrwsRuleName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompBrwsRuleName.setStatus("current")


class _SlbCurAcclCfgCompBrwsRuleAgentM_Type(Integer32):
    """Custom type slbCurAcclCfgCompBrwsRuleAgentM based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("any", 1),
          ("regex", 3),
          ("text", 2))
    )


_SlbCurAcclCfgCompBrwsRuleAgentM_Type.__name__ = "Integer32"
_SlbCurAcclCfgCompBrwsRuleAgentM_Object = MibTableColumn
slbCurAcclCfgCompBrwsRuleAgentM = _SlbCurAcclCfgCompBrwsRuleAgentM_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 11, 1, 4),
    _SlbCurAcclCfgCompBrwsRuleAgentM_Type()
)
slbCurAcclCfgCompBrwsRuleAgentM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompBrwsRuleAgentM.setStatus("current")


class _SlbCurAcclCfgCompBrwsRuleAgent_Type(DisplayString):
    """Custom type slbCurAcclCfgCompBrwsRuleAgent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SlbCurAcclCfgCompBrwsRuleAgent_Type.__name__ = "DisplayString"
_SlbCurAcclCfgCompBrwsRuleAgent_Object = MibTableColumn
slbCurAcclCfgCompBrwsRuleAgent = _SlbCurAcclCfgCompBrwsRuleAgent_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 11, 1, 5),
    _SlbCurAcclCfgCompBrwsRuleAgent_Type()
)
slbCurAcclCfgCompBrwsRuleAgent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompBrwsRuleAgent.setStatus("current")


class _SlbCurAcclCfgCompBrwsRuleContentM_Type(Integer32):
    """Custom type slbCurAcclCfgCompBrwsRuleContentM based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("any", 1),
          ("regex", 3),
          ("text", 2))
    )


_SlbCurAcclCfgCompBrwsRuleContentM_Type.__name__ = "Integer32"
_SlbCurAcclCfgCompBrwsRuleContentM_Object = MibTableColumn
slbCurAcclCfgCompBrwsRuleContentM = _SlbCurAcclCfgCompBrwsRuleContentM_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 11, 1, 6),
    _SlbCurAcclCfgCompBrwsRuleContentM_Type()
)
slbCurAcclCfgCompBrwsRuleContentM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompBrwsRuleContentM.setStatus("current")
_SlbCurAcclCfgCompBrwsRuleContent_Type = DisplayString
_SlbCurAcclCfgCompBrwsRuleContent_Object = MibTableColumn
slbCurAcclCfgCompBrwsRuleContent = _SlbCurAcclCfgCompBrwsRuleContent_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 11, 1, 7),
    _SlbCurAcclCfgCompBrwsRuleContent_Type()
)
slbCurAcclCfgCompBrwsRuleContent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompBrwsRuleContent.setStatus("current")


class _SlbCurAcclCfgCompBrwsRuleCompress_Type(Integer32):
    """Custom type slbCurAcclCfgCompBrwsRuleCompress based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurAcclCfgCompBrwsRuleCompress_Type.__name__ = "Integer32"
_SlbCurAcclCfgCompBrwsRuleCompress_Object = MibTableColumn
slbCurAcclCfgCompBrwsRuleCompress = _SlbCurAcclCfgCompBrwsRuleCompress_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 11, 1, 8),
    _SlbCurAcclCfgCompBrwsRuleCompress_Type()
)
slbCurAcclCfgCompBrwsRuleCompress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompBrwsRuleCompress.setStatus("current")


class _SlbCurAcclCfgCompBrwsRuleAdminStatus_Type(Integer32):
    """Custom type slbCurAcclCfgCompBrwsRuleAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurAcclCfgCompBrwsRuleAdminStatus_Type.__name__ = "Integer32"
_SlbCurAcclCfgCompBrwsRuleAdminStatus_Object = MibTableColumn
slbCurAcclCfgCompBrwsRuleAdminStatus = _SlbCurAcclCfgCompBrwsRuleAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 11, 1, 9),
    _SlbCurAcclCfgCompBrwsRuleAdminStatus_Type()
)
slbCurAcclCfgCompBrwsRuleAdminStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurAcclCfgCompBrwsRuleAdminStatus.setStatus("current")
_SlbNewAcclCfgCompBrwsRuleTable_Object = MibTable
slbNewAcclCfgCompBrwsRuleTable = _SlbNewAcclCfgCompBrwsRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 12)
)
if mibBuilder.loadTexts:
    slbNewAcclCfgCompBrwsRuleTable.setStatus("current")
_SlbNewAcclCfgCompBrwsRuleEntry_Object = MibTableRow
slbNewAcclCfgCompBrwsRuleEntry = _SlbNewAcclCfgCompBrwsRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 12, 1)
)
slbNewAcclCfgCompBrwsRuleEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewAcclCfgCompBrwsRuleListIdIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewAcclCfgCompBrwsRuleIndex"),
)
if mibBuilder.loadTexts:
    slbNewAcclCfgCompBrwsRuleEntry.setStatus("current")


class _SlbNewAcclCfgCompBrwsRuleListIdIndex_Type(DisplayString):
    """Custom type slbNewAcclCfgCompBrwsRuleListIdIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewAcclCfgCompBrwsRuleListIdIndex_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCompBrwsRuleListIdIndex_Object = MibTableColumn
slbNewAcclCfgCompBrwsRuleListIdIndex = _SlbNewAcclCfgCompBrwsRuleListIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 12, 1, 1),
    _SlbNewAcclCfgCompBrwsRuleListIdIndex_Type()
)
slbNewAcclCfgCompBrwsRuleListIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompBrwsRuleListIdIndex.setStatus("current")
_SlbNewAcclCfgCompBrwsRuleIndex_Type = Integer32
_SlbNewAcclCfgCompBrwsRuleIndex_Object = MibTableColumn
slbNewAcclCfgCompBrwsRuleIndex = _SlbNewAcclCfgCompBrwsRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 12, 1, 2),
    _SlbNewAcclCfgCompBrwsRuleIndex_Type()
)
slbNewAcclCfgCompBrwsRuleIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompBrwsRuleIndex.setStatus("current")


class _SlbNewAcclCfgCompBrwsRuleName_Type(DisplayString):
    """Custom type slbNewAcclCfgCompBrwsRuleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewAcclCfgCompBrwsRuleName_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCompBrwsRuleName_Object = MibTableColumn
slbNewAcclCfgCompBrwsRuleName = _SlbNewAcclCfgCompBrwsRuleName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 12, 1, 3),
    _SlbNewAcclCfgCompBrwsRuleName_Type()
)
slbNewAcclCfgCompBrwsRuleName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompBrwsRuleName.setStatus("current")


class _SlbNewAcclCfgCompBrwsRuleAgentM_Type(Integer32):
    """Custom type slbNewAcclCfgCompBrwsRuleAgentM based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("any", 1),
          ("regex", 3),
          ("text", 2))
    )


_SlbNewAcclCfgCompBrwsRuleAgentM_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompBrwsRuleAgentM_Object = MibTableColumn
slbNewAcclCfgCompBrwsRuleAgentM = _SlbNewAcclCfgCompBrwsRuleAgentM_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 12, 1, 4),
    _SlbNewAcclCfgCompBrwsRuleAgentM_Type()
)
slbNewAcclCfgCompBrwsRuleAgentM.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompBrwsRuleAgentM.setStatus("current")


class _SlbNewAcclCfgCompBrwsRuleAgent_Type(DisplayString):
    """Custom type slbNewAcclCfgCompBrwsRuleAgent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SlbNewAcclCfgCompBrwsRuleAgent_Type.__name__ = "DisplayString"
_SlbNewAcclCfgCompBrwsRuleAgent_Object = MibTableColumn
slbNewAcclCfgCompBrwsRuleAgent = _SlbNewAcclCfgCompBrwsRuleAgent_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 12, 1, 5),
    _SlbNewAcclCfgCompBrwsRuleAgent_Type()
)
slbNewAcclCfgCompBrwsRuleAgent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompBrwsRuleAgent.setStatus("current")


class _SlbNewAcclCfgCompBrwsRuleContentM_Type(Integer32):
    """Custom type slbNewAcclCfgCompBrwsRuleContentM based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("any", 1),
          ("regex", 3),
          ("text", 2))
    )


_SlbNewAcclCfgCompBrwsRuleContentM_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompBrwsRuleContentM_Object = MibTableColumn
slbNewAcclCfgCompBrwsRuleContentM = _SlbNewAcclCfgCompBrwsRuleContentM_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 12, 1, 6),
    _SlbNewAcclCfgCompBrwsRuleContentM_Type()
)
slbNewAcclCfgCompBrwsRuleContentM.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompBrwsRuleContentM.setStatus("current")
_SlbNewAcclCfgCompBrwsRuleContent_Type = DisplayString
_SlbNewAcclCfgCompBrwsRuleContent_Object = MibTableColumn
slbNewAcclCfgCompBrwsRuleContent = _SlbNewAcclCfgCompBrwsRuleContent_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 12, 1, 7),
    _SlbNewAcclCfgCompBrwsRuleContent_Type()
)
slbNewAcclCfgCompBrwsRuleContent.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompBrwsRuleContent.setStatus("current")


class _SlbNewAcclCfgCompBrwsRuleCompress_Type(Integer32):
    """Custom type slbNewAcclCfgCompBrwsRuleCompress based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewAcclCfgCompBrwsRuleCompress_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompBrwsRuleCompress_Object = MibTableColumn
slbNewAcclCfgCompBrwsRuleCompress = _SlbNewAcclCfgCompBrwsRuleCompress_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 12, 1, 8),
    _SlbNewAcclCfgCompBrwsRuleCompress_Type()
)
slbNewAcclCfgCompBrwsRuleCompress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompBrwsRuleCompress.setStatus("current")


class _SlbNewAcclCfgCompBrwsRuleAdminStatus_Type(Integer32):
    """Custom type slbNewAcclCfgCompBrwsRuleAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewAcclCfgCompBrwsRuleAdminStatus_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompBrwsRuleAdminStatus_Object = MibTableColumn
slbNewAcclCfgCompBrwsRuleAdminStatus = _SlbNewAcclCfgCompBrwsRuleAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 12, 1, 9),
    _SlbNewAcclCfgCompBrwsRuleAdminStatus_Type()
)
slbNewAcclCfgCompBrwsRuleAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompBrwsRuleAdminStatus.setStatus("current")


class _SlbNewAcclCfgCompBrwsRuleDelete_Type(Integer32):
    """Custom type slbNewAcclCfgCompBrwsRuleDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewAcclCfgCompBrwsRuleDelete_Type.__name__ = "Integer32"
_SlbNewAcclCfgCompBrwsRuleDelete_Object = MibTableColumn
slbNewAcclCfgCompBrwsRuleDelete = _SlbNewAcclCfgCompBrwsRuleDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 12, 1, 10),
    _SlbNewAcclCfgCompBrwsRuleDelete_Type()
)
slbNewAcclCfgCompBrwsRuleDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompBrwsRuleDelete.setStatus("current")
_SlbNewAcclCfgCompBrwsRuleCopy_Type = Integer32
_SlbNewAcclCfgCompBrwsRuleCopy_Object = MibTableColumn
slbNewAcclCfgCompBrwsRuleCopy = _SlbNewAcclCfgCompBrwsRuleCopy_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 18, 2, 12, 1, 11),
    _SlbNewAcclCfgCompBrwsRuleCopy_Type()
)
slbNewAcclCfgCompBrwsRuleCopy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewAcclCfgCompBrwsRuleCopy.setStatus("current")
_SslCfg_ObjectIdentity = ObjectIdentity
sslCfg = _SslCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19)
)


class _SlbCurSslCfgSSLAdminStatus_Type(Integer32):
    """Custom type slbCurSslCfgSSLAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurSslCfgSSLAdminStatus_Type.__name__ = "Integer32"
_SlbCurSslCfgSSLAdminStatus_Object = MibScalar
slbCurSslCfgSSLAdminStatus = _SlbCurSslCfgSSLAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 1),
    _SlbCurSslCfgSSLAdminStatus_Type()
)
slbCurSslCfgSSLAdminStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgSSLAdminStatus.setStatus("current")


class _SlbNewSslCfgSSLAdminStatus_Type(Integer32):
    """Custom type slbNewSslCfgSSLAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgSSLAdminStatus_Type.__name__ = "Integer32"
_SlbNewSslCfgSSLAdminStatus_Object = MibScalar
slbNewSslCfgSSLAdminStatus = _SlbNewSslCfgSSLAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 2),
    _SlbNewSslCfgSSLAdminStatus_Type()
)
slbNewSslCfgSSLAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgSSLAdminStatus.setStatus("current")
_SslPol_ObjectIdentity = ObjectIdentity
sslPol = _SslPol_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3)
)
_SlbCurSslCfgSSLPolTable_Object = MibTable
slbCurSslCfgSSLPolTable = _SlbCurSslCfgSSLPolTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 5)
)
if mibBuilder.loadTexts:
    slbCurSslCfgSSLPolTable.setStatus("current")
_SlbCurSslCfgSSLPolEntry_Object = MibTableRow
slbCurSslCfgSSLPolEntry = _SlbCurSslCfgSSLPolEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 5, 1)
)
slbCurSslCfgSSLPolEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurSslCfgSSLPolNameIdIndex"),
)
if mibBuilder.loadTexts:
    slbCurSslCfgSSLPolEntry.setStatus("current")
_SlbCurSslCfgSSLPolNameIdIndex_Type = DisplayString
_SlbCurSslCfgSSLPolNameIdIndex_Object = MibTableColumn
slbCurSslCfgSSLPolNameIdIndex = _SlbCurSslCfgSSLPolNameIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 5, 1, 1),
    _SlbCurSslCfgSSLPolNameIdIndex_Type()
)
slbCurSslCfgSSLPolNameIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgSSLPolNameIdIndex.setStatus("current")
_SlbCurSslCfgSSLPolName_Type = DisplayString
_SlbCurSslCfgSSLPolName_Object = MibTableColumn
slbCurSslCfgSSLPolName = _SlbCurSslCfgSSLPolName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 5, 1, 2),
    _SlbCurSslCfgSSLPolName_Type()
)
slbCurSslCfgSSLPolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgSSLPolName.setStatus("current")
_SlbCurSslCfgSSLPolPassInfoCipherName_Type = DisplayString
_SlbCurSslCfgSSLPolPassInfoCipherName_Object = MibTableColumn
slbCurSslCfgSSLPolPassInfoCipherName = _SlbCurSslCfgSSLPolPassInfoCipherName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 5, 1, 3),
    _SlbCurSslCfgSSLPolPassInfoCipherName_Type()
)
slbCurSslCfgSSLPolPassInfoCipherName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgSSLPolPassInfoCipherName.setStatus("current")
_SlbCurSslCfgSSLPolPassInfoCipherFlag_Type = Integer32
_SlbCurSslCfgSSLPolPassInfoCipherFlag_Object = MibTableColumn
slbCurSslCfgSSLPolPassInfoCipherFlag = _SlbCurSslCfgSSLPolPassInfoCipherFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 5, 1, 4),
    _SlbCurSslCfgSSLPolPassInfoCipherFlag_Type()
)
slbCurSslCfgSSLPolPassInfoCipherFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgSSLPolPassInfoCipherFlag.setStatus("current")
_SlbCurSslCfgSSLPolPassInfoVersionName_Type = DisplayString
_SlbCurSslCfgSSLPolPassInfoVersionName_Object = MibTableColumn
slbCurSslCfgSSLPolPassInfoVersionName = _SlbCurSslCfgSSLPolPassInfoVersionName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 5, 1, 5),
    _SlbCurSslCfgSSLPolPassInfoVersionName_Type()
)
slbCurSslCfgSSLPolPassInfoVersionName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgSSLPolPassInfoVersionName.setStatus("current")
_SlbCurSslCfgSSLPolPassInfoVersionFlag_Type = Integer32
_SlbCurSslCfgSSLPolPassInfoVersionFlag_Object = MibTableColumn
slbCurSslCfgSSLPolPassInfoVersionFlag = _SlbCurSslCfgSSLPolPassInfoVersionFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 5, 1, 6),
    _SlbCurSslCfgSSLPolPassInfoVersionFlag_Type()
)
slbCurSslCfgSSLPolPassInfoVersionFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgSSLPolPassInfoVersionFlag.setStatus("current")
_SlbCurSslCfgSSLPolPassInfoHeadBitsName_Type = DisplayString
_SlbCurSslCfgSSLPolPassInfoHeadBitsName_Object = MibTableColumn
slbCurSslCfgSSLPolPassInfoHeadBitsName = _SlbCurSslCfgSSLPolPassInfoHeadBitsName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 5, 1, 7),
    _SlbCurSslCfgSSLPolPassInfoHeadBitsName_Type()
)
slbCurSslCfgSSLPolPassInfoHeadBitsName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgSSLPolPassInfoHeadBitsName.setStatus("current")
_SlbCurSslCfgSSLPolPassInfoHeadBitsFlag_Type = Integer32
_SlbCurSslCfgSSLPolPassInfoHeadBitsFlag_Object = MibTableColumn
slbCurSslCfgSSLPolPassInfoHeadBitsFlag = _SlbCurSslCfgSSLPolPassInfoHeadBitsFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 5, 1, 8),
    _SlbCurSslCfgSSLPolPassInfoHeadBitsFlag_Type()
)
slbCurSslCfgSSLPolPassInfoHeadBitsFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgSSLPolPassInfoHeadBitsFlag.setStatus("current")
_SlbCurSslCfgSSLPolPassInfoFrontend_Type = Integer32
_SlbCurSslCfgSSLPolPassInfoFrontend_Object = MibTableColumn
slbCurSslCfgSSLPolPassInfoFrontend = _SlbCurSslCfgSSLPolPassInfoFrontend_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 5, 1, 9),
    _SlbCurSslCfgSSLPolPassInfoFrontend_Type()
)
slbCurSslCfgSSLPolPassInfoFrontend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgSSLPolPassInfoFrontend.setStatus("current")
_SlbCurSslCfgSSLPolCipherName_Type = Integer32
_SlbCurSslCfgSSLPolCipherName_Object = MibTableColumn
slbCurSslCfgSSLPolCipherName = _SlbCurSslCfgSSLPolCipherName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 5, 1, 10),
    _SlbCurSslCfgSSLPolCipherName_Type()
)
slbCurSslCfgSSLPolCipherName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgSSLPolCipherName.setStatus("current")
_SlbCurSslCfgSSLPolCipherUserdef_Type = DisplayString
_SlbCurSslCfgSSLPolCipherUserdef_Object = MibTableColumn
slbCurSslCfgSSLPolCipherUserdef = _SlbCurSslCfgSSLPolCipherUserdef_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 5, 1, 11),
    _SlbCurSslCfgSSLPolCipherUserdef_Type()
)
slbCurSslCfgSSLPolCipherUserdef.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgSSLPolCipherUserdef.setStatus("current")
_SlbCurSslCfgSSLPolIntermcaChainName_Type = DisplayString
_SlbCurSslCfgSSLPolIntermcaChainName_Object = MibTableColumn
slbCurSslCfgSSLPolIntermcaChainName = _SlbCurSslCfgSSLPolIntermcaChainName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 5, 1, 12),
    _SlbCurSslCfgSSLPolIntermcaChainName_Type()
)
slbCurSslCfgSSLPolIntermcaChainName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgSSLPolIntermcaChainName.setStatus("current")
_SlbCurSslCfgSSLPolIntermcaChainType_Type = DisplayString
_SlbCurSslCfgSSLPolIntermcaChainType_Object = MibTableColumn
slbCurSslCfgSSLPolIntermcaChainType = _SlbCurSslCfgSSLPolIntermcaChainType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 5, 1, 13),
    _SlbCurSslCfgSSLPolIntermcaChainType_Type()
)
slbCurSslCfgSSLPolIntermcaChainType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgSSLPolIntermcaChainType.setStatus("current")


class _SlbCurSslCfgSSLPolBecipher_Type(Integer32):
    """Custom type slbCurSslCfgSSLPolBecipher based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("high", 2),
          ("low", 0),
          ("medium", 1))
    )


_SlbCurSslCfgSSLPolBecipher_Type.__name__ = "Integer32"
_SlbCurSslCfgSSLPolBecipher_Object = MibTableColumn
slbCurSslCfgSSLPolBecipher = _SlbCurSslCfgSSLPolBecipher_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 5, 1, 14),
    _SlbCurSslCfgSSLPolBecipher_Type()
)
slbCurSslCfgSSLPolBecipher.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgSSLPolBecipher.setStatus("current")
_SlbCurSslCfgSSLPolAuthpol_Type = DisplayString
_SlbCurSslCfgSSLPolAuthpol_Object = MibTableColumn
slbCurSslCfgSSLPolAuthpol = _SlbCurSslCfgSSLPolAuthpol_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 5, 1, 15),
    _SlbCurSslCfgSSLPolAuthpol_Type()
)
slbCurSslCfgSSLPolAuthpol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgSSLPolAuthpol.setStatus("current")
_SlbCurSslCfgSSLPolConvuri_Type = DisplayString
_SlbCurSslCfgSSLPolConvuri_Object = MibTableColumn
slbCurSslCfgSSLPolConvuri = _SlbCurSslCfgSSLPolConvuri_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 5, 1, 16),
    _SlbCurSslCfgSSLPolConvuri_Type()
)
slbCurSslCfgSSLPolConvuri.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgSSLPolConvuri.setStatus("current")


class _SlbCurSslCfgSSLPolBessl_Type(Integer32):
    """Custom type slbCurSslCfgSSLPolBessl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurSslCfgSSLPolBessl_Type.__name__ = "Integer32"
_SlbCurSslCfgSSLPolBessl_Object = MibTableColumn
slbCurSslCfgSSLPolBessl = _SlbCurSslCfgSSLPolBessl_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 5, 1, 17),
    _SlbCurSslCfgSSLPolBessl_Type()
)
slbCurSslCfgSSLPolBessl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgSSLPolBessl.setStatus("current")


class _SlbCurSslCfgSSLPolConvert_Type(Integer32):
    """Custom type slbCurSslCfgSSLPolConvert based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurSslCfgSSLPolConvert_Type.__name__ = "Integer32"
_SlbCurSslCfgSSLPolConvert_Object = MibTableColumn
slbCurSslCfgSSLPolConvert = _SlbCurSslCfgSSLPolConvert_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 5, 1, 18),
    _SlbCurSslCfgSSLPolConvert_Type()
)
slbCurSslCfgSSLPolConvert.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgSSLPolConvert.setStatus("current")


class _SlbCurSslCfgSSLPolAdminStatus_Type(Integer32):
    """Custom type slbCurSslCfgSSLPolAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurSslCfgSSLPolAdminStatus_Type.__name__ = "Integer32"
_SlbCurSslCfgSSLPolAdminStatus_Object = MibTableColumn
slbCurSslCfgSSLPolAdminStatus = _SlbCurSslCfgSSLPolAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 5, 1, 19),
    _SlbCurSslCfgSSLPolAdminStatus_Type()
)
slbCurSslCfgSSLPolAdminStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgSSLPolAdminStatus.setStatus("current")
_SlbNewSslCfgSSLPolTable_Object = MibTable
slbNewSslCfgSSLPolTable = _SlbNewSslCfgSSLPolTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7)
)
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolTable.setStatus("current")
_SlbNewSslCfgSSLPolEntry_Object = MibTableRow
slbNewSslCfgSSLPolEntry = _SlbNewSslCfgSSLPolEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7, 1)
)
slbNewSslCfgSSLPolEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewSslCfgSSLPolNameIdIndex"),
)
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolEntry.setStatus("current")
_SlbNewSslCfgSSLPolNameIdIndex_Type = DisplayString
_SlbNewSslCfgSSLPolNameIdIndex_Object = MibTableColumn
slbNewSslCfgSSLPolNameIdIndex = _SlbNewSslCfgSSLPolNameIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7, 1, 1),
    _SlbNewSslCfgSSLPolNameIdIndex_Type()
)
slbNewSslCfgSSLPolNameIdIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolNameIdIndex.setStatus("current")
_SlbNewSslCfgSSLPolName_Type = DisplayString
_SlbNewSslCfgSSLPolName_Object = MibTableColumn
slbNewSslCfgSSLPolName = _SlbNewSslCfgSSLPolName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7, 1, 2),
    _SlbNewSslCfgSSLPolName_Type()
)
slbNewSslCfgSSLPolName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolName.setStatus("current")
_SlbNewSslCfgSSLPolPassInfoCipherName_Type = DisplayString
_SlbNewSslCfgSSLPolPassInfoCipherName_Object = MibTableColumn
slbNewSslCfgSSLPolPassInfoCipherName = _SlbNewSslCfgSSLPolPassInfoCipherName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7, 1, 3),
    _SlbNewSslCfgSSLPolPassInfoCipherName_Type()
)
slbNewSslCfgSSLPolPassInfoCipherName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolPassInfoCipherName.setStatus("current")


class _SlbNewSslCfgSSLPolPassInfoCipherFlag_Type(Integer32):
    """Custom type slbNewSslCfgSSLPolPassInfoCipherFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgSSLPolPassInfoCipherFlag_Type.__name__ = "Integer32"
_SlbNewSslCfgSSLPolPassInfoCipherFlag_Object = MibTableColumn
slbNewSslCfgSSLPolPassInfoCipherFlag = _SlbNewSslCfgSSLPolPassInfoCipherFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7, 1, 4),
    _SlbNewSslCfgSSLPolPassInfoCipherFlag_Type()
)
slbNewSslCfgSSLPolPassInfoCipherFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolPassInfoCipherFlag.setStatus("current")
_SlbNewSslCfgSSLPolPassInfoVersionName_Type = DisplayString
_SlbNewSslCfgSSLPolPassInfoVersionName_Object = MibTableColumn
slbNewSslCfgSSLPolPassInfoVersionName = _SlbNewSslCfgSSLPolPassInfoVersionName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7, 1, 5),
    _SlbNewSslCfgSSLPolPassInfoVersionName_Type()
)
slbNewSslCfgSSLPolPassInfoVersionName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolPassInfoVersionName.setStatus("current")


class _SlbNewSslCfgSSLPolPassInfoVersionFlag_Type(Integer32):
    """Custom type slbNewSslCfgSSLPolPassInfoVersionFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgSSLPolPassInfoVersionFlag_Type.__name__ = "Integer32"
_SlbNewSslCfgSSLPolPassInfoVersionFlag_Object = MibTableColumn
slbNewSslCfgSSLPolPassInfoVersionFlag = _SlbNewSslCfgSSLPolPassInfoVersionFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7, 1, 6),
    _SlbNewSslCfgSSLPolPassInfoVersionFlag_Type()
)
slbNewSslCfgSSLPolPassInfoVersionFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolPassInfoVersionFlag.setStatus("current")
_SlbNewSslCfgSSLPolPassInfoHeadBitsName_Type = DisplayString
_SlbNewSslCfgSSLPolPassInfoHeadBitsName_Object = MibTableColumn
slbNewSslCfgSSLPolPassInfoHeadBitsName = _SlbNewSslCfgSSLPolPassInfoHeadBitsName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7, 1, 7),
    _SlbNewSslCfgSSLPolPassInfoHeadBitsName_Type()
)
slbNewSslCfgSSLPolPassInfoHeadBitsName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolPassInfoHeadBitsName.setStatus("current")


class _SlbNewSslCfgSSLPolPassInfoHeadBitsFlag_Type(Integer32):
    """Custom type slbNewSslCfgSSLPolPassInfoHeadBitsFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgSSLPolPassInfoHeadBitsFlag_Type.__name__ = "Integer32"
_SlbNewSslCfgSSLPolPassInfoHeadBitsFlag_Object = MibTableColumn
slbNewSslCfgSSLPolPassInfoHeadBitsFlag = _SlbNewSslCfgSSLPolPassInfoHeadBitsFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7, 1, 8),
    _SlbNewSslCfgSSLPolPassInfoHeadBitsFlag_Type()
)
slbNewSslCfgSSLPolPassInfoHeadBitsFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolPassInfoHeadBitsFlag.setStatus("current")


class _SlbNewSslCfgSSLPolPassInfoFrontend_Type(Integer32):
    """Custom type slbNewSslCfgSSLPolPassInfoFrontend based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgSSLPolPassInfoFrontend_Type.__name__ = "Integer32"
_SlbNewSslCfgSSLPolPassInfoFrontend_Object = MibTableColumn
slbNewSslCfgSSLPolPassInfoFrontend = _SlbNewSslCfgSSLPolPassInfoFrontend_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7, 1, 9),
    _SlbNewSslCfgSSLPolPassInfoFrontend_Type()
)
slbNewSslCfgSSLPolPassInfoFrontend.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolPassInfoFrontend.setStatus("current")
_SlbNewSslCfgSSLPolCipherName_Type = Integer32
_SlbNewSslCfgSSLPolCipherName_Object = MibTableColumn
slbNewSslCfgSSLPolCipherName = _SlbNewSslCfgSSLPolCipherName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7, 1, 10),
    _SlbNewSslCfgSSLPolCipherName_Type()
)
slbNewSslCfgSSLPolCipherName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolCipherName.setStatus("current")
_SlbNewSslCfgSSLPolCipherUserdef_Type = DisplayString
_SlbNewSslCfgSSLPolCipherUserdef_Object = MibTableColumn
slbNewSslCfgSSLPolCipherUserdef = _SlbNewSslCfgSSLPolCipherUserdef_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7, 1, 11),
    _SlbNewSslCfgSSLPolCipherUserdef_Type()
)
slbNewSslCfgSSLPolCipherUserdef.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolCipherUserdef.setStatus("current")
_SlbNewSslCfgSSLPolIntermcaChainName_Type = DisplayString
_SlbNewSslCfgSSLPolIntermcaChainName_Object = MibTableColumn
slbNewSslCfgSSLPolIntermcaChainName = _SlbNewSslCfgSSLPolIntermcaChainName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7, 1, 12),
    _SlbNewSslCfgSSLPolIntermcaChainName_Type()
)
slbNewSslCfgSSLPolIntermcaChainName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolIntermcaChainName.setStatus("current")
_SlbNewSslCfgSSLPolIntermcaChainType_Type = DisplayString
_SlbNewSslCfgSSLPolIntermcaChainType_Object = MibTableColumn
slbNewSslCfgSSLPolIntermcaChainType = _SlbNewSslCfgSSLPolIntermcaChainType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7, 1, 13),
    _SlbNewSslCfgSSLPolIntermcaChainType_Type()
)
slbNewSslCfgSSLPolIntermcaChainType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolIntermcaChainType.setStatus("current")


class _SlbNewSslCfgSSLPolBecipher_Type(Integer32):
    """Custom type slbNewSslCfgSSLPolBecipher based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("high", 2),
          ("low", 0),
          ("medium", 1))
    )


_SlbNewSslCfgSSLPolBecipher_Type.__name__ = "Integer32"
_SlbNewSslCfgSSLPolBecipher_Object = MibTableColumn
slbNewSslCfgSSLPolBecipher = _SlbNewSslCfgSSLPolBecipher_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7, 1, 14),
    _SlbNewSslCfgSSLPolBecipher_Type()
)
slbNewSslCfgSSLPolBecipher.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolBecipher.setStatus("current")
_SlbNewSslCfgSSLPolAuthpol_Type = DisplayString
_SlbNewSslCfgSSLPolAuthpol_Object = MibTableColumn
slbNewSslCfgSSLPolAuthpol = _SlbNewSslCfgSSLPolAuthpol_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7, 1, 15),
    _SlbNewSslCfgSSLPolAuthpol_Type()
)
slbNewSslCfgSSLPolAuthpol.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolAuthpol.setStatus("current")
_SlbNewSslCfgSSLPolConvuri_Type = DisplayString
_SlbNewSslCfgSSLPolConvuri_Object = MibTableColumn
slbNewSslCfgSSLPolConvuri = _SlbNewSslCfgSSLPolConvuri_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7, 1, 16),
    _SlbNewSslCfgSSLPolConvuri_Type()
)
slbNewSslCfgSSLPolConvuri.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolConvuri.setStatus("current")


class _SlbNewSslCfgSSLPolBessl_Type(Integer32):
    """Custom type slbNewSslCfgSSLPolBessl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgSSLPolBessl_Type.__name__ = "Integer32"
_SlbNewSslCfgSSLPolBessl_Object = MibTableColumn
slbNewSslCfgSSLPolBessl = _SlbNewSslCfgSSLPolBessl_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7, 1, 17),
    _SlbNewSslCfgSSLPolBessl_Type()
)
slbNewSslCfgSSLPolBessl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolBessl.setStatus("current")


class _SlbNewSslCfgSSLPolConvert_Type(Integer32):
    """Custom type slbNewSslCfgSSLPolConvert based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgSSLPolConvert_Type.__name__ = "Integer32"
_SlbNewSslCfgSSLPolConvert_Object = MibTableColumn
slbNewSslCfgSSLPolConvert = _SlbNewSslCfgSSLPolConvert_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7, 1, 18),
    _SlbNewSslCfgSSLPolConvert_Type()
)
slbNewSslCfgSSLPolConvert.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolConvert.setStatus("current")


class _SlbNewSslCfgSSLPolAdminStatus_Type(Integer32):
    """Custom type slbNewSslCfgSSLPolAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgSSLPolAdminStatus_Type.__name__ = "Integer32"
_SlbNewSslCfgSSLPolAdminStatus_Object = MibTableColumn
slbNewSslCfgSSLPolAdminStatus = _SlbNewSslCfgSSLPolAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7, 1, 19),
    _SlbNewSslCfgSSLPolAdminStatus_Type()
)
slbNewSslCfgSSLPolAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolAdminStatus.setStatus("current")


class _SlbNewSslCfgSSLPolDel_Type(Integer32):
    """Custom type slbNewSslCfgSSLPolDel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewSslCfgSSLPolDel_Type.__name__ = "Integer32"
_SlbNewSslCfgSSLPolDel_Object = MibTableColumn
slbNewSslCfgSSLPolDel = _SlbNewSslCfgSSLPolDel_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 3, 7, 1, 20),
    _SlbNewSslCfgSSLPolDel_Type()
)
slbNewSslCfgSSLPolDel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgSSLPolDel.setStatus("current")
_AuthPol_ObjectIdentity = ObjectIdentity
authPol = _AuthPol_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4)
)
_SlbCurSslCfgAuthPolTable_Object = MibTable
slbCurSslCfgAuthPolTable = _SlbCurSslCfgAuthPolTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1)
)
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolTable.setStatus("current")
_SlbCurSslCfgAuthPolEntry_Object = MibTableRow
slbCurSslCfgAuthPolEntry = _SlbCurSslCfgAuthPolEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1)
)
slbCurSslCfgAuthPolEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurSslCfgAuthPolNameIdIndex"),
)
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolEntry.setStatus("current")
_SlbCurSslCfgAuthPolNameIdIndex_Type = DisplayString
_SlbCurSslCfgAuthPolNameIdIndex_Object = MibTableColumn
slbCurSslCfgAuthPolNameIdIndex = _SlbCurSslCfgAuthPolNameIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 1),
    _SlbCurSslCfgAuthPolNameIdIndex_Type()
)
slbCurSslCfgAuthPolNameIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolNameIdIndex.setStatus("current")
_SlbCurSslCfgAuthPolName_Type = DisplayString
_SlbCurSslCfgAuthPolName_Object = MibTableColumn
slbCurSslCfgAuthPolName = _SlbCurSslCfgAuthPolName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 2),
    _SlbCurSslCfgAuthPolName_Type()
)
slbCurSslCfgAuthPolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolName.setStatus("current")
_SlbCurSslCfgAuthPolValidityMethod_Type = Integer32
_SlbCurSslCfgAuthPolValidityMethod_Object = MibTableColumn
slbCurSslCfgAuthPolValidityMethod = _SlbCurSslCfgAuthPolValidityMethod_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 3),
    _SlbCurSslCfgAuthPolValidityMethod_Type()
)
slbCurSslCfgAuthPolValidityMethod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolValidityMethod.setStatus("current")
_SlbCurSslCfgAuthPolValidityStaturi_Type = DisplayString
_SlbCurSslCfgAuthPolValidityStaturi_Object = MibTableColumn
slbCurSslCfgAuthPolValidityStaturi = _SlbCurSslCfgAuthPolValidityStaturi_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 4),
    _SlbCurSslCfgAuthPolValidityStaturi_Type()
)
slbCurSslCfgAuthPolValidityStaturi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolValidityStaturi.setStatus("current")


class _SlbCurSslCfgAuthPolValidityUriprior_Type(Integer32):
    """Custom type slbCurSslCfgAuthPolValidityUriprior based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("clientcert", 1),
          ("staticuri", 2))
    )


_SlbCurSslCfgAuthPolValidityUriprior_Type.__name__ = "Integer32"
_SlbCurSslCfgAuthPolValidityUriprior_Object = MibTableColumn
slbCurSslCfgAuthPolValidityUriprior = _SlbCurSslCfgAuthPolValidityUriprior_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 5),
    _SlbCurSslCfgAuthPolValidityUriprior_Type()
)
slbCurSslCfgAuthPolValidityUriprior.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolValidityUriprior.setStatus("current")
_SlbCurSslCfgAuthPolValidityCachtime_Type = Integer32
_SlbCurSslCfgAuthPolValidityCachtime_Object = MibTableColumn
slbCurSslCfgAuthPolValidityCachtime = _SlbCurSslCfgAuthPolValidityCachtime_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 6),
    _SlbCurSslCfgAuthPolValidityCachtime_Type()
)
slbCurSslCfgAuthPolValidityCachtime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolValidityCachtime.setStatus("current")
_SlbCurSslCfgAuthPolValidityTimedev_Type = Integer32
_SlbCurSslCfgAuthPolValidityTimedev_Object = MibTableColumn
slbCurSslCfgAuthPolValidityTimedev = _SlbCurSslCfgAuthPolValidityTimedev_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 7),
    _SlbCurSslCfgAuthPolValidityTimedev_Type()
)
slbCurSslCfgAuthPolValidityTimedev.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolValidityTimedev.setStatus("current")
_SlbCurSslCfgAuthPolValidityAlgorthmName_Type = DisplayString
_SlbCurSslCfgAuthPolValidityAlgorthmName_Object = MibTableColumn
slbCurSslCfgAuthPolValidityAlgorthmName = _SlbCurSslCfgAuthPolValidityAlgorthmName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 8),
    _SlbCurSslCfgAuthPolValidityAlgorthmName_Type()
)
slbCurSslCfgAuthPolValidityAlgorthmName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolValidityAlgorthmName.setStatus("current")


class _SlbCurSslCfgAuthPolValidityVchain_Type(Integer32):
    """Custom type slbCurSslCfgAuthPolValidityVchain based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurSslCfgAuthPolValidityVchain_Type.__name__ = "Integer32"
_SlbCurSslCfgAuthPolValidityVchain_Object = MibTableColumn
slbCurSslCfgAuthPolValidityVchain = _SlbCurSslCfgAuthPolValidityVchain_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 9),
    _SlbCurSslCfgAuthPolValidityVchain_Type()
)
slbCurSslCfgAuthPolValidityVchain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolValidityVchain.setStatus("current")


class _SlbCurSslCfgAuthPolValiditySecure_Type(Integer32):
    """Custom type slbCurSslCfgAuthPolValiditySecure based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurSslCfgAuthPolValiditySecure_Type.__name__ = "Integer32"
_SlbCurSslCfgAuthPolValiditySecure_Object = MibTableColumn
slbCurSslCfgAuthPolValiditySecure = _SlbCurSslCfgAuthPolValiditySecure_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 10),
    _SlbCurSslCfgAuthPolValiditySecure_Type()
)
slbCurSslCfgAuthPolValiditySecure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolValiditySecure.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoVersionName_Type = DisplayString
_SlbCurSslCfgAuthPolPassinfoVersionName_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoVersionName = _SlbCurSslCfgAuthPolPassinfoVersionName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 11),
    _SlbCurSslCfgAuthPolPassinfoVersionName_Type()
)
slbCurSslCfgAuthPolPassinfoVersionName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoVersionName.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoVersionFlag_Type = Integer32
_SlbCurSslCfgAuthPolPassinfoVersionFlag_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoVersionFlag = _SlbCurSslCfgAuthPolPassinfoVersionFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 12),
    _SlbCurSslCfgAuthPolPassinfoVersionFlag_Type()
)
slbCurSslCfgAuthPolPassinfoVersionFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoVersionFlag.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoSerialName_Type = DisplayString
_SlbCurSslCfgAuthPolPassinfoSerialName_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoSerialName = _SlbCurSslCfgAuthPolPassinfoSerialName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 13),
    _SlbCurSslCfgAuthPolPassinfoSerialName_Type()
)
slbCurSslCfgAuthPolPassinfoSerialName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoSerialName.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoSerialFlag_Type = Integer32
_SlbCurSslCfgAuthPolPassinfoSerialFlag_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoSerialFlag = _SlbCurSslCfgAuthPolPassinfoSerialFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 14),
    _SlbCurSslCfgAuthPolPassinfoSerialFlag_Type()
)
slbCurSslCfgAuthPolPassinfoSerialFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoSerialFlag.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoAlgoName_Type = DisplayString
_SlbCurSslCfgAuthPolPassinfoAlgoName_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoAlgoName = _SlbCurSslCfgAuthPolPassinfoAlgoName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 15),
    _SlbCurSslCfgAuthPolPassinfoAlgoName_Type()
)
slbCurSslCfgAuthPolPassinfoAlgoName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoAlgoName.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoAlgoFlag_Type = Integer32
_SlbCurSslCfgAuthPolPassinfoAlgoFlag_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoAlgoFlag = _SlbCurSslCfgAuthPolPassinfoAlgoFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 16),
    _SlbCurSslCfgAuthPolPassinfoAlgoFlag_Type()
)
slbCurSslCfgAuthPolPassinfoAlgoFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoAlgoFlag.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoIssuerName_Type = DisplayString
_SlbCurSslCfgAuthPolPassinfoIssuerName_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoIssuerName = _SlbCurSslCfgAuthPolPassinfoIssuerName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 17),
    _SlbCurSslCfgAuthPolPassinfoIssuerName_Type()
)
slbCurSslCfgAuthPolPassinfoIssuerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoIssuerName.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoIssuerFlag_Type = Integer32
_SlbCurSslCfgAuthPolPassinfoIssuerFlag_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoIssuerFlag = _SlbCurSslCfgAuthPolPassinfoIssuerFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 18),
    _SlbCurSslCfgAuthPolPassinfoIssuerFlag_Type()
)
slbCurSslCfgAuthPolPassinfoIssuerFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoIssuerFlag.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoNbeforeName_Type = DisplayString
_SlbCurSslCfgAuthPolPassinfoNbeforeName_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoNbeforeName = _SlbCurSslCfgAuthPolPassinfoNbeforeName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 19),
    _SlbCurSslCfgAuthPolPassinfoNbeforeName_Type()
)
slbCurSslCfgAuthPolPassinfoNbeforeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoNbeforeName.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoNbeforeFlag_Type = Integer32
_SlbCurSslCfgAuthPolPassinfoNbeforeFlag_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoNbeforeFlag = _SlbCurSslCfgAuthPolPassinfoNbeforeFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 20),
    _SlbCurSslCfgAuthPolPassinfoNbeforeFlag_Type()
)
slbCurSslCfgAuthPolPassinfoNbeforeFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoNbeforeFlag.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoNafterName_Type = DisplayString
_SlbCurSslCfgAuthPolPassinfoNafterName_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoNafterName = _SlbCurSslCfgAuthPolPassinfoNafterName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 21),
    _SlbCurSslCfgAuthPolPassinfoNafterName_Type()
)
slbCurSslCfgAuthPolPassinfoNafterName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoNafterName.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoNafterFlag_Type = Integer32
_SlbCurSslCfgAuthPolPassinfoNafterFlag_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoNafterFlag = _SlbCurSslCfgAuthPolPassinfoNafterFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 22),
    _SlbCurSslCfgAuthPolPassinfoNafterFlag_Type()
)
slbCurSslCfgAuthPolPassinfoNafterFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoNafterFlag.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoSubjectName_Type = DisplayString
_SlbCurSslCfgAuthPolPassinfoSubjectName_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoSubjectName = _SlbCurSslCfgAuthPolPassinfoSubjectName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 23),
    _SlbCurSslCfgAuthPolPassinfoSubjectName_Type()
)
slbCurSslCfgAuthPolPassinfoSubjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoSubjectName.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoSubjectFlag_Type = Integer32
_SlbCurSslCfgAuthPolPassinfoSubjectFlag_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoSubjectFlag = _SlbCurSslCfgAuthPolPassinfoSubjectFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 24),
    _SlbCurSslCfgAuthPolPassinfoSubjectFlag_Type()
)
slbCurSslCfgAuthPolPassinfoSubjectFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoSubjectFlag.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoKeytypeName_Type = DisplayString
_SlbCurSslCfgAuthPolPassinfoKeytypeName_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoKeytypeName = _SlbCurSslCfgAuthPolPassinfoKeytypeName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 25),
    _SlbCurSslCfgAuthPolPassinfoKeytypeName_Type()
)
slbCurSslCfgAuthPolPassinfoKeytypeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoKeytypeName.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoKeytypeFlag_Type = Integer32
_SlbCurSslCfgAuthPolPassinfoKeytypeFlag_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoKeytypeFlag = _SlbCurSslCfgAuthPolPassinfoKeytypeFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 26),
    _SlbCurSslCfgAuthPolPassinfoKeytypeFlag_Type()
)
slbCurSslCfgAuthPolPassinfoKeytypeFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoKeytypeFlag.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoMd5Name_Type = DisplayString
_SlbCurSslCfgAuthPolPassinfoMd5Name_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoMd5Name = _SlbCurSslCfgAuthPolPassinfoMd5Name_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 27),
    _SlbCurSslCfgAuthPolPassinfoMd5Name_Type()
)
slbCurSslCfgAuthPolPassinfoMd5Name.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoMd5Name.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoMd5Flag_Type = Integer32
_SlbCurSslCfgAuthPolPassinfoMd5Flag_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoMd5Flag = _SlbCurSslCfgAuthPolPassinfoMd5Flag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 28),
    _SlbCurSslCfgAuthPolPassinfoMd5Flag_Type()
)
slbCurSslCfgAuthPolPassinfoMd5Flag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoMd5Flag.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoCertName_Type = DisplayString
_SlbCurSslCfgAuthPolPassinfoCertName_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoCertName = _SlbCurSslCfgAuthPolPassinfoCertName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 29),
    _SlbCurSslCfgAuthPolPassinfoCertName_Type()
)
slbCurSslCfgAuthPolPassinfoCertName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoCertName.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoCertFormat_Type = Integer32
_SlbCurSslCfgAuthPolPassinfoCertFormat_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoCertFormat = _SlbCurSslCfgAuthPolPassinfoCertFormat_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 30),
    _SlbCurSslCfgAuthPolPassinfoCertFormat_Type()
)
slbCurSslCfgAuthPolPassinfoCertFormat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoCertFormat.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoCertFlag_Type = Integer32
_SlbCurSslCfgAuthPolPassinfoCertFlag_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoCertFlag = _SlbCurSslCfgAuthPolPassinfoCertFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 31),
    _SlbCurSslCfgAuthPolPassinfoCertFlag_Type()
)
slbCurSslCfgAuthPolPassinfoCertFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoCertFlag.setStatus("current")
_SlbCurSslCfgAuthPolPassinfoCharset_Type = Integer32
_SlbCurSslCfgAuthPolPassinfoCharset_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoCharset = _SlbCurSslCfgAuthPolPassinfoCharset_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 32),
    _SlbCurSslCfgAuthPolPassinfoCharset_Type()
)
slbCurSslCfgAuthPolPassinfoCharset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoCharset.setStatus("current")
_SlbCurSslCfgAuthPolTrustcaChainName_Type = DisplayString
_SlbCurSslCfgAuthPolTrustcaChainName_Object = MibTableColumn
slbCurSslCfgAuthPolTrustcaChainName = _SlbCurSslCfgAuthPolTrustcaChainName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 33),
    _SlbCurSslCfgAuthPolTrustcaChainName_Type()
)
slbCurSslCfgAuthPolTrustcaChainName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolTrustcaChainName.setStatus("current")
_SlbCurSslCfgAuthPolTrustcaChainType_Type = DisplayString
_SlbCurSslCfgAuthPolTrustcaChainType_Object = MibTableColumn
slbCurSslCfgAuthPolTrustcaChainType = _SlbCurSslCfgAuthPolTrustcaChainType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 34),
    _SlbCurSslCfgAuthPolTrustcaChainType_Type()
)
slbCurSslCfgAuthPolTrustcaChainType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolTrustcaChainType.setStatus("current")
_SlbCurSslCfgAuthPolCadepth_Type = Integer32
_SlbCurSslCfgAuthPolCadepth_Object = MibTableColumn
slbCurSslCfgAuthPolCadepth = _SlbCurSslCfgAuthPolCadepth_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 35),
    _SlbCurSslCfgAuthPolCadepth_Type()
)
slbCurSslCfgAuthPolCadepth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolCadepth.setStatus("current")
_SlbCurSslCfgAuthPolCaverify_Type = Integer32
_SlbCurSslCfgAuthPolCaverify_Object = MibTableColumn
slbCurSslCfgAuthPolCaverify = _SlbCurSslCfgAuthPolCaverify_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 36),
    _SlbCurSslCfgAuthPolCaverify_Type()
)
slbCurSslCfgAuthPolCaverify.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolCaverify.setStatus("current")
_SlbCurSslCfgAuthPolFailurl_Type = DisplayString
_SlbCurSslCfgAuthPolFailurl_Object = MibTableColumn
slbCurSslCfgAuthPolFailurl = _SlbCurSslCfgAuthPolFailurl_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 37),
    _SlbCurSslCfgAuthPolFailurl_Type()
)
slbCurSslCfgAuthPolFailurl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolFailurl.setStatus("current")


class _SlbCurSslCfgAuthPolAdminStatus_Type(Integer32):
    """Custom type slbCurSslCfgAuthPolAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurSslCfgAuthPolAdminStatus_Type.__name__ = "Integer32"
_SlbCurSslCfgAuthPolAdminStatus_Object = MibTableColumn
slbCurSslCfgAuthPolAdminStatus = _SlbCurSslCfgAuthPolAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 38),
    _SlbCurSslCfgAuthPolAdminStatus_Type()
)
slbCurSslCfgAuthPolAdminStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolAdminStatus.setStatus("current")


class _SlbCurSslCfgAuthPolPassinfoComp2424_Type(Integer32):
    """Custom type slbCurSslCfgAuthPolPassinfoComp2424 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurSslCfgAuthPolPassinfoComp2424_Type.__name__ = "Integer32"
_SlbCurSslCfgAuthPolPassinfoComp2424_Object = MibTableColumn
slbCurSslCfgAuthPolPassinfoComp2424 = _SlbCurSslCfgAuthPolPassinfoComp2424_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 1, 1, 39),
    _SlbCurSslCfgAuthPolPassinfoComp2424_Type()
)
slbCurSslCfgAuthPolPassinfoComp2424.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgAuthPolPassinfoComp2424.setStatus("current")
_SlbNewSslCfgAuthPolTable_Object = MibTable
slbNewSslCfgAuthPolTable = _SlbNewSslCfgAuthPolTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3)
)
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolTable.setStatus("current")
_SlbNewSslCfgAuthPolEntry_Object = MibTableRow
slbNewSslCfgAuthPolEntry = _SlbNewSslCfgAuthPolEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1)
)
slbNewSslCfgAuthPolEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewSslCfgAuthPolNameIdIndex"),
)
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolEntry.setStatus("current")
_SlbNewSslCfgAuthPolNameIdIndex_Type = DisplayString
_SlbNewSslCfgAuthPolNameIdIndex_Object = MibTableColumn
slbNewSslCfgAuthPolNameIdIndex = _SlbNewSslCfgAuthPolNameIdIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 1),
    _SlbNewSslCfgAuthPolNameIdIndex_Type()
)
slbNewSslCfgAuthPolNameIdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolNameIdIndex.setStatus("current")
_SlbNewSslCfgAuthPolName_Type = DisplayString
_SlbNewSslCfgAuthPolName_Object = MibTableColumn
slbNewSslCfgAuthPolName = _SlbNewSslCfgAuthPolName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 2),
    _SlbNewSslCfgAuthPolName_Type()
)
slbNewSslCfgAuthPolName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolName.setStatus("current")
_SlbNewSslCfgAuthPolValidityMethod_Type = Integer32
_SlbNewSslCfgAuthPolValidityMethod_Object = MibTableColumn
slbNewSslCfgAuthPolValidityMethod = _SlbNewSslCfgAuthPolValidityMethod_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 3),
    _SlbNewSslCfgAuthPolValidityMethod_Type()
)
slbNewSslCfgAuthPolValidityMethod.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolValidityMethod.setStatus("current")
_SlbNewSslCfgAuthPolValidityStaturi_Type = DisplayString
_SlbNewSslCfgAuthPolValidityStaturi_Object = MibTableColumn
slbNewSslCfgAuthPolValidityStaturi = _SlbNewSslCfgAuthPolValidityStaturi_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 4),
    _SlbNewSslCfgAuthPolValidityStaturi_Type()
)
slbNewSslCfgAuthPolValidityStaturi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolValidityStaturi.setStatus("current")


class _SlbNewSslCfgAuthPolValidityUriprior_Type(Integer32):
    """Custom type slbNewSslCfgAuthPolValidityUriprior based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("clientcert", 1),
          ("staticuri", 2))
    )


_SlbNewSslCfgAuthPolValidityUriprior_Type.__name__ = "Integer32"
_SlbNewSslCfgAuthPolValidityUriprior_Object = MibTableColumn
slbNewSslCfgAuthPolValidityUriprior = _SlbNewSslCfgAuthPolValidityUriprior_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 5),
    _SlbNewSslCfgAuthPolValidityUriprior_Type()
)
slbNewSslCfgAuthPolValidityUriprior.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolValidityUriprior.setStatus("current")
_SlbNewSslCfgAuthPolValidityCachtime_Type = Integer32
_SlbNewSslCfgAuthPolValidityCachtime_Object = MibTableColumn
slbNewSslCfgAuthPolValidityCachtime = _SlbNewSslCfgAuthPolValidityCachtime_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 6),
    _SlbNewSslCfgAuthPolValidityCachtime_Type()
)
slbNewSslCfgAuthPolValidityCachtime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolValidityCachtime.setStatus("current")
_SlbNewSslCfgAuthPolValidityTimedev_Type = Integer32
_SlbNewSslCfgAuthPolValidityTimedev_Object = MibTableColumn
slbNewSslCfgAuthPolValidityTimedev = _SlbNewSslCfgAuthPolValidityTimedev_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 7),
    _SlbNewSslCfgAuthPolValidityTimedev_Type()
)
slbNewSslCfgAuthPolValidityTimedev.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolValidityTimedev.setStatus("current")
_SlbNewSslCfgAuthPolValidityAlgorthmName_Type = DisplayString
_SlbNewSslCfgAuthPolValidityAlgorthmName_Object = MibTableColumn
slbNewSslCfgAuthPolValidityAlgorthmName = _SlbNewSslCfgAuthPolValidityAlgorthmName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 8),
    _SlbNewSslCfgAuthPolValidityAlgorthmName_Type()
)
slbNewSslCfgAuthPolValidityAlgorthmName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolValidityAlgorthmName.setStatus("current")


class _SlbNewSslCfgAuthPolValidityVchain_Type(Integer32):
    """Custom type slbNewSslCfgAuthPolValidityVchain based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgAuthPolValidityVchain_Type.__name__ = "Integer32"
_SlbNewSslCfgAuthPolValidityVchain_Object = MibTableColumn
slbNewSslCfgAuthPolValidityVchain = _SlbNewSslCfgAuthPolValidityVchain_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 9),
    _SlbNewSslCfgAuthPolValidityVchain_Type()
)
slbNewSslCfgAuthPolValidityVchain.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolValidityVchain.setStatus("current")


class _SlbNewSslCfgAuthPolValiditySecure_Type(Integer32):
    """Custom type slbNewSslCfgAuthPolValiditySecure based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgAuthPolValiditySecure_Type.__name__ = "Integer32"
_SlbNewSslCfgAuthPolValiditySecure_Object = MibTableColumn
slbNewSslCfgAuthPolValiditySecure = _SlbNewSslCfgAuthPolValiditySecure_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 10),
    _SlbNewSslCfgAuthPolValiditySecure_Type()
)
slbNewSslCfgAuthPolValiditySecure.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolValiditySecure.setStatus("current")
_SlbNewSslCfgAuthPolPassinfoVersionName_Type = DisplayString
_SlbNewSslCfgAuthPolPassinfoVersionName_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoVersionName = _SlbNewSslCfgAuthPolPassinfoVersionName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 11),
    _SlbNewSslCfgAuthPolPassinfoVersionName_Type()
)
slbNewSslCfgAuthPolPassinfoVersionName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoVersionName.setStatus("current")


class _SlbNewSslCfgAuthPolPassinfoVersionFlag_Type(Integer32):
    """Custom type slbNewSslCfgAuthPolPassinfoVersionFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgAuthPolPassinfoVersionFlag_Type.__name__ = "Integer32"
_SlbNewSslCfgAuthPolPassinfoVersionFlag_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoVersionFlag = _SlbNewSslCfgAuthPolPassinfoVersionFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 12),
    _SlbNewSslCfgAuthPolPassinfoVersionFlag_Type()
)
slbNewSslCfgAuthPolPassinfoVersionFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoVersionFlag.setStatus("current")
_SlbNewSslCfgAuthPolPassinfoSerialName_Type = DisplayString
_SlbNewSslCfgAuthPolPassinfoSerialName_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoSerialName = _SlbNewSslCfgAuthPolPassinfoSerialName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 13),
    _SlbNewSslCfgAuthPolPassinfoSerialName_Type()
)
slbNewSslCfgAuthPolPassinfoSerialName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoSerialName.setStatus("current")


class _SlbNewSslCfgAuthPolPassinfoSerialFlag_Type(Integer32):
    """Custom type slbNewSslCfgAuthPolPassinfoSerialFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgAuthPolPassinfoSerialFlag_Type.__name__ = "Integer32"
_SlbNewSslCfgAuthPolPassinfoSerialFlag_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoSerialFlag = _SlbNewSslCfgAuthPolPassinfoSerialFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 14),
    _SlbNewSslCfgAuthPolPassinfoSerialFlag_Type()
)
slbNewSslCfgAuthPolPassinfoSerialFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoSerialFlag.setStatus("current")
_SlbNewSslCfgAuthPolPassinfoAlgoName_Type = DisplayString
_SlbNewSslCfgAuthPolPassinfoAlgoName_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoAlgoName = _SlbNewSslCfgAuthPolPassinfoAlgoName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 15),
    _SlbNewSslCfgAuthPolPassinfoAlgoName_Type()
)
slbNewSslCfgAuthPolPassinfoAlgoName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoAlgoName.setStatus("current")


class _SlbNewSslCfgAuthPolPassinfoAlgoFlag_Type(Integer32):
    """Custom type slbNewSslCfgAuthPolPassinfoAlgoFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgAuthPolPassinfoAlgoFlag_Type.__name__ = "Integer32"
_SlbNewSslCfgAuthPolPassinfoAlgoFlag_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoAlgoFlag = _SlbNewSslCfgAuthPolPassinfoAlgoFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 16),
    _SlbNewSslCfgAuthPolPassinfoAlgoFlag_Type()
)
slbNewSslCfgAuthPolPassinfoAlgoFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoAlgoFlag.setStatus("current")
_SlbNewSslCfgAuthPolPassinfoIssuerName_Type = DisplayString
_SlbNewSslCfgAuthPolPassinfoIssuerName_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoIssuerName = _SlbNewSslCfgAuthPolPassinfoIssuerName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 17),
    _SlbNewSslCfgAuthPolPassinfoIssuerName_Type()
)
slbNewSslCfgAuthPolPassinfoIssuerName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoIssuerName.setStatus("current")


class _SlbNewSslCfgAuthPolPassinfoIssuerFlag_Type(Integer32):
    """Custom type slbNewSslCfgAuthPolPassinfoIssuerFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgAuthPolPassinfoIssuerFlag_Type.__name__ = "Integer32"
_SlbNewSslCfgAuthPolPassinfoIssuerFlag_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoIssuerFlag = _SlbNewSslCfgAuthPolPassinfoIssuerFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 18),
    _SlbNewSslCfgAuthPolPassinfoIssuerFlag_Type()
)
slbNewSslCfgAuthPolPassinfoIssuerFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoIssuerFlag.setStatus("current")
_SlbNewSslCfgAuthPolPassinfoNbeforeName_Type = DisplayString
_SlbNewSslCfgAuthPolPassinfoNbeforeName_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoNbeforeName = _SlbNewSslCfgAuthPolPassinfoNbeforeName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 19),
    _SlbNewSslCfgAuthPolPassinfoNbeforeName_Type()
)
slbNewSslCfgAuthPolPassinfoNbeforeName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoNbeforeName.setStatus("current")


class _SlbNewSslCfgAuthPolPassinfoNbeforeFlag_Type(Integer32):
    """Custom type slbNewSslCfgAuthPolPassinfoNbeforeFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgAuthPolPassinfoNbeforeFlag_Type.__name__ = "Integer32"
_SlbNewSslCfgAuthPolPassinfoNbeforeFlag_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoNbeforeFlag = _SlbNewSslCfgAuthPolPassinfoNbeforeFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 20),
    _SlbNewSslCfgAuthPolPassinfoNbeforeFlag_Type()
)
slbNewSslCfgAuthPolPassinfoNbeforeFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoNbeforeFlag.setStatus("current")
_SlbNewSslCfgAuthPolPassinfoNafterName_Type = DisplayString
_SlbNewSslCfgAuthPolPassinfoNafterName_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoNafterName = _SlbNewSslCfgAuthPolPassinfoNafterName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 21),
    _SlbNewSslCfgAuthPolPassinfoNafterName_Type()
)
slbNewSslCfgAuthPolPassinfoNafterName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoNafterName.setStatus("current")


class _SlbNewSslCfgAuthPolPassinfoNafterFlag_Type(Integer32):
    """Custom type slbNewSslCfgAuthPolPassinfoNafterFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgAuthPolPassinfoNafterFlag_Type.__name__ = "Integer32"
_SlbNewSslCfgAuthPolPassinfoNafterFlag_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoNafterFlag = _SlbNewSslCfgAuthPolPassinfoNafterFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 22),
    _SlbNewSslCfgAuthPolPassinfoNafterFlag_Type()
)
slbNewSslCfgAuthPolPassinfoNafterFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoNafterFlag.setStatus("current")
_SlbNewSslCfgAuthPolPassinfoSubjectName_Type = DisplayString
_SlbNewSslCfgAuthPolPassinfoSubjectName_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoSubjectName = _SlbNewSslCfgAuthPolPassinfoSubjectName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 23),
    _SlbNewSslCfgAuthPolPassinfoSubjectName_Type()
)
slbNewSslCfgAuthPolPassinfoSubjectName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoSubjectName.setStatus("current")


class _SlbNewSslCfgAuthPolPassinfoSubjectFlag_Type(Integer32):
    """Custom type slbNewSslCfgAuthPolPassinfoSubjectFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgAuthPolPassinfoSubjectFlag_Type.__name__ = "Integer32"
_SlbNewSslCfgAuthPolPassinfoSubjectFlag_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoSubjectFlag = _SlbNewSslCfgAuthPolPassinfoSubjectFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 24),
    _SlbNewSslCfgAuthPolPassinfoSubjectFlag_Type()
)
slbNewSslCfgAuthPolPassinfoSubjectFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoSubjectFlag.setStatus("current")
_SlbNewSslCfgAuthPolPassinfoKeytypeName_Type = DisplayString
_SlbNewSslCfgAuthPolPassinfoKeytypeName_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoKeytypeName = _SlbNewSslCfgAuthPolPassinfoKeytypeName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 25),
    _SlbNewSslCfgAuthPolPassinfoKeytypeName_Type()
)
slbNewSslCfgAuthPolPassinfoKeytypeName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoKeytypeName.setStatus("current")


class _SlbNewSslCfgAuthPolPassinfoKeytypeFlag_Type(Integer32):
    """Custom type slbNewSslCfgAuthPolPassinfoKeytypeFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgAuthPolPassinfoKeytypeFlag_Type.__name__ = "Integer32"
_SlbNewSslCfgAuthPolPassinfoKeytypeFlag_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoKeytypeFlag = _SlbNewSslCfgAuthPolPassinfoKeytypeFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 26),
    _SlbNewSslCfgAuthPolPassinfoKeytypeFlag_Type()
)
slbNewSslCfgAuthPolPassinfoKeytypeFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoKeytypeFlag.setStatus("current")
_SlbNewSslCfgAuthPolPassinfoMd5Name_Type = DisplayString
_SlbNewSslCfgAuthPolPassinfoMd5Name_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoMd5Name = _SlbNewSslCfgAuthPolPassinfoMd5Name_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 27),
    _SlbNewSslCfgAuthPolPassinfoMd5Name_Type()
)
slbNewSslCfgAuthPolPassinfoMd5Name.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoMd5Name.setStatus("current")


class _SlbNewSslCfgAuthPolPassinfoMd5Flag_Type(Integer32):
    """Custom type slbNewSslCfgAuthPolPassinfoMd5Flag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgAuthPolPassinfoMd5Flag_Type.__name__ = "Integer32"
_SlbNewSslCfgAuthPolPassinfoMd5Flag_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoMd5Flag = _SlbNewSslCfgAuthPolPassinfoMd5Flag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 28),
    _SlbNewSslCfgAuthPolPassinfoMd5Flag_Type()
)
slbNewSslCfgAuthPolPassinfoMd5Flag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoMd5Flag.setStatus("current")
_SlbNewSslCfgAuthPolPassinfoCertName_Type = DisplayString
_SlbNewSslCfgAuthPolPassinfoCertName_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoCertName = _SlbNewSslCfgAuthPolPassinfoCertName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 29),
    _SlbNewSslCfgAuthPolPassinfoCertName_Type()
)
slbNewSslCfgAuthPolPassinfoCertName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoCertName.setStatus("current")
_SlbNewSslCfgAuthPolPassinfoCertFormat_Type = Integer32
_SlbNewSslCfgAuthPolPassinfoCertFormat_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoCertFormat = _SlbNewSslCfgAuthPolPassinfoCertFormat_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 30),
    _SlbNewSslCfgAuthPolPassinfoCertFormat_Type()
)
slbNewSslCfgAuthPolPassinfoCertFormat.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoCertFormat.setStatus("current")


class _SlbNewSslCfgAuthPolPassinfoCertFlag_Type(Integer32):
    """Custom type slbNewSslCfgAuthPolPassinfoCertFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgAuthPolPassinfoCertFlag_Type.__name__ = "Integer32"
_SlbNewSslCfgAuthPolPassinfoCertFlag_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoCertFlag = _SlbNewSslCfgAuthPolPassinfoCertFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 31),
    _SlbNewSslCfgAuthPolPassinfoCertFlag_Type()
)
slbNewSslCfgAuthPolPassinfoCertFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoCertFlag.setStatus("current")
_SlbNewSslCfgAuthPolPassinfoCharset_Type = Integer32
_SlbNewSslCfgAuthPolPassinfoCharset_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoCharset = _SlbNewSslCfgAuthPolPassinfoCharset_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 32),
    _SlbNewSslCfgAuthPolPassinfoCharset_Type()
)
slbNewSslCfgAuthPolPassinfoCharset.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoCharset.setStatus("current")
_SlbNewSslCfgAuthPolTrustcaChainName_Type = DisplayString
_SlbNewSslCfgAuthPolTrustcaChainName_Object = MibTableColumn
slbNewSslCfgAuthPolTrustcaChainName = _SlbNewSslCfgAuthPolTrustcaChainName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 33),
    _SlbNewSslCfgAuthPolTrustcaChainName_Type()
)
slbNewSslCfgAuthPolTrustcaChainName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolTrustcaChainName.setStatus("current")
_SlbNewSslCfgAuthPolTrustcaChainType_Type = DisplayString
_SlbNewSslCfgAuthPolTrustcaChainType_Object = MibTableColumn
slbNewSslCfgAuthPolTrustcaChainType = _SlbNewSslCfgAuthPolTrustcaChainType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 34),
    _SlbNewSslCfgAuthPolTrustcaChainType_Type()
)
slbNewSslCfgAuthPolTrustcaChainType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolTrustcaChainType.setStatus("current")
_SlbNewSslCfgAuthPolCadepth_Type = Integer32
_SlbNewSslCfgAuthPolCadepth_Object = MibTableColumn
slbNewSslCfgAuthPolCadepth = _SlbNewSslCfgAuthPolCadepth_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 35),
    _SlbNewSslCfgAuthPolCadepth_Type()
)
slbNewSslCfgAuthPolCadepth.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolCadepth.setStatus("current")
_SlbNewSslCfgAuthPolCaverify_Type = Integer32
_SlbNewSslCfgAuthPolCaverify_Object = MibTableColumn
slbNewSslCfgAuthPolCaverify = _SlbNewSslCfgAuthPolCaverify_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 36),
    _SlbNewSslCfgAuthPolCaverify_Type()
)
slbNewSslCfgAuthPolCaverify.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolCaverify.setStatus("current")
_SlbNewSslCfgAuthPolFailurl_Type = DisplayString
_SlbNewSslCfgAuthPolFailurl_Object = MibTableColumn
slbNewSslCfgAuthPolFailurl = _SlbNewSslCfgAuthPolFailurl_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 37),
    _SlbNewSslCfgAuthPolFailurl_Type()
)
slbNewSslCfgAuthPolFailurl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolFailurl.setStatus("current")


class _SlbNewSslCfgAuthPolAdminStatus_Type(Integer32):
    """Custom type slbNewSslCfgAuthPolAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgAuthPolAdminStatus_Type.__name__ = "Integer32"
_SlbNewSslCfgAuthPolAdminStatus_Object = MibTableColumn
slbNewSslCfgAuthPolAdminStatus = _SlbNewSslCfgAuthPolAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 38),
    _SlbNewSslCfgAuthPolAdminStatus_Type()
)
slbNewSslCfgAuthPolAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolAdminStatus.setStatus("current")


class _SlbNewSslCfgAuthPolDelete_Type(Integer32):
    """Custom type slbNewSslCfgAuthPolDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewSslCfgAuthPolDelete_Type.__name__ = "Integer32"
_SlbNewSslCfgAuthPolDelete_Object = MibTableColumn
slbNewSslCfgAuthPolDelete = _SlbNewSslCfgAuthPolDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 39),
    _SlbNewSslCfgAuthPolDelete_Type()
)
slbNewSslCfgAuthPolDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolDelete.setStatus("current")


class _SlbNewSslCfgAuthPolPassinfoComp2424_Type(Integer32):
    """Custom type slbNewSslCfgAuthPolPassinfoComp2424 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewSslCfgAuthPolPassinfoComp2424_Type.__name__ = "Integer32"
_SlbNewSslCfgAuthPolPassinfoComp2424_Object = MibTableColumn
slbNewSslCfgAuthPolPassinfoComp2424 = _SlbNewSslCfgAuthPolPassinfoComp2424_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 4, 3, 1, 40),
    _SlbNewSslCfgAuthPolPassinfoComp2424_Type()
)
slbNewSslCfgAuthPolPassinfoComp2424.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgAuthPolPassinfoComp2424.setStatus("current")
_Certs_ObjectIdentity = ObjectIdentity
certs = _Certs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5)
)
_SlbCurSslCfgCertsTable_Object = MibTable
slbCurSslCfgCertsTable = _SlbCurSslCfgCertsTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 1)
)
if mibBuilder.loadTexts:
    slbCurSslCfgCertsTable.setStatus("current")
_SlbCurSslCfgCertsEntry_Object = MibTableRow
slbCurSslCfgCertsEntry = _SlbCurSslCfgCertsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 1, 1)
)
slbCurSslCfgCertsEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurSslCfgCertsID"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurSslCfgCertsType"),
)
if mibBuilder.loadTexts:
    slbCurSslCfgCertsEntry.setStatus("current")


class _SlbCurSslCfgCertsID_Type(DisplayString):
    """Custom type slbCurSslCfgCertsID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurSslCfgCertsID_Type.__name__ = "DisplayString"
_SlbCurSslCfgCertsID_Object = MibTableColumn
slbCurSslCfgCertsID = _SlbCurSslCfgCertsID_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 1, 1, 1),
    _SlbCurSslCfgCertsID_Type()
)
slbCurSslCfgCertsID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgCertsID.setStatus("current")


class _SlbCurSslCfgCertsType_Type(Integer32):
    """Custom type slbCurSslCfgCertsType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("certificateRequest", 2),
          ("intermediateCertificate", 5),
          ("key", 1),
          ("serverCertificate", 3),
          ("trustedCertificate", 4))
    )


_SlbCurSslCfgCertsType_Type.__name__ = "Integer32"
_SlbCurSslCfgCertsType_Object = MibTableColumn
slbCurSslCfgCertsType = _SlbCurSslCfgCertsType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 1, 1, 2),
    _SlbCurSslCfgCertsType_Type()
)
slbCurSslCfgCertsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgCertsType.setStatus("current")


class _SlbCurSslCfgCertsName_Type(DisplayString):
    """Custom type slbCurSslCfgCertsName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurSslCfgCertsName_Type.__name__ = "DisplayString"
_SlbCurSslCfgCertsName_Object = MibTableColumn
slbCurSslCfgCertsName = _SlbCurSslCfgCertsName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 1, 1, 3),
    _SlbCurSslCfgCertsName_Type()
)
slbCurSslCfgCertsName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgCertsName.setStatus("current")


class _SlbCurSslCfgCertsKeySize_Type(Integer32):
    """Custom type slbCurSslCfgCertsKeySize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("ks1024", 2),
          ("ks2048", 3),
          ("ks4096", 4),
          ("ks512", 1),
          ("unknown", 6))
    )


_SlbCurSslCfgCertsKeySize_Type.__name__ = "Integer32"
_SlbCurSslCfgCertsKeySize_Object = MibTableColumn
slbCurSslCfgCertsKeySize = _SlbCurSslCfgCertsKeySize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 1, 1, 4),
    _SlbCurSslCfgCertsKeySize_Type()
)
slbCurSslCfgCertsKeySize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgCertsKeySize.setStatus("current")
_SlbCurSslCfgCertsExpirty_Type = DisplayString
_SlbCurSslCfgCertsExpirty_Object = MibTableColumn
slbCurSslCfgCertsExpirty = _SlbCurSslCfgCertsExpirty_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 1, 1, 5),
    _SlbCurSslCfgCertsExpirty_Type()
)
slbCurSslCfgCertsExpirty.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgCertsExpirty.setStatus("current")


class _SlbCurSslCfgCertsCommonName_Type(DisplayString):
    """Custom type slbCurSslCfgCertsCommonName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 85),
    )


_SlbCurSslCfgCertsCommonName_Type.__name__ = "DisplayString"
_SlbCurSslCfgCertsCommonName_Object = MibTableColumn
slbCurSslCfgCertsCommonName = _SlbCurSslCfgCertsCommonName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 1, 1, 6),
    _SlbCurSslCfgCertsCommonName_Type()
)
slbCurSslCfgCertsCommonName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgCertsCommonName.setStatus("current")


class _SlbCurSslCfgCertsHashAlgo_Type(Integer32):
    """Custom type slbCurSslCfgCertsHashAlgo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("md5", 1),
          ("sha1", 2),
          ("sha256", 3),
          ("sha384", 4),
          ("sha512", 5),
          ("unknown", 6))
    )


_SlbCurSslCfgCertsHashAlgo_Type.__name__ = "Integer32"
_SlbCurSslCfgCertsHashAlgo_Object = MibTableColumn
slbCurSslCfgCertsHashAlgo = _SlbCurSslCfgCertsHashAlgo_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 1, 1, 7),
    _SlbCurSslCfgCertsHashAlgo_Type()
)
slbCurSslCfgCertsHashAlgo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgCertsHashAlgo.setStatus("current")


class _SlbCurSslCfgCertsCountryName_Type(DisplayString):
    """Custom type slbCurSslCfgCertsCountryName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 85),
    )


_SlbCurSslCfgCertsCountryName_Type.__name__ = "DisplayString"
_SlbCurSslCfgCertsCountryName_Object = MibTableColumn
slbCurSslCfgCertsCountryName = _SlbCurSslCfgCertsCountryName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 1, 1, 8),
    _SlbCurSslCfgCertsCountryName_Type()
)
slbCurSslCfgCertsCountryName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgCertsCountryName.setStatus("current")


class _SlbCurSslCfgCertsPrpvinceName_Type(DisplayString):
    """Custom type slbCurSslCfgCertsPrpvinceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 149),
    )


_SlbCurSslCfgCertsPrpvinceName_Type.__name__ = "DisplayString"
_SlbCurSslCfgCertsPrpvinceName_Object = MibTableColumn
slbCurSslCfgCertsPrpvinceName = _SlbCurSslCfgCertsPrpvinceName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 1, 1, 9),
    _SlbCurSslCfgCertsPrpvinceName_Type()
)
slbCurSslCfgCertsPrpvinceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgCertsPrpvinceName.setStatus("current")


class _SlbCurSslCfgCertsLocalityName_Type(DisplayString):
    """Custom type slbCurSslCfgCertsLocalityName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 149),
    )


_SlbCurSslCfgCertsLocalityName_Type.__name__ = "DisplayString"
_SlbCurSslCfgCertsLocalityName_Object = MibTableColumn
slbCurSslCfgCertsLocalityName = _SlbCurSslCfgCertsLocalityName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 1, 1, 10),
    _SlbCurSslCfgCertsLocalityName_Type()
)
slbCurSslCfgCertsLocalityName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgCertsLocalityName.setStatus("current")


class _SlbCurSslCfgCertsOrganizationName_Type(DisplayString):
    """Custom type slbCurSslCfgCertsOrganizationName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 85),
    )


_SlbCurSslCfgCertsOrganizationName_Type.__name__ = "DisplayString"
_SlbCurSslCfgCertsOrganizationName_Object = MibTableColumn
slbCurSslCfgCertsOrganizationName = _SlbCurSslCfgCertsOrganizationName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 1, 1, 11),
    _SlbCurSslCfgCertsOrganizationName_Type()
)
slbCurSslCfgCertsOrganizationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgCertsOrganizationName.setStatus("current")


class _SlbCurSslCfgCertsOrganizationUnitName_Type(DisplayString):
    """Custom type slbCurSslCfgCertsOrganizationUnitName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 85),
    )


_SlbCurSslCfgCertsOrganizationUnitName_Type.__name__ = "DisplayString"
_SlbCurSslCfgCertsOrganizationUnitName_Object = MibTableColumn
slbCurSslCfgCertsOrganizationUnitName = _SlbCurSslCfgCertsOrganizationUnitName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 1, 1, 12),
    _SlbCurSslCfgCertsOrganizationUnitName_Type()
)
slbCurSslCfgCertsOrganizationUnitName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgCertsOrganizationUnitName.setStatus("current")


class _SlbCurSslCfgCertsEMail_Type(DisplayString):
    """Custom type slbCurSslCfgCertsEMail based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 149),
    )


_SlbCurSslCfgCertsEMail_Type.__name__ = "DisplayString"
_SlbCurSslCfgCertsEMail_Object = MibTableColumn
slbCurSslCfgCertsEMail = _SlbCurSslCfgCertsEMail_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 1, 1, 13),
    _SlbCurSslCfgCertsEMail_Type()
)
slbCurSslCfgCertsEMail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgCertsEMail.setStatus("current")


class _SlbCurSslCfgCertsValidityPeriod_Type(Integer32):
    """Custom type slbCurSslCfgCertsValidityPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3650),
    )


_SlbCurSslCfgCertsValidityPeriod_Type.__name__ = "Integer32"
_SlbCurSslCfgCertsValidityPeriod_Object = MibTableColumn
slbCurSslCfgCertsValidityPeriod = _SlbCurSslCfgCertsValidityPeriod_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 1, 1, 14),
    _SlbCurSslCfgCertsValidityPeriod_Type()
)
slbCurSslCfgCertsValidityPeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgCertsValidityPeriod.setStatus("current")


class _SlbCurSslCfgCertsStatus_Type(Integer32):
    """Custom type slbCurSslCfgCertsStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("generated", 1),
          ("notGenerated", 2))
    )


_SlbCurSslCfgCertsStatus_Type.__name__ = "Integer32"
_SlbCurSslCfgCertsStatus_Object = MibTableColumn
slbCurSslCfgCertsStatus = _SlbCurSslCfgCertsStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 1, 1, 15),
    _SlbCurSslCfgCertsStatus_Type()
)
slbCurSslCfgCertsStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgCertsStatus.setStatus("current")
_SlbNewSslCfgCertsTable_Object = MibTable
slbNewSslCfgCertsTable = _SlbNewSslCfgCertsTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 2)
)
if mibBuilder.loadTexts:
    slbNewSslCfgCertsTable.setStatus("current")
_SlbNewSslCfgCertsEntry_Object = MibTableRow
slbNewSslCfgCertsEntry = _SlbNewSslCfgCertsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 2, 1)
)
slbNewSslCfgCertsEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewSslCfgCertsID"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewSslCfgCertsType"),
)
if mibBuilder.loadTexts:
    slbNewSslCfgCertsEntry.setStatus("current")


class _SlbNewSslCfgCertsID_Type(DisplayString):
    """Custom type slbNewSslCfgCertsID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewSslCfgCertsID_Type.__name__ = "DisplayString"
_SlbNewSslCfgCertsID_Object = MibTableColumn
slbNewSslCfgCertsID = _SlbNewSslCfgCertsID_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 2, 1, 1),
    _SlbNewSslCfgCertsID_Type()
)
slbNewSslCfgCertsID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsID.setStatus("current")


class _SlbNewSslCfgCertsType_Type(Integer32):
    """Custom type slbNewSslCfgCertsType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("certificateRequest", 2),
          ("intermediateCertificate", 5),
          ("key", 1),
          ("serverCertificate", 3),
          ("trustedCertificate", 4))
    )


_SlbNewSslCfgCertsType_Type.__name__ = "Integer32"
_SlbNewSslCfgCertsType_Object = MibTableColumn
slbNewSslCfgCertsType = _SlbNewSslCfgCertsType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 2, 1, 2),
    _SlbNewSslCfgCertsType_Type()
)
slbNewSslCfgCertsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsType.setStatus("current")


class _SlbNewSslCfgCertsName_Type(DisplayString):
    """Custom type slbNewSslCfgCertsName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewSslCfgCertsName_Type.__name__ = "DisplayString"
_SlbNewSslCfgCertsName_Object = MibTableColumn
slbNewSslCfgCertsName = _SlbNewSslCfgCertsName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 2, 1, 3),
    _SlbNewSslCfgCertsName_Type()
)
slbNewSslCfgCertsName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsName.setStatus("current")


class _SlbNewSslCfgCertsKeySize_Type(Integer32):
    """Custom type slbNewSslCfgCertsKeySize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("ks1024", 2),
          ("ks2048", 3),
          ("ks4096", 4),
          ("ks512", 1),
          ("unknown", 6))
    )


_SlbNewSslCfgCertsKeySize_Type.__name__ = "Integer32"
_SlbNewSslCfgCertsKeySize_Object = MibTableColumn
slbNewSslCfgCertsKeySize = _SlbNewSslCfgCertsKeySize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 2, 1, 4),
    _SlbNewSslCfgCertsKeySize_Type()
)
slbNewSslCfgCertsKeySize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsKeySize.setStatus("current")
_SlbNewSslCfgCertsExpirty_Type = DisplayString
_SlbNewSslCfgCertsExpirty_Object = MibTableColumn
slbNewSslCfgCertsExpirty = _SlbNewSslCfgCertsExpirty_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 2, 1, 5),
    _SlbNewSslCfgCertsExpirty_Type()
)
slbNewSslCfgCertsExpirty.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsExpirty.setStatus("current")


class _SlbNewSslCfgCertsCommonName_Type(DisplayString):
    """Custom type slbNewSslCfgCertsCommonName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 85),
    )


_SlbNewSslCfgCertsCommonName_Type.__name__ = "DisplayString"
_SlbNewSslCfgCertsCommonName_Object = MibTableColumn
slbNewSslCfgCertsCommonName = _SlbNewSslCfgCertsCommonName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 2, 1, 6),
    _SlbNewSslCfgCertsCommonName_Type()
)
slbNewSslCfgCertsCommonName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsCommonName.setStatus("current")


class _SlbNewSslCfgCertsHashAlgo_Type(Integer32):
    """Custom type slbNewSslCfgCertsHashAlgo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("md5", 1),
          ("sha1", 2),
          ("sha256", 3),
          ("sha384", 4),
          ("sha512", 5),
          ("unknown", 6))
    )


_SlbNewSslCfgCertsHashAlgo_Type.__name__ = "Integer32"
_SlbNewSslCfgCertsHashAlgo_Object = MibTableColumn
slbNewSslCfgCertsHashAlgo = _SlbNewSslCfgCertsHashAlgo_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 2, 1, 7),
    _SlbNewSslCfgCertsHashAlgo_Type()
)
slbNewSslCfgCertsHashAlgo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsHashAlgo.setStatus("current")


class _SlbNewSslCfgCertsCountryName_Type(DisplayString):
    """Custom type slbNewSslCfgCertsCountryName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 85),
    )


_SlbNewSslCfgCertsCountryName_Type.__name__ = "DisplayString"
_SlbNewSslCfgCertsCountryName_Object = MibTableColumn
slbNewSslCfgCertsCountryName = _SlbNewSslCfgCertsCountryName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 2, 1, 8),
    _SlbNewSslCfgCertsCountryName_Type()
)
slbNewSslCfgCertsCountryName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsCountryName.setStatus("current")


class _SlbNewSslCfgCertsPrpvinceName_Type(DisplayString):
    """Custom type slbNewSslCfgCertsPrpvinceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 149),
    )


_SlbNewSslCfgCertsPrpvinceName_Type.__name__ = "DisplayString"
_SlbNewSslCfgCertsPrpvinceName_Object = MibTableColumn
slbNewSslCfgCertsPrpvinceName = _SlbNewSslCfgCertsPrpvinceName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 2, 1, 9),
    _SlbNewSslCfgCertsPrpvinceName_Type()
)
slbNewSslCfgCertsPrpvinceName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsPrpvinceName.setStatus("current")


class _SlbNewSslCfgCertsLocalityName_Type(DisplayString):
    """Custom type slbNewSslCfgCertsLocalityName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 149),
    )


_SlbNewSslCfgCertsLocalityName_Type.__name__ = "DisplayString"
_SlbNewSslCfgCertsLocalityName_Object = MibTableColumn
slbNewSslCfgCertsLocalityName = _SlbNewSslCfgCertsLocalityName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 2, 1, 10),
    _SlbNewSslCfgCertsLocalityName_Type()
)
slbNewSslCfgCertsLocalityName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsLocalityName.setStatus("current")


class _SlbNewSslCfgCertsOrganizationName_Type(DisplayString):
    """Custom type slbNewSslCfgCertsOrganizationName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 85),
    )


_SlbNewSslCfgCertsOrganizationName_Type.__name__ = "DisplayString"
_SlbNewSslCfgCertsOrganizationName_Object = MibTableColumn
slbNewSslCfgCertsOrganizationName = _SlbNewSslCfgCertsOrganizationName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 2, 1, 11),
    _SlbNewSslCfgCertsOrganizationName_Type()
)
slbNewSslCfgCertsOrganizationName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsOrganizationName.setStatus("current")


class _SlbNewSslCfgCertsOrganizationUnitName_Type(DisplayString):
    """Custom type slbNewSslCfgCertsOrganizationUnitName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 85),
    )


_SlbNewSslCfgCertsOrganizationUnitName_Type.__name__ = "DisplayString"
_SlbNewSslCfgCertsOrganizationUnitName_Object = MibTableColumn
slbNewSslCfgCertsOrganizationUnitName = _SlbNewSslCfgCertsOrganizationUnitName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 2, 1, 12),
    _SlbNewSslCfgCertsOrganizationUnitName_Type()
)
slbNewSslCfgCertsOrganizationUnitName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsOrganizationUnitName.setStatus("current")


class _SlbNewSslCfgCertsEMail_Type(DisplayString):
    """Custom type slbNewSslCfgCertsEMail based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 149),
    )


_SlbNewSslCfgCertsEMail_Type.__name__ = "DisplayString"
_SlbNewSslCfgCertsEMail_Object = MibTableColumn
slbNewSslCfgCertsEMail = _SlbNewSslCfgCertsEMail_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 2, 1, 13),
    _SlbNewSslCfgCertsEMail_Type()
)
slbNewSslCfgCertsEMail.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsEMail.setStatus("current")


class _SlbNewSslCfgCertsValidityPeriod_Type(Integer32):
    """Custom type slbNewSslCfgCertsValidityPeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3650),
    )


_SlbNewSslCfgCertsValidityPeriod_Type.__name__ = "Integer32"
_SlbNewSslCfgCertsValidityPeriod_Object = MibTableColumn
slbNewSslCfgCertsValidityPeriod = _SlbNewSslCfgCertsValidityPeriod_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 2, 1, 14),
    _SlbNewSslCfgCertsValidityPeriod_Type()
)
slbNewSslCfgCertsValidityPeriod.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsValidityPeriod.setStatus("current")


class _SlbNewSslCfgCertsDelete_Type(Integer32):
    """Custom type slbNewSslCfgCertsDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewSslCfgCertsDelete_Type.__name__ = "Integer32"
_SlbNewSslCfgCertsDelete_Object = MibTableColumn
slbNewSslCfgCertsDelete = _SlbNewSslCfgCertsDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 2, 1, 15),
    _SlbNewSslCfgCertsDelete_Type()
)
slbNewSslCfgCertsDelete.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsDelete.setStatus("current")


class _SlbNewSslCfgCertsGenerate_Type(Integer32):
    """Custom type slbNewSslCfgCertsGenerate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("generate", 2),
          ("other", 1))
    )


_SlbNewSslCfgCertsGenerate_Type.__name__ = "Integer32"
_SlbNewSslCfgCertsGenerate_Object = MibTableColumn
slbNewSslCfgCertsGenerate = _SlbNewSslCfgCertsGenerate_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 2, 1, 16),
    _SlbNewSslCfgCertsGenerate_Type()
)
slbNewSslCfgCertsGenerate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsGenerate.setStatus("current")


class _SlbNewSslCfgCertsStatus_Type(Integer32):
    """Custom type slbNewSslCfgCertsStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("generated", 1),
          ("inProgress", 3),
          ("notGenerated", 2))
    )


_SlbNewSslCfgCertsStatus_Type.__name__ = "Integer32"
_SlbNewSslCfgCertsStatus_Object = MibTableColumn
slbNewSslCfgCertsStatus = _SlbNewSslCfgCertsStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 2, 1, 17),
    _SlbNewSslCfgCertsStatus_Type()
)
slbNewSslCfgCertsStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsStatus.setStatus("current")
_SlbSslCfgCertsDefaults_ObjectIdentity = ObjectIdentity
slbSslCfgCertsDefaults = _SlbSslCfgCertsDefaults_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 3)
)


class _SlbCurSslCfgCertsDefaultsCountryName_Type(DisplayString):
    """Custom type slbCurSslCfgCertsDefaultsCountryName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(2, 2),
    )


_SlbCurSslCfgCertsDefaultsCountryName_Type.__name__ = "DisplayString"
_SlbCurSslCfgCertsDefaultsCountryName_Object = MibScalar
slbCurSslCfgCertsDefaultsCountryName = _SlbCurSslCfgCertsDefaultsCountryName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 3, 1),
    _SlbCurSslCfgCertsDefaultsCountryName_Type()
)
slbCurSslCfgCertsDefaultsCountryName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgCertsDefaultsCountryName.setStatus("current")


class _SlbNewSslCfgCertsDefaultsCountryName_Type(DisplayString):
    """Custom type slbNewSslCfgCertsDefaultsCountryName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(2, 2),
    )


_SlbNewSslCfgCertsDefaultsCountryName_Type.__name__ = "DisplayString"
_SlbNewSslCfgCertsDefaultsCountryName_Object = MibScalar
slbNewSslCfgCertsDefaultsCountryName = _SlbNewSslCfgCertsDefaultsCountryName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 3, 2),
    _SlbNewSslCfgCertsDefaultsCountryName_Type()
)
slbNewSslCfgCertsDefaultsCountryName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsDefaultsCountryName.setStatus("current")


class _SlbCurSslCfgCertsDefaultsProvinceName_Type(DisplayString):
    """Custom type slbCurSslCfgCertsDefaultsProvinceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 149),
    )


_SlbCurSslCfgCertsDefaultsProvinceName_Type.__name__ = "DisplayString"
_SlbCurSslCfgCertsDefaultsProvinceName_Object = MibScalar
slbCurSslCfgCertsDefaultsProvinceName = _SlbCurSslCfgCertsDefaultsProvinceName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 3, 3),
    _SlbCurSslCfgCertsDefaultsProvinceName_Type()
)
slbCurSslCfgCertsDefaultsProvinceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgCertsDefaultsProvinceName.setStatus("current")


class _SlbNewSslCfgCertsDefaultsProvinceName_Type(DisplayString):
    """Custom type slbNewSslCfgCertsDefaultsProvinceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 149),
    )


_SlbNewSslCfgCertsDefaultsProvinceName_Type.__name__ = "DisplayString"
_SlbNewSslCfgCertsDefaultsProvinceName_Object = MibScalar
slbNewSslCfgCertsDefaultsProvinceName = _SlbNewSslCfgCertsDefaultsProvinceName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 3, 4),
    _SlbNewSslCfgCertsDefaultsProvinceName_Type()
)
slbNewSslCfgCertsDefaultsProvinceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsDefaultsProvinceName.setStatus("current")


class _SlbCurSslCfgCertsDefaultsLocallyName_Type(DisplayString):
    """Custom type slbCurSslCfgCertsDefaultsLocallyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 149),
    )


_SlbCurSslCfgCertsDefaultsLocallyName_Type.__name__ = "DisplayString"
_SlbCurSslCfgCertsDefaultsLocallyName_Object = MibScalar
slbCurSslCfgCertsDefaultsLocallyName = _SlbCurSslCfgCertsDefaultsLocallyName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 3, 5),
    _SlbCurSslCfgCertsDefaultsLocallyName_Type()
)
slbCurSslCfgCertsDefaultsLocallyName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgCertsDefaultsLocallyName.setStatus("current")


class _SlbNewSslCfgCertsDefaultsLocallyName_Type(DisplayString):
    """Custom type slbNewSslCfgCertsDefaultsLocallyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 149),
    )


_SlbNewSslCfgCertsDefaultsLocallyName_Type.__name__ = "DisplayString"
_SlbNewSslCfgCertsDefaultsLocallyName_Object = MibScalar
slbNewSslCfgCertsDefaultsLocallyName = _SlbNewSslCfgCertsDefaultsLocallyName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 3, 6),
    _SlbNewSslCfgCertsDefaultsLocallyName_Type()
)
slbNewSslCfgCertsDefaultsLocallyName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsDefaultsLocallyName.setStatus("current")


class _SlbCurSslCfgCertsDefaultsOrganizationName_Type(DisplayString):
    """Custom type slbCurSslCfgCertsDefaultsOrganizationName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 85),
    )


_SlbCurSslCfgCertsDefaultsOrganizationName_Type.__name__ = "DisplayString"
_SlbCurSslCfgCertsDefaultsOrganizationName_Object = MibScalar
slbCurSslCfgCertsDefaultsOrganizationName = _SlbCurSslCfgCertsDefaultsOrganizationName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 3, 7),
    _SlbCurSslCfgCertsDefaultsOrganizationName_Type()
)
slbCurSslCfgCertsDefaultsOrganizationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgCertsDefaultsOrganizationName.setStatus("current")


class _SlbNewSslCfgCertsDefaultsOrganizationName_Type(DisplayString):
    """Custom type slbNewSslCfgCertsDefaultsOrganizationName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 85),
    )


_SlbNewSslCfgCertsDefaultsOrganizationName_Type.__name__ = "DisplayString"
_SlbNewSslCfgCertsDefaultsOrganizationName_Object = MibScalar
slbNewSslCfgCertsDefaultsOrganizationName = _SlbNewSslCfgCertsDefaultsOrganizationName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 3, 8),
    _SlbNewSslCfgCertsDefaultsOrganizationName_Type()
)
slbNewSslCfgCertsDefaultsOrganizationName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsDefaultsOrganizationName.setStatus("current")


class _SlbCurSslCfgCertsDefaultsOrganizationUnitName_Type(DisplayString):
    """Custom type slbCurSslCfgCertsDefaultsOrganizationUnitName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 85),
    )


_SlbCurSslCfgCertsDefaultsOrganizationUnitName_Type.__name__ = "DisplayString"
_SlbCurSslCfgCertsDefaultsOrganizationUnitName_Object = MibScalar
slbCurSslCfgCertsDefaultsOrganizationUnitName = _SlbCurSslCfgCertsDefaultsOrganizationUnitName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 3, 9),
    _SlbCurSslCfgCertsDefaultsOrganizationUnitName_Type()
)
slbCurSslCfgCertsDefaultsOrganizationUnitName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgCertsDefaultsOrganizationUnitName.setStatus("current")


class _SlbNewSslCfgCertsDefaultsOrganizationUnitName_Type(DisplayString):
    """Custom type slbNewSslCfgCertsDefaultsOrganizationUnitName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 85),
    )


_SlbNewSslCfgCertsDefaultsOrganizationUnitName_Type.__name__ = "DisplayString"
_SlbNewSslCfgCertsDefaultsOrganizationUnitName_Object = MibScalar
slbNewSslCfgCertsDefaultsOrganizationUnitName = _SlbNewSslCfgCertsDefaultsOrganizationUnitName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 3, 10),
    _SlbNewSslCfgCertsDefaultsOrganizationUnitName_Type()
)
slbNewSslCfgCertsDefaultsOrganizationUnitName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsDefaultsOrganizationUnitName.setStatus("current")


class _SlbCurSslCfgCertsDefaultsEMail_Type(DisplayString):
    """Custom type slbCurSslCfgCertsDefaultsEMail based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 149),
    )


_SlbCurSslCfgCertsDefaultsEMail_Type.__name__ = "DisplayString"
_SlbCurSslCfgCertsDefaultsEMail_Object = MibScalar
slbCurSslCfgCertsDefaultsEMail = _SlbCurSslCfgCertsDefaultsEMail_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 3, 11),
    _SlbCurSslCfgCertsDefaultsEMail_Type()
)
slbCurSslCfgCertsDefaultsEMail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgCertsDefaultsEMail.setStatus("current")


class _SlbNewSslCfgCertsDefaultsEMail_Type(DisplayString):
    """Custom type slbNewSslCfgCertsDefaultsEMail based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 149),
    )


_SlbNewSslCfgCertsDefaultsEMail_Type.__name__ = "DisplayString"
_SlbNewSslCfgCertsDefaultsEMail_Object = MibScalar
slbNewSslCfgCertsDefaultsEMail = _SlbNewSslCfgCertsDefaultsEMail_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 3, 12),
    _SlbNewSslCfgCertsDefaultsEMail_Type()
)
slbNewSslCfgCertsDefaultsEMail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewSslCfgCertsDefaultsEMail.setStatus("current")
_SlbCurSslCfgGroupsTable_Object = MibTable
slbCurSslCfgGroupsTable = _SlbCurSslCfgGroupsTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 4)
)
if mibBuilder.loadTexts:
    slbCurSslCfgGroupsTable.setStatus("current")
_SlbCurSslCfgGroupsEntry_Object = MibTableRow
slbCurSslCfgGroupsEntry = _SlbCurSslCfgGroupsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 4, 1)
)
slbCurSslCfgGroupsEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurSslCfgGroupsID"),
)
if mibBuilder.loadTexts:
    slbCurSslCfgGroupsEntry.setStatus("current")


class _SlbCurSslCfgGroupsID_Type(DisplayString):
    """Custom type slbCurSslCfgGroupsID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurSslCfgGroupsID_Type.__name__ = "DisplayString"
_SlbCurSslCfgGroupsID_Object = MibTableColumn
slbCurSslCfgGroupsID = _SlbCurSslCfgGroupsID_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 4, 1, 1),
    _SlbCurSslCfgGroupsID_Type()
)
slbCurSslCfgGroupsID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgGroupsID.setStatus("current")


class _SlbCurSslCfgGroupsName_Type(DisplayString):
    """Custom type slbCurSslCfgGroupsName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurSslCfgGroupsName_Type.__name__ = "DisplayString"
_SlbCurSslCfgGroupsName_Object = MibTableColumn
slbCurSslCfgGroupsName = _SlbCurSslCfgGroupsName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 4, 1, 2),
    _SlbCurSslCfgGroupsName_Type()
)
slbCurSslCfgGroupsName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgGroupsName.setStatus("current")


class _SlbCurSslCfgGroupsType_Type(Integer32):
    """Custom type slbCurSslCfgGroupsType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("intermediateCertificate", 5),
          ("serverCertificate", 3),
          ("trustedCertificate", 4))
    )


_SlbCurSslCfgGroupsType_Type.__name__ = "Integer32"
_SlbCurSslCfgGroupsType_Object = MibTableColumn
slbCurSslCfgGroupsType = _SlbCurSslCfgGroupsType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 4, 1, 3),
    _SlbCurSslCfgGroupsType_Type()
)
slbCurSslCfgGroupsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgGroupsType.setStatus("current")


class _SlbCurSslCfgGroupsDefaultCert_Type(DisplayString):
    """Custom type slbCurSslCfgGroupsDefaultCert based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurSslCfgGroupsDefaultCert_Type.__name__ = "DisplayString"
_SlbCurSslCfgGroupsDefaultCert_Object = MibTableColumn
slbCurSslCfgGroupsDefaultCert = _SlbCurSslCfgGroupsDefaultCert_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 4, 1, 4),
    _SlbCurSslCfgGroupsDefaultCert_Type()
)
slbCurSslCfgGroupsDefaultCert.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgGroupsDefaultCert.setStatus("current")
_SlbCurSslCfgGroupsCertBmap_Type = OctetString
_SlbCurSslCfgGroupsCertBmap_Object = MibTableColumn
slbCurSslCfgGroupsCertBmap = _SlbCurSslCfgGroupsCertBmap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 4, 1, 5),
    _SlbCurSslCfgGroupsCertBmap_Type()
)
slbCurSslCfgGroupsCertBmap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurSslCfgGroupsCertBmap.setStatus("current")
_SlbNewSslCfgGroupsTable_Object = MibTable
slbNewSslCfgGroupsTable = _SlbNewSslCfgGroupsTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 5)
)
if mibBuilder.loadTexts:
    slbNewSslCfgGroupsTable.setStatus("current")
_SlbNewSslCfgGroupsEntry_Object = MibTableRow
slbNewSslCfgGroupsEntry = _SlbNewSslCfgGroupsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 5, 1)
)
slbNewSslCfgGroupsEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewSslCfgGroupsID"),
)
if mibBuilder.loadTexts:
    slbNewSslCfgGroupsEntry.setStatus("current")


class _SlbNewSslCfgGroupsID_Type(DisplayString):
    """Custom type slbNewSslCfgGroupsID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewSslCfgGroupsID_Type.__name__ = "DisplayString"
_SlbNewSslCfgGroupsID_Object = MibTableColumn
slbNewSslCfgGroupsID = _SlbNewSslCfgGroupsID_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 5, 1, 1),
    _SlbNewSslCfgGroupsID_Type()
)
slbNewSslCfgGroupsID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewSslCfgGroupsID.setStatus("current")


class _SlbNewSslCfgGroupsName_Type(DisplayString):
    """Custom type slbNewSslCfgGroupsName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewSslCfgGroupsName_Type.__name__ = "DisplayString"
_SlbNewSslCfgGroupsName_Object = MibTableColumn
slbNewSslCfgGroupsName = _SlbNewSslCfgGroupsName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 5, 1, 2),
    _SlbNewSslCfgGroupsName_Type()
)
slbNewSslCfgGroupsName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewSslCfgGroupsName.setStatus("current")


class _SlbNewSslCfgGroupsType_Type(Integer32):
    """Custom type slbNewSslCfgGroupsType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("intermediateCertificate", 5),
          ("serverCertificate", 3),
          ("trustedCertificate", 4))
    )


_SlbNewSslCfgGroupsType_Type.__name__ = "Integer32"
_SlbNewSslCfgGroupsType_Object = MibTableColumn
slbNewSslCfgGroupsType = _SlbNewSslCfgGroupsType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 5, 1, 3),
    _SlbNewSslCfgGroupsType_Type()
)
slbNewSslCfgGroupsType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewSslCfgGroupsType.setStatus("current")


class _SlbNewSslCfgGroupsDelete_Type(Integer32):
    """Custom type slbNewSslCfgGroupsDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewSslCfgGroupsDelete_Type.__name__ = "Integer32"
_SlbNewSslCfgGroupsDelete_Object = MibTableColumn
slbNewSslCfgGroupsDelete = _SlbNewSslCfgGroupsDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 5, 1, 4),
    _SlbNewSslCfgGroupsDelete_Type()
)
slbNewSslCfgGroupsDelete.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewSslCfgGroupsDelete.setStatus("current")


class _SlbNewSslCfgGroupsDefaultCert_Type(DisplayString):
    """Custom type slbNewSslCfgGroupsDefaultCert based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewSslCfgGroupsDefaultCert_Type.__name__ = "DisplayString"
_SlbNewSslCfgGroupsDefaultCert_Object = MibTableColumn
slbNewSslCfgGroupsDefaultCert = _SlbNewSslCfgGroupsDefaultCert_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 5, 1, 5),
    _SlbNewSslCfgGroupsDefaultCert_Type()
)
slbNewSslCfgGroupsDefaultCert.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewSslCfgGroupsDefaultCert.setStatus("current")


class _SlbNewSslCfgGroupsAddCert_Type(DisplayString):
    """Custom type slbNewSslCfgGroupsAddCert based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewSslCfgGroupsAddCert_Type.__name__ = "DisplayString"
_SlbNewSslCfgGroupsAddCert_Object = MibTableColumn
slbNewSslCfgGroupsAddCert = _SlbNewSslCfgGroupsAddCert_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 5, 1, 6),
    _SlbNewSslCfgGroupsAddCert_Type()
)
slbNewSslCfgGroupsAddCert.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewSslCfgGroupsAddCert.setStatus("current")


class _SlbNewSslCfgGroupsRemCert_Type(DisplayString):
    """Custom type slbNewSslCfgGroupsRemCert based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewSslCfgGroupsRemCert_Type.__name__ = "DisplayString"
_SlbNewSslCfgGroupsRemCert_Object = MibTableColumn
slbNewSslCfgGroupsRemCert = _SlbNewSslCfgGroupsRemCert_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 5, 1, 7),
    _SlbNewSslCfgGroupsRemCert_Type()
)
slbNewSslCfgGroupsRemCert.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbNewSslCfgGroupsRemCert.setStatus("current")
_SlbNewSslCfgGroupsCertBmap_Type = OctetString
_SlbNewSslCfgGroupsCertBmap_Object = MibTableColumn
slbNewSslCfgGroupsCertBmap = _SlbNewSslCfgGroupsCertBmap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 19, 5, 5, 1, 8),
    _SlbNewSslCfgGroupsCertBmap_Type()
)
slbNewSslCfgGroupsCertBmap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewSslCfgGroupsCertBmap.setStatus("current")
_SapCfg_ObjectIdentity = ObjectIdentity
sapCfg = _SapCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20)
)
_SlbSapAslrTableMaxSize_Type = Integer32
_SlbSapAslrTableMaxSize_Object = MibScalar
slbSapAslrTableMaxSize = _SlbSapAslrTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 1),
    _SlbSapAslrTableMaxSize_Type()
)
slbSapAslrTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbSapAslrTableMaxSize.setStatus("current")
_SlbCurCfgSapAslrTable_Object = MibTable
slbCurCfgSapAslrTable = _SlbCurCfgSapAslrTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 2)
)
if mibBuilder.loadTexts:
    slbCurCfgSapAslrTable.setStatus("current")
_SlbCurCfgSapAslrEntry_Object = MibTableRow
slbCurCfgSapAslrEntry = _SlbCurCfgSapAslrEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 2, 1)
)
slbCurCfgSapAslrEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgSapAslrIndex"),
)
if mibBuilder.loadTexts:
    slbCurCfgSapAslrEntry.setStatus("current")
_SlbCurCfgSapAslrIndex_Type = Integer32
_SlbCurCfgSapAslrIndex_Object = MibTableColumn
slbCurCfgSapAslrIndex = _SlbCurCfgSapAslrIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 2, 1, 1),
    _SlbCurCfgSapAslrIndex_Type()
)
slbCurCfgSapAslrIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSapAslrIndex.setStatus("current")
_SlbCurCfgSapAslrIpAddr_Type = IpAddress
_SlbCurCfgSapAslrIpAddr_Object = MibTableColumn
slbCurCfgSapAslrIpAddr = _SlbCurCfgSapAslrIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 2, 1, 2),
    _SlbCurCfgSapAslrIpAddr_Type()
)
slbCurCfgSapAslrIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSapAslrIpAddr.setStatus("current")


class _SlbCurCfgSapAslrIpv6Addr_Type(DisplayString):
    """Custom type slbCurCfgSapAslrIpv6Addr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SlbCurCfgSapAslrIpv6Addr_Type.__name__ = "DisplayString"
_SlbCurCfgSapAslrIpv6Addr_Object = MibTableColumn
slbCurCfgSapAslrIpv6Addr = _SlbCurCfgSapAslrIpv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 2, 1, 3),
    _SlbCurCfgSapAslrIpv6Addr_Type()
)
slbCurCfgSapAslrIpv6Addr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSapAslrIpv6Addr.setStatus("current")


class _SlbCurCfgSapAslrIpVer_Type(Integer32):
    """Custom type slbCurCfgSapAslrIpVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_SlbCurCfgSapAslrIpVer_Type.__name__ = "Integer32"
_SlbCurCfgSapAslrIpVer_Object = MibTableColumn
slbCurCfgSapAslrIpVer = _SlbCurCfgSapAslrIpVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 2, 1, 4),
    _SlbCurCfgSapAslrIpVer_Type()
)
slbCurCfgSapAslrIpVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSapAslrIpVer.setStatus("current")


class _SlbCurCfgSapAslrPortNum_Type(Integer32):
    """Custom type slbCurCfgSapAslrPortNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 65534),
    )


_SlbCurCfgSapAslrPortNum_Type.__name__ = "Integer32"
_SlbCurCfgSapAslrPortNum_Object = MibTableColumn
slbCurCfgSapAslrPortNum = _SlbCurCfgSapAslrPortNum_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 2, 1, 5),
    _SlbCurCfgSapAslrPortNum_Type()
)
slbCurCfgSapAslrPortNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSapAslrPortNum.setStatus("current")
_SlbCurCfgSapAslrVipAddr_Type = IpAddress
_SlbCurCfgSapAslrVipAddr_Object = MibTableColumn
slbCurCfgSapAslrVipAddr = _SlbCurCfgSapAslrVipAddr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 2, 1, 6),
    _SlbCurCfgSapAslrVipAddr_Type()
)
slbCurCfgSapAslrVipAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSapAslrVipAddr.setStatus("current")


class _SlbCurCfgSapAslrVipv6Addr_Type(DisplayString):
    """Custom type slbCurCfgSapAslrVipv6Addr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SlbCurCfgSapAslrVipv6Addr_Type.__name__ = "DisplayString"
_SlbCurCfgSapAslrVipv6Addr_Object = MibTableColumn
slbCurCfgSapAslrVipv6Addr = _SlbCurCfgSapAslrVipv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 2, 1, 7),
    _SlbCurCfgSapAslrVipv6Addr_Type()
)
slbCurCfgSapAslrVipv6Addr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSapAslrVipv6Addr.setStatus("current")


class _SlbCurCfgSapAslrVipIpVer_Type(Integer32):
    """Custom type slbCurCfgSapAslrVipIpVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_SlbCurCfgSapAslrVipIpVer_Type.__name__ = "Integer32"
_SlbCurCfgSapAslrVipIpVer_Object = MibTableColumn
slbCurCfgSapAslrVipIpVer = _SlbCurCfgSapAslrVipIpVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 2, 1, 8),
    _SlbCurCfgSapAslrVipIpVer_Type()
)
slbCurCfgSapAslrVipIpVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSapAslrVipIpVer.setStatus("current")


class _SlbCurCfgSapAslrInterval_Type(Integer32):
    """Custom type slbCurCfgSapAslrInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_SlbCurCfgSapAslrInterval_Type.__name__ = "Integer32"
_SlbCurCfgSapAslrInterval_Object = MibTableColumn
slbCurCfgSapAslrInterval = _SlbCurCfgSapAslrInterval_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 2, 1, 9),
    _SlbCurCfgSapAslrInterval_Type()
)
slbCurCfgSapAslrInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSapAslrInterval.setStatus("current")


class _SlbCurCfgSapAslrState_Type(Integer32):
    """Custom type slbCurCfgSapAslrState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgSapAslrState_Type.__name__ = "Integer32"
_SlbCurCfgSapAslrState_Object = MibTableColumn
slbCurCfgSapAslrState = _SlbCurCfgSapAslrState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 2, 1, 10),
    _SlbCurCfgSapAslrState_Type()
)
slbCurCfgSapAslrState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSapAslrState.setStatus("current")


class _SlbCurCfgSapAslrName_Type(DisplayString):
    """Custom type slbCurCfgSapAslrName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurCfgSapAslrName_Type.__name__ = "DisplayString"
_SlbCurCfgSapAslrName_Object = MibTableColumn
slbCurCfgSapAslrName = _SlbCurCfgSapAslrName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 2, 1, 11),
    _SlbCurCfgSapAslrName_Type()
)
slbCurCfgSapAslrName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSapAslrName.setStatus("current")


class _SlbCurCfgSapAslrLastAct_Type(DisplayString):
    """Custom type slbCurCfgSapAslrLastAct based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbCurCfgSapAslrLastAct_Type.__name__ = "DisplayString"
_SlbCurCfgSapAslrLastAct_Object = MibTableColumn
slbCurCfgSapAslrLastAct = _SlbCurCfgSapAslrLastAct_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 2, 1, 12),
    _SlbCurCfgSapAslrLastAct_Type()
)
slbCurCfgSapAslrLastAct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSapAslrLastAct.setStatus("current")


class _SlbCurCfgSapAslrAutoConfig_Type(Integer32):
    """Custom type slbCurCfgSapAslrAutoConfig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("basic", 1),
          ("full", 2))
    )


_SlbCurCfgSapAslrAutoConfig_Type.__name__ = "Integer32"
_SlbCurCfgSapAslrAutoConfig_Object = MibTableColumn
slbCurCfgSapAslrAutoConfig = _SlbCurCfgSapAslrAutoConfig_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 2, 1, 13),
    _SlbCurCfgSapAslrAutoConfig_Type()
)
slbCurCfgSapAslrAutoConfig.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbCurCfgSapAslrAutoConfig.setStatus("current")
_SlbCurCfgSapAslrSessionInfo_Type = Integer32
_SlbCurCfgSapAslrSessionInfo_Object = MibTableColumn
slbCurCfgSapAslrSessionInfo = _SlbCurCfgSapAslrSessionInfo_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 2, 1, 14),
    _SlbCurCfgSapAslrSessionInfo_Type()
)
slbCurCfgSapAslrSessionInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSapAslrSessionInfo.setStatus("current")


class _SlbCurCfgSapAslrDelete_Type(Integer32):
    """Custom type slbCurCfgSapAslrDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbCurCfgSapAslrDelete_Type.__name__ = "Integer32"
_SlbCurCfgSapAslrDelete_Object = MibTableColumn
slbCurCfgSapAslrDelete = _SlbCurCfgSapAslrDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 2, 1, 15),
    _SlbCurCfgSapAslrDelete_Type()
)
slbCurCfgSapAslrDelete.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSapAslrDelete.setStatus("current")


class _SlbCurCfgSapAslrSignature_Type(DisplayString):
    """Custom type slbCurCfgSapAslrSignature based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SlbCurCfgSapAslrSignature_Type.__name__ = "DisplayString"
_SlbCurCfgSapAslrSignature_Object = MibTableColumn
slbCurCfgSapAslrSignature = _SlbCurCfgSapAslrSignature_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 2, 1, 16),
    _SlbCurCfgSapAslrSignature_Type()
)
slbCurCfgSapAslrSignature.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgSapAslrSignature.setStatus("current")


class _SlbCurCfgSapAslrServCert_Type(DisplayString):
    """Custom type slbCurCfgSapAslrServCert based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurCfgSapAslrServCert_Type.__name__ = "DisplayString"
_SlbCurCfgSapAslrServCert_Object = MibTableColumn
slbCurCfgSapAslrServCert = _SlbCurCfgSapAslrServCert_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 2, 1, 17),
    _SlbCurCfgSapAslrServCert_Type()
)
slbCurCfgSapAslrServCert.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbCurCfgSapAslrServCert.setStatus("current")
_SlbNewCfgSapAslrTable_Object = MibTable
slbNewCfgSapAslrTable = _SlbNewCfgSapAslrTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 3)
)
if mibBuilder.loadTexts:
    slbNewCfgSapAslrTable.setStatus("current")
_SlbNewCfgSapAslrEntry_Object = MibTableRow
slbNewCfgSapAslrEntry = _SlbNewCfgSapAslrEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 3, 1)
)
slbNewCfgSapAslrEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgSapAslrIndex"),
)
if mibBuilder.loadTexts:
    slbNewCfgSapAslrEntry.setStatus("current")
_SlbNewCfgSapAslrIndex_Type = Integer32
_SlbNewCfgSapAslrIndex_Object = MibTableColumn
slbNewCfgSapAslrIndex = _SlbNewCfgSapAslrIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 3, 1, 1),
    _SlbNewCfgSapAslrIndex_Type()
)
slbNewCfgSapAslrIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgSapAslrIndex.setStatus("current")
_SlbNewCfgSapAslrIpAddr_Type = IpAddress
_SlbNewCfgSapAslrIpAddr_Object = MibTableColumn
slbNewCfgSapAslrIpAddr = _SlbNewCfgSapAslrIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 3, 1, 2),
    _SlbNewCfgSapAslrIpAddr_Type()
)
slbNewCfgSapAslrIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgSapAslrIpAddr.setStatus("current")


class _SlbNewCfgSapAslrIpv6Addr_Type(DisplayString):
    """Custom type slbNewCfgSapAslrIpv6Addr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SlbNewCfgSapAslrIpv6Addr_Type.__name__ = "DisplayString"
_SlbNewCfgSapAslrIpv6Addr_Object = MibTableColumn
slbNewCfgSapAslrIpv6Addr = _SlbNewCfgSapAslrIpv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 3, 1, 3),
    _SlbNewCfgSapAslrIpv6Addr_Type()
)
slbNewCfgSapAslrIpv6Addr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgSapAslrIpv6Addr.setStatus("current")


class _SlbNewCfgSapAslrIpVer_Type(Integer32):
    """Custom type slbNewCfgSapAslrIpVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_SlbNewCfgSapAslrIpVer_Type.__name__ = "Integer32"
_SlbNewCfgSapAslrIpVer_Object = MibTableColumn
slbNewCfgSapAslrIpVer = _SlbNewCfgSapAslrIpVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 3, 1, 4),
    _SlbNewCfgSapAslrIpVer_Type()
)
slbNewCfgSapAslrIpVer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgSapAslrIpVer.setStatus("current")


class _SlbNewCfgSapAslrPortNum_Type(Integer32):
    """Custom type slbNewCfgSapAslrPortNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 65534),
    )


_SlbNewCfgSapAslrPortNum_Type.__name__ = "Integer32"
_SlbNewCfgSapAslrPortNum_Object = MibTableColumn
slbNewCfgSapAslrPortNum = _SlbNewCfgSapAslrPortNum_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 3, 1, 5),
    _SlbNewCfgSapAslrPortNum_Type()
)
slbNewCfgSapAslrPortNum.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgSapAslrPortNum.setStatus("current")
_SlbNewCfgSapAslrVipAddr_Type = IpAddress
_SlbNewCfgSapAslrVipAddr_Object = MibTableColumn
slbNewCfgSapAslrVipAddr = _SlbNewCfgSapAslrVipAddr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 3, 1, 6),
    _SlbNewCfgSapAslrVipAddr_Type()
)
slbNewCfgSapAslrVipAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgSapAslrVipAddr.setStatus("current")


class _SlbNewCfgSapAslrVipv6Addr_Type(DisplayString):
    """Custom type slbNewCfgSapAslrVipv6Addr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SlbNewCfgSapAslrVipv6Addr_Type.__name__ = "DisplayString"
_SlbNewCfgSapAslrVipv6Addr_Object = MibTableColumn
slbNewCfgSapAslrVipv6Addr = _SlbNewCfgSapAslrVipv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 3, 1, 7),
    _SlbNewCfgSapAslrVipv6Addr_Type()
)
slbNewCfgSapAslrVipv6Addr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgSapAslrVipv6Addr.setStatus("current")


class _SlbNewCfgSapAslrVipIpVer_Type(Integer32):
    """Custom type slbNewCfgSapAslrVipIpVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_SlbNewCfgSapAslrVipIpVer_Type.__name__ = "Integer32"
_SlbNewCfgSapAslrVipIpVer_Object = MibTableColumn
slbNewCfgSapAslrVipIpVer = _SlbNewCfgSapAslrVipIpVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 3, 1, 8),
    _SlbNewCfgSapAslrVipIpVer_Type()
)
slbNewCfgSapAslrVipIpVer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgSapAslrVipIpVer.setStatus("current")


class _SlbNewCfgSapAslrInterval_Type(Integer32):
    """Custom type slbNewCfgSapAslrInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(4, 60),
    )


_SlbNewCfgSapAslrInterval_Type.__name__ = "Integer32"
_SlbNewCfgSapAslrInterval_Object = MibTableColumn
slbNewCfgSapAslrInterval = _SlbNewCfgSapAslrInterval_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 3, 1, 9),
    _SlbNewCfgSapAslrInterval_Type()
)
slbNewCfgSapAslrInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgSapAslrInterval.setStatus("current")


class _SlbNewCfgSapAslrState_Type(Integer32):
    """Custom type slbNewCfgSapAslrState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgSapAslrState_Type.__name__ = "Integer32"
_SlbNewCfgSapAslrState_Object = MibTableColumn
slbNewCfgSapAslrState = _SlbNewCfgSapAslrState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 3, 1, 10),
    _SlbNewCfgSapAslrState_Type()
)
slbNewCfgSapAslrState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgSapAslrState.setStatus("current")


class _SlbNewCfgSapAslrName_Type(DisplayString):
    """Custom type slbNewCfgSapAslrName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewCfgSapAslrName_Type.__name__ = "DisplayString"
_SlbNewCfgSapAslrName_Object = MibTableColumn
slbNewCfgSapAslrName = _SlbNewCfgSapAslrName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 3, 1, 11),
    _SlbNewCfgSapAslrName_Type()
)
slbNewCfgSapAslrName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgSapAslrName.setStatus("current")


class _SlbNewCfgSapAslrLastAct_Type(DisplayString):
    """Custom type slbNewCfgSapAslrLastAct based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbNewCfgSapAslrLastAct_Type.__name__ = "DisplayString"
_SlbNewCfgSapAslrLastAct_Object = MibTableColumn
slbNewCfgSapAslrLastAct = _SlbNewCfgSapAslrLastAct_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 3, 1, 12),
    _SlbNewCfgSapAslrLastAct_Type()
)
slbNewCfgSapAslrLastAct.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgSapAslrLastAct.setStatus("current")


class _SlbNewCfgSapAslrAutoConfig_Type(Integer32):
    """Custom type slbNewCfgSapAslrAutoConfig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("basic", 1),
          ("full", 2))
    )


_SlbNewCfgSapAslrAutoConfig_Type.__name__ = "Integer32"
_SlbNewCfgSapAslrAutoConfig_Object = MibTableColumn
slbNewCfgSapAslrAutoConfig = _SlbNewCfgSapAslrAutoConfig_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 3, 1, 13),
    _SlbNewCfgSapAslrAutoConfig_Type()
)
slbNewCfgSapAslrAutoConfig.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgSapAslrAutoConfig.setStatus("current")
_SlbNewCfgSapAslrSessionInfo_Type = Integer32
_SlbNewCfgSapAslrSessionInfo_Object = MibTableColumn
slbNewCfgSapAslrSessionInfo = _SlbNewCfgSapAslrSessionInfo_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 3, 1, 14),
    _SlbNewCfgSapAslrSessionInfo_Type()
)
slbNewCfgSapAslrSessionInfo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgSapAslrSessionInfo.setStatus("current")


class _SlbNewCfgSapAslrDelete_Type(Integer32):
    """Custom type slbNewCfgSapAslrDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewCfgSapAslrDelete_Type.__name__ = "Integer32"
_SlbNewCfgSapAslrDelete_Object = MibTableColumn
slbNewCfgSapAslrDelete = _SlbNewCfgSapAslrDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 3, 1, 15),
    _SlbNewCfgSapAslrDelete_Type()
)
slbNewCfgSapAslrDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgSapAslrDelete.setStatus("current")


class _SlbNewCfgSapAslrSignature_Type(DisplayString):
    """Custom type slbNewCfgSapAslrSignature based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SlbNewCfgSapAslrSignature_Type.__name__ = "DisplayString"
_SlbNewCfgSapAslrSignature_Object = MibTableColumn
slbNewCfgSapAslrSignature = _SlbNewCfgSapAslrSignature_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 3, 1, 16),
    _SlbNewCfgSapAslrSignature_Type()
)
slbNewCfgSapAslrSignature.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgSapAslrSignature.setStatus("current")


class _SlbNewCfgSapAslrServCert_Type(DisplayString):
    """Custom type slbNewCfgSapAslrServCert based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewCfgSapAslrServCert_Type.__name__ = "DisplayString"
_SlbNewCfgSapAslrServCert_Object = MibTableColumn
slbNewCfgSapAslrServCert = _SlbNewCfgSapAslrServCert_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 20, 3, 1, 17),
    _SlbNewCfgSapAslrServCert_Type()
)
slbNewCfgSapAslrServCert.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgSapAslrServCert.setStatus("current")
_PeerpipTblCfg_ObjectIdentity = ObjectIdentity
peerpipTblCfg = _PeerpipTblCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 21)
)
_SlbCurCfgPeerPIPTable_Object = MibTable
slbCurCfgPeerPIPTable = _SlbCurCfgPeerPIPTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 21, 1)
)
if mibBuilder.loadTexts:
    slbCurCfgPeerPIPTable.setStatus("current")
_SlbCurCfgPeerPIPEntry_Object = MibTableRow
slbCurCfgPeerPIPEntry = _SlbCurCfgPeerPIPEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 21, 1, 1)
)
slbCurCfgPeerPIPEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgPeerPIPIndex"),
)
if mibBuilder.loadTexts:
    slbCurCfgPeerPIPEntry.setStatus("current")
_SlbCurCfgPeerPIPIndex_Type = Integer32
_SlbCurCfgPeerPIPIndex_Object = MibTableColumn
slbCurCfgPeerPIPIndex = _SlbCurCfgPeerPIPIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 21, 1, 1, 1),
    _SlbCurCfgPeerPIPIndex_Type()
)
slbCurCfgPeerPIPIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPeerPIPIndex.setStatus("current")
_SlbCurCfgPeerPIPAddr_Type = IpAddress
_SlbCurCfgPeerPIPAddr_Object = MibTableColumn
slbCurCfgPeerPIPAddr = _SlbCurCfgPeerPIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 21, 1, 1, 2),
    _SlbCurCfgPeerPIPAddr_Type()
)
slbCurCfgPeerPIPAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPeerPIPAddr.setStatus("current")


class _SlbCurCfgPeerPIPv6Addr_Type(DisplayString):
    """Custom type slbCurCfgPeerPIPv6Addr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SlbCurCfgPeerPIPv6Addr_Type.__name__ = "DisplayString"
_SlbCurCfgPeerPIPv6Addr_Object = MibTableColumn
slbCurCfgPeerPIPv6Addr = _SlbCurCfgPeerPIPv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 21, 1, 1, 3),
    _SlbCurCfgPeerPIPv6Addr_Type()
)
slbCurCfgPeerPIPv6Addr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgPeerPIPv6Addr.setStatus("current")
_SlbNewCfgPeerPIPTable_Object = MibTable
slbNewCfgPeerPIPTable = _SlbNewCfgPeerPIPTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 21, 2)
)
if mibBuilder.loadTexts:
    slbNewCfgPeerPIPTable.setStatus("current")
_SlbNewCfgPeerPIPEntry_Object = MibTableRow
slbNewCfgPeerPIPEntry = _SlbNewCfgPeerPIPEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 21, 2, 1)
)
slbNewCfgPeerPIPEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgPeerPIPIndex"),
)
if mibBuilder.loadTexts:
    slbNewCfgPeerPIPEntry.setStatus("current")
_SlbNewCfgPeerPIPIndex_Type = Integer32
_SlbNewCfgPeerPIPIndex_Object = MibTableColumn
slbNewCfgPeerPIPIndex = _SlbNewCfgPeerPIPIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 21, 2, 1, 1),
    _SlbNewCfgPeerPIPIndex_Type()
)
slbNewCfgPeerPIPIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgPeerPIPIndex.setStatus("current")
_SlbNewCfgPeerPIPAddr_Type = IpAddress
_SlbNewCfgPeerPIPAddr_Object = MibTableColumn
slbNewCfgPeerPIPAddr = _SlbNewCfgPeerPIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 21, 2, 1, 2),
    _SlbNewCfgPeerPIPAddr_Type()
)
slbNewCfgPeerPIPAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgPeerPIPAddr.setStatus("current")


class _SlbNewCfgPeerPIPv6Addr_Type(DisplayString):
    """Custom type slbNewCfgPeerPIPv6Addr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SlbNewCfgPeerPIPv6Addr_Type.__name__ = "DisplayString"
_SlbNewCfgPeerPIPv6Addr_Object = MibTableColumn
slbNewCfgPeerPIPv6Addr = _SlbNewCfgPeerPIPv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 21, 2, 1, 3),
    _SlbNewCfgPeerPIPv6Addr_Type()
)
slbNewCfgPeerPIPv6Addr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgPeerPIPv6Addr.setStatus("current")


class _SlbNewCfgPeerPIPDelete_Type(Integer32):
    """Custom type slbNewCfgPeerPIPDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewCfgPeerPIPDelete_Type.__name__ = "Integer32"
_SlbNewCfgPeerPIPDelete_Object = MibTableColumn
slbNewCfgPeerPIPDelete = _SlbNewCfgPeerPIPDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 21, 2, 1, 4),
    _SlbNewCfgPeerPIPDelete_Type()
)
slbNewCfgPeerPIPDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgPeerPIPDelete.setStatus("current")
_NwclssCfg_ObjectIdentity = ObjectIdentity
nwclssCfg = _NwclssCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22)
)
_SlbCurNwclssCfgNetworkClassesTable_Object = MibTable
slbCurNwclssCfgNetworkClassesTable = _SlbCurNwclssCfgNetworkClassesTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 1)
)
if mibBuilder.loadTexts:
    slbCurNwclssCfgNetworkClassesTable.setStatus("current")
_SlbCurNwclssCfgNetworkClassesEntry_Object = MibTableRow
slbCurNwclssCfgNetworkClassesEntry = _SlbCurNwclssCfgNetworkClassesEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 1, 1)
)
slbCurNwclssCfgNetworkClassesEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurNwclssCfgNetworkClassesId"),
)
if mibBuilder.loadTexts:
    slbCurNwclssCfgNetworkClassesEntry.setStatus("current")


class _SlbCurNwclssCfgNetworkClassesId_Type(DisplayString):
    """Custom type slbCurNwclssCfgNetworkClassesId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurNwclssCfgNetworkClassesId_Type.__name__ = "DisplayString"
_SlbCurNwclssCfgNetworkClassesId_Object = MibTableColumn
slbCurNwclssCfgNetworkClassesId = _SlbCurNwclssCfgNetworkClassesId_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 1, 1, 1),
    _SlbCurNwclssCfgNetworkClassesId_Type()
)
slbCurNwclssCfgNetworkClassesId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurNwclssCfgNetworkClassesId.setStatus("current")


class _SlbCurNwclssCfgNetworkClassesName_Type(DisplayString):
    """Custom type slbCurNwclssCfgNetworkClassesName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurNwclssCfgNetworkClassesName_Type.__name__ = "DisplayString"
_SlbCurNwclssCfgNetworkClassesName_Object = MibTableColumn
slbCurNwclssCfgNetworkClassesName = _SlbCurNwclssCfgNetworkClassesName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 1, 1, 2),
    _SlbCurNwclssCfgNetworkClassesName_Type()
)
slbCurNwclssCfgNetworkClassesName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurNwclssCfgNetworkClassesName.setStatus("current")


class _SlbCurNwclssCfgNetworkClassesIpVer_Type(Integer32):
    """Custom type slbCurNwclssCfgNetworkClassesIpVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_SlbCurNwclssCfgNetworkClassesIpVer_Type.__name__ = "Integer32"
_SlbCurNwclssCfgNetworkClassesIpVer_Object = MibTableColumn
slbCurNwclssCfgNetworkClassesIpVer = _SlbCurNwclssCfgNetworkClassesIpVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 1, 1, 3),
    _SlbCurNwclssCfgNetworkClassesIpVer_Type()
)
slbCurNwclssCfgNetworkClassesIpVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurNwclssCfgNetworkClassesIpVer.setStatus("current")
_SlbNewNwclssCfgNetworkClassesTable_Object = MibTable
slbNewNwclssCfgNetworkClassesTable = _SlbNewNwclssCfgNetworkClassesTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 2)
)
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkClassesTable.setStatus("current")
_SlbNewNwclssCfgNetworkClassesEntry_Object = MibTableRow
slbNewNwclssCfgNetworkClassesEntry = _SlbNewNwclssCfgNetworkClassesEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 2, 1)
)
slbNewNwclssCfgNetworkClassesEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewNwclssCfgNetworkClassesId"),
)
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkClassesEntry.setStatus("current")


class _SlbNewNwclssCfgNetworkClassesId_Type(DisplayString):
    """Custom type slbNewNwclssCfgNetworkClassesId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewNwclssCfgNetworkClassesId_Type.__name__ = "DisplayString"
_SlbNewNwclssCfgNetworkClassesId_Object = MibTableColumn
slbNewNwclssCfgNetworkClassesId = _SlbNewNwclssCfgNetworkClassesId_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 2, 1, 1),
    _SlbNewNwclssCfgNetworkClassesId_Type()
)
slbNewNwclssCfgNetworkClassesId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkClassesId.setStatus("current")


class _SlbNewNwclssCfgNetworkClassesName_Type(DisplayString):
    """Custom type slbNewNwclssCfgNetworkClassesName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewNwclssCfgNetworkClassesName_Type.__name__ = "DisplayString"
_SlbNewNwclssCfgNetworkClassesName_Object = MibTableColumn
slbNewNwclssCfgNetworkClassesName = _SlbNewNwclssCfgNetworkClassesName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 2, 1, 2),
    _SlbNewNwclssCfgNetworkClassesName_Type()
)
slbNewNwclssCfgNetworkClassesName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkClassesName.setStatus("current")


class _SlbNewNwclssCfgNetworkClassesIpVer_Type(Integer32):
    """Custom type slbNewNwclssCfgNetworkClassesIpVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_SlbNewNwclssCfgNetworkClassesIpVer_Type.__name__ = "Integer32"
_SlbNewNwclssCfgNetworkClassesIpVer_Object = MibTableColumn
slbNewNwclssCfgNetworkClassesIpVer = _SlbNewNwclssCfgNetworkClassesIpVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 2, 1, 3),
    _SlbNewNwclssCfgNetworkClassesIpVer_Type()
)
slbNewNwclssCfgNetworkClassesIpVer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkClassesIpVer.setStatus("current")


class _SlbNewNwclssCfgNetworkClassesDel_Type(Integer32):
    """Custom type slbNewNwclssCfgNetworkClassesDel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewNwclssCfgNetworkClassesDel_Type.__name__ = "Integer32"
_SlbNewNwclssCfgNetworkClassesDel_Object = MibTableColumn
slbNewNwclssCfgNetworkClassesDel = _SlbNewNwclssCfgNetworkClassesDel_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 2, 1, 4),
    _SlbNewNwclssCfgNetworkClassesDel_Type()
)
slbNewNwclssCfgNetworkClassesDel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkClassesDel.setStatus("current")


class _SlbNewNwclssCfgNetworkClassesCopy_Type(DisplayString):
    """Custom type slbNewNwclssCfgNetworkClassesCopy based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewNwclssCfgNetworkClassesCopy_Type.__name__ = "DisplayString"
_SlbNewNwclssCfgNetworkClassesCopy_Object = MibTableColumn
slbNewNwclssCfgNetworkClassesCopy = _SlbNewNwclssCfgNetworkClassesCopy_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 2, 1, 5),
    _SlbNewNwclssCfgNetworkClassesCopy_Type()
)
slbNewNwclssCfgNetworkClassesCopy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkClassesCopy.setStatus("current")
_SlbCurNwclssCfgNetworkElementsTable_Object = MibTable
slbCurNwclssCfgNetworkElementsTable = _SlbCurNwclssCfgNetworkElementsTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 3)
)
if mibBuilder.loadTexts:
    slbCurNwclssCfgNetworkElementsTable.setStatus("current")
_SlbCurNwclssCfgNetworkElementsEntry_Object = MibTableRow
slbCurNwclssCfgNetworkElementsEntry = _SlbCurNwclssCfgNetworkElementsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 3, 1)
)
slbCurNwclssCfgNetworkElementsEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurNwclssCfgNetworkElementsNcId"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurNwclssCfgNetworkElementsId"),
)
if mibBuilder.loadTexts:
    slbCurNwclssCfgNetworkElementsEntry.setStatus("current")


class _SlbCurNwclssCfgNetworkElementsNcId_Type(DisplayString):
    """Custom type slbCurNwclssCfgNetworkElementsNcId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurNwclssCfgNetworkElementsNcId_Type.__name__ = "DisplayString"
_SlbCurNwclssCfgNetworkElementsNcId_Object = MibTableColumn
slbCurNwclssCfgNetworkElementsNcId = _SlbCurNwclssCfgNetworkElementsNcId_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 3, 1, 1),
    _SlbCurNwclssCfgNetworkElementsNcId_Type()
)
slbCurNwclssCfgNetworkElementsNcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurNwclssCfgNetworkElementsNcId.setStatus("current")


class _SlbCurNwclssCfgNetworkElementsId_Type(DisplayString):
    """Custom type slbCurNwclssCfgNetworkElementsId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbCurNwclssCfgNetworkElementsId_Type.__name__ = "DisplayString"
_SlbCurNwclssCfgNetworkElementsId_Object = MibTableColumn
slbCurNwclssCfgNetworkElementsId = _SlbCurNwclssCfgNetworkElementsId_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 3, 1, 2),
    _SlbCurNwclssCfgNetworkElementsId_Type()
)
slbCurNwclssCfgNetworkElementsId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurNwclssCfgNetworkElementsId.setStatus("current")


class _SlbCurNwclssCfgNetworkElementsNetType_Type(Integer32):
    """Custom type slbCurNwclssCfgNetworkElementsNetType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("range", 2),
          ("subnet", 1))
    )


_SlbCurNwclssCfgNetworkElementsNetType_Type.__name__ = "Integer32"
_SlbCurNwclssCfgNetworkElementsNetType_Object = MibTableColumn
slbCurNwclssCfgNetworkElementsNetType = _SlbCurNwclssCfgNetworkElementsNetType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 3, 1, 3),
    _SlbCurNwclssCfgNetworkElementsNetType_Type()
)
slbCurNwclssCfgNetworkElementsNetType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurNwclssCfgNetworkElementsNetType.setStatus("current")
_SlbCurNwclssCfgNetworkElementsIp_Type = IpAddress
_SlbCurNwclssCfgNetworkElementsIp_Object = MibTableColumn
slbCurNwclssCfgNetworkElementsIp = _SlbCurNwclssCfgNetworkElementsIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 3, 1, 4),
    _SlbCurNwclssCfgNetworkElementsIp_Type()
)
slbCurNwclssCfgNetworkElementsIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurNwclssCfgNetworkElementsIp.setStatus("current")
_SlbCurNwclssCfgNetworkElementsMask_Type = IpAddress
_SlbCurNwclssCfgNetworkElementsMask_Object = MibTableColumn
slbCurNwclssCfgNetworkElementsMask = _SlbCurNwclssCfgNetworkElementsMask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 3, 1, 5),
    _SlbCurNwclssCfgNetworkElementsMask_Type()
)
slbCurNwclssCfgNetworkElementsMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurNwclssCfgNetworkElementsMask.setStatus("current")
_SlbCurNwclssCfgNetworkElementsFromIp_Type = IpAddress
_SlbCurNwclssCfgNetworkElementsFromIp_Object = MibTableColumn
slbCurNwclssCfgNetworkElementsFromIp = _SlbCurNwclssCfgNetworkElementsFromIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 3, 1, 6),
    _SlbCurNwclssCfgNetworkElementsFromIp_Type()
)
slbCurNwclssCfgNetworkElementsFromIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurNwclssCfgNetworkElementsFromIp.setStatus("current")
_SlbCurNwclssCfgNetworkElementsToIp_Type = IpAddress
_SlbCurNwclssCfgNetworkElementsToIp_Object = MibTableColumn
slbCurNwclssCfgNetworkElementsToIp = _SlbCurNwclssCfgNetworkElementsToIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 3, 1, 7),
    _SlbCurNwclssCfgNetworkElementsToIp_Type()
)
slbCurNwclssCfgNetworkElementsToIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurNwclssCfgNetworkElementsToIp.setStatus("current")


class _SlbCurNwclssCfgNetworkElementsIpv6Addr_Type(DisplayString):
    """Custom type slbCurNwclssCfgNetworkElementsIpv6Addr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SlbCurNwclssCfgNetworkElementsIpv6Addr_Type.__name__ = "DisplayString"
_SlbCurNwclssCfgNetworkElementsIpv6Addr_Object = MibTableColumn
slbCurNwclssCfgNetworkElementsIpv6Addr = _SlbCurNwclssCfgNetworkElementsIpv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 3, 1, 8),
    _SlbCurNwclssCfgNetworkElementsIpv6Addr_Type()
)
slbCurNwclssCfgNetworkElementsIpv6Addr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurNwclssCfgNetworkElementsIpv6Addr.setStatus("current")


class _SlbCurNwclssCfgNetworkElementsPrefixLen_Type(Integer32):
    """Custom type slbCurNwclssCfgNetworkElementsPrefixLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 128),
    )


_SlbCurNwclssCfgNetworkElementsPrefixLen_Type.__name__ = "Integer32"
_SlbCurNwclssCfgNetworkElementsPrefixLen_Object = MibTableColumn
slbCurNwclssCfgNetworkElementsPrefixLen = _SlbCurNwclssCfgNetworkElementsPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 3, 1, 9),
    _SlbCurNwclssCfgNetworkElementsPrefixLen_Type()
)
slbCurNwclssCfgNetworkElementsPrefixLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurNwclssCfgNetworkElementsPrefixLen.setStatus("current")


class _SlbCurNwclssCfgNetworkElementsFromIpv6Addr_Type(DisplayString):
    """Custom type slbCurNwclssCfgNetworkElementsFromIpv6Addr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SlbCurNwclssCfgNetworkElementsFromIpv6Addr_Type.__name__ = "DisplayString"
_SlbCurNwclssCfgNetworkElementsFromIpv6Addr_Object = MibTableColumn
slbCurNwclssCfgNetworkElementsFromIpv6Addr = _SlbCurNwclssCfgNetworkElementsFromIpv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 3, 1, 10),
    _SlbCurNwclssCfgNetworkElementsFromIpv6Addr_Type()
)
slbCurNwclssCfgNetworkElementsFromIpv6Addr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurNwclssCfgNetworkElementsFromIpv6Addr.setStatus("current")


class _SlbCurNwclssCfgNetworkElementsToIpv6Addr_Type(DisplayString):
    """Custom type slbCurNwclssCfgNetworkElementsToIpv6Addr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SlbCurNwclssCfgNetworkElementsToIpv6Addr_Type.__name__ = "DisplayString"
_SlbCurNwclssCfgNetworkElementsToIpv6Addr_Object = MibTableColumn
slbCurNwclssCfgNetworkElementsToIpv6Addr = _SlbCurNwclssCfgNetworkElementsToIpv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 3, 1, 11),
    _SlbCurNwclssCfgNetworkElementsToIpv6Addr_Type()
)
slbCurNwclssCfgNetworkElementsToIpv6Addr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurNwclssCfgNetworkElementsToIpv6Addr.setStatus("current")


class _SlbCurNwclssCfgNetworkElementsMatchType_Type(Integer32):
    """Custom type slbCurNwclssCfgNetworkElementsMatchType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("exclude", 2),
          ("include", 1))
    )


_SlbCurNwclssCfgNetworkElementsMatchType_Type.__name__ = "Integer32"
_SlbCurNwclssCfgNetworkElementsMatchType_Object = MibTableColumn
slbCurNwclssCfgNetworkElementsMatchType = _SlbCurNwclssCfgNetworkElementsMatchType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 3, 1, 12),
    _SlbCurNwclssCfgNetworkElementsMatchType_Type()
)
slbCurNwclssCfgNetworkElementsMatchType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurNwclssCfgNetworkElementsMatchType.setStatus("current")
_SlbNewNwclssCfgNetworkElementsTable_Object = MibTable
slbNewNwclssCfgNetworkElementsTable = _SlbNewNwclssCfgNetworkElementsTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 4)
)
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkElementsTable.setStatus("current")
_SlbNewNwclssCfgNetworkElementsEntry_Object = MibTableRow
slbNewNwclssCfgNetworkElementsEntry = _SlbNewNwclssCfgNetworkElementsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 4, 1)
)
slbNewNwclssCfgNetworkElementsEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewNwclssCfgNetworkElementsNcId"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewNwclssCfgNetworkElementsId"),
)
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkElementsEntry.setStatus("current")


class _SlbNewNwclssCfgNetworkElementsNcId_Type(DisplayString):
    """Custom type slbNewNwclssCfgNetworkElementsNcId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewNwclssCfgNetworkElementsNcId_Type.__name__ = "DisplayString"
_SlbNewNwclssCfgNetworkElementsNcId_Object = MibTableColumn
slbNewNwclssCfgNetworkElementsNcId = _SlbNewNwclssCfgNetworkElementsNcId_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 4, 1, 1),
    _SlbNewNwclssCfgNetworkElementsNcId_Type()
)
slbNewNwclssCfgNetworkElementsNcId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkElementsNcId.setStatus("current")


class _SlbNewNwclssCfgNetworkElementsId_Type(DisplayString):
    """Custom type slbNewNwclssCfgNetworkElementsId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SlbNewNwclssCfgNetworkElementsId_Type.__name__ = "DisplayString"
_SlbNewNwclssCfgNetworkElementsId_Object = MibTableColumn
slbNewNwclssCfgNetworkElementsId = _SlbNewNwclssCfgNetworkElementsId_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 4, 1, 2),
    _SlbNewNwclssCfgNetworkElementsId_Type()
)
slbNewNwclssCfgNetworkElementsId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkElementsId.setStatus("current")


class _SlbNewNwclssCfgNetworkElementsNetType_Type(Integer32):
    """Custom type slbNewNwclssCfgNetworkElementsNetType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("range", 2),
          ("subnet", 1))
    )


_SlbNewNwclssCfgNetworkElementsNetType_Type.__name__ = "Integer32"
_SlbNewNwclssCfgNetworkElementsNetType_Object = MibTableColumn
slbNewNwclssCfgNetworkElementsNetType = _SlbNewNwclssCfgNetworkElementsNetType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 4, 1, 3),
    _SlbNewNwclssCfgNetworkElementsNetType_Type()
)
slbNewNwclssCfgNetworkElementsNetType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkElementsNetType.setStatus("current")
_SlbNewNwclssCfgNetworkElementsIp_Type = IpAddress
_SlbNewNwclssCfgNetworkElementsIp_Object = MibTableColumn
slbNewNwclssCfgNetworkElementsIp = _SlbNewNwclssCfgNetworkElementsIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 4, 1, 4),
    _SlbNewNwclssCfgNetworkElementsIp_Type()
)
slbNewNwclssCfgNetworkElementsIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkElementsIp.setStatus("current")
_SlbNewNwclssCfgNetworkElementsMask_Type = IpAddress
_SlbNewNwclssCfgNetworkElementsMask_Object = MibTableColumn
slbNewNwclssCfgNetworkElementsMask = _SlbNewNwclssCfgNetworkElementsMask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 4, 1, 5),
    _SlbNewNwclssCfgNetworkElementsMask_Type()
)
slbNewNwclssCfgNetworkElementsMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkElementsMask.setStatus("current")
_SlbNewNwclssCfgNetworkElementsFromIp_Type = IpAddress
_SlbNewNwclssCfgNetworkElementsFromIp_Object = MibTableColumn
slbNewNwclssCfgNetworkElementsFromIp = _SlbNewNwclssCfgNetworkElementsFromIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 4, 1, 6),
    _SlbNewNwclssCfgNetworkElementsFromIp_Type()
)
slbNewNwclssCfgNetworkElementsFromIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkElementsFromIp.setStatus("current")
_SlbNewNwclssCfgNetworkElementsToIp_Type = IpAddress
_SlbNewNwclssCfgNetworkElementsToIp_Object = MibTableColumn
slbNewNwclssCfgNetworkElementsToIp = _SlbNewNwclssCfgNetworkElementsToIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 4, 1, 7),
    _SlbNewNwclssCfgNetworkElementsToIp_Type()
)
slbNewNwclssCfgNetworkElementsToIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkElementsToIp.setStatus("current")


class _SlbNewNwclssCfgNetworkElementsIpv6Addr_Type(DisplayString):
    """Custom type slbNewNwclssCfgNetworkElementsIpv6Addr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SlbNewNwclssCfgNetworkElementsIpv6Addr_Type.__name__ = "DisplayString"
_SlbNewNwclssCfgNetworkElementsIpv6Addr_Object = MibTableColumn
slbNewNwclssCfgNetworkElementsIpv6Addr = _SlbNewNwclssCfgNetworkElementsIpv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 4, 1, 8),
    _SlbNewNwclssCfgNetworkElementsIpv6Addr_Type()
)
slbNewNwclssCfgNetworkElementsIpv6Addr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkElementsIpv6Addr.setStatus("current")


class _SlbNewNwclssCfgNetworkElementsPrefixLen_Type(Integer32):
    """Custom type slbNewNwclssCfgNetworkElementsPrefixLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 128),
    )


_SlbNewNwclssCfgNetworkElementsPrefixLen_Type.__name__ = "Integer32"
_SlbNewNwclssCfgNetworkElementsPrefixLen_Object = MibTableColumn
slbNewNwclssCfgNetworkElementsPrefixLen = _SlbNewNwclssCfgNetworkElementsPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 4, 1, 9),
    _SlbNewNwclssCfgNetworkElementsPrefixLen_Type()
)
slbNewNwclssCfgNetworkElementsPrefixLen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkElementsPrefixLen.setStatus("current")


class _SlbNewNwclssCfgNetworkElementsFromIpv6Addr_Type(DisplayString):
    """Custom type slbNewNwclssCfgNetworkElementsFromIpv6Addr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SlbNewNwclssCfgNetworkElementsFromIpv6Addr_Type.__name__ = "DisplayString"
_SlbNewNwclssCfgNetworkElementsFromIpv6Addr_Object = MibTableColumn
slbNewNwclssCfgNetworkElementsFromIpv6Addr = _SlbNewNwclssCfgNetworkElementsFromIpv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 4, 1, 10),
    _SlbNewNwclssCfgNetworkElementsFromIpv6Addr_Type()
)
slbNewNwclssCfgNetworkElementsFromIpv6Addr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkElementsFromIpv6Addr.setStatus("current")


class _SlbNewNwclssCfgNetworkElementsToIpv6Addr_Type(DisplayString):
    """Custom type slbNewNwclssCfgNetworkElementsToIpv6Addr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SlbNewNwclssCfgNetworkElementsToIpv6Addr_Type.__name__ = "DisplayString"
_SlbNewNwclssCfgNetworkElementsToIpv6Addr_Object = MibTableColumn
slbNewNwclssCfgNetworkElementsToIpv6Addr = _SlbNewNwclssCfgNetworkElementsToIpv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 4, 1, 11),
    _SlbNewNwclssCfgNetworkElementsToIpv6Addr_Type()
)
slbNewNwclssCfgNetworkElementsToIpv6Addr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkElementsToIpv6Addr.setStatus("current")


class _SlbNewNwclssCfgNetworkElementsMatchType_Type(Integer32):
    """Custom type slbNewNwclssCfgNetworkElementsMatchType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("exclude", 2),
          ("include", 1))
    )


_SlbNewNwclssCfgNetworkElementsMatchType_Type.__name__ = "Integer32"
_SlbNewNwclssCfgNetworkElementsMatchType_Object = MibTableColumn
slbNewNwclssCfgNetworkElementsMatchType = _SlbNewNwclssCfgNetworkElementsMatchType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 4, 1, 12),
    _SlbNewNwclssCfgNetworkElementsMatchType_Type()
)
slbNewNwclssCfgNetworkElementsMatchType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkElementsMatchType.setStatus("current")


class _SlbNewNwclssCfgNetworkElementsDel_Type(Integer32):
    """Custom type slbNewNwclssCfgNetworkElementsDel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewNwclssCfgNetworkElementsDel_Type.__name__ = "Integer32"
_SlbNewNwclssCfgNetworkElementsDel_Object = MibTableColumn
slbNewNwclssCfgNetworkElementsDel = _SlbNewNwclssCfgNetworkElementsDel_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 1, 22, 4, 1, 13),
    _SlbNewNwclssCfgNetworkElementsDel_Type()
)
slbNewNwclssCfgNetworkElementsDel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewNwclssCfgNetworkElementsDel.setStatus("current")
_FilterCfg_ObjectIdentity = ObjectIdentity
filterCfg = _FilterCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2)
)
_FltCfgTableMaxSize_Type = Integer32
_FltCfgTableMaxSize_Object = MibScalar
fltCfgTableMaxSize = _FltCfgTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 1),
    _FltCfgTableMaxSize_Type()
)
fltCfgTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCfgTableMaxSize.setStatus("current")
_FltCurCfgTable_Object = MibTable
fltCurCfgTable = _FltCurCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2)
)
if mibBuilder.loadTexts:
    fltCurCfgTable.setStatus("current")
_FltCurCfgTableEntry_Object = MibTableRow
fltCurCfgTableEntry = _FltCurCfgTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1)
)
fltCurCfgTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "fltCurCfgIndx"),
)
if mibBuilder.loadTexts:
    fltCurCfgTableEntry.setStatus("current")
_FltCurCfgIndx_Type = Integer32
_FltCurCfgIndx_Object = MibTableColumn
fltCurCfgIndx = _FltCurCfgIndx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 1),
    _FltCurCfgIndx_Type()
)
fltCurCfgIndx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgIndx.setStatus("current")
_FltCurCfgSrcIp_Type = IpAddress
_FltCurCfgSrcIp_Object = MibTableColumn
fltCurCfgSrcIp = _FltCurCfgSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 2),
    _FltCurCfgSrcIp_Type()
)
fltCurCfgSrcIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgSrcIp.setStatus("current")
_FltCurCfgSrcIpMask_Type = IpAddress
_FltCurCfgSrcIpMask_Object = MibTableColumn
fltCurCfgSrcIpMask = _FltCurCfgSrcIpMask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 3),
    _FltCurCfgSrcIpMask_Type()
)
fltCurCfgSrcIpMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgSrcIpMask.setStatus("current")
_FltCurCfgDstIp_Type = IpAddress
_FltCurCfgDstIp_Object = MibTableColumn
fltCurCfgDstIp = _FltCurCfgDstIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 4),
    _FltCurCfgDstIp_Type()
)
fltCurCfgDstIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgDstIp.setStatus("current")
_FltCurCfgDstIpMask_Type = IpAddress
_FltCurCfgDstIpMask_Object = MibTableColumn
fltCurCfgDstIpMask = _FltCurCfgDstIpMask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 5),
    _FltCurCfgDstIpMask_Type()
)
fltCurCfgDstIpMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgDstIpMask.setStatus("current")


class _FltCurCfgProtocol_Type(Integer32):
    """Custom type fltCurCfgProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_FltCurCfgProtocol_Type.__name__ = "Integer32"
_FltCurCfgProtocol_Object = MibTableColumn
fltCurCfgProtocol = _FltCurCfgProtocol_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 6),
    _FltCurCfgProtocol_Type()
)
fltCurCfgProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgProtocol.setStatus("current")


class _FltCurCfgRangeHighSrcPort_Type(Integer32):
    """Custom type fltCurCfgRangeHighSrcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_FltCurCfgRangeHighSrcPort_Type.__name__ = "Integer32"
_FltCurCfgRangeHighSrcPort_Object = MibTableColumn
fltCurCfgRangeHighSrcPort = _FltCurCfgRangeHighSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 7),
    _FltCurCfgRangeHighSrcPort_Type()
)
fltCurCfgRangeHighSrcPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgRangeHighSrcPort.setStatus("current")


class _FltCurCfgRangeLowSrcPort_Type(Integer32):
    """Custom type fltCurCfgRangeLowSrcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_FltCurCfgRangeLowSrcPort_Type.__name__ = "Integer32"
_FltCurCfgRangeLowSrcPort_Object = MibTableColumn
fltCurCfgRangeLowSrcPort = _FltCurCfgRangeLowSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 8),
    _FltCurCfgRangeLowSrcPort_Type()
)
fltCurCfgRangeLowSrcPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgRangeLowSrcPort.setStatus("current")


class _FltCurCfgRangeLowDstPort_Type(Integer32):
    """Custom type fltCurCfgRangeLowDstPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_FltCurCfgRangeLowDstPort_Type.__name__ = "Integer32"
_FltCurCfgRangeLowDstPort_Object = MibTableColumn
fltCurCfgRangeLowDstPort = _FltCurCfgRangeLowDstPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 9),
    _FltCurCfgRangeLowDstPort_Type()
)
fltCurCfgRangeLowDstPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgRangeLowDstPort.setStatus("current")


class _FltCurCfgRangeHighDstPort_Type(Integer32):
    """Custom type fltCurCfgRangeHighDstPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_FltCurCfgRangeHighDstPort_Type.__name__ = "Integer32"
_FltCurCfgRangeHighDstPort_Object = MibTableColumn
fltCurCfgRangeHighDstPort = _FltCurCfgRangeHighDstPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 10),
    _FltCurCfgRangeHighDstPort_Type()
)
fltCurCfgRangeHighDstPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgRangeHighDstPort.setStatus("current")


class _FltCurCfgAction_Type(Integer32):
    """Custom type fltCurCfgAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("allow", 1),
          ("deny", 2),
          ("goto", 5),
          ("nat", 4),
          ("redirect", 3))
    )


_FltCurCfgAction_Type.__name__ = "Integer32"
_FltCurCfgAction_Object = MibTableColumn
fltCurCfgAction = _FltCurCfgAction_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 11),
    _FltCurCfgAction_Type()
)
fltCurCfgAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgAction.setStatus("current")


class _FltCurCfgRedirPort_Type(Integer32):
    """Custom type fltCurCfgRedirPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_FltCurCfgRedirPort_Type.__name__ = "Integer32"
_FltCurCfgRedirPort_Object = MibTableColumn
fltCurCfgRedirPort = _FltCurCfgRedirPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 12),
    _FltCurCfgRedirPort_Type()
)
fltCurCfgRedirPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgRedirPort.setStatus("current")
_FltCurCfgRedirGroup_Type = Integer32
_FltCurCfgRedirGroup_Object = MibTableColumn
fltCurCfgRedirGroup = _FltCurCfgRedirGroup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 13),
    _FltCurCfgRedirGroup_Type()
)
fltCurCfgRedirGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgRedirGroup.setStatus("current")


class _FltCurCfgLog_Type(Integer32):
    """Custom type fltCurCfgLog based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgLog_Type.__name__ = "Integer32"
_FltCurCfgLog_Object = MibTableColumn
fltCurCfgLog = _FltCurCfgLog_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 14),
    _FltCurCfgLog_Type()
)
fltCurCfgLog.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgLog.setStatus("current")


class _FltCurCfgState_Type(Integer32):
    """Custom type fltCurCfgState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgState_Type.__name__ = "Integer32"
_FltCurCfgState_Object = MibTableColumn
fltCurCfgState = _FltCurCfgState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 15),
    _FltCurCfgState_Type()
)
fltCurCfgState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgState.setStatus("current")


class _FltCurCfgNat_Type(Integer32):
    """Custom type fltCurCfgNat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("destination-address", 1),
          ("multicast-address", 3),
          ("source-address", 2))
    )


_FltCurCfgNat_Type.__name__ = "Integer32"
_FltCurCfgNat_Object = MibTableColumn
fltCurCfgNat = _FltCurCfgNat_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 16),
    _FltCurCfgNat_Type()
)
fltCurCfgNat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgNat.setStatus("current")


class _FltCurCfgCache_Type(Integer32):
    """Custom type fltCurCfgCache based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgCache_Type.__name__ = "Integer32"
_FltCurCfgCache_Object = MibTableColumn
fltCurCfgCache = _FltCurCfgCache_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 17),
    _FltCurCfgCache_Type()
)
fltCurCfgCache.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgCache.setStatus("current")


class _FltCurCfgInvert_Type(Integer32):
    """Custom type fltCurCfgInvert based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgInvert_Type.__name__ = "Integer32"
_FltCurCfgInvert_Object = MibTableColumn
fltCurCfgInvert = _FltCurCfgInvert_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 18),
    _FltCurCfgInvert_Type()
)
fltCurCfgInvert.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgInvert.setStatus("current")


class _FltCurCfgClientProxy_Type(Integer32):
    """Custom type fltCurCfgClientProxy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgClientProxy_Type.__name__ = "Integer32"
_FltCurCfgClientProxy_Object = MibTableColumn
fltCurCfgClientProxy = _FltCurCfgClientProxy_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 19),
    _FltCurCfgClientProxy_Type()
)
fltCurCfgClientProxy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgClientProxy.setStatus("current")


class _FltCurCfgTcpAck_Type(Integer32):
    """Custom type fltCurCfgTcpAck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgTcpAck_Type.__name__ = "Integer32"
_FltCurCfgTcpAck_Object = MibTableColumn
fltCurCfgTcpAck = _FltCurCfgTcpAck_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 20),
    _FltCurCfgTcpAck_Type()
)
fltCurCfgTcpAck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgTcpAck.setStatus("current")
_FltCurCfgSrcMac_Type = PhysAddress
_FltCurCfgSrcMac_Object = MibTableColumn
fltCurCfgSrcMac = _FltCurCfgSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 22),
    _FltCurCfgSrcMac_Type()
)
fltCurCfgSrcMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgSrcMac.setStatus("current")
_FltCurCfgDstMac_Type = PhysAddress
_FltCurCfgDstMac_Object = MibTableColumn
fltCurCfgDstMac = _FltCurCfgDstMac_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 23),
    _FltCurCfgDstMac_Type()
)
fltCurCfgDstMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgDstMac.setStatus("current")


class _FltCurCfgFtpNatActive_Type(Integer32):
    """Custom type fltCurCfgFtpNatActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgFtpNatActive_Type.__name__ = "Integer32"
_FltCurCfgFtpNatActive_Object = MibTableColumn
fltCurCfgFtpNatActive = _FltCurCfgFtpNatActive_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 24),
    _FltCurCfgFtpNatActive_Type()
)
fltCurCfgFtpNatActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgFtpNatActive.setStatus("current")


class _FltCurCfgAclTcpUrg_Type(Integer32):
    """Custom type fltCurCfgAclTcpUrg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_FltCurCfgAclTcpUrg_Type.__name__ = "Integer32"
_FltCurCfgAclTcpUrg_Object = MibTableColumn
fltCurCfgAclTcpUrg = _FltCurCfgAclTcpUrg_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 25),
    _FltCurCfgAclTcpUrg_Type()
)
fltCurCfgAclTcpUrg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgAclTcpUrg.setStatus("current")


class _FltCurCfgAclTcpAck_Type(Integer32):
    """Custom type fltCurCfgAclTcpAck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_FltCurCfgAclTcpAck_Type.__name__ = "Integer32"
_FltCurCfgAclTcpAck_Object = MibTableColumn
fltCurCfgAclTcpAck = _FltCurCfgAclTcpAck_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 26),
    _FltCurCfgAclTcpAck_Type()
)
fltCurCfgAclTcpAck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgAclTcpAck.setStatus("current")


class _FltCurCfgAclTcpPsh_Type(Integer32):
    """Custom type fltCurCfgAclTcpPsh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_FltCurCfgAclTcpPsh_Type.__name__ = "Integer32"
_FltCurCfgAclTcpPsh_Object = MibTableColumn
fltCurCfgAclTcpPsh = _FltCurCfgAclTcpPsh_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 27),
    _FltCurCfgAclTcpPsh_Type()
)
fltCurCfgAclTcpPsh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgAclTcpPsh.setStatus("current")


class _FltCurCfgAclTcpRst_Type(Integer32):
    """Custom type fltCurCfgAclTcpRst based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_FltCurCfgAclTcpRst_Type.__name__ = "Integer32"
_FltCurCfgAclTcpRst_Object = MibTableColumn
fltCurCfgAclTcpRst = _FltCurCfgAclTcpRst_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 28),
    _FltCurCfgAclTcpRst_Type()
)
fltCurCfgAclTcpRst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgAclTcpRst.setStatus("current")


class _FltCurCfgAclTcpSyn_Type(Integer32):
    """Custom type fltCurCfgAclTcpSyn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_FltCurCfgAclTcpSyn_Type.__name__ = "Integer32"
_FltCurCfgAclTcpSyn_Object = MibTableColumn
fltCurCfgAclTcpSyn = _FltCurCfgAclTcpSyn_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 29),
    _FltCurCfgAclTcpSyn_Type()
)
fltCurCfgAclTcpSyn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgAclTcpSyn.setStatus("current")


class _FltCurCfgAclTcpFin_Type(Integer32):
    """Custom type fltCurCfgAclTcpFin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_FltCurCfgAclTcpFin_Type.__name__ = "Integer32"
_FltCurCfgAclTcpFin_Object = MibTableColumn
fltCurCfgAclTcpFin = _FltCurCfgAclTcpFin_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 30),
    _FltCurCfgAclTcpFin_Type()
)
fltCurCfgAclTcpFin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgAclTcpFin.setStatus("current")


class _FltCurCfgAclIcmp_Type(Integer32):
    """Custom type fltCurCfgAclIcmp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_FltCurCfgAclIcmp_Type.__name__ = "Integer32"
_FltCurCfgAclIcmp_Object = MibTableColumn
fltCurCfgAclIcmp = _FltCurCfgAclIcmp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 31),
    _FltCurCfgAclIcmp_Type()
)
fltCurCfgAclIcmp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgAclIcmp.setStatus("current")


class _FltCurCfgAclIpOption_Type(Integer32):
    """Custom type fltCurCfgAclIpOption based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_FltCurCfgAclIpOption_Type.__name__ = "Integer32"
_FltCurCfgAclIpOption_Object = MibTableColumn
fltCurCfgAclIpOption = _FltCurCfgAclIpOption_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 32),
    _FltCurCfgAclIpOption_Type()
)
fltCurCfgAclIpOption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgAclIpOption.setStatus("current")
_FltCurCfgBwmContract_Type = Integer32
_FltCurCfgBwmContract_Object = MibTableColumn
fltCurCfgBwmContract = _FltCurCfgBwmContract_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 33),
    _FltCurCfgBwmContract_Type()
)
fltCurCfgBwmContract.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgBwmContract.setStatus("current")


class _FltCurCfgAclIpTos_Type(Integer32):
    """Custom type fltCurCfgAclIpTos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_FltCurCfgAclIpTos_Type.__name__ = "Integer32"
_FltCurCfgAclIpTos_Object = MibTableColumn
fltCurCfgAclIpTos = _FltCurCfgAclIpTos_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 34),
    _FltCurCfgAclIpTos_Type()
)
fltCurCfgAclIpTos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgAclIpTos.setStatus("current")


class _FltCurCfgAclIpTosMask_Type(Integer32):
    """Custom type fltCurCfgAclIpTosMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_FltCurCfgAclIpTosMask_Type.__name__ = "Integer32"
_FltCurCfgAclIpTosMask_Object = MibTableColumn
fltCurCfgAclIpTosMask = _FltCurCfgAclIpTosMask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 35),
    _FltCurCfgAclIpTosMask_Type()
)
fltCurCfgAclIpTosMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgAclIpTosMask.setStatus("current")


class _FltCurCfgAclIpTosNew_Type(Integer32):
    """Custom type fltCurCfgAclIpTosNew based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_FltCurCfgAclIpTosNew_Type.__name__ = "Integer32"
_FltCurCfgAclIpTosNew_Object = MibTableColumn
fltCurCfgAclIpTosNew = _FltCurCfgAclIpTosNew_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 36),
    _FltCurCfgAclIpTosNew_Type()
)
fltCurCfgAclIpTosNew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgAclIpTosNew.setStatus("current")


class _FltCurCfgFwlb_Type(Integer32):
    """Custom type fltCurCfgFwlb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgFwlb_Type.__name__ = "Integer32"
_FltCurCfgFwlb_Object = MibTableColumn
fltCurCfgFwlb = _FltCurCfgFwlb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 37),
    _FltCurCfgFwlb_Type()
)
fltCurCfgFwlb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgFwlb.setStatus("current")


class _FltCurCfgNatTimeout_Type(Integer32):
    """Custom type fltCurCfgNatTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(4, 32768),
    )


_FltCurCfgNatTimeout_Type.__name__ = "Integer32"
_FltCurCfgNatTimeout_Object = MibTableColumn
fltCurCfgNatTimeout = _FltCurCfgNatTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 38),
    _FltCurCfgNatTimeout_Type()
)
fltCurCfgNatTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgNatTimeout.setStatus("current")


class _FltCurCfgLinklb_Type(Integer32):
    """Custom type fltCurCfgLinklb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgLinklb_Type.__name__ = "Integer32"
_FltCurCfgLinklb_Object = MibTableColumn
fltCurCfgLinklb = _FltCurCfgLinklb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 39),
    _FltCurCfgLinklb_Type()
)
fltCurCfgLinklb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgLinklb.setStatus("current")


class _FltCurCfgWapRadiusSnoop_Type(Integer32):
    """Custom type fltCurCfgWapRadiusSnoop based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgWapRadiusSnoop_Type.__name__ = "Integer32"
_FltCurCfgWapRadiusSnoop_Object = MibTableColumn
fltCurCfgWapRadiusSnoop = _FltCurCfgWapRadiusSnoop_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 40),
    _FltCurCfgWapRadiusSnoop_Type()
)
fltCurCfgWapRadiusSnoop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgWapRadiusSnoop.setStatus("current")


class _FltCurCfgSrcIpMac_Type(Integer32):
    """Custom type fltCurCfgSrcIpMac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ip", 1),
          ("mac", 2))
    )


_FltCurCfgSrcIpMac_Type.__name__ = "Integer32"
_FltCurCfgSrcIpMac_Object = MibTableColumn
fltCurCfgSrcIpMac = _FltCurCfgSrcIpMac_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 41),
    _FltCurCfgSrcIpMac_Type()
)
fltCurCfgSrcIpMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgSrcIpMac.setStatus("current")


class _FltCurCfgDstIpMac_Type(Integer32):
    """Custom type fltCurCfgDstIpMac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ip", 1),
          ("mac", 2))
    )


_FltCurCfgDstIpMac_Type.__name__ = "Integer32"
_FltCurCfgDstIpMac_Object = MibTableColumn
fltCurCfgDstIpMac = _FltCurCfgDstIpMac_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 42),
    _FltCurCfgDstIpMac_Type()
)
fltCurCfgDstIpMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgDstIpMac.setStatus("current")


class _FltCurCfgIdslbHash_Type(Integer32):
    """Custom type fltCurCfgIdslbHash based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("both", 3),
          ("dip", 2),
          ("sip", 1))
    )


_FltCurCfgIdslbHash_Type.__name__ = "Integer32"
_FltCurCfgIdslbHash_Object = MibTableColumn
fltCurCfgIdslbHash = _FltCurCfgIdslbHash_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 43),
    _FltCurCfgIdslbHash_Type()
)
fltCurCfgIdslbHash.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgIdslbHash.setStatus("current")


class _FltCurCfgVlan_Type(Integer32):
    """Custom type fltCurCfgVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4090),
    )


_FltCurCfgVlan_Type.__name__ = "Integer32"
_FltCurCfgVlan_Object = MibTableColumn
fltCurCfgVlan = _FltCurCfgVlan_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 44),
    _FltCurCfgVlan_Type()
)
fltCurCfgVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgVlan.setStatus("current")


class _FltCurCfgName_Type(DisplayString):
    """Custom type fltCurCfgName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_FltCurCfgName_Type.__name__ = "DisplayString"
_FltCurCfgName_Object = MibTableColumn
fltCurCfgName = _FltCurCfgName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 45),
    _FltCurCfgName_Type()
)
fltCurCfgName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgName.setStatus("current")


class _FltCurCfgTcpRateLimit_Type(Integer32):
    """Custom type fltCurCfgTcpRateLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgTcpRateLimit_Type.__name__ = "Integer32"
_FltCurCfgTcpRateLimit_Object = MibTableColumn
fltCurCfgTcpRateLimit = _FltCurCfgTcpRateLimit_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 46),
    _FltCurCfgTcpRateLimit_Type()
)
fltCurCfgTcpRateLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgTcpRateLimit.setStatus("current")


class _FltCurCfgTcpRateMaxConn_Type(Integer32):
    """Custom type fltCurCfgTcpRateMaxConn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_FltCurCfgTcpRateMaxConn_Type.__name__ = "Integer32"
_FltCurCfgTcpRateMaxConn_Object = MibTableColumn
fltCurCfgTcpRateMaxConn = _FltCurCfgTcpRateMaxConn_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 47),
    _FltCurCfgTcpRateMaxConn_Type()
)
fltCurCfgTcpRateMaxConn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgTcpRateMaxConn.setStatus("current")


class _FltCurCfgHash_Type(Integer32):
    """Custom type fltCurCfgHash based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("both", 4),
          ("dip", 3),
          ("sip", 2),
          ("sipsport", 5))
    )


_FltCurCfgHash_Type.__name__ = "Integer32"
_FltCurCfgHash_Object = MibTableColumn
fltCurCfgHash = _FltCurCfgHash_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 48),
    _FltCurCfgHash_Type()
)
fltCurCfgHash.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgHash.setStatus("current")


class _FltCurCfgLayer7DenyState_Type(Integer32):
    """Custom type fltCurCfgLayer7DenyState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgLayer7DenyState_Type.__name__ = "Integer32"
_FltCurCfgLayer7DenyState_Object = MibTableColumn
fltCurCfgLayer7DenyState = _FltCurCfgLayer7DenyState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 50),
    _FltCurCfgLayer7DenyState_Type()
)
fltCurCfgLayer7DenyState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgLayer7DenyState.setStatus("current")
_FltCurCfgLayer7DenyUrlBmap_Type = OctetString
_FltCurCfgLayer7DenyUrlBmap_Object = MibTableColumn
fltCurCfgLayer7DenyUrlBmap = _FltCurCfgLayer7DenyUrlBmap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 51),
    _FltCurCfgLayer7DenyUrlBmap_Type()
)
fltCurCfgLayer7DenyUrlBmap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgLayer7DenyUrlBmap.setStatus("current")
_FltCurCfgGotoFilter_Type = Integer32
_FltCurCfgGotoFilter_Object = MibTableColumn
fltCurCfgGotoFilter = _FltCurCfgGotoFilter_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 52),
    _FltCurCfgGotoFilter_Type()
)
fltCurCfgGotoFilter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgGotoFilter.setStatus("current")


class _FltCurCfgRadiusWapPersist_Type(Integer32):
    """Custom type fltCurCfgRadiusWapPersist based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgRadiusWapPersist_Type.__name__ = "Integer32"
_FltCurCfgRadiusWapPersist_Object = MibTableColumn
fltCurCfgRadiusWapPersist = _FltCurCfgRadiusWapPersist_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 53),
    _FltCurCfgRadiusWapPersist_Type()
)
fltCurCfgRadiusWapPersist.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgRadiusWapPersist.setStatus("current")


class _FltCurCfgPbind_Type(Integer32):
    """Custom type fltCurCfgPbind based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgPbind_Type.__name__ = "Integer32"
_FltCurCfgPbind_Object = MibTableColumn
fltCurCfgPbind = _FltCurCfgPbind_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 54),
    _FltCurCfgPbind_Type()
)
fltCurCfgPbind.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgPbind.setStatus("current")


class _FltCurCfgTimeWindow_Type(Integer32):
    """Custom type fltCurCfgTimeWindow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_FltCurCfgTimeWindow_Type.__name__ = "Integer32"
_FltCurCfgTimeWindow_Object = MibTableColumn
fltCurCfgTimeWindow = _FltCurCfgTimeWindow_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 55),
    _FltCurCfgTimeWindow_Type()
)
fltCurCfgTimeWindow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgTimeWindow.setStatus("current")


class _FltCurCfgHoldDuration_Type(Integer32):
    """Custom type fltCurCfgHoldDuration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 65535),
    )


_FltCurCfgHoldDuration_Type.__name__ = "Integer32"
_FltCurCfgHoldDuration_Object = MibTableColumn
fltCurCfgHoldDuration = _FltCurCfgHoldDuration_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 56),
    _FltCurCfgHoldDuration_Type()
)
fltCurCfgHoldDuration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgHoldDuration.setStatus("current")


class _FltCurCfgPatternMatch_Type(Integer32):
    """Custom type fltCurCfgPatternMatch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgPatternMatch_Type.__name__ = "Integer32"
_FltCurCfgPatternMatch_Object = MibTableColumn
fltCurCfgPatternMatch = _FltCurCfgPatternMatch_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 57),
    _FltCurCfgPatternMatch_Type()
)
fltCurCfgPatternMatch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgPatternMatch.setStatus("current")


class _FltCurCfgLayer7DenyMatchAll_Type(Integer32):
    """Custom type fltCurCfgLayer7DenyMatchAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgLayer7DenyMatchAll_Type.__name__ = "Integer32"
_FltCurCfgLayer7DenyMatchAll_Object = MibTableColumn
fltCurCfgLayer7DenyMatchAll = _FltCurCfgLayer7DenyMatchAll_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 58),
    _FltCurCfgLayer7DenyMatchAll_Type()
)
fltCurCfgLayer7DenyMatchAll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgLayer7DenyMatchAll.setStatus("current")
_FltCurCfgProxyIp_Type = IpAddress
_FltCurCfgProxyIp_Object = MibTableColumn
fltCurCfgProxyIp = _FltCurCfgProxyIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 59),
    _FltCurCfgProxyIp_Type()
)
fltCurCfgProxyIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgProxyIp.setStatus("current")


class _FltCurCfgLayer7ParseAll_Type(Integer32):
    """Custom type fltCurCfgLayer7ParseAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgLayer7ParseAll_Type.__name__ = "Integer32"
_FltCurCfgLayer7ParseAll_Object = MibTableColumn
fltCurCfgLayer7ParseAll = _FltCurCfgLayer7ParseAll_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 60),
    _FltCurCfgLayer7ParseAll_Type()
)
fltCurCfgLayer7ParseAll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgLayer7ParseAll.setStatus("current")


class _FltCurCfgSecurityParseAll_Type(Integer32):
    """Custom type fltCurCfgSecurityParseAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgSecurityParseAll_Type.__name__ = "Integer32"
_FltCurCfgSecurityParseAll_Object = MibTableColumn
fltCurCfgSecurityParseAll = _FltCurCfgSecurityParseAll_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 61),
    _FltCurCfgSecurityParseAll_Type()
)
fltCurCfgSecurityParseAll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgSecurityParseAll.setStatus("current")
_FltCurCfgPatternMatchGroupBmap_Type = OctetString
_FltCurCfgPatternMatchGroupBmap_Object = MibTableColumn
fltCurCfgPatternMatchGroupBmap = _FltCurCfgPatternMatchGroupBmap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 62),
    _FltCurCfgPatternMatchGroupBmap_Type()
)
fltCurCfgPatternMatchGroupBmap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgPatternMatchGroupBmap.setStatus("current")


class _FltCurCfg8021pBitsValue_Type(Integer32):
    """Custom type fltCurCfg8021pBitsValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_FltCurCfg8021pBitsValue_Type.__name__ = "Integer32"
_FltCurCfg8021pBitsValue_Object = MibTableColumn
fltCurCfg8021pBitsValue = _FltCurCfg8021pBitsValue_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 63),
    _FltCurCfg8021pBitsValue_Type()
)
fltCurCfg8021pBitsValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfg8021pBitsValue.setStatus("current")


class _FltCurCfg8021pBitsMatch_Type(Integer32):
    """Custom type fltCurCfg8021pBitsMatch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfg8021pBitsMatch_Type.__name__ = "Integer32"
_FltCurCfg8021pBitsMatch_Object = MibTableColumn
fltCurCfg8021pBitsMatch = _FltCurCfg8021pBitsMatch_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 64),
    _FltCurCfg8021pBitsMatch_Type()
)
fltCurCfg8021pBitsMatch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfg8021pBitsMatch.setStatus("current")


class _FltCurCfgAclIpLength_Type(Integer32):
    """Custom type fltCurCfgAclIpLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_FltCurCfgAclIpLength_Type.__name__ = "Integer32"
_FltCurCfgAclIpLength_Object = MibTableColumn
fltCurCfgAclIpLength = _FltCurCfgAclIpLength_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 65),
    _FltCurCfgAclIpLength_Type()
)
fltCurCfgAclIpLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgAclIpLength.setStatus("current")
_FltCurCfgIdsGroup_Type = Integer32
_FltCurCfgIdsGroup_Object = MibTableColumn
fltCurCfgIdsGroup = _FltCurCfgIdsGroup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 66),
    _FltCurCfgIdsGroup_Type()
)
fltCurCfgIdsGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgIdsGroup.setStatus("current")


class _FltCurCfgEgressPip_Type(Integer32):
    """Custom type fltCurCfgEgressPip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgEgressPip_Type.__name__ = "Integer32"
_FltCurCfgEgressPip_Object = MibTableColumn
fltCurCfgEgressPip = _FltCurCfgEgressPip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 67),
    _FltCurCfgEgressPip_Type()
)
fltCurCfgEgressPip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgEgressPip.setStatus("current")


class _FltCurCfgDbind_Type(Integer32):
    """Custom type fltCurCfgDbind based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgDbind_Type.__name__ = "Integer32"
_FltCurCfgDbind_Object = MibTableColumn
fltCurCfgDbind = _FltCurCfgDbind_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 68),
    _FltCurCfgDbind_Type()
)
fltCurCfgDbind.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgDbind.setStatus("current")
_FltCurCfgRevBwmContract_Type = Integer32
_FltCurCfgRevBwmContract_Object = MibTableColumn
fltCurCfgRevBwmContract = _FltCurCfgRevBwmContract_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 69),
    _FltCurCfgRevBwmContract_Type()
)
fltCurCfgRevBwmContract.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgRevBwmContract.setStatus("current")


class _FltCurCfgReverse_Type(Integer32):
    """Custom type fltCurCfgReverse based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgReverse_Type.__name__ = "Integer32"
_FltCurCfgReverse_Object = MibTableColumn
fltCurCfgReverse = _FltCurCfgReverse_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 70),
    _FltCurCfgReverse_Type()
)
fltCurCfgReverse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgReverse.setStatus("current")


class _FltCurCfgParseChn_Type(Integer32):
    """Custom type fltCurCfgParseChn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgParseChn_Type.__name__ = "Integer32"
_FltCurCfgParseChn_Object = MibTableColumn
fltCurCfgParseChn = _FltCurCfgParseChn_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 71),
    _FltCurCfgParseChn_Type()
)
fltCurCfgParseChn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgParseChn.setStatus("current")
_FltCurCfgRtpBwmContract_Type = Integer32
_FltCurCfgRtpBwmContract_Object = MibTableColumn
fltCurCfgRtpBwmContract = _FltCurCfgRtpBwmContract_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 72),
    _FltCurCfgRtpBwmContract_Type()
)
fltCurCfgRtpBwmContract.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgRtpBwmContract.setStatus("current")


class _FltCurCfgSipParsing_Type(Integer32):
    """Custom type fltCurCfgSipParsing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgSipParsing_Type.__name__ = "Integer32"
_FltCurCfgSipParsing_Object = MibTableColumn
fltCurCfgSipParsing = _FltCurCfgSipParsing_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 73),
    _FltCurCfgSipParsing_Type()
)
fltCurCfgSipParsing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgSipParsing.setStatus("current")


class _FltCurCfgSessionMirror_Type(Integer32):
    """Custom type fltCurCfgSessionMirror based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgSessionMirror_Type.__name__ = "Integer32"
_FltCurCfgSessionMirror_Object = MibTableColumn
fltCurCfgSessionMirror = _FltCurCfgSessionMirror_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 74),
    _FltCurCfgSessionMirror_Type()
)
fltCurCfgSessionMirror.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgSessionMirror.setStatus("current")


class _FltCurCfgIpVer_Type(Integer32):
    """Custom type fltCurCfgIpVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_FltCurCfgIpVer_Type.__name__ = "Integer32"
_FltCurCfgIpVer_Object = MibTableColumn
fltCurCfgIpVer = _FltCurCfgIpVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 75),
    _FltCurCfgIpVer_Type()
)
fltCurCfgIpVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgIpVer.setStatus("current")


class _FltCurCfgIpv6Sip_Type(DisplayString):
    """Custom type fltCurCfgIpv6Sip based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_FltCurCfgIpv6Sip_Type.__name__ = "DisplayString"
_FltCurCfgIpv6Sip_Object = MibTableColumn
fltCurCfgIpv6Sip = _FltCurCfgIpv6Sip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 76),
    _FltCurCfgIpv6Sip_Type()
)
fltCurCfgIpv6Sip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgIpv6Sip.setStatus("current")


class _FltCurCfgIpv6Sprefix_Type(Integer32):
    """Custom type fltCurCfgIpv6Sprefix based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_FltCurCfgIpv6Sprefix_Type.__name__ = "Integer32"
_FltCurCfgIpv6Sprefix_Object = MibTableColumn
fltCurCfgIpv6Sprefix = _FltCurCfgIpv6Sprefix_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 77),
    _FltCurCfgIpv6Sprefix_Type()
)
fltCurCfgIpv6Sprefix.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgIpv6Sprefix.setStatus("current")


class _FltCurCfgIpv6Dip_Type(DisplayString):
    """Custom type fltCurCfgIpv6Dip based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_FltCurCfgIpv6Dip_Type.__name__ = "DisplayString"
_FltCurCfgIpv6Dip_Object = MibTableColumn
fltCurCfgIpv6Dip = _FltCurCfgIpv6Dip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 78),
    _FltCurCfgIpv6Dip_Type()
)
fltCurCfgIpv6Dip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgIpv6Dip.setStatus("current")


class _FltCurCfgIpv6Dprefix_Type(Integer32):
    """Custom type fltCurCfgIpv6Dprefix based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_FltCurCfgIpv6Dprefix_Type.__name__ = "Integer32"
_FltCurCfgIpv6Dprefix_Object = MibTableColumn
fltCurCfgIpv6Dprefix = _FltCurCfgIpv6Dprefix_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 79),
    _FltCurCfgIpv6Dprefix_Type()
)
fltCurCfgIpv6Dprefix.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgIpv6Dprefix.setStatus("current")


class _FltCurCfgHdrHash_Type(Integer32):
    """Custom type fltCurCfgHdrHash based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("headerhash", 2),
          ("none", 1))
    )


_FltCurCfgHdrHash_Type.__name__ = "Integer32"
_FltCurCfgHdrHash_Object = MibTableColumn
fltCurCfgHdrHash = _FltCurCfgHdrHash_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 80),
    _FltCurCfgHdrHash_Type()
)
fltCurCfgHdrHash.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgHdrHash.setStatus("current")


class _FltCurCfgHdrName_Type(DisplayString):
    """Custom type fltCurCfgHdrName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_FltCurCfgHdrName_Type.__name__ = "DisplayString"
_FltCurCfgHdrName_Object = MibTableColumn
fltCurCfgHdrName = _FltCurCfgHdrName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 81),
    _FltCurCfgHdrName_Type()
)
fltCurCfgHdrName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgHdrName.setStatus("current")


class _FltCurCfgHdrHashLen_Type(Integer32):
    """Custom type fltCurCfgHdrHashLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_FltCurCfgHdrHashLen_Type.__name__ = "Integer32"
_FltCurCfgHdrHashLen_Object = MibTableColumn
fltCurCfgHdrHashLen = _FltCurCfgHdrHashLen_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 82),
    _FltCurCfgHdrHashLen_Type()
)
fltCurCfgHdrHashLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgHdrHashLen.setStatus("current")


class _FltCurCfgL3Filter_Type(Integer32):
    """Custom type fltCurCfgL3Filter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgL3Filter_Type.__name__ = "Integer32"
_FltCurCfgL3Filter_Object = MibTableColumn
fltCurCfgL3Filter = _FltCurCfgL3Filter_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 83),
    _FltCurCfgL3Filter_Type()
)
fltCurCfgL3Filter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgL3Filter.setStatus("current")
_FltCurCfgNatIp_Type = IpAddress
_FltCurCfgNatIp_Object = MibTableColumn
fltCurCfgNatIp = _FltCurCfgNatIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 84),
    _FltCurCfgNatIp_Type()
)
fltCurCfgNatIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgNatIp.setStatus("current")


class _FltCurCfgIpv6Nip_Type(DisplayString):
    """Custom type fltCurCfgIpv6Nip based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_FltCurCfgIpv6Nip_Type.__name__ = "DisplayString"
_FltCurCfgIpv6Nip_Object = MibTableColumn
fltCurCfgIpv6Nip = _FltCurCfgIpv6Nip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 85),
    _FltCurCfgIpv6Nip_Type()
)
fltCurCfgIpv6Nip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgIpv6Nip.setStatus("current")


class _FltCurCfgIpv6Proxy_Type(DisplayString):
    """Custom type fltCurCfgIpv6Proxy based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_FltCurCfgIpv6Proxy_Type.__name__ = "DisplayString"
_FltCurCfgIpv6Proxy_Object = MibTableColumn
fltCurCfgIpv6Proxy = _FltCurCfgIpv6Proxy_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 86),
    _FltCurCfgIpv6Proxy_Type()
)
fltCurCfgIpv6Proxy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgIpv6Proxy.setStatus("current")


class _FltCurCfgL7SipFilt_Type(Integer32):
    """Custom type fltCurCfgL7SipFilt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgL7SipFilt_Type.__name__ = "Integer32"
_FltCurCfgL7SipFilt_Object = MibTableColumn
fltCurCfgL7SipFilt = _FltCurCfgL7SipFilt_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 87),
    _FltCurCfgL7SipFilt_Type()
)
fltCurCfgL7SipFilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgL7SipFilt.setStatus("current")


class _FltCurCfgNatMcastVlan_Type(Integer32):
    """Custom type fltCurCfgNatMcastVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4090),
    )


_FltCurCfgNatMcastVlan_Type.__name__ = "Integer32"
_FltCurCfgNatMcastVlan_Object = MibTableColumn
fltCurCfgNatMcastVlan = _FltCurCfgNatMcastVlan_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 88),
    _FltCurCfgNatMcastVlan_Type()
)
fltCurCfgNatMcastVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgNatMcastVlan.setStatus("current")


class _FltCurCfgNbind_Type(Integer32):
    """Custom type fltCurCfgNbind based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgNbind_Type.__name__ = "Integer32"
_FltCurCfgNbind_Object = MibTableColumn
fltCurCfgNbind = _FltCurCfgNbind_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 2, 1, 89),
    _FltCurCfgNbind_Type()
)
fltCurCfgNbind.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgNbind.setStatus("current")
_FltNewCfgTable_Object = MibTable
fltNewCfgTable = _FltNewCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3)
)
if mibBuilder.loadTexts:
    fltNewCfgTable.setStatus("current")
_FltNewCfgTableEntry_Object = MibTableRow
fltNewCfgTableEntry = _FltNewCfgTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1)
)
fltNewCfgTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "fltNewCfgIndx"),
)
if mibBuilder.loadTexts:
    fltNewCfgTableEntry.setStatus("current")
_FltNewCfgIndx_Type = Integer32
_FltNewCfgIndx_Object = MibTableColumn
fltNewCfgIndx = _FltNewCfgIndx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 1),
    _FltNewCfgIndx_Type()
)
fltNewCfgIndx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltNewCfgIndx.setStatus("current")
_FltNewCfgSrcIp_Type = IpAddress
_FltNewCfgSrcIp_Object = MibTableColumn
fltNewCfgSrcIp = _FltNewCfgSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 2),
    _FltNewCfgSrcIp_Type()
)
fltNewCfgSrcIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgSrcIp.setStatus("current")
_FltNewCfgSrcIpMask_Type = IpAddress
_FltNewCfgSrcIpMask_Object = MibTableColumn
fltNewCfgSrcIpMask = _FltNewCfgSrcIpMask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 3),
    _FltNewCfgSrcIpMask_Type()
)
fltNewCfgSrcIpMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgSrcIpMask.setStatus("current")
_FltNewCfgDstIp_Type = IpAddress
_FltNewCfgDstIp_Object = MibTableColumn
fltNewCfgDstIp = _FltNewCfgDstIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 4),
    _FltNewCfgDstIp_Type()
)
fltNewCfgDstIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgDstIp.setStatus("current")
_FltNewCfgDstIpMask_Type = IpAddress
_FltNewCfgDstIpMask_Object = MibTableColumn
fltNewCfgDstIpMask = _FltNewCfgDstIpMask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 5),
    _FltNewCfgDstIpMask_Type()
)
fltNewCfgDstIpMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgDstIpMask.setStatus("current")


class _FltNewCfgProtocol_Type(Integer32):
    """Custom type fltNewCfgProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_FltNewCfgProtocol_Type.__name__ = "Integer32"
_FltNewCfgProtocol_Object = MibTableColumn
fltNewCfgProtocol = _FltNewCfgProtocol_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 6),
    _FltNewCfgProtocol_Type()
)
fltNewCfgProtocol.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgProtocol.setStatus("current")


class _FltNewCfgRangeHighSrcPort_Type(Integer32):
    """Custom type fltNewCfgRangeHighSrcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_FltNewCfgRangeHighSrcPort_Type.__name__ = "Integer32"
_FltNewCfgRangeHighSrcPort_Object = MibTableColumn
fltNewCfgRangeHighSrcPort = _FltNewCfgRangeHighSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 7),
    _FltNewCfgRangeHighSrcPort_Type()
)
fltNewCfgRangeHighSrcPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgRangeHighSrcPort.setStatus("current")


class _FltNewCfgRangeLowSrcPort_Type(Integer32):
    """Custom type fltNewCfgRangeLowSrcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_FltNewCfgRangeLowSrcPort_Type.__name__ = "Integer32"
_FltNewCfgRangeLowSrcPort_Object = MibTableColumn
fltNewCfgRangeLowSrcPort = _FltNewCfgRangeLowSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 8),
    _FltNewCfgRangeLowSrcPort_Type()
)
fltNewCfgRangeLowSrcPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgRangeLowSrcPort.setStatus("current")


class _FltNewCfgRangeLowDstPort_Type(Integer32):
    """Custom type fltNewCfgRangeLowDstPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_FltNewCfgRangeLowDstPort_Type.__name__ = "Integer32"
_FltNewCfgRangeLowDstPort_Object = MibTableColumn
fltNewCfgRangeLowDstPort = _FltNewCfgRangeLowDstPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 9),
    _FltNewCfgRangeLowDstPort_Type()
)
fltNewCfgRangeLowDstPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgRangeLowDstPort.setStatus("current")


class _FltNewCfgRangeHighDstPort_Type(Integer32):
    """Custom type fltNewCfgRangeHighDstPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_FltNewCfgRangeHighDstPort_Type.__name__ = "Integer32"
_FltNewCfgRangeHighDstPort_Object = MibTableColumn
fltNewCfgRangeHighDstPort = _FltNewCfgRangeHighDstPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 10),
    _FltNewCfgRangeHighDstPort_Type()
)
fltNewCfgRangeHighDstPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgRangeHighDstPort.setStatus("current")


class _FltNewCfgAction_Type(Integer32):
    """Custom type fltNewCfgAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("allow", 1),
          ("deny", 2),
          ("goto", 5),
          ("nat", 4),
          ("redirect", 3))
    )


_FltNewCfgAction_Type.__name__ = "Integer32"
_FltNewCfgAction_Object = MibTableColumn
fltNewCfgAction = _FltNewCfgAction_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 11),
    _FltNewCfgAction_Type()
)
fltNewCfgAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgAction.setStatus("current")


class _FltNewCfgRedirPort_Type(Integer32):
    """Custom type fltNewCfgRedirPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_FltNewCfgRedirPort_Type.__name__ = "Integer32"
_FltNewCfgRedirPort_Object = MibTableColumn
fltNewCfgRedirPort = _FltNewCfgRedirPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 12),
    _FltNewCfgRedirPort_Type()
)
fltNewCfgRedirPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgRedirPort.setStatus("current")
_FltNewCfgRedirGroup_Type = Integer32
_FltNewCfgRedirGroup_Object = MibTableColumn
fltNewCfgRedirGroup = _FltNewCfgRedirGroup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 13),
    _FltNewCfgRedirGroup_Type()
)
fltNewCfgRedirGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgRedirGroup.setStatus("current")


class _FltNewCfgLog_Type(Integer32):
    """Custom type fltNewCfgLog based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgLog_Type.__name__ = "Integer32"
_FltNewCfgLog_Object = MibTableColumn
fltNewCfgLog = _FltNewCfgLog_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 14),
    _FltNewCfgLog_Type()
)
fltNewCfgLog.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgLog.setStatus("current")


class _FltNewCfgState_Type(Integer32):
    """Custom type fltNewCfgState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgState_Type.__name__ = "Integer32"
_FltNewCfgState_Object = MibTableColumn
fltNewCfgState = _FltNewCfgState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 15),
    _FltNewCfgState_Type()
)
fltNewCfgState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgState.setStatus("current")


class _FltNewCfgDelete_Type(Integer32):
    """Custom type fltNewCfgDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_FltNewCfgDelete_Type.__name__ = "Integer32"
_FltNewCfgDelete_Object = MibTableColumn
fltNewCfgDelete = _FltNewCfgDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 16),
    _FltNewCfgDelete_Type()
)
fltNewCfgDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgDelete.setStatus("current")


class _FltNewCfgNat_Type(Integer32):
    """Custom type fltNewCfgNat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("destination-address", 1),
          ("multicast-address", 3),
          ("source-address", 2))
    )


_FltNewCfgNat_Type.__name__ = "Integer32"
_FltNewCfgNat_Object = MibTableColumn
fltNewCfgNat = _FltNewCfgNat_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 17),
    _FltNewCfgNat_Type()
)
fltNewCfgNat.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgNat.setStatus("current")


class _FltNewCfgCache_Type(Integer32):
    """Custom type fltNewCfgCache based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgCache_Type.__name__ = "Integer32"
_FltNewCfgCache_Object = MibTableColumn
fltNewCfgCache = _FltNewCfgCache_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 18),
    _FltNewCfgCache_Type()
)
fltNewCfgCache.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgCache.setStatus("current")


class _FltNewCfgInvert_Type(Integer32):
    """Custom type fltNewCfgInvert based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgInvert_Type.__name__ = "Integer32"
_FltNewCfgInvert_Object = MibTableColumn
fltNewCfgInvert = _FltNewCfgInvert_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 19),
    _FltNewCfgInvert_Type()
)
fltNewCfgInvert.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgInvert.setStatus("current")


class _FltNewCfgClientProxy_Type(Integer32):
    """Custom type fltNewCfgClientProxy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgClientProxy_Type.__name__ = "Integer32"
_FltNewCfgClientProxy_Object = MibTableColumn
fltNewCfgClientProxy = _FltNewCfgClientProxy_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 20),
    _FltNewCfgClientProxy_Type()
)
fltNewCfgClientProxy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgClientProxy.setStatus("current")


class _FltNewCfgTcpAck_Type(Integer32):
    """Custom type fltNewCfgTcpAck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgTcpAck_Type.__name__ = "Integer32"
_FltNewCfgTcpAck_Object = MibTableColumn
fltNewCfgTcpAck = _FltNewCfgTcpAck_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 21),
    _FltNewCfgTcpAck_Type()
)
fltNewCfgTcpAck.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgTcpAck.setStatus("current")
_FltNewCfgSrcMac_Type = PhysAddress
_FltNewCfgSrcMac_Object = MibTableColumn
fltNewCfgSrcMac = _FltNewCfgSrcMac_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 23),
    _FltNewCfgSrcMac_Type()
)
fltNewCfgSrcMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgSrcMac.setStatus("current")
_FltNewCfgDstMac_Type = PhysAddress
_FltNewCfgDstMac_Object = MibTableColumn
fltNewCfgDstMac = _FltNewCfgDstMac_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 24),
    _FltNewCfgDstMac_Type()
)
fltNewCfgDstMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgDstMac.setStatus("current")


class _FltNewCfgFtpNatActive_Type(Integer32):
    """Custom type fltNewCfgFtpNatActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgFtpNatActive_Type.__name__ = "Integer32"
_FltNewCfgFtpNatActive_Object = MibTableColumn
fltNewCfgFtpNatActive = _FltNewCfgFtpNatActive_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 25),
    _FltNewCfgFtpNatActive_Type()
)
fltNewCfgFtpNatActive.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgFtpNatActive.setStatus("current")


class _FltNewCfgAclTcpUrg_Type(Integer32):
    """Custom type fltNewCfgAclTcpUrg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_FltNewCfgAclTcpUrg_Type.__name__ = "Integer32"
_FltNewCfgAclTcpUrg_Object = MibTableColumn
fltNewCfgAclTcpUrg = _FltNewCfgAclTcpUrg_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 26),
    _FltNewCfgAclTcpUrg_Type()
)
fltNewCfgAclTcpUrg.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgAclTcpUrg.setStatus("current")


class _FltNewCfgAclTcpAck_Type(Integer32):
    """Custom type fltNewCfgAclTcpAck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_FltNewCfgAclTcpAck_Type.__name__ = "Integer32"
_FltNewCfgAclTcpAck_Object = MibTableColumn
fltNewCfgAclTcpAck = _FltNewCfgAclTcpAck_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 27),
    _FltNewCfgAclTcpAck_Type()
)
fltNewCfgAclTcpAck.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgAclTcpAck.setStatus("current")


class _FltNewCfgAclTcpPsh_Type(Integer32):
    """Custom type fltNewCfgAclTcpPsh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_FltNewCfgAclTcpPsh_Type.__name__ = "Integer32"
_FltNewCfgAclTcpPsh_Object = MibTableColumn
fltNewCfgAclTcpPsh = _FltNewCfgAclTcpPsh_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 28),
    _FltNewCfgAclTcpPsh_Type()
)
fltNewCfgAclTcpPsh.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgAclTcpPsh.setStatus("current")


class _FltNewCfgAclTcpRst_Type(Integer32):
    """Custom type fltNewCfgAclTcpRst based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_FltNewCfgAclTcpRst_Type.__name__ = "Integer32"
_FltNewCfgAclTcpRst_Object = MibTableColumn
fltNewCfgAclTcpRst = _FltNewCfgAclTcpRst_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 29),
    _FltNewCfgAclTcpRst_Type()
)
fltNewCfgAclTcpRst.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgAclTcpRst.setStatus("current")


class _FltNewCfgAclTcpSyn_Type(Integer32):
    """Custom type fltNewCfgAclTcpSyn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_FltNewCfgAclTcpSyn_Type.__name__ = "Integer32"
_FltNewCfgAclTcpSyn_Object = MibTableColumn
fltNewCfgAclTcpSyn = _FltNewCfgAclTcpSyn_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 30),
    _FltNewCfgAclTcpSyn_Type()
)
fltNewCfgAclTcpSyn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgAclTcpSyn.setStatus("current")


class _FltNewCfgAclTcpFin_Type(Integer32):
    """Custom type fltNewCfgAclTcpFin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_FltNewCfgAclTcpFin_Type.__name__ = "Integer32"
_FltNewCfgAclTcpFin_Object = MibTableColumn
fltNewCfgAclTcpFin = _FltNewCfgAclTcpFin_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 31),
    _FltNewCfgAclTcpFin_Type()
)
fltNewCfgAclTcpFin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgAclTcpFin.setStatus("current")


class _FltNewCfgAclIcmp_Type(Integer32):
    """Custom type fltNewCfgAclIcmp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_FltNewCfgAclIcmp_Type.__name__ = "Integer32"
_FltNewCfgAclIcmp_Object = MibTableColumn
fltNewCfgAclIcmp = _FltNewCfgAclIcmp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 32),
    _FltNewCfgAclIcmp_Type()
)
fltNewCfgAclIcmp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgAclIcmp.setStatus("current")


class _FltNewCfgAclIpOption_Type(Integer32):
    """Custom type fltNewCfgAclIpOption based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_FltNewCfgAclIpOption_Type.__name__ = "Integer32"
_FltNewCfgAclIpOption_Object = MibTableColumn
fltNewCfgAclIpOption = _FltNewCfgAclIpOption_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 33),
    _FltNewCfgAclIpOption_Type()
)
fltNewCfgAclIpOption.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgAclIpOption.setStatus("current")
_FltNewCfgBwmContract_Type = Integer32
_FltNewCfgBwmContract_Object = MibTableColumn
fltNewCfgBwmContract = _FltNewCfgBwmContract_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 34),
    _FltNewCfgBwmContract_Type()
)
fltNewCfgBwmContract.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgBwmContract.setStatus("current")


class _FltNewCfgAclIpTos_Type(Integer32):
    """Custom type fltNewCfgAclIpTos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_FltNewCfgAclIpTos_Type.__name__ = "Integer32"
_FltNewCfgAclIpTos_Object = MibTableColumn
fltNewCfgAclIpTos = _FltNewCfgAclIpTos_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 35),
    _FltNewCfgAclIpTos_Type()
)
fltNewCfgAclIpTos.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgAclIpTos.setStatus("current")


class _FltNewCfgAclIpTosMask_Type(Integer32):
    """Custom type fltNewCfgAclIpTosMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_FltNewCfgAclIpTosMask_Type.__name__ = "Integer32"
_FltNewCfgAclIpTosMask_Object = MibTableColumn
fltNewCfgAclIpTosMask = _FltNewCfgAclIpTosMask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 36),
    _FltNewCfgAclIpTosMask_Type()
)
fltNewCfgAclIpTosMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgAclIpTosMask.setStatus("current")


class _FltNewCfgAclIpTosNew_Type(Integer32):
    """Custom type fltNewCfgAclIpTosNew based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_FltNewCfgAclIpTosNew_Type.__name__ = "Integer32"
_FltNewCfgAclIpTosNew_Object = MibTableColumn
fltNewCfgAclIpTosNew = _FltNewCfgAclIpTosNew_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 37),
    _FltNewCfgAclIpTosNew_Type()
)
fltNewCfgAclIpTosNew.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgAclIpTosNew.setStatus("current")


class _FltNewCfgFwlb_Type(Integer32):
    """Custom type fltNewCfgFwlb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgFwlb_Type.__name__ = "Integer32"
_FltNewCfgFwlb_Object = MibTableColumn
fltNewCfgFwlb = _FltNewCfgFwlb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 38),
    _FltNewCfgFwlb_Type()
)
fltNewCfgFwlb.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgFwlb.setStatus("current")


class _FltNewCfgNatTimeout_Type(Integer32):
    """Custom type fltNewCfgNatTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(4, 32768),
    )


_FltNewCfgNatTimeout_Type.__name__ = "Integer32"
_FltNewCfgNatTimeout_Object = MibTableColumn
fltNewCfgNatTimeout = _FltNewCfgNatTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 39),
    _FltNewCfgNatTimeout_Type()
)
fltNewCfgNatTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgNatTimeout.setStatus("current")


class _FltNewCfgLinklb_Type(Integer32):
    """Custom type fltNewCfgLinklb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgLinklb_Type.__name__ = "Integer32"
_FltNewCfgLinklb_Object = MibTableColumn
fltNewCfgLinklb = _FltNewCfgLinklb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 40),
    _FltNewCfgLinklb_Type()
)
fltNewCfgLinklb.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgLinklb.setStatus("current")


class _FltNewCfgWapRadiusSnoop_Type(Integer32):
    """Custom type fltNewCfgWapRadiusSnoop based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgWapRadiusSnoop_Type.__name__ = "Integer32"
_FltNewCfgWapRadiusSnoop_Object = MibTableColumn
fltNewCfgWapRadiusSnoop = _FltNewCfgWapRadiusSnoop_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 41),
    _FltNewCfgWapRadiusSnoop_Type()
)
fltNewCfgWapRadiusSnoop.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgWapRadiusSnoop.setStatus("current")


class _FltNewCfgSrcIpMac_Type(Integer32):
    """Custom type fltNewCfgSrcIpMac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ip", 1),
          ("mac", 2))
    )


_FltNewCfgSrcIpMac_Type.__name__ = "Integer32"
_FltNewCfgSrcIpMac_Object = MibTableColumn
fltNewCfgSrcIpMac = _FltNewCfgSrcIpMac_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 42),
    _FltNewCfgSrcIpMac_Type()
)
fltNewCfgSrcIpMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgSrcIpMac.setStatus("current")


class _FltNewCfgDstIpMac_Type(Integer32):
    """Custom type fltNewCfgDstIpMac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ip", 1),
          ("mac", 2))
    )


_FltNewCfgDstIpMac_Type.__name__ = "Integer32"
_FltNewCfgDstIpMac_Object = MibTableColumn
fltNewCfgDstIpMac = _FltNewCfgDstIpMac_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 43),
    _FltNewCfgDstIpMac_Type()
)
fltNewCfgDstIpMac.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgDstIpMac.setStatus("current")


class _FltNewCfgIdslbHash_Type(Integer32):
    """Custom type fltNewCfgIdslbHash based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("both", 3),
          ("dip", 2),
          ("sip", 1))
    )


_FltNewCfgIdslbHash_Type.__name__ = "Integer32"
_FltNewCfgIdslbHash_Object = MibTableColumn
fltNewCfgIdslbHash = _FltNewCfgIdslbHash_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 44),
    _FltNewCfgIdslbHash_Type()
)
fltNewCfgIdslbHash.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgIdslbHash.setStatus("current")


class _FltNewCfgVlan_Type(Integer32):
    """Custom type fltNewCfgVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4090),
    )


_FltNewCfgVlan_Type.__name__ = "Integer32"
_FltNewCfgVlan_Object = MibTableColumn
fltNewCfgVlan = _FltNewCfgVlan_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 45),
    _FltNewCfgVlan_Type()
)
fltNewCfgVlan.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgVlan.setStatus("current")


class _FltNewCfgName_Type(DisplayString):
    """Custom type fltNewCfgName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_FltNewCfgName_Type.__name__ = "DisplayString"
_FltNewCfgName_Object = MibTableColumn
fltNewCfgName = _FltNewCfgName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 46),
    _FltNewCfgName_Type()
)
fltNewCfgName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgName.setStatus("current")


class _FltNewCfgTcpRateLimit_Type(Integer32):
    """Custom type fltNewCfgTcpRateLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgTcpRateLimit_Type.__name__ = "Integer32"
_FltNewCfgTcpRateLimit_Object = MibTableColumn
fltNewCfgTcpRateLimit = _FltNewCfgTcpRateLimit_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 47),
    _FltNewCfgTcpRateLimit_Type()
)
fltNewCfgTcpRateLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgTcpRateLimit.setStatus("current")


class _FltNewCfgTcpRateMaxConn_Type(Integer32):
    """Custom type fltNewCfgTcpRateMaxConn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_FltNewCfgTcpRateMaxConn_Type.__name__ = "Integer32"
_FltNewCfgTcpRateMaxConn_Object = MibTableColumn
fltNewCfgTcpRateMaxConn = _FltNewCfgTcpRateMaxConn_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 48),
    _FltNewCfgTcpRateMaxConn_Type()
)
fltNewCfgTcpRateMaxConn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgTcpRateMaxConn.setStatus("current")


class _FltNewCfgHash_Type(Integer32):
    """Custom type fltNewCfgHash based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("both", 4),
          ("dip", 3),
          ("sip", 2),
          ("sipsport", 5))
    )


_FltNewCfgHash_Type.__name__ = "Integer32"
_FltNewCfgHash_Object = MibTableColumn
fltNewCfgHash = _FltNewCfgHash_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 49),
    _FltNewCfgHash_Type()
)
fltNewCfgHash.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgHash.setStatus("current")


class _FltNewCfgLayer7DenyState_Type(Integer32):
    """Custom type fltNewCfgLayer7DenyState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgLayer7DenyState_Type.__name__ = "Integer32"
_FltNewCfgLayer7DenyState_Object = MibTableColumn
fltNewCfgLayer7DenyState = _FltNewCfgLayer7DenyState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 51),
    _FltNewCfgLayer7DenyState_Type()
)
fltNewCfgLayer7DenyState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgLayer7DenyState.setStatus("current")
_FltNewCfgLayer7DenyUrlBmap_Type = OctetString
_FltNewCfgLayer7DenyUrlBmap_Object = MibTableColumn
fltNewCfgLayer7DenyUrlBmap = _FltNewCfgLayer7DenyUrlBmap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 52),
    _FltNewCfgLayer7DenyUrlBmap_Type()
)
fltNewCfgLayer7DenyUrlBmap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltNewCfgLayer7DenyUrlBmap.setStatus("current")
_FltNewCfgLayer7DenyAddUrl_Type = Integer32
_FltNewCfgLayer7DenyAddUrl_Object = MibTableColumn
fltNewCfgLayer7DenyAddUrl = _FltNewCfgLayer7DenyAddUrl_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 53),
    _FltNewCfgLayer7DenyAddUrl_Type()
)
fltNewCfgLayer7DenyAddUrl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgLayer7DenyAddUrl.setStatus("current")
_FltNewCfgLayer7DenyRemUrl_Type = Integer32
_FltNewCfgLayer7DenyRemUrl_Object = MibTableColumn
fltNewCfgLayer7DenyRemUrl = _FltNewCfgLayer7DenyRemUrl_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 54),
    _FltNewCfgLayer7DenyRemUrl_Type()
)
fltNewCfgLayer7DenyRemUrl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgLayer7DenyRemUrl.setStatus("current")
_FltNewCfgGotoFilter_Type = Integer32
_FltNewCfgGotoFilter_Object = MibTableColumn
fltNewCfgGotoFilter = _FltNewCfgGotoFilter_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 55),
    _FltNewCfgGotoFilter_Type()
)
fltNewCfgGotoFilter.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgGotoFilter.setStatus("current")


class _FltNewCfgRadiusWapPersist_Type(Integer32):
    """Custom type fltNewCfgRadiusWapPersist based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgRadiusWapPersist_Type.__name__ = "Integer32"
_FltNewCfgRadiusWapPersist_Object = MibTableColumn
fltNewCfgRadiusWapPersist = _FltNewCfgRadiusWapPersist_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 56),
    _FltNewCfgRadiusWapPersist_Type()
)
fltNewCfgRadiusWapPersist.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgRadiusWapPersist.setStatus("current")


class _FltNewCfgPbind_Type(Integer32):
    """Custom type fltNewCfgPbind based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgPbind_Type.__name__ = "Integer32"
_FltNewCfgPbind_Object = MibTableColumn
fltNewCfgPbind = _FltNewCfgPbind_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 57),
    _FltNewCfgPbind_Type()
)
fltNewCfgPbind.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgPbind.setStatus("current")


class _FltNewCfgTimeWindow_Type(Integer32):
    """Custom type fltNewCfgTimeWindow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_FltNewCfgTimeWindow_Type.__name__ = "Integer32"
_FltNewCfgTimeWindow_Object = MibTableColumn
fltNewCfgTimeWindow = _FltNewCfgTimeWindow_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 58),
    _FltNewCfgTimeWindow_Type()
)
fltNewCfgTimeWindow.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgTimeWindow.setStatus("current")


class _FltNewCfgHoldDuration_Type(Integer32):
    """Custom type fltNewCfgHoldDuration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 65535),
    )


_FltNewCfgHoldDuration_Type.__name__ = "Integer32"
_FltNewCfgHoldDuration_Object = MibTableColumn
fltNewCfgHoldDuration = _FltNewCfgHoldDuration_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 59),
    _FltNewCfgHoldDuration_Type()
)
fltNewCfgHoldDuration.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgHoldDuration.setStatus("current")


class _FltNewCfgPatternMatch_Type(Integer32):
    """Custom type fltNewCfgPatternMatch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgPatternMatch_Type.__name__ = "Integer32"
_FltNewCfgPatternMatch_Object = MibTableColumn
fltNewCfgPatternMatch = _FltNewCfgPatternMatch_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 60),
    _FltNewCfgPatternMatch_Type()
)
fltNewCfgPatternMatch.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgPatternMatch.setStatus("current")


class _FltNewCfgLayer7DenyMatchAll_Type(Integer32):
    """Custom type fltNewCfgLayer7DenyMatchAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgLayer7DenyMatchAll_Type.__name__ = "Integer32"
_FltNewCfgLayer7DenyMatchAll_Object = MibTableColumn
fltNewCfgLayer7DenyMatchAll = _FltNewCfgLayer7DenyMatchAll_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 61),
    _FltNewCfgLayer7DenyMatchAll_Type()
)
fltNewCfgLayer7DenyMatchAll.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgLayer7DenyMatchAll.setStatus("current")
_FltNewCfgProxyIp_Type = IpAddress
_FltNewCfgProxyIp_Object = MibTableColumn
fltNewCfgProxyIp = _FltNewCfgProxyIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 62),
    _FltNewCfgProxyIp_Type()
)
fltNewCfgProxyIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgProxyIp.setStatus("current")


class _FltNewCfgLayer7ParseAll_Type(Integer32):
    """Custom type fltNewCfgLayer7ParseAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgLayer7ParseAll_Type.__name__ = "Integer32"
_FltNewCfgLayer7ParseAll_Object = MibTableColumn
fltNewCfgLayer7ParseAll = _FltNewCfgLayer7ParseAll_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 63),
    _FltNewCfgLayer7ParseAll_Type()
)
fltNewCfgLayer7ParseAll.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgLayer7ParseAll.setStatus("current")


class _FltNewCfgSecurityParseAll_Type(Integer32):
    """Custom type fltNewCfgSecurityParseAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgSecurityParseAll_Type.__name__ = "Integer32"
_FltNewCfgSecurityParseAll_Object = MibTableColumn
fltNewCfgSecurityParseAll = _FltNewCfgSecurityParseAll_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 64),
    _FltNewCfgSecurityParseAll_Type()
)
fltNewCfgSecurityParseAll.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgSecurityParseAll.setStatus("current")
_FltNewCfgPatternMatchGroupBmap_Type = OctetString
_FltNewCfgPatternMatchGroupBmap_Object = MibTableColumn
fltNewCfgPatternMatchGroupBmap = _FltNewCfgPatternMatchGroupBmap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 65),
    _FltNewCfgPatternMatchGroupBmap_Type()
)
fltNewCfgPatternMatchGroupBmap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltNewCfgPatternMatchGroupBmap.setStatus("current")
_FltNewCfgAddPatternMatchGroup_Type = Integer32
_FltNewCfgAddPatternMatchGroup_Object = MibTableColumn
fltNewCfgAddPatternMatchGroup = _FltNewCfgAddPatternMatchGroup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 66),
    _FltNewCfgAddPatternMatchGroup_Type()
)
fltNewCfgAddPatternMatchGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgAddPatternMatchGroup.setStatus("current")
_FltNewCfgRemPatternMatchGroup_Type = Integer32
_FltNewCfgRemPatternMatchGroup_Object = MibTableColumn
fltNewCfgRemPatternMatchGroup = _FltNewCfgRemPatternMatchGroup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 67),
    _FltNewCfgRemPatternMatchGroup_Type()
)
fltNewCfgRemPatternMatchGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgRemPatternMatchGroup.setStatus("current")


class _FltNewCfg8021pBitsValue_Type(Integer32):
    """Custom type fltNewCfg8021pBitsValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_FltNewCfg8021pBitsValue_Type.__name__ = "Integer32"
_FltNewCfg8021pBitsValue_Object = MibTableColumn
fltNewCfg8021pBitsValue = _FltNewCfg8021pBitsValue_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 68),
    _FltNewCfg8021pBitsValue_Type()
)
fltNewCfg8021pBitsValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfg8021pBitsValue.setStatus("current")


class _FltNewCfg8021pBitsMatch_Type(Integer32):
    """Custom type fltNewCfg8021pBitsMatch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfg8021pBitsMatch_Type.__name__ = "Integer32"
_FltNewCfg8021pBitsMatch_Object = MibTableColumn
fltNewCfg8021pBitsMatch = _FltNewCfg8021pBitsMatch_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 69),
    _FltNewCfg8021pBitsMatch_Type()
)
fltNewCfg8021pBitsMatch.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfg8021pBitsMatch.setStatus("current")


class _FltNewCfgAclIpLength_Type(Integer32):
    """Custom type fltNewCfgAclIpLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_FltNewCfgAclIpLength_Type.__name__ = "Integer32"
_FltNewCfgAclIpLength_Object = MibTableColumn
fltNewCfgAclIpLength = _FltNewCfgAclIpLength_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 70),
    _FltNewCfgAclIpLength_Type()
)
fltNewCfgAclIpLength.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgAclIpLength.setStatus("current")
_FltNewCfgIdsGroup_Type = Integer32
_FltNewCfgIdsGroup_Object = MibTableColumn
fltNewCfgIdsGroup = _FltNewCfgIdsGroup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 71),
    _FltNewCfgIdsGroup_Type()
)
fltNewCfgIdsGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgIdsGroup.setStatus("current")


class _FltNewCfgEgressPip_Type(Integer32):
    """Custom type fltNewCfgEgressPip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgEgressPip_Type.__name__ = "Integer32"
_FltNewCfgEgressPip_Object = MibTableColumn
fltNewCfgEgressPip = _FltNewCfgEgressPip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 72),
    _FltNewCfgEgressPip_Type()
)
fltNewCfgEgressPip.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgEgressPip.setStatus("current")


class _FltNewCfgDbind_Type(Integer32):
    """Custom type fltNewCfgDbind based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgDbind_Type.__name__ = "Integer32"
_FltNewCfgDbind_Object = MibTableColumn
fltNewCfgDbind = _FltNewCfgDbind_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 73),
    _FltNewCfgDbind_Type()
)
fltNewCfgDbind.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgDbind.setStatus("current")
_FltNewCfgRevBwmContract_Type = Integer32
_FltNewCfgRevBwmContract_Object = MibTableColumn
fltNewCfgRevBwmContract = _FltNewCfgRevBwmContract_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 74),
    _FltNewCfgRevBwmContract_Type()
)
fltNewCfgRevBwmContract.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgRevBwmContract.setStatus("current")


class _FltNewCfgReverse_Type(Integer32):
    """Custom type fltNewCfgReverse based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgReverse_Type.__name__ = "Integer32"
_FltNewCfgReverse_Object = MibTableColumn
fltNewCfgReverse = _FltNewCfgReverse_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 75),
    _FltNewCfgReverse_Type()
)
fltNewCfgReverse.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgReverse.setStatus("current")


class _FltNewCfgParseChn_Type(Integer32):
    """Custom type fltNewCfgParseChn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgParseChn_Type.__name__ = "Integer32"
_FltNewCfgParseChn_Object = MibTableColumn
fltNewCfgParseChn = _FltNewCfgParseChn_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 76),
    _FltNewCfgParseChn_Type()
)
fltNewCfgParseChn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgParseChn.setStatus("current")
_FltNewCfgRtpBwmContract_Type = Integer32
_FltNewCfgRtpBwmContract_Object = MibTableColumn
fltNewCfgRtpBwmContract = _FltNewCfgRtpBwmContract_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 77),
    _FltNewCfgRtpBwmContract_Type()
)
fltNewCfgRtpBwmContract.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgRtpBwmContract.setStatus("current")


class _FltNewCfgSipParsing_Type(Integer32):
    """Custom type fltNewCfgSipParsing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgSipParsing_Type.__name__ = "Integer32"
_FltNewCfgSipParsing_Object = MibTableColumn
fltNewCfgSipParsing = _FltNewCfgSipParsing_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 78),
    _FltNewCfgSipParsing_Type()
)
fltNewCfgSipParsing.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgSipParsing.setStatus("current")


class _FltNewCfgSessionMirror_Type(Integer32):
    """Custom type fltNewCfgSessionMirror based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgSessionMirror_Type.__name__ = "Integer32"
_FltNewCfgSessionMirror_Object = MibTableColumn
fltNewCfgSessionMirror = _FltNewCfgSessionMirror_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 79),
    _FltNewCfgSessionMirror_Type()
)
fltNewCfgSessionMirror.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgSessionMirror.setStatus("current")


class _FltNewCfgIpVer_Type(Integer32):
    """Custom type fltNewCfgIpVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_FltNewCfgIpVer_Type.__name__ = "Integer32"
_FltNewCfgIpVer_Object = MibTableColumn
fltNewCfgIpVer = _FltNewCfgIpVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 80),
    _FltNewCfgIpVer_Type()
)
fltNewCfgIpVer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgIpVer.setStatus("current")


class _FltNewCfgIpv6Sip_Type(DisplayString):
    """Custom type fltNewCfgIpv6Sip based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_FltNewCfgIpv6Sip_Type.__name__ = "DisplayString"
_FltNewCfgIpv6Sip_Object = MibTableColumn
fltNewCfgIpv6Sip = _FltNewCfgIpv6Sip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 81),
    _FltNewCfgIpv6Sip_Type()
)
fltNewCfgIpv6Sip.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgIpv6Sip.setStatus("current")


class _FltNewCfgIpv6Sprefix_Type(Integer32):
    """Custom type fltNewCfgIpv6Sprefix based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_FltNewCfgIpv6Sprefix_Type.__name__ = "Integer32"
_FltNewCfgIpv6Sprefix_Object = MibTableColumn
fltNewCfgIpv6Sprefix = _FltNewCfgIpv6Sprefix_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 82),
    _FltNewCfgIpv6Sprefix_Type()
)
fltNewCfgIpv6Sprefix.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgIpv6Sprefix.setStatus("current")


class _FltNewCfgIpv6Dip_Type(DisplayString):
    """Custom type fltNewCfgIpv6Dip based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_FltNewCfgIpv6Dip_Type.__name__ = "DisplayString"
_FltNewCfgIpv6Dip_Object = MibTableColumn
fltNewCfgIpv6Dip = _FltNewCfgIpv6Dip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 83),
    _FltNewCfgIpv6Dip_Type()
)
fltNewCfgIpv6Dip.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgIpv6Dip.setStatus("current")


class _FltNewCfgIpv6Dprefix_Type(Integer32):
    """Custom type fltNewCfgIpv6Dprefix based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_FltNewCfgIpv6Dprefix_Type.__name__ = "Integer32"
_FltNewCfgIpv6Dprefix_Object = MibTableColumn
fltNewCfgIpv6Dprefix = _FltNewCfgIpv6Dprefix_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 84),
    _FltNewCfgIpv6Dprefix_Type()
)
fltNewCfgIpv6Dprefix.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgIpv6Dprefix.setStatus("current")


class _FltNewCfgHdrHash_Type(Integer32):
    """Custom type fltNewCfgHdrHash based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("headerhash", 2),
          ("none", 1))
    )


_FltNewCfgHdrHash_Type.__name__ = "Integer32"
_FltNewCfgHdrHash_Object = MibTableColumn
fltNewCfgHdrHash = _FltNewCfgHdrHash_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 85),
    _FltNewCfgHdrHash_Type()
)
fltNewCfgHdrHash.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgHdrHash.setStatus("current")


class _FltNewCfgHdrName_Type(DisplayString):
    """Custom type fltNewCfgHdrName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_FltNewCfgHdrName_Type.__name__ = "DisplayString"
_FltNewCfgHdrName_Object = MibTableColumn
fltNewCfgHdrName = _FltNewCfgHdrName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 86),
    _FltNewCfgHdrName_Type()
)
fltNewCfgHdrName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgHdrName.setStatus("current")


class _FltNewCfgHdrHashLen_Type(Integer32):
    """Custom type fltNewCfgHdrHashLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_FltNewCfgHdrHashLen_Type.__name__ = "Integer32"
_FltNewCfgHdrHashLen_Object = MibTableColumn
fltNewCfgHdrHashLen = _FltNewCfgHdrHashLen_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 87),
    _FltNewCfgHdrHashLen_Type()
)
fltNewCfgHdrHashLen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgHdrHashLen.setStatus("current")


class _FltNewCfgL3Filter_Type(Integer32):
    """Custom type fltNewCfgL3Filter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgL3Filter_Type.__name__ = "Integer32"
_FltNewCfgL3Filter_Object = MibTableColumn
fltNewCfgL3Filter = _FltNewCfgL3Filter_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 88),
    _FltNewCfgL3Filter_Type()
)
fltNewCfgL3Filter.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgL3Filter.setStatus("current")
_FltNewCfgNatIp_Type = IpAddress
_FltNewCfgNatIp_Object = MibTableColumn
fltNewCfgNatIp = _FltNewCfgNatIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 89),
    _FltNewCfgNatIp_Type()
)
fltNewCfgNatIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fltNewCfgNatIp.setStatus("current")


class _FltNewCfgIpv6Nip_Type(DisplayString):
    """Custom type fltNewCfgIpv6Nip based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_FltNewCfgIpv6Nip_Type.__name__ = "DisplayString"
_FltNewCfgIpv6Nip_Object = MibTableColumn
fltNewCfgIpv6Nip = _FltNewCfgIpv6Nip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 90),
    _FltNewCfgIpv6Nip_Type()
)
fltNewCfgIpv6Nip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fltNewCfgIpv6Nip.setStatus("current")


class _FltNewCfgIpv6Proxy_Type(DisplayString):
    """Custom type fltNewCfgIpv6Proxy based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_FltNewCfgIpv6Proxy_Type.__name__ = "DisplayString"
_FltNewCfgIpv6Proxy_Object = MibTableColumn
fltNewCfgIpv6Proxy = _FltNewCfgIpv6Proxy_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 91),
    _FltNewCfgIpv6Proxy_Type()
)
fltNewCfgIpv6Proxy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fltNewCfgIpv6Proxy.setStatus("current")


class _FltNewCfgL7SipFilt_Type(Integer32):
    """Custom type fltNewCfgL7SipFilt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgL7SipFilt_Type.__name__ = "Integer32"
_FltNewCfgL7SipFilt_Object = MibTableColumn
fltNewCfgL7SipFilt = _FltNewCfgL7SipFilt_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 92),
    _FltNewCfgL7SipFilt_Type()
)
fltNewCfgL7SipFilt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fltNewCfgL7SipFilt.setStatus("current")


class _FltNewCfgNatMcastVlan_Type(Integer32):
    """Custom type fltNewCfgNatMcastVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4090),
    )


_FltNewCfgNatMcastVlan_Type.__name__ = "Integer32"
_FltNewCfgNatMcastVlan_Object = MibTableColumn
fltNewCfgNatMcastVlan = _FltNewCfgNatMcastVlan_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 93),
    _FltNewCfgNatMcastVlan_Type()
)
fltNewCfgNatMcastVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fltNewCfgNatMcastVlan.setStatus("current")


class _FltNewCfgNbind_Type(Integer32):
    """Custom type fltNewCfgNbind based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgNbind_Type.__name__ = "Integer32"
_FltNewCfgNbind_Object = MibTableColumn
fltNewCfgNbind = _FltNewCfgNbind_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 3, 1, 94),
    _FltNewCfgNbind_Type()
)
fltNewCfgNbind.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgNbind.setStatus("current")
_FltCurCfgPortTable_Object = MibTable
fltCurCfgPortTable = _FltCurCfgPortTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 4)
)
if mibBuilder.loadTexts:
    fltCurCfgPortTable.setStatus("current")
_FltCurCfgPortTableEntry_Object = MibTableRow
fltCurCfgPortTableEntry = _FltCurCfgPortTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 4, 1)
)
fltCurCfgPortTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "fltCurCfgPortIndx"),
)
if mibBuilder.loadTexts:
    fltCurCfgPortTableEntry.setStatus("current")
_FltCurCfgPortIndx_Type = Integer32
_FltCurCfgPortIndx_Object = MibTableColumn
fltCurCfgPortIndx = _FltCurCfgPortIndx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 4, 1, 1),
    _FltCurCfgPortIndx_Type()
)
fltCurCfgPortIndx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgPortIndx.setStatus("current")


class _FltCurCfgPortState_Type(Integer32):
    """Custom type fltCurCfgPortState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltCurCfgPortState_Type.__name__ = "Integer32"
_FltCurCfgPortState_Object = MibTableColumn
fltCurCfgPortState = _FltCurCfgPortState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 4, 1, 2),
    _FltCurCfgPortState_Type()
)
fltCurCfgPortState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgPortState.setStatus("current")


class _FltCurCfgPortFiltBmap_Type(OctetString):
    """Custom type fltCurCfgPortFiltBmap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_FltCurCfgPortFiltBmap_Type.__name__ = "OctetString"
_FltCurCfgPortFiltBmap_Object = MibTableColumn
fltCurCfgPortFiltBmap = _FltCurCfgPortFiltBmap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 4, 1, 3),
    _FltCurCfgPortFiltBmap_Type()
)
fltCurCfgPortFiltBmap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgPortFiltBmap.setStatus("current")
_FltNewCfgPortTable_Object = MibTable
fltNewCfgPortTable = _FltNewCfgPortTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 5)
)
if mibBuilder.loadTexts:
    fltNewCfgPortTable.setStatus("current")
_FltNewCfgPortTableEntry_Object = MibTableRow
fltNewCfgPortTableEntry = _FltNewCfgPortTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 5, 1)
)
fltNewCfgPortTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "fltNewCfgPortIndx"),
)
if mibBuilder.loadTexts:
    fltNewCfgPortTableEntry.setStatus("current")
_FltNewCfgPortIndx_Type = Integer32
_FltNewCfgPortIndx_Object = MibTableColumn
fltNewCfgPortIndx = _FltNewCfgPortIndx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 5, 1, 1),
    _FltNewCfgPortIndx_Type()
)
fltNewCfgPortIndx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltNewCfgPortIndx.setStatus("current")


class _FltNewCfgPortState_Type(Integer32):
    """Custom type fltNewCfgPortState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgPortState_Type.__name__ = "Integer32"
_FltNewCfgPortState_Object = MibTableColumn
fltNewCfgPortState = _FltNewCfgPortState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 5, 1, 2),
    _FltNewCfgPortState_Type()
)
fltNewCfgPortState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgPortState.setStatus("current")


class _FltNewCfgPortFiltBmap_Type(OctetString):
    """Custom type fltNewCfgPortFiltBmap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_FltNewCfgPortFiltBmap_Type.__name__ = "OctetString"
_FltNewCfgPortFiltBmap_Object = MibTableColumn
fltNewCfgPortFiltBmap = _FltNewCfgPortFiltBmap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 5, 1, 3),
    _FltNewCfgPortFiltBmap_Type()
)
fltNewCfgPortFiltBmap.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgPortFiltBmap.setStatus("current")
_FltNewCfgPortAddFiltRule_Type = Integer32
_FltNewCfgPortAddFiltRule_Object = MibTableColumn
fltNewCfgPortAddFiltRule = _FltNewCfgPortAddFiltRule_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 5, 1, 4),
    _FltNewCfgPortAddFiltRule_Type()
)
fltNewCfgPortAddFiltRule.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgPortAddFiltRule.setStatus("current")
_FltNewCfgPortRemFiltRule_Type = Integer32
_FltNewCfgPortRemFiltRule_Object = MibTableColumn
fltNewCfgPortRemFiltRule = _FltNewCfgPortRemFiltRule_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 5, 1, 5),
    _FltNewCfgPortRemFiltRule_Type()
)
fltNewCfgPortRemFiltRule.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgPortRemFiltRule.setStatus("current")
_FltUrlBwmTableMaxSize_Type = Integer32
_FltUrlBwmTableMaxSize_Object = MibScalar
fltUrlBwmTableMaxSize = _FltUrlBwmTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 6),
    _FltUrlBwmTableMaxSize_Type()
)
fltUrlBwmTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltUrlBwmTableMaxSize.setStatus("current")
_FltCurCfgUrlBwmTable_Object = MibTable
fltCurCfgUrlBwmTable = _FltCurCfgUrlBwmTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 7)
)
if mibBuilder.loadTexts:
    fltCurCfgUrlBwmTable.setStatus("current")
_FltCurCfgUrlBwmEntry_Object = MibTableRow
fltCurCfgUrlBwmEntry = _FltCurCfgUrlBwmEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 7, 1)
)
fltCurCfgUrlBwmEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "fltCurCfgUrlBwmFltIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "fltCurCfgUrlBwmUrlId"),
)
if mibBuilder.loadTexts:
    fltCurCfgUrlBwmEntry.setStatus("current")
_FltCurCfgUrlBwmFltIndex_Type = Integer32
_FltCurCfgUrlBwmFltIndex_Object = MibTableColumn
fltCurCfgUrlBwmFltIndex = _FltCurCfgUrlBwmFltIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 7, 1, 1),
    _FltCurCfgUrlBwmFltIndex_Type()
)
fltCurCfgUrlBwmFltIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgUrlBwmFltIndex.setStatus("current")
_FltCurCfgUrlBwmUrlId_Type = Integer32
_FltCurCfgUrlBwmUrlId_Object = MibTableColumn
fltCurCfgUrlBwmUrlId = _FltCurCfgUrlBwmUrlId_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 7, 1, 2),
    _FltCurCfgUrlBwmUrlId_Type()
)
fltCurCfgUrlBwmUrlId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgUrlBwmUrlId.setStatus("current")
_FltCurCfgUrlBwmContract_Type = Integer32
_FltCurCfgUrlBwmContract_Object = MibTableColumn
fltCurCfgUrlBwmContract = _FltCurCfgUrlBwmContract_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 7, 1, 3),
    _FltCurCfgUrlBwmContract_Type()
)
fltCurCfgUrlBwmContract.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgUrlBwmContract.setStatus("current")
_FltCurCfgUrlReverseBwmContract_Type = Integer32
_FltCurCfgUrlReverseBwmContract_Object = MibTableColumn
fltCurCfgUrlReverseBwmContract = _FltCurCfgUrlReverseBwmContract_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 7, 1, 4),
    _FltCurCfgUrlReverseBwmContract_Type()
)
fltCurCfgUrlReverseBwmContract.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgUrlReverseBwmContract.setStatus("current")
_FltNewCfgUrlBwmTable_Object = MibTable
fltNewCfgUrlBwmTable = _FltNewCfgUrlBwmTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 8)
)
if mibBuilder.loadTexts:
    fltNewCfgUrlBwmTable.setStatus("current")
_FltNewCfgUrlBwmEntry_Object = MibTableRow
fltNewCfgUrlBwmEntry = _FltNewCfgUrlBwmEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 8, 1)
)
fltNewCfgUrlBwmEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "fltNewCfgUrlBwmFltIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "fltNewCfgUrlBwmUrlId"),
)
if mibBuilder.loadTexts:
    fltNewCfgUrlBwmEntry.setStatus("current")
_FltNewCfgUrlBwmFltIndex_Type = Integer32
_FltNewCfgUrlBwmFltIndex_Object = MibTableColumn
fltNewCfgUrlBwmFltIndex = _FltNewCfgUrlBwmFltIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 8, 1, 1),
    _FltNewCfgUrlBwmFltIndex_Type()
)
fltNewCfgUrlBwmFltIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltNewCfgUrlBwmFltIndex.setStatus("current")
_FltNewCfgUrlBwmUrlId_Type = Integer32
_FltNewCfgUrlBwmUrlId_Object = MibTableColumn
fltNewCfgUrlBwmUrlId = _FltNewCfgUrlBwmUrlId_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 8, 1, 2),
    _FltNewCfgUrlBwmUrlId_Type()
)
fltNewCfgUrlBwmUrlId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltNewCfgUrlBwmUrlId.setStatus("current")
_FltNewCfgUrlBwmContract_Type = Integer32
_FltNewCfgUrlBwmContract_Object = MibTableColumn
fltNewCfgUrlBwmContract = _FltNewCfgUrlBwmContract_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 8, 1, 3),
    _FltNewCfgUrlBwmContract_Type()
)
fltNewCfgUrlBwmContract.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgUrlBwmContract.setStatus("current")


class _FltNewCfgUrlBwmDelete_Type(Integer32):
    """Custom type fltNewCfgUrlBwmDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_FltNewCfgUrlBwmDelete_Type.__name__ = "Integer32"
_FltNewCfgUrlBwmDelete_Object = MibTableColumn
fltNewCfgUrlBwmDelete = _FltNewCfgUrlBwmDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 8, 1, 4),
    _FltNewCfgUrlBwmDelete_Type()
)
fltNewCfgUrlBwmDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgUrlBwmDelete.setStatus("current")
_FltNewCfgUrlReverseBwmContract_Type = Integer32
_FltNewCfgUrlReverseBwmContract_Object = MibTableColumn
fltNewCfgUrlReverseBwmContract = _FltNewCfgUrlReverseBwmContract_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 8, 1, 5),
    _FltNewCfgUrlReverseBwmContract_Type()
)
fltNewCfgUrlReverseBwmContract.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgUrlReverseBwmContract.setStatus("current")
_FltCfgHttpRedirMappingTableMaxSize_Type = Integer32
_FltCfgHttpRedirMappingTableMaxSize_Object = MibScalar
fltCfgHttpRedirMappingTableMaxSize = _FltCfgHttpRedirMappingTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 9),
    _FltCfgHttpRedirMappingTableMaxSize_Type()
)
fltCfgHttpRedirMappingTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCfgHttpRedirMappingTableMaxSize.setStatus("current")
_FltCurCfgHttpRedirMappingTable_Object = MibTable
fltCurCfgHttpRedirMappingTable = _FltCurCfgHttpRedirMappingTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 10)
)
if mibBuilder.loadTexts:
    fltCurCfgHttpRedirMappingTable.setStatus("current")
_FltCurCfgHttpRedirMappingEntry_Object = MibTableRow
fltCurCfgHttpRedirMappingEntry = _FltCurCfgHttpRedirMappingEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 10, 1)
)
fltCurCfgHttpRedirMappingEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "fltCurCfgHttpRedirMappingFilter"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "fltCurCfgHttpRedirMappingFromStr"),
)
if mibBuilder.loadTexts:
    fltCurCfgHttpRedirMappingEntry.setStatus("current")
_FltCurCfgHttpRedirMappingFilter_Type = Integer32
_FltCurCfgHttpRedirMappingFilter_Object = MibTableColumn
fltCurCfgHttpRedirMappingFilter = _FltCurCfgHttpRedirMappingFilter_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 10, 1, 1),
    _FltCurCfgHttpRedirMappingFilter_Type()
)
fltCurCfgHttpRedirMappingFilter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgHttpRedirMappingFilter.setStatus("current")


class _FltCurCfgHttpRedirMappingFromStr_Type(Integer32):
    """Custom type fltCurCfgHttpRedirMappingFromStr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_FltCurCfgHttpRedirMappingFromStr_Type.__name__ = "Integer32"
_FltCurCfgHttpRedirMappingFromStr_Object = MibTableColumn
fltCurCfgHttpRedirMappingFromStr = _FltCurCfgHttpRedirMappingFromStr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 10, 1, 2),
    _FltCurCfgHttpRedirMappingFromStr_Type()
)
fltCurCfgHttpRedirMappingFromStr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgHttpRedirMappingFromStr.setStatus("current")


class _FltCurCfgHttpRedirMappingToStr_Type(Integer32):
    """Custom type fltCurCfgHttpRedirMappingToStr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 1024),
    )


_FltCurCfgHttpRedirMappingToStr_Type.__name__ = "Integer32"
_FltCurCfgHttpRedirMappingToStr_Object = MibTableColumn
fltCurCfgHttpRedirMappingToStr = _FltCurCfgHttpRedirMappingToStr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 10, 1, 3),
    _FltCurCfgHttpRedirMappingToStr_Type()
)
fltCurCfgHttpRedirMappingToStr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltCurCfgHttpRedirMappingToStr.setStatus("current")
_FltNewCfgHttpRedirMappingTable_Object = MibTable
fltNewCfgHttpRedirMappingTable = _FltNewCfgHttpRedirMappingTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 11)
)
if mibBuilder.loadTexts:
    fltNewCfgHttpRedirMappingTable.setStatus("current")
_FltNewCfgHttpRedirMappingEntry_Object = MibTableRow
fltNewCfgHttpRedirMappingEntry = _FltNewCfgHttpRedirMappingEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 11, 1)
)
fltNewCfgHttpRedirMappingEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "fltNewCfgHttpRedirMappingFilter"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "fltNewCfgHttpRedirMappingFromStr"),
)
if mibBuilder.loadTexts:
    fltNewCfgHttpRedirMappingEntry.setStatus("current")
_FltNewCfgHttpRedirMappingFilter_Type = Integer32
_FltNewCfgHttpRedirMappingFilter_Object = MibTableColumn
fltNewCfgHttpRedirMappingFilter = _FltNewCfgHttpRedirMappingFilter_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 11, 1, 1),
    _FltNewCfgHttpRedirMappingFilter_Type()
)
fltNewCfgHttpRedirMappingFilter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltNewCfgHttpRedirMappingFilter.setStatus("current")


class _FltNewCfgHttpRedirMappingFromStr_Type(Integer32):
    """Custom type fltNewCfgHttpRedirMappingFromStr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_FltNewCfgHttpRedirMappingFromStr_Type.__name__ = "Integer32"
_FltNewCfgHttpRedirMappingFromStr_Object = MibTableColumn
fltNewCfgHttpRedirMappingFromStr = _FltNewCfgHttpRedirMappingFromStr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 11, 1, 2),
    _FltNewCfgHttpRedirMappingFromStr_Type()
)
fltNewCfgHttpRedirMappingFromStr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltNewCfgHttpRedirMappingFromStr.setStatus("current")


class _FltNewCfgHttpRedirMappingToStr_Type(Integer32):
    """Custom type fltNewCfgHttpRedirMappingToStr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 1024),
    )


_FltNewCfgHttpRedirMappingToStr_Type.__name__ = "Integer32"
_FltNewCfgHttpRedirMappingToStr_Object = MibTableColumn
fltNewCfgHttpRedirMappingToStr = _FltNewCfgHttpRedirMappingToStr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 11, 1, 4),
    _FltNewCfgHttpRedirMappingToStr_Type()
)
fltNewCfgHttpRedirMappingToStr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgHttpRedirMappingToStr.setStatus("current")


class _FltNewCfgHttpRedirMappingDelete_Type(Integer32):
    """Custom type fltNewCfgHttpRedirMappingDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_FltNewCfgHttpRedirMappingDelete_Type.__name__ = "Integer32"
_FltNewCfgHttpRedirMappingDelete_Object = MibTableColumn
fltNewCfgHttpRedirMappingDelete = _FltNewCfgHttpRedirMappingDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 11, 1, 6),
    _FltNewCfgHttpRedirMappingDelete_Type()
)
fltNewCfgHttpRedirMappingDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgHttpRedirMappingDelete.setStatus("current")
_FltNewCfgExtendedTable_Object = MibTable
fltNewCfgExtendedTable = _FltNewCfgExtendedTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12)
)
if mibBuilder.loadTexts:
    fltNewCfgExtendedTable.setStatus("current")
_FltNewCfgExtendedTableEntry_Object = MibTableRow
fltNewCfgExtendedTableEntry = _FltNewCfgExtendedTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1)
)
fltNewCfgExtendedTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "fltNewCfgExtendedIndx"),
)
if mibBuilder.loadTexts:
    fltNewCfgExtendedTableEntry.setStatus("current")
_FltNewCfgExtendedIndx_Type = Integer32
_FltNewCfgExtendedIndx_Object = MibTableColumn
fltNewCfgExtendedIndx = _FltNewCfgExtendedIndx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 1),
    _FltNewCfgExtendedIndx_Type()
)
fltNewCfgExtendedIndx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltNewCfgExtendedIndx.setStatus("current")


class _FltNewCfgExtendedLayer7DenyState_Type(Integer32):
    """Custom type fltNewCfgExtendedLayer7DenyState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgExtendedLayer7DenyState_Type.__name__ = "Integer32"
_FltNewCfgExtendedLayer7DenyState_Object = MibTableColumn
fltNewCfgExtendedLayer7DenyState = _FltNewCfgExtendedLayer7DenyState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 3),
    _FltNewCfgExtendedLayer7DenyState_Type()
)
fltNewCfgExtendedLayer7DenyState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedLayer7DenyState.setStatus("current")
_FltNewCfgExtendedLayer7DenyUrlBmap_Type = OctetString
_FltNewCfgExtendedLayer7DenyUrlBmap_Object = MibTableColumn
fltNewCfgExtendedLayer7DenyUrlBmap = _FltNewCfgExtendedLayer7DenyUrlBmap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 4),
    _FltNewCfgExtendedLayer7DenyUrlBmap_Type()
)
fltNewCfgExtendedLayer7DenyUrlBmap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltNewCfgExtendedLayer7DenyUrlBmap.setStatus("current")
_FltNewCfgExtendedLayer7DenyAddUrl_Type = Integer32
_FltNewCfgExtendedLayer7DenyAddUrl_Object = MibTableColumn
fltNewCfgExtendedLayer7DenyAddUrl = _FltNewCfgExtendedLayer7DenyAddUrl_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 5),
    _FltNewCfgExtendedLayer7DenyAddUrl_Type()
)
fltNewCfgExtendedLayer7DenyAddUrl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedLayer7DenyAddUrl.setStatus("current")
_FltNewCfgExtendedLayer7DenyRemUrl_Type = Integer32
_FltNewCfgExtendedLayer7DenyRemUrl_Object = MibTableColumn
fltNewCfgExtendedLayer7DenyRemUrl = _FltNewCfgExtendedLayer7DenyRemUrl_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 6),
    _FltNewCfgExtendedLayer7DenyRemUrl_Type()
)
fltNewCfgExtendedLayer7DenyRemUrl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedLayer7DenyRemUrl.setStatus("current")
_FltNewCfgExtendedGotoFilter_Type = Integer32
_FltNewCfgExtendedGotoFilter_Object = MibTableColumn
fltNewCfgExtendedGotoFilter = _FltNewCfgExtendedGotoFilter_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 7),
    _FltNewCfgExtendedGotoFilter_Type()
)
fltNewCfgExtendedGotoFilter.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedGotoFilter.setStatus("current")


class _FltNewCfgExtendedRadiusWapPersist_Type(Integer32):
    """Custom type fltNewCfgExtendedRadiusWapPersist based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgExtendedRadiusWapPersist_Type.__name__ = "Integer32"
_FltNewCfgExtendedRadiusWapPersist_Object = MibTableColumn
fltNewCfgExtendedRadiusWapPersist = _FltNewCfgExtendedRadiusWapPersist_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 8),
    _FltNewCfgExtendedRadiusWapPersist_Type()
)
fltNewCfgExtendedRadiusWapPersist.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedRadiusWapPersist.setStatus("current")


class _FltNewCfgExtendedPbind_Type(Integer32):
    """Custom type fltNewCfgExtendedPbind based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgExtendedPbind_Type.__name__ = "Integer32"
_FltNewCfgExtendedPbind_Object = MibTableColumn
fltNewCfgExtendedPbind = _FltNewCfgExtendedPbind_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 9),
    _FltNewCfgExtendedPbind_Type()
)
fltNewCfgExtendedPbind.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedPbind.setStatus("current")


class _FltNewCfgExtendedTimeWindow_Type(Integer32):
    """Custom type fltNewCfgExtendedTimeWindow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_FltNewCfgExtendedTimeWindow_Type.__name__ = "Integer32"
_FltNewCfgExtendedTimeWindow_Object = MibTableColumn
fltNewCfgExtendedTimeWindow = _FltNewCfgExtendedTimeWindow_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 10),
    _FltNewCfgExtendedTimeWindow_Type()
)
fltNewCfgExtendedTimeWindow.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedTimeWindow.setStatus("current")


class _FltNewCfgExtendedHoldDuration_Type(Integer32):
    """Custom type fltNewCfgExtendedHoldDuration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 65535),
    )


_FltNewCfgExtendedHoldDuration_Type.__name__ = "Integer32"
_FltNewCfgExtendedHoldDuration_Object = MibTableColumn
fltNewCfgExtendedHoldDuration = _FltNewCfgExtendedHoldDuration_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 11),
    _FltNewCfgExtendedHoldDuration_Type()
)
fltNewCfgExtendedHoldDuration.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedHoldDuration.setStatus("current")


class _FltNewCfgExtendedPatternMatch_Type(Integer32):
    """Custom type fltNewCfgExtendedPatternMatch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgExtendedPatternMatch_Type.__name__ = "Integer32"
_FltNewCfgExtendedPatternMatch_Object = MibTableColumn
fltNewCfgExtendedPatternMatch = _FltNewCfgExtendedPatternMatch_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 12),
    _FltNewCfgExtendedPatternMatch_Type()
)
fltNewCfgExtendedPatternMatch.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedPatternMatch.setStatus("current")


class _FltNewCfgExtendedLayer7DenyMatchAll_Type(Integer32):
    """Custom type fltNewCfgExtendedLayer7DenyMatchAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgExtendedLayer7DenyMatchAll_Type.__name__ = "Integer32"
_FltNewCfgExtendedLayer7DenyMatchAll_Object = MibTableColumn
fltNewCfgExtendedLayer7DenyMatchAll = _FltNewCfgExtendedLayer7DenyMatchAll_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 13),
    _FltNewCfgExtendedLayer7DenyMatchAll_Type()
)
fltNewCfgExtendedLayer7DenyMatchAll.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedLayer7DenyMatchAll.setStatus("current")
_FltNewCfgExtendedProxyIp_Type = IpAddress
_FltNewCfgExtendedProxyIp_Object = MibTableColumn
fltNewCfgExtendedProxyIp = _FltNewCfgExtendedProxyIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 14),
    _FltNewCfgExtendedProxyIp_Type()
)
fltNewCfgExtendedProxyIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedProxyIp.setStatus("current")


class _FltNewCfgExtendedLayer7ParseAll_Type(Integer32):
    """Custom type fltNewCfgExtendedLayer7ParseAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgExtendedLayer7ParseAll_Type.__name__ = "Integer32"
_FltNewCfgExtendedLayer7ParseAll_Object = MibTableColumn
fltNewCfgExtendedLayer7ParseAll = _FltNewCfgExtendedLayer7ParseAll_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 15),
    _FltNewCfgExtendedLayer7ParseAll_Type()
)
fltNewCfgExtendedLayer7ParseAll.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedLayer7ParseAll.setStatus("current")


class _FltNewCfgExtendedSecurityParseAll_Type(Integer32):
    """Custom type fltNewCfgExtendedSecurityParseAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgExtendedSecurityParseAll_Type.__name__ = "Integer32"
_FltNewCfgExtendedSecurityParseAll_Object = MibTableColumn
fltNewCfgExtendedSecurityParseAll = _FltNewCfgExtendedSecurityParseAll_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 16),
    _FltNewCfgExtendedSecurityParseAll_Type()
)
fltNewCfgExtendedSecurityParseAll.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedSecurityParseAll.setStatus("current")
_FltNewCfgExtendedPatternMatchGroupBmap_Type = OctetString
_FltNewCfgExtendedPatternMatchGroupBmap_Object = MibTableColumn
fltNewCfgExtendedPatternMatchGroupBmap = _FltNewCfgExtendedPatternMatchGroupBmap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 17),
    _FltNewCfgExtendedPatternMatchGroupBmap_Type()
)
fltNewCfgExtendedPatternMatchGroupBmap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltNewCfgExtendedPatternMatchGroupBmap.setStatus("current")
_FltNewCfgExtendedAddPatternMatchGroup_Type = Integer32
_FltNewCfgExtendedAddPatternMatchGroup_Object = MibTableColumn
fltNewCfgExtendedAddPatternMatchGroup = _FltNewCfgExtendedAddPatternMatchGroup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 18),
    _FltNewCfgExtendedAddPatternMatchGroup_Type()
)
fltNewCfgExtendedAddPatternMatchGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedAddPatternMatchGroup.setStatus("current")
_FltNewCfgExtendedRemPatternMatchGroup_Type = Integer32
_FltNewCfgExtendedRemPatternMatchGroup_Object = MibTableColumn
fltNewCfgExtendedRemPatternMatchGroup = _FltNewCfgExtendedRemPatternMatchGroup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 19),
    _FltNewCfgExtendedRemPatternMatchGroup_Type()
)
fltNewCfgExtendedRemPatternMatchGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedRemPatternMatchGroup.setStatus("current")


class _FltNewCfgExtended8021pBitsValue_Type(Integer32):
    """Custom type fltNewCfgExtended8021pBitsValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_FltNewCfgExtended8021pBitsValue_Type.__name__ = "Integer32"
_FltNewCfgExtended8021pBitsValue_Object = MibTableColumn
fltNewCfgExtended8021pBitsValue = _FltNewCfgExtended8021pBitsValue_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 20),
    _FltNewCfgExtended8021pBitsValue_Type()
)
fltNewCfgExtended8021pBitsValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtended8021pBitsValue.setStatus("current")


class _FltNewCfgExtended8021pBitsMatch_Type(Integer32):
    """Custom type fltNewCfgExtended8021pBitsMatch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgExtended8021pBitsMatch_Type.__name__ = "Integer32"
_FltNewCfgExtended8021pBitsMatch_Object = MibTableColumn
fltNewCfgExtended8021pBitsMatch = _FltNewCfgExtended8021pBitsMatch_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 21),
    _FltNewCfgExtended8021pBitsMatch_Type()
)
fltNewCfgExtended8021pBitsMatch.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtended8021pBitsMatch.setStatus("current")


class _FltNewCfgExtendedAclIpLength_Type(Integer32):
    """Custom type fltNewCfgExtendedAclIpLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_FltNewCfgExtendedAclIpLength_Type.__name__ = "Integer32"
_FltNewCfgExtendedAclIpLength_Object = MibTableColumn
fltNewCfgExtendedAclIpLength = _FltNewCfgExtendedAclIpLength_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 22),
    _FltNewCfgExtendedAclIpLength_Type()
)
fltNewCfgExtendedAclIpLength.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedAclIpLength.setStatus("current")
_FltNewCfgExtendedIdsGroup_Type = Integer32
_FltNewCfgExtendedIdsGroup_Object = MibTableColumn
fltNewCfgExtendedIdsGroup = _FltNewCfgExtendedIdsGroup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 23),
    _FltNewCfgExtendedIdsGroup_Type()
)
fltNewCfgExtendedIdsGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedIdsGroup.setStatus("current")


class _FltNewCfgExtendedEgressPip_Type(Integer32):
    """Custom type fltNewCfgExtendedEgressPip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgExtendedEgressPip_Type.__name__ = "Integer32"
_FltNewCfgExtendedEgressPip_Object = MibTableColumn
fltNewCfgExtendedEgressPip = _FltNewCfgExtendedEgressPip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 24),
    _FltNewCfgExtendedEgressPip_Type()
)
fltNewCfgExtendedEgressPip.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedEgressPip.setStatus("current")


class _FltNewCfgExtendedDbind_Type(Integer32):
    """Custom type fltNewCfgExtendedDbind based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgExtendedDbind_Type.__name__ = "Integer32"
_FltNewCfgExtendedDbind_Object = MibTableColumn
fltNewCfgExtendedDbind = _FltNewCfgExtendedDbind_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 25),
    _FltNewCfgExtendedDbind_Type()
)
fltNewCfgExtendedDbind.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedDbind.setStatus("current")
_FltNewCfgExtendedRevBwmContract_Type = Integer32
_FltNewCfgExtendedRevBwmContract_Object = MibTableColumn
fltNewCfgExtendedRevBwmContract = _FltNewCfgExtendedRevBwmContract_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 26),
    _FltNewCfgExtendedRevBwmContract_Type()
)
fltNewCfgExtendedRevBwmContract.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedRevBwmContract.setStatus("current")


class _FltNewCfgExtendedReverse_Type(Integer32):
    """Custom type fltNewCfgExtendedReverse based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgExtendedReverse_Type.__name__ = "Integer32"
_FltNewCfgExtendedReverse_Object = MibTableColumn
fltNewCfgExtendedReverse = _FltNewCfgExtendedReverse_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 27),
    _FltNewCfgExtendedReverse_Type()
)
fltNewCfgExtendedReverse.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedReverse.setStatus("current")


class _FltNewCfgExtendedParseChn_Type(Integer32):
    """Custom type fltNewCfgExtendedParseChn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgExtendedParseChn_Type.__name__ = "Integer32"
_FltNewCfgExtendedParseChn_Object = MibTableColumn
fltNewCfgExtendedParseChn = _FltNewCfgExtendedParseChn_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 28),
    _FltNewCfgExtendedParseChn_Type()
)
fltNewCfgExtendedParseChn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedParseChn.setStatus("current")
_FltNewCfgExtendedRtpBwmContract_Type = Integer32
_FltNewCfgExtendedRtpBwmContract_Object = MibTableColumn
fltNewCfgExtendedRtpBwmContract = _FltNewCfgExtendedRtpBwmContract_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 29),
    _FltNewCfgExtendedRtpBwmContract_Type()
)
fltNewCfgExtendedRtpBwmContract.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedRtpBwmContract.setStatus("current")


class _FltNewCfgExtendedSipParsing_Type(Integer32):
    """Custom type fltNewCfgExtendedSipParsing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgExtendedSipParsing_Type.__name__ = "Integer32"
_FltNewCfgExtendedSipParsing_Object = MibTableColumn
fltNewCfgExtendedSipParsing = _FltNewCfgExtendedSipParsing_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 30),
    _FltNewCfgExtendedSipParsing_Type()
)
fltNewCfgExtendedSipParsing.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedSipParsing.setStatus("current")


class _FltNewCfgExtendedSessionMirror_Type(Integer32):
    """Custom type fltNewCfgExtendedSessionMirror based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgExtendedSessionMirror_Type.__name__ = "Integer32"
_FltNewCfgExtendedSessionMirror_Object = MibTableColumn
fltNewCfgExtendedSessionMirror = _FltNewCfgExtendedSessionMirror_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 31),
    _FltNewCfgExtendedSessionMirror_Type()
)
fltNewCfgExtendedSessionMirror.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedSessionMirror.setStatus("current")


class _FltNewCfgExtendedIpVer_Type(Integer32):
    """Custom type fltNewCfgExtendedIpVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_FltNewCfgExtendedIpVer_Type.__name__ = "Integer32"
_FltNewCfgExtendedIpVer_Object = MibTableColumn
fltNewCfgExtendedIpVer = _FltNewCfgExtendedIpVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 32),
    _FltNewCfgExtendedIpVer_Type()
)
fltNewCfgExtendedIpVer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedIpVer.setStatus("current")


class _FltNewCfgExtendedIpv6Sip_Type(DisplayString):
    """Custom type fltNewCfgExtendedIpv6Sip based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_FltNewCfgExtendedIpv6Sip_Type.__name__ = "DisplayString"
_FltNewCfgExtendedIpv6Sip_Object = MibTableColumn
fltNewCfgExtendedIpv6Sip = _FltNewCfgExtendedIpv6Sip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 33),
    _FltNewCfgExtendedIpv6Sip_Type()
)
fltNewCfgExtendedIpv6Sip.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedIpv6Sip.setStatus("current")


class _FltNewCfgExtendedIpv6Sprefix_Type(Integer32):
    """Custom type fltNewCfgExtendedIpv6Sprefix based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_FltNewCfgExtendedIpv6Sprefix_Type.__name__ = "Integer32"
_FltNewCfgExtendedIpv6Sprefix_Object = MibTableColumn
fltNewCfgExtendedIpv6Sprefix = _FltNewCfgExtendedIpv6Sprefix_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 34),
    _FltNewCfgExtendedIpv6Sprefix_Type()
)
fltNewCfgExtendedIpv6Sprefix.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedIpv6Sprefix.setStatus("current")


class _FltNewCfgExtendedIpv6Dip_Type(DisplayString):
    """Custom type fltNewCfgExtendedIpv6Dip based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_FltNewCfgExtendedIpv6Dip_Type.__name__ = "DisplayString"
_FltNewCfgExtendedIpv6Dip_Object = MibTableColumn
fltNewCfgExtendedIpv6Dip = _FltNewCfgExtendedIpv6Dip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 35),
    _FltNewCfgExtendedIpv6Dip_Type()
)
fltNewCfgExtendedIpv6Dip.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedIpv6Dip.setStatus("current")


class _FltNewCfgExtendedIpv6Dprefix_Type(Integer32):
    """Custom type fltNewCfgExtendedIpv6Dprefix based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_FltNewCfgExtendedIpv6Dprefix_Type.__name__ = "Integer32"
_FltNewCfgExtendedIpv6Dprefix_Object = MibTableColumn
fltNewCfgExtendedIpv6Dprefix = _FltNewCfgExtendedIpv6Dprefix_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 36),
    _FltNewCfgExtendedIpv6Dprefix_Type()
)
fltNewCfgExtendedIpv6Dprefix.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedIpv6Dprefix.setStatus("current")


class _FltNewCfgExtendedHdrHash_Type(Integer32):
    """Custom type fltNewCfgExtendedHdrHash based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("headerhash", 2),
          ("none", 1))
    )


_FltNewCfgExtendedHdrHash_Type.__name__ = "Integer32"
_FltNewCfgExtendedHdrHash_Object = MibTableColumn
fltNewCfgExtendedHdrHash = _FltNewCfgExtendedHdrHash_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 37),
    _FltNewCfgExtendedHdrHash_Type()
)
fltNewCfgExtendedHdrHash.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedHdrHash.setStatus("current")


class _FltNewCfgExtendedHdrName_Type(DisplayString):
    """Custom type fltNewCfgExtendedHdrName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_FltNewCfgExtendedHdrName_Type.__name__ = "DisplayString"
_FltNewCfgExtendedHdrName_Object = MibTableColumn
fltNewCfgExtendedHdrName = _FltNewCfgExtendedHdrName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 38),
    _FltNewCfgExtendedHdrName_Type()
)
fltNewCfgExtendedHdrName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedHdrName.setStatus("current")


class _FltNewCfgExtendedHdrHashLen_Type(Integer32):
    """Custom type fltNewCfgExtendedHdrHashLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_FltNewCfgExtendedHdrHashLen_Type.__name__ = "Integer32"
_FltNewCfgExtendedHdrHashLen_Object = MibTableColumn
fltNewCfgExtendedHdrHashLen = _FltNewCfgExtendedHdrHashLen_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 39),
    _FltNewCfgExtendedHdrHashLen_Type()
)
fltNewCfgExtendedHdrHashLen.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedHdrHashLen.setStatus("current")
_FltNewCfgExtendedNatIp_Type = IpAddress
_FltNewCfgExtendedNatIp_Object = MibTableColumn
fltNewCfgExtendedNatIp = _FltNewCfgExtendedNatIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 40),
    _FltNewCfgExtendedNatIp_Type()
)
fltNewCfgExtendedNatIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fltNewCfgExtendedNatIp.setStatus("current")


class _FltNewCfgExtendedIpv6Nip_Type(DisplayString):
    """Custom type fltNewCfgExtendedIpv6Nip based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_FltNewCfgExtendedIpv6Nip_Type.__name__ = "DisplayString"
_FltNewCfgExtendedIpv6Nip_Object = MibTableColumn
fltNewCfgExtendedIpv6Nip = _FltNewCfgExtendedIpv6Nip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 41),
    _FltNewCfgExtendedIpv6Nip_Type()
)
fltNewCfgExtendedIpv6Nip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fltNewCfgExtendedIpv6Nip.setStatus("current")


class _FltNewCfgExtendedIpv6Proxy_Type(DisplayString):
    """Custom type fltNewCfgExtendedIpv6Proxy based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_FltNewCfgExtendedIpv6Proxy_Type.__name__ = "DisplayString"
_FltNewCfgExtendedIpv6Proxy_Object = MibTableColumn
fltNewCfgExtendedIpv6Proxy = _FltNewCfgExtendedIpv6Proxy_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 42),
    _FltNewCfgExtendedIpv6Proxy_Type()
)
fltNewCfgExtendedIpv6Proxy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fltNewCfgExtendedIpv6Proxy.setStatus("current")


class _FltNewCfgExtendedL7SipFilt_Type(Integer32):
    """Custom type fltNewCfgExtendedL7SipFilt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgExtendedL7SipFilt_Type.__name__ = "Integer32"
_FltNewCfgExtendedL7SipFilt_Object = MibTableColumn
fltNewCfgExtendedL7SipFilt = _FltNewCfgExtendedL7SipFilt_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 43),
    _FltNewCfgExtendedL7SipFilt_Type()
)
fltNewCfgExtendedL7SipFilt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fltNewCfgExtendedL7SipFilt.setStatus("current")


class _FltNewCfgExtendedNatMcastVlan_Type(Integer32):
    """Custom type fltNewCfgExtendedNatMcastVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4090),
    )


_FltNewCfgExtendedNatMcastVlan_Type.__name__ = "Integer32"
_FltNewCfgExtendedNatMcastVlan_Object = MibTableColumn
fltNewCfgExtendedNatMcastVlan = _FltNewCfgExtendedNatMcastVlan_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 44),
    _FltNewCfgExtendedNatMcastVlan_Type()
)
fltNewCfgExtendedNatMcastVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fltNewCfgExtendedNatMcastVlan.setStatus("current")


class _FltNewCfgExtendedNbind_Type(Integer32):
    """Custom type fltNewCfgExtendedNbind based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgExtendedNbind_Type.__name__ = "Integer32"
_FltNewCfgExtendedNbind_Object = MibTableColumn
fltNewCfgExtendedNbind = _FltNewCfgExtendedNbind_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 45),
    _FltNewCfgExtendedNbind_Type()
)
fltNewCfgExtendedNbind.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedNbind.setStatus("current")


class _FltNewCfgExtendedL3State_Type(Integer32):
    """Custom type fltNewCfgExtendedL3State based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FltNewCfgExtendedL3State_Type.__name__ = "Integer32"
_FltNewCfgExtendedL3State_Object = MibTableColumn
fltNewCfgExtendedL3State = _FltNewCfgExtendedL3State_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 2, 12, 1, 46),
    _FltNewCfgExtendedL3State_Type()
)
fltNewCfgExtendedL3State.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    fltNewCfgExtendedL3State.setStatus("current")
_GslbCfg_ObjectIdentity = ObjectIdentity
gslbCfg = _GslbCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3)
)
_GslbGeneralCfg_ObjectIdentity = ObjectIdentity
gslbGeneralCfg = _GslbGeneralCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1)
)


class _GslbCurCfgGenState_Type(Integer32):
    """Custom type gslbCurCfgGenState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 2),
          ("on", 1))
    )


_GslbCurCfgGenState_Type.__name__ = "Integer32"
_GslbCurCfgGenState_Object = MibScalar
gslbCurCfgGenState = _GslbCurCfgGenState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 1),
    _GslbCurCfgGenState_Type()
)
gslbCurCfgGenState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgGenState.setStatus("current")


class _GslbNewCfgGenState_Type(Integer32):
    """Custom type gslbNewCfgGenState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 2),
          ("on", 1))
    )


_GslbNewCfgGenState_Type.__name__ = "Integer32"
_GslbNewCfgGenState_Object = MibScalar
gslbNewCfgGenState = _GslbNewCfgGenState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 2),
    _GslbNewCfgGenState_Type()
)
gslbNewCfgGenState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgGenState.setStatus("current")


class _GslbCurCfgGenHttpRedirect_Type(Integer32):
    """Custom type gslbCurCfgGenHttpRedirect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbCurCfgGenHttpRedirect_Type.__name__ = "Integer32"
_GslbCurCfgGenHttpRedirect_Object = MibScalar
gslbCurCfgGenHttpRedirect = _GslbCurCfgGenHttpRedirect_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 7),
    _GslbCurCfgGenHttpRedirect_Type()
)
gslbCurCfgGenHttpRedirect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgGenHttpRedirect.setStatus("current")


class _GslbNewCfgGenHttpRedirect_Type(Integer32):
    """Custom type gslbNewCfgGenHttpRedirect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbNewCfgGenHttpRedirect_Type.__name__ = "Integer32"
_GslbNewCfgGenHttpRedirect_Object = MibScalar
gslbNewCfgGenHttpRedirect = _GslbNewCfgGenHttpRedirect_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 8),
    _GslbNewCfgGenHttpRedirect_Type()
)
gslbNewCfgGenHttpRedirect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgGenHttpRedirect.setStatus("current")


class _GslbCurCfgGenMinco_Type(Integer32):
    """Custom type gslbCurCfgGenMinco based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_GslbCurCfgGenMinco_Type.__name__ = "Integer32"
_GslbCurCfgGenMinco_Object = MibScalar
gslbCurCfgGenMinco = _GslbCurCfgGenMinco_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 13),
    _GslbCurCfgGenMinco_Type()
)
gslbCurCfgGenMinco.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgGenMinco.setStatus("current")


class _GslbNewCfgGenMinco_Type(Integer32):
    """Custom type gslbNewCfgGenMinco based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_GslbNewCfgGenMinco_Type.__name__ = "Integer32"
_GslbNewCfgGenMinco_Object = MibScalar
gslbNewCfgGenMinco = _GslbNewCfgGenMinco_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 14),
    _GslbNewCfgGenMinco_Type()
)
gslbNewCfgGenMinco.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgGenMinco.setStatus("current")


class _GslbCurCfgGenUsern_Type(Integer32):
    """Custom type gslbCurCfgGenUsern based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbCurCfgGenUsern_Type.__name__ = "Integer32"
_GslbCurCfgGenUsern_Object = MibScalar
gslbCurCfgGenUsern = _GslbCurCfgGenUsern_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 17),
    _GslbCurCfgGenUsern_Type()
)
gslbCurCfgGenUsern.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgGenUsern.setStatus("current")


class _GslbNewCfgGenUsern_Type(Integer32):
    """Custom type gslbNewCfgGenUsern based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbNewCfgGenUsern_Type.__name__ = "Integer32"
_GslbNewCfgGenUsern_Object = MibScalar
gslbNewCfgGenUsern = _GslbNewCfgGenUsern_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 18),
    _GslbNewCfgGenUsern_Type()
)
gslbNewCfgGenUsern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgGenUsern.setStatus("current")


class _GslbCurCfgGenNoremote_Type(Integer32):
    """Custom type gslbCurCfgGenNoremote based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbCurCfgGenNoremote_Type.__name__ = "Integer32"
_GslbCurCfgGenNoremote_Object = MibScalar
gslbCurCfgGenNoremote = _GslbCurCfgGenNoremote_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 25),
    _GslbCurCfgGenNoremote_Type()
)
gslbCurCfgGenNoremote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgGenNoremote.setStatus("current")


class _GslbNewCfgGenNoremote_Type(Integer32):
    """Custom type gslbNewCfgGenNoremote based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbNewCfgGenNoremote_Type.__name__ = "Integer32"
_GslbNewCfgGenNoremote_Object = MibScalar
gslbNewCfgGenNoremote = _GslbNewCfgGenNoremote_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 26),
    _GslbNewCfgGenNoremote_Type()
)
gslbNewCfgGenNoremote.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgGenNoremote.setStatus("current")


class _GslbCurCfgGenEncrypt_Type(Integer32):
    """Custom type gslbCurCfgGenEncrypt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbCurCfgGenEncrypt_Type.__name__ = "Integer32"
_GslbCurCfgGenEncrypt_Object = MibScalar
gslbCurCfgGenEncrypt = _GslbCurCfgGenEncrypt_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 27),
    _GslbCurCfgGenEncrypt_Type()
)
gslbCurCfgGenEncrypt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgGenEncrypt.setStatus("current")


class _GslbNewCfgGenEncrypt_Type(Integer32):
    """Custom type gslbNewCfgGenEncrypt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbNewCfgGenEncrypt_Type.__name__ = "Integer32"
_GslbNewCfgGenEncrypt_Object = MibScalar
gslbNewCfgGenEncrypt = _GslbNewCfgGenEncrypt_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 28),
    _GslbNewCfgGenEncrypt_Type()
)
gslbNewCfgGenEncrypt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgGenEncrypt.setStatus("current")


class _GslbCurCfgGenRemSiteUpdatePort_Type(Integer32):
    """Custom type gslbCurCfgGenRemSiteUpdatePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_GslbCurCfgGenRemSiteUpdatePort_Type.__name__ = "Integer32"
_GslbCurCfgGenRemSiteUpdatePort_Object = MibScalar
gslbCurCfgGenRemSiteUpdatePort = _GslbCurCfgGenRemSiteUpdatePort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 29),
    _GslbCurCfgGenRemSiteUpdatePort_Type()
)
gslbCurCfgGenRemSiteUpdatePort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgGenRemSiteUpdatePort.setStatus("current")


class _GslbNewCfgGenRemSiteUpdatePort_Type(Integer32):
    """Custom type gslbNewCfgGenRemSiteUpdatePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_GslbNewCfgGenRemSiteUpdatePort_Type.__name__ = "Integer32"
_GslbNewCfgGenRemSiteUpdatePort_Object = MibScalar
gslbNewCfgGenRemSiteUpdatePort = _GslbNewCfgGenRemSiteUpdatePort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 30),
    _GslbNewCfgGenRemSiteUpdatePort_Type()
)
gslbNewCfgGenRemSiteUpdatePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgGenRemSiteUpdatePort.setStatus("current")


class _GslbCurCfgGenSessUtilCap_Type(Integer32):
    """Custom type gslbCurCfgGenSessUtilCap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_GslbCurCfgGenSessUtilCap_Type.__name__ = "Integer32"
_GslbCurCfgGenSessUtilCap_Object = MibScalar
gslbCurCfgGenSessUtilCap = _GslbCurCfgGenSessUtilCap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 31),
    _GslbCurCfgGenSessUtilCap_Type()
)
gslbCurCfgGenSessUtilCap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgGenSessUtilCap.setStatus("current")


class _GslbNewCfgGenSessUtilCap_Type(Integer32):
    """Custom type gslbNewCfgGenSessUtilCap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_GslbNewCfgGenSessUtilCap_Type.__name__ = "Integer32"
_GslbNewCfgGenSessUtilCap_Object = MibScalar
gslbNewCfgGenSessUtilCap = _GslbNewCfgGenSessUtilCap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 32),
    _GslbNewCfgGenSessUtilCap_Type()
)
gslbNewCfgGenSessUtilCap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgGenSessUtilCap.setStatus("current")


class _GslbCurCfgGenCpuUtilCap_Type(Integer32):
    """Custom type gslbCurCfgGenCpuUtilCap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_GslbCurCfgGenCpuUtilCap_Type.__name__ = "Integer32"
_GslbCurCfgGenCpuUtilCap_Object = MibScalar
gslbCurCfgGenCpuUtilCap = _GslbCurCfgGenCpuUtilCap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 33),
    _GslbCurCfgGenCpuUtilCap_Type()
)
gslbCurCfgGenCpuUtilCap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgGenCpuUtilCap.setStatus("current")


class _GslbNewCfgGenCpuUtilCap_Type(Integer32):
    """Custom type gslbNewCfgGenCpuUtilCap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_GslbNewCfgGenCpuUtilCap_Type.__name__ = "Integer32"
_GslbNewCfgGenCpuUtilCap_Object = MibScalar
gslbNewCfgGenCpuUtilCap = _GslbNewCfgGenCpuUtilCap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 34),
    _GslbNewCfgGenCpuUtilCap_Type()
)
gslbNewCfgGenCpuUtilCap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgGenCpuUtilCap.setStatus("current")
_GslbCurCfgGenSourceIpNetmask_Type = IpAddress
_GslbCurCfgGenSourceIpNetmask_Object = MibScalar
gslbCurCfgGenSourceIpNetmask = _GslbCurCfgGenSourceIpNetmask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 35),
    _GslbCurCfgGenSourceIpNetmask_Type()
)
gslbCurCfgGenSourceIpNetmask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgGenSourceIpNetmask.setStatus("current")
_GslbNewCfgGenSourceIpNetmask_Type = IpAddress
_GslbNewCfgGenSourceIpNetmask_Object = MibScalar
gslbNewCfgGenSourceIpNetmask = _GslbNewCfgGenSourceIpNetmask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 36),
    _GslbNewCfgGenSourceIpNetmask_Type()
)
gslbNewCfgGenSourceIpNetmask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgGenSourceIpNetmask.setStatus("current")


class _GslbCurCfgGenTimeout_Type(Integer32):
    """Custom type gslbCurCfgGenTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1440),
    )


_GslbCurCfgGenTimeout_Type.__name__ = "Integer32"
_GslbCurCfgGenTimeout_Object = MibScalar
gslbCurCfgGenTimeout = _GslbCurCfgGenTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 37),
    _GslbCurCfgGenTimeout_Type()
)
gslbCurCfgGenTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgGenTimeout.setStatus("current")


class _GslbNewCfgGenTimeout_Type(Integer32):
    """Custom type gslbNewCfgGenTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1440),
    )


_GslbNewCfgGenTimeout_Type.__name__ = "Integer32"
_GslbNewCfgGenTimeout_Object = MibScalar
gslbNewCfgGenTimeout = _GslbNewCfgGenTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 38),
    _GslbNewCfgGenTimeout_Type()
)
gslbNewCfgGenTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgGenTimeout.setStatus("current")


class _GslbCurCfgGenDnsDirect_Type(Integer32):
    """Custom type gslbCurCfgGenDnsDirect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbCurCfgGenDnsDirect_Type.__name__ = "Integer32"
_GslbCurCfgGenDnsDirect_Object = MibScalar
gslbCurCfgGenDnsDirect = _GslbCurCfgGenDnsDirect_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 39),
    _GslbCurCfgGenDnsDirect_Type()
)
gslbCurCfgGenDnsDirect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgGenDnsDirect.setStatus("current")


class _GslbNewCfgGenDnsDirect_Type(Integer32):
    """Custom type gslbNewCfgGenDnsDirect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbNewCfgGenDnsDirect_Type.__name__ = "Integer32"
_GslbNewCfgGenDnsDirect_Object = MibScalar
gslbNewCfgGenDnsDirect = _GslbNewCfgGenDnsDirect_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 40),
    _GslbNewCfgGenDnsDirect_Type()
)
gslbNewCfgGenDnsDirect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgGenDnsDirect.setStatus("current")


class _GslbCurCfgGenRemSiteUpdateVersion_Type(Integer32):
    """Custom type gslbCurCfgGenRemSiteUpdateVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_GslbCurCfgGenRemSiteUpdateVersion_Type.__name__ = "Integer32"
_GslbCurCfgGenRemSiteUpdateVersion_Object = MibScalar
gslbCurCfgGenRemSiteUpdateVersion = _GslbCurCfgGenRemSiteUpdateVersion_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 41),
    _GslbCurCfgGenRemSiteUpdateVersion_Type()
)
gslbCurCfgGenRemSiteUpdateVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgGenRemSiteUpdateVersion.setStatus("current")


class _GslbNewCfgGenRemSiteUpdateVersion_Type(Integer32):
    """Custom type gslbNewCfgGenRemSiteUpdateVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_GslbNewCfgGenRemSiteUpdateVersion_Type.__name__ = "Integer32"
_GslbNewCfgGenRemSiteUpdateVersion_Object = MibScalar
gslbNewCfgGenRemSiteUpdateVersion = _GslbNewCfgGenRemSiteUpdateVersion_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 42),
    _GslbNewCfgGenRemSiteUpdateVersion_Type()
)
gslbNewCfgGenRemSiteUpdateVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgGenRemSiteUpdateVersion.setStatus("current")


class _GslbCurCfgGenHostname_Type(Integer32):
    """Custom type gslbCurCfgGenHostname based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbCurCfgGenHostname_Type.__name__ = "Integer32"
_GslbCurCfgGenHostname_Object = MibScalar
gslbCurCfgGenHostname = _GslbCurCfgGenHostname_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 43),
    _GslbCurCfgGenHostname_Type()
)
gslbCurCfgGenHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgGenHostname.setStatus("current")


class _GslbNewCfgGenHostname_Type(Integer32):
    """Custom type gslbNewCfgGenHostname based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbNewCfgGenHostname_Type.__name__ = "Integer32"
_GslbNewCfgGenHostname_Object = MibScalar
gslbNewCfgGenHostname = _GslbNewCfgGenHostname_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 44),
    _GslbNewCfgGenHostname_Type()
)
gslbNewCfgGenHostname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgGenHostname.setStatus("current")


class _GslbCurCfgGenRemSiteUpdateIntervalSeconds_Type(Integer32):
    """Custom type gslbCurCfgGenRemSiteUpdateIntervalSeconds based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 7200),
    )


_GslbCurCfgGenRemSiteUpdateIntervalSeconds_Type.__name__ = "Integer32"
_GslbCurCfgGenRemSiteUpdateIntervalSeconds_Object = MibScalar
gslbCurCfgGenRemSiteUpdateIntervalSeconds = _GslbCurCfgGenRemSiteUpdateIntervalSeconds_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 45),
    _GslbCurCfgGenRemSiteUpdateIntervalSeconds_Type()
)
gslbCurCfgGenRemSiteUpdateIntervalSeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgGenRemSiteUpdateIntervalSeconds.setStatus("current")


class _GslbNewCfgGenRemSiteUpdateIntervalSeconds_Type(Integer32):
    """Custom type gslbNewCfgGenRemSiteUpdateIntervalSeconds based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 7200),
    )


_GslbNewCfgGenRemSiteUpdateIntervalSeconds_Type.__name__ = "Integer32"
_GslbNewCfgGenRemSiteUpdateIntervalSeconds_Object = MibScalar
gslbNewCfgGenRemSiteUpdateIntervalSeconds = _GslbNewCfgGenRemSiteUpdateIntervalSeconds_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 46),
    _GslbNewCfgGenRemSiteUpdateIntervalSeconds_Type()
)
gslbNewCfgGenRemSiteUpdateIntervalSeconds.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgGenRemSiteUpdateIntervalSeconds.setStatus("current")


class _GslbCurCfgGenNoResp_Type(Integer32):
    """Custom type gslbCurCfgGenNoResp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_GslbCurCfgGenNoResp_Type.__name__ = "Integer32"
_GslbCurCfgGenNoResp_Object = MibScalar
gslbCurCfgGenNoResp = _GslbCurCfgGenNoResp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 47),
    _GslbCurCfgGenNoResp_Type()
)
gslbCurCfgGenNoResp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgGenNoResp.setStatus("current")


class _GslbNewCfgGenNoResp_Type(Integer32):
    """Custom type gslbNewCfgGenNoResp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_GslbNewCfgGenNoResp_Type.__name__ = "Integer32"
_GslbNewCfgGenNoResp_Object = MibScalar
gslbNewCfgGenNoResp = _GslbNewCfgGenNoResp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 48),
    _GslbNewCfgGenNoResp_Type()
)
gslbNewCfgGenNoResp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgGenNoResp.setStatus("current")


class _GslbCurCfgProximityTime_Type(Integer32):
    """Custom type gslbCurCfgProximityTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_GslbCurCfgProximityTime_Type.__name__ = "Integer32"
_GslbCurCfgProximityTime_Object = MibScalar
gslbCurCfgProximityTime = _GslbCurCfgProximityTime_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 49),
    _GslbCurCfgProximityTime_Type()
)
gslbCurCfgProximityTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgProximityTime.setStatus("current")


class _GslbNewCfgProximityTime_Type(Integer32):
    """Custom type gslbNewCfgProximityTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_GslbNewCfgProximityTime_Type.__name__ = "Integer32"
_GslbNewCfgProximityTime_Object = MibScalar
gslbNewCfgProximityTime = _GslbNewCfgProximityTime_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 50),
    _GslbNewCfgProximityTime_Type()
)
gslbNewCfgProximityTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgProximityTime.setStatus("current")


class _GslbCurCfgProximityMask_Type(Integer32):
    """Custom type gslbCurCfgProximityMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 24),
    )


_GslbCurCfgProximityMask_Type.__name__ = "Integer32"
_GslbCurCfgProximityMask_Object = MibScalar
gslbCurCfgProximityMask = _GslbCurCfgProximityMask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 51),
    _GslbCurCfgProximityMask_Type()
)
gslbCurCfgProximityMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgProximityMask.setStatus("current")


class _GslbNewCfgProximityMask_Type(Integer32):
    """Custom type gslbNewCfgProximityMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 24),
    )


_GslbNewCfgProximityMask_Type.__name__ = "Integer32"
_GslbNewCfgProximityMask_Object = MibScalar
gslbNewCfgProximityMask = _GslbNewCfgProximityMask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 52),
    _GslbNewCfgProximityMask_Type()
)
gslbNewCfgProximityMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgProximityMask.setStatus("current")


class _GslbCurCfgProximityAge_Type(Integer32):
    """Custom type gslbCurCfgProximityAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10080),
    )


_GslbCurCfgProximityAge_Type.__name__ = "Integer32"
_GslbCurCfgProximityAge_Object = MibScalar
gslbCurCfgProximityAge = _GslbCurCfgProximityAge_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 53),
    _GslbCurCfgProximityAge_Type()
)
gslbCurCfgProximityAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgProximityAge.setStatus("current")


class _GslbNewCfgProximityAge_Type(Integer32):
    """Custom type gslbNewCfgProximityAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10080),
    )


_GslbNewCfgProximityAge_Type.__name__ = "Integer32"
_GslbNewCfgProximityAge_Object = MibScalar
gslbNewCfgProximityAge = _GslbNewCfgProximityAge_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 54),
    _GslbNewCfgProximityAge_Type()
)
gslbNewCfgProximityAge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgProximityAge.setStatus("current")


class _GslbCurCfgGenSourceIpv6Prefix_Type(Integer32):
    """Custom type gslbCurCfgGenSourceIpv6Prefix based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_GslbCurCfgGenSourceIpv6Prefix_Type.__name__ = "Integer32"
_GslbCurCfgGenSourceIpv6Prefix_Object = MibScalar
gslbCurCfgGenSourceIpv6Prefix = _GslbCurCfgGenSourceIpv6Prefix_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 55),
    _GslbCurCfgGenSourceIpv6Prefix_Type()
)
gslbCurCfgGenSourceIpv6Prefix.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgGenSourceIpv6Prefix.setStatus("current")


class _GslbNewCfgGenSourceIpv6Prefix_Type(Integer32):
    """Custom type gslbNewCfgGenSourceIpv6Prefix based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_GslbNewCfgGenSourceIpv6Prefix_Type.__name__ = "Integer32"
_GslbNewCfgGenSourceIpv6Prefix_Object = MibScalar
gslbNewCfgGenSourceIpv6Prefix = _GslbNewCfgGenSourceIpv6Prefix_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 1, 56),
    _GslbNewCfgGenSourceIpv6Prefix_Type()
)
gslbNewCfgGenSourceIpv6Prefix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgGenSourceIpv6Prefix.setStatus("current")
_GslbSitesCfg_ObjectIdentity = ObjectIdentity
gslbSitesCfg = _GslbSitesCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2)
)
_GslbRemSiteTableMaxSize_Type = Integer32
_GslbRemSiteTableMaxSize_Object = MibScalar
gslbRemSiteTableMaxSize = _GslbRemSiteTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 1),
    _GslbRemSiteTableMaxSize_Type()
)
gslbRemSiteTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbRemSiteTableMaxSize.setStatus("current")
_GslbCurCfgRemSiteTable_Object = MibTable
gslbCurCfgRemSiteTable = _GslbCurCfgRemSiteTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 2)
)
if mibBuilder.loadTexts:
    gslbCurCfgRemSiteTable.setStatus("current")
_GslbCurCfgRemSiteTableEntry_Object = MibTableRow
gslbCurCfgRemSiteTableEntry = _GslbCurCfgRemSiteTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 2, 1)
)
gslbCurCfgRemSiteTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbCurCfgRemSiteIndx"),
)
if mibBuilder.loadTexts:
    gslbCurCfgRemSiteTableEntry.setStatus("current")
_GslbCurCfgRemSiteIndx_Type = Integer32
_GslbCurCfgRemSiteIndx_Object = MibTableColumn
gslbCurCfgRemSiteIndx = _GslbCurCfgRemSiteIndx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 2, 1, 1),
    _GslbCurCfgRemSiteIndx_Type()
)
gslbCurCfgRemSiteIndx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgRemSiteIndx.setStatus("current")
_GslbCurCfgRemSitePrimaryIp_Type = IpAddress
_GslbCurCfgRemSitePrimaryIp_Object = MibTableColumn
gslbCurCfgRemSitePrimaryIp = _GslbCurCfgRemSitePrimaryIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 2, 1, 2),
    _GslbCurCfgRemSitePrimaryIp_Type()
)
gslbCurCfgRemSitePrimaryIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgRemSitePrimaryIp.setStatus("current")
_GslbCurCfgRemSiteSecondaryIp_Type = IpAddress
_GslbCurCfgRemSiteSecondaryIp_Object = MibTableColumn
gslbCurCfgRemSiteSecondaryIp = _GslbCurCfgRemSiteSecondaryIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 2, 1, 3),
    _GslbCurCfgRemSiteSecondaryIp_Type()
)
gslbCurCfgRemSiteSecondaryIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgRemSiteSecondaryIp.setStatus("current")


class _GslbCurCfgRemSiteState_Type(Integer32):
    """Custom type gslbCurCfgRemSiteState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbCurCfgRemSiteState_Type.__name__ = "Integer32"
_GslbCurCfgRemSiteState_Object = MibTableColumn
gslbCurCfgRemSiteState = _GslbCurCfgRemSiteState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 2, 1, 4),
    _GslbCurCfgRemSiteState_Type()
)
gslbCurCfgRemSiteState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgRemSiteState.setStatus("current")


class _GslbCurCfgRemSiteUpdate_Type(Integer32):
    """Custom type gslbCurCfgRemSiteUpdate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbCurCfgRemSiteUpdate_Type.__name__ = "Integer32"
_GslbCurCfgRemSiteUpdate_Object = MibTableColumn
gslbCurCfgRemSiteUpdate = _GslbCurCfgRemSiteUpdate_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 2, 1, 5),
    _GslbCurCfgRemSiteUpdate_Type()
)
gslbCurCfgRemSiteUpdate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgRemSiteUpdate.setStatus("current")


class _GslbCurCfgRemSiteName_Type(DisplayString):
    """Custom type gslbCurCfgRemSiteName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_GslbCurCfgRemSiteName_Type.__name__ = "DisplayString"
_GslbCurCfgRemSiteName_Object = MibTableColumn
gslbCurCfgRemSiteName = _GslbCurCfgRemSiteName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 2, 1, 6),
    _GslbCurCfgRemSiteName_Type()
)
gslbCurCfgRemSiteName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgRemSiteName.setStatus("current")


class _GslbCurCfgRemSitePrimaryIPVer_Type(Integer32):
    """Custom type gslbCurCfgRemSitePrimaryIPVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_GslbCurCfgRemSitePrimaryIPVer_Type.__name__ = "Integer32"
_GslbCurCfgRemSitePrimaryIPVer_Object = MibTableColumn
gslbCurCfgRemSitePrimaryIPVer = _GslbCurCfgRemSitePrimaryIPVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 2, 1, 8),
    _GslbCurCfgRemSitePrimaryIPVer_Type()
)
gslbCurCfgRemSitePrimaryIPVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgRemSitePrimaryIPVer.setStatus("current")


class _GslbCurCfgRemSitePrimaryIp6_Type(DisplayString):
    """Custom type gslbCurCfgRemSitePrimaryIp6 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_GslbCurCfgRemSitePrimaryIp6_Type.__name__ = "DisplayString"
_GslbCurCfgRemSitePrimaryIp6_Object = MibTableColumn
gslbCurCfgRemSitePrimaryIp6 = _GslbCurCfgRemSitePrimaryIp6_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 2, 1, 9),
    _GslbCurCfgRemSitePrimaryIp6_Type()
)
gslbCurCfgRemSitePrimaryIp6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgRemSitePrimaryIp6.setStatus("current")


class _GslbCurCfgRemSiteSecondaryIPVer_Type(Integer32):
    """Custom type gslbCurCfgRemSiteSecondaryIPVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_GslbCurCfgRemSiteSecondaryIPVer_Type.__name__ = "Integer32"
_GslbCurCfgRemSiteSecondaryIPVer_Object = MibTableColumn
gslbCurCfgRemSiteSecondaryIPVer = _GslbCurCfgRemSiteSecondaryIPVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 2, 1, 10),
    _GslbCurCfgRemSiteSecondaryIPVer_Type()
)
gslbCurCfgRemSiteSecondaryIPVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgRemSiteSecondaryIPVer.setStatus("current")


class _GslbCurCfgRemSiteSecondaryIp6_Type(DisplayString):
    """Custom type gslbCurCfgRemSiteSecondaryIp6 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_GslbCurCfgRemSiteSecondaryIp6_Type.__name__ = "DisplayString"
_GslbCurCfgRemSiteSecondaryIp6_Object = MibTableColumn
gslbCurCfgRemSiteSecondaryIp6 = _GslbCurCfgRemSiteSecondaryIp6_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 2, 1, 11),
    _GslbCurCfgRemSiteSecondaryIp6_Type()
)
gslbCurCfgRemSiteSecondaryIp6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgRemSiteSecondaryIp6.setStatus("current")
_GslbNewCfgRemSiteTable_Object = MibTable
gslbNewCfgRemSiteTable = _GslbNewCfgRemSiteTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 3)
)
if mibBuilder.loadTexts:
    gslbNewCfgRemSiteTable.setStatus("current")
_GslbNewCfgRemSiteTableEntry_Object = MibTableRow
gslbNewCfgRemSiteTableEntry = _GslbNewCfgRemSiteTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 3, 1)
)
gslbNewCfgRemSiteTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbNewCfgRemSiteIndx"),
)
if mibBuilder.loadTexts:
    gslbNewCfgRemSiteTableEntry.setStatus("current")
_GslbNewCfgRemSiteIndx_Type = Integer32
_GslbNewCfgRemSiteIndx_Object = MibTableColumn
gslbNewCfgRemSiteIndx = _GslbNewCfgRemSiteIndx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 3, 1, 1),
    _GslbNewCfgRemSiteIndx_Type()
)
gslbNewCfgRemSiteIndx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbNewCfgRemSiteIndx.setStatus("current")
_GslbNewCfgRemSitePrimaryIp_Type = IpAddress
_GslbNewCfgRemSitePrimaryIp_Object = MibTableColumn
gslbNewCfgRemSitePrimaryIp = _GslbNewCfgRemSitePrimaryIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 3, 1, 2),
    _GslbNewCfgRemSitePrimaryIp_Type()
)
gslbNewCfgRemSitePrimaryIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewCfgRemSitePrimaryIp.setStatus("current")
_GslbNewCfgRemSiteSecondaryIp_Type = IpAddress
_GslbNewCfgRemSiteSecondaryIp_Object = MibTableColumn
gslbNewCfgRemSiteSecondaryIp = _GslbNewCfgRemSiteSecondaryIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 3, 1, 3),
    _GslbNewCfgRemSiteSecondaryIp_Type()
)
gslbNewCfgRemSiteSecondaryIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewCfgRemSiteSecondaryIp.setStatus("current")


class _GslbNewCfgRemSiteState_Type(Integer32):
    """Custom type gslbNewCfgRemSiteState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbNewCfgRemSiteState_Type.__name__ = "Integer32"
_GslbNewCfgRemSiteState_Object = MibTableColumn
gslbNewCfgRemSiteState = _GslbNewCfgRemSiteState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 3, 1, 4),
    _GslbNewCfgRemSiteState_Type()
)
gslbNewCfgRemSiteState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewCfgRemSiteState.setStatus("current")


class _GslbNewCfgRemSiteUpdate_Type(Integer32):
    """Custom type gslbNewCfgRemSiteUpdate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbNewCfgRemSiteUpdate_Type.__name__ = "Integer32"
_GslbNewCfgRemSiteUpdate_Object = MibTableColumn
gslbNewCfgRemSiteUpdate = _GslbNewCfgRemSiteUpdate_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 3, 1, 5),
    _GslbNewCfgRemSiteUpdate_Type()
)
gslbNewCfgRemSiteUpdate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewCfgRemSiteUpdate.setStatus("current")


class _GslbNewCfgRemSiteDelete_Type(Integer32):
    """Custom type gslbNewCfgRemSiteDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_GslbNewCfgRemSiteDelete_Type.__name__ = "Integer32"
_GslbNewCfgRemSiteDelete_Object = MibTableColumn
gslbNewCfgRemSiteDelete = _GslbNewCfgRemSiteDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 3, 1, 6),
    _GslbNewCfgRemSiteDelete_Type()
)
gslbNewCfgRemSiteDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewCfgRemSiteDelete.setStatus("current")


class _GslbNewCfgRemSiteName_Type(DisplayString):
    """Custom type gslbNewCfgRemSiteName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_GslbNewCfgRemSiteName_Type.__name__ = "DisplayString"
_GslbNewCfgRemSiteName_Object = MibTableColumn
gslbNewCfgRemSiteName = _GslbNewCfgRemSiteName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 3, 1, 7),
    _GslbNewCfgRemSiteName_Type()
)
gslbNewCfgRemSiteName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewCfgRemSiteName.setStatus("current")


class _GslbNewCfgRemSitePrimaryIPVer_Type(Integer32):
    """Custom type gslbNewCfgRemSitePrimaryIPVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_GslbNewCfgRemSitePrimaryIPVer_Type.__name__ = "Integer32"
_GslbNewCfgRemSitePrimaryIPVer_Object = MibTableColumn
gslbNewCfgRemSitePrimaryIPVer = _GslbNewCfgRemSitePrimaryIPVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 3, 1, 9),
    _GslbNewCfgRemSitePrimaryIPVer_Type()
)
gslbNewCfgRemSitePrimaryIPVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbNewCfgRemSitePrimaryIPVer.setStatus("current")


class _GslbNewCfgRemSitePrimaryIp6_Type(DisplayString):
    """Custom type gslbNewCfgRemSitePrimaryIp6 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_GslbNewCfgRemSitePrimaryIp6_Type.__name__ = "DisplayString"
_GslbNewCfgRemSitePrimaryIp6_Object = MibTableColumn
gslbNewCfgRemSitePrimaryIp6 = _GslbNewCfgRemSitePrimaryIp6_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 3, 1, 10),
    _GslbNewCfgRemSitePrimaryIp6_Type()
)
gslbNewCfgRemSitePrimaryIp6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewCfgRemSitePrimaryIp6.setStatus("current")


class _GslbNewCfgRemSiteSecondaryIPVer_Type(Integer32):
    """Custom type gslbNewCfgRemSiteSecondaryIPVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_GslbNewCfgRemSiteSecondaryIPVer_Type.__name__ = "Integer32"
_GslbNewCfgRemSiteSecondaryIPVer_Object = MibTableColumn
gslbNewCfgRemSiteSecondaryIPVer = _GslbNewCfgRemSiteSecondaryIPVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 3, 1, 11),
    _GslbNewCfgRemSiteSecondaryIPVer_Type()
)
gslbNewCfgRemSiteSecondaryIPVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbNewCfgRemSiteSecondaryIPVer.setStatus("current")


class _GslbNewCfgRemSiteSecondaryIp6_Type(DisplayString):
    """Custom type gslbNewCfgRemSiteSecondaryIp6 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_GslbNewCfgRemSiteSecondaryIp6_Type.__name__ = "DisplayString"
_GslbNewCfgRemSiteSecondaryIp6_Object = MibTableColumn
gslbNewCfgRemSiteSecondaryIp6 = _GslbNewCfgRemSiteSecondaryIp6_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 2, 3, 1, 12),
    _GslbNewCfgRemSiteSecondaryIp6_Type()
)
gslbNewCfgRemSiteSecondaryIp6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewCfgRemSiteSecondaryIp6.setStatus("current")
_GslbEnhNetworkCfg_ObjectIdentity = ObjectIdentity
gslbEnhNetworkCfg = _GslbEnhNetworkCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4)
)
_GslbEnhNetworkTableMaxSize_Type = Integer32
_GslbEnhNetworkTableMaxSize_Object = MibScalar
gslbEnhNetworkTableMaxSize = _GslbEnhNetworkTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 1),
    _GslbEnhNetworkTableMaxSize_Type()
)
gslbEnhNetworkTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbEnhNetworkTableMaxSize.setStatus("current")
_GslbCurCfgEnhNetworkTable_Object = MibTable
gslbCurCfgEnhNetworkTable = _GslbCurCfgEnhNetworkTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 2)
)
if mibBuilder.loadTexts:
    gslbCurCfgEnhNetworkTable.setStatus("current")
_GslbCurCfgEnhNetworkTableEntry_Object = MibTableRow
gslbCurCfgEnhNetworkTableEntry = _GslbCurCfgEnhNetworkTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 2, 1)
)
gslbCurCfgEnhNetworkTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbCurCfgEnhNetworkIndx"),
)
if mibBuilder.loadTexts:
    gslbCurCfgEnhNetworkTableEntry.setStatus("current")
_GslbCurCfgEnhNetworkIndx_Type = Integer32
_GslbCurCfgEnhNetworkIndx_Object = MibTableColumn
gslbCurCfgEnhNetworkIndx = _GslbCurCfgEnhNetworkIndx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 2, 1, 1),
    _GslbCurCfgEnhNetworkIndx_Type()
)
gslbCurCfgEnhNetworkIndx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgEnhNetworkIndx.setStatus("current")


class _GslbCurCfgEnhNetworkState_Type(Integer32):
    """Custom type gslbCurCfgEnhNetworkState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbCurCfgEnhNetworkState_Type.__name__ = "Integer32"
_GslbCurCfgEnhNetworkState_Object = MibTableColumn
gslbCurCfgEnhNetworkState = _GslbCurCfgEnhNetworkState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 2, 1, 2),
    _GslbCurCfgEnhNetworkState_Type()
)
gslbCurCfgEnhNetworkState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgEnhNetworkState.setStatus("current")
_GslbCurCfgEnhNetworkSourceIp_Type = IpAddress
_GslbCurCfgEnhNetworkSourceIp_Object = MibTableColumn
gslbCurCfgEnhNetworkSourceIp = _GslbCurCfgEnhNetworkSourceIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 2, 1, 3),
    _GslbCurCfgEnhNetworkSourceIp_Type()
)
gslbCurCfgEnhNetworkSourceIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgEnhNetworkSourceIp.setStatus("current")
_GslbCurCfgEnhNetworkNetMask_Type = IpAddress
_GslbCurCfgEnhNetworkNetMask_Object = MibTableColumn
gslbCurCfgEnhNetworkNetMask = _GslbCurCfgEnhNetworkNetMask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 2, 1, 4),
    _GslbCurCfgEnhNetworkNetMask_Type()
)
gslbCurCfgEnhNetworkNetMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgEnhNetworkNetMask.setStatus("current")
_GslbCurCfgEnhNetworkVirtServer_Type = OctetString
_GslbCurCfgEnhNetworkVirtServer_Object = MibTableColumn
gslbCurCfgEnhNetworkVirtServer = _GslbCurCfgEnhNetworkVirtServer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 2, 1, 5),
    _GslbCurCfgEnhNetworkVirtServer_Type()
)
gslbCurCfgEnhNetworkVirtServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgEnhNetworkVirtServer.setStatus("current")
_GslbCurCfgEnhNetworkRemRealServer_Type = OctetString
_GslbCurCfgEnhNetworkRemRealServer_Object = MibTableColumn
gslbCurCfgEnhNetworkRemRealServer = _GslbCurCfgEnhNetworkRemRealServer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 2, 1, 6),
    _GslbCurCfgEnhNetworkRemRealServer_Type()
)
gslbCurCfgEnhNetworkRemRealServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgEnhNetworkRemRealServer.setStatus("current")


class _GslbCurCfgEnhNetworkSourceIpV6_Type(DisplayString):
    """Custom type gslbCurCfgEnhNetworkSourceIpV6 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_GslbCurCfgEnhNetworkSourceIpV6_Type.__name__ = "DisplayString"
_GslbCurCfgEnhNetworkSourceIpV6_Object = MibTableColumn
gslbCurCfgEnhNetworkSourceIpV6 = _GslbCurCfgEnhNetworkSourceIpV6_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 2, 1, 7),
    _GslbCurCfgEnhNetworkSourceIpV6_Type()
)
gslbCurCfgEnhNetworkSourceIpV6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgEnhNetworkSourceIpV6.setStatus("current")


class _GslbCurCfgEnhNetworkVer_Type(Integer32):
    """Custom type gslbCurCfgEnhNetworkVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_GslbCurCfgEnhNetworkVer_Type.__name__ = "Integer32"
_GslbCurCfgEnhNetworkVer_Object = MibTableColumn
gslbCurCfgEnhNetworkVer = _GslbCurCfgEnhNetworkVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 2, 1, 8),
    _GslbCurCfgEnhNetworkVer_Type()
)
gslbCurCfgEnhNetworkVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgEnhNetworkVer.setStatus("current")


class _GslbCurCfgEnhNetworkSprefix_Type(Integer32):
    """Custom type gslbCurCfgEnhNetworkSprefix based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_GslbCurCfgEnhNetworkSprefix_Type.__name__ = "Integer32"
_GslbCurCfgEnhNetworkSprefix_Object = MibTableColumn
gslbCurCfgEnhNetworkSprefix = _GslbCurCfgEnhNetworkSprefix_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 2, 1, 9),
    _GslbCurCfgEnhNetworkSprefix_Type()
)
gslbCurCfgEnhNetworkSprefix.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgEnhNetworkSprefix.setStatus("current")
_GslbNewCfgEnhNetworkTable_Object = MibTable
gslbNewCfgEnhNetworkTable = _GslbNewCfgEnhNetworkTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 3)
)
if mibBuilder.loadTexts:
    gslbNewCfgEnhNetworkTable.setStatus("current")
_GslbNewCfgEnhNetworkTableEntry_Object = MibTableRow
gslbNewCfgEnhNetworkTableEntry = _GslbNewCfgEnhNetworkTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 3, 1)
)
gslbNewCfgEnhNetworkTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbNewCfgEnhNetworkIndx"),
)
if mibBuilder.loadTexts:
    gslbNewCfgEnhNetworkTableEntry.setStatus("current")
_GslbNewCfgEnhNetworkIndx_Type = Integer32
_GslbNewCfgEnhNetworkIndx_Object = MibTableColumn
gslbNewCfgEnhNetworkIndx = _GslbNewCfgEnhNetworkIndx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 3, 1, 1),
    _GslbNewCfgEnhNetworkIndx_Type()
)
gslbNewCfgEnhNetworkIndx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbNewCfgEnhNetworkIndx.setStatus("current")


class _GslbNewCfgEnhNetworkState_Type(Integer32):
    """Custom type gslbNewCfgEnhNetworkState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbNewCfgEnhNetworkState_Type.__name__ = "Integer32"
_GslbNewCfgEnhNetworkState_Object = MibTableColumn
gslbNewCfgEnhNetworkState = _GslbNewCfgEnhNetworkState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 3, 1, 2),
    _GslbNewCfgEnhNetworkState_Type()
)
gslbNewCfgEnhNetworkState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewCfgEnhNetworkState.setStatus("current")
_GslbNewCfgEnhNetworkSourceIp_Type = IpAddress
_GslbNewCfgEnhNetworkSourceIp_Object = MibTableColumn
gslbNewCfgEnhNetworkSourceIp = _GslbNewCfgEnhNetworkSourceIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 3, 1, 3),
    _GslbNewCfgEnhNetworkSourceIp_Type()
)
gslbNewCfgEnhNetworkSourceIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewCfgEnhNetworkSourceIp.setStatus("current")
_GslbNewCfgEnhNetworkNetMask_Type = IpAddress
_GslbNewCfgEnhNetworkNetMask_Object = MibTableColumn
gslbNewCfgEnhNetworkNetMask = _GslbNewCfgEnhNetworkNetMask_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 3, 1, 4),
    _GslbNewCfgEnhNetworkNetMask_Type()
)
gslbNewCfgEnhNetworkNetMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewCfgEnhNetworkNetMask.setStatus("current")


class _GslbNewCfgEnhNetworkDelete_Type(Integer32):
    """Custom type gslbNewCfgEnhNetworkDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_GslbNewCfgEnhNetworkDelete_Type.__name__ = "Integer32"
_GslbNewCfgEnhNetworkDelete_Object = MibTableColumn
gslbNewCfgEnhNetworkDelete = _GslbNewCfgEnhNetworkDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 3, 1, 5),
    _GslbNewCfgEnhNetworkDelete_Type()
)
gslbNewCfgEnhNetworkDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewCfgEnhNetworkDelete.setStatus("current")
_GslbNewCfgEnhNetworkVirtServer_Type = OctetString
_GslbNewCfgEnhNetworkVirtServer_Object = MibTableColumn
gslbNewCfgEnhNetworkVirtServer = _GslbNewCfgEnhNetworkVirtServer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 3, 1, 6),
    _GslbNewCfgEnhNetworkVirtServer_Type()
)
gslbNewCfgEnhNetworkVirtServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbNewCfgEnhNetworkVirtServer.setStatus("current")
_GslbNewCfgEnhNetworkRemRealServer_Type = OctetString
_GslbNewCfgEnhNetworkRemRealServer_Object = MibTableColumn
gslbNewCfgEnhNetworkRemRealServer = _GslbNewCfgEnhNetworkRemRealServer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 3, 1, 7),
    _GslbNewCfgEnhNetworkRemRealServer_Type()
)
gslbNewCfgEnhNetworkRemRealServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbNewCfgEnhNetworkRemRealServer.setStatus("current")
_GslbNewCfgEnhNetworkAddVirtServer_Type = Integer32
_GslbNewCfgEnhNetworkAddVirtServer_Object = MibTableColumn
gslbNewCfgEnhNetworkAddVirtServer = _GslbNewCfgEnhNetworkAddVirtServer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 3, 1, 8),
    _GslbNewCfgEnhNetworkAddVirtServer_Type()
)
gslbNewCfgEnhNetworkAddVirtServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewCfgEnhNetworkAddVirtServer.setStatus("current")
_GslbNewCfgEnhNetworkRemoveVirtServer_Type = Integer32
_GslbNewCfgEnhNetworkRemoveVirtServer_Object = MibTableColumn
gslbNewCfgEnhNetworkRemoveVirtServer = _GslbNewCfgEnhNetworkRemoveVirtServer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 3, 1, 9),
    _GslbNewCfgEnhNetworkRemoveVirtServer_Type()
)
gslbNewCfgEnhNetworkRemoveVirtServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewCfgEnhNetworkRemoveVirtServer.setStatus("current")
_GslbNewCfgEnhNetworkAddRemRealServer_Type = Integer32
_GslbNewCfgEnhNetworkAddRemRealServer_Object = MibTableColumn
gslbNewCfgEnhNetworkAddRemRealServer = _GslbNewCfgEnhNetworkAddRemRealServer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 3, 1, 10),
    _GslbNewCfgEnhNetworkAddRemRealServer_Type()
)
gslbNewCfgEnhNetworkAddRemRealServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewCfgEnhNetworkAddRemRealServer.setStatus("current")
_GslbNewCfgEnhNetworkRemoveRemRealServer_Type = Integer32
_GslbNewCfgEnhNetworkRemoveRemRealServer_Object = MibTableColumn
gslbNewCfgEnhNetworkRemoveRemRealServer = _GslbNewCfgEnhNetworkRemoveRemRealServer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 3, 1, 11),
    _GslbNewCfgEnhNetworkRemoveRemRealServer_Type()
)
gslbNewCfgEnhNetworkRemoveRemRealServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewCfgEnhNetworkRemoveRemRealServer.setStatus("current")


class _GslbNewCfgEnhNetworkSourceIpV6_Type(DisplayString):
    """Custom type gslbNewCfgEnhNetworkSourceIpV6 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_GslbNewCfgEnhNetworkSourceIpV6_Type.__name__ = "DisplayString"
_GslbNewCfgEnhNetworkSourceIpV6_Object = MibTableColumn
gslbNewCfgEnhNetworkSourceIpV6 = _GslbNewCfgEnhNetworkSourceIpV6_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 3, 1, 12),
    _GslbNewCfgEnhNetworkSourceIpV6_Type()
)
gslbNewCfgEnhNetworkSourceIpV6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewCfgEnhNetworkSourceIpV6.setStatus("current")


class _GslbNewCfgEnhNetworkVer_Type(Integer32):
    """Custom type gslbNewCfgEnhNetworkVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_GslbNewCfgEnhNetworkVer_Type.__name__ = "Integer32"
_GslbNewCfgEnhNetworkVer_Object = MibTableColumn
gslbNewCfgEnhNetworkVer = _GslbNewCfgEnhNetworkVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 3, 1, 13),
    _GslbNewCfgEnhNetworkVer_Type()
)
gslbNewCfgEnhNetworkVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbNewCfgEnhNetworkVer.setStatus("current")


class _GslbNewCfgEnhNetworkSprefix_Type(Integer32):
    """Custom type gslbNewCfgEnhNetworkSprefix based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_GslbNewCfgEnhNetworkSprefix_Type.__name__ = "Integer32"
_GslbNewCfgEnhNetworkSprefix_Object = MibTableColumn
gslbNewCfgEnhNetworkSprefix = _GslbNewCfgEnhNetworkSprefix_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 4, 3, 1, 14),
    _GslbNewCfgEnhNetworkSprefix_Type()
)
gslbNewCfgEnhNetworkSprefix.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewCfgEnhNetworkSprefix.setStatus("current")
_GslbRuleCfg_ObjectIdentity = ObjectIdentity
gslbRuleCfg = _GslbRuleCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5)
)
_GslbRuleTableMaxSize_Type = Integer32
_GslbRuleTableMaxSize_Object = MibScalar
gslbRuleTableMaxSize = _GslbRuleTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 1),
    _GslbRuleTableMaxSize_Type()
)
gslbRuleTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbRuleTableMaxSize.setStatus("current")
_GslbCurCfgRuleTable_Object = MibTable
gslbCurCfgRuleTable = _GslbCurCfgRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 2)
)
if mibBuilder.loadTexts:
    gslbCurCfgRuleTable.setStatus("current")
_GslbCurCfgRuleTableEntry_Object = MibTableRow
gslbCurCfgRuleTableEntry = _GslbCurCfgRuleTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 2, 1)
)
gslbCurCfgRuleTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbCurCfgRuleIndx"),
)
if mibBuilder.loadTexts:
    gslbCurCfgRuleTableEntry.setStatus("current")
_GslbCurCfgRuleIndx_Type = Integer32
_GslbCurCfgRuleIndx_Object = MibTableColumn
gslbCurCfgRuleIndx = _GslbCurCfgRuleIndx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 2, 1, 1),
    _GslbCurCfgRuleIndx_Type()
)
gslbCurCfgRuleIndx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgRuleIndx.setStatus("current")


class _GslbCurCfgRuleState_Type(Integer32):
    """Custom type gslbCurCfgRuleState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbCurCfgRuleState_Type.__name__ = "Integer32"
_GslbCurCfgRuleState_Object = MibTableColumn
gslbCurCfgRuleState = _GslbCurCfgRuleState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 2, 1, 2),
    _GslbCurCfgRuleState_Type()
)
gslbCurCfgRuleState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgRuleState.setStatus("current")


class _GslbCurCfgRuleStartHour_Type(Integer32):
    """Custom type gslbCurCfgRuleStartHour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_GslbCurCfgRuleStartHour_Type.__name__ = "Integer32"
_GslbCurCfgRuleStartHour_Object = MibTableColumn
gslbCurCfgRuleStartHour = _GslbCurCfgRuleStartHour_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 2, 1, 3),
    _GslbCurCfgRuleStartHour_Type()
)
gslbCurCfgRuleStartHour.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgRuleStartHour.setStatus("current")


class _GslbCurCfgRuleStartMin_Type(Integer32):
    """Custom type gslbCurCfgRuleStartMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_GslbCurCfgRuleStartMin_Type.__name__ = "Integer32"
_GslbCurCfgRuleStartMin_Object = MibTableColumn
gslbCurCfgRuleStartMin = _GslbCurCfgRuleStartMin_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 2, 1, 4),
    _GslbCurCfgRuleStartMin_Type()
)
gslbCurCfgRuleStartMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgRuleStartMin.setStatus("current")


class _GslbCurCfgRuleEndHour_Type(Integer32):
    """Custom type gslbCurCfgRuleEndHour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_GslbCurCfgRuleEndHour_Type.__name__ = "Integer32"
_GslbCurCfgRuleEndHour_Object = MibTableColumn
gslbCurCfgRuleEndHour = _GslbCurCfgRuleEndHour_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 2, 1, 5),
    _GslbCurCfgRuleEndHour_Type()
)
gslbCurCfgRuleEndHour.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgRuleEndHour.setStatus("current")


class _GslbCurCfgRuleEndMin_Type(Integer32):
    """Custom type gslbCurCfgRuleEndMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_GslbCurCfgRuleEndMin_Type.__name__ = "Integer32"
_GslbCurCfgRuleEndMin_Object = MibTableColumn
gslbCurCfgRuleEndMin = _GslbCurCfgRuleEndMin_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 2, 1, 6),
    _GslbCurCfgRuleEndMin_Type()
)
gslbCurCfgRuleEndMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgRuleEndMin.setStatus("current")


class _GslbCurCfgRuleTTL_Type(Integer32):
    """Custom type gslbCurCfgRuleTTL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_GslbCurCfgRuleTTL_Type.__name__ = "Integer32"
_GslbCurCfgRuleTTL_Object = MibTableColumn
gslbCurCfgRuleTTL = _GslbCurCfgRuleTTL_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 2, 1, 7),
    _GslbCurCfgRuleTTL_Type()
)
gslbCurCfgRuleTTL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgRuleTTL.setStatus("current")


class _GslbCurCfgRuleRR_Type(Integer32):
    """Custom type gslbCurCfgRuleRR based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_GslbCurCfgRuleRR_Type.__name__ = "Integer32"
_GslbCurCfgRuleRR_Object = MibTableColumn
gslbCurCfgRuleRR = _GslbCurCfgRuleRR_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 2, 1, 8),
    _GslbCurCfgRuleRR_Type()
)
gslbCurCfgRuleRR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgRuleRR.setStatus("current")


class _GslbCurCfgRuleDname_Type(DisplayString):
    """Custom type gslbCurCfgRuleDname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_GslbCurCfgRuleDname_Type.__name__ = "DisplayString"
_GslbCurCfgRuleDname_Object = MibTableColumn
gslbCurCfgRuleDname = _GslbCurCfgRuleDname_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 2, 1, 9),
    _GslbCurCfgRuleDname_Type()
)
gslbCurCfgRuleDname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgRuleDname.setStatus("current")
_GslbNewCfgRuleTable_Object = MibTable
gslbNewCfgRuleTable = _GslbNewCfgRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 3)
)
if mibBuilder.loadTexts:
    gslbNewCfgRuleTable.setStatus("current")
_GslbNewCfgRuleTableEntry_Object = MibTableRow
gslbNewCfgRuleTableEntry = _GslbNewCfgRuleTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 3, 1)
)
gslbNewCfgRuleTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbNewCfgRuleIndx"),
)
if mibBuilder.loadTexts:
    gslbNewCfgRuleTableEntry.setStatus("current")
_GslbNewCfgRuleIndx_Type = Integer32
_GslbNewCfgRuleIndx_Object = MibTableColumn
gslbNewCfgRuleIndx = _GslbNewCfgRuleIndx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 3, 1, 1),
    _GslbNewCfgRuleIndx_Type()
)
gslbNewCfgRuleIndx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbNewCfgRuleIndx.setStatus("current")


class _GslbNewCfgRuleState_Type(Integer32):
    """Custom type gslbNewCfgRuleState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbNewCfgRuleState_Type.__name__ = "Integer32"
_GslbNewCfgRuleState_Object = MibTableColumn
gslbNewCfgRuleState = _GslbNewCfgRuleState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 3, 1, 2),
    _GslbNewCfgRuleState_Type()
)
gslbNewCfgRuleState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewCfgRuleState.setStatus("current")


class _GslbNewCfgRuleStartHour_Type(Integer32):
    """Custom type gslbNewCfgRuleStartHour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_GslbNewCfgRuleStartHour_Type.__name__ = "Integer32"
_GslbNewCfgRuleStartHour_Object = MibTableColumn
gslbNewCfgRuleStartHour = _GslbNewCfgRuleStartHour_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 3, 1, 3),
    _GslbNewCfgRuleStartHour_Type()
)
gslbNewCfgRuleStartHour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgRuleStartHour.setStatus("current")


class _GslbNewCfgRuleStartMin_Type(Integer32):
    """Custom type gslbNewCfgRuleStartMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_GslbNewCfgRuleStartMin_Type.__name__ = "Integer32"
_GslbNewCfgRuleStartMin_Object = MibTableColumn
gslbNewCfgRuleStartMin = _GslbNewCfgRuleStartMin_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 3, 1, 4),
    _GslbNewCfgRuleStartMin_Type()
)
gslbNewCfgRuleStartMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgRuleStartMin.setStatus("current")


class _GslbNewCfgRuleEndHour_Type(Integer32):
    """Custom type gslbNewCfgRuleEndHour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_GslbNewCfgRuleEndHour_Type.__name__ = "Integer32"
_GslbNewCfgRuleEndHour_Object = MibTableColumn
gslbNewCfgRuleEndHour = _GslbNewCfgRuleEndHour_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 3, 1, 5),
    _GslbNewCfgRuleEndHour_Type()
)
gslbNewCfgRuleEndHour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgRuleEndHour.setStatus("current")


class _GslbNewCfgRuleEndMin_Type(Integer32):
    """Custom type gslbNewCfgRuleEndMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_GslbNewCfgRuleEndMin_Type.__name__ = "Integer32"
_GslbNewCfgRuleEndMin_Object = MibTableColumn
gslbNewCfgRuleEndMin = _GslbNewCfgRuleEndMin_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 3, 1, 6),
    _GslbNewCfgRuleEndMin_Type()
)
gslbNewCfgRuleEndMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgRuleEndMin.setStatus("current")


class _GslbNewCfgRuleTTL_Type(Integer32):
    """Custom type gslbNewCfgRuleTTL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_GslbNewCfgRuleTTL_Type.__name__ = "Integer32"
_GslbNewCfgRuleTTL_Object = MibTableColumn
gslbNewCfgRuleTTL = _GslbNewCfgRuleTTL_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 3, 1, 7),
    _GslbNewCfgRuleTTL_Type()
)
gslbNewCfgRuleTTL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgRuleTTL.setStatus("current")


class _GslbNewCfgRuleRR_Type(Integer32):
    """Custom type gslbNewCfgRuleRR based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_GslbNewCfgRuleRR_Type.__name__ = "Integer32"
_GslbNewCfgRuleRR_Object = MibTableColumn
gslbNewCfgRuleRR = _GslbNewCfgRuleRR_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 3, 1, 8),
    _GslbNewCfgRuleRR_Type()
)
gslbNewCfgRuleRR.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgRuleRR.setStatus("current")


class _GslbNewCfgRuleDelete_Type(Integer32):
    """Custom type gslbNewCfgRuleDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_GslbNewCfgRuleDelete_Type.__name__ = "Integer32"
_GslbNewCfgRuleDelete_Object = MibTableColumn
gslbNewCfgRuleDelete = _GslbNewCfgRuleDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 3, 1, 9),
    _GslbNewCfgRuleDelete_Type()
)
gslbNewCfgRuleDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewCfgRuleDelete.setStatus("current")


class _GslbNewCfgRuleDname_Type(DisplayString):
    """Custom type gslbNewCfgRuleDname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_GslbNewCfgRuleDname_Type.__name__ = "DisplayString"
_GslbNewCfgRuleDname_Object = MibTableColumn
gslbNewCfgRuleDname = _GslbNewCfgRuleDname_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 3, 1, 10),
    _GslbNewCfgRuleDname_Type()
)
gslbNewCfgRuleDname.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewCfgRuleDname.setStatus("current")
_GslbMetricTableMaxSize_Type = Integer32
_GslbMetricTableMaxSize_Object = MibScalar
gslbMetricTableMaxSize = _GslbMetricTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 4),
    _GslbMetricTableMaxSize_Type()
)
gslbMetricTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbMetricTableMaxSize.setStatus("current")
_GslbCurCfgMetricTable_Object = MibTable
gslbCurCfgMetricTable = _GslbCurCfgMetricTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 5)
)
if mibBuilder.loadTexts:
    gslbCurCfgMetricTable.setStatus("current")
_GslbCurCfgMetricTableEntry_Object = MibTableRow
gslbCurCfgMetricTableEntry = _GslbCurCfgMetricTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 5, 1)
)
gslbCurCfgMetricTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbCurCfgRuleMetricIndx"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbCurCfgMetricIndx"),
)
if mibBuilder.loadTexts:
    gslbCurCfgMetricTableEntry.setStatus("current")
_GslbCurCfgRuleMetricIndx_Type = Integer32
_GslbCurCfgRuleMetricIndx_Object = MibTableColumn
gslbCurCfgRuleMetricIndx = _GslbCurCfgRuleMetricIndx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 5, 1, 1),
    _GslbCurCfgRuleMetricIndx_Type()
)
gslbCurCfgRuleMetricIndx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgRuleMetricIndx.setStatus("current")
_GslbCurCfgMetricIndx_Type = Integer32
_GslbCurCfgMetricIndx_Object = MibTableColumn
gslbCurCfgMetricIndx = _GslbCurCfgMetricIndx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 5, 1, 2),
    _GslbCurCfgMetricIndx_Type()
)
gslbCurCfgMetricIndx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgMetricIndx.setStatus("current")


class _GslbCurCfgMetricMetric_Type(Integer32):
    """Custom type gslbCurCfgMetricMetric based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("always", 12),
          ("availability", 7),
          ("geographical", 4),
          ("hash", 10),
          ("leastconns", 1),
          ("local", 11),
          ("minmisses", 9),
          ("network", 5),
          ("none", 14),
          ("persistence", 15),
          ("qos", 8),
          ("random", 6),
          ("remote", 13),
          ("response", 3),
          ("roundrobin", 2))
    )


_GslbCurCfgMetricMetric_Type.__name__ = "Integer32"
_GslbCurCfgMetricMetric_Object = MibTableColumn
gslbCurCfgMetricMetric = _GslbCurCfgMetricMetric_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 5, 1, 3),
    _GslbCurCfgMetricMetric_Type()
)
gslbCurCfgMetricMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgMetricMetric.setStatus("current")
_GslbCurCfgMetricNetworkBmap_Type = OctetString
_GslbCurCfgMetricNetworkBmap_Object = MibTableColumn
gslbCurCfgMetricNetworkBmap = _GslbCurCfgMetricNetworkBmap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 5, 1, 4),
    _GslbCurCfgMetricNetworkBmap_Type()
)
gslbCurCfgMetricNetworkBmap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgMetricNetworkBmap.setStatus("current")
_GslbNewCfgMetricTable_Object = MibTable
gslbNewCfgMetricTable = _GslbNewCfgMetricTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 6)
)
if mibBuilder.loadTexts:
    gslbNewCfgMetricTable.setStatus("current")
_GslbNewCfgMetricTableEntry_Object = MibTableRow
gslbNewCfgMetricTableEntry = _GslbNewCfgMetricTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 6, 1)
)
gslbNewCfgMetricTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbNewCfgRuleMetricIndx"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbNewCfgMetricIndx"),
)
if mibBuilder.loadTexts:
    gslbNewCfgMetricTableEntry.setStatus("current")
_GslbNewCfgRuleMetricIndx_Type = Integer32
_GslbNewCfgRuleMetricIndx_Object = MibTableColumn
gslbNewCfgRuleMetricIndx = _GslbNewCfgRuleMetricIndx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 6, 1, 1),
    _GslbNewCfgRuleMetricIndx_Type()
)
gslbNewCfgRuleMetricIndx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbNewCfgRuleMetricIndx.setStatus("current")
_GslbNewCfgMetricIndx_Type = Integer32
_GslbNewCfgMetricIndx_Object = MibTableColumn
gslbNewCfgMetricIndx = _GslbNewCfgMetricIndx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 6, 1, 2),
    _GslbNewCfgMetricIndx_Type()
)
gslbNewCfgMetricIndx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbNewCfgMetricIndx.setStatus("current")


class _GslbNewCfgMetricMetric_Type(Integer32):
    """Custom type gslbNewCfgMetricMetric based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("always", 12),
          ("availability", 7),
          ("geographical", 4),
          ("hash", 10),
          ("leastconns", 1),
          ("local", 11),
          ("minmisses", 9),
          ("network", 5),
          ("none", 14),
          ("persistence", 15),
          ("qos", 8),
          ("random", 6),
          ("remote", 13),
          ("response", 3),
          ("roundrobin", 2))
    )


_GslbNewCfgMetricMetric_Type.__name__ = "Integer32"
_GslbNewCfgMetricMetric_Object = MibTableColumn
gslbNewCfgMetricMetric = _GslbNewCfgMetricMetric_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 6, 1, 3),
    _GslbNewCfgMetricMetric_Type()
)
gslbNewCfgMetricMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgMetricMetric.setStatus("current")
_GslbNewCfgMetricNetworkBmap_Type = OctetString
_GslbNewCfgMetricNetworkBmap_Object = MibTableColumn
gslbNewCfgMetricNetworkBmap = _GslbNewCfgMetricNetworkBmap_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 6, 1, 4),
    _GslbNewCfgMetricNetworkBmap_Type()
)
gslbNewCfgMetricNetworkBmap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbNewCfgMetricNetworkBmap.setStatus("current")
_GslbNewCfgMetricAddNetwork_Type = Integer32
_GslbNewCfgMetricAddNetwork_Object = MibTableColumn
gslbNewCfgMetricAddNetwork = _GslbNewCfgMetricAddNetwork_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 6, 1, 5),
    _GslbNewCfgMetricAddNetwork_Type()
)
gslbNewCfgMetricAddNetwork.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgMetricAddNetwork.setStatus("current")
_GslbNewCfgMetricRemNetwork_Type = Integer32
_GslbNewCfgMetricRemNetwork_Object = MibTableColumn
gslbNewCfgMetricRemNetwork = _GslbNewCfgMetricRemNetwork_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 5, 6, 1, 6),
    _GslbNewCfgMetricRemNetwork_Type()
)
gslbNewCfgMetricRemNetwork.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgMetricRemNetwork.setStatus("current")
_GslbDnsSecCfg_ObjectIdentity = ObjectIdentity
gslbDnsSecCfg = _GslbDnsSecCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6)
)
_GslbDnsSecGlobalCfg_ObjectIdentity = ObjectIdentity
gslbDnsSecGlobalCfg = _GslbDnsSecGlobalCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 1)
)


class _GslbCurCfgDnsSecGlobalEnabled_Type(Integer32):
    """Custom type gslbCurCfgDnsSecGlobalEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbCurCfgDnsSecGlobalEnabled_Type.__name__ = "Integer32"
_GslbCurCfgDnsSecGlobalEnabled_Object = MibScalar
gslbCurCfgDnsSecGlobalEnabled = _GslbCurCfgDnsSecGlobalEnabled_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 1, 1),
    _GslbCurCfgDnsSecGlobalEnabled_Type()
)
gslbCurCfgDnsSecGlobalEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgDnsSecGlobalEnabled.setStatus("current")


class _GslbNewCfgDnsSecGlobalEnabled_Type(Integer32):
    """Custom type gslbNewCfgDnsSecGlobalEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbNewCfgDnsSecGlobalEnabled_Type.__name__ = "Integer32"
_GslbNewCfgDnsSecGlobalEnabled_Object = MibScalar
gslbNewCfgDnsSecGlobalEnabled = _GslbNewCfgDnsSecGlobalEnabled_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 1, 2),
    _GslbNewCfgDnsSecGlobalEnabled_Type()
)
gslbNewCfgDnsSecGlobalEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgDnsSecGlobalEnabled.setStatus("current")


class _GslbCurCfgDnsSecGlobalRollTm_Type(Integer32):
    """Custom type gslbCurCfgDnsSecGlobalRollTm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 168),
    )


_GslbCurCfgDnsSecGlobalRollTm_Type.__name__ = "Integer32"
_GslbCurCfgDnsSecGlobalRollTm_Object = MibScalar
gslbCurCfgDnsSecGlobalRollTm = _GslbCurCfgDnsSecGlobalRollTm_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 1, 3),
    _GslbCurCfgDnsSecGlobalRollTm_Type()
)
gslbCurCfgDnsSecGlobalRollTm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgDnsSecGlobalRollTm.setStatus("current")


class _GslbNewCfgDnsSecGlobalRollTm_Type(Integer32):
    """Custom type gslbNewCfgDnsSecGlobalRollTm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 168),
    )


_GslbNewCfgDnsSecGlobalRollTm_Type.__name__ = "Integer32"
_GslbNewCfgDnsSecGlobalRollTm_Object = MibScalar
gslbNewCfgDnsSecGlobalRollTm = _GslbNewCfgDnsSecGlobalRollTm_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 1, 4),
    _GslbNewCfgDnsSecGlobalRollTm_Type()
)
gslbNewCfgDnsSecGlobalRollTm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgDnsSecGlobalRollTm.setStatus("current")


class _GslbCurCfgDnsSecGlobalType_Type(Integer32):
    """Custom type gslbCurCfgDnsSecGlobalType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("nsec", 1),
          ("nsec3", 2))
    )


_GslbCurCfgDnsSecGlobalType_Type.__name__ = "Integer32"
_GslbCurCfgDnsSecGlobalType_Object = MibScalar
gslbCurCfgDnsSecGlobalType = _GslbCurCfgDnsSecGlobalType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 1, 5),
    _GslbCurCfgDnsSecGlobalType_Type()
)
gslbCurCfgDnsSecGlobalType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgDnsSecGlobalType.setStatus("current")


class _GslbNewCfgDnsSecGlobalType_Type(Integer32):
    """Custom type gslbNewCfgDnsSecGlobalType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("nsec", 1),
          ("nsec3", 2))
    )


_GslbNewCfgDnsSecGlobalType_Type.__name__ = "Integer32"
_GslbNewCfgDnsSecGlobalType_Object = MibScalar
gslbNewCfgDnsSecGlobalType = _GslbNewCfgDnsSecGlobalType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 1, 6),
    _GslbNewCfgDnsSecGlobalType_Type()
)
gslbNewCfgDnsSecGlobalType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgDnsSecGlobalType.setStatus("current")


class _GslbCurCfgDnsSecGlobalKskRollTm_Type(Integer32):
    """Custom type gslbCurCfgDnsSecGlobalKskRollTm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 168),
    )


_GslbCurCfgDnsSecGlobalKskRollTm_Type.__name__ = "Integer32"
_GslbCurCfgDnsSecGlobalKskRollTm_Object = MibScalar
gslbCurCfgDnsSecGlobalKskRollTm = _GslbCurCfgDnsSecGlobalKskRollTm_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 1, 9),
    _GslbCurCfgDnsSecGlobalKskRollTm_Type()
)
gslbCurCfgDnsSecGlobalKskRollTm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgDnsSecGlobalKskRollTm.setStatus("current")


class _GslbNewCfgDnsSecGlobalKskRollTm_Type(Integer32):
    """Custom type gslbNewCfgDnsSecGlobalKskRollTm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 168),
    )


_GslbNewCfgDnsSecGlobalKskRollTm_Type.__name__ = "Integer32"
_GslbNewCfgDnsSecGlobalKskRollTm_Object = MibScalar
gslbNewCfgDnsSecGlobalKskRollTm = _GslbNewCfgDnsSecGlobalKskRollTm_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 1, 10),
    _GslbNewCfgDnsSecGlobalKskRollTm_Type()
)
gslbNewCfgDnsSecGlobalKskRollTm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgDnsSecGlobalKskRollTm.setStatus("current")


class _GslbCurCfgDnsSecGlobalNsec3SaltLen_Type(Integer32):
    """Custom type gslbCurCfgDnsSecGlobalNsec3SaltLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_GslbCurCfgDnsSecGlobalNsec3SaltLen_Type.__name__ = "Integer32"
_GslbCurCfgDnsSecGlobalNsec3SaltLen_Object = MibScalar
gslbCurCfgDnsSecGlobalNsec3SaltLen = _GslbCurCfgDnsSecGlobalNsec3SaltLen_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 1, 11),
    _GslbCurCfgDnsSecGlobalNsec3SaltLen_Type()
)
gslbCurCfgDnsSecGlobalNsec3SaltLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgDnsSecGlobalNsec3SaltLen.setStatus("current")


class _GslbNewCfgDnsSecGlobalNsec3SaltLen_Type(Integer32):
    """Custom type gslbNewCfgDnsSecGlobalNsec3SaltLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_GslbNewCfgDnsSecGlobalNsec3SaltLen_Type.__name__ = "Integer32"
_GslbNewCfgDnsSecGlobalNsec3SaltLen_Object = MibScalar
gslbNewCfgDnsSecGlobalNsec3SaltLen = _GslbNewCfgDnsSecGlobalNsec3SaltLen_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 1, 12),
    _GslbNewCfgDnsSecGlobalNsec3SaltLen_Type()
)
gslbNewCfgDnsSecGlobalNsec3SaltLen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgDnsSecGlobalNsec3SaltLen.setStatus("current")


class _GslbCurCfgDnsSecGlobalNsec3SaltLifetime_Type(Integer32):
    """Custom type gslbCurCfgDnsSecGlobalNsec3SaltLifetime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(86400, 2419200),
    )


_GslbCurCfgDnsSecGlobalNsec3SaltLifetime_Type.__name__ = "Integer32"
_GslbCurCfgDnsSecGlobalNsec3SaltLifetime_Object = MibScalar
gslbCurCfgDnsSecGlobalNsec3SaltLifetime = _GslbCurCfgDnsSecGlobalNsec3SaltLifetime_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 1, 13),
    _GslbCurCfgDnsSecGlobalNsec3SaltLifetime_Type()
)
gslbCurCfgDnsSecGlobalNsec3SaltLifetime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgDnsSecGlobalNsec3SaltLifetime.setStatus("current")


class _GslbNewCfgDnsSecGlobalNsec3SaltLifetime_Type(Integer32):
    """Custom type gslbNewCfgDnsSecGlobalNsec3SaltLifetime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(86400, 2419200),
    )


_GslbNewCfgDnsSecGlobalNsec3SaltLifetime_Type.__name__ = "Integer32"
_GslbNewCfgDnsSecGlobalNsec3SaltLifetime_Object = MibScalar
gslbNewCfgDnsSecGlobalNsec3SaltLifetime = _GslbNewCfgDnsSecGlobalNsec3SaltLifetime_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 1, 14),
    _GslbNewCfgDnsSecGlobalNsec3SaltLifetime_Type()
)
gslbNewCfgDnsSecGlobalNsec3SaltLifetime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgDnsSecGlobalNsec3SaltLifetime.setStatus("current")


class _GslbCurCfgDnsSecGlobalNsec3HashIterations_Type(Integer32):
    """Custom type gslbCurCfgDnsSecGlobalNsec3HashIterations based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 500),
    )


_GslbCurCfgDnsSecGlobalNsec3HashIterations_Type.__name__ = "Integer32"
_GslbCurCfgDnsSecGlobalNsec3HashIterations_Object = MibScalar
gslbCurCfgDnsSecGlobalNsec3HashIterations = _GslbCurCfgDnsSecGlobalNsec3HashIterations_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 1, 15),
    _GslbCurCfgDnsSecGlobalNsec3HashIterations_Type()
)
gslbCurCfgDnsSecGlobalNsec3HashIterations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgDnsSecGlobalNsec3HashIterations.setStatus("current")


class _GslbNewCfgDnsSecGlobalNsec3HashIterations_Type(Integer32):
    """Custom type gslbNewCfgDnsSecGlobalNsec3HashIterations based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 500),
    )


_GslbNewCfgDnsSecGlobalNsec3HashIterations_Type.__name__ = "Integer32"
_GslbNewCfgDnsSecGlobalNsec3HashIterations_Object = MibScalar
gslbNewCfgDnsSecGlobalNsec3HashIterations = _GslbNewCfgDnsSecGlobalNsec3HashIterations_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 1, 16),
    _GslbNewCfgDnsSecGlobalNsec3HashIterations_Type()
)
gslbNewCfgDnsSecGlobalNsec3HashIterations.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgDnsSecGlobalNsec3HashIterations.setStatus("current")


class _GslbCurCfgDnsSecGlobalSMPTServerUserName_Type(DisplayString):
    """Custom type gslbCurCfgDnsSecGlobalSMPTServerUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_GslbCurCfgDnsSecGlobalSMPTServerUserName_Type.__name__ = "DisplayString"
_GslbCurCfgDnsSecGlobalSMPTServerUserName_Object = MibScalar
gslbCurCfgDnsSecGlobalSMPTServerUserName = _GslbCurCfgDnsSecGlobalSMPTServerUserName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 1, 17),
    _GslbCurCfgDnsSecGlobalSMPTServerUserName_Type()
)
gslbCurCfgDnsSecGlobalSMPTServerUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurCfgDnsSecGlobalSMPTServerUserName.setStatus("current")


class _GslbNewCfgDnsSecGlobalSMPTServerUserName_Type(DisplayString):
    """Custom type gslbNewCfgDnsSecGlobalSMPTServerUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_GslbNewCfgDnsSecGlobalSMPTServerUserName_Type.__name__ = "DisplayString"
_GslbNewCfgDnsSecGlobalSMPTServerUserName_Object = MibScalar
gslbNewCfgDnsSecGlobalSMPTServerUserName = _GslbNewCfgDnsSecGlobalSMPTServerUserName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 1, 18),
    _GslbNewCfgDnsSecGlobalSMPTServerUserName_Type()
)
gslbNewCfgDnsSecGlobalSMPTServerUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewCfgDnsSecGlobalSMPTServerUserName.setStatus("current")
_GslbDnsSecKeyCfg_ObjectIdentity = ObjectIdentity
gslbDnsSecKeyCfg = _GslbDnsSecKeyCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2)
)
_GslbCurDnsSecKeyTable_Object = MibTable
gslbCurDnsSecKeyTable = _GslbCurDnsSecKeyTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 1)
)
if mibBuilder.loadTexts:
    gslbCurDnsSecKeyTable.setStatus("current")
_GslbCurDnsSecKeyEntry_Object = MibTableRow
gslbCurDnsSecKeyEntry = _GslbCurDnsSecKeyEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 1, 1)
)
gslbCurDnsSecKeyEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbCurDnsSecKeyID"),
)
if mibBuilder.loadTexts:
    gslbCurDnsSecKeyEntry.setStatus("current")


class _GslbCurDnsSecKeyID_Type(DisplayString):
    """Custom type gslbCurDnsSecKeyID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbCurDnsSecKeyID_Type.__name__ = "DisplayString"
_GslbCurDnsSecKeyID_Object = MibTableColumn
gslbCurDnsSecKeyID = _GslbCurDnsSecKeyID_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 1, 1, 1),
    _GslbCurDnsSecKeyID_Type()
)
gslbCurDnsSecKeyID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecKeyID.setStatus("current")


class _GslbCurDnsSecKeyUseCount_Type(Integer32):
    """Custom type gslbCurDnsSecKeyUseCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_GslbCurDnsSecKeyUseCount_Type.__name__ = "Integer32"
_GslbCurDnsSecKeyUseCount_Object = MibTableColumn
gslbCurDnsSecKeyUseCount = _GslbCurDnsSecKeyUseCount_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 1, 1, 2),
    _GslbCurDnsSecKeyUseCount_Type()
)
gslbCurDnsSecKeyUseCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecKeyUseCount.setStatus("current")


class _GslbCurDnsSecKeyType_Type(Integer32):
    """Custom type gslbCurDnsSecKeyType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("keyTypeInvalid", 3),
          ("keyTypeKSK", 1),
          ("keyTypeZSK", 2))
    )


_GslbCurDnsSecKeyType_Type.__name__ = "Integer32"
_GslbCurDnsSecKeyType_Object = MibTableColumn
gslbCurDnsSecKeyType = _GslbCurDnsSecKeyType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 1, 1, 3),
    _GslbCurDnsSecKeyType_Type()
)
gslbCurDnsSecKeyType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecKeyType.setStatus("current")


class _GslbCurDnsSecKeyStatus_Type(Integer32):
    """Custom type gslbCurDnsSecKeyStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_GslbCurDnsSecKeyStatus_Type.__name__ = "Integer32"
_GslbCurDnsSecKeyStatus_Object = MibTableColumn
gslbCurDnsSecKeyStatus = _GslbCurDnsSecKeyStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 1, 1, 4),
    _GslbCurDnsSecKeyStatus_Type()
)
gslbCurDnsSecKeyStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecKeyStatus.setStatus("current")


class _GslbCurDnsSecKeySize_Type(Integer32):
    """Custom type gslbCurDnsSecKeySize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("keySize1024", 1),
          ("keySize2048", 2),
          ("keySize4096", 3),
          ("keySizeInvalid", 4))
    )


_GslbCurDnsSecKeySize_Type.__name__ = "Integer32"
_GslbCurDnsSecKeySize_Object = MibTableColumn
gslbCurDnsSecKeySize = _GslbCurDnsSecKeySize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 1, 1, 5),
    _GslbCurDnsSecKeySize_Type()
)
gslbCurDnsSecKeySize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecKeySize.setStatus("current")


class _GslbCurDnsSecKeyAlgo_Type(Integer32):
    """Custom type gslbCurDnsSecKeyAlgo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("keyAlgoRsaSha1", 1),
          ("keyAlgoRsaSha256", 2),
          ("keyAlgoRsaSha512", 3))
    )


_GslbCurDnsSecKeyAlgo_Type.__name__ = "Integer32"
_GslbCurDnsSecKeyAlgo_Object = MibTableColumn
gslbCurDnsSecKeyAlgo = _GslbCurDnsSecKeyAlgo_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 1, 1, 6),
    _GslbCurDnsSecKeyAlgo_Type()
)
gslbCurDnsSecKeyAlgo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecKeyAlgo.setStatus("current")


class _GslbCurDnsSecKeyTTL_Type(Integer32):
    """Custom type gslbCurDnsSecKeyTTL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
    )


_GslbCurDnsSecKeyTTL_Type.__name__ = "Integer32"
_GslbCurDnsSecKeyTTL_Object = MibTableColumn
gslbCurDnsSecKeyTTL = _GslbCurDnsSecKeyTTL_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 1, 1, 7),
    _GslbCurDnsSecKeyTTL_Type()
)
gslbCurDnsSecKeyTTL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecKeyTTL.setStatus("current")


class _GslbCurDnsSecKeyExpPeriod_Type(Unsigned32):
    """Custom type gslbCurDnsSecKeyExpPeriod based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_GslbCurDnsSecKeyExpPeriod_Type.__name__ = "Unsigned32"
_GslbCurDnsSecKeyExpPeriod_Object = MibTableColumn
gslbCurDnsSecKeyExpPeriod = _GslbCurDnsSecKeyExpPeriod_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 1, 1, 8),
    _GslbCurDnsSecKeyExpPeriod_Type()
)
gslbCurDnsSecKeyExpPeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecKeyExpPeriod.setStatus("current")


class _GslbCurDnsSecKeyRollOverPeriod_Type(Unsigned32):
    """Custom type gslbCurDnsSecKeyRollOverPeriod based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_GslbCurDnsSecKeyRollOverPeriod_Type.__name__ = "Unsigned32"
_GslbCurDnsSecKeyRollOverPeriod_Object = MibTableColumn
gslbCurDnsSecKeyRollOverPeriod = _GslbCurDnsSecKeyRollOverPeriod_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 1, 1, 9),
    _GslbCurDnsSecKeyRollOverPeriod_Type()
)
gslbCurDnsSecKeyRollOverPeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecKeyRollOverPeriod.setStatus("current")


class _GslbCurDnsSecKeyValidityPeriod_Type(Unsigned32):
    """Custom type gslbCurDnsSecKeyValidityPeriod based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_GslbCurDnsSecKeyValidityPeriod_Type.__name__ = "Unsigned32"
_GslbCurDnsSecKeyValidityPeriod_Object = MibTableColumn
gslbCurDnsSecKeyValidityPeriod = _GslbCurDnsSecKeyValidityPeriod_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 1, 1, 10),
    _GslbCurDnsSecKeyValidityPeriod_Type()
)
gslbCurDnsSecKeyValidityPeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecKeyValidityPeriod.setStatus("current")


class _GslbCurDnsSecKeyPublicationPeriod_Type(Unsigned32):
    """Custom type gslbCurDnsSecKeyPublicationPeriod based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_GslbCurDnsSecKeyPublicationPeriod_Type.__name__ = "Unsigned32"
_GslbCurDnsSecKeyPublicationPeriod_Object = MibTableColumn
gslbCurDnsSecKeyPublicationPeriod = _GslbCurDnsSecKeyPublicationPeriod_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 1, 1, 11),
    _GslbCurDnsSecKeyPublicationPeriod_Type()
)
gslbCurDnsSecKeyPublicationPeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecKeyPublicationPeriod.setStatus("current")
_GslbNewDnsSecKeyTable_Object = MibTable
gslbNewDnsSecKeyTable = _GslbNewDnsSecKeyTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 2)
)
if mibBuilder.loadTexts:
    gslbNewDnsSecKeyTable.setStatus("current")
_GslbNewDnsSecKeyEntry_Object = MibTableRow
gslbNewDnsSecKeyEntry = _GslbNewDnsSecKeyEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 2, 1)
)
gslbNewDnsSecKeyEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbNewDnsSecKeyID"),
)
if mibBuilder.loadTexts:
    gslbNewDnsSecKeyEntry.setStatus("current")


class _GslbNewDnsSecKeyID_Type(DisplayString):
    """Custom type gslbNewDnsSecKeyID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbNewDnsSecKeyID_Type.__name__ = "DisplayString"
_GslbNewDnsSecKeyID_Object = MibTableColumn
gslbNewDnsSecKeyID = _GslbNewDnsSecKeyID_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 2, 1, 1),
    _GslbNewDnsSecKeyID_Type()
)
gslbNewDnsSecKeyID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewDnsSecKeyID.setStatus("current")


class _GslbNewDnsSecKeyUseCount_Type(Integer32):
    """Custom type gslbNewDnsSecKeyUseCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_GslbNewDnsSecKeyUseCount_Type.__name__ = "Integer32"
_GslbNewDnsSecKeyUseCount_Object = MibTableColumn
gslbNewDnsSecKeyUseCount = _GslbNewDnsSecKeyUseCount_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 2, 1, 2),
    _GslbNewDnsSecKeyUseCount_Type()
)
gslbNewDnsSecKeyUseCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbNewDnsSecKeyUseCount.setStatus("current")


class _GslbNewDnsSecKeyType_Type(Integer32):
    """Custom type gslbNewDnsSecKeyType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("keyTypeInvalid", 3),
          ("keyTypeKSK", 1),
          ("keyTypeZSK", 2))
    )


_GslbNewDnsSecKeyType_Type.__name__ = "Integer32"
_GslbNewDnsSecKeyType_Object = MibTableColumn
gslbNewDnsSecKeyType = _GslbNewDnsSecKeyType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 2, 1, 3),
    _GslbNewDnsSecKeyType_Type()
)
gslbNewDnsSecKeyType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewDnsSecKeyType.setStatus("current")


class _GslbNewDnsSecKeyStatus_Type(Integer32):
    """Custom type gslbNewDnsSecKeyStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_GslbNewDnsSecKeyStatus_Type.__name__ = "Integer32"
_GslbNewDnsSecKeyStatus_Object = MibTableColumn
gslbNewDnsSecKeyStatus = _GslbNewDnsSecKeyStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 2, 1, 4),
    _GslbNewDnsSecKeyStatus_Type()
)
gslbNewDnsSecKeyStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsSecKeyStatus.setStatus("current")


class _GslbNewDnsSecKeySize_Type(Integer32):
    """Custom type gslbNewDnsSecKeySize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("keySize1024", 1),
          ("keySize2048", 2),
          ("keySize4096", 3),
          ("keySizeInvalid", 4))
    )


_GslbNewDnsSecKeySize_Type.__name__ = "Integer32"
_GslbNewDnsSecKeySize_Object = MibTableColumn
gslbNewDnsSecKeySize = _GslbNewDnsSecKeySize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 2, 1, 5),
    _GslbNewDnsSecKeySize_Type()
)
gslbNewDnsSecKeySize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewDnsSecKeySize.setStatus("current")


class _GslbNewDnsSecKeyAlgo_Type(Integer32):
    """Custom type gslbNewDnsSecKeyAlgo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("keyAlgoRsaSha1", 1),
          ("keyAlgoRsaSha256", 2),
          ("keyAlgoRsaSha512", 3))
    )


_GslbNewDnsSecKeyAlgo_Type.__name__ = "Integer32"
_GslbNewDnsSecKeyAlgo_Object = MibTableColumn
gslbNewDnsSecKeyAlgo = _GslbNewDnsSecKeyAlgo_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 2, 1, 6),
    _GslbNewDnsSecKeyAlgo_Type()
)
gslbNewDnsSecKeyAlgo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewDnsSecKeyAlgo.setStatus("current")


class _GslbNewDnsSecKeyTTL_Type(Integer32):
    """Custom type gslbNewDnsSecKeyTTL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
    )


_GslbNewDnsSecKeyTTL_Type.__name__ = "Integer32"
_GslbNewDnsSecKeyTTL_Object = MibTableColumn
gslbNewDnsSecKeyTTL = _GslbNewDnsSecKeyTTL_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 2, 1, 7),
    _GslbNewDnsSecKeyTTL_Type()
)
gslbNewDnsSecKeyTTL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsSecKeyTTL.setStatus("current")


class _GslbNewDnsSecKeyExpPeriod_Type(Unsigned32):
    """Custom type gslbNewDnsSecKeyExpPeriod based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_GslbNewDnsSecKeyExpPeriod_Type.__name__ = "Unsigned32"
_GslbNewDnsSecKeyExpPeriod_Object = MibTableColumn
gslbNewDnsSecKeyExpPeriod = _GslbNewDnsSecKeyExpPeriod_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 2, 1, 8),
    _GslbNewDnsSecKeyExpPeriod_Type()
)
gslbNewDnsSecKeyExpPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsSecKeyExpPeriod.setStatus("current")


class _GslbNewDnsSecKeyRollOverPeriod_Type(Unsigned32):
    """Custom type gslbNewDnsSecKeyRollOverPeriod based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_GslbNewDnsSecKeyRollOverPeriod_Type.__name__ = "Unsigned32"
_GslbNewDnsSecKeyRollOverPeriod_Object = MibTableColumn
gslbNewDnsSecKeyRollOverPeriod = _GslbNewDnsSecKeyRollOverPeriod_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 2, 1, 9),
    _GslbNewDnsSecKeyRollOverPeriod_Type()
)
gslbNewDnsSecKeyRollOverPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsSecKeyRollOverPeriod.setStatus("current")


class _GslbNewDnsSecKeyValidityPeriod_Type(Unsigned32):
    """Custom type gslbNewDnsSecKeyValidityPeriod based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_GslbNewDnsSecKeyValidityPeriod_Type.__name__ = "Unsigned32"
_GslbNewDnsSecKeyValidityPeriod_Object = MibTableColumn
gslbNewDnsSecKeyValidityPeriod = _GslbNewDnsSecKeyValidityPeriod_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 2, 1, 10),
    _GslbNewDnsSecKeyValidityPeriod_Type()
)
gslbNewDnsSecKeyValidityPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsSecKeyValidityPeriod.setStatus("current")


class _GslbNewDnsSecKeyPublicationPeriod_Type(Unsigned32):
    """Custom type gslbNewDnsSecKeyPublicationPeriod based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_GslbNewDnsSecKeyPublicationPeriod_Type.__name__ = "Unsigned32"
_GslbNewDnsSecKeyPublicationPeriod_Object = MibTableColumn
gslbNewDnsSecKeyPublicationPeriod = _GslbNewDnsSecKeyPublicationPeriod_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 2, 1, 11),
    _GslbNewDnsSecKeyPublicationPeriod_Type()
)
gslbNewDnsSecKeyPublicationPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsSecKeyPublicationPeriod.setStatus("current")


class _GslbNewDnsSecKeyDelete_Type(Integer32):
    """Custom type gslbNewDnsSecKeyDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_GslbNewDnsSecKeyDelete_Type.__name__ = "Integer32"
_GslbNewDnsSecKeyDelete_Object = MibTableColumn
gslbNewDnsSecKeyDelete = _GslbNewDnsSecKeyDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 2, 1, 13),
    _GslbNewDnsSecKeyDelete_Type()
)
gslbNewDnsSecKeyDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewDnsSecKeyDelete.setStatus("current")


class _GslbNewDnsSecKeyGenerate_Type(Integer32):
    """Custom type gslbNewDnsSecKeyGenerate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("generate", 2),
          ("other", 1))
    )


_GslbNewDnsSecKeyGenerate_Type.__name__ = "Integer32"
_GslbNewDnsSecKeyGenerate_Object = MibTableColumn
gslbNewDnsSecKeyGenerate = _GslbNewDnsSecKeyGenerate_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 2, 1, 14),
    _GslbNewDnsSecKeyGenerate_Type()
)
gslbNewDnsSecKeyGenerate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewDnsSecKeyGenerate.setStatus("current")


class _GslbNewDnsSecKeyGenerateStatus_Type(Integer32):
    """Custom type gslbNewDnsSecKeyGenerateStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("generated", 2),
          ("inProgress", 3),
          ("notGenerated", 1))
    )


_GslbNewDnsSecKeyGenerateStatus_Type.__name__ = "Integer32"
_GslbNewDnsSecKeyGenerateStatus_Object = MibTableColumn
gslbNewDnsSecKeyGenerateStatus = _GslbNewDnsSecKeyGenerateStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 2, 2, 1, 15),
    _GslbNewDnsSecKeyGenerateStatus_Type()
)
gslbNewDnsSecKeyGenerateStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbNewDnsSecKeyGenerateStatus.setStatus("current")
_GslbDnsSecZoneCfg_ObjectIdentity = ObjectIdentity
gslbDnsSecZoneCfg = _GslbDnsSecZoneCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3)
)
_GslbCurDnsSecZoneTable_Object = MibTable
gslbCurDnsSecZoneTable = _GslbCurDnsSecZoneTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 1)
)
if mibBuilder.loadTexts:
    gslbCurDnsSecZoneTable.setStatus("current")
_GslbCurDnsSecZoneEntry_Object = MibTableRow
gslbCurDnsSecZoneEntry = _GslbCurDnsSecZoneEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 1, 1)
)
gslbCurDnsSecZoneEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbCurDnsSecZoneID"),
)
if mibBuilder.loadTexts:
    gslbCurDnsSecZoneEntry.setStatus("current")


class _GslbCurDnsSecZoneID_Type(DisplayString):
    """Custom type gslbCurDnsSecZoneID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbCurDnsSecZoneID_Type.__name__ = "DisplayString"
_GslbCurDnsSecZoneID_Object = MibTableColumn
gslbCurDnsSecZoneID = _GslbCurDnsSecZoneID_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 1, 1, 1),
    _GslbCurDnsSecZoneID_Type()
)
gslbCurDnsSecZoneID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecZoneID.setStatus("current")


class _GslbCurDnsSecZoneName_Type(DisplayString):
    """Custom type gslbCurDnsSecZoneName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 65),
    )


_GslbCurDnsSecZoneName_Type.__name__ = "DisplayString"
_GslbCurDnsSecZoneName_Object = MibTableColumn
gslbCurDnsSecZoneName = _GslbCurDnsSecZoneName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 1, 1, 2),
    _GslbCurDnsSecZoneName_Type()
)
gslbCurDnsSecZoneName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecZoneName.setStatus("current")


class _GslbCurDnsSecZoneKSK1_Type(DisplayString):
    """Custom type gslbCurDnsSecZoneKSK1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbCurDnsSecZoneKSK1_Type.__name__ = "DisplayString"
_GslbCurDnsSecZoneKSK1_Object = MibTableColumn
gslbCurDnsSecZoneKSK1 = _GslbCurDnsSecZoneKSK1_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 1, 1, 3),
    _GslbCurDnsSecZoneKSK1_Type()
)
gslbCurDnsSecZoneKSK1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecZoneKSK1.setStatus("current")


class _GslbCurDnsSecZoneKSK2_Type(DisplayString):
    """Custom type gslbCurDnsSecZoneKSK2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbCurDnsSecZoneKSK2_Type.__name__ = "DisplayString"
_GslbCurDnsSecZoneKSK2_Object = MibTableColumn
gslbCurDnsSecZoneKSK2 = _GslbCurDnsSecZoneKSK2_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 1, 1, 4),
    _GslbCurDnsSecZoneKSK2_Type()
)
gslbCurDnsSecZoneKSK2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecZoneKSK2.setStatus("current")


class _GslbCurDnsSecZoneKSK3_Type(DisplayString):
    """Custom type gslbCurDnsSecZoneKSK3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbCurDnsSecZoneKSK3_Type.__name__ = "DisplayString"
_GslbCurDnsSecZoneKSK3_Object = MibTableColumn
gslbCurDnsSecZoneKSK3 = _GslbCurDnsSecZoneKSK3_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 1, 1, 5),
    _GslbCurDnsSecZoneKSK3_Type()
)
gslbCurDnsSecZoneKSK3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecZoneKSK3.setStatus("current")


class _GslbCurDnsSecZoneZSK1_Type(DisplayString):
    """Custom type gslbCurDnsSecZoneZSK1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbCurDnsSecZoneZSK1_Type.__name__ = "DisplayString"
_GslbCurDnsSecZoneZSK1_Object = MibTableColumn
gslbCurDnsSecZoneZSK1 = _GslbCurDnsSecZoneZSK1_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 1, 1, 6),
    _GslbCurDnsSecZoneZSK1_Type()
)
gslbCurDnsSecZoneZSK1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecZoneZSK1.setStatus("current")


class _GslbCurDnsSecZoneZSK2_Type(DisplayString):
    """Custom type gslbCurDnsSecZoneZSK2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbCurDnsSecZoneZSK2_Type.__name__ = "DisplayString"
_GslbCurDnsSecZoneZSK2_Object = MibTableColumn
gslbCurDnsSecZoneZSK2 = _GslbCurDnsSecZoneZSK2_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 1, 1, 7),
    _GslbCurDnsSecZoneZSK2_Type()
)
gslbCurDnsSecZoneZSK2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecZoneZSK2.setStatus("current")


class _GslbCurDnsSecZoneZSK3_Type(DisplayString):
    """Custom type gslbCurDnsSecZoneZSK3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbCurDnsSecZoneZSK3_Type.__name__ = "DisplayString"
_GslbCurDnsSecZoneZSK3_Object = MibTableColumn
gslbCurDnsSecZoneZSK3 = _GslbCurDnsSecZoneZSK3_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 1, 1, 8),
    _GslbCurDnsSecZoneZSK3_Type()
)
gslbCurDnsSecZoneZSK3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecZoneZSK3.setStatus("current")


class _GslbCurDnsSecZoneStatus_Type(Integer32):
    """Custom type gslbCurDnsSecZoneStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_GslbCurDnsSecZoneStatus_Type.__name__ = "Integer32"
_GslbCurDnsSecZoneStatus_Object = MibTableColumn
gslbCurDnsSecZoneStatus = _GslbCurDnsSecZoneStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 1, 1, 9),
    _GslbCurDnsSecZoneStatus_Type()
)
gslbCurDnsSecZoneStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecZoneStatus.setStatus("current")


class _GslbCurDnsSecZoneParentIPVer_Type(Integer32):
    """Custom type gslbCurDnsSecZoneParentIPVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_GslbCurDnsSecZoneParentIPVer_Type.__name__ = "Integer32"
_GslbCurDnsSecZoneParentIPVer_Object = MibTableColumn
gslbCurDnsSecZoneParentIPVer = _GslbCurDnsSecZoneParentIPVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 1, 1, 10),
    _GslbCurDnsSecZoneParentIPVer_Type()
)
gslbCurDnsSecZoneParentIPVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecZoneParentIPVer.setStatus("current")
_GslbCurDnsSecZoneParentIPv4_Type = IpAddress
_GslbCurDnsSecZoneParentIPv4_Object = MibTableColumn
gslbCurDnsSecZoneParentIPv4 = _GslbCurDnsSecZoneParentIPv4_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 1, 1, 11),
    _GslbCurDnsSecZoneParentIPv4_Type()
)
gslbCurDnsSecZoneParentIPv4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecZoneParentIPv4.setStatus("current")


class _GslbCurDnsSecZoneParentIPv6_Type(DisplayString):
    """Custom type gslbCurDnsSecZoneParentIPv6 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_GslbCurDnsSecZoneParentIPv6_Type.__name__ = "DisplayString"
_GslbCurDnsSecZoneParentIPv6_Object = MibTableColumn
gslbCurDnsSecZoneParentIPv6 = _GslbCurDnsSecZoneParentIPv6_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 1, 1, 12),
    _GslbCurDnsSecZoneParentIPv6_Type()
)
gslbCurDnsSecZoneParentIPv6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsSecZoneParentIPv6.setStatus("current")
_GslbNewDnsSecZoneTable_Object = MibTable
gslbNewDnsSecZoneTable = _GslbNewDnsSecZoneTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 2)
)
if mibBuilder.loadTexts:
    gslbNewDnsSecZoneTable.setStatus("current")
_GslbNewDnsSecZoneEntry_Object = MibTableRow
gslbNewDnsSecZoneEntry = _GslbNewDnsSecZoneEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 2, 1)
)
gslbNewDnsSecZoneEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbNewDnsSecZoneID"),
)
if mibBuilder.loadTexts:
    gslbNewDnsSecZoneEntry.setStatus("current")


class _GslbNewDnsSecZoneID_Type(DisplayString):
    """Custom type gslbNewDnsSecZoneID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbNewDnsSecZoneID_Type.__name__ = "DisplayString"
_GslbNewDnsSecZoneID_Object = MibTableColumn
gslbNewDnsSecZoneID = _GslbNewDnsSecZoneID_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 2, 1, 1),
    _GslbNewDnsSecZoneID_Type()
)
gslbNewDnsSecZoneID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewDnsSecZoneID.setStatus("current")


class _GslbNewDnsSecZoneName_Type(DisplayString):
    """Custom type gslbNewDnsSecZoneName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 65),
    )


_GslbNewDnsSecZoneName_Type.__name__ = "DisplayString"
_GslbNewDnsSecZoneName_Object = MibTableColumn
gslbNewDnsSecZoneName = _GslbNewDnsSecZoneName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 2, 1, 2),
    _GslbNewDnsSecZoneName_Type()
)
gslbNewDnsSecZoneName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsSecZoneName.setStatus("current")


class _GslbNewDnsSecZoneKSK1_Type(DisplayString):
    """Custom type gslbNewDnsSecZoneKSK1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbNewDnsSecZoneKSK1_Type.__name__ = "DisplayString"
_GslbNewDnsSecZoneKSK1_Object = MibTableColumn
gslbNewDnsSecZoneKSK1 = _GslbNewDnsSecZoneKSK1_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 2, 1, 3),
    _GslbNewDnsSecZoneKSK1_Type()
)
gslbNewDnsSecZoneKSK1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsSecZoneKSK1.setStatus("current")


class _GslbNewDnsSecZoneKSK2_Type(DisplayString):
    """Custom type gslbNewDnsSecZoneKSK2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbNewDnsSecZoneKSK2_Type.__name__ = "DisplayString"
_GslbNewDnsSecZoneKSK2_Object = MibTableColumn
gslbNewDnsSecZoneKSK2 = _GslbNewDnsSecZoneKSK2_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 2, 1, 4),
    _GslbNewDnsSecZoneKSK2_Type()
)
gslbNewDnsSecZoneKSK2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsSecZoneKSK2.setStatus("current")


class _GslbNewDnsSecZoneKSK3_Type(DisplayString):
    """Custom type gslbNewDnsSecZoneKSK3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbNewDnsSecZoneKSK3_Type.__name__ = "DisplayString"
_GslbNewDnsSecZoneKSK3_Object = MibTableColumn
gslbNewDnsSecZoneKSK3 = _GslbNewDnsSecZoneKSK3_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 2, 1, 5),
    _GslbNewDnsSecZoneKSK3_Type()
)
gslbNewDnsSecZoneKSK3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsSecZoneKSK3.setStatus("current")


class _GslbNewDnsSecZoneZSK1_Type(DisplayString):
    """Custom type gslbNewDnsSecZoneZSK1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbNewDnsSecZoneZSK1_Type.__name__ = "DisplayString"
_GslbNewDnsSecZoneZSK1_Object = MibTableColumn
gslbNewDnsSecZoneZSK1 = _GslbNewDnsSecZoneZSK1_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 2, 1, 6),
    _GslbNewDnsSecZoneZSK1_Type()
)
gslbNewDnsSecZoneZSK1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsSecZoneZSK1.setStatus("current")


class _GslbNewDnsSecZoneZSK2_Type(DisplayString):
    """Custom type gslbNewDnsSecZoneZSK2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbNewDnsSecZoneZSK2_Type.__name__ = "DisplayString"
_GslbNewDnsSecZoneZSK2_Object = MibTableColumn
gslbNewDnsSecZoneZSK2 = _GslbNewDnsSecZoneZSK2_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 2, 1, 7),
    _GslbNewDnsSecZoneZSK2_Type()
)
gslbNewDnsSecZoneZSK2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsSecZoneZSK2.setStatus("current")


class _GslbNewDnsSecZoneZSK3_Type(DisplayString):
    """Custom type gslbNewDnsSecZoneZSK3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbNewDnsSecZoneZSK3_Type.__name__ = "DisplayString"
_GslbNewDnsSecZoneZSK3_Object = MibTableColumn
gslbNewDnsSecZoneZSK3 = _GslbNewDnsSecZoneZSK3_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 2, 1, 8),
    _GslbNewDnsSecZoneZSK3_Type()
)
gslbNewDnsSecZoneZSK3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsSecZoneZSK3.setStatus("current")


class _GslbNewDnsSecZoneStatus_Type(Integer32):
    """Custom type gslbNewDnsSecZoneStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_GslbNewDnsSecZoneStatus_Type.__name__ = "Integer32"
_GslbNewDnsSecZoneStatus_Object = MibTableColumn
gslbNewDnsSecZoneStatus = _GslbNewDnsSecZoneStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 2, 1, 9),
    _GslbNewDnsSecZoneStatus_Type()
)
gslbNewDnsSecZoneStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsSecZoneStatus.setStatus("current")


class _GslbNewDnsSecZoneParentIPVer_Type(Integer32):
    """Custom type gslbNewDnsSecZoneParentIPVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_GslbNewDnsSecZoneParentIPVer_Type.__name__ = "Integer32"
_GslbNewDnsSecZoneParentIPVer_Object = MibTableColumn
gslbNewDnsSecZoneParentIPVer = _GslbNewDnsSecZoneParentIPVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 2, 1, 10),
    _GslbNewDnsSecZoneParentIPVer_Type()
)
gslbNewDnsSecZoneParentIPVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbNewDnsSecZoneParentIPVer.setStatus("current")
_GslbNewDnsSecZoneParentIPv4_Type = IpAddress
_GslbNewDnsSecZoneParentIPv4_Object = MibTableColumn
gslbNewDnsSecZoneParentIPv4 = _GslbNewDnsSecZoneParentIPv4_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 2, 1, 11),
    _GslbNewDnsSecZoneParentIPv4_Type()
)
gslbNewDnsSecZoneParentIPv4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsSecZoneParentIPv4.setStatus("current")


class _GslbNewDnsSecZoneParentIPv6_Type(DisplayString):
    """Custom type gslbNewDnsSecZoneParentIPv6 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_GslbNewDnsSecZoneParentIPv6_Type.__name__ = "DisplayString"
_GslbNewDnsSecZoneParentIPv6_Object = MibTableColumn
gslbNewDnsSecZoneParentIPv6 = _GslbNewDnsSecZoneParentIPv6_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 2, 1, 12),
    _GslbNewDnsSecZoneParentIPv6_Type()
)
gslbNewDnsSecZoneParentIPv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsSecZoneParentIPv6.setStatus("current")


class _GslbNewDnsSecZoneDelete_Type(Integer32):
    """Custom type gslbNewDnsSecZoneDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_GslbNewDnsSecZoneDelete_Type.__name__ = "Integer32"
_GslbNewDnsSecZoneDelete_Object = MibTableColumn
gslbNewDnsSecZoneDelete = _GslbNewDnsSecZoneDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 3, 2, 1, 13),
    _GslbNewDnsSecZoneDelete_Type()
)
gslbNewDnsSecZoneDelete.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsSecZoneDelete.setStatus("current")
_GslbDnsSecImportExport_ObjectIdentity = ObjectIdentity
gslbDnsSecImportExport = _GslbDnsSecImportExport_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 4)
)


class _GslbDnsSecImportExportSCPHostName_Type(DisplayString):
    """Custom type gslbDnsSecImportExportSCPHostName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_GslbDnsSecImportExportSCPHostName_Type.__name__ = "DisplayString"
_GslbDnsSecImportExportSCPHostName_Object = MibScalar
gslbDnsSecImportExportSCPHostName = _GslbDnsSecImportExportSCPHostName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 4, 1),
    _GslbDnsSecImportExportSCPHostName_Type()
)
gslbDnsSecImportExportSCPHostName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbDnsSecImportExportSCPHostName.setStatus("current")


class _GslbDnsSecImportExportSCPFileName_Type(DisplayString):
    """Custom type gslbDnsSecImportExportSCPFileName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_GslbDnsSecImportExportSCPFileName_Type.__name__ = "DisplayString"
_GslbDnsSecImportExportSCPFileName_Object = MibScalar
gslbDnsSecImportExportSCPFileName = _GslbDnsSecImportExportSCPFileName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 4, 2),
    _GslbDnsSecImportExportSCPFileName_Type()
)
gslbDnsSecImportExportSCPFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbDnsSecImportExportSCPFileName.setStatus("current")


class _GslbDnsSecImportExportSCPUserName_Type(DisplayString):
    """Custom type gslbDnsSecImportExportSCPUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_GslbDnsSecImportExportSCPUserName_Type.__name__ = "DisplayString"
_GslbDnsSecImportExportSCPUserName_Object = MibScalar
gslbDnsSecImportExportSCPUserName = _GslbDnsSecImportExportSCPUserName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 4, 3),
    _GslbDnsSecImportExportSCPUserName_Type()
)
gslbDnsSecImportExportSCPUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbDnsSecImportExportSCPUserName.setStatus("current")


class _GslbDnsSecImportExportSCPPassword_Type(DisplayString):
    """Custom type gslbDnsSecImportExportSCPPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_GslbDnsSecImportExportSCPPassword_Type.__name__ = "DisplayString"
_GslbDnsSecImportExportSCPPassword_Object = MibScalar
gslbDnsSecImportExportSCPPassword = _GslbDnsSecImportExportSCPPassword_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 4, 4),
    _GslbDnsSecImportExportSCPPassword_Type()
)
gslbDnsSecImportExportSCPPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbDnsSecImportExportSCPPassword.setStatus("current")


class _GslbDnsSecImportExportKeyID_Type(DisplayString):
    """Custom type gslbDnsSecImportExportKeyID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbDnsSecImportExportKeyID_Type.__name__ = "DisplayString"
_GslbDnsSecImportExportKeyID_Object = MibScalar
gslbDnsSecImportExportKeyID = _GslbDnsSecImportExportKeyID_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 4, 5),
    _GslbDnsSecImportExportKeyID_Type()
)
gslbDnsSecImportExportKeyID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbDnsSecImportExportKeyID.setStatus("current")


class _GslbDnsSecImportExportZoneID_Type(DisplayString):
    """Custom type gslbDnsSecImportExportZoneID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbDnsSecImportExportZoneID_Type.__name__ = "DisplayString"
_GslbDnsSecImportExportZoneID_Object = MibScalar
gslbDnsSecImportExportZoneID = _GslbDnsSecImportExportZoneID_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 4, 6),
    _GslbDnsSecImportExportZoneID_Type()
)
gslbDnsSecImportExportZoneID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbDnsSecImportExportZoneID.setStatus("current")


class _GslbDnsSecImportExportPassphrase_Type(DisplayString):
    """Custom type gslbDnsSecImportExportPassphrase based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_GslbDnsSecImportExportPassphrase_Type.__name__ = "DisplayString"
_GslbDnsSecImportExportPassphrase_Object = MibScalar
gslbDnsSecImportExportPassphrase = _GslbDnsSecImportExportPassphrase_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 4, 7),
    _GslbDnsSecImportExportPassphrase_Type()
)
gslbDnsSecImportExportPassphrase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbDnsSecImportExportPassphrase.setStatus("current")


class _GslbDnsSecImportExportComponentType_Type(Integer32):
    """Custom type gslbDnsSecImportExportComponentType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("dnskey", 2),
          ("dsrecord", 3),
          ("key", 1),
          ("none", 0))
    )


_GslbDnsSecImportExportComponentType_Type.__name__ = "Integer32"
_GslbDnsSecImportExportComponentType_Object = MibScalar
gslbDnsSecImportExportComponentType = _GslbDnsSecImportExportComponentType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 4, 8),
    _GslbDnsSecImportExportComponentType_Type()
)
gslbDnsSecImportExportComponentType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbDnsSecImportExportComponentType.setStatus("current")


class _GslbDnsSecImportExportPortType_Type(Integer32):
    """Custom type gslbDnsSecImportExportPortType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("data", 0),
          ("mgmt", 1))
    )


_GslbDnsSecImportExportPortType_Type.__name__ = "Integer32"
_GslbDnsSecImportExportPortType_Object = MibScalar
gslbDnsSecImportExportPortType = _GslbDnsSecImportExportPortType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 4, 9),
    _GslbDnsSecImportExportPortType_Type()
)
gslbDnsSecImportExportPortType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbDnsSecImportExportPortType.setStatus("current")


class _GslbDnsSecImportExportImpKeyType_Type(Integer32):
    """Custom type gslbDnsSecImportExportImpKeyType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("keyTypeKSK", 1),
          ("keyTypeZSK", 2))
    )


_GslbDnsSecImportExportImpKeyType_Type.__name__ = "Integer32"
_GslbDnsSecImportExportImpKeyType_Object = MibScalar
gslbDnsSecImportExportImpKeyType = _GslbDnsSecImportExportImpKeyType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 4, 10),
    _GslbDnsSecImportExportImpKeyType_Type()
)
gslbDnsSecImportExportImpKeyType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbDnsSecImportExportImpKeyType.setStatus("current")


class _GslbDnsSecImportExportImpKeyStatus_Type(Integer32):
    """Custom type gslbDnsSecImportExportImpKeyStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_GslbDnsSecImportExportImpKeyStatus_Type.__name__ = "Integer32"
_GslbDnsSecImportExportImpKeyStatus_Object = MibScalar
gslbDnsSecImportExportImpKeyStatus = _GslbDnsSecImportExportImpKeyStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 4, 11),
    _GslbDnsSecImportExportImpKeyStatus_Type()
)
gslbDnsSecImportExportImpKeyStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbDnsSecImportExportImpKeyStatus.setStatus("current")


class _GslbDnsSecImportExportImpKeySize_Type(Integer32):
    """Custom type gslbDnsSecImportExportImpKeySize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("keySize1024", 1),
          ("keySize2048", 2),
          ("keySize4096", 3))
    )


_GslbDnsSecImportExportImpKeySize_Type.__name__ = "Integer32"
_GslbDnsSecImportExportImpKeySize_Object = MibScalar
gslbDnsSecImportExportImpKeySize = _GslbDnsSecImportExportImpKeySize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 4, 12),
    _GslbDnsSecImportExportImpKeySize_Type()
)
gslbDnsSecImportExportImpKeySize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbDnsSecImportExportImpKeySize.setStatus("current")


class _GslbDnsSecImportExportImpKeyAlgo_Type(Integer32):
    """Custom type gslbDnsSecImportExportImpKeyAlgo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("keyAlgoRsaSha1", 1),
          ("keyAlgoRsaSha256", 2),
          ("keyAlgoRsaSha512", 3))
    )


_GslbDnsSecImportExportImpKeyAlgo_Type.__name__ = "Integer32"
_GslbDnsSecImportExportImpKeyAlgo_Object = MibScalar
gslbDnsSecImportExportImpKeyAlgo = _GslbDnsSecImportExportImpKeyAlgo_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 4, 13),
    _GslbDnsSecImportExportImpKeyAlgo_Type()
)
gslbDnsSecImportExportImpKeyAlgo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbDnsSecImportExportImpKeyAlgo.setStatus("current")


class _GslbDnsSecImportExportImpKeyTTL_Type(Integer32):
    """Custom type gslbDnsSecImportExportImpKeyTTL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
    )


_GslbDnsSecImportExportImpKeyTTL_Type.__name__ = "Integer32"
_GslbDnsSecImportExportImpKeyTTL_Object = MibScalar
gslbDnsSecImportExportImpKeyTTL = _GslbDnsSecImportExportImpKeyTTL_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 4, 14),
    _GslbDnsSecImportExportImpKeyTTL_Type()
)
gslbDnsSecImportExportImpKeyTTL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbDnsSecImportExportImpKeyTTL.setStatus("current")


class _GslbDnsSecImportExportImpKeyExpPeriod_Type(Unsigned32):
    """Custom type gslbDnsSecImportExportImpKeyExpPeriod based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_GslbDnsSecImportExportImpKeyExpPeriod_Type.__name__ = "Unsigned32"
_GslbDnsSecImportExportImpKeyExpPeriod_Object = MibScalar
gslbDnsSecImportExportImpKeyExpPeriod = _GslbDnsSecImportExportImpKeyExpPeriod_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 4, 15),
    _GslbDnsSecImportExportImpKeyExpPeriod_Type()
)
gslbDnsSecImportExportImpKeyExpPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbDnsSecImportExportImpKeyExpPeriod.setStatus("current")


class _GslbDnsSecImportExportImpKeyRollOverPeriod_Type(Unsigned32):
    """Custom type gslbDnsSecImportExportImpKeyRollOverPeriod based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_GslbDnsSecImportExportImpKeyRollOverPeriod_Type.__name__ = "Unsigned32"
_GslbDnsSecImportExportImpKeyRollOverPeriod_Object = MibScalar
gslbDnsSecImportExportImpKeyRollOverPeriod = _GslbDnsSecImportExportImpKeyRollOverPeriod_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 4, 16),
    _GslbDnsSecImportExportImpKeyRollOverPeriod_Type()
)
gslbDnsSecImportExportImpKeyRollOverPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbDnsSecImportExportImpKeyRollOverPeriod.setStatus("current")


class _GslbDnsSecImportExportImpKeyValidityPeriod_Type(Unsigned32):
    """Custom type gslbDnsSecImportExportImpKeyValidityPeriod based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_GslbDnsSecImportExportImpKeyValidityPeriod_Type.__name__ = "Unsigned32"
_GslbDnsSecImportExportImpKeyValidityPeriod_Object = MibScalar
gslbDnsSecImportExportImpKeyValidityPeriod = _GslbDnsSecImportExportImpKeyValidityPeriod_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 4, 17),
    _GslbDnsSecImportExportImpKeyValidityPeriod_Type()
)
gslbDnsSecImportExportImpKeyValidityPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbDnsSecImportExportImpKeyValidityPeriod.setStatus("current")


class _GslbDnsSecImportExportImpKeyPublicationPeriod_Type(Unsigned32):
    """Custom type gslbDnsSecImportExportImpKeyPublicationPeriod based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_GslbDnsSecImportExportImpKeyPublicationPeriod_Type.__name__ = "Unsigned32"
_GslbDnsSecImportExportImpKeyPublicationPeriod_Object = MibScalar
gslbDnsSecImportExportImpKeyPublicationPeriod = _GslbDnsSecImportExportImpKeyPublicationPeriod_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 4, 18),
    _GslbDnsSecImportExportImpKeyPublicationPeriod_Type()
)
gslbDnsSecImportExportImpKeyPublicationPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbDnsSecImportExportImpKeyPublicationPeriod.setStatus("current")


class _GslbDnsSecImportExportAction_Type(Integer32):
    """Custom type gslbDnsSecImportExportAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("export", 2),
          ("import", 1),
          ("none", 0))
    )


_GslbDnsSecImportExportAction_Type.__name__ = "Integer32"
_GslbDnsSecImportExportAction_Object = MibScalar
gslbDnsSecImportExportAction = _GslbDnsSecImportExportAction_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 6, 4, 19),
    _GslbDnsSecImportExportAction_Type()
)
gslbDnsSecImportExportAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbDnsSecImportExportAction.setStatus("current")
_GslbDnsResVipCfg_ObjectIdentity = ObjectIdentity
gslbDnsResVipCfg = _GslbDnsResVipCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7)
)
_GslbCurDnsResVipTable_Object = MibTable
gslbCurDnsResVipTable = _GslbCurDnsResVipTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 1)
)
if mibBuilder.loadTexts:
    gslbCurDnsResVipTable.setStatus("current")
_GslbCurDnsResVipEntry_Object = MibTableRow
gslbCurDnsResVipEntry = _GslbCurDnsResVipEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 1, 1)
)
gslbCurDnsResVipEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbCurDnsResVipIndex1"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbCurDnsResVipIndex2"),
)
if mibBuilder.loadTexts:
    gslbCurDnsResVipEntry.setStatus("current")


class _GslbCurDnsResVipIndex1_Type(Integer32):
    """Custom type gslbCurDnsResVipIndex1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_GslbCurDnsResVipIndex1_Type.__name__ = "Integer32"
_GslbCurDnsResVipIndex1_Object = MibTableColumn
gslbCurDnsResVipIndex1 = _GslbCurDnsResVipIndex1_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 1, 1, 1),
    _GslbCurDnsResVipIndex1_Type()
)
gslbCurDnsResVipIndex1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsResVipIndex1.setStatus("current")


class _GslbCurDnsResVipIndex2_Type(Integer32):
    """Custom type gslbCurDnsResVipIndex2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_GslbCurDnsResVipIndex2_Type.__name__ = "Integer32"
_GslbCurDnsResVipIndex2_Object = MibTableColumn
gslbCurDnsResVipIndex2 = _GslbCurDnsResVipIndex2_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 1, 1, 2),
    _GslbCurDnsResVipIndex2_Type()
)
gslbCurDnsResVipIndex2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsResVipIndex2.setStatus("current")


class _GslbCurDnsResVipName_Type(DisplayString):
    """Custom type gslbCurDnsResVipName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbCurDnsResVipName_Type.__name__ = "DisplayString"
_GslbCurDnsResVipName_Object = MibTableColumn
gslbCurDnsResVipName = _GslbCurDnsResVipName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 1, 1, 3),
    _GslbCurDnsResVipName_Type()
)
gslbCurDnsResVipName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsResVipName.setStatus("current")


class _GslbCurDnsResVipIPVer_Type(Integer32):
    """Custom type gslbCurDnsResVipIPVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_GslbCurDnsResVipIPVer_Type.__name__ = "Integer32"
_GslbCurDnsResVipIPVer_Object = MibTableColumn
gslbCurDnsResVipIPVer = _GslbCurDnsResVipIPVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 1, 1, 4),
    _GslbCurDnsResVipIPVer_Type()
)
gslbCurDnsResVipIPVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsResVipIPVer.setStatus("current")
_GslbCurDnsResVipV4_Type = IpAddress
_GslbCurDnsResVipV4_Object = MibTableColumn
gslbCurDnsResVipV4 = _GslbCurDnsResVipV4_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 1, 1, 5),
    _GslbCurDnsResVipV4_Type()
)
gslbCurDnsResVipV4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsResVipV4.setStatus("current")


class _GslbCurDnsResVipV6_Type(DisplayString):
    """Custom type gslbCurDnsResVipV6 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_GslbCurDnsResVipV6_Type.__name__ = "DisplayString"
_GslbCurDnsResVipV6_Object = MibTableColumn
gslbCurDnsResVipV6 = _GslbCurDnsResVipV6_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 1, 1, 6),
    _GslbCurDnsResVipV6_Type()
)
gslbCurDnsResVipV6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsResVipV6.setStatus("current")


class _GslbCurDnsResVipStatus_Type(Integer32):
    """Custom type gslbCurDnsResVipStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_GslbCurDnsResVipStatus_Type.__name__ = "Integer32"
_GslbCurDnsResVipStatus_Object = MibTableColumn
gslbCurDnsResVipStatus = _GslbCurDnsResVipStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 1, 1, 7),
    _GslbCurDnsResVipStatus_Type()
)
gslbCurDnsResVipStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbCurDnsResVipStatus.setStatus("current")
_GslbNewDnsResVipTable_Object = MibTable
gslbNewDnsResVipTable = _GslbNewDnsResVipTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 2)
)
if mibBuilder.loadTexts:
    gslbNewDnsResVipTable.setStatus("current")
_GslbNewDnsResVipEntry_Object = MibTableRow
gslbNewDnsResVipEntry = _GslbNewDnsResVipEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 2, 1)
)
gslbNewDnsResVipEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbNewDnsResVipIndex1"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbNewDnsResVipIndex2"),
)
if mibBuilder.loadTexts:
    gslbNewDnsResVipEntry.setStatus("current")


class _GslbNewDnsResVipIndex1_Type(Integer32):
    """Custom type gslbNewDnsResVipIndex1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_GslbNewDnsResVipIndex1_Type.__name__ = "Integer32"
_GslbNewDnsResVipIndex1_Object = MibTableColumn
gslbNewDnsResVipIndex1 = _GslbNewDnsResVipIndex1_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 2, 1, 1),
    _GslbNewDnsResVipIndex1_Type()
)
gslbNewDnsResVipIndex1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewDnsResVipIndex1.setStatus("current")


class _GslbNewDnsResVipIndex2_Type(Integer32):
    """Custom type gslbNewDnsResVipIndex2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_GslbNewDnsResVipIndex2_Type.__name__ = "Integer32"
_GslbNewDnsResVipIndex2_Object = MibTableColumn
gslbNewDnsResVipIndex2 = _GslbNewDnsResVipIndex2_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 2, 1, 2),
    _GslbNewDnsResVipIndex2_Type()
)
gslbNewDnsResVipIndex2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    gslbNewDnsResVipIndex2.setStatus("current")


class _GslbNewDnsResVipName_Type(DisplayString):
    """Custom type gslbNewDnsResVipName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbNewDnsResVipName_Type.__name__ = "DisplayString"
_GslbNewDnsResVipName_Object = MibTableColumn
gslbNewDnsResVipName = _GslbNewDnsResVipName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 2, 1, 3),
    _GslbNewDnsResVipName_Type()
)
gslbNewDnsResVipName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsResVipName.setStatus("current")


class _GslbNewDnsResVipIPVer_Type(Integer32):
    """Custom type gslbNewDnsResVipIPVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_GslbNewDnsResVipIPVer_Type.__name__ = "Integer32"
_GslbNewDnsResVipIPVer_Object = MibTableColumn
gslbNewDnsResVipIPVer = _GslbNewDnsResVipIPVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 2, 1, 4),
    _GslbNewDnsResVipIPVer_Type()
)
gslbNewDnsResVipIPVer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsResVipIPVer.setStatus("current")
_GslbNewDnsResVipV4_Type = IpAddress
_GslbNewDnsResVipV4_Object = MibTableColumn
gslbNewDnsResVipV4 = _GslbNewDnsResVipV4_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 2, 1, 5),
    _GslbNewDnsResVipV4_Type()
)
gslbNewDnsResVipV4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsResVipV4.setStatus("current")


class _GslbNewDnsResVipV6_Type(DisplayString):
    """Custom type gslbNewDnsResVipV6 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_GslbNewDnsResVipV6_Type.__name__ = "DisplayString"
_GslbNewDnsResVipV6_Object = MibTableColumn
gslbNewDnsResVipV6 = _GslbNewDnsResVipV6_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 2, 1, 6),
    _GslbNewDnsResVipV6_Type()
)
gslbNewDnsResVipV6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsResVipV6.setStatus("current")


class _GslbNewDnsResVipStatus_Type(Integer32):
    """Custom type gslbNewDnsResVipStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_GslbNewDnsResVipStatus_Type.__name__ = "Integer32"
_GslbNewDnsResVipStatus_Object = MibTableColumn
gslbNewDnsResVipStatus = _GslbNewDnsResVipStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 2, 1, 7),
    _GslbNewDnsResVipStatus_Type()
)
gslbNewDnsResVipStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsResVipStatus.setStatus("current")


class _GslbNewDnsResVipDelete_Type(Integer32):
    """Custom type gslbNewDnsResVipDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_GslbNewDnsResVipDelete_Type.__name__ = "Integer32"
_GslbNewDnsResVipDelete_Object = MibTableColumn
gslbNewDnsResVipDelete = _GslbNewDnsResVipDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 2, 1, 8),
    _GslbNewDnsResVipDelete_Type()
)
gslbNewDnsResVipDelete.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbNewDnsResVipDelete.setStatus("current")
_GslbDnsResVipEmptyIndexesTable_Object = MibTable
gslbDnsResVipEmptyIndexesTable = _GslbDnsResVipEmptyIndexesTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 3)
)
if mibBuilder.loadTexts:
    gslbDnsResVipEmptyIndexesTable.setStatus("current")
_GslbDnsResVipEmptyIndexesEntry_Object = MibTableRow
gslbDnsResVipEmptyIndexesEntry = _GslbDnsResVipEmptyIndexesEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 3, 1)
)
gslbDnsResVipEmptyIndexesEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbDnsResVipEmptyIndexesIndex"),
)
if mibBuilder.loadTexts:
    gslbDnsResVipEmptyIndexesEntry.setStatus("current")


class _GslbDnsResVipEmptyIndexesIndex_Type(Integer32):
    """Custom type gslbDnsResVipEmptyIndexesIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_GslbDnsResVipEmptyIndexesIndex_Type.__name__ = "Integer32"
_GslbDnsResVipEmptyIndexesIndex_Object = MibTableColumn
gslbDnsResVipEmptyIndexesIndex = _GslbDnsResVipEmptyIndexesIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 3, 7, 3, 1, 1),
    _GslbDnsResVipEmptyIndexesIndex_Type()
)
gslbDnsResVipEmptyIndexesIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbDnsResVipEmptyIndexesIndex.setStatus("current")
_Layer4TableSize_ObjectIdentity = ObjectIdentity
layer4TableSize = _Layer4TableSize_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 4)
)
_CurCfgFilterTableSize_Type = Integer32
_CurCfgFilterTableSize_Object = MibScalar
curCfgFilterTableSize = _CurCfgFilterTableSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 4, 1),
    _CurCfgFilterTableSize_Type()
)
curCfgFilterTableSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    curCfgFilterTableSize.setStatus("current")
_NewCfgFilterTableSize_Type = Integer32
_NewCfgFilterTableSize_Object = MibScalar
newCfgFilterTableSize = _NewCfgFilterTableSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 4, 2),
    _NewCfgFilterTableSize_Type()
)
newCfgFilterTableSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    newCfgFilterTableSize.setStatus("current")
_CurCfgRealServerTableSize_Type = Integer32
_CurCfgRealServerTableSize_Object = MibScalar
curCfgRealServerTableSize = _CurCfgRealServerTableSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 4, 3),
    _CurCfgRealServerTableSize_Type()
)
curCfgRealServerTableSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    curCfgRealServerTableSize.setStatus("current")
_NewCfgRealServerTableSize_Type = Integer32
_NewCfgRealServerTableSize_Object = MibScalar
newCfgRealServerTableSize = _NewCfgRealServerTableSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 4, 4),
    _NewCfgRealServerTableSize_Type()
)
newCfgRealServerTableSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    newCfgRealServerTableSize.setStatus("current")
_CurCfgRealServerGroupTableSize_Type = Integer32
_CurCfgRealServerGroupTableSize_Object = MibScalar
curCfgRealServerGroupTableSize = _CurCfgRealServerGroupTableSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 4, 5),
    _CurCfgRealServerGroupTableSize_Type()
)
curCfgRealServerGroupTableSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    curCfgRealServerGroupTableSize.setStatus("current")
_NewCfgRealServerGroupTableSize_Type = Integer32
_NewCfgRealServerGroupTableSize_Object = MibScalar
newCfgRealServerGroupTableSize = _NewCfgRealServerGroupTableSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 4, 6),
    _NewCfgRealServerGroupTableSize_Type()
)
newCfgRealServerGroupTableSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    newCfgRealServerGroupTableSize.setStatus("current")
_CurCfgVirtServerTableSize_Type = Integer32
_CurCfgVirtServerTableSize_Object = MibScalar
curCfgVirtServerTableSize = _CurCfgVirtServerTableSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 4, 7),
    _CurCfgVirtServerTableSize_Type()
)
curCfgVirtServerTableSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    curCfgVirtServerTableSize.setStatus("current")
_NewCfgVirtServerTableSize_Type = Integer32
_NewCfgVirtServerTableSize_Object = MibScalar
newCfgVirtServerTableSize = _NewCfgVirtServerTableSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 4, 8),
    _NewCfgVirtServerTableSize_Type()
)
newCfgVirtServerTableSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    newCfgVirtServerTableSize.setStatus("current")
_WlmCfg_ObjectIdentity = ObjectIdentity
wlmCfg = _WlmCfg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 6)
)
_SlbWlmTableMaxSize_Type = Integer32
_SlbWlmTableMaxSize_Object = MibScalar
slbWlmTableMaxSize = _SlbWlmTableMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 6, 1),
    _SlbWlmTableMaxSize_Type()
)
slbWlmTableMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbWlmTableMaxSize.setStatus("current")
_SlbCurCfgWlmTable_Object = MibTable
slbCurCfgWlmTable = _SlbCurCfgWlmTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 6, 2)
)
if mibBuilder.loadTexts:
    slbCurCfgWlmTable.setStatus("current")
_SlbCurCfgWlmEntry_Object = MibTableRow
slbCurCfgWlmEntry = _SlbCurCfgWlmEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 6, 2, 1)
)
slbCurCfgWlmEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgWlmIndex"),
)
if mibBuilder.loadTexts:
    slbCurCfgWlmEntry.setStatus("current")
_SlbCurCfgWlmIndex_Type = Integer32
_SlbCurCfgWlmIndex_Object = MibTableColumn
slbCurCfgWlmIndex = _SlbCurCfgWlmIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 6, 2, 1, 1),
    _SlbCurCfgWlmIndex_Type()
)
slbCurCfgWlmIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWlmIndex.setStatus("current")
_SlbCurCfgWlmIpAddr_Type = IpAddress
_SlbCurCfgWlmIpAddr_Object = MibTableColumn
slbCurCfgWlmIpAddr = _SlbCurCfgWlmIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 6, 2, 1, 2),
    _SlbCurCfgWlmIpAddr_Type()
)
slbCurCfgWlmIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWlmIpAddr.setStatus("current")


class _SlbCurCfgWlmPort_Type(Integer32):
    """Custom type slbCurCfgWlmPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SlbCurCfgWlmPort_Type.__name__ = "Integer32"
_SlbCurCfgWlmPort_Object = MibTableColumn
slbCurCfgWlmPort = _SlbCurCfgWlmPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 6, 2, 1, 3),
    _SlbCurCfgWlmPort_Type()
)
slbCurCfgWlmPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWlmPort.setStatus("current")


class _SlbCurCfgWlmGroups_Type(DisplayString):
    """Custom type slbCurCfgWlmGroups based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SlbCurCfgWlmGroups_Type.__name__ = "DisplayString"
_SlbCurCfgWlmGroups_Object = MibTableColumn
slbCurCfgWlmGroups = _SlbCurCfgWlmGroups_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 6, 2, 1, 4),
    _SlbCurCfgWlmGroups_Type()
)
slbCurCfgWlmGroups.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWlmGroups.setStatus("current")


class _SlbCurCfgWlmState_Type(Integer32):
    """Custom type slbCurCfgWlmState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbCurCfgWlmState_Type.__name__ = "Integer32"
_SlbCurCfgWlmState_Object = MibTableColumn
slbCurCfgWlmState = _SlbCurCfgWlmState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 6, 2, 1, 5),
    _SlbCurCfgWlmState_Type()
)
slbCurCfgWlmState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbCurCfgWlmState.setStatus("current")
_SlbNewCfgWlmTable_Object = MibTable
slbNewCfgWlmTable = _SlbNewCfgWlmTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 6, 3)
)
if mibBuilder.loadTexts:
    slbNewCfgWlmTable.setStatus("current")
_SlbNewCfgWlmEntry_Object = MibTableRow
slbNewCfgWlmEntry = _SlbNewCfgWlmEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 6, 3, 1)
)
slbNewCfgWlmEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbNewCfgWlmIndex"),
)
if mibBuilder.loadTexts:
    slbNewCfgWlmEntry.setStatus("current")
_SlbNewCfgWlmIndex_Type = Integer32
_SlbNewCfgWlmIndex_Object = MibTableColumn
slbNewCfgWlmIndex = _SlbNewCfgWlmIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 6, 3, 1, 1),
    _SlbNewCfgWlmIndex_Type()
)
slbNewCfgWlmIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgWlmIndex.setStatus("current")
_SlbNewCfgWlmIpAddr_Type = IpAddress
_SlbNewCfgWlmIpAddr_Object = MibTableColumn
slbNewCfgWlmIpAddr = _SlbNewCfgWlmIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 6, 3, 1, 2),
    _SlbNewCfgWlmIpAddr_Type()
)
slbNewCfgWlmIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgWlmIpAddr.setStatus("current")


class _SlbNewCfgWlmPort_Type(Integer32):
    """Custom type slbNewCfgWlmPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SlbNewCfgWlmPort_Type.__name__ = "Integer32"
_SlbNewCfgWlmPort_Object = MibTableColumn
slbNewCfgWlmPort = _SlbNewCfgWlmPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 6, 3, 1, 3),
    _SlbNewCfgWlmPort_Type()
)
slbNewCfgWlmPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgWlmPort.setStatus("current")


class _SlbNewCfgWlmDelete_Type(Integer32):
    """Custom type slbNewCfgWlmDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("other", 1))
    )


_SlbNewCfgWlmDelete_Type.__name__ = "Integer32"
_SlbNewCfgWlmDelete_Object = MibTableColumn
slbNewCfgWlmDelete = _SlbNewCfgWlmDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 6, 3, 1, 4),
    _SlbNewCfgWlmDelete_Type()
)
slbNewCfgWlmDelete.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbNewCfgWlmDelete.setStatus("current")


class _SlbNewCfgWlmGroups_Type(DisplayString):
    """Custom type slbNewCfgWlmGroups based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SlbNewCfgWlmGroups_Type.__name__ = "DisplayString"
_SlbNewCfgWlmGroups_Object = MibTableColumn
slbNewCfgWlmGroups = _SlbNewCfgWlmGroups_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 6, 3, 1, 5),
    _SlbNewCfgWlmGroups_Type()
)
slbNewCfgWlmGroups.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgWlmGroups.setStatus("current")


class _SlbNewCfgWlmState_Type(Integer32):
    """Custom type slbNewCfgWlmState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbNewCfgWlmState_Type.__name__ = "Integer32"
_SlbNewCfgWlmState_Object = MibTableColumn
slbNewCfgWlmState = _SlbNewCfgWlmState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 1, 6, 3, 1, 6),
    _SlbNewCfgWlmState_Type()
)
slbNewCfgWlmState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNewCfgWlmState.setStatus("current")
_Layer4Stats_ObjectIdentity = ObjectIdentity
layer4Stats = _Layer4Stats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2)
)
_SlbSpStats_ObjectIdentity = ObjectIdentity
slbSpStats = _SlbSpStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1)
)
_SlbStatSpRealServerTable_Object = MibTable
slbStatSpRealServerTable = _SlbStatSpRealServerTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 1)
)
if mibBuilder.loadTexts:
    slbStatSpRealServerTable.setStatus("current")
_SlbStatSpRealServerEntry_Object = MibTableRow
slbStatSpRealServerEntry = _SlbStatSpRealServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 1, 1)
)
slbStatSpRealServerEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbStatSpRealServerSpIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbStatSpRealServerServerIndex"),
)
if mibBuilder.loadTexts:
    slbStatSpRealServerEntry.setStatus("current")
_SlbStatSpRealServerSpIndex_Type = Integer32
_SlbStatSpRealServerSpIndex_Object = MibTableColumn
slbStatSpRealServerSpIndex = _SlbStatSpRealServerSpIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 1, 1, 1),
    _SlbStatSpRealServerSpIndex_Type()
)
slbStatSpRealServerSpIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpRealServerSpIndex.setStatus("current")
_SlbStatSpRealServerServerIndex_Type = Integer32
_SlbStatSpRealServerServerIndex_Object = MibTableColumn
slbStatSpRealServerServerIndex = _SlbStatSpRealServerServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 1, 1, 2),
    _SlbStatSpRealServerServerIndex_Type()
)
slbStatSpRealServerServerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpRealServerServerIndex.setStatus("current")
_SlbStatSpRealServerCurrSessions_Type = Gauge32
_SlbStatSpRealServerCurrSessions_Object = MibTableColumn
slbStatSpRealServerCurrSessions = _SlbStatSpRealServerCurrSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 1, 1, 3),
    _SlbStatSpRealServerCurrSessions_Type()
)
slbStatSpRealServerCurrSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpRealServerCurrSessions.setStatus("current")
_SlbStatSpRealServerTotalSessions_Type = Counter32
_SlbStatSpRealServerTotalSessions_Object = MibTableColumn
slbStatSpRealServerTotalSessions = _SlbStatSpRealServerTotalSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 1, 1, 4),
    _SlbStatSpRealServerTotalSessions_Type()
)
slbStatSpRealServerTotalSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpRealServerTotalSessions.setStatus("current")
_SlbStatSpRealServerHCOctetsLow32_Type = Counter32
_SlbStatSpRealServerHCOctetsLow32_Object = MibTableColumn
slbStatSpRealServerHCOctetsLow32 = _SlbStatSpRealServerHCOctetsLow32_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 1, 1, 5),
    _SlbStatSpRealServerHCOctetsLow32_Type()
)
slbStatSpRealServerHCOctetsLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpRealServerHCOctetsLow32.setStatus("current")
_SlbStatSpRealServerHCOctetsHigh32_Type = Counter32
_SlbStatSpRealServerHCOctetsHigh32_Object = MibTableColumn
slbStatSpRealServerHCOctetsHigh32 = _SlbStatSpRealServerHCOctetsHigh32_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 1, 1, 6),
    _SlbStatSpRealServerHCOctetsHigh32_Type()
)
slbStatSpRealServerHCOctetsHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpRealServerHCOctetsHigh32.setStatus("current")
_SlbStatSpRealServerHCOctets_Type = Counter64
_SlbStatSpRealServerHCOctets_Object = MibTableColumn
slbStatSpRealServerHCOctets = _SlbStatSpRealServerHCOctets_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 1, 1, 7),
    _SlbStatSpRealServerHCOctets_Type()
)
slbStatSpRealServerHCOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpRealServerHCOctets.setStatus("current")
_SlbStatSpFltTable_Object = MibTable
slbStatSpFltTable = _SlbStatSpFltTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 4)
)
if mibBuilder.loadTexts:
    slbStatSpFltTable.setStatus("current")
_SlbStatSpFltEntry_Object = MibTableRow
slbStatSpFltEntry = _SlbStatSpFltEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 4, 1)
)
slbStatSpFltEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbStatSpFltSpIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbStatSpFltIndex"),
)
if mibBuilder.loadTexts:
    slbStatSpFltEntry.setStatus("current")
_SlbStatSpFltSpIndex_Type = Integer32
_SlbStatSpFltSpIndex_Object = MibTableColumn
slbStatSpFltSpIndex = _SlbStatSpFltSpIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 4, 1, 1),
    _SlbStatSpFltSpIndex_Type()
)
slbStatSpFltSpIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpFltSpIndex.setStatus("current")
_SlbStatSpFltIndex_Type = Integer32
_SlbStatSpFltIndex_Object = MibTableColumn
slbStatSpFltIndex = _SlbStatSpFltIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 4, 1, 2),
    _SlbStatSpFltIndex_Type()
)
slbStatSpFltIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpFltIndex.setStatus("current")
_SlbStatSpFltFirings_Type = Counter32
_SlbStatSpFltFirings_Object = MibTableColumn
slbStatSpFltFirings = _SlbStatSpFltFirings_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 4, 1, 3),
    _SlbStatSpFltFirings_Type()
)
slbStatSpFltFirings.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpFltFirings.setStatus("current")
_SlbStatSpMaintTable_Object = MibTable
slbStatSpMaintTable = _SlbStatSpMaintTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5)
)
if mibBuilder.loadTexts:
    slbStatSpMaintTable.setStatus("current")
_SlbStatSpMaintEntry_Object = MibTableRow
slbStatSpMaintEntry = _SlbStatSpMaintEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1)
)
slbStatSpMaintEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbStatSpMaintSpIndex"),
)
if mibBuilder.loadTexts:
    slbStatSpMaintEntry.setStatus("current")
_SlbStatSpMaintSpIndex_Type = Integer32
_SlbStatSpMaintSpIndex_Object = MibTableColumn
slbStatSpMaintSpIndex = _SlbStatSpMaintSpIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 1),
    _SlbStatSpMaintSpIndex_Type()
)
slbStatSpMaintSpIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintSpIndex.setStatus("current")
_SlbStatSpMaintMaximumSessions_Type = Integer32
_SlbStatSpMaintMaximumSessions_Object = MibTableColumn
slbStatSpMaintMaximumSessions = _SlbStatSpMaintMaximumSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 2),
    _SlbStatSpMaintMaximumSessions_Type()
)
slbStatSpMaintMaximumSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintMaximumSessions.setStatus("current")
_SlbStatSpMaintCurBindings_Type = Gauge32
_SlbStatSpMaintCurBindings_Object = MibTableColumn
slbStatSpMaintCurBindings = _SlbStatSpMaintCurBindings_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 3),
    _SlbStatSpMaintCurBindings_Type()
)
slbStatSpMaintCurBindings.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintCurBindings.setStatus("current")
_SlbStatSpMaintCurBindings4Seconds_Type = Gauge32
_SlbStatSpMaintCurBindings4Seconds_Object = MibTableColumn
slbStatSpMaintCurBindings4Seconds = _SlbStatSpMaintCurBindings4Seconds_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 4),
    _SlbStatSpMaintCurBindings4Seconds_Type()
)
slbStatSpMaintCurBindings4Seconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintCurBindings4Seconds.setStatus("current")
_SlbStatSpMaintCurBindings64Seconds_Type = Gauge32
_SlbStatSpMaintCurBindings64Seconds_Object = MibTableColumn
slbStatSpMaintCurBindings64Seconds = _SlbStatSpMaintCurBindings64Seconds_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 5),
    _SlbStatSpMaintCurBindings64Seconds_Type()
)
slbStatSpMaintCurBindings64Seconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintCurBindings64Seconds.setStatus("current")
_SlbStatSpMaintTerminatedSessions_Type = Counter32
_SlbStatSpMaintTerminatedSessions_Object = MibTableColumn
slbStatSpMaintTerminatedSessions = _SlbStatSpMaintTerminatedSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 6),
    _SlbStatSpMaintTerminatedSessions_Type()
)
slbStatSpMaintTerminatedSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintTerminatedSessions.setStatus("current")
_SlbStatSpMaintBindingFails_Type = Counter32
_SlbStatSpMaintBindingFails_Object = MibTableColumn
slbStatSpMaintBindingFails = _SlbStatSpMaintBindingFails_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 7),
    _SlbStatSpMaintBindingFails_Type()
)
slbStatSpMaintBindingFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintBindingFails.setStatus("current")
_SlbStatSpMaintNonTcpFrames_Type = Counter32
_SlbStatSpMaintNonTcpFrames_Object = MibTableColumn
slbStatSpMaintNonTcpFrames = _SlbStatSpMaintNonTcpFrames_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 8),
    _SlbStatSpMaintNonTcpFrames_Type()
)
slbStatSpMaintNonTcpFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintNonTcpFrames.setStatus("current")
_SlbStatSpMaintTcpFragments_Type = Counter32
_SlbStatSpMaintTcpFragments_Object = MibTableColumn
slbStatSpMaintTcpFragments = _SlbStatSpMaintTcpFragments_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 9),
    _SlbStatSpMaintTcpFragments_Type()
)
slbStatSpMaintTcpFragments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintTcpFragments.setStatus("obsolete")
_SlbStatSpMaintUdpDatagrams_Type = Counter32
_SlbStatSpMaintUdpDatagrams_Object = MibTableColumn
slbStatSpMaintUdpDatagrams = _SlbStatSpMaintUdpDatagrams_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 10),
    _SlbStatSpMaintUdpDatagrams_Type()
)
slbStatSpMaintUdpDatagrams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintUdpDatagrams.setStatus("current")
_SlbStatSpMaintIncorrectVIPs_Type = Counter32
_SlbStatSpMaintIncorrectVIPs_Object = MibTableColumn
slbStatSpMaintIncorrectVIPs = _SlbStatSpMaintIncorrectVIPs_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 11),
    _SlbStatSpMaintIncorrectVIPs_Type()
)
slbStatSpMaintIncorrectVIPs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintIncorrectVIPs.setStatus("current")
_SlbStatSpMaintIncorrectVports_Type = Counter32
_SlbStatSpMaintIncorrectVports_Object = MibTableColumn
slbStatSpMaintIncorrectVports = _SlbStatSpMaintIncorrectVports_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 12),
    _SlbStatSpMaintIncorrectVports_Type()
)
slbStatSpMaintIncorrectVports.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintIncorrectVports.setStatus("current")
_SlbStatSpMaintRealServerNoAvails_Type = Counter32
_SlbStatSpMaintRealServerNoAvails_Object = MibTableColumn
slbStatSpMaintRealServerNoAvails = _SlbStatSpMaintRealServerNoAvails_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 13),
    _SlbStatSpMaintRealServerNoAvails_Type()
)
slbStatSpMaintRealServerNoAvails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintRealServerNoAvails.setStatus("current")
_SlbStatSpMaintFilteredDeniedFrames_Type = Counter32
_SlbStatSpMaintFilteredDeniedFrames_Object = MibTableColumn
slbStatSpMaintFilteredDeniedFrames = _SlbStatSpMaintFilteredDeniedFrames_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 14),
    _SlbStatSpMaintFilteredDeniedFrames_Type()
)
slbStatSpMaintFilteredDeniedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintFilteredDeniedFrames.setStatus("current")
_SlbStatSpMaintLandAttacks_Type = Counter32
_SlbStatSpMaintLandAttacks_Object = MibTableColumn
slbStatSpMaintLandAttacks = _SlbStatSpMaintLandAttacks_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 15),
    _SlbStatSpMaintLandAttacks_Type()
)
slbStatSpMaintLandAttacks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintLandAttacks.setStatus("current")
_SlbStatSpMaintIpFragTotalSessions_Type = Counter32
_SlbStatSpMaintIpFragTotalSessions_Object = MibTableColumn
slbStatSpMaintIpFragTotalSessions = _SlbStatSpMaintIpFragTotalSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 16),
    _SlbStatSpMaintIpFragTotalSessions_Type()
)
slbStatSpMaintIpFragTotalSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintIpFragTotalSessions.setStatus("current")
_SlbStatSpMaintIpFragCurSessions_Type = Gauge32
_SlbStatSpMaintIpFragCurSessions_Object = MibTableColumn
slbStatSpMaintIpFragCurSessions = _SlbStatSpMaintIpFragCurSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 17),
    _SlbStatSpMaintIpFragCurSessions_Type()
)
slbStatSpMaintIpFragCurSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintIpFragCurSessions.setStatus("current")
_SlbStatSpMaintIpFragDiscards_Type = Counter32
_SlbStatSpMaintIpFragDiscards_Object = MibTableColumn
slbStatSpMaintIpFragDiscards = _SlbStatSpMaintIpFragDiscards_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 18),
    _SlbStatSpMaintIpFragDiscards_Type()
)
slbStatSpMaintIpFragDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintIpFragDiscards.setStatus("current")
_SlbStatSpMaintIpFragTableFull_Type = Counter32
_SlbStatSpMaintIpFragTableFull_Object = MibTableColumn
slbStatSpMaintIpFragTableFull = _SlbStatSpMaintIpFragTableFull_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 19),
    _SlbStatSpMaintIpFragTableFull_Type()
)
slbStatSpMaintIpFragTableFull.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintIpFragTableFull.setStatus("current")


class _SlbStatSpMaintClear_Type(Integer32):
    """Custom type slbStatSpMaintClear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("clear", 2),
          ("ok", 1))
    )


_SlbStatSpMaintClear_Type.__name__ = "Integer32"
_SlbStatSpMaintClear_Object = MibTableColumn
slbStatSpMaintClear = _SlbStatSpMaintClear_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 20),
    _SlbStatSpMaintClear_Type()
)
slbStatSpMaintClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbStatSpMaintClear.setStatus("current")
_SlbStatSpMaintOOSFinPktDrops_Type = Counter32
_SlbStatSpMaintOOSFinPktDrops_Object = MibTableColumn
slbStatSpMaintOOSFinPktDrops = _SlbStatSpMaintOOSFinPktDrops_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 21),
    _SlbStatSpMaintOOSFinPktDrops_Type()
)
slbStatSpMaintOOSFinPktDrops.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintOOSFinPktDrops.setStatus("current")
_SlbStatSpMaintSymSessions_Type = Counter32
_SlbStatSpMaintSymSessions_Object = MibTableColumn
slbStatSpMaintSymSessions = _SlbStatSpMaintSymSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 22),
    _SlbStatSpMaintSymSessions_Type()
)
slbStatSpMaintSymSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintSymSessions.setStatus("current")
_SlbStatSpMaintSymValidSegments_Type = Counter32
_SlbStatSpMaintSymValidSegments_Object = MibTableColumn
slbStatSpMaintSymValidSegments = _SlbStatSpMaintSymValidSegments_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 23),
    _SlbStatSpMaintSymValidSegments_Type()
)
slbStatSpMaintSymValidSegments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintSymValidSegments.setStatus("current")
_SlbStatSpMaintSymFragSessions_Type = Counter32
_SlbStatSpMaintSymFragSessions_Object = MibTableColumn
slbStatSpMaintSymFragSessions = _SlbStatSpMaintSymFragSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 24),
    _SlbStatSpMaintSymFragSessions_Type()
)
slbStatSpMaintSymFragSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintSymFragSessions.setStatus("current")
_SlbStatSpMaintSymSegAllocFails_Type = Counter32
_SlbStatSpMaintSymSegAllocFails_Object = MibTableColumn
slbStatSpMaintSymSegAllocFails = _SlbStatSpMaintSymSegAllocFails_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 25),
    _SlbStatSpMaintSymSegAllocFails_Type()
)
slbStatSpMaintSymSegAllocFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintSymSegAllocFails.setStatus("current")
_SlbStatSpMaintSymBufferAllocFails_Type = Counter32
_SlbStatSpMaintSymBufferAllocFails_Object = MibTableColumn
slbStatSpMaintSymBufferAllocFails = _SlbStatSpMaintSymBufferAllocFails_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 26),
    _SlbStatSpMaintSymBufferAllocFails_Type()
)
slbStatSpMaintSymBufferAllocFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintSymBufferAllocFails.setStatus("current")
_SlbStatSpMaintSymConnAllocFails_Type = Counter32
_SlbStatSpMaintSymConnAllocFails_Object = MibTableColumn
slbStatSpMaintSymConnAllocFails = _SlbStatSpMaintSymConnAllocFails_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 27),
    _SlbStatSpMaintSymConnAllocFails_Type()
)
slbStatSpMaintSymConnAllocFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintSymConnAllocFails.setStatus("current")
_SlbStatSpMaintSymInvalidBuffers_Type = Counter32
_SlbStatSpMaintSymInvalidBuffers_Object = MibTableColumn
slbStatSpMaintSymInvalidBuffers = _SlbStatSpMaintSymInvalidBuffers_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 28),
    _SlbStatSpMaintSymInvalidBuffers_Type()
)
slbStatSpMaintSymInvalidBuffers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintSymInvalidBuffers.setStatus("current")
_SlbStatSpMaintSymSegReallocFails_Type = Counter32
_SlbStatSpMaintSymSegReallocFails_Object = MibTableColumn
slbStatSpMaintSymSegReallocFails = _SlbStatSpMaintSymSegReallocFails_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 29),
    _SlbStatSpMaintSymSegReallocFails_Type()
)
slbStatSpMaintSymSegReallocFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintSymSegReallocFails.setStatus("current")
_SlbStatSpMaintSymPacketsIn_Type = Counter32
_SlbStatSpMaintSymPacketsIn_Object = MibTableColumn
slbStatSpMaintSymPacketsIn = _SlbStatSpMaintSymPacketsIn_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 30),
    _SlbStatSpMaintSymPacketsIn_Type()
)
slbStatSpMaintSymPacketsIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintSymPacketsIn.setStatus("current")
_SlbStatSpMaintSymPacketsWithNoData_Type = Counter32
_SlbStatSpMaintSymPacketsWithNoData_Object = MibTableColumn
slbStatSpMaintSymPacketsWithNoData = _SlbStatSpMaintSymPacketsWithNoData_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 31),
    _SlbStatSpMaintSymPacketsWithNoData_Type()
)
slbStatSpMaintSymPacketsWithNoData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintSymPacketsWithNoData.setStatus("current")
_SlbStatSpMaintSymTcpPackets_Type = Counter32
_SlbStatSpMaintSymTcpPackets_Object = MibTableColumn
slbStatSpMaintSymTcpPackets = _SlbStatSpMaintSymTcpPackets_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 32),
    _SlbStatSpMaintSymTcpPackets_Type()
)
slbStatSpMaintSymTcpPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintSymTcpPackets.setStatus("current")
_SlbStatSpMaintSymUdpPackets_Type = Counter32
_SlbStatSpMaintSymUdpPackets_Object = MibTableColumn
slbStatSpMaintSymUdpPackets = _SlbStatSpMaintSymUdpPackets_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 33),
    _SlbStatSpMaintSymUdpPackets_Type()
)
slbStatSpMaintSymUdpPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintSymUdpPackets.setStatus("current")
_SlbStatSpMaintSymIcmpPackets_Type = Counter32
_SlbStatSpMaintSymIcmpPackets_Object = MibTableColumn
slbStatSpMaintSymIcmpPackets = _SlbStatSpMaintSymIcmpPackets_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 34),
    _SlbStatSpMaintSymIcmpPackets_Type()
)
slbStatSpMaintSymIcmpPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintSymIcmpPackets.setStatus("current")
_SlbStatSpMaintSymOtherPackets_Type = Counter32
_SlbStatSpMaintSymOtherPackets_Object = MibTableColumn
slbStatSpMaintSymOtherPackets = _SlbStatSpMaintSymOtherPackets_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 35),
    _SlbStatSpMaintSymOtherPackets_Type()
)
slbStatSpMaintSymOtherPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintSymOtherPackets.setStatus("current")
_SlbStatSpMaintSymMatchCount_Type = Counter32
_SlbStatSpMaintSymMatchCount_Object = MibTableColumn
slbStatSpMaintSymMatchCount = _SlbStatSpMaintSymMatchCount_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 36),
    _SlbStatSpMaintSymMatchCount_Type()
)
slbStatSpMaintSymMatchCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintSymMatchCount.setStatus("current")
_SlbStatSpMaintSymFetchErrors_Type = Counter32
_SlbStatSpMaintSymFetchErrors_Object = MibTableColumn
slbStatSpMaintSymFetchErrors = _SlbStatSpMaintSymFetchErrors_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 37),
    _SlbStatSpMaintSymFetchErrors_Type()
)
slbStatSpMaintSymFetchErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintSymFetchErrors.setStatus("current")
_SlbStatSpMaintSymTruncPayloadToMp_Type = Counter32
_SlbStatSpMaintSymTruncPayloadToMp_Object = MibTableColumn
slbStatSpMaintSymTruncPayloadToMp = _SlbStatSpMaintSymTruncPayloadToMp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 38),
    _SlbStatSpMaintSymTruncPayloadToMp_Type()
)
slbStatSpMaintSymTruncPayloadToMp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintSymTruncPayloadToMp.setStatus("current")
_SlbStatSpMaintSymPacketsInFastPath_Type = Counter32
_SlbStatSpMaintSymPacketsInFastPath_Object = MibTableColumn
slbStatSpMaintSymPacketsInFastPath = _SlbStatSpMaintSymPacketsInFastPath_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 5, 1, 39),
    _SlbStatSpMaintSymPacketsInFastPath_Type()
)
slbStatSpMaintSymPacketsInFastPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpMaintSymPacketsInFastPath.setStatus("current")
_SlbStatSpAuxSessTable_Object = MibTable
slbStatSpAuxSessTable = _SlbStatSpAuxSessTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 6)
)
if mibBuilder.loadTexts:
    slbStatSpAuxSessTable.setStatus("current")
_SlbStatSpAuxSessEntry_Object = MibTableRow
slbStatSpAuxSessEntry = _SlbStatSpAuxSessEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 6, 1)
)
slbStatSpAuxSessEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbStatSpAuxSessSpIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbStatSpAuxSessIndex"),
)
if mibBuilder.loadTexts:
    slbStatSpAuxSessEntry.setStatus("current")
_SlbStatSpAuxSessSpIndex_Type = Integer32
_SlbStatSpAuxSessSpIndex_Object = MibTableColumn
slbStatSpAuxSessSpIndex = _SlbStatSpAuxSessSpIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 6, 1, 1),
    _SlbStatSpAuxSessSpIndex_Type()
)
slbStatSpAuxSessSpIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpAuxSessSpIndex.setStatus("current")
_SlbStatSpAuxSessIndex_Type = Integer32
_SlbStatSpAuxSessIndex_Object = MibTableColumn
slbStatSpAuxSessIndex = _SlbStatSpAuxSessIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 6, 1, 2),
    _SlbStatSpAuxSessIndex_Type()
)
slbStatSpAuxSessIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpAuxSessIndex.setStatus("current")
_SlbStatSpAuxSessCurConn_Type = Gauge32
_SlbStatSpAuxSessCurConn_Object = MibTableColumn
slbStatSpAuxSessCurConn = _SlbStatSpAuxSessCurConn_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 6, 1, 3),
    _SlbStatSpAuxSessCurConn_Type()
)
slbStatSpAuxSessCurConn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpAuxSessCurConn.setStatus("current")
_SlbStatSpAuxSessMaxConn_Type = Integer32
_SlbStatSpAuxSessMaxConn_Object = MibTableColumn
slbStatSpAuxSessMaxConn = _SlbStatSpAuxSessMaxConn_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 6, 1, 4),
    _SlbStatSpAuxSessMaxConn_Type()
)
slbStatSpAuxSessMaxConn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpAuxSessMaxConn.setStatus("current")
_SlbStatSpAuxSessAllocFails_Type = Counter32
_SlbStatSpAuxSessAllocFails_Object = MibTableColumn
slbStatSpAuxSessAllocFails = _SlbStatSpAuxSessAllocFails_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 1, 6, 1, 5),
    _SlbStatSpAuxSessAllocFails_Type()
)
slbStatSpAuxSessAllocFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSpAuxSessAllocFails.setStatus("current")
_SlbStatRServerTable_Object = MibTable
slbStatRServerTable = _SlbStatRServerTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 2)
)
if mibBuilder.loadTexts:
    slbStatRServerTable.setStatus("current")
_SlbStatRServerEntry_Object = MibTableRow
slbStatRServerEntry = _SlbStatRServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 2, 1)
)
slbStatRServerEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbStatRServerIndex"),
)
if mibBuilder.loadTexts:
    slbStatRServerEntry.setStatus("current")
_SlbStatRServerIndex_Type = Integer32
_SlbStatRServerIndex_Object = MibTableColumn
slbStatRServerIndex = _SlbStatRServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 2, 1, 1),
    _SlbStatRServerIndex_Type()
)
slbStatRServerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatRServerIndex.setStatus("current")
_SlbStatRServerCurrSessions_Type = Gauge32
_SlbStatRServerCurrSessions_Object = MibTableColumn
slbStatRServerCurrSessions = _SlbStatRServerCurrSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 2, 1, 2),
    _SlbStatRServerCurrSessions_Type()
)
slbStatRServerCurrSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatRServerCurrSessions.setStatus("current")
_SlbStatRServerTotalSessions_Type = Counter32
_SlbStatRServerTotalSessions_Object = MibTableColumn
slbStatRServerTotalSessions = _SlbStatRServerTotalSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 2, 1, 3),
    _SlbStatRServerTotalSessions_Type()
)
slbStatRServerTotalSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatRServerTotalSessions.setStatus("current")
_SlbStatRServerFailures_Type = Counter32
_SlbStatRServerFailures_Object = MibTableColumn
slbStatRServerFailures = _SlbStatRServerFailures_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 2, 1, 4),
    _SlbStatRServerFailures_Type()
)
slbStatRServerFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatRServerFailures.setStatus("current")
_SlbStatRServerHighestSessions_Type = Counter32
_SlbStatRServerHighestSessions_Object = MibTableColumn
slbStatRServerHighestSessions = _SlbStatRServerHighestSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 2, 1, 5),
    _SlbStatRServerHighestSessions_Type()
)
slbStatRServerHighestSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatRServerHighestSessions.setStatus("current")
_SlbStatRServerHCOctetsLow32_Type = Counter32
_SlbStatRServerHCOctetsLow32_Object = MibTableColumn
slbStatRServerHCOctetsLow32 = _SlbStatRServerHCOctetsLow32_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 2, 1, 6),
    _SlbStatRServerHCOctetsLow32_Type()
)
slbStatRServerHCOctetsLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatRServerHCOctetsLow32.setStatus("current")
_SlbStatRServerHCOctetsHigh32_Type = Counter32
_SlbStatRServerHCOctetsHigh32_Object = MibTableColumn
slbStatRServerHCOctetsHigh32 = _SlbStatRServerHCOctetsHigh32_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 2, 1, 7),
    _SlbStatRServerHCOctetsHigh32_Type()
)
slbStatRServerHCOctetsHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatRServerHCOctetsHigh32.setStatus("current")
_SlbStatRServerHCOctets_Type = Counter64
_SlbStatRServerHCOctets_Object = MibTableColumn
slbStatRServerHCOctets = _SlbStatRServerHCOctets_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 2, 1, 8),
    _SlbStatRServerHCOctets_Type()
)
slbStatRServerHCOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatRServerHCOctets.setStatus("current")
_SlbStatGroupTable_Object = MibTable
slbStatGroupTable = _SlbStatGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 3)
)
if mibBuilder.loadTexts:
    slbStatGroupTable.setStatus("current")
_SlbStatGroupEntry_Object = MibTableRow
slbStatGroupEntry = _SlbStatGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 3, 1)
)
slbStatGroupEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbStatGroupIndex"),
)
if mibBuilder.loadTexts:
    slbStatGroupEntry.setStatus("current")
_SlbStatGroupIndex_Type = Integer32
_SlbStatGroupIndex_Object = MibTableColumn
slbStatGroupIndex = _SlbStatGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 3, 1, 1),
    _SlbStatGroupIndex_Type()
)
slbStatGroupIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatGroupIndex.setStatus("current")
_SlbStatGroupCurrSessions_Type = Gauge32
_SlbStatGroupCurrSessions_Object = MibTableColumn
slbStatGroupCurrSessions = _SlbStatGroupCurrSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 3, 1, 2),
    _SlbStatGroupCurrSessions_Type()
)
slbStatGroupCurrSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatGroupCurrSessions.setStatus("current")
_SlbStatGroupTotalSessions_Type = Counter32
_SlbStatGroupTotalSessions_Object = MibTableColumn
slbStatGroupTotalSessions = _SlbStatGroupTotalSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 3, 1, 3),
    _SlbStatGroupTotalSessions_Type()
)
slbStatGroupTotalSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatGroupTotalSessions.setStatus("current")
_SlbStatGroupHighestSessions_Type = Counter32
_SlbStatGroupHighestSessions_Object = MibTableColumn
slbStatGroupHighestSessions = _SlbStatGroupHighestSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 3, 1, 4),
    _SlbStatGroupHighestSessions_Type()
)
slbStatGroupHighestSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatGroupHighestSessions.setStatus("current")
_SlbStatGroupHCOctetsLow32_Type = Counter32
_SlbStatGroupHCOctetsLow32_Object = MibTableColumn
slbStatGroupHCOctetsLow32 = _SlbStatGroupHCOctetsLow32_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 3, 1, 5),
    _SlbStatGroupHCOctetsLow32_Type()
)
slbStatGroupHCOctetsLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatGroupHCOctetsLow32.setStatus("current")
_SlbStatGroupHCOctetsHigh32_Type = Counter32
_SlbStatGroupHCOctetsHigh32_Object = MibTableColumn
slbStatGroupHCOctetsHigh32 = _SlbStatGroupHCOctetsHigh32_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 3, 1, 6),
    _SlbStatGroupHCOctetsHigh32_Type()
)
slbStatGroupHCOctetsHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatGroupHCOctetsHigh32.setStatus("current")
_SlbStatGroupHCOctets_Type = Counter64
_SlbStatGroupHCOctets_Object = MibTableColumn
slbStatGroupHCOctets = _SlbStatGroupHCOctets_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 3, 1, 7),
    _SlbStatGroupHCOctets_Type()
)
slbStatGroupHCOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatGroupHCOctets.setStatus("current")
_SlbStatGroupWlmUpdates_Type = Counter32
_SlbStatGroupWlmUpdates_Object = MibTableColumn
slbStatGroupWlmUpdates = _SlbStatGroupWlmUpdates_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 3, 1, 8),
    _SlbStatGroupWlmUpdates_Type()
)
slbStatGroupWlmUpdates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatGroupWlmUpdates.setStatus("current")
_SlbStatVServerTable_Object = MibTable
slbStatVServerTable = _SlbStatVServerTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 4)
)
if mibBuilder.loadTexts:
    slbStatVServerTable.setStatus("current")
_SlbStatVServerEntry_Object = MibTableRow
slbStatVServerEntry = _SlbStatVServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 4, 1)
)
slbStatVServerEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbStatVServerIndex"),
)
if mibBuilder.loadTexts:
    slbStatVServerEntry.setStatus("current")
_SlbStatVServerIndex_Type = Integer32
_SlbStatVServerIndex_Object = MibTableColumn
slbStatVServerIndex = _SlbStatVServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 4, 1, 1),
    _SlbStatVServerIndex_Type()
)
slbStatVServerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatVServerIndex.setStatus("current")
_SlbStatVServerCurrSessions_Type = Gauge32
_SlbStatVServerCurrSessions_Object = MibTableColumn
slbStatVServerCurrSessions = _SlbStatVServerCurrSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 4, 1, 2),
    _SlbStatVServerCurrSessions_Type()
)
slbStatVServerCurrSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatVServerCurrSessions.setStatus("current")
_SlbStatVServerTotalSessions_Type = Counter32
_SlbStatVServerTotalSessions_Object = MibTableColumn
slbStatVServerTotalSessions = _SlbStatVServerTotalSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 4, 1, 3),
    _SlbStatVServerTotalSessions_Type()
)
slbStatVServerTotalSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatVServerTotalSessions.setStatus("current")
_SlbStatVServerHighestSessions_Type = Counter32
_SlbStatVServerHighestSessions_Object = MibTableColumn
slbStatVServerHighestSessions = _SlbStatVServerHighestSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 4, 1, 4),
    _SlbStatVServerHighestSessions_Type()
)
slbStatVServerHighestSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatVServerHighestSessions.setStatus("current")
_SlbStatVServerHCOctetsLow32_Type = Counter32
_SlbStatVServerHCOctetsLow32_Object = MibTableColumn
slbStatVServerHCOctetsLow32 = _SlbStatVServerHCOctetsLow32_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 4, 1, 5),
    _SlbStatVServerHCOctetsLow32_Type()
)
slbStatVServerHCOctetsLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatVServerHCOctetsLow32.setStatus("current")
_SlbStatVServerHCOctetsHigh32_Type = Counter32
_SlbStatVServerHCOctetsHigh32_Object = MibTableColumn
slbStatVServerHCOctetsHigh32 = _SlbStatVServerHCOctetsHigh32_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 4, 1, 6),
    _SlbStatVServerHCOctetsHigh32_Type()
)
slbStatVServerHCOctetsHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatVServerHCOctetsHigh32.setStatus("current")
_SlbStatVServerHeaderHits_Type = Counter32
_SlbStatVServerHeaderHits_Object = MibTableColumn
slbStatVServerHeaderHits = _SlbStatVServerHeaderHits_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 4, 1, 8),
    _SlbStatVServerHeaderHits_Type()
)
slbStatVServerHeaderHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatVServerHeaderHits.setStatus("current")
_SlbStatVServerHeaderMisses_Type = Counter32
_SlbStatVServerHeaderMisses_Object = MibTableColumn
slbStatVServerHeaderMisses = _SlbStatVServerHeaderMisses_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 4, 1, 9),
    _SlbStatVServerHeaderMisses_Type()
)
slbStatVServerHeaderMisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatVServerHeaderMisses.setStatus("current")
_SlbStatVServerHeaderTotalSessions_Type = Counter32
_SlbStatVServerHeaderTotalSessions_Object = MibTableColumn
slbStatVServerHeaderTotalSessions = _SlbStatVServerHeaderTotalSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 4, 1, 10),
    _SlbStatVServerHeaderTotalSessions_Type()
)
slbStatVServerHeaderTotalSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatVServerHeaderTotalSessions.setStatus("current")
_SlbStatVServerCookieRewrites_Type = Counter32
_SlbStatVServerCookieRewrites_Object = MibTableColumn
slbStatVServerCookieRewrites = _SlbStatVServerCookieRewrites_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 4, 1, 11),
    _SlbStatVServerCookieRewrites_Type()
)
slbStatVServerCookieRewrites.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatVServerCookieRewrites.setStatus("current")
_SlbStatVServerCookieInserts_Type = Counter32
_SlbStatVServerCookieInserts_Object = MibTableColumn
slbStatVServerCookieInserts = _SlbStatVServerCookieInserts_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 4, 1, 12),
    _SlbStatVServerCookieInserts_Type()
)
slbStatVServerCookieInserts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatVServerCookieInserts.setStatus("current")
_SlbStatVServerHCOctets_Type = Counter64
_SlbStatVServerHCOctets_Object = MibTableColumn
slbStatVServerHCOctets = _SlbStatVServerHCOctets_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 4, 1, 13),
    _SlbStatVServerHCOctets_Type()
)
slbStatVServerHCOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatVServerHCOctets.setStatus("current")
_SlbStatVServerIpAddress_Type = DisplayString
_SlbStatVServerIpAddress_Object = MibTableColumn
slbStatVServerIpAddress = _SlbStatVServerIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 4, 1, 14),
    _SlbStatVServerIpAddress_Type()
)
slbStatVServerIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatVServerIpAddress.setStatus("current")
_SlbMaintStats_ObjectIdentity = ObjectIdentity
slbMaintStats = _SlbMaintStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5)
)
_SlbStatMaintMaximumSessions_Type = Integer32
_SlbStatMaintMaximumSessions_Object = MibScalar
slbStatMaintMaximumSessions = _SlbStatMaintMaximumSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 1),
    _SlbStatMaintMaximumSessions_Type()
)
slbStatMaintMaximumSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintMaximumSessions.setStatus("current")
_SlbStatMaintCurBindings_Type = Gauge32
_SlbStatMaintCurBindings_Object = MibScalar
slbStatMaintCurBindings = _SlbStatMaintCurBindings_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 2),
    _SlbStatMaintCurBindings_Type()
)
slbStatMaintCurBindings.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintCurBindings.setStatus("current")
_SlbStatMaintCurBindings4Seconds_Type = Gauge32
_SlbStatMaintCurBindings4Seconds_Object = MibScalar
slbStatMaintCurBindings4Seconds = _SlbStatMaintCurBindings4Seconds_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 3),
    _SlbStatMaintCurBindings4Seconds_Type()
)
slbStatMaintCurBindings4Seconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintCurBindings4Seconds.setStatus("current")
_SlbStatMaintCurBindings64Seconds_Type = Gauge32
_SlbStatMaintCurBindings64Seconds_Object = MibScalar
slbStatMaintCurBindings64Seconds = _SlbStatMaintCurBindings64Seconds_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 4),
    _SlbStatMaintCurBindings64Seconds_Type()
)
slbStatMaintCurBindings64Seconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintCurBindings64Seconds.setStatus("current")
_SlbStatMaintTerminatedSessions_Type = Counter32
_SlbStatMaintTerminatedSessions_Object = MibScalar
slbStatMaintTerminatedSessions = _SlbStatMaintTerminatedSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 5),
    _SlbStatMaintTerminatedSessions_Type()
)
slbStatMaintTerminatedSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintTerminatedSessions.setStatus("current")
_SlbStatMaintAllocFailures_Type = Counter32
_SlbStatMaintAllocFailures_Object = MibScalar
slbStatMaintAllocFailures = _SlbStatMaintAllocFailures_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 6),
    _SlbStatMaintAllocFailures_Type()
)
slbStatMaintAllocFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintAllocFailures.setStatus("current")
_SlbStatMaintNonTcpFrames_Type = Counter32
_SlbStatMaintNonTcpFrames_Object = MibScalar
slbStatMaintNonTcpFrames = _SlbStatMaintNonTcpFrames_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 7),
    _SlbStatMaintNonTcpFrames_Type()
)
slbStatMaintNonTcpFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintNonTcpFrames.setStatus("current")
_SlbStatMaintTcpFragments_Type = Counter32
_SlbStatMaintTcpFragments_Object = MibScalar
slbStatMaintTcpFragments = _SlbStatMaintTcpFragments_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 8),
    _SlbStatMaintTcpFragments_Type()
)
slbStatMaintTcpFragments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintTcpFragments.setStatus("current")
_SlbStatMaintUdpDatagrams_Type = Counter32
_SlbStatMaintUdpDatagrams_Object = MibScalar
slbStatMaintUdpDatagrams = _SlbStatMaintUdpDatagrams_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 9),
    _SlbStatMaintUdpDatagrams_Type()
)
slbStatMaintUdpDatagrams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintUdpDatagrams.setStatus("current")
_SlbIncorrectVirtServs_Type = Counter32
_SlbIncorrectVirtServs_Object = MibScalar
slbIncorrectVirtServs = _SlbIncorrectVirtServs_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 10),
    _SlbIncorrectVirtServs_Type()
)
slbIncorrectVirtServs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbIncorrectVirtServs.setStatus("current")
_SlbIncorrectVports_Type = Counter32
_SlbIncorrectVports_Object = MibScalar
slbIncorrectVports = _SlbIncorrectVports_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 11),
    _SlbIncorrectVports_Type()
)
slbIncorrectVports.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbIncorrectVports.setStatus("current")
_SlbNoRealServs_Type = Counter32
_SlbNoRealServs_Object = MibScalar
slbNoRealServs = _SlbNoRealServs_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 12),
    _SlbNoRealServs_Type()
)
slbNoRealServs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbNoRealServs.setStatus("current")
_SlbStatMaintBackupServActs_Type = Counter32
_SlbStatMaintBackupServActs_Object = MibScalar
slbStatMaintBackupServActs = _SlbStatMaintBackupServActs_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 13),
    _SlbStatMaintBackupServActs_Type()
)
slbStatMaintBackupServActs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintBackupServActs.setStatus("current")
_SlbStatMaintOverflowServActs_Type = Counter32
_SlbStatMaintOverflowServActs_Object = MibScalar
slbStatMaintOverflowServActs = _SlbStatMaintOverflowServActs_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 14),
    _SlbStatMaintOverflowServActs_Type()
)
slbStatMaintOverflowServActs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintOverflowServActs.setStatus("current")
_SlbStatMaintFilteredDeniedFrames_Type = Counter32
_SlbStatMaintFilteredDeniedFrames_Object = MibScalar
slbStatMaintFilteredDeniedFrames = _SlbStatMaintFilteredDeniedFrames_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 15),
    _SlbStatMaintFilteredDeniedFrames_Type()
)
slbStatMaintFilteredDeniedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintFilteredDeniedFrames.setStatus("current")
_SlbStatMaintLandAttacks_Type = Counter32
_SlbStatMaintLandAttacks_Object = MibScalar
slbStatMaintLandAttacks = _SlbStatMaintLandAttacks_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 16),
    _SlbStatMaintLandAttacks_Type()
)
slbStatMaintLandAttacks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintLandAttacks.setStatus("current")
_SlbStatMaintIpFragTotalSessions_Type = Counter32
_SlbStatMaintIpFragTotalSessions_Object = MibScalar
slbStatMaintIpFragTotalSessions = _SlbStatMaintIpFragTotalSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 17),
    _SlbStatMaintIpFragTotalSessions_Type()
)
slbStatMaintIpFragTotalSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintIpFragTotalSessions.setStatus("current")
_SlbStatMaintIpFragCurSessions_Type = Gauge32
_SlbStatMaintIpFragCurSessions_Object = MibScalar
slbStatMaintIpFragCurSessions = _SlbStatMaintIpFragCurSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 18),
    _SlbStatMaintIpFragCurSessions_Type()
)
slbStatMaintIpFragCurSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintIpFragCurSessions.setStatus("current")
_SlbStatMaintIpFragDiscards_Type = Counter32
_SlbStatMaintIpFragDiscards_Object = MibScalar
slbStatMaintIpFragDiscards = _SlbStatMaintIpFragDiscards_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 19),
    _SlbStatMaintIpFragDiscards_Type()
)
slbStatMaintIpFragDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintIpFragDiscards.setStatus("current")
_SlbStatMaintIpFragTableFull_Type = Counter32
_SlbStatMaintIpFragTableFull_Object = MibScalar
slbStatMaintIpFragTableFull = _SlbStatMaintIpFragTableFull_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 20),
    _SlbStatMaintIpFragTableFull_Type()
)
slbStatMaintIpFragTableFull.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintIpFragTableFull.setStatus("current")
_SlbStatMaintIp6CurrSessions_Type = Counter32
_SlbStatMaintIp6CurrSessions_Object = MibScalar
slbStatMaintIp6CurrSessions = _SlbStatMaintIp6CurrSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 21),
    _SlbStatMaintIp6CurrSessions_Type()
)
slbStatMaintIp6CurrSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintIp6CurrSessions.setStatus("current")
_SlbIncorrectIp6Vip_Type = Counter32
_SlbIncorrectIp6Vip_Object = MibScalar
slbIncorrectIp6Vip = _SlbIncorrectIp6Vip_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 22),
    _SlbIncorrectIp6Vip_Type()
)
slbIncorrectIp6Vip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbIncorrectIp6Vip.setStatus("current")
_SlbIncorrectIp6Vports_Type = Counter32
_SlbIncorrectIp6Vports_Object = MibScalar
slbIncorrectIp6Vports = _SlbIncorrectIp6Vports_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 23),
    _SlbIncorrectIp6Vports_Type()
)
slbIncorrectIp6Vports.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbIncorrectIp6Vports.setStatus("current")
_SlbStatMaintIp6PktDropped_Type = Counter32
_SlbStatMaintIp6PktDropped_Object = MibScalar
slbStatMaintIp6PktDropped = _SlbStatMaintIp6PktDropped_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 24),
    _SlbStatMaintIp6PktDropped_Type()
)
slbStatMaintIp6PktDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintIp6PktDropped.setStatus("current")
_SlbStatMaintOOSFinPktDrops_Type = Counter32
_SlbStatMaintOOSFinPktDrops_Object = MibScalar
slbStatMaintOOSFinPktDrops = _SlbStatMaintOOSFinPktDrops_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 25),
    _SlbStatMaintOOSFinPktDrops_Type()
)
slbStatMaintOOSFinPktDrops.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintOOSFinPktDrops.setStatus("current")
_SlbStatMaintSymSessions_Type = Counter32
_SlbStatMaintSymSessions_Object = MibScalar
slbStatMaintSymSessions = _SlbStatMaintSymSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 26),
    _SlbStatMaintSymSessions_Type()
)
slbStatMaintSymSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintSymSessions.setStatus("current")
_SlbStatMaintSymValidSegments_Type = Counter32
_SlbStatMaintSymValidSegments_Object = MibScalar
slbStatMaintSymValidSegments = _SlbStatMaintSymValidSegments_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 27),
    _SlbStatMaintSymValidSegments_Type()
)
slbStatMaintSymValidSegments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintSymValidSegments.setStatus("current")
_SlbStatMaintSymFragSessions_Type = Counter32
_SlbStatMaintSymFragSessions_Object = MibScalar
slbStatMaintSymFragSessions = _SlbStatMaintSymFragSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 28),
    _SlbStatMaintSymFragSessions_Type()
)
slbStatMaintSymFragSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintSymFragSessions.setStatus("current")
_SlbStatMaintSymSegAllocFails_Type = Counter32
_SlbStatMaintSymSegAllocFails_Object = MibScalar
slbStatMaintSymSegAllocFails = _SlbStatMaintSymSegAllocFails_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 29),
    _SlbStatMaintSymSegAllocFails_Type()
)
slbStatMaintSymSegAllocFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintSymSegAllocFails.setStatus("current")
_SlbStatMaintSymBufferAllocFails_Type = Counter32
_SlbStatMaintSymBufferAllocFails_Object = MibScalar
slbStatMaintSymBufferAllocFails = _SlbStatMaintSymBufferAllocFails_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 30),
    _SlbStatMaintSymBufferAllocFails_Type()
)
slbStatMaintSymBufferAllocFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintSymBufferAllocFails.setStatus("current")
_SlbStatMaintSymConnAllocFails_Type = Counter32
_SlbStatMaintSymConnAllocFails_Object = MibScalar
slbStatMaintSymConnAllocFails = _SlbStatMaintSymConnAllocFails_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 31),
    _SlbStatMaintSymConnAllocFails_Type()
)
slbStatMaintSymConnAllocFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintSymConnAllocFails.setStatus("current")
_SlbStatMaintSymInvalidBuffers_Type = Counter32
_SlbStatMaintSymInvalidBuffers_Object = MibScalar
slbStatMaintSymInvalidBuffers = _SlbStatMaintSymInvalidBuffers_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 32),
    _SlbStatMaintSymInvalidBuffers_Type()
)
slbStatMaintSymInvalidBuffers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintSymInvalidBuffers.setStatus("current")
_SlbStatMaintSymSegReallocFails_Type = Counter32
_SlbStatMaintSymSegReallocFails_Object = MibScalar
slbStatMaintSymSegReallocFails = _SlbStatMaintSymSegReallocFails_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 33),
    _SlbStatMaintSymSegReallocFails_Type()
)
slbStatMaintSymSegReallocFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintSymSegReallocFails.setStatus("current")
_SlbStatMaintSymPacketsIn_Type = Counter32
_SlbStatMaintSymPacketsIn_Object = MibScalar
slbStatMaintSymPacketsIn = _SlbStatMaintSymPacketsIn_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 34),
    _SlbStatMaintSymPacketsIn_Type()
)
slbStatMaintSymPacketsIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintSymPacketsIn.setStatus("current")
_SlbStatMaintSymPacketsWithNoData_Type = Counter32
_SlbStatMaintSymPacketsWithNoData_Object = MibScalar
slbStatMaintSymPacketsWithNoData = _SlbStatMaintSymPacketsWithNoData_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 35),
    _SlbStatMaintSymPacketsWithNoData_Type()
)
slbStatMaintSymPacketsWithNoData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintSymPacketsWithNoData.setStatus("current")
_SlbStatMaintSymTcpPackets_Type = Counter32
_SlbStatMaintSymTcpPackets_Object = MibScalar
slbStatMaintSymTcpPackets = _SlbStatMaintSymTcpPackets_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 36),
    _SlbStatMaintSymTcpPackets_Type()
)
slbStatMaintSymTcpPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintSymTcpPackets.setStatus("current")
_SlbStatMaintSymUdpPackets_Type = Counter32
_SlbStatMaintSymUdpPackets_Object = MibScalar
slbStatMaintSymUdpPackets = _SlbStatMaintSymUdpPackets_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 37),
    _SlbStatMaintSymUdpPackets_Type()
)
slbStatMaintSymUdpPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintSymUdpPackets.setStatus("current")
_SlbStatMaintSymIcmpPackets_Type = Counter32
_SlbStatMaintSymIcmpPackets_Object = MibScalar
slbStatMaintSymIcmpPackets = _SlbStatMaintSymIcmpPackets_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 38),
    _SlbStatMaintSymIcmpPackets_Type()
)
slbStatMaintSymIcmpPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintSymIcmpPackets.setStatus("current")
_SlbStatMaintSymOtherPackets_Type = Counter32
_SlbStatMaintSymOtherPackets_Object = MibScalar
slbStatMaintSymOtherPackets = _SlbStatMaintSymOtherPackets_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 39),
    _SlbStatMaintSymOtherPackets_Type()
)
slbStatMaintSymOtherPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintSymOtherPackets.setStatus("current")
_SlbStatMaintSymMatchCount_Type = Counter32
_SlbStatMaintSymMatchCount_Object = MibScalar
slbStatMaintSymMatchCount = _SlbStatMaintSymMatchCount_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 40),
    _SlbStatMaintSymMatchCount_Type()
)
slbStatMaintSymMatchCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintSymMatchCount.setStatus("current")
_SlbStatMaintSymFetchErrors_Type = Counter32
_SlbStatMaintSymFetchErrors_Object = MibScalar
slbStatMaintSymFetchErrors = _SlbStatMaintSymFetchErrors_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 41),
    _SlbStatMaintSymFetchErrors_Type()
)
slbStatMaintSymFetchErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintSymFetchErrors.setStatus("current")
_SlbStatMaintSymTruncPayloadToMp_Type = Counter32
_SlbStatMaintSymTruncPayloadToMp_Object = MibScalar
slbStatMaintSymTruncPayloadToMp = _SlbStatMaintSymTruncPayloadToMp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 42),
    _SlbStatMaintSymTruncPayloadToMp_Type()
)
slbStatMaintSymTruncPayloadToMp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintSymTruncPayloadToMp.setStatus("current")
_SlbStatMaintSymPacketsInFastPath_Type = Counter32
_SlbStatMaintSymPacketsInFastPath_Object = MibScalar
slbStatMaintSymPacketsInFastPath = _SlbStatMaintSymPacketsInFastPath_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 5, 43),
    _SlbStatMaintSymPacketsInFastPath_Type()
)
slbStatMaintSymPacketsInFastPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatMaintSymPacketsInFastPath.setStatus("current")
_FilterStats_ObjectIdentity = ObjectIdentity
filterStats = _FilterStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 6)
)
_FltStatTable_Object = MibTable
fltStatTable = _FltStatTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 6, 1)
)
if mibBuilder.loadTexts:
    fltStatTable.setStatus("current")
_FltStatTableEntry_Object = MibTableRow
fltStatTableEntry = _FltStatTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 6, 1, 1)
)
fltStatTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "fltStatFltIndex"),
)
if mibBuilder.loadTexts:
    fltStatTableEntry.setStatus("current")
_FltStatFltIndex_Type = Integer32
_FltStatFltIndex_Object = MibTableColumn
fltStatFltIndex = _FltStatFltIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 6, 1, 1, 1),
    _FltStatFltIndex_Type()
)
fltStatFltIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltStatFltIndex.setStatus("current")
_FltStatFltFirings_Type = Counter32
_FltStatFltFirings_Object = MibTableColumn
fltStatFltFirings = _FltStatFltFirings_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 6, 1, 1, 2),
    _FltStatFltFirings_Type()
)
fltStatFltFirings.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fltStatFltFirings.setStatus("current")
_GslbStats_ObjectIdentity = ObjectIdentity
gslbStats = _GslbStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7)
)
_GslbStatRemRealServerTable_Object = MibTable
gslbStatRemRealServerTable = _GslbStatRemRealServerTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 1)
)
if mibBuilder.loadTexts:
    gslbStatRemRealServerTable.setStatus("current")
_GslbStatRemRealServerEntry_Object = MibTableRow
gslbStatRemRealServerEntry = _GslbStatRemRealServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 1, 1)
)
gslbStatRemRealServerEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbStatRemRealServerIndex"),
)
if mibBuilder.loadTexts:
    gslbStatRemRealServerEntry.setStatus("current")
_GslbStatRemRealServerIndex_Type = Integer32
_GslbStatRemRealServerIndex_Object = MibTableColumn
gslbStatRemRealServerIndex = _GslbStatRemRealServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 1, 1, 1),
    _GslbStatRemRealServerIndex_Type()
)
gslbStatRemRealServerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRemRealServerIndex.setStatus("current")
_GslbStatRemRealServerDnsHandoffs_Type = Counter32
_GslbStatRemRealServerDnsHandoffs_Object = MibTableColumn
gslbStatRemRealServerDnsHandoffs = _GslbStatRemRealServerDnsHandoffs_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 1, 1, 2),
    _GslbStatRemRealServerDnsHandoffs_Type()
)
gslbStatRemRealServerDnsHandoffs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRemRealServerDnsHandoffs.setStatus("current")
_GslbStatRemRealServerHttpRedirs_Type = Counter32
_GslbStatRemRealServerHttpRedirs_Object = MibTableColumn
gslbStatRemRealServerHttpRedirs = _GslbStatRemRealServerHttpRedirs_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 1, 1, 3),
    _GslbStatRemRealServerHttpRedirs_Type()
)
gslbStatRemRealServerHttpRedirs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRemRealServerHttpRedirs.setStatus("current")
_GslbMaintStats_ObjectIdentity = ObjectIdentity
gslbMaintStats = _GslbMaintStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2)
)
_GslbStatMaintInGoodSiteUpdates_Type = Counter32
_GslbStatMaintInGoodSiteUpdates_Object = MibScalar
gslbStatMaintInGoodSiteUpdates = _GslbStatMaintInGoodSiteUpdates_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 1),
    _GslbStatMaintInGoodSiteUpdates_Type()
)
gslbStatMaintInGoodSiteUpdates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintInGoodSiteUpdates.setStatus("current")
_GslbStatMaintInBadSiteUpdates_Type = Counter32
_GslbStatMaintInBadSiteUpdates_Object = MibScalar
gslbStatMaintInBadSiteUpdates = _GslbStatMaintInBadSiteUpdates_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 2),
    _GslbStatMaintInBadSiteUpdates_Type()
)
gslbStatMaintInBadSiteUpdates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintInBadSiteUpdates.setStatus("current")
_GslbStatMaintOutSiteUpdates_Type = Counter32
_GslbStatMaintOutSiteUpdates_Object = MibScalar
gslbStatMaintOutSiteUpdates = _GslbStatMaintOutSiteUpdates_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 3),
    _GslbStatMaintOutSiteUpdates_Type()
)
gslbStatMaintOutSiteUpdates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintOutSiteUpdates.setStatus("current")
_GslbStatMaintInGoodSiteUpdates2_Type = Counter32
_GslbStatMaintInGoodSiteUpdates2_Object = MibScalar
gslbStatMaintInGoodSiteUpdates2 = _GslbStatMaintInGoodSiteUpdates2_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 4),
    _GslbStatMaintInGoodSiteUpdates2_Type()
)
gslbStatMaintInGoodSiteUpdates2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintInGoodSiteUpdates2.setStatus("current")
_GslbStatMaintOutSiteUpdates2_Type = Counter32
_GslbStatMaintOutSiteUpdates2_Object = MibScalar
gslbStatMaintOutSiteUpdates2 = _GslbStatMaintOutSiteUpdates2_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 5),
    _GslbStatMaintOutSiteUpdates2_Type()
)
gslbStatMaintOutSiteUpdates2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintOutSiteUpdates2.setStatus("current")
_GslbStatMaintLocalSitePers_Type = Counter32
_GslbStatMaintLocalSitePers_Object = MibScalar
gslbStatMaintLocalSitePers = _GslbStatMaintLocalSitePers_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 8),
    _GslbStatMaintLocalSitePers_Type()
)
gslbStatMaintLocalSitePers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintLocalSitePers.setStatus("current")
_GslbStatMaintInDns_Type = Counter32
_GslbStatMaintInDns_Object = MibScalar
gslbStatMaintInDns = _GslbStatMaintInDns_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 10),
    _GslbStatMaintInDns_Type()
)
gslbStatMaintInDns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintInDns.setStatus("current")
_GslbStatMaintInBadDns_Type = Counter32
_GslbStatMaintInBadDns_Object = MibScalar
gslbStatMaintInBadDns = _GslbStatMaintInBadDns_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 11),
    _GslbStatMaintInBadDns_Type()
)
gslbStatMaintInBadDns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintInBadDns.setStatus("current")
_GslbStatMaintOutDns_Type = Counter32
_GslbStatMaintOutDns_Object = MibScalar
gslbStatMaintOutDns = _GslbStatMaintOutDns_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 12),
    _GslbStatMaintOutDns_Type()
)
gslbStatMaintOutDns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintOutDns.setStatus("current")
_GslbStatMaintInHttp_Type = Counter32
_GslbStatMaintInHttp_Object = MibScalar
gslbStatMaintInHttp = _GslbStatMaintInHttp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 13),
    _GslbStatMaintInHttp_Type()
)
gslbStatMaintInHttp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintInHttp.setStatus("current")
_GslbStatMaintInBadHttp_Type = Counter32
_GslbStatMaintInBadHttp_Object = MibScalar
gslbStatMaintInBadHttp = _GslbStatMaintInBadHttp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 14),
    _GslbStatMaintInBadHttp_Type()
)
gslbStatMaintInBadHttp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintInBadHttp.setStatus("current")
_GslbStatMaintOutHttp_Type = Counter32
_GslbStatMaintOutHttp_Object = MibScalar
gslbStatMaintOutHttp = _GslbStatMaintOutHttp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 15),
    _GslbStatMaintOutHttp_Type()
)
gslbStatMaintOutHttp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintOutHttp.setStatus("current")
_GslbStatMaintNoServer_Type = Counter32
_GslbStatMaintNoServer_Object = MibScalar
gslbStatMaintNoServer = _GslbStatMaintNoServer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 16),
    _GslbStatMaintNoServer_Type()
)
gslbStatMaintNoServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintNoServer.setStatus("current")
_GslbStatMaintNoDomain_Type = Counter32
_GslbStatMaintNoDomain_Object = MibScalar
gslbStatMaintNoDomain = _GslbStatMaintNoDomain_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 17),
    _GslbStatMaintNoDomain_Type()
)
gslbStatMaintNoDomain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintNoDomain.setStatus("current")
_GslbStatMaintHostHits_Type = Counter32
_GslbStatMaintHostHits_Object = MibScalar
gslbStatMaintHostHits = _GslbStatMaintHostHits_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 18),
    _GslbStatMaintHostHits_Type()
)
gslbStatMaintHostHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintHostHits.setStatus("current")
_GslbStatMaintRuleHits_Type = Counter32
_GslbStatMaintRuleHits_Object = MibScalar
gslbStatMaintRuleHits = _GslbStatMaintRuleHits_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 19),
    _GslbStatMaintRuleHits_Type()
)
gslbStatMaintRuleHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintRuleHits.setStatus("current")
_GslbStatMaintVirtHits_Type = Counter32
_GslbStatMaintVirtHits_Object = MibScalar
gslbStatMaintVirtHits = _GslbStatMaintVirtHits_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 20),
    _GslbStatMaintVirtHits_Type()
)
gslbStatMaintVirtHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintVirtHits.setStatus("current")
_GslbStatMaintNoServerHost_Type = Counter32
_GslbStatMaintNoServerHost_Object = MibScalar
gslbStatMaintNoServerHost = _GslbStatMaintNoServerHost_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 21),
    _GslbStatMaintNoServerHost_Type()
)
gslbStatMaintNoServerHost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintNoServerHost.setStatus("current")
_GslbStatMaintNoServerRule_Type = Counter32
_GslbStatMaintNoServerRule_Object = MibScalar
gslbStatMaintNoServerRule = _GslbStatMaintNoServerRule_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 22),
    _GslbStatMaintNoServerRule_Type()
)
gslbStatMaintNoServerRule.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintNoServerRule.setStatus("current")
_GslbStatMaintNoServerVirt_Type = Counter32
_GslbStatMaintNoServerVirt_Object = MibScalar
gslbStatMaintNoServerVirt = _GslbStatMaintNoServerVirt_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 23),
    _GslbStatMaintNoServerVirt_Type()
)
gslbStatMaintNoServerVirt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintNoServerVirt.setStatus("current")


class _GslbStatMaintLastNoResultDomain_Type(DisplayString):
    """Custom type gslbStatMaintLastNoResultDomain based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_GslbStatMaintLastNoResultDomain_Type.__name__ = "DisplayString"
_GslbStatMaintLastNoResultDomain_Object = MibScalar
gslbStatMaintLastNoResultDomain = _GslbStatMaintLastNoResultDomain_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 24),
    _GslbStatMaintLastNoResultDomain_Type()
)
gslbStatMaintLastNoResultDomain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintLastNoResultDomain.setStatus("current")
_GslbStatMaintLastSrcIp_Type = IpAddress
_GslbStatMaintLastSrcIp_Object = MibScalar
gslbStatMaintLastSrcIp = _GslbStatMaintLastSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 25),
    _GslbStatMaintLastSrcIp_Type()
)
gslbStatMaintLastSrcIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintLastSrcIp.setStatus("current")
_GslbStatMaintThresholdHits_Type = Counter32
_GslbStatMaintThresholdHits_Object = MibScalar
gslbStatMaintThresholdHits = _GslbStatMaintThresholdHits_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 26),
    _GslbStatMaintThresholdHits_Type()
)
gslbStatMaintThresholdHits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintThresholdHits.setStatus("current")


class _GslbStatMaintLastSrcIpV6_Type(DisplayString):
    """Custom type gslbStatMaintLastSrcIpV6 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_GslbStatMaintLastSrcIpV6_Type.__name__ = "DisplayString"
_GslbStatMaintLastSrcIpV6_Object = MibScalar
gslbStatMaintLastSrcIpV6 = _GslbStatMaintLastSrcIpV6_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 2, 27),
    _GslbStatMaintLastSrcIpV6_Type()
)
gslbStatMaintLastSrcIpV6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatMaintLastSrcIpV6.setStatus("current")
_GslbStatGroupTable_Object = MibTable
gslbStatGroupTable = _GslbStatGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 3)
)
if mibBuilder.loadTexts:
    gslbStatGroupTable.setStatus("current")
_GslbStatGroupEntry_Object = MibTableRow
gslbStatGroupEntry = _GslbStatGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 3, 1)
)
gslbStatGroupEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbStatGroupIndex"),
)
if mibBuilder.loadTexts:
    gslbStatGroupEntry.setStatus("current")
_GslbStatGroupIndex_Type = Integer32
_GslbStatGroupIndex_Object = MibTableColumn
gslbStatGroupIndex = _GslbStatGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 3, 1, 1),
    _GslbStatGroupIndex_Type()
)
gslbStatGroupIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatGroupIndex.setStatus("current")
_GslbStatGroupDnsHandoffs_Type = Counter32
_GslbStatGroupDnsHandoffs_Object = MibTableColumn
gslbStatGroupDnsHandoffs = _GslbStatGroupDnsHandoffs_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 3, 1, 2),
    _GslbStatGroupDnsHandoffs_Type()
)
gslbStatGroupDnsHandoffs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatGroupDnsHandoffs.setStatus("current")
_GslbStatGroupHttpRedirs_Type = Counter32
_GslbStatGroupHttpRedirs_Object = MibTableColumn
gslbStatGroupHttpRedirs = _GslbStatGroupHttpRedirs_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 3, 1, 3),
    _GslbStatGroupHttpRedirs_Type()
)
gslbStatGroupHttpRedirs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatGroupHttpRedirs.setStatus("current")
_GslbStatVirtServerTable_Object = MibTable
gslbStatVirtServerTable = _GslbStatVirtServerTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 4)
)
if mibBuilder.loadTexts:
    gslbStatVirtServerTable.setStatus("current")
_GslbStatVirtServerEntry_Object = MibTableRow
gslbStatVirtServerEntry = _GslbStatVirtServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 4, 1)
)
gslbStatVirtServerEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbStatVirtServerIdx"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbStatVirtServerServiceIdx"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbStatVirtServerRserverIdx"),
)
if mibBuilder.loadTexts:
    gslbStatVirtServerEntry.setStatus("current")
_GslbStatVirtServerIdx_Type = Integer32
_GslbStatVirtServerIdx_Object = MibTableColumn
gslbStatVirtServerIdx = _GslbStatVirtServerIdx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 4, 1, 1),
    _GslbStatVirtServerIdx_Type()
)
gslbStatVirtServerIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatVirtServerIdx.setStatus("current")
_GslbStatVirtServerServiceIdx_Type = Integer32
_GslbStatVirtServerServiceIdx_Object = MibTableColumn
gslbStatVirtServerServiceIdx = _GslbStatVirtServerServiceIdx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 4, 1, 2),
    _GslbStatVirtServerServiceIdx_Type()
)
gslbStatVirtServerServiceIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatVirtServerServiceIdx.setStatus("current")
_GslbStatVirtServerRserverIdx_Type = Integer32
_GslbStatVirtServerRserverIdx_Object = MibTableColumn
gslbStatVirtServerRserverIdx = _GslbStatVirtServerRserverIdx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 4, 1, 3),
    _GslbStatVirtServerRserverIdx_Type()
)
gslbStatVirtServerRserverIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatVirtServerRserverIdx.setStatus("current")
_GslbStatVirtServerVirtPort_Type = Integer32
_GslbStatVirtServerVirtPort_Object = MibTableColumn
gslbStatVirtServerVirtPort = _GslbStatVirtServerVirtPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 4, 1, 4),
    _GslbStatVirtServerVirtPort_Type()
)
gslbStatVirtServerVirtPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatVirtServerVirtPort.setStatus("current")
_GslbStatVirtServerIpAddress_Type = IpAddress
_GslbStatVirtServerIpAddress_Object = MibTableColumn
gslbStatVirtServerIpAddress = _GslbStatVirtServerIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 4, 1, 5),
    _GslbStatVirtServerIpAddress_Type()
)
gslbStatVirtServerIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatVirtServerIpAddress.setStatus("current")
_GslbStatVirtServerResponseTime_Type = Integer32
_GslbStatVirtServerResponseTime_Object = MibTableColumn
gslbStatVirtServerResponseTime = _GslbStatVirtServerResponseTime_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 4, 1, 6),
    _GslbStatVirtServerResponseTime_Type()
)
gslbStatVirtServerResponseTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatVirtServerResponseTime.setStatus("current")
_GslbStatVirtServerMinSessAvail_Type = Gauge32
_GslbStatVirtServerMinSessAvail_Object = MibTableColumn
gslbStatVirtServerMinSessAvail = _GslbStatVirtServerMinSessAvail_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 4, 1, 7),
    _GslbStatVirtServerMinSessAvail_Type()
)
gslbStatVirtServerMinSessAvail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatVirtServerMinSessAvail.setStatus("current")


class _GslbStatVirtServerDname_Type(DisplayString):
    """Custom type gslbStatVirtServerDname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_GslbStatVirtServerDname_Type.__name__ = "DisplayString"
_GslbStatVirtServerDname_Object = MibTableColumn
gslbStatVirtServerDname = _GslbStatVirtServerDname_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 4, 1, 8),
    _GslbStatVirtServerDname_Type()
)
gslbStatVirtServerDname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatVirtServerDname.setStatus("current")
_GslbStatVirtServerRemSite_Type = Integer32
_GslbStatVirtServerRemSite_Object = MibTableColumn
gslbStatVirtServerRemSite = _GslbStatVirtServerRemSite_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 4, 1, 9),
    _GslbStatVirtServerRemSite_Type()
)
gslbStatVirtServerRemSite.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatVirtServerRemSite.setStatus("current")
_GslbStatVirtDnsDirect_Type = Counter32
_GslbStatVirtDnsDirect_Object = MibTableColumn
gslbStatVirtDnsDirect = _GslbStatVirtDnsDirect_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 4, 1, 10),
    _GslbStatVirtDnsDirect_Type()
)
gslbStatVirtDnsDirect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatVirtDnsDirect.setStatus("current")
_GslbStatRemSiteTable_Object = MibTable
gslbStatRemSiteTable = _GslbStatRemSiteTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 5)
)
if mibBuilder.loadTexts:
    gslbStatRemSiteTable.setStatus("current")
_GslbStatRemSiteTableEntry_Object = MibTableRow
gslbStatRemSiteTableEntry = _GslbStatRemSiteTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 5, 1)
)
gslbStatRemSiteTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbStatRemSiteIdx"),
)
if mibBuilder.loadTexts:
    gslbStatRemSiteTableEntry.setStatus("current")
_GslbStatRemSiteIdx_Type = Integer32
_GslbStatRemSiteIdx_Object = MibTableColumn
gslbStatRemSiteIdx = _GslbStatRemSiteIdx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 5, 1, 1),
    _GslbStatRemSiteIdx_Type()
)
gslbStatRemSiteIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRemSiteIdx.setStatus("current")
_GslbStatRemSiteOutUpdates_Type = Counter32
_GslbStatRemSiteOutUpdates_Object = MibTableColumn
gslbStatRemSiteOutUpdates = _GslbStatRemSiteOutUpdates_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 5, 1, 2),
    _GslbStatRemSiteOutUpdates_Type()
)
gslbStatRemSiteOutUpdates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRemSiteOutUpdates.setStatus("current")
_GslbStatRemSiteInUpdates_Type = Counter32
_GslbStatRemSiteInUpdates_Object = MibTableColumn
gslbStatRemSiteInUpdates = _GslbStatRemSiteInUpdates_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 5, 1, 3),
    _GslbStatRemSiteInUpdates_Type()
)
gslbStatRemSiteInUpdates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRemSiteInUpdates.setStatus("current")
_GslbStatRemSiteOutUpdates2_Type = Counter32
_GslbStatRemSiteOutUpdates2_Object = MibTableColumn
gslbStatRemSiteOutUpdates2 = _GslbStatRemSiteOutUpdates2_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 5, 1, 4),
    _GslbStatRemSiteOutUpdates2_Type()
)
gslbStatRemSiteOutUpdates2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRemSiteOutUpdates2.setStatus("current")
_GslbStatRemSiteInUpdates2_Type = Counter32
_GslbStatRemSiteInUpdates2_Object = MibTableColumn
gslbStatRemSiteInUpdates2 = _GslbStatRemSiteInUpdates2_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 5, 1, 5),
    _GslbStatRemSiteInUpdates2_Type()
)
gslbStatRemSiteInUpdates2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRemSiteInUpdates2.setStatus("current")
_GslbStatRemSiteInBadUpdates_Type = Counter32
_GslbStatRemSiteInBadUpdates_Object = MibTableColumn
gslbStatRemSiteInBadUpdates = _GslbStatRemSiteInBadUpdates_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 5, 1, 6),
    _GslbStatRemSiteInBadUpdates_Type()
)
gslbStatRemSiteInBadUpdates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRemSiteInBadUpdates.setStatus("current")
_GslbStatEnhNetworkTable_Object = MibTable
gslbStatEnhNetworkTable = _GslbStatEnhNetworkTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 6)
)
if mibBuilder.loadTexts:
    gslbStatEnhNetworkTable.setStatus("current")
_GslbStatEnhNetworkTableEntry_Object = MibTableRow
gslbStatEnhNetworkTableEntry = _GslbStatEnhNetworkTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 6, 1)
)
gslbStatEnhNetworkTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbStatEnhNetworkIdx"),
)
if mibBuilder.loadTexts:
    gslbStatEnhNetworkTableEntry.setStatus("current")
_GslbStatEnhNetworkIdx_Type = Integer32
_GslbStatEnhNetworkIdx_Object = MibTableColumn
gslbStatEnhNetworkIdx = _GslbStatEnhNetworkIdx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 6, 1, 1),
    _GslbStatEnhNetworkIdx_Type()
)
gslbStatEnhNetworkIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatEnhNetworkIdx.setStatus("current")
_GslbStatEnhNetworkHit_Type = Counter32
_GslbStatEnhNetworkHit_Object = MibTableColumn
gslbStatEnhNetworkHit = _GslbStatEnhNetworkHit_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 6, 1, 2),
    _GslbStatEnhNetworkHit_Type()
)
gslbStatEnhNetworkHit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatEnhNetworkHit.setStatus("current")
_GslbStatRuleTable_Object = MibTable
gslbStatRuleTable = _GslbStatRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 7)
)
if mibBuilder.loadTexts:
    gslbStatRuleTable.setStatus("current")
_GslbStatRuleTableEntry_Object = MibTableRow
gslbStatRuleTableEntry = _GslbStatRuleTableEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 7, 1)
)
gslbStatRuleTableEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbStatRuleIdx"),
)
if mibBuilder.loadTexts:
    gslbStatRuleTableEntry.setStatus("current")
_GslbStatRuleIdx_Type = Integer32
_GslbStatRuleIdx_Object = MibTableColumn
gslbStatRuleIdx = _GslbStatRuleIdx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 7, 1, 1),
    _GslbStatRuleIdx_Type()
)
gslbStatRuleIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRuleIdx.setStatus("current")
_GslbStatRuleLeastconns_Type = Counter32
_GslbStatRuleLeastconns_Object = MibTableColumn
gslbStatRuleLeastconns = _GslbStatRuleLeastconns_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 7, 1, 2),
    _GslbStatRuleLeastconns_Type()
)
gslbStatRuleLeastconns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRuleLeastconns.setStatus("current")
_GslbStatRuleRoundrobin_Type = Counter32
_GslbStatRuleRoundrobin_Object = MibTableColumn
gslbStatRuleRoundrobin = _GslbStatRuleRoundrobin_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 7, 1, 3),
    _GslbStatRuleRoundrobin_Type()
)
gslbStatRuleRoundrobin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRuleRoundrobin.setStatus("current")
_GslbStatRuleMinmisses_Type = Counter32
_GslbStatRuleMinmisses_Object = MibTableColumn
gslbStatRuleMinmisses = _GslbStatRuleMinmisses_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 7, 1, 4),
    _GslbStatRuleMinmisses_Type()
)
gslbStatRuleMinmisses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRuleMinmisses.setStatus("current")
_GslbStatRuleHash_Type = Counter32
_GslbStatRuleHash_Object = MibTableColumn
gslbStatRuleHash = _GslbStatRuleHash_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 7, 1, 5),
    _GslbStatRuleHash_Type()
)
gslbStatRuleHash.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRuleHash.setStatus("current")
_GslbStatRuleResponse_Type = Counter32
_GslbStatRuleResponse_Object = MibTableColumn
gslbStatRuleResponse = _GslbStatRuleResponse_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 7, 1, 6),
    _GslbStatRuleResponse_Type()
)
gslbStatRuleResponse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRuleResponse.setStatus("current")
_GslbStatRuleGeographical_Type = Counter32
_GslbStatRuleGeographical_Object = MibTableColumn
gslbStatRuleGeographical = _GslbStatRuleGeographical_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 7, 1, 7),
    _GslbStatRuleGeographical_Type()
)
gslbStatRuleGeographical.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRuleGeographical.setStatus("current")
_GslbStatRuleNetwork_Type = Counter32
_GslbStatRuleNetwork_Object = MibTableColumn
gslbStatRuleNetwork = _GslbStatRuleNetwork_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 7, 1, 8),
    _GslbStatRuleNetwork_Type()
)
gslbStatRuleNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRuleNetwork.setStatus("current")
_GslbStatRuleRandom_Type = Counter32
_GslbStatRuleRandom_Object = MibTableColumn
gslbStatRuleRandom = _GslbStatRuleRandom_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 7, 1, 9),
    _GslbStatRuleRandom_Type()
)
gslbStatRuleRandom.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRuleRandom.setStatus("current")
_GslbStatRuleAvailability_Type = Counter32
_GslbStatRuleAvailability_Object = MibTableColumn
gslbStatRuleAvailability = _GslbStatRuleAvailability_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 7, 1, 10),
    _GslbStatRuleAvailability_Type()
)
gslbStatRuleAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRuleAvailability.setStatus("current")
_GslbStatRuleQos_Type = Counter32
_GslbStatRuleQos_Object = MibTableColumn
gslbStatRuleQos = _GslbStatRuleQos_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 7, 1, 11),
    _GslbStatRuleQos_Type()
)
gslbStatRuleQos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRuleQos.setStatus("current")
_GslbStatRulePersistence_Type = Counter32
_GslbStatRulePersistence_Object = MibTableColumn
gslbStatRulePersistence = _GslbStatRulePersistence_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 7, 1, 12),
    _GslbStatRulePersistence_Type()
)
gslbStatRulePersistence.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRulePersistence.setStatus("current")
_GslbStatRuleLocal_Type = Counter32
_GslbStatRuleLocal_Object = MibTableColumn
gslbStatRuleLocal = _GslbStatRuleLocal_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 7, 1, 13),
    _GslbStatRuleLocal_Type()
)
gslbStatRuleLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRuleLocal.setStatus("current")
_GslbStatRuleAlways_Type = Counter32
_GslbStatRuleAlways_Object = MibTableColumn
gslbStatRuleAlways = _GslbStatRuleAlways_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 7, 1, 14),
    _GslbStatRuleAlways_Type()
)
gslbStatRuleAlways.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRuleAlways.setStatus("current")
_GslbStatRuleRemote_Type = Counter32
_GslbStatRuleRemote_Object = MibTableColumn
gslbStatRuleRemote = _GslbStatRuleRemote_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 7, 1, 15),
    _GslbStatRuleRemote_Type()
)
gslbStatRuleRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRuleRemote.setStatus("current")
_GslbStatRuleTotal_Type = Counter32
_GslbStatRuleTotal_Object = MibTableColumn
gslbStatRuleTotal = _GslbStatRuleTotal_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 7, 1, 16),
    _GslbStatRuleTotal_Type()
)
gslbStatRuleTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatRuleTotal.setStatus("current")
_GslbStatGeo_ObjectIdentity = ObjectIdentity
gslbStatGeo = _GslbStatGeo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 8)
)
_GslbStatGeoNA_Type = Counter32
_GslbStatGeoNA_Object = MibScalar
gslbStatGeoNA = _GslbStatGeoNA_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 8, 1),
    _GslbStatGeoNA_Type()
)
gslbStatGeoNA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatGeoNA.setStatus("current")
_GslbStatGeoSA_Type = Counter32
_GslbStatGeoSA_Object = MibScalar
gslbStatGeoSA = _GslbStatGeoSA_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 8, 2),
    _GslbStatGeoSA_Type()
)
gslbStatGeoSA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatGeoSA.setStatus("current")
_GslbStatGeoEU_Type = Counter32
_GslbStatGeoEU_Object = MibScalar
gslbStatGeoEU = _GslbStatGeoEU_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 8, 3),
    _GslbStatGeoEU_Type()
)
gslbStatGeoEU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatGeoEU.setStatus("current")
_GslbStatGeoCA_Type = Counter32
_GslbStatGeoCA_Object = MibScalar
gslbStatGeoCA = _GslbStatGeoCA_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 8, 4),
    _GslbStatGeoCA_Type()
)
gslbStatGeoCA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatGeoCA.setStatus("current")
_GslbStatGeoPR_Type = Counter32
_GslbStatGeoPR_Object = MibScalar
gslbStatGeoPR = _GslbStatGeoPR_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 8, 5),
    _GslbStatGeoPR_Type()
)
gslbStatGeoPR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatGeoPR.setStatus("current")
_GslbStatGeoSS_Type = Counter32
_GslbStatGeoSS_Object = MibScalar
gslbStatGeoSS = _GslbStatGeoSS_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 8, 6),
    _GslbStatGeoSS_Type()
)
gslbStatGeoSS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatGeoSS.setStatus("current")
_GslbStatGeoJP_Type = Counter32
_GslbStatGeoJP_Object = MibScalar
gslbStatGeoJP = _GslbStatGeoJP_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 8, 7),
    _GslbStatGeoJP_Type()
)
gslbStatGeoJP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatGeoJP.setStatus("current")
_GslbStatGeoTotal_Type = Counter32
_GslbStatGeoTotal_Object = MibScalar
gslbStatGeoTotal = _GslbStatGeoTotal_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 8, 8),
    _GslbStatGeoTotal_Type()
)
gslbStatGeoTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatGeoTotal.setStatus("current")
_GslbStatGeoAF_Type = Counter32
_GslbStatGeoAF_Object = MibScalar
gslbStatGeoAF = _GslbStatGeoAF_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 8, 9),
    _GslbStatGeoAF_Type()
)
gslbStatGeoAF.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatGeoAF.setStatus("current")
_GslbStatPers_ObjectIdentity = ObjectIdentity
gslbStatPers = _GslbStatPers_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 9)
)
_GslbStatPersCurrent_Type = Counter32
_GslbStatPersCurrent_Object = MibScalar
gslbStatPersCurrent = _GslbStatPersCurrent_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 9, 1),
    _GslbStatPersCurrent_Type()
)
gslbStatPersCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatPersCurrent.setStatus("current")
_GslbStatPersHiwat_Type = Counter32
_GslbStatPersHiwat_Object = MibScalar
gslbStatPersHiwat = _GslbStatPersHiwat_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 9, 2),
    _GslbStatPersHiwat_Type()
)
gslbStatPersHiwat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatPersHiwat.setStatus("current")
_GslbStatPersMax_Type = Counter32
_GslbStatPersMax_Object = MibScalar
gslbStatPersMax = _GslbStatPersMax_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 7, 9, 3),
    _GslbStatPersMax_Type()
)
gslbStatPersMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbStatPersMax.setStatus("current")
_WapStats_ObjectIdentity = ObjectIdentity
wapStats = _WapStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 8)
)
_RadiusAcctReqsStats_ObjectIdentity = ObjectIdentity
radiusAcctReqsStats = _RadiusAcctReqsStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 8, 1)
)
_RadiusAcctReqs_Type = Counter32
_RadiusAcctReqs_Object = MibScalar
radiusAcctReqs = _RadiusAcctReqs_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 8, 1, 1),
    _RadiusAcctReqs_Type()
)
radiusAcctReqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusAcctReqs.setStatus("current")
_RadiusAcctWrapReqs_Type = Counter32
_RadiusAcctWrapReqs_Object = MibScalar
radiusAcctWrapReqs = _RadiusAcctWrapReqs_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 8, 1, 2),
    _RadiusAcctWrapReqs_Type()
)
radiusAcctWrapReqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusAcctWrapReqs.setStatus("current")
_RadiusAcctStartReqs_Type = Counter32
_RadiusAcctStartReqs_Object = MibScalar
radiusAcctStartReqs = _RadiusAcctStartReqs_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 8, 1, 3),
    _RadiusAcctStartReqs_Type()
)
radiusAcctStartReqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusAcctStartReqs.setStatus("current")
_RadiusAcctUpdateReqs_Type = Counter32
_RadiusAcctUpdateReqs_Object = MibScalar
radiusAcctUpdateReqs = _RadiusAcctUpdateReqs_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 8, 1, 4),
    _RadiusAcctUpdateReqs_Type()
)
radiusAcctUpdateReqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusAcctUpdateReqs.setStatus("current")
_RadiusAcctStopReqs_Type = Counter32
_RadiusAcctStopReqs_Object = MibScalar
radiusAcctStopReqs = _RadiusAcctStopReqs_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 8, 1, 5),
    _RadiusAcctStopReqs_Type()
)
radiusAcctStopReqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusAcctStopReqs.setStatus("current")
_RadiusAcctBadReqs_Type = Counter32
_RadiusAcctBadReqs_Object = MibScalar
radiusAcctBadReqs = _RadiusAcctBadReqs_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 8, 1, 6),
    _RadiusAcctBadReqs_Type()
)
radiusAcctBadReqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusAcctBadReqs.setStatus("current")
_RadiusAcctAddSessionReqs_Type = Counter32
_RadiusAcctAddSessionReqs_Object = MibScalar
radiusAcctAddSessionReqs = _RadiusAcctAddSessionReqs_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 8, 1, 7),
    _RadiusAcctAddSessionReqs_Type()
)
radiusAcctAddSessionReqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusAcctAddSessionReqs.setStatus("current")
_RadiusAcctDeleteSessionReqs_Type = Counter32
_RadiusAcctDeleteSessionReqs_Object = MibScalar
radiusAcctDeleteSessionReqs = _RadiusAcctDeleteSessionReqs_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 8, 1, 8),
    _RadiusAcctDeleteSessionReqs_Type()
)
radiusAcctDeleteSessionReqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusAcctDeleteSessionReqs.setStatus("current")
_RadiusAcctReqFailsSPDead_Type = Counter32
_RadiusAcctReqFailsSPDead_Object = MibScalar
radiusAcctReqFailsSPDead = _RadiusAcctReqFailsSPDead_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 8, 1, 10),
    _RadiusAcctReqFailsSPDead_Type()
)
radiusAcctReqFailsSPDead.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusAcctReqFailsSPDead.setStatus("current")
_RadiusAcctReqFailsDMAFails_Type = Counter32
_RadiusAcctReqFailsDMAFails_Object = MibScalar
radiusAcctReqFailsDMAFails = _RadiusAcctReqFailsDMAFails_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 8, 1, 11),
    _RadiusAcctReqFailsDMAFails_Type()
)
radiusAcctReqFailsDMAFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusAcctReqFailsDMAFails.setStatus("current")
_RadiusAcctReqWithFramedIp_Type = Counter32
_RadiusAcctReqWithFramedIp_Object = MibScalar
radiusAcctReqWithFramedIp = _RadiusAcctReqWithFramedIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 8, 1, 12),
    _RadiusAcctReqWithFramedIp_Type()
)
radiusAcctReqWithFramedIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusAcctReqWithFramedIp.setStatus("current")
_RadiusAcctReqWithoutFramedIp_Type = Counter32
_RadiusAcctReqWithoutFramedIp_Object = MibScalar
radiusAcctReqWithoutFramedIp = _RadiusAcctReqWithoutFramedIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 8, 1, 13),
    _RadiusAcctReqWithoutFramedIp_Type()
)
radiusAcctReqWithoutFramedIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    radiusAcctReqWithoutFramedIp.setStatus("current")
_TpcpAddSessReqsStats_ObjectIdentity = ObjectIdentity
tpcpAddSessReqsStats = _TpcpAddSessReqsStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 8, 2)
)
_TpcpAddSessReqs_Type = Counter32
_TpcpAddSessReqs_Object = MibScalar
tpcpAddSessReqs = _TpcpAddSessReqs_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 8, 2, 1),
    _TpcpAddSessReqs_Type()
)
tpcpAddSessReqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tpcpAddSessReqs.setStatus("current")
_TpcpAddSessReqsFailsSPDead_Type = Counter32
_TpcpAddSessReqsFailsSPDead_Object = MibScalar
tpcpAddSessReqsFailsSPDead = _TpcpAddSessReqsFailsSPDead_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 8, 2, 3),
    _TpcpAddSessReqsFailsSPDead_Type()
)
tpcpAddSessReqsFailsSPDead.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tpcpAddSessReqsFailsSPDead.setStatus("current")
_TpcpDeleteSessReqsStats_ObjectIdentity = ObjectIdentity
tpcpDeleteSessReqsStats = _TpcpDeleteSessReqsStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 8, 3)
)
_TpcpDeleteSessReqs_Type = Counter32
_TpcpDeleteSessReqs_Object = MibScalar
tpcpDeleteSessReqs = _TpcpDeleteSessReqs_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 8, 3, 1),
    _TpcpDeleteSessReqs_Type()
)
tpcpDeleteSessReqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tpcpDeleteSessReqs.setStatus("current")
_TpcpDeleteSessReqsFailsSPDead_Type = Counter32
_TpcpDeleteSessReqsFailsSPDead_Object = MibScalar
tpcpDeleteSessReqsFailsSPDead = _TpcpDeleteSessReqsFailsSPDead_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 8, 3, 3),
    _TpcpDeleteSessReqsFailsSPDead_Type()
)
tpcpDeleteSessReqsFailsSPDead.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tpcpDeleteSessReqsFailsSPDead.setStatus("current")
_WapRequestToWrongSP_Type = Counter32
_WapRequestToWrongSP_Object = MibScalar
wapRequestToWrongSP = _WapRequestToWrongSP_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 8, 4),
    _WapRequestToWrongSP_Type()
)
wapRequestToWrongSP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wapRequestToWrongSP.setStatus("current")
_FtpStats_ObjectIdentity = ObjectIdentity
ftpStats = _FtpStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 10)
)
_FtpSlbStatTotal_Type = Counter32
_FtpSlbStatTotal_Object = MibScalar
ftpSlbStatTotal = _FtpSlbStatTotal_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 10, 1),
    _FtpSlbStatTotal_Type()
)
ftpSlbStatTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpSlbStatTotal.setStatus("current")
_FtpNatStatTotal_Type = Counter32
_FtpNatStatTotal_Object = MibScalar
ftpNatStatTotal = _FtpNatStatTotal_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 10, 2),
    _FtpNatStatTotal_Type()
)
ftpNatStatTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpNatStatTotal.setStatus("current")
_FtpStatActiveNatIndex_Type = Counter32
_FtpStatActiveNatIndex_Object = MibScalar
ftpStatActiveNatIndex = _FtpStatActiveNatIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 10, 3),
    _FtpStatActiveNatIndex_Type()
)
ftpStatActiveNatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpStatActiveNatIndex.setStatus("current")
_FtpStatNatAckSeqDiff_Type = Counter32
_FtpStatNatAckSeqDiff_Object = MibScalar
ftpStatNatAckSeqDiff = _FtpStatNatAckSeqDiff_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 10, 4),
    _FtpStatNatAckSeqDiff_Type()
)
ftpStatNatAckSeqDiff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpStatNatAckSeqDiff.setStatus("current")
_FtpStatSlbParseIndex_Type = Counter32
_FtpStatSlbParseIndex_Object = MibScalar
ftpStatSlbParseIndex = _FtpStatSlbParseIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 10, 5),
    _FtpStatSlbParseIndex_Type()
)
ftpStatSlbParseIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpStatSlbParseIndex.setStatus("current")
_FtpStatSlbParseAckSeqDiff_Type = Counter32
_FtpStatSlbParseAckSeqDiff_Object = MibScalar
ftpStatSlbParseAckSeqDiff = _FtpStatSlbParseAckSeqDiff_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 10, 6),
    _FtpStatSlbParseAckSeqDiff_Type()
)
ftpStatSlbParseAckSeqDiff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpStatSlbParseAckSeqDiff.setStatus("current")
_FtpStatModeSwitchError_Type = Counter32
_FtpStatModeSwitchError_Object = MibScalar
ftpStatModeSwitchError = _FtpStatModeSwitchError_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 10, 7),
    _FtpStatModeSwitchError_Type()
)
ftpStatModeSwitchError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ftpStatModeSwitchError.setStatus("current")
_RtspStats_ObjectIdentity = ObjectIdentity
rtspStats = _RtspStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 11)
)
_RtspStatControlConns_Type = Counter32
_RtspStatControlConns_Object = MibScalar
rtspStatControlConns = _RtspStatControlConns_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 11, 1),
    _RtspStatControlConns_Type()
)
rtspStatControlConns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rtspStatControlConns.setStatus("current")
_RtspStatUDPStreams_Type = Counter32
_RtspStatUDPStreams_Object = MibScalar
rtspStatUDPStreams = _RtspStatUDPStreams_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 11, 2),
    _RtspStatUDPStreams_Type()
)
rtspStatUDPStreams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rtspStatUDPStreams.setStatus("current")
_RtspStatRedirects_Type = Counter32
_RtspStatRedirects_Object = MibScalar
rtspStatRedirects = _RtspStatRedirects_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 11, 3),
    _RtspStatRedirects_Type()
)
rtspStatRedirects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rtspStatRedirects.setStatus("current")
_RtspStatConnDenied_Type = Counter32
_RtspStatConnDenied_Object = MibScalar
rtspStatConnDenied = _RtspStatConnDenied_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 11, 4),
    _RtspStatConnDenied_Type()
)
rtspStatConnDenied.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rtspStatConnDenied.setStatus("current")
_RtspStatAllocFails_Type = Counter32
_RtspStatAllocFails_Object = MibScalar
rtspStatAllocFails = _RtspStatAllocFails_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 11, 5),
    _RtspStatAllocFails_Type()
)
rtspStatAllocFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rtspStatAllocFails.setStatus("current")
_RtspStatBufferAllocs_Type = Gauge32
_RtspStatBufferAllocs_Object = MibScalar
rtspStatBufferAllocs = _RtspStatBufferAllocs_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 11, 6),
    _RtspStatBufferAllocs_Type()
)
rtspStatBufferAllocs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rtspStatBufferAllocs.setStatus("current")
_TcpLimitStats_ObjectIdentity = ObjectIdentity
tcpLimitStats = _TcpLimitStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 12)
)
_TcpLimitStatHoldDowns_Type = Counter32
_TcpLimitStatHoldDowns_Object = MibScalar
tcpLimitStatHoldDowns = _TcpLimitStatHoldDowns_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 12, 1),
    _TcpLimitStatHoldDowns_Type()
)
tcpLimitStatHoldDowns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpLimitStatHoldDowns.setStatus("current")
_TcpLimitStatClientEntries_Type = Gauge32
_TcpLimitStatClientEntries_Object = MibScalar
tcpLimitStatClientEntries = _TcpLimitStatClientEntries_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 12, 2),
    _TcpLimitStatClientEntries_Type()
)
tcpLimitStatClientEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tcpLimitStatClientEntries.setStatus("current")
_UdpLimitStatHoldDowns_Type = Counter32
_UdpLimitStatHoldDowns_Object = MibScalar
udpLimitStatHoldDowns = _UdpLimitStatHoldDowns_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 12, 3),
    _UdpLimitStatHoldDowns_Type()
)
udpLimitStatHoldDowns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udpLimitStatHoldDowns.setStatus("current")
_IcmpLimitStatHoldDowns_Type = Counter32
_IcmpLimitStatHoldDowns_Object = MibScalar
icmpLimitStatHoldDowns = _IcmpLimitStatHoldDowns_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 12, 4),
    _IcmpLimitStatHoldDowns_Type()
)
icmpLimitStatHoldDowns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpLimitStatHoldDowns.setStatus("current")
_UdpLimitStatClientEntries_Type = Counter32
_UdpLimitStatClientEntries_Object = MibScalar
udpLimitStatClientEntries = _UdpLimitStatClientEntries_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 12, 5),
    _UdpLimitStatClientEntries_Type()
)
udpLimitStatClientEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    udpLimitStatClientEntries.setStatus("current")
_IcmpLimitStatClientEntries_Type = Counter32
_IcmpLimitStatClientEntries_Object = MibScalar
icmpLimitStatClientEntries = _IcmpLimitStatClientEntries_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 12, 6),
    _IcmpLimitStatClientEntries_Type()
)
icmpLimitStatClientEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    icmpLimitStatClientEntries.setStatus("current")
_DnsSlbStats_ObjectIdentity = ObjectIdentity
dnsSlbStats = _DnsSlbStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 13)
)
_DnsSlbStatTCPQueries_Type = Counter32
_DnsSlbStatTCPQueries_Object = MibScalar
dnsSlbStatTCPQueries = _DnsSlbStatTCPQueries_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 13, 1),
    _DnsSlbStatTCPQueries_Type()
)
dnsSlbStatTCPQueries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsSlbStatTCPQueries.setStatus("current")
_DnsSlbStatUDPQueries_Type = Counter32
_DnsSlbStatUDPQueries_Object = MibScalar
dnsSlbStatUDPQueries = _DnsSlbStatUDPQueries_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 13, 2),
    _DnsSlbStatUDPQueries_Type()
)
dnsSlbStatUDPQueries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsSlbStatUDPQueries.setStatus("current")
_DnsSlbStatInvalidQueries_Type = Counter32
_DnsSlbStatInvalidQueries_Object = MibScalar
dnsSlbStatInvalidQueries = _DnsSlbStatInvalidQueries_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 13, 3),
    _DnsSlbStatInvalidQueries_Type()
)
dnsSlbStatInvalidQueries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsSlbStatInvalidQueries.setStatus("current")
_DnsSlbStatMultipleQueries_Type = Counter32
_DnsSlbStatMultipleQueries_Object = MibScalar
dnsSlbStatMultipleQueries = _DnsSlbStatMultipleQueries_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 13, 4),
    _DnsSlbStatMultipleQueries_Type()
)
dnsSlbStatMultipleQueries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsSlbStatMultipleQueries.setStatus("current")
_DnsSlbStatDnameParseErrors_Type = Counter32
_DnsSlbStatDnameParseErrors_Object = MibScalar
dnsSlbStatDnameParseErrors = _DnsSlbStatDnameParseErrors_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 13, 5),
    _DnsSlbStatDnameParseErrors_Type()
)
dnsSlbStatDnameParseErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsSlbStatDnameParseErrors.setStatus("current")
_DnsSlbStatFailedMatches_Type = Counter32
_DnsSlbStatFailedMatches_Object = MibScalar
dnsSlbStatFailedMatches = _DnsSlbStatFailedMatches_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 13, 6),
    _DnsSlbStatFailedMatches_Type()
)
dnsSlbStatFailedMatches.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsSlbStatFailedMatches.setStatus("current")
_DnsSlbStatInternalErrors_Type = Counter32
_DnsSlbStatInternalErrors_Object = MibScalar
dnsSlbStatInternalErrors = _DnsSlbStatInternalErrors_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 13, 7),
    _DnsSlbStatInternalErrors_Type()
)
dnsSlbStatInternalErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dnsSlbStatInternalErrors.setStatus("current")


class _SlbStatsClear_Type(Integer32):
    """Custom type slbStatsClear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("clear", 2),
          ("ok", 1))
    )


_SlbStatsClear_Type.__name__ = "Integer32"
_SlbStatsClear_Object = MibScalar
slbStatsClear = _SlbStatsClear_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 15),
    _SlbStatsClear_Type()
)
slbStatsClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbStatsClear.setStatus("current")
_SslSlbStats_ObjectIdentity = ObjectIdentity
sslSlbStats = _SslSlbStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16)
)
_SslSlbStatSessIdAllocFails_Type = Counter32
_SslSlbStatSessIdAllocFails_Object = MibScalar
sslSlbStatSessIdAllocFails = _SslSlbStatSessIdAllocFails_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 1),
    _SslSlbStatSessIdAllocFails_Type()
)
sslSlbStatSessIdAllocFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslSlbStatSessIdAllocFails.setStatus("current")
_SslSlbStatCurSessions_Type = Gauge32
_SslSlbStatCurSessions_Object = MibScalar
sslSlbStatCurSessions = _SslSlbStatCurSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 2),
    _SslSlbStatCurSessions_Type()
)
sslSlbStatCurSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslSlbStatCurSessions.setStatus("current")
_SslSlbStatTotalSessions_Type = Counter32
_SslSlbStatTotalSessions_Object = MibScalar
sslSlbStatTotalSessions = _SslSlbStatTotalSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 3),
    _SslSlbStatTotalSessions_Type()
)
sslSlbStatTotalSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslSlbStatTotalSessions.setStatus("current")
_SslSlbStatHighestSessions_Type = Counter32
_SslSlbStatHighestSessions_Object = MibScalar
sslSlbStatHighestSessions = _SslSlbStatHighestSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 4),
    _SslSlbStatHighestSessions_Type()
)
sslSlbStatHighestSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslSlbStatHighestSessions.setStatus("current")
_SslSlbStatUniqCurSessions_Type = Gauge32
_SslSlbStatUniqCurSessions_Object = MibScalar
sslSlbStatUniqCurSessions = _SslSlbStatUniqCurSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 5),
    _SslSlbStatUniqCurSessions_Type()
)
sslSlbStatUniqCurSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslSlbStatUniqCurSessions.setStatus("current")
_SslSlbStatUniqTotalSessions_Type = Counter32
_SslSlbStatUniqTotalSessions_Object = MibScalar
sslSlbStatUniqTotalSessions = _SslSlbStatUniqTotalSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 6),
    _SslSlbStatUniqTotalSessions_Type()
)
sslSlbStatUniqTotalSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslSlbStatUniqTotalSessions.setStatus("current")
_SslSlbStatUniqHighestSessions_Type = Counter32
_SslSlbStatUniqHighestSessions_Object = MibScalar
sslSlbStatUniqHighestSessions = _SslSlbStatUniqHighestSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 7),
    _SslSlbStatUniqHighestSessions_Type()
)
sslSlbStatUniqHighestSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslSlbStatUniqHighestSessions.setStatus("current")
_SslSlbStatPersistPortCurSessions_Type = Gauge32
_SslSlbStatPersistPortCurSessions_Object = MibScalar
sslSlbStatPersistPortCurSessions = _SslSlbStatPersistPortCurSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 8),
    _SslSlbStatPersistPortCurSessions_Type()
)
sslSlbStatPersistPortCurSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslSlbStatPersistPortCurSessions.setStatus("current")
_SslSlbStatPersistPortTotalSessions_Type = Counter32
_SslSlbStatPersistPortTotalSessions_Object = MibScalar
sslSlbStatPersistPortTotalSessions = _SslSlbStatPersistPortTotalSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 9),
    _SslSlbStatPersistPortTotalSessions_Type()
)
sslSlbStatPersistPortTotalSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslSlbStatPersistPortTotalSessions.setStatus("current")
_SslSlbStatPersistPortHighestSessions_Type = Counter32
_SslSlbStatPersistPortHighestSessions_Object = MibScalar
sslSlbStatPersistPortHighestSessions = _SslSlbStatPersistPortHighestSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 10),
    _SslSlbStatPersistPortHighestSessions_Type()
)
sslSlbStatPersistPortHighestSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslSlbStatPersistPortHighestSessions.setStatus("current")
_SslOffNewHandShake_Type = Integer32
_SslOffNewHandShake_Object = MibScalar
sslOffNewHandShake = _SslOffNewHandShake_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 11),
    _SslOffNewHandShake_Type()
)
sslOffNewHandShake.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslOffNewHandShake.setStatus("current")
_SslOffReusedHandShake_Type = Integer32
_SslOffReusedHandShake_Object = MibScalar
sslOffReusedHandShake = _SslOffReusedHandShake_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 12),
    _SslOffReusedHandShake_Type()
)
sslOffReusedHandShake.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslOffReusedHandShake.setStatus("current")
_SslOffPerReusedHandShake_Type = Integer32
_SslOffPerReusedHandShake_Object = MibScalar
sslOffPerReusedHandShake = _SslOffPerReusedHandShake_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 13),
    _SslOffPerReusedHandShake_Type()
)
sslOffPerReusedHandShake.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslOffPerReusedHandShake.setStatus("current")
_SslOffPercSessUsingSSLv2_Type = Integer32
_SslOffPercSessUsingSSLv2_Object = MibScalar
sslOffPercSessUsingSSLv2 = _SslOffPercSessUsingSSLv2_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 14),
    _SslOffPercSessUsingSSLv2_Type()
)
sslOffPercSessUsingSSLv2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslOffPercSessUsingSSLv2.setStatus("current")
_SslOffPercSessUsingSSLv3_Type = Integer32
_SslOffPercSessUsingSSLv3_Object = MibScalar
sslOffPercSessUsingSSLv3 = _SslOffPercSessUsingSSLv3_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 15),
    _SslOffPercSessUsingSSLv3_Type()
)
sslOffPercSessUsingSSLv3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslOffPercSessUsingSSLv3.setStatus("current")
_SslOffPercSessUsingTLS_Type = Integer32
_SslOffPercSessUsingTLS_Object = MibScalar
sslOffPercSessUsingTLS = _SslOffPercSessUsingTLS_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 16),
    _SslOffPercSessUsingTLS_Type()
)
sslOffPercSessUsingTLS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslOffPercSessUsingTLS.setStatus("current")
_SslOffPerServStatsTable_Object = MibTable
sslOffPerServStatsTable = _SslOffPerServStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 17)
)
if mibBuilder.loadTexts:
    sslOffPerServStatsTable.setStatus("current")
_SslOffPerServStatsEntry_Object = MibTableRow
sslOffPerServStatsEntry = _SslOffPerServStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 17, 1)
)
sslOffPerServStatsEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "sslOffPerServVirtServIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "sslOffPerServVirtServiceIndex"),
)
if mibBuilder.loadTexts:
    sslOffPerServStatsEntry.setStatus("current")
_SslOffPerServVirtServIndex_Type = Integer32
_SslOffPerServVirtServIndex_Object = MibTableColumn
sslOffPerServVirtServIndex = _SslOffPerServVirtServIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 17, 1, 1),
    _SslOffPerServVirtServIndex_Type()
)
sslOffPerServVirtServIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslOffPerServVirtServIndex.setStatus("current")
_SslOffPerServVirtServiceIndex_Type = Integer32
_SslOffPerServVirtServiceIndex_Object = MibTableColumn
sslOffPerServVirtServiceIndex = _SslOffPerServVirtServiceIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 17, 1, 2),
    _SslOffPerServVirtServiceIndex_Type()
)
sslOffPerServVirtServiceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslOffPerServVirtServiceIndex.setStatus("current")
_SslOffPerServVirtServPort_Type = Integer32
_SslOffPerServVirtServPort_Object = MibTableColumn
sslOffPerServVirtServPort = _SslOffPerServVirtServPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 17, 1, 3),
    _SslOffPerServVirtServPort_Type()
)
sslOffPerServVirtServPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslOffPerServVirtServPort.setStatus("current")
_SslOffPerServSslPolId_Type = DisplayString
_SslOffPerServSslPolId_Object = MibTableColumn
sslOffPerServSslPolId = _SslOffPerServSslPolId_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 17, 1, 4),
    _SslOffPerServSslPolId_Type()
)
sslOffPerServSslPolId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslOffPerServSslPolId.setStatus("current")
_SslOffPerServNewhandShake_Type = Integer32
_SslOffPerServNewhandShake_Object = MibTableColumn
sslOffPerServNewhandShake = _SslOffPerServNewhandShake_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 17, 1, 5),
    _SslOffPerServNewhandShake_Type()
)
sslOffPerServNewhandShake.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslOffPerServNewhandShake.setStatus("current")
_SslOffPerServReusedhandShake_Type = Integer32
_SslOffPerServReusedhandShake_Object = MibTableColumn
sslOffPerServReusedhandShake = _SslOffPerServReusedhandShake_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 17, 1, 6),
    _SslOffPerServReusedhandShake_Type()
)
sslOffPerServReusedhandShake.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslOffPerServReusedhandShake.setStatus("current")
_SslOffPerServPercReusedhandShake_Type = Integer32
_SslOffPerServPercReusedhandShake_Object = MibTableColumn
sslOffPerServPercReusedhandShake = _SslOffPerServPercReusedhandShake_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 17, 1, 7),
    _SslOffPerServPercReusedhandShake_Type()
)
sslOffPerServPercReusedhandShake.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslOffPerServPercReusedhandShake.setStatus("current")
_SslOffPerServSessUsingSSLv2_Type = Integer32
_SslOffPerServSessUsingSSLv2_Object = MibTableColumn
sslOffPerServSessUsingSSLv2 = _SslOffPerServSessUsingSSLv2_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 17, 1, 8),
    _SslOffPerServSessUsingSSLv2_Type()
)
sslOffPerServSessUsingSSLv2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslOffPerServSessUsingSSLv2.setStatus("current")
_SslOffPerServSessUsingSSLv3_Type = Integer32
_SslOffPerServSessUsingSSLv3_Object = MibTableColumn
sslOffPerServSessUsingSSLv3 = _SslOffPerServSessUsingSSLv3_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 17, 1, 9),
    _SslOffPerServSessUsingSSLv3_Type()
)
sslOffPerServSessUsingSSLv3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslOffPerServSessUsingSSLv3.setStatus("current")
_SslOffPerServSessUsingTLS_Type = Integer32
_SslOffPerServSessUsingTLS_Object = MibTableColumn
sslOffPerServSessUsingTLS = _SslOffPerServSessUsingTLS_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 17, 1, 10),
    _SslOffPerServSessUsingTLS_Type()
)
sslOffPerServSessUsingTLS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslOffPerServSessUsingTLS.setStatus("current")
_SslOffPerServSessUsingTLS11_Type = Integer32
_SslOffPerServSessUsingTLS11_Object = MibTableColumn
sslOffPerServSessUsingTLS11 = _SslOffPerServSessUsingTLS11_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 17, 1, 11),
    _SslOffPerServSessUsingTLS11_Type()
)
sslOffPerServSessUsingTLS11.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslOffPerServSessUsingTLS11.setStatus("current")
_SslOffPercSessUsingTLS11_Type = Integer32
_SslOffPercSessUsingTLS11_Object = MibScalar
sslOffPercSessUsingTLS11 = _SslOffPercSessUsingTLS11_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 16, 18),
    _SslOffPercSessUsingTLS11_Type()
)
sslOffPercSessUsingTLS11.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslOffPercSessUsingTLS11.setStatus("current")
_SlbStatAuxSessTable_Object = MibTable
slbStatAuxSessTable = _SlbStatAuxSessTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 17)
)
if mibBuilder.loadTexts:
    slbStatAuxSessTable.setStatus("current")
_SlbStatAuxSessEntry_Object = MibTableRow
slbStatAuxSessEntry = _SlbStatAuxSessEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 17, 1)
)
slbStatAuxSessEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbStatAuxSessIndex"),
)
if mibBuilder.loadTexts:
    slbStatAuxSessEntry.setStatus("current")
_SlbStatAuxSessIndex_Type = Integer32
_SlbStatAuxSessIndex_Object = MibTableColumn
slbStatAuxSessIndex = _SlbStatAuxSessIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 17, 1, 1),
    _SlbStatAuxSessIndex_Type()
)
slbStatAuxSessIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatAuxSessIndex.setStatus("current")
_SlbStatAuxSessCurConn_Type = Gauge32
_SlbStatAuxSessCurConn_Object = MibTableColumn
slbStatAuxSessCurConn = _SlbStatAuxSessCurConn_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 17, 1, 2),
    _SlbStatAuxSessCurConn_Type()
)
slbStatAuxSessCurConn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatAuxSessCurConn.setStatus("current")
_SlbStatAuxSessMaxConn_Type = Integer32
_SlbStatAuxSessMaxConn_Object = MibTableColumn
slbStatAuxSessMaxConn = _SlbStatAuxSessMaxConn_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 17, 1, 3),
    _SlbStatAuxSessMaxConn_Type()
)
slbStatAuxSessMaxConn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatAuxSessMaxConn.setStatus("current")
_SlbStatAuxSessAllocFails_Type = Counter32
_SlbStatAuxSessAllocFails_Object = MibTableColumn
slbStatAuxSessAllocFails = _SlbStatAuxSessAllocFails_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 17, 1, 4),
    _SlbStatAuxSessAllocFails_Type()
)
slbStatAuxSessAllocFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatAuxSessAllocFails.setStatus("current")
_SlbStatVirtServiceTable_Object = MibTable
slbStatVirtServiceTable = _SlbStatVirtServiceTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 18)
)
if mibBuilder.loadTexts:
    slbStatVirtServiceTable.setStatus("current")
_SlbStatVirtServiceEntry_Object = MibTableRow
slbStatVirtServiceEntry = _SlbStatVirtServiceEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 18, 1)
)
slbStatVirtServiceEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbStatVirtServerIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbStatVirtServiceIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbStatRealServerIndex"),
)
if mibBuilder.loadTexts:
    slbStatVirtServiceEntry.setStatus("current")
_SlbStatVirtServerIndex_Type = Integer32
_SlbStatVirtServerIndex_Object = MibTableColumn
slbStatVirtServerIndex = _SlbStatVirtServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 18, 1, 1),
    _SlbStatVirtServerIndex_Type()
)
slbStatVirtServerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatVirtServerIndex.setStatus("current")
_SlbStatVirtServiceIndex_Type = Integer32
_SlbStatVirtServiceIndex_Object = MibTableColumn
slbStatVirtServiceIndex = _SlbStatVirtServiceIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 18, 1, 2),
    _SlbStatVirtServiceIndex_Type()
)
slbStatVirtServiceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatVirtServiceIndex.setStatus("current")
_SlbStatRealServerIndex_Type = Integer32
_SlbStatRealServerIndex_Object = MibTableColumn
slbStatRealServerIndex = _SlbStatRealServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 18, 1, 3),
    _SlbStatRealServerIndex_Type()
)
slbStatRealServerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatRealServerIndex.setStatus("current")
_SlbStatVirtServiceCurrSessions_Type = Gauge32
_SlbStatVirtServiceCurrSessions_Object = MibTableColumn
slbStatVirtServiceCurrSessions = _SlbStatVirtServiceCurrSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 18, 1, 4),
    _SlbStatVirtServiceCurrSessions_Type()
)
slbStatVirtServiceCurrSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatVirtServiceCurrSessions.setStatus("current")
_SlbStatVirtServiceTotalSessions_Type = Counter32
_SlbStatVirtServiceTotalSessions_Object = MibTableColumn
slbStatVirtServiceTotalSessions = _SlbStatVirtServiceTotalSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 18, 1, 5),
    _SlbStatVirtServiceTotalSessions_Type()
)
slbStatVirtServiceTotalSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatVirtServiceTotalSessions.setStatus("current")
_SlbStatVirtServiceHighestSessions_Type = Counter32
_SlbStatVirtServiceHighestSessions_Object = MibTableColumn
slbStatVirtServiceHighestSessions = _SlbStatVirtServiceHighestSessions_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 18, 1, 6),
    _SlbStatVirtServiceHighestSessions_Type()
)
slbStatVirtServiceHighestSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatVirtServiceHighestSessions.setStatus("current")
_SlbStatVirtServiceHCOctetsLow32_Type = Counter32
_SlbStatVirtServiceHCOctetsLow32_Object = MibTableColumn
slbStatVirtServiceHCOctetsLow32 = _SlbStatVirtServiceHCOctetsLow32_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 18, 1, 7),
    _SlbStatVirtServiceHCOctetsLow32_Type()
)
slbStatVirtServiceHCOctetsLow32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatVirtServiceHCOctetsLow32.setStatus("current")
_SlbStatVirtServiceHCOctetsHigh32_Type = Counter32
_SlbStatVirtServiceHCOctetsHigh32_Object = MibTableColumn
slbStatVirtServiceHCOctetsHigh32 = _SlbStatVirtServiceHCOctetsHigh32_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 18, 1, 8),
    _SlbStatVirtServiceHCOctetsHigh32_Type()
)
slbStatVirtServiceHCOctetsHigh32.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatVirtServiceHCOctetsHigh32.setStatus("current")
_SlbStatVirtServiceHCOctets_Type = Counter64
_SlbStatVirtServiceHCOctets_Object = MibTableColumn
slbStatVirtServiceHCOctets = _SlbStatVirtServiceHCOctets_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 18, 1, 9),
    _SlbStatVirtServiceHCOctets_Type()
)
slbStatVirtServiceHCOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatVirtServiceHCOctets.setStatus("current")
_SipStats_ObjectIdentity = ObjectIdentity
sipStats = _SipStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 20)
)
_SipTotalClientParseErrors_Type = Counter32
_SipTotalClientParseErrors_Object = MibScalar
sipTotalClientParseErrors = _SipTotalClientParseErrors_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 20, 1),
    _SipTotalClientParseErrors_Type()
)
sipTotalClientParseErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipTotalClientParseErrors.setStatus("current")
_SipTotalServerParseErrors_Type = Counter32
_SipTotalServerParseErrors_Object = MibScalar
sipTotalServerParseErrors = _SipTotalServerParseErrors_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 20, 2),
    _SipTotalServerParseErrors_Type()
)
sipTotalServerParseErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipTotalServerParseErrors.setStatus("current")
_SipTotalUnknownMethodReq_Type = Counter32
_SipTotalUnknownMethodReq_Object = MibScalar
sipTotalUnknownMethodReq = _SipTotalUnknownMethodReq_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 20, 3),
    _SipTotalUnknownMethodReq_Type()
)
sipTotalUnknownMethodReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipTotalUnknownMethodReq.setStatus("current")
_SipTotalIncompleteMsgs_Type = Counter32
_SipTotalIncompleteMsgs_Object = MibScalar
sipTotalIncompleteMsgs = _SipTotalIncompleteMsgs_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 20, 4),
    _SipTotalIncompleteMsgs_Type()
)
sipTotalIncompleteMsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipTotalIncompleteMsgs.setStatus("current")
_SipTotalSdpNatPackets_Type = Counter32
_SipTotalSdpNatPackets_Object = MibScalar
sipTotalSdpNatPackets = _SipTotalSdpNatPackets_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 20, 5),
    _SipTotalSdpNatPackets_Type()
)
sipTotalSdpNatPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sipTotalSdpNatPackets.setStatus("current")
_WlmStats_ObjectIdentity = ObjectIdentity
wlmStats = _WlmStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21)
)
_SlbStatWlmTable_Object = MibTable
slbStatWlmTable = _SlbStatWlmTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1)
)
if mibBuilder.loadTexts:
    slbStatWlmTable.setStatus("current")
_SlbStatWlmEntry_Object = MibTableRow
slbStatWlmEntry = _SlbStatWlmEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1)
)
slbStatWlmEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbStatWlmIndex"),
)
if mibBuilder.loadTexts:
    slbStatWlmEntry.setStatus("current")
_SlbStatWlmIndex_Type = Integer32
_SlbStatWlmIndex_Object = MibTableColumn
slbStatWlmIndex = _SlbStatWlmIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1, 1),
    _SlbStatWlmIndex_Type()
)
slbStatWlmIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatWlmIndex.setStatus("current")
_SlbStatWlmRegReq_Type = Counter32
_SlbStatWlmRegReq_Object = MibTableColumn
slbStatWlmRegReq = _SlbStatWlmRegReq_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1, 2),
    _SlbStatWlmRegReq_Type()
)
slbStatWlmRegReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatWlmRegReq.setStatus("current")
_SlbStatWlmRegRep_Type = Counter32
_SlbStatWlmRegRep_Object = MibTableColumn
slbStatWlmRegRep = _SlbStatWlmRegRep_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1, 3),
    _SlbStatWlmRegRep_Type()
)
slbStatWlmRegRep.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatWlmRegRep.setStatus("current")
_SlbStatWlmRegRepErr_Type = Counter32
_SlbStatWlmRegRepErr_Object = MibTableColumn
slbStatWlmRegRepErr = _SlbStatWlmRegRepErr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1, 4),
    _SlbStatWlmRegRepErr_Type()
)
slbStatWlmRegRepErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatWlmRegRepErr.setStatus("current")
_SlbStatWlmDeregReq_Type = Counter32
_SlbStatWlmDeregReq_Object = MibTableColumn
slbStatWlmDeregReq = _SlbStatWlmDeregReq_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1, 5),
    _SlbStatWlmDeregReq_Type()
)
slbStatWlmDeregReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatWlmDeregReq.setStatus("current")
_SlbStatWlmDeregRep_Type = Counter32
_SlbStatWlmDeregRep_Object = MibTableColumn
slbStatWlmDeregRep = _SlbStatWlmDeregRep_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1, 6),
    _SlbStatWlmDeregRep_Type()
)
slbStatWlmDeregRep.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatWlmDeregRep.setStatus("current")
_SlbStatWlmDeregRepErr_Type = Counter32
_SlbStatWlmDeregRepErr_Object = MibTableColumn
slbStatWlmDeregRepErr = _SlbStatWlmDeregRepErr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1, 7),
    _SlbStatWlmDeregRepErr_Type()
)
slbStatWlmDeregRepErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatWlmDeregRepErr.setStatus("current")
_SlbStatWlmLbStateReq_Type = Counter32
_SlbStatWlmLbStateReq_Object = MibTableColumn
slbStatWlmLbStateReq = _SlbStatWlmLbStateReq_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1, 8),
    _SlbStatWlmLbStateReq_Type()
)
slbStatWlmLbStateReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatWlmLbStateReq.setStatus("current")
_SlbStatWlmLbStateRep_Type = Counter32
_SlbStatWlmLbStateRep_Object = MibTableColumn
slbStatWlmLbStateRep = _SlbStatWlmLbStateRep_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1, 9),
    _SlbStatWlmLbStateRep_Type()
)
slbStatWlmLbStateRep.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatWlmLbStateRep.setStatus("current")
_SlbStatWlmLbStateRepErr_Type = Counter32
_SlbStatWlmLbStateRepErr_Object = MibTableColumn
slbStatWlmLbStateRepErr = _SlbStatWlmLbStateRepErr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1, 10),
    _SlbStatWlmLbStateRepErr_Type()
)
slbStatWlmLbStateRepErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatWlmLbStateRepErr.setStatus("current")
_SlbStatWlmMembStateReq_Type = Counter32
_SlbStatWlmMembStateReq_Object = MibTableColumn
slbStatWlmMembStateReq = _SlbStatWlmMembStateReq_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1, 11),
    _SlbStatWlmMembStateReq_Type()
)
slbStatWlmMembStateReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatWlmMembStateReq.setStatus("current")
_SlbStatWlmMembStateRep_Type = Counter32
_SlbStatWlmMembStateRep_Object = MibTableColumn
slbStatWlmMembStateRep = _SlbStatWlmMembStateRep_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1, 12),
    _SlbStatWlmMembStateRep_Type()
)
slbStatWlmMembStateRep.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatWlmMembStateRep.setStatus("current")
_SlbStatWlmMembStateRepErr_Type = Counter32
_SlbStatWlmMembStateRepErr_Object = MibTableColumn
slbStatWlmMembStateRepErr = _SlbStatWlmMembStateRepErr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1, 13),
    _SlbStatWlmMembStateRepErr_Type()
)
slbStatWlmMembStateRepErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatWlmMembStateRepErr.setStatus("current")
_SlbStatWlmWtMsgRecv_Type = Counter32
_SlbStatWlmWtMsgRecv_Object = MibTableColumn
slbStatWlmWtMsgRecv = _SlbStatWlmWtMsgRecv_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1, 14),
    _SlbStatWlmWtMsgRecv_Type()
)
slbStatWlmWtMsgRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatWlmWtMsgRecv.setStatus("current")
_SlbStatWlmWtMsgParErr_Type = Counter32
_SlbStatWlmWtMsgParErr_Object = MibTableColumn
slbStatWlmWtMsgParErr = _SlbStatWlmWtMsgParErr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1, 15),
    _SlbStatWlmWtMsgParErr_Type()
)
slbStatWlmWtMsgParErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatWlmWtMsgParErr.setStatus("current")
_SlbStatWlmTotInvalidLb_Type = Counter32
_SlbStatWlmTotInvalidLb_Object = MibTableColumn
slbStatWlmTotInvalidLb = _SlbStatWlmTotInvalidLb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1, 16),
    _SlbStatWlmTotInvalidLb_Type()
)
slbStatWlmTotInvalidLb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatWlmTotInvalidLb.setStatus("current")
_SlbStatWlmTotInvalidGrp_Type = Counter32
_SlbStatWlmTotInvalidGrp_Object = MibTableColumn
slbStatWlmTotInvalidGrp = _SlbStatWlmTotInvalidGrp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1, 17),
    _SlbStatWlmTotInvalidGrp_Type()
)
slbStatWlmTotInvalidGrp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatWlmTotInvalidGrp.setStatus("current")
_SlbStatWlmTotInvalidRealSer_Type = Counter32
_SlbStatWlmTotInvalidRealSer_Object = MibTableColumn
slbStatWlmTotInvalidRealSer = _SlbStatWlmTotInvalidRealSer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1, 18),
    _SlbStatWlmTotInvalidRealSer_Type()
)
slbStatWlmTotInvalidRealSer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatWlmTotInvalidRealSer.setStatus("current")
_SlbStatWlmMsgInvalidSASPHeader_Type = Counter32
_SlbStatWlmMsgInvalidSASPHeader_Object = MibTableColumn
slbStatWlmMsgInvalidSASPHeader = _SlbStatWlmMsgInvalidSASPHeader_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1, 19),
    _SlbStatWlmMsgInvalidSASPHeader_Type()
)
slbStatWlmMsgInvalidSASPHeader.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatWlmMsgInvalidSASPHeader.setStatus("current")
_SlbStatWlmMsgParseErr_Type = Counter32
_SlbStatWlmMsgParseErr_Object = MibTableColumn
slbStatWlmMsgParseErr = _SlbStatWlmMsgParseErr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1, 20),
    _SlbStatWlmMsgParseErr_Type()
)
slbStatWlmMsgParseErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatWlmMsgParseErr.setStatus("current")
_SlbStatWlmMsgUnsupMsgType_Type = Counter32
_SlbStatWlmMsgUnsupMsgType_Object = MibTableColumn
slbStatWlmMsgUnsupMsgType = _SlbStatWlmMsgUnsupMsgType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 21, 1, 1, 21),
    _SlbStatWlmMsgUnsupMsgType_Type()
)
slbStatWlmMsgUnsupMsgType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatWlmMsgUnsupMsgType.setStatus("current")
_SessMirrorStats_ObjectIdentity = ObjectIdentity
sessMirrorStats = _SessMirrorStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22)
)
_SessMirrorTotalCreateSessionMsgRx_Type = Counter32
_SessMirrorTotalCreateSessionMsgRx_Object = MibScalar
sessMirrorTotalCreateSessionMsgRx = _SessMirrorTotalCreateSessionMsgRx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 1),
    _SessMirrorTotalCreateSessionMsgRx_Type()
)
sessMirrorTotalCreateSessionMsgRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorTotalCreateSessionMsgRx.setStatus("current")
_SessMirrorTotalCreateSessionMsgTx_Type = Counter32
_SessMirrorTotalCreateSessionMsgTx_Object = MibScalar
sessMirrorTotalCreateSessionMsgTx = _SessMirrorTotalCreateSessionMsgTx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 2),
    _SessMirrorTotalCreateSessionMsgTx_Type()
)
sessMirrorTotalCreateSessionMsgTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorTotalCreateSessionMsgTx.setStatus("current")
_SessMirrorTotalCreateDataSessionMsgRx_Type = Counter32
_SessMirrorTotalCreateDataSessionMsgRx_Object = MibScalar
sessMirrorTotalCreateDataSessionMsgRx = _SessMirrorTotalCreateDataSessionMsgRx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 3),
    _SessMirrorTotalCreateDataSessionMsgRx_Type()
)
sessMirrorTotalCreateDataSessionMsgRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorTotalCreateDataSessionMsgRx.setStatus("current")
_SessMirrorTotalCreateDataSessionMsgTx_Type = Counter32
_SessMirrorTotalCreateDataSessionMsgTx_Object = MibScalar
sessMirrorTotalCreateDataSessionMsgTx = _SessMirrorTotalCreateDataSessionMsgTx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 4),
    _SessMirrorTotalCreateDataSessionMsgTx_Type()
)
sessMirrorTotalCreateDataSessionMsgTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorTotalCreateDataSessionMsgTx.setStatus("current")
_SessMirrorTotalUpdateSessionMsgRx_Type = Counter32
_SessMirrorTotalUpdateSessionMsgRx_Object = MibScalar
sessMirrorTotalUpdateSessionMsgRx = _SessMirrorTotalUpdateSessionMsgRx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 5),
    _SessMirrorTotalUpdateSessionMsgRx_Type()
)
sessMirrorTotalUpdateSessionMsgRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorTotalUpdateSessionMsgRx.setStatus("current")
_SessMirrorTotalUpdateSessionMsgTx_Type = Counter32
_SessMirrorTotalUpdateSessionMsgTx_Object = MibScalar
sessMirrorTotalUpdateSessionMsgTx = _SessMirrorTotalUpdateSessionMsgTx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 6),
    _SessMirrorTotalUpdateSessionMsgTx_Type()
)
sessMirrorTotalUpdateSessionMsgTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorTotalUpdateSessionMsgTx.setStatus("current")
_SessMirrorTotalUpdateDataSessionMsgRx_Type = Counter32
_SessMirrorTotalUpdateDataSessionMsgRx_Object = MibScalar
sessMirrorTotalUpdateDataSessionMsgRx = _SessMirrorTotalUpdateDataSessionMsgRx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 7),
    _SessMirrorTotalUpdateDataSessionMsgRx_Type()
)
sessMirrorTotalUpdateDataSessionMsgRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorTotalUpdateDataSessionMsgRx.setStatus("current")
_SessMirrorTotalUpdateDataSessionMsgTx_Type = Counter32
_SessMirrorTotalUpdateDataSessionMsgTx_Object = MibScalar
sessMirrorTotalUpdateDataSessionMsgTx = _SessMirrorTotalUpdateDataSessionMsgTx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 8),
    _SessMirrorTotalUpdateDataSessionMsgTx_Type()
)
sessMirrorTotalUpdateDataSessionMsgTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorTotalUpdateDataSessionMsgTx.setStatus("current")
_SessMirrorTotalDeleteSessionMsgRx_Type = Counter32
_SessMirrorTotalDeleteSessionMsgRx_Object = MibScalar
sessMirrorTotalDeleteSessionMsgRx = _SessMirrorTotalDeleteSessionMsgRx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 9),
    _SessMirrorTotalDeleteSessionMsgRx_Type()
)
sessMirrorTotalDeleteSessionMsgRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorTotalDeleteSessionMsgRx.setStatus("current")
_SessMirrorTotalDeleteSessionMsgTx_Type = Counter32
_SessMirrorTotalDeleteSessionMsgTx_Object = MibScalar
sessMirrorTotalDeleteSessionMsgTx = _SessMirrorTotalDeleteSessionMsgTx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 10),
    _SessMirrorTotalDeleteSessionMsgTx_Type()
)
sessMirrorTotalDeleteSessionMsgTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorTotalDeleteSessionMsgTx.setStatus("current")
_SessMirrorTotalDeleteDataSessionMsgRx_Type = Counter32
_SessMirrorTotalDeleteDataSessionMsgRx_Object = MibScalar
sessMirrorTotalDeleteDataSessionMsgRx = _SessMirrorTotalDeleteDataSessionMsgRx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 11),
    _SessMirrorTotalDeleteDataSessionMsgRx_Type()
)
sessMirrorTotalDeleteDataSessionMsgRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorTotalDeleteDataSessionMsgRx.setStatus("current")
_SessMirrorTotalDeleteDataSessionMsgTx_Type = Counter32
_SessMirrorTotalDeleteDataSessionMsgTx_Object = MibScalar
sessMirrorTotalDeleteDataSessionMsgTx = _SessMirrorTotalDeleteDataSessionMsgTx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 12),
    _SessMirrorTotalDeleteDataSessionMsgTx_Type()
)
sessMirrorTotalDeleteDataSessionMsgTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorTotalDeleteDataSessionMsgTx.setStatus("current")
_SessMirrorTotalSessionsCreated_Type = Counter32
_SessMirrorTotalSessionsCreated_Object = MibScalar
sessMirrorTotalSessionsCreated = _SessMirrorTotalSessionsCreated_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 13),
    _SessMirrorTotalSessionsCreated_Type()
)
sessMirrorTotalSessionsCreated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorTotalSessionsCreated.setStatus("current")
_SessMirrorTotalDataSessionsCreated_Type = Counter32
_SessMirrorTotalDataSessionsCreated_Object = MibScalar
sessMirrorTotalDataSessionsCreated = _SessMirrorTotalDataSessionsCreated_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 14),
    _SessMirrorTotalDataSessionsCreated_Type()
)
sessMirrorTotalDataSessionsCreated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorTotalDataSessionsCreated.setStatus("current")
_SessMirrorTotalSessionsUpdated_Type = Counter32
_SessMirrorTotalSessionsUpdated_Object = MibScalar
sessMirrorTotalSessionsUpdated = _SessMirrorTotalSessionsUpdated_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 15),
    _SessMirrorTotalSessionsUpdated_Type()
)
sessMirrorTotalSessionsUpdated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorTotalSessionsUpdated.setStatus("current")
_SessMirrorTotalDataSessionsUpdated_Type = Counter32
_SessMirrorTotalDataSessionsUpdated_Object = MibScalar
sessMirrorTotalDataSessionsUpdated = _SessMirrorTotalDataSessionsUpdated_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 16),
    _SessMirrorTotalDataSessionsUpdated_Type()
)
sessMirrorTotalDataSessionsUpdated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorTotalDataSessionsUpdated.setStatus("current")
_SessMirrorTotalSessionsDeleted_Type = Counter32
_SessMirrorTotalSessionsDeleted_Object = MibScalar
sessMirrorTotalSessionsDeleted = _SessMirrorTotalSessionsDeleted_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 17),
    _SessMirrorTotalSessionsDeleted_Type()
)
sessMirrorTotalSessionsDeleted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorTotalSessionsDeleted.setStatus("current")
_SessMirrorTotalDataSessionsDeleted_Type = Counter32
_SessMirrorTotalDataSessionsDeleted_Object = MibScalar
sessMirrorTotalDataSessionsDeleted = _SessMirrorTotalDataSessionsDeleted_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 18),
    _SessMirrorTotalDataSessionsDeleted_Type()
)
sessMirrorTotalDataSessionsDeleted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorTotalDataSessionsDeleted.setStatus("current")
_SessMirrorSessionTableFullErr_Type = Counter32
_SessMirrorSessionTableFullErr_Object = MibScalar
sessMirrorSessionTableFullErr = _SessMirrorSessionTableFullErr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 19),
    _SessMirrorSessionTableFullErr_Type()
)
sessMirrorSessionTableFullErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorSessionTableFullErr.setStatus("current")
_SessMirrorNoPortErr_Type = Counter32
_SessMirrorNoPortErr_Object = MibScalar
sessMirrorNoPortErr = _SessMirrorNoPortErr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 20),
    _SessMirrorNoPortErr_Type()
)
sessMirrorNoPortErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorNoPortErr.setStatus("current")
_SessMirrorSessionPresentErr_Type = Counter32
_SessMirrorSessionPresentErr_Object = MibScalar
sessMirrorSessionPresentErr = _SessMirrorSessionPresentErr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 21),
    _SessMirrorSessionPresentErr_Type()
)
sessMirrorSessionPresentErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorSessionPresentErr.setStatus("current")
_SessMirrorSessionNotFoundErr_Type = Counter32
_SessMirrorSessionNotFoundErr_Object = MibScalar
sessMirrorSessionNotFoundErr = _SessMirrorSessionNotFoundErr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 22),
    _SessMirrorSessionNotFoundErr_Type()
)
sessMirrorSessionNotFoundErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorSessionNotFoundErr.setStatus("current")
_SessMirrorCtrlSessionNotFoundErr_Type = Counter32
_SessMirrorCtrlSessionNotFoundErr_Object = MibScalar
sessMirrorCtrlSessionNotFoundErr = _SessMirrorCtrlSessionNotFoundErr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 22, 23),
    _SessMirrorCtrlSessionNotFoundErr_Type()
)
sessMirrorCtrlSessionNotFoundErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sessMirrorCtrlSessionNotFoundErr.setStatus("current")
_AccelStats_ObjectIdentity = ObjectIdentity
accelStats = _AccelStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23)
)
_CachStats_ObjectIdentity = ObjectIdentity
cachStats = _CachStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1)
)
_CachStatSummTotObj_Type = Integer32
_CachStatSummTotObj_Object = MibScalar
cachStatSummTotObj = _CachStatSummTotObj_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 1),
    _CachStatSummTotObj_Type()
)
cachStatSummTotObj.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatSummTotObj.setStatus("current")
_CachStatSummHitPerc_Type = Integer32
_CachStatSummHitPerc_Object = MibScalar
cachStatSummHitPerc = _CachStatSummHitPerc_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 2),
    _CachStatSummHitPerc_Type()
)
cachStatSummHitPerc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatSummHitPerc.setStatus("current")
_CachStatSummServRate_Type = Integer32
_CachStatSummServRate_Object = MibScalar
cachStatSummServRate = _CachStatSummServRate_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 3),
    _CachStatSummServRate_Type()
)
cachStatSummServRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatSummServRate.setStatus("current")
_CachStatSummNewCachedObj_Type = Integer32
_CachStatSummNewCachedObj_Object = MibScalar
cachStatSummNewCachedObj = _CachStatSummNewCachedObj_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 4),
    _CachStatSummNewCachedObj_Type()
)
cachStatSummNewCachedObj.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatSummNewCachedObj.setStatus("current")
_CachStatSummRateNewCachedObj_Type = Integer32
_CachStatSummRateNewCachedObj_Object = MibScalar
cachStatSummRateNewCachedObj = _CachStatSummRateNewCachedObj_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 5),
    _CachStatSummRateNewCachedObj_Type()
)
cachStatSummRateNewCachedObj.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatSummRateNewCachedObj.setStatus("current")
_CachStatSummNewCachedBytes_Type = Integer32
_CachStatSummNewCachedBytes_Object = MibScalar
cachStatSummNewCachedBytes = _CachStatSummNewCachedBytes_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 6),
    _CachStatSummNewCachedBytes_Type()
)
cachStatSummNewCachedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatSummNewCachedBytes.setStatus("current")
_CachStatSummRateNewCachedBytes_Type = Integer32
_CachStatSummRateNewCachedBytes_Object = MibScalar
cachStatSummRateNewCachedBytes = _CachStatSummRateNewCachedBytes_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 7),
    _CachStatSummRateNewCachedBytes_Type()
)
cachStatSummRateNewCachedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatSummRateNewCachedBytes.setStatus("current")
_CachStatSummObjSmaller10K_Type = Integer32
_CachStatSummObjSmaller10K_Object = MibScalar
cachStatSummObjSmaller10K = _CachStatSummObjSmaller10K_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 8),
    _CachStatSummObjSmaller10K_Type()
)
cachStatSummObjSmaller10K.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatSummObjSmaller10K.setStatus("current")
_CachStatSummObj11KTO50K_Type = Integer32
_CachStatSummObj11KTO50K_Object = MibScalar
cachStatSummObj11KTO50K = _CachStatSummObj11KTO50K_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 9),
    _CachStatSummObj11KTO50K_Type()
)
cachStatSummObj11KTO50K.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatSummObj11KTO50K.setStatus("current")
_CachStatSummObj51KTO100K_Type = Integer32
_CachStatSummObj51KTO100K_Object = MibScalar
cachStatSummObj51KTO100K = _CachStatSummObj51KTO100K_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 10),
    _CachStatSummObj51KTO100K_Type()
)
cachStatSummObj51KTO100K.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatSummObj51KTO100K.setStatus("current")
_CachStatSummObj101KTO1M_Type = Integer32
_CachStatSummObj101KTO1M_Object = MibScalar
cachStatSummObj101KTO1M = _CachStatSummObj101KTO1M_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 11),
    _CachStatSummObj101KTO1M_Type()
)
cachStatSummObj101KTO1M.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatSummObj101KTO1M.setStatus("current")
_CachStatSummObjLarger1M_Type = Integer32
_CachStatSummObjLarger1M_Object = MibScalar
cachStatSummObjLarger1M = _CachStatSummObjLarger1M_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 12),
    _CachStatSummObjLarger1M_Type()
)
cachStatSummObjLarger1M.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatSummObjLarger1M.setStatus("current")
_CachPerServStatTable_Object = MibTable
cachPerServStatTable = _CachPerServStatTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 13)
)
if mibBuilder.loadTexts:
    cachPerServStatTable.setStatus("current")
_CachPerServStatEntry_Object = MibTableRow
cachPerServStatEntry = _CachPerServStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 13, 1)
)
cachPerServStatEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "cachStatPerServVirtServIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "cachStatPerServVirtServiceIndex"),
)
if mibBuilder.loadTexts:
    cachPerServStatEntry.setStatus("current")
_CachStatPerServVirtServIndex_Type = Integer32
_CachStatPerServVirtServIndex_Object = MibTableColumn
cachStatPerServVirtServIndex = _CachStatPerServVirtServIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 13, 1, 1),
    _CachStatPerServVirtServIndex_Type()
)
cachStatPerServVirtServIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cachStatPerServVirtServIndex.setStatus("current")
_CachStatPerServVirtServiceIndex_Type = Integer32
_CachStatPerServVirtServiceIndex_Object = MibTableColumn
cachStatPerServVirtServiceIndex = _CachStatPerServVirtServiceIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 13, 1, 2),
    _CachStatPerServVirtServiceIndex_Type()
)
cachStatPerServVirtServiceIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cachStatPerServVirtServiceIndex.setStatus("current")
_CachStatPerServVirtServPort_Type = Integer32
_CachStatPerServVirtServPort_Object = MibTableColumn
cachStatPerServVirtServPort = _CachStatPerServVirtServPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 13, 1, 3),
    _CachStatPerServVirtServPort_Type()
)
cachStatPerServVirtServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cachStatPerServVirtServPort.setStatus("current")
_CachStatPerServCachePolId_Type = DisplayString
_CachStatPerServCachePolId_Object = MibTableColumn
cachStatPerServCachePolId = _CachStatPerServCachePolId_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 13, 1, 4),
    _CachStatPerServCachePolId_Type()
)
cachStatPerServCachePolId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatPerServCachePolId.setStatus("current")
_CachStatPerServTotObj_Type = Integer32
_CachStatPerServTotObj_Object = MibTableColumn
cachStatPerServTotObj = _CachStatPerServTotObj_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 13, 1, 5),
    _CachStatPerServTotObj_Type()
)
cachStatPerServTotObj.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatPerServTotObj.setStatus("current")
_CachStatPerServHitPerc_Type = Integer32
_CachStatPerServHitPerc_Object = MibTableColumn
cachStatPerServHitPerc = _CachStatPerServHitPerc_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 13, 1, 6),
    _CachStatPerServHitPerc_Type()
)
cachStatPerServHitPerc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatPerServHitPerc.setStatus("current")
_CachStatPerServServRate_Type = Integer32
_CachStatPerServServRate_Object = MibTableColumn
cachStatPerServServRate = _CachStatPerServServRate_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 13, 1, 7),
    _CachStatPerServServRate_Type()
)
cachStatPerServServRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatPerServServRate.setStatus("current")
_CachStatPerServNewCachedObj_Type = Integer32
_CachStatPerServNewCachedObj_Object = MibTableColumn
cachStatPerServNewCachedObj = _CachStatPerServNewCachedObj_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 13, 1, 8),
    _CachStatPerServNewCachedObj_Type()
)
cachStatPerServNewCachedObj.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatPerServNewCachedObj.setStatus("current")
_CachStatPerServRateNewCachedObj_Type = Integer32
_CachStatPerServRateNewCachedObj_Object = MibTableColumn
cachStatPerServRateNewCachedObj = _CachStatPerServRateNewCachedObj_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 13, 1, 9),
    _CachStatPerServRateNewCachedObj_Type()
)
cachStatPerServRateNewCachedObj.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatPerServRateNewCachedObj.setStatus("current")
_CachStatPerServNewCachedBytes_Type = Integer32
_CachStatPerServNewCachedBytes_Object = MibTableColumn
cachStatPerServNewCachedBytes = _CachStatPerServNewCachedBytes_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 13, 1, 10),
    _CachStatPerServNewCachedBytes_Type()
)
cachStatPerServNewCachedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatPerServNewCachedBytes.setStatus("current")
_CachStatPerServRateNewCachedBytes_Type = Integer32
_CachStatPerServRateNewCachedBytes_Object = MibTableColumn
cachStatPerServRateNewCachedBytes = _CachStatPerServRateNewCachedBytes_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 13, 1, 11),
    _CachStatPerServRateNewCachedBytes_Type()
)
cachStatPerServRateNewCachedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatPerServRateNewCachedBytes.setStatus("current")
_CachStatPerServObjSmaller10K_Type = Integer32
_CachStatPerServObjSmaller10K_Object = MibTableColumn
cachStatPerServObjSmaller10K = _CachStatPerServObjSmaller10K_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 13, 1, 12),
    _CachStatPerServObjSmaller10K_Type()
)
cachStatPerServObjSmaller10K.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatPerServObjSmaller10K.setStatus("current")
_CachStatPerServObj11KTO50K_Type = Integer32
_CachStatPerServObj11KTO50K_Object = MibTableColumn
cachStatPerServObj11KTO50K = _CachStatPerServObj11KTO50K_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 13, 1, 13),
    _CachStatPerServObj11KTO50K_Type()
)
cachStatPerServObj11KTO50K.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatPerServObj11KTO50K.setStatus("current")
_CachStatPerServObj51KTO100K_Type = Integer32
_CachStatPerServObj51KTO100K_Object = MibTableColumn
cachStatPerServObj51KTO100K = _CachStatPerServObj51KTO100K_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 13, 1, 14),
    _CachStatPerServObj51KTO100K_Type()
)
cachStatPerServObj51KTO100K.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatPerServObj51KTO100K.setStatus("current")
_CachStatPerServObj101KTO1M_Type = Integer32
_CachStatPerServObj101KTO1M_Object = MibTableColumn
cachStatPerServObj101KTO1M = _CachStatPerServObj101KTO1M_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 13, 1, 15),
    _CachStatPerServObj101KTO1M_Type()
)
cachStatPerServObj101KTO1M.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatPerServObj101KTO1M.setStatus("current")
_CachStatPerServObjLarger1M_Type = Integer32
_CachStatPerServObjLarger1M_Object = MibTableColumn
cachStatPerServObjLarger1M = _CachStatPerServObjLarger1M_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 13, 1, 16),
    _CachStatPerServObjLarger1M_Type()
)
cachStatPerServObjLarger1M.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachStatPerServObjLarger1M.setStatus("current")
_CachPerRuleListStatsTable_Object = MibTable
cachPerRuleListStatsTable = _CachPerRuleListStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 14)
)
if mibBuilder.loadTexts:
    cachPerRuleListStatsTable.setStatus("current")
_CachPerRuleListStatsEntry_Object = MibTableRow
cachPerRuleListStatsEntry = _CachPerRuleListStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 14, 1)
)
cachPerRuleListStatsEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "cachRuleListId"),
)
if mibBuilder.loadTexts:
    cachPerRuleListStatsEntry.setStatus("current")
_CachRuleListIndex_Type = Integer32
_CachRuleListIndex_Object = MibTableColumn
cachRuleListIndex = _CachRuleListIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 14, 1, 1),
    _CachRuleListIndex_Type()
)
cachRuleListIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachRuleListIndex.setStatus("current")
_CachRuleListId_Type = DisplayString
_CachRuleListId_Object = MibTableColumn
cachRuleListId = _CachRuleListId_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 14, 1, 2),
    _CachRuleListId_Type()
)
cachRuleListId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachRuleListId.setStatus("current")
_CachRuleListNumOfObjCac_Type = Integer32
_CachRuleListNumOfObjCac_Object = MibTableColumn
cachRuleListNumOfObjCac = _CachRuleListNumOfObjCac_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 14, 1, 3),
    _CachRuleListNumOfObjCac_Type()
)
cachRuleListNumOfObjCac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachRuleListNumOfObjCac.setStatus("current")
_CachRuleListNumOfBytesCac_Type = Integer32
_CachRuleListNumOfBytesCac_Object = MibTableColumn
cachRuleListNumOfBytesCac = _CachRuleListNumOfBytesCac_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 14, 1, 4),
    _CachRuleListNumOfBytesCac_Type()
)
cachRuleListNumOfBytesCac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachRuleListNumOfBytesCac.setStatus("current")
_CachPerRuleStatsTable_Object = MibTable
cachPerRuleStatsTable = _CachPerRuleStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 15)
)
if mibBuilder.loadTexts:
    cachPerRuleStatsTable.setStatus("current")
_CachPerRuleStatsEntry_Object = MibTableRow
cachPerRuleStatsEntry = _CachPerRuleStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 15, 1)
)
cachPerRuleStatsEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "cachRuleRuleListIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "cachRuleIndex"),
)
if mibBuilder.loadTexts:
    cachPerRuleStatsEntry.setStatus("current")
_CachRuleRuleListIndex_Type = Integer32
_CachRuleRuleListIndex_Object = MibTableColumn
cachRuleRuleListIndex = _CachRuleRuleListIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 15, 1, 1),
    _CachRuleRuleListIndex_Type()
)
cachRuleRuleListIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachRuleRuleListIndex.setStatus("current")
_CachRuleIndex_Type = Integer32
_CachRuleIndex_Object = MibTableColumn
cachRuleIndex = _CachRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 15, 1, 2),
    _CachRuleIndex_Type()
)
cachRuleIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachRuleIndex.setStatus("current")
_CachRuleRuleListId_Type = DisplayString
_CachRuleRuleListId_Object = MibTableColumn
cachRuleRuleListId = _CachRuleRuleListId_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 15, 1, 3),
    _CachRuleRuleListId_Type()
)
cachRuleRuleListId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachRuleRuleListId.setStatus("current")
_CachRuleNumOfObjCac_Type = Integer32
_CachRuleNumOfObjCac_Object = MibTableColumn
cachRuleNumOfObjCac = _CachRuleNumOfObjCac_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 15, 1, 4),
    _CachRuleNumOfObjCac_Type()
)
cachRuleNumOfObjCac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachRuleNumOfObjCac.setStatus("current")
_CachRuleNumOfBytesCac_Type = Integer32
_CachRuleNumOfBytesCac_Object = MibTableColumn
cachRuleNumOfBytesCac = _CachRuleNumOfBytesCac_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 1, 15, 1, 5),
    _CachRuleNumOfBytesCac_Type()
)
cachRuleNumOfBytesCac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cachRuleNumOfBytesCac.setStatus("current")
_CompStats_ObjectIdentity = ObjectIdentity
compStats = _CompStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2)
)
_CompUnCompressedThrputKB_Type = Integer32
_CompUnCompressedThrputKB_Object = MibScalar
compUnCompressedThrputKB = _CompUnCompressedThrputKB_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 1),
    _CompUnCompressedThrputKB_Type()
)
compUnCompressedThrputKB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compUnCompressedThrputKB.setStatus("current")
_CompAvgSizeBefCompKB_Type = Integer32
_CompAvgSizeBefCompKB_Object = MibScalar
compAvgSizeBefCompKB = _CompAvgSizeBefCompKB_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 2),
    _CompAvgSizeBefCompKB_Type()
)
compAvgSizeBefCompKB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compAvgSizeBefCompKB.setStatus("current")
_CompCompressedThrputKB_Type = Integer32
_CompCompressedThrputKB_Object = MibScalar
compCompressedThrputKB = _CompCompressedThrputKB_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 3),
    _CompCompressedThrputKB_Type()
)
compCompressedThrputKB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compCompressedThrputKB.setStatus("current")
_CompAvgSizeAftCompKB_Type = Integer32
_CompAvgSizeAftCompKB_Object = MibScalar
compAvgSizeAftCompKB = _CompAvgSizeAftCompKB_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 4),
    _CompAvgSizeAftCompKB_Type()
)
compAvgSizeAftCompKB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compAvgSizeAftCompKB.setStatus("current")
_CompAvgCompRatio_Type = Integer32
_CompAvgCompRatio_Object = MibScalar
compAvgCompRatio = _CompAvgCompRatio_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 5),
    _CompAvgCompRatio_Type()
)
compAvgCompRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compAvgCompRatio.setStatus("current")
_CompThrputCompRatio_Type = Integer32
_CompThrputCompRatio_Object = MibScalar
compThrputCompRatio = _CompThrputCompRatio_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 6),
    _CompThrputCompRatio_Type()
)
compThrputCompRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compThrputCompRatio.setStatus("current")
_CompStatPerServTable_Object = MibTable
compStatPerServTable = _CompStatPerServTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 7)
)
if mibBuilder.loadTexts:
    compStatPerServTable.setStatus("current")
_CompStatPerServEntry_Object = MibTableRow
compStatPerServEntry = _CompStatPerServEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 7, 1)
)
compStatPerServEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "compStatPerServVirtServIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "compStatPerServVirtServiceIndex"),
)
if mibBuilder.loadTexts:
    compStatPerServEntry.setStatus("current")
_CompStatPerServVirtServIndex_Type = Integer32
_CompStatPerServVirtServIndex_Object = MibTableColumn
compStatPerServVirtServIndex = _CompStatPerServVirtServIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 7, 1, 1),
    _CompStatPerServVirtServIndex_Type()
)
compStatPerServVirtServIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    compStatPerServVirtServIndex.setStatus("current")
_CompStatPerServVirtServiceIndex_Type = Integer32
_CompStatPerServVirtServiceIndex_Object = MibTableColumn
compStatPerServVirtServiceIndex = _CompStatPerServVirtServiceIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 7, 1, 2),
    _CompStatPerServVirtServiceIndex_Type()
)
compStatPerServVirtServiceIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    compStatPerServVirtServiceIndex.setStatus("current")
_CompStatPerServVirtServPort_Type = Integer32
_CompStatPerServVirtServPort_Object = MibTableColumn
compStatPerServVirtServPort = _CompStatPerServVirtServPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 7, 1, 3),
    _CompStatPerServVirtServPort_Type()
)
compStatPerServVirtServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    compStatPerServVirtServPort.setStatus("current")
_CompStatPerServCompPolId_Type = DisplayString
_CompStatPerServCompPolId_Object = MibTableColumn
compStatPerServCompPolId = _CompStatPerServCompPolId_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 7, 1, 4),
    _CompStatPerServCompPolId_Type()
)
compStatPerServCompPolId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compStatPerServCompPolId.setStatus("current")
_CompStatPerServUnComprTputKb_Type = Integer32
_CompStatPerServUnComprTputKb_Object = MibTableColumn
compStatPerServUnComprTputKb = _CompStatPerServUnComprTputKb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 7, 1, 5),
    _CompStatPerServUnComprTputKb_Type()
)
compStatPerServUnComprTputKb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compStatPerServUnComprTputKb.setStatus("current")
_CompStatPerServComprTputKb_Type = Integer32
_CompStatPerServComprTputKb_Object = MibTableColumn
compStatPerServComprTputKb = _CompStatPerServComprTputKb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 7, 1, 6),
    _CompStatPerServComprTputKb_Type()
)
compStatPerServComprTputKb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compStatPerServComprTputKb.setStatus("current")
_CompStatPerServAvgSizeBefComp_Type = Integer32
_CompStatPerServAvgSizeBefComp_Object = MibTableColumn
compStatPerServAvgSizeBefComp = _CompStatPerServAvgSizeBefComp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 7, 1, 7),
    _CompStatPerServAvgSizeBefComp_Type()
)
compStatPerServAvgSizeBefComp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compStatPerServAvgSizeBefComp.setStatus("current")
_CompStatPerServAvgSizeAftComp_Type = Integer32
_CompStatPerServAvgSizeAftComp_Object = MibTableColumn
compStatPerServAvgSizeAftComp = _CompStatPerServAvgSizeAftComp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 7, 1, 8),
    _CompStatPerServAvgSizeAftComp_Type()
)
compStatPerServAvgSizeAftComp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compStatPerServAvgSizeAftComp.setStatus("current")
_CompStatPerServAvgCompRatio_Type = Integer32
_CompStatPerServAvgCompRatio_Object = MibTableColumn
compStatPerServAvgCompRatio = _CompStatPerServAvgCompRatio_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 7, 1, 9),
    _CompStatPerServAvgCompRatio_Type()
)
compStatPerServAvgCompRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compStatPerServAvgCompRatio.setStatus("current")
_CompStatPerServThrputCompRatio_Type = Integer32
_CompStatPerServThrputCompRatio_Object = MibTableColumn
compStatPerServThrputCompRatio = _CompStatPerServThrputCompRatio_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 7, 1, 10),
    _CompStatPerServThrputCompRatio_Type()
)
compStatPerServThrputCompRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compStatPerServThrputCompRatio.setStatus("current")
_CompPerBrowRuleListStatsTable_Object = MibTable
compPerBrowRuleListStatsTable = _CompPerBrowRuleListStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 8)
)
if mibBuilder.loadTexts:
    compPerBrowRuleListStatsTable.setStatus("current")
_CompPerBrowRuleListStatsEntry_Object = MibTableRow
compPerBrowRuleListStatsEntry = _CompPerBrowRuleListStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 8, 1)
)
compPerBrowRuleListStatsEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "compBrowRuleListIndex"),
)
if mibBuilder.loadTexts:
    compPerBrowRuleListStatsEntry.setStatus("current")
_CompBrowRuleListIndex_Type = Integer32
_CompBrowRuleListIndex_Object = MibTableColumn
compBrowRuleListIndex = _CompBrowRuleListIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 8, 1, 1),
    _CompBrowRuleListIndex_Type()
)
compBrowRuleListIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compBrowRuleListIndex.setStatus("current")
_CompBrowRuleListId_Type = DisplayString
_CompBrowRuleListId_Object = MibTableColumn
compBrowRuleListId = _CompBrowRuleListId_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 8, 1, 2),
    _CompBrowRuleListId_Type()
)
compBrowRuleListId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compBrowRuleListId.setStatus("current")
_CompBrowRuleListNumOfObj_Type = Integer32
_CompBrowRuleListNumOfObj_Object = MibTableColumn
compBrowRuleListNumOfObj = _CompBrowRuleListNumOfObj_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 8, 1, 3),
    _CompBrowRuleListNumOfObj_Type()
)
compBrowRuleListNumOfObj.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compBrowRuleListNumOfObj.setStatus("current")
_CompBrowRuleListSizeBefComp_Type = Integer32
_CompBrowRuleListSizeBefComp_Object = MibTableColumn
compBrowRuleListSizeBefComp = _CompBrowRuleListSizeBefComp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 8, 1, 4),
    _CompBrowRuleListSizeBefComp_Type()
)
compBrowRuleListSizeBefComp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compBrowRuleListSizeBefComp.setStatus("current")
_CompBrowRuleListSizeAftComp_Type = Integer32
_CompBrowRuleListSizeAftComp_Object = MibTableColumn
compBrowRuleListSizeAftComp = _CompBrowRuleListSizeAftComp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 8, 1, 5),
    _CompBrowRuleListSizeAftComp_Type()
)
compBrowRuleListSizeAftComp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compBrowRuleListSizeAftComp.setStatus("current")
_CompBrowRuleListCompRatio_Type = Integer32
_CompBrowRuleListCompRatio_Object = MibTableColumn
compBrowRuleListCompRatio = _CompBrowRuleListCompRatio_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 8, 1, 6),
    _CompBrowRuleListCompRatio_Type()
)
compBrowRuleListCompRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compBrowRuleListCompRatio.setStatus("current")
_CompPerBrowRuleStatsTable_Object = MibTable
compPerBrowRuleStatsTable = _CompPerBrowRuleStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 9)
)
if mibBuilder.loadTexts:
    compPerBrowRuleStatsTable.setStatus("current")
_CompPerBrowRuleStatsEntry_Object = MibTableRow
compPerBrowRuleStatsEntry = _CompPerBrowRuleStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 9, 1)
)
compPerBrowRuleStatsEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "compBrowRuleRuleListIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "compBrowRuleIndex"),
)
if mibBuilder.loadTexts:
    compPerBrowRuleStatsEntry.setStatus("current")
_CompBrowRuleRuleListIndex_Type = Integer32
_CompBrowRuleRuleListIndex_Object = MibTableColumn
compBrowRuleRuleListIndex = _CompBrowRuleRuleListIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 9, 1, 1),
    _CompBrowRuleRuleListIndex_Type()
)
compBrowRuleRuleListIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compBrowRuleRuleListIndex.setStatus("current")
_CompBrowRuleIndex_Type = Integer32
_CompBrowRuleIndex_Object = MibTableColumn
compBrowRuleIndex = _CompBrowRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 9, 1, 2),
    _CompBrowRuleIndex_Type()
)
compBrowRuleIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compBrowRuleIndex.setStatus("current")
_CompBrowRuleRuleListId_Type = DisplayString
_CompBrowRuleRuleListId_Object = MibTableColumn
compBrowRuleRuleListId = _CompBrowRuleRuleListId_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 9, 1, 3),
    _CompBrowRuleRuleListId_Type()
)
compBrowRuleRuleListId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compBrowRuleRuleListId.setStatus("current")
_CompBrowRuleNumOfObj_Type = Integer32
_CompBrowRuleNumOfObj_Object = MibTableColumn
compBrowRuleNumOfObj = _CompBrowRuleNumOfObj_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 9, 1, 4),
    _CompBrowRuleNumOfObj_Type()
)
compBrowRuleNumOfObj.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compBrowRuleNumOfObj.setStatus("current")
_CompBrowRuleSizeBefComp_Type = Integer32
_CompBrowRuleSizeBefComp_Object = MibTableColumn
compBrowRuleSizeBefComp = _CompBrowRuleSizeBefComp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 9, 1, 5),
    _CompBrowRuleSizeBefComp_Type()
)
compBrowRuleSizeBefComp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compBrowRuleSizeBefComp.setStatus("current")
_CompBrowRuleSizeAftComp_Type = Integer32
_CompBrowRuleSizeAftComp_Object = MibTableColumn
compBrowRuleSizeAftComp = _CompBrowRuleSizeAftComp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 9, 1, 6),
    _CompBrowRuleSizeAftComp_Type()
)
compBrowRuleSizeAftComp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compBrowRuleSizeAftComp.setStatus("current")
_CompBrowRuleCompRatio_Type = Integer32
_CompBrowRuleCompRatio_Object = MibTableColumn
compBrowRuleCompRatio = _CompBrowRuleCompRatio_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 9, 1, 7),
    _CompBrowRuleCompRatio_Type()
)
compBrowRuleCompRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compBrowRuleCompRatio.setStatus("current")
_CompPerUrlRuleListStatsTable_Object = MibTable
compPerUrlRuleListStatsTable = _CompPerUrlRuleListStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 10)
)
if mibBuilder.loadTexts:
    compPerUrlRuleListStatsTable.setStatus("current")
_CompPerUrlRuleListStatsEntry_Object = MibTableRow
compPerUrlRuleListStatsEntry = _CompPerUrlRuleListStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 10, 1)
)
compPerUrlRuleListStatsEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "compUrlRuleListIndex"),
)
if mibBuilder.loadTexts:
    compPerUrlRuleListStatsEntry.setStatus("current")
_CompUrlRuleListIndex_Type = Integer32
_CompUrlRuleListIndex_Object = MibTableColumn
compUrlRuleListIndex = _CompUrlRuleListIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 10, 1, 1),
    _CompUrlRuleListIndex_Type()
)
compUrlRuleListIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compUrlRuleListIndex.setStatus("current")
_CompUrlRuleListId_Type = DisplayString
_CompUrlRuleListId_Object = MibTableColumn
compUrlRuleListId = _CompUrlRuleListId_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 10, 1, 2),
    _CompUrlRuleListId_Type()
)
compUrlRuleListId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compUrlRuleListId.setStatus("current")
_CompUrlRuleListNumOfObj_Type = Integer32
_CompUrlRuleListNumOfObj_Object = MibTableColumn
compUrlRuleListNumOfObj = _CompUrlRuleListNumOfObj_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 10, 1, 3),
    _CompUrlRuleListNumOfObj_Type()
)
compUrlRuleListNumOfObj.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compUrlRuleListNumOfObj.setStatus("current")
_CompUrlRuleListSizeBefComp_Type = Integer32
_CompUrlRuleListSizeBefComp_Object = MibTableColumn
compUrlRuleListSizeBefComp = _CompUrlRuleListSizeBefComp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 10, 1, 4),
    _CompUrlRuleListSizeBefComp_Type()
)
compUrlRuleListSizeBefComp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compUrlRuleListSizeBefComp.setStatus("current")
_CompUrlRuleListSizeAftComp_Type = Integer32
_CompUrlRuleListSizeAftComp_Object = MibTableColumn
compUrlRuleListSizeAftComp = _CompUrlRuleListSizeAftComp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 10, 1, 5),
    _CompUrlRuleListSizeAftComp_Type()
)
compUrlRuleListSizeAftComp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compUrlRuleListSizeAftComp.setStatus("current")
_CompUrlRuleListCompRatio_Type = Integer32
_CompUrlRuleListCompRatio_Object = MibTableColumn
compUrlRuleListCompRatio = _CompUrlRuleListCompRatio_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 10, 1, 6),
    _CompUrlRuleListCompRatio_Type()
)
compUrlRuleListCompRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compUrlRuleListCompRatio.setStatus("current")
_CompPerUrlRuleStatsTable_Object = MibTable
compPerUrlRuleStatsTable = _CompPerUrlRuleStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 11)
)
if mibBuilder.loadTexts:
    compPerUrlRuleStatsTable.setStatus("current")
_CompPerUrlRuleStatsEntry_Object = MibTableRow
compPerUrlRuleStatsEntry = _CompPerUrlRuleStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 11, 1)
)
compPerUrlRuleStatsEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "compUrlRuleRuleListIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "compUrlRuleIndex"),
)
if mibBuilder.loadTexts:
    compPerUrlRuleStatsEntry.setStatus("current")
_CompUrlRuleRuleListIndex_Type = Integer32
_CompUrlRuleRuleListIndex_Object = MibTableColumn
compUrlRuleRuleListIndex = _CompUrlRuleRuleListIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 11, 1, 1),
    _CompUrlRuleRuleListIndex_Type()
)
compUrlRuleRuleListIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compUrlRuleRuleListIndex.setStatus("current")
_CompUrlRuleIndex_Type = Integer32
_CompUrlRuleIndex_Object = MibTableColumn
compUrlRuleIndex = _CompUrlRuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 11, 1, 2),
    _CompUrlRuleIndex_Type()
)
compUrlRuleIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compUrlRuleIndex.setStatus("current")
_CompUrlRuleRuleListId_Type = DisplayString
_CompUrlRuleRuleListId_Object = MibTableColumn
compUrlRuleRuleListId = _CompUrlRuleRuleListId_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 11, 1, 3),
    _CompUrlRuleRuleListId_Type()
)
compUrlRuleRuleListId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compUrlRuleRuleListId.setStatus("current")
_CompUrlRuleNumOfObj_Type = Integer32
_CompUrlRuleNumOfObj_Object = MibTableColumn
compUrlRuleNumOfObj = _CompUrlRuleNumOfObj_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 11, 1, 4),
    _CompUrlRuleNumOfObj_Type()
)
compUrlRuleNumOfObj.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compUrlRuleNumOfObj.setStatus("current")
_CompUrlRuleSizeBefComp_Type = Integer32
_CompUrlRuleSizeBefComp_Object = MibTableColumn
compUrlRuleSizeBefComp = _CompUrlRuleSizeBefComp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 11, 1, 5),
    _CompUrlRuleSizeBefComp_Type()
)
compUrlRuleSizeBefComp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compUrlRuleSizeBefComp.setStatus("current")
_CompUrlRuleSizeAftComp_Type = Integer32
_CompUrlRuleSizeAftComp_Object = MibTableColumn
compUrlRuleSizeAftComp = _CompUrlRuleSizeAftComp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 11, 1, 6),
    _CompUrlRuleSizeAftComp_Type()
)
compUrlRuleSizeAftComp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compUrlRuleSizeAftComp.setStatus("current")
_CompUrlRuleCompRatio_Type = Integer32
_CompUrlRuleCompRatio_Object = MibTableColumn
compUrlRuleCompRatio = _CompUrlRuleCompRatio_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 23, 2, 11, 1, 7),
    _CompUrlRuleCompRatio_Type()
)
compUrlRuleCompRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    compUrlRuleCompRatio.setStatus("current")
_HttpStats_ObjectIdentity = ObjectIdentity
httpStats = _HttpStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24)
)
_HttpStatSummCliusingKeepAliv_Type = Integer32
_HttpStatSummCliusingKeepAliv_Object = MibScalar
httpStatSummCliusingKeepAliv = _HttpStatSummCliusingKeepAliv_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 1),
    _HttpStatSummCliusingKeepAliv_Type()
)
httpStatSummCliusingKeepAliv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpStatSummCliusingKeepAliv.setStatus("current")
_HttpStatSummHTTP10Per_Type = Integer32
_HttpStatSummHTTP10Per_Object = MibScalar
httpStatSummHTTP10Per = _HttpStatSummHTTP10Per_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 2),
    _HttpStatSummHTTP10Per_Type()
)
httpStatSummHTTP10Per.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpStatSummHTTP10Per.setStatus("current")
_HttpStatSummHTTP11Per_Type = Integer32
_HttpStatSummHTTP11Per_Object = MibScalar
httpStatSummHTTP11Per = _HttpStatSummHTTP11Per_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 3),
    _HttpStatSummHTTP11Per_Type()
)
httpStatSummHTTP11Per.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpStatSummHTTP11Per.setStatus("current")
_HttpStatSummHttpToHttpsRedir_Type = Integer32
_HttpStatSummHttpToHttpsRedir_Object = MibScalar
httpStatSummHttpToHttpsRedir = _HttpStatSummHttpToHttpsRedir_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 4),
    _HttpStatSummHttpToHttpsRedir_Type()
)
httpStatSummHttpToHttpsRedir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpStatSummHttpToHttpsRedir.setStatus("current")
_HttpStatSummAvgNumReqPerConn_Type = Integer32
_HttpStatSummAvgNumReqPerConn_Object = MibScalar
httpStatSummAvgNumReqPerConn = _HttpStatSummAvgNumReqPerConn_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 5),
    _HttpStatSummAvgNumReqPerConn_Type()
)
httpStatSummAvgNumReqPerConn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpStatSummAvgNumReqPerConn.setStatus("current")
_HttpStatSummResSmall1Kb_Type = Integer32
_HttpStatSummResSmall1Kb_Object = MibScalar
httpStatSummResSmall1Kb = _HttpStatSummResSmall1Kb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 6),
    _HttpStatSummResSmall1Kb_Type()
)
httpStatSummResSmall1Kb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpStatSummResSmall1Kb.setStatus("current")
_HttpStatSummRes1KbTo10Kb_Type = Integer32
_HttpStatSummRes1KbTo10Kb_Object = MibScalar
httpStatSummRes1KbTo10Kb = _HttpStatSummRes1KbTo10Kb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 7),
    _HttpStatSummRes1KbTo10Kb_Type()
)
httpStatSummRes1KbTo10Kb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpStatSummRes1KbTo10Kb.setStatus("current")
_HttpStatSummRes11KbTo50Kb_Type = Integer32
_HttpStatSummRes11KbTo50Kb_Object = MibScalar
httpStatSummRes11KbTo50Kb = _HttpStatSummRes11KbTo50Kb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 8),
    _HttpStatSummRes11KbTo50Kb_Type()
)
httpStatSummRes11KbTo50Kb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpStatSummRes11KbTo50Kb.setStatus("current")
_HttpStatSummRes51KbTo100Kb_Type = Integer32
_HttpStatSummRes51KbTo100Kb_Object = MibScalar
httpStatSummRes51KbTo100Kb = _HttpStatSummRes51KbTo100Kb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 9),
    _HttpStatSummRes51KbTo100Kb_Type()
)
httpStatSummRes51KbTo100Kb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpStatSummRes51KbTo100Kb.setStatus("current")
_HttpStatSummResLarger100Kb_Type = Integer32
_HttpStatSummResLarger100Kb_Object = MibScalar
httpStatSummResLarger100Kb = _HttpStatSummResLarger100Kb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 10),
    _HttpStatSummResLarger100Kb_Type()
)
httpStatSummResLarger100Kb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpStatSummResLarger100Kb.setStatus("current")
_HttpTransSummReqCliToAas_Type = Integer32
_HttpTransSummReqCliToAas_Object = MibScalar
httpTransSummReqCliToAas = _HttpTransSummReqCliToAas_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 11),
    _HttpTransSummReqCliToAas_Type()
)
httpTransSummReqCliToAas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpTransSummReqCliToAas.setStatus("current")
_HttpTransSummReqAasToSer_Type = Integer32
_HttpTransSummReqAasToSer_Object = MibScalar
httpTransSummReqAasToSer = _HttpTransSummReqAasToSer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 12),
    _HttpTransSummReqAasToSer_Type()
)
httpTransSummReqAasToSer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpTransSummReqAasToSer.setStatus("current")
_HttpTransSummResSerToAas_Type = Integer32
_HttpTransSummResSerToAas_Object = MibScalar
httpTransSummResSerToAas = _HttpTransSummResSerToAas_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 13),
    _HttpTransSummResSerToAas_Type()
)
httpTransSummResSerToAas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpTransSummResSerToAas.setStatus("current")
_HttpTransSummResAasToCli_Type = Integer32
_HttpTransSummResAasToCli_Object = MibScalar
httpTransSummResAasToCli = _HttpTransSummResAasToCli_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 14),
    _HttpTransSummResAasToCli_Type()
)
httpTransSummResAasToCli.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpTransSummResAasToCli.setStatus("current")
_HttpTransSummTransRate_Type = Integer32
_HttpTransSummTransRate_Object = MibScalar
httpTransSummTransRate = _HttpTransSummTransRate_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 15),
    _HttpTransSummTransRate_Type()
)
httpTransSummTransRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpTransSummTransRate.setStatus("current")
_HttpPerServStatsTable_Object = MibTable
httpPerServStatsTable = _HttpPerServStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 16)
)
if mibBuilder.loadTexts:
    httpPerServStatsTable.setStatus("current")
_HttpPerServStatsEntry_Object = MibTableRow
httpPerServStatsEntry = _HttpPerServStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 16, 1)
)
httpPerServStatsEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "httpPerServStatsVirtServIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "httpPerServStatsVirtServiceIndex"),
)
if mibBuilder.loadTexts:
    httpPerServStatsEntry.setStatus("current")
_HttpPerServStatsVirtServIndex_Type = Integer32
_HttpPerServStatsVirtServIndex_Object = MibTableColumn
httpPerServStatsVirtServIndex = _HttpPerServStatsVirtServIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 16, 1, 1),
    _HttpPerServStatsVirtServIndex_Type()
)
httpPerServStatsVirtServIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    httpPerServStatsVirtServIndex.setStatus("current")
_HttpPerServStatsVirtServiceIndex_Type = Integer32
_HttpPerServStatsVirtServiceIndex_Object = MibTableColumn
httpPerServStatsVirtServiceIndex = _HttpPerServStatsVirtServiceIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 16, 1, 2),
    _HttpPerServStatsVirtServiceIndex_Type()
)
httpPerServStatsVirtServiceIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    httpPerServStatsVirtServiceIndex.setStatus("current")
_HttpPerServStatsVirtServPort_Type = Integer32
_HttpPerServStatsVirtServPort_Object = MibTableColumn
httpPerServStatsVirtServPort = _HttpPerServStatsVirtServPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 16, 1, 3),
    _HttpPerServStatsVirtServPort_Type()
)
httpPerServStatsVirtServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    httpPerServStatsVirtServPort.setStatus("current")
_HttpPerServStatsCliUseKeepAlive_Type = Integer32
_HttpPerServStatsCliUseKeepAlive_Object = MibTableColumn
httpPerServStatsCliUseKeepAlive = _HttpPerServStatsCliUseKeepAlive_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 16, 1, 4),
    _HttpPerServStatsCliUseKeepAlive_Type()
)
httpPerServStatsCliUseKeepAlive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpPerServStatsCliUseKeepAlive.setStatus("current")
_HttpPerServStatsHttp10VsHttp11Ratio_Type = Integer32
_HttpPerServStatsHttp10VsHttp11Ratio_Object = MibTableColumn
httpPerServStatsHttp10VsHttp11Ratio = _HttpPerServStatsHttp10VsHttp11Ratio_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 16, 1, 5),
    _HttpPerServStatsHttp10VsHttp11Ratio_Type()
)
httpPerServStatsHttp10VsHttp11Ratio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpPerServStatsHttp10VsHttp11Ratio.setStatus("current")
_HttpPerServStatsHttpToHTTPSRedir_Type = Integer32
_HttpPerServStatsHttpToHTTPSRedir_Object = MibTableColumn
httpPerServStatsHttpToHTTPSRedir = _HttpPerServStatsHttpToHTTPSRedir_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 16, 1, 6),
    _HttpPerServStatsHttpToHTTPSRedir_Type()
)
httpPerServStatsHttpToHTTPSRedir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpPerServStatsHttpToHTTPSRedir.setStatus("current")
_HttpPerServStatsAvgNumReqPerConn_Type = Integer32
_HttpPerServStatsAvgNumReqPerConn_Object = MibTableColumn
httpPerServStatsAvgNumReqPerConn = _HttpPerServStatsAvgNumReqPerConn_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 16, 1, 7),
    _HttpPerServStatsAvgNumReqPerConn_Type()
)
httpPerServStatsAvgNumReqPerConn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpPerServStatsAvgNumReqPerConn.setStatus("current")
_HttpPerServStatsRespSmall1Kb_Type = Integer32
_HttpPerServStatsRespSmall1Kb_Object = MibTableColumn
httpPerServStatsRespSmall1Kb = _HttpPerServStatsRespSmall1Kb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 16, 1, 8),
    _HttpPerServStatsRespSmall1Kb_Type()
)
httpPerServStatsRespSmall1Kb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpPerServStatsRespSmall1Kb.setStatus("current")
_HttpPerServStatsResp1KbTo10Kb_Type = Integer32
_HttpPerServStatsResp1KbTo10Kb_Object = MibTableColumn
httpPerServStatsResp1KbTo10Kb = _HttpPerServStatsResp1KbTo10Kb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 16, 1, 9),
    _HttpPerServStatsResp1KbTo10Kb_Type()
)
httpPerServStatsResp1KbTo10Kb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpPerServStatsResp1KbTo10Kb.setStatus("current")
_HttpPerServStatsResp11KbTo50Kb_Type = Integer32
_HttpPerServStatsResp11KbTo50Kb_Object = MibTableColumn
httpPerServStatsResp11KbTo50Kb = _HttpPerServStatsResp11KbTo50Kb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 16, 1, 10),
    _HttpPerServStatsResp11KbTo50Kb_Type()
)
httpPerServStatsResp11KbTo50Kb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpPerServStatsResp11KbTo50Kb.setStatus("current")
_HttpPerServStatsResp51KbTo100Kb_Type = Integer32
_HttpPerServStatsResp51KbTo100Kb_Object = MibTableColumn
httpPerServStatsResp51KbTo100Kb = _HttpPerServStatsResp51KbTo100Kb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 16, 1, 11),
    _HttpPerServStatsResp51KbTo100Kb_Type()
)
httpPerServStatsResp51KbTo100Kb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpPerServStatsResp51KbTo100Kb.setStatus("current")
_HttpPerServStatsRespLarger100Kb_Type = Integer32
_HttpPerServStatsRespLarger100Kb_Object = MibTableColumn
httpPerServStatsRespLarger100Kb = _HttpPerServStatsRespLarger100Kb_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 16, 1, 12),
    _HttpPerServStatsRespLarger100Kb_Type()
)
httpPerServStatsRespLarger100Kb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpPerServStatsRespLarger100Kb.setStatus("current")
_HttpPerServStatsReqCliToAas_Type = Integer32
_HttpPerServStatsReqCliToAas_Object = MibTableColumn
httpPerServStatsReqCliToAas = _HttpPerServStatsReqCliToAas_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 16, 1, 13),
    _HttpPerServStatsReqCliToAas_Type()
)
httpPerServStatsReqCliToAas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpPerServStatsReqCliToAas.setStatus("current")
_HttpPerServStatsReqAasToSer_Type = Integer32
_HttpPerServStatsReqAasToSer_Object = MibTableColumn
httpPerServStatsReqAasToSer = _HttpPerServStatsReqAasToSer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 16, 1, 14),
    _HttpPerServStatsReqAasToSer_Type()
)
httpPerServStatsReqAasToSer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpPerServStatsReqAasToSer.setStatus("current")
_HttpPerServStatsRespSerToAas_Type = Integer32
_HttpPerServStatsRespSerToAas_Object = MibTableColumn
httpPerServStatsRespSerToAas = _HttpPerServStatsRespSerToAas_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 16, 1, 15),
    _HttpPerServStatsRespSerToAas_Type()
)
httpPerServStatsRespSerToAas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpPerServStatsRespSerToAas.setStatus("current")
_HttpPerServStatsRespAasToCli_Type = Integer32
_HttpPerServStatsRespAasToCli_Object = MibTableColumn
httpPerServStatsRespAasToCli = _HttpPerServStatsRespAasToCli_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 16, 1, 16),
    _HttpPerServStatsRespAasToCli_Type()
)
httpPerServStatsRespAasToCli.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpPerServStatsRespAasToCli.setStatus("current")
_HttpPerServStatsTransRate_Type = Integer32
_HttpPerServStatsTransRate_Object = MibTableColumn
httpPerServStatsTransRate = _HttpPerServStatsTransRate_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 16, 1, 17),
    _HttpPerServStatsTransRate_Type()
)
httpPerServStatsTransRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpPerServStatsTransRate.setStatus("current")
_ConnmngStats_ObjectIdentity = ObjectIdentity
connmngStats = _ConnmngStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 17)
)
_ConnmngStatSummServConn_Type = Integer32
_ConnmngStatSummServConn_Object = MibScalar
connmngStatSummServConn = _ConnmngStatSummServConn_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 17, 1),
    _ConnmngStatSummServConn_Type()
)
connmngStatSummServConn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connmngStatSummServConn.setStatus("current")
_ConnmngStatSummCliReq_Type = Integer32
_ConnmngStatSummCliReq_Object = MibScalar
connmngStatSummCliReq = _ConnmngStatSummCliReq_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 17, 2),
    _ConnmngStatSummCliReq_Type()
)
connmngStatSummCliReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connmngStatSummCliReq.setStatus("current")
_ConnmngStatSummMulRatio_Type = Integer32
_ConnmngStatSummMulRatio_Object = MibScalar
connmngStatSummMulRatio = _ConnmngStatSummMulRatio_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 17, 3),
    _ConnmngStatSummMulRatio_Type()
)
connmngStatSummMulRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connmngStatSummMulRatio.setStatus("current")
_ConnmngPerServStatsTable_Object = MibTable
connmngPerServStatsTable = _ConnmngPerServStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 17, 4)
)
if mibBuilder.loadTexts:
    connmngPerServStatsTable.setStatus("current")
_ConnmngPerServStatsEntry_Object = MibTableRow
connmngPerServStatsEntry = _ConnmngPerServStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 17, 4, 1)
)
connmngPerServStatsEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "connmngPerServStatsVirtServIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "connmngPerServStatsVirtServiceIndex"),
)
if mibBuilder.loadTexts:
    connmngPerServStatsEntry.setStatus("current")
_ConnmngPerServStatsVirtServIndex_Type = Integer32
_ConnmngPerServStatsVirtServIndex_Object = MibTableColumn
connmngPerServStatsVirtServIndex = _ConnmngPerServStatsVirtServIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 17, 4, 1, 1),
    _ConnmngPerServStatsVirtServIndex_Type()
)
connmngPerServStatsVirtServIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connmngPerServStatsVirtServIndex.setStatus("current")
_ConnmngPerServStatsVirtServiceIndex_Type = Integer32
_ConnmngPerServStatsVirtServiceIndex_Object = MibTableColumn
connmngPerServStatsVirtServiceIndex = _ConnmngPerServStatsVirtServiceIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 17, 4, 1, 2),
    _ConnmngPerServStatsVirtServiceIndex_Type()
)
connmngPerServStatsVirtServiceIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connmngPerServStatsVirtServiceIndex.setStatus("current")
_ConnmngPerServStatsVirtServPort_Type = Integer32
_ConnmngPerServStatsVirtServPort_Object = MibTableColumn
connmngPerServStatsVirtServPort = _ConnmngPerServStatsVirtServPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 17, 4, 1, 3),
    _ConnmngPerServStatsVirtServPort_Type()
)
connmngPerServStatsVirtServPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connmngPerServStatsVirtServPort.setStatus("current")
_ConnmngPerServStatsServConn_Type = Integer32
_ConnmngPerServStatsServConn_Object = MibTableColumn
connmngPerServStatsServConn = _ConnmngPerServStatsServConn_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 17, 4, 1, 4),
    _ConnmngPerServStatsServConn_Type()
)
connmngPerServStatsServConn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connmngPerServStatsServConn.setStatus("current")
_ConnmngPerServStatsCliReq_Type = Integer32
_ConnmngPerServStatsCliReq_Object = MibTableColumn
connmngPerServStatsCliReq = _ConnmngPerServStatsCliReq_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 17, 4, 1, 5),
    _ConnmngPerServStatsCliReq_Type()
)
connmngPerServStatsCliReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connmngPerServStatsCliReq.setStatus("current")
_ConnmngPerServStatsMulRatio_Type = Integer32
_ConnmngPerServStatsMulRatio_Object = MibTableColumn
connmngPerServStatsMulRatio = _ConnmngPerServStatsMulRatio_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 24, 17, 4, 1, 6),
    _ConnmngPerServStatsMulRatio_Type()
)
connmngPerServStatsMulRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connmngPerServStatsMulRatio.setStatus("current")
_SapStats_ObjectIdentity = ObjectIdentity
sapStats = _SapStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 25)
)
_SlbStatSapAslrTable_Object = MibTable
slbStatSapAslrTable = _SlbStatSapAslrTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 25, 1)
)
if mibBuilder.loadTexts:
    slbStatSapAslrTable.setStatus("current")
_SlbStatSapAslrEntry_Object = MibTableRow
slbStatSapAslrEntry = _SlbStatSapAslrEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 25, 1, 1)
)
slbStatSapAslrEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbStatSapAslrIndex"),
)
if mibBuilder.loadTexts:
    slbStatSapAslrEntry.setStatus("current")
_SlbStatSapAslrIndex_Type = Integer32
_SlbStatSapAslrIndex_Object = MibTableColumn
slbStatSapAslrIndex = _SlbStatSapAslrIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 25, 1, 1, 1),
    _SlbStatSapAslrIndex_Type()
)
slbStatSapAslrIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSapAslrIndex.setStatus("current")
_SlbStatSapAslrSampling_Type = Counter32
_SlbStatSapAslrSampling_Object = MibTableColumn
slbStatSapAslrSampling = _SlbStatSapAslrSampling_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 25, 1, 1, 2),
    _SlbStatSapAslrSampling_Type()
)
slbStatSapAslrSampling.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSapAslrSampling.setStatus("current")
_SlbStatSapAslrFailure_Type = Counter32
_SlbStatSapAslrFailure_Object = MibTableColumn
slbStatSapAslrFailure = _SlbStatSapAslrFailure_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 25, 1, 1, 3),
    _SlbStatSapAslrFailure_Type()
)
slbStatSapAslrFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSapAslrFailure.setStatus("current")
_SlbStatSapAslrDeviceUpdates_Type = Counter32
_SlbStatSapAslrDeviceUpdates_Object = MibTableColumn
slbStatSapAslrDeviceUpdates = _SlbStatSapAslrDeviceUpdates_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 25, 1, 1, 4),
    _SlbStatSapAslrDeviceUpdates_Type()
)
slbStatSapAslrDeviceUpdates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSapAslrDeviceUpdates.setStatus("current")
_SlbStatSapAslrDeviceFailure_Type = Counter32
_SlbStatSapAslrDeviceFailure_Object = MibTableColumn
slbStatSapAslrDeviceFailure = _SlbStatSapAslrDeviceFailure_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 25, 1, 1, 5),
    _SlbStatSapAslrDeviceFailure_Type()
)
slbStatSapAslrDeviceFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSapAslrDeviceFailure.setStatus("current")


class _SlbStatSapAslrLastAct_Type(DisplayString):
    """Custom type slbStatSapAslrLastAct based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SlbStatSapAslrLastAct_Type.__name__ = "DisplayString"
_SlbStatSapAslrLastAct_Object = MibTableColumn
slbStatSapAslrLastAct = _SlbStatSapAslrLastAct_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 2, 25, 1, 1, 6),
    _SlbStatSapAslrLastAct_Type()
)
slbStatSapAslrLastAct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbStatSapAslrLastAct.setStatus("current")
_Layer4Info_ObjectIdentity = ObjectIdentity
layer4Info = _Layer4Info_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3)
)
_SlbRealServerInfoTable_Object = MibTable
slbRealServerInfoTable = _SlbRealServerInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 1)
)
if mibBuilder.loadTexts:
    slbRealServerInfoTable.setStatus("current")
_SlbRealServerInfoEntry_Object = MibTableRow
slbRealServerInfoEntry = _SlbRealServerInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 1, 1)
)
slbRealServerInfoEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbRealServerInfoIndex"),
)
if mibBuilder.loadTexts:
    slbRealServerInfoEntry.setStatus("current")
_SlbRealServerInfoIndex_Type = Integer32
_SlbRealServerInfoIndex_Object = MibTableColumn
slbRealServerInfoIndex = _SlbRealServerInfoIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 1, 1, 1),
    _SlbRealServerInfoIndex_Type()
)
slbRealServerInfoIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbRealServerInfoIndex.setStatus("current")
_SlbRealServerInfoIpAddr_Type = IpAddress
_SlbRealServerInfoIpAddr_Object = MibTableColumn
slbRealServerInfoIpAddr = _SlbRealServerInfoIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 1, 1, 2),
    _SlbRealServerInfoIpAddr_Type()
)
slbRealServerInfoIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbRealServerInfoIpAddr.setStatus("current")
_SlbRealServerMacAddr_Type = PhysAddress
_SlbRealServerMacAddr_Object = MibTableColumn
slbRealServerMacAddr = _SlbRealServerMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 1, 1, 3),
    _SlbRealServerMacAddr_Type()
)
slbRealServerMacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbRealServerMacAddr.setStatus("current")
_SlbRealServerInfoSwitchPort_Type = Integer32
_SlbRealServerInfoSwitchPort_Object = MibTableColumn
slbRealServerInfoSwitchPort = _SlbRealServerInfoSwitchPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 1, 1, 4),
    _SlbRealServerInfoSwitchPort_Type()
)
slbRealServerInfoSwitchPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbRealServerInfoSwitchPort.setStatus("current")


class _SlbRealServerInfoHealthLayer_Type(Integer32):
    """Custom type slbRealServerInfoHealthLayer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("layer1", 1),
          ("layer3", 3),
          ("layer4", 4))
    )


_SlbRealServerInfoHealthLayer_Type.__name__ = "Integer32"
_SlbRealServerInfoHealthLayer_Object = MibTableColumn
slbRealServerInfoHealthLayer = _SlbRealServerInfoHealthLayer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 1, 1, 5),
    _SlbRealServerInfoHealthLayer_Type()
)
slbRealServerInfoHealthLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbRealServerInfoHealthLayer.setStatus("current")


class _SlbRealServerInfoOverflow_Type(Integer32):
    """Custom type slbRealServerInfoOverflow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-overflow", 2),
          ("overflow", 1))
    )


_SlbRealServerInfoOverflow_Type.__name__ = "Integer32"
_SlbRealServerInfoOverflow_Object = MibTableColumn
slbRealServerInfoOverflow = _SlbRealServerInfoOverflow_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 1, 1, 6),
    _SlbRealServerInfoOverflow_Type()
)
slbRealServerInfoOverflow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbRealServerInfoOverflow.setStatus("current")


class _SlbRealServerInfoState_Type(Integer32):
    """Custom type slbRealServerInfoState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("failed", 3),
          ("running", 2))
    )


_SlbRealServerInfoState_Type.__name__ = "Integer32"
_SlbRealServerInfoState_Object = MibTableColumn
slbRealServerInfoState = _SlbRealServerInfoState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 1, 1, 7),
    _SlbRealServerInfoState_Type()
)
slbRealServerInfoState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbRealServerInfoState.setStatus("current")
_SlbRealServerInfoVlan_Type = Integer32
_SlbRealServerInfoVlan_Object = MibTableColumn
slbRealServerInfoVlan = _SlbRealServerInfoVlan_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 1, 1, 8),
    _SlbRealServerInfoVlan_Type()
)
slbRealServerInfoVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbRealServerInfoVlan.setStatus("current")
_SlbRealServerRportInfoTable_Object = MibTable
slbRealServerRportInfoTable = _SlbRealServerRportInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 3)
)
if mibBuilder.loadTexts:
    slbRealServerRportInfoTable.setStatus("current")
_SlbRealServerRportInfoEntry_Object = MibTableRow
slbRealServerRportInfoEntry = _SlbRealServerRportInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 3, 1)
)
slbRealServerRportInfoEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbRealServerRportRealIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbRealServerRportServIndex"),
)
if mibBuilder.loadTexts:
    slbRealServerRportInfoEntry.setStatus("current")
_SlbRealServerRportRealIndex_Type = Integer32
_SlbRealServerRportRealIndex_Object = MibTableColumn
slbRealServerRportRealIndex = _SlbRealServerRportRealIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 3, 1, 1),
    _SlbRealServerRportRealIndex_Type()
)
slbRealServerRportRealIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbRealServerRportRealIndex.setStatus("current")
_SlbRealServerRportServIndex_Type = Integer32
_SlbRealServerRportServIndex_Object = MibTableColumn
slbRealServerRportServIndex = _SlbRealServerRportServIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 3, 1, 2),
    _SlbRealServerRportServIndex_Type()
)
slbRealServerRportServIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbRealServerRportServIndex.setStatus("current")
_SlbRealServerRportInfoRport_Type = Integer32
_SlbRealServerRportInfoRport_Object = MibTableColumn
slbRealServerRportInfoRport = _SlbRealServerRportInfoRport_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 3, 1, 3),
    _SlbRealServerRportInfoRport_Type()
)
slbRealServerRportInfoRport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbRealServerRportInfoRport.setStatus("current")


class _SlbRealServerRportInfoState_Type(Integer32):
    """Custom type slbRealServerRportInfoState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("down", 2),
          ("slowstart", 3),
          ("up", 1))
    )


_SlbRealServerRportInfoState_Type.__name__ = "Integer32"
_SlbRealServerRportInfoState_Object = MibTableColumn
slbRealServerRportInfoState = _SlbRealServerRportInfoState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 3, 1, 4),
    _SlbRealServerRportInfoState_Type()
)
slbRealServerRportInfoState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbRealServerRportInfoState.setStatus("current")
_SlbRealServerRportInfoGroup_Type = Integer32
_SlbRealServerRportInfoGroup_Object = MibTableColumn
slbRealServerRportInfoGroup = _SlbRealServerRportInfoGroup_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 3, 1, 5),
    _SlbRealServerRportInfoGroup_Type()
)
slbRealServerRportInfoGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbRealServerRportInfoGroup.setStatus("current")
_SlbVirtServicesInfoTable_Object = MibTable
slbVirtServicesInfoTable = _SlbVirtServicesInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 4)
)
if mibBuilder.loadTexts:
    slbVirtServicesInfoTable.setStatus("current")
_SlbVirtServicesInfoEntry_Object = MibTableRow
slbVirtServicesInfoEntry = _SlbVirtServicesInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 4, 1)
)
slbVirtServicesInfoEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbVirtServicesInfoVirtServIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbVirtServicesInfoSvcIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbVirtServicesInfoRealServIndex"),
)
if mibBuilder.loadTexts:
    slbVirtServicesInfoEntry.setStatus("current")
_SlbVirtServicesInfoVirtServIndex_Type = Integer32
_SlbVirtServicesInfoVirtServIndex_Object = MibTableColumn
slbVirtServicesInfoVirtServIndex = _SlbVirtServicesInfoVirtServIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 4, 1, 1),
    _SlbVirtServicesInfoVirtServIndex_Type()
)
slbVirtServicesInfoVirtServIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbVirtServicesInfoVirtServIndex.setStatus("current")
_SlbVirtServicesInfoSvcIndex_Type = Integer32
_SlbVirtServicesInfoSvcIndex_Object = MibTableColumn
slbVirtServicesInfoSvcIndex = _SlbVirtServicesInfoSvcIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 4, 1, 2),
    _SlbVirtServicesInfoSvcIndex_Type()
)
slbVirtServicesInfoSvcIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbVirtServicesInfoSvcIndex.setStatus("current")
_SlbVirtServicesInfoRealServIndex_Type = Integer32
_SlbVirtServicesInfoRealServIndex_Object = MibTableColumn
slbVirtServicesInfoRealServIndex = _SlbVirtServicesInfoRealServIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 4, 1, 3),
    _SlbVirtServicesInfoRealServIndex_Type()
)
slbVirtServicesInfoRealServIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbVirtServicesInfoRealServIndex.setStatus("current")
_SlbVirtServicesInfoVport_Type = Integer32
_SlbVirtServicesInfoVport_Object = MibTableColumn
slbVirtServicesInfoVport = _SlbVirtServicesInfoVport_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 4, 1, 4),
    _SlbVirtServicesInfoVport_Type()
)
slbVirtServicesInfoVport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbVirtServicesInfoVport.setStatus("current")
_SlbVirtServicesInfoRport_Type = Integer32
_SlbVirtServicesInfoRport_Object = MibTableColumn
slbVirtServicesInfoRport = _SlbVirtServicesInfoRport_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 4, 1, 5),
    _SlbVirtServicesInfoRport_Type()
)
slbVirtServicesInfoRport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbVirtServicesInfoRport.setStatus("current")


class _SlbVirtServicesInfoState_Type(Integer32):
    """Custom type slbVirtServicesInfoState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("blocked", 1),
          ("disabled", 4),
          ("failed", 3),
          ("running", 2),
          ("slowstart", 5))
    )


_SlbVirtServicesInfoState_Type.__name__ = "Integer32"
_SlbVirtServicesInfoState_Object = MibTableColumn
slbVirtServicesInfoState = _SlbVirtServicesInfoState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 4, 1, 6),
    _SlbVirtServicesInfoState_Type()
)
slbVirtServicesInfoState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbVirtServicesInfoState.setStatus("current")
_SlbVirtServicesInfoResponseTime_Type = Integer32
_SlbVirtServicesInfoResponseTime_Object = MibTableColumn
slbVirtServicesInfoResponseTime = _SlbVirtServicesInfoResponseTime_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 4, 1, 7),
    _SlbVirtServicesInfoResponseTime_Type()
)
slbVirtServicesInfoResponseTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbVirtServicesInfoResponseTime.setStatus("current")
_SlbVirtServicesInfoWeight_Type = Integer32
_SlbVirtServicesInfoWeight_Object = MibTableColumn
slbVirtServicesInfoWeight = _SlbVirtServicesInfoWeight_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 4, 1, 8),
    _SlbVirtServicesInfoWeight_Type()
)
slbVirtServicesInfoWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbVirtServicesInfoWeight.setStatus("current")
_SlbSessionInfo_ObjectIdentity = ObjectIdentity
slbSessionInfo = _SlbSessionInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 5)
)


class _SlbSessionInfoState_Type(Integer32):
    """Custom type slbSessionInfoState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("complete", 4),
          ("idle", 2),
          ("inprogress", 3),
          ("start", 1))
    )


_SlbSessionInfoState_Type.__name__ = "Integer32"
_SlbSessionInfoState_Object = MibScalar
slbSessionInfoState = _SlbSessionInfoState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 5, 1),
    _SlbSessionInfoState_Type()
)
slbSessionInfoState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbSessionInfoState.setStatus("current")


class _SlbSessionInfoType_Type(Integer32):
    """Custom type slbSessionInfoType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("all", 1),
          ("cip", 2),
          ("cport", 3),
          ("dip", 4),
          ("dport", 5),
          ("filter", 8),
          ("flag", 9),
          ("pip", 6),
          ("port", 10),
          ("pport", 7),
          ("real", 11))
    )


_SlbSessionInfoType_Type.__name__ = "Integer32"
_SlbSessionInfoType_Object = MibScalar
slbSessionInfoType = _SlbSessionInfoType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 5, 2),
    _SlbSessionInfoType_Type()
)
slbSessionInfoType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbSessionInfoType.setStatus("current")
_SlbSessionInfoIpAddr_Type = IpAddress
_SlbSessionInfoIpAddr_Object = MibScalar
slbSessionInfoIpAddr = _SlbSessionInfoIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 5, 3),
    _SlbSessionInfoIpAddr_Type()
)
slbSessionInfoIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbSessionInfoIpAddr.setStatus("current")
_SlbSessionInfoFilterId_Type = Integer32
_SlbSessionInfoFilterId_Object = MibScalar
slbSessionInfoFilterId = _SlbSessionInfoFilterId_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 5, 4),
    _SlbSessionInfoFilterId_Type()
)
slbSessionInfoFilterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbSessionInfoFilterId.setStatus("current")
_SlbSessionInfoPortId_Type = Integer32
_SlbSessionInfoPortId_Object = MibScalar
slbSessionInfoPortId = _SlbSessionInfoPortId_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 5, 5),
    _SlbSessionInfoPortId_Type()
)
slbSessionInfoPortId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbSessionInfoPortId.setStatus("current")


class _SlbSessionInfoFlag_Type(Integer32):
    """Custom type slbSessionInfoFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              20)
        )
    )
    namedValues = NamedValues(
        *(("eFlag", 1),
          ("lFlag", 2),
          ("nFlag", 3),
          ("none", 20),
          ("pFlag", 4),
          ("riFlag", 10),
          ("ruFlag", 9),
          ("sFlag", 5),
          ("tFlag", 6),
          ("uFlag", 7),
          ("vdFlag", 15),
          ("viFlag", 11),
          ("vmFlag", 14),
          ("vrFlag", 12),
          ("vsFlag", 13),
          ("wFlag", 8))
    )


_SlbSessionInfoFlag_Type.__name__ = "Integer32"
_SlbSessionInfoFlag_Object = MibScalar
slbSessionInfoFlag = _SlbSessionInfoFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 5, 6),
    _SlbSessionInfoFlag_Type()
)
slbSessionInfoFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbSessionInfoFlag.setStatus("current")


class _SlbSessionInfoStringFormatFlag_Type(Integer32):
    """Custom type slbSessionInfoStringFormatFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("formatted", 1),
          ("none", 2))
    )


_SlbSessionInfoStringFormatFlag_Type.__name__ = "Integer32"
_SlbSessionInfoStringFormatFlag_Object = MibScalar
slbSessionInfoStringFormatFlag = _SlbSessionInfoStringFormatFlag_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 5, 7),
    _SlbSessionInfoStringFormatFlag_Type()
)
slbSessionInfoStringFormatFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbSessionInfoStringFormatFlag.setStatus("current")
_SlbSessionInfoTable_Object = MibTable
slbSessionInfoTable = _SlbSessionInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 5, 8)
)
if mibBuilder.loadTexts:
    slbSessionInfoTable.setStatus("current")
_SlbSessionInfoEntry_Object = MibTableRow
slbSessionInfoEntry = _SlbSessionInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 5, 8, 1)
)
slbSessionInfoEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbSessionInfoSpIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbSessionInfoIndex"),
)
if mibBuilder.loadTexts:
    slbSessionInfoEntry.setStatus("current")
_SlbSessionInfoSpIndex_Type = Integer32
_SlbSessionInfoSpIndex_Object = MibTableColumn
slbSessionInfoSpIndex = _SlbSessionInfoSpIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 5, 8, 1, 1),
    _SlbSessionInfoSpIndex_Type()
)
slbSessionInfoSpIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbSessionInfoSpIndex.setStatus("current")
_SlbSessionInfoIndex_Type = Integer32
_SlbSessionInfoIndex_Object = MibTableColumn
slbSessionInfoIndex = _SlbSessionInfoIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 5, 8, 1, 2),
    _SlbSessionInfoIndex_Type()
)
slbSessionInfoIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbSessionInfoIndex.setStatus("current")
_SlbSessionInfoString_Type = OctetString
_SlbSessionInfoString_Object = MibTableColumn
slbSessionInfoString = _SlbSessionInfoString_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 5, 8, 1, 3),
    _SlbSessionInfoString_Type()
)
slbSessionInfoString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbSessionInfoString.setStatus("current")
_SlbSessionInfoMaxSessDump_Type = Integer32
_SlbSessionInfoMaxSessDump_Object = MibScalar
slbSessionInfoMaxSessDump = _SlbSessionInfoMaxSessDump_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 5, 9),
    _SlbSessionInfoMaxSessDump_Type()
)
slbSessionInfoMaxSessDump.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbSessionInfoMaxSessDump.setStatus("current")
_GslbInfo_ObjectIdentity = ObjectIdentity
gslbInfo = _GslbInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6)
)
_GslbInfoRemRealServerTable_Object = MibTable
gslbInfoRemRealServerTable = _GslbInfoRemRealServerTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 1)
)
if mibBuilder.loadTexts:
    gslbInfoRemRealServerTable.setStatus("current")
_GslbInfoRemRealServerEntry_Object = MibTableRow
gslbInfoRemRealServerEntry = _GslbInfoRemRealServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 1, 1)
)
gslbInfoRemRealServerEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbInfoRemRealServerIdx"),
)
if mibBuilder.loadTexts:
    gslbInfoRemRealServerEntry.setStatus("current")
_GslbInfoRemRealServerIdx_Type = Integer32
_GslbInfoRemRealServerIdx_Object = MibTableColumn
gslbInfoRemRealServerIdx = _GslbInfoRemRealServerIdx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 1, 1, 1),
    _GslbInfoRemRealServerIdx_Type()
)
gslbInfoRemRealServerIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoRemRealServerIdx.setStatus("current")
_GslbInfoRemRealServerIpAddr_Type = IpAddress
_GslbInfoRemRealServerIpAddr_Object = MibTableColumn
gslbInfoRemRealServerIpAddr = _GslbInfoRemRealServerIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 1, 1, 2),
    _GslbInfoRemRealServerIpAddr_Type()
)
gslbInfoRemRealServerIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoRemRealServerIpAddr.setStatus("current")


class _GslbInfoRemRealServerName_Type(DisplayString):
    """Custom type gslbInfoRemRealServerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_GslbInfoRemRealServerName_Type.__name__ = "DisplayString"
_GslbInfoRemRealServerName_Object = MibTableColumn
gslbInfoRemRealServerName = _GslbInfoRemRealServerName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 1, 1, 3),
    _GslbInfoRemRealServerName_Type()
)
gslbInfoRemRealServerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoRemRealServerName.setStatus("current")


class _GslbInfoRemRealServerState_Type(Integer32):
    """Custom type gslbInfoRemRealServerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("failed", 3),
          ("running", 2))
    )


_GslbInfoRemRealServerState_Type.__name__ = "Integer32"
_GslbInfoRemRealServerState_Object = MibTableColumn
gslbInfoRemRealServerState = _GslbInfoRemRealServerState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 1, 1, 4),
    _GslbInfoRemRealServerState_Type()
)
gslbInfoRemRealServerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoRemRealServerState.setStatus("current")
_GslbInfoVirtServerTable_Object = MibTable
gslbInfoVirtServerTable = _GslbInfoVirtServerTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 2)
)
if mibBuilder.loadTexts:
    gslbInfoVirtServerTable.setStatus("current")
_GslbInfoVirtServerEntry_Object = MibTableRow
gslbInfoVirtServerEntry = _GslbInfoVirtServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 2, 1)
)
gslbInfoVirtServerEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbInfoVirtServerIdx"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbInfoVirtServerServiceIdx"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbInfoVirtServerRserverIdx"),
)
if mibBuilder.loadTexts:
    gslbInfoVirtServerEntry.setStatus("current")
_GslbInfoVirtServerIdx_Type = Integer32
_GslbInfoVirtServerIdx_Object = MibTableColumn
gslbInfoVirtServerIdx = _GslbInfoVirtServerIdx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 2, 1, 1),
    _GslbInfoVirtServerIdx_Type()
)
gslbInfoVirtServerIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoVirtServerIdx.setStatus("current")
_GslbInfoVirtServerServiceIdx_Type = Integer32
_GslbInfoVirtServerServiceIdx_Object = MibTableColumn
gslbInfoVirtServerServiceIdx = _GslbInfoVirtServerServiceIdx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 2, 1, 2),
    _GslbInfoVirtServerServiceIdx_Type()
)
gslbInfoVirtServerServiceIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoVirtServerServiceIdx.setStatus("current")
_GslbInfoVirtServerRserverIdx_Type = Integer32
_GslbInfoVirtServerRserverIdx_Object = MibTableColumn
gslbInfoVirtServerRserverIdx = _GslbInfoVirtServerRserverIdx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 2, 1, 3),
    _GslbInfoVirtServerRserverIdx_Type()
)
gslbInfoVirtServerRserverIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoVirtServerRserverIdx.setStatus("current")


class _GslbInfoVirtServerDname_Type(DisplayString):
    """Custom type gslbInfoVirtServerDname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_GslbInfoVirtServerDname_Type.__name__ = "DisplayString"
_GslbInfoVirtServerDname_Object = MibTableColumn
gslbInfoVirtServerDname = _GslbInfoVirtServerDname_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 2, 1, 4),
    _GslbInfoVirtServerDname_Type()
)
gslbInfoVirtServerDname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoVirtServerDname.setStatus("current")
_GslbInfoVirtServerVirtPort_Type = Integer32
_GslbInfoVirtServerVirtPort_Object = MibTableColumn
gslbInfoVirtServerVirtPort = _GslbInfoVirtServerVirtPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 2, 1, 5),
    _GslbInfoVirtServerVirtPort_Type()
)
gslbInfoVirtServerVirtPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoVirtServerVirtPort.setStatus("current")
_GslbInfoVirtServerIpAddress_Type = IpAddress
_GslbInfoVirtServerIpAddress_Object = MibTableColumn
gslbInfoVirtServerIpAddress = _GslbInfoVirtServerIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 2, 1, 6),
    _GslbInfoVirtServerIpAddress_Type()
)
gslbInfoVirtServerIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoVirtServerIpAddress.setStatus("current")
_GslbInfoVirtServerResponse_Type = Integer32
_GslbInfoVirtServerResponse_Object = MibTableColumn
gslbInfoVirtServerResponse = _GslbInfoVirtServerResponse_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 2, 1, 7),
    _GslbInfoVirtServerResponse_Type()
)
gslbInfoVirtServerResponse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoVirtServerResponse.setStatus("current")
_GslbInfoVirtServerSessAvail_Type = Integer32
_GslbInfoVirtServerSessAvail_Object = MibTableColumn
gslbInfoVirtServerSessAvail = _GslbInfoVirtServerSessAvail_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 2, 1, 8),
    _GslbInfoVirtServerSessAvail_Type()
)
gslbInfoVirtServerSessAvail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoVirtServerSessAvail.setStatus("current")
_GslbInfoVirtServerSessCur_Type = Integer32
_GslbInfoVirtServerSessCur_Object = MibTableColumn
gslbInfoVirtServerSessCur = _GslbInfoVirtServerSessCur_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 2, 1, 9),
    _GslbInfoVirtServerSessCur_Type()
)
gslbInfoVirtServerSessCur.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoVirtServerSessCur.setStatus("current")
_GslbInfoVirtServerSessMax_Type = Integer32
_GslbInfoVirtServerSessMax_Object = MibTableColumn
gslbInfoVirtServerSessMax = _GslbInfoVirtServerSessMax_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 2, 1, 10),
    _GslbInfoVirtServerSessMax_Type()
)
gslbInfoVirtServerSessMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoVirtServerSessMax.setStatus("current")


class _GslbInfoVirtServerSessUtil_Type(Integer32):
    """Custom type gslbInfoVirtServerSessUtil based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_GslbInfoVirtServerSessUtil_Type.__name__ = "Integer32"
_GslbInfoVirtServerSessUtil_Object = MibTableColumn
gslbInfoVirtServerSessUtil = _GslbInfoVirtServerSessUtil_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 2, 1, 11),
    _GslbInfoVirtServerSessUtil_Type()
)
gslbInfoVirtServerSessUtil.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoVirtServerSessUtil.setStatus("current")


class _GslbInfoVirtServerCpuUtil_Type(Integer32):
    """Custom type gslbInfoVirtServerCpuUtil based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_GslbInfoVirtServerCpuUtil_Type.__name__ = "Integer32"
_GslbInfoVirtServerCpuUtil_Object = MibTableColumn
gslbInfoVirtServerCpuUtil = _GslbInfoVirtServerCpuUtil_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 2, 1, 12),
    _GslbInfoVirtServerCpuUtil_Type()
)
gslbInfoVirtServerCpuUtil.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoVirtServerCpuUtil.setStatus("current")
_GslbInfoVirtServerRemSite_Type = Integer32
_GslbInfoVirtServerRemSite_Object = MibTableColumn
gslbInfoVirtServerRemSite = _GslbInfoVirtServerRemSite_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 2, 1, 13),
    _GslbInfoVirtServerRemSite_Type()
)
gslbInfoVirtServerRemSite.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoVirtServerRemSite.setStatus("current")


class _GslbInfoVirtServerWeight_Type(Integer32):
    """Custom type gslbInfoVirtServerWeight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 48),
    )


_GslbInfoVirtServerWeight_Type.__name__ = "Integer32"
_GslbInfoVirtServerWeight_Object = MibTableColumn
gslbInfoVirtServerWeight = _GslbInfoVirtServerWeight_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 2, 1, 14),
    _GslbInfoVirtServerWeight_Type()
)
gslbInfoVirtServerWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoVirtServerWeight.setStatus("current")


class _GslbInfoVirtServerAvail_Type(Integer32):
    """Custom type gslbInfoVirtServerAvail based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 48),
    )


_GslbInfoVirtServerAvail_Type.__name__ = "Integer32"
_GslbInfoVirtServerAvail_Object = MibTableColumn
gslbInfoVirtServerAvail = _GslbInfoVirtServerAvail_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 2, 1, 15),
    _GslbInfoVirtServerAvail_Type()
)
gslbInfoVirtServerAvail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoVirtServerAvail.setStatus("current")


class _GslbInfoVirtServerRegion_Type(Integer32):
    """Custom type gslbInfoVirtServerRegion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("africa", 9),
          ("caribbean", 4),
          ("caribbeansubsahara", 8),
          ("europe", 3),
          ("japan", 7),
          ("northamerica", 1),
          ("pacificrim", 5),
          ("southamerica", 2),
          ("subsahara", 6),
          ("unknown", 0))
    )


_GslbInfoVirtServerRegion_Type.__name__ = "Integer32"
_GslbInfoVirtServerRegion_Object = MibTableColumn
gslbInfoVirtServerRegion = _GslbInfoVirtServerRegion_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 2, 1, 16),
    _GslbInfoVirtServerRegion_Type()
)
gslbInfoVirtServerRegion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoVirtServerRegion.setStatus("current")
_GslbInfoRemSiteTable_Object = MibTable
gslbInfoRemSiteTable = _GslbInfoRemSiteTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 3)
)
if mibBuilder.loadTexts:
    gslbInfoRemSiteTable.setStatus("current")
_GslbInfoRemSiteEntry_Object = MibTableRow
gslbInfoRemSiteEntry = _GslbInfoRemSiteEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 3, 1)
)
gslbInfoRemSiteEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbInfoRemSiteIdx"),
)
if mibBuilder.loadTexts:
    gslbInfoRemSiteEntry.setStatus("current")
_GslbInfoRemSiteIdx_Type = Integer32
_GslbInfoRemSiteIdx_Object = MibTableColumn
gslbInfoRemSiteIdx = _GslbInfoRemSiteIdx_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 3, 1, 1),
    _GslbInfoRemSiteIdx_Type()
)
gslbInfoRemSiteIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoRemSiteIdx.setStatus("current")
_GslbInfoRemSitePrimaryIp_Type = IpAddress
_GslbInfoRemSitePrimaryIp_Object = MibTableColumn
gslbInfoRemSitePrimaryIp = _GslbInfoRemSitePrimaryIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 3, 1, 2),
    _GslbInfoRemSitePrimaryIp_Type()
)
gslbInfoRemSitePrimaryIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoRemSitePrimaryIp.setStatus("current")
_GslbInfoRemSiteSecondaryIp_Type = IpAddress
_GslbInfoRemSiteSecondaryIp_Object = MibTableColumn
gslbInfoRemSiteSecondaryIp = _GslbInfoRemSiteSecondaryIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 3, 1, 3),
    _GslbInfoRemSiteSecondaryIp_Type()
)
gslbInfoRemSiteSecondaryIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoRemSiteSecondaryIp.setStatus("current")


class _GslbInfoRemSiteName_Type(DisplayString):
    """Custom type gslbInfoRemSiteName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_GslbInfoRemSiteName_Type.__name__ = "DisplayString"
_GslbInfoRemSiteName_Object = MibTableColumn
gslbInfoRemSiteName = _GslbInfoRemSiteName_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 3, 1, 4),
    _GslbInfoRemSiteName_Type()
)
gslbInfoRemSiteName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoRemSiteName.setStatus("current")


class _GslbInfoRemSiteState_Type(Integer32):
    """Custom type gslbInfoRemSiteState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("failed", 3),
          ("running", 2))
    )


_GslbInfoRemSiteState_Type.__name__ = "Integer32"
_GslbInfoRemSiteState_Object = MibTableColumn
gslbInfoRemSiteState = _GslbInfoRemSiteState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 3, 1, 5),
    _GslbInfoRemSiteState_Type()
)
gslbInfoRemSiteState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoRemSiteState.setStatus("current")
_GslbInfoDnsSec_ObjectIdentity = ObjectIdentity
gslbInfoDnsSec = _GslbInfoDnsSec_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 4)
)
_GslbInfoDnsSecKey_ObjectIdentity = ObjectIdentity
gslbInfoDnsSecKey = _GslbInfoDnsSecKey_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 4, 2)
)
_GslbInfoDnsSecKeyTable_Object = MibTable
gslbInfoDnsSecKeyTable = _GslbInfoDnsSecKeyTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 4, 2, 1)
)
if mibBuilder.loadTexts:
    gslbInfoDnsSecKeyTable.setStatus("current")
_GslbInfoDnsSecKeyEntry_Object = MibTableRow
gslbInfoDnsSecKeyEntry = _GslbInfoDnsSecKeyEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 4, 2, 1, 1)
)
gslbInfoDnsSecKeyEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbInfoDnsSecKeyID"),
)
if mibBuilder.loadTexts:
    gslbInfoDnsSecKeyEntry.setStatus("current")


class _GslbInfoDnsSecKeyID_Type(DisplayString):
    """Custom type gslbInfoDnsSecKeyID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbInfoDnsSecKeyID_Type.__name__ = "DisplayString"
_GslbInfoDnsSecKeyID_Object = MibTableColumn
gslbInfoDnsSecKeyID = _GslbInfoDnsSecKeyID_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 4, 2, 1, 1, 1),
    _GslbInfoDnsSecKeyID_Type()
)
gslbInfoDnsSecKeyID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoDnsSecKeyID.setStatus("current")


class _GslbInfoDnsSecKeyStatus_Type(Integer32):
    """Custom type gslbInfoDnsSecKeyStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("expired", 10),
          ("initRollProess", 1),
          ("invalid", 9),
          ("newKeyCreated", 2),
          ("newKskKeyDeployed", 6),
          ("newZskKeyDeployed", 3),
          ("oldKeyRemoval", 4),
          ("retrDsFromParent", 5),
          ("rolloverNotRunning", 8),
          ("waitDsChangeOnParent", 7))
    )


_GslbInfoDnsSecKeyStatus_Type.__name__ = "Integer32"
_GslbInfoDnsSecKeyStatus_Object = MibTableColumn
gslbInfoDnsSecKeyStatus = _GslbInfoDnsSecKeyStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 6, 4, 2, 1, 1, 4),
    _GslbInfoDnsSecKeyStatus_Type()
)
gslbInfoDnsSecKeyStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbInfoDnsSecKeyStatus.setStatus("current")
_WlmInfo_ObjectIdentity = ObjectIdentity
wlmInfo = _WlmInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 7)
)
_SlbWlmInfoTable_Object = MibTable
slbWlmInfoTable = _SlbWlmInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 7, 1)
)
if mibBuilder.loadTexts:
    slbWlmInfoTable.setStatus("current")
_SlbWlmInfoEntry_Object = MibTableRow
slbWlmInfoEntry = _SlbWlmInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 7, 1, 1)
)
slbWlmInfoEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbWlmInfoIndex"),
)
if mibBuilder.loadTexts:
    slbWlmInfoEntry.setStatus("current")
_SlbWlmInfoIndex_Type = Integer32
_SlbWlmInfoIndex_Object = MibTableColumn
slbWlmInfoIndex = _SlbWlmInfoIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 7, 1, 1, 1),
    _SlbWlmInfoIndex_Type()
)
slbWlmInfoIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbWlmInfoIndex.setStatus("current")
_SlbWlmInfoIpAddr_Type = IpAddress
_SlbWlmInfoIpAddr_Object = MibTableColumn
slbWlmInfoIpAddr = _SlbWlmInfoIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 7, 1, 1, 2),
    _SlbWlmInfoIpAddr_Type()
)
slbWlmInfoIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbWlmInfoIpAddr.setStatus("current")


class _SlbWlmInfoPort_Type(Integer32):
    """Custom type slbWlmInfoPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SlbWlmInfoPort_Type.__name__ = "Integer32"
_SlbWlmInfoPort_Object = MibTableColumn
slbWlmInfoPort = _SlbWlmInfoPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 7, 1, 1, 3),
    _SlbWlmInfoPort_Type()
)
slbWlmInfoPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbWlmInfoPort.setStatus("current")


class _SlbWlmInfoState_Type(Integer32):
    """Custom type slbWlmInfoState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("connected", 1),
          ("notconnected", 2))
    )


_SlbWlmInfoState_Type.__name__ = "Integer32"
_SlbWlmInfoState_Object = MibTableColumn
slbWlmInfoState = _SlbWlmInfoState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 7, 1, 1, 4),
    _SlbWlmInfoState_Type()
)
slbWlmInfoState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbWlmInfoState.setStatus("current")
_SlbPortInfo_ObjectIdentity = ObjectIdentity
slbPortInfo = _SlbPortInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 8)
)
_SlbPortInfoTable_Object = MibTable
slbPortInfoTable = _SlbPortInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 8, 1)
)
if mibBuilder.loadTexts:
    slbPortInfoTable.setStatus("current")
_SlbPortInfoEntry_Object = MibTableRow
slbPortInfoEntry = _SlbPortInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 8, 1, 1)
)
slbPortInfoEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbPortInfoIndex"),
)
if mibBuilder.loadTexts:
    slbPortInfoEntry.setStatus("current")
_SlbPortInfoIndex_Type = Integer32
_SlbPortInfoIndex_Object = MibTableColumn
slbPortInfoIndex = _SlbPortInfoIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 8, 1, 1, 1),
    _SlbPortInfoIndex_Type()
)
slbPortInfoIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbPortInfoIndex.setStatus("current")


class _SlbPortClientState_Type(Integer32):
    """Custom type slbPortClientState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbPortClientState_Type.__name__ = "Integer32"
_SlbPortClientState_Object = MibTableColumn
slbPortClientState = _SlbPortClientState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 8, 1, 1, 2),
    _SlbPortClientState_Type()
)
slbPortClientState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbPortClientState.setStatus("current")


class _SlbPortSerState_Type(Integer32):
    """Custom type slbPortSerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbPortSerState_Type.__name__ = "Integer32"
_SlbPortSerState_Object = MibTableColumn
slbPortSerState = _SlbPortSerState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 8, 1, 1, 3),
    _SlbPortSerState_Type()
)
slbPortSerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbPortSerState.setStatus("current")


class _SlbPortFltState_Type(Integer32):
    """Custom type slbPortFltState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbPortFltState_Type.__name__ = "Integer32"
_SlbPortFltState_Object = MibTableColumn
slbPortFltState = _SlbPortFltState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 8, 1, 1, 4),
    _SlbPortFltState_Type()
)
slbPortFltState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbPortFltState.setStatus("current")


class _SlbPortRTSState_Type(Integer32):
    """Custom type slbPortRTSState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbPortRTSState_Type.__name__ = "Integer32"
_SlbPortRTSState_Object = MibTableColumn
slbPortRTSState = _SlbPortRTSState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 8, 1, 1, 5),
    _SlbPortRTSState_Type()
)
slbPortRTSState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbPortRTSState.setStatus("current")


class _SlbPortHotStandbyState_Type(Integer32):
    """Custom type slbPortHotStandbyState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbPortHotStandbyState_Type.__name__ = "Integer32"
_SlbPortHotStandbyState_Object = MibTableColumn
slbPortHotStandbyState = _SlbPortHotStandbyState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 8, 1, 1, 6),
    _SlbPortHotStandbyState_Type()
)
slbPortHotStandbyState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbPortHotStandbyState.setStatus("current")


class _SlbPortInterSWState_Type(Integer32):
    """Custom type slbPortInterSWState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbPortInterSWState_Type.__name__ = "Integer32"
_SlbPortInterSWState_Object = MibTableColumn
slbPortInterSWState = _SlbPortInterSWState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 8, 1, 1, 7),
    _SlbPortInterSWState_Type()
)
slbPortInterSWState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbPortInterSWState.setStatus("current")


class _SlbPortProxyState_Type(Integer32):
    """Custom type slbPortProxyState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbPortProxyState_Type.__name__ = "Integer32"
_SlbPortProxyState_Object = MibTableColumn
slbPortProxyState = _SlbPortProxyState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 8, 1, 1, 8),
    _SlbPortProxyState_Type()
)
slbPortProxyState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbPortProxyState.setStatus("current")


class _SlbPortIdSlbState_Type(Integer32):
    """Custom type slbPortIdSlbState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbPortIdSlbState_Type.__name__ = "Integer32"
_SlbPortIdSlbState_Object = MibTableColumn
slbPortIdSlbState = _SlbPortIdSlbState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 8, 1, 1, 9),
    _SlbPortIdSlbState_Type()
)
slbPortIdSlbState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbPortIdSlbState.setStatus("current")


class _SlbPortSymantecState_Type(Integer32):
    """Custom type slbPortSymantecState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SlbPortSymantecState_Type.__name__ = "Integer32"
_SlbPortSymantecState_Object = MibTableColumn
slbPortSymantecState = _SlbPortSymantecState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 8, 1, 1, 10),
    _SlbPortSymantecState_Type()
)
slbPortSymantecState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbPortSymantecState.setStatus("current")


class _SlbPortFitersAdded_Type(OctetString):
    """Custom type slbPortFitersAdded based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_SlbPortFitersAdded_Type.__name__ = "OctetString"
_SlbPortFitersAdded_Object = MibTableColumn
slbPortFitersAdded = _SlbPortFitersAdded_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 8, 1, 1, 11),
    _SlbPortFitersAdded_Type()
)
slbPortFitersAdded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbPortFitersAdded.setStatus("current")
_SynAttackInfo_ObjectIdentity = ObjectIdentity
synAttackInfo = _SynAttackInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 9)
)


class _SynAtkState_Type(Integer32):
    """Custom type synAtkState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 2),
          ("on", 1))
    )


_SynAtkState_Type.__name__ = "Integer32"
_SynAtkState_Object = MibScalar
synAtkState = _SynAtkState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 9, 1),
    _SynAtkState_Type()
)
synAtkState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    synAtkState.setStatus("current")
_SynAtkInterval_Type = Integer32
_SynAtkInterval_Object = MibScalar
synAtkInterval = _SynAtkInterval_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 9, 2),
    _SynAtkInterval_Type()
)
synAtkInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    synAtkInterval.setStatus("current")
_SynAtkThreshhold_Type = Integer32
_SynAtkThreshhold_Object = MibScalar
synAtkThreshhold = _SynAtkThreshhold_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 9, 3),
    _SynAtkThreshhold_Type()
)
synAtkThreshhold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    synAtkThreshhold.setStatus("current")
_SynAtkWarningFired_Type = Integer32
_SynAtkWarningFired_Object = MibScalar
synAtkWarningFired = _SynAtkWarningFired_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 9, 4),
    _SynAtkWarningFired_Type()
)
synAtkWarningFired.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    synAtkWarningFired.setStatus("current")
_SynAtkResponseInterval_Type = Integer32
_SynAtkResponseInterval_Object = MibScalar
synAtkResponseInterval = _SynAtkResponseInterval_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 9, 5),
    _SynAtkResponseInterval_Type()
)
synAtkResponseInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    synAtkResponseInterval.setStatus("current")


class _SynAtkOnOff_Type(Integer32):
    """Custom type synAtkOnOff based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 2),
          ("on", 1))
    )


_SynAtkOnOff_Type.__name__ = "Integer32"
_SynAtkOnOff_Object = MibScalar
synAtkOnOff = _SynAtkOnOff_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 9, 6),
    _SynAtkOnOff_Type()
)
synAtkOnOff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    synAtkOnOff.setStatus("current")
_SlbFreeVirtualServerIndexInfo_Type = Integer32
_SlbFreeVirtualServerIndexInfo_Object = MibScalar
slbFreeVirtualServerIndexInfo = _SlbFreeVirtualServerIndexInfo_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 10),
    _SlbFreeVirtualServerIndexInfo_Type()
)
slbFreeVirtualServerIndexInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbFreeVirtualServerIndexInfo.setStatus("current")
_SlbFreeRealGroupIndexInfo_Type = Integer32
_SlbFreeRealGroupIndexInfo_Object = MibScalar
slbFreeRealGroupIndexInfo = _SlbFreeRealGroupIndexInfo_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 11),
    _SlbFreeRealGroupIndexInfo_Type()
)
slbFreeRealGroupIndexInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbFreeRealGroupIndexInfo.setStatus("current")
_SlbFreeRealServerIndexInfo_Type = Integer32
_SlbFreeRealServerIndexInfo_Object = MibScalar
slbFreeRealServerIndexInfo = _SlbFreeRealServerIndexInfo_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 3, 12),
    _SlbFreeRealServerIndexInfo_Type()
)
slbFreeRealServerIndexInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbFreeRealServerIndexInfo.setStatus("current")
_Layer4Oper_ObjectIdentity = ObjectIdentity
layer4Oper = _Layer4Oper_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4)
)
_SlbOperRealServerTable_Object = MibTable
slbOperRealServerTable = _SlbOperRealServerTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 1)
)
if mibBuilder.loadTexts:
    slbOperRealServerTable.setStatus("current")
_SlbOperRealServerEntry_Object = MibTableRow
slbOperRealServerEntry = _SlbOperRealServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 1, 1)
)
slbOperRealServerEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbOperRealServerIndex"),
)
if mibBuilder.loadTexts:
    slbOperRealServerEntry.setStatus("current")
_SlbOperRealServerIndex_Type = Integer32
_SlbOperRealServerIndex_Object = MibTableColumn
slbOperRealServerIndex = _SlbOperRealServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 1, 1, 1),
    _SlbOperRealServerIndex_Type()
)
slbOperRealServerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbOperRealServerIndex.setStatus("current")


class _SlbOperRealServerStatus_Type(Integer32):
    """Custom type slbOperRealServerStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("cookiepersistent", 3),
          ("cookiepersistentfastage", 5),
          ("disable", 2),
          ("enable", 1),
          ("fastage", 4))
    )


_SlbOperRealServerStatus_Type.__name__ = "Integer32"
_SlbOperRealServerStatus_Object = MibTableColumn
slbOperRealServerStatus = _SlbOperRealServerStatus_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 1, 1, 2),
    _SlbOperRealServerStatus_Type()
)
slbOperRealServerStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbOperRealServerStatus.setStatus("current")


class _SlbOperClearSessionTable_Type(Integer32):
    """Custom type slbOperClearSessionTable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("clear", 2),
          ("ok", 1))
    )


_SlbOperClearSessionTable_Type.__name__ = "Integer32"
_SlbOperClearSessionTable_Object = MibScalar
slbOperClearSessionTable = _SlbOperClearSessionTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 2),
    _SlbOperClearSessionTable_Type()
)
slbOperClearSessionTable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbOperClearSessionTable.setStatus("current")


class _SlbOperConfigSync_Type(Integer32):
    """Custom type slbOperConfigSync based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ok", 1),
          ("sync", 2))
    )


_SlbOperConfigSync_Type.__name__ = "Integer32"
_SlbOperConfigSync_Object = MibScalar
slbOperConfigSync = _SlbOperConfigSync_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 3),
    _SlbOperConfigSync_Type()
)
slbOperConfigSync.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbOperConfigSync.setStatus("current")
_GslbOper_ObjectIdentity = ObjectIdentity
gslbOper = _GslbOper_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4)
)
_GslbOperQuery_ObjectIdentity = ObjectIdentity
gslbOperQuery = _GslbOperQuery_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 1)
)
_GslbOperQueryDomain_Type = DisplayString
_GslbOperQueryDomain_Object = MibScalar
gslbOperQueryDomain = _GslbOperQueryDomain_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 1, 1),
    _GslbOperQueryDomain_Type()
)
gslbOperQueryDomain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbOperQueryDomain.setStatus("current")
_GslbOperQuerySrcIp_Type = IpAddress
_GslbOperQuerySrcIp_Object = MibScalar
gslbOperQuerySrcIp = _GslbOperQuerySrcIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 1, 2),
    _GslbOperQuerySrcIp_Type()
)
gslbOperQuerySrcIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbOperQuerySrcIp.setStatus("current")


class _GslbOperSendQuery_Type(Integer32):
    """Custom type gslbOperSendQuery based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ok", 1),
          ("query", 2))
    )


_GslbOperSendQuery_Type.__name__ = "Integer32"
_GslbOperSendQuery_Object = MibScalar
gslbOperSendQuery = _GslbOperSendQuery_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 1, 3),
    _GslbOperSendQuery_Type()
)
gslbOperSendQuery.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbOperSendQuery.setStatus("current")


class _GslbOperQuerySrcIpV6_Type(DisplayString):
    """Custom type gslbOperQuerySrcIpV6 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_GslbOperQuerySrcIpV6_Type.__name__ = "DisplayString"
_GslbOperQuerySrcIpV6_Object = MibScalar
gslbOperQuerySrcIpV6 = _GslbOperQuerySrcIpV6_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 1, 4),
    _GslbOperQuerySrcIpV6_Type()
)
gslbOperQuerySrcIpV6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbOperQuerySrcIpV6.setStatus("current")


class _GslbOperQuerySrcIpVer_Type(Integer32):
    """Custom type gslbOperQuerySrcIpVer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipv4", 1),
          ("ipv6", 2))
    )


_GslbOperQuerySrcIpVer_Type.__name__ = "Integer32"
_GslbOperQuerySrcIpVer_Object = MibScalar
gslbOperQuerySrcIpVer = _GslbOperQuerySrcIpVer_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 1, 5),
    _GslbOperQuerySrcIpVer_Type()
)
gslbOperQuerySrcIpVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbOperQuerySrcIpVer.setStatus("current")


class _GslbOperQueryType_Type(Integer32):
    """Custom type gslbOperQueryType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("aaaa", 2))
    )


_GslbOperQueryType_Type.__name__ = "Integer32"
_GslbOperQueryType_Object = MibScalar
gslbOperQueryType = _GslbOperQueryType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 1, 6),
    _GslbOperQueryType_Type()
)
gslbOperQueryType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbOperQueryType.setStatus("current")
_GslbOperAdd_ObjectIdentity = ObjectIdentity
gslbOperAdd = _GslbOperAdd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 2)
)
_GslbOperAddDomain_Type = DisplayString
_GslbOperAddDomain_Object = MibScalar
gslbOperAddDomain = _GslbOperAddDomain_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 2, 1),
    _GslbOperAddDomain_Type()
)
gslbOperAddDomain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbOperAddDomain.setStatus("current")
_GslbOperAddSrcIp_Type = IpAddress
_GslbOperAddSrcIp_Object = MibScalar
gslbOperAddSrcIp = _GslbOperAddSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 2, 2),
    _GslbOperAddSrcIp_Type()
)
gslbOperAddSrcIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbOperAddSrcIp.setStatus("current")
_GslbOperAddServerIp_Type = IpAddress
_GslbOperAddServerIp_Object = MibScalar
gslbOperAddServerIp = _GslbOperAddServerIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 2, 3),
    _GslbOperAddServerIp_Type()
)
gslbOperAddServerIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbOperAddServerIp.setStatus("current")


class _GslbOperAddEntry_Type(Integer32):
    """Custom type gslbOperAddEntry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("add", 2),
          ("ok", 1))
    )


_GslbOperAddEntry_Type.__name__ = "Integer32"
_GslbOperAddEntry_Object = MibScalar
gslbOperAddEntry = _GslbOperAddEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 2, 4),
    _GslbOperAddEntry_Type()
)
gslbOperAddEntry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbOperAddEntry.setStatus("current")


class _GslbOperAddSrcIp6_Type(DisplayString):
    """Custom type gslbOperAddSrcIp6 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_GslbOperAddSrcIp6_Type.__name__ = "DisplayString"
_GslbOperAddSrcIp6_Object = MibScalar
gslbOperAddSrcIp6 = _GslbOperAddSrcIp6_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 2, 5),
    _GslbOperAddSrcIp6_Type()
)
gslbOperAddSrcIp6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbOperAddSrcIp6.setStatus("current")


class _GslbOperAddServerIp6_Type(DisplayString):
    """Custom type gslbOperAddServerIp6 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_GslbOperAddServerIp6_Type.__name__ = "DisplayString"
_GslbOperAddServerIp6_Object = MibScalar
gslbOperAddServerIp6 = _GslbOperAddServerIp6_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 2, 6),
    _GslbOperAddServerIp6_Type()
)
gslbOperAddServerIp6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbOperAddServerIp6.setStatus("current")


class _GslbOperRemove_Type(Integer32):
    """Custom type gslbOperRemove based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ok", 1),
          ("remove", 2))
    )


_GslbOperRemove_Type.__name__ = "Integer32"
_GslbOperRemove_Object = MibScalar
gslbOperRemove = _GslbOperRemove_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 3),
    _GslbOperRemove_Type()
)
gslbOperRemove.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbOperRemove.setStatus("current")
_GslbOperAvPersis_ObjectIdentity = ObjectIdentity
gslbOperAvPersis = _GslbOperAvPersis_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 4)
)


class _GslbOperAvPersisVirtNum_Type(Integer32):
    """Custom type gslbOperAvPersisVirtNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_GslbOperAvPersisVirtNum_Type.__name__ = "Integer32"
_GslbOperAvPersisVirtNum_Object = MibScalar
gslbOperAvPersisVirtNum = _GslbOperAvPersisVirtNum_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 4, 1),
    _GslbOperAvPersisVirtNum_Type()
)
gslbOperAvPersisVirtNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbOperAvPersisVirtNum.setStatus("current")


class _GslbOperAvPersisState_Type(Integer32):
    """Custom type gslbOperAvPersisState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_GslbOperAvPersisState_Type.__name__ = "Integer32"
_GslbOperAvPersisState_Object = MibScalar
gslbOperAvPersisState = _GslbOperAvPersisState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 4, 2),
    _GslbOperAvPersisState_Type()
)
gslbOperAvPersisState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbOperAvPersisState.setStatus("current")


class _GslbOperAvpersistence_Type(Integer32):
    """Custom type gslbOperAvpersistence based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("config", 2),
          ("ok", 1))
    )


_GslbOperAvpersistence_Type.__name__ = "Integer32"
_GslbOperAvpersistence_Object = MibScalar
gslbOperAvpersistence = _GslbOperAvpersistence_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 4, 3),
    _GslbOperAvpersistence_Type()
)
gslbOperAvpersistence.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbOperAvpersistence.setStatus("current")


class _GslbOperClear_Type(Integer32):
    """Custom type gslbOperClear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("clear", 2),
          ("ok", 1))
    )


_GslbOperClear_Type.__name__ = "Integer32"
_GslbOperClear_Object = MibScalar
gslbOperClear = _GslbOperClear_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 5),
    _GslbOperClear_Type()
)
gslbOperClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbOperClear.setStatus("current")
_GslbOperDnsSec_ObjectIdentity = ObjectIdentity
gslbOperDnsSec = _GslbOperDnsSec_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 6)
)
_GslbOperDnsSecTable_Object = MibTable
gslbOperDnsSecTable = _GslbOperDnsSecTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 6, 1)
)
if mibBuilder.loadTexts:
    gslbOperDnsSecTable.setStatus("current")
_GslbOperDnsSecEntry_Object = MibTableRow
gslbOperDnsSecEntry = _GslbOperDnsSecEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 6, 1, 1)
)
gslbOperDnsSecEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "gslbOperDnsSecKeyID"),
)
if mibBuilder.loadTexts:
    gslbOperDnsSecEntry.setStatus("current")


class _GslbOperDnsSecKeyID_Type(DisplayString):
    """Custom type gslbOperDnsSecKeyID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_GslbOperDnsSecKeyID_Type.__name__ = "DisplayString"
_GslbOperDnsSecKeyID_Object = MibTableColumn
gslbOperDnsSecKeyID = _GslbOperDnsSecKeyID_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 6, 1, 1, 1),
    _GslbOperDnsSecKeyID_Type()
)
gslbOperDnsSecKeyID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gslbOperDnsSecKeyID.setStatus("current")


class _GslbOperDnsSecEmergencyRollover_Type(Integer32):
    """Custom type gslbOperDnsSecEmergencyRollover based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("other", 1),
          ("rollover", 2))
    )


_GslbOperDnsSecEmergencyRollover_Type.__name__ = "Integer32"
_GslbOperDnsSecEmergencyRollover_Object = MibTableColumn
gslbOperDnsSecEmergencyRollover = _GslbOperDnsSecEmergencyRollover_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 6, 1, 1, 2),
    _GslbOperDnsSecEmergencyRollover_Type()
)
gslbOperDnsSecEmergencyRollover.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbOperDnsSecEmergencyRollover.setStatus("current")


class _GslbOperDnsSecImmediateRollover_Type(Integer32):
    """Custom type gslbOperDnsSecImmediateRollover based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("other", 1),
          ("rollover", 2))
    )


_GslbOperDnsSecImmediateRollover_Type.__name__ = "Integer32"
_GslbOperDnsSecImmediateRollover_Object = MibTableColumn
gslbOperDnsSecImmediateRollover = _GslbOperDnsSecImmediateRollover_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 4, 6, 1, 1, 3),
    _GslbOperDnsSecImmediateRollover_Type()
)
gslbOperDnsSecImmediateRollover.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gslbOperDnsSecImmediateRollover.setStatus("current")
_SlbOperGroupRealServerTable_Object = MibTable
slbOperGroupRealServerTable = _SlbOperGroupRealServerTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 5)
)
if mibBuilder.loadTexts:
    slbOperGroupRealServerTable.setStatus("current")
_SlbOperGroupRealServerEntry_Object = MibTableRow
slbOperGroupRealServerEntry = _SlbOperGroupRealServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 5, 1)
)
slbOperGroupRealServerEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbOperRealServGroupIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbOperGroupRealServIndex"),
)
if mibBuilder.loadTexts:
    slbOperGroupRealServerEntry.setStatus("current")
_SlbOperRealServGroupIndex_Type = Integer32
_SlbOperRealServGroupIndex_Object = MibTableColumn
slbOperRealServGroupIndex = _SlbOperRealServGroupIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 5, 1, 1),
    _SlbOperRealServGroupIndex_Type()
)
slbOperRealServGroupIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbOperRealServGroupIndex.setStatus("current")
_SlbOperGroupRealServIndex_Type = Integer32
_SlbOperGroupRealServIndex_Object = MibTableColumn
slbOperGroupRealServIndex = _SlbOperGroupRealServIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 5, 1, 2),
    _SlbOperGroupRealServIndex_Type()
)
slbOperGroupRealServIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    slbOperGroupRealServIndex.setStatus("current")


class _SlbOperGroupRealServerState_Type(Integer32):
    """Custom type slbOperGroupRealServerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_SlbOperGroupRealServerState_Type.__name__ = "Integer32"
_SlbOperGroupRealServerState_Object = MibTableColumn
slbOperGroupRealServerState = _SlbOperGroupRealServerState_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 5, 1, 3),
    _SlbOperGroupRealServerState_Type()
)
slbOperGroupRealServerState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbOperGroupRealServerState.setStatus("current")
_SlbOperSessionDel_ObjectIdentity = ObjectIdentity
slbOperSessionDel = _SlbOperSessionDel_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 6)
)
_SlbOperSessionDelSrcIp_Type = IpAddress
_SlbOperSessionDelSrcIp_Object = MibScalar
slbOperSessionDelSrcIp = _SlbOperSessionDelSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 6, 1),
    _SlbOperSessionDelSrcIp_Type()
)
slbOperSessionDelSrcIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbOperSessionDelSrcIp.setStatus("current")


class _SlbOperSessionDelSrcPort_Type(Integer32):
    """Custom type slbOperSessionDelSrcPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SlbOperSessionDelSrcPort_Type.__name__ = "Integer32"
_SlbOperSessionDelSrcPort_Object = MibScalar
slbOperSessionDelSrcPort = _SlbOperSessionDelSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 6, 2),
    _SlbOperSessionDelSrcPort_Type()
)
slbOperSessionDelSrcPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbOperSessionDelSrcPort.setStatus("current")
_SlbOperSessionDelDestIp_Type = IpAddress
_SlbOperSessionDelDestIp_Object = MibScalar
slbOperSessionDelDestIp = _SlbOperSessionDelDestIp_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 6, 3),
    _SlbOperSessionDelDestIp_Type()
)
slbOperSessionDelDestIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbOperSessionDelDestIp.setStatus("current")


class _SlbOperSessionDelDestPort_Type(Integer32):
    """Custom type slbOperSessionDelDestPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SlbOperSessionDelDestPort_Type.__name__ = "Integer32"
_SlbOperSessionDelDestPort_Object = MibScalar
slbOperSessionDelDestPort = _SlbOperSessionDelDestPort_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 6, 4),
    _SlbOperSessionDelDestPort_Type()
)
slbOperSessionDelDestPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbOperSessionDelDestPort.setStatus("current")


class _SlbOperSessionDelTransType_Type(Integer32):
    """Custom type slbOperSessionDelTransType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("tcp", 1),
          ("udp", 2))
    )


_SlbOperSessionDelTransType_Type.__name__ = "Integer32"
_SlbOperSessionDelTransType_Object = MibScalar
slbOperSessionDelTransType = _SlbOperSessionDelTransType_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 6, 5),
    _SlbOperSessionDelTransType_Type()
)
slbOperSessionDelTransType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbOperSessionDelTransType.setStatus("current")


class _SlbOperSessionDelete_Type(Integer32):
    """Custom type slbOperSessionDelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("ok", 1))
    )


_SlbOperSessionDelete_Type.__name__ = "Integer32"
_SlbOperSessionDelete_Object = MibScalar
slbOperSessionDelete = _SlbOperSessionDelete_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 6, 6),
    _SlbOperSessionDelete_Type()
)
slbOperSessionDelete.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbOperSessionDelete.setStatus("current")
_SlbOperHttpCachePurgeTable_Object = MibTable
slbOperHttpCachePurgeTable = _SlbOperHttpCachePurgeTable_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 7)
)
if mibBuilder.loadTexts:
    slbOperHttpCachePurgeTable.setStatus("current")
_SlbOperHttpCachePurgeEntry_Object = MibTableRow
slbOperHttpCachePurgeEntry = _SlbOperHttpCachePurgeEntry_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 7, 1)
)
slbOperHttpCachePurgeEntry.setIndexNames(
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbOperHttpCachePurgeServerIndex"),
    (0, "ALTEON-CHEETAH-LAYER4-MIB", "slbOperHttpCachePurgeServiceIndex"),
)
if mibBuilder.loadTexts:
    slbOperHttpCachePurgeEntry.setStatus("current")


class _SlbOperHttpCachePurgeServerIndex_Type(Integer32):
    """Custom type slbOperHttpCachePurgeServerIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_SlbOperHttpCachePurgeServerIndex_Type.__name__ = "Integer32"
_SlbOperHttpCachePurgeServerIndex_Object = MibTableColumn
slbOperHttpCachePurgeServerIndex = _SlbOperHttpCachePurgeServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 7, 1, 1),
    _SlbOperHttpCachePurgeServerIndex_Type()
)
slbOperHttpCachePurgeServerIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbOperHttpCachePurgeServerIndex.setStatus("current")


class _SlbOperHttpCachePurgeServiceIndex_Type(Integer32):
    """Custom type slbOperHttpCachePurgeServiceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 65534),
    )


_SlbOperHttpCachePurgeServiceIndex_Type.__name__ = "Integer32"
_SlbOperHttpCachePurgeServiceIndex_Object = MibTableColumn
slbOperHttpCachePurgeServiceIndex = _SlbOperHttpCachePurgeServiceIndex_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 7, 1, 2),
    _SlbOperHttpCachePurgeServiceIndex_Type()
)
slbOperHttpCachePurgeServiceIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbOperHttpCachePurgeServiceIndex.setStatus("current")
_SlbOperHttpCachePurgeURL_Type = DisplayString
_SlbOperHttpCachePurgeURL_Object = MibTableColumn
slbOperHttpCachePurgeURL = _SlbOperHttpCachePurgeURL_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 7, 1, 3),
    _SlbOperHttpCachePurgeURL_Type()
)
slbOperHttpCachePurgeURL.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    slbOperHttpCachePurgeURL.setStatus("current")
_OcspCachePurge_ObjectIdentity = ObjectIdentity
ocspCachePurge = _OcspCachePurge_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 8)
)
_SlbOperOcspCachePurge_Type = DisplayString
_SlbOperOcspCachePurge_Object = MibScalar
slbOperOcspCachePurge = _SlbOperOcspCachePurge_Object(
    (1, 3, 6, 1, 4, 1, 1872, 2, 5, 4, 4, 8, 1),
    _SlbOperOcspCachePurge_Type()
)
slbOperOcspCachePurge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    slbOperOcspCachePurge.setStatus("current")

# Managed Objects groups


# Notification objects


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "ALTEON-CHEETAH-LAYER4-MIB",
    **{"layer4": layer4,
       "layer4Configs": layer4Configs,
       "slbCfg": slbCfg,
       "slbGeneralCfg": slbGeneralCfg,
       "slbCurCfgGlobalControl": slbCurCfgGlobalControl,
       "slbNewCfgGlobalControl": slbNewCfgGlobalControl,
       "slbCurCfgImask": slbCurCfgImask,
       "slbNewCfgImask": slbNewCfgImask,
       "slbCurCfgMnet": slbCurCfgMnet,
       "slbNewCfgMnet": slbNewCfgMnet,
       "slbCurCfgMmask": slbCurCfgMmask,
       "slbNewCfgMmask": slbNewCfgMmask,
       "slbCurCfgRadiusAuthenString": slbCurCfgRadiusAuthenString,
       "slbNewCfgRadiusAuthenString": slbNewCfgRadiusAuthenString,
       "slbCurCfgDirectMode": slbCurCfgDirectMode,
       "slbNewCfgDirectMode": slbNewCfgDirectMode,
       "slbCurCfgPmask": slbCurCfgPmask,
       "slbNewCfgPmask": slbNewCfgPmask,
       "slbCurCfgGrace": slbCurCfgGrace,
       "slbNewCfgGrace": slbNewCfgGrace,
       "slbCurCfgVirtMatrixArch": slbCurCfgVirtMatrixArch,
       "slbNewCfgVirtMatrixArch": slbNewCfgVirtMatrixArch,
       "slbCurCfgFastage": slbCurCfgFastage,
       "slbNewCfgFastage": slbNewCfgFastage,
       "slbCurCfgSlowage": slbCurCfgSlowage,
       "slbNewCfgSlowage": slbNewCfgSlowage,
       "slbCurCfgTpcp": slbCurCfgTpcp,
       "slbNewCfgTpcp": slbNewCfgTpcp,
       "slbCurCfgMetricInterval": slbCurCfgMetricInterval,
       "slbNewCfgMetricInterval": slbNewCfgMetricInterval,
       "slbCurCfgLdapVersion": slbCurCfgLdapVersion,
       "slbNewCfgLdapVersion": slbNewCfgLdapVersion,
       "slbCurCfgAllowHttpHc": slbCurCfgAllowHttpHc,
       "slbNewCfgAllowHttpHc": slbNewCfgAllowHttpHc,
       "slbCurCfgSubmac": slbCurCfgSubmac,
       "slbNewCfgSubmac": slbNewCfgSubmac,
       "slbCurCfgProxyGratArp": slbCurCfgProxyGratArp,
       "slbNewCfgProxyGratArp": slbNewCfgProxyGratArp,
       "slbCurCfgRtsVlan": slbCurCfgRtsVlan,
       "slbNewCfgRtsVlan": slbNewCfgRtsVlan,
       "slbCurCfgVirtualServiceStats": slbCurCfgVirtualServiceStats,
       "slbNewCfgVirtualServiceStats": slbNewCfgVirtualServiceStats,
       "slbCurCfgSlbSessAtkIntrval": slbCurCfgSlbSessAtkIntrval,
       "slbNewCfgSlbSessAtkIntrval": slbNewCfgSlbSessAtkIntrval,
       "slbCurCfgSlbSessAtkAllowlim": slbCurCfgSlbSessAtkAllowlim,
       "slbNewCfgSlbSessAtkAllowlim": slbNewCfgSlbSessAtkAllowlim,
       "slbCurCfgNewSlowage": slbCurCfgNewSlowage,
       "slbNewCfgNewSlowage": slbNewCfgNewSlowage,
       "slbCurCfgPortBind": slbCurCfgPortBind,
       "slbNewCfgPortBind": slbNewCfgPortBind,
       "slbCurCfgVmaSrcPort": slbCurCfgVmaSrcPort,
       "slbNewCfgVmaSrcPort": slbNewCfgVmaSrcPort,
       "slbCurCfgIpTcpCksum": slbCurCfgIpTcpCksum,
       "slbNewCfgIpTcpCksum": slbNewCfgIpTcpCksum,
       "slbCurCfgAuxRipHash": slbCurCfgAuxRipHash,
       "slbNewCfgAuxRipHash": slbNewCfgAuxRipHash,
       "slbCurCfgClearBackup": slbCurCfgClearBackup,
       "slbNewCfgClearBackup": slbNewCfgClearBackup,
       "slbCurCfgmStat": slbCurCfgmStat,
       "slbNewCfgmStat": slbNewCfgmStat,
       "slbCurCfgvStat": slbCurCfgvStat,
       "slbNewCfgvStat": slbNewCfgvStat,
       "slbCurCfgVmaDip": slbCurCfgVmaDip,
       "slbNewCfgVmaDip": slbNewCfgVmaDip,
       "slbCurCfgClsRst": slbCurCfgClsRst,
       "slbNewCfgClsRst": slbNewCfgClsRst,
       "slbCurCfgRtsIpLkp": slbCurCfgRtsIpLkp,
       "slbNewCfgRtsIpLkp": slbNewCfgRtsIpLkp,
       "slbCurCfgPprefix": slbCurCfgPprefix,
       "slbNewCfgPprefix": slbNewCfgPprefix,
       "slbCurCfgSubdmac": slbCurCfgSubdmac,
       "slbNewCfgSubdmac": slbNewCfgSubdmac,
       "slbCurCfgpVlanTag": slbCurCfgpVlanTag,
       "slbNewCfgpVlanTag": slbNewCfgpVlanTag,
       "slbCurCfgNmask": slbCurCfgNmask,
       "slbNewCfgNmask": slbNewCfgNmask,
       "realServerCfg": realServerCfg,
       "slbRealServerMaxSize": slbRealServerMaxSize,
       "slbCurCfgRealServerTable": slbCurCfgRealServerTable,
       "slbCurCfgRealServerEntry": slbCurCfgRealServerEntry,
       "slbCurCfgRealServerIndex": slbCurCfgRealServerIndex,
       "slbCurCfgRealServerIpAddr": slbCurCfgRealServerIpAddr,
       "slbCurCfgRealServerWeight": slbCurCfgRealServerWeight,
       "slbCurCfgRealServerMaxConns": slbCurCfgRealServerMaxConns,
       "slbCurCfgRealServerTimeOut": slbCurCfgRealServerTimeOut,
       "slbCurCfgRealServerBackUp": slbCurCfgRealServerBackUp,
       "slbCurCfgRealServerPingInterval": slbCurCfgRealServerPingInterval,
       "slbCurCfgRealServerFailRetry": slbCurCfgRealServerFailRetry,
       "slbCurCfgRealServerSuccRetry": slbCurCfgRealServerSuccRetry,
       "slbCurCfgRealServerState": slbCurCfgRealServerState,
       "slbCurCfgRealServerType": slbCurCfgRealServerType,
       "slbCurCfgRealServerName": slbCurCfgRealServerName,
       "slbCurCfgRealServerUrlBmap": slbCurCfgRealServerUrlBmap,
       "slbCurCfgRealServerCookie": slbCurCfgRealServerCookie,
       "slbCurCfgRealServerExcludeStr": slbCurCfgRealServerExcludeStr,
       "slbCurCfgRealServerSubmac": slbCurCfgRealServerSubmac,
       "slbCurCfgRealServerProxy": slbCurCfgRealServerProxy,
       "slbCurCfgRealServerLdapwr": slbCurCfgRealServerLdapwr,
       "slbCurCfgRealServerOid": slbCurCfgRealServerOid,
       "slbCurCfgRealServerCommString": slbCurCfgRealServerCommString,
       "slbCurCfgRealServerIdsvlan": slbCurCfgRealServerIdsvlan,
       "slbCurCfgRealServerIdsport": slbCurCfgRealServerIdsport,
       "slbCurCfgRealServerAvail": slbCurCfgRealServerAvail,
       "slbCurCfgRealServerFastHealthCheck": slbCurCfgRealServerFastHealthCheck,
       "slbCurCfgRealServerSubdmac": slbCurCfgRealServerSubdmac,
       "slbCurCfgRealServerOverflow": slbCurCfgRealServerOverflow,
       "slbCurCfgRealServerBkpPreempt": slbCurCfgRealServerBkpPreempt,
       "slbCurCfgRealServerIpVer": slbCurCfgRealServerIpVer,
       "slbCurCfgRealServerIpv6Addr": slbCurCfgRealServerIpv6Addr,
       "slbNewCfgRealServerTable": slbNewCfgRealServerTable,
       "slbNewCfgRealServerEntry": slbNewCfgRealServerEntry,
       "slbNewCfgRealServerIndex": slbNewCfgRealServerIndex,
       "slbNewCfgRealServerIpAddr": slbNewCfgRealServerIpAddr,
       "slbNewCfgRealServerWeight": slbNewCfgRealServerWeight,
       "slbNewCfgRealServerMaxConns": slbNewCfgRealServerMaxConns,
       "slbNewCfgRealServerTimeOut": slbNewCfgRealServerTimeOut,
       "slbNewCfgRealServerBackUp": slbNewCfgRealServerBackUp,
       "slbNewCfgRealServerPingInterval": slbNewCfgRealServerPingInterval,
       "slbNewCfgRealServerFailRetry": slbNewCfgRealServerFailRetry,
       "slbNewCfgRealServerSuccRetry": slbNewCfgRealServerSuccRetry,
       "slbNewCfgRealServerState": slbNewCfgRealServerState,
       "slbNewCfgRealServerDelete": slbNewCfgRealServerDelete,
       "slbNewCfgRealServerType": slbNewCfgRealServerType,
       "slbNewCfgRealServerName": slbNewCfgRealServerName,
       "slbNewCfgRealServerUrlBmap": slbNewCfgRealServerUrlBmap,
       "slbNewCfgRealServerAddUrl": slbNewCfgRealServerAddUrl,
       "slbNewCfgRealServerRemUrl": slbNewCfgRealServerRemUrl,
       "slbNewCfgRealServerCookie": slbNewCfgRealServerCookie,
       "slbNewCfgRealServerExcludeStr": slbNewCfgRealServerExcludeStr,
       "slbNewCfgRealServerSubmac": slbNewCfgRealServerSubmac,
       "slbNewCfgRealServerProxy": slbNewCfgRealServerProxy,
       "slbNewCfgRealServerLdapwr": slbNewCfgRealServerLdapwr,
       "slbNewCfgRealServerOid": slbNewCfgRealServerOid,
       "slbNewCfgRealServerCommString": slbNewCfgRealServerCommString,
       "slbNewCfgRealServerIdsvlan": slbNewCfgRealServerIdsvlan,
       "slbNewCfgRealServerIdsport": slbNewCfgRealServerIdsport,
       "slbNewCfgRealServerAvail": slbNewCfgRealServerAvail,
       "slbNewCfgRealServerFastHealthCheck": slbNewCfgRealServerFastHealthCheck,
       "slbNewCfgRealServerSubdmac": slbNewCfgRealServerSubdmac,
       "slbNewCfgRealServerOverflow": slbNewCfgRealServerOverflow,
       "slbNewCfgRealServerBkpPreempt": slbNewCfgRealServerBkpPreempt,
       "slbNewCfgRealServerIpVer": slbNewCfgRealServerIpVer,
       "slbNewCfgRealServerIpv6Addr": slbNewCfgRealServerIpv6Addr,
       "slbNewCfgRealServerNxtRportIdx": slbNewCfgRealServerNxtRportIdx,
       "slbNewCfgRealServerNxtBuddyIdx": slbNewCfgRealServerNxtBuddyIdx,
       "slbRealServPortTableMaxSize": slbRealServPortTableMaxSize,
       "slbCurCfgRealServPortTable": slbCurCfgRealServPortTable,
       "slbCurCfgRealServPortEntry": slbCurCfgRealServPortEntry,
       "slbCurCfgRealServIndex": slbCurCfgRealServIndex,
       "slbCurCfgRealServPortIndex": slbCurCfgRealServPortIndex,
       "slbCurCfgRealServRealPort": slbCurCfgRealServRealPort,
       "slbNewCfgRealServPortTable": slbNewCfgRealServPortTable,
       "slbNewCfgRealServPortEntry": slbNewCfgRealServPortEntry,
       "slbNewCfgRealServIndex": slbNewCfgRealServIndex,
       "slbNewCfgRealServPortIndex": slbNewCfgRealServPortIndex,
       "slbNewCfgRealServRealPort": slbNewCfgRealServRealPort,
       "slbNewCfgRealServPortDelete": slbNewCfgRealServPortDelete,
       "slbNewCfgRealServRealPortFreeIdx": slbNewCfgRealServRealPortFreeIdx,
       "slbBuddyTableMaxSize": slbBuddyTableMaxSize,
       "slbCurCfgBuddyTable": slbCurCfgBuddyTable,
       "slbCurCfgBuddyEntry": slbCurCfgBuddyEntry,
       "slbCurCfgRealSerIndex": slbCurCfgRealSerIndex,
       "slbCurCfgBuddyIndex": slbCurCfgBuddyIndex,
       "slbCurCfgBuddyRealIndex": slbCurCfgBuddyRealIndex,
       "slbCurCfgBuddyGroupIndex": slbCurCfgBuddyGroupIndex,
       "slbCurCfgBuddyService": slbCurCfgBuddyService,
       "slbNewCfgBuddyTable": slbNewCfgBuddyTable,
       "slbNewCfgBuddyEntry": slbNewCfgBuddyEntry,
       "slbNewCfgRealSerIndex": slbNewCfgRealSerIndex,
       "slbNewCfgBuddyIndex": slbNewCfgBuddyIndex,
       "slbNewCfgBuddyRealIndex": slbNewCfgBuddyRealIndex,
       "slbNewCfgBuddyGroupIndex": slbNewCfgBuddyGroupIndex,
       "slbNewCfgBuddyService": slbNewCfgBuddyService,
       "slbNewCfgBuddyDelete": slbNewCfgBuddyDelete,
       "realServerGroupCfg": realServerGroupCfg,
       "slbGroupTableMaxSize": slbGroupTableMaxSize,
       "slbGroupMaxIdsSize": slbGroupMaxIdsSize,
       "slbCurCfgGroupTable": slbCurCfgGroupTable,
       "slbCurCfgGroupEntry": slbCurCfgGroupEntry,
       "slbCurCfgGroupIndex": slbCurCfgGroupIndex,
       "slbCurCfgGroupRealServers": slbCurCfgGroupRealServers,
       "slbCurCfgGroupMetric": slbCurCfgGroupMetric,
       "slbCurCfgGroupBackupServer": slbCurCfgGroupBackupServer,
       "slbCurCfgGroupBackupGroup": slbCurCfgGroupBackupGroup,
       "slbCurCfgGroupHealthCheckUrl": slbCurCfgGroupHealthCheckUrl,
       "slbCurCfgGroupHealthCheckLayer": slbCurCfgGroupHealthCheckLayer,
       "slbCurCfgGroupName": slbCurCfgGroupName,
       "slbCurCfgGroupRealThreshold": slbCurCfgGroupRealThreshold,
       "slbCurCfgGroupVipHealthCheck": slbCurCfgGroupVipHealthCheck,
       "slbCurCfgGroupIdsState": slbCurCfgGroupIdsState,
       "slbCurCfgGroupIdsPort": slbCurCfgGroupIdsPort,
       "slbCurCfgGroupIdsFlood": slbCurCfgGroupIdsFlood,
       "slbCurCfgGroupMinmissHash": slbCurCfgGroupMinmissHash,
       "slbCurCfgGroupPhashMask": slbCurCfgGroupPhashMask,
       "slbCurCfgGroupRmetric": slbCurCfgGroupRmetric,
       "slbCurCfgGroupHealthCheckFormula": slbCurCfgGroupHealthCheckFormula,
       "slbCurCfgGroupOperatorAccess": slbCurCfgGroupOperatorAccess,
       "slbCurCfgGroupWlm": slbCurCfgGroupWlm,
       "slbCurCfgGroupRadiusAuthenString": slbCurCfgGroupRadiusAuthenString,
       "slbCurCfgGroupSecBackupGroup": slbCurCfgGroupSecBackupGroup,
       "slbCurCfgGroupSlowstart": slbCurCfgGroupSlowstart,
       "slbCurCfgGroupMinThreshold": slbCurCfgGroupMinThreshold,
       "slbCurCfgGroupMaxThreshold": slbCurCfgGroupMaxThreshold,
       "slbCurCfgGroupIpVer": slbCurCfgGroupIpVer,
       "slbCurCfgGroupBackup": slbCurCfgGroupBackup,
       "slbNewCfgGroupTable": slbNewCfgGroupTable,
       "slbNewCfgGroupEntry": slbNewCfgGroupEntry,
       "slbNewCfgGroupIndex": slbNewCfgGroupIndex,
       "slbNewCfgGroupRealServers": slbNewCfgGroupRealServers,
       "slbNewCfgGroupAddServer": slbNewCfgGroupAddServer,
       "slbNewCfgGroupRemoveServer": slbNewCfgGroupRemoveServer,
       "slbNewCfgGroupMetric": slbNewCfgGroupMetric,
       "slbNewCfgGroupBackupServer": slbNewCfgGroupBackupServer,
       "slbNewCfgGroupBackupGroup": slbNewCfgGroupBackupGroup,
       "slbNewCfgGroupHealthCheckUrl": slbNewCfgGroupHealthCheckUrl,
       "slbNewCfgGroupHealthCheckLayer": slbNewCfgGroupHealthCheckLayer,
       "slbNewCfgGroupName": slbNewCfgGroupName,
       "slbNewCfgGroupRealThreshold": slbNewCfgGroupRealThreshold,
       "slbNewCfgGroupVipHealthCheck": slbNewCfgGroupVipHealthCheck,
       "slbNewCfgGroupIdsState": slbNewCfgGroupIdsState,
       "slbNewCfgGroupIdsPort": slbNewCfgGroupIdsPort,
       "slbNewCfgGroupDelete": slbNewCfgGroupDelete,
       "slbNewCfgGroupIdsFlood": slbNewCfgGroupIdsFlood,
       "slbNewCfgGroupMinmissHash": slbNewCfgGroupMinmissHash,
       "slbNewCfgGroupPhashMask": slbNewCfgGroupPhashMask,
       "slbNewCfgGroupRmetric": slbNewCfgGroupRmetric,
       "slbNewCfgGroupHealthCheckFormula": slbNewCfgGroupHealthCheckFormula,
       "slbNewCfgGroupOperatorAccess": slbNewCfgGroupOperatorAccess,
       "slbNewCfgGroupWlm": slbNewCfgGroupWlm,
       "slbNewCfgGroupRadiusAuthenString": slbNewCfgGroupRadiusAuthenString,
       "slbNewCfgGroupSecBackupGroup": slbNewCfgGroupSecBackupGroup,
       "slbNewCfgGroupSlowstart": slbNewCfgGroupSlowstart,
       "slbNewCfgGroupMinThreshold": slbNewCfgGroupMinThreshold,
       "slbNewCfgGroupMaxThreshold": slbNewCfgGroupMaxThreshold,
       "slbNewCfgGroupIpVer": slbNewCfgGroupIpVer,
       "slbNewCfgGroupBackup": slbNewCfgGroupBackup,
       "slbNewCfgGroupBackupType": slbNewCfgGroupBackupType,
       "slbCurCfgGroupRealServerTable": slbCurCfgGroupRealServerTable,
       "slbCurCfgGroupRealServerEntry": slbCurCfgGroupRealServerEntry,
       "slbCurCfgRealServGroupIndex": slbCurCfgRealServGroupIndex,
       "slbCurCfgGroupRealServIndex": slbCurCfgGroupRealServIndex,
       "slbCurCfgGroupRealServerState": slbCurCfgGroupRealServerState,
       "slbNewCfgGroupRealServerTable": slbNewCfgGroupRealServerTable,
       "slbNewCfgGroupRealServerEntry": slbNewCfgGroupRealServerEntry,
       "slbNewCfgRealServGroupIndex": slbNewCfgRealServGroupIndex,
       "slbNewCfgGroupRealServIndex": slbNewCfgGroupRealServIndex,
       "slbNewCfgGroupRealServerState": slbNewCfgGroupRealServerState,
       "virtualServerCfg": virtualServerCfg,
       "slbVirtServerTableMaxSize": slbVirtServerTableMaxSize,
       "slbCurCfgVirtServerTable": slbCurCfgVirtServerTable,
       "slbCurCfgVirtualServerEntry": slbCurCfgVirtualServerEntry,
       "slbCurCfgVirtServerIndex": slbCurCfgVirtServerIndex,
       "slbCurCfgVirtServerIpAddress": slbCurCfgVirtServerIpAddress,
       "slbCurCfgVirtServerLayer3Only": slbCurCfgVirtServerLayer3Only,
       "slbCurCfgVirtServerState": slbCurCfgVirtServerState,
       "slbCurCfgVirtServerDname": slbCurCfgVirtServerDname,
       "slbCurCfgVirtServerBwmContract": slbCurCfgVirtServerBwmContract,
       "slbCurCfgVirtServerWeight": slbCurCfgVirtServerWeight,
       "slbCurCfgVirtServerAvail": slbCurCfgVirtServerAvail,
       "slbCurCfgVirtServerRule": slbCurCfgVirtServerRule,
       "slbCurCfgVirtServerVname": slbCurCfgVirtServerVname,
       "slbCurCfgVirtServerIpVer": slbCurCfgVirtServerIpVer,
       "slbCurCfgVirtServerIpv6Addr": slbCurCfgVirtServerIpv6Addr,
       "slbCurCfgVirtServerCReset": slbCurCfgVirtServerCReset,
       "slbNewCfgVirtServerTable": slbNewCfgVirtServerTable,
       "slbNewCfgVirtualServerEntry": slbNewCfgVirtualServerEntry,
       "slbNewCfgVirtServerIndex": slbNewCfgVirtServerIndex,
       "slbNewCfgVirtServerIpAddress": slbNewCfgVirtServerIpAddress,
       "slbNewCfgVirtServerLayer3Only": slbNewCfgVirtServerLayer3Only,
       "slbNewCfgVirtServerState": slbNewCfgVirtServerState,
       "slbNewCfgVirtServerDname": slbNewCfgVirtServerDname,
       "slbNewCfgVirtServerBwmContract": slbNewCfgVirtServerBwmContract,
       "slbNewCfgVirtServerDelete": slbNewCfgVirtServerDelete,
       "slbNewCfgVirtServerWeight": slbNewCfgVirtServerWeight,
       "slbNewCfgVirtServerAvail": slbNewCfgVirtServerAvail,
       "slbNewCfgVirtServerRule": slbNewCfgVirtServerRule,
       "slbNewCfgVirtServerAddRule": slbNewCfgVirtServerAddRule,
       "slbNewCfgVirtServerRemoveRule": slbNewCfgVirtServerRemoveRule,
       "slbNewCfgVirtServerVname": slbNewCfgVirtServerVname,
       "slbNewCfgVirtServerIpVer": slbNewCfgVirtServerIpVer,
       "slbNewCfgVirtServerIpv6Addr": slbNewCfgVirtServerIpv6Addr,
       "slbNewCfgVirtServerFreeServiceIdx": slbNewCfgVirtServerFreeServiceIdx,
       "slbNewCfgVirtServerCReset": slbNewCfgVirtServerCReset,
       "slbVirtServicesTableMaxSize": slbVirtServicesTableMaxSize,
       "slbCurCfgVirtServicesTable": slbCurCfgVirtServicesTable,
       "slbCurCfgVirtServicesEntry": slbCurCfgVirtServicesEntry,
       "slbCurCfgVirtServIndex": slbCurCfgVirtServIndex,
       "slbCurCfgVirtServiceIndex": slbCurCfgVirtServiceIndex,
       "slbCurCfgVirtServiceVirtPort": slbCurCfgVirtServiceVirtPort,
       "slbCurCfgVirtServiceRealGroup": slbCurCfgVirtServiceRealGroup,
       "slbCurCfgVirtServiceRealPort": slbCurCfgVirtServiceRealPort,
       "slbCurCfgVirtServiceUDPBalance": slbCurCfgVirtServiceUDPBalance,
       "slbCurCfgVirtServiceHname": slbCurCfgVirtServiceHname,
       "slbCurCfgVirtServiceBwmContract": slbCurCfgVirtServiceBwmContract,
       "slbCurCfgVirtServiceDirServerRtn": slbCurCfgVirtServiceDirServerRtn,
       "slbCurCfgVirtServiceRtspUrlParse": slbCurCfgVirtServiceRtspUrlParse,
       "slbCurCfgVirtServiceDBind": slbCurCfgVirtServiceDBind,
       "slbCurCfgVirtServiceFtpParsing": slbCurCfgVirtServiceFtpParsing,
       "slbCurCfgVirtServiceRemapUDPFrags": slbCurCfgVirtServiceRemapUDPFrags,
       "slbCurCfgVirtServiceDnsSlb": slbCurCfgVirtServiceDnsSlb,
       "slbCurCfgVirtServiceResponseCount": slbCurCfgVirtServiceResponseCount,
       "slbCurCfgVirtServicePBind": slbCurCfgVirtServicePBind,
       "slbCurCfgVirtServiceCname": slbCurCfgVirtServiceCname,
       "slbCurCfgVirtServiceCoffset": slbCurCfgVirtServiceCoffset,
       "slbCurCfgVirtServiceClength": slbCurCfgVirtServiceClength,
       "slbCurCfgVirtServiceUriCookie": slbCurCfgVirtServiceUriCookie,
       "slbCurCfgVirtServiceCExpire": slbCurCfgVirtServiceCExpire,
       "slbCurCfgVirtServiceCookieMode": slbCurCfgVirtServiceCookieMode,
       "slbCurCfgVirtServiceHttpSlb": slbCurCfgVirtServiceHttpSlb,
       "slbCurCfgVirtServiceHttpSlbOption": slbCurCfgVirtServiceHttpSlbOption,
       "slbCurCfgVirtServiceHttpSlb2": slbCurCfgVirtServiceHttpSlb2,
       "slbCurCfgVirtServiceHttpHdrName": slbCurCfgVirtServiceHttpHdrName,
       "slbCurCfgVirtServiceUrlHashLen": slbCurCfgVirtServiceUrlHashLen,
       "slbCurCfgVirtServiceDirect": slbCurCfgVirtServiceDirect,
       "slbCurCfgVirtServiceThash": slbCurCfgVirtServiceThash,
       "slbCurCfgVirtServiceLdapreset": slbCurCfgVirtServiceLdapreset,
       "slbCurCfgVirtServiceLdapslb": slbCurCfgVirtServiceLdapslb,
       "slbCurCfgVirtServiceSip": slbCurCfgVirtServiceSip,
       "slbCurCfgVirtServiceXForwardedFor": slbCurCfgVirtServiceXForwardedFor,
       "slbCurCfgVirtServiceHttpRedir": slbCurCfgVirtServiceHttpRedir,
       "slbCurCfgVirtServicePbindRport": slbCurCfgVirtServicePbindRport,
       "slbCurCfgVirtServiceEgressPip": slbCurCfgVirtServiceEgressPip,
       "slbCurCfgVirtServiceCookieDname": slbCurCfgVirtServiceCookieDname,
       "slbCurCfgVirtServiceWts": slbCurCfgVirtServiceWts,
       "slbCurCfgVirtServiceUhash": slbCurCfgVirtServiceUhash,
       "slbCurCfgVirtServiceTimeOut": slbCurCfgVirtServiceTimeOut,
       "slbCurCfgVirtServiceSdpNat": slbCurCfgVirtServiceSdpNat,
       "slbCurCfgVirtServiceSessionMirror": slbCurCfgVirtServiceSessionMirror,
       "slbCurCfgVirtServiceSoftGrid": slbCurCfgVirtServiceSoftGrid,
       "slbCurCfgVirtServiceConnPooling": slbCurCfgVirtServiceConnPooling,
       "slbCurCfgVirtPersistentTimeOut": slbCurCfgVirtPersistentTimeOut,
       "slbNewCfgVirtServicesTable": slbNewCfgVirtServicesTable,
       "slbNewCfgVirtServicesEntry": slbNewCfgVirtServicesEntry,
       "slbNewCfgVirtServIndex": slbNewCfgVirtServIndex,
       "slbNewCfgVirtServiceIndex": slbNewCfgVirtServiceIndex,
       "slbNewCfgVirtServiceVirtPort": slbNewCfgVirtServiceVirtPort,
       "slbNewCfgVirtServiceRealGroup": slbNewCfgVirtServiceRealGroup,
       "slbNewCfgVirtServiceRealPort": slbNewCfgVirtServiceRealPort,
       "slbNewCfgVirtServiceUDPBalance": slbNewCfgVirtServiceUDPBalance,
       "slbNewCfgVirtServiceHname": slbNewCfgVirtServiceHname,
       "slbNewCfgVirtServiceBwmContract": slbNewCfgVirtServiceBwmContract,
       "slbNewCfgVirtServiceDirServerRtn": slbNewCfgVirtServiceDirServerRtn,
       "slbNewCfgVirtServiceRtspUrlParse": slbNewCfgVirtServiceRtspUrlParse,
       "slbNewCfgVirtServiceDBind": slbNewCfgVirtServiceDBind,
       "slbNewCfgVirtServiceFtpParsing": slbNewCfgVirtServiceFtpParsing,
       "slbNewCfgVirtServiceRemapUDPFrags": slbNewCfgVirtServiceRemapUDPFrags,
       "slbNewCfgVirtServiceDnsSlb": slbNewCfgVirtServiceDnsSlb,
       "slbNewCfgVirtServiceResponseCount": slbNewCfgVirtServiceResponseCount,
       "slbNewCfgVirtServicePBind": slbNewCfgVirtServicePBind,
       "slbNewCfgVirtServiceCname": slbNewCfgVirtServiceCname,
       "slbNewCfgVirtServiceCoffset": slbNewCfgVirtServiceCoffset,
       "slbNewCfgVirtServiceClength": slbNewCfgVirtServiceClength,
       "slbNewCfgVirtServiceUriCookie": slbNewCfgVirtServiceUriCookie,
       "slbNewCfgVirtServiceCExpire": slbNewCfgVirtServiceCExpire,
       "slbNewCfgVirtServiceCookieMode": slbNewCfgVirtServiceCookieMode,
       "slbNewCfgVirtServiceHttpSlb": slbNewCfgVirtServiceHttpSlb,
       "slbNewCfgVirtServiceHttpSlbOption": slbNewCfgVirtServiceHttpSlbOption,
       "slbNewCfgVirtServiceHttpSlb2": slbNewCfgVirtServiceHttpSlb2,
       "slbNewCfgVirtServiceHttpHdrName": slbNewCfgVirtServiceHttpHdrName,
       "slbNewCfgVirtServiceUrlHashLen": slbNewCfgVirtServiceUrlHashLen,
       "slbNewCfgVirtServiceDelete": slbNewCfgVirtServiceDelete,
       "slbNewCfgVirtServiceDirect": slbNewCfgVirtServiceDirect,
       "slbNewCfgVirtServiceThash": slbNewCfgVirtServiceThash,
       "slbNewCfgVirtServiceLdapreset": slbNewCfgVirtServiceLdapreset,
       "slbNewCfgVirtServiceLdapslb": slbNewCfgVirtServiceLdapslb,
       "slbNewCfgVirtServiceSip": slbNewCfgVirtServiceSip,
       "slbNewCfgVirtServiceXForwardedFor": slbNewCfgVirtServiceXForwardedFor,
       "slbNewCfgVirtServiceHttpRedir": slbNewCfgVirtServiceHttpRedir,
       "slbNewCfgVirtServicePbindRport": slbNewCfgVirtServicePbindRport,
       "slbNewCfgVirtServiceEgressPip": slbNewCfgVirtServiceEgressPip,
       "slbNewCfgVirtServiceCookieDname": slbNewCfgVirtServiceCookieDname,
       "slbNewCfgVirtServiceWts": slbNewCfgVirtServiceWts,
       "slbNewCfgVirtServiceUhash": slbNewCfgVirtServiceUhash,
       "slbNewCfgVirtServiceTimeOut": slbNewCfgVirtServiceTimeOut,
       "slbNewCfgVirtServiceSdpNat": slbNewCfgVirtServiceSdpNat,
       "slbNewCfgVirtServiceSessionMirror": slbNewCfgVirtServiceSessionMirror,
       "slbNewCfgVirtServiceSoftGrid": slbNewCfgVirtServiceSoftGrid,
       "slbNewCfgVirtServiceConnPooling": slbNewCfgVirtServiceConnPooling,
       "slbNewCfgVirtPersistentTimeOut": slbNewCfgVirtPersistentTimeOut,
       "slbUrlBwmTableMaxSize": slbUrlBwmTableMaxSize,
       "slbCurCfgUrlBwmTable": slbCurCfgUrlBwmTable,
       "slbCurCfgUrlBwmEntry": slbCurCfgUrlBwmEntry,
       "slbCurCfgUrlBwmVirtServIndex": slbCurCfgUrlBwmVirtServIndex,
       "slbCurCfgUrlBwmVirtServiceIndex": slbCurCfgUrlBwmVirtServiceIndex,
       "slbCurCfgUrlBwmUrlId": slbCurCfgUrlBwmUrlId,
       "slbCurCfgUrlBwmContract": slbCurCfgUrlBwmContract,
       "slbNewCfgUrlBwmTable": slbNewCfgUrlBwmTable,
       "slbNewCfgUrlBwmEntry": slbNewCfgUrlBwmEntry,
       "slbNewCfgUrlBwmVirtServIndex": slbNewCfgUrlBwmVirtServIndex,
       "slbNewCfgUrlBwmVirtServiceIndex": slbNewCfgUrlBwmVirtServiceIndex,
       "slbNewCfgUrlBwmUrlId": slbNewCfgUrlBwmUrlId,
       "slbNewCfgUrlBwmContract": slbNewCfgUrlBwmContract,
       "slbNewCfgUrlBwmDelete": slbNewCfgUrlBwmDelete,
       "slbCurCfgContRuleTable": slbCurCfgContRuleTable,
       "slbCurCfgContRuleEntry": slbCurCfgContRuleEntry,
       "slbCurCfgContVirtServIndex": slbCurCfgContVirtServIndex,
       "slbCurCfgContVirtServiceIndex": slbCurCfgContVirtServiceIndex,
       "slbCurCfgContRuleIndex": slbCurCfgContRuleIndex,
       "slbCurCfgContRuleName": slbCurCfgContRuleName,
       "slbCurCfgContRuleContClass": slbCurCfgContRuleContClass,
       "slbCurCfgContRuleAction": slbCurCfgContRuleAction,
       "slbCurCfgContRuleRealGrpNum": slbCurCfgContRuleRealGrpNum,
       "slbCurCfgContRuleGotoRuleNum": slbCurCfgContRuleGotoRuleNum,
       "slbCurCfgContRuleRedirection": slbCurCfgContRuleRedirection,
       "slbCurCfgContRuleState": slbCurCfgContRuleState,
       "slbNewCfgContRuleTable": slbNewCfgContRuleTable,
       "slbNewCfgContRuleEntry": slbNewCfgContRuleEntry,
       "slbNewCfgContVirtServIndex": slbNewCfgContVirtServIndex,
       "slbNewCfgContVirtServiceIndex": slbNewCfgContVirtServiceIndex,
       "slbNewCfgContRuleIndex": slbNewCfgContRuleIndex,
       "slbNewCfgContRuleName": slbNewCfgContRuleName,
       "slbNewCfgContRuleContClass": slbNewCfgContRuleContClass,
       "slbNewCfgContRuleAction": slbNewCfgContRuleAction,
       "slbNewCfgContRuleRealGrpNum": slbNewCfgContRuleRealGrpNum,
       "slbNewCfgContRuleGotoRuleNum": slbNewCfgContRuleGotoRuleNum,
       "slbNewCfgContRuleRedirection": slbNewCfgContRuleRedirection,
       "slbNewCfgContRuleCopy": slbNewCfgContRuleCopy,
       "slbNewCfgContRuleState": slbNewCfgContRuleState,
       "slbNewCfgContRuleDelete": slbNewCfgContRuleDelete,
       "slbCurCfgVirtServicesSecondPartTable": slbCurCfgVirtServicesSecondPartTable,
       "slbCurCfgVirtServicesSecondPartEntry": slbCurCfgVirtServicesSecondPartEntry,
       "slbCurCfgVirtServSecondPartIndex": slbCurCfgVirtServSecondPartIndex,
       "slbCurCfgVirtServiceSecondPartIndex": slbCurCfgVirtServiceSecondPartIndex,
       "slbCurCfgVirtServiceConnmgtStatus": slbCurCfgVirtServiceConnmgtStatus,
       "slbCurCfgVirtServiceConnmgtTimeout": slbCurCfgVirtServiceConnmgtTimeout,
       "slbCurCfgVirtServiceCachepol": slbCurCfgVirtServiceCachepol,
       "slbCurCfgVirtServiceComppol": slbCurCfgVirtServiceComppol,
       "slbCurCfgVirtServiceSSLpol": slbCurCfgVirtServiceSSLpol,
       "slbCurCfgVirtServiceServCert": slbCurCfgVirtServiceServCert,
       "slbCurCfgVirtServiceHttpmodList": slbCurCfgVirtServiceHttpmodList,
       "slbCurCfgVirtServiceCloaksrv": slbCurCfgVirtServiceCloaksrv,
       "slbCurCfgVirtServErrcodeStatus": slbCurCfgVirtServErrcodeStatus,
       "slbCurCfgVirtServErrcodeMatch": slbCurCfgVirtServErrcodeMatch,
       "slbCurCfgVirtServErrcodeHttpRedir": slbCurCfgVirtServErrcodeHttpRedir,
       "slbCurCfgVirtServErrcodeUrl": slbCurCfgVirtServErrcodeUrl,
       "slbCurCfgVirtServErrcode": slbCurCfgVirtServErrcode,
       "slbCurCfgVirtServErrcodeNew": slbCurCfgVirtServErrcodeNew,
       "slbCurCfgVirtServErrcodeReason": slbCurCfgVirtServErrcodeReason,
       "slbCurCfgVirtServUrlchangStatus": slbCurCfgVirtServUrlchangStatus,
       "slbCurCfgVirtServUrlchangHostType": slbCurCfgVirtServUrlchangHostType,
       "slbCurCfgVirtServicesThirdPartTable": slbCurCfgVirtServicesThirdPartTable,
       "slbCurCfgVirtServicesThirdPartEntry": slbCurCfgVirtServicesThirdPartEntry,
       "slbCurCfgVirtServThirdPartIndex": slbCurCfgVirtServThirdPartIndex,
       "slbCurCfgVirtServiceThirdPartIndex": slbCurCfgVirtServiceThirdPartIndex,
       "slbCurCfgVirtServUrlchangHostName": slbCurCfgVirtServUrlchangHostName,
       "slbCurCfgVirtServUrlchangPathType": slbCurCfgVirtServUrlchangPathType,
       "slbCurCfgVirtServUrlchangPathMatch": slbCurCfgVirtServUrlchangPathMatch,
       "slbCurCfgVirtServUrlchangPageName": slbCurCfgVirtServUrlchangPageName,
       "slbCurCfgVirtServUrlchangPageType": slbCurCfgVirtServUrlchangPageType,
       "slbCurCfgVirtServUrlchangActnType": slbCurCfgVirtServUrlchangActnType,
       "slbCurCfgVirtServUrlchangPathInsrt": slbCurCfgVirtServUrlchangPathInsrt,
       "slbCurCfgVirtServUrlchangInsrtPostn": slbCurCfgVirtServUrlchangInsrtPostn,
       "slbCurCfgVirtServicesFourthPartTable": slbCurCfgVirtServicesFourthPartTable,
       "slbCurCfgVirtServicesFourthPartEntry": slbCurCfgVirtServicesFourthPartEntry,
       "slbCurCfgVirtServFourthPartIndex": slbCurCfgVirtServFourthPartIndex,
       "slbCurCfgVirtServiceFourthPartIndex": slbCurCfgVirtServiceFourthPartIndex,
       "slbCurCfgVirtServUrlchangNewPgName": slbCurCfgVirtServUrlchangNewPgName,
       "slbCurCfgVirtServUrlchangNewPgType": slbCurCfgVirtServUrlchangNewPgType,
       "slbCurCfgVirtServPathHideStatus": slbCurCfgVirtServPathHideStatus,
       "slbCurCfgVirtServPathHideHostType": slbCurCfgVirtServPathHideHostType,
       "slbCurCfgVirtServPathHideHostName": slbCurCfgVirtServPathHideHostName,
       "slbCurCfgVirtServPathHidePathType": slbCurCfgVirtServPathHidePathType,
       "slbCurCfgVirtServPathHidePathName": slbCurCfgVirtServPathHidePathName,
       "slbCurCfgVirtServTextrepStatus": slbCurCfgVirtServTextrepStatus,
       "slbCurCfgVirtServTextrepAction": slbCurCfgVirtServTextrepAction,
       "slbCurCfgVirtServicesFifthPartTable": slbCurCfgVirtServicesFifthPartTable,
       "slbCurCfgVirtServicesFifthPartEntry": slbCurCfgVirtServicesFifthPartEntry,
       "slbCurCfgVirtServFifthPartIndex": slbCurCfgVirtServFifthPartIndex,
       "slbCurCfgVirtServiceFifthPartIndex": slbCurCfgVirtServiceFifthPartIndex,
       "slbCurCfgVirtServTextrepMatchText": slbCurCfgVirtServTextrepMatchText,
       "slbCurCfgVirtServTextrepReplacTxt": slbCurCfgVirtServTextrepReplacTxt,
       "slbCurCfgVirtServApplicationType": slbCurCfgVirtServApplicationType,
       "slbCurCfgVirtServiceName": slbCurCfgVirtServiceName,
       "slbCurCfgVirtServiceAction": slbCurCfgVirtServiceAction,
       "slbCurCfgVirtServiceRedirect": slbCurCfgVirtServiceRedirect,
       "slbCurCfgVirtServiceServCertGrpMark": slbCurCfgVirtServiceServCertGrpMark,
       "slbCurCfgVirtServiceDnsType": slbCurCfgVirtServiceDnsType,
       "slbCurCfgVirtServiceClntproxType": slbCurCfgVirtServiceClntproxType,
       "slbCurCfgVirtServiceZerowinSize": slbCurCfgVirtServiceZerowinSize,
       "slbCurCfgVirtServiceCookiePath": slbCurCfgVirtServiceCookiePath,
       "slbCurCfgVirtServiceCookieSecure": slbCurCfgVirtServiceCookieSecure,
       "slbCurCfgVirtServiceNoRtsp": slbCurCfgVirtServiceNoRtsp,
       "slbCurCfgVirtServiceCkRebind": slbCurCfgVirtServiceCkRebind,
       "slbCurCfgVirtServiceParseLimit": slbCurCfgVirtServiceParseLimit,
       "slbCurCfgVirtServiceParseLength": slbCurCfgVirtServiceParseLength,
       "slbCurCfgVirtServiceUriNorm": slbCurCfgVirtServiceUriNorm,
       "slbNewCfgVirtServicesSecondPartTable": slbNewCfgVirtServicesSecondPartTable,
       "slbNewCfgVirtServicesSecondPartEntry": slbNewCfgVirtServicesSecondPartEntry,
       "slbNewCfgVirtServSecondPartIndex": slbNewCfgVirtServSecondPartIndex,
       "slbNewCfgVirtServiceSecondPartIndex": slbNewCfgVirtServiceSecondPartIndex,
       "slbNewCfgVirtServiceConnmgtStatus": slbNewCfgVirtServiceConnmgtStatus,
       "slbNewCfgVirtServiceConnmgtTimeout": slbNewCfgVirtServiceConnmgtTimeout,
       "slbNewCfgVirtServiceCachepol": slbNewCfgVirtServiceCachepol,
       "slbNewCfgVirtServiceComppol": slbNewCfgVirtServiceComppol,
       "slbNewCfgVirtServiceSSLpol": slbNewCfgVirtServiceSSLpol,
       "slbNewCfgVirtServiceServCert": slbNewCfgVirtServiceServCert,
       "slbNewCfgVirtServiceHttpmodList": slbNewCfgVirtServiceHttpmodList,
       "slbNewCfgVirtServiceCloaksrv": slbNewCfgVirtServiceCloaksrv,
       "slbNewCfgVirtServErrcodeStatus": slbNewCfgVirtServErrcodeStatus,
       "slbNewCfgVirtServErrcodeMatch": slbNewCfgVirtServErrcodeMatch,
       "slbNewCfgVirtServErrcodeHttpRedir": slbNewCfgVirtServErrcodeHttpRedir,
       "slbNewCfgVirtServErrcodeUrl": slbNewCfgVirtServErrcodeUrl,
       "slbNewCfgVirtServErrcode": slbNewCfgVirtServErrcode,
       "slbNewCfgVirtServErrcodeNew": slbNewCfgVirtServErrcodeNew,
       "slbNewCfgVirtServErrcodeReason": slbNewCfgVirtServErrcodeReason,
       "slbNewCfgVirtServUrlchangStatus": slbNewCfgVirtServUrlchangStatus,
       "slbNewCfgVirtServUrlchangHostType": slbNewCfgVirtServUrlchangHostType,
       "slbNewCfgVirtServicesThirdPartTable": slbNewCfgVirtServicesThirdPartTable,
       "slbNewCfgVirtServicesThirdPartEntry": slbNewCfgVirtServicesThirdPartEntry,
       "slbNewCfgVirtServThirdPartIndex": slbNewCfgVirtServThirdPartIndex,
       "slbNewCfgVirtServiceThirdPartIndex": slbNewCfgVirtServiceThirdPartIndex,
       "slbNewCfgVirtServUrlchangHostName": slbNewCfgVirtServUrlchangHostName,
       "slbNewCfgVirtServUrlchangPathType": slbNewCfgVirtServUrlchangPathType,
       "slbNewCfgVirtServUrlchangPathMatch": slbNewCfgVirtServUrlchangPathMatch,
       "slbNewCfgVirtServUrlchangPageName": slbNewCfgVirtServUrlchangPageName,
       "slbNewCfgVirtServUrlchangPageType": slbNewCfgVirtServUrlchangPageType,
       "slbNewCfgVirtServUrlchangActnType": slbNewCfgVirtServUrlchangActnType,
       "slbNewCfgVirtServUrlchangPathInsrt": slbNewCfgVirtServUrlchangPathInsrt,
       "slbNewCfgVirtServUrlchangInsrtPostn": slbNewCfgVirtServUrlchangInsrtPostn,
       "slbNewCfgVirtServicesFourthPartTable": slbNewCfgVirtServicesFourthPartTable,
       "slbNewCfgVirtServicesFourthPartEntry": slbNewCfgVirtServicesFourthPartEntry,
       "slbNewCfgVirtServFourthPartIndex": slbNewCfgVirtServFourthPartIndex,
       "slbNewCfgVirtServiceFourthPartIndex": slbNewCfgVirtServiceFourthPartIndex,
       "slbNewCfgVirtServUrlchangNewPgName": slbNewCfgVirtServUrlchangNewPgName,
       "slbNewCfgVirtServUrlchangNewPgType": slbNewCfgVirtServUrlchangNewPgType,
       "slbNewCfgVirtServPathHideStatus": slbNewCfgVirtServPathHideStatus,
       "slbNewCfgVirtServPathHideHostType": slbNewCfgVirtServPathHideHostType,
       "slbNewCfgVirtServPathHideHostName": slbNewCfgVirtServPathHideHostName,
       "slbNewCfgVirtServPathHidePathType": slbNewCfgVirtServPathHidePathType,
       "slbNewCfgVirtServPathHidePathName": slbNewCfgVirtServPathHidePathName,
       "slbNewCfgVirtServTextrepStatus": slbNewCfgVirtServTextrepStatus,
       "slbNewCfgVirtServTextrepAction": slbNewCfgVirtServTextrepAction,
       "slbNewCfgVirtServicesFifthPartTable": slbNewCfgVirtServicesFifthPartTable,
       "slbNewCfgVirtServicesFifthPartEntry": slbNewCfgVirtServicesFifthPartEntry,
       "slbNewCfgVirtServFifthPartIndex": slbNewCfgVirtServFifthPartIndex,
       "slbNewCfgVirtServiceFifthPartIndex": slbNewCfgVirtServiceFifthPartIndex,
       "slbNewCfgVirtServTextrepMatchText": slbNewCfgVirtServTextrepMatchText,
       "slbNewCfgVirtServTextrepReplacTxt": slbNewCfgVirtServTextrepReplacTxt,
       "slbNewCfgVirtServApplicationType": slbNewCfgVirtServApplicationType,
       "slbNewCfgVirtServiceName": slbNewCfgVirtServiceName,
       "slbNewCfgVirtServiceAction": slbNewCfgVirtServiceAction,
       "slbNewCfgVirtServiceRedirect": slbNewCfgVirtServiceRedirect,
       "slbNewCfgVirtServiceServCertGrpMark": slbNewCfgVirtServiceServCertGrpMark,
       "slbNewCfgVirtServiceDnsType": slbNewCfgVirtServiceDnsType,
       "slbNewCfgVirtServiceClntproxType": slbNewCfgVirtServiceClntproxType,
       "slbNewCfgVirtServiceZerowinSize": slbNewCfgVirtServiceZerowinSize,
       "slbNewCfgVirtServiceCookiePath": slbNewCfgVirtServiceCookiePath,
       "slbNewCfgVirtServiceCookieSecure": slbNewCfgVirtServiceCookieSecure,
       "slbNewCfgVirtServiceNoRtsp": slbNewCfgVirtServiceNoRtsp,
       "slbNewCfgVirtServiceCkRebind": slbNewCfgVirtServiceCkRebind,
       "slbNewCfgVirtServiceParseLimit": slbNewCfgVirtServiceParseLimit,
       "slbNewCfgVirtServiceParseLength": slbNewCfgVirtServiceParseLength,
       "slbNewCfgVirtServiceUriNorm": slbNewCfgVirtServiceUriNorm,
       "portCfg": portCfg,
       "slbPortTableMaxSize": slbPortTableMaxSize,
       "slbCurCfgPortTable": slbCurCfgPortTable,
       "slbCurCfgPortEntry": slbCurCfgPortEntry,
       "slbCurCfgPortIndex": slbCurCfgPortIndex,
       "slbCurCfgPortSlbState": slbCurCfgPortSlbState,
       "slbCurCfgPortSlbHotStandby": slbCurCfgPortSlbHotStandby,
       "slbCurCfgPortSlbInterSwitch": slbCurCfgPortSlbInterSwitch,
       "slbCurCfgPortSlbPipState": slbCurCfgPortSlbPipState,
       "slbCurCfgPortSlbRtsState": slbCurCfgPortSlbRtsState,
       "slbCurCfgPortSlbIdslbState": slbCurCfgPortSlbIdslbState,
       "slbCurCfgPortSlbFilter": slbCurCfgPortSlbFilter,
       "slbCurCfgPortSlbServState": slbCurCfgPortSlbServState,
       "slbCurCfgPortSlbClntState": slbCurCfgPortSlbClntState,
       "slbCurCfgPortSlbL3Filter": slbCurCfgPortSlbL3Filter,
       "slbCurCfgPortSlbFilterBmap": slbCurCfgPortSlbFilterBmap,
       "slbCurCfgPortInterSwitchVlan": slbCurCfgPortInterSwitchVlan,
       "slbCurCfgPortVlanBmap": slbCurCfgPortVlanBmap,
       "slbNewCfgPortTable": slbNewCfgPortTable,
       "slbNewCfgPortEntry": slbNewCfgPortEntry,
       "slbNewCfgPortIndex": slbNewCfgPortIndex,
       "slbNewCfgPortSlbState": slbNewCfgPortSlbState,
       "slbNewCfgPortSlbHotStandby": slbNewCfgPortSlbHotStandby,
       "slbNewCfgPortSlbInterSwitch": slbNewCfgPortSlbInterSwitch,
       "slbNewCfgPortSlbPipState": slbNewCfgPortSlbPipState,
       "slbNewCfgPortSlbRtsState": slbNewCfgPortSlbRtsState,
       "slbNewCfgPortDelete": slbNewCfgPortDelete,
       "slbNewCfgPortSlbIdslbState": slbNewCfgPortSlbIdslbState,
       "slbNewCfgPortSlbFilter": slbNewCfgPortSlbFilter,
       "slbNewCfgPortSlbAddFilter": slbNewCfgPortSlbAddFilter,
       "slbNewCfgPortSlbRemFilter": slbNewCfgPortSlbRemFilter,
       "slbNewCfgPortSlbServState": slbNewCfgPortSlbServState,
       "slbNewCfgPortSlbClntState": slbNewCfgPortSlbClntState,
       "slbNewCfgPortSlbL3Filter": slbNewCfgPortSlbL3Filter,
       "slbNewCfgPortSlbFilterBmap": slbNewCfgPortSlbFilterBmap,
       "slbNewCfgPortInterSwitchVlan": slbNewCfgPortInterSwitchVlan,
       "slbNewCfgPortVlanBmap": slbNewCfgPortVlanBmap,
       "syncCfg": syncCfg,
       "syncGeneralCfg": syncGeneralCfg,
       "slbCurCfgSyncFilt": slbCurCfgSyncFilt,
       "slbNewCfgSyncFilt": slbNewCfgSyncFilt,
       "slbCurCfgSyncPort": slbCurCfgSyncPort,
       "slbNewCfgSyncPort": slbNewCfgSyncPort,
       "slbCurCfgSyncVrrp": slbCurCfgSyncVrrp,
       "slbNewCfgSyncVrrp": slbNewCfgSyncVrrp,
       "slbCurCfgSyncPip": slbCurCfgSyncPip,
       "slbNewCfgSyncPip": slbNewCfgSyncPip,
       "slbCurCfgSyncSfo": slbCurCfgSyncSfo,
       "slbNewCfgSyncSfo": slbNewCfgSyncSfo,
       "slbCurCfgSyncSfoUpdatePeriod": slbCurCfgSyncSfoUpdatePeriod,
       "slbNewCfgSyncSfoUpdatePeriod": slbNewCfgSyncSfoUpdatePeriod,
       "slbCurCfgSyncBwm": slbCurCfgSyncBwm,
       "slbNewCfgSyncBwm": slbNewCfgSyncBwm,
       "slbCurCfgSyncPeerPip": slbCurCfgSyncPeerPip,
       "slbNewCfgSyncPeerPip": slbNewCfgSyncPeerPip,
       "slbCurCfgSyncCerts": slbCurCfgSyncCerts,
       "slbNewCfgSyncCerts": slbNewCfgSyncCerts,
       "slbCurCfgSyncCertsPassPhrase": slbCurCfgSyncCertsPassPhrase,
       "slbNewCfgSyncCertsPassPhrase": slbNewCfgSyncCertsPassPhrase,
       "slbNewCfgSyncCertsConfPassPhrase": slbNewCfgSyncCertsConfPassPhrase,
       "slbCurCfgSyncRoute": slbCurCfgSyncRoute,
       "slbNewCfgSyncRoute": slbNewCfgSyncRoute,
       "slbPeerTableMaxSize": slbPeerTableMaxSize,
       "slbCurCfgPeerTable": slbCurCfgPeerTable,
       "slbCurCfgPeerEntry": slbCurCfgPeerEntry,
       "slbCurCfgPeerIndex": slbCurCfgPeerIndex,
       "slbCurCfgPeerIpAddr": slbCurCfgPeerIpAddr,
       "slbCurCfgPeerState": slbCurCfgPeerState,
       "slbCurCfgPeerIpv6Addr": slbCurCfgPeerIpv6Addr,
       "slbCurCfgPeerIpVersion": slbCurCfgPeerIpVersion,
       "slbNewCfgPeerTable": slbNewCfgPeerTable,
       "slbNewCfgPeerEntry": slbNewCfgPeerEntry,
       "slbNewCfgPeerIndex": slbNewCfgPeerIndex,
       "slbNewCfgPeerIpAddr": slbNewCfgPeerIpAddr,
       "slbNewCfgPeerState": slbNewCfgPeerState,
       "slbNewCfgPeerDelete": slbNewCfgPeerDelete,
       "slbNewCfgPeerIpv6Addr": slbNewCfgPeerIpv6Addr,
       "slbNewCfgPeerIpVersion": slbNewCfgPeerIpVersion,
       "wapCfg": wapCfg,
       "slbCurCfgWapTpcp": slbCurCfgWapTpcp,
       "slbNewCfgWapTpcp": slbNewCfgWapTpcp,
       "slbCurCfgWapDebug": slbCurCfgWapDebug,
       "slbNewCfgWapDebug": slbNewCfgWapDebug,
       "waphcCfg": waphcCfg,
       "slbCurCfgWaphcWSPPort": slbCurCfgWaphcWSPPort,
       "slbNewCfgWaphcWSPPort": slbNewCfgWaphcWSPPort,
       "slbCurCfgWaphcOffset": slbCurCfgWaphcOffset,
       "slbNewCfgWaphcOffset": slbNewCfgWaphcOffset,
       "slbCurCfgWaphcSndContent": slbCurCfgWaphcSndContent,
       "slbNewCfgWaphcSndContent": slbNewCfgWaphcSndContent,
       "slbCurCfgWaphcRcvContent": slbCurCfgWaphcRcvContent,
       "slbNewCfgWaphcRcvContent": slbNewCfgWaphcRcvContent,
       "slbCurCfgWaphcWTLSPort": slbCurCfgWaphcWTLSPort,
       "slbNewCfgWaphcWTLSPort": slbNewCfgWaphcWTLSPort,
       "slbCurCfgWaphcWTPSndContent": slbCurCfgWaphcWTPSndContent,
       "slbNewCfgWaphcWTPSndContent": slbNewCfgWaphcWTPSndContent,
       "slbCurCfgWaphcWTPRcvContent": slbCurCfgWaphcWTPRcvContent,
       "slbNewCfgWaphcWTPRcvContent": slbNewCfgWaphcWTPRcvContent,
       "slbCurCfgWaphcWTPConnContent": slbCurCfgWaphcWTPConnContent,
       "slbNewCfgWaphcWTPConnContent": slbNewCfgWaphcWTPConnContent,
       "slbCurCfgWaphcWTPPort": slbCurCfgWaphcWTPPort,
       "slbNewCfgWaphcWTPPort": slbNewCfgWaphcWTPPort,
       "slbCurCfgWaphcWTLSWSPPort": slbCurCfgWaphcWTLSWSPPort,
       "slbNewCfgWaphcWTLSWSPPort": slbNewCfgWaphcWTLSWSPPort,
       "slbCurCfgWaphcWTPOffset": slbCurCfgWaphcWTPOffset,
       "slbNewCfgWaphcWTPOffset": slbNewCfgWaphcWTPOffset,
       "slbCurCfgWaphcCouple": slbCurCfgWaphcCouple,
       "slbNewCfgWaphcCouple": slbNewCfgWaphcCouple,
       "slbCurCfgWaphcConnPDU": slbCurCfgWaphcConnPDU,
       "slbNewCfgWaphcConnPDU": slbNewCfgWaphcConnPDU,
       "slbCurCfgWaphcSndPDU": slbCurCfgWaphcSndPDU,
       "slbNewCfgWaphcSndPDU": slbNewCfgWaphcSndPDU,
       "slbCurCfgWaphcRcvPDU": slbCurCfgWaphcRcvPDU,
       "slbNewCfgWaphcRcvPDU": slbNewCfgWaphcRcvPDU,
       "synAttackDetCfg": synAttackDetCfg,
       "synAttackCurCfgInterval": synAttackCurCfgInterval,
       "synAttackNewCfgInterval": synAttackNewCfgInterval,
       "synAttackCurCfgThreshhold": synAttackCurCfgThreshhold,
       "synAttackNewCfgThreshhold": synAttackNewCfgThreshhold,
       "synAttackCurCfgResponseInterval": synAttackCurCfgResponseInterval,
       "synAttackNewCfgResponseInterval": synAttackNewCfgResponseInterval,
       "synAttackCurCfgOnOff": synAttackCurCfgOnOff,
       "synAttackNewCfgOnOff": synAttackNewCfgOnOff,
       "hcsCfg": hcsCfg,
       "hcsTableMaxSize": hcsTableMaxSize,
       "hcsCurCfgTable": hcsCurCfgTable,
       "hcsCurCfgTableEntry": hcsCurCfgTableEntry,
       "hcsCurCfgScriptIndex": hcsCurCfgScriptIndex,
       "hcsCurCfgScriptString": hcsCurCfgScriptString,
       "hcsNewCfgTable": hcsNewCfgTable,
       "hcsNewCfgTableEntry": hcsNewCfgTableEntry,
       "hcsNewCfgScriptIndex": hcsNewCfgScriptIndex,
       "hcsNewCfgScriptString": hcsNewCfgScriptString,
       "hcsNewCfgAddSendCmd": hcsNewCfgAddSendCmd,
       "hcsNewCfgAddExpectCmd": hcsNewCfgAddExpectCmd,
       "hcsNewCfgAddCloseCmd": hcsNewCfgAddCloseCmd,
       "hcsNewCfgRemLastCmd": hcsNewCfgRemLastCmd,
       "hcsNewCfgDeleteScript": hcsNewCfgDeleteScript,
       "hcsNewCfgAddOffsetCmd": hcsNewCfgAddOffsetCmd,
       "hcsNewCfgAddWaitCmd": hcsNewCfgAddWaitCmd,
       "hcsNewCfgAddOpenProtCmd": hcsNewCfgAddOpenProtCmd,
       "hcsNewCfgAddNsendCmd": hcsNewCfgAddNsendCmd,
       "hcsNewCfgAddNexpectCmd": hcsNewCfgAddNexpectCmd,
       "hcsNewCfgAddDepthCmd": hcsNewCfgAddDepthCmd,
       "hcsNewCfgAddLongBsendCmd": hcsNewCfgAddLongBsendCmd,
       "hcsNewCfgAddLongBexpectCmd": hcsNewCfgAddLongBexpectCmd,
       "hcsNewCfgAddLongSendCmd": hcsNewCfgAddLongSendCmd,
       "hcsNewCfgAddLongExpectCmd": hcsNewCfgAddLongExpectCmd,
       "hcsNewCfgAddLongNsendCmd": hcsNewCfgAddLongNsendCmd,
       "hcsNewCfgAddLongNexpectCmd": hcsNewCfgAddLongNexpectCmd,
       "snmphcCfg": snmphcCfg,
       "snmphcTableMaxSize": snmphcTableMaxSize,
       "snmphcCurCfgTable": snmphcCurCfgTable,
       "snmphcCurCfgTableEntry": snmphcCurCfgTableEntry,
       "snmphcCurCfgIndex": snmphcCurCfgIndex,
       "snmphcCurCfgOid": snmphcCurCfgOid,
       "snmphcCurCfgCommString": snmphcCurCfgCommString,
       "snmphcCurCfgRcvContent": snmphcCurCfgRcvContent,
       "snmphcCurCfgInvert": snmphcCurCfgInvert,
       "snmphcCurCfgUseWeight": snmphcCurCfgUseWeight,
       "snmphcNewCfgTable": snmphcNewCfgTable,
       "snmphcNewCfgTableEntry": snmphcNewCfgTableEntry,
       "snmphcNewCfgIndex": snmphcNewCfgIndex,
       "snmphcNewCfgOid": snmphcNewCfgOid,
       "snmphcNewCfgCommString": snmphcNewCfgCommString,
       "snmphcNewCfgRcvContent": snmphcNewCfgRcvContent,
       "snmphcNewCfgInvert": snmphcNewCfgInvert,
       "snmphcNewCfgDeleteHc": snmphcNewCfgDeleteHc,
       "snmphcNewCfgUseWeight": snmphcNewCfgUseWeight,
       "pipTblCfg": pipTblCfg,
       "pipTableMaxSize": pipTableMaxSize,
       "pipCurCfgBaseType": pipCurCfgBaseType,
       "pipCurCfgTable": pipCurCfgTable,
       "pipCurCfgTableEntry": pipCurCfgTableEntry,
       "pipCurCfgPip": pipCurCfgPip,
       "pipCurCfgPortMap": pipCurCfgPortMap,
       "pipCurCfgVlanMap": pipCurCfgVlanMap,
       "pipNewCfgBaseType": pipNewCfgBaseType,
       "pipNewCfgTable": pipNewCfgTable,
       "pipNewCfgTableEntry": pipNewCfgTableEntry,
       "pipNewCfgPip": pipNewCfgPip,
       "pipNewCfgPortMap": pipNewCfgPortMap,
       "pipNewCfgVlanMap": pipNewCfgVlanMap,
       "pipNewCfgDelete": pipNewCfgDelete,
       "pipNewCfgAddPortVlan": pipNewCfgAddPortVlan,
       "pipNewCfgRemovePortVlan": pipNewCfgRemovePortVlan,
       "pipNewCfgAddPort": pipNewCfgAddPort,
       "pipNewCfgAddVlan": pipNewCfgAddVlan,
       "pipNewCfgRemovePort": pipNewCfgRemovePort,
       "pipNewCfgRemoveVlan": pipNewCfgRemoveVlan,
       "pip6CurCfgTable": pip6CurCfgTable,
       "pip6CurCfgTableEntry": pip6CurCfgTableEntry,
       "pip6CurCfgPip": pip6CurCfgPip,
       "pip6CurCfgPortMap": pip6CurCfgPortMap,
       "pip6CurCfgVlanMap": pip6CurCfgVlanMap,
       "pip6NewCfgTable": pip6NewCfgTable,
       "pip6NewCfgTableEntry": pip6NewCfgTableEntry,
       "pip6NewCfgPip": pip6NewCfgPip,
       "pip6NewCfgPortMap": pip6NewCfgPortMap,
       "pip6NewCfgVlanMap": pip6NewCfgVlanMap,
       "pip6NewCfgDelete": pip6NewCfgDelete,
       "pip6NewCfgAddPortVlan": pip6NewCfgAddPortVlan,
       "pip6NewCfgRemovePortVlan": pip6NewCfgRemovePortVlan,
       "pip6NewCfgAddPort": pip6NewCfgAddPort,
       "pip6NewCfgAddVlan": pip6NewCfgAddVlan,
       "pip6NewCfgRemovePort": pip6NewCfgRemovePort,
       "pip6NewCfgRemoveVlan": pip6NewCfgRemoveVlan,
       "linklbCfg": linklbCfg,
       "slbCurCfgLinklbState": slbCurCfgLinklbState,
       "slbNewCfgLinklbState": slbNewCfgLinklbState,
       "slbCurCfgLinklbRealGroup": slbCurCfgLinklbRealGroup,
       "slbNewCfgLinklbRealGroup": slbNewCfgLinklbRealGroup,
       "slbLinklbDrecord": slbLinklbDrecord,
       "slbDrecordTableMaxSize": slbDrecordTableMaxSize,
       "slbCurCfgDrecordTable": slbCurCfgDrecordTable,
       "slbCurCfgDrecordEntry": slbCurCfgDrecordEntry,
       "slbCurCfgDrecordIndex": slbCurCfgDrecordIndex,
       "slbCurCfgDomainRecordState": slbCurCfgDomainRecordState,
       "slbCurCfgDomainRecordName": slbCurCfgDomainRecordName,
       "slbNewCfgDrecordTable": slbNewCfgDrecordTable,
       "slbNewCfgDrecordEntry": slbNewCfgDrecordEntry,
       "slbNewCfgDrecordIndex": slbNewCfgDrecordIndex,
       "slbNewCfgDomainRecordState": slbNewCfgDomainRecordState,
       "slbNewCfgDomainRecordName": slbNewCfgDomainRecordName,
       "slbNewCfgDrecordDelete": slbNewCfgDrecordDelete,
       "slbDrecordVirtRealMappingTableMaxSize": slbDrecordVirtRealMappingTableMaxSize,
       "slbCurCfgDrecordVirtRealMappingTable": slbCurCfgDrecordVirtRealMappingTable,
       "slbCurCfgDrecordVirtRealMappingEntry": slbCurCfgDrecordVirtRealMappingEntry,
       "slbCurCfgDomainRecordIndex": slbCurCfgDomainRecordIndex,
       "slbCurCfgEntryIndex": slbCurCfgEntryIndex,
       "slbCurCfgDrecordVirtServer": slbCurCfgDrecordVirtServer,
       "slbCurCfgDrecordRealServer": slbCurCfgDrecordRealServer,
       "slbCurCfgDrecordEntryState": slbCurCfgDrecordEntryState,
       "slbNewCfgDrecordVirtRealMappingTable": slbNewCfgDrecordVirtRealMappingTable,
       "slbNewCfgDrecordVirtRealMappingEntry": slbNewCfgDrecordVirtRealMappingEntry,
       "slbNewCfgDomainRecordIndex": slbNewCfgDomainRecordIndex,
       "slbNewCfgEntryIndex": slbNewCfgEntryIndex,
       "slbNewCfgDrecordVirtServer": slbNewCfgDrecordVirtServer,
       "slbNewCfgDrecordRealServer": slbNewCfgDrecordRealServer,
       "slbNewCfgDrecordEntryState": slbNewCfgDrecordEntryState,
       "slbNewCfgDrecordEntryDelete": slbNewCfgDrecordEntryDelete,
       "slbCurCfgLinklbTTL": slbCurCfgLinklbTTL,
       "slbNewCfgLinklbTTL": slbNewCfgLinklbTTL,
       "smtportCfg": smtportCfg,
       "slbSmtportTableMaxSize": slbSmtportTableMaxSize,
       "slbCurCfgSmtportTable": slbCurCfgSmtportTable,
       "slbCurCfgSmtportEntry": slbCurCfgSmtportEntry,
       "slbCurCfgSmtportIndex": slbCurCfgSmtportIndex,
       "slbCurCfgSmtportNum": slbCurCfgSmtportNum,
       "slbNewCfgSmtportTable": slbNewCfgSmtportTable,
       "slbNewCfgSmtportEntry": slbNewCfgSmtportEntry,
       "slbNewCfgSmtportIndex": slbNewCfgSmtportIndex,
       "slbNewCfgSmtportNum": slbNewCfgSmtportNum,
       "slbNewCfgSmtportDelete": slbNewCfgSmtportDelete,
       "slbSmtportTableAvaibleIndex": slbSmtportTableAvaibleIndex,
       "acclCfg": acclCfg,
       "caching": caching,
       "slbCurAcclCfgCachememcache": slbCurAcclCfgCachememcache,
       "slbNewAcclCfgCachememcache": slbNewAcclCfgCachememcache,
       "slbCurAcclCfgCacheOnOff": slbCurAcclCfgCacheOnOff,
       "slbNewAcclCfgCacheOnOff": slbNewAcclCfgCacheOnOff,
       "slbCurAcclCfgCachePolTable": slbCurAcclCfgCachePolTable,
       "slbCurAcclCfgCachePolEntry": slbCurAcclCfgCachePolEntry,
       "slbCurAcclCfgCachePolNameIdIndex": slbCurAcclCfgCachePolNameIdIndex,
       "slbCurAcclCfgCachePolName": slbCurAcclCfgCachePolName,
       "slbCurAcclCfgCachePolExpireTime": slbCurAcclCfgCachePolExpireTime,
       "slbCurAcclCfgCachePolMinSize": slbCurAcclCfgCachePolMinSize,
       "slbCurAcclCfgCachePolMaxSize": slbCurAcclCfgCachePolMaxSize,
       "slbCurAcclCfgCachePolURLList": slbCurAcclCfgCachePolURLList,
       "slbCurAcclCfgCachePolStore": slbCurAcclCfgCachePolStore,
       "slbCurAcclCfgCachePolServe": slbCurAcclCfgCachePolServe,
       "slbCurAcclCfgCachePolQuery": slbCurAcclCfgCachePolQuery,
       "slbCurAcclCfgCachePolBrowser": slbCurAcclCfgCachePolBrowser,
       "slbCurAcclCfgCachePolAdminStatus": slbCurAcclCfgCachePolAdminStatus,
       "slbNewAcclCfgCachePolTable": slbNewAcclCfgCachePolTable,
       "slbNewAcclCfgCachePolEntry": slbNewAcclCfgCachePolEntry,
       "slbNewAcclCfgCachePolNameIdIndex": slbNewAcclCfgCachePolNameIdIndex,
       "slbNewAcclCfgCachePolName": slbNewAcclCfgCachePolName,
       "slbNewAcclCfgCachePolExpireTime": slbNewAcclCfgCachePolExpireTime,
       "slbNewAcclCfgCachePolMinSize": slbNewAcclCfgCachePolMinSize,
       "slbNewAcclCfgCachePolMaxSize": slbNewAcclCfgCachePolMaxSize,
       "slbNewAcclCfgCachePolURLList": slbNewAcclCfgCachePolURLList,
       "slbNewAcclCfgCachePolStore": slbNewAcclCfgCachePolStore,
       "slbNewAcclCfgCachePolServe": slbNewAcclCfgCachePolServe,
       "slbNewAcclCfgCachePolQuery": slbNewAcclCfgCachePolQuery,
       "slbNewAcclCfgCachePolBrowser": slbNewAcclCfgCachePolBrowser,
       "slbNewAcclCfgCachePolAdminStatus": slbNewAcclCfgCachePolAdminStatus,
       "slbNewAcclCfgCachePolDelete": slbNewAcclCfgCachePolDelete,
       "slbCurAcclCfgCacheUrlListTable": slbCurAcclCfgCacheUrlListTable,
       "slbCurAcclCfgCacheUrlListEntry": slbCurAcclCfgCacheUrlListEntry,
       "slbCurAcclCfgCacheUrlListIdIndex": slbCurAcclCfgCacheUrlListIdIndex,
       "slbCurAcclCfgCacheUrlListName": slbCurAcclCfgCacheUrlListName,
       "slbCurAcclCfgCacheUrlListAdminStatus": slbCurAcclCfgCacheUrlListAdminStatus,
       "slbNewAcclCfgCacheUrlListTable": slbNewAcclCfgCacheUrlListTable,
       "slbNewAcclCfgCacheUrlListEntry": slbNewAcclCfgCacheUrlListEntry,
       "slbNewAcclCfgCacheUrlListIdIndex": slbNewAcclCfgCacheUrlListIdIndex,
       "slbNewAcclCfgCacheUrlListName": slbNewAcclCfgCacheUrlListName,
       "slbNewAcclCfgCacheUrlListAdminStatus": slbNewAcclCfgCacheUrlListAdminStatus,
       "slbNewAcclCfgCacheUrlListDel": slbNewAcclCfgCacheUrlListDel,
       "slbNewAcclCfgCacheUrlListCopy": slbNewAcclCfgCacheUrlListCopy,
       "slbCurAcclCfgCacheUrlRuleTable": slbCurAcclCfgCacheUrlRuleTable,
       "slbCurAcclCfgCacheUrlRuleEntry": slbCurAcclCfgCacheUrlRuleEntry,
       "slbCurAcclCfgCacheUrlRuleListIdIndex": slbCurAcclCfgCacheUrlRuleListIdIndex,
       "slbCurAcclCfgCacheUrlRuleIndex": slbCurAcclCfgCacheUrlRuleIndex,
       "slbCurAcclCfgCacheUrlRuleName": slbCurAcclCfgCacheUrlRuleName,
       "slbCurAcclCfgCacheUrlRuleDomainM": slbCurAcclCfgCacheUrlRuleDomainM,
       "slbCurAcclCfgCacheUrlRuleDomain": slbCurAcclCfgCacheUrlRuleDomain,
       "slbCurAcclCfgCacheUrlRuleURLm": slbCurAcclCfgCacheUrlRuleURLm,
       "slbCurAcclCfgCacheUrlRuleURL": slbCurAcclCfgCacheUrlRuleURL,
       "slbCurAcclCfgCacheUrlRuleExpire": slbCurAcclCfgCacheUrlRuleExpire,
       "slbCurAcclCfgCacheUrlRuleCache": slbCurAcclCfgCacheUrlRuleCache,
       "slbCurAcclCfgCacheUrlRuleAdminStatus": slbCurAcclCfgCacheUrlRuleAdminStatus,
       "slbNewAcclCfgCacheUrlRuleTable": slbNewAcclCfgCacheUrlRuleTable,
       "slbNewAcclCfgCacheUrlRuleEntry": slbNewAcclCfgCacheUrlRuleEntry,
       "slbNewAcclCfgCacheUrlRuleListIdIndex": slbNewAcclCfgCacheUrlRuleListIdIndex,
       "slbNewAcclCfgCacheUrlRuleIndex": slbNewAcclCfgCacheUrlRuleIndex,
       "slbNewAcclCfgCacheUrlRuleName": slbNewAcclCfgCacheUrlRuleName,
       "slbNewAcclCfgCacheUrlRuleDomainM": slbNewAcclCfgCacheUrlRuleDomainM,
       "slbNewAcclCfgCacheUrlRuleDomain": slbNewAcclCfgCacheUrlRuleDomain,
       "slbNewAcclCfgCacheUrlRuleURLm": slbNewAcclCfgCacheUrlRuleURLm,
       "slbNewAcclCfgCacheUrlRuleURL": slbNewAcclCfgCacheUrlRuleURL,
       "slbNewAcclCfgCacheUrlRuleExpire": slbNewAcclCfgCacheUrlRuleExpire,
       "slbNewAcclCfgCacheUrlRuleCache": slbNewAcclCfgCacheUrlRuleCache,
       "slbNewAcclCfgCacheUrlRuleAdminStatus": slbNewAcclCfgCacheUrlRuleAdminStatus,
       "slbNewAcclCfgCacheUrlRuleDelete": slbNewAcclCfgCacheUrlRuleDelete,
       "slbNewAcclCfgCacheUrlRuleCopy": slbNewAcclCfgCacheUrlRuleCopy,
       "compression": compression,
       "slbCurAcclCfgCompOnOff": slbCurAcclCfgCompOnOff,
       "slbNewAcclCfgCompOnOff": slbNewAcclCfgCompOnOff,
       "slbCurAcclCfgCompPolTable": slbCurAcclCfgCompPolTable,
       "slbCurAcclCfgCompPolEntry": slbCurAcclCfgCompPolEntry,
       "slbCurAcclCfgCompPolNameIdIndex": slbCurAcclCfgCompPolNameIdIndex,
       "slbCurAcclCfgCompPolName": slbCurAcclCfgCompPolName,
       "slbCurAcclCfgCompPolAlgrthm": slbCurAcclCfgCompPolAlgrthm,
       "slbCurAcclCfgCompPolComplv1": slbCurAcclCfgCompPolComplv1,
       "slbCurAcclCfgCompPolMinSize": slbCurAcclCfgCompPolMinSize,
       "slbCurAcclCfgCompPolMaxSize": slbCurAcclCfgCompPolMaxSize,
       "slbCurAcclCfgCompPolURLList": slbCurAcclCfgCompPolURLList,
       "slbCurAcclCfgCompPolBrwsList": slbCurAcclCfgCompPolBrwsList,
       "slbCurAcclCfgCompPolPreDefBrwsRuleList": slbCurAcclCfgCompPolPreDefBrwsRuleList,
       "slbCurAcclCfgCompPolCompsrv": slbCurAcclCfgCompPolCompsrv,
       "slbCurAcclCfgCompPolAdminStatus": slbCurAcclCfgCompPolAdminStatus,
       "slbNewAcclCfgCompPolTable": slbNewAcclCfgCompPolTable,
       "slbNewAcclCfgCompPolEntry": slbNewAcclCfgCompPolEntry,
       "slbNewAcclCfgCompPolNameIdIndex": slbNewAcclCfgCompPolNameIdIndex,
       "slbNewAcclCfgCompPolName": slbNewAcclCfgCompPolName,
       "slbNewAcclCfgCompPolAlgrthm": slbNewAcclCfgCompPolAlgrthm,
       "slbNewAcclCfgCompPolComplv1": slbNewAcclCfgCompPolComplv1,
       "slbNewAcclCfgCompPolMinSize": slbNewAcclCfgCompPolMinSize,
       "slbNewAcclCfgCompPolMaxSize": slbNewAcclCfgCompPolMaxSize,
       "slbNewAcclCfgCompPolURLList": slbNewAcclCfgCompPolURLList,
       "slbNewAcclCfgCompPolBrwsList": slbNewAcclCfgCompPolBrwsList,
       "slbNewAcclCfgCompPolPreDefBrwsRuleList": slbNewAcclCfgCompPolPreDefBrwsRuleList,
       "slbNewAcclCfgCompPolCompsrv": slbNewAcclCfgCompPolCompsrv,
       "slbNewAcclCfgCompPolAdminStatus": slbNewAcclCfgCompPolAdminStatus,
       "slbNewAcclCfgCompPolDelete": slbNewAcclCfgCompPolDelete,
       "slbCurAcclCfgCompUrlListTable": slbCurAcclCfgCompUrlListTable,
       "slbCurAcclCfgCompUrlListEntry": slbCurAcclCfgCompUrlListEntry,
       "slbCurAcclCfgCompUrlListIdIndex": slbCurAcclCfgCompUrlListIdIndex,
       "slbCurAcclCfgCompUrlListName": slbCurAcclCfgCompUrlListName,
       "slbCurAcclCfgCompUrlListAdminStatus": slbCurAcclCfgCompUrlListAdminStatus,
       "slbNewAcclCfgCompUrlListTable": slbNewAcclCfgCompUrlListTable,
       "slbNewAcclCfgCompUrlListEntry": slbNewAcclCfgCompUrlListEntry,
       "slbNewAcclCfgCompUrlListIdIndex": slbNewAcclCfgCompUrlListIdIndex,
       "slbNewAcclCfgCompUrlListName": slbNewAcclCfgCompUrlListName,
       "slbNewAcclCfgCompUrlListAdminStatus": slbNewAcclCfgCompUrlListAdminStatus,
       "slbNewAcclCfgCompUrlListDel": slbNewAcclCfgCompUrlListDel,
       "slbNewAcclCfgCompUrlListCopy": slbNewAcclCfgCompUrlListCopy,
       "slbCurAcclCfgCompUrlRuleTable": slbCurAcclCfgCompUrlRuleTable,
       "slbCurAcclCfgCompUrlRuleEntry": slbCurAcclCfgCompUrlRuleEntry,
       "slbCurAcclCfgCompUrlRuleListIdIndex": slbCurAcclCfgCompUrlRuleListIdIndex,
       "slbCurAcclCfgCompUrlRuleIndex": slbCurAcclCfgCompUrlRuleIndex,
       "slbCurAcclCfgCompUrlRuleName": slbCurAcclCfgCompUrlRuleName,
       "slbCurAcclCfgCompUrlRuleDomainM": slbCurAcclCfgCompUrlRuleDomainM,
       "slbCurAcclCfgCompUrlRuleDomain": slbCurAcclCfgCompUrlRuleDomain,
       "slbCurAcclCfgCompUrlRuleURLm": slbCurAcclCfgCompUrlRuleURLm,
       "slbCurAcclCfgCompUrlRuleURL": slbCurAcclCfgCompUrlRuleURL,
       "slbCurAcclCfgCompUrlRuleCompress": slbCurAcclCfgCompUrlRuleCompress,
       "slbCurAcclCfgCompUrlRuleAdminStatus": slbCurAcclCfgCompUrlRuleAdminStatus,
       "slbNewAcclCfgCompUrlRuleTable": slbNewAcclCfgCompUrlRuleTable,
       "slbNewAcclCfgCompUrlRuleEntry": slbNewAcclCfgCompUrlRuleEntry,
       "slbNewAcclCfgCompUrlRuleListIdIndex": slbNewAcclCfgCompUrlRuleListIdIndex,
       "slbNewAcclCfgCompUrlRuleIndex": slbNewAcclCfgCompUrlRuleIndex,
       "slbNewAcclCfgCompUrlRuleName": slbNewAcclCfgCompUrlRuleName,
       "slbNewAcclCfgCompUrlRuleDomainM": slbNewAcclCfgCompUrlRuleDomainM,
       "slbNewAcclCfgCompUrlRuleDomain": slbNewAcclCfgCompUrlRuleDomain,
       "slbNewAcclCfgCompUrlRuleURLm": slbNewAcclCfgCompUrlRuleURLm,
       "slbNewAcclCfgCompUrlRuleURL": slbNewAcclCfgCompUrlRuleURL,
       "slbNewAcclCfgCompUrlRuleCompress": slbNewAcclCfgCompUrlRuleCompress,
       "slbNewAcclCfgCompUrlRuleAdminStatus": slbNewAcclCfgCompUrlRuleAdminStatus,
       "slbNewAcclCfgCompUrlRuleDelete": slbNewAcclCfgCompUrlRuleDelete,
       "slbNewAcclCfgCompUrlRuleCopy": slbNewAcclCfgCompUrlRuleCopy,
       "slbCurAcclCfgCompBrwsListTable": slbCurAcclCfgCompBrwsListTable,
       "slbCurAcclCfgCompBrwsListEntry": slbCurAcclCfgCompBrwsListEntry,
       "slbCurAcclCfgCompBrwsListIdIndex": slbCurAcclCfgCompBrwsListIdIndex,
       "slbCurAcclCfgCompBrwsListName": slbCurAcclCfgCompBrwsListName,
       "slbCurAcclCfgCompBrwsListAdminStatus": slbCurAcclCfgCompBrwsListAdminStatus,
       "slbNewAcclCfgCompBrwsListTable": slbNewAcclCfgCompBrwsListTable,
       "slbNewAcclCfgCompBrwsListEntry": slbNewAcclCfgCompBrwsListEntry,
       "slbNewAcclCfgCompBrwsListIdIndex": slbNewAcclCfgCompBrwsListIdIndex,
       "slbNewAcclCfgCompBrwsListName": slbNewAcclCfgCompBrwsListName,
       "slbNewAcclCfgCompBrwsListAdminStatus": slbNewAcclCfgCompBrwsListAdminStatus,
       "slbNewAcclCfgCompBrwsListDel": slbNewAcclCfgCompBrwsListDel,
       "slbNewAcclCfgCompBrwsListCopy": slbNewAcclCfgCompBrwsListCopy,
       "slbCurAcclCfgCompBrwsRuleTable": slbCurAcclCfgCompBrwsRuleTable,
       "slbCurAcclCfgCompBrwsRuleEntry": slbCurAcclCfgCompBrwsRuleEntry,
       "slbCurAcclCfgCompBrwsRuleListIdIndex": slbCurAcclCfgCompBrwsRuleListIdIndex,
       "slbCurAcclCfgCompBrwsRuleIndex": slbCurAcclCfgCompBrwsRuleIndex,
       "slbCurAcclCfgCompBrwsRuleName": slbCurAcclCfgCompBrwsRuleName,
       "slbCurAcclCfgCompBrwsRuleAgentM": slbCurAcclCfgCompBrwsRuleAgentM,
       "slbCurAcclCfgCompBrwsRuleAgent": slbCurAcclCfgCompBrwsRuleAgent,
       "slbCurAcclCfgCompBrwsRuleContentM": slbCurAcclCfgCompBrwsRuleContentM,
       "slbCurAcclCfgCompBrwsRuleContent": slbCurAcclCfgCompBrwsRuleContent,
       "slbCurAcclCfgCompBrwsRuleCompress": slbCurAcclCfgCompBrwsRuleCompress,
       "slbCurAcclCfgCompBrwsRuleAdminStatus": slbCurAcclCfgCompBrwsRuleAdminStatus,
       "slbNewAcclCfgCompBrwsRuleTable": slbNewAcclCfgCompBrwsRuleTable,
       "slbNewAcclCfgCompBrwsRuleEntry": slbNewAcclCfgCompBrwsRuleEntry,
       "slbNewAcclCfgCompBrwsRuleListIdIndex": slbNewAcclCfgCompBrwsRuleListIdIndex,
       "slbNewAcclCfgCompBrwsRuleIndex": slbNewAcclCfgCompBrwsRuleIndex,
       "slbNewAcclCfgCompBrwsRuleName": slbNewAcclCfgCompBrwsRuleName,
       "slbNewAcclCfgCompBrwsRuleAgentM": slbNewAcclCfgCompBrwsRuleAgentM,
       "slbNewAcclCfgCompBrwsRuleAgent": slbNewAcclCfgCompBrwsRuleAgent,
       "slbNewAcclCfgCompBrwsRuleContentM": slbNewAcclCfgCompBrwsRuleContentM,
       "slbNewAcclCfgCompBrwsRuleContent": slbNewAcclCfgCompBrwsRuleContent,
       "slbNewAcclCfgCompBrwsRuleCompress": slbNewAcclCfgCompBrwsRuleCompress,
       "slbNewAcclCfgCompBrwsRuleAdminStatus": slbNewAcclCfgCompBrwsRuleAdminStatus,
       "slbNewAcclCfgCompBrwsRuleDelete": slbNewAcclCfgCompBrwsRuleDelete,
       "slbNewAcclCfgCompBrwsRuleCopy": slbNewAcclCfgCompBrwsRuleCopy,
       "sslCfg": sslCfg,
       "slbCurSslCfgSSLAdminStatus": slbCurSslCfgSSLAdminStatus,
       "slbNewSslCfgSSLAdminStatus": slbNewSslCfgSSLAdminStatus,
       "sslPol": sslPol,
       "slbCurSslCfgSSLPolTable": slbCurSslCfgSSLPolTable,
       "slbCurSslCfgSSLPolEntry": slbCurSslCfgSSLPolEntry,
       "slbCurSslCfgSSLPolNameIdIndex": slbCurSslCfgSSLPolNameIdIndex,
       "slbCurSslCfgSSLPolName": slbCurSslCfgSSLPolName,
       "slbCurSslCfgSSLPolPassInfoCipherName": slbCurSslCfgSSLPolPassInfoCipherName,
       "slbCurSslCfgSSLPolPassInfoCipherFlag": slbCurSslCfgSSLPolPassInfoCipherFlag,
       "slbCurSslCfgSSLPolPassInfoVersionName": slbCurSslCfgSSLPolPassInfoVersionName,
       "slbCurSslCfgSSLPolPassInfoVersionFlag": slbCurSslCfgSSLPolPassInfoVersionFlag,
       "slbCurSslCfgSSLPolPassInfoHeadBitsName": slbCurSslCfgSSLPolPassInfoHeadBitsName,
       "slbCurSslCfgSSLPolPassInfoHeadBitsFlag": slbCurSslCfgSSLPolPassInfoHeadBitsFlag,
       "slbCurSslCfgSSLPolPassInfoFrontend": slbCurSslCfgSSLPolPassInfoFrontend,
       "slbCurSslCfgSSLPolCipherName": slbCurSslCfgSSLPolCipherName,
       "slbCurSslCfgSSLPolCipherUserdef": slbCurSslCfgSSLPolCipherUserdef,
       "slbCurSslCfgSSLPolIntermcaChainName": slbCurSslCfgSSLPolIntermcaChainName,
       "slbCurSslCfgSSLPolIntermcaChainType": slbCurSslCfgSSLPolIntermcaChainType,
       "slbCurSslCfgSSLPolBecipher": slbCurSslCfgSSLPolBecipher,
       "slbCurSslCfgSSLPolAuthpol": slbCurSslCfgSSLPolAuthpol,
       "slbCurSslCfgSSLPolConvuri": slbCurSslCfgSSLPolConvuri,
       "slbCurSslCfgSSLPolBessl": slbCurSslCfgSSLPolBessl,
       "slbCurSslCfgSSLPolConvert": slbCurSslCfgSSLPolConvert,
       "slbCurSslCfgSSLPolAdminStatus": slbCurSslCfgSSLPolAdminStatus,
       "slbNewSslCfgSSLPolTable": slbNewSslCfgSSLPolTable,
       "slbNewSslCfgSSLPolEntry": slbNewSslCfgSSLPolEntry,
       "slbNewSslCfgSSLPolNameIdIndex": slbNewSslCfgSSLPolNameIdIndex,
       "slbNewSslCfgSSLPolName": slbNewSslCfgSSLPolName,
       "slbNewSslCfgSSLPolPassInfoCipherName": slbNewSslCfgSSLPolPassInfoCipherName,
       "slbNewSslCfgSSLPolPassInfoCipherFlag": slbNewSslCfgSSLPolPassInfoCipherFlag,
       "slbNewSslCfgSSLPolPassInfoVersionName": slbNewSslCfgSSLPolPassInfoVersionName,
       "slbNewSslCfgSSLPolPassInfoVersionFlag": slbNewSslCfgSSLPolPassInfoVersionFlag,
       "slbNewSslCfgSSLPolPassInfoHeadBitsName": slbNewSslCfgSSLPolPassInfoHeadBitsName,
       "slbNewSslCfgSSLPolPassInfoHeadBitsFlag": slbNewSslCfgSSLPolPassInfoHeadBitsFlag,
       "slbNewSslCfgSSLPolPassInfoFrontend": slbNewSslCfgSSLPolPassInfoFrontend,
       "slbNewSslCfgSSLPolCipherName": slbNewSslCfgSSLPolCipherName,
       "slbNewSslCfgSSLPolCipherUserdef": slbNewSslCfgSSLPolCipherUserdef,
       "slbNewSslCfgSSLPolIntermcaChainName": slbNewSslCfgSSLPolIntermcaChainName,
       "slbNewSslCfgSSLPolIntermcaChainType": slbNewSslCfgSSLPolIntermcaChainType,
       "slbNewSslCfgSSLPolBecipher": slbNewSslCfgSSLPolBecipher,
       "slbNewSslCfgSSLPolAuthpol": slbNewSslCfgSSLPolAuthpol,
       "slbNewSslCfgSSLPolConvuri": slbNewSslCfgSSLPolConvuri,
       "slbNewSslCfgSSLPolBessl": slbNewSslCfgSSLPolBessl,
       "slbNewSslCfgSSLPolConvert": slbNewSslCfgSSLPolConvert,
       "slbNewSslCfgSSLPolAdminStatus": slbNewSslCfgSSLPolAdminStatus,
       "slbNewSslCfgSSLPolDel": slbNewSslCfgSSLPolDel,
       "authPol": authPol,
       "slbCurSslCfgAuthPolTable": slbCurSslCfgAuthPolTable,
       "slbCurSslCfgAuthPolEntry": slbCurSslCfgAuthPolEntry,
       "slbCurSslCfgAuthPolNameIdIndex": slbCurSslCfgAuthPolNameIdIndex,
       "slbCurSslCfgAuthPolName": slbCurSslCfgAuthPolName,
       "slbCurSslCfgAuthPolValidityMethod": slbCurSslCfgAuthPolValidityMethod,
       "slbCurSslCfgAuthPolValidityStaturi": slbCurSslCfgAuthPolValidityStaturi,
       "slbCurSslCfgAuthPolValidityUriprior": slbCurSslCfgAuthPolValidityUriprior,
       "slbCurSslCfgAuthPolValidityCachtime": slbCurSslCfgAuthPolValidityCachtime,
       "slbCurSslCfgAuthPolValidityTimedev": slbCurSslCfgAuthPolValidityTimedev,
       "slbCurSslCfgAuthPolValidityAlgorthmName": slbCurSslCfgAuthPolValidityAlgorthmName,
       "slbCurSslCfgAuthPolValidityVchain": slbCurSslCfgAuthPolValidityVchain,
       "slbCurSslCfgAuthPolValiditySecure": slbCurSslCfgAuthPolValiditySecure,
       "slbCurSslCfgAuthPolPassinfoVersionName": slbCurSslCfgAuthPolPassinfoVersionName,
       "slbCurSslCfgAuthPolPassinfoVersionFlag": slbCurSslCfgAuthPolPassinfoVersionFlag,
       "slbCurSslCfgAuthPolPassinfoSerialName": slbCurSslCfgAuthPolPassinfoSerialName,
       "slbCurSslCfgAuthPolPassinfoSerialFlag": slbCurSslCfgAuthPolPassinfoSerialFlag,
       "slbCurSslCfgAuthPolPassinfoAlgoName": slbCurSslCfgAuthPolPassinfoAlgoName,
       "slbCurSslCfgAuthPolPassinfoAlgoFlag": slbCurSslCfgAuthPolPassinfoAlgoFlag,
       "slbCurSslCfgAuthPolPassinfoIssuerName": slbCurSslCfgAuthPolPassinfoIssuerName,
       "slbCurSslCfgAuthPolPassinfoIssuerFlag": slbCurSslCfgAuthPolPassinfoIssuerFlag,
       "slbCurSslCfgAuthPolPassinfoNbeforeName": slbCurSslCfgAuthPolPassinfoNbeforeName,
       "slbCurSslCfgAuthPolPassinfoNbeforeFlag": slbCurSslCfgAuthPolPassinfoNbeforeFlag,
       "slbCurSslCfgAuthPolPassinfoNafterName": slbCurSslCfgAuthPolPassinfoNafterName,
       "slbCurSslCfgAuthPolPassinfoNafterFlag": slbCurSslCfgAuthPolPassinfoNafterFlag,
       "slbCurSslCfgAuthPolPassinfoSubjectName": slbCurSslCfgAuthPolPassinfoSubjectName,
       "slbCurSslCfgAuthPolPassinfoSubjectFlag": slbCurSslCfgAuthPolPassinfoSubjectFlag,
       "slbCurSslCfgAuthPolPassinfoKeytypeName": slbCurSslCfgAuthPolPassinfoKeytypeName,
       "slbCurSslCfgAuthPolPassinfoKeytypeFlag": slbCurSslCfgAuthPolPassinfoKeytypeFlag,
       "slbCurSslCfgAuthPolPassinfoMd5Name": slbCurSslCfgAuthPolPassinfoMd5Name,
       "slbCurSslCfgAuthPolPassinfoMd5Flag": slbCurSslCfgAuthPolPassinfoMd5Flag,
       "slbCurSslCfgAuthPolPassinfoCertName": slbCurSslCfgAuthPolPassinfoCertName,
       "slbCurSslCfgAuthPolPassinfoCertFormat": slbCurSslCfgAuthPolPassinfoCertFormat,
       "slbCurSslCfgAuthPolPassinfoCertFlag": slbCurSslCfgAuthPolPassinfoCertFlag,
       "slbCurSslCfgAuthPolPassinfoCharset": slbCurSslCfgAuthPolPassinfoCharset,
       "slbCurSslCfgAuthPolTrustcaChainName": slbCurSslCfgAuthPolTrustcaChainName,
       "slbCurSslCfgAuthPolTrustcaChainType": slbCurSslCfgAuthPolTrustcaChainType,
       "slbCurSslCfgAuthPolCadepth": slbCurSslCfgAuthPolCadepth,
       "slbCurSslCfgAuthPolCaverify": slbCurSslCfgAuthPolCaverify,
       "slbCurSslCfgAuthPolFailurl": slbCurSslCfgAuthPolFailurl,
       "slbCurSslCfgAuthPolAdminStatus": slbCurSslCfgAuthPolAdminStatus,
       "slbCurSslCfgAuthPolPassinfoComp2424": slbCurSslCfgAuthPolPassinfoComp2424,
       "slbNewSslCfgAuthPolTable": slbNewSslCfgAuthPolTable,
       "slbNewSslCfgAuthPolEntry": slbNewSslCfgAuthPolEntry,
       "slbNewSslCfgAuthPolNameIdIndex": slbNewSslCfgAuthPolNameIdIndex,
       "slbNewSslCfgAuthPolName": slbNewSslCfgAuthPolName,
       "slbNewSslCfgAuthPolValidityMethod": slbNewSslCfgAuthPolValidityMethod,
       "slbNewSslCfgAuthPolValidityStaturi": slbNewSslCfgAuthPolValidityStaturi,
       "slbNewSslCfgAuthPolValidityUriprior": slbNewSslCfgAuthPolValidityUriprior,
       "slbNewSslCfgAuthPolValidityCachtime": slbNewSslCfgAuthPolValidityCachtime,
       "slbNewSslCfgAuthPolValidityTimedev": slbNewSslCfgAuthPolValidityTimedev,
       "slbNewSslCfgAuthPolValidityAlgorthmName": slbNewSslCfgAuthPolValidityAlgorthmName,
       "slbNewSslCfgAuthPolValidityVchain": slbNewSslCfgAuthPolValidityVchain,
       "slbNewSslCfgAuthPolValiditySecure": slbNewSslCfgAuthPolValiditySecure,
       "slbNewSslCfgAuthPolPassinfoVersionName": slbNewSslCfgAuthPolPassinfoVersionName,
       "slbNewSslCfgAuthPolPassinfoVersionFlag": slbNewSslCfgAuthPolPassinfoVersionFlag,
       "slbNewSslCfgAuthPolPassinfoSerialName": slbNewSslCfgAuthPolPassinfoSerialName,
       "slbNewSslCfgAuthPolPassinfoSerialFlag": slbNewSslCfgAuthPolPassinfoSerialFlag,
       "slbNewSslCfgAuthPolPassinfoAlgoName": slbNewSslCfgAuthPolPassinfoAlgoName,
       "slbNewSslCfgAuthPolPassinfoAlgoFlag": slbNewSslCfgAuthPolPassinfoAlgoFlag,
       "slbNewSslCfgAuthPolPassinfoIssuerName": slbNewSslCfgAuthPolPassinfoIssuerName,
       "slbNewSslCfgAuthPolPassinfoIssuerFlag": slbNewSslCfgAuthPolPassinfoIssuerFlag,
       "slbNewSslCfgAuthPolPassinfoNbeforeName": slbNewSslCfgAuthPolPassinfoNbeforeName,
       "slbNewSslCfgAuthPolPassinfoNbeforeFlag": slbNewSslCfgAuthPolPassinfoNbeforeFlag,
       "slbNewSslCfgAuthPolPassinfoNafterName": slbNewSslCfgAuthPolPassinfoNafterName,
       "slbNewSslCfgAuthPolPassinfoNafterFlag": slbNewSslCfgAuthPolPassinfoNafterFlag,
       "slbNewSslCfgAuthPolPassinfoSubjectName": slbNewSslCfgAuthPolPassinfoSubjectName,
       "slbNewSslCfgAuthPolPassinfoSubjectFlag": slbNewSslCfgAuthPolPassinfoSubjectFlag,
       "slbNewSslCfgAuthPolPassinfoKeytypeName": slbNewSslCfgAuthPolPassinfoKeytypeName,
       "slbNewSslCfgAuthPolPassinfoKeytypeFlag": slbNewSslCfgAuthPolPassinfoKeytypeFlag,
       "slbNewSslCfgAuthPolPassinfoMd5Name": slbNewSslCfgAuthPolPassinfoMd5Name,
       "slbNewSslCfgAuthPolPassinfoMd5Flag": slbNewSslCfgAuthPolPassinfoMd5Flag,
       "slbNewSslCfgAuthPolPassinfoCertName": slbNewSslCfgAuthPolPassinfoCertName,
       "slbNewSslCfgAuthPolPassinfoCertFormat": slbNewSslCfgAuthPolPassinfoCertFormat,
       "slbNewSslCfgAuthPolPassinfoCertFlag": slbNewSslCfgAuthPolPassinfoCertFlag,
       "slbNewSslCfgAuthPolPassinfoCharset": slbNewSslCfgAuthPolPassinfoCharset,
       "slbNewSslCfgAuthPolTrustcaChainName": slbNewSslCfgAuthPolTrustcaChainName,
       "slbNewSslCfgAuthPolTrustcaChainType": slbNewSslCfgAuthPolTrustcaChainType,
       "slbNewSslCfgAuthPolCadepth": slbNewSslCfgAuthPolCadepth,
       "slbNewSslCfgAuthPolCaverify": slbNewSslCfgAuthPolCaverify,
       "slbNewSslCfgAuthPolFailurl": slbNewSslCfgAuthPolFailurl,
       "slbNewSslCfgAuthPolAdminStatus": slbNewSslCfgAuthPolAdminStatus,
       "slbNewSslCfgAuthPolDelete": slbNewSslCfgAuthPolDelete,
       "slbNewSslCfgAuthPolPassinfoComp2424": slbNewSslCfgAuthPolPassinfoComp2424,
       "certs": certs,
       "slbCurSslCfgCertsTable": slbCurSslCfgCertsTable,
       "slbCurSslCfgCertsEntry": slbCurSslCfgCertsEntry,
       "slbCurSslCfgCertsID": slbCurSslCfgCertsID,
       "slbCurSslCfgCertsType": slbCurSslCfgCertsType,
       "slbCurSslCfgCertsName": slbCurSslCfgCertsName,
       "slbCurSslCfgCertsKeySize": slbCurSslCfgCertsKeySize,
       "slbCurSslCfgCertsExpirty": slbCurSslCfgCertsExpirty,
       "slbCurSslCfgCertsCommonName": slbCurSslCfgCertsCommonName,
       "slbCurSslCfgCertsHashAlgo": slbCurSslCfgCertsHashAlgo,
       "slbCurSslCfgCertsCountryName": slbCurSslCfgCertsCountryName,
       "slbCurSslCfgCertsPrpvinceName": slbCurSslCfgCertsPrpvinceName,
       "slbCurSslCfgCertsLocalityName": slbCurSslCfgCertsLocalityName,
       "slbCurSslCfgCertsOrganizationName": slbCurSslCfgCertsOrganizationName,
       "slbCurSslCfgCertsOrganizationUnitName": slbCurSslCfgCertsOrganizationUnitName,
       "slbCurSslCfgCertsEMail": slbCurSslCfgCertsEMail,
       "slbCurSslCfgCertsValidityPeriod": slbCurSslCfgCertsValidityPeriod,
       "slbCurSslCfgCertsStatus": slbCurSslCfgCertsStatus,
       "slbNewSslCfgCertsTable": slbNewSslCfgCertsTable,
       "slbNewSslCfgCertsEntry": slbNewSslCfgCertsEntry,
       "slbNewSslCfgCertsID": slbNewSslCfgCertsID,
       "slbNewSslCfgCertsType": slbNewSslCfgCertsType,
       "slbNewSslCfgCertsName": slbNewSslCfgCertsName,
       "slbNewSslCfgCertsKeySize": slbNewSslCfgCertsKeySize,
       "slbNewSslCfgCertsExpirty": slbNewSslCfgCertsExpirty,
       "slbNewSslCfgCertsCommonName": slbNewSslCfgCertsCommonName,
       "slbNewSslCfgCertsHashAlgo": slbNewSslCfgCertsHashAlgo,
       "slbNewSslCfgCertsCountryName": slbNewSslCfgCertsCountryName,
       "slbNewSslCfgCertsPrpvinceName": slbNewSslCfgCertsPrpvinceName,
       "slbNewSslCfgCertsLocalityName": slbNewSslCfgCertsLocalityName,
       "slbNewSslCfgCertsOrganizationName": slbNewSslCfgCertsOrganizationName,
       "slbNewSslCfgCertsOrganizationUnitName": slbNewSslCfgCertsOrganizationUnitName,
       "slbNewSslCfgCertsEMail": slbNewSslCfgCertsEMail,
       "slbNewSslCfgCertsValidityPeriod": slbNewSslCfgCertsValidityPeriod,
       "slbNewSslCfgCertsDelete": slbNewSslCfgCertsDelete,
       "slbNewSslCfgCertsGenerate": slbNewSslCfgCertsGenerate,
       "slbNewSslCfgCertsStatus": slbNewSslCfgCertsStatus,
       "slbSslCfgCertsDefaults": slbSslCfgCertsDefaults,
       "slbCurSslCfgCertsDefaultsCountryName": slbCurSslCfgCertsDefaultsCountryName,
       "slbNewSslCfgCertsDefaultsCountryName": slbNewSslCfgCertsDefaultsCountryName,
       "slbCurSslCfgCertsDefaultsProvinceName": slbCurSslCfgCertsDefaultsProvinceName,
       "slbNewSslCfgCertsDefaultsProvinceName": slbNewSslCfgCertsDefaultsProvinceName,
       "slbCurSslCfgCertsDefaultsLocallyName": slbCurSslCfgCertsDefaultsLocallyName,
       "slbNewSslCfgCertsDefaultsLocallyName": slbNewSslCfgCertsDefaultsLocallyName,
       "slbCurSslCfgCertsDefaultsOrganizationName": slbCurSslCfgCertsDefaultsOrganizationName,
       "slbNewSslCfgCertsDefaultsOrganizationName": slbNewSslCfgCertsDefaultsOrganizationName,
       "slbCurSslCfgCertsDefaultsOrganizationUnitName": slbCurSslCfgCertsDefaultsOrganizationUnitName,
       "slbNewSslCfgCertsDefaultsOrganizationUnitName": slbNewSslCfgCertsDefaultsOrganizationUnitName,
       "slbCurSslCfgCertsDefaultsEMail": slbCurSslCfgCertsDefaultsEMail,
       "slbNewSslCfgCertsDefaultsEMail": slbNewSslCfgCertsDefaultsEMail,
       "slbCurSslCfgGroupsTable": slbCurSslCfgGroupsTable,
       "slbCurSslCfgGroupsEntry": slbCurSslCfgGroupsEntry,
       "slbCurSslCfgGroupsID": slbCurSslCfgGroupsID,
       "slbCurSslCfgGroupsName": slbCurSslCfgGroupsName,
       "slbCurSslCfgGroupsType": slbCurSslCfgGroupsType,
       "slbCurSslCfgGroupsDefaultCert": slbCurSslCfgGroupsDefaultCert,
       "slbCurSslCfgGroupsCertBmap": slbCurSslCfgGroupsCertBmap,
       "slbNewSslCfgGroupsTable": slbNewSslCfgGroupsTable,
       "slbNewSslCfgGroupsEntry": slbNewSslCfgGroupsEntry,
       "slbNewSslCfgGroupsID": slbNewSslCfgGroupsID,
       "slbNewSslCfgGroupsName": slbNewSslCfgGroupsName,
       "slbNewSslCfgGroupsType": slbNewSslCfgGroupsType,
       "slbNewSslCfgGroupsDelete": slbNewSslCfgGroupsDelete,
       "slbNewSslCfgGroupsDefaultCert": slbNewSslCfgGroupsDefaultCert,
       "slbNewSslCfgGroupsAddCert": slbNewSslCfgGroupsAddCert,
       "slbNewSslCfgGroupsRemCert": slbNewSslCfgGroupsRemCert,
       "slbNewSslCfgGroupsCertBmap": slbNewSslCfgGroupsCertBmap,
       "sapCfg": sapCfg,
       "slbSapAslrTableMaxSize": slbSapAslrTableMaxSize,
       "slbCurCfgSapAslrTable": slbCurCfgSapAslrTable,
       "slbCurCfgSapAslrEntry": slbCurCfgSapAslrEntry,
       "slbCurCfgSapAslrIndex": slbCurCfgSapAslrIndex,
       "slbCurCfgSapAslrIpAddr": slbCurCfgSapAslrIpAddr,
       "slbCurCfgSapAslrIpv6Addr": slbCurCfgSapAslrIpv6Addr,
       "slbCurCfgSapAslrIpVer": slbCurCfgSapAslrIpVer,
       "slbCurCfgSapAslrPortNum": slbCurCfgSapAslrPortNum,
       "slbCurCfgSapAslrVipAddr": slbCurCfgSapAslrVipAddr,
       "slbCurCfgSapAslrVipv6Addr": slbCurCfgSapAslrVipv6Addr,
       "slbCurCfgSapAslrVipIpVer": slbCurCfgSapAslrVipIpVer,
       "slbCurCfgSapAslrInterval": slbCurCfgSapAslrInterval,
       "slbCurCfgSapAslrState": slbCurCfgSapAslrState,
       "slbCurCfgSapAslrName": slbCurCfgSapAslrName,
       "slbCurCfgSapAslrLastAct": slbCurCfgSapAslrLastAct,
       "slbCurCfgSapAslrAutoConfig": slbCurCfgSapAslrAutoConfig,
       "slbCurCfgSapAslrSessionInfo": slbCurCfgSapAslrSessionInfo,
       "slbCurCfgSapAslrDelete": slbCurCfgSapAslrDelete,
       "slbCurCfgSapAslrSignature": slbCurCfgSapAslrSignature,
       "slbCurCfgSapAslrServCert": slbCurCfgSapAslrServCert,
       "slbNewCfgSapAslrTable": slbNewCfgSapAslrTable,
       "slbNewCfgSapAslrEntry": slbNewCfgSapAslrEntry,
       "slbNewCfgSapAslrIndex": slbNewCfgSapAslrIndex,
       "slbNewCfgSapAslrIpAddr": slbNewCfgSapAslrIpAddr,
       "slbNewCfgSapAslrIpv6Addr": slbNewCfgSapAslrIpv6Addr,
       "slbNewCfgSapAslrIpVer": slbNewCfgSapAslrIpVer,
       "slbNewCfgSapAslrPortNum": slbNewCfgSapAslrPortNum,
       "slbNewCfgSapAslrVipAddr": slbNewCfgSapAslrVipAddr,
       "slbNewCfgSapAslrVipv6Addr": slbNewCfgSapAslrVipv6Addr,
       "slbNewCfgSapAslrVipIpVer": slbNewCfgSapAslrVipIpVer,
       "slbNewCfgSapAslrInterval": slbNewCfgSapAslrInterval,
       "slbNewCfgSapAslrState": slbNewCfgSapAslrState,
       "slbNewCfgSapAslrName": slbNewCfgSapAslrName,
       "slbNewCfgSapAslrLastAct": slbNewCfgSapAslrLastAct,
       "slbNewCfgSapAslrAutoConfig": slbNewCfgSapAslrAutoConfig,
       "slbNewCfgSapAslrSessionInfo": slbNewCfgSapAslrSessionInfo,
       "slbNewCfgSapAslrDelete": slbNewCfgSapAslrDelete,
       "slbNewCfgSapAslrSignature": slbNewCfgSapAslrSignature,
       "slbNewCfgSapAslrServCert": slbNewCfgSapAslrServCert,
       "peerpipTblCfg": peerpipTblCfg,
       "slbCurCfgPeerPIPTable": slbCurCfgPeerPIPTable,
       "slbCurCfgPeerPIPEntry": slbCurCfgPeerPIPEntry,
       "slbCurCfgPeerPIPIndex": slbCurCfgPeerPIPIndex,
       "slbCurCfgPeerPIPAddr": slbCurCfgPeerPIPAddr,
       "slbCurCfgPeerPIPv6Addr": slbCurCfgPeerPIPv6Addr,
       "slbNewCfgPeerPIPTable": slbNewCfgPeerPIPTable,
       "slbNewCfgPeerPIPEntry": slbNewCfgPeerPIPEntry,
       "slbNewCfgPeerPIPIndex": slbNewCfgPeerPIPIndex,
       "slbNewCfgPeerPIPAddr": slbNewCfgPeerPIPAddr,
       "slbNewCfgPeerPIPv6Addr": slbNewCfgPeerPIPv6Addr,
       "slbNewCfgPeerPIPDelete": slbNewCfgPeerPIPDelete,
       "nwclssCfg": nwclssCfg,
       "slbCurNwclssCfgNetworkClassesTable": slbCurNwclssCfgNetworkClassesTable,
       "slbCurNwclssCfgNetworkClassesEntry": slbCurNwclssCfgNetworkClassesEntry,
       "slbCurNwclssCfgNetworkClassesId": slbCurNwclssCfgNetworkClassesId,
       "slbCurNwclssCfgNetworkClassesName": slbCurNwclssCfgNetworkClassesName,
       "slbCurNwclssCfgNetworkClassesIpVer": slbCurNwclssCfgNetworkClassesIpVer,
       "slbNewNwclssCfgNetworkClassesTable": slbNewNwclssCfgNetworkClassesTable,
       "slbNewNwclssCfgNetworkClassesEntry": slbNewNwclssCfgNetworkClassesEntry,
       "slbNewNwclssCfgNetworkClassesId": slbNewNwclssCfgNetworkClassesId,
       "slbNewNwclssCfgNetworkClassesName": slbNewNwclssCfgNetworkClassesName,
       "slbNewNwclssCfgNetworkClassesIpVer": slbNewNwclssCfgNetworkClassesIpVer,
       "slbNewNwclssCfgNetworkClassesDel": slbNewNwclssCfgNetworkClassesDel,
       "slbNewNwclssCfgNetworkClassesCopy": slbNewNwclssCfgNetworkClassesCopy,
       "slbCurNwclssCfgNetworkElementsTable": slbCurNwclssCfgNetworkElementsTable,
       "slbCurNwclssCfgNetworkElementsEntry": slbCurNwclssCfgNetworkElementsEntry,
       "slbCurNwclssCfgNetworkElementsNcId": slbCurNwclssCfgNetworkElementsNcId,
       "slbCurNwclssCfgNetworkElementsId": slbCurNwclssCfgNetworkElementsId,
       "slbCurNwclssCfgNetworkElementsNetType": slbCurNwclssCfgNetworkElementsNetType,
       "slbCurNwclssCfgNetworkElementsIp": slbCurNwclssCfgNetworkElementsIp,
       "slbCurNwclssCfgNetworkElementsMask": slbCurNwclssCfgNetworkElementsMask,
       "slbCurNwclssCfgNetworkElementsFromIp": slbCurNwclssCfgNetworkElementsFromIp,
       "slbCurNwclssCfgNetworkElementsToIp": slbCurNwclssCfgNetworkElementsToIp,
       "slbCurNwclssCfgNetworkElementsIpv6Addr": slbCurNwclssCfgNetworkElementsIpv6Addr,
       "slbCurNwclssCfgNetworkElementsPrefixLen": slbCurNwclssCfgNetworkElementsPrefixLen,
       "slbCurNwclssCfgNetworkElementsFromIpv6Addr": slbCurNwclssCfgNetworkElementsFromIpv6Addr,
       "slbCurNwclssCfgNetworkElementsToIpv6Addr": slbCurNwclssCfgNetworkElementsToIpv6Addr,
       "slbCurNwclssCfgNetworkElementsMatchType": slbCurNwclssCfgNetworkElementsMatchType,
       "slbNewNwclssCfgNetworkElementsTable": slbNewNwclssCfgNetworkElementsTable,
       "slbNewNwclssCfgNetworkElementsEntry": slbNewNwclssCfgNetworkElementsEntry,
       "slbNewNwclssCfgNetworkElementsNcId": slbNewNwclssCfgNetworkElementsNcId,
       "slbNewNwclssCfgNetworkElementsId": slbNewNwclssCfgNetworkElementsId,
       "slbNewNwclssCfgNetworkElementsNetType": slbNewNwclssCfgNetworkElementsNetType,
       "slbNewNwclssCfgNetworkElementsIp": slbNewNwclssCfgNetworkElementsIp,
       "slbNewNwclssCfgNetworkElementsMask": slbNewNwclssCfgNetworkElementsMask,
       "slbNewNwclssCfgNetworkElementsFromIp": slbNewNwclssCfgNetworkElementsFromIp,
       "slbNewNwclssCfgNetworkElementsToIp": slbNewNwclssCfgNetworkElementsToIp,
       "slbNewNwclssCfgNetworkElementsIpv6Addr": slbNewNwclssCfgNetworkElementsIpv6Addr,
       "slbNewNwclssCfgNetworkElementsPrefixLen": slbNewNwclssCfgNetworkElementsPrefixLen,
       "slbNewNwclssCfgNetworkElementsFromIpv6Addr": slbNewNwclssCfgNetworkElementsFromIpv6Addr,
       "slbNewNwclssCfgNetworkElementsToIpv6Addr": slbNewNwclssCfgNetworkElementsToIpv6Addr,
       "slbNewNwclssCfgNetworkElementsMatchType": slbNewNwclssCfgNetworkElementsMatchType,
       "slbNewNwclssCfgNetworkElementsDel": slbNewNwclssCfgNetworkElementsDel,
       "filterCfg": filterCfg,
       "fltCfgTableMaxSize": fltCfgTableMaxSize,
       "fltCurCfgTable": fltCurCfgTable,
       "fltCurCfgTableEntry": fltCurCfgTableEntry,
       "fltCurCfgIndx": fltCurCfgIndx,
       "fltCurCfgSrcIp": fltCurCfgSrcIp,
       "fltCurCfgSrcIpMask": fltCurCfgSrcIpMask,
       "fltCurCfgDstIp": fltCurCfgDstIp,
       "fltCurCfgDstIpMask": fltCurCfgDstIpMask,
       "fltCurCfgProtocol": fltCurCfgProtocol,
       "fltCurCfgRangeHighSrcPort": fltCurCfgRangeHighSrcPort,
       "fltCurCfgRangeLowSrcPort": fltCurCfgRangeLowSrcPort,
       "fltCurCfgRangeLowDstPort": fltCurCfgRangeLowDstPort,
       "fltCurCfgRangeHighDstPort": fltCurCfgRangeHighDstPort,
       "fltCurCfgAction": fltCurCfgAction,
       "fltCurCfgRedirPort": fltCurCfgRedirPort,
       "fltCurCfgRedirGroup": fltCurCfgRedirGroup,
       "fltCurCfgLog": fltCurCfgLog,
       "fltCurCfgState": fltCurCfgState,
       "fltCurCfgNat": fltCurCfgNat,
       "fltCurCfgCache": fltCurCfgCache,
       "fltCurCfgInvert": fltCurCfgInvert,
       "fltCurCfgClientProxy": fltCurCfgClientProxy,
       "fltCurCfgTcpAck": fltCurCfgTcpAck,
       "fltCurCfgSrcMac": fltCurCfgSrcMac,
       "fltCurCfgDstMac": fltCurCfgDstMac,
       "fltCurCfgFtpNatActive": fltCurCfgFtpNatActive,
       "fltCurCfgAclTcpUrg": fltCurCfgAclTcpUrg,
       "fltCurCfgAclTcpAck": fltCurCfgAclTcpAck,
       "fltCurCfgAclTcpPsh": fltCurCfgAclTcpPsh,
       "fltCurCfgAclTcpRst": fltCurCfgAclTcpRst,
       "fltCurCfgAclTcpSyn": fltCurCfgAclTcpSyn,
       "fltCurCfgAclTcpFin": fltCurCfgAclTcpFin,
       "fltCurCfgAclIcmp": fltCurCfgAclIcmp,
       "fltCurCfgAclIpOption": fltCurCfgAclIpOption,
       "fltCurCfgBwmContract": fltCurCfgBwmContract,
       "fltCurCfgAclIpTos": fltCurCfgAclIpTos,
       "fltCurCfgAclIpTosMask": fltCurCfgAclIpTosMask,
       "fltCurCfgAclIpTosNew": fltCurCfgAclIpTosNew,
       "fltCurCfgFwlb": fltCurCfgFwlb,
       "fltCurCfgNatTimeout": fltCurCfgNatTimeout,
       "fltCurCfgLinklb": fltCurCfgLinklb,
       "fltCurCfgWapRadiusSnoop": fltCurCfgWapRadiusSnoop,
       "fltCurCfgSrcIpMac": fltCurCfgSrcIpMac,
       "fltCurCfgDstIpMac": fltCurCfgDstIpMac,
       "fltCurCfgIdslbHash": fltCurCfgIdslbHash,
       "fltCurCfgVlan": fltCurCfgVlan,
       "fltCurCfgName": fltCurCfgName,
       "fltCurCfgTcpRateLimit": fltCurCfgTcpRateLimit,
       "fltCurCfgTcpRateMaxConn": fltCurCfgTcpRateMaxConn,
       "fltCurCfgHash": fltCurCfgHash,
       "fltCurCfgLayer7DenyState": fltCurCfgLayer7DenyState,
       "fltCurCfgLayer7DenyUrlBmap": fltCurCfgLayer7DenyUrlBmap,
       "fltCurCfgGotoFilter": fltCurCfgGotoFilter,
       "fltCurCfgRadiusWapPersist": fltCurCfgRadiusWapPersist,
       "fltCurCfgPbind": fltCurCfgPbind,
       "fltCurCfgTimeWindow": fltCurCfgTimeWindow,
       "fltCurCfgHoldDuration": fltCurCfgHoldDuration,
       "fltCurCfgPatternMatch": fltCurCfgPatternMatch,
       "fltCurCfgLayer7DenyMatchAll": fltCurCfgLayer7DenyMatchAll,
       "fltCurCfgProxyIp": fltCurCfgProxyIp,
       "fltCurCfgLayer7ParseAll": fltCurCfgLayer7ParseAll,
       "fltCurCfgSecurityParseAll": fltCurCfgSecurityParseAll,
       "fltCurCfgPatternMatchGroupBmap": fltCurCfgPatternMatchGroupBmap,
       "fltCurCfg8021pBitsValue": fltCurCfg8021pBitsValue,
       "fltCurCfg8021pBitsMatch": fltCurCfg8021pBitsMatch,
       "fltCurCfgAclIpLength": fltCurCfgAclIpLength,
       "fltCurCfgIdsGroup": fltCurCfgIdsGroup,
       "fltCurCfgEgressPip": fltCurCfgEgressPip,
       "fltCurCfgDbind": fltCurCfgDbind,
       "fltCurCfgRevBwmContract": fltCurCfgRevBwmContract,
       "fltCurCfgReverse": fltCurCfgReverse,
       "fltCurCfgParseChn": fltCurCfgParseChn,
       "fltCurCfgRtpBwmContract": fltCurCfgRtpBwmContract,
       "fltCurCfgSipParsing": fltCurCfgSipParsing,
       "fltCurCfgSessionMirror": fltCurCfgSessionMirror,
       "fltCurCfgIpVer": fltCurCfgIpVer,
       "fltCurCfgIpv6Sip": fltCurCfgIpv6Sip,
       "fltCurCfgIpv6Sprefix": fltCurCfgIpv6Sprefix,
       "fltCurCfgIpv6Dip": fltCurCfgIpv6Dip,
       "fltCurCfgIpv6Dprefix": fltCurCfgIpv6Dprefix,
       "fltCurCfgHdrHash": fltCurCfgHdrHash,
       "fltCurCfgHdrName": fltCurCfgHdrName,
       "fltCurCfgHdrHashLen": fltCurCfgHdrHashLen,
       "fltCurCfgL3Filter": fltCurCfgL3Filter,
       "fltCurCfgNatIp": fltCurCfgNatIp,
       "fltCurCfgIpv6Nip": fltCurCfgIpv6Nip,
       "fltCurCfgIpv6Proxy": fltCurCfgIpv6Proxy,
       "fltCurCfgL7SipFilt": fltCurCfgL7SipFilt,
       "fltCurCfgNatMcastVlan": fltCurCfgNatMcastVlan,
       "fltCurCfgNbind": fltCurCfgNbind,
       "fltNewCfgTable": fltNewCfgTable,
       "fltNewCfgTableEntry": fltNewCfgTableEntry,
       "fltNewCfgIndx": fltNewCfgIndx,
       "fltNewCfgSrcIp": fltNewCfgSrcIp,
       "fltNewCfgSrcIpMask": fltNewCfgSrcIpMask,
       "fltNewCfgDstIp": fltNewCfgDstIp,
       "fltNewCfgDstIpMask": fltNewCfgDstIpMask,
       "fltNewCfgProtocol": fltNewCfgProtocol,
       "fltNewCfgRangeHighSrcPort": fltNewCfgRangeHighSrcPort,
       "fltNewCfgRangeLowSrcPort": fltNewCfgRangeLowSrcPort,
       "fltNewCfgRangeLowDstPort": fltNewCfgRangeLowDstPort,
       "fltNewCfgRangeHighDstPort": fltNewCfgRangeHighDstPort,
       "fltNewCfgAction": fltNewCfgAction,
       "fltNewCfgRedirPort": fltNewCfgRedirPort,
       "fltNewCfgRedirGroup": fltNewCfgRedirGroup,
       "fltNewCfgLog": fltNewCfgLog,
       "fltNewCfgState": fltNewCfgState,
       "fltNewCfgDelete": fltNewCfgDelete,
       "fltNewCfgNat": fltNewCfgNat,
       "fltNewCfgCache": fltNewCfgCache,
       "fltNewCfgInvert": fltNewCfgInvert,
       "fltNewCfgClientProxy": fltNewCfgClientProxy,
       "fltNewCfgTcpAck": fltNewCfgTcpAck,
       "fltNewCfgSrcMac": fltNewCfgSrcMac,
       "fltNewCfgDstMac": fltNewCfgDstMac,
       "fltNewCfgFtpNatActive": fltNewCfgFtpNatActive,
       "fltNewCfgAclTcpUrg": fltNewCfgAclTcpUrg,
       "fltNewCfgAclTcpAck": fltNewCfgAclTcpAck,
       "fltNewCfgAclTcpPsh": fltNewCfgAclTcpPsh,
       "fltNewCfgAclTcpRst": fltNewCfgAclTcpRst,
       "fltNewCfgAclTcpSyn": fltNewCfgAclTcpSyn,
       "fltNewCfgAclTcpFin": fltNewCfgAclTcpFin,
       "fltNewCfgAclIcmp": fltNewCfgAclIcmp,
       "fltNewCfgAclIpOption": fltNewCfgAclIpOption,
       "fltNewCfgBwmContract": fltNewCfgBwmContract,
       "fltNewCfgAclIpTos": fltNewCfgAclIpTos,
       "fltNewCfgAclIpTosMask": fltNewCfgAclIpTosMask,
       "fltNewCfgAclIpTosNew": fltNewCfgAclIpTosNew,
       "fltNewCfgFwlb": fltNewCfgFwlb,
       "fltNewCfgNatTimeout": fltNewCfgNatTimeout,
       "fltNewCfgLinklb": fltNewCfgLinklb,
       "fltNewCfgWapRadiusSnoop": fltNewCfgWapRadiusSnoop,
       "fltNewCfgSrcIpMac": fltNewCfgSrcIpMac,
       "fltNewCfgDstIpMac": fltNewCfgDstIpMac,
       "fltNewCfgIdslbHash": fltNewCfgIdslbHash,
       "fltNewCfgVlan": fltNewCfgVlan,
       "fltNewCfgName": fltNewCfgName,
       "fltNewCfgTcpRateLimit": fltNewCfgTcpRateLimit,
       "fltNewCfgTcpRateMaxConn": fltNewCfgTcpRateMaxConn,
       "fltNewCfgHash": fltNewCfgHash,
       "fltNewCfgLayer7DenyState": fltNewCfgLayer7DenyState,
       "fltNewCfgLayer7DenyUrlBmap": fltNewCfgLayer7DenyUrlBmap,
       "fltNewCfgLayer7DenyAddUrl": fltNewCfgLayer7DenyAddUrl,
       "fltNewCfgLayer7DenyRemUrl": fltNewCfgLayer7DenyRemUrl,
       "fltNewCfgGotoFilter": fltNewCfgGotoFilter,
       "fltNewCfgRadiusWapPersist": fltNewCfgRadiusWapPersist,
       "fltNewCfgPbind": fltNewCfgPbind,
       "fltNewCfgTimeWindow": fltNewCfgTimeWindow,
       "fltNewCfgHoldDuration": fltNewCfgHoldDuration,
       "fltNewCfgPatternMatch": fltNewCfgPatternMatch,
       "fltNewCfgLayer7DenyMatchAll": fltNewCfgLayer7DenyMatchAll,
       "fltNewCfgProxyIp": fltNewCfgProxyIp,
       "fltNewCfgLayer7ParseAll": fltNewCfgLayer7ParseAll,
       "fltNewCfgSecurityParseAll": fltNewCfgSecurityParseAll,
       "fltNewCfgPatternMatchGroupBmap": fltNewCfgPatternMatchGroupBmap,
       "fltNewCfgAddPatternMatchGroup": fltNewCfgAddPatternMatchGroup,
       "fltNewCfgRemPatternMatchGroup": fltNewCfgRemPatternMatchGroup,
       "fltNewCfg8021pBitsValue": fltNewCfg8021pBitsValue,
       "fltNewCfg8021pBitsMatch": fltNewCfg8021pBitsMatch,
       "fltNewCfgAclIpLength": fltNewCfgAclIpLength,
       "fltNewCfgIdsGroup": fltNewCfgIdsGroup,
       "fltNewCfgEgressPip": fltNewCfgEgressPip,
       "fltNewCfgDbind": fltNewCfgDbind,
       "fltNewCfgRevBwmContract": fltNewCfgRevBwmContract,
       "fltNewCfgReverse": fltNewCfgReverse,
       "fltNewCfgParseChn": fltNewCfgParseChn,
       "fltNewCfgRtpBwmContract": fltNewCfgRtpBwmContract,
       "fltNewCfgSipParsing": fltNewCfgSipParsing,
       "fltNewCfgSessionMirror": fltNewCfgSessionMirror,
       "fltNewCfgIpVer": fltNewCfgIpVer,
       "fltNewCfgIpv6Sip": fltNewCfgIpv6Sip,
       "fltNewCfgIpv6Sprefix": fltNewCfgIpv6Sprefix,
       "fltNewCfgIpv6Dip": fltNewCfgIpv6Dip,
       "fltNewCfgIpv6Dprefix": fltNewCfgIpv6Dprefix,
       "fltNewCfgHdrHash": fltNewCfgHdrHash,
       "fltNewCfgHdrName": fltNewCfgHdrName,
       "fltNewCfgHdrHashLen": fltNewCfgHdrHashLen,
       "fltNewCfgL3Filter": fltNewCfgL3Filter,
       "fltNewCfgNatIp": fltNewCfgNatIp,
       "fltNewCfgIpv6Nip": fltNewCfgIpv6Nip,
       "fltNewCfgIpv6Proxy": fltNewCfgIpv6Proxy,
       "fltNewCfgL7SipFilt": fltNewCfgL7SipFilt,
       "fltNewCfgNatMcastVlan": fltNewCfgNatMcastVlan,
       "fltNewCfgNbind": fltNewCfgNbind,
       "fltCurCfgPortTable": fltCurCfgPortTable,
       "fltCurCfgPortTableEntry": fltCurCfgPortTableEntry,
       "fltCurCfgPortIndx": fltCurCfgPortIndx,
       "fltCurCfgPortState": fltCurCfgPortState,
       "fltCurCfgPortFiltBmap": fltCurCfgPortFiltBmap,
       "fltNewCfgPortTable": fltNewCfgPortTable,
       "fltNewCfgPortTableEntry": fltNewCfgPortTableEntry,
       "fltNewCfgPortIndx": fltNewCfgPortIndx,
       "fltNewCfgPortState": fltNewCfgPortState,
       "fltNewCfgPortFiltBmap": fltNewCfgPortFiltBmap,
       "fltNewCfgPortAddFiltRule": fltNewCfgPortAddFiltRule,
       "fltNewCfgPortRemFiltRule": fltNewCfgPortRemFiltRule,
       "fltUrlBwmTableMaxSize": fltUrlBwmTableMaxSize,
       "fltCurCfgUrlBwmTable": fltCurCfgUrlBwmTable,
       "fltCurCfgUrlBwmEntry": fltCurCfgUrlBwmEntry,
       "fltCurCfgUrlBwmFltIndex": fltCurCfgUrlBwmFltIndex,
       "fltCurCfgUrlBwmUrlId": fltCurCfgUrlBwmUrlId,
       "fltCurCfgUrlBwmContract": fltCurCfgUrlBwmContract,
       "fltCurCfgUrlReverseBwmContract": fltCurCfgUrlReverseBwmContract,
       "fltNewCfgUrlBwmTable": fltNewCfgUrlBwmTable,
       "fltNewCfgUrlBwmEntry": fltNewCfgUrlBwmEntry,
       "fltNewCfgUrlBwmFltIndex": fltNewCfgUrlBwmFltIndex,
       "fltNewCfgUrlBwmUrlId": fltNewCfgUrlBwmUrlId,
       "fltNewCfgUrlBwmContract": fltNewCfgUrlBwmContract,
       "fltNewCfgUrlBwmDelete": fltNewCfgUrlBwmDelete,
       "fltNewCfgUrlReverseBwmContract": fltNewCfgUrlReverseBwmContract,
       "fltCfgHttpRedirMappingTableMaxSize": fltCfgHttpRedirMappingTableMaxSize,
       "fltCurCfgHttpRedirMappingTable": fltCurCfgHttpRedirMappingTable,
       "fltCurCfgHttpRedirMappingEntry": fltCurCfgHttpRedirMappingEntry,
       "fltCurCfgHttpRedirMappingFilter": fltCurCfgHttpRedirMappingFilter,
       "fltCurCfgHttpRedirMappingFromStr": fltCurCfgHttpRedirMappingFromStr,
       "fltCurCfgHttpRedirMappingToStr": fltCurCfgHttpRedirMappingToStr,
       "fltNewCfgHttpRedirMappingTable": fltNewCfgHttpRedirMappingTable,
       "fltNewCfgHttpRedirMappingEntry": fltNewCfgHttpRedirMappingEntry,
       "fltNewCfgHttpRedirMappingFilter": fltNewCfgHttpRedirMappingFilter,
       "fltNewCfgHttpRedirMappingFromStr": fltNewCfgHttpRedirMappingFromStr,
       "fltNewCfgHttpRedirMappingToStr": fltNewCfgHttpRedirMappingToStr,
       "fltNewCfgHttpRedirMappingDelete": fltNewCfgHttpRedirMappingDelete,
       "fltNewCfgExtendedTable": fltNewCfgExtendedTable,
       "fltNewCfgExtendedTableEntry": fltNewCfgExtendedTableEntry,
       "fltNewCfgExtendedIndx": fltNewCfgExtendedIndx,
       "fltNewCfgExtendedLayer7DenyState": fltNewCfgExtendedLayer7DenyState,
       "fltNewCfgExtendedLayer7DenyUrlBmap": fltNewCfgExtendedLayer7DenyUrlBmap,
       "fltNewCfgExtendedLayer7DenyAddUrl": fltNewCfgExtendedLayer7DenyAddUrl,
       "fltNewCfgExtendedLayer7DenyRemUrl": fltNewCfgExtendedLayer7DenyRemUrl,
       "fltNewCfgExtendedGotoFilter": fltNewCfgExtendedGotoFilter,
       "fltNewCfgExtendedRadiusWapPersist": fltNewCfgExtendedRadiusWapPersist,
       "fltNewCfgExtendedPbind": fltNewCfgExtendedPbind,
       "fltNewCfgExtendedTimeWindow": fltNewCfgExtendedTimeWindow,
       "fltNewCfgExtendedHoldDuration": fltNewCfgExtendedHoldDuration,
       "fltNewCfgExtendedPatternMatch": fltNewCfgExtendedPatternMatch,
       "fltNewCfgExtendedLayer7DenyMatchAll": fltNewCfgExtendedLayer7DenyMatchAll,
       "fltNewCfgExtendedProxyIp": fltNewCfgExtendedProxyIp,
       "fltNewCfgExtendedLayer7ParseAll": fltNewCfgExtendedLayer7ParseAll,
       "fltNewCfgExtendedSecurityParseAll": fltNewCfgExtendedSecurityParseAll,
       "fltNewCfgExtendedPatternMatchGroupBmap": fltNewCfgExtendedPatternMatchGroupBmap,
       "fltNewCfgExtendedAddPatternMatchGroup": fltNewCfgExtendedAddPatternMatchGroup,
       "fltNewCfgExtendedRemPatternMatchGroup": fltNewCfgExtendedRemPatternMatchGroup,
       "fltNewCfgExtended8021pBitsValue": fltNewCfgExtended8021pBitsValue,
       "fltNewCfgExtended8021pBitsMatch": fltNewCfgExtended8021pBitsMatch,
       "fltNewCfgExtendedAclIpLength": fltNewCfgExtendedAclIpLength,
       "fltNewCfgExtendedIdsGroup": fltNewCfgExtendedIdsGroup,
       "fltNewCfgExtendedEgressPip": fltNewCfgExtendedEgressPip,
       "fltNewCfgExtendedDbind": fltNewCfgExtendedDbind,
       "fltNewCfgExtendedRevBwmContract": fltNewCfgExtendedRevBwmContract,
       "fltNewCfgExtendedReverse": fltNewCfgExtendedReverse,
       "fltNewCfgExtendedParseChn": fltNewCfgExtendedParseChn,
       "fltNewCfgExtendedRtpBwmContract": fltNewCfgExtendedRtpBwmContract,
       "fltNewCfgExtendedSipParsing": fltNewCfgExtendedSipParsing,
       "fltNewCfgExtendedSessionMirror": fltNewCfgExtendedSessionMirror,
       "fltNewCfgExtendedIpVer": fltNewCfgExtendedIpVer,
       "fltNewCfgExtendedIpv6Sip": fltNewCfgExtendedIpv6Sip,
       "fltNewCfgExtendedIpv6Sprefix": fltNewCfgExtendedIpv6Sprefix,
       "fltNewCfgExtendedIpv6Dip": fltNewCfgExtendedIpv6Dip,
       "fltNewCfgExtendedIpv6Dprefix": fltNewCfgExtendedIpv6Dprefix,
       "fltNewCfgExtendedHdrHash": fltNewCfgExtendedHdrHash,
       "fltNewCfgExtendedHdrName": fltNewCfgExtendedHdrName,
       "fltNewCfgExtendedHdrHashLen": fltNewCfgExtendedHdrHashLen,
       "fltNewCfgExtendedNatIp": fltNewCfgExtendedNatIp,
       "fltNewCfgExtendedIpv6Nip": fltNewCfgExtendedIpv6Nip,
       "fltNewCfgExtendedIpv6Proxy": fltNewCfgExtendedIpv6Proxy,
       "fltNewCfgExtendedL7SipFilt": fltNewCfgExtendedL7SipFilt,
       "fltNewCfgExtendedNatMcastVlan": fltNewCfgExtendedNatMcastVlan,
       "fltNewCfgExtendedNbind": fltNewCfgExtendedNbind,
       "fltNewCfgExtendedL3State": fltNewCfgExtendedL3State,
       "gslbCfg": gslbCfg,
       "gslbGeneralCfg": gslbGeneralCfg,
       "gslbCurCfgGenState": gslbCurCfgGenState,
       "gslbNewCfgGenState": gslbNewCfgGenState,
       "gslbCurCfgGenHttpRedirect": gslbCurCfgGenHttpRedirect,
       "gslbNewCfgGenHttpRedirect": gslbNewCfgGenHttpRedirect,
       "gslbCurCfgGenMinco": gslbCurCfgGenMinco,
       "gslbNewCfgGenMinco": gslbNewCfgGenMinco,
       "gslbCurCfgGenUsern": gslbCurCfgGenUsern,
       "gslbNewCfgGenUsern": gslbNewCfgGenUsern,
       "gslbCurCfgGenNoremote": gslbCurCfgGenNoremote,
       "gslbNewCfgGenNoremote": gslbNewCfgGenNoremote,
       "gslbCurCfgGenEncrypt": gslbCurCfgGenEncrypt,
       "gslbNewCfgGenEncrypt": gslbNewCfgGenEncrypt,
       "gslbCurCfgGenRemSiteUpdatePort": gslbCurCfgGenRemSiteUpdatePort,
       "gslbNewCfgGenRemSiteUpdatePort": gslbNewCfgGenRemSiteUpdatePort,
       "gslbCurCfgGenSessUtilCap": gslbCurCfgGenSessUtilCap,
       "gslbNewCfgGenSessUtilCap": gslbNewCfgGenSessUtilCap,
       "gslbCurCfgGenCpuUtilCap": gslbCurCfgGenCpuUtilCap,
       "gslbNewCfgGenCpuUtilCap": gslbNewCfgGenCpuUtilCap,
       "gslbCurCfgGenSourceIpNetmask": gslbCurCfgGenSourceIpNetmask,
       "gslbNewCfgGenSourceIpNetmask": gslbNewCfgGenSourceIpNetmask,
       "gslbCurCfgGenTimeout": gslbCurCfgGenTimeout,
       "gslbNewCfgGenTimeout": gslbNewCfgGenTimeout,
       "gslbCurCfgGenDnsDirect": gslbCurCfgGenDnsDirect,
       "gslbNewCfgGenDnsDirect": gslbNewCfgGenDnsDirect,
       "gslbCurCfgGenRemSiteUpdateVersion": gslbCurCfgGenRemSiteUpdateVersion,
       "gslbNewCfgGenRemSiteUpdateVersion": gslbNewCfgGenRemSiteUpdateVersion,
       "gslbCurCfgGenHostname": gslbCurCfgGenHostname,
       "gslbNewCfgGenHostname": gslbNewCfgGenHostname,
       "gslbCurCfgGenRemSiteUpdateIntervalSeconds": gslbCurCfgGenRemSiteUpdateIntervalSeconds,
       "gslbNewCfgGenRemSiteUpdateIntervalSeconds": gslbNewCfgGenRemSiteUpdateIntervalSeconds,
       "gslbCurCfgGenNoResp": gslbCurCfgGenNoResp,
       "gslbNewCfgGenNoResp": gslbNewCfgGenNoResp,
       "gslbCurCfgProximityTime": gslbCurCfgProximityTime,
       "gslbNewCfgProximityTime": gslbNewCfgProximityTime,
       "gslbCurCfgProximityMask": gslbCurCfgProximityMask,
       "gslbNewCfgProximityMask": gslbNewCfgProximityMask,
       "gslbCurCfgProximityAge": gslbCurCfgProximityAge,
       "gslbNewCfgProximityAge": gslbNewCfgProximityAge,
       "gslbCurCfgGenSourceIpv6Prefix": gslbCurCfgGenSourceIpv6Prefix,
       "gslbNewCfgGenSourceIpv6Prefix": gslbNewCfgGenSourceIpv6Prefix,
       "gslbSitesCfg": gslbSitesCfg,
       "gslbRemSiteTableMaxSize": gslbRemSiteTableMaxSize,
       "gslbCurCfgRemSiteTable": gslbCurCfgRemSiteTable,
       "gslbCurCfgRemSiteTableEntry": gslbCurCfgRemSiteTableEntry,
       "gslbCurCfgRemSiteIndx": gslbCurCfgRemSiteIndx,
       "gslbCurCfgRemSitePrimaryIp": gslbCurCfgRemSitePrimaryIp,
       "gslbCurCfgRemSiteSecondaryIp": gslbCurCfgRemSiteSecondaryIp,
       "gslbCurCfgRemSiteState": gslbCurCfgRemSiteState,
       "gslbCurCfgRemSiteUpdate": gslbCurCfgRemSiteUpdate,
       "gslbCurCfgRemSiteName": gslbCurCfgRemSiteName,
       "gslbCurCfgRemSitePrimaryIPVer": gslbCurCfgRemSitePrimaryIPVer,
       "gslbCurCfgRemSitePrimaryIp6": gslbCurCfgRemSitePrimaryIp6,
       "gslbCurCfgRemSiteSecondaryIPVer": gslbCurCfgRemSiteSecondaryIPVer,
       "gslbCurCfgRemSiteSecondaryIp6": gslbCurCfgRemSiteSecondaryIp6,
       "gslbNewCfgRemSiteTable": gslbNewCfgRemSiteTable,
       "gslbNewCfgRemSiteTableEntry": gslbNewCfgRemSiteTableEntry,
       "gslbNewCfgRemSiteIndx": gslbNewCfgRemSiteIndx,
       "gslbNewCfgRemSitePrimaryIp": gslbNewCfgRemSitePrimaryIp,
       "gslbNewCfgRemSiteSecondaryIp": gslbNewCfgRemSiteSecondaryIp,
       "gslbNewCfgRemSiteState": gslbNewCfgRemSiteState,
       "gslbNewCfgRemSiteUpdate": gslbNewCfgRemSiteUpdate,
       "gslbNewCfgRemSiteDelete": gslbNewCfgRemSiteDelete,
       "gslbNewCfgRemSiteName": gslbNewCfgRemSiteName,
       "gslbNewCfgRemSitePrimaryIPVer": gslbNewCfgRemSitePrimaryIPVer,
       "gslbNewCfgRemSitePrimaryIp6": gslbNewCfgRemSitePrimaryIp6,
       "gslbNewCfgRemSiteSecondaryIPVer": gslbNewCfgRemSiteSecondaryIPVer,
       "gslbNewCfgRemSiteSecondaryIp6": gslbNewCfgRemSiteSecondaryIp6,
       "gslbEnhNetworkCfg": gslbEnhNetworkCfg,
       "gslbEnhNetworkTableMaxSize": gslbEnhNetworkTableMaxSize,
       "gslbCurCfgEnhNetworkTable": gslbCurCfgEnhNetworkTable,
       "gslbCurCfgEnhNetworkTableEntry": gslbCurCfgEnhNetworkTableEntry,
       "gslbCurCfgEnhNetworkIndx": gslbCurCfgEnhNetworkIndx,
       "gslbCurCfgEnhNetworkState": gslbCurCfgEnhNetworkState,
       "gslbCurCfgEnhNetworkSourceIp": gslbCurCfgEnhNetworkSourceIp,
       "gslbCurCfgEnhNetworkNetMask": gslbCurCfgEnhNetworkNetMask,
       "gslbCurCfgEnhNetworkVirtServer": gslbCurCfgEnhNetworkVirtServer,
       "gslbCurCfgEnhNetworkRemRealServer": gslbCurCfgEnhNetworkRemRealServer,
       "gslbCurCfgEnhNetworkSourceIpV6": gslbCurCfgEnhNetworkSourceIpV6,
       "gslbCurCfgEnhNetworkVer": gslbCurCfgEnhNetworkVer,
       "gslbCurCfgEnhNetworkSprefix": gslbCurCfgEnhNetworkSprefix,
       "gslbNewCfgEnhNetworkTable": gslbNewCfgEnhNetworkTable,
       "gslbNewCfgEnhNetworkTableEntry": gslbNewCfgEnhNetworkTableEntry,
       "gslbNewCfgEnhNetworkIndx": gslbNewCfgEnhNetworkIndx,
       "gslbNewCfgEnhNetworkState": gslbNewCfgEnhNetworkState,
       "gslbNewCfgEnhNetworkSourceIp": gslbNewCfgEnhNetworkSourceIp,
       "gslbNewCfgEnhNetworkNetMask": gslbNewCfgEnhNetworkNetMask,
       "gslbNewCfgEnhNetworkDelete": gslbNewCfgEnhNetworkDelete,
       "gslbNewCfgEnhNetworkVirtServer": gslbNewCfgEnhNetworkVirtServer,
       "gslbNewCfgEnhNetworkRemRealServer": gslbNewCfgEnhNetworkRemRealServer,
       "gslbNewCfgEnhNetworkAddVirtServer": gslbNewCfgEnhNetworkAddVirtServer,
       "gslbNewCfgEnhNetworkRemoveVirtServer": gslbNewCfgEnhNetworkRemoveVirtServer,
       "gslbNewCfgEnhNetworkAddRemRealServer": gslbNewCfgEnhNetworkAddRemRealServer,
       "gslbNewCfgEnhNetworkRemoveRemRealServer": gslbNewCfgEnhNetworkRemoveRemRealServer,
       "gslbNewCfgEnhNetworkSourceIpV6": gslbNewCfgEnhNetworkSourceIpV6,
       "gslbNewCfgEnhNetworkVer": gslbNewCfgEnhNetworkVer,
       "gslbNewCfgEnhNetworkSprefix": gslbNewCfgEnhNetworkSprefix,
       "gslbRuleCfg": gslbRuleCfg,
       "gslbRuleTableMaxSize": gslbRuleTableMaxSize,
       "gslbCurCfgRuleTable": gslbCurCfgRuleTable,
       "gslbCurCfgRuleTableEntry": gslbCurCfgRuleTableEntry,
       "gslbCurCfgRuleIndx": gslbCurCfgRuleIndx,
       "gslbCurCfgRuleState": gslbCurCfgRuleState,
       "gslbCurCfgRuleStartHour": gslbCurCfgRuleStartHour,
       "gslbCurCfgRuleStartMin": gslbCurCfgRuleStartMin,
       "gslbCurCfgRuleEndHour": gslbCurCfgRuleEndHour,
       "gslbCurCfgRuleEndMin": gslbCurCfgRuleEndMin,
       "gslbCurCfgRuleTTL": gslbCurCfgRuleTTL,
       "gslbCurCfgRuleRR": gslbCurCfgRuleRR,
       "gslbCurCfgRuleDname": gslbCurCfgRuleDname,
       "gslbNewCfgRuleTable": gslbNewCfgRuleTable,
       "gslbNewCfgRuleTableEntry": gslbNewCfgRuleTableEntry,
       "gslbNewCfgRuleIndx": gslbNewCfgRuleIndx,
       "gslbNewCfgRuleState": gslbNewCfgRuleState,
       "gslbNewCfgRuleStartHour": gslbNewCfgRuleStartHour,
       "gslbNewCfgRuleStartMin": gslbNewCfgRuleStartMin,
       "gslbNewCfgRuleEndHour": gslbNewCfgRuleEndHour,
       "gslbNewCfgRuleEndMin": gslbNewCfgRuleEndMin,
       "gslbNewCfgRuleTTL": gslbNewCfgRuleTTL,
       "gslbNewCfgRuleRR": gslbNewCfgRuleRR,
       "gslbNewCfgRuleDelete": gslbNewCfgRuleDelete,
       "gslbNewCfgRuleDname": gslbNewCfgRuleDname,
       "gslbMetricTableMaxSize": gslbMetricTableMaxSize,
       "gslbCurCfgMetricTable": gslbCurCfgMetricTable,
       "gslbCurCfgMetricTableEntry": gslbCurCfgMetricTableEntry,
       "gslbCurCfgRuleMetricIndx": gslbCurCfgRuleMetricIndx,
       "gslbCurCfgMetricIndx": gslbCurCfgMetricIndx,
       "gslbCurCfgMetricMetric": gslbCurCfgMetricMetric,
       "gslbCurCfgMetricNetworkBmap": gslbCurCfgMetricNetworkBmap,
       "gslbNewCfgMetricTable": gslbNewCfgMetricTable,
       "gslbNewCfgMetricTableEntry": gslbNewCfgMetricTableEntry,
       "gslbNewCfgRuleMetricIndx": gslbNewCfgRuleMetricIndx,
       "gslbNewCfgMetricIndx": gslbNewCfgMetricIndx,
       "gslbNewCfgMetricMetric": gslbNewCfgMetricMetric,
       "gslbNewCfgMetricNetworkBmap": gslbNewCfgMetricNetworkBmap,
       "gslbNewCfgMetricAddNetwork": gslbNewCfgMetricAddNetwork,
       "gslbNewCfgMetricRemNetwork": gslbNewCfgMetricRemNetwork,
       "gslbDnsSecCfg": gslbDnsSecCfg,
       "gslbDnsSecGlobalCfg": gslbDnsSecGlobalCfg,
       "gslbCurCfgDnsSecGlobalEnabled": gslbCurCfgDnsSecGlobalEnabled,
       "gslbNewCfgDnsSecGlobalEnabled": gslbNewCfgDnsSecGlobalEnabled,
       "gslbCurCfgDnsSecGlobalRollTm": gslbCurCfgDnsSecGlobalRollTm,
       "gslbNewCfgDnsSecGlobalRollTm": gslbNewCfgDnsSecGlobalRollTm,
       "gslbCurCfgDnsSecGlobalType": gslbCurCfgDnsSecGlobalType,
       "gslbNewCfgDnsSecGlobalType": gslbNewCfgDnsSecGlobalType,
       "gslbCurCfgDnsSecGlobalKskRollTm": gslbCurCfgDnsSecGlobalKskRollTm,
       "gslbNewCfgDnsSecGlobalKskRollTm": gslbNewCfgDnsSecGlobalKskRollTm,
       "gslbCurCfgDnsSecGlobalNsec3SaltLen": gslbCurCfgDnsSecGlobalNsec3SaltLen,
       "gslbNewCfgDnsSecGlobalNsec3SaltLen": gslbNewCfgDnsSecGlobalNsec3SaltLen,
       "gslbCurCfgDnsSecGlobalNsec3SaltLifetime": gslbCurCfgDnsSecGlobalNsec3SaltLifetime,
       "gslbNewCfgDnsSecGlobalNsec3SaltLifetime": gslbNewCfgDnsSecGlobalNsec3SaltLifetime,
       "gslbCurCfgDnsSecGlobalNsec3HashIterations": gslbCurCfgDnsSecGlobalNsec3HashIterations,
       "gslbNewCfgDnsSecGlobalNsec3HashIterations": gslbNewCfgDnsSecGlobalNsec3HashIterations,
       "gslbCurCfgDnsSecGlobalSMPTServerUserName": gslbCurCfgDnsSecGlobalSMPTServerUserName,
       "gslbNewCfgDnsSecGlobalSMPTServerUserName": gslbNewCfgDnsSecGlobalSMPTServerUserName,
       "gslbDnsSecKeyCfg": gslbDnsSecKeyCfg,
       "gslbCurDnsSecKeyTable": gslbCurDnsSecKeyTable,
       "gslbCurDnsSecKeyEntry": gslbCurDnsSecKeyEntry,
       "gslbCurDnsSecKeyID": gslbCurDnsSecKeyID,
       "gslbCurDnsSecKeyUseCount": gslbCurDnsSecKeyUseCount,
       "gslbCurDnsSecKeyType": gslbCurDnsSecKeyType,
       "gslbCurDnsSecKeyStatus": gslbCurDnsSecKeyStatus,
       "gslbCurDnsSecKeySize": gslbCurDnsSecKeySize,
       "gslbCurDnsSecKeyAlgo": gslbCurDnsSecKeyAlgo,
       "gslbCurDnsSecKeyTTL": gslbCurDnsSecKeyTTL,
       "gslbCurDnsSecKeyExpPeriod": gslbCurDnsSecKeyExpPeriod,
       "gslbCurDnsSecKeyRollOverPeriod": gslbCurDnsSecKeyRollOverPeriod,
       "gslbCurDnsSecKeyValidityPeriod": gslbCurDnsSecKeyValidityPeriod,
       "gslbCurDnsSecKeyPublicationPeriod": gslbCurDnsSecKeyPublicationPeriod,
       "gslbNewDnsSecKeyTable": gslbNewDnsSecKeyTable,
       "gslbNewDnsSecKeyEntry": gslbNewDnsSecKeyEntry,
       "gslbNewDnsSecKeyID": gslbNewDnsSecKeyID,
       "gslbNewDnsSecKeyUseCount": gslbNewDnsSecKeyUseCount,
       "gslbNewDnsSecKeyType": gslbNewDnsSecKeyType,
       "gslbNewDnsSecKeyStatus": gslbNewDnsSecKeyStatus,
       "gslbNewDnsSecKeySize": gslbNewDnsSecKeySize,
       "gslbNewDnsSecKeyAlgo": gslbNewDnsSecKeyAlgo,
       "gslbNewDnsSecKeyTTL": gslbNewDnsSecKeyTTL,
       "gslbNewDnsSecKeyExpPeriod": gslbNewDnsSecKeyExpPeriod,
       "gslbNewDnsSecKeyRollOverPeriod": gslbNewDnsSecKeyRollOverPeriod,
       "gslbNewDnsSecKeyValidityPeriod": gslbNewDnsSecKeyValidityPeriod,
       "gslbNewDnsSecKeyPublicationPeriod": gslbNewDnsSecKeyPublicationPeriod,
       "gslbNewDnsSecKeyDelete": gslbNewDnsSecKeyDelete,
       "gslbNewDnsSecKeyGenerate": gslbNewDnsSecKeyGenerate,
       "gslbNewDnsSecKeyGenerateStatus": gslbNewDnsSecKeyGenerateStatus,
       "gslbDnsSecZoneCfg": gslbDnsSecZoneCfg,
       "gslbCurDnsSecZoneTable": gslbCurDnsSecZoneTable,
       "gslbCurDnsSecZoneEntry": gslbCurDnsSecZoneEntry,
       "gslbCurDnsSecZoneID": gslbCurDnsSecZoneID,
       "gslbCurDnsSecZoneName": gslbCurDnsSecZoneName,
       "gslbCurDnsSecZoneKSK1": gslbCurDnsSecZoneKSK1,
       "gslbCurDnsSecZoneKSK2": gslbCurDnsSecZoneKSK2,
       "gslbCurDnsSecZoneKSK3": gslbCurDnsSecZoneKSK3,
       "gslbCurDnsSecZoneZSK1": gslbCurDnsSecZoneZSK1,
       "gslbCurDnsSecZoneZSK2": gslbCurDnsSecZoneZSK2,
       "gslbCurDnsSecZoneZSK3": gslbCurDnsSecZoneZSK3,
       "gslbCurDnsSecZoneStatus": gslbCurDnsSecZoneStatus,
       "gslbCurDnsSecZoneParentIPVer": gslbCurDnsSecZoneParentIPVer,
       "gslbCurDnsSecZoneParentIPv4": gslbCurDnsSecZoneParentIPv4,
       "gslbCurDnsSecZoneParentIPv6": gslbCurDnsSecZoneParentIPv6,
       "gslbNewDnsSecZoneTable": gslbNewDnsSecZoneTable,
       "gslbNewDnsSecZoneEntry": gslbNewDnsSecZoneEntry,
       "gslbNewDnsSecZoneID": gslbNewDnsSecZoneID,
       "gslbNewDnsSecZoneName": gslbNewDnsSecZoneName,
       "gslbNewDnsSecZoneKSK1": gslbNewDnsSecZoneKSK1,
       "gslbNewDnsSecZoneKSK2": gslbNewDnsSecZoneKSK2,
       "gslbNewDnsSecZoneKSK3": gslbNewDnsSecZoneKSK3,
       "gslbNewDnsSecZoneZSK1": gslbNewDnsSecZoneZSK1,
       "gslbNewDnsSecZoneZSK2": gslbNewDnsSecZoneZSK2,
       "gslbNewDnsSecZoneZSK3": gslbNewDnsSecZoneZSK3,
       "gslbNewDnsSecZoneStatus": gslbNewDnsSecZoneStatus,
       "gslbNewDnsSecZoneParentIPVer": gslbNewDnsSecZoneParentIPVer,
       "gslbNewDnsSecZoneParentIPv4": gslbNewDnsSecZoneParentIPv4,
       "gslbNewDnsSecZoneParentIPv6": gslbNewDnsSecZoneParentIPv6,
       "gslbNewDnsSecZoneDelete": gslbNewDnsSecZoneDelete,
       "gslbDnsSecImportExport": gslbDnsSecImportExport,
       "gslbDnsSecImportExportSCPHostName": gslbDnsSecImportExportSCPHostName,
       "gslbDnsSecImportExportSCPFileName": gslbDnsSecImportExportSCPFileName,
       "gslbDnsSecImportExportSCPUserName": gslbDnsSecImportExportSCPUserName,
       "gslbDnsSecImportExportSCPPassword": gslbDnsSecImportExportSCPPassword,
       "gslbDnsSecImportExportKeyID": gslbDnsSecImportExportKeyID,
       "gslbDnsSecImportExportZoneID": gslbDnsSecImportExportZoneID,
       "gslbDnsSecImportExportPassphrase": gslbDnsSecImportExportPassphrase,
       "gslbDnsSecImportExportComponentType": gslbDnsSecImportExportComponentType,
       "gslbDnsSecImportExportPortType": gslbDnsSecImportExportPortType,
       "gslbDnsSecImportExportImpKeyType": gslbDnsSecImportExportImpKeyType,
       "gslbDnsSecImportExportImpKeyStatus": gslbDnsSecImportExportImpKeyStatus,
       "gslbDnsSecImportExportImpKeySize": gslbDnsSecImportExportImpKeySize,
       "gslbDnsSecImportExportImpKeyAlgo": gslbDnsSecImportExportImpKeyAlgo,
       "gslbDnsSecImportExportImpKeyTTL": gslbDnsSecImportExportImpKeyTTL,
       "gslbDnsSecImportExportImpKeyExpPeriod": gslbDnsSecImportExportImpKeyExpPeriod,
       "gslbDnsSecImportExportImpKeyRollOverPeriod": gslbDnsSecImportExportImpKeyRollOverPeriod,
       "gslbDnsSecImportExportImpKeyValidityPeriod": gslbDnsSecImportExportImpKeyValidityPeriod,
       "gslbDnsSecImportExportImpKeyPublicationPeriod": gslbDnsSecImportExportImpKeyPublicationPeriod,
       "gslbDnsSecImportExportAction": gslbDnsSecImportExportAction,
       "gslbDnsResVipCfg": gslbDnsResVipCfg,
       "gslbCurDnsResVipTable": gslbCurDnsResVipTable,
       "gslbCurDnsResVipEntry": gslbCurDnsResVipEntry,
       "gslbCurDnsResVipIndex1": gslbCurDnsResVipIndex1,
       "gslbCurDnsResVipIndex2": gslbCurDnsResVipIndex2,
       "gslbCurDnsResVipName": gslbCurDnsResVipName,
       "gslbCurDnsResVipIPVer": gslbCurDnsResVipIPVer,
       "gslbCurDnsResVipV4": gslbCurDnsResVipV4,
       "gslbCurDnsResVipV6": gslbCurDnsResVipV6,
       "gslbCurDnsResVipStatus": gslbCurDnsResVipStatus,
       "gslbNewDnsResVipTable": gslbNewDnsResVipTable,
       "gslbNewDnsResVipEntry": gslbNewDnsResVipEntry,
       "gslbNewDnsResVipIndex1": gslbNewDnsResVipIndex1,
       "gslbNewDnsResVipIndex2": gslbNewDnsResVipIndex2,
       "gslbNewDnsResVipName": gslbNewDnsResVipName,
       "gslbNewDnsResVipIPVer": gslbNewDnsResVipIPVer,
       "gslbNewDnsResVipV4": gslbNewDnsResVipV4,
       "gslbNewDnsResVipV6": gslbNewDnsResVipV6,
       "gslbNewDnsResVipStatus": gslbNewDnsResVipStatus,
       "gslbNewDnsResVipDelete": gslbNewDnsResVipDelete,
       "gslbDnsResVipEmptyIndexesTable": gslbDnsResVipEmptyIndexesTable,
       "gslbDnsResVipEmptyIndexesEntry": gslbDnsResVipEmptyIndexesEntry,
       "gslbDnsResVipEmptyIndexesIndex": gslbDnsResVipEmptyIndexesIndex,
       "layer4TableSize": layer4TableSize,
       "curCfgFilterTableSize": curCfgFilterTableSize,
       "newCfgFilterTableSize": newCfgFilterTableSize,
       "curCfgRealServerTableSize": curCfgRealServerTableSize,
       "newCfgRealServerTableSize": newCfgRealServerTableSize,
       "curCfgRealServerGroupTableSize": curCfgRealServerGroupTableSize,
       "newCfgRealServerGroupTableSize": newCfgRealServerGroupTableSize,
       "curCfgVirtServerTableSize": curCfgVirtServerTableSize,
       "newCfgVirtServerTableSize": newCfgVirtServerTableSize,
       "wlmCfg": wlmCfg,
       "slbWlmTableMaxSize": slbWlmTableMaxSize,
       "slbCurCfgWlmTable": slbCurCfgWlmTable,
       "slbCurCfgWlmEntry": slbCurCfgWlmEntry,
       "slbCurCfgWlmIndex": slbCurCfgWlmIndex,
       "slbCurCfgWlmIpAddr": slbCurCfgWlmIpAddr,
       "slbCurCfgWlmPort": slbCurCfgWlmPort,
       "slbCurCfgWlmGroups": slbCurCfgWlmGroups,
       "slbCurCfgWlmState": slbCurCfgWlmState,
       "slbNewCfgWlmTable": slbNewCfgWlmTable,
       "slbNewCfgWlmEntry": slbNewCfgWlmEntry,
       "slbNewCfgWlmIndex": slbNewCfgWlmIndex,
       "slbNewCfgWlmIpAddr": slbNewCfgWlmIpAddr,
       "slbNewCfgWlmPort": slbNewCfgWlmPort,
       "slbNewCfgWlmDelete": slbNewCfgWlmDelete,
       "slbNewCfgWlmGroups": slbNewCfgWlmGroups,
       "slbNewCfgWlmState": slbNewCfgWlmState,
       "layer4Stats": layer4Stats,
       "slbSpStats": slbSpStats,
       "slbStatSpRealServerTable": slbStatSpRealServerTable,
       "slbStatSpRealServerEntry": slbStatSpRealServerEntry,
       "slbStatSpRealServerSpIndex": slbStatSpRealServerSpIndex,
       "slbStatSpRealServerServerIndex": slbStatSpRealServerServerIndex,
       "slbStatSpRealServerCurrSessions": slbStatSpRealServerCurrSessions,
       "slbStatSpRealServerTotalSessions": slbStatSpRealServerTotalSessions,
       "slbStatSpRealServerHCOctetsLow32": slbStatSpRealServerHCOctetsLow32,
       "slbStatSpRealServerHCOctetsHigh32": slbStatSpRealServerHCOctetsHigh32,
       "slbStatSpRealServerHCOctets": slbStatSpRealServerHCOctets,
       "slbStatSpFltTable": slbStatSpFltTable,
       "slbStatSpFltEntry": slbStatSpFltEntry,
       "slbStatSpFltSpIndex": slbStatSpFltSpIndex,
       "slbStatSpFltIndex": slbStatSpFltIndex,
       "slbStatSpFltFirings": slbStatSpFltFirings,
       "slbStatSpMaintTable": slbStatSpMaintTable,
       "slbStatSpMaintEntry": slbStatSpMaintEntry,
       "slbStatSpMaintSpIndex": slbStatSpMaintSpIndex,
       "slbStatSpMaintMaximumSessions": slbStatSpMaintMaximumSessions,
       "slbStatSpMaintCurBindings": slbStatSpMaintCurBindings,
       "slbStatSpMaintCurBindings4Seconds": slbStatSpMaintCurBindings4Seconds,
       "slbStatSpMaintCurBindings64Seconds": slbStatSpMaintCurBindings64Seconds,
       "slbStatSpMaintTerminatedSessions": slbStatSpMaintTerminatedSessions,
       "slbStatSpMaintBindingFails": slbStatSpMaintBindingFails,
       "slbStatSpMaintNonTcpFrames": slbStatSpMaintNonTcpFrames,
       "slbStatSpMaintTcpFragments": slbStatSpMaintTcpFragments,
       "slbStatSpMaintUdpDatagrams": slbStatSpMaintUdpDatagrams,
       "slbStatSpMaintIncorrectVIPs": slbStatSpMaintIncorrectVIPs,
       "slbStatSpMaintIncorrectVports": slbStatSpMaintIncorrectVports,
       "slbStatSpMaintRealServerNoAvails": slbStatSpMaintRealServerNoAvails,
       "slbStatSpMaintFilteredDeniedFrames": slbStatSpMaintFilteredDeniedFrames,
       "slbStatSpMaintLandAttacks": slbStatSpMaintLandAttacks,
       "slbStatSpMaintIpFragTotalSessions": slbStatSpMaintIpFragTotalSessions,
       "slbStatSpMaintIpFragCurSessions": slbStatSpMaintIpFragCurSessions,
       "slbStatSpMaintIpFragDiscards": slbStatSpMaintIpFragDiscards,
       "slbStatSpMaintIpFragTableFull": slbStatSpMaintIpFragTableFull,
       "slbStatSpMaintClear": slbStatSpMaintClear,
       "slbStatSpMaintOOSFinPktDrops": slbStatSpMaintOOSFinPktDrops,
       "slbStatSpMaintSymSessions": slbStatSpMaintSymSessions,
       "slbStatSpMaintSymValidSegments": slbStatSpMaintSymValidSegments,
       "slbStatSpMaintSymFragSessions": slbStatSpMaintSymFragSessions,
       "slbStatSpMaintSymSegAllocFails": slbStatSpMaintSymSegAllocFails,
       "slbStatSpMaintSymBufferAllocFails": slbStatSpMaintSymBufferAllocFails,
       "slbStatSpMaintSymConnAllocFails": slbStatSpMaintSymConnAllocFails,
       "slbStatSpMaintSymInvalidBuffers": slbStatSpMaintSymInvalidBuffers,
       "slbStatSpMaintSymSegReallocFails": slbStatSpMaintSymSegReallocFails,
       "slbStatSpMaintSymPacketsIn": slbStatSpMaintSymPacketsIn,
       "slbStatSpMaintSymPacketsWithNoData": slbStatSpMaintSymPacketsWithNoData,
       "slbStatSpMaintSymTcpPackets": slbStatSpMaintSymTcpPackets,
       "slbStatSpMaintSymUdpPackets": slbStatSpMaintSymUdpPackets,
       "slbStatSpMaintSymIcmpPackets": slbStatSpMaintSymIcmpPackets,
       "slbStatSpMaintSymOtherPackets": slbStatSpMaintSymOtherPackets,
       "slbStatSpMaintSymMatchCount": slbStatSpMaintSymMatchCount,
       "slbStatSpMaintSymFetchErrors": slbStatSpMaintSymFetchErrors,
       "slbStatSpMaintSymTruncPayloadToMp": slbStatSpMaintSymTruncPayloadToMp,
       "slbStatSpMaintSymPacketsInFastPath": slbStatSpMaintSymPacketsInFastPath,
       "slbStatSpAuxSessTable": slbStatSpAuxSessTable,
       "slbStatSpAuxSessEntry": slbStatSpAuxSessEntry,
       "slbStatSpAuxSessSpIndex": slbStatSpAuxSessSpIndex,
       "slbStatSpAuxSessIndex": slbStatSpAuxSessIndex,
       "slbStatSpAuxSessCurConn": slbStatSpAuxSessCurConn,
       "slbStatSpAuxSessMaxConn": slbStatSpAuxSessMaxConn,
       "slbStatSpAuxSessAllocFails": slbStatSpAuxSessAllocFails,
       "slbStatRServerTable": slbStatRServerTable,
       "slbStatRServerEntry": slbStatRServerEntry,
       "slbStatRServerIndex": slbStatRServerIndex,
       "slbStatRServerCurrSessions": slbStatRServerCurrSessions,
       "slbStatRServerTotalSessions": slbStatRServerTotalSessions,
       "slbStatRServerFailures": slbStatRServerFailures,
       "slbStatRServerHighestSessions": slbStatRServerHighestSessions,
       "slbStatRServerHCOctetsLow32": slbStatRServerHCOctetsLow32,
       "slbStatRServerHCOctetsHigh32": slbStatRServerHCOctetsHigh32,
       "slbStatRServerHCOctets": slbStatRServerHCOctets,
       "slbStatGroupTable": slbStatGroupTable,
       "slbStatGroupEntry": slbStatGroupEntry,
       "slbStatGroupIndex": slbStatGroupIndex,
       "slbStatGroupCurrSessions": slbStatGroupCurrSessions,
       "slbStatGroupTotalSessions": slbStatGroupTotalSessions,
       "slbStatGroupHighestSessions": slbStatGroupHighestSessions,
       "slbStatGroupHCOctetsLow32": slbStatGroupHCOctetsLow32,
       "slbStatGroupHCOctetsHigh32": slbStatGroupHCOctetsHigh32,
       "slbStatGroupHCOctets": slbStatGroupHCOctets,
       "slbStatGroupWlmUpdates": slbStatGroupWlmUpdates,
       "slbStatVServerTable": slbStatVServerTable,
       "slbStatVServerEntry": slbStatVServerEntry,
       "slbStatVServerIndex": slbStatVServerIndex,
       "slbStatVServerCurrSessions": slbStatVServerCurrSessions,
       "slbStatVServerTotalSessions": slbStatVServerTotalSessions,
       "slbStatVServerHighestSessions": slbStatVServerHighestSessions,
       "slbStatVServerHCOctetsLow32": slbStatVServerHCOctetsLow32,
       "slbStatVServerHCOctetsHigh32": slbStatVServerHCOctetsHigh32,
       "slbStatVServerHeaderHits": slbStatVServerHeaderHits,
       "slbStatVServerHeaderMisses": slbStatVServerHeaderMisses,
       "slbStatVServerHeaderTotalSessions": slbStatVServerHeaderTotalSessions,
       "slbStatVServerCookieRewrites": slbStatVServerCookieRewrites,
       "slbStatVServerCookieInserts": slbStatVServerCookieInserts,
       "slbStatVServerHCOctets": slbStatVServerHCOctets,
       "slbStatVServerIpAddress": slbStatVServerIpAddress,
       "slbMaintStats": slbMaintStats,
       "slbStatMaintMaximumSessions": slbStatMaintMaximumSessions,
       "slbStatMaintCurBindings": slbStatMaintCurBindings,
       "slbStatMaintCurBindings4Seconds": slbStatMaintCurBindings4Seconds,
       "slbStatMaintCurBindings64Seconds": slbStatMaintCurBindings64Seconds,
       "slbStatMaintTerminatedSessions": slbStatMaintTerminatedSessions,
       "slbStatMaintAllocFailures": slbStatMaintAllocFailures,
       "slbStatMaintNonTcpFrames": slbStatMaintNonTcpFrames,
       "slbStatMaintTcpFragments": slbStatMaintTcpFragments,
       "slbStatMaintUdpDatagrams": slbStatMaintUdpDatagrams,
       "slbIncorrectVirtServs": slbIncorrectVirtServs,
       "slbIncorrectVports": slbIncorrectVports,
       "slbNoRealServs": slbNoRealServs,
       "slbStatMaintBackupServActs": slbStatMaintBackupServActs,
       "slbStatMaintOverflowServActs": slbStatMaintOverflowServActs,
       "slbStatMaintFilteredDeniedFrames": slbStatMaintFilteredDeniedFrames,
       "slbStatMaintLandAttacks": slbStatMaintLandAttacks,
       "slbStatMaintIpFragTotalSessions": slbStatMaintIpFragTotalSessions,
       "slbStatMaintIpFragCurSessions": slbStatMaintIpFragCurSessions,
       "slbStatMaintIpFragDiscards": slbStatMaintIpFragDiscards,
       "slbStatMaintIpFragTableFull": slbStatMaintIpFragTableFull,
       "slbStatMaintIp6CurrSessions": slbStatMaintIp6CurrSessions,
       "slbIncorrectIp6Vip": slbIncorrectIp6Vip,
       "slbIncorrectIp6Vports": slbIncorrectIp6Vports,
       "slbStatMaintIp6PktDropped": slbStatMaintIp6PktDropped,
       "slbStatMaintOOSFinPktDrops": slbStatMaintOOSFinPktDrops,
       "slbStatMaintSymSessions": slbStatMaintSymSessions,
       "slbStatMaintSymValidSegments": slbStatMaintSymValidSegments,
       "slbStatMaintSymFragSessions": slbStatMaintSymFragSessions,
       "slbStatMaintSymSegAllocFails": slbStatMaintSymSegAllocFails,
       "slbStatMaintSymBufferAllocFails": slbStatMaintSymBufferAllocFails,
       "slbStatMaintSymConnAllocFails": slbStatMaintSymConnAllocFails,
       "slbStatMaintSymInvalidBuffers": slbStatMaintSymInvalidBuffers,
       "slbStatMaintSymSegReallocFails": slbStatMaintSymSegReallocFails,
       "slbStatMaintSymPacketsIn": slbStatMaintSymPacketsIn,
       "slbStatMaintSymPacketsWithNoData": slbStatMaintSymPacketsWithNoData,
       "slbStatMaintSymTcpPackets": slbStatMaintSymTcpPackets,
       "slbStatMaintSymUdpPackets": slbStatMaintSymUdpPackets,
       "slbStatMaintSymIcmpPackets": slbStatMaintSymIcmpPackets,
       "slbStatMaintSymOtherPackets": slbStatMaintSymOtherPackets,
       "slbStatMaintSymMatchCount": slbStatMaintSymMatchCount,
       "slbStatMaintSymFetchErrors": slbStatMaintSymFetchErrors,
       "slbStatMaintSymTruncPayloadToMp": slbStatMaintSymTruncPayloadToMp,
       "slbStatMaintSymPacketsInFastPath": slbStatMaintSymPacketsInFastPath,
       "filterStats": filterStats,
       "fltStatTable": fltStatTable,
       "fltStatTableEntry": fltStatTableEntry,
       "fltStatFltIndex": fltStatFltIndex,
       "fltStatFltFirings": fltStatFltFirings,
       "gslbStats": gslbStats,
       "gslbStatRemRealServerTable": gslbStatRemRealServerTable,
       "gslbStatRemRealServerEntry": gslbStatRemRealServerEntry,
       "gslbStatRemRealServerIndex": gslbStatRemRealServerIndex,
       "gslbStatRemRealServerDnsHandoffs": gslbStatRemRealServerDnsHandoffs,
       "gslbStatRemRealServerHttpRedirs": gslbStatRemRealServerHttpRedirs,
       "gslbMaintStats": gslbMaintStats,
       "gslbStatMaintInGoodSiteUpdates": gslbStatMaintInGoodSiteUpdates,
       "gslbStatMaintInBadSiteUpdates": gslbStatMaintInBadSiteUpdates,
       "gslbStatMaintOutSiteUpdates": gslbStatMaintOutSiteUpdates,
       "gslbStatMaintInGoodSiteUpdates2": gslbStatMaintInGoodSiteUpdates2,
       "gslbStatMaintOutSiteUpdates2": gslbStatMaintOutSiteUpdates2,
       "gslbStatMaintLocalSitePers": gslbStatMaintLocalSitePers,
       "gslbStatMaintInDns": gslbStatMaintInDns,
       "gslbStatMaintInBadDns": gslbStatMaintInBadDns,
       "gslbStatMaintOutDns": gslbStatMaintOutDns,
       "gslbStatMaintInHttp": gslbStatMaintInHttp,
       "gslbStatMaintInBadHttp": gslbStatMaintInBadHttp,
       "gslbStatMaintOutHttp": gslbStatMaintOutHttp,
       "gslbStatMaintNoServer": gslbStatMaintNoServer,
       "gslbStatMaintNoDomain": gslbStatMaintNoDomain,
       "gslbStatMaintHostHits": gslbStatMaintHostHits,
       "gslbStatMaintRuleHits": gslbStatMaintRuleHits,
       "gslbStatMaintVirtHits": gslbStatMaintVirtHits,
       "gslbStatMaintNoServerHost": gslbStatMaintNoServerHost,
       "gslbStatMaintNoServerRule": gslbStatMaintNoServerRule,
       "gslbStatMaintNoServerVirt": gslbStatMaintNoServerVirt,
       "gslbStatMaintLastNoResultDomain": gslbStatMaintLastNoResultDomain,
       "gslbStatMaintLastSrcIp": gslbStatMaintLastSrcIp,
       "gslbStatMaintThresholdHits": gslbStatMaintThresholdHits,
       "gslbStatMaintLastSrcIpV6": gslbStatMaintLastSrcIpV6,
       "gslbStatGroupTable": gslbStatGroupTable,
       "gslbStatGroupEntry": gslbStatGroupEntry,
       "gslbStatGroupIndex": gslbStatGroupIndex,
       "gslbStatGroupDnsHandoffs": gslbStatGroupDnsHandoffs,
       "gslbStatGroupHttpRedirs": gslbStatGroupHttpRedirs,
       "gslbStatVirtServerTable": gslbStatVirtServerTable,
       "gslbStatVirtServerEntry": gslbStatVirtServerEntry,
       "gslbStatVirtServerIdx": gslbStatVirtServerIdx,
       "gslbStatVirtServerServiceIdx": gslbStatVirtServerServiceIdx,
       "gslbStatVirtServerRserverIdx": gslbStatVirtServerRserverIdx,
       "gslbStatVirtServerVirtPort": gslbStatVirtServerVirtPort,
       "gslbStatVirtServerIpAddress": gslbStatVirtServerIpAddress,
       "gslbStatVirtServerResponseTime": gslbStatVirtServerResponseTime,
       "gslbStatVirtServerMinSessAvail": gslbStatVirtServerMinSessAvail,
       "gslbStatVirtServerDname": gslbStatVirtServerDname,
       "gslbStatVirtServerRemSite": gslbStatVirtServerRemSite,
       "gslbStatVirtDnsDirect": gslbStatVirtDnsDirect,
       "gslbStatRemSiteTable": gslbStatRemSiteTable,
       "gslbStatRemSiteTableEntry": gslbStatRemSiteTableEntry,
       "gslbStatRemSiteIdx": gslbStatRemSiteIdx,
       "gslbStatRemSiteOutUpdates": gslbStatRemSiteOutUpdates,
       "gslbStatRemSiteInUpdates": gslbStatRemSiteInUpdates,
       "gslbStatRemSiteOutUpdates2": gslbStatRemSiteOutUpdates2,
       "gslbStatRemSiteInUpdates2": gslbStatRemSiteInUpdates2,
       "gslbStatRemSiteInBadUpdates": gslbStatRemSiteInBadUpdates,
       "gslbStatEnhNetworkTable": gslbStatEnhNetworkTable,
       "gslbStatEnhNetworkTableEntry": gslbStatEnhNetworkTableEntry,
       "gslbStatEnhNetworkIdx": gslbStatEnhNetworkIdx,
       "gslbStatEnhNetworkHit": gslbStatEnhNetworkHit,
       "gslbStatRuleTable": gslbStatRuleTable,
       "gslbStatRuleTableEntry": gslbStatRuleTableEntry,
       "gslbStatRuleIdx": gslbStatRuleIdx,
       "gslbStatRuleLeastconns": gslbStatRuleLeastconns,
       "gslbStatRuleRoundrobin": gslbStatRuleRoundrobin,
       "gslbStatRuleMinmisses": gslbStatRuleMinmisses,
       "gslbStatRuleHash": gslbStatRuleHash,
       "gslbStatRuleResponse": gslbStatRuleResponse,
       "gslbStatRuleGeographical": gslbStatRuleGeographical,
       "gslbStatRuleNetwork": gslbStatRuleNetwork,
       "gslbStatRuleRandom": gslbStatRuleRandom,
       "gslbStatRuleAvailability": gslbStatRuleAvailability,
       "gslbStatRuleQos": gslbStatRuleQos,
       "gslbStatRulePersistence": gslbStatRulePersistence,
       "gslbStatRuleLocal": gslbStatRuleLocal,
       "gslbStatRuleAlways": gslbStatRuleAlways,
       "gslbStatRuleRemote": gslbStatRuleRemote,
       "gslbStatRuleTotal": gslbStatRuleTotal,
       "gslbStatGeo": gslbStatGeo,
       "gslbStatGeoNA": gslbStatGeoNA,
       "gslbStatGeoSA": gslbStatGeoSA,
       "gslbStatGeoEU": gslbStatGeoEU,
       "gslbStatGeoCA": gslbStatGeoCA,
       "gslbStatGeoPR": gslbStatGeoPR,
       "gslbStatGeoSS": gslbStatGeoSS,
       "gslbStatGeoJP": gslbStatGeoJP,
       "gslbStatGeoTotal": gslbStatGeoTotal,
       "gslbStatGeoAF": gslbStatGeoAF,
       "gslbStatPers": gslbStatPers,
       "gslbStatPersCurrent": gslbStatPersCurrent,
       "gslbStatPersHiwat": gslbStatPersHiwat,
       "gslbStatPersMax": gslbStatPersMax,
       "wapStats": wapStats,
       "radiusAcctReqsStats": radiusAcctReqsStats,
       "radiusAcctReqs": radiusAcctReqs,
       "radiusAcctWrapReqs": radiusAcctWrapReqs,
       "radiusAcctStartReqs": radiusAcctStartReqs,
       "radiusAcctUpdateReqs": radiusAcctUpdateReqs,
       "radiusAcctStopReqs": radiusAcctStopReqs,
       "radiusAcctBadReqs": radiusAcctBadReqs,
       "radiusAcctAddSessionReqs": radiusAcctAddSessionReqs,
       "radiusAcctDeleteSessionReqs": radiusAcctDeleteSessionReqs,
       "radiusAcctReqFailsSPDead": radiusAcctReqFailsSPDead,
       "radiusAcctReqFailsDMAFails": radiusAcctReqFailsDMAFails,
       "radiusAcctReqWithFramedIp": radiusAcctReqWithFramedIp,
       "radiusAcctReqWithoutFramedIp": radiusAcctReqWithoutFramedIp,
       "tpcpAddSessReqsStats": tpcpAddSessReqsStats,
       "tpcpAddSessReqs": tpcpAddSessReqs,
       "tpcpAddSessReqsFailsSPDead": tpcpAddSessReqsFailsSPDead,
       "tpcpDeleteSessReqsStats": tpcpDeleteSessReqsStats,
       "tpcpDeleteSessReqs": tpcpDeleteSessReqs,
       "tpcpDeleteSessReqsFailsSPDead": tpcpDeleteSessReqsFailsSPDead,
       "wapRequestToWrongSP": wapRequestToWrongSP,
       "ftpStats": ftpStats,
       "ftpSlbStatTotal": ftpSlbStatTotal,
       "ftpNatStatTotal": ftpNatStatTotal,
       "ftpStatActiveNatIndex": ftpStatActiveNatIndex,
       "ftpStatNatAckSeqDiff": ftpStatNatAckSeqDiff,
       "ftpStatSlbParseIndex": ftpStatSlbParseIndex,
       "ftpStatSlbParseAckSeqDiff": ftpStatSlbParseAckSeqDiff,
       "ftpStatModeSwitchError": ftpStatModeSwitchError,
       "rtspStats": rtspStats,
       "rtspStatControlConns": rtspStatControlConns,
       "rtspStatUDPStreams": rtspStatUDPStreams,
       "rtspStatRedirects": rtspStatRedirects,
       "rtspStatConnDenied": rtspStatConnDenied,
       "rtspStatAllocFails": rtspStatAllocFails,
       "rtspStatBufferAllocs": rtspStatBufferAllocs,
       "tcpLimitStats": tcpLimitStats,
       "tcpLimitStatHoldDowns": tcpLimitStatHoldDowns,
       "tcpLimitStatClientEntries": tcpLimitStatClientEntries,
       "udpLimitStatHoldDowns": udpLimitStatHoldDowns,
       "icmpLimitStatHoldDowns": icmpLimitStatHoldDowns,
       "udpLimitStatClientEntries": udpLimitStatClientEntries,
       "icmpLimitStatClientEntries": icmpLimitStatClientEntries,
       "dnsSlbStats": dnsSlbStats,
       "dnsSlbStatTCPQueries": dnsSlbStatTCPQueries,
       "dnsSlbStatUDPQueries": dnsSlbStatUDPQueries,
       "dnsSlbStatInvalidQueries": dnsSlbStatInvalidQueries,
       "dnsSlbStatMultipleQueries": dnsSlbStatMultipleQueries,
       "dnsSlbStatDnameParseErrors": dnsSlbStatDnameParseErrors,
       "dnsSlbStatFailedMatches": dnsSlbStatFailedMatches,
       "dnsSlbStatInternalErrors": dnsSlbStatInternalErrors,
       "slbStatsClear": slbStatsClear,
       "sslSlbStats": sslSlbStats,
       "sslSlbStatSessIdAllocFails": sslSlbStatSessIdAllocFails,
       "sslSlbStatCurSessions": sslSlbStatCurSessions,
       "sslSlbStatTotalSessions": sslSlbStatTotalSessions,
       "sslSlbStatHighestSessions": sslSlbStatHighestSessions,
       "sslSlbStatUniqCurSessions": sslSlbStatUniqCurSessions,
       "sslSlbStatUniqTotalSessions": sslSlbStatUniqTotalSessions,
       "sslSlbStatUniqHighestSessions": sslSlbStatUniqHighestSessions,
       "sslSlbStatPersistPortCurSessions": sslSlbStatPersistPortCurSessions,
       "sslSlbStatPersistPortTotalSessions": sslSlbStatPersistPortTotalSessions,
       "sslSlbStatPersistPortHighestSessions": sslSlbStatPersistPortHighestSessions,
       "sslOffNewHandShake": sslOffNewHandShake,
       "sslOffReusedHandShake": sslOffReusedHandShake,
       "sslOffPerReusedHandShake": sslOffPerReusedHandShake,
       "sslOffPercSessUsingSSLv2": sslOffPercSessUsingSSLv2,
       "sslOffPercSessUsingSSLv3": sslOffPercSessUsingSSLv3,
       "sslOffPercSessUsingTLS": sslOffPercSessUsingTLS,
       "sslOffPerServStatsTable": sslOffPerServStatsTable,
       "sslOffPerServStatsEntry": sslOffPerServStatsEntry,
       "sslOffPerServVirtServIndex": sslOffPerServVirtServIndex,
       "sslOffPerServVirtServiceIndex": sslOffPerServVirtServiceIndex,
       "sslOffPerServVirtServPort": sslOffPerServVirtServPort,
       "sslOffPerServSslPolId": sslOffPerServSslPolId,
       "sslOffPerServNewhandShake": sslOffPerServNewhandShake,
       "sslOffPerServReusedhandShake": sslOffPerServReusedhandShake,
       "sslOffPerServPercReusedhandShake": sslOffPerServPercReusedhandShake,
       "sslOffPerServSessUsingSSLv2": sslOffPerServSessUsingSSLv2,
       "sslOffPerServSessUsingSSLv3": sslOffPerServSessUsingSSLv3,
       "sslOffPerServSessUsingTLS": sslOffPerServSessUsingTLS,
       "sslOffPerServSessUsingTLS11": sslOffPerServSessUsingTLS11,
       "sslOffPercSessUsingTLS11": sslOffPercSessUsingTLS11,
       "slbStatAuxSessTable": slbStatAuxSessTable,
       "slbStatAuxSessEntry": slbStatAuxSessEntry,
       "slbStatAuxSessIndex": slbStatAuxSessIndex,
       "slbStatAuxSessCurConn": slbStatAuxSessCurConn,
       "slbStatAuxSessMaxConn": slbStatAuxSessMaxConn,
       "slbStatAuxSessAllocFails": slbStatAuxSessAllocFails,
       "slbStatVirtServiceTable": slbStatVirtServiceTable,
       "slbStatVirtServiceEntry": slbStatVirtServiceEntry,
       "slbStatVirtServerIndex": slbStatVirtServerIndex,
       "slbStatVirtServiceIndex": slbStatVirtServiceIndex,
       "slbStatRealServerIndex": slbStatRealServerIndex,
       "slbStatVirtServiceCurrSessions": slbStatVirtServiceCurrSessions,
       "slbStatVirtServiceTotalSessions": slbStatVirtServiceTotalSessions,
       "slbStatVirtServiceHighestSessions": slbStatVirtServiceHighestSessions,
       "slbStatVirtServiceHCOctetsLow32": slbStatVirtServiceHCOctetsLow32,
       "slbStatVirtServiceHCOctetsHigh32": slbStatVirtServiceHCOctetsHigh32,
       "slbStatVirtServiceHCOctets": slbStatVirtServiceHCOctets,
       "sipStats": sipStats,
       "sipTotalClientParseErrors": sipTotalClientParseErrors,
       "sipTotalServerParseErrors": sipTotalServerParseErrors,
       "sipTotalUnknownMethodReq": sipTotalUnknownMethodReq,
       "sipTotalIncompleteMsgs": sipTotalIncompleteMsgs,
       "sipTotalSdpNatPackets": sipTotalSdpNatPackets,
       "wlmStats": wlmStats,
       "slbStatWlmTable": slbStatWlmTable,
       "slbStatWlmEntry": slbStatWlmEntry,
       "slbStatWlmIndex": slbStatWlmIndex,
       "slbStatWlmRegReq": slbStatWlmRegReq,
       "slbStatWlmRegRep": slbStatWlmRegRep,
       "slbStatWlmRegRepErr": slbStatWlmRegRepErr,
       "slbStatWlmDeregReq": slbStatWlmDeregReq,
       "slbStatWlmDeregRep": slbStatWlmDeregRep,
       "slbStatWlmDeregRepErr": slbStatWlmDeregRepErr,
       "slbStatWlmLbStateReq": slbStatWlmLbStateReq,
       "slbStatWlmLbStateRep": slbStatWlmLbStateRep,
       "slbStatWlmLbStateRepErr": slbStatWlmLbStateRepErr,
       "slbStatWlmMembStateReq": slbStatWlmMembStateReq,
       "slbStatWlmMembStateRep": slbStatWlmMembStateRep,
       "slbStatWlmMembStateRepErr": slbStatWlmMembStateRepErr,
       "slbStatWlmWtMsgRecv": slbStatWlmWtMsgRecv,
       "slbStatWlmWtMsgParErr": slbStatWlmWtMsgParErr,
       "slbStatWlmTotInvalidLb": slbStatWlmTotInvalidLb,
       "slbStatWlmTotInvalidGrp": slbStatWlmTotInvalidGrp,
       "slbStatWlmTotInvalidRealSer": slbStatWlmTotInvalidRealSer,
       "slbStatWlmMsgInvalidSASPHeader": slbStatWlmMsgInvalidSASPHeader,
       "slbStatWlmMsgParseErr": slbStatWlmMsgParseErr,
       "slbStatWlmMsgUnsupMsgType": slbStatWlmMsgUnsupMsgType,
       "sessMirrorStats": sessMirrorStats,
       "sessMirrorTotalCreateSessionMsgRx": sessMirrorTotalCreateSessionMsgRx,
       "sessMirrorTotalCreateSessionMsgTx": sessMirrorTotalCreateSessionMsgTx,
       "sessMirrorTotalCreateDataSessionMsgRx": sessMirrorTotalCreateDataSessionMsgRx,
       "sessMirrorTotalCreateDataSessionMsgTx": sessMirrorTotalCreateDataSessionMsgTx,
       "sessMirrorTotalUpdateSessionMsgRx": sessMirrorTotalUpdateSessionMsgRx,
       "sessMirrorTotalUpdateSessionMsgTx": sessMirrorTotalUpdateSessionMsgTx,
       "sessMirrorTotalUpdateDataSessionMsgRx": sessMirrorTotalUpdateDataSessionMsgRx,
       "sessMirrorTotalUpdateDataSessionMsgTx": sessMirrorTotalUpdateDataSessionMsgTx,
       "sessMirrorTotalDeleteSessionMsgRx": sessMirrorTotalDeleteSessionMsgRx,
       "sessMirrorTotalDeleteSessionMsgTx": sessMirrorTotalDeleteSessionMsgTx,
       "sessMirrorTotalDeleteDataSessionMsgRx": sessMirrorTotalDeleteDataSessionMsgRx,
       "sessMirrorTotalDeleteDataSessionMsgTx": sessMirrorTotalDeleteDataSessionMsgTx,
       "sessMirrorTotalSessionsCreated": sessMirrorTotalSessionsCreated,
       "sessMirrorTotalDataSessionsCreated": sessMirrorTotalDataSessionsCreated,
       "sessMirrorTotalSessionsUpdated": sessMirrorTotalSessionsUpdated,
       "sessMirrorTotalDataSessionsUpdated": sessMirrorTotalDataSessionsUpdated,
       "sessMirrorTotalSessionsDeleted": sessMirrorTotalSessionsDeleted,
       "sessMirrorTotalDataSessionsDeleted": sessMirrorTotalDataSessionsDeleted,
       "sessMirrorSessionTableFullErr": sessMirrorSessionTableFullErr,
       "sessMirrorNoPortErr": sessMirrorNoPortErr,
       "sessMirrorSessionPresentErr": sessMirrorSessionPresentErr,
       "sessMirrorSessionNotFoundErr": sessMirrorSessionNotFoundErr,
       "sessMirrorCtrlSessionNotFoundErr": sessMirrorCtrlSessionNotFoundErr,
       "accelStats": accelStats,
       "cachStats": cachStats,
       "cachStatSummTotObj": cachStatSummTotObj,
       "cachStatSummHitPerc": cachStatSummHitPerc,
       "cachStatSummServRate": cachStatSummServRate,
       "cachStatSummNewCachedObj": cachStatSummNewCachedObj,
       "cachStatSummRateNewCachedObj": cachStatSummRateNewCachedObj,
       "cachStatSummNewCachedBytes": cachStatSummNewCachedBytes,
       "cachStatSummRateNewCachedBytes": cachStatSummRateNewCachedBytes,
       "cachStatSummObjSmaller10K": cachStatSummObjSmaller10K,
       "cachStatSummObj11KTO50K": cachStatSummObj11KTO50K,
       "cachStatSummObj51KTO100K": cachStatSummObj51KTO100K,
       "cachStatSummObj101KTO1M": cachStatSummObj101KTO1M,
       "cachStatSummObjLarger1M": cachStatSummObjLarger1M,
       "cachPerServStatTable": cachPerServStatTable,
       "cachPerServStatEntry": cachPerServStatEntry,
       "cachStatPerServVirtServIndex": cachStatPerServVirtServIndex,
       "cachStatPerServVirtServiceIndex": cachStatPerServVirtServiceIndex,
       "cachStatPerServVirtServPort": cachStatPerServVirtServPort,
       "cachStatPerServCachePolId": cachStatPerServCachePolId,
       "cachStatPerServTotObj": cachStatPerServTotObj,
       "cachStatPerServHitPerc": cachStatPerServHitPerc,
       "cachStatPerServServRate": cachStatPerServServRate,
       "cachStatPerServNewCachedObj": cachStatPerServNewCachedObj,
       "cachStatPerServRateNewCachedObj": cachStatPerServRateNewCachedObj,
       "cachStatPerServNewCachedBytes": cachStatPerServNewCachedBytes,
       "cachStatPerServRateNewCachedBytes": cachStatPerServRateNewCachedBytes,
       "cachStatPerServObjSmaller10K": cachStatPerServObjSmaller10K,
       "cachStatPerServObj11KTO50K": cachStatPerServObj11KTO50K,
       "cachStatPerServObj51KTO100K": cachStatPerServObj51KTO100K,
       "cachStatPerServObj101KTO1M": cachStatPerServObj101KTO1M,
       "cachStatPerServObjLarger1M": cachStatPerServObjLarger1M,
       "cachPerRuleListStatsTable": cachPerRuleListStatsTable,
       "cachPerRuleListStatsEntry": cachPerRuleListStatsEntry,
       "cachRuleListIndex": cachRuleListIndex,
       "cachRuleListId": cachRuleListId,
       "cachRuleListNumOfObjCac": cachRuleListNumOfObjCac,
       "cachRuleListNumOfBytesCac": cachRuleListNumOfBytesCac,
       "cachPerRuleStatsTable": cachPerRuleStatsTable,
       "cachPerRuleStatsEntry": cachPerRuleStatsEntry,
       "cachRuleRuleListIndex": cachRuleRuleListIndex,
       "cachRuleIndex": cachRuleIndex,
       "cachRuleRuleListId": cachRuleRuleListId,
       "cachRuleNumOfObjCac": cachRuleNumOfObjCac,
       "cachRuleNumOfBytesCac": cachRuleNumOfBytesCac,
       "compStats": compStats,
       "compUnCompressedThrputKB": compUnCompressedThrputKB,
       "compAvgSizeBefCompKB": compAvgSizeBefCompKB,
       "compCompressedThrputKB": compCompressedThrputKB,
       "compAvgSizeAftCompKB": compAvgSizeAftCompKB,
       "compAvgCompRatio": compAvgCompRatio,
       "compThrputCompRatio": compThrputCompRatio,
       "compStatPerServTable": compStatPerServTable,
       "compStatPerServEntry": compStatPerServEntry,
       "compStatPerServVirtServIndex": compStatPerServVirtServIndex,
       "compStatPerServVirtServiceIndex": compStatPerServVirtServiceIndex,
       "compStatPerServVirtServPort": compStatPerServVirtServPort,
       "compStatPerServCompPolId": compStatPerServCompPolId,
       "compStatPerServUnComprTputKb": compStatPerServUnComprTputKb,
       "compStatPerServComprTputKb": compStatPerServComprTputKb,
       "compStatPerServAvgSizeBefComp": compStatPerServAvgSizeBefComp,
       "compStatPerServAvgSizeAftComp": compStatPerServAvgSizeAftComp,
       "compStatPerServAvgCompRatio": compStatPerServAvgCompRatio,
       "compStatPerServThrputCompRatio": compStatPerServThrputCompRatio,
       "compPerBrowRuleListStatsTable": compPerBrowRuleListStatsTable,
       "compPerBrowRuleListStatsEntry": compPerBrowRuleListStatsEntry,
       "compBrowRuleListIndex": compBrowRuleListIndex,
       "compBrowRuleListId": compBrowRuleListId,
       "compBrowRuleListNumOfObj": compBrowRuleListNumOfObj,
       "compBrowRuleListSizeBefComp": compBrowRuleListSizeBefComp,
       "compBrowRuleListSizeAftComp": compBrowRuleListSizeAftComp,
       "compBrowRuleListCompRatio": compBrowRuleListCompRatio,
       "compPerBrowRuleStatsTable": compPerBrowRuleStatsTable,
       "compPerBrowRuleStatsEntry": compPerBrowRuleStatsEntry,
       "compBrowRuleRuleListIndex": compBrowRuleRuleListIndex,
       "compBrowRuleIndex": compBrowRuleIndex,
       "compBrowRuleRuleListId": compBrowRuleRuleListId,
       "compBrowRuleNumOfObj": compBrowRuleNumOfObj,
       "compBrowRuleSizeBefComp": compBrowRuleSizeBefComp,
       "compBrowRuleSizeAftComp": compBrowRuleSizeAftComp,
       "compBrowRuleCompRatio": compBrowRuleCompRatio,
       "compPerUrlRuleListStatsTable": compPerUrlRuleListStatsTable,
       "compPerUrlRuleListStatsEntry": compPerUrlRuleListStatsEntry,
       "compUrlRuleListIndex": compUrlRuleListIndex,
       "compUrlRuleListId": compUrlRuleListId,
       "compUrlRuleListNumOfObj": compUrlRuleListNumOfObj,
       "compUrlRuleListSizeBefComp": compUrlRuleListSizeBefComp,
       "compUrlRuleListSizeAftComp": compUrlRuleListSizeAftComp,
       "compUrlRuleListCompRatio": compUrlRuleListCompRatio,
       "compPerUrlRuleStatsTable": compPerUrlRuleStatsTable,
       "compPerUrlRuleStatsEntry": compPerUrlRuleStatsEntry,
       "compUrlRuleRuleListIndex": compUrlRuleRuleListIndex,
       "compUrlRuleIndex": compUrlRuleIndex,
       "compUrlRuleRuleListId": compUrlRuleRuleListId,
       "compUrlRuleNumOfObj": compUrlRuleNumOfObj,
       "compUrlRuleSizeBefComp": compUrlRuleSizeBefComp,
       "compUrlRuleSizeAftComp": compUrlRuleSizeAftComp,
       "compUrlRuleCompRatio": compUrlRuleCompRatio,
       "httpStats": httpStats,
       "httpStatSummCliusingKeepAliv": httpStatSummCliusingKeepAliv,
       "httpStatSummHTTP10Per": httpStatSummHTTP10Per,
       "httpStatSummHTTP11Per": httpStatSummHTTP11Per,
       "httpStatSummHttpToHttpsRedir": httpStatSummHttpToHttpsRedir,
       "httpStatSummAvgNumReqPerConn": httpStatSummAvgNumReqPerConn,
       "httpStatSummResSmall1Kb": httpStatSummResSmall1Kb,
       "httpStatSummRes1KbTo10Kb": httpStatSummRes1KbTo10Kb,
       "httpStatSummRes11KbTo50Kb": httpStatSummRes11KbTo50Kb,
       "httpStatSummRes51KbTo100Kb": httpStatSummRes51KbTo100Kb,
       "httpStatSummResLarger100Kb": httpStatSummResLarger100Kb,
       "httpTransSummReqCliToAas": httpTransSummReqCliToAas,
       "httpTransSummReqAasToSer": httpTransSummReqAasToSer,
       "httpTransSummResSerToAas": httpTransSummResSerToAas,
       "httpTransSummResAasToCli": httpTransSummResAasToCli,
       "httpTransSummTransRate": httpTransSummTransRate,
       "httpPerServStatsTable": httpPerServStatsTable,
       "httpPerServStatsEntry": httpPerServStatsEntry,
       "httpPerServStatsVirtServIndex": httpPerServStatsVirtServIndex,
       "httpPerServStatsVirtServiceIndex": httpPerServStatsVirtServiceIndex,
       "httpPerServStatsVirtServPort": httpPerServStatsVirtServPort,
       "httpPerServStatsCliUseKeepAlive": httpPerServStatsCliUseKeepAlive,
       "httpPerServStatsHttp10VsHttp11Ratio": httpPerServStatsHttp10VsHttp11Ratio,
       "httpPerServStatsHttpToHTTPSRedir": httpPerServStatsHttpToHTTPSRedir,
       "httpPerServStatsAvgNumReqPerConn": httpPerServStatsAvgNumReqPerConn,
       "httpPerServStatsRespSmall1Kb": httpPerServStatsRespSmall1Kb,
       "httpPerServStatsResp1KbTo10Kb": httpPerServStatsResp1KbTo10Kb,
       "httpPerServStatsResp11KbTo50Kb": httpPerServStatsResp11KbTo50Kb,
       "httpPerServStatsResp51KbTo100Kb": httpPerServStatsResp51KbTo100Kb,
       "httpPerServStatsRespLarger100Kb": httpPerServStatsRespLarger100Kb,
       "httpPerServStatsReqCliToAas": httpPerServStatsReqCliToAas,
       "httpPerServStatsReqAasToSer": httpPerServStatsReqAasToSer,
       "httpPerServStatsRespSerToAas": httpPerServStatsRespSerToAas,
       "httpPerServStatsRespAasToCli": httpPerServStatsRespAasToCli,
       "httpPerServStatsTransRate": httpPerServStatsTransRate,
       "connmngStats": connmngStats,
       "connmngStatSummServConn": connmngStatSummServConn,
       "connmngStatSummCliReq": connmngStatSummCliReq,
       "connmngStatSummMulRatio": connmngStatSummMulRatio,
       "connmngPerServStatsTable": connmngPerServStatsTable,
       "connmngPerServStatsEntry": connmngPerServStatsEntry,
       "connmngPerServStatsVirtServIndex": connmngPerServStatsVirtServIndex,
       "connmngPerServStatsVirtServiceIndex": connmngPerServStatsVirtServiceIndex,
       "connmngPerServStatsVirtServPort": connmngPerServStatsVirtServPort,
       "connmngPerServStatsServConn": connmngPerServStatsServConn,
       "connmngPerServStatsCliReq": connmngPerServStatsCliReq,
       "connmngPerServStatsMulRatio": connmngPerServStatsMulRatio,
       "sapStats": sapStats,
       "slbStatSapAslrTable": slbStatSapAslrTable,
       "slbStatSapAslrEntry": slbStatSapAslrEntry,
       "slbStatSapAslrIndex": slbStatSapAslrIndex,
       "slbStatSapAslrSampling": slbStatSapAslrSampling,
       "slbStatSapAslrFailure": slbStatSapAslrFailure,
       "slbStatSapAslrDeviceUpdates": slbStatSapAslrDeviceUpdates,
       "slbStatSapAslrDeviceFailure": slbStatSapAslrDeviceFailure,
       "slbStatSapAslrLastAct": slbStatSapAslrLastAct,
       "layer4Info": layer4Info,
       "slbRealServerInfoTable": slbRealServerInfoTable,
       "slbRealServerInfoEntry": slbRealServerInfoEntry,
       "slbRealServerInfoIndex": slbRealServerInfoIndex,
       "slbRealServerInfoIpAddr": slbRealServerInfoIpAddr,
       "slbRealServerMacAddr": slbRealServerMacAddr,
       "slbRealServerInfoSwitchPort": slbRealServerInfoSwitchPort,
       "slbRealServerInfoHealthLayer": slbRealServerInfoHealthLayer,
       "slbRealServerInfoOverflow": slbRealServerInfoOverflow,
       "slbRealServerInfoState": slbRealServerInfoState,
       "slbRealServerInfoVlan": slbRealServerInfoVlan,
       "slbRealServerRportInfoTable": slbRealServerRportInfoTable,
       "slbRealServerRportInfoEntry": slbRealServerRportInfoEntry,
       "slbRealServerRportRealIndex": slbRealServerRportRealIndex,
       "slbRealServerRportServIndex": slbRealServerRportServIndex,
       "slbRealServerRportInfoRport": slbRealServerRportInfoRport,
       "slbRealServerRportInfoState": slbRealServerRportInfoState,
       "slbRealServerRportInfoGroup": slbRealServerRportInfoGroup,
       "slbVirtServicesInfoTable": slbVirtServicesInfoTable,
       "slbVirtServicesInfoEntry": slbVirtServicesInfoEntry,
       "slbVirtServicesInfoVirtServIndex": slbVirtServicesInfoVirtServIndex,
       "slbVirtServicesInfoSvcIndex": slbVirtServicesInfoSvcIndex,
       "slbVirtServicesInfoRealServIndex": slbVirtServicesInfoRealServIndex,
       "slbVirtServicesInfoVport": slbVirtServicesInfoVport,
       "slbVirtServicesInfoRport": slbVirtServicesInfoRport,
       "slbVirtServicesInfoState": slbVirtServicesInfoState,
       "slbVirtServicesInfoResponseTime": slbVirtServicesInfoResponseTime,
       "slbVirtServicesInfoWeight": slbVirtServicesInfoWeight,
       "slbSessionInfo": slbSessionInfo,
       "slbSessionInfoState": slbSessionInfoState,
       "slbSessionInfoType": slbSessionInfoType,
       "slbSessionInfoIpAddr": slbSessionInfoIpAddr,
       "slbSessionInfoFilterId": slbSessionInfoFilterId,
       "slbSessionInfoPortId": slbSessionInfoPortId,
       "slbSessionInfoFlag": slbSessionInfoFlag,
       "slbSessionInfoStringFormatFlag": slbSessionInfoStringFormatFlag,
       "slbSessionInfoTable": slbSessionInfoTable,
       "slbSessionInfoEntry": slbSessionInfoEntry,
       "slbSessionInfoSpIndex": slbSessionInfoSpIndex,
       "slbSessionInfoIndex": slbSessionInfoIndex,
       "slbSessionInfoString": slbSessionInfoString,
       "slbSessionInfoMaxSessDump": slbSessionInfoMaxSessDump,
       "gslbInfo": gslbInfo,
       "gslbInfoRemRealServerTable": gslbInfoRemRealServerTable,
       "gslbInfoRemRealServerEntry": gslbInfoRemRealServerEntry,
       "gslbInfoRemRealServerIdx": gslbInfoRemRealServerIdx,
       "gslbInfoRemRealServerIpAddr": gslbInfoRemRealServerIpAddr,
       "gslbInfoRemRealServerName": gslbInfoRemRealServerName,
       "gslbInfoRemRealServerState": gslbInfoRemRealServerState,
       "gslbInfoVirtServerTable": gslbInfoVirtServerTable,
       "gslbInfoVirtServerEntry": gslbInfoVirtServerEntry,
       "gslbInfoVirtServerIdx": gslbInfoVirtServerIdx,
       "gslbInfoVirtServerServiceIdx": gslbInfoVirtServerServiceIdx,
       "gslbInfoVirtServerRserverIdx": gslbInfoVirtServerRserverIdx,
       "gslbInfoVirtServerDname": gslbInfoVirtServerDname,
       "gslbInfoVirtServerVirtPort": gslbInfoVirtServerVirtPort,
       "gslbInfoVirtServerIpAddress": gslbInfoVirtServerIpAddress,
       "gslbInfoVirtServerResponse": gslbInfoVirtServerResponse,
       "gslbInfoVirtServerSessAvail": gslbInfoVirtServerSessAvail,
       "gslbInfoVirtServerSessCur": gslbInfoVirtServerSessCur,
       "gslbInfoVirtServerSessMax": gslbInfoVirtServerSessMax,
       "gslbInfoVirtServerSessUtil": gslbInfoVirtServerSessUtil,
       "gslbInfoVirtServerCpuUtil": gslbInfoVirtServerCpuUtil,
       "gslbInfoVirtServerRemSite": gslbInfoVirtServerRemSite,
       "gslbInfoVirtServerWeight": gslbInfoVirtServerWeight,
       "gslbInfoVirtServerAvail": gslbInfoVirtServerAvail,
       "gslbInfoVirtServerRegion": gslbInfoVirtServerRegion,
       "gslbInfoRemSiteTable": gslbInfoRemSiteTable,
       "gslbInfoRemSiteEntry": gslbInfoRemSiteEntry,
       "gslbInfoRemSiteIdx": gslbInfoRemSiteIdx,
       "gslbInfoRemSitePrimaryIp": gslbInfoRemSitePrimaryIp,
       "gslbInfoRemSiteSecondaryIp": gslbInfoRemSiteSecondaryIp,
       "gslbInfoRemSiteName": gslbInfoRemSiteName,
       "gslbInfoRemSiteState": gslbInfoRemSiteState,
       "gslbInfoDnsSec": gslbInfoDnsSec,
       "gslbInfoDnsSecKey": gslbInfoDnsSecKey,
       "gslbInfoDnsSecKeyTable": gslbInfoDnsSecKeyTable,
       "gslbInfoDnsSecKeyEntry": gslbInfoDnsSecKeyEntry,
       "gslbInfoDnsSecKeyID": gslbInfoDnsSecKeyID,
       "gslbInfoDnsSecKeyStatus": gslbInfoDnsSecKeyStatus,
       "wlmInfo": wlmInfo,
       "slbWlmInfoTable": slbWlmInfoTable,
       "slbWlmInfoEntry": slbWlmInfoEntry,
       "slbWlmInfoIndex": slbWlmInfoIndex,
       "slbWlmInfoIpAddr": slbWlmInfoIpAddr,
       "slbWlmInfoPort": slbWlmInfoPort,
       "slbWlmInfoState": slbWlmInfoState,
       "slbPortInfo": slbPortInfo,
       "slbPortInfoTable": slbPortInfoTable,
       "slbPortInfoEntry": slbPortInfoEntry,
       "slbPortInfoIndex": slbPortInfoIndex,
       "slbPortClientState": slbPortClientState,
       "slbPortSerState": slbPortSerState,
       "slbPortFltState": slbPortFltState,
       "slbPortRTSState": slbPortRTSState,
       "slbPortHotStandbyState": slbPortHotStandbyState,
       "slbPortInterSWState": slbPortInterSWState,
       "slbPortProxyState": slbPortProxyState,
       "slbPortIdSlbState": slbPortIdSlbState,
       "slbPortSymantecState": slbPortSymantecState,
       "slbPortFitersAdded": slbPortFitersAdded,
       "synAttackInfo": synAttackInfo,
       "synAtkState": synAtkState,
       "synAtkInterval": synAtkInterval,
       "synAtkThreshhold": synAtkThreshhold,
       "synAtkWarningFired": synAtkWarningFired,
       "synAtkResponseInterval": synAtkResponseInterval,
       "synAtkOnOff": synAtkOnOff,
       "slbFreeVirtualServerIndexInfo": slbFreeVirtualServerIndexInfo,
       "slbFreeRealGroupIndexInfo": slbFreeRealGroupIndexInfo,
       "slbFreeRealServerIndexInfo": slbFreeRealServerIndexInfo,
       "layer4Oper": layer4Oper,
       "slbOperRealServerTable": slbOperRealServerTable,
       "slbOperRealServerEntry": slbOperRealServerEntry,
       "slbOperRealServerIndex": slbOperRealServerIndex,
       "slbOperRealServerStatus": slbOperRealServerStatus,
       "slbOperClearSessionTable": slbOperClearSessionTable,
       "slbOperConfigSync": slbOperConfigSync,
       "gslbOper": gslbOper,
       "gslbOperQuery": gslbOperQuery,
       "gslbOperQueryDomain": gslbOperQueryDomain,
       "gslbOperQuerySrcIp": gslbOperQuerySrcIp,
       "gslbOperSendQuery": gslbOperSendQuery,
       "gslbOperQuerySrcIpV6": gslbOperQuerySrcIpV6,
       "gslbOperQuerySrcIpVer": gslbOperQuerySrcIpVer,
       "gslbOperQueryType": gslbOperQueryType,
       "gslbOperAdd": gslbOperAdd,
       "gslbOperAddDomain": gslbOperAddDomain,
       "gslbOperAddSrcIp": gslbOperAddSrcIp,
       "gslbOperAddServerIp": gslbOperAddServerIp,
       "gslbOperAddEntry": gslbOperAddEntry,
       "gslbOperAddSrcIp6": gslbOperAddSrcIp6,
       "gslbOperAddServerIp6": gslbOperAddServerIp6,
       "gslbOperRemove": gslbOperRemove,
       "gslbOperAvPersis": gslbOperAvPersis,
       "gslbOperAvPersisVirtNum": gslbOperAvPersisVirtNum,
       "gslbOperAvPersisState": gslbOperAvPersisState,
       "gslbOperAvpersistence": gslbOperAvpersistence,
       "gslbOperClear": gslbOperClear,
       "gslbOperDnsSec": gslbOperDnsSec,
       "gslbOperDnsSecTable": gslbOperDnsSecTable,
       "gslbOperDnsSecEntry": gslbOperDnsSecEntry,
       "gslbOperDnsSecKeyID": gslbOperDnsSecKeyID,
       "gslbOperDnsSecEmergencyRollover": gslbOperDnsSecEmergencyRollover,
       "gslbOperDnsSecImmediateRollover": gslbOperDnsSecImmediateRollover,
       "slbOperGroupRealServerTable": slbOperGroupRealServerTable,
       "slbOperGroupRealServerEntry": slbOperGroupRealServerEntry,
       "slbOperRealServGroupIndex": slbOperRealServGroupIndex,
       "slbOperGroupRealServIndex": slbOperGroupRealServIndex,
       "slbOperGroupRealServerState": slbOperGroupRealServerState,
       "slbOperSessionDel": slbOperSessionDel,
       "slbOperSessionDelSrcIp": slbOperSessionDelSrcIp,
       "slbOperSessionDelSrcPort": slbOperSessionDelSrcPort,
       "slbOperSessionDelDestIp": slbOperSessionDelDestIp,
       "slbOperSessionDelDestPort": slbOperSessionDelDestPort,
       "slbOperSessionDelTransType": slbOperSessionDelTransType,
       "slbOperSessionDelete": slbOperSessionDelete,
       "slbOperHttpCachePurgeTable": slbOperHttpCachePurgeTable,
       "slbOperHttpCachePurgeEntry": slbOperHttpCachePurgeEntry,
       "slbOperHttpCachePurgeServerIndex": slbOperHttpCachePurgeServerIndex,
       "slbOperHttpCachePurgeServiceIndex": slbOperHttpCachePurgeServiceIndex,
       "slbOperHttpCachePurgeURL": slbOperHttpCachePurgeURL,
       "ocspCachePurge": ocspCachePurge,
       "slbOperOcspCachePurge": slbOperOcspCachePurge}
)
