# SNMP MIB module (Zhone-TC) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/lextm/pysnmp.com/mibs.pysnmp.com/asn1/Zhone-TC
# Produced by pysmi-1.5.4 at Mon Oct 14 21:17:09 2024
# On host MacBook-Pro.local platform Darwin version 24.0.0 by user lextm
# Using Python version 3.12.0 (main, Nov 14 2023, 23:52:11) [Clang 15.0.0 (clang-1500.0.40.1)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint,
 ConstraintsUnion) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint",
    "ConstraintsUnion")

# Import SMI symbols from the MIBs this MIB depends on

(ModuleCompliance,
 NotificationGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "iso")

(DisplayString,
 TextualConvention) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "TextualConvention")

(zhoneModules,) = mibBuilder.importSymbols(
    "Zhone",
    "zhoneModules")


# MODULE-IDENTITY

zhoneTC = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 5504, 6, 5)
)
zhoneTC.setRevisions(
        ("2012-05-08 11:36",
         "2012-02-10 11:03",
         "2012-01-31 11:20",
         "2012-01-18 18:44",
         "2011-12-02 16:34",
         "2011-11-30 11:31",
         "2011-11-30 06:53",
         "2011-11-13 20:19",
         "2011-09-02 17:19",
         "2011-07-27 05:12",
         "2011-07-06 17:27",
         "2011-06-16 21:39",
         "2011-06-08 23:45",
         "2011-06-02 19:06",
         "2011-03-24 09:10",
         "2011-01-11 15:50",
         "2010-10-20 13:51",
         "2010-09-16 17:57",
         "2010-08-12 17:44",
         "2010-07-13 10:53",
         "2010-06-07 06:52",
         "2010-06-03 05:00",
         "2010-05-13 06:12",
         "2010-04-15 09:22",
         "2010-03-27 07:15",
         "2009-06-10 13:58",
         "2009-06-03 16:31",
         "2009-04-21 13:09",
         "2009-04-14 09:52",
         "2009-03-11 16:06",
         "2009-02-23 13:29",
         "2009-02-11 13:29",
         "2009-02-04 10:14",
         "2009-01-06 11:47",
         "2008-11-26 10:51",
         "2008-11-06 07:55",
         "2008-10-29 08:35",
         "2008-10-13 11:54",
         "2008-10-03 06:00",
         "2008-08-21 07:46",
         "2008-07-07 11:07",
         "2008-07-02 10:00",
         "2008-06-27 12:05",
         "2008-06-23 13:09",
         "2008-06-04 16:47",
         "2008-05-20 10:34",
         "2008-05-12 16:55",
         "2008-03-27 16:45",
         "2008-03-17 04:57",
         "2007-10-16 11:26",
         "2007-09-15 09:37",
         "2007-09-13 18:01",
         "2007-09-13 17:58",
         "2007-07-09 14:18",
         "2007-06-21 14:43",
         "2007-06-20 06:53",
         "2007-06-15 10:37",
         "2007-05-22 16:01",
         "2007-05-11 15:55",
         "2007-05-09 11:47",
         "2007-04-19 13:28",
         "2007-04-03 15:50",
         "2007-03-09 14:39",
         "2007-02-28 17:58",
         "2006-11-18 14:05",
         "2006-10-26 15:08",
         "2006-09-14 11:11",
         "2006-09-10 18:13",
         "2006-09-06 12:13",
         "2006-08-18 12:50",
         "2006-07-25 19:22",
         "2006-07-13 16:12",
         "2006-06-19 13:31",
         "2006-06-05 10:22",
         "2006-05-22 16:10",
         "2006-05-05 12:04",
         "2006-03-09 17:57",
         "2006-03-06 11:25",
         "2005-11-10 18:48",
         "2005-10-27 16:53",
         "2005-10-27 13:25",
         "2005-10-11 16:22",
         "2005-08-25 14:28",
         "2005-08-11 19:07",
         "2005-07-13 11:36",
         "2005-05-17 18:32",
         "2005-05-12 09:28",
         "2005-04-29 14:57",
         "2005-04-06 10:42",
         "2005-03-24 17:14",
         "2005-02-18 11:07",
         "2004-11-05 13:48",
         "2004-10-06 10:33",
         "2004-09-02 11:02",
         "2004-08-05 16:45",
         "2004-07-09 13:51",
         "2004-06-21 19:40",
         "2004-05-27 10:28",
         "2004-05-24 10:26",
         "2004-05-24 10:25",
         "2004-05-14 16:12",
         "2004-04-20 10:35",
         "2004-03-16 18:47",
         "2004-03-02 13:30",
         "2004-02-24 13:01",
         "2004-02-18 13:55",
         "2004-01-23 14:57",
         "2004-01-23 10:56",
         "2004-01-21 16:56",
         "2004-01-13 17:13",
         "2003-12-22 08:36",
         "2003-09-16 12:03",
         "2003-09-08 13:32",
         "2003-09-05 18:44",
         "2003-08-21 18:43",
         "2003-08-18 11:15",
         "2003-05-09 12:38",
         "2003-05-08 17:03",
         "2003-05-08 14:53",
         "2003-04-10 17:59",
         "2003-03-04 19:27",
         "2003-03-03 16:33",
         "2002-11-22 15:46",
         "2002-10-29 15:44",
         "2002-10-24 18:00",
         "2002-10-18 15:55",
         "2002-05-29 13:01",
         "2001-08-01 16:00",
         "2001-06-28 11:12",
         "2001-05-16 12:39",
         "2000-09-12 10:51")
)


# Types definitions


# TEXTUAL-CONVENTIONS



class ZhoneWdmWavelength(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("cwdm1310", 2),
          ("cwdm1470", 3),
          ("cwdm1490", 4),
          ("cwdm1510", 5),
          ("cwdm1530", 6),
          ("cwdm1550", 7),
          ("cwdm1570", 8),
          ("cwdm1590", 9),
          ("cwdm1610", 10),
          ("dwdm20", 11),
          ("dwdm21", 12),
          ("dwdm22", 13),
          ("dwdm23", 14),
          ("dwdm24", 15),
          ("dwdm25", 16),
          ("dwdm26", 17),
          ("dwdm27", 18),
          ("dwdm28", 19),
          ("dwdm29", 20),
          ("dwdm30", 21),
          ("dwdm31", 22),
          ("dwdm32", 23),
          ("dwdm33", 24),
          ("dwdm34", 25),
          ("dwdm35", 26),
          ("dwdm36", 27),
          ("dwdm37", 28),
          ("dwdm38", 29),
          ("dwdm39", 30),
          ("dwdm40", 31),
          ("dwdm41", 32),
          ("dwdm42", 33),
          ("dwdm43", 34),
          ("dwdm44", 35),
          ("dwdm45", 36),
          ("dwdm46", 37),
          ("dwdm47", 38),
          ("dwdm48", 39),
          ("dwdm49", 40),
          ("dwdm50", 41),
          ("dwdm51", 42),
          ("dwdm52", 43),
          ("dwdm53", 44),
          ("dwdm54", 45),
          ("dwdm55", 46),
          ("dwdm56", 47),
          ("dwdm57", 48),
          ("dwdm58", 49),
          ("dwdm59", 50),
          ("mm850", 51))
    )



class ZhoneFileName(OctetString, TextualConvention):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )



class ZhoneAdminString(OctetString, TextualConvention):
    status = "current"
    displayHint = "32a"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )



class ZhoneRowStatus(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("createAndGo", 4),
          ("destroy", 6))
    )



class ZhoneShelfValue(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )



class ZhoneShelfValueOrZero(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )



class ZhoneSlotValue(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 30),
    )



class ZhoneSlotValueOrZero(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
    )



class ZhoneDiagResult(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("diagFail", 4),
          ("diagInProgress", 5),
          ("diagNotSupported", 2),
          ("diagPass", 1),
          ("diagUnableToRun", 3))
    )



class ZhoneDiagAction(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("diagResume", 4),
          ("diagStart", 1),
          ("diagStop", 2),
          ("diagSuspend", 3))
    )



class ZhoneIfType(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36)
        )
    )
    namedValues = NamedValues(
        *(("aal2Proxy", 18),
          ("aal5Proxy", 2),
          ("cellRelayProxy", 23),
          ("dspProxy", 6),
          ("efmBond", 22),
          ("efmLink", 21),
          ("ethProxy", 24),
          ("gBond", 31),
          ("gponOlt", 26),
          ("gponOnu", 25),
          ("gponPort", 27),
          ("host", 3),
          ("ipoBridge", 30),
          ("lineGroup", 1),
          ("mpBond", 33),
          ("mpLink", 32),
          ("n2nBond", 20),
          ("n2nLink", 19),
          ("none", 0),
          ("olt", 5),
          ("onu", 4),
          ("ppsClock", 36),
          ("ptp", 35),
          ("stm1", 11),
          ("stm4", 12),
          ("sts1", 7),
          ("sts12", 9),
          ("sts3", 8),
          ("sts48", 10),
          ("vc11", 16),
          ("vc12", 17),
          ("vc3", 14),
          ("vc4", 15),
          ("vt1-5", 13),
          ("vt2", 34),
          ("wdmLine", 28),
          ("wdmTrib", 29))
    )



class ZhoneCountryCode(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137,
              138,
              139,
              140,
              141,
              142,
              143,
              144,
              145,
              146,
              147,
              148,
              149,
              150,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              158,
              159,
              160,
              161,
              162,
              163,
              164,
              165,
              166,
              167,
              168,
              169,
              170,
              171,
              172,
              173,
              174,
              175,
              176,
              177,
              178,
              179,
              180,
              181,
              182,
              183,
              184,
              185,
              186,
              187,
              188,
              189,
              190,
              191,
              192,
              193,
              194,
              195,
              196,
              197,
              198,
              199,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              209,
              210,
              211,
              212,
              213,
              214,
              215,
              216,
              217,
              218,
              219,
              220,
              221,
              222,
              223,
              224,
              225,
              226,
              227,
              228,
              229,
              230,
              231,
              232,
              233,
              234,
              235,
              236,
              237)
        )
    )
    namedValues = NamedValues(
        *(("afghanistan", 23),
          ("albania", 24),
          ("algeria", 25),
          ("americansamoa", 26),
          ("andorra", 27),
          ("angola", 28),
          ("anguilla", 29),
          ("antarctica", 30),
          ("antiguabarbuda", 31),
          ("argentina", 2),
          ("armenia", 32),
          ("aruba", 33),
          ("australia", 3),
          ("austria", 34),
          ("azerbaijan", 35),
          ("bahamas", 36),
          ("bahrain", 37),
          ("bangladesh", 38),
          ("barbados", 39),
          ("belarus", 40),
          ("belgium", 4),
          ("belize", 41),
          ("benin", 42),
          ("bermuda", 43),
          ("bhutan", 44),
          ("bolivia", 45),
          ("bosniaherzegovina", 46),
          ("botswana", 47),
          ("bouvetisland", 48),
          ("brazil", 49),
          ("britishindianoceanterritory", 50),
          ("bruneidarussalam", 51),
          ("bulgaria", 52),
          ("burkinafaso", 53),
          ("burundi", 54),
          ("cambodia", 55),
          ("cameroon", 56),
          ("canada", 57),
          ("capeverde", 58),
          ("caymanislands", 59),
          ("centralafricanrepublic", 60),
          ("chad", 61),
          ("chile", 62),
          ("china", 5),
          ("christmasisland", 63),
          ("cocosislands", 64),
          ("colombia", 65),
          ("comoros", 66),
          ("congo", 67),
          ("cookislands", 68),
          ("costarica", 6),
          ("cotedivoire", 69),
          ("croatia", 70),
          ("cuba", 71),
          ("cyprus", 72),
          ("czechrepublic", 73),
          ("denmark", 74),
          ("djibouti", 75),
          ("dominica", 76),
          ("dominicanrepublic", 77),
          ("easttimor", 78),
          ("ecuador", 79),
          ("egypt", 80),
          ("elsalvador", 81),
          ("equatorialguinea", 82),
          ("eritrea", 83),
          ("estonia", 84),
          ("ethiopia", 85),
          ("falklandislands", 86),
          ("faroeislands", 87),
          ("fiji", 88),
          ("finland", 7),
          ("france", 8),
          ("frenchguiana", 89),
          ("frenchpolynesia", 90),
          ("frenchsouthernterritories", 91),
          ("gabon", 92),
          ("gambia", 93),
          ("georgia", 94),
          ("germany", 9),
          ("ghana", 95),
          ("gibraltar", 96),
          ("greece", 97),
          ("greenland", 98),
          ("grenada", 99),
          ("guadeloupe", 100),
          ("guam", 101),
          ("guatemala", 102),
          ("guinea", 103),
          ("guineabissau", 104),
          ("guyana", 105),
          ("haiti", 106),
          ("heardislandmcdonaldislands", 107),
          ("holysee", 108),
          ("honduras", 109),
          ("hongkong", 10),
          ("hungary", 110),
          ("iceland", 111),
          ("india", 112),
          ("indonesia", 113),
          ("iran", 114),
          ("iraq", 115),
          ("ireland", 116),
          ("israel", 117),
          ("italy", 11),
          ("jamaica", 118),
          ("japan", 12),
          ("jordan", 119),
          ("kazakstan", 120),
          ("kenya", 121),
          ("kiribati", 122),
          ("korea", 13),
          ("kuwait", 124),
          ("kyrgyzstan", 125),
          ("lao", 126),
          ("latvia", 127),
          ("lebanon", 128),
          ("lesotho", 129),
          ("liberia", 130),
          ("libyanarabjamahiriya", 131),
          ("liechtenstein", 132),
          ("lithuania", 133),
          ("luxembourg", 134),
          ("macau", 135),
          ("macedonia", 136),
          ("madagascar", 137),
          ("malawi", 138),
          ("malaysia", 139),
          ("maldives", 140),
          ("mali", 141),
          ("malta", 142),
          ("marshallislands", 143),
          ("martinique", 144),
          ("mauritania", 145),
          ("mauritius", 146),
          ("mayotte", 147),
          ("mexico", 14),
          ("micronesia", 148),
          ("moldova", 149),
          ("monaco", 150),
          ("mongolia", 151),
          ("montserrat", 152),
          ("morocco", 153),
          ("mozambique", 154),
          ("myanmar", 155),
          ("namibia", 156),
          ("nauru", 157),
          ("nepal", 158),
          ("netherlands", 15),
          ("netherlandsantilles", 159),
          ("newcaledonia", 160),
          ("newzealand", 16),
          ("nicaragua", 161),
          ("niger", 162),
          ("nigeria", 163),
          ("niue", 164),
          ("norfolkisland", 165),
          ("northernmarianaislands", 166),
          ("northkorea", 123),
          ("norway", 167),
          ("oman", 168),
          ("pakistan", 169),
          ("palau", 170),
          ("palestinianterritory", 171),
          ("panama", 172),
          ("papuanewguinea", 173),
          ("paraguay", 174),
          ("peru", 175),
          ("philippines", 176),
          ("pitcairn", 177),
          ("poland", 178),
          ("portugal", 179),
          ("puertorico", 180),
          ("qatar", 181),
          ("reunion", 182),
          ("romania", 183),
          ("russia", 184),
          ("rwanda", 185),
          ("sainthelena", 186),
          ("saintkittsnevis", 187),
          ("saintlucia", 188),
          ("saintpierremiquelon", 189),
          ("saintvincentthegrenadines", 190),
          ("samoa", 191),
          ("sanmarino", 192),
          ("saotomeprincipe", 193),
          ("saudiarabia", 194),
          ("senegal", 195),
          ("seychelles", 196),
          ("sierraleone", 197),
          ("singapore", 17),
          ("slovakia", 198),
          ("slovenia", 199),
          ("solomonislands", 200),
          ("somalia", 201),
          ("southafrica", 202),
          ("southgeorgia", 203),
          ("spain", 18),
          ("srilanka", 204),
          ("sudan", 205),
          ("suriname", 206),
          ("svalbardjanmayen", 207),
          ("swaziland", 208),
          ("sweden", 19),
          ("switzerland", 20),
          ("syria", 209),
          ("taiwan", 210),
          ("tajikistan", 211),
          ("tanzania", 212),
          ("thailand", 213),
          ("togo", 214),
          ("tokelau", 215),
          ("tonga", 216),
          ("trinidadtobago", 217),
          ("tunisia", 218),
          ("turkey", 219),
          ("turkmenistan", 220),
          ("turkscaicosislands", 221),
          ("uganda", 222),
          ("uk", 21),
          ("ukraine", 223),
          ("unitedarabemirates", 224),
          ("uruguay", 225),
          ("us", 22),
          ("uzbekistan", 226),
          ("vanuatu", 227),
          ("venezuela", 228),
          ("vietnam", 229),
          ("virginislandsuk", 230),
          ("virginislandsus", 231),
          ("wallisfutuna", 232),
          ("westernsahara", 233),
          ("yemen", 234),
          ("yugoslavia", 235),
          ("zambia", 236),
          ("zimbabwe", 237))
    )



class ZhoneCardType(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              13,
              15,
              16,
              17,
              18,
              800,
              801,
              802,
              803,
              804,
              805,
              1001,
              2001,
              2003,
              3001,
              4001,
              5001,
              5002,
              5003,
              5004,
              5005,
              5006,
              5007,
              5008,
              5009,
              5010,
              5011,
              5012,
              5013,
              5014,
              5015,
              5016,
              5017,
              5018,
              5019,
              5020,
              5021,
              5022,
              5023,
              5024,
              5025,
              5026,
              5027,
              5028,
              5029,
              5030,
              5031,
              5032,
              5033,
              5034,
              5035,
              5036,
              5037,
              5038,
              5039,
              5040,
              5041,
              5044,
              5045,
              5047,
              5048,
              5049,
              5050,
              5051,
              5052,
              5053,
              5054,
              5055,
              5056,
              5057,
              5058,
              5059,
              5060,
              5061,
              5062,
              5063,
              5064,
              5065,
              5066,
              5067,
              5068,
              5069,
              5070,
              5071,
              5072,
              5073,
              5074,
              5075,
              5076,
              5077,
              5078,
              5079,
              5080,
              5081,
              5083,
              5090,
              5091,
              5092,
              5093,
              5094,
              5095,
              5096,
              5097,
              5098,
              5099,
              5101,
              5109,
              5111,
              5114,
              5201,
              5202,
              5203,
              5204,
              5205,
              5206,
              5207,
              5231,
              5232,
              5233,
              5234,
              5235,
              5236,
              5238,
              5239,
              5240,
              5241,
              5242,
              5301,
              5314,
              5333,
              5339,
              5340,
              5341,
              5363,
              5364,
              5365,
              5366,
              6001,
              6002,
              6003,
              6004,
              6005,
              6006,
              6007,
              6008,
              6009,
              6010,
              6011,
              7001,
              7002,
              7003,
              7101,
              7102,
              7103,
              7104,
              7105,
              7106,
              7107,
              7108,
              7109,
              7110,
              7111,
              7112,
              8001,
              8002,
              8003,
              8004,
              9100,
              9101,
              10000,
              10100,
              10101,
              10121,
              10125,
              10150,
              10200,
              10201,
              10202,
              10203,
              10204,
              10205,
              10206,
              10207,
              10208,
              10209,
              10210,
              10212,
              10213,
              10214,
              10215,
              10216,
              10217,
              10220,
              10221,
              10222,
              10223,
              10224,
              10225,
              10226,
              10230,
              10231,
              10232,
              10233,
              10296,
              10297,
              10298,
              10299,
              10300,
              10301,
              10302,
              10303,
              10304,
              10305,
              10306,
              10307,
              10308,
              10400,
              10401,
              10402,
              10403,
              10404,
              10405,
              10406,
              10407,
              10408,
              10409,
              10410,
              10500,
              10501,
              10502,
              10503,
              10504,
              10505,
              10506,
              10507,
              10508,
              10600,
              10601,
              10602,
              10603,
              10604)
        )
    )
    namedValues = NamedValues(
        *(("adsl", 11),
          ("atmTrnk", 15),
          ("atmTrnkAal25", 16),
          ("atmTrnkCr", 8),
          ("atmTrnkT1e1", 17),
          ("dataASP", 4),
          ("ethX3400", 7108),
          ("ethX34004", 7109),
          ("ethX34004Ext", 7111),
          ("ethX34008", 7110),
          ("ethX34008Ext", 7112),
          ("ethXPwe", 7107),
          ("ethXShdsl", 7101),
          ("ethXShdsl4", 7103),
          ("ethXShdsl8", 7104),
          ("ethXT1E1", 7102),
          ("ethXT1E14", 7105),
          ("ethXT1E18", 7106),
          ("ethernet", 9),
          ("fiberSlam101", 9101),
          ("gigaMux100", 9100),
          ("hdsl2", 10),
          ("infoServices", 3),
          ("interShelf", 2),
          ("ipIad", 7001),
          ("m100Adsl2Pip", 5333),
          ("m100Adsl2pAnxB", 5339),
          ("malc100Gshdsl", 5202),
          ("malc100Gshdsl48V", 5206),
          ("malc100Gshdsl48VSplt", 5207),
          ("malc100Ip", 5204),
          ("malc100Splt", 5205),
          ("malc100T1Ima", 5201),
          ("malc100T1ImaTDM", 5203),
          ("malc50Gshdsl", 5231),
          ("malc50Splt", 5232),
          ("malcAc5AnxB", 5013),
          ("malcActEth10", 5071),
          ("malcAdsl", 5004),
          ("malcAdsl48AnxAmBond", 5080),
          ("malcAdsl48AnxBBond", 5081),
          ("malcAdslAc5", 5010),
          ("malcAdslAc6", 5015),
          ("malcAdslAnxBAc6", 5018),
          ("malcAdslAnxBSpltAc6", 5019),
          ("malcAdslC", 5020),
          ("malcAdslPots", 5005),
          ("malcAdslPotsAc6", 5016),
          ("malcAdslPotsC", 5021),
          ("malcAdslSpltAc6", 5017),
          ("malcAdslSpltC", 5022),
          ("malcAdslSpltUkAc6", 5023),
          ("malcAdslSpltUkC", 5024),
          ("malcDs3", 5009),
          ("malcDs3E3Atm4", 5070),
          ("malcDs3F", 5109),
          ("malcDs3GigE", 5052),
          ("malcGigE", 5035),
          ("malcGpon", 5076),
          ("malcGshdsl", 5006),
          ("malcGshdsl48", 5069),
          ("malcGshdsl4w", 5030),
          ("malcGshdslBonded", 5074),
          ("malcGshdslBondedNt", 5093),
          ("malcGshdslBondedNtp", 5092),
          ("malcGshdslBondedNtpExt", 5365),
          ("malcGshdslBondedNtwcExt", 5366),
          ("malcGshdslPots", 5007),
          ("malcNextGen", 10000),
          ("malcOc12", 5029),
          ("malcOc3", 5011),
          ("malcOc3F", 5111),
          ("malcOc3GigE", 5051),
          ("malcOc48Trunk", 5037),
          ("malcOlt", 5031),
          ("malcPots", 5002),
          ("malcPots48", 5047),
          ("malcPots48Pv", 5048),
          ("malcPots900", 5008),
          ("malcPotsVg", 5033),
          ("malcReachDsl", 5064),
          ("malcReachDslSplitter", 5075),
          ("malcRprGigE", 5041),
          ("malcRprGigENt", 5066),
          ("malcT1E1-16Vg", 5062),
          ("malcT1E1-32Vg", 5063),
          ("malcT1E1-4Vg", 5060),
          ("malcT1E1-8Vg", 5061),
          ("malcT1E1Atm32", 5032),
          ("malcT1E1Bonded", 5068),
          ("malcT1E1Ces12", 5034),
          ("malcT1E1Tdm", 5014),
          ("malcT1E1TdmF", 5114),
          ("malcT1E1TdmF2", 5314),
          ("malcT1E1Vg", 5040),
          ("malcT1ImaF", 5101),
          ("malcT1ImaF2", 5301),
          ("malcUlc", 5025),
          ("malcUlcEbs", 5027),
          ("malcUlcPower", 5028),
          ("malcUlcs", 5049),
          ("malcUlcsEbs", 5094),
          ("malcUlcsEbs-Pv", 5095),
          ("malcUlcsEbsPots-Pv", 5099),
          ("malcUlcsISDN-2B1Q", 5050),
          ("malcUlcsISDN-2B1Q-Pv", 5053),
          ("malcUlcsISDN-4B3T", 5054),
          ("malcUlcsISDN-4B3T-Pv", 5055),
          ("malcUlcsPots", 5056),
          ("malcUlcsPots-Pv", 5057),
          ("malcUlcsPotsCoin", 5058),
          ("malcUlcsPotsCoin-Pv", 5059),
          ("malcUpFeGeRpr", 5091),
          ("malcUpFeGeRprTdm", 5090),
          ("malcUplinkNt1", 5001),
          ("malcVdsl", 5026),
          ("malcVdsl2", 5067),
          ("malcXP150A", 5340),
          ("malcXP350A", 5341),
          ("malcXdsl17a", 5077),
          ("malcXdsl48", 5036),
          ("malcXdsl48AnxAm", 5065),
          ("malcXdsl48AnxBm", 5073),
          ("malcXdslAnnexB", 5039),
          ("malcXdslPots48", 5044),
          ("malcXdslPots48Pv", 5045),
          ("malcXdslPots48PvRngItm", 5083),
          ("malcXdslSpltAnxA", 5038),
          ("malcXdslSpltAnxA600", 5078),
          ("malcXdslSpltAnxA900", 5079),
          ("mtacRing", 5003),
          ("mtacRingFc", 5012),
          ("mx1U150", 10601),
          ("mx1U151", 10603),
          ("mx1U152", 10604),
          ("mx1U160", 10301),
          ("mx1U161", 10302),
          ("mx1U162", 10303),
          ("mx1U180", 10401),
          ("mx1U180-LT-TP-RJ45", 10407),
          ("mx1U180-TP-RJ45", 10405),
          ("mx1U194", 10501),
          ("mx1U194-10GE", 10503),
          ("mx1U194-10GE-TOP", 10507),
          ("mx1U194-TOP", 10505),
          ("mx1U198", 10502),
          ("mx1U198-10GE", 10504),
          ("mx1U198-10GE-TOP", 10508),
          ("mx1U198-TOP", 10506),
          ("mx1U19xFamily", 10500),
          ("mx1U260", 10304),
          ("mx1U261", 10305),
          ("mx1U262", 10306),
          ("mx1U280", 10402),
          ("mx1U280-LT-TP-RJ45", 10408),
          ("mx1U280-TP-RJ45", 10406),
          ("mx1UGponD1", 10296),
          ("mx1USplitter600D2", 10298),
          ("mx1USplitter900D2", 10299),
          ("mx1Ux5xFamily", 10600),
          ("mx1Ux6xFamily", 10300),
          ("mx1Ux80Family", 10400),
          ("mxDcAdslAnnexB", 10226),
          ("mxFtOne09", 800),
          ("mxFtOne19", 801),
          ("mxFtOne23", 802),
          ("mxFtTwo09", 803),
          ("mxFtTwo19", 804),
          ("mxFtTwo23", 805),
          ("mxLc20AE", 10200),
          ("mxLc20AE1S", 10207),
          ("mxLc20Ae1SCsfp", 10216),
          ("mxLc24GshdslBond", 10208),
          ("mxLc24T1E1Bond", 10214),
          ("mxLc24T1E1Pwe", 10215),
          ("mxLc24Ulcs", 10230),
          ("mxLc24UlcsISDN-2B1Q-Pv", 10231),
          ("mxLc24UlcsISDN-4B3T-Pv", 10232),
          ("mxLc24UlcsPots-Pv", 10233),
          ("mxLc24Vdsl2", 10210),
          ("mxLc24Vdsl2Pots", 10222),
          ("mxLc24Vdsl2Pots2", 10223),
          ("mxLc48Pots", 10213),
          ("mxLc48Vdsl2", 10224),
          ("mxLc48aAdsl", 10204),
          ("mxLc48aAdslBond", 10202),
          ("mxLc48bAdslBond", 10206),
          ("mxLc4Gp", 10205),
          ("mxLc72Pots", 10209),
          ("mxLc72aAdslBond", 10212),
          ("mxLc72bAdslBond", 10225),
          ("mxLc8Gp", 10203),
          ("mxLcGp", 10201),
          ("mxLcOc3Stm1Pwe", 10217),
          ("mxLcVdsl2Splt600", 10221),
          ("mxLcVdsl2Splt900", 10220),
          ("mxUp2Tg8g", 10100),
          ("mxUp2Tg8gTOP", 10150),
          ("mxUp4G", 10125),
          ("mxUp4gCopper", 10121),
          ("mxUp8G", 10101),
          ("mxp1U150", 10602),
          ("mxp1U160", 10307),
          ("mxp1U180", 10403),
          ("mxp1U180-TP-RJ45", 10409),
          ("mxp1U260", 10308),
          ("mxp1U280", 10404),
          ("mxp1U280-TP-RJ45", 10410),
          ("mxp1UPotsD2", 10297),
          ("oc3Atm", 13),
          ("r100ADSL2PGIGE", 5236),
          ("r100ADSL2PHDSL4", 5234),
          ("r100ADSL2PHT1IMA", 5235),
          ("r100ADSL2PIP", 5233),
          ("r100Adsl2pAnxB", 5239),
          ("raptorXP150A", 5240),
          ("raptorXP160", 5238),
          ("raptorXP170", 5242),
          ("raptorXP350A", 5241),
          ("s300Cpu", 6001),
          ("s300Fxo", 6007),
          ("s300Fxs", 6006),
          ("s300Ixcon", 6009),
          ("s300Mt3c", 6004),
          ("s300S155", 6008),
          ("s300Se1", 6003),
          ("s300St1Csu", 6011),
          ("s300St1Dsx", 6002),
          ("s300Sts1", 6005),
          ("s300Xcon", 6010),
          ("sechtor100", 1001),
          ("skyzhone", 4001),
          ("t3Atm", 7),
          ("t3Tdm", 6),
          ("tac", 5363),
          ("tacFc", 5364),
          ("tacItmRing", 5072),
          ("tacItmRingFc", 5096),
          ("tacRing", 5097),
          ("tacRingFc", 5098),
          ("tdmT1e1", 18),
          ("unknownType", 1),
          ("voiceASP", 5),
          ("zedge6200em", 7002),
          ("zedge6200fxs", 7003),
          ("zedge64", 2001),
          ("zplex10", 3001),
          ("zrg300", 8002),
          ("zrg500", 8001),
          ("zrg600", 8003),
          ("zrg700", 2003),
          ("zrg800", 8004))
    )



class ZhoneCardLineType(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              35,
              36,
              37,
              38,
              39,
              40)
        )
    )
    namedValues = NamedValues(
        *(("adsl-pots", 20),
          ("adsl-pots-pv", 21),
          ("adsl-pots-pv-rng-itm", 40),
          ("adsl-splitter", 22),
          ("ds1", 3),
          ("ds1ima", 5),
          ("ds3", 7),
          ("e1", 2),
          ("e1ImaV52", 11),
          ("e1UniV52", 10),
          ("e1ima", 4),
          ("e3", 6),
          ("ebs", 37),
          ("ebs-pots-pv", 39),
          ("ebs-pv", 38),
          ("gshdsl", 12),
          ("gshdsl-nt", 36),
          ("gshdsl-ntp", 35),
          ("isdn", 25),
          ("isdn-pv", 26),
          ("pots", 23),
          ("pots-coin", 27),
          ("pots-coin-pv", 28),
          ("pots-pv", 24),
          ("reach-dsl-splitter", 29),
          ("rpr", 16),
          ("rprE1V52", 18),
          ("rprT1Cas", 19),
          ("rprT1Gr303", 17),
          ("t1-tr008", 30),
          ("t1Cas", 15),
          ("t1ImaGr303", 9),
          ("t1ImaT1Cas", 14),
          ("t1UniGr303", 8),
          ("t1UniT1Cas", 13),
          ("unknown", 1))
    )



class ZhoneAlarmTypeId(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              10001,
              10002,
              10003,
              10004,
              10005,
              10006,
              10007,
              10008,
              10009,
              10010,
              10011,
              10012,
              10013,
              10014,
              10015,
              10016,
              10017,
              10018,
              10019,
              10020,
              10021,
              10022,
              10023,
              10024,
              10025,
              10026,
              10027,
              10028,
              10029,
              10030,
              10031,
              10032,
              10033,
              10034,
              10035,
              10036,
              10037,
              10038,
              10039,
              10040,
              10041,
              10042,
              10043,
              10044,
              10045,
              10046,
              10047,
              10048,
              10049,
              10050,
              10051,
              10052,
              10053,
              10054,
              10055,
              10056,
              10057,
              10058,
              10059,
              10060,
              10061,
              10062,
              10063,
              10064,
              10065,
              10066,
              10067,
              10068,
              10069,
              10070,
              10071,
              10072,
              10073,
              10074,
              10075,
              10076,
              10077,
              10078,
              10079,
              10080,
              10081,
              10082,
              10083,
              10084,
              10085,
              10086,
              10087,
              10088,
              10089,
              10090,
              10091,
              10092,
              10093,
              10094,
              10095,
              10096,
              10097,
              10098,
              10099,
              10100,
              10101,
              10102,
              10103,
              10104,
              10105,
              10106,
              10107,
              10108,
              10109,
              10110,
              10111,
              10112,
              10113,
              10114,
              10115,
              10116,
              10117,
              10118,
              10119,
              10120,
              10121,
              10122,
              10123,
              10124,
              10125,
              10126,
              10127,
              10128,
              10129,
              10130,
              10131,
              10132,
              10133,
              10134,
              10135,
              10136,
              10137,
              10138,
              10139,
              10140,
              10141,
              10142,
              10143,
              10144,
              10145,
              10146,
              10147,
              10148,
              10149,
              10150,
              10151,
              10152,
              10153,
              10154,
              10155,
              10156,
              10157,
              10158,
              10159,
              10160,
              10162,
              10163,
              10170,
              10171,
              10172,
              10173,
              10174,
              10175,
              10176,
              10177,
              10178,
              10179,
              10180,
              10181,
              10182,
              10183,
              10184,
              10185,
              10186,
              10187,
              10188,
              10189,
              10190)
        )
    )
    namedValues = NamedValues(
        *(("aal2ExternalAIS", 10001),
          ("aal2ExternalRAI", 10002),
          ("aal2InternalAIS", 10003),
          ("aal2InternalRDI", 10004),
          ("aal2PerfCellLossThreshTrap", 10006),
          ("aal2PerfCongestionThreshTrap", 10007),
          ("aal2PvcDown", 10005),
          ("adslAtucInitFailureTrap", 12),
          ("adslAtucPerfESsThreshTrap", 9),
          ("adslAtucPerfLofsThreshTrap", 6),
          ("adslAtucPerfLolsThreshTrap", 11),
          ("adslAtucPerfLossThreshTrap", 7),
          ("adslAtucPerfLprsThreshTrap", 8),
          ("adslAtucRateChangeTrap", 10),
          ("adslAturPerfESsThreshTrap", 16),
          ("adslAturPerfLofsThreshTrap", 13),
          ("adslAturPerfLossThreshTrap", 14),
          ("adslAturPerfLprsThreshTrap", 15),
          ("adslAturRateChangeTrap", 17),
          ("apsEventChannelMismatch", 10042),
          ("apsEventFEPLF", 10044),
          ("apsEventModeMismatch", 10041),
          ("apsEventPSBF", 10043),
          ("apsEventSwitchover", 10040),
          ("atmDsx3PlcpAlarmStatusChange", 10009),
          ("atmInterfaceTCAlarmStateChange", 10010),
          ("atmOamF4PingStatus", 10015),
          ("atmOamF5PingStatus", 10013),
          ("atmVclBandwidthUnavailable", 10011),
          ("atmVclOperStatusChange", 10008),
          ("atmVpiAutoCreateComplete", 10014),
          ("atmVplOperStatusChange", 10012),
          ("bridgeLoopDetection", 10179),
          ("bridgeStormDetection", 10181),
          ("cfmFaultAlarmErrorCcmUnexpectedMepTrap", 10186),
          ("cfmFaultAlarmErrorCcmUnexpectedPeriodTrap", 10187),
          ("cfmFaultAlarmMacStatusTrap", 10184),
          ("cfmFaultAlarmRdiCcmTrap", 10183),
          ("cfmFaultAlarmRemoteCcmTrap", 10185),
          ("cfmFaultAlarmXconCcmMismergeTrap", 10190),
          ("cfmFaultAlarmXconCcmUnexpectedLevelTrap", 10189),
          ("cfmFaultAlarmXconCcmUnexpectedMepTrap", 10188),
          ("coldStart", 1),
          ("cpeCfgMgrStatusChange", 10175),
          ("dhcpTrapZhoneCpeDetected", 10070),
          ("dhcpTrapZhoneCpeSysObjectID", 10071),
          ("dhcpTrapZhoneIpAddressUpdate", 10072),
          ("dsx3LineStatusChange", 5),
          ("igCrvRemoteStateChange", 10059),
          ("igCrvTmcStateChange", 10060),
          ("igEocPrimaryStateChange", 10057),
          ("igEocSecondaryStateChange", 10058),
          ("igOperStatusChange", 10054),
          ("igSystemTimeChange", 10061),
          ("igTmcPrimaryStateChange", 10055),
          ("igTmcSecondaryStateChange", 10056),
          ("isdnMibCallInformation", 18),
          ("isdnTrapAmiViolations", 10025),
          ("isdnTrapFECV", 10024),
          ("isdnTrapFrameSynchLoss", 10023),
          ("isdnTrapUnbalancedFrame", 10026),
          ("linkDown", 3),
          ("mxkAlarmInput", 10180),
          ("sechtor100FanStatusChange", 10045),
          ("sechtor100ThermoStatusChange", 10046),
          ("sipStatusCodeNotif", 10047),
          ("sipStatusCodeThreshExceededNotif", 10048),
          ("sonetClockTransmitSourceChange", 10027),
          ("sonetLineStatusChange", 10029),
          ("sonetPathStatusChange", 10030),
          ("sonetSectionStatusChange", 10028),
          ("upstreamTrafficTrap", 10182),
          ("v52CChannelStatusChange", 10067),
          ("v52CPathOperStatusChange", 10068),
          ("v52IgOperStatusChange", 10066),
          ("v52IgPortAlignmentNotification", 10063),
          ("v52IgProvVariantRequestNotification", 10062),
          ("v52LinkBlockNotification", 10065),
          ("v52LinkCheckIdNotification", 10064),
          ("v52ProtectionCPathOperStatusChange", 10069),
          ("voiceDspChannelInterArrvJitterTrigger", 10053),
          ("voiceDspChannelPktsLoss", 10052),
          ("voiceDspReset", 10051),
          ("warmStart", 2),
          ("zapTrapZhoneBanDetected", 10075),
          ("zapTrapZhoneCpeConnectionDown", 10077),
          ("zapTrapZhoneCpeDetected", 10074),
          ("zapTrapZhoneMalcConnectionDown", 10078),
          ("zapTrapZhoneMalcDetected", 10073),
          ("zapTrapZhoneProvisioningDone", 10076),
          ("zhoneAdslPotsBypassRelayChangeNotification", 10021),
          ("zhoneAdsllAtucMinTxAlarm", 10122),
          ("zhoneAdsllAturMinTxAlarm", 10123),
          ("zhoneBadBattery", 10117),
          ("zhoneBitRateThresholdExceeded", 10141),
          ("zhoneBondGroupDown", 10128),
          ("zhoneBulkStatisticsIntervalFailure", 10038),
          ("zhoneCPEConnectionUp", 10114),
          ("zhoneCardAdded", 10134),
          ("zhoneCardFaultError", 10136),
          ("zhoneCardLinkToBkplaneStatusChange", 10170),
          ("zhoneCardRedundancyStatusChange", 10037),
          ("zhoneCardRemoved", 10133),
          ("zhoneCardReset", 10137),
          ("zhoneCardServicesStatusChange", 10031),
          ("zhoneCardTimeoutError", 10135),
          ("zhoneDslLineAlarmStatusChange", 10022),
          ("zhoneEfmBondGroupTrafficDisabled", 10163),
          ("zhoneEfmLineTrafficDisabled", 10172),
          ("zhoneElcpIGOperStatusChange", 10112),
          ("zhoneExternalAlarmTrap", 10032),
          ("zhoneFanAFailure", 10102),
          ("zhoneFanAOk", 10103),
          ("zhoneFanBFailure", 10104),
          ("zhoneFanBOk", 10105),
          ("zhoneFanCFailure", 10125),
          ("zhoneFanDFailure", 10126),
          ("zhoneFanEFailure", 10127),
          ("zhoneFanPowerSupplyAFailure", 10095),
          ("zhoneFanPowerSupplyAOk", 10096),
          ("zhoneFanPowerSupplyBFailure", 10097),
          ("zhoneFanPowerSupplyBOk", 10098),
          ("zhoneFanSpeedError", 10090),
          ("zhoneFanSpeedOk", 10101),
          ("zhoneFanTrayAdded", 10099),
          ("zhoneFanTrayRemoved", 10100),
          ("zhoneGponOltError", 10178),
          ("zhoneGponOltRogueOnu", 10176),
          ("zhoneGponOltRssiRogueOnu", 10177),
          ("zhoneGponOnuError", 10174),
          ("zhoneIPSLAJitter", 10140),
          ("zhoneIPSLALatency", 10139),
          ("zhoneIPSLATimeout", 10138),
          ("zhoneISDNLinkDown", 10113),
          ("zhoneImaGroupDown", 10081),
          ("zhoneLeftOutletTempNormal", 10083),
          ("zhoneLeftOutletTempOverLimit", 10082),
          ("zhoneLineRedundancyUnsafe", 10171),
          ("zhoneLineStatusChange", 10016),
          ("zhoneLinkAggLink1Down", 10129),
          ("zhoneLinkAggLink2Down", 10130),
          ("zhoneLowBatteryPower", 10116),
          ("zhoneNoBatteryBackup", 10118),
          ("zhoneNoUPS", 10119),
          ("zhoneOnBatteryPower", 10115),
          ("zhonePermanentLockoutFailure", 10111),
          ("zhonePingTestCompleted", 10080),
          ("zhonePmeErrorMonitorEfmTrafficDisabled", 10160),
          ("zhonePmeSnrMgnThresholdCrossing", 10159),
          ("zhonePowerSupplyAFailure", 10086),
          ("zhonePowerSupplyAOk", 10087),
          ("zhonePowerSupplyBFailure", 10088),
          ("zhonePowerSupplyBOk", 10089),
          ("zhonePowerSupplyCFailure", 10106),
          ("zhonePowerSupplyCOk", 10107),
          ("zhonePowerSupplyDFailure", 10108),
          ("zhonePowerSupplyDOk", 10109),
          ("zhoneRedundancyUnsafe", 10132),
          ("zhoneRightOutletTempNormal", 10085),
          ("zhoneRightOutletTempOverLimit", 10084),
          ("zhoneRingerFailure", 10124),
          ("zhoneRingerPowerBusFailure", 10162),
          ("zhoneRprEastSpanDown", 10120),
          ("zhoneRprWestSpanDown", 10121),
          ("zhoneShelfControllerCleared", 10110),
          ("zhoneShelfControllerFault", 10091),
          ("zhoneTempNormal", 10094),
          ("zhoneTempOverLimit", 10092),
          ("zhoneTempUnderLimit", 10093),
          ("zhoneTraceRoutePathChange", 10049),
          ("zhoneTraceRouteTestFailed", 10050),
          ("zhoneTrapCardMemStatus", 10079),
          ("zhoneTrapCardProcessorUsage", 10173),
          ("zhoneTrapCardStatusChange", 10018),
          ("zhoneTrapCardVersionCheck", 10019),
          ("zhoneTrapConfigSyncChange", 10035),
          ("zhoneTrapCpeConnectionDown", 10034),
          ("zhoneTrapFlashCardStatusChange", 10020),
          ("zhoneTrapShelfStatusChange", 10017),
          ("zhoneTrapSnmpSATimeout", 10036),
          ("zhoneUnassignedGponOnu", 10131),
          ("zhoneVdslXTUCInitFailure", 10156),
          ("zhoneVdslXTUCMinTxThresholdExceeded", 10157),
          ("zhoneVdslXTUCPerf15minESSThresholdExceeded", 10146),
          ("zhoneVdslXTUCPerf15minLOFSThresholdExceeded", 10142),
          ("zhoneVdslXTUCPerf15minLOLSThresholdExceeded", 10145),
          ("zhoneVdslXTUCPerf15minLOSSThresholdExceeded", 10143),
          ("zhoneVdslXTUCPerf15minLPRSThresholdExceeded", 10144),
          ("zhoneVdslXTUCPerf15minSESSThresholdExceeded", 10147),
          ("zhoneVdslXTUCPerf15minUASSThresholdExceeded", 10148),
          ("zhoneVdslXTUCPerf1dayESSThresholdExceeded", 10153),
          ("zhoneVdslXTUCPerf1dayLOFSThresholdExceeded", 10149),
          ("zhoneVdslXTUCPerf1dayLOLSThresholdExceeded", 10152),
          ("zhoneVdslXTUCPerf1dayLOSSThresholdExceeded", 10150),
          ("zhoneVdslXTUCPerf1dayLPRSThresholdExceeded", 10151),
          ("zhoneVdslXTUCPerf1daySESSThresholdExceeded", 10154),
          ("zhoneVdslXTUCPerf1dayUASSThresholdExceeded", 10155),
          ("zhoneVdslXTURMinTxThresholdExceeded", 10158),
          ("zhoneZmsBlockCliChange", 10039),
          ("zrgBatteryRelayNotification", 10033))
    )



class ZhoneAlarmSeverity(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("critical", 1),
          ("major", 2),
          ("minor", 3),
          ("warning", 4))
    )



class ZhoneEnabledFlag(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )



class ZhoneAdminState(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("down", 2),
          ("testing", 3),
          ("up", 1))
    )



# MIB Managed Objects in the order of their OIDs


# Managed Objects groups


# Notification objects


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "Zhone-TC",
    **{"ZhoneWdmWavelength": ZhoneWdmWavelength,
       "ZhoneFileName": ZhoneFileName,
       "ZhoneAdminString": ZhoneAdminString,
       "ZhoneRowStatus": ZhoneRowStatus,
       "ZhoneShelfValue": ZhoneShelfValue,
       "ZhoneShelfValueOrZero": ZhoneShelfValueOrZero,
       "ZhoneSlotValue": ZhoneSlotValue,
       "ZhoneSlotValueOrZero": ZhoneSlotValueOrZero,
       "ZhoneDiagResult": ZhoneDiagResult,
       "ZhoneDiagAction": ZhoneDiagAction,
       "ZhoneIfType": ZhoneIfType,
       "ZhoneCountryCode": ZhoneCountryCode,
       "ZhoneCardType": ZhoneCardType,
       "ZhoneCardLineType": ZhoneCardLineType,
       "ZhoneAlarmTypeId": ZhoneAlarmTypeId,
       "ZhoneAlarmSeverity": ZhoneAlarmSeverity,
       "ZhoneEnabledFlag": ZhoneEnabledFlag,
       "ZhoneAdminState": ZhoneAdminState,
       "zhoneTC": zhoneTC}
)
