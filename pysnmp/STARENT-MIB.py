# SNMP MIB module (STARENT-MIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/lextm/pysnmp.com/mibs.pysnmp.com/asn1/STARENT-MIB
# Produced by pysmi-1.5.4 at Mon Oct 14 22:57:53 2024
# On host MacBook-Pro.local platform Darwin version 24.0.0 by user lextm
# Using Python version 3.12.0 (main, Nov 14 2023, 23:52:11) [Clang 15.0.0 (clang-1500.0.40.1)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint,
 ConstraintsUnion) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint",
    "ConstraintsUnion")

# Import SMI symbols from the MIBs this MIB depends on

(InetAddress,
 InetAddressType) = mibBuilder.importSymbols(
    "INET-ADDRESS-MIB",
    "InetAddress",
    "InetAddressType")

(Ipv6Address,) = mibBuilder.importSymbols(
    "IPV6-TC",
    "Ipv6Address")

(radiusAccServerAddress,
 radiusAccServerIndex) = mibBuilder.importSymbols(
    "RADIUS-ACC-CLIENT-MIB",
    "radiusAccServerAddress",
    "radiusAccServerIndex")

(radiusAuthServerAddress,
 radiusAuthServerIndex) = mibBuilder.importSymbols(
    "RADIUS-AUTH-CLIENT-MIB",
    "radiusAuthServerAddress",
    "radiusAuthServerIndex")

(ModuleCompliance,
 NotificationGroup,
 ObjectGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup",
    "ObjectGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 enterprises,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "enterprises",
    "iso")

(DateAndTime,
 DisplayString,
 TextualConvention,
 TruthValue) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DateAndTime",
    "DisplayString",
    "TextualConvention",
    "TruthValue")


# MODULE-IDENTITY

starentMIB = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 8164)
)
starentMIB.setRevisions(
        ("2016-04-12 00:00",
         "2016-04-11 00:00",
         "2015-09-14 00:00",
         "2015-09-11 00:00",
         "2014-11-04 00:00",
         "2014-10-30 00:00",
         "2014-10-08 00:00",
         "2014-08-04 00:00",
         "2014-07-23 00:00",
         "2014-07-16 00:00",
         "2014-06-11 00:00",
         "2014-05-08 00:00",
         "2014-04-25 00:00",
         "2013-02-20 00:00",
         "2013-02-20 00:00",
         "2013-12-06 00:00",
         "2013-12-05 00:00",
         "2013-11-22 00:00",
         "2013-10-04 00:00",
         "2013-09-27 00:00",
         "2013-09-25 00:00",
         "2013-07-23 00:00",
         "2013-07-15 00:00",
         "2013-07-10 00:00",
         "2013-06-26 00:00",
         "2013-06-11 00:00",
         "2013-06-04 00:00",
         "2013-05-24 00:00",
         "2013-05-22 00:00",
         "2013-05-07 00:00",
         "2013-04-25 00:01",
         "2013-04-25 00:00",
         "2013-04-18 00:00",
         "2013-04-16 00:00",
         "2013-04-09 00:00",
         "2013-04-05 00:00",
         "2013-04-04 00:00",
         "2013-03-26 00:00",
         "2013-03-18 00:00",
         "2013-03-11 00:00",
         "2013-03-06 00:00",
         "2013-02-28 00:00",
         "2013-02-26 00:00",
         "2012-12-04 00:00",
         "2012-09-25 00:00",
         "2012-07-23 00:00",
         "2012-07-13 00:00",
         "2012-07-09 00:00",
         "2012-05-15 00:00",
         "2012-04-13 00:00",
         "2012-04-05 00:00",
         "2011-10-14 00:00")
)


# Types definitions


# TEXTUAL-CONVENTIONS



class StarentSlotType(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("lc", 4),
          ("pactac", 2),
          ("rcc", 5),
          ("spc", 3),
          ("spio", 6),
          ("unknown", 1))
    )



class StarentCardType(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52)
        )
    )
    namedValues = NamedValues(
        *(("cfc", 47),
          ("dpc", 42),
          ("dpc2", 52),
          ("dpcdc", 44),
          ("edc", 33),
          ("fanctrl6", 28),
          ("fsc", 41),
          ("gpdsp", 30),
          ("lcchan3p2", 26),
          ("lcchan3p4", 27),
          ("lcds3", 9),
          ("lceth", 7),
          ("lceth2", 21),
          ("lcgeth", 8),
          ("lcgeth2", 20),
          ("lcoc12", 12),
          ("lcoc3", 11),
          ("lcqgeth", 15),
          ("lctgeth", 16),
          ("mdpc", 43),
          ("mio", 34),
          ("mio10g10p", 35),
          ("mio10g20p", 36),
          ("mio40g12p", 39),
          ("mio40g2p", 37),
          ("mio40g4p", 38),
          ("miodc", 40),
          ("none", 1),
          ("pac", 4),
          ("ppc", 25),
          ("psc", 14),
          ("psc2", 22),
          ("psc3", 23),
          ("pscA", 24),
          ("rcc", 6),
          ("sfc1p", 48),
          ("sfc2p", 49),
          ("sfc3p", 50),
          ("sfc4p", 51),
          ("smc", 13),
          ("spc", 3),
          ("spio", 5),
          ("ssc", 45),
          ("tac", 10),
          ("unknown", 2),
          ("vioc", 29),
          ("vlceth1p", 19),
          ("vmc", 17),
          ("voc", 46),
          ("vop", 32),
          ("vpc", 18),
          ("xme", 31))
    )



class StarentVersionNum(OctetString, TextualConvention):
    status = "current"
    displayHint = "256a"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )



class StarRelayState(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 2),
          ("unknown", 3))
    )



class StarLongDurTimeoutAction(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("detection", 1),
          ("disconnection", 2),
          ("dormantdetection", 5),
          ("dormantdisconnection", 4),
          ("notapplicable", 3),
          ("unknown", 0))
    )



class StarShortName(OctetString, TextualConvention):
    status = "current"
    displayHint = "32a"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )



class StarShortID(OctetString, TextualConvention):
    status = "current"
    displayHint = "17a"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 17),
    )



class StarMediumID(OctetString, TextualConvention):
    status = "current"
    displayHint = "25a"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 25),
    )



class StarENBID(OctetString, TextualConvention):
    status = "current"
    displayHint = "16a"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )



class StarQOSTPAction(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("drop", 3),
          ("loweripprecedence", 4),
          ("notapplicable", 1),
          ("transmit", 2),
          ("unknown", 0))
    )



class StarOSPFNeighborState(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("attempt", 2),
          ("down", 1),
          ("exchange", 6),
          ("exstart", 5),
          ("full", 8),
          ("init", 3),
          ("loading", 7),
          ("twoway", 4),
          ("unknown", 0))
    )



# MIB Managed Objects in the order of their OIDs

_StarentMIBObjects_ObjectIdentity = ObjectIdentity
starentMIBObjects = _StarentMIBObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1)
)
_StarentChassis_ObjectIdentity = ObjectIdentity
starentChassis = _StarentChassis_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 1)
)
_StarChassisCriticalCO_Type = StarRelayState
_StarChassisCriticalCO_Object = MibScalar
starChassisCriticalCO = _StarChassisCriticalCO_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 1, 1),
    _StarChassisCriticalCO_Type()
)
starChassisCriticalCO.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starChassisCriticalCO.setStatus("current")
_StarChassisMajorCO_Type = StarRelayState
_StarChassisMajorCO_Object = MibScalar
starChassisMajorCO = _StarChassisMajorCO_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 1, 2),
    _StarChassisMajorCO_Type()
)
starChassisMajorCO.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starChassisMajorCO.setStatus("current")
_StarChassisMinorCO_Type = StarRelayState
_StarChassisMinorCO_Object = MibScalar
starChassisMinorCO = _StarChassisMinorCO_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 1, 3),
    _StarChassisMinorCO_Type()
)
starChassisMinorCO.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starChassisMinorCO.setStatus("current")


class _StarChassisAction_Type(Integer32):
    """Custom type starChassisAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("aco", 2),
          ("noaction", 1),
          ("reset", 3))
    )


_StarChassisAction_Type.__name__ = "Integer32"
_StarChassisAction_Object = MibScalar
starChassisAction = _StarChassisAction_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 1, 5),
    _StarChassisAction_Type()
)
starChassisAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    starChassisAction.setStatus("current")
_StarTimeTicks_Type = Unsigned32
_StarTimeTicks_Object = MibScalar
starTimeTicks = _StarTimeTicks_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 1, 6),
    _StarTimeTicks_Type()
)
starTimeTicks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starTimeTicks.setStatus("current")
_StarChassisAudibleAlarm_Type = StarRelayState
_StarChassisAudibleAlarm_Object = MibScalar
starChassisAudibleAlarm = _StarChassisAudibleAlarm_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 1, 7),
    _StarChassisAudibleAlarm_Type()
)
starChassisAudibleAlarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starChassisAudibleAlarm.setStatus("current")
_StarChassisUTCTime_Type = DateAndTime
_StarChassisUTCTime_Object = MibScalar
starChassisUTCTime = _StarChassisUTCTime_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 1, 8),
    _StarChassisUTCTime_Type()
)
starChassisUTCTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starChassisUTCTime.setStatus("current")
_StarChassisLocalTime_Type = DateAndTime
_StarChassisLocalTime_Object = MibScalar
starChassisLocalTime = _StarChassisLocalTime_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 1, 9),
    _StarChassisLocalTime_Type()
)
starChassisLocalTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starChassisLocalTime.setStatus("current")


class _StarChassisType_Type(Integer32):
    """Custom type starChassisType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("asr5000", 5),
          ("asr5500", 6),
          ("qvpc-di", 10),
          ("ssi", 7),
          ("ssi-kvm-guest", 8),
          ("ssi-kvm-vsm-guest", 9),
          ("st16", 1),
          ("st20", 4),
          ("st40", 2),
          ("unknown", 0),
          ("xt2", 3))
    )


_StarChassisType_Type.__name__ = "Integer32"
_StarChassisType_Object = MibScalar
starChassisType = _StarChassisType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 1, 10),
    _StarChassisType_Type()
)
starChassisType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starChassisType.setStatus("current")
_StarChassisDescription_Type = DisplayString
_StarChassisDescription_Object = MibScalar
starChassisDescription = _StarChassisDescription_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 1, 11),
    _StarChassisDescription_Type()
)
starChassisDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starChassisDescription.setStatus("current")
_StarChassisSWRevision_Type = DisplayString
_StarChassisSWRevision_Object = MibScalar
starChassisSWRevision = _StarChassisSWRevision_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 1, 12),
    _StarChassisSWRevision_Type()
)
starChassisSWRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starChassisSWRevision.setStatus("current")


class _StarChassisPeakCpuUsage_Type(Integer32):
    """Custom type starChassisPeakCpuUsage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_StarChassisPeakCpuUsage_Type.__name__ = "Integer32"
_StarChassisPeakCpuUsage_Object = MibScalar
starChassisPeakCpuUsage = _StarChassisPeakCpuUsage_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 1, 13),
    _StarChassisPeakCpuUsage_Type()
)
starChassisPeakCpuUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starChassisPeakCpuUsage.setStatus("current")
if mibBuilder.loadTexts:
    starChassisPeakCpuUsage.setUnits("percentage times 100")


class _StarChassisPeakMemoryUsage_Type(Integer32):
    """Custom type starChassisPeakMemoryUsage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2097152),
    )


_StarChassisPeakMemoryUsage_Type.__name__ = "Integer32"
_StarChassisPeakMemoryUsage_Object = MibScalar
starChassisPeakMemoryUsage = _StarChassisPeakMemoryUsage_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 1, 14),
    _StarChassisPeakMemoryUsage_Type()
)
starChassisPeakMemoryUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starChassisPeakMemoryUsage.setStatus("current")
if mibBuilder.loadTexts:
    starChassisPeakMemoryUsage.setUnits("KB")
_StarentSlots_ObjectIdentity = ObjectIdentity
starentSlots = _StarentSlots_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2)
)
_StarSlotTable_Object = MibTable
starSlotTable = _StarSlotTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1)
)
if mibBuilder.loadTexts:
    starSlotTable.setStatus("current")
_StarSlotEntry_Object = MibTableRow
starSlotEntry = _StarSlotEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1)
)
starSlotEntry.setIndexNames(
    (0, "STARENT-MIB", "starSlotNum"),
)
if mibBuilder.loadTexts:
    starSlotEntry.setStatus("current")


class _StarSlotNum_Type(Integer32):
    """Custom type starSlotNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 48),
    )


_StarSlotNum_Type.__name__ = "Integer32"
_StarSlotNum_Object = MibTableColumn
starSlotNum = _StarSlotNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 1),
    _StarSlotNum_Type()
)
starSlotNum.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSlotNum.setStatus("current")
_StarSlotType_Type = StarentSlotType
_StarSlotType_Object = MibTableColumn
starSlotType = _StarSlotType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 2),
    _StarSlotType_Type()
)
starSlotType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotType.setStatus("current")
_StarCardType_Type = StarentCardType
_StarCardType_Object = MibTableColumn
starCardType = _StarCardType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 3),
    _StarCardType_Type()
)
starCardType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCardType.setStatus("current")


class _StarCardOperState_Type(Integer32):
    """Custom type starCardOperState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("active", 7),
          ("booting", 4),
          ("empty", 2),
          ("initializing", 11),
          ("migratefrom", 8),
          ("migrateto", 9),
          ("offline", 3),
          ("ready", 5),
          ("secondary", 12),
          ("standby", 6),
          ("starting", 10),
          ("unknown", 1))
    )


_StarCardOperState_Type.__name__ = "Integer32"
_StarCardOperState_Object = MibTableColumn
starCardOperState = _StarCardOperState_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 4),
    _StarCardOperState_Type()
)
starCardOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCardOperState.setStatus("current")


class _StarCardAdminState_Type(Integer32):
    """Custom type starCardAdminState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 3),
          ("enabled", 2),
          ("unknown", 1))
    )


_StarCardAdminState_Type.__name__ = "Integer32"
_StarCardAdminState_Object = MibTableColumn
starCardAdminState = _StarCardAdminState_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 5),
    _StarCardAdminState_Type()
)
starCardAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCardAdminState.setStatus("current")
_StarCardRevision_Type = StarentVersionNum
_StarCardRevision_Object = MibTableColumn
starCardRevision = _StarCardRevision_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 6),
    _StarCardRevision_Type()
)
starCardRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCardRevision.setStatus("current")
_StarCardLastStateChange_Type = DateAndTime
_StarCardLastStateChange_Object = MibTableColumn
starCardLastStateChange = _StarCardLastStateChange_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 7),
    _StarCardLastStateChange_Type()
)
starCardLastStateChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCardLastStateChange.setStatus("current")


class _StarCardMode_Type(Integer32):
    """Custom type starCardMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("active", 4),
          ("activedpc", 9),
          ("activepac", 5),
          ("activepsc", 7),
          ("activetac", 6),
          ("activevpc", 8),
          ("notapplicable", 2),
          ("standby", 3),
          ("unknown", 1))
    )


_StarCardMode_Type.__name__ = "Integer32"
_StarCardMode_Object = MibTableColumn
starCardMode = _StarCardMode_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 8),
    _StarCardMode_Type()
)
starCardMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCardMode.setStatus("current")
_StarCardPacStandbyPriority_Type = Gauge32
_StarCardPacStandbyPriority_Object = MibTableColumn
starCardPacStandbyPriority = _StarCardPacStandbyPriority_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 9),
    _StarCardPacStandbyPriority_Type()
)
starCardPacStandbyPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCardPacStandbyPriority.setStatus("current")


class _StarCardHaltIssued_Type(Integer32):
    """Custom type starCardHaltIssued based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no", 3),
          ("notapplicable", 1),
          ("yes", 2))
    )


_StarCardHaltIssued_Type.__name__ = "Integer32"
_StarCardHaltIssued_Object = MibTableColumn
starCardHaltIssued = _StarCardHaltIssued_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 10),
    _StarCardHaltIssued_Type()
)
starCardHaltIssued.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCardHaltIssued.setStatus("current")


class _StarCardLock_Type(Integer32):
    """Custom type starCardLock based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("locked", 2),
          ("unknown", 1),
          ("unlocked", 3))
    )


_StarCardLock_Type.__name__ = "Integer32"
_StarCardLock_Object = MibTableColumn
starCardLock = _StarCardLock_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 11),
    _StarCardLock_Type()
)
starCardLock.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCardLock.setStatus("current")


class _StarCardRebootPending_Type(Integer32):
    """Custom type starCardRebootPending based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_StarCardRebootPending_Type.__name__ = "Integer32"
_StarCardRebootPending_Object = MibTableColumn
starCardRebootPending = _StarCardRebootPending_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 12),
    _StarCardRebootPending_Type()
)
starCardRebootPending.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCardRebootPending.setStatus("current")


class _StarCardUsable_Type(Integer32):
    """Custom type starCardUsable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_StarCardUsable_Type.__name__ = "Integer32"
_StarCardUsable_Object = MibTableColumn
starCardUsable = _StarCardUsable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 13),
    _StarCardUsable_Type()
)
starCardUsable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCardUsable.setStatus("current")


class _StarCardSinglePOF_Type(Integer32):
    """Custom type starCardSinglePOF based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no", 2),
          ("notapplicable", 1),
          ("yes", 3))
    )


_StarCardSinglePOF_Type.__name__ = "Integer32"
_StarCardSinglePOF_Object = MibTableColumn
starCardSinglePOF = _StarCardSinglePOF_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 14),
    _StarCardSinglePOF_Type()
)
starCardSinglePOF.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCardSinglePOF.setStatus("current")


class _StarCardAttachment_Type(Integer32):
    """Custom type starCardAttachment based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("connected", 1),
          ("unconnected", 2))
    )


_StarCardAttachment_Type.__name__ = "Integer32"
_StarCardAttachment_Object = MibTableColumn
starCardAttachment = _StarCardAttachment_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 15),
    _StarCardAttachment_Type()
)
starCardAttachment.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCardAttachment.setStatus("current")
_StarCardTemperature_Type = Gauge32
_StarCardTemperature_Object = MibTableColumn
starCardTemperature = _StarCardTemperature_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 16),
    _StarCardTemperature_Type()
)
starCardTemperature.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCardTemperature.setStatus("current")
if mibBuilder.loadTexts:
    starCardTemperature.setUnits("degrees Celcius")
_StarSlotVoltage1dot5_Type = Gauge32
_StarSlotVoltage1dot5_Object = MibTableColumn
starSlotVoltage1dot5 = _StarSlotVoltage1dot5_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 20),
    _StarSlotVoltage1dot5_Type()
)
starSlotVoltage1dot5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotVoltage1dot5.setStatus("obsolete")
if mibBuilder.loadTexts:
    starSlotVoltage1dot5.setUnits("millivolts")
_StarSlotVoltage1dot5LowThresh_Type = Gauge32
_StarSlotVoltage1dot5LowThresh_Object = MibTableColumn
starSlotVoltage1dot5LowThresh = _StarSlotVoltage1dot5LowThresh_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 21),
    _StarSlotVoltage1dot5LowThresh_Type()
)
starSlotVoltage1dot5LowThresh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotVoltage1dot5LowThresh.setStatus("obsolete")
if mibBuilder.loadTexts:
    starSlotVoltage1dot5LowThresh.setUnits("millivolts")
_StarSlotVoltage1dot5HighThresh_Type = Gauge32
_StarSlotVoltage1dot5HighThresh_Object = MibTableColumn
starSlotVoltage1dot5HighThresh = _StarSlotVoltage1dot5HighThresh_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 22),
    _StarSlotVoltage1dot5HighThresh_Type()
)
starSlotVoltage1dot5HighThresh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotVoltage1dot5HighThresh.setStatus("obsolete")
if mibBuilder.loadTexts:
    starSlotVoltage1dot5HighThresh.setUnits("millivolts")
_StarSlotVoltage1dot8_Type = Gauge32
_StarSlotVoltage1dot8_Object = MibTableColumn
starSlotVoltage1dot8 = _StarSlotVoltage1dot8_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 23),
    _StarSlotVoltage1dot8_Type()
)
starSlotVoltage1dot8.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotVoltage1dot8.setStatus("obsolete")
if mibBuilder.loadTexts:
    starSlotVoltage1dot8.setUnits("millivolts")
_StarSlotVoltage1dot8LowThresh_Type = Gauge32
_StarSlotVoltage1dot8LowThresh_Object = MibTableColumn
starSlotVoltage1dot8LowThresh = _StarSlotVoltage1dot8LowThresh_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 24),
    _StarSlotVoltage1dot8LowThresh_Type()
)
starSlotVoltage1dot8LowThresh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotVoltage1dot8LowThresh.setStatus("obsolete")
if mibBuilder.loadTexts:
    starSlotVoltage1dot8LowThresh.setUnits("millivolts")
_StarSlotVoltage1dot8HighThresh_Type = Gauge32
_StarSlotVoltage1dot8HighThresh_Object = MibTableColumn
starSlotVoltage1dot8HighThresh = _StarSlotVoltage1dot8HighThresh_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 25),
    _StarSlotVoltage1dot8HighThresh_Type()
)
starSlotVoltage1dot8HighThresh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotVoltage1dot8HighThresh.setStatus("obsolete")
if mibBuilder.loadTexts:
    starSlotVoltage1dot8HighThresh.setUnits("millivolts")
_StarSlotVoltage2dot5_Type = Gauge32
_StarSlotVoltage2dot5_Object = MibTableColumn
starSlotVoltage2dot5 = _StarSlotVoltage2dot5_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 26),
    _StarSlotVoltage2dot5_Type()
)
starSlotVoltage2dot5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotVoltage2dot5.setStatus("obsolete")
if mibBuilder.loadTexts:
    starSlotVoltage2dot5.setUnits("millivolts")
_StarSlotVoltage2dot5LowThresh_Type = Gauge32
_StarSlotVoltage2dot5LowThresh_Object = MibTableColumn
starSlotVoltage2dot5LowThresh = _StarSlotVoltage2dot5LowThresh_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 27),
    _StarSlotVoltage2dot5LowThresh_Type()
)
starSlotVoltage2dot5LowThresh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotVoltage2dot5LowThresh.setStatus("obsolete")
if mibBuilder.loadTexts:
    starSlotVoltage2dot5LowThresh.setUnits("millivolts")
_StarSlotVoltage2dot5HighThresh_Type = Gauge32
_StarSlotVoltage2dot5HighThresh_Object = MibTableColumn
starSlotVoltage2dot5HighThresh = _StarSlotVoltage2dot5HighThresh_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 28),
    _StarSlotVoltage2dot5HighThresh_Type()
)
starSlotVoltage2dot5HighThresh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotVoltage2dot5HighThresh.setStatus("obsolete")
if mibBuilder.loadTexts:
    starSlotVoltage2dot5HighThresh.setUnits("millivolts")
_StarSlotVoltage3dot3_Type = Gauge32
_StarSlotVoltage3dot3_Object = MibTableColumn
starSlotVoltage3dot3 = _StarSlotVoltage3dot3_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 29),
    _StarSlotVoltage3dot3_Type()
)
starSlotVoltage3dot3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotVoltage3dot3.setStatus("obsolete")
if mibBuilder.loadTexts:
    starSlotVoltage3dot3.setUnits("millivolts")
_StarSlotVoltage3dot3LowThresh_Type = Gauge32
_StarSlotVoltage3dot3LowThresh_Object = MibTableColumn
starSlotVoltage3dot3LowThresh = _StarSlotVoltage3dot3LowThresh_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 30),
    _StarSlotVoltage3dot3LowThresh_Type()
)
starSlotVoltage3dot3LowThresh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotVoltage3dot3LowThresh.setStatus("obsolete")
if mibBuilder.loadTexts:
    starSlotVoltage3dot3LowThresh.setUnits("millivolts")
_StarSlotVoltage3dot3HighThresh_Type = Gauge32
_StarSlotVoltage3dot3HighThresh_Object = MibTableColumn
starSlotVoltage3dot3HighThresh = _StarSlotVoltage3dot3HighThresh_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 31),
    _StarSlotVoltage3dot3HighThresh_Type()
)
starSlotVoltage3dot3HighThresh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotVoltage3dot3HighThresh.setStatus("obsolete")
if mibBuilder.loadTexts:
    starSlotVoltage3dot3HighThresh.setUnits("millivolts")
_StarSlotVoltage5dot0_Type = Gauge32
_StarSlotVoltage5dot0_Object = MibTableColumn
starSlotVoltage5dot0 = _StarSlotVoltage5dot0_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 32),
    _StarSlotVoltage5dot0_Type()
)
starSlotVoltage5dot0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotVoltage5dot0.setStatus("obsolete")
if mibBuilder.loadTexts:
    starSlotVoltage5dot0.setUnits("millivolts")
_StarSlotVoltage5dot0LowThresh_Type = Gauge32
_StarSlotVoltage5dot0LowThresh_Object = MibTableColumn
starSlotVoltage5dot0LowThresh = _StarSlotVoltage5dot0LowThresh_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 33),
    _StarSlotVoltage5dot0LowThresh_Type()
)
starSlotVoltage5dot0LowThresh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotVoltage5dot0LowThresh.setStatus("obsolete")
if mibBuilder.loadTexts:
    starSlotVoltage5dot0LowThresh.setUnits("millivolts")
_StarSlotVoltage5dot0HighThresh_Type = Gauge32
_StarSlotVoltage5dot0HighThresh_Object = MibTableColumn
starSlotVoltage5dot0HighThresh = _StarSlotVoltage5dot0HighThresh_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 34),
    _StarSlotVoltage5dot0HighThresh_Type()
)
starSlotVoltage5dot0HighThresh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotVoltage5dot0HighThresh.setStatus("obsolete")
if mibBuilder.loadTexts:
    starSlotVoltage5dot0HighThresh.setUnits("millivolts")
_StarSlotNumPorts_Type = Gauge32
_StarSlotNumPorts_Object = MibTableColumn
starSlotNumPorts = _StarSlotNumPorts_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 35),
    _StarSlotNumPorts_Type()
)
starSlotNumPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotNumPorts.setStatus("current")


class _StarSlotAction_Type(Integer32):
    """Custom type starSlotAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noaction", 1),
          ("reset", 2))
    )


_StarSlotAction_Type.__name__ = "Integer32"
_StarSlotAction_Object = MibTableColumn
starSlotAction = _StarSlotAction_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 36),
    _StarSlotAction_Type()
)
starSlotAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    starSlotAction.setStatus("current")


class _StarSlotVoltageState_Type(Integer32):
    """Custom type starSlotVoltageState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("normal", 1),
          ("outofrange", 2),
          ("unknown", 0))
    )


_StarSlotVoltageState_Type.__name__ = "Integer32"
_StarSlotVoltageState_Object = MibTableColumn
starSlotVoltageState = _StarSlotVoltageState_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 37),
    _StarSlotVoltageState_Type()
)
starSlotVoltageState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotVoltageState.setStatus("current")
_StarSlotNumCPU_Type = Integer32
_StarSlotNumCPU_Object = MibTableColumn
starSlotNumCPU = _StarSlotNumCPU_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 38),
    _StarSlotNumCPU_Type()
)
starSlotNumCPU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotNumCPU.setStatus("current")
_StarSlotPartNumber_Type = DisplayString
_StarSlotPartNumber_Object = MibTableColumn
starSlotPartNumber = _StarSlotPartNumber_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 39),
    _StarSlotPartNumber_Type()
)
starSlotPartNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotPartNumber.setStatus("current")
_StarSlotPartRevision_Type = DisplayString
_StarSlotPartRevision_Object = MibTableColumn
starSlotPartRevision = _StarSlotPartRevision_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 40),
    _StarSlotPartRevision_Type()
)
starSlotPartRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotPartRevision.setStatus("current")
_StarSlotSerialNumber_Type = DisplayString
_StarSlotSerialNumber_Object = MibTableColumn
starSlotSerialNumber = _StarSlotSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 41),
    _StarSlotSerialNumber_Type()
)
starSlotSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotSerialNumber.setStatus("current")
_StarSlotCLEICode_Type = DisplayString
_StarSlotCLEICode_Object = MibTableColumn
starSlotCLEICode = _StarSlotCLEICode_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 42),
    _StarSlotCLEICode_Type()
)
starSlotCLEICode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotCLEICode.setStatus("current")
_StarSlotCiscoModelName_Type = DisplayString
_StarSlotCiscoModelName_Object = MibTableColumn
starSlotCiscoModelName = _StarSlotCiscoModelName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 43),
    _StarSlotCiscoModelName_Type()
)
starSlotCiscoModelName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotCiscoModelName.setStatus("current")
_StarSlotCiscoHardwareRev_Type = DisplayString
_StarSlotCiscoHardwareRev_Object = MibTableColumn
starSlotCiscoHardwareRev = _StarSlotCiscoHardwareRev_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 44),
    _StarSlotCiscoHardwareRev_Type()
)
starSlotCiscoHardwareRev.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotCiscoHardwareRev.setStatus("current")
_StarSlotCiscoSerialNumber_Type = DisplayString
_StarSlotCiscoSerialNumber_Object = MibTableColumn
starSlotCiscoSerialNumber = _StarSlotCiscoSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 45),
    _StarSlotCiscoSerialNumber_Type()
)
starSlotCiscoSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotCiscoSerialNumber.setStatus("current")


class _StarDeviceNum_Type(Integer32):
    """Custom type starDeviceNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_StarDeviceNum_Type.__name__ = "Integer32"
_StarDeviceNum_Object = MibTableColumn
starDeviceNum = _StarDeviceNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 46),
    _StarDeviceNum_Type()
)
starDeviceNum.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starDeviceNum.setStatus("current")


class _StarSerdesNum_Type(Integer32):
    """Custom type starSerdesNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 127),
    )


_StarSerdesNum_Type.__name__ = "Integer32"
_StarSerdesNum_Object = MibTableColumn
starSerdesNum = _StarSerdesNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 2, 1, 1, 47),
    _StarSerdesNum_Type()
)
starSerdesNum.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSerdesNum.setStatus("current")
_StarentSlotMapping_ObjectIdentity = ObjectIdentity
starentSlotMapping = _StarentSlotMapping_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 3)
)
_StarSlotMappingTable_Object = MibTable
starSlotMappingTable = _StarSlotMappingTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 3, 1)
)
if mibBuilder.loadTexts:
    starSlotMappingTable.setStatus("current")
_StarSlotMappingEntry_Object = MibTableRow
starSlotMappingEntry = _StarSlotMappingEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 3, 1, 1)
)
starSlotMappingEntry.setIndexNames(
    (0, "STARENT-MIB", "starSlotMappingNum"),
)
if mibBuilder.loadTexts:
    starSlotMappingEntry.setStatus("current")


class _StarSlotMappingNum_Type(Integer32):
    """Custom type starSlotMappingNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(17, 48),
    )


_StarSlotMappingNum_Type.__name__ = "Integer32"
_StarSlotMappingNum_Object = MibTableColumn
starSlotMappingNum = _StarSlotMappingNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 3, 1, 1, 1),
    _StarSlotMappingNum_Type()
)
starSlotMappingNum.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starSlotMappingNum.setStatus("current")


class _StarSlotMappingType_Type(Integer32):
    """Custom type starSlotMappingType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("cross", 5),
          ("direct", 3),
          ("none", 2),
          ("rcc", 4),
          ("unknown", 1))
    )


_StarSlotMappingType_Type.__name__ = "Integer32"
_StarSlotMappingType_Object = MibTableColumn
starSlotMappingType = _StarSlotMappingType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 3, 1, 1, 2),
    _StarSlotMappingType_Type()
)
starSlotMappingType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotMappingType.setStatus("current")


class _StarSlotMappingRCCNum_Type(Integer32):
    """Custom type starSlotMappingRCCNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
    )


_StarSlotMappingRCCNum_Type.__name__ = "Integer32"
_StarSlotMappingRCCNum_Object = MibTableColumn
starSlotMappingRCCNum = _StarSlotMappingRCCNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 3, 1, 1, 3),
    _StarSlotMappingRCCNum_Type()
)
starSlotMappingRCCNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotMappingRCCNum.setStatus("current")


class _StarSlotMappingToSlot_Type(Integer32):
    """Custom type starSlotMappingToSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_StarSlotMappingToSlot_Type.__name__ = "Integer32"
_StarSlotMappingToSlot_Object = MibTableColumn
starSlotMappingToSlot = _StarSlotMappingToSlot_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 3, 1, 1, 4),
    _StarSlotMappingToSlot_Type()
)
starSlotMappingToSlot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSlotMappingToSlot.setStatus("current")
_StarentFans_ObjectIdentity = ObjectIdentity
starentFans = _StarentFans_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 4)
)
_StarFanTable_Object = MibTable
starFanTable = _StarFanTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 4, 1)
)
if mibBuilder.loadTexts:
    starFanTable.setStatus("current")
_StarFanEntry_Object = MibTableRow
starFanEntry = _StarFanEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 4, 1, 1)
)
starFanEntry.setIndexNames(
    (0, "STARENT-MIB", "starFanNum"),
)
if mibBuilder.loadTexts:
    starFanEntry.setStatus("current")


class _StarFanNum_Type(Integer32):
    """Custom type starFanNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_StarFanNum_Type.__name__ = "Integer32"
_StarFanNum_Object = MibTableColumn
starFanNum = _StarFanNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 4, 1, 1, 1),
    _StarFanNum_Type()
)
starFanNum.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starFanNum.setStatus("current")


class _StarFanLocation_Type(Integer32):
    """Custom type starFanLocation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("lower", 2),
          ("lowerFront", 3),
          ("lowerRear", 4),
          ("upper", 1),
          ("upperFront", 5),
          ("upperRear", 6))
    )


_StarFanLocation_Type.__name__ = "Integer32"
_StarFanLocation_Object = MibTableColumn
starFanLocation = _StarFanLocation_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 4, 1, 1, 2),
    _StarFanLocation_Type()
)
starFanLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFanLocation.setStatus("current")
_StarFanStatus_Type = Integer32
_StarFanStatus_Object = MibTableColumn
starFanStatus = _StarFanStatus_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 4, 1, 1, 3),
    _StarFanStatus_Type()
)
starFanStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFanStatus.setStatus("current")


class _StarFanSpeed_Type(Integer32):
    """Custom type starFanSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("speed100", 12),
          ("speed50", 2),
          ("speed55", 3),
          ("speed60", 4),
          ("speed65", 5),
          ("speed70", 6),
          ("speed75", 7),
          ("speed80", 8),
          ("speed85", 9),
          ("speed90", 10),
          ("speed95", 11),
          ("unknown", 1))
    )


_StarFanSpeed_Type.__name__ = "Integer32"
_StarFanSpeed_Object = MibTableColumn
starFanSpeed = _StarFanSpeed_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 4, 1, 1, 4),
    _StarFanSpeed_Type()
)
starFanSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFanSpeed.setStatus("current")
_StarentLogs_ObjectIdentity = ObjectIdentity
starentLogs = _StarentLogs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 5)
)
_StarLogTable_Object = MibTable
starLogTable = _StarLogTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 5, 1)
)
if mibBuilder.loadTexts:
    starLogTable.setStatus("current")
_StarLogEntry_Object = MibTableRow
starLogEntry = _StarLogEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 5, 1, 1)
)
starLogEntry.setIndexNames(
    (0, "STARENT-MIB", "starLogName"),
)
if mibBuilder.loadTexts:
    starLogEntry.setStatus("current")
_StarLogName_Type = StarShortName
_StarLogName_Object = MibTableColumn
starLogName = _StarLogName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 5, 1, 1, 1),
    _StarLogName_Type()
)
starLogName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starLogName.setStatus("current")
_StarLogCurSize_Type = Gauge32
_StarLogCurSize_Object = MibTableColumn
starLogCurSize = _StarLogCurSize_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 5, 1, 1, 2),
    _StarLogCurSize_Type()
)
starLogCurSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starLogCurSize.setStatus("current")
_StarLogMaxSize_Type = Gauge32
_StarLogMaxSize_Object = MibTableColumn
starLogMaxSize = _StarLogMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 5, 1, 1, 3),
    _StarLogMaxSize_Type()
)
starLogMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starLogMaxSize.setStatus("current")


class _StarLogText_Type(OctetString):
    """Custom type starLogText based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 512),
    )


_StarLogText_Type.__name__ = "OctetString"
_StarLogText_Object = MibTableColumn
starLogText = _StarLogText_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 5, 1, 1, 4),
    _StarLogText_Type()
)
starLogText.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starLogText.setStatus("current")
_StarentAlertMan_ObjectIdentity = ObjectIdentity
starentAlertMan = _StarentAlertMan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 8)
)
_StarentFeedback_ObjectIdentity = ObjectIdentity
starentFeedback = _StarentFeedback_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 8, 1)
)
_StarMaxAlertsPerTime_Type = Unsigned32
_StarMaxAlertsPerTime_Object = MibScalar
starMaxAlertsPerTime = _StarMaxAlertsPerTime_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 8, 1, 1),
    _StarMaxAlertsPerTime_Type()
)
starMaxAlertsPerTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMaxAlertsPerTime.setStatus("current")
_StarWindowTime_Type = Unsigned32
_StarWindowTime_Object = MibScalar
starWindowTime = _StarWindowTime_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 8, 1, 2),
    _StarWindowTime_Type()
)
starWindowTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starWindowTime.setStatus("current")
if mibBuilder.loadTexts:
    starWindowTime.setUnits("seconds")
_StarAlertSendingEnabled_Type = TruthValue
_StarAlertSendingEnabled_Object = MibScalar
starAlertSendingEnabled = _StarAlertSendingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 8, 1, 3),
    _StarAlertSendingEnabled_Type()
)
starAlertSendingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starAlertSendingEnabled.setStatus("current")
_StarentPolledLog_ObjectIdentity = ObjectIdentity
starentPolledLog = _StarentPolledLog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 8, 2)
)
_StarentPower_ObjectIdentity = ObjectIdentity
starentPower = _StarentPower_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 9)
)
_StarPowerTable_Object = MibTable
starPowerTable = _StarPowerTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 9, 1)
)
if mibBuilder.loadTexts:
    starPowerTable.setStatus("current")
_StarPowerEntry_Object = MibTableRow
starPowerEntry = _StarPowerEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 9, 1, 1)
)
starPowerEntry.setIndexNames(
    (0, "STARENT-MIB", "starPowerNumber"),
)
if mibBuilder.loadTexts:
    starPowerEntry.setStatus("current")


class _StarPowerNumber_Type(Integer32):
    """Custom type starPowerNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("powerA", 1),
          ("powerB", 2))
    )


_StarPowerNumber_Type.__name__ = "Integer32"
_StarPowerNumber_Object = MibTableColumn
starPowerNumber = _StarPowerNumber_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 9, 1, 1, 1),
    _StarPowerNumber_Type()
)
starPowerNumber.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPowerNumber.setStatus("current")


class _StarPowerState_Type(Integer32):
    """Custom type starPowerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("failed", 2),
          ("notpresent", 3))
    )


_StarPowerState_Type.__name__ = "Integer32"
_StarPowerState_Object = MibTableColumn
starPowerState = _StarPowerState_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 9, 1, 1, 2),
    _StarPowerState_Type()
)
starPowerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPowerState.setStatus("current")
_StarentCPU_ObjectIdentity = ObjectIdentity
starentCPU = _StarentCPU_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 10)
)
_StarCPUTable_Object = MibTable
starCPUTable = _StarCPUTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 10, 1)
)
if mibBuilder.loadTexts:
    starCPUTable.setStatus("current")
_StarCPUEntry_Object = MibTableRow
starCPUEntry = _StarCPUEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 10, 1, 1)
)
starCPUEntry.setIndexNames(
    (0, "STARENT-MIB", "starCPUSlot"),
    (0, "STARENT-MIB", "starCPUNumber"),
)
if mibBuilder.loadTexts:
    starCPUEntry.setStatus("current")


class _StarCPUSlot_Type(Integer32):
    """Custom type starCPUSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 48),
    )


_StarCPUSlot_Type.__name__ = "Integer32"
_StarCPUSlot_Object = MibTableColumn
starCPUSlot = _StarCPUSlot_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 10, 1, 1, 1),
    _StarCPUSlot_Type()
)
starCPUSlot.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starCPUSlot.setStatus("current")


class _StarCPUNumber_Type(Integer32):
    """Custom type starCPUNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_StarCPUNumber_Type.__name__ = "Integer32"
_StarCPUNumber_Object = MibTableColumn
starCPUNumber = _StarCPUNumber_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 10, 1, 1, 2),
    _StarCPUNumber_Type()
)
starCPUNumber.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starCPUNumber.setStatus("current")


class _StarCPUUser_Type(Gauge32):
    """Custom type starCPUUser based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_StarCPUUser_Type.__name__ = "Gauge32"
_StarCPUUser_Object = MibTableColumn
starCPUUser = _StarCPUUser_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 10, 1, 1, 3),
    _StarCPUUser_Type()
)
starCPUUser.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCPUUser.setStatus("current")
if mibBuilder.loadTexts:
    starCPUUser.setUnits("percentage times 100")


class _StarCPUSystem_Type(Gauge32):
    """Custom type starCPUSystem based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_StarCPUSystem_Type.__name__ = "Gauge32"
_StarCPUSystem_Object = MibTableColumn
starCPUSystem = _StarCPUSystem_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 10, 1, 1, 4),
    _StarCPUSystem_Type()
)
starCPUSystem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCPUSystem.setStatus("current")
if mibBuilder.loadTexts:
    starCPUSystem.setUnits("percentage times 100")


class _StarCPUIdle_Type(Gauge32):
    """Custom type starCPUIdle based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_StarCPUIdle_Type.__name__ = "Gauge32"
_StarCPUIdle_Object = MibTableColumn
starCPUIdle = _StarCPUIdle_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 10, 1, 1, 6),
    _StarCPUIdle_Type()
)
starCPUIdle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCPUIdle.setStatus("current")
if mibBuilder.loadTexts:
    starCPUIdle.setUnits("percentage times 100")


class _StarCPUIO_Type(Gauge32):
    """Custom type starCPUIO based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_StarCPUIO_Type.__name__ = "Gauge32"
_StarCPUIO_Object = MibTableColumn
starCPUIO = _StarCPUIO_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 10, 1, 1, 7),
    _StarCPUIO_Type()
)
starCPUIO.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCPUIO.setStatus("current")
if mibBuilder.loadTexts:
    starCPUIO.setUnits("percentage times 100")


class _StarCPUIRQ_Type(Gauge32):
    """Custom type starCPUIRQ based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_StarCPUIRQ_Type.__name__ = "Gauge32"
_StarCPUIRQ_Object = MibTableColumn
starCPUIRQ = _StarCPUIRQ_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 10, 1, 1, 8),
    _StarCPUIRQ_Type()
)
starCPUIRQ.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCPUIRQ.setStatus("current")
if mibBuilder.loadTexts:
    starCPUIRQ.setUnits("percentage times 100")


class _StarCPULoad1Min_Type(Gauge32):
    """Custom type starCPULoad1Min based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_StarCPULoad1Min_Type.__name__ = "Gauge32"
_StarCPULoad1Min_Object = MibTableColumn
starCPULoad1Min = _StarCPULoad1Min_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 10, 1, 1, 11),
    _StarCPULoad1Min_Type()
)
starCPULoad1Min.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCPULoad1Min.setStatus("current")
if mibBuilder.loadTexts:
    starCPULoad1Min.setUnits("processes times 100")


class _StarCPULoad5Min_Type(Gauge32):
    """Custom type starCPULoad5Min based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_StarCPULoad5Min_Type.__name__ = "Gauge32"
_StarCPULoad5Min_Object = MibTableColumn
starCPULoad5Min = _StarCPULoad5Min_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 10, 1, 1, 12),
    _StarCPULoad5Min_Type()
)
starCPULoad5Min.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCPULoad5Min.setStatus("current")
if mibBuilder.loadTexts:
    starCPULoad5Min.setUnits("processes times 100")


class _StarCPULoad15Min_Type(Gauge32):
    """Custom type starCPULoad15Min based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_StarCPULoad15Min_Type.__name__ = "Gauge32"
_StarCPULoad15Min_Object = MibTableColumn
starCPULoad15Min = _StarCPULoad15Min_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 10, 1, 1, 13),
    _StarCPULoad15Min_Type()
)
starCPULoad15Min.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCPULoad15Min.setStatus("current")
if mibBuilder.loadTexts:
    starCPULoad15Min.setUnits("processes times 100")


class _StarCPUMemTotal_Type(Integer32):
    """Custom type starCPUMemTotal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_StarCPUMemTotal_Type.__name__ = "Integer32"
_StarCPUMemTotal_Object = MibTableColumn
starCPUMemTotal = _StarCPUMemTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 10, 1, 1, 14),
    _StarCPUMemTotal_Type()
)
starCPUMemTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCPUMemTotal.setStatus("current")
if mibBuilder.loadTexts:
    starCPUMemTotal.setUnits("KB")


class _StarCPUMemUsed_Type(Gauge32):
    """Custom type starCPUMemUsed based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_StarCPUMemUsed_Type.__name__ = "Gauge32"
_StarCPUMemUsed_Object = MibTableColumn
starCPUMemUsed = _StarCPUMemUsed_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 10, 1, 1, 15),
    _StarCPUMemUsed_Type()
)
starCPUMemUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCPUMemUsed.setStatus("current")
if mibBuilder.loadTexts:
    starCPUMemUsed.setUnits("KB")


class _StarCPUNumProcesses_Type(Gauge32):
    """Custom type starCPUNumProcesses based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32768),
    )


_StarCPUNumProcesses_Type.__name__ = "Gauge32"
_StarCPUNumProcesses_Object = MibTableColumn
starCPUNumProcesses = _StarCPUNumProcesses_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 10, 1, 1, 16),
    _StarCPUNumProcesses_Type()
)
starCPUNumProcesses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCPUNumProcesses.setStatus("current")
if mibBuilder.loadTexts:
    starCPUNumProcesses.setUnits("processes")


class _StarCPUMemCached_Type(Gauge32):
    """Custom type starCPUMemCached based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_StarCPUMemCached_Type.__name__ = "Gauge32"
_StarCPUMemCached_Object = MibTableColumn
starCPUMemCached = _StarCPUMemCached_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 10, 1, 1, 17),
    _StarCPUMemCached_Type()
)
starCPUMemCached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCPUMemCached.setStatus("current")
if mibBuilder.loadTexts:
    starCPUMemCached.setUnits("KB")
_StarentNPUMgr_ObjectIdentity = ObjectIdentity
starentNPUMgr = _StarentNPUMgr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 11)
)
_StarNPUMgrTable_Object = MibTable
starNPUMgrTable = _StarNPUMgrTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 11, 1)
)
if mibBuilder.loadTexts:
    starNPUMgrTable.setStatus("current")
_StarNPUMgrEntry_Object = MibTableRow
starNPUMgrEntry = _StarNPUMgrEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 11, 1, 1)
)
starNPUMgrEntry.setIndexNames(
    (0, "STARENT-MIB", "starNPUMgrNumber"),
)
if mibBuilder.loadTexts:
    starNPUMgrEntry.setStatus("current")


class _StarNPUMgrNumber_Type(Integer32):
    """Custom type starNPUMgrNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_StarNPUMgrNumber_Type.__name__ = "Integer32"
_StarNPUMgrNumber_Object = MibTableColumn
starNPUMgrNumber = _StarNPUMgrNumber_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 11, 1, 1, 1),
    _StarNPUMgrNumber_Type()
)
starNPUMgrNumber.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starNPUMgrNumber.setStatus("current")
_StarentSessInP_ObjectIdentity = ObjectIdentity
starentSessInP = _StarentSessInP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 12)
)
_StarSessInProgCalls_Type = Gauge32
_StarSessInProgCalls_Object = MibScalar
starSessInProgCalls = _StarSessInProgCalls_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 12, 1),
    _StarSessInProgCalls_Type()
)
starSessInProgCalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessInProgCalls.setStatus("current")
_StarSessInProgActiveCalls_Type = Gauge32
_StarSessInProgActiveCalls_Object = MibScalar
starSessInProgActiveCalls = _StarSessInProgActiveCalls_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 12, 2),
    _StarSessInProgActiveCalls_Type()
)
starSessInProgActiveCalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessInProgActiveCalls.setStatus("current")
_StarSessInProgDormantCalls_Type = Gauge32
_StarSessInProgDormantCalls_Object = MibScalar
starSessInProgDormantCalls = _StarSessInProgDormantCalls_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 12, 3),
    _StarSessInProgDormantCalls_Type()
)
starSessInProgDormantCalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessInProgDormantCalls.setStatus("current")
_StarSessInProgArrived_Type = Gauge32
_StarSessInProgArrived_Object = MibScalar
starSessInProgArrived = _StarSessInProgArrived_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 12, 4),
    _StarSessInProgArrived_Type()
)
starSessInProgArrived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessInProgArrived.setStatus("current")
_StarSessInProgLCPNeg_Type = Gauge32
_StarSessInProgLCPNeg_Object = MibScalar
starSessInProgLCPNeg = _StarSessInProgLCPNeg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 12, 5),
    _StarSessInProgLCPNeg_Type()
)
starSessInProgLCPNeg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessInProgLCPNeg.setStatus("current")
_StarSessInProgLCPUp_Type = Gauge32
_StarSessInProgLCPUp_Object = MibScalar
starSessInProgLCPUp = _StarSessInProgLCPUp_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 12, 6),
    _StarSessInProgLCPUp_Type()
)
starSessInProgLCPUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessInProgLCPUp.setStatus("current")
_StarSessInProgAuthenticating_Type = Gauge32
_StarSessInProgAuthenticating_Object = MibScalar
starSessInProgAuthenticating = _StarSessInProgAuthenticating_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 12, 7),
    _StarSessInProgAuthenticating_Type()
)
starSessInProgAuthenticating.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessInProgAuthenticating.setStatus("current")
_StarSessInProgAuthenticated_Type = Gauge32
_StarSessInProgAuthenticated_Object = MibScalar
starSessInProgAuthenticated = _StarSessInProgAuthenticated_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 12, 8),
    _StarSessInProgAuthenticated_Type()
)
starSessInProgAuthenticated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessInProgAuthenticated.setStatus("current")
_StarSessInProgIPCPUp_Type = Gauge32
_StarSessInProgIPCPUp_Object = MibScalar
starSessInProgIPCPUp = _StarSessInProgIPCPUp_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 12, 9),
    _StarSessInProgIPCPUp_Type()
)
starSessInProgIPCPUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessInProgIPCPUp.setStatus("current")
_StarSessInProgSIPConn_Type = Gauge32
_StarSessInProgSIPConn_Object = MibScalar
starSessInProgSIPConn = _StarSessInProgSIPConn_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 12, 10),
    _StarSessInProgSIPConn_Type()
)
starSessInProgSIPConn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessInProgSIPConn.setStatus("current")
_StarSessInProgMIPConn_Type = Gauge32
_StarSessInProgMIPConn_Object = MibScalar
starSessInProgMIPConn = _StarSessInProgMIPConn_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 12, 11),
    _StarSessInProgMIPConn_Type()
)
starSessInProgMIPConn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessInProgMIPConn.setStatus("current")
_StarSessInProgDisc_Type = Gauge32
_StarSessInProgDisc_Object = MibScalar
starSessInProgDisc = _StarSessInProgDisc_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 12, 12),
    _StarSessInProgDisc_Type()
)
starSessInProgDisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessInProgDisc.setStatus("current")
_StarentSessMgr_ObjectIdentity = ObjectIdentity
starentSessMgr = _StarentSessMgr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13)
)
_StarSessMgrCount_Type = Gauge32
_StarSessMgrCount_Object = MibScalar
starSessMgrCount = _StarSessMgrCount_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 1),
    _StarSessMgrCount_Type()
)
starSessMgrCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessMgrCount.setStatus("current")
_StarSessTtlArrived_Type = Gauge32
_StarSessTtlArrived_Object = MibScalar
starSessTtlArrived = _StarSessTtlArrived_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 2),
    _StarSessTtlArrived_Type()
)
starSessTtlArrived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlArrived.setStatus("current")
_StarSessTtlRejected_Type = Gauge32
_StarSessTtlRejected_Object = MibScalar
starSessTtlRejected = _StarSessTtlRejected_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 3),
    _StarSessTtlRejected_Type()
)
starSessTtlRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlRejected.setStatus("current")
_StarSessTtlConnected_Type = Gauge32
_StarSessTtlConnected_Object = MibScalar
starSessTtlConnected = _StarSessTtlConnected_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 4),
    _StarSessTtlConnected_Type()
)
starSessTtlConnected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlConnected.setStatus("current")
_StarSessTtlAuthSucc_Type = Gauge32
_StarSessTtlAuthSucc_Object = MibScalar
starSessTtlAuthSucc = _StarSessTtlAuthSucc_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 5),
    _StarSessTtlAuthSucc_Type()
)
starSessTtlAuthSucc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlAuthSucc.setStatus("current")
_StarSessTtlAuthFail_Type = Gauge32
_StarSessTtlAuthFail_Object = MibScalar
starSessTtlAuthFail = _StarSessTtlAuthFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 6),
    _StarSessTtlAuthFail_Type()
)
starSessTtlAuthFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlAuthFail.setStatus("current")
_StarSessTtlLCPUp_Type = Gauge32
_StarSessTtlLCPUp_Object = MibScalar
starSessTtlLCPUp = _StarSessTtlLCPUp_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 7),
    _StarSessTtlLCPUp_Type()
)
starSessTtlLCPUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlLCPUp.setStatus("current")
_StarSessTtlIPCPUp_Type = Gauge32
_StarSessTtlIPCPUp_Object = MibScalar
starSessTtlIPCPUp = _StarSessTtlIPCPUp_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 8),
    _StarSessTtlIPCPUp_Type()
)
starSessTtlIPCPUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlIPCPUp.setStatus("current")
_StarSessTtlSrcViol_Type = Gauge32
_StarSessTtlSrcViol_Object = MibScalar
starSessTtlSrcViol = _StarSessTtlSrcViol_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 9),
    _StarSessTtlSrcViol_Type()
)
starSessTtlSrcViol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlSrcViol.setStatus("current")
_StarSessTtlKeepFail_Type = Gauge32
_StarSessTtlKeepFail_Object = MibScalar
starSessTtlKeepFail = _StarSessTtlKeepFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 10),
    _StarSessTtlKeepFail_Type()
)
starSessTtlKeepFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlKeepFail.setStatus("current")
_StarSessTtlOctForwarded_Type = Counter32
_StarSessTtlOctForwarded_Object = MibScalar
starSessTtlOctForwarded = _StarSessTtlOctForwarded_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 11),
    _StarSessTtlOctForwarded_Type()
)
starSessTtlOctForwarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlOctForwarded.setStatus("deprecated")
if mibBuilder.loadTexts:
    starSessTtlOctForwarded.setUnits("Megabytes")
_StarSessTtlRPRegAccept_Type = Counter32
_StarSessTtlRPRegAccept_Object = MibScalar
starSessTtlRPRegAccept = _StarSessTtlRPRegAccept_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 12),
    _StarSessTtlRPRegAccept_Type()
)
starSessTtlRPRegAccept.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlRPRegAccept.setStatus("current")
_StarSessTtlRPRegAcceptInterPDSN_Type = Counter32
_StarSessTtlRPRegAcceptInterPDSN_Object = MibScalar
starSessTtlRPRegAcceptInterPDSN = _StarSessTtlRPRegAcceptInterPDSN_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 13),
    _StarSessTtlRPRegAcceptInterPDSN_Type()
)
starSessTtlRPRegAcceptInterPDSN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlRPRegAcceptInterPDSN.setStatus("current")
_StarSessCurrPPPSessions_Type = Gauge32
_StarSessCurrPPPSessions_Object = MibScalar
starSessCurrPPPSessions = _StarSessCurrPPPSessions_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 14),
    _StarSessCurrPPPSessions_Type()
)
starSessCurrPPPSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessCurrPPPSessions.setStatus("current")
_StarSessTtlTxBytes_Type = Counter32
_StarSessTtlTxBytes_Object = MibScalar
starSessTtlTxBytes = _StarSessTtlTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 15),
    _StarSessTtlTxBytes_Type()
)
starSessTtlTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlTxBytes.setStatus("deprecated")
if mibBuilder.loadTexts:
    starSessTtlTxBytes.setUnits("Megabytes")
_StarSessTtlRxBytes_Type = Counter32
_StarSessTtlRxBytes_Object = MibScalar
starSessTtlRxBytes = _StarSessTtlRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 16),
    _StarSessTtlRxBytes_Type()
)
starSessTtlRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlRxBytes.setStatus("deprecated")
if mibBuilder.loadTexts:
    starSessTtlRxBytes.setUnits("Megabytes")
_StarSessTtlSIPTxBytes_Type = Counter32
_StarSessTtlSIPTxBytes_Object = MibScalar
starSessTtlSIPTxBytes = _StarSessTtlSIPTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 17),
    _StarSessTtlSIPTxBytes_Type()
)
starSessTtlSIPTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlSIPTxBytes.setStatus("deprecated")
if mibBuilder.loadTexts:
    starSessTtlSIPTxBytes.setUnits("Megabytes")
_StarSessTtlSIPRxBytes_Type = Counter32
_StarSessTtlSIPRxBytes_Object = MibScalar
starSessTtlSIPRxBytes = _StarSessTtlSIPRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 18),
    _StarSessTtlSIPRxBytes_Type()
)
starSessTtlSIPRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlSIPRxBytes.setStatus("deprecated")
if mibBuilder.loadTexts:
    starSessTtlSIPRxBytes.setUnits("Megabytes")
_StarSessTtlMIPTxBytes_Type = Counter32
_StarSessTtlMIPTxBytes_Object = MibScalar
starSessTtlMIPTxBytes = _StarSessTtlMIPTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 19),
    _StarSessTtlMIPTxBytes_Type()
)
starSessTtlMIPTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlMIPTxBytes.setStatus("deprecated")
if mibBuilder.loadTexts:
    starSessTtlMIPTxBytes.setUnits("Megabytes")
_StarSessTtlMIPRxBytes_Type = Counter32
_StarSessTtlMIPRxBytes_Object = MibScalar
starSessTtlMIPRxBytes = _StarSessTtlMIPRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 20),
    _StarSessTtlMIPRxBytes_Type()
)
starSessTtlMIPRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlMIPRxBytes.setStatus("deprecated")
if mibBuilder.loadTexts:
    starSessTtlMIPRxBytes.setUnits("Megabytes")
_StarSessTtlOctForwardedGB_Type = Counter32
_StarSessTtlOctForwardedGB_Object = MibScalar
starSessTtlOctForwardedGB = _StarSessTtlOctForwardedGB_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 21),
    _StarSessTtlOctForwardedGB_Type()
)
starSessTtlOctForwardedGB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlOctForwardedGB.setStatus("deprecated")
if mibBuilder.loadTexts:
    starSessTtlOctForwardedGB.setUnits("Gigabytes")
_StarSessTtlOctForwardedRev1_Type = Counter64
_StarSessTtlOctForwardedRev1_Object = MibScalar
starSessTtlOctForwardedRev1 = _StarSessTtlOctForwardedRev1_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 22),
    _StarSessTtlOctForwardedRev1_Type()
)
starSessTtlOctForwardedRev1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlOctForwardedRev1.setStatus("current")
if mibBuilder.loadTexts:
    starSessTtlOctForwardedRev1.setUnits("Megabytes")
_StarSessTtlTxBytesRev1_Type = Counter64
_StarSessTtlTxBytesRev1_Object = MibScalar
starSessTtlTxBytesRev1 = _StarSessTtlTxBytesRev1_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 23),
    _StarSessTtlTxBytesRev1_Type()
)
starSessTtlTxBytesRev1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlTxBytesRev1.setStatus("current")
if mibBuilder.loadTexts:
    starSessTtlTxBytesRev1.setUnits("Megabytes")
_StarSessTtlRxBytesRev1_Type = Counter64
_StarSessTtlRxBytesRev1_Object = MibScalar
starSessTtlRxBytesRev1 = _StarSessTtlRxBytesRev1_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 24),
    _StarSessTtlRxBytesRev1_Type()
)
starSessTtlRxBytesRev1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlRxBytesRev1.setStatus("current")
if mibBuilder.loadTexts:
    starSessTtlRxBytesRev1.setUnits("Megabytes")
_StarSessTtlSIPTxBytesRev1_Type = Counter64
_StarSessTtlSIPTxBytesRev1_Object = MibScalar
starSessTtlSIPTxBytesRev1 = _StarSessTtlSIPTxBytesRev1_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 25),
    _StarSessTtlSIPTxBytesRev1_Type()
)
starSessTtlSIPTxBytesRev1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlSIPTxBytesRev1.setStatus("current")
if mibBuilder.loadTexts:
    starSessTtlSIPTxBytesRev1.setUnits("Megabytes")
_StarSessTtlSIPRxBytesRev1_Type = Counter64
_StarSessTtlSIPRxBytesRev1_Object = MibScalar
starSessTtlSIPRxBytesRev1 = _StarSessTtlSIPRxBytesRev1_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 26),
    _StarSessTtlSIPRxBytesRev1_Type()
)
starSessTtlSIPRxBytesRev1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlSIPRxBytesRev1.setStatus("current")
if mibBuilder.loadTexts:
    starSessTtlSIPRxBytesRev1.setUnits("Megabytes")
_StarSessTtlMIPTxBytesRev1_Type = Counter64
_StarSessTtlMIPTxBytesRev1_Object = MibScalar
starSessTtlMIPTxBytesRev1 = _StarSessTtlMIPTxBytesRev1_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 27),
    _StarSessTtlMIPTxBytesRev1_Type()
)
starSessTtlMIPTxBytesRev1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlMIPTxBytesRev1.setStatus("current")
if mibBuilder.loadTexts:
    starSessTtlMIPTxBytesRev1.setUnits("Megabytes")
_StarSessTtlMIPRxBytesRev1_Type = Counter64
_StarSessTtlMIPRxBytesRev1_Object = MibScalar
starSessTtlMIPRxBytesRev1 = _StarSessTtlMIPRxBytesRev1_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 28),
    _StarSessTtlMIPRxBytesRev1_Type()
)
starSessTtlMIPRxBytesRev1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlMIPRxBytesRev1.setStatus("current")
if mibBuilder.loadTexts:
    starSessTtlMIPRxBytesRev1.setUnits("Megabytes")
_StarSessTtlOctForwardedGBRev1_Type = Counter64
_StarSessTtlOctForwardedGBRev1_Object = MibScalar
starSessTtlOctForwardedGBRev1 = _StarSessTtlOctForwardedGBRev1_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 13, 29),
    _StarSessTtlOctForwardedGBRev1_Type()
)
starSessTtlOctForwardedGBRev1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessTtlOctForwardedGBRev1.setStatus("current")
if mibBuilder.loadTexts:
    starSessTtlOctForwardedGBRev1.setUnits("Gigabytes")
_StarentAAAMgr_ObjectIdentity = ObjectIdentity
starentAAAMgr = _StarentAAAMgr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 14)
)
_StarAAAMgrCount_Type = Gauge32
_StarAAAMgrCount_Object = MibScalar
starAAAMgrCount = _StarAAAMgrCount_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 14, 1),
    _StarAAAMgrCount_Type()
)
starAAAMgrCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starAAAMgrCount.setStatus("current")
_StarAAATtlRequests_Type = Counter32
_StarAAATtlRequests_Object = MibScalar
starAAATtlRequests = _StarAAATtlRequests_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 14, 2),
    _StarAAATtlRequests_Type()
)
starAAATtlRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starAAATtlRequests.setStatus("current")
_StarAAATtlAuthRequests_Type = Counter32
_StarAAATtlAuthRequests_Object = MibScalar
starAAATtlAuthRequests = _StarAAATtlAuthRequests_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 14, 3),
    _StarAAATtlAuthRequests_Type()
)
starAAATtlAuthRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starAAATtlAuthRequests.setStatus("current")
_StarAAATtlAcctRequests_Type = Counter32
_StarAAATtlAcctRequests_Object = MibScalar
starAAATtlAcctRequests = _StarAAATtlAcctRequests_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 14, 4),
    _StarAAATtlAcctRequests_Type()
)
starAAATtlAcctRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starAAATtlAcctRequests.setStatus("current")
_StarAAACurRequests_Type = Gauge32
_StarAAACurRequests_Object = MibScalar
starAAACurRequests = _StarAAACurRequests_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 14, 5),
    _StarAAACurRequests_Type()
)
starAAACurRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starAAACurRequests.setStatus("current")
_StarAAACurAuthRequests_Type = Gauge32
_StarAAACurAuthRequests_Object = MibScalar
starAAACurAuthRequests = _StarAAACurAuthRequests_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 14, 6),
    _StarAAACurAuthRequests_Type()
)
starAAACurAuthRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starAAACurAuthRequests.setStatus("current")
_StarAAACurAcctRequests_Type = Gauge32
_StarAAACurAcctRequests_Object = MibScalar
starAAACurAcctRequests = _StarAAACurAcctRequests_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 14, 7),
    _StarAAACurAcctRequests_Type()
)
starAAACurAcctRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starAAACurAcctRequests.setStatus("current")
_StarAAATtlAcctSess_Type = Counter32
_StarAAATtlAcctSess_Object = MibScalar
starAAATtlAcctSess = _StarAAATtlAcctSess_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 14, 8),
    _StarAAATtlAcctSess_Type()
)
starAAATtlAcctSess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starAAATtlAcctSess.setStatus("current")
_StarAAACurAcctSess_Type = Gauge32
_StarAAACurAcctSess_Object = MibScalar
starAAACurAcctSess = _StarAAACurAcctSess_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 14, 9),
    _StarAAACurAcctSess_Type()
)
starAAACurAcctSess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starAAACurAcctSess.setStatus("current")
_StarAAATtlAuthSuccess_Type = Counter32
_StarAAATtlAuthSuccess_Object = MibScalar
starAAATtlAuthSuccess = _StarAAATtlAuthSuccess_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 14, 10),
    _StarAAATtlAuthSuccess_Type()
)
starAAATtlAuthSuccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starAAATtlAuthSuccess.setStatus("current")
_StarAAATtlAuthFailure_Type = Counter32
_StarAAATtlAuthFailure_Object = MibScalar
starAAATtlAuthFailure = _StarAAATtlAuthFailure_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 14, 11),
    _StarAAATtlAuthFailure_Type()
)
starAAATtlAuthFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starAAATtlAuthFailure.setStatus("current")
_StarentA11Mgr_ObjectIdentity = ObjectIdentity
starentA11Mgr = _StarentA11Mgr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 15)
)
_StarA11MgrCount_Type = Gauge32
_StarA11MgrCount_Object = MibScalar
starA11MgrCount = _StarA11MgrCount_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 15, 1),
    _StarA11MgrCount_Type()
)
starA11MgrCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starA11MgrCount.setStatus("current")
_StarA11TtlArrived_Type = Counter32
_StarA11TtlArrived_Object = MibScalar
starA11TtlArrived = _StarA11TtlArrived_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 15, 2),
    _StarA11TtlArrived_Type()
)
starA11TtlArrived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starA11TtlArrived.setStatus("current")
_StarA11TtlRejected_Type = Counter32
_StarA11TtlRejected_Object = MibScalar
starA11TtlRejected = _StarA11TtlRejected_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 15, 3),
    _StarA11TtlRejected_Type()
)
starA11TtlRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starA11TtlRejected.setStatus("current")
_StarA11TtlDemultiplexed_Type = Counter32
_StarA11TtlDemultiplexed_Object = MibScalar
starA11TtlDemultiplexed = _StarA11TtlDemultiplexed_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 15, 4),
    _StarA11TtlDemultiplexed_Type()
)
starA11TtlDemultiplexed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starA11TtlDemultiplexed.setStatus("current")
_StarA11TtlDereg_Type = Counter32
_StarA11TtlDereg_Object = MibScalar
starA11TtlDereg = _StarA11TtlDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 15, 5),
    _StarA11TtlDereg_Type()
)
starA11TtlDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starA11TtlDereg.setStatus("current")
_StarA11CurActive_Type = Gauge32
_StarA11CurActive_Object = MibScalar
starA11CurActive = _StarA11CurActive_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 15, 6),
    _StarA11CurActive_Type()
)
starA11CurActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starA11CurActive.setStatus("current")
_StarentHAMgr_ObjectIdentity = ObjectIdentity
starentHAMgr = _StarentHAMgr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 16)
)
_StarHAMgrCount_Type = Gauge32
_StarHAMgrCount_Object = MibScalar
starHAMgrCount = _StarHAMgrCount_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 16, 1),
    _StarHAMgrCount_Type()
)
starHAMgrCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starHAMgrCount.setStatus("current")
_StarHATtlArrived_Type = Counter32
_StarHATtlArrived_Object = MibScalar
starHATtlArrived = _StarHATtlArrived_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 16, 2),
    _StarHATtlArrived_Type()
)
starHATtlArrived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starHATtlArrived.setStatus("current")
_StarHATtlRejected_Type = Counter32
_StarHATtlRejected_Object = MibScalar
starHATtlRejected = _StarHATtlRejected_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 16, 3),
    _StarHATtlRejected_Type()
)
starHATtlRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starHATtlRejected.setStatus("current")
_StarHATtlDemultiplexed_Type = Counter32
_StarHATtlDemultiplexed_Object = MibScalar
starHATtlDemultiplexed = _StarHATtlDemultiplexed_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 16, 4),
    _StarHATtlDemultiplexed_Type()
)
starHATtlDemultiplexed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starHATtlDemultiplexed.setStatus("current")
_StarHATtlDereg_Type = Counter32
_StarHATtlDereg_Object = MibScalar
starHATtlDereg = _StarHATtlDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 16, 5),
    _StarHATtlDereg_Type()
)
starHATtlDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starHATtlDereg.setStatus("current")
_StarHACurActive_Type = Gauge32
_StarHACurActive_Object = MibScalar
starHACurActive = _StarHACurActive_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 16, 6),
    _StarHACurActive_Type()
)
starHACurActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starHACurActive.setStatus("current")
_StarentFAMgr_ObjectIdentity = ObjectIdentity
starentFAMgr = _StarentFAMgr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 17)
)
_StarFAMgrCount_Type = Gauge32
_StarFAMgrCount_Object = MibScalar
starFAMgrCount = _StarFAMgrCount_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 17, 1),
    _StarFAMgrCount_Type()
)
starFAMgrCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFAMgrCount.setStatus("current")
_StarFATtlArrived_Type = Counter32
_StarFATtlArrived_Object = MibScalar
starFATtlArrived = _StarFATtlArrived_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 17, 2),
    _StarFATtlArrived_Type()
)
starFATtlArrived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFATtlArrived.setStatus("current")
_StarFATtlRejected_Type = Counter32
_StarFATtlRejected_Object = MibScalar
starFATtlRejected = _StarFATtlRejected_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 17, 3),
    _StarFATtlRejected_Type()
)
starFATtlRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFATtlRejected.setStatus("current")
_StarFATtlDemultiplexed_Type = Counter32
_StarFATtlDemultiplexed_Object = MibScalar
starFATtlDemultiplexed = _StarFATtlDemultiplexed_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 17, 4),
    _StarFATtlDemultiplexed_Type()
)
starFATtlDemultiplexed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFATtlDemultiplexed.setStatus("current")
_StarFATtlDereg_Type = Counter32
_StarFATtlDereg_Object = MibScalar
starFATtlDereg = _StarFATtlDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 17, 5),
    _StarFATtlDereg_Type()
)
starFATtlDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFATtlDereg.setStatus("current")
_StarFACurActive_Type = Gauge32
_StarFACurActive_Object = MibScalar
starFACurActive = _StarFACurActive_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 17, 6),
    _StarFACurActive_Type()
)
starFACurActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFACurActive.setStatus("current")
_StarentService_ObjectIdentity = ObjectIdentity
starentService = _StarentService_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 18)
)
_StarServiceTable_Object = MibTable
starServiceTable = _StarServiceTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 18, 1)
)
if mibBuilder.loadTexts:
    starServiceTable.setStatus("current")
_StarServiceEntry_Object = MibTableRow
starServiceEntry = _StarServiceEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 18, 1, 1)
)
starServiceEntry.setIndexNames(
    (0, "STARENT-MIB", "starServiceVpnID"),
    (0, "STARENT-MIB", "starServiceSvcID"),
)
if mibBuilder.loadTexts:
    starServiceEntry.setStatus("current")
_StarServiceVpnID_Type = Gauge32
_StarServiceVpnID_Object = MibTableColumn
starServiceVpnID = _StarServiceVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 18, 1, 1, 1),
    _StarServiceVpnID_Type()
)
starServiceVpnID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starServiceVpnID.setStatus("current")
_StarServiceSvcID_Type = Gauge32
_StarServiceSvcID_Object = MibTableColumn
starServiceSvcID = _StarServiceSvcID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 18, 1, 1, 2),
    _StarServiceSvcID_Type()
)
starServiceSvcID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starServiceSvcID.setStatus("current")
_StarServiceVpnName_Type = DisplayString
_StarServiceVpnName_Object = MibTableColumn
starServiceVpnName = _StarServiceVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 18, 1, 1, 3),
    _StarServiceVpnName_Type()
)
starServiceVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starServiceVpnName.setStatus("current")
_StarServiceServName_Type = DisplayString
_StarServiceServName_Object = MibTableColumn
starServiceServName = _StarServiceServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 18, 1, 1, 4),
    _StarServiceServName_Type()
)
starServiceServName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starServiceServName.setStatus("current")
_StarServiceSubLimit_Type = Unsigned32
_StarServiceSubLimit_Object = MibTableColumn
starServiceSubLimit = _StarServiceSubLimit_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 18, 1, 1, 5),
    _StarServiceSubLimit_Type()
)
starServiceSubLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starServiceSubLimit.setStatus("current")
_StarServiceSubCurrent_Type = Gauge32
_StarServiceSubCurrent_Object = MibTableColumn
starServiceSubCurrent = _StarServiceSubCurrent_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 18, 1, 1, 6),
    _StarServiceSubCurrent_Type()
)
starServiceSubCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starServiceSubCurrent.setStatus("current")


class _StarServiceType_Type(Integer32):
    """Custom type starServiceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70)
        )
    )
    namedValues = NamedValues(
        *(("asngw", 14),
          ("asnpc", 16),
          ("bng", 64),
          ("cbs", 53),
          ("closedrp", 9),
          ("combination-3g-4g-gateway", 36),
          ("crdt-ctl", 50),
          ("cscf", 11),
          ("dhcp", 45),
          ("dhcpv6", 48),
          ("diameter", 47),
          ("ecs", 10),
          ("egtp", 56),
          ("egtp-egress", 55),
          ("egtp-ingress", 54),
          ("egtp-sv", 59),
          ("epdg", 37),
          ("evdoreva", 13),
          ("fa", 5),
          ("fng", 30),
          ("ggsn", 3),
          ("gprs", 23),
          ("gs", 65),
          ("gtpu", 57),
          ("ha", 4),
          ("henbgw-access", 39),
          ("henbgw-network", 40),
          ("hnbgw", 34),
          ("hsgw", 24),
          ("imsa", 46),
          ("imsue", 29),
          ("ipne", 62),
          ("ipsg", 12),
          ("iups", 67),
          ("l2tpserver", 6),
          ("lac", 7),
          ("lcs", 69),
          ("lma", 49),
          ("lns", 8),
          ("mag", 22),
          ("map", 66),
          ("megad", 60),
          ("mipv6ha", 17),
          ("mme", 26),
          ("mme-embms", 70),
          ("mme-hss", 51),
          ("mseg", 63),
          ("non-anchor-phs-gateway", 35),
          ("pcc", 61),
          ("pccaf", 33),
          ("pccpolicy", 31),
          ("pccquota", 32),
          ("pcp", 38),
          ("pdg", 27),
          ("pdif", 15),
          ("pdsn", 2),
          ("pgw", 21),
          ("phsgw", 18),
          ("phspc", 19),
          ("ppp-lback", 44),
          ("saegw", 43),
          ("samog", 42),
          ("sgs", 52),
          ("sgsn", 25),
          ("sgtp", 68),
          ("sgtpc", 58),
          ("sgw", 20),
          ("standalonefa", 28),
          ("unknown", 1),
          ("wsg", 41))
    )


_StarServiceType_Type.__name__ = "Integer32"
_StarServiceType_Object = MibTableColumn
starServiceType = _StarServiceType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 18, 1, 1, 7),
    _StarServiceType_Type()
)
starServiceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starServiceType.setStatus("current")
_StarServiceFAIpAddr_Type = IpAddress
_StarServiceFAIpAddr_Object = MibTableColumn
starServiceFAIpAddr = _StarServiceFAIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 18, 1, 1, 8),
    _StarServiceFAIpAddr_Type()
)
starServiceFAIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starServiceFAIpAddr.setStatus("current")
_StarServiceHAIpAddr_Type = IpAddress
_StarServiceHAIpAddr_Object = MibTableColumn
starServiceHAIpAddr = _StarServiceHAIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 18, 1, 1, 9),
    _StarServiceHAIpAddr_Type()
)
starServiceHAIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starServiceHAIpAddr.setStatus("current")
_StarentCLIMgr_ObjectIdentity = ObjectIdentity
starentCLIMgr = _StarentCLIMgr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 19)
)
_StarCLITable_Object = MibTable
starCLITable = _StarCLITable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 19, 1)
)
if mibBuilder.loadTexts:
    starCLITable.setStatus("current")
_StarCLIEntry_Object = MibTableRow
starCLIEntry = _StarCLIEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 19, 1, 1)
)
starCLIEntry.setIndexNames(
    (0, "STARENT-MIB", "starCLIID"),
)
if mibBuilder.loadTexts:
    starCLIEntry.setStatus("current")
_StarCLIID_Type = Gauge32
_StarCLIID_Object = MibTableColumn
starCLIID = _StarCLIID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 19, 1, 1, 1),
    _StarCLIID_Type()
)
starCLIID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starCLIID.setStatus("current")
_StarCLIUsername_Type = DisplayString
_StarCLIUsername_Object = MibTableColumn
starCLIUsername = _StarCLIUsername_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 19, 1, 1, 2),
    _StarCLIUsername_Type()
)
starCLIUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCLIUsername.setStatus("current")
_StarCLITtyname_Type = DisplayString
_StarCLITtyname_Object = MibTableColumn
starCLITtyname = _StarCLITtyname_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 19, 1, 1, 3),
    _StarCLITtyname_Type()
)
starCLITtyname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCLITtyname.setStatus("current")
_StarCLIPrivs_Type = DisplayString
_StarCLIPrivs_Object = MibTableColumn
starCLIPrivs = _StarCLIPrivs_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 19, 1, 1, 4),
    _StarCLIPrivs_Type()
)
starCLIPrivs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCLIPrivs.setStatus("current")


class _StarCLIType_Type(Integer32):
    """Custom type starCLIType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commandline", 1),
          ("ftp", 2),
          ("unknown", 0))
    )


_StarCLIType_Type.__name__ = "Integer32"
_StarCLIType_Object = MibTableColumn
starCLIType = _StarCLIType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 19, 1, 1, 5),
    _StarCLIType_Type()
)
starCLIType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCLIType.setStatus("current")
_StarCLIRemoteIpAddrType_Type = InetAddressType
_StarCLIRemoteIpAddrType_Object = MibTableColumn
starCLIRemoteIpAddrType = _StarCLIRemoteIpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 19, 1, 1, 6),
    _StarCLIRemoteIpAddrType_Type()
)
starCLIRemoteIpAddrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCLIRemoteIpAddrType.setStatus("current")
_StarCLIRemoteIpAddr_Type = InetAddress
_StarCLIRemoteIpAddr_Object = MibTableColumn
starCLIRemoteIpAddr = _StarCLIRemoteIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 19, 1, 1, 7),
    _StarCLIRemoteIpAddr_Type()
)
starCLIRemoteIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCLIRemoteIpAddr.setStatus("current")
_StarCLIContext_Type = DisplayString
_StarCLIContext_Object = MibTableColumn
starCLIContext = _StarCLIContext_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 19, 1, 1, 8),
    _StarCLIContext_Type()
)
starCLIContext.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCLIContext.setStatus("current")
_StarCLIDatabaseUsername_Type = DisplayString
_StarCLIDatabaseUsername_Object = MibTableColumn
starCLIDatabaseUsername = _StarCLIDatabaseUsername_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 19, 1, 1, 9),
    _StarCLIDatabaseUsername_Type()
)
starCLIDatabaseUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCLIDatabaseUsername.setStatus("current")
_StarentTaskMgr_ObjectIdentity = ObjectIdentity
starentTaskMgr = _StarentTaskMgr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 20)
)
_StarTaskTable_Object = MibTable
starTaskTable = _StarTaskTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 20, 1)
)
if mibBuilder.loadTexts:
    starTaskTable.setStatus("current")
_StarTaskEntry_Object = MibTableRow
starTaskEntry = _StarTaskEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 20, 1, 1)
)
starTaskEntry.setIndexNames(
    (0, "STARENT-MIB", "starTaskFacility"),
    (0, "STARENT-MIB", "starTaskInstance"),
)
if mibBuilder.loadTexts:
    starTaskEntry.setStatus("current")
_StarTaskFacility_Type = Unsigned32
_StarTaskFacility_Object = MibTableColumn
starTaskFacility = _StarTaskFacility_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 20, 1, 1, 1),
    _StarTaskFacility_Type()
)
starTaskFacility.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starTaskFacility.setStatus("current")
_StarTaskInstance_Type = Unsigned32
_StarTaskInstance_Object = MibTableColumn
starTaskInstance = _StarTaskInstance_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 20, 1, 1, 2),
    _StarTaskInstance_Type()
)
starTaskInstance.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starTaskInstance.setStatus("current")
_StarTaskFacilityName_Type = DisplayString
_StarTaskFacilityName_Object = MibTableColumn
starTaskFacilityName = _StarTaskFacilityName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 20, 1, 1, 3),
    _StarTaskFacilityName_Type()
)
starTaskFacilityName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starTaskFacilityName.setStatus("current")
_StarTaskCard_Type = Unsigned32
_StarTaskCard_Object = MibTableColumn
starTaskCard = _StarTaskCard_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 20, 1, 1, 4),
    _StarTaskCard_Type()
)
starTaskCard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starTaskCard.setStatus("current")
_StarTaskCPU_Type = Unsigned32
_StarTaskCPU_Object = MibTableColumn
starTaskCPU = _StarTaskCPU_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 20, 1, 1, 5),
    _StarTaskCPU_Type()
)
starTaskCPU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starTaskCPU.setStatus("current")
_StarentPPP_ObjectIdentity = ObjectIdentity
starentPPP = _StarentPPP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21)
)
_StarPPPStatTable_Object = MibTable
starPPPStatTable = _StarPPPStatTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1)
)
if mibBuilder.loadTexts:
    starPPPStatTable.setStatus("current")
_StarPPPStatEntry_Object = MibTableRow
starPPPStatEntry = _StarPPPStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1)
)
starPPPStatEntry.setIndexNames(
    (1, "STARENT-MIB", "starPPPStatSvcID"),
)
if mibBuilder.loadTexts:
    starPPPStatEntry.setStatus("current")
_StarPPPStatVpnID_Type = Gauge32
_StarPPPStatVpnID_Object = MibTableColumn
starPPPStatVpnID = _StarPPPStatVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 1),
    _StarPPPStatVpnID_Type()
)
starPPPStatVpnID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starPPPStatVpnID.setStatus("current")
_StarPPPStatSvcID_Type = StarShortID
_StarPPPStatSvcID_Object = MibTableColumn
starPPPStatSvcID = _StarPPPStatSvcID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 2),
    _StarPPPStatSvcID_Type()
)
starPPPStatSvcID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starPPPStatSvcID.setStatus("current")
_StarPPPStatVpnName_Type = DisplayString
_StarPPPStatVpnName_Object = MibTableColumn
starPPPStatVpnName = _StarPPPStatVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 3),
    _StarPPPStatVpnName_Type()
)
starPPPStatVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatVpnName.setStatus("current")
_StarPPPStatServName_Type = DisplayString
_StarPPPStatServName_Object = MibTableColumn
starPPPStatServName = _StarPPPStatServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 4),
    _StarPPPStatServName_Type()
)
starPPPStatServName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatServName.setStatus("current")
_StarPPPStatInit_Type = Counter32
_StarPPPStatInit_Object = MibTableColumn
starPPPStatInit = _StarPPPStatInit_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 5),
    _StarPPPStatInit_Type()
)
starPPPStatInit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatInit.setStatus("current")
_StarPPPStatReneg_Type = Counter32
_StarPPPStatReneg_Object = MibTableColumn
starPPPStatReneg = _StarPPPStatReneg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 6),
    _StarPPPStatReneg_Type()
)
starPPPStatReneg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatReneg.setStatus("current")
_StarPPPStatSuccess_Type = Counter32
_StarPPPStatSuccess_Object = MibTableColumn
starPPPStatSuccess = _StarPPPStatSuccess_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 7),
    _StarPPPStatSuccess_Type()
)
starPPPStatSuccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatSuccess.setStatus("current")
_StarPPPStatFailed_Type = Counter32
_StarPPPStatFailed_Object = MibTableColumn
starPPPStatFailed = _StarPPPStatFailed_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 8),
    _StarPPPStatFailed_Type()
)
starPPPStatFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatFailed.setStatus("current")
_StarPPPStatReleased_Type = Counter32
_StarPPPStatReleased_Object = MibTableColumn
starPPPStatReleased = _StarPPPStatReleased_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 9),
    _StarPPPStatReleased_Type()
)
starPPPStatReleased.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatReleased.setStatus("current")
_StarPPPStatReleasedLocal_Type = Counter32
_StarPPPStatReleasedLocal_Object = MibTableColumn
starPPPStatReleasedLocal = _StarPPPStatReleasedLocal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 10),
    _StarPPPStatReleasedLocal_Type()
)
starPPPStatReleasedLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatReleasedLocal.setStatus("current")
_StarPPPStatReleasedRemote_Type = Counter32
_StarPPPStatReleasedRemote_Object = MibTableColumn
starPPPStatReleasedRemote = _StarPPPStatReleasedRemote_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 11),
    _StarPPPStatReleasedRemote_Type()
)
starPPPStatReleasedRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatReleasedRemote.setStatus("current")
_StarPPPStatLcpFailMaxRetry_Type = Counter32
_StarPPPStatLcpFailMaxRetry_Object = MibTableColumn
starPPPStatLcpFailMaxRetry = _StarPPPStatLcpFailMaxRetry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 12),
    _StarPPPStatLcpFailMaxRetry_Type()
)
starPPPStatLcpFailMaxRetry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatLcpFailMaxRetry.setStatus("current")
_StarPPPStatLcpFailOption_Type = Counter32
_StarPPPStatLcpFailOption_Object = MibTableColumn
starPPPStatLcpFailOption = _StarPPPStatLcpFailOption_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 13),
    _StarPPPStatLcpFailOption_Type()
)
starPPPStatLcpFailOption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatLcpFailOption.setStatus("current")
_StarPPPStatIpcpFailMaxRetry_Type = Counter32
_StarPPPStatIpcpFailMaxRetry_Object = MibTableColumn
starPPPStatIpcpFailMaxRetry = _StarPPPStatIpcpFailMaxRetry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 14),
    _StarPPPStatIpcpFailMaxRetry_Type()
)
starPPPStatIpcpFailMaxRetry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatIpcpFailMaxRetry.setStatus("current")
_StarPPPStatIpcpFailOption_Type = Counter32
_StarPPPStatIpcpFailOption_Object = MibTableColumn
starPPPStatIpcpFailOption = _StarPPPStatIpcpFailOption_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 15),
    _StarPPPStatIpcpFailOption_Type()
)
starPPPStatIpcpFailOption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatIpcpFailOption.setStatus("current")
_StarPPPStatCcpFail_Type = Counter32
_StarPPPStatCcpFail_Object = MibTableColumn
starPPPStatCcpFail = _StarPPPStatCcpFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 16),
    _StarPPPStatCcpFail_Type()
)
starPPPStatCcpFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatCcpFail.setStatus("current")
_StarPPPStatAuthFail_Type = Counter32
_StarPPPStatAuthFail_Object = MibTableColumn
starPPPStatAuthFail = _StarPPPStatAuthFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 17),
    _StarPPPStatAuthFail_Type()
)
starPPPStatAuthFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatAuthFail.setStatus("current")
_StarPPPStatLcpEntered_Type = Counter32
_StarPPPStatLcpEntered_Object = MibTableColumn
starPPPStatLcpEntered = _StarPPPStatLcpEntered_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 18),
    _StarPPPStatLcpEntered_Type()
)
starPPPStatLcpEntered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatLcpEntered.setStatus("current")
_StarPPPStatAuthEntered_Type = Counter32
_StarPPPStatAuthEntered_Object = MibTableColumn
starPPPStatAuthEntered = _StarPPPStatAuthEntered_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 19),
    _StarPPPStatAuthEntered_Type()
)
starPPPStatAuthEntered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatAuthEntered.setStatus("current")
_StarPPPStatIpcpEntered_Type = Counter32
_StarPPPStatIpcpEntered_Object = MibTableColumn
starPPPStatIpcpEntered = _StarPPPStatIpcpEntered_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 20),
    _StarPPPStatIpcpEntered_Type()
)
starPPPStatIpcpEntered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatIpcpEntered.setStatus("current")
_StarPPPStatRenegPdsn_Type = Counter32
_StarPPPStatRenegPdsn_Object = MibTableColumn
starPPPStatRenegPdsn = _StarPPPStatRenegPdsn_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 21),
    _StarPPPStatRenegPdsn_Type()
)
starPPPStatRenegPdsn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatRenegPdsn.setStatus("current")
_StarPPPStatRenegMobil_Type = Counter32
_StarPPPStatRenegMobil_Object = MibTableColumn
starPPPStatRenegMobil = _StarPPPStatRenegMobil_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 22),
    _StarPPPStatRenegMobil_Type()
)
starPPPStatRenegMobil.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatRenegMobil.setStatus("current")
_StarPPPStatRenegAddrMismatch_Type = Counter32
_StarPPPStatRenegAddrMismatch_Object = MibTableColumn
starPPPStatRenegAddrMismatch = _StarPPPStatRenegAddrMismatch_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 23),
    _StarPPPStatRenegAddrMismatch_Type()
)
starPPPStatRenegAddrMismatch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatRenegAddrMismatch.setStatus("current")
_StarPPPStatRenegOther_Type = Counter32
_StarPPPStatRenegOther_Object = MibTableColumn
starPPPStatRenegOther = _StarPPPStatRenegOther_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 24),
    _StarPPPStatRenegOther_Type()
)
starPPPStatRenegOther.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatRenegOther.setStatus("current")
_StarPPPStatChapAuthAttempt_Type = Counter32
_StarPPPStatChapAuthAttempt_Object = MibTableColumn
starPPPStatChapAuthAttempt = _StarPPPStatChapAuthAttempt_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 25),
    _StarPPPStatChapAuthAttempt_Type()
)
starPPPStatChapAuthAttempt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatChapAuthAttempt.setStatus("current")
_StarPPPStatPapAuthAttempt_Type = Counter32
_StarPPPStatPapAuthAttempt_Object = MibTableColumn
starPPPStatPapAuthAttempt = _StarPPPStatPapAuthAttempt_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 26),
    _StarPPPStatPapAuthAttempt_Type()
)
starPPPStatPapAuthAttempt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatPapAuthAttempt.setStatus("current")
_StarPPPStatMSChapAuthAttempt_Type = Counter32
_StarPPPStatMSChapAuthAttempt_Object = MibTableColumn
starPPPStatMSChapAuthAttempt = _StarPPPStatMSChapAuthAttempt_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 27),
    _StarPPPStatMSChapAuthAttempt_Type()
)
starPPPStatMSChapAuthAttempt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatMSChapAuthAttempt.setStatus("current")
_StarPPPStatChapAuthFail_Type = Counter32
_StarPPPStatChapAuthFail_Object = MibTableColumn
starPPPStatChapAuthFail = _StarPPPStatChapAuthFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 28),
    _StarPPPStatChapAuthFail_Type()
)
starPPPStatChapAuthFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatChapAuthFail.setStatus("current")
_StarPPPStatPapAuthFail_Type = Counter32
_StarPPPStatPapAuthFail_Object = MibTableColumn
starPPPStatPapAuthFail = _StarPPPStatPapAuthFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 29),
    _StarPPPStatPapAuthFail_Type()
)
starPPPStatPapAuthFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatPapAuthFail.setStatus("current")
_StarPPPStatMSChapAuthFail_Type = Counter32
_StarPPPStatMSChapAuthFail_Object = MibTableColumn
starPPPStatMSChapAuthFail = _StarPPPStatMSChapAuthFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 30),
    _StarPPPStatMSChapAuthFail_Type()
)
starPPPStatMSChapAuthFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatMSChapAuthFail.setStatus("current")
_StarPPPStatStacComp_Type = Counter32
_StarPPPStatStacComp_Object = MibTableColumn
starPPPStatStacComp = _StarPPPStatStacComp_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 31),
    _StarPPPStatStacComp_Type()
)
starPPPStatStacComp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatStacComp.setStatus("current")
_StarPPPStatMppcComp_Type = Counter32
_StarPPPStatMppcComp_Object = MibTableColumn
starPPPStatMppcComp = _StarPPPStatMppcComp_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 32),
    _StarPPPStatMppcComp_Type()
)
starPPPStatMppcComp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatMppcComp.setStatus("current")
_StarPPPStatDeflComp_Type = Counter32
_StarPPPStatDeflComp_Object = MibTableColumn
starPPPStatDeflComp = _StarPPPStatDeflComp_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 33),
    _StarPPPStatDeflComp_Type()
)
starPPPStatDeflComp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDeflComp.setStatus("current")
_StarPPPStatFscErrs_Type = Counter32
_StarPPPStatFscErrs_Object = MibTableColumn
starPPPStatFscErrs = _StarPPPStatFscErrs_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 34),
    _StarPPPStatFscErrs_Type()
)
starPPPStatFscErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatFscErrs.setStatus("current")
_StarPPPStatUnknProto_Type = Counter32
_StarPPPStatUnknProto_Object = MibTableColumn
starPPPStatUnknProto = _StarPPPStatUnknProto_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 35),
    _StarPPPStatUnknProto_Type()
)
starPPPStatUnknProto.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatUnknProto.setStatus("current")
_StarPPPStatBadAddr_Type = Counter32
_StarPPPStatBadAddr_Object = MibTableColumn
starPPPStatBadAddr = _StarPPPStatBadAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 36),
    _StarPPPStatBadAddr_Type()
)
starPPPStatBadAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatBadAddr.setStatus("current")
_StarPPPStatBadCtrl_Type = Counter32
_StarPPPStatBadCtrl_Object = MibTableColumn
starPPPStatBadCtrl = _StarPPPStatBadCtrl_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 37),
    _StarPPPStatBadCtrl_Type()
)
starPPPStatBadCtrl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatBadCtrl.setStatus("current")
_StarPPPStatVjComp_Type = Counter32
_StarPPPStatVjComp_Object = MibTableColumn
starPPPStatVjComp = _StarPPPStatVjComp_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 38),
    _StarPPPStatVjComp_Type()
)
starPPPStatVjComp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatVjComp.setStatus("current")
_StarPPPStatDiscLcpRemote_Type = Counter32
_StarPPPStatDiscLcpRemote_Object = MibTableColumn
starPPPStatDiscLcpRemote = _StarPPPStatDiscLcpRemote_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 39),
    _StarPPPStatDiscLcpRemote_Type()
)
starPPPStatDiscLcpRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDiscLcpRemote.setStatus("current")
_StarPPPStatDiscRpRemote_Type = Counter32
_StarPPPStatDiscRpRemote_Object = MibTableColumn
starPPPStatDiscRpRemote = _StarPPPStatDiscRpRemote_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 40),
    _StarPPPStatDiscRpRemote_Type()
)
starPPPStatDiscRpRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDiscRpRemote.setStatus("current")
_StarPPPStatDiscAdmin_Type = Counter32
_StarPPPStatDiscAdmin_Object = MibTableColumn
starPPPStatDiscAdmin = _StarPPPStatDiscAdmin_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 41),
    _StarPPPStatDiscAdmin_Type()
)
starPPPStatDiscAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDiscAdmin.setStatus("current")
_StarPPPStatDiscIdleTimeout_Type = Counter32
_StarPPPStatDiscIdleTimeout_Object = MibTableColumn
starPPPStatDiscIdleTimeout = _StarPPPStatDiscIdleTimeout_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 42),
    _StarPPPStatDiscIdleTimeout_Type()
)
starPPPStatDiscIdleTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDiscIdleTimeout.setStatus("current")
_StarPPPStatDiscAbsTimeout_Type = Counter32
_StarPPPStatDiscAbsTimeout_Object = MibTableColumn
starPPPStatDiscAbsTimeout = _StarPPPStatDiscAbsTimeout_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 43),
    _StarPPPStatDiscAbsTimeout_Type()
)
starPPPStatDiscAbsTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDiscAbsTimeout.setStatus("current")
_StarPPPStatDiscPPPKeepalive_Type = Counter32
_StarPPPStatDiscPPPKeepalive_Object = MibTableColumn
starPPPStatDiscPPPKeepalive = _StarPPPStatDiscPPPKeepalive_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 44),
    _StarPPPStatDiscPPPKeepalive_Type()
)
starPPPStatDiscPPPKeepalive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDiscPPPKeepalive.setStatus("current")
_StarPPPStatDiscNoResource_Type = Counter32
_StarPPPStatDiscNoResource_Object = MibTableColumn
starPPPStatDiscNoResource = _StarPPPStatDiscNoResource_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 45),
    _StarPPPStatDiscNoResource_Type()
)
starPPPStatDiscNoResource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDiscNoResource.setStatus("current")
_StarPPPStatDiscMisc_Type = Counter32
_StarPPPStatDiscMisc_Object = MibTableColumn
starPPPStatDiscMisc = _StarPPPStatDiscMisc_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 46),
    _StarPPPStatDiscMisc_Type()
)
starPPPStatDiscMisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDiscMisc.setStatus("current")
_StarPPPStatFailedReneg_Type = Counter32
_StarPPPStatFailedReneg_Object = MibTableColumn
starPPPStatFailedReneg = _StarPPPStatFailedReneg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 47),
    _StarPPPStatFailedReneg_Type()
)
starPPPStatFailedReneg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatFailedReneg.setStatus("current")
_StarPPPStatLcpFailUnknown_Type = Counter32
_StarPPPStatLcpFailUnknown_Object = MibTableColumn
starPPPStatLcpFailUnknown = _StarPPPStatLcpFailUnknown_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 48),
    _StarPPPStatLcpFailUnknown_Type()
)
starPPPStatLcpFailUnknown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatLcpFailUnknown.setStatus("current")
_StarPPPStatIpcpFailUnknown_Type = Counter32
_StarPPPStatIpcpFailUnknown_Object = MibTableColumn
starPPPStatIpcpFailUnknown = _StarPPPStatIpcpFailUnknown_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 49),
    _StarPPPStatIpcpFailUnknown_Type()
)
starPPPStatIpcpFailUnknown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatIpcpFailUnknown.setStatus("current")
_StarPPPStatAuthAbort_Type = Counter32
_StarPPPStatAuthAbort_Object = MibTableColumn
starPPPStatAuthAbort = _StarPPPStatAuthAbort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 50),
    _StarPPPStatAuthAbort_Type()
)
starPPPStatAuthAbort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatAuthAbort.setStatus("current")
_StarPPPStatLowerLayerDisc_Type = Counter32
_StarPPPStatLowerLayerDisc_Object = MibTableColumn
starPPPStatLowerLayerDisc = _StarPPPStatLowerLayerDisc_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 51),
    _StarPPPStatLowerLayerDisc_Type()
)
starPPPStatLowerLayerDisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatLowerLayerDisc.setStatus("current")
_StarPPPStatLcpSuccess_Type = Counter32
_StarPPPStatLcpSuccess_Object = MibTableColumn
starPPPStatLcpSuccess = _StarPPPStatLcpSuccess_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 52),
    _StarPPPStatLcpSuccess_Type()
)
starPPPStatLcpSuccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatLcpSuccess.setStatus("current")
_StarPPPStatAuthSuccess_Type = Counter32
_StarPPPStatAuthSuccess_Object = MibTableColumn
starPPPStatAuthSuccess = _StarPPPStatAuthSuccess_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 53),
    _StarPPPStatAuthSuccess_Type()
)
starPPPStatAuthSuccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatAuthSuccess.setStatus("current")
_StarPPPStatRenegLowerLayerHandoff_Type = Counter32
_StarPPPStatRenegLowerLayerHandoff_Object = MibTableColumn
starPPPStatRenegLowerLayerHandoff = _StarPPPStatRenegLowerLayerHandoff_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 54),
    _StarPPPStatRenegLowerLayerHandoff_Type()
)
starPPPStatRenegLowerLayerHandoff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatRenegLowerLayerHandoff.setStatus("current")
_StarPPPStatRenegParamUpdate_Type = Counter32
_StarPPPStatRenegParamUpdate_Object = MibTableColumn
starPPPStatRenegParamUpdate = _StarPPPStatRenegParamUpdate_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 55),
    _StarPPPStatRenegParamUpdate_Type()
)
starPPPStatRenegParamUpdate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatRenegParamUpdate.setStatus("current")
_StarPPPStatChapAuthSuccess_Type = Counter32
_StarPPPStatChapAuthSuccess_Object = MibTableColumn
starPPPStatChapAuthSuccess = _StarPPPStatChapAuthSuccess_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 56),
    _StarPPPStatChapAuthSuccess_Type()
)
starPPPStatChapAuthSuccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatChapAuthSuccess.setStatus("current")
_StarPPPStatPapAuthSuccess_Type = Counter32
_StarPPPStatPapAuthSuccess_Object = MibTableColumn
starPPPStatPapAuthSuccess = _StarPPPStatPapAuthSuccess_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 57),
    _StarPPPStatPapAuthSuccess_Type()
)
starPPPStatPapAuthSuccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatPapAuthSuccess.setStatus("current")
_StarPPPStatMSChapAuthSuccess_Type = Counter32
_StarPPPStatMSChapAuthSuccess_Object = MibTableColumn
starPPPStatMSChapAuthSuccess = _StarPPPStatMSChapAuthSuccess_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 58),
    _StarPPPStatMSChapAuthSuccess_Type()
)
starPPPStatMSChapAuthSuccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatMSChapAuthSuccess.setStatus("current")
_StarPPPStatChapAuthAbort_Type = Counter32
_StarPPPStatChapAuthAbort_Object = MibTableColumn
starPPPStatChapAuthAbort = _StarPPPStatChapAuthAbort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 59),
    _StarPPPStatChapAuthAbort_Type()
)
starPPPStatChapAuthAbort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatChapAuthAbort.setStatus("current")
_StarPPPStatPapAuthAbort_Type = Counter32
_StarPPPStatPapAuthAbort_Object = MibTableColumn
starPPPStatPapAuthAbort = _StarPPPStatPapAuthAbort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 60),
    _StarPPPStatPapAuthAbort_Type()
)
starPPPStatPapAuthAbort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatPapAuthAbort.setStatus("current")
_StarPPPStatMSChapAuthAbort_Type = Counter32
_StarPPPStatMSChapAuthAbort_Object = MibTableColumn
starPPPStatMSChapAuthAbort = _StarPPPStatMSChapAuthAbort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 61),
    _StarPPPStatMSChapAuthAbort_Type()
)
starPPPStatMSChapAuthAbort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatMSChapAuthAbort.setStatus("current")
_StarPPPStatSessSkipAuth_Type = Counter32
_StarPPPStatSessSkipAuth_Object = MibTableColumn
starPPPStatSessSkipAuth = _StarPPPStatSessSkipAuth_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 62),
    _StarPPPStatSessSkipAuth_Type()
)
starPPPStatSessSkipAuth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatSessSkipAuth.setStatus("current")
_StarPPPStatNegComp_Type = Counter32
_StarPPPStatNegComp_Object = MibTableColumn
starPPPStatNegComp = _StarPPPStatNegComp_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 63),
    _StarPPPStatNegComp_Type()
)
starPPPStatNegComp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatNegComp.setStatus("current")
_StarPPPStatCCPNegFailComp_Type = Counter32
_StarPPPStatCCPNegFailComp_Object = MibTableColumn
starPPPStatCCPNegFailComp = _StarPPPStatCCPNegFailComp_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 64),
    _StarPPPStatCCPNegFailComp_Type()
)
starPPPStatCCPNegFailComp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatCCPNegFailComp.setStatus("current")
_StarPPPStatDiscLocalLowerLayer_Type = Counter32
_StarPPPStatDiscLocalLowerLayer_Object = MibTableColumn
starPPPStatDiscLocalLowerLayer = _StarPPPStatDiscLocalLowerLayer_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 65),
    _StarPPPStatDiscLocalLowerLayer_Type()
)
starPPPStatDiscLocalLowerLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDiscLocalLowerLayer.setStatus("current")
_StarPPPStatDiscAddFlowFail_Type = Counter32
_StarPPPStatDiscAddFlowFail_Object = MibTableColumn
starPPPStatDiscAddFlowFail = _StarPPPStatDiscAddFlowFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 66),
    _StarPPPStatDiscAddFlowFail_Type()
)
starPPPStatDiscAddFlowFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDiscAddFlowFail.setStatus("current")
_StarPPPStatDiscMaxRetriesLCP_Type = Counter32
_StarPPPStatDiscMaxRetriesLCP_Object = MibTableColumn
starPPPStatDiscMaxRetriesLCP = _StarPPPStatDiscMaxRetriesLCP_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 67),
    _StarPPPStatDiscMaxRetriesLCP_Type()
)
starPPPStatDiscMaxRetriesLCP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDiscMaxRetriesLCP.setStatus("current")
_StarPPPStatDiscMaxRetriesIPCP_Type = Counter32
_StarPPPStatDiscMaxRetriesIPCP_Object = MibTableColumn
starPPPStatDiscMaxRetriesIPCP = _StarPPPStatDiscMaxRetriesIPCP_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 68),
    _StarPPPStatDiscMaxRetriesIPCP_Type()
)
starPPPStatDiscMaxRetriesIPCP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDiscMaxRetriesIPCP.setStatus("current")
_StarPPPStatDiscMaxSetupTimer_Type = Counter32
_StarPPPStatDiscMaxSetupTimer_Object = MibTableColumn
starPPPStatDiscMaxSetupTimer = _StarPPPStatDiscMaxSetupTimer_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 69),
    _StarPPPStatDiscMaxSetupTimer_Type()
)
starPPPStatDiscMaxSetupTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDiscMaxSetupTimer.setStatus("current")
_StarPPPStatDiscInvalidDestVpn_Type = Counter32
_StarPPPStatDiscInvalidDestVpn_Object = MibTableColumn
starPPPStatDiscInvalidDestVpn = _StarPPPStatDiscInvalidDestVpn_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 70),
    _StarPPPStatDiscInvalidDestVpn_Type()
)
starPPPStatDiscInvalidDestVpn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDiscInvalidDestVpn.setStatus("current")
_StarPPPStatDiscOptNegFailLCP_Type = Counter32
_StarPPPStatDiscOptNegFailLCP_Object = MibTableColumn
starPPPStatDiscOptNegFailLCP = _StarPPPStatDiscOptNegFailLCP_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 71),
    _StarPPPStatDiscOptNegFailLCP_Type()
)
starPPPStatDiscOptNegFailLCP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDiscOptNegFailLCP.setStatus("current")
_StarPPPStatDiscOptNegFailIPCP_Type = Counter32
_StarPPPStatDiscOptNegFailIPCP_Object = MibTableColumn
starPPPStatDiscOptNegFailIPCP = _StarPPPStatDiscOptNegFailIPCP_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 72),
    _StarPPPStatDiscOptNegFailIPCP_Type()
)
starPPPStatDiscOptNegFailIPCP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDiscOptNegFailIPCP.setStatus("current")
_StarPPPStatDiscNoRemoteIpAddr_Type = Counter32
_StarPPPStatDiscNoRemoteIpAddr_Object = MibTableColumn
starPPPStatDiscNoRemoteIpAddr = _StarPPPStatDiscNoRemoteIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 73),
    _StarPPPStatDiscNoRemoteIpAddr_Type()
)
starPPPStatDiscNoRemoteIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDiscNoRemoteIpAddr.setStatus("current")
_StarPPPStatDiscCallTypeDetectFail_Type = Counter32
_StarPPPStatDiscCallTypeDetectFail_Object = MibTableColumn
starPPPStatDiscCallTypeDetectFail = _StarPPPStatDiscCallTypeDetectFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 74),
    _StarPPPStatDiscCallTypeDetectFail_Type()
)
starPPPStatDiscCallTypeDetectFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDiscCallTypeDetectFail.setStatus("current")
_StarPPPStatDiscRemoteDiscUpLayer_Type = Counter32
_StarPPPStatDiscRemoteDiscUpLayer_Object = MibTableColumn
starPPPStatDiscRemoteDiscUpLayer = _StarPPPStatDiscRemoteDiscUpLayer_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 75),
    _StarPPPStatDiscRemoteDiscUpLayer_Type()
)
starPPPStatDiscRemoteDiscUpLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDiscRemoteDiscUpLayer.setStatus("current")
_StarPPPStatDiscLongDuraTimeout_Type = Counter32
_StarPPPStatDiscLongDuraTimeout_Object = MibTableColumn
starPPPStatDiscLongDuraTimeout = _StarPPPStatDiscLongDuraTimeout_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 76),
    _StarPPPStatDiscLongDuraTimeout_Type()
)
starPPPStatDiscLongDuraTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDiscLongDuraTimeout.setStatus("current")
_StarPPPStatDiscAuthFail_Type = Counter32
_StarPPPStatDiscAuthFail_Object = MibTableColumn
starPPPStatDiscAuthFail = _StarPPPStatDiscAuthFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 77),
    _StarPPPStatDiscAuthFail_Type()
)
starPPPStatDiscAuthFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatDiscAuthFail.setStatus("current")
_StarPPPStatLCPEchoTotalReq_Type = Counter32
_StarPPPStatLCPEchoTotalReq_Object = MibTableColumn
starPPPStatLCPEchoTotalReq = _StarPPPStatLCPEchoTotalReq_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 78),
    _StarPPPStatLCPEchoTotalReq_Type()
)
starPPPStatLCPEchoTotalReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatLCPEchoTotalReq.setStatus("current")
_StarPPPStatLCPEchoReqResent_Type = Counter32
_StarPPPStatLCPEchoReqResent_Object = MibTableColumn
starPPPStatLCPEchoReqResent = _StarPPPStatLCPEchoReqResent_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 79),
    _StarPPPStatLCPEchoReqResent_Type()
)
starPPPStatLCPEchoReqResent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatLCPEchoReqResent.setStatus("current")
_StarPPPStatLCPEchoRepRecved_Type = Counter32
_StarPPPStatLCPEchoRepRecved_Object = MibTableColumn
starPPPStatLCPEchoRepRecved = _StarPPPStatLCPEchoRepRecved_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 80),
    _StarPPPStatLCPEchoRepRecved_Type()
)
starPPPStatLCPEchoRepRecved.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatLCPEchoRepRecved.setStatus("current")
_StarPPPStatLCPEchoReqTimeout_Type = Counter32
_StarPPPStatLCPEchoReqTimeout_Object = MibTableColumn
starPPPStatLCPEchoReqTimeout = _StarPPPStatLCPEchoReqTimeout_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 81),
    _StarPPPStatLCPEchoReqTimeout_Type()
)
starPPPStatLCPEchoReqTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatLCPEchoReqTimeout.setStatus("current")
_StarPPPStatRecvErrBadCtrlField_Type = Counter32
_StarPPPStatRecvErrBadCtrlField_Object = MibTableColumn
starPPPStatRecvErrBadCtrlField = _StarPPPStatRecvErrBadCtrlField_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 82),
    _StarPPPStatRecvErrBadCtrlField_Type()
)
starPPPStatRecvErrBadCtrlField.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatRecvErrBadCtrlField.setStatus("current")
_StarPPPStatRecvErrBadPacketLen_Type = Counter32
_StarPPPStatRecvErrBadPacketLen_Object = MibTableColumn
starPPPStatRecvErrBadPacketLen = _StarPPPStatRecvErrBadPacketLen_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 83),
    _StarPPPStatRecvErrBadPacketLen_Type()
)
starPPPStatRecvErrBadPacketLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatRecvErrBadPacketLen.setStatus("current")
_StarPPPStatRemoteTerm_Type = Counter32
_StarPPPStatRemoteTerm_Object = MibTableColumn
starPPPStatRemoteTerm = _StarPPPStatRemoteTerm_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 84),
    _StarPPPStatRemoteTerm_Type()
)
starPPPStatRemoteTerm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatRemoteTerm.setStatus("current")
_StarPPPStatMiscFail_Type = Counter32
_StarPPPStatMiscFail_Object = MibTableColumn
starPPPStatMiscFail = _StarPPPStatMiscFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 21, 1, 1, 85),
    _StarPPPStatMiscFail_Type()
)
starPPPStatMiscFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPPPStatMiscFail.setStatus("current")
_StarentMIPHA_ObjectIdentity = ObjectIdentity
starentMIPHA = _StarentMIPHA_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22)
)
_StarMIPHAStatTable_Object = MibTable
starMIPHAStatTable = _StarMIPHAStatTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1)
)
if mibBuilder.loadTexts:
    starMIPHAStatTable.setStatus("current")
_StarMIPHAStatEntry_Object = MibTableRow
starMIPHAStatEntry = _StarMIPHAStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1)
)
starMIPHAStatEntry.setIndexNames(
    (1, "STARENT-MIB", "starMIPHAStatSvcID"),
)
if mibBuilder.loadTexts:
    starMIPHAStatEntry.setStatus("current")
_StarMIPHAStatVpnID_Type = Gauge32
_StarMIPHAStatVpnID_Object = MibTableColumn
starMIPHAStatVpnID = _StarMIPHAStatVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 1),
    _StarMIPHAStatVpnID_Type()
)
starMIPHAStatVpnID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatVpnID.setStatus("current")
_StarMIPHAStatSvcID_Type = StarShortID
_StarMIPHAStatSvcID_Object = MibTableColumn
starMIPHAStatSvcID = _StarMIPHAStatSvcID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 2),
    _StarMIPHAStatSvcID_Type()
)
starMIPHAStatSvcID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starMIPHAStatSvcID.setStatus("current")
_StarMIPHAStatVpnName_Type = DisplayString
_StarMIPHAStatVpnName_Object = MibTableColumn
starMIPHAStatVpnName = _StarMIPHAStatVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 3),
    _StarMIPHAStatVpnName_Type()
)
starMIPHAStatVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatVpnName.setStatus("current")
_StarMIPHAStatServName_Type = DisplayString
_StarMIPHAStatServName_Object = MibTableColumn
starMIPHAStatServName = _StarMIPHAStatServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 4),
    _StarMIPHAStatServName_Type()
)
starMIPHAStatServName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatServName.setStatus("current")
_StarMIPHAStatDisconnects_Type = Counter32
_StarMIPHAStatDisconnects_Object = MibTableColumn
starMIPHAStatDisconnects = _StarMIPHAStatDisconnects_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 5),
    _StarMIPHAStatDisconnects_Type()
)
starMIPHAStatDisconnects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatDisconnects.setStatus("current")
_StarMIPHAStatExpiry_Type = Counter32
_StarMIPHAStatExpiry_Object = MibTableColumn
starMIPHAStatExpiry = _StarMIPHAStatExpiry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 6),
    _StarMIPHAStatExpiry_Type()
)
starMIPHAStatExpiry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatExpiry.setStatus("current")
_StarMIPHAStatDereg_Type = Counter32
_StarMIPHAStatDereg_Object = MibTableColumn
starMIPHAStatDereg = _StarMIPHAStatDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 7),
    _StarMIPHAStatDereg_Type()
)
starMIPHAStatDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatDereg.setStatus("current")
_StarMIPHAStatAdminDrop_Type = Counter32
_StarMIPHAStatAdminDrop_Object = MibTableColumn
starMIPHAStatAdminDrop = _StarMIPHAStatAdminDrop_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 8),
    _StarMIPHAStatAdminDrop_Type()
)
starMIPHAStatAdminDrop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatAdminDrop.setStatus("current")
_StarMIPHAStatRegRecvTotal_Type = Counter32
_StarMIPHAStatRegRecvTotal_Object = MibTableColumn
starMIPHAStatRegRecvTotal = _StarMIPHAStatRegRecvTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 9),
    _StarMIPHAStatRegRecvTotal_Type()
)
starMIPHAStatRegRecvTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegRecvTotal.setStatus("current")
_StarMIPHAStatRegRecvInitial_Type = Counter32
_StarMIPHAStatRegRecvInitial_Object = MibTableColumn
starMIPHAStatRegRecvInitial = _StarMIPHAStatRegRecvInitial_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 10),
    _StarMIPHAStatRegRecvInitial_Type()
)
starMIPHAStatRegRecvInitial.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegRecvInitial.setStatus("current")
_StarMIPHAStatRegRecvRenew_Type = Counter32
_StarMIPHAStatRegRecvRenew_Object = MibTableColumn
starMIPHAStatRegRecvRenew = _StarMIPHAStatRegRecvRenew_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 11),
    _StarMIPHAStatRegRecvRenew_Type()
)
starMIPHAStatRegRecvRenew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegRecvRenew.setStatus("current")
_StarMIPHAStatRegRecvDereg_Type = Counter32
_StarMIPHAStatRegRecvDereg_Object = MibTableColumn
starMIPHAStatRegRecvDereg = _StarMIPHAStatRegRecvDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 12),
    _StarMIPHAStatRegRecvDereg_Type()
)
starMIPHAStatRegRecvDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegRecvDereg.setStatus("current")
_StarMIPHAStatRegAcceptTotal_Type = Counter32
_StarMIPHAStatRegAcceptTotal_Object = MibTableColumn
starMIPHAStatRegAcceptTotal = _StarMIPHAStatRegAcceptTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 13),
    _StarMIPHAStatRegAcceptTotal_Type()
)
starMIPHAStatRegAcceptTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegAcceptTotal.setStatus("current")
_StarMIPHAStatRegAcceptReg_Type = Counter32
_StarMIPHAStatRegAcceptReg_Object = MibTableColumn
starMIPHAStatRegAcceptReg = _StarMIPHAStatRegAcceptReg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 14),
    _StarMIPHAStatRegAcceptReg_Type()
)
starMIPHAStatRegAcceptReg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegAcceptReg.setStatus("current")
_StarMIPHAStatRegAcceptRenew_Type = Counter32
_StarMIPHAStatRegAcceptRenew_Object = MibTableColumn
starMIPHAStatRegAcceptRenew = _StarMIPHAStatRegAcceptRenew_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 15),
    _StarMIPHAStatRegAcceptRenew_Type()
)
starMIPHAStatRegAcceptRenew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegAcceptRenew.setStatus("current")
_StarMIPHAStatRegAcceptDereg_Type = Counter32
_StarMIPHAStatRegAcceptDereg_Object = MibTableColumn
starMIPHAStatRegAcceptDereg = _StarMIPHAStatRegAcceptDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 16),
    _StarMIPHAStatRegAcceptDereg_Type()
)
starMIPHAStatRegAcceptDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegAcceptDereg.setStatus("current")
_StarMIPHAStatRegDeniedTotal_Type = Counter32
_StarMIPHAStatRegDeniedTotal_Object = MibTableColumn
starMIPHAStatRegDeniedTotal = _StarMIPHAStatRegDeniedTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 17),
    _StarMIPHAStatRegDeniedTotal_Type()
)
starMIPHAStatRegDeniedTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegDeniedTotal.setStatus("current")
_StarMIPHAStatRegDeniedInitial_Type = Counter32
_StarMIPHAStatRegDeniedInitial_Object = MibTableColumn
starMIPHAStatRegDeniedInitial = _StarMIPHAStatRegDeniedInitial_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 18),
    _StarMIPHAStatRegDeniedInitial_Type()
)
starMIPHAStatRegDeniedInitial.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegDeniedInitial.setStatus("current")
_StarMIPHAStatRegDeniedRenew_Type = Counter32
_StarMIPHAStatRegDeniedRenew_Object = MibTableColumn
starMIPHAStatRegDeniedRenew = _StarMIPHAStatRegDeniedRenew_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 19),
    _StarMIPHAStatRegDeniedRenew_Type()
)
starMIPHAStatRegDeniedRenew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegDeniedRenew.setStatus("current")
_StarMIPHAStatRegDeniedDereg_Type = Counter32
_StarMIPHAStatRegDeniedDereg_Object = MibTableColumn
starMIPHAStatRegDeniedDereg = _StarMIPHAStatRegDeniedDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 20),
    _StarMIPHAStatRegDeniedDereg_Type()
)
starMIPHAStatRegDeniedDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegDeniedDereg.setStatus("current")
_StarMIPHAStatRegReplyTotal_Type = Counter32
_StarMIPHAStatRegReplyTotal_Object = MibTableColumn
starMIPHAStatRegReplyTotal = _StarMIPHAStatRegReplyTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 21),
    _StarMIPHAStatRegReplyTotal_Type()
)
starMIPHAStatRegReplyTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegReplyTotal.setStatus("current")
_StarMIPHAStatRegReplyAcceptReg_Type = Counter32
_StarMIPHAStatRegReplyAcceptReg_Object = MibTableColumn
starMIPHAStatRegReplyAcceptReg = _StarMIPHAStatRegReplyAcceptReg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 22),
    _StarMIPHAStatRegReplyAcceptReg_Type()
)
starMIPHAStatRegReplyAcceptReg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegReplyAcceptReg.setStatus("current")
_StarMIPHAStatRegReplyAcceptDereg_Type = Counter32
_StarMIPHAStatRegReplyAcceptDereg_Object = MibTableColumn
starMIPHAStatRegReplyAcceptDereg = _StarMIPHAStatRegReplyAcceptDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 23),
    _StarMIPHAStatRegReplyAcceptDereg_Type()
)
starMIPHAStatRegReplyAcceptDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegReplyAcceptDereg.setStatus("current")
_StarMIPHAStatRegReplyDenied_Type = Counter32
_StarMIPHAStatRegReplyDenied_Object = MibTableColumn
starMIPHAStatRegReplyDenied = _StarMIPHAStatRegReplyDenied_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 24),
    _StarMIPHAStatRegReplyDenied_Type()
)
starMIPHAStatRegReplyDenied.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegReplyDenied.setStatus("current")
_StarMIPHAStatRegReplyBadReq_Type = Counter32
_StarMIPHAStatRegReplyBadReq_Object = MibTableColumn
starMIPHAStatRegReplyBadReq = _StarMIPHAStatRegReplyBadReq_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 25),
    _StarMIPHAStatRegReplyBadReq_Type()
)
starMIPHAStatRegReplyBadReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegReplyBadReq.setStatus("current")
_StarMIPHAStatRegReplyMismatchID_Type = Counter32
_StarMIPHAStatRegReplyMismatchID_Object = MibTableColumn
starMIPHAStatRegReplyMismatchID = _StarMIPHAStatRegReplyMismatchID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 26),
    _StarMIPHAStatRegReplyMismatchID_Type()
)
starMIPHAStatRegReplyMismatchID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegReplyMismatchID.setStatus("current")
_StarMIPHAStatRegReplyAdminProhib_Type = Counter32
_StarMIPHAStatRegReplyAdminProhib_Object = MibTableColumn
starMIPHAStatRegReplyAdminProhib = _StarMIPHAStatRegReplyAdminProhib_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 27),
    _StarMIPHAStatRegReplyAdminProhib_Type()
)
starMIPHAStatRegReplyAdminProhib.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegReplyAdminProhib.setStatus("current")
_StarMIPHAStatRegReplyUnspecErr_Type = Counter32
_StarMIPHAStatRegReplyUnspecErr_Object = MibTableColumn
starMIPHAStatRegReplyUnspecErr = _StarMIPHAStatRegReplyUnspecErr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 28),
    _StarMIPHAStatRegReplyUnspecErr_Type()
)
starMIPHAStatRegReplyUnspecErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegReplyUnspecErr.setStatus("current")
_StarMIPHAStatRegReplyNoResource_Type = Counter32
_StarMIPHAStatRegReplyNoResource_Object = MibTableColumn
starMIPHAStatRegReplyNoResource = _StarMIPHAStatRegReplyNoResource_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 29),
    _StarMIPHAStatRegReplyNoResource_Type()
)
starMIPHAStatRegReplyNoResource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegReplyNoResource.setStatus("current")
_StarMIPHAStatRegReplyMnAuthFail_Type = Counter32
_StarMIPHAStatRegReplyMnAuthFail_Object = MibTableColumn
starMIPHAStatRegReplyMnAuthFail = _StarMIPHAStatRegReplyMnAuthFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 30),
    _StarMIPHAStatRegReplyMnAuthFail_Type()
)
starMIPHAStatRegReplyMnAuthFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegReplyMnAuthFail.setStatus("current")
_StarMIPHAStatRegReplyFAAuthFail_Type = Counter32
_StarMIPHAStatRegReplyFAAuthFail_Object = MibTableColumn
starMIPHAStatRegReplyFAAuthFail = _StarMIPHAStatRegReplyFAAuthFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 31),
    _StarMIPHAStatRegReplyFAAuthFail_Type()
)
starMIPHAStatRegReplyFAAuthFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegReplyFAAuthFail.setStatus("current")
_StarMIPHAStatRegReplySimulBind_Type = Counter32
_StarMIPHAStatRegReplySimulBind_Object = MibTableColumn
starMIPHAStatRegReplySimulBind = _StarMIPHAStatRegReplySimulBind_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 32),
    _StarMIPHAStatRegReplySimulBind_Type()
)
starMIPHAStatRegReplySimulBind.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegReplySimulBind.setStatus("current")
_StarMIPHAStatRegReplyUnknownHA_Type = Counter32
_StarMIPHAStatRegReplyUnknownHA_Object = MibTableColumn
starMIPHAStatRegReplyUnknownHA = _StarMIPHAStatRegReplyUnknownHA_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 33),
    _StarMIPHAStatRegReplyUnknownHA_Type()
)
starMIPHAStatRegReplyUnknownHA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegReplyUnknownHA.setStatus("current")
_StarMIPHAStatRegReplyRevTunUnav_Type = Counter32
_StarMIPHAStatRegReplyRevTunUnav_Object = MibTableColumn
starMIPHAStatRegReplyRevTunUnav = _StarMIPHAStatRegReplyRevTunUnav_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 34),
    _StarMIPHAStatRegReplyRevTunUnav_Type()
)
starMIPHAStatRegReplyRevTunUnav.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegReplyRevTunUnav.setStatus("current")
_StarMIPHAStatRegReplyRevTunMand_Type = Counter32
_StarMIPHAStatRegReplyRevTunMand_Object = MibTableColumn
starMIPHAStatRegReplyRevTunMand = _StarMIPHAStatRegReplyRevTunMand_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 35),
    _StarMIPHAStatRegReplyRevTunMand_Type()
)
starMIPHAStatRegReplyRevTunMand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegReplyRevTunMand.setStatus("current")
_StarMIPHAStatRegReplyEncapUnav_Type = Counter32
_StarMIPHAStatRegReplyEncapUnav_Object = MibTableColumn
starMIPHAStatRegReplyEncapUnav = _StarMIPHAStatRegReplyEncapUnav_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 36),
    _StarMIPHAStatRegReplyEncapUnav_Type()
)
starMIPHAStatRegReplyEncapUnav.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegReplyEncapUnav.setStatus("current")
_StarMIPHAStatRegReplySendError_Type = Counter32
_StarMIPHAStatRegReplySendError_Object = MibTableColumn
starMIPHAStatRegReplySendError = _StarMIPHAStatRegReplySendError_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 37),
    _StarMIPHAStatRegReplySendError_Type()
)
starMIPHAStatRegReplySendError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegReplySendError.setStatus("current")
_StarMIPHAStatFARevocations_Type = Counter32
_StarMIPHAStatFARevocations_Object = MibTableColumn
starMIPHAStatFARevocations = _StarMIPHAStatFARevocations_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 38),
    _StarMIPHAStatFARevocations_Type()
)
starMIPHAStatFARevocations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatFARevocations.setStatus("current")
_StarMIPHAStatRegAcceptHO_Type = Counter32
_StarMIPHAStatRegAcceptHO_Object = MibTableColumn
starMIPHAStatRegAcceptHO = _StarMIPHAStatRegAcceptHO_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 39),
    _StarMIPHAStatRegAcceptHO_Type()
)
starMIPHAStatRegAcceptHO.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegAcceptHO.setStatus("current")
_StarMIPHAStatRegDeniedHO_Type = Counter32
_StarMIPHAStatRegDeniedHO_Object = MibTableColumn
starMIPHAStatRegDeniedHO = _StarMIPHAStatRegDeniedHO_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 40),
    _StarMIPHAStatRegDeniedHO_Type()
)
starMIPHAStatRegDeniedHO.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegDeniedHO.setStatus("current")
_StarMIPHAStatRegDiscardTotal_Type = Counter32
_StarMIPHAStatRegDiscardTotal_Object = MibTableColumn
starMIPHAStatRegDiscardTotal = _StarMIPHAStatRegDiscardTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 22, 1, 1, 41),
    _StarMIPHAStatRegDiscardTotal_Type()
)
starMIPHAStatRegDiscardTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPHAStatRegDiscardTotal.setStatus("current")
_StarentMIPFA_ObjectIdentity = ObjectIdentity
starentMIPFA = _StarentMIPFA_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23)
)
_StarMIPFAStatTable_Object = MibTable
starMIPFAStatTable = _StarMIPFAStatTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1)
)
if mibBuilder.loadTexts:
    starMIPFAStatTable.setStatus("current")
_StarMIPFAStatEntry_Object = MibTableRow
starMIPFAStatEntry = _StarMIPFAStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1)
)
starMIPFAStatEntry.setIndexNames(
    (1, "STARENT-MIB", "starMIPFAStatSvcID"),
)
if mibBuilder.loadTexts:
    starMIPFAStatEntry.setStatus("current")
_StarMIPFAStatVpnID_Type = Gauge32
_StarMIPFAStatVpnID_Object = MibTableColumn
starMIPFAStatVpnID = _StarMIPFAStatVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 1),
    _StarMIPFAStatVpnID_Type()
)
starMIPFAStatVpnID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatVpnID.setStatus("current")
_StarMIPFAStatSvcID_Type = StarShortID
_StarMIPFAStatSvcID_Object = MibTableColumn
starMIPFAStatSvcID = _StarMIPFAStatSvcID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 2),
    _StarMIPFAStatSvcID_Type()
)
starMIPFAStatSvcID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starMIPFAStatSvcID.setStatus("current")
_StarMIPFAStatVpnName_Type = DisplayString
_StarMIPFAStatVpnName_Object = MibTableColumn
starMIPFAStatVpnName = _StarMIPFAStatVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 3),
    _StarMIPFAStatVpnName_Type()
)
starMIPFAStatVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatVpnName.setStatus("current")
_StarMIPFAStatServName_Type = DisplayString
_StarMIPFAStatServName_Object = MibTableColumn
starMIPFAStatServName = _StarMIPFAStatServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 4),
    _StarMIPFAStatServName_Type()
)
starMIPFAStatServName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatServName.setStatus("current")
_StarMIPFAStatAdvertSend_Type = Counter32
_StarMIPFAStatAdvertSend_Object = MibTableColumn
starMIPFAStatAdvertSend = _StarMIPFAStatAdvertSend_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 5),
    _StarMIPFAStatAdvertSend_Type()
)
starMIPFAStatAdvertSend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatAdvertSend.setStatus("current")
_StarMIPFAStatDiscExpiry_Type = Counter32
_StarMIPFAStatDiscExpiry_Object = MibTableColumn
starMIPFAStatDiscExpiry = _StarMIPFAStatDiscExpiry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 6),
    _StarMIPFAStatDiscExpiry_Type()
)
starMIPFAStatDiscExpiry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatDiscExpiry.setStatus("current")
_StarMIPFAStatDiscDereg_Type = Counter32
_StarMIPFAStatDiscDereg_Object = MibTableColumn
starMIPFAStatDiscDereg = _StarMIPFAStatDiscDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 7),
    _StarMIPFAStatDiscDereg_Type()
)
starMIPFAStatDiscDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatDiscDereg.setStatus("current")
_StarMIPFAStatDiscAdmin_Type = Counter32
_StarMIPFAStatDiscAdmin_Object = MibTableColumn
starMIPFAStatDiscAdmin = _StarMIPFAStatDiscAdmin_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 8),
    _StarMIPFAStatDiscAdmin_Type()
)
starMIPFAStatDiscAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatDiscAdmin.setStatus("current")
_StarMIPFAStatAuthAttempt_Type = Counter32
_StarMIPFAStatAuthAttempt_Object = MibTableColumn
starMIPFAStatAuthAttempt = _StarMIPFAStatAuthAttempt_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 9),
    _StarMIPFAStatAuthAttempt_Type()
)
starMIPFAStatAuthAttempt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatAuthAttempt.setStatus("current")
_StarMIPFAStatAuthSuccess_Type = Counter32
_StarMIPFAStatAuthSuccess_Object = MibTableColumn
starMIPFAStatAuthSuccess = _StarMIPFAStatAuthSuccess_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 10),
    _StarMIPFAStatAuthSuccess_Type()
)
starMIPFAStatAuthSuccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatAuthSuccess.setStatus("current")
_StarMIPFAStatAuthFailure_Type = Counter32
_StarMIPFAStatAuthFailure_Object = MibTableColumn
starMIPFAStatAuthFailure = _StarMIPFAStatAuthFailure_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 11),
    _StarMIPFAStatAuthFailure_Type()
)
starMIPFAStatAuthFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatAuthFailure.setStatus("current")
_StarMIPFAStatRegRecvTotal_Type = Counter32
_StarMIPFAStatRegRecvTotal_Object = MibTableColumn
starMIPFAStatRegRecvTotal = _StarMIPFAStatRegRecvTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 12),
    _StarMIPFAStatRegRecvTotal_Type()
)
starMIPFAStatRegRecvTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRecvTotal.setStatus("current")
_StarMIPFAStatRegRecvInitial_Type = Counter32
_StarMIPFAStatRegRecvInitial_Object = MibTableColumn
starMIPFAStatRegRecvInitial = _StarMIPFAStatRegRecvInitial_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 13),
    _StarMIPFAStatRegRecvInitial_Type()
)
starMIPFAStatRegRecvInitial.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRecvInitial.setStatus("current")
_StarMIPFAStatRegRecvRenewal_Type = Counter32
_StarMIPFAStatRegRecvRenewal_Object = MibTableColumn
starMIPFAStatRegRecvRenewal = _StarMIPFAStatRegRecvRenewal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 14),
    _StarMIPFAStatRegRecvRenewal_Type()
)
starMIPFAStatRegRecvRenewal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRecvRenewal.setStatus("current")
_StarMIPFAStatRegRecvDereg_Type = Counter32
_StarMIPFAStatRegRecvDereg_Object = MibTableColumn
starMIPFAStatRegRecvDereg = _StarMIPFAStatRegRecvDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 15),
    _StarMIPFAStatRegRecvDereg_Type()
)
starMIPFAStatRegRecvDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRecvDereg.setStatus("current")
_StarMIPFAStatRegAcceptTotal_Type = Counter32
_StarMIPFAStatRegAcceptTotal_Object = MibTableColumn
starMIPFAStatRegAcceptTotal = _StarMIPFAStatRegAcceptTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 16),
    _StarMIPFAStatRegAcceptTotal_Type()
)
starMIPFAStatRegAcceptTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegAcceptTotal.setStatus("current")
_StarMIPFAStatRegAcceptInitial_Type = Counter32
_StarMIPFAStatRegAcceptInitial_Object = MibTableColumn
starMIPFAStatRegAcceptInitial = _StarMIPFAStatRegAcceptInitial_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 17),
    _StarMIPFAStatRegAcceptInitial_Type()
)
starMIPFAStatRegAcceptInitial.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegAcceptInitial.setStatus("current")
_StarMIPFAStatRegAcceptRenewal_Type = Counter32
_StarMIPFAStatRegAcceptRenewal_Object = MibTableColumn
starMIPFAStatRegAcceptRenewal = _StarMIPFAStatRegAcceptRenewal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 18),
    _StarMIPFAStatRegAcceptRenewal_Type()
)
starMIPFAStatRegAcceptRenewal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegAcceptRenewal.setStatus("current")
_StarMIPFAStatRegAcceptDereg_Type = Counter32
_StarMIPFAStatRegAcceptDereg_Object = MibTableColumn
starMIPFAStatRegAcceptDereg = _StarMIPFAStatRegAcceptDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 19),
    _StarMIPFAStatRegAcceptDereg_Type()
)
starMIPFAStatRegAcceptDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegAcceptDereg.setStatus("current")
_StarMIPFAStatRegDenTotal_Type = Counter32
_StarMIPFAStatRegDenTotal_Object = MibTableColumn
starMIPFAStatRegDenTotal = _StarMIPFAStatRegDenTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 20),
    _StarMIPFAStatRegDenTotal_Type()
)
starMIPFAStatRegDenTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenTotal.setStatus("current")
_StarMIPFAStatRegDenInitial_Type = Counter32
_StarMIPFAStatRegDenInitial_Object = MibTableColumn
starMIPFAStatRegDenInitial = _StarMIPFAStatRegDenInitial_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 21),
    _StarMIPFAStatRegDenInitial_Type()
)
starMIPFAStatRegDenInitial.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenInitial.setStatus("current")
_StarMIPFAStatRegDenRenewal_Type = Counter32
_StarMIPFAStatRegDenRenewal_Object = MibTableColumn
starMIPFAStatRegDenRenewal = _StarMIPFAStatRegDenRenewal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 22),
    _StarMIPFAStatRegDenRenewal_Type()
)
starMIPFAStatRegDenRenewal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenRenewal.setStatus("current")
_StarMIPFAStatRegDenDereg_Type = Counter32
_StarMIPFAStatRegDenDereg_Object = MibTableColumn
starMIPFAStatRegDenDereg = _StarMIPFAStatRegDenDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 23),
    _StarMIPFAStatRegDenDereg_Type()
)
starMIPFAStatRegDenDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenDereg.setStatus("current")
_StarMIPFAStatRegDiscardTotal_Type = Counter32
_StarMIPFAStatRegDiscardTotal_Object = MibTableColumn
starMIPFAStatRegDiscardTotal = _StarMIPFAStatRegDiscardTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 24),
    _StarMIPFAStatRegDiscardTotal_Type()
)
starMIPFAStatRegDiscardTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDiscardTotal.setStatus("current")
_StarMIPFAStatRegDiscardInitial_Type = Counter32
_StarMIPFAStatRegDiscardInitial_Object = MibTableColumn
starMIPFAStatRegDiscardInitial = _StarMIPFAStatRegDiscardInitial_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 25),
    _StarMIPFAStatRegDiscardInitial_Type()
)
starMIPFAStatRegDiscardInitial.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDiscardInitial.setStatus("current")
_StarMIPFAStatRegDiscardRenewal_Type = Counter32
_StarMIPFAStatRegDiscardRenewal_Object = MibTableColumn
starMIPFAStatRegDiscardRenewal = _StarMIPFAStatRegDiscardRenewal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 26),
    _StarMIPFAStatRegDiscardRenewal_Type()
)
starMIPFAStatRegDiscardRenewal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDiscardRenewal.setStatus("current")
_StarMIPFAStatRegDiscardDereg_Type = Counter32
_StarMIPFAStatRegDiscardDereg_Object = MibTableColumn
starMIPFAStatRegDiscardDereg = _StarMIPFAStatRegDiscardDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 27),
    _StarMIPFAStatRegDiscardDereg_Type()
)
starMIPFAStatRegDiscardDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDiscardDereg.setStatus("current")
_StarMIPFAStatRegRelayedTotal_Type = Counter32
_StarMIPFAStatRegRelayedTotal_Object = MibTableColumn
starMIPFAStatRegRelayedTotal = _StarMIPFAStatRegRelayedTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 28),
    _StarMIPFAStatRegRelayedTotal_Type()
)
starMIPFAStatRegRelayedTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRelayedTotal.setStatus("current")
_StarMIPFAStatRegRelayedInitial_Type = Counter32
_StarMIPFAStatRegRelayedInitial_Object = MibTableColumn
starMIPFAStatRegRelayedInitial = _StarMIPFAStatRegRelayedInitial_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 29),
    _StarMIPFAStatRegRelayedInitial_Type()
)
starMIPFAStatRegRelayedInitial.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRelayedInitial.setStatus("current")
_StarMIPFAStatRegRelayedRenewal_Type = Counter32
_StarMIPFAStatRegRelayedRenewal_Object = MibTableColumn
starMIPFAStatRegRelayedRenewal = _StarMIPFAStatRegRelayedRenewal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 30),
    _StarMIPFAStatRegRelayedRenewal_Type()
)
starMIPFAStatRegRelayedRenewal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRelayedRenewal.setStatus("current")
_StarMIPFAStatRegRelayedDereg_Type = Counter32
_StarMIPFAStatRegRelayedDereg_Object = MibTableColumn
starMIPFAStatRegRelayedDereg = _StarMIPFAStatRegRelayedDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 31),
    _StarMIPFAStatRegRelayedDereg_Type()
)
starMIPFAStatRegRelayedDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRelayedDereg.setStatus("current")
_StarMIPFAStatRegAuthFailTotal_Type = Counter32
_StarMIPFAStatRegAuthFailTotal_Object = MibTableColumn
starMIPFAStatRegAuthFailTotal = _StarMIPFAStatRegAuthFailTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 32),
    _StarMIPFAStatRegAuthFailTotal_Type()
)
starMIPFAStatRegAuthFailTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegAuthFailTotal.setStatus("current")
_StarMIPFAStatRegAuthFailInitial_Type = Counter32
_StarMIPFAStatRegAuthFailInitial_Object = MibTableColumn
starMIPFAStatRegAuthFailInitial = _StarMIPFAStatRegAuthFailInitial_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 33),
    _StarMIPFAStatRegAuthFailInitial_Type()
)
starMIPFAStatRegAuthFailInitial.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegAuthFailInitial.setStatus("current")
_StarMIPFAStatRegAuthFailRenewal_Type = Counter32
_StarMIPFAStatRegAuthFailRenewal_Object = MibTableColumn
starMIPFAStatRegAuthFailRenewal = _StarMIPFAStatRegAuthFailRenewal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 34),
    _StarMIPFAStatRegAuthFailRenewal_Type()
)
starMIPFAStatRegAuthFailRenewal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegAuthFailRenewal.setStatus("current")
_StarMIPFAStatRegAuthFailDereg_Type = Counter32
_StarMIPFAStatRegAuthFailDereg_Object = MibTableColumn
starMIPFAStatRegAuthFailDereg = _StarMIPFAStatRegAuthFailDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 35),
    _StarMIPFAStatRegAuthFailDereg_Type()
)
starMIPFAStatRegAuthFailDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegAuthFailDereg.setStatus("current")
_StarMIPFAStatRegDenPDSNTotal_Type = Counter32
_StarMIPFAStatRegDenPDSNTotal_Object = MibTableColumn
starMIPFAStatRegDenPDSNTotal = _StarMIPFAStatRegDenPDSNTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 36),
    _StarMIPFAStatRegDenPDSNTotal_Type()
)
starMIPFAStatRegDenPDSNTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNTotal.setStatus("current")
_StarMIPFAStatRegDenPDSNInitial_Type = Counter32
_StarMIPFAStatRegDenPDSNInitial_Object = MibTableColumn
starMIPFAStatRegDenPDSNInitial = _StarMIPFAStatRegDenPDSNInitial_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 37),
    _StarMIPFAStatRegDenPDSNInitial_Type()
)
starMIPFAStatRegDenPDSNInitial.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNInitial.setStatus("current")
_StarMIPFAStatRegDenPDSNRenewal_Type = Counter32
_StarMIPFAStatRegDenPDSNRenewal_Object = MibTableColumn
starMIPFAStatRegDenPDSNRenewal = _StarMIPFAStatRegDenPDSNRenewal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 38),
    _StarMIPFAStatRegDenPDSNRenewal_Type()
)
starMIPFAStatRegDenPDSNRenewal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNRenewal.setStatus("current")
_StarMIPFAStatRegDenPDSNDereg_Type = Counter32
_StarMIPFAStatRegDenPDSNDereg_Object = MibTableColumn
starMIPFAStatRegDenPDSNDereg = _StarMIPFAStatRegDenPDSNDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 39),
    _StarMIPFAStatRegDenPDSNDereg_Type()
)
starMIPFAStatRegDenPDSNDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNDereg.setStatus("current")
_StarMIPFAStatRegDenHATotal_Type = Counter32
_StarMIPFAStatRegDenHATotal_Object = MibTableColumn
starMIPFAStatRegDenHATotal = _StarMIPFAStatRegDenHATotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 40),
    _StarMIPFAStatRegDenHATotal_Type()
)
starMIPFAStatRegDenHATotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenHATotal.setStatus("current")
_StarMIPFAStatRegDenHAInitial_Type = Counter32
_StarMIPFAStatRegDenHAInitial_Object = MibTableColumn
starMIPFAStatRegDenHAInitial = _StarMIPFAStatRegDenHAInitial_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 41),
    _StarMIPFAStatRegDenHAInitial_Type()
)
starMIPFAStatRegDenHAInitial.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenHAInitial.setStatus("current")
_StarMIPFAStatRegDenHARenewal_Type = Counter32
_StarMIPFAStatRegDenHARenewal_Object = MibTableColumn
starMIPFAStatRegDenHARenewal = _StarMIPFAStatRegDenHARenewal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 42),
    _StarMIPFAStatRegDenHARenewal_Type()
)
starMIPFAStatRegDenHARenewal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenHARenewal.setStatus("current")
_StarMIPFAStatRegDenHADereg_Type = Counter32
_StarMIPFAStatRegDenHADereg_Object = MibTableColumn
starMIPFAStatRegDenHADereg = _StarMIPFAStatRegDenHADereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 43),
    _StarMIPFAStatRegDenHADereg_Type()
)
starMIPFAStatRegDenHADereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenHADereg.setStatus("current")
_StarMIPFAStatRegDenPDSNUnspec_Type = Counter32
_StarMIPFAStatRegDenPDSNUnspec_Object = MibTableColumn
starMIPFAStatRegDenPDSNUnspec = _StarMIPFAStatRegDenPDSNUnspec_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 44),
    _StarMIPFAStatRegDenPDSNUnspec_Type()
)
starMIPFAStatRegDenPDSNUnspec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNUnspec.setStatus("current")
_StarMIPFAStatRegDenPDSNTimeout_Type = Counter32
_StarMIPFAStatRegDenPDSNTimeout_Object = MibTableColumn
starMIPFAStatRegDenPDSNTimeout = _StarMIPFAStatRegDenPDSNTimeout_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 45),
    _StarMIPFAStatRegDenPDSNTimeout_Type()
)
starMIPFAStatRegDenPDSNTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNTimeout.setStatus("current")
_StarMIPFAStatRegDenPDSNAdmin_Type = Counter32
_StarMIPFAStatRegDenPDSNAdmin_Object = MibTableColumn
starMIPFAStatRegDenPDSNAdmin = _StarMIPFAStatRegDenPDSNAdmin_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 46),
    _StarMIPFAStatRegDenPDSNAdmin_Type()
)
starMIPFAStatRegDenPDSNAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNAdmin.setStatus("current")
_StarMIPFAStatRegDenPDSNResources_Type = Counter32
_StarMIPFAStatRegDenPDSNResources_Object = MibTableColumn
starMIPFAStatRegDenPDSNResources = _StarMIPFAStatRegDenPDSNResources_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 47),
    _StarMIPFAStatRegDenPDSNResources_Type()
)
starMIPFAStatRegDenPDSNResources.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNResources.setStatus("current")
_StarMIPFAStatRegDenPDSNMnAuth_Type = Counter32
_StarMIPFAStatRegDenPDSNMnAuth_Object = MibTableColumn
starMIPFAStatRegDenPDSNMnAuth = _StarMIPFAStatRegDenPDSNMnAuth_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 48),
    _StarMIPFAStatRegDenPDSNMnAuth_Type()
)
starMIPFAStatRegDenPDSNMnAuth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNMnAuth.setStatus("current")
_StarMIPFAStatRegDenPDSNHAAuth_Type = Counter32
_StarMIPFAStatRegDenPDSNHAAuth_Object = MibTableColumn
starMIPFAStatRegDenPDSNHAAuth = _StarMIPFAStatRegDenPDSNHAAuth_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 49),
    _StarMIPFAStatRegDenPDSNHAAuth_Type()
)
starMIPFAStatRegDenPDSNHAAuth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNHAAuth.setStatus("current")
_StarMIPFAStatRegDenPDSNTooLong_Type = Counter32
_StarMIPFAStatRegDenPDSNTooLong_Object = MibTableColumn
starMIPFAStatRegDenPDSNTooLong = _StarMIPFAStatRegDenPDSNTooLong_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 50),
    _StarMIPFAStatRegDenPDSNTooLong_Type()
)
starMIPFAStatRegDenPDSNTooLong.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNTooLong.setStatus("current")
_StarMIPFAStatRegDenPDSNBadReq_Type = Counter32
_StarMIPFAStatRegDenPDSNBadReq_Object = MibTableColumn
starMIPFAStatRegDenPDSNBadReq = _StarMIPFAStatRegDenPDSNBadReq_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 51),
    _StarMIPFAStatRegDenPDSNBadReq_Type()
)
starMIPFAStatRegDenPDSNBadReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNBadReq.setStatus("current")
_StarMIPFAStatRegDenPDSNEncapUnav_Type = Counter32
_StarMIPFAStatRegDenPDSNEncapUnav_Object = MibTableColumn
starMIPFAStatRegDenPDSNEncapUnav = _StarMIPFAStatRegDenPDSNEncapUnav_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 52),
    _StarMIPFAStatRegDenPDSNEncapUnav_Type()
)
starMIPFAStatRegDenPDSNEncapUnav.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNEncapUnav.setStatus("current")
_StarMIPFAStatRegDenPDSNRevTunUnav_Type = Counter32
_StarMIPFAStatRegDenPDSNRevTunUnav_Object = MibTableColumn
starMIPFAStatRegDenPDSNRevTunUnav = _StarMIPFAStatRegDenPDSNRevTunUnav_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 53),
    _StarMIPFAStatRegDenPDSNRevTunUnav_Type()
)
starMIPFAStatRegDenPDSNRevTunUnav.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNRevTunUnav.setStatus("current")
_StarMIPFAStatRegDenPDSNRevTunMand_Type = Counter32
_StarMIPFAStatRegDenPDSNRevTunMand_Object = MibTableColumn
starMIPFAStatRegDenPDSNRevTunMand = _StarMIPFAStatRegDenPDSNRevTunMand_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 54),
    _StarMIPFAStatRegDenPDSNRevTunMand_Type()
)
starMIPFAStatRegDenPDSNRevTunMand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNRevTunMand.setStatus("current")
_StarMIPFAStatRegDenHAFAAuth_Type = Counter32
_StarMIPFAStatRegDenHAFAAuth_Object = MibTableColumn
starMIPFAStatRegDenHAFAAuth = _StarMIPFAStatRegDenHAFAAuth_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 55),
    _StarMIPFAStatRegDenHAFAAuth_Type()
)
starMIPFAStatRegDenHAFAAuth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenHAFAAuth.setStatus("current")
_StarMIPFAStatRegDenHABadReq_Type = Counter32
_StarMIPFAStatRegDenHABadReq_Object = MibTableColumn
starMIPFAStatRegDenHABadReq = _StarMIPFAStatRegDenHABadReq_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 56),
    _StarMIPFAStatRegDenHABadReq_Type()
)
starMIPFAStatRegDenHABadReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenHABadReq.setStatus("current")
_StarMIPFAStatRegDenHAMismatchID_Type = Counter32
_StarMIPFAStatRegDenHAMismatchID_Object = MibTableColumn
starMIPFAStatRegDenHAMismatchID = _StarMIPFAStatRegDenHAMismatchID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 57),
    _StarMIPFAStatRegDenHAMismatchID_Type()
)
starMIPFAStatRegDenHAMismatchID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenHAMismatchID.setStatus("current")
_StarMIPFAStatRegDenHASimulBind_Type = Counter32
_StarMIPFAStatRegDenHASimulBind_Object = MibTableColumn
starMIPFAStatRegDenHASimulBind = _StarMIPFAStatRegDenHASimulBind_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 58),
    _StarMIPFAStatRegDenHASimulBind_Type()
)
starMIPFAStatRegDenHASimulBind.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenHASimulBind.setStatus("current")
_StarMIPFAStatRegDenHAUnknownHA_Type = Counter32
_StarMIPFAStatRegDenHAUnknownHA_Object = MibTableColumn
starMIPFAStatRegDenHAUnknownHA = _StarMIPFAStatRegDenHAUnknownHA_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 59),
    _StarMIPFAStatRegDenHAUnknownHA_Type()
)
starMIPFAStatRegDenHAUnknownHA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenHAUnknownHA.setStatus("current")
_StarMIPFAStatRegDenHARevRunUnavail_Type = Counter32
_StarMIPFAStatRegDenHARevRunUnavail_Object = MibTableColumn
starMIPFAStatRegDenHARevRunUnavail = _StarMIPFAStatRegDenHARevRunUnavail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 60),
    _StarMIPFAStatRegDenHARevRunUnavail_Type()
)
starMIPFAStatRegDenHARevRunUnavail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenHARevRunUnavail.setStatus("current")
_StarMIPFAStatRegRplRcvTotal_Type = Counter32
_StarMIPFAStatRegRplRcvTotal_Object = MibTableColumn
starMIPFAStatRegRplRcvTotal = _StarMIPFAStatRegRplRcvTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 61),
    _StarMIPFAStatRegRplRcvTotal_Type()
)
starMIPFAStatRegRplRcvTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplRcvTotal.setStatus("current")
_StarMIPFAStatRegRplRcvTotalRly_Type = Counter32
_StarMIPFAStatRegRplRcvTotalRly_Object = MibTableColumn
starMIPFAStatRegRplRcvTotalRly = _StarMIPFAStatRegRplRcvTotalRly_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 62),
    _StarMIPFAStatRegRplRcvTotalRly_Type()
)
starMIPFAStatRegRplRcvTotalRly.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplRcvTotalRly.setStatus("current")
_StarMIPFAStatRegRplRcvErrors_Type = Counter32
_StarMIPFAStatRegRplRcvErrors_Object = MibTableColumn
starMIPFAStatRegRplRcvErrors = _StarMIPFAStatRegRplRcvErrors_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 63),
    _StarMIPFAStatRegRplRcvErrors_Type()
)
starMIPFAStatRegRplRcvErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplRcvErrors.setStatus("current")
_StarMIPFAStatRegRplRcvInitial_Type = Counter32
_StarMIPFAStatRegRplRcvInitial_Object = MibTableColumn
starMIPFAStatRegRplRcvInitial = _StarMIPFAStatRegRplRcvInitial_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 64),
    _StarMIPFAStatRegRplRcvInitial_Type()
)
starMIPFAStatRegRplRcvInitial.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplRcvInitial.setStatus("current")
_StarMIPFAStatRegRplRcvInitialRly_Type = Counter32
_StarMIPFAStatRegRplRcvInitialRly_Object = MibTableColumn
starMIPFAStatRegRplRcvInitialRly = _StarMIPFAStatRegRplRcvInitialRly_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 65),
    _StarMIPFAStatRegRplRcvInitialRly_Type()
)
starMIPFAStatRegRplRcvInitialRly.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplRcvInitialRly.setStatus("current")
_StarMIPFAStatRegRplRcvRenewal_Type = Counter32
_StarMIPFAStatRegRplRcvRenewal_Object = MibTableColumn
starMIPFAStatRegRplRcvRenewal = _StarMIPFAStatRegRplRcvRenewal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 66),
    _StarMIPFAStatRegRplRcvRenewal_Type()
)
starMIPFAStatRegRplRcvRenewal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplRcvRenewal.setStatus("current")
_StarMIPFAStatRegRplRcvRenewalRly_Type = Counter32
_StarMIPFAStatRegRplRcvRenewalRly_Object = MibTableColumn
starMIPFAStatRegRplRcvRenewalRly = _StarMIPFAStatRegRplRcvRenewalRly_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 67),
    _StarMIPFAStatRegRplRcvRenewalRly_Type()
)
starMIPFAStatRegRplRcvRenewalRly.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplRcvRenewalRly.setStatus("current")
_StarMIPFAStatRegRplRcvDereg_Type = Counter32
_StarMIPFAStatRegRplRcvDereg_Object = MibTableColumn
starMIPFAStatRegRplRcvDereg = _StarMIPFAStatRegRplRcvDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 68),
    _StarMIPFAStatRegRplRcvDereg_Type()
)
starMIPFAStatRegRplRcvDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplRcvDereg.setStatus("current")
_StarMIPFAStatRegRplRcvDeregRly_Type = Counter32
_StarMIPFAStatRegRplRcvDeregRly_Object = MibTableColumn
starMIPFAStatRegRplRcvDeregRly = _StarMIPFAStatRegRplRcvDeregRly_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 69),
    _StarMIPFAStatRegRplRcvDeregRly_Type()
)
starMIPFAStatRegRplRcvDeregRly.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplRcvDeregRly.setStatus("current")
_StarMIPFAStatRegRplSentTotal_Type = Counter32
_StarMIPFAStatRegRplSentTotal_Object = MibTableColumn
starMIPFAStatRegRplSentTotal = _StarMIPFAStatRegRplSentTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 70),
    _StarMIPFAStatRegRplSentTotal_Type()
)
starMIPFAStatRegRplSentTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentTotal.setStatus("current")
_StarMIPFAStatRegRplSentAcceptReg_Type = Counter32
_StarMIPFAStatRegRplSentAcceptReg_Object = MibTableColumn
starMIPFAStatRegRplSentAcceptReg = _StarMIPFAStatRegRplSentAcceptReg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 71),
    _StarMIPFAStatRegRplSentAcceptReg_Type()
)
starMIPFAStatRegRplSentAcceptReg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentAcceptReg.setStatus("current")
_StarMIPFAStatRegRplSentAcceptDereg_Type = Counter32
_StarMIPFAStatRegRplSentAcceptDereg_Object = MibTableColumn
starMIPFAStatRegRplSentAcceptDereg = _StarMIPFAStatRegRplSentAcceptDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 72),
    _StarMIPFAStatRegRplSentAcceptDereg_Type()
)
starMIPFAStatRegRplSentAcceptDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentAcceptDereg.setStatus("current")
_StarMIPFAStatRegRplSentBadReq_Type = Counter32
_StarMIPFAStatRegRplSentBadReq_Object = MibTableColumn
starMIPFAStatRegRplSentBadReq = _StarMIPFAStatRegRplSentBadReq_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 73),
    _StarMIPFAStatRegRplSentBadReq_Type()
)
starMIPFAStatRegRplSentBadReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentBadReq.setStatus("current")
_StarMIPFAStatRegRplSentTooLong_Type = Counter32
_StarMIPFAStatRegRplSentTooLong_Object = MibTableColumn
starMIPFAStatRegRplSentTooLong = _StarMIPFAStatRegRplSentTooLong_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 74),
    _StarMIPFAStatRegRplSentTooLong_Type()
)
starMIPFAStatRegRplSentTooLong.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentTooLong.setStatus("current")
_StarMIPFAStatRegRplSentMnAuthFail_Type = Counter32
_StarMIPFAStatRegRplSentMnAuthFail_Object = MibTableColumn
starMIPFAStatRegRplSentMnAuthFail = _StarMIPFAStatRegRplSentMnAuthFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 75),
    _StarMIPFAStatRegRplSentMnAuthFail_Type()
)
starMIPFAStatRegRplSentMnAuthFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentMnAuthFail.setStatus("current")
_StarMIPFAStatRegRplSentHAAuthFail_Type = Counter32
_StarMIPFAStatRegRplSentHAAuthFail_Object = MibTableColumn
starMIPFAStatRegRplSentHAAuthFail = _StarMIPFAStatRegRplSentHAAuthFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 76),
    _StarMIPFAStatRegRplSentHAAuthFail_Type()
)
starMIPFAStatRegRplSentHAAuthFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentHAAuthFail.setStatus("current")
_StarMIPFAStatRegRplSentAdminProhib_Type = Counter32
_StarMIPFAStatRegRplSentAdminProhib_Object = MibTableColumn
starMIPFAStatRegRplSentAdminProhib = _StarMIPFAStatRegRplSentAdminProhib_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 77),
    _StarMIPFAStatRegRplSentAdminProhib_Type()
)
starMIPFAStatRegRplSentAdminProhib.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentAdminProhib.setStatus("current")
_StarMIPFAStatRegRplSentNoResources_Type = Counter32
_StarMIPFAStatRegRplSentNoResources_Object = MibTableColumn
starMIPFAStatRegRplSentNoResources = _StarMIPFAStatRegRplSentNoResources_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 78),
    _StarMIPFAStatRegRplSentNoResources_Type()
)
starMIPFAStatRegRplSentNoResources.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentNoResources.setStatus("current")
_StarMIPFAStatRegRplSentRevTunUnav_Type = Counter32
_StarMIPFAStatRegRplSentRevTunUnav_Object = MibTableColumn
starMIPFAStatRegRplSentRevTunUnav = _StarMIPFAStatRegRplSentRevTunUnav_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 79),
    _StarMIPFAStatRegRplSentRevTunUnav_Type()
)
starMIPFAStatRegRplSentRevTunUnav.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentRevTunUnav.setStatus("current")
_StarMIPFAStatRegRplSentRevTunMand_Type = Counter32
_StarMIPFAStatRegRplSentRevTunMand_Object = MibTableColumn
starMIPFAStatRegRplSentRevTunMand = _StarMIPFAStatRegRplSentRevTunMand_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 80),
    _StarMIPFAStatRegRplSentRevTunMand_Type()
)
starMIPFAStatRegRplSentRevTunMand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentRevTunMand.setStatus("current")
_StarMIPFAStatRegRplSentSendErrors_Type = Counter32
_StarMIPFAStatRegRplSentSendErrors_Object = MibTableColumn
starMIPFAStatRegRplSentSendErrors = _StarMIPFAStatRegRplSentSendErrors_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 81),
    _StarMIPFAStatRegRplSentSendErrors_Type()
)
starMIPFAStatRegRplSentSendErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentSendErrors.setStatus("current")
_StarMIPFAStatRegDenPDSNBadReply_Type = Counter32
_StarMIPFAStatRegDenPDSNBadReply_Object = MibTableColumn
starMIPFAStatRegDenPDSNBadReply = _StarMIPFAStatRegDenPDSNBadReply_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 82),
    _StarMIPFAStatRegDenPDSNBadReply_Type()
)
starMIPFAStatRegDenPDSNBadReply.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNBadReply.setStatus("current")
_StarMIPFAStatRegDenPDSNMissNAI_Type = Counter32
_StarMIPFAStatRegDenPDSNMissNAI_Object = MibTableColumn
starMIPFAStatRegDenPDSNMissNAI = _StarMIPFAStatRegDenPDSNMissNAI_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 83),
    _StarMIPFAStatRegDenPDSNMissNAI_Type()
)
starMIPFAStatRegDenPDSNMissNAI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNMissNAI.setStatus("current")
_StarMIPFAStatRegDenPDSNMissHomeAgent_Type = Counter32
_StarMIPFAStatRegDenPDSNMissHomeAgent_Object = MibTableColumn
starMIPFAStatRegDenPDSNMissHomeAgent = _StarMIPFAStatRegDenPDSNMissHomeAgent_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 84),
    _StarMIPFAStatRegDenPDSNMissHomeAgent_Type()
)
starMIPFAStatRegDenPDSNMissHomeAgent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNMissHomeAgent.setStatus("current")
_StarMIPFAStatRegDenPDSNMissHomeAddr_Type = Counter32
_StarMIPFAStatRegDenPDSNMissHomeAddr_Object = MibTableColumn
starMIPFAStatRegDenPDSNMissHomeAddr = _StarMIPFAStatRegDenPDSNMissHomeAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 85),
    _StarMIPFAStatRegDenPDSNMissHomeAddr_Type()
)
starMIPFAStatRegDenPDSNMissHomeAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNMissHomeAddr.setStatus("current")
_StarMIPFAStatRegDenPDSNUnknChallenge_Type = Counter32
_StarMIPFAStatRegDenPDSNUnknChallenge_Object = MibTableColumn
starMIPFAStatRegDenPDSNUnknChallenge = _StarMIPFAStatRegDenPDSNUnknChallenge_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 86),
    _StarMIPFAStatRegDenPDSNUnknChallenge_Type()
)
starMIPFAStatRegDenPDSNUnknChallenge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNUnknChallenge.setStatus("current")
_StarMIPFAStatRegDenPDSNMissChallenge_Type = Counter32
_StarMIPFAStatRegDenPDSNMissChallenge_Object = MibTableColumn
starMIPFAStatRegDenPDSNMissChallenge = _StarMIPFAStatRegDenPDSNMissChallenge_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 87),
    _StarMIPFAStatRegDenPDSNMissChallenge_Type()
)
starMIPFAStatRegDenPDSNMissChallenge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNMissChallenge.setStatus("current")
_StarMIPFAStatRegDenPDSNStaleChallenge_Type = Counter32
_StarMIPFAStatRegDenPDSNStaleChallenge_Object = MibTableColumn
starMIPFAStatRegDenPDSNStaleChallenge = _StarMIPFAStatRegDenPDSNStaleChallenge_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 88),
    _StarMIPFAStatRegDenPDSNStaleChallenge_Type()
)
starMIPFAStatRegDenPDSNStaleChallenge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNStaleChallenge.setStatus("current")
_StarMIPFAStatRegDenPDSNMNTooDistant_Type = Counter32
_StarMIPFAStatRegDenPDSNMNTooDistant_Object = MibTableColumn
starMIPFAStatRegDenPDSNMNTooDistant = _StarMIPFAStatRegDenPDSNMNTooDistant_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 89),
    _StarMIPFAStatRegDenPDSNMNTooDistant_Type()
)
starMIPFAStatRegDenPDSNMNTooDistant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNMNTooDistant.setStatus("current")
_StarMIPFAStatRegDenPDSNStyleUnavail_Type = Counter32
_StarMIPFAStatRegDenPDSNStyleUnavail_Object = MibTableColumn
starMIPFAStatRegDenPDSNStyleUnavail = _StarMIPFAStatRegDenPDSNStyleUnavail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 90),
    _StarMIPFAStatRegDenPDSNStyleUnavail_Type()
)
starMIPFAStatRegDenPDSNStyleUnavail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNStyleUnavail.setStatus("current")
_StarMIPFAStatRegDenPDSNHANetUnreach_Type = Counter32
_StarMIPFAStatRegDenPDSNHANetUnreach_Object = MibTableColumn
starMIPFAStatRegDenPDSNHANetUnreach = _StarMIPFAStatRegDenPDSNHANetUnreach_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 91),
    _StarMIPFAStatRegDenPDSNHANetUnreach_Type()
)
starMIPFAStatRegDenPDSNHANetUnreach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNHANetUnreach.setStatus("current")
_StarMIPFAStatRegDenPDSNHAHostUnreach_Type = Counter32
_StarMIPFAStatRegDenPDSNHAHostUnreach_Object = MibTableColumn
starMIPFAStatRegDenPDSNHAHostUnreach = _StarMIPFAStatRegDenPDSNHAHostUnreach_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 92),
    _StarMIPFAStatRegDenPDSNHAHostUnreach_Type()
)
starMIPFAStatRegDenPDSNHAHostUnreach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNHAHostUnreach.setStatus("current")
_StarMIPFAStatRegDenPDSNHAPortUnreach_Type = Counter32
_StarMIPFAStatRegDenPDSNHAPortUnreach_Object = MibTableColumn
starMIPFAStatRegDenPDSNHAPortUnreach = _StarMIPFAStatRegDenPDSNHAPortUnreach_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 93),
    _StarMIPFAStatRegDenPDSNHAPortUnreach_Type()
)
starMIPFAStatRegDenPDSNHAPortUnreach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNHAPortUnreach.setStatus("current")
_StarMIPFAStatRegDenPDSNHAUnreach_Type = Counter32
_StarMIPFAStatRegDenPDSNHAUnreach_Object = MibTableColumn
starMIPFAStatRegDenPDSNHAUnreach = _StarMIPFAStatRegDenPDSNHAUnreach_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 94),
    _StarMIPFAStatRegDenPDSNHAUnreach_Type()
)
starMIPFAStatRegDenPDSNHAUnreach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNHAUnreach.setStatus("current")
_StarMIPFAStatRegDenPDSNInvCOA_Type = Counter32
_StarMIPFAStatRegDenPDSNInvCOA_Object = MibTableColumn
starMIPFAStatRegDenPDSNInvCOA = _StarMIPFAStatRegDenPDSNInvCOA_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 95),
    _StarMIPFAStatRegDenPDSNInvCOA_Type()
)
starMIPFAStatRegDenPDSNInvCOA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegDenPDSNInvCOA.setStatus("current")
_StarMIPFAStatRegReqSentInitTotal_Type = Counter32
_StarMIPFAStatRegReqSentInitTotal_Object = MibTableColumn
starMIPFAStatRegReqSentInitTotal = _StarMIPFAStatRegReqSentInitTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 96),
    _StarMIPFAStatRegReqSentInitTotal_Type()
)
starMIPFAStatRegReqSentInitTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegReqSentInitTotal.setStatus("current")
_StarMIPFAStatRegReqSentInitResend_Type = Counter32
_StarMIPFAStatRegReqSentInitResend_Object = MibTableColumn
starMIPFAStatRegReqSentInitResend = _StarMIPFAStatRegReqSentInitResend_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 97),
    _StarMIPFAStatRegReqSentInitResend_Type()
)
starMIPFAStatRegReqSentInitResend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegReqSentInitResend.setStatus("current")
_StarMIPFAStatRegReqSentRenewTotal_Type = Counter32
_StarMIPFAStatRegReqSentRenewTotal_Object = MibTableColumn
starMIPFAStatRegReqSentRenewTotal = _StarMIPFAStatRegReqSentRenewTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 98),
    _StarMIPFAStatRegReqSentRenewTotal_Type()
)
starMIPFAStatRegReqSentRenewTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegReqSentRenewTotal.setStatus("current")
_StarMIPFAStatRegReqSentRenewResend_Type = Counter32
_StarMIPFAStatRegReqSentRenewResend_Object = MibTableColumn
starMIPFAStatRegReqSentRenewResend = _StarMIPFAStatRegReqSentRenewResend_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 99),
    _StarMIPFAStatRegReqSentRenewResend_Type()
)
starMIPFAStatRegReqSentRenewResend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegReqSentRenewResend.setStatus("current")
_StarMIPFAStatRegReqSentDeregTotal_Type = Counter32
_StarMIPFAStatRegReqSentDeregTotal_Object = MibTableColumn
starMIPFAStatRegReqSentDeregTotal = _StarMIPFAStatRegReqSentDeregTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 100),
    _StarMIPFAStatRegReqSentDeregTotal_Type()
)
starMIPFAStatRegReqSentDeregTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegReqSentDeregTotal.setStatus("current")
_StarMIPFAStatRegReqSentDeregResend_Type = Counter32
_StarMIPFAStatRegReqSentDeregResend_Object = MibTableColumn
starMIPFAStatRegReqSentDeregResend = _StarMIPFAStatRegReqSentDeregResend_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 101),
    _StarMIPFAStatRegReqSentDeregResend_Type()
)
starMIPFAStatRegReqSentDeregResend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegReqSentDeregResend.setStatus("current")
_StarMIPFAStatRegRplSentMNTooDistant_Type = Counter32
_StarMIPFAStatRegRplSentMNTooDistant_Object = MibTableColumn
starMIPFAStatRegRplSentMNTooDistant = _StarMIPFAStatRegRplSentMNTooDistant_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 102),
    _StarMIPFAStatRegRplSentMNTooDistant_Type()
)
starMIPFAStatRegRplSentMNTooDistant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentMNTooDistant.setStatus("current")
_StarMIPFAStatRegRplSentInvCOA_Type = Counter32
_StarMIPFAStatRegRplSentInvCOA_Object = MibTableColumn
starMIPFAStatRegRplSentInvCOA = _StarMIPFAStatRegRplSentInvCOA_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 103),
    _StarMIPFAStatRegRplSentInvCOA_Type()
)
starMIPFAStatRegRplSentInvCOA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentInvCOA.setStatus("current")
_StarMIPFAStatRegRplSentHANetUnreach_Type = Counter32
_StarMIPFAStatRegRplSentHANetUnreach_Object = MibTableColumn
starMIPFAStatRegRplSentHANetUnreach = _StarMIPFAStatRegRplSentHANetUnreach_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 104),
    _StarMIPFAStatRegRplSentHANetUnreach_Type()
)
starMIPFAStatRegRplSentHANetUnreach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentHANetUnreach.setStatus("current")
_StarMIPFAStatRegRplSentHAHostUnreach_Type = Counter32
_StarMIPFAStatRegRplSentHAHostUnreach_Object = MibTableColumn
starMIPFAStatRegRplSentHAHostUnreach = _StarMIPFAStatRegRplSentHAHostUnreach_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 105),
    _StarMIPFAStatRegRplSentHAHostUnreach_Type()
)
starMIPFAStatRegRplSentHAHostUnreach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentHAHostUnreach.setStatus("current")
_StarMIPFAStatRegRplSentHAPortUnreach_Type = Counter32
_StarMIPFAStatRegRplSentHAPortUnreach_Object = MibTableColumn
starMIPFAStatRegRplSentHAPortUnreach = _StarMIPFAStatRegRplSentHAPortUnreach_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 106),
    _StarMIPFAStatRegRplSentHAPortUnreach_Type()
)
starMIPFAStatRegRplSentHAPortUnreach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentHAPortUnreach.setStatus("current")
_StarMIPFAStatRegRplSentHAUnreach_Type = Counter32
_StarMIPFAStatRegRplSentHAUnreach_Object = MibTableColumn
starMIPFAStatRegRplSentHAUnreach = _StarMIPFAStatRegRplSentHAUnreach_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 107),
    _StarMIPFAStatRegRplSentHAUnreach_Type()
)
starMIPFAStatRegRplSentHAUnreach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentHAUnreach.setStatus("current")
_StarMIPFAStatRegRplSentRegTimeout_Type = Counter32
_StarMIPFAStatRegRplSentRegTimeout_Object = MibTableColumn
starMIPFAStatRegRplSentRegTimeout = _StarMIPFAStatRegRplSentRegTimeout_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 108),
    _StarMIPFAStatRegRplSentRegTimeout_Type()
)
starMIPFAStatRegRplSentRegTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentRegTimeout.setStatus("current")
_StarMIPFAStatRegRplSentMissNAI_Type = Counter32
_StarMIPFAStatRegRplSentMissNAI_Object = MibTableColumn
starMIPFAStatRegRplSentMissNAI = _StarMIPFAStatRegRplSentMissNAI_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 109),
    _StarMIPFAStatRegRplSentMissNAI_Type()
)
starMIPFAStatRegRplSentMissNAI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentMissNAI.setStatus("current")
_StarMIPFAStatRegRplSentMissHomeAgent_Type = Counter32
_StarMIPFAStatRegRplSentMissHomeAgent_Object = MibTableColumn
starMIPFAStatRegRplSentMissHomeAgent = _StarMIPFAStatRegRplSentMissHomeAgent_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 110),
    _StarMIPFAStatRegRplSentMissHomeAgent_Type()
)
starMIPFAStatRegRplSentMissHomeAgent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentMissHomeAgent.setStatus("current")
_StarMIPFAStatRegRplSentMissHomeAddr_Type = Counter32
_StarMIPFAStatRegRplSentMissHomeAddr_Object = MibTableColumn
starMIPFAStatRegRplSentMissHomeAddr = _StarMIPFAStatRegRplSentMissHomeAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 111),
    _StarMIPFAStatRegRplSentMissHomeAddr_Type()
)
starMIPFAStatRegRplSentMissHomeAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentMissHomeAddr.setStatus("current")
_StarMIPFAStatRegRplSentUnknChallenge_Type = Counter32
_StarMIPFAStatRegRplSentUnknChallenge_Object = MibTableColumn
starMIPFAStatRegRplSentUnknChallenge = _StarMIPFAStatRegRplSentUnknChallenge_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 112),
    _StarMIPFAStatRegRplSentUnknChallenge_Type()
)
starMIPFAStatRegRplSentUnknChallenge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentUnknChallenge.setStatus("current")
_StarMIPFAStatRegRplSentMissChallenge_Type = Counter32
_StarMIPFAStatRegRplSentMissChallenge_Object = MibTableColumn
starMIPFAStatRegRplSentMissChallenge = _StarMIPFAStatRegRplSentMissChallenge_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 113),
    _StarMIPFAStatRegRplSentMissChallenge_Type()
)
starMIPFAStatRegRplSentMissChallenge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentMissChallenge.setStatus("current")
_StarMIPFAStatRegRplSentStaleChallenge_Type = Counter32
_StarMIPFAStatRegRplSentStaleChallenge_Object = MibTableColumn
starMIPFAStatRegRplSentStaleChallenge = _StarMIPFAStatRegRplSentStaleChallenge_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 114),
    _StarMIPFAStatRegRplSentStaleChallenge_Type()
)
starMIPFAStatRegRplSentStaleChallenge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentStaleChallenge.setStatus("current")
_StarMIPFAStatRegRplSentBadReply_Type = Counter32
_StarMIPFAStatRegRplSentBadReply_Object = MibTableColumn
starMIPFAStatRegRplSentBadReply = _StarMIPFAStatRegRplSentBadReply_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 23, 1, 1, 115),
    _StarMIPFAStatRegRplSentBadReply_Type()
)
starMIPFAStatRegRplSentBadReply.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMIPFAStatRegRplSentBadReply.setStatus("current")
_StarentRP_ObjectIdentity = ObjectIdentity
starentRP = _StarentRP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24)
)
_StarRPStatTable_Object = MibTable
starRPStatTable = _StarRPStatTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1)
)
if mibBuilder.loadTexts:
    starRPStatTable.setStatus("current")
_StarRPStatEntry_Object = MibTableRow
starRPStatEntry = _StarRPStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1)
)
starRPStatEntry.setIndexNames(
    (1, "STARENT-MIB", "starRPStatSvcID"),
)
if mibBuilder.loadTexts:
    starRPStatEntry.setStatus("current")
_StarRPStatVpnID_Type = Gauge32
_StarRPStatVpnID_Object = MibTableColumn
starRPStatVpnID = _StarRPStatVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 1),
    _StarRPStatVpnID_Type()
)
starRPStatVpnID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPStatVpnID.setStatus("current")
_StarRPStatSvcID_Type = StarShortID
_StarRPStatSvcID_Object = MibTableColumn
starRPStatSvcID = _StarRPStatSvcID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 2),
    _StarRPStatSvcID_Type()
)
starRPStatSvcID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starRPStatSvcID.setStatus("current")
_StarRPStatVpnName_Type = DisplayString
_StarRPStatVpnName_Object = MibTableColumn
starRPStatVpnName = _StarRPStatVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 3),
    _StarRPStatVpnName_Type()
)
starRPStatVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPStatVpnName.setStatus("current")
_StarRPStatServName_Type = DisplayString
_StarRPStatServName_Object = MibTableColumn
starRPStatServName = _StarRPStatServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 4),
    _StarRPStatServName_Type()
)
starRPStatServName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPStatServName.setStatus("current")
_StarRPRegRecvTotal_Type = Counter32
_StarRPRegRecvTotal_Object = MibTableColumn
starRPRegRecvTotal = _StarRPRegRecvTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 5),
    _StarRPRegRecvTotal_Type()
)
starRPRegRecvTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegRecvTotal.setStatus("current")
_StarRPRegAcceptTotal_Type = Counter32
_StarRPRegAcceptTotal_Object = MibTableColumn
starRPRegAcceptTotal = _StarRPRegAcceptTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 6),
    _StarRPRegAcceptTotal_Type()
)
starRPRegAcceptTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegAcceptTotal.setStatus("current")
_StarRPRegDeniedTotal_Type = Counter32
_StarRPRegDeniedTotal_Object = MibTableColumn
starRPRegDeniedTotal = _StarRPRegDeniedTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 7),
    _StarRPRegDeniedTotal_Type()
)
starRPRegDeniedTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegDeniedTotal.setStatus("current")
_StarRPRegDiscardTotal_Type = Counter32
_StarRPRegDiscardTotal_Object = MibTableColumn
starRPRegDiscardTotal = _StarRPRegDiscardTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 8),
    _StarRPRegDiscardTotal_Type()
)
starRPRegDiscardTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegDiscardTotal.setStatus("current")
_StarRPRegAcceptInitial_Type = Counter32
_StarRPRegAcceptInitial_Object = MibTableColumn
starRPRegAcceptInitial = _StarRPRegAcceptInitial_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 9),
    _StarRPRegAcceptInitial_Type()
)
starRPRegAcceptInitial.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegAcceptInitial.setStatus("current")
_StarRPRegAcceptIntraPDSN_Type = Counter32
_StarRPRegAcceptIntraPDSN_Object = MibTableColumn
starRPRegAcceptIntraPDSN = _StarRPRegAcceptIntraPDSN_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 10),
    _StarRPRegAcceptIntraPDSN_Type()
)
starRPRegAcceptIntraPDSN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegAcceptIntraPDSN.setStatus("obsolete")
_StarRPRegAcceptInterPDSN_Type = Counter32
_StarRPRegAcceptInterPDSN_Object = MibTableColumn
starRPRegAcceptInterPDSN = _StarRPRegAcceptInterPDSN_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 11),
    _StarRPRegAcceptInterPDSN_Type()
)
starRPRegAcceptInterPDSN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegAcceptInterPDSN.setStatus("current")
_StarRPRegDeniedInitial_Type = Counter32
_StarRPRegDeniedInitial_Object = MibTableColumn
starRPRegDeniedInitial = _StarRPRegDeniedInitial_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 12),
    _StarRPRegDeniedInitial_Type()
)
starRPRegDeniedInitial.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegDeniedInitial.setStatus("current")
_StarRPRegAcceptRenew_Type = Counter32
_StarRPRegAcceptRenew_Object = MibTableColumn
starRPRegAcceptRenew = _StarRPRegAcceptRenew_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 13),
    _StarRPRegAcceptRenew_Type()
)
starRPRegAcceptRenew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegAcceptRenew.setStatus("current")
_StarRPRegDeniedRenew_Type = Counter32
_StarRPRegDeniedRenew_Object = MibTableColumn
starRPRegDeniedRenew = _StarRPRegDeniedRenew_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 14),
    _StarRPRegDeniedRenew_Type()
)
starRPRegDeniedRenew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegDeniedRenew.setStatus("current")
_StarRPRegAcceptDereg_Type = Counter32
_StarRPRegAcceptDereg_Object = MibTableColumn
starRPRegAcceptDereg = _StarRPRegAcceptDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 15),
    _StarRPRegAcceptDereg_Type()
)
starRPRegAcceptDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegAcceptDereg.setStatus("current")
_StarRPRegDeniedDereg_Type = Counter32
_StarRPRegDeniedDereg_Object = MibTableColumn
starRPRegDeniedDereg = _StarRPRegDeniedDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 16),
    _StarRPRegDeniedDereg_Type()
)
starRPRegDeniedDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegDeniedDereg.setStatus("current")
_StarRPRegSendError_Type = Counter32
_StarRPRegSendError_Object = MibTableColumn
starRPRegSendError = _StarRPRegSendError_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 17),
    _StarRPRegSendError_Type()
)
starRPRegSendError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegSendError.setStatus("current")
_StarRPRegHashError_Type = Counter32
_StarRPRegHashError_Object = MibTableColumn
starRPRegHashError = _StarRPRegHashError_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 18),
    _StarRPRegHashError_Type()
)
starRPRegHashError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegHashError.setStatus("current")
_StarRPRegDecodeError_Type = Counter32
_StarRPRegDecodeError_Object = MibTableColumn
starRPRegDecodeError = _StarRPRegDecodeError_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 19),
    _StarRPRegDecodeError_Type()
)
starRPRegDecodeError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegDecodeError.setStatus("current")
_StarRPRegUnhandled_Type = Counter32
_StarRPRegUnhandled_Object = MibTableColumn
starRPRegUnhandled = _StarRPRegUnhandled_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 20),
    _StarRPRegUnhandled_Type()
)
starRPRegUnhandled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegUnhandled.setStatus("current")
_StarRPRegAirlinkSeqError_Type = Counter32
_StarRPRegAirlinkSeqError_Object = MibTableColumn
starRPRegAirlinkSeqError = _StarRPRegAirlinkSeqError_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 21),
    _StarRPRegAirlinkSeqError_Type()
)
starRPRegAirlinkSeqError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegAirlinkSeqError.setStatus("current")
_StarRPRegDenyUnspec_Type = Counter32
_StarRPRegDenyUnspec_Object = MibTableColumn
starRPRegDenyUnspec = _StarRPRegDenyUnspec_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 22),
    _StarRPRegDenyUnspec_Type()
)
starRPRegDenyUnspec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegDenyUnspec.setStatus("current")
_StarRPRegDenyAdminProhib_Type = Counter32
_StarRPRegDenyAdminProhib_Object = MibTableColumn
starRPRegDenyAdminProhib = _StarRPRegDenyAdminProhib_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 23),
    _StarRPRegDenyAdminProhib_Type()
)
starRPRegDenyAdminProhib.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegDenyAdminProhib.setStatus("current")
_StarRPRegDenyNoResource_Type = Counter32
_StarRPRegDenyNoResource_Object = MibTableColumn
starRPRegDenyNoResource = _StarRPRegDenyNoResource_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 24),
    _StarRPRegDenyNoResource_Type()
)
starRPRegDenyNoResource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegDenyNoResource.setStatus("current")
_StarRPRegDenyAuth_Type = Counter32
_StarRPRegDenyAuth_Object = MibTableColumn
starRPRegDenyAuth = _StarRPRegDenyAuth_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 25),
    _StarRPRegDenyAuth_Type()
)
starRPRegDenyAuth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegDenyAuth.setStatus("current")
_StarRPRegDenyMismatchID_Type = Counter32
_StarRPRegDenyMismatchID_Object = MibTableColumn
starRPRegDenyMismatchID = _StarRPRegDenyMismatchID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 26),
    _StarRPRegDenyMismatchID_Type()
)
starRPRegDenyMismatchID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegDenyMismatchID.setStatus("current")
_StarRPRegDenyBadRequest_Type = Counter32
_StarRPRegDenyBadRequest_Object = MibTableColumn
starRPRegDenyBadRequest = _StarRPRegDenyBadRequest_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 27),
    _StarRPRegDenyBadRequest_Type()
)
starRPRegDenyBadRequest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegDenyBadRequest.setStatus("current")
_StarRPRegDenyUnknownPDSN_Type = Counter32
_StarRPRegDenyUnknownPDSN_Object = MibTableColumn
starRPRegDenyUnknownPDSN = _StarRPRegDenyUnknownPDSN_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 28),
    _StarRPRegDenyUnknownPDSN_Type()
)
starRPRegDenyUnknownPDSN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegDenyUnknownPDSN.setStatus("current")
_StarRPRegDenyRevTunUnav_Type = Counter32
_StarRPRegDenyRevTunUnav_Object = MibTableColumn
starRPRegDenyRevTunUnav = _StarRPRegDenyRevTunUnav_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 29),
    _StarRPRegDenyRevTunUnav_Type()
)
starRPRegDenyRevTunUnav.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegDenyRevTunUnav.setStatus("current")
_StarRPRegDenyRevTunReq_Type = Counter32
_StarRPRegDenyRevTunReq_Object = MibTableColumn
starRPRegDenyRevTunReq = _StarRPRegDenyRevTunReq_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 30),
    _StarRPRegDenyRevTunReq_Type()
)
starRPRegDenyRevTunReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegDenyRevTunReq.setStatus("current")
_StarRPRegDenyUnrecogVend_Type = Counter32
_StarRPRegDenyUnrecogVend_Object = MibTableColumn
starRPRegDenyUnrecogVend = _StarRPRegDenyUnrecogVend_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 31),
    _StarRPRegDenyUnrecogVend_Type()
)
starRPRegDenyUnrecogVend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegDenyUnrecogVend.setStatus("current")
_StarRPRegUpdTotal_Type = Counter32
_StarRPRegUpdTotal_Object = MibTableColumn
starRPRegUpdTotal = _StarRPRegUpdTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 32),
    _StarRPRegUpdTotal_Type()
)
starRPRegUpdTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegUpdTotal.setStatus("current")
_StarRPRegUpdAccept_Type = Counter32
_StarRPRegUpdAccept_Object = MibTableColumn
starRPRegUpdAccept = _StarRPRegUpdAccept_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 33),
    _StarRPRegUpdAccept_Type()
)
starRPRegUpdAccept.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegUpdAccept.setStatus("current")
_StarRPRegUpdDenied_Type = Counter32
_StarRPRegUpdDenied_Object = MibTableColumn
starRPRegUpdDenied = _StarRPRegUpdDenied_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 34),
    _StarRPRegUpdDenied_Type()
)
starRPRegUpdDenied.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegUpdDenied.setStatus("current")
_StarRPRegUpdUnack_Type = Counter32
_StarRPRegUpdUnack_Object = MibTableColumn
starRPRegUpdUnack = _StarRPRegUpdUnack_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 35),
    _StarRPRegUpdUnack_Type()
)
starRPRegUpdUnack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegUpdUnack.setStatus("current")
_StarRPRegUpdTrans_Type = Counter32
_StarRPRegUpdTrans_Object = MibTableColumn
starRPRegUpdTrans = _StarRPRegUpdTrans_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 36),
    _StarRPRegUpdTrans_Type()
)
starRPRegUpdTrans.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegUpdTrans.setStatus("current")
_StarRPRegUpdRetrans_Type = Counter32
_StarRPRegUpdRetrans_Object = MibTableColumn
starRPRegUpdRetrans = _StarRPRegUpdRetrans_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 37),
    _StarRPRegUpdRetrans_Type()
)
starRPRegUpdRetrans.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegUpdRetrans.setStatus("current")
_StarRPRegUpdReceived_Type = Counter32
_StarRPRegUpdReceived_Object = MibTableColumn
starRPRegUpdReceived = _StarRPRegUpdReceived_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 38),
    _StarRPRegUpdReceived_Type()
)
starRPRegUpdReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegUpdReceived.setStatus("current")
_StarRPRegUpdDiscard_Type = Counter32
_StarRPRegUpdDiscard_Object = MibTableColumn
starRPRegUpdDiscard = _StarRPRegUpdDiscard_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 39),
    _StarRPRegUpdDiscard_Type()
)
starRPRegUpdDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegUpdDiscard.setStatus("current")
_StarRPRegUpdSendError_Type = Counter32
_StarRPRegUpdSendError_Object = MibTableColumn
starRPRegUpdSendError = _StarRPRegUpdSendError_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 40),
    _StarRPRegUpdSendError_Type()
)
starRPRegUpdSendError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegUpdSendError.setStatus("current")
_StarRPRegUpdUplyrInit_Type = Counter32
_StarRPRegUpdUplyrInit_Object = MibTableColumn
starRPRegUpdUplyrInit = _StarRPRegUpdUplyrInit_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 41),
    _StarRPRegUpdUplyrInit_Type()
)
starRPRegUpdUplyrInit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegUpdUplyrInit.setStatus("current")
_StarRPRegUpdOther_Type = Counter32
_StarRPRegUpdOther_Object = MibTableColumn
starRPRegUpdOther = _StarRPRegUpdOther_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 42),
    _StarRPRegUpdOther_Type()
)
starRPRegUpdOther.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegUpdOther.setStatus("current")
_StarRPRegUpdHandoff_Type = Counter32
_StarRPRegUpdHandoff_Object = MibTableColumn
starRPRegUpdHandoff = _StarRPRegUpdHandoff_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 43),
    _StarRPRegUpdHandoff_Type()
)
starRPRegUpdHandoff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegUpdHandoff.setStatus("current")
_StarRPRegUpdDenyUnspec_Type = Counter32
_StarRPRegUpdDenyUnspec_Object = MibTableColumn
starRPRegUpdDenyUnspec = _StarRPRegUpdDenyUnspec_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 44),
    _StarRPRegUpdDenyUnspec_Type()
)
starRPRegUpdDenyUnspec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegUpdDenyUnspec.setStatus("current")
_StarRPRegUpdDenyAdminProhib_Type = Counter32
_StarRPRegUpdDenyAdminProhib_Object = MibTableColumn
starRPRegUpdDenyAdminProhib = _StarRPRegUpdDenyAdminProhib_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 45),
    _StarRPRegUpdDenyAdminProhib_Type()
)
starRPRegUpdDenyAdminProhib.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegUpdDenyAdminProhib.setStatus("current")
_StarRPRegUpdDenyAuth_Type = Counter32
_StarRPRegUpdDenyAuth_Object = MibTableColumn
starRPRegUpdDenyAuth = _StarRPRegUpdDenyAuth_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 46),
    _StarRPRegUpdDenyAuth_Type()
)
starRPRegUpdDenyAuth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegUpdDenyAuth.setStatus("current")
_StarRPRegUpdDenyMismatchID_Type = Counter32
_StarRPRegUpdDenyMismatchID_Object = MibTableColumn
starRPRegUpdDenyMismatchID = _StarRPRegUpdDenyMismatchID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 47),
    _StarRPRegUpdDenyMismatchID_Type()
)
starRPRegUpdDenyMismatchID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegUpdDenyMismatchID.setStatus("current")
_StarRPRegUpdDenyBadRequest_Type = Counter32
_StarRPRegUpdDenyBadRequest_Object = MibTableColumn
starRPRegUpdDenyBadRequest = _StarRPRegUpdDenyBadRequest_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 48),
    _StarRPRegUpdDenyBadRequest_Type()
)
starRPRegUpdDenyBadRequest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegUpdDenyBadRequest.setStatus("current")
_StarRPSecViolations_Type = Counter32
_StarRPSecViolations_Object = MibTableColumn
starRPSecViolations = _StarRPSecViolations_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 49),
    _StarRPSecViolations_Type()
)
starRPSecViolations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPSecViolations.setStatus("current")
_StarRPSecBadAuth_Type = Counter32
_StarRPSecBadAuth_Object = MibTableColumn
starRPSecBadAuth = _StarRPSecBadAuth_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 50),
    _StarRPSecBadAuth_Type()
)
starRPSecBadAuth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPSecBadAuth.setStatus("current")
_StarRPSecBadID_Type = Counter32
_StarRPSecBadID_Object = MibTableColumn
starRPSecBadID = _StarRPSecBadID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 51),
    _StarRPSecBadID_Type()
)
starRPSecBadID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPSecBadID.setStatus("current")
_StarRPSecBadSpi_Type = Counter32
_StarRPSecBadSpi_Object = MibTableColumn
starRPSecBadSpi = _StarRPSecBadSpi_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 52),
    _StarRPSecBadSpi_Type()
)
starRPSecBadSpi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPSecBadSpi.setStatus("current")
_StarRPSecMissingMnHAAuth_Type = Counter32
_StarRPSecMissingMnHAAuth_Object = MibTableColumn
starRPSecMissingMnHAAuth = _StarRPSecMissingMnHAAuth_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 53),
    _StarRPSecMissingMnHAAuth_Type()
)
starRPSecMissingMnHAAuth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPSecMissingMnHAAuth.setStatus("current")
_StarRPSecMissingRegUpdate_Type = Counter32
_StarRPSecMissingRegUpdate_Object = MibTableColumn
starRPSecMissingRegUpdate = _StarRPSecMissingRegUpdate_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 54),
    _StarRPSecMissingRegUpdate_Type()
)
starRPSecMissingRegUpdate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPSecMissingRegUpdate.setStatus("current")
_StarRPRegRecvInitial_Type = Counter32
_StarRPRegRecvInitial_Object = MibTableColumn
starRPRegRecvInitial = _StarRPRegRecvInitial_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 55),
    _StarRPRegRecvInitial_Type()
)
starRPRegRecvInitial.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegRecvInitial.setStatus("current")
_StarRPRegAcceptActvStartIntraPDSN_Type = Counter32
_StarRPRegAcceptActvStartIntraPDSN_Object = MibTableColumn
starRPRegAcceptActvStartIntraPDSN = _StarRPRegAcceptActvStartIntraPDSN_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 56),
    _StarRPRegAcceptActvStartIntraPDSN_Type()
)
starRPRegAcceptActvStartIntraPDSN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegAcceptActvStartIntraPDSN.setStatus("current")
_StarRPRegAcceptActvStopIntraPDSN_Type = Counter32
_StarRPRegAcceptActvStopIntraPDSN_Object = MibTableColumn
starRPRegAcceptActvStopIntraPDSN = _StarRPRegAcceptActvStopIntraPDSN_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 57),
    _StarRPRegAcceptActvStopIntraPDSN_Type()
)
starRPRegAcceptActvStopIntraPDSN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegAcceptActvStopIntraPDSN.setStatus("current")
_StarRPRegRecvRenew_Type = Counter32
_StarRPRegRecvRenew_Object = MibTableColumn
starRPRegRecvRenew = _StarRPRegRecvRenew_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 58),
    _StarRPRegRecvRenew_Type()
)
starRPRegRecvRenew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegRecvRenew.setStatus("current")
_StarRPRegActvStartRenew_Type = Counter32
_StarRPRegActvStartRenew_Object = MibTableColumn
starRPRegActvStartRenew = _StarRPRegActvStartRenew_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 59),
    _StarRPRegActvStartRenew_Type()
)
starRPRegActvStartRenew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegActvStartRenew.setStatus("current")
_StarRPRegActvStopRenew_Type = Counter32
_StarRPRegActvStopRenew_Object = MibTableColumn
starRPRegActvStopRenew = _StarRPRegActvStopRenew_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 60),
    _StarRPRegActvStopRenew_Type()
)
starRPRegActvStopRenew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegActvStopRenew.setStatus("current")
_StarRPRegRecvDereg_Type = Counter32
_StarRPRegRecvDereg_Object = MibTableColumn
starRPRegRecvDereg = _StarRPRegRecvDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 61),
    _StarRPRegRecvDereg_Type()
)
starRPRegRecvDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegRecvDereg.setStatus("current")
_StarRPRegAcceptActvStopDereg_Type = Counter32
_StarRPRegAcceptActvStopDereg_Object = MibTableColumn
starRPRegAcceptActvStopDereg = _StarRPRegAcceptActvStopDereg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 62),
    _StarRPRegAcceptActvStopDereg_Type()
)
starRPRegAcceptActvStopDereg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPRegAcceptActvStopDereg.setStatus("current")
_StarRPDiscSessAbsent_Type = Counter32
_StarRPDiscSessAbsent_Object = MibTableColumn
starRPDiscSessAbsent = _StarRPDiscSessAbsent_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 63),
    _StarRPDiscSessAbsent_Type()
)
starRPDiscSessAbsent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPDiscSessAbsent.setStatus("current")
_StarRPDiscNoMemory_Type = Counter32
_StarRPDiscNoMemory_Object = MibTableColumn
starRPDiscNoMemory = _StarRPDiscNoMemory_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 64),
    _StarRPDiscNoMemory_Type()
)
starRPDiscNoMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPDiscNoMemory.setStatus("current")
_StarRPDiscMalformed_Type = Counter32
_StarRPDiscMalformed_Object = MibTableColumn
starRPDiscMalformed = _StarRPDiscMalformed_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 65),
    _StarRPDiscMalformed_Type()
)
starRPDiscMalformed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPDiscMalformed.setStatus("current")
_StarRPDiscAuthFail_Type = Counter32
_StarRPDiscAuthFail_Object = MibTableColumn
starRPDiscAuthFail = _StarRPDiscAuthFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 66),
    _StarRPDiscAuthFail_Type()
)
starRPDiscAuthFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPDiscAuthFail.setStatus("current")
_StarRPDiscInternalBounce_Type = Counter32
_StarRPDiscInternalBounce_Object = MibTableColumn
starRPDiscInternalBounce = _StarRPDiscInternalBounce_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 67),
    _StarRPDiscInternalBounce_Type()
)
starRPDiscInternalBounce.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPDiscInternalBounce.setStatus("current")
_StarRPDiscInpuQueueExceeded_Type = Counter32
_StarRPDiscInpuQueueExceeded_Object = MibTableColumn
starRPDiscInpuQueueExceeded = _StarRPDiscInpuQueueExceeded_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 68),
    _StarRPDiscInpuQueueExceeded_Type()
)
starRPDiscInpuQueueExceeded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPDiscInpuQueueExceeded.setStatus("current")
_StarRPDiscMismatchedId_Type = Counter32
_StarRPDiscMismatchedId_Object = MibTableColumn
starRPDiscMismatchedId = _StarRPDiscMismatchedId_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 69),
    _StarRPDiscMismatchedId_Type()
)
starRPDiscMismatchedId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPDiscMismatchedId.setStatus("current")
_StarRPDiscInvPacketLen_Type = Counter32
_StarRPDiscInvPacketLen_Object = MibTableColumn
starRPDiscInvPacketLen = _StarRPDiscInvPacketLen_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 70),
    _StarRPDiscInvPacketLen_Type()
)
starRPDiscInvPacketLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPDiscInvPacketLen.setStatus("current")
_StarRPDiscMisc_Type = Counter32
_StarRPDiscMisc_Object = MibTableColumn
starRPDiscMisc = _StarRPDiscMisc_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 71),
    _StarRPDiscMisc_Type()
)
starRPDiscMisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPDiscMisc.setStatus("current")
_StarRP1xTxBytes_Type = Counter32
_StarRP1xTxBytes_Object = MibTableColumn
starRP1xTxBytes = _StarRP1xTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 72),
    _StarRP1xTxBytes_Type()
)
starRP1xTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRP1xTxBytes.setStatus("current")
if mibBuilder.loadTexts:
    starRP1xTxBytes.setUnits("Megabytes")
_StarRP1xRxBytes_Type = Counter32
_StarRP1xRxBytes_Object = MibTableColumn
starRP1xRxBytes = _StarRP1xRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 73),
    _StarRP1xRxBytes_Type()
)
starRP1xRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRP1xRxBytes.setStatus("current")
if mibBuilder.loadTexts:
    starRP1xRxBytes.setUnits("Megabytes")
_StarRP1xTxPackets_Type = Counter32
_StarRP1xTxPackets_Object = MibTableColumn
starRP1xTxPackets = _StarRP1xTxPackets_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 74),
    _StarRP1xTxPackets_Type()
)
starRP1xTxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRP1xTxPackets.setStatus("current")
if mibBuilder.loadTexts:
    starRP1xTxPackets.setUnits("Thousands")
_StarRP1xRxPackets_Type = Counter32
_StarRP1xRxPackets_Object = MibTableColumn
starRP1xRxPackets = _StarRP1xRxPackets_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 75),
    _StarRP1xRxPackets_Type()
)
starRP1xRxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRP1xRxPackets.setStatus("current")
if mibBuilder.loadTexts:
    starRP1xRxPackets.setUnits("Thousands")
_StarRPDoTxBytes_Type = Counter32
_StarRPDoTxBytes_Object = MibTableColumn
starRPDoTxBytes = _StarRPDoTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 76),
    _StarRPDoTxBytes_Type()
)
starRPDoTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPDoTxBytes.setStatus("current")
if mibBuilder.loadTexts:
    starRPDoTxBytes.setUnits("Megabytes")
_StarRPDoRxBytes_Type = Counter32
_StarRPDoRxBytes_Object = MibTableColumn
starRPDoRxBytes = _StarRPDoRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 77),
    _StarRPDoRxBytes_Type()
)
starRPDoRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPDoRxBytes.setStatus("current")
if mibBuilder.loadTexts:
    starRPDoRxBytes.setUnits("Megabytes")
_StarRPDoTxPackets_Type = Counter32
_StarRPDoTxPackets_Object = MibTableColumn
starRPDoTxPackets = _StarRPDoTxPackets_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 78),
    _StarRPDoTxPackets_Type()
)
starRPDoTxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPDoTxPackets.setStatus("current")
if mibBuilder.loadTexts:
    starRPDoTxPackets.setUnits("Thousands")
_StarRPDoRxPackets_Type = Counter32
_StarRPDoRxPackets_Object = MibTableColumn
starRPDoRxPackets = _StarRPDoRxPackets_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 24, 1, 1, 79),
    _StarRPDoRxPackets_Type()
)
starRPDoRxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPDoRxPackets.setStatus("current")
if mibBuilder.loadTexts:
    starRPDoRxPackets.setUnits("Thousands")
_StarentSubscriber_ObjectIdentity = ObjectIdentity
starentSubscriber = _StarentSubscriber_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 26)
)
_StarSubTable_Object = MibTable
starSubTable = _StarSubTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 26, 1)
)
if mibBuilder.loadTexts:
    starSubTable.setStatus("current")
_StarSubEntry_Object = MibTableRow
starSubEntry = _StarSubEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 26, 1, 1)
)
starSubEntry.setIndexNames(
    (0, "STARENT-MIB", "starSubMSID"),
    (0, "STARENT-MIB", "starSubName"),
)
if mibBuilder.loadTexts:
    starSubEntry.setStatus("current")
_StarSubContext_Type = DisplayString
_StarSubContext_Object = MibTableColumn
starSubContext = _StarSubContext_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 26, 1, 1, 1),
    _StarSubContext_Type()
)
starSubContext.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSubContext.setStatus("current")


class _StarSubMSID_Type(OctetString):
    """Custom type starSubMSID based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_StarSubMSID_Type.__name__ = "OctetString"
_StarSubMSID_Object = MibTableColumn
starSubMSID = _StarSubMSID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 26, 1, 1, 2),
    _StarSubMSID_Type()
)
starSubMSID.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSubMSID.setStatus("current")


class _StarSubName_Type(OctetString):
    """Custom type starSubName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_StarSubName_Type.__name__ = "OctetString"
_StarSubName_Object = MibTableColumn
starSubName = _StarSubName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 26, 1, 1, 3),
    _StarSubName_Type()
)
starSubName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSubName.setStatus("current")
_StarSubTimerDuration_Type = Unsigned32
_StarSubTimerDuration_Object = MibTableColumn
starSubTimerDuration = _StarSubTimerDuration_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 26, 1, 1, 4),
    _StarSubTimerDuration_Type()
)
starSubTimerDuration.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSubTimerDuration.setStatus("current")
_StarSubLongDurTimeoutAction_Type = StarLongDurTimeoutAction
_StarSubLongDurTimeoutAction_Object = MibTableColumn
starSubLongDurTimeoutAction = _StarSubLongDurTimeoutAction_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 26, 1, 1, 5),
    _StarSubLongDurTimeoutAction_Type()
)
starSubLongDurTimeoutAction.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSubLongDurTimeoutAction.setStatus("current")
_StarSubSetupTime_Type = DateAndTime
_StarSubSetupTime_Object = MibTableColumn
starSubSetupTime = _StarSubSetupTime_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 26, 1, 1, 6),
    _StarSubSetupTime_Type()
)
starSubSetupTime.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSubSetupTime.setStatus("current")
_StarSubHomeAddr_Type = IpAddress
_StarSubHomeAddr_Object = MibTableColumn
starSubHomeAddr = _StarSubHomeAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 26, 1, 1, 7),
    _StarSubHomeAddr_Type()
)
starSubHomeAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSubHomeAddr.setStatus("current")
_StarSubHomeAddrv6_Type = Ipv6Address
_StarSubHomeAddrv6_Object = MibTableColumn
starSubHomeAddrv6 = _StarSubHomeAddrv6_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 26, 1, 1, 8),
    _StarSubHomeAddrv6_Type()
)
starSubHomeAddrv6.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSubHomeAddrv6.setStatus("current")
_StarentEISServer_ObjectIdentity = ObjectIdentity
starentEISServer = _StarentEISServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 27)
)
_StarEISServerTable_Object = MibTable
starEISServerTable = _StarEISServerTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 27, 1)
)
if mibBuilder.loadTexts:
    starEISServerTable.setStatus("current")
_StarEISServerEntry_Object = MibTableRow
starEISServerEntry = _StarEISServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 27, 1, 1)
)
starEISServerEntry.setIndexNames(
    (0, "STARENT-MIB", "starEISServerVPNID"),
    (0, "STARENT-MIB", "starEISServerAddr"),
)
if mibBuilder.loadTexts:
    starEISServerEntry.setStatus("current")
_StarEISServerVPNID_Type = Gauge32
_StarEISServerVPNID_Object = MibTableColumn
starEISServerVPNID = _StarEISServerVPNID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 27, 1, 1, 1),
    _StarEISServerVPNID_Type()
)
starEISServerVPNID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starEISServerVPNID.setStatus("current")
_StarEISServerAddr_Type = IpAddress
_StarEISServerAddr_Object = MibTableColumn
starEISServerAddr = _StarEISServerAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 27, 1, 1, 2),
    _StarEISServerAddr_Type()
)
starEISServerAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starEISServerAddr.setStatus("current")
_StarEISServerVPNName_Type = DisplayString
_StarEISServerVPNName_Object = MibTableColumn
starEISServerVPNName = _StarEISServerVPNName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 27, 1, 1, 3),
    _StarEISServerVPNName_Type()
)
starEISServerVPNName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starEISServerVPNName.setStatus("current")
_StarentThresholds_ObjectIdentity = ObjectIdentity
starentThresholds = _StarentThresholds_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 28)
)


class _StarThreshMeasuredPct_Type(Gauge32):
    """Custom type starThreshMeasuredPct based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_StarThreshMeasuredPct_Type.__name__ = "Gauge32"
_StarThreshMeasuredPct_Object = MibScalar
starThreshMeasuredPct = _StarThreshMeasuredPct_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 28, 1),
    _StarThreshMeasuredPct_Type()
)
starThreshMeasuredPct.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starThreshMeasuredPct.setStatus("current")
if mibBuilder.loadTexts:
    starThreshMeasuredPct.setUnits("Percent")


class _StarThreshPct_Type(Integer32):
    """Custom type starThreshPct based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_StarThreshPct_Type.__name__ = "Integer32"
_StarThreshPct_Object = MibScalar
starThreshPct = _StarThreshPct_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 28, 2),
    _StarThreshPct_Type()
)
starThreshPct.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starThreshPct.setStatus("current")
if mibBuilder.loadTexts:
    starThreshPct.setUnits("Percent")
_StarThreshMeasuredInt_Type = Gauge32
_StarThreshMeasuredInt_Object = MibScalar
starThreshMeasuredInt = _StarThreshMeasuredInt_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 28, 3),
    _StarThreshMeasuredInt_Type()
)
starThreshMeasuredInt.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starThreshMeasuredInt.setStatus("current")
_StarThreshInt_Type = Unsigned32
_StarThreshInt_Object = MibScalar
starThreshInt = _StarThreshInt_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 28, 4),
    _StarThreshInt_Type()
)
starThreshInt.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starThreshInt.setStatus("current")
_StarThreshMeasuredMB_Type = Gauge32
_StarThreshMeasuredMB_Object = MibScalar
starThreshMeasuredMB = _StarThreshMeasuredMB_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 28, 5),
    _StarThreshMeasuredMB_Type()
)
starThreshMeasuredMB.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starThreshMeasuredMB.setStatus("current")
if mibBuilder.loadTexts:
    starThreshMeasuredMB.setUnits("Megabytes")
_StarThreshMB_Type = Unsigned32
_StarThreshMB_Object = MibScalar
starThreshMB = _StarThreshMB_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 28, 6),
    _StarThreshMB_Type()
)
starThreshMB.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starThreshMB.setStatus("current")
if mibBuilder.loadTexts:
    starThreshMB.setUnits("Megabytes")
_StarThreshMeasuredGB_Type = Gauge32
_StarThreshMeasuredGB_Object = MibScalar
starThreshMeasuredGB = _StarThreshMeasuredGB_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 28, 7),
    _StarThreshMeasuredGB_Type()
)
starThreshMeasuredGB.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starThreshMeasuredGB.setStatus("current")
if mibBuilder.loadTexts:
    starThreshMeasuredGB.setUnits("Gigabytes")
_StarThreshGB_Type = Unsigned32
_StarThreshGB_Object = MibScalar
starThreshGB = _StarThreshGB_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 28, 8),
    _StarThreshGB_Type()
)
starThreshGB.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starThreshGB.setStatus("current")
if mibBuilder.loadTexts:
    starThreshGB.setUnits("Gigabytes")


class _StarThreshPeriodInt_Type(Integer32):
    """Custom type starThreshPeriodInt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 600),
    )


_StarThreshPeriodInt_Type.__name__ = "Integer32"
_StarThreshPeriodInt_Object = MibScalar
starThreshPeriodInt = _StarThreshPeriodInt_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 28, 9),
    _StarThreshPeriodInt_Type()
)
starThreshPeriodInt.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starThreshPeriodInt.setStatus("current")
if mibBuilder.loadTexts:
    starThreshPeriodInt.setUnits("Seconds")


class _StarThreshDeviceNum_Type(Integer32):
    """Custom type starThreshDeviceNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_StarThreshDeviceNum_Type.__name__ = "Integer32"
_StarThreshDeviceNum_Object = MibScalar
starThreshDeviceNum = _StarThreshDeviceNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 28, 10),
    _StarThreshDeviceNum_Type()
)
starThreshDeviceNum.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starThreshDeviceNum.setStatus("current")
_StarentPort_ObjectIdentity = ObjectIdentity
starentPort = _StarentPort_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 29)
)
_StarPortTable_Object = MibTable
starPortTable = _StarPortTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 29, 1)
)
if mibBuilder.loadTexts:
    starPortTable.setStatus("current")
_StarPortEntry_Object = MibTableRow
starPortEntry = _StarPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 29, 1, 1)
)
starPortEntry.setIndexNames(
    (0, "STARENT-MIB", "starPortSlot"),
    (0, "STARENT-MIB", "starPortNum"),
)
if mibBuilder.loadTexts:
    starPortEntry.setStatus("current")


class _StarPortSlot_Type(Integer32):
    """Custom type starPortSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 48),
    )


_StarPortSlot_Type.__name__ = "Integer32"
_StarPortSlot_Object = MibTableColumn
starPortSlot = _StarPortSlot_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 29, 1, 1, 1),
    _StarPortSlot_Type()
)
starPortSlot.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPortSlot.setStatus("current")


class _StarPortNum_Type(Integer32):
    """Custom type starPortNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 29),
    )


_StarPortNum_Type.__name__ = "Integer32"
_StarPortNum_Object = MibTableColumn
starPortNum = _StarPortNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 29, 1, 1, 2),
    _StarPortNum_Type()
)
starPortNum.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPortNum.setStatus("current")


class _StarPortType_Type(Integer32):
    """Custom type starPortType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("bitst1e1", 9),
          ("ds3", 4),
          ("ds3e", 7),
          ("ether10g", 11),
          ("ethernet1000", 3),
          ("ethernet1000dualmedia", 2),
          ("ethernet10100", 1),
          ("none", 0),
          ("oc12atm", 6),
          ("oc3atm", 5),
          ("rs232", 8),
          ("virtualethernet", 10))
    )


_StarPortType_Type.__name__ = "Integer32"
_StarPortType_Object = MibTableColumn
starPortType = _StarPortType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 29, 1, 1, 3),
    _StarPortType_Type()
)
starPortType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPortType.setStatus("current")
_StarPortTypeDescr_Type = DisplayString
_StarPortTypeDescr_Object = MibTableColumn
starPortTypeDescr = _StarPortTypeDescr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 29, 1, 1, 4),
    _StarPortTypeDescr_Type()
)
starPortTypeDescr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPortTypeDescr.setStatus("current")


class _StarPortAdminState_Type(Integer32):
    """Custom type starPortAdminState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1),
          ("unknown", 0))
    )


_StarPortAdminState_Type.__name__ = "Integer32"
_StarPortAdminState_Object = MibTableColumn
starPortAdminState = _StarPortAdminState_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 29, 1, 1, 5),
    _StarPortAdminState_Type()
)
starPortAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPortAdminState.setStatus("current")


class _StarPortOperState_Type(Integer32):
    """Custom type starPortOperState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("down", 2),
          ("notapplicable", 3),
          ("unknown", 0),
          ("up", 1))
    )


_StarPortOperState_Type.__name__ = "Integer32"
_StarPortOperState_Object = MibTableColumn
starPortOperState = _StarPortOperState_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 29, 1, 1, 6),
    _StarPortOperState_Type()
)
starPortOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPortOperState.setStatus("current")


class _StarPortOperMode_Type(Integer32):
    """Custom type starPortOperMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("standby", 2),
          ("unknown", 0))
    )


_StarPortOperMode_Type.__name__ = "Integer32"
_StarPortOperMode_Object = MibTableColumn
starPortOperMode = _StarPortOperMode_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 29, 1, 1, 7),
    _StarPortOperMode_Type()
)
starPortOperMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPortOperMode.setStatus("current")


class _StarPortLinkState_Type(Integer32):
    """Custom type starPortLinkState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("down", 2),
          ("unknown", 0),
          ("up", 1))
    )


_StarPortLinkState_Type.__name__ = "Integer32"
_StarPortLinkState_Object = MibTableColumn
starPortLinkState = _StarPortLinkState_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 29, 1, 1, 8),
    _StarPortLinkState_Type()
)
starPortLinkState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPortLinkState.setStatus("current")


class _StarRedundantPortSlot_Type(Integer32):
    """Custom type starRedundantPortSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 48),
    )


_StarRedundantPortSlot_Type.__name__ = "Integer32"
_StarRedundantPortSlot_Object = MibTableColumn
starRedundantPortSlot = _StarRedundantPortSlot_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 29, 1, 1, 9),
    _StarRedundantPortSlot_Type()
)
starRedundantPortSlot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRedundantPortSlot.setStatus("current")


class _StarRedundantPortNum_Type(Integer32):
    """Custom type starRedundantPortNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 29),
    )


_StarRedundantPortNum_Type.__name__ = "Integer32"
_StarRedundantPortNum_Object = MibTableColumn
starRedundantPortNum = _StarRedundantPortNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 29, 1, 1, 10),
    _StarRedundantPortNum_Type()
)
starRedundantPortNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRedundantPortNum.setStatus("current")
_StarPortRxBytes_Type = Counter32
_StarPortRxBytes_Object = MibTableColumn
starPortRxBytes = _StarPortRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 29, 1, 1, 11),
    _StarPortRxBytes_Type()
)
starPortRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPortRxBytes.setStatus("current")
if mibBuilder.loadTexts:
    starPortRxBytes.setUnits("Megabytes")
_StarPortTxBytes_Type = Counter32
_StarPortTxBytes_Object = MibTableColumn
starPortTxBytes = _StarPortTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 29, 1, 1, 12),
    _StarPortTxBytes_Type()
)
starPortTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPortTxBytes.setStatus("current")
if mibBuilder.loadTexts:
    starPortTxBytes.setUnits("Megabytes")
_StarPortRxFrames_Type = Counter32
_StarPortRxFrames_Object = MibTableColumn
starPortRxFrames = _StarPortRxFrames_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 29, 1, 1, 13),
    _StarPortRxFrames_Type()
)
starPortRxFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPortRxFrames.setStatus("current")
if mibBuilder.loadTexts:
    starPortRxFrames.setUnits("Thousands")
_StarPortTxFrames_Type = Counter32
_StarPortTxFrames_Object = MibTableColumn
starPortTxFrames = _StarPortTxFrames_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 29, 1, 1, 14),
    _StarPortTxFrames_Type()
)
starPortTxFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPortTxFrames.setStatus("current")
if mibBuilder.loadTexts:
    starPortTxFrames.setUnits("Thousands")
_StarPortRxDiscards_Type = Counter32
_StarPortRxDiscards_Object = MibTableColumn
starPortRxDiscards = _StarPortRxDiscards_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 29, 1, 1, 15),
    _StarPortRxDiscards_Type()
)
starPortRxDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPortRxDiscards.setStatus("current")
_StarPortTxDiscards_Type = Counter32
_StarPortTxDiscards_Object = MibTableColumn
starPortTxDiscards = _StarPortTxDiscards_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 29, 1, 1, 16),
    _StarPortTxDiscards_Type()
)
starPortTxDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPortTxDiscards.setStatus("current")
_StarPortRxErrors_Type = Counter32
_StarPortRxErrors_Object = MibTableColumn
starPortRxErrors = _StarPortRxErrors_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 29, 1, 1, 17),
    _StarPortRxErrors_Type()
)
starPortRxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPortRxErrors.setStatus("current")
_StarPortTxErrors_Type = Counter32
_StarPortTxErrors_Object = MibTableColumn
starPortTxErrors = _StarPortTxErrors_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 29, 1, 1, 18),
    _StarPortTxErrors_Type()
)
starPortTxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPortTxErrors.setStatus("current")
if mibBuilder.loadTexts:
    starPortTxErrors.setUnits("Thousands")
_StarentIPPool_ObjectIdentity = ObjectIdentity
starentIPPool = _StarentIPPool_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 30)
)
_StarIPPoolTable_Object = MibTable
starIPPoolTable = _StarIPPoolTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 30, 1)
)
if mibBuilder.loadTexts:
    starIPPoolTable.setStatus("current")
_StarIPPoolEntry_Object = MibTableRow
starIPPoolEntry = _StarIPPoolEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 30, 1, 1)
)
starIPPoolEntry.setIndexNames(
    (1, "STARENT-MIB", "starIPPoolID"),
)
if mibBuilder.loadTexts:
    starIPPoolEntry.setStatus("current")
_StarIPPoolVpnID_Type = Gauge32
_StarIPPoolVpnID_Object = MibTableColumn
starIPPoolVpnID = _StarIPPoolVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 30, 1, 1, 1),
    _StarIPPoolVpnID_Type()
)
starIPPoolVpnID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPPoolVpnID.setStatus("current")
_StarIPPoolID_Type = StarMediumID
_StarIPPoolID_Object = MibTableColumn
starIPPoolID = _StarIPPoolID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 30, 1, 1, 2),
    _StarIPPoolID_Type()
)
starIPPoolID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starIPPoolID.setStatus("current")
_StarIPPoolContext_Type = DisplayString
_StarIPPoolContext_Object = MibTableColumn
starIPPoolContext = _StarIPPoolContext_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 30, 1, 1, 3),
    _StarIPPoolContext_Type()
)
starIPPoolContext.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPPoolContext.setStatus("current")
_StarIPPoolGroup_Type = DisplayString
_StarIPPoolGroup_Object = MibTableColumn
starIPPoolGroup = _StarIPPoolGroup_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 30, 1, 1, 4),
    _StarIPPoolGroup_Type()
)
starIPPoolGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPPoolGroup.setStatus("current")


class _StarIPPoolName_Type(OctetString):
    """Custom type starIPPoolName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_StarIPPoolName_Type.__name__ = "OctetString"
_StarIPPoolName_Object = MibTableColumn
starIPPoolName = _StarIPPoolName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 30, 1, 1, 5),
    _StarIPPoolName_Type()
)
starIPPoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPPoolName.setStatus("current")


class _StarIPPoolType_Type(Integer32):
    """Custom type starIPPoolType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("nat", 5),
          ("private", 1),
          ("public", 2),
          ("resource", 4),
          ("static", 3),
          ("unknown", 0))
    )


_StarIPPoolType_Type.__name__ = "Integer32"
_StarIPPoolType_Object = MibTableColumn
starIPPoolType = _StarIPPoolType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 30, 1, 1, 6),
    _StarIPPoolType_Type()
)
starIPPoolType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPPoolType.setStatus("current")


class _StarIPPoolState_Type(Integer32):
    """Custom type starIPPoolState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("alarm", 3),
          ("good", 1),
          ("inactive", 5),
          ("pendingdelete", 2),
          ("resize", 4),
          ("unknown", 0))
    )


_StarIPPoolState_Type.__name__ = "Integer32"
_StarIPPoolState_Object = MibTableColumn
starIPPoolState = _StarIPPoolState_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 30, 1, 1, 7),
    _StarIPPoolState_Type()
)
starIPPoolState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPPoolState.setStatus("current")
_StarIPPoolStartAddr_Type = IpAddress
_StarIPPoolStartAddr_Object = MibTableColumn
starIPPoolStartAddr = _StarIPPoolStartAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 30, 1, 1, 8),
    _StarIPPoolStartAddr_Type()
)
starIPPoolStartAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPPoolStartAddr.setStatus("current")
_StarIPPoolMaskorEndAddr_Type = IpAddress
_StarIPPoolMaskorEndAddr_Object = MibTableColumn
starIPPoolMaskorEndAddr = _StarIPPoolMaskorEndAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 30, 1, 1, 9),
    _StarIPPoolMaskorEndAddr_Type()
)
starIPPoolMaskorEndAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPPoolMaskorEndAddr.setStatus("current")
_StarIPPoolPriority_Type = Integer32
_StarIPPoolPriority_Object = MibTableColumn
starIPPoolPriority = _StarIPPoolPriority_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 30, 1, 1, 10),
    _StarIPPoolPriority_Type()
)
starIPPoolPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPPoolPriority.setStatus("current")
_StarIPPoolUsed_Type = Gauge32
_StarIPPoolUsed_Object = MibTableColumn
starIPPoolUsed = _StarIPPoolUsed_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 30, 1, 1, 11),
    _StarIPPoolUsed_Type()
)
starIPPoolUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPPoolUsed.setStatus("current")
_StarIPPoolHold_Type = Gauge32
_StarIPPoolHold_Object = MibTableColumn
starIPPoolHold = _StarIPPoolHold_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 30, 1, 1, 12),
    _StarIPPoolHold_Type()
)
starIPPoolHold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPPoolHold.setStatus("current")
_StarIPPoolRelease_Type = Gauge32
_StarIPPoolRelease_Object = MibTableColumn
starIPPoolRelease = _StarIPPoolRelease_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 30, 1, 1, 13),
    _StarIPPoolRelease_Type()
)
starIPPoolRelease.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPPoolRelease.setStatus("current")
_StarIPPoolFree_Type = Gauge32
_StarIPPoolFree_Object = MibTableColumn
starIPPoolFree = _StarIPPoolFree_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 30, 1, 1, 14),
    _StarIPPoolFree_Type()
)
starIPPoolFree.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPPoolFree.setStatus("current")
_StarentTrapData_ObjectIdentity = ObjectIdentity
starentTrapData = _StarentTrapData_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31)
)


class _StarCongestionPolicy_Type(Integer32):
    """Custom type starCongestionPolicy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("drop", 3),
          ("redirect", 2),
          ("reject", 1))
    )


_StarCongestionPolicy_Type.__name__ = "Integer32"
_StarCongestionPolicy_Object = MibScalar
starCongestionPolicy = _StarCongestionPolicy_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 1),
    _StarCongestionPolicy_Type()
)
starCongestionPolicy.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starCongestionPolicy.setStatus("current")


class _StarCongestionResourceType_Type(Integer32):
    """Custom type starCongestionResourceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("averagememory", 3),
          ("license", 6),
          ("portutil", 7),
          ("queuedelay", 5),
          ("queuesize", 4),
          ("rxperportutil", 10),
          ("rxportutil", 8),
          ("servicecapacity", 12),
          ("servicecpu", 2),
          ("systemcpu", 1),
          ("txperportutil", 11),
          ("txportutil", 9))
    )


_StarCongestionResourceType_Type.__name__ = "Integer32"
_StarCongestionResourceType_Object = MibScalar
starCongestionResourceType = _StarCongestionResourceType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 2),
    _StarCongestionResourceType_Type()
)
starCongestionResourceType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starCongestionResourceType.setStatus("current")


class _StarPTACConfig_Type(Integer32):
    """Custom type starPTACConfig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 14),
    )


_StarPTACConfig_Type.__name__ = "Integer32"
_StarPTACConfig_Object = MibScalar
starPTACConfig = _StarPTACConfig_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 3),
    _StarPTACConfig_Type()
)
starPTACConfig.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPTACConfig.setStatus("current")


class _StarPTACActive_Type(Integer32):
    """Custom type starPTACActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 14),
    )


_StarPTACActive_Type.__name__ = "Integer32"
_StarPTACActive_Object = MibScalar
starPTACActive = _StarPTACActive_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 4),
    _StarPTACActive_Type()
)
starPTACActive.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPTACActive.setStatus("current")
_StarContextName_Type = DisplayString
_StarContextName_Object = MibScalar
starContextName = _StarContextName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 5),
    _StarContextName_Type()
)
starContextName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starContextName.setStatus("current")
_StarInterfaceName_Type = DisplayString
_StarInterfaceName_Object = MibScalar
starInterfaceName = _StarInterfaceName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 6),
    _StarInterfaceName_Type()
)
starInterfaceName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starInterfaceName.setStatus("current")
_StarPCFAddress_Type = IpAddress
_StarPCFAddress_Object = MibScalar
starPCFAddress = _StarPCFAddress_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 7),
    _StarPCFAddress_Type()
)
starPCFAddress.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPCFAddress.setStatus("current")
_StarPeerAddress_Type = IpAddress
_StarPeerAddress_Object = MibScalar
starPeerAddress = _StarPeerAddress_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 8),
    _StarPeerAddress_Type()
)
starPeerAddress.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPeerAddress.setStatus("current")
_StarLicensedSessions_Type = Unsigned32
_StarLicensedSessions_Object = MibScalar
starLicensedSessions = _StarLicensedSessions_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 9),
    _StarLicensedSessions_Type()
)
starLicensedSessions.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starLicensedSessions.setStatus("current")
_StarCurrentSessions_Type = Gauge32
_StarCurrentSessions_Object = MibScalar
starCurrentSessions = _StarCurrentSessions_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 10),
    _StarCurrentSessions_Type()
)
starCurrentSessions.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starCurrentSessions.setStatus("current")
_StarL3Address_Type = IpAddress
_StarL3Address_Object = MibScalar
starL3Address = _StarL3Address_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 11),
    _StarL3Address_Type()
)
starL3Address.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starL3Address.setStatus("current")


class _StarUDPPortNum_Type(Integer32):
    """Custom type starUDPPortNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_StarUDPPortNum_Type.__name__ = "Integer32"
_StarUDPPortNum_Object = MibScalar
starUDPPortNum = _StarUDPPortNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 12),
    _StarUDPPortNum_Type()
)
starUDPPortNum.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starUDPPortNum.setStatus("current")
_StarSRPIpAddress_Type = IpAddress
_StarSRPIpAddress_Object = MibScalar
starSRPIpAddress = _StarSRPIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 13),
    _StarSRPIpAddress_Type()
)
starSRPIpAddress.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSRPIpAddress.setStatus("current")
_StarBGPPeerIpAddress_Type = IpAddress
_StarBGPPeerIpAddress_Object = MibScalar
starBGPPeerIpAddress = _StarBGPPeerIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 14),
    _StarBGPPeerIpAddress_Type()
)
starBGPPeerIpAddress.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starBGPPeerIpAddress.setStatus("current")
_StarContFiltCFFilename_Type = DisplayString
_StarContFiltCFFilename_Object = MibScalar
starContFiltCFFilename = _StarContFiltCFFilename_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 15),
    _StarContFiltCFFilename_Type()
)
starContFiltCFFilename.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starContFiltCFFilename.setStatus("current")


class _StarContFiltCFErrorCode_Type(Integer32):
    """Custom type starContFiltCFErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("loadfailure", 3),
          ("notavailable", 2),
          ("unknownerror", 1))
    )


_StarContFiltCFErrorCode_Type.__name__ = "Integer32"
_StarContFiltCFErrorCode_Object = MibScalar
starContFiltCFErrorCode = _StarContFiltCFErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 16),
    _StarContFiltCFErrorCode_Type()
)
starContFiltCFErrorCode.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starContFiltCFErrorCode.setStatus("current")
_StarFecthedFromAAAMgr_Type = Integer32
_StarFecthedFromAAAMgr_Object = MibScalar
starFecthedFromAAAMgr = _StarFecthedFromAAAMgr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 17),
    _StarFecthedFromAAAMgr_Type()
)
starFecthedFromAAAMgr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starFecthedFromAAAMgr.setStatus("current")
_StarPriorToAudit_Type = Integer32
_StarPriorToAudit_Object = MibScalar
starPriorToAudit = _StarPriorToAudit_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 18),
    _StarPriorToAudit_Type()
)
starPriorToAudit.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPriorToAudit.setStatus("current")
_StarPassedAudits_Type = Integer32
_StarPassedAudits_Object = MibScalar
starPassedAudits = _StarPassedAudits_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 19),
    _StarPassedAudits_Type()
)
starPassedAudits.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPassedAudits.setStatus("current")
_StarCallsRecovered_Type = Integer32
_StarCallsRecovered_Object = MibScalar
starCallsRecovered = _StarCallsRecovered_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 20),
    _StarCallsRecovered_Type()
)
starCallsRecovered.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starCallsRecovered.setStatus("current")
_StarAllCallLines_Type = Integer32
_StarAllCallLines_Object = MibScalar
starAllCallLines = _StarAllCallLines_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 21),
    _StarAllCallLines_Type()
)
starAllCallLines.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starAllCallLines.setStatus("current")
_StarElapsedMs_Type = Integer32
_StarElapsedMs_Object = MibScalar
starElapsedMs = _StarElapsedMs_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 22),
    _StarElapsedMs_Type()
)
starElapsedMs.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starElapsedMs.setStatus("current")
_StarCDRFilename_Type = DisplayString
_StarCDRFilename_Object = MibScalar
starCDRFilename = _StarCDRFilename_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 23),
    _StarCDRFilename_Type()
)
starCDRFilename.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starCDRFilename.setStatus("current")
_StarDiameterVpnName_Type = DisplayString
_StarDiameterVpnName_Object = MibScalar
starDiameterVpnName = _StarDiameterVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 24),
    _StarDiameterVpnName_Type()
)
starDiameterVpnName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starDiameterVpnName.setStatus("current")
_StarDiameterPeerAddr_Type = IpAddress
_StarDiameterPeerAddr_Object = MibScalar
starDiameterPeerAddr = _StarDiameterPeerAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 25),
    _StarDiameterPeerAddr_Type()
)
starDiameterPeerAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starDiameterPeerAddr.setStatus("current")
_StarDiameterEndpointName_Type = DisplayString
_StarDiameterEndpointName_Object = MibScalar
starDiameterEndpointName = _StarDiameterEndpointName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 26),
    _StarDiameterEndpointName_Type()
)
starDiameterEndpointName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starDiameterEndpointName.setStatus("current")
_StarInterfaceIPAddress_Type = IpAddress
_StarInterfaceIPAddress_Object = MibScalar
starInterfaceIPAddress = _StarInterfaceIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 27),
    _StarInterfaceIPAddress_Type()
)
starInterfaceIPAddress.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starInterfaceIPAddress.setStatus("current")
_StarOSPFNeighborRouterID_Type = IpAddress
_StarOSPFNeighborRouterID_Object = MibScalar
starOSPFNeighborRouterID = _StarOSPFNeighborRouterID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 28),
    _StarOSPFNeighborRouterID_Type()
)
starOSPFNeighborRouterID.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starOSPFNeighborRouterID.setStatus("current")
_StarOSPFFromState_Type = StarOSPFNeighborState
_StarOSPFFromState_Object = MibScalar
starOSPFFromState = _StarOSPFFromState_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 29),
    _StarOSPFFromState_Type()
)
starOSPFFromState.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starOSPFFromState.setStatus("current")
_StarOSPFToState_Type = StarOSPFNeighborState
_StarOSPFToState_Object = MibScalar
starOSPFToState = _StarOSPFToState_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 30),
    _StarOSPFToState_Type()
)
starOSPFToState.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starOSPFToState.setStatus("current")
_StarBLFilename_Type = DisplayString
_StarBLFilename_Object = MibScalar
starBLFilename = _StarBLFilename_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 31),
    _StarBLFilename_Type()
)
starBLFilename.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starBLFilename.setStatus("current")


class _StarBLErrorCode_Type(Integer32):
    """Custom type starBLErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("loadfailure", 3),
          ("notavailable", 2),
          ("unknownerror", 1))
    )


_StarBLErrorCode_Type.__name__ = "Integer32"
_StarBLErrorCode_Object = MibScalar
starBLErrorCode = _StarBLErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 32),
    _StarBLErrorCode_Type()
)
starBLErrorCode.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starBLErrorCode.setStatus("current")


class _StarDiameterECode_Type(Integer32):
    """Custom type starDiameterECode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("authappidmismatch", 7),
          ("hostnamemismatch", 2),
          ("hostrealmmismatch", 3),
          ("notcomplete", 1),
          ("securitymismatch", 4),
          ("tlshandshakeerror", 6),
          ("tlssertificateerror", 5))
    )


_StarDiameterECode_Type.__name__ = "Integer32"
_StarDiameterECode_Object = MibScalar
starDiameterECode = _StarDiameterECode_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 33),
    _StarDiameterECode_Type()
)
starDiameterECode.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starDiameterECode.setStatus("current")
_StarDiameterPeerAddrIpv6_Type = Ipv6Address
_StarDiameterPeerAddrIpv6_Object = MibScalar
starDiameterPeerAddrIpv6 = _StarDiameterPeerAddrIpv6_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 34),
    _StarDiameterPeerAddrIpv6_Type()
)
starDiameterPeerAddrIpv6.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starDiameterPeerAddrIpv6.setStatus("current")
_StarContFiltCFUpgradeFilename_Type = DisplayString
_StarContFiltCFUpgradeFilename_Object = MibScalar
starContFiltCFUpgradeFilename = _StarContFiltCFUpgradeFilename_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 35),
    _StarContFiltCFUpgradeFilename_Type()
)
starContFiltCFUpgradeFilename.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starContFiltCFUpgradeFilename.setStatus("current")


class _StarContFiltCFUpgradeErrorCode_Type(Integer32):
    """Custom type starContFiltCFUpgradeErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("unknownerror", 1),
          ("upgradefullfailure", 2),
          ("upgradeincrfailure", 3))
    )


_StarContFiltCFUpgradeErrorCode_Type.__name__ = "Integer32"
_StarContFiltCFUpgradeErrorCode_Object = MibScalar
starContFiltCFUpgradeErrorCode = _StarContFiltCFUpgradeErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 36),
    _StarContFiltCFUpgradeErrorCode_Type()
)
starContFiltCFUpgradeErrorCode.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starContFiltCFUpgradeErrorCode.setStatus("current")
_StarBLUpgradeFilename_Type = DisplayString
_StarBLUpgradeFilename_Object = MibScalar
starBLUpgradeFilename = _StarBLUpgradeFilename_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 37),
    _StarBLUpgradeFilename_Type()
)
starBLUpgradeFilename.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starBLUpgradeFilename.setStatus("current")


class _StarBLUpgradeErrorCode_Type(Integer32):
    """Custom type starBLUpgradeErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("unknownerror", 1),
          ("upgradefullfailure", 2))
    )


_StarBLUpgradeErrorCode_Type.__name__ = "Integer32"
_StarBLUpgradeErrorCode_Object = MibScalar
starBLUpgradeErrorCode = _StarBLUpgradeErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 38),
    _StarBLUpgradeErrorCode_Type()
)
starBLUpgradeErrorCode.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starBLUpgradeErrorCode.setStatus("current")
_StarDynPkgFilename_Type = DisplayString
_StarDynPkgFilename_Object = MibScalar
starDynPkgFilename = _StarDynPkgFilename_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 39),
    _StarDynPkgFilename_Type()
)
starDynPkgFilename.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starDynPkgFilename.setStatus("current")


class _StarDynCFErrorCode_Type(Integer32):
    """Custom type starDynCFErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("loadfailure", 3),
          ("notavailable", 2),
          ("unknownerror", 1))
    )


_StarDynCFErrorCode_Type.__name__ = "Integer32"
_StarDynCFErrorCode_Object = MibScalar
starDynCFErrorCode = _StarDynCFErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 40),
    _StarDynCFErrorCode_Type()
)
starDynCFErrorCode.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starDynCFErrorCode.setStatus("current")
_StarDynPkgUpgradeFilename_Type = DisplayString
_StarDynPkgUpgradeFilename_Object = MibScalar
starDynPkgUpgradeFilename = _StarDynPkgUpgradeFilename_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 41),
    _StarDynPkgUpgradeFilename_Type()
)
starDynPkgUpgradeFilename.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starDynPkgUpgradeFilename.setStatus("current")


class _StarDynCFUpgradeErrorCode_Type(Integer32):
    """Custom type starDynCFUpgradeErrorCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("unknownerror", 1),
          ("upgradefullfailure", 2))
    )


_StarDynCFUpgradeErrorCode_Type.__name__ = "Integer32"
_StarDynCFUpgradeErrorCode_Object = MibScalar
starDynCFUpgradeErrorCode = _StarDynCFUpgradeErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 42),
    _StarDynCFUpgradeErrorCode_Type()
)
starDynCFUpgradeErrorCode.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starDynCFUpgradeErrorCode.setStatus("current")


class _StarCscfSessCongestionResourceType_Type(Integer32):
    """Custom type starCscfSessCongestionResourceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cpu", 1),
          ("memory", 2))
    )


_StarCscfSessCongestionResourceType_Type.__name__ = "Integer32"
_StarCscfSessCongestionResourceType_Object = MibScalar
starCscfSessCongestionResourceType = _StarCscfSessCongestionResourceType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 43),
    _StarCscfSessCongestionResourceType_Type()
)
starCscfSessCongestionResourceType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starCscfSessCongestionResourceType.setStatus("current")


class _StarSmgrId_Type(Integer32):
    """Custom type starSmgrId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_StarSmgrId_Type.__name__ = "Integer32"
_StarSmgrId_Object = MibScalar
starSmgrId = _StarSmgrId_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 44),
    _StarSmgrId_Type()
)
starSmgrId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSmgrId.setStatus("current")
_StarEGTPVpnName_Type = DisplayString
_StarEGTPVpnName_Object = MibScalar
starEGTPVpnName = _StarEGTPVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 45),
    _StarEGTPVpnName_Type()
)
starEGTPVpnName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starEGTPVpnName.setStatus("current")
_StarEGTPServName_Type = DisplayString
_StarEGTPServName_Object = MibScalar
starEGTPServName = _StarEGTPServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 46),
    _StarEGTPServName_Type()
)
starEGTPServName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starEGTPServName.setStatus("current")


class _StarEGTPInterfaceType_Type(Integer32):
    """Custom type starEGTPInterfaceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("pgwingress", 3),
          ("sgsn", 4),
          ("sgwegress", 2),
          ("sgwingress", 1))
    )


_StarEGTPInterfaceType_Type.__name__ = "Integer32"
_StarEGTPInterfaceType_Object = MibScalar
starEGTPInterfaceType = _StarEGTPInterfaceType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 47),
    _StarEGTPInterfaceType_Type()
)
starEGTPInterfaceType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starEGTPInterfaceType.setStatus("current")
_StarEGTPSelfPort_Type = Gauge32
_StarEGTPSelfPort_Object = MibScalar
starEGTPSelfPort = _StarEGTPSelfPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 48),
    _StarEGTPSelfPort_Type()
)
starEGTPSelfPort.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starEGTPSelfPort.setStatus("current")
_StarEGTPSelfAddr_Type = IpAddress
_StarEGTPSelfAddr_Object = MibScalar
starEGTPSelfAddr = _StarEGTPSelfAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 49),
    _StarEGTPSelfAddr_Type()
)
starEGTPSelfAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starEGTPSelfAddr.setStatus("current")
_StarEGTPPeerPort_Type = Gauge32
_StarEGTPPeerPort_Object = MibScalar
starEGTPPeerPort = _StarEGTPPeerPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 50),
    _StarEGTPPeerPort_Type()
)
starEGTPPeerPort.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starEGTPPeerPort.setStatus("current")
_StarEGTPPeerAddr_Type = IpAddress
_StarEGTPPeerAddr_Object = MibScalar
starEGTPPeerAddr = _StarEGTPPeerAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 51),
    _StarEGTPPeerAddr_Type()
)
starEGTPPeerAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starEGTPPeerAddr.setStatus("current")
_StarEGTPPeerOldRstCnt_Type = Gauge32
_StarEGTPPeerOldRstCnt_Object = MibScalar
starEGTPPeerOldRstCnt = _StarEGTPPeerOldRstCnt_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 52),
    _StarEGTPPeerOldRstCnt_Type()
)
starEGTPPeerOldRstCnt.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starEGTPPeerOldRstCnt.setStatus("current")
_StarEGTPPeerNewRstCnt_Type = Gauge32
_StarEGTPPeerNewRstCnt_Object = MibScalar
starEGTPPeerNewRstCnt = _StarEGTPPeerNewRstCnt_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 53),
    _StarEGTPPeerNewRstCnt_Type()
)
starEGTPPeerNewRstCnt.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starEGTPPeerNewRstCnt.setStatus("current")
_StarEGTPPeerSessCnt_Type = Gauge32
_StarEGTPPeerSessCnt_Object = MibScalar
starEGTPPeerSessCnt = _StarEGTPPeerSessCnt_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 54),
    _StarEGTPPeerSessCnt_Type()
)
starEGTPPeerSessCnt.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starEGTPPeerSessCnt.setStatus("current")


class _StarEGTPFailureReason_Type(Integer32):
    """Custom type starEGTPFailureReason based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noresponsefrompeer", 2),
          ("restartcounterchange", 1),
          ("unknown", 0))
    )


_StarEGTPFailureReason_Type.__name__ = "Integer32"
_StarEGTPFailureReason_Object = MibScalar
starEGTPFailureReason = _StarEGTPFailureReason_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 55),
    _StarEGTPFailureReason_Type()
)
starEGTPFailureReason.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starEGTPFailureReason.setStatus("current")
_StarGSSCDRLossConfigured_Type = Unsigned32
_StarGSSCDRLossConfigured_Object = MibScalar
starGSSCDRLossConfigured = _StarGSSCDRLossConfigured_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 56),
    _StarGSSCDRLossConfigured_Type()
)
starGSSCDRLossConfigured.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starGSSCDRLossConfigured.setStatus("current")
_StarGSSCDRLossMeasured_Type = Unsigned32
_StarGSSCDRLossMeasured_Object = MibScalar
starGSSCDRLossMeasured = _StarGSSCDRLossMeasured_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 57),
    _StarGSSCDRLossMeasured_Type()
)
starGSSCDRLossMeasured.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starGSSCDRLossMeasured.setStatus("current")
_StarLicenseKey_Type = Unsigned32
_StarLicenseKey_Object = MibScalar
starLicenseKey = _StarLicenseKey_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 58),
    _StarLicenseKey_Type()
)
starLicenseKey.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starLicenseKey.setStatus("current")
_StarLicenseExpiryDate_Type = DateAndTime
_StarLicenseExpiryDate_Object = MibScalar
starLicenseExpiryDate = _StarLicenseExpiryDate_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 59),
    _StarLicenseExpiryDate_Type()
)
starLicenseExpiryDate.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starLicenseExpiryDate.setStatus("current")
_StarLicenseDaysRemaining_Type = Unsigned32
_StarLicenseDaysRemaining_Object = MibScalar
starLicenseDaysRemaining = _StarLicenseDaysRemaining_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 60),
    _StarLicenseDaysRemaining_Type()
)
starLicenseDaysRemaining.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starLicenseDaysRemaining.setStatus("current")
_StarLicenseDaysAfterExpiry_Type = Unsigned32
_StarLicenseDaysAfterExpiry_Object = MibScalar
starLicenseDaysAfterExpiry = _StarLicenseDaysAfterExpiry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 61),
    _StarLicenseDaysAfterExpiry_Type()
)
starLicenseDaysAfterExpiry.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starLicenseDaysAfterExpiry.setStatus("current")


class _StarNPUSlot_Type(Integer32):
    """Custom type starNPUSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 48),
    )


_StarNPUSlot_Type.__name__ = "Integer32"
_StarNPUSlot_Object = MibScalar
starNPUSlot = _StarNPUSlot_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 62),
    _StarNPUSlot_Type()
)
starNPUSlot.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starNPUSlot.setStatus("current")
_StarSPRServerIpAddr_Type = IpAddress
_StarSPRServerIpAddr_Object = MibScalar
starSPRServerIpAddr = _StarSPRServerIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 63),
    _StarSPRServerIpAddr_Type()
)
starSPRServerIpAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSPRServerIpAddr.setStatus("current")
_StarMVGEndpointName_Type = DisplayString
_StarMVGEndpointName_Object = MibScalar
starMVGEndpointName = _StarMVGEndpointName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 66),
    _StarMVGEndpointName_Type()
)
starMVGEndpointName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starMVGEndpointName.setStatus("current")


class _StarMVGProtocolType_Type(Integer32):
    """Custom type starMVGProtocolType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("protocolhttp", 1),
          ("protocolicmp", 3),
          ("protocoltcp", 2))
    )


_StarMVGProtocolType_Type.__name__ = "Integer32"
_StarMVGProtocolType_Object = MibScalar
starMVGProtocolType = _StarMVGProtocolType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 68),
    _StarMVGProtocolType_Type()
)
starMVGProtocolType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starMVGProtocolType.setStatus("current")


class _StarMVGCauseCode_Type(Integer32):
    """Custom type starMVGCauseCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("servernotreachable", 1),
          ("servicereachable", 2))
    )


_StarMVGCauseCode_Type.__name__ = "Integer32"
_StarMVGCauseCode_Object = MibScalar
starMVGCauseCode = _StarMVGCauseCode_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 69),
    _StarMVGCauseCode_Type()
)
starMVGCauseCode.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starMVGCauseCode.setStatus("current")
_StarPCCNtfyIntfPeerName_Type = DisplayString
_StarPCCNtfyIntfPeerName_Object = MibScalar
starPCCNtfyIntfPeerName = _StarPCCNtfyIntfPeerName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 73),
    _StarPCCNtfyIntfPeerName_Type()
)
starPCCNtfyIntfPeerName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPCCNtfyIntfPeerName.setStatus("current")


class _StarECSTotalDNSLearntIPThresholdInstance_Type(Integer32):
    """Custom type starECSTotalDNSLearntIPThresholdInstance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_StarECSTotalDNSLearntIPThresholdInstance_Type.__name__ = "Integer32"
_StarECSTotalDNSLearntIPThresholdInstance_Object = MibScalar
starECSTotalDNSLearntIPThresholdInstance = _StarECSTotalDNSLearntIPThresholdInstance_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 74),
    _StarECSTotalDNSLearntIPThresholdInstance_Type()
)
starECSTotalDNSLearntIPThresholdInstance.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starECSTotalDNSLearntIPThresholdInstance.setStatus("current")


class _StarECSTotalDNSLearntIPThresholdconfigured_Type(Integer32):
    """Custom type starECSTotalDNSLearntIPThresholdconfigured based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_StarECSTotalDNSLearntIPThresholdconfigured_Type.__name__ = "Integer32"
_StarECSTotalDNSLearntIPThresholdconfigured_Object = MibScalar
starECSTotalDNSLearntIPThresholdconfigured = _StarECSTotalDNSLearntIPThresholdconfigured_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 75),
    _StarECSTotalDNSLearntIPThresholdconfigured_Type()
)
starECSTotalDNSLearntIPThresholdconfigured.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starECSTotalDNSLearntIPThresholdconfigured.setStatus("current")


class _StarECSTotalDNSLearntIPThresholdmeasured_Type(Integer32):
    """Custom type starECSTotalDNSLearntIPThresholdmeasured based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_StarECSTotalDNSLearntIPThresholdmeasured_Type.__name__ = "Integer32"
_StarECSTotalDNSLearntIPThresholdmeasured_Object = MibScalar
starECSTotalDNSLearntIPThresholdmeasured = _StarECSTotalDNSLearntIPThresholdmeasured_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 76),
    _StarECSTotalDNSLearntIPThresholdmeasured_Type()
)
starECSTotalDNSLearntIPThresholdmeasured.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starECSTotalDNSLearntIPThresholdmeasured.setStatus("current")
_StarPeerAddressIpv6_Type = Ipv6Address
_StarPeerAddressIpv6_Object = MibScalar
starPeerAddressIpv6 = _StarPeerAddressIpv6_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 77),
    _StarPeerAddressIpv6_Type()
)
starPeerAddressIpv6.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPeerAddressIpv6.setStatus("current")
_StarLAGPartner_Type = DisplayString
_StarLAGPartner_Object = MibScalar
starLAGPartner = _StarLAGPartner_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 78),
    _StarLAGPartner_Type()
)
starLAGPartner.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starLAGPartner.setStatus("current")
_StarSGSServiceVpnName_Type = DisplayString
_StarSGSServiceVpnName_Object = MibScalar
starSGSServiceVpnName = _StarSGSServiceVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 79),
    _StarSGSServiceVpnName_Type()
)
starSGSServiceVpnName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSGSServiceVpnName.setStatus("current")
_StarSGSServiceServName_Type = DisplayString
_StarSGSServiceServName_Object = MibScalar
starSGSServiceServName = _StarSGSServiceServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 80),
    _StarSGSServiceServName_Type()
)
starSGSServiceServName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSGSServiceServName.setStatus("current")
_StarVLRName_Type = DisplayString
_StarVLRName_Object = MibScalar
starVLRName = _StarVLRName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 81),
    _StarVLRName_Type()
)
starVLRName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starVLRName.setStatus("current")
_StarVLRIpAddr1_Type = IpAddress
_StarVLRIpAddr1_Object = MibScalar
starVLRIpAddr1 = _StarVLRIpAddr1_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 82),
    _StarVLRIpAddr1_Type()
)
starVLRIpAddr1.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starVLRIpAddr1.setStatus("current")
_StarVLRIpAddr2_Type = IpAddress
_StarVLRIpAddr2_Object = MibScalar
starVLRIpAddr2 = _StarVLRIpAddr2_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 83),
    _StarVLRIpAddr2_Type()
)
starVLRIpAddr2.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starVLRIpAddr2.setStatus("current")


class _StarVLRPortNum_Type(Integer32):
    """Custom type starVLRPortNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_StarVLRPortNum_Type.__name__ = "Integer32"
_StarVLRPortNum_Object = MibScalar
starVLRPortNum = _StarVLRPortNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 84),
    _StarVLRPortNum_Type()
)
starVLRPortNum.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starVLRPortNum.setStatus("current")


class _StarCongestionType_Type(Integer32):
    """Custom type starCongestionType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("critical", 1),
          ("major", 2),
          ("minor", 3))
    )


_StarCongestionType_Type.__name__ = "Integer32"
_StarCongestionType_Object = MibScalar
starCongestionType = _StarCongestionType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 85),
    _StarCongestionType_Type()
)
starCongestionType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starCongestionType.setStatus("current")
_StarCongestionActionProfileName_Type = DisplayString
_StarCongestionActionProfileName_Object = MibScalar
starCongestionActionProfileName = _StarCongestionActionProfileName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 86),
    _StarCongestionActionProfileName_Type()
)
starCongestionActionProfileName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starCongestionActionProfileName.setStatus("current")


class _StarSessMgrFlowInstId_Type(Integer32):
    """Custom type starSessMgrFlowInstId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_StarSessMgrFlowInstId_Type.__name__ = "Integer32"
_StarSessMgrFlowInstId_Object = MibScalar
starSessMgrFlowInstId = _StarSessMgrFlowInstId_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 87),
    _StarSessMgrFlowInstId_Type()
)
starSessMgrFlowInstId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSessMgrFlowInstId.setStatus("current")


class _StarSessMgrFlowPDNNo_Type(Integer32):
    """Custom type starSessMgrFlowPDNNo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_StarSessMgrFlowPDNNo_Type.__name__ = "Integer32"
_StarSessMgrFlowPDNNo_Object = MibScalar
starSessMgrFlowPDNNo = _StarSessMgrFlowPDNNo_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 88),
    _StarSessMgrFlowPDNNo_Type()
)
starSessMgrFlowPDNNo.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSessMgrFlowPDNNo.setStatus("current")


class _StarSessMgrFlowMemUsage_Type(Integer32):
    """Custom type starSessMgrFlowMemUsage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_StarSessMgrFlowMemUsage_Type.__name__ = "Integer32"
_StarSessMgrFlowMemUsage_Object = MibScalar
starSessMgrFlowMemUsage = _StarSessMgrFlowMemUsage_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 89),
    _StarSessMgrFlowMemUsage_Type()
)
starSessMgrFlowMemUsage.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSessMgrFlowMemUsage.setStatus("current")


class _StarSessMgrFlowCounter_Type(Integer32):
    """Custom type starSessMgrFlowCounter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_StarSessMgrFlowCounter_Type.__name__ = "Integer32"
_StarSessMgrFlowCounter_Object = MibScalar
starSessMgrFlowCounter = _StarSessMgrFlowCounter_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 90),
    _StarSessMgrFlowCounter_Type()
)
starSessMgrFlowCounter.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSessMgrFlowCounter.setStatus("current")


class _StarSessMgrTotalFlowCount_Type(Integer32):
    """Custom type starSessMgrTotalFlowCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_StarSessMgrTotalFlowCount_Type.__name__ = "Integer32"
_StarSessMgrTotalFlowCount_Object = MibScalar
starSessMgrTotalFlowCount = _StarSessMgrTotalFlowCount_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 91),
    _StarSessMgrTotalFlowCount_Type()
)
starSessMgrTotalFlowCount.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSessMgrTotalFlowCount.setStatus("current")
_StarHENBGWServiceVpnName_Type = DisplayString
_StarHENBGWServiceVpnName_Object = MibScalar
starHENBGWServiceVpnName = _StarHENBGWServiceVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 92),
    _StarHENBGWServiceVpnName_Type()
)
starHENBGWServiceVpnName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starHENBGWServiceVpnName.setStatus("current")
_StarHENBGWServiceServName_Type = DisplayString
_StarHENBGWServiceServName_Object = MibScalar
starHENBGWServiceServName = _StarHENBGWServiceServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 93),
    _StarHENBGWServiceServName_Type()
)
starHENBGWServiceServName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starHENBGWServiceServName.setStatus("current")
_StarHENBGWServiceLogicalENBId_Type = DisplayString
_StarHENBGWServiceLogicalENBId_Object = MibScalar
starHENBGWServiceLogicalENBId = _StarHENBGWServiceLogicalENBId_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 94),
    _StarHENBGWServiceLogicalENBId_Type()
)
starHENBGWServiceLogicalENBId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starHENBGWServiceLogicalENBId.setStatus("current")
_StarHENBGWServiceMMEServName_Type = DisplayString
_StarHENBGWServiceMMEServName_Object = MibScalar
starHENBGWServiceMMEServName = _StarHENBGWServiceMMEServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 95),
    _StarHENBGWServiceMMEServName_Type()
)
starHENBGWServiceMMEServName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starHENBGWServiceMMEServName.setStatus("current")
_StarHENBGWServiceSelfAddr_Type = IpAddress
_StarHENBGWServiceSelfAddr_Object = MibScalar
starHENBGWServiceSelfAddr = _StarHENBGWServiceSelfAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 96),
    _StarHENBGWServiceSelfAddr_Type()
)
starHENBGWServiceSelfAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starHENBGWServiceSelfAddr.setStatus("current")
_StarHENBGWServicePeerAddr_Type = IpAddress
_StarHENBGWServicePeerAddr_Object = MibScalar
starHENBGWServicePeerAddr = _StarHENBGWServicePeerAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 97),
    _StarHENBGWServicePeerAddr_Type()
)
starHENBGWServicePeerAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starHENBGWServicePeerAddr.setStatus("current")


class _StarHENBGWServiceSelfPort_Type(Integer32):
    """Custom type starHENBGWServiceSelfPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_StarHENBGWServiceSelfPort_Type.__name__ = "Integer32"
_StarHENBGWServiceSelfPort_Object = MibScalar
starHENBGWServiceSelfPort = _StarHENBGWServiceSelfPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 98),
    _StarHENBGWServiceSelfPort_Type()
)
starHENBGWServiceSelfPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starHENBGWServiceSelfPort.setStatus("current")


class _StarHENBGWServicePeerPort_Type(Integer32):
    """Custom type starHENBGWServicePeerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_StarHENBGWServicePeerPort_Type.__name__ = "Integer32"
_StarHENBGWServicePeerPort_Object = MibScalar
starHENBGWServicePeerPort = _StarHENBGWServicePeerPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 99),
    _StarHENBGWServicePeerPort_Type()
)
starHENBGWServicePeerPort.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starHENBGWServicePeerPort.setStatus("current")


class _StarNPUSlotNumber_Type(Integer32):
    """Custom type starNPUSlotNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_StarNPUSlotNumber_Type.__name__ = "Integer32"
_StarNPUSlotNumber_Object = MibScalar
starNPUSlotNumber = _StarNPUSlotNumber_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 100),
    _StarNPUSlotNumber_Type()
)
starNPUSlotNumber.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starNPUSlotNumber.setStatus("current")


class _StarNPUCPUNumber_Type(Integer32):
    """Custom type starNPUCPUNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_StarNPUCPUNumber_Type.__name__ = "Integer32"
_StarNPUCPUNumber_Object = MibScalar
starNPUCPUNumber = _StarNPUCPUNumber_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 101),
    _StarNPUCPUNumber_Type()
)
starNPUCPUNumber.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starNPUCPUNumber.setStatus("current")


class _StarNPUNPUNumber_Type(Integer32):
    """Custom type starNPUNPUNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_StarNPUNPUNumber_Type.__name__ = "Integer32"
_StarNPUNPUNumber_Object = MibScalar
starNPUNPUNumber = _StarNPUNPUNumber_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 102),
    _StarNPUNPUNumber_Type()
)
starNPUNPUNumber.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starNPUNPUNumber.setStatus("current")
_StarChassisCrashList_Type = TruthValue
_StarChassisCrashList_Object = MibScalar
starChassisCrashList = _StarChassisCrashList_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 103),
    _StarChassisCrashList_Type()
)
starChassisCrashList.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starChassisCrashList.setStatus("current")


class _StarLIRcvryErrType_Type(Integer32):
    """Custom type starLIRcvryErrType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("integrityerror", 3),
          ("readerror", 1),
          ("syncerror", 0),
          ("writeerror", 2))
    )


_StarLIRcvryErrType_Type.__name__ = "Integer32"
_StarLIRcvryErrType_Object = MibScalar
starLIRcvryErrType = _StarLIRcvryErrType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 104),
    _StarLIRcvryErrType_Type()
)
starLIRcvryErrType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starLIRcvryErrType.setStatus("current")
_StarLIRcvryErrString_Type = DisplayString
_StarLIRcvryErrString_Object = MibScalar
starLIRcvryErrString = _StarLIRcvryErrString_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 105),
    _StarLIRcvryErrString_Type()
)
starLIRcvryErrString.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starLIRcvryErrString.setStatus("current")
_StarPMIPVpnName_Type = DisplayString
_StarPMIPVpnName_Object = MibScalar
starPMIPVpnName = _StarPMIPVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 106),
    _StarPMIPVpnName_Type()
)
starPMIPVpnName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPMIPVpnName.setStatus("current")
_StarPMIPServName_Type = DisplayString
_StarPMIPServName_Object = MibScalar
starPMIPServName = _StarPMIPServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 107),
    _StarPMIPServName_Type()
)
starPMIPServName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPMIPServName.setStatus("current")
_StarPMIPSelfAddrType_Type = InetAddressType
_StarPMIPSelfAddrType_Object = MibScalar
starPMIPSelfAddrType = _StarPMIPSelfAddrType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 108),
    _StarPMIPSelfAddrType_Type()
)
starPMIPSelfAddrType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPMIPSelfAddrType.setStatus("current")
_StarPMIPSelfAddr_Type = InetAddress
_StarPMIPSelfAddr_Object = MibScalar
starPMIPSelfAddr = _StarPMIPSelfAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 109),
    _StarPMIPSelfAddr_Type()
)
starPMIPSelfAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPMIPSelfAddr.setStatus("current")
_StarPMIPPeerAddrType_Type = InetAddressType
_StarPMIPPeerAddrType_Object = MibScalar
starPMIPPeerAddrType = _StarPMIPPeerAddrType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 110),
    _StarPMIPPeerAddrType_Type()
)
starPMIPPeerAddrType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPMIPPeerAddrType.setStatus("current")
_StarPMIPPeerAddr_Type = InetAddress
_StarPMIPPeerAddr_Object = MibScalar
starPMIPPeerAddr = _StarPMIPPeerAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 111),
    _StarPMIPPeerAddr_Type()
)
starPMIPPeerAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPMIPPeerAddr.setStatus("current")
_StarPMIPPeerOldRstCnt_Type = Counter32
_StarPMIPPeerOldRstCnt_Object = MibScalar
starPMIPPeerOldRstCnt = _StarPMIPPeerOldRstCnt_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 112),
    _StarPMIPPeerOldRstCnt_Type()
)
starPMIPPeerOldRstCnt.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPMIPPeerOldRstCnt.setStatus("current")
_StarPMIPPeerNewRstCnt_Type = Counter32
_StarPMIPPeerNewRstCnt_Object = MibScalar
starPMIPPeerNewRstCnt = _StarPMIPPeerNewRstCnt_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 113),
    _StarPMIPPeerNewRstCnt_Type()
)
starPMIPPeerNewRstCnt.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPMIPPeerNewRstCnt.setStatus("current")
_StarPMIPPeerSessCnt_Type = Counter32
_StarPMIPPeerSessCnt_Object = MibScalar
starPMIPPeerSessCnt = _StarPMIPPeerSessCnt_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 114),
    _StarPMIPPeerSessCnt_Type()
)
starPMIPPeerSessCnt.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPMIPPeerSessCnt.setStatus("current")


class _StarPMIPFailureReason_Type(Integer32):
    """Custom type starPMIPFailureReason based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("heartbeatrsprestartchange", 1),
          ("noresponsefrompeer", 2),
          ("unknown", 0))
    )


_StarPMIPFailureReason_Type.__name__ = "Integer32"
_StarPMIPFailureReason_Object = MibScalar
starPMIPFailureReason = _StarPMIPFailureReason_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 115),
    _StarPMIPFailureReason_Type()
)
starPMIPFailureReason.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPMIPFailureReason.setStatus("current")
_StarMMEInitialDisallowReason_Type = DisplayString
_StarMMEInitialDisallowReason_Object = MibScalar
starMMEInitialDisallowReason = _StarMMEInitialDisallowReason_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 116),
    _StarMMEInitialDisallowReason_Type()
)
starMMEInitialDisallowReason.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starMMEInitialDisallowReason.setStatus("current")
_StarSLSServiceVpnName_Type = DisplayString
_StarSLSServiceVpnName_Object = MibScalar
starSLSServiceVpnName = _StarSLSServiceVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 117),
    _StarSLSServiceVpnName_Type()
)
starSLSServiceVpnName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSLSServiceVpnName.setStatus("current")
_StarSLSServiceServName_Type = DisplayString
_StarSLSServiceServName_Object = MibScalar
starSLSServiceServName = _StarSLSServiceServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 118),
    _StarSLSServiceServName_Type()
)
starSLSServiceServName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSLSServiceServName.setStatus("current")


class _StarESMLCId_Type(Integer32):
    """Custom type starESMLCId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StarESMLCId_Type.__name__ = "Integer32"
_StarESMLCId_Object = MibScalar
starESMLCId = _StarESMLCId_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 119),
    _StarESMLCId_Type()
)
starESMLCId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starESMLCId.setStatus("current")
_StarESMLCIpAddr1_Type = IpAddress
_StarESMLCIpAddr1_Object = MibScalar
starESMLCIpAddr1 = _StarESMLCIpAddr1_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 120),
    _StarESMLCIpAddr1_Type()
)
starESMLCIpAddr1.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starESMLCIpAddr1.setStatus("current")
_StarESMLCIpAddr2_Type = IpAddress
_StarESMLCIpAddr2_Object = MibScalar
starESMLCIpAddr2 = _StarESMLCIpAddr2_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 121),
    _StarESMLCIpAddr2_Type()
)
starESMLCIpAddr2.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starESMLCIpAddr2.setStatus("current")


class _StarESMLCPortNum_Type(Integer32):
    """Custom type starESMLCPortNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_StarESMLCPortNum_Type.__name__ = "Integer32"
_StarESMLCPortNum_Object = MibScalar
starESMLCPortNum = _StarESMLCPortNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 122),
    _StarESMLCPortNum_Type()
)
starESMLCPortNum.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starESMLCPortNum.setStatus("current")
_StarSBCServiceVpnName_Type = DisplayString
_StarSBCServiceVpnName_Object = MibScalar
starSBCServiceVpnName = _StarSBCServiceVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 123),
    _StarSBCServiceVpnName_Type()
)
starSBCServiceVpnName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSBCServiceVpnName.setStatus("current")
_StarSBCServiceServName_Type = DisplayString
_StarSBCServiceServName_Object = MibScalar
starSBCServiceServName = _StarSBCServiceServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 124),
    _StarSBCServiceServName_Type()
)
starSBCServiceServName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSBCServiceServName.setStatus("current")


class _StarPeerId_Type(Integer32):
    """Custom type starPeerId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StarPeerId_Type.__name__ = "Integer32"
_StarPeerId_Object = MibScalar
starPeerId = _StarPeerId_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 125),
    _StarPeerId_Type()
)
starPeerId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPeerId.setStatus("current")
_StarPeerIpAddr_Type = IpAddress
_StarPeerIpAddr_Object = MibScalar
starPeerIpAddr = _StarPeerIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 126),
    _StarPeerIpAddr_Type()
)
starPeerIpAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPeerIpAddr.setStatus("current")


class _StarPeerPortNum_Type(Integer32):
    """Custom type starPeerPortNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_StarPeerPortNum_Type.__name__ = "Integer32"
_StarPeerPortNum_Object = MibScalar
starPeerPortNum = _StarPeerPortNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 127),
    _StarPeerPortNum_Type()
)
starPeerPortNum.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPeerPortNum.setStatus("current")
_StarBfdSrcAddressType_Type = InetAddressType
_StarBfdSrcAddressType_Object = MibScalar
starBfdSrcAddressType = _StarBfdSrcAddressType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 128),
    _StarBfdSrcAddressType_Type()
)
starBfdSrcAddressType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starBfdSrcAddressType.setStatus("current")
_StarBfdSrcAddress_Type = InetAddress
_StarBfdSrcAddress_Object = MibScalar
starBfdSrcAddress = _StarBfdSrcAddress_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 129),
    _StarBfdSrcAddress_Type()
)
starBfdSrcAddress.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starBfdSrcAddress.setStatus("current")
_StarBfdDstAddressType_Type = InetAddressType
_StarBfdDstAddressType_Object = MibScalar
starBfdDstAddressType = _StarBfdDstAddressType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 130),
    _StarBfdDstAddressType_Type()
)
starBfdDstAddressType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starBfdDstAddressType.setStatus("current")
_StarBfdDstAddress_Type = InetAddress
_StarBfdDstAddress_Object = MibScalar
starBfdDstAddress = _StarBfdDstAddress_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 131),
    _StarBfdDstAddress_Type()
)
starBfdDstAddress.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starBfdDstAddress.setStatus("current")
_StarBfdLocalDisc_Type = Unsigned32
_StarBfdLocalDisc_Object = MibScalar
starBfdLocalDisc = _StarBfdLocalDisc_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 132),
    _StarBfdLocalDisc_Type()
)
starBfdLocalDisc.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starBfdLocalDisc.setStatus("current")
_StarBfdRemDisc_Type = Unsigned32
_StarBfdRemDisc_Object = MibScalar
starBfdRemDisc = _StarBfdRemDisc_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 133),
    _StarBfdRemDisc_Type()
)
starBfdRemDisc.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starBfdRemDisc.setStatus("current")


class _StarBfdSessDiagCode_Type(Integer32):
    """Custom type starBfdSessDiagCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("administrativelyDown", 7),
          ("concatenatedPathDown", 6),
          ("controlDetectionTimeExpired", 1),
          ("echoFunctionFailed", 2),
          ("forwardingPlaneReset", 4),
          ("misConnectivityDefect", 9),
          ("neighborSignaledSessionDown", 3),
          ("noDiagnostic", 0),
          ("pathDown", 5),
          ("reverseConcatenatedPathDown", 8))
    )


_StarBfdSessDiagCode_Type.__name__ = "Integer32"
_StarBfdSessDiagCode_Object = MibScalar
starBfdSessDiagCode = _StarBfdSessDiagCode_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 134),
    _StarBfdSessDiagCode_Type()
)
starBfdSessDiagCode.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starBfdSessDiagCode.setStatus("current")


class _StarSRPSwitchReason_Type(Integer32):
    """Custom type starSRPSwitchReason based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("aaaFailure", 1),
          ("bfdFailure", 3),
          ("bgpFailure", 2),
          ("chassisChassisBfdFailure", 6),
          ("deadTimerExpiry", 9),
          ("diameterFailure", 4),
          ("dualActive", 7),
          ("dualStandby", 8),
          ("egqcFailure", 12),
          ("forceStateChange", 10),
          ("hsrpSwitchover", 5),
          ("manualSwitchOver", 11),
          ("notDefined", 0))
    )


_StarSRPSwitchReason_Type.__name__ = "Integer32"
_StarSRPSwitchReason_Object = MibScalar
starSRPSwitchReason = _StarSRPSwitchReason_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 135),
    _StarSRPSwitchReason_Type()
)
starSRPSwitchReason.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSRPSwitchReason.setStatus("current")
_StarHENBGWServiceTLRI_Type = Unsigned32
_StarHENBGWServiceTLRI_Object = MibScalar
starHENBGWServiceTLRI = _StarHENBGWServiceTLRI_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 136),
    _StarHENBGWServiceTLRI_Type()
)
starHENBGWServiceTLRI.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starHENBGWServiceTLRI.setStatus("current")
_StarCBSServiceVpnName_Type = DisplayString
_StarCBSServiceVpnName_Object = MibScalar
starCBSServiceVpnName = _StarCBSServiceVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 139),
    _StarCBSServiceVpnName_Type()
)
starCBSServiceVpnName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starCBSServiceVpnName.setStatus("current")


class _StarIuBcSelfPortNum_Type(Integer32):
    """Custom type starIuBcSelfPortNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_StarIuBcSelfPortNum_Type.__name__ = "Integer32"
_StarIuBcSelfPortNum_Object = MibScalar
starIuBcSelfPortNum = _StarIuBcSelfPortNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 140),
    _StarIuBcSelfPortNum_Type()
)
starIuBcSelfPortNum.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starIuBcSelfPortNum.setStatus("current")
_StarIuBcSelfIpAddr_Type = IpAddress
_StarIuBcSelfIpAddr_Object = MibScalar
starIuBcSelfIpAddr = _StarIuBcSelfIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 141),
    _StarIuBcSelfIpAddr_Type()
)
starIuBcSelfIpAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starIuBcSelfIpAddr.setStatus("current")


class _StarIuBcPeerPortNum_Type(Integer32):
    """Custom type starIuBcPeerPortNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_StarIuBcPeerPortNum_Type.__name__ = "Integer32"
_StarIuBcPeerPortNum_Object = MibScalar
starIuBcPeerPortNum = _StarIuBcPeerPortNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 142),
    _StarIuBcPeerPortNum_Type()
)
starIuBcPeerPortNum.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starIuBcPeerPortNum.setStatus("current")
_StarIuBcPeerIpAddr_Type = IpAddress
_StarIuBcPeerIpAddr_Object = MibScalar
starIuBcPeerIpAddr = _StarIuBcPeerIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 143),
    _StarIuBcPeerIpAddr_Type()
)
starIuBcPeerIpAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starIuBcPeerIpAddr.setStatus("current")
_StarIuBcTcpConnCauseStr_Type = DisplayString
_StarIuBcTcpConnCauseStr_Object = MibScalar
starIuBcTcpConnCauseStr = _StarIuBcTcpConnCauseStr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 144),
    _StarIuBcTcpConnCauseStr_Type()
)
starIuBcTcpConnCauseStr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starIuBcTcpConnCauseStr.setStatus("current")
_StarPhyPortId_Type = Integer32
_StarPhyPortId_Object = MibScalar
starPhyPortId = _StarPhyPortId_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 145),
    _StarPhyPortId_Type()
)
starPhyPortId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starPhyPortId.setStatus("current")
_StarGTPCRLFSessMgrInst_Type = Integer32
_StarGTPCRLFSessMgrInst_Object = MibScalar
starGTPCRLFSessMgrInst = _StarGTPCRLFSessMgrInst_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 146),
    _StarGTPCRLFSessMgrInst_Type()
)
starGTPCRLFSessMgrInst.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starGTPCRLFSessMgrInst.setStatus("current")
_StarGTPCRLFVPNName_Type = DisplayString
_StarGTPCRLFVPNName_Object = MibScalar
starGTPCRLFVPNName = _StarGTPCRLFVPNName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 147),
    _StarGTPCRLFVPNName_Type()
)
starGTPCRLFVPNName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starGTPCRLFVPNName.setStatus("current")
_StarGTPCRLFVPNId_Type = Integer32
_StarGTPCRLFVPNId_Object = MibScalar
starGTPCRLFVPNId = _StarGTPCRLFVPNId_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 148),
    _StarGTPCRLFVPNId_Type()
)
starGTPCRLFVPNId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starGTPCRLFVPNId.setStatus("current")
_StarGTPCRLFContextName_Type = DisplayString
_StarGTPCRLFContextName_Object = MibScalar
starGTPCRLFContextName = _StarGTPCRLFContextName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 149),
    _StarGTPCRLFContextName_Type()
)
starGTPCRLFContextName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starGTPCRLFContextName.setStatus("current")
_StarGTPCRLFCurrAppTPS_Type = Integer32
_StarGTPCRLFCurrAppTPS_Object = MibScalar
starGTPCRLFCurrAppTPS = _StarGTPCRLFCurrAppTPS_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 150),
    _StarGTPCRLFCurrAppTPS_Type()
)
starGTPCRLFCurrAppTPS.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starGTPCRLFCurrAppTPS.setStatus("current")
_StarGTPCRLFCurrAppDelayTol_Type = Integer32
_StarGTPCRLFCurrAppDelayTol_Object = MibScalar
starGTPCRLFCurrAppDelayTol = _StarGTPCRLFCurrAppDelayTol_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 151),
    _StarGTPCRLFCurrAppDelayTol_Type()
)
starGTPCRLFCurrAppDelayTol.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starGTPCRLFCurrAppDelayTol.setStatus("current")
_StarBGPPeerIpv6Address_Type = Ipv6Address
_StarBGPPeerIpv6Address_Object = MibScalar
starBGPPeerIpv6Address = _StarBGPPeerIpv6Address_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 152),
    _StarBGPPeerIpv6Address_Type()
)
starBGPPeerIpv6Address.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starBGPPeerIpv6Address.setStatus("current")
_StarMMEEMBMSServiceVpnName_Type = DisplayString
_StarMMEEMBMSServiceVpnName_Object = MibScalar
starMMEEMBMSServiceVpnName = _StarMMEEMBMSServiceVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 153),
    _StarMMEEMBMSServiceVpnName_Type()
)
starMMEEMBMSServiceVpnName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starMMEEMBMSServiceVpnName.setStatus("current")
_StarMMEEMBMSServiceServName_Type = DisplayString
_StarMMEEMBMSServiceServName_Object = MibScalar
starMMEEMBMSServiceServName = _StarMMEEMBMSServiceServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 154),
    _StarMMEEMBMSServiceServName_Type()
)
starMMEEMBMSServiceServName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starMMEEMBMSServiceServName.setStatus("current")


class _StarMMEEMBMSPeerId_Type(Integer32):
    """Custom type starMMEEMBMSPeerId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StarMMEEMBMSPeerId_Type.__name__ = "Integer32"
_StarMMEEMBMSPeerId_Object = MibScalar
starMMEEMBMSPeerId = _StarMMEEMBMSPeerId_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 155),
    _StarMMEEMBMSPeerId_Type()
)
starMMEEMBMSPeerId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starMMEEMBMSPeerId.setStatus("current")
_StarMMEEMBMSPeerIpAddr_Type = IpAddress
_StarMMEEMBMSPeerIpAddr_Object = MibScalar
starMMEEMBMSPeerIpAddr = _StarMMEEMBMSPeerIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 156),
    _StarMMEEMBMSPeerIpAddr_Type()
)
starMMEEMBMSPeerIpAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starMMEEMBMSPeerIpAddr.setStatus("current")


class _StarMMEEMBMSPeerPortNum_Type(Integer32):
    """Custom type starMMEEMBMSPeerPortNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_StarMMEEMBMSPeerPortNum_Type.__name__ = "Integer32"
_StarMMEEMBMSPeerPortNum_Object = MibScalar
starMMEEMBMSPeerPortNum = _StarMMEEMBMSPeerPortNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 157),
    _StarMMEEMBMSPeerPortNum_Type()
)
starMMEEMBMSPeerPortNum.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starMMEEMBMSPeerPortNum.setStatus("current")
_StarImsimgrInstId_Type = Integer32
_StarImsimgrInstId_Object = MibScalar
starImsimgrInstId = _StarImsimgrInstId_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 158),
    _StarImsimgrInstId_Type()
)
starImsimgrInstId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starImsimgrInstId.setStatus("current")


class _StarLAGGroup_Type(Integer32):
    """Custom type starLAGGroup based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 29),
    )


_StarLAGGroup_Type.__name__ = "Integer32"
_StarLAGGroup_Object = MibScalar
starLAGGroup = _StarLAGGroup_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 159),
    _StarLAGGroup_Type()
)
starLAGGroup.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starLAGGroup.setStatus("current")


class _StarLAGMinlink_Type(Integer32):
    """Custom type starLAGMinlink based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 29),
    )


_StarLAGMinlink_Type.__name__ = "Integer32"
_StarLAGMinlink_Object = MibScalar
starLAGMinlink = _StarLAGMinlink_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 160),
    _StarLAGMinlink_Type()
)
starLAGMinlink.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starLAGMinlink.setStatus("current")
_StarVRFName_Type = DisplayString
_StarVRFName_Object = MibScalar
starVRFName = _StarVRFName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 161),
    _StarVRFName_Type()
)
starVRFName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starVRFName.setStatus("current")


class _StarStatFilesizeLimit_Type(Integer32):
    """Custom type starStatFilesizeLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 29),
    )


_StarStatFilesizeLimit_Type.__name__ = "Integer32"
_StarStatFilesizeLimit_Object = MibScalar
starStatFilesizeLimit = _StarStatFilesizeLimit_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 162),
    _StarStatFilesizeLimit_Type()
)
starStatFilesizeLimit.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starStatFilesizeLimit.setStatus("current")


class _StarStatFilesizeMeasured_Type(Integer32):
    """Custom type starStatFilesizeMeasured based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 29),
    )


_StarStatFilesizeMeasured_Type.__name__ = "Integer32"
_StarStatFilesizeMeasured_Object = MibScalar
starStatFilesizeMeasured = _StarStatFilesizeMeasured_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 31, 163),
    _StarStatFilesizeMeasured_Type()
)
starStatFilesizeMeasured.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starStatFilesizeMeasured.setStatus("current")
_StarentGGSNService_ObjectIdentity = ObjectIdentity
starentGGSNService = _StarentGGSNService_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 32)
)
_StarGGSNSerTable_Object = MibTable
starGGSNSerTable = _StarGGSNSerTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 32, 1)
)
if mibBuilder.loadTexts:
    starGGSNSerTable.setStatus("current")
_StarGGSNSerEntry_Object = MibTableRow
starGGSNSerEntry = _StarGGSNSerEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 32, 1, 1)
)
starGGSNSerEntry.setIndexNames(
    (0, "STARENT-MIB", "starGGSNSerVpnID"),
    (0, "STARENT-MIB", "starGGSNSerSvcID"),
)
if mibBuilder.loadTexts:
    starGGSNSerEntry.setStatus("current")
_StarGGSNSerVpnID_Type = Gauge32
_StarGGSNSerVpnID_Object = MibTableColumn
starGGSNSerVpnID = _StarGGSNSerVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 32, 1, 1, 1),
    _StarGGSNSerVpnID_Type()
)
starGGSNSerVpnID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starGGSNSerVpnID.setStatus("current")
_StarGGSNSerSvcID_Type = Gauge32
_StarGGSNSerSvcID_Object = MibTableColumn
starGGSNSerSvcID = _StarGGSNSerSvcID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 32, 1, 1, 2),
    _StarGGSNSerSvcID_Type()
)
starGGSNSerSvcID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starGGSNSerSvcID.setStatus("current")
_StarSessGGSNVpnName_Type = DisplayString
_StarSessGGSNVpnName_Object = MibTableColumn
starSessGGSNVpnName = _StarSessGGSNVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 32, 1, 1, 3),
    _StarSessGGSNVpnName_Type()
)
starSessGGSNVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessGGSNVpnName.setStatus("current")
_StarSessGGSNServName_Type = DisplayString
_StarSessGGSNServName_Object = MibTableColumn
starSessGGSNServName = _StarSessGGSNServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 32, 1, 1, 4),
    _StarSessGGSNServName_Type()
)
starSessGGSNServName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessGGSNServName.setStatus("current")
_StarSessGGSNPeerPort_Type = Gauge32
_StarSessGGSNPeerPort_Object = MibTableColumn
starSessGGSNPeerPort = _StarSessGGSNPeerPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 32, 1, 1, 5),
    _StarSessGGSNPeerPort_Type()
)
starSessGGSNPeerPort.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSessGGSNPeerPort.setStatus("current")
_StarSessGGSNPeerAddr_Type = IpAddress
_StarSessGGSNPeerAddr_Object = MibTableColumn
starSessGGSNPeerAddr = _StarSessGGSNPeerAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 32, 1, 1, 6),
    _StarSessGGSNPeerAddr_Type()
)
starSessGGSNPeerAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessGGSNPeerAddr.setStatus("current")


class _StarSessGGSNImsi_Type(OctetString):
    """Custom type starSessGGSNImsi based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 8),
    )


_StarSessGGSNImsi_Type.__name__ = "OctetString"
_StarSessGGSNImsi_Object = MibTableColumn
starSessGGSNImsi = _StarSessGGSNImsi_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 32, 1, 1, 7),
    _StarSessGGSNImsi_Type()
)
starSessGGSNImsi.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSessGGSNImsi.setStatus("current")


class _StarSessGGSNSubsName_Type(OctetString):
    """Custom type starSessGGSNSubsName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_StarSessGGSNSubsName_Type.__name__ = "OctetString"
_StarSessGGSNSubsName_Object = MibTableColumn
starSessGGSNSubsName = _StarSessGGSNSubsName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 32, 1, 1, 8),
    _StarSessGGSNSubsName_Type()
)
starSessGGSNSubsName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSessGGSNSubsName.setStatus("current")


class _StarSessGGSNAPNName_Type(OctetString):
    """Custom type starSessGGSNAPNName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_StarSessGGSNAPNName_Type.__name__ = "OctetString"
_StarSessGGSNAPNName_Object = MibTableColumn
starSessGGSNAPNName = _StarSessGGSNAPNName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 32, 1, 1, 9),
    _StarSessGGSNAPNName_Type()
)
starSessGGSNAPNName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSessGGSNAPNName.setStatus("current")


class _StarSessGTPPGroupName_Type(OctetString):
    """Custom type starSessGTPPGroupName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_StarSessGTPPGroupName_Type.__name__ = "OctetString"
_StarSessGTPPGroupName_Object = MibTableColumn
starSessGTPPGroupName = _StarSessGTPPGroupName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 32, 1, 1, 10),
    _StarSessGTPPGroupName_Type()
)
starSessGTPPGroupName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSessGTPPGroupName.setStatus("current")
_StarentL2TP_ObjectIdentity = ObjectIdentity
starentL2TP = _StarentL2TP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 33)
)
_StarL2TPTable_Object = MibTable
starL2TPTable = _StarL2TPTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 33, 1)
)
if mibBuilder.loadTexts:
    starL2TPTable.setStatus("current")
_StarL2TPEntry_Object = MibTableRow
starL2TPEntry = _StarL2TPEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 33, 1, 1)
)
starL2TPEntry.setIndexNames(
    (0, "STARENT-MIB", "starL2TPLocalTunnelID"),
    (0, "STARENT-MIB", "starL2TPPeerTunnelID"),
)
if mibBuilder.loadTexts:
    starL2TPEntry.setStatus("current")
_StarL2TPLocalTunnelID_Type = Unsigned32
_StarL2TPLocalTunnelID_Object = MibTableColumn
starL2TPLocalTunnelID = _StarL2TPLocalTunnelID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 33, 1, 1, 1),
    _StarL2TPLocalTunnelID_Type()
)
starL2TPLocalTunnelID.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starL2TPLocalTunnelID.setStatus("current")
_StarL2TPPeerTunnelID_Type = Unsigned32
_StarL2TPPeerTunnelID_Object = MibTableColumn
starL2TPPeerTunnelID = _StarL2TPPeerTunnelID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 33, 1, 1, 2),
    _StarL2TPPeerTunnelID_Type()
)
starL2TPPeerTunnelID.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starL2TPPeerTunnelID.setStatus("current")
_StarL2TPContextName_Type = DisplayString
_StarL2TPContextName_Object = MibTableColumn
starL2TPContextName = _StarL2TPContextName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 33, 1, 1, 3),
    _StarL2TPContextName_Type()
)
starL2TPContextName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starL2TPContextName.setStatus("current")
_StarL2TPServiceName_Type = DisplayString
_StarL2TPServiceName_Object = MibTableColumn
starL2TPServiceName = _StarL2TPServiceName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 33, 1, 1, 4),
    _StarL2TPServiceName_Type()
)
starL2TPServiceName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starL2TPServiceName.setStatus("current")
_StarL2TPServiceTypeName_Type = DisplayString
_StarL2TPServiceTypeName_Object = MibTableColumn
starL2TPServiceTypeName = _StarL2TPServiceTypeName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 33, 1, 1, 5),
    _StarL2TPServiceTypeName_Type()
)
starL2TPServiceTypeName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starL2TPServiceTypeName.setStatus("current")
_StarL2TPLocalAddress_Type = IpAddress
_StarL2TPLocalAddress_Object = MibTableColumn
starL2TPLocalAddress = _StarL2TPLocalAddress_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 33, 1, 1, 6),
    _StarL2TPLocalAddress_Type()
)
starL2TPLocalAddress.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starL2TPLocalAddress.setStatus("current")
_StarL2TPPeerAddress_Type = IpAddress
_StarL2TPPeerAddress_Object = MibTableColumn
starL2TPPeerAddress = _StarL2TPPeerAddress_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 33, 1, 1, 7),
    _StarL2TPPeerAddress_Type()
)
starL2TPPeerAddress.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starL2TPPeerAddress.setStatus("current")
_StarSessSub1_ObjectIdentity = ObjectIdentity
starSessSub1 = _StarSessSub1_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34)
)
_StarSessSub1Context_Type = DisplayString
_StarSessSub1Context_Object = MibScalar
starSessSub1Context = _StarSessSub1Context_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 1),
    _StarSessSub1Context_Type()
)
starSessSub1Context.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    starSessSub1Context.setStatus("current")


class _StarSessSub1NAI_Type(OctetString):
    """Custom type starSessSub1NAI based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_StarSessSub1NAI_Type.__name__ = "OctetString"
_StarSessSub1NAI_Object = MibScalar
starSessSub1NAI = _StarSessSub1NAI_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 2),
    _StarSessSub1NAI_Type()
)
starSessSub1NAI.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    starSessSub1NAI.setStatus("current")


class _StarSessSub1MSID_Type(OctetString):
    """Custom type starSessSub1MSID based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_StarSessSub1MSID_Type.__name__ = "OctetString"
_StarSessSub1MSID_Object = MibScalar
starSessSub1MSID = _StarSessSub1MSID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 3),
    _StarSessSub1MSID_Type()
)
starSessSub1MSID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    starSessSub1MSID.setStatus("current")
_StarSessSub1IpAddr_Type = IpAddress
_StarSessSub1IpAddr_Object = MibScalar
starSessSub1IpAddr = _StarSessSub1IpAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 4),
    _StarSessSub1IpAddr_Type()
)
starSessSub1IpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    starSessSub1IpAddr.setStatus("current")


class _StarSessSub1LastResult_Type(Integer32):
    """Custom type starSessSub1LastResult based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("error", 1),
          ("multimatch", 4),
          ("nomatch", 2),
          ("onematch", 3),
          ("unknown", 0))
    )


_StarSessSub1LastResult_Type.__name__ = "Integer32"
_StarSessSub1LastResult_Object = MibScalar
starSessSub1LastResult = _StarSessSub1LastResult_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 5),
    _StarSessSub1LastResult_Type()
)
starSessSub1LastResult.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1LastResult.setStatus("current")


class _StarSessSub1ServiceName_Type(OctetString):
    """Custom type starSessSub1ServiceName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 63),
    )


_StarSessSub1ServiceName_Type.__name__ = "OctetString"
_StarSessSub1ServiceName_Object = MibScalar
starSessSub1ServiceName = _StarSessSub1ServiceName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 6),
    _StarSessSub1ServiceName_Type()
)
starSessSub1ServiceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1ServiceName.setStatus("current")
_StarSessSub1HAIpAddr_Type = IpAddress
_StarSessSub1HAIpAddr_Object = MibScalar
starSessSub1HAIpAddr = _StarSessSub1HAIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 7),
    _StarSessSub1HAIpAddr_Type()
)
starSessSub1HAIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1HAIpAddr.setStatus("current")
_StarSessSub1PeerIpAddr_Type = IpAddress
_StarSessSub1PeerIpAddr_Object = MibScalar
starSessSub1PeerIpAddr = _StarSessSub1PeerIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 8),
    _StarSessSub1PeerIpAddr_Type()
)
starSessSub1PeerIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1PeerIpAddr.setStatus("current")
_StarSessSub1InPackets_Type = Counter32
_StarSessSub1InPackets_Object = MibScalar
starSessSub1InPackets = _StarSessSub1InPackets_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 9),
    _StarSessSub1InPackets_Type()
)
starSessSub1InPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1InPackets.setStatus("current")
_StarSessSub1InPacketsDropped_Type = Counter32
_StarSessSub1InPacketsDropped_Object = MibScalar
starSessSub1InPacketsDropped = _StarSessSub1InPacketsDropped_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 10),
    _StarSessSub1InPacketsDropped_Type()
)
starSessSub1InPacketsDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1InPacketsDropped.setStatus("current")
_StarSessSub1InBytes_Type = Counter32
_StarSessSub1InBytes_Object = MibScalar
starSessSub1InBytes = _StarSessSub1InBytes_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 11),
    _StarSessSub1InBytes_Type()
)
starSessSub1InBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1InBytes.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1InBytes.setUnits("KB")
_StarSessSub1OutPackets_Type = Counter32
_StarSessSub1OutPackets_Object = MibScalar
starSessSub1OutPackets = _StarSessSub1OutPackets_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 12),
    _StarSessSub1OutPackets_Type()
)
starSessSub1OutPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1OutPackets.setStatus("current")
_StarSessSub1OutPacketsDropped_Type = Counter32
_StarSessSub1OutPacketsDropped_Object = MibScalar
starSessSub1OutPacketsDropped = _StarSessSub1OutPacketsDropped_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 13),
    _StarSessSub1OutPacketsDropped_Type()
)
starSessSub1OutPacketsDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1OutPacketsDropped.setStatus("current")
_StarSessSub1OutBytes_Type = Counter32
_StarSessSub1OutBytes_Object = MibScalar
starSessSub1OutBytes = _StarSessSub1OutBytes_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 14),
    _StarSessSub1OutBytes_Type()
)
starSessSub1OutBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1OutBytes.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1OutBytes.setUnits("KB")
_StarSessSub1Activity_Type = Gauge32
_StarSessSub1Activity_Object = MibScalar
starSessSub1Activity = _StarSessSub1Activity_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 15),
    _StarSessSub1Activity_Type()
)
starSessSub1Activity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1Activity.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1Activity.setUnits("%")


class _StarSessSub1State_Type(Integer32):
    """Custom type starSessSub1State based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("connected", 2),
          ("connecting", 1),
          ("disconnecting", 3),
          ("unknown", 0))
    )


_StarSessSub1State_Type.__name__ = "Integer32"
_StarSessSub1State_Object = MibScalar
starSessSub1State = _StarSessSub1State_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 16),
    _StarSessSub1State_Type()
)
starSessSub1State.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1State.setStatus("current")
_StarSessSub1CallID_Type = Integer32
_StarSessSub1CallID_Object = MibScalar
starSessSub1CallID = _StarSessSub1CallID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 17),
    _StarSessSub1CallID_Type()
)
starSessSub1CallID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1CallID.setStatus("current")
_StarSessSub1ConnectTime_Type = DateAndTime
_StarSessSub1ConnectTime_Object = MibScalar
starSessSub1ConnectTime = _StarSessSub1ConnectTime_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 18),
    _StarSessSub1ConnectTime_Type()
)
starSessSub1ConnectTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1ConnectTime.setStatus("current")
_StarSessSub1CallDuration_Type = Counter32
_StarSessSub1CallDuration_Object = MibScalar
starSessSub1CallDuration = _StarSessSub1CallDuration_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 19),
    _StarSessSub1CallDuration_Type()
)
starSessSub1CallDuration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1CallDuration.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1CallDuration.setUnits("Seconds")
_StarSessSub1TimeIdle_Type = Gauge32
_StarSessSub1TimeIdle_Object = MibScalar
starSessSub1TimeIdle = _StarSessSub1TimeIdle_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 20),
    _StarSessSub1TimeIdle_Type()
)
starSessSub1TimeIdle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1TimeIdle.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1TimeIdle.setUnits("Seconds")


class _StarSessSub1AccessType_Type(Integer32):
    """Custom type starSessSub1AccessType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16)
        )
    )
    namedValues = NamedValues(
        *(("ansgw", 16),
          ("bcmcs", 13),
          ("ggsnmip", 14),
          ("ggsnpdptypeipv4", 4),
          ("ggsnpdptypeipv6", 6),
          ("ggsnpdptypeppp", 5),
          ("haipsec", 8),
          ("hamobileip", 3),
          ("imsa", 12),
          ("ipprobe", 15),
          ("ipsg", 9),
          ("lnsl2tp", 7),
          ("mipproxyfa", 11),
          ("pdsnmobileip", 2),
          ("pdsnsimpleip", 1),
          ("pdsnsipmip", 10),
          ("unknown", 0))
    )


_StarSessSub1AccessType_Type.__name__ = "Integer32"
_StarSessSub1AccessType_Object = MibScalar
starSessSub1AccessType = _StarSessSub1AccessType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 21),
    _StarSessSub1AccessType_Type()
)
starSessSub1AccessType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1AccessType.setStatus("current")


class _StarSessSub1AccessTech_Type(Integer32):
    """Custom type starSessSub1AccessTech based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18)
        )
    )
    namedValues = NamedValues(
        *(("cdma1xrtt", 1),
          ("cdmaevdo", 2),
          ("cdmaevdoreva", 12),
          ("cdmaother", 3),
          ("ehrpd", 15),
          ("eutran", 16),
          ("gan", 17),
          ("gprsgeran", 5),
          ("gprsother", 6),
          ("hspa", 18),
          ("ipsg", 8),
          ("other", 11),
          ("pdif", 13),
          ("phs", 14),
          ("sip", 10),
          ("unknown", 0),
          ("wcdmautran", 4),
          ("wimax", 9),
          ("wirelesslan", 7))
    )


_StarSessSub1AccessTech_Type.__name__ = "Integer32"
_StarSessSub1AccessTech_Object = MibScalar
starSessSub1AccessTech = _StarSessSub1AccessTech_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 22),
    _StarSessSub1AccessTech_Type()
)
starSessSub1AccessTech.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1AccessTech.setStatus("current")


class _StarSessSub1LinkStatus_Type(Integer32):
    """Custom type starSessSub1LinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("dormant", 2),
          ("unknown", 0))
    )


_StarSessSub1LinkStatus_Type.__name__ = "Integer32"
_StarSessSub1LinkStatus_Object = MibScalar
starSessSub1LinkStatus = _StarSessSub1LinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 23),
    _StarSessSub1LinkStatus_Type()
)
starSessSub1LinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1LinkStatus.setStatus("current")


class _StarSessSub1NetworkType_Type(Integer32):
    """Custom type starSessSub1NetworkType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("gre", 6),
          ("ip", 1),
          ("ipinip", 5),
          ("ipv6inipv4", 7),
          ("l2tp", 3),
          ("mobileip", 2),
          ("proxymobileip", 4),
          ("unknown", 0))
    )


_StarSessSub1NetworkType_Type.__name__ = "Integer32"
_StarSessSub1NetworkType_Object = MibScalar
starSessSub1NetworkType = _StarSessSub1NetworkType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 24),
    _StarSessSub1NetworkType_Type()
)
starSessSub1NetworkType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1NetworkType.setStatus("current")


class _StarSessSub1CarrierID_Type(OctetString):
    """Custom type starSessSub1CarrierID based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_StarSessSub1CarrierID_Type.__name__ = "OctetString"
_StarSessSub1CarrierID_Object = MibScalar
starSessSub1CarrierID = _StarSessSub1CarrierID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 25),
    _StarSessSub1CarrierID_Type()
)
starSessSub1CarrierID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1CarrierID.setStatus("current")


class _StarSessSub1ESN_Type(OctetString):
    """Custom type starSessSub1ESN based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StarSessSub1ESN_Type.__name__ = "OctetString"
_StarSessSub1ESN_Object = MibScalar
starSessSub1ESN = _StarSessSub1ESN_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 26),
    _StarSessSub1ESN_Type()
)
starSessSub1ESN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1ESN.setStatus("current")
_StarSessSub1GMTTimezoneOffset_Type = Integer32
_StarSessSub1GMTTimezoneOffset_Object = MibScalar
starSessSub1GMTTimezoneOffset = _StarSessSub1GMTTimezoneOffset_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 27),
    _StarSessSub1GMTTimezoneOffset_Type()
)
starSessSub1GMTTimezoneOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1GMTTimezoneOffset.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1GMTTimezoneOffset.setUnits("Seconds")
_StarSessSub1SessMgr_Type = Unsigned32
_StarSessSub1SessMgr_Object = MibScalar
starSessSub1SessMgr = _StarSessSub1SessMgr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 28),
    _StarSessSub1SessMgr_Type()
)
starSessSub1SessMgr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1SessMgr.setStatus("current")
_StarSessSub1RemoteIPAddr_Type = IpAddress
_StarSessSub1RemoteIPAddr_Object = MibScalar
starSessSub1RemoteIPAddr = _StarSessSub1RemoteIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 29),
    _StarSessSub1RemoteIPAddr_Type()
)
starSessSub1RemoteIPAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1RemoteIPAddr.setStatus("current")


class _StarSessSub1Card_Type(Integer32):
    """Custom type starSessSub1Card based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_StarSessSub1Card_Type.__name__ = "Integer32"
_StarSessSub1Card_Object = MibScalar
starSessSub1Card = _StarSessSub1Card_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 30),
    _StarSessSub1Card_Type()
)
starSessSub1Card.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1Card.setStatus("current")


class _StarSessSub1CPU_Type(Integer32):
    """Custom type starSessSub1CPU based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_StarSessSub1CPU_Type.__name__ = "Integer32"
_StarSessSub1CPU_Object = MibScalar
starSessSub1CPU = _StarSessSub1CPU_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 31),
    _StarSessSub1CPU_Type()
)
starSessSub1CPU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1CPU.setStatus("current")
_StarSessSub1TimeIdleLeft_Type = Gauge32
_StarSessSub1TimeIdleLeft_Object = MibScalar
starSessSub1TimeIdleLeft = _StarSessSub1TimeIdleLeft_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 32),
    _StarSessSub1TimeIdleLeft_Type()
)
starSessSub1TimeIdleLeft.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1TimeIdleLeft.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1TimeIdleLeft.setUnits("Seconds")
_StarSessSub1TimeLeft_Type = Gauge32
_StarSessSub1TimeLeft_Object = MibScalar
starSessSub1TimeLeft = _StarSessSub1TimeLeft_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 33),
    _StarSessSub1TimeLeft_Type()
)
starSessSub1TimeLeft.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1TimeLeft.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1TimeLeft.setUnits("Seconds")
_StarSessSub1TimeLongDurLeft_Type = Gauge32
_StarSessSub1TimeLongDurLeft_Object = MibScalar
starSessSub1TimeLongDurLeft = _StarSessSub1TimeLongDurLeft_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 34),
    _StarSessSub1TimeLongDurLeft_Type()
)
starSessSub1TimeLongDurLeft.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1TimeLongDurLeft.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1TimeLongDurLeft.setUnits("Seconds")
_StarSessSub1LongDurAction_Type = StarLongDurTimeoutAction
_StarSessSub1LongDurAction_Object = MibScalar
starSessSub1LongDurAction = _StarSessSub1LongDurAction_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 35),
    _StarSessSub1LongDurAction_Type()
)
starSessSub1LongDurAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1LongDurAction.setStatus("current")


class _StarSessSub1AlwaysOn_Type(Integer32):
    """Custom type starSessSub1AlwaysOn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1),
          ("unknown", 0))
    )


_StarSessSub1AlwaysOn_Type.__name__ = "Integer32"
_StarSessSub1AlwaysOn_Object = MibScalar
starSessSub1AlwaysOn = _StarSessSub1AlwaysOn_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 36),
    _StarSessSub1AlwaysOn_Type()
)
starSessSub1AlwaysOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1AlwaysOn.setStatus("current")


class _StarSessSub1IPPoolName_Type(OctetString):
    """Custom type starSessSub1IPPoolName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_StarSessSub1IPPoolName_Type.__name__ = "OctetString"
_StarSessSub1IPPoolName_Object = MibScalar
starSessSub1IPPoolName = _StarSessSub1IPPoolName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 37),
    _StarSessSub1IPPoolName_Type()
)
starSessSub1IPPoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IPPoolName.setStatus("current")
_StarSessSub1VLANID_Type = Unsigned32
_StarSessSub1VLANID_Object = MibScalar
starSessSub1VLANID = _StarSessSub1VLANID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 38),
    _StarSessSub1VLANID_Type()
)
starSessSub1VLANID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1VLANID.setStatus("current")
_StarSessSub1LNSIPAddr_Type = IpAddress
_StarSessSub1LNSIPAddr_Object = MibScalar
starSessSub1LNSIPAddr = _StarSessSub1LNSIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 39),
    _StarSessSub1LNSIPAddr_Type()
)
starSessSub1LNSIPAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1LNSIPAddr.setStatus("current")


class _StarSessSub1ProxyMIP_Type(Integer32):
    """Custom type starSessSub1ProxyMIP based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1),
          ("unknown", 0))
    )


_StarSessSub1ProxyMIP_Type.__name__ = "Integer32"
_StarSessSub1ProxyMIP_Object = MibScalar
starSessSub1ProxyMIP = _StarSessSub1ProxyMIP_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 40),
    _StarSessSub1ProxyMIP_Type()
)
starSessSub1ProxyMIP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1ProxyMIP.setStatus("current")


class _StarSessSub1GGSNMIP_Type(Integer32):
    """Custom type starSessSub1GGSNMIP based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1),
          ("unknown", 0))
    )


_StarSessSub1GGSNMIP_Type.__name__ = "Integer32"
_StarSessSub1GGSNMIP_Object = MibScalar
starSessSub1GGSNMIP = _StarSessSub1GGSNMIP_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 41),
    _StarSessSub1GGSNMIP_Type()
)
starSessSub1GGSNMIP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1GGSNMIP.setStatus("current")
_StarSessSub1HomeAgentIpAddr_Type = IpAddress
_StarSessSub1HomeAgentIpAddr_Object = MibScalar
starSessSub1HomeAgentIpAddr = _StarSessSub1HomeAgentIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 42),
    _StarSessSub1HomeAgentIpAddr_Type()
)
starSessSub1HomeAgentIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1HomeAgentIpAddr.setStatus("current")
_StarSessSub1LocalIPAddr_Type = IpAddress
_StarSessSub1LocalIPAddr_Object = MibScalar
starSessSub1LocalIPAddr = _StarSessSub1LocalIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 43),
    _StarSessSub1LocalIPAddr_Type()
)
starSessSub1LocalIPAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1LocalIPAddr.setStatus("current")


class _StarSessSub1FAServiceName_Type(OctetString):
    """Custom type starSessSub1FAServiceName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 63),
    )


_StarSessSub1FAServiceName_Type.__name__ = "OctetString"
_StarSessSub1FAServiceName_Object = MibScalar
starSessSub1FAServiceName = _StarSessSub1FAServiceName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 44),
    _StarSessSub1FAServiceName_Type()
)
starSessSub1FAServiceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1FAServiceName.setStatus("current")
_StarSessSub1FAVPNName_Type = DisplayString
_StarSessSub1FAVPNName_Object = MibScalar
starSessSub1FAVPNName = _StarSessSub1FAVPNName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 45),
    _StarSessSub1FAVPNName_Type()
)
starSessSub1FAVPNName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1FAVPNName.setStatus("current")
_StarSessSub1SourceVPN_Type = DisplayString
_StarSessSub1SourceVPN_Object = MibScalar
starSessSub1SourceVPN = _StarSessSub1SourceVPN_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 46),
    _StarSessSub1SourceVPN_Type()
)
starSessSub1SourceVPN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1SourceVPN.setStatus("current")
_StarSessSub1DestVPN_Type = DisplayString
_StarSessSub1DestVPN_Object = MibScalar
starSessSub1DestVPN = _StarSessSub1DestVPN_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 47),
    _StarSessSub1DestVPN_Type()
)
starSessSub1DestVPN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1DestVPN.setStatus("current")
_StarSessSub1AAAVPN_Type = DisplayString
_StarSessSub1AAAVPN_Object = MibScalar
starSessSub1AAAVPN = _StarSessSub1AAAVPN_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 48),
    _StarSessSub1AAAVPN_Type()
)
starSessSub1AAAVPN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1AAAVPN.setStatus("current")
_StarSessSub1AAADomain_Type = DisplayString
_StarSessSub1AAADomain_Object = MibScalar
starSessSub1AAADomain = _StarSessSub1AAADomain_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 49),
    _StarSessSub1AAADomain_Type()
)
starSessSub1AAADomain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1AAADomain.setStatus("current")
_StarSessSub1AAAStart_Type = Counter32
_StarSessSub1AAAStart_Object = MibScalar
starSessSub1AAAStart = _StarSessSub1AAAStart_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 50),
    _StarSessSub1AAAStart_Type()
)
starSessSub1AAAStart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1AAAStart.setStatus("current")
_StarSessSub1AAAStop_Type = Counter32
_StarSessSub1AAAStop_Object = MibScalar
starSessSub1AAAStop = _StarSessSub1AAAStop_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 51),
    _StarSessSub1AAAStop_Type()
)
starSessSub1AAAStop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1AAAStop.setStatus("current")
_StarSessSub1AAAInterim_Type = Counter32
_StarSessSub1AAAInterim_Object = MibScalar
starSessSub1AAAInterim = _StarSessSub1AAAInterim_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 52),
    _StarSessSub1AAAInterim_Type()
)
starSessSub1AAAInterim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1AAAInterim.setStatus("current")


class _StarSessSub1AcctSessionID_Type(OctetString):
    """Custom type starSessSub1AcctSessionID based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 47),
    )


_StarSessSub1AcctSessionID_Type.__name__ = "OctetString"
_StarSessSub1AcctSessionID_Object = MibScalar
starSessSub1AcctSessionID = _StarSessSub1AcctSessionID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 53),
    _StarSessSub1AcctSessionID_Type()
)
starSessSub1AcctSessionID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1AcctSessionID.setStatus("current")


class _StarSessSub1AAARadiusGroup_Type(OctetString):
    """Custom type starSessSub1AAARadiusGroup based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_StarSessSub1AAARadiusGroup_Type.__name__ = "OctetString"
_StarSessSub1AAARadiusGroup_Object = MibScalar
starSessSub1AAARadiusGroup = _StarSessSub1AAARadiusGroup_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 54),
    _StarSessSub1AAARadiusGroup_Type()
)
starSessSub1AAARadiusGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1AAARadiusGroup.setStatus("current")
_StarSessSub1AAARadiusAuthServerIPAddr_Type = IpAddress
_StarSessSub1AAARadiusAuthServerIPAddr_Object = MibScalar
starSessSub1AAARadiusAuthServerIPAddr = _StarSessSub1AAARadiusAuthServerIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 55),
    _StarSessSub1AAARadiusAuthServerIPAddr_Type()
)
starSessSub1AAARadiusAuthServerIPAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1AAARadiusAuthServerIPAddr.setStatus("current")
_StarSessSub1AAARadiusAcctServerIPAddr_Type = IpAddress
_StarSessSub1AAARadiusAcctServerIPAddr_Object = MibScalar
starSessSub1AAARadiusAcctServerIPAddr = _StarSessSub1AAARadiusAcctServerIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 56),
    _StarSessSub1AAARadiusAcctServerIPAddr_Type()
)
starSessSub1AAARadiusAcctServerIPAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1AAARadiusAcctServerIPAddr.setStatus("current")
_StarSessSub1NASIPAddr_Type = IpAddress
_StarSessSub1NASIPAddr_Object = MibScalar
starSessSub1NASIPAddr = _StarSessSub1NASIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 57),
    _StarSessSub1NASIPAddr_Type()
)
starSessSub1NASIPAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1NASIPAddr.setStatus("current")
_StarSessSub1NexthopIPAddr_Type = IpAddress
_StarSessSub1NexthopIPAddr_Object = MibScalar
starSessSub1NexthopIPAddr = _StarSessSub1NexthopIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 58),
    _StarSessSub1NexthopIPAddr_Type()
)
starSessSub1NexthopIPAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1NexthopIPAddr.setStatus("current")


class _StarSessSub1ActiveInACL_Type(OctetString):
    """Custom type starSessSub1ActiveInACL based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 79),
    )


_StarSessSub1ActiveInACL_Type.__name__ = "OctetString"
_StarSessSub1ActiveInACL_Object = MibScalar
starSessSub1ActiveInACL = _StarSessSub1ActiveInACL_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 59),
    _StarSessSub1ActiveInACL_Type()
)
starSessSub1ActiveInACL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1ActiveInACL.setStatus("current")


class _StarSessSub1ActiveOutACL_Type(OctetString):
    """Custom type starSessSub1ActiveOutACL based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 79),
    )


_StarSessSub1ActiveOutACL_Type.__name__ = "OctetString"
_StarSessSub1ActiveOutACL_Object = MibScalar
starSessSub1ActiveOutACL = _StarSessSub1ActiveOutACL_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 60),
    _StarSessSub1ActiveOutACL_Type()
)
starSessSub1ActiveOutACL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1ActiveOutACL.setStatus("current")


class _StarSessSub1ECSRulebase_Type(OctetString):
    """Custom type starSessSub1ECSRulebase based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_StarSessSub1ECSRulebase_Type.__name__ = "OctetString"
_StarSessSub1ECSRulebase_Object = MibScalar
starSessSub1ECSRulebase = _StarSessSub1ECSRulebase_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 61),
    _StarSessSub1ECSRulebase_Type()
)
starSessSub1ECSRulebase.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1ECSRulebase.setStatus("current")


class _StarSessSub1InPlcyGrp_Type(OctetString):
    """Custom type starSessSub1InPlcyGrp based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StarSessSub1InPlcyGrp_Type.__name__ = "OctetString"
_StarSessSub1InPlcyGrp_Object = MibScalar
starSessSub1InPlcyGrp = _StarSessSub1InPlcyGrp_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 62),
    _StarSessSub1InPlcyGrp_Type()
)
starSessSub1InPlcyGrp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1InPlcyGrp.setStatus("current")


class _StarSessSub1OutPlcyGrp_Type(OctetString):
    """Custom type starSessSub1OutPlcyGrp based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StarSessSub1OutPlcyGrp_Type.__name__ = "OctetString"
_StarSessSub1OutPlcyGrp_Object = MibScalar
starSessSub1OutPlcyGrp = _StarSessSub1OutPlcyGrp_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 63),
    _StarSessSub1OutPlcyGrp_Type()
)
starSessSub1OutPlcyGrp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1OutPlcyGrp.setStatus("current")


class _StarSessSub1DownTrafPolState_Type(Integer32):
    """Custom type starSessSub1DownTrafPolState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1),
          ("unknown", 0))
    )


_StarSessSub1DownTrafPolState_Type.__name__ = "Integer32"
_StarSessSub1DownTrafPolState_Object = MibScalar
starSessSub1DownTrafPolState = _StarSessSub1DownTrafPolState_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 64),
    _StarSessSub1DownTrafPolState_Type()
)
starSessSub1DownTrafPolState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1DownTrafPolState.setStatus("current")
_StarSessSub1DownCommDataRate_Type = Unsigned32
_StarSessSub1DownCommDataRate_Object = MibScalar
starSessSub1DownCommDataRate = _StarSessSub1DownCommDataRate_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 65),
    _StarSessSub1DownCommDataRate_Type()
)
starSessSub1DownCommDataRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1DownCommDataRate.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1DownCommDataRate.setUnits("bps")
_StarSessSub1DownPeakDataRate_Type = Unsigned32
_StarSessSub1DownPeakDataRate_Object = MibScalar
starSessSub1DownPeakDataRate = _StarSessSub1DownPeakDataRate_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 66),
    _StarSessSub1DownPeakDataRate_Type()
)
starSessSub1DownPeakDataRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1DownPeakDataRate.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1DownPeakDataRate.setUnits("bps")
_StarSessSub1DownBurstSize_Type = Unsigned32
_StarSessSub1DownBurstSize_Object = MibScalar
starSessSub1DownBurstSize = _StarSessSub1DownBurstSize_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 67),
    _StarSessSub1DownBurstSize_Type()
)
starSessSub1DownBurstSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1DownBurstSize.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1DownBurstSize.setUnits("bytes")
_StarSessSub1DownExceedAction_Type = StarQOSTPAction
_StarSessSub1DownExceedAction_Object = MibScalar
starSessSub1DownExceedAction = _StarSessSub1DownExceedAction_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 68),
    _StarSessSub1DownExceedAction_Type()
)
starSessSub1DownExceedAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1DownExceedAction.setStatus("current")
_StarSessSub1DownViolateAction_Type = StarQOSTPAction
_StarSessSub1DownViolateAction_Object = MibScalar
starSessSub1DownViolateAction = _StarSessSub1DownViolateAction_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 69),
    _StarSessSub1DownViolateAction_Type()
)
starSessSub1DownViolateAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1DownViolateAction.setStatus("current")
_StarSessSub1DownExceed_Type = Counter32
_StarSessSub1DownExceed_Object = MibScalar
starSessSub1DownExceed = _StarSessSub1DownExceed_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 70),
    _StarSessSub1DownExceed_Type()
)
starSessSub1DownExceed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1DownExceed.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1DownExceed.setUnits("packets")
_StarSessSub1DownViolate_Type = Counter32
_StarSessSub1DownViolate_Object = MibScalar
starSessSub1DownViolate = _StarSessSub1DownViolate_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 71),
    _StarSessSub1DownViolate_Type()
)
starSessSub1DownViolate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1DownViolate.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1DownViolate.setUnits("packets")


class _StarSessSub1UpTrafPolState_Type(Integer32):
    """Custom type starSessSub1UpTrafPolState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1),
          ("unknown", 0))
    )


_StarSessSub1UpTrafPolState_Type.__name__ = "Integer32"
_StarSessSub1UpTrafPolState_Object = MibScalar
starSessSub1UpTrafPolState = _StarSessSub1UpTrafPolState_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 72),
    _StarSessSub1UpTrafPolState_Type()
)
starSessSub1UpTrafPolState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1UpTrafPolState.setStatus("current")
_StarSessSub1UpCommDataRate_Type = Unsigned32
_StarSessSub1UpCommDataRate_Object = MibScalar
starSessSub1UpCommDataRate = _StarSessSub1UpCommDataRate_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 73),
    _StarSessSub1UpCommDataRate_Type()
)
starSessSub1UpCommDataRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1UpCommDataRate.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1UpCommDataRate.setUnits("bps")
_StarSessSub1UpPeakDataRate_Type = Unsigned32
_StarSessSub1UpPeakDataRate_Object = MibScalar
starSessSub1UpPeakDataRate = _StarSessSub1UpPeakDataRate_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 74),
    _StarSessSub1UpPeakDataRate_Type()
)
starSessSub1UpPeakDataRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1UpPeakDataRate.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1UpPeakDataRate.setUnits("bps")
_StarSessSub1UpBurstSize_Type = Unsigned32
_StarSessSub1UpBurstSize_Object = MibScalar
starSessSub1UpBurstSize = _StarSessSub1UpBurstSize_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 75),
    _StarSessSub1UpBurstSize_Type()
)
starSessSub1UpBurstSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1UpBurstSize.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1UpBurstSize.setUnits("bytes")
_StarSessSub1UpExceedAction_Type = StarQOSTPAction
_StarSessSub1UpExceedAction_Object = MibScalar
starSessSub1UpExceedAction = _StarSessSub1UpExceedAction_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 76),
    _StarSessSub1UpExceedAction_Type()
)
starSessSub1UpExceedAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1UpExceedAction.setStatus("current")
_StarSessSub1UpViolateAction_Type = StarQOSTPAction
_StarSessSub1UpViolateAction_Object = MibScalar
starSessSub1UpViolateAction = _StarSessSub1UpViolateAction_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 77),
    _StarSessSub1UpViolateAction_Type()
)
starSessSub1UpViolateAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1UpViolateAction.setStatus("current")
_StarSessSub1UpExceed_Type = Counter32
_StarSessSub1UpExceed_Object = MibScalar
starSessSub1UpExceed = _StarSessSub1UpExceed_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 78),
    _StarSessSub1UpExceed_Type()
)
starSessSub1UpExceed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1UpExceed.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1UpExceed.setUnits("packets")
_StarSessSub1UpViolate_Type = Counter32
_StarSessSub1UpViolate_Object = MibScalar
starSessSub1UpViolate = _StarSessSub1UpViolate_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 79),
    _StarSessSub1UpViolate_Type()
)
starSessSub1UpViolate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1UpViolate.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1UpViolate.setUnits("packets")


class _StarSessSub1L3TunnelingState_Type(Integer32):
    """Custom type starSessSub1L3TunnelingState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1),
          ("unknown", 0))
    )


_StarSessSub1L3TunnelingState_Type.__name__ = "Integer32"
_StarSessSub1L3TunnelingState_Object = MibScalar
starSessSub1L3TunnelingState = _StarSessSub1L3TunnelingState_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 80),
    _StarSessSub1L3TunnelingState_Type()
)
starSessSub1L3TunnelingState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1L3TunnelingState.setStatus("current")
_StarSessSub1L3TunLocalIPAddr_Type = IpAddress
_StarSessSub1L3TunLocalIPAddr_Object = MibScalar
starSessSub1L3TunLocalIPAddr = _StarSessSub1L3TunLocalIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 81),
    _StarSessSub1L3TunLocalIPAddr_Type()
)
starSessSub1L3TunLocalIPAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1L3TunLocalIPAddr.setStatus("current")
_StarSessSub1L3TunRemoteIPAddr_Type = IpAddress
_StarSessSub1L3TunRemoteIPAddr_Object = MibScalar
starSessSub1L3TunRemoteIPAddr = _StarSessSub1L3TunRemoteIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 82),
    _StarSessSub1L3TunRemoteIPAddr_Type()
)
starSessSub1L3TunRemoteIPAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1L3TunRemoteIPAddr.setStatus("current")


class _StarSessSub1AddrViaDHCP_Type(Integer32):
    """Custom type starSessSub1AddrViaDHCP based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1),
          ("unknown", 0))
    )


_StarSessSub1AddrViaDHCP_Type.__name__ = "Integer32"
_StarSessSub1AddrViaDHCP_Object = MibScalar
starSessSub1AddrViaDHCP = _StarSessSub1AddrViaDHCP_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 83),
    _StarSessSub1AddrViaDHCP_Type()
)
starSessSub1AddrViaDHCP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1AddrViaDHCP.setStatus("current")


class _StarSessSub1DHCPServName_Type(OctetString):
    """Custom type starSessSub1DHCPServName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_StarSessSub1DHCPServName_Type.__name__ = "OctetString"
_StarSessSub1DHCPServName_Object = MibScalar
starSessSub1DHCPServName = _StarSessSub1DHCPServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 84),
    _StarSessSub1DHCPServName_Type()
)
starSessSub1DHCPServName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1DHCPServName.setStatus("current")
_StarSessSub1DHCPServIPAddr_Type = IpAddress
_StarSessSub1DHCPServIPAddr_Object = MibScalar
starSessSub1DHCPServIPAddr = _StarSessSub1DHCPServIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 85),
    _StarSessSub1DHCPServIPAddr_Type()
)
starSessSub1DHCPServIPAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1DHCPServIPAddr.setStatus("current")


class _StarSessSub1AccessLinkIPFrag_Type(Integer32):
    """Custom type starSessSub1AccessLinkIPFrag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("dffragandicmp", 3),
          ("dfignore", 2),
          ("normal", 1),
          ("unkwnown", 0))
    )


_StarSessSub1AccessLinkIPFrag_Type.__name__ = "Integer32"
_StarSessSub1AccessLinkIPFrag_Object = MibScalar
starSessSub1AccessLinkIPFrag = _StarSessSub1AccessLinkIPFrag_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 86),
    _StarSessSub1AccessLinkIPFrag_Type()
)
starSessSub1AccessLinkIPFrag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1AccessLinkIPFrag.setStatus("current")


class _StarSessSub1IgnoreDFBit_Type(Integer32):
    """Custom type starSessSub1IgnoreDFBit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabed", 1),
          ("unknown", 0))
    )


_StarSessSub1IgnoreDFBit_Type.__name__ = "Integer32"
_StarSessSub1IgnoreDFBit_Object = MibScalar
starSessSub1IgnoreDFBit = _StarSessSub1IgnoreDFBit_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 87),
    _StarSessSub1IgnoreDFBit_Type()
)
starSessSub1IgnoreDFBit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IgnoreDFBit.setStatus("current")


class _StarSessSub1MIPGratARPMode_Type(Integer32):
    """Custom type starSessSub1MIPGratARPMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("aggressive", 2),
          ("normal", 3),
          ("notapplicable", 1),
          ("unkwnown", 0))
    )


_StarSessSub1MIPGratARPMode_Type.__name__ = "Integer32"
_StarSessSub1MIPGratARPMode_Object = MibScalar
starSessSub1MIPGratARPMode = _StarSessSub1MIPGratARPMode_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 88),
    _StarSessSub1MIPGratARPMode_Type()
)
starSessSub1MIPGratARPMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1MIPGratARPMode.setStatus("current")


class _StarSessSub1ExtInlSrvrProc_Type(Integer32):
    """Custom type starSessSub1ExtInlSrvrProc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1),
          ("unknown", 0))
    )


_StarSessSub1ExtInlSrvrProc_Type.__name__ = "Integer32"
_StarSessSub1ExtInlSrvrProc_Object = MibScalar
starSessSub1ExtInlSrvrProc = _StarSessSub1ExtInlSrvrProc_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 89),
    _StarSessSub1ExtInlSrvrProc_Type()
)
starSessSub1ExtInlSrvrProc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1ExtInlSrvrProc.setStatus("current")
_StarSessSub1ExtInlSrvrIngrIPAddr_Type = IpAddress
_StarSessSub1ExtInlSrvrIngrIPAddr_Object = MibScalar
starSessSub1ExtInlSrvrIngrIPAddr = _StarSessSub1ExtInlSrvrIngrIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 90),
    _StarSessSub1ExtInlSrvrIngrIPAddr_Type()
)
starSessSub1ExtInlSrvrIngrIPAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1ExtInlSrvrIngrIPAddr.setStatus("current")
_StarSessSub1ExtInlSrvrIngrVLANTag_Type = Unsigned32
_StarSessSub1ExtInlSrvrIngrVLANTag_Object = MibScalar
starSessSub1ExtInlSrvrIngrVLANTag = _StarSessSub1ExtInlSrvrIngrVLANTag_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 91),
    _StarSessSub1ExtInlSrvrIngrVLANTag_Type()
)
starSessSub1ExtInlSrvrIngrVLANTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1ExtInlSrvrIngrVLANTag.setStatus("current")
_StarSessSub1ExtInlSrvrEgrIPAddr_Type = IpAddress
_StarSessSub1ExtInlSrvrEgrIPAddr_Object = MibScalar
starSessSub1ExtInlSrvrEgrIPAddr = _StarSessSub1ExtInlSrvrEgrIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 92),
    _StarSessSub1ExtInlSrvrEgrIPAddr_Type()
)
starSessSub1ExtInlSrvrEgrIPAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1ExtInlSrvrEgrIPAddr.setStatus("current")
_StarSessSub1ExtInlSrvrEgrVLANTag_Type = Unsigned32
_StarSessSub1ExtInlSrvrEgrVLANTag_Object = MibScalar
starSessSub1ExtInlSrvrEgrVLANTag = _StarSessSub1ExtInlSrvrEgrVLANTag_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 93),
    _StarSessSub1ExtInlSrvrEgrVLANTag_Type()
)
starSessSub1ExtInlSrvrEgrVLANTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1ExtInlSrvrEgrVLANTag.setStatus("current")
_StarSessSub1ExtInlSrvrVPNName_Type = DisplayString
_StarSessSub1ExtInlSrvrVPNName_Object = MibScalar
starSessSub1ExtInlSrvrVPNName = _StarSessSub1ExtInlSrvrVPNName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 94),
    _StarSessSub1ExtInlSrvrVPNName_Type()
)
starSessSub1ExtInlSrvrVPNName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1ExtInlSrvrVPNName.setStatus("current")


class _StarSessSub1RadAcctMode_Type(Integer32):
    """Custom type starSessSub1RadAcctMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("flowbasedall", 2),
          ("flowbasedaux", 1),
          ("flowbasednone", 3),
          ("sessionbased", 4),
          ("unknown", 0))
    )


_StarSessSub1RadAcctMode_Type.__name__ = "Integer32"
_StarSessSub1RadAcctMode_Object = MibScalar
starSessSub1RadAcctMode = _StarSessSub1RadAcctMode_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 95),
    _StarSessSub1RadAcctMode_Type()
)
starSessSub1RadAcctMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1RadAcctMode.setStatus("current")
_StarSessSub1InBytesDropped_Type = Counter32
_StarSessSub1InBytesDropped_Object = MibScalar
starSessSub1InBytesDropped = _StarSessSub1InBytesDropped_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 96),
    _StarSessSub1InBytesDropped_Type()
)
starSessSub1InBytesDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1InBytesDropped.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1InBytesDropped.setUnits("KB")
_StarSessSub1OutBytesDropped_Type = Counter32
_StarSessSub1OutBytesDropped_Object = MibScalar
starSessSub1OutBytesDropped = _StarSessSub1OutBytesDropped_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 97),
    _StarSessSub1OutBytesDropped_Type()
)
starSessSub1OutBytesDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1OutBytesDropped.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1OutBytesDropped.setUnits("KB")
_StarSessSub1PeakBPSTx_Type = Gauge32
_StarSessSub1PeakBPSTx_Object = MibScalar
starSessSub1PeakBPSTx = _StarSessSub1PeakBPSTx_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 98),
    _StarSessSub1PeakBPSTx_Type()
)
starSessSub1PeakBPSTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1PeakBPSTx.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1PeakBPSTx.setUnits("Bytes per second")
_StarSessSub1PeakBPSRx_Type = Gauge32
_StarSessSub1PeakBPSRx_Object = MibScalar
starSessSub1PeakBPSRx = _StarSessSub1PeakBPSRx_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 99),
    _StarSessSub1PeakBPSRx_Type()
)
starSessSub1PeakBPSRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1PeakBPSRx.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1PeakBPSRx.setUnits("Bytes per second")
_StarSessSub1AveBPSTx_Type = Gauge32
_StarSessSub1AveBPSTx_Object = MibScalar
starSessSub1AveBPSTx = _StarSessSub1AveBPSTx_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 100),
    _StarSessSub1AveBPSTx_Type()
)
starSessSub1AveBPSTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1AveBPSTx.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1AveBPSTx.setUnits("Bytes per second")
_StarSessSub1AveBPSRx_Type = Gauge32
_StarSessSub1AveBPSRx_Object = MibScalar
starSessSub1AveBPSRx = _StarSessSub1AveBPSRx_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 101),
    _StarSessSub1AveBPSRx_Type()
)
starSessSub1AveBPSRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1AveBPSRx.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1AveBPSRx.setUnits("Bytes per second")
_StarSessSub1SustBPSTx_Type = Gauge32
_StarSessSub1SustBPSTx_Object = MibScalar
starSessSub1SustBPSTx = _StarSessSub1SustBPSTx_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 102),
    _StarSessSub1SustBPSTx_Type()
)
starSessSub1SustBPSTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1SustBPSTx.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1SustBPSTx.setUnits("Bytes per second")
_StarSessSub1SustBPSRx_Type = Gauge32
_StarSessSub1SustBPSRx_Object = MibScalar
starSessSub1SustBPSRx = _StarSessSub1SustBPSRx_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 103),
    _StarSessSub1SustBPSRx_Type()
)
starSessSub1SustBPSRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1SustBPSRx.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1SustBPSRx.setUnits("Bytes per second")
_StarSessSub1PeakPPSTx_Type = Gauge32
_StarSessSub1PeakPPSTx_Object = MibScalar
starSessSub1PeakPPSTx = _StarSessSub1PeakPPSTx_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 104),
    _StarSessSub1PeakPPSTx_Type()
)
starSessSub1PeakPPSTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1PeakPPSTx.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1PeakPPSTx.setUnits("Packets per second")
_StarSessSub1PeakPPSRx_Type = Gauge32
_StarSessSub1PeakPPSRx_Object = MibScalar
starSessSub1PeakPPSRx = _StarSessSub1PeakPPSRx_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 105),
    _StarSessSub1PeakPPSRx_Type()
)
starSessSub1PeakPPSRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1PeakPPSRx.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1PeakPPSRx.setUnits("Packets per second")
_StarSessSub1AvePPSTx_Type = Gauge32
_StarSessSub1AvePPSTx_Object = MibScalar
starSessSub1AvePPSTx = _StarSessSub1AvePPSTx_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 106),
    _StarSessSub1AvePPSTx_Type()
)
starSessSub1AvePPSTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1AvePPSTx.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1AvePPSTx.setUnits("Packets per second")
_StarSessSub1AvePPSRx_Type = Gauge32
_StarSessSub1AvePPSRx_Object = MibScalar
starSessSub1AvePPSRx = _StarSessSub1AvePPSRx_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 107),
    _StarSessSub1AvePPSRx_Type()
)
starSessSub1AvePPSRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1AvePPSRx.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1AvePPSRx.setUnits("Packets per second")
_StarSessSub1SustPPSTx_Type = Gauge32
_StarSessSub1SustPPSTx_Object = MibScalar
starSessSub1SustPPSTx = _StarSessSub1SustPPSTx_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 108),
    _StarSessSub1SustPPSTx_Type()
)
starSessSub1SustPPSTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1SustPPSTx.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1SustPPSTx.setUnits("Packets per second")
_StarSessSub1SustPPSRx_Type = Gauge32
_StarSessSub1SustPPSRx_Object = MibScalar
starSessSub1SustPPSRx = _StarSessSub1SustPPSRx_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 109),
    _StarSessSub1SustPPSRx_Type()
)
starSessSub1SustPPSRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1SustPPSRx.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1SustPPSRx.setUnits("Packets per second")


class _StarSessSub1ActivePct_Type(Integer32):
    """Custom type starSessSub1ActivePct based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_StarSessSub1ActivePct_Type.__name__ = "Integer32"
_StarSessSub1ActivePct_Object = MibScalar
starSessSub1ActivePct = _StarSessSub1ActivePct_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 110),
    _StarSessSub1ActivePct_Type()
)
starSessSub1ActivePct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1ActivePct.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1ActivePct.setUnits("percent")
_StarSessSub1IPv4BadHdr_Type = Counter32
_StarSessSub1IPv4BadHdr_Object = MibScalar
starSessSub1IPv4BadHdr = _StarSessSub1IPv4BadHdr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 111),
    _StarSessSub1IPv4BadHdr_Type()
)
starSessSub1IPv4BadHdr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IPv4BadHdr.setStatus("current")
_StarSessSub1IPv4TtlExceeded_Type = Counter32
_StarSessSub1IPv4TtlExceeded_Object = MibScalar
starSessSub1IPv4TtlExceeded = _StarSessSub1IPv4TtlExceeded_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 112),
    _StarSessSub1IPv4TtlExceeded_Type()
)
starSessSub1IPv4TtlExceeded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IPv4TtlExceeded.setStatus("current")
_StarSessSub1IPv4FragSent_Type = Counter32
_StarSessSub1IPv4FragSent_Object = MibScalar
starSessSub1IPv4FragSent = _StarSessSub1IPv4FragSent_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 113),
    _StarSessSub1IPv4FragSent_Type()
)
starSessSub1IPv4FragSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IPv4FragSent.setStatus("current")
_StarSessSub1IPv4FragFail_Type = Counter32
_StarSessSub1IPv4FragFail_Object = MibScalar
starSessSub1IPv4FragFail = _StarSessSub1IPv4FragFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 114),
    _StarSessSub1IPv4FragFail_Type()
)
starSessSub1IPv4FragFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IPv4FragFail.setStatus("current")
_StarSessSub1IPv4InACLDrop_Type = Counter32
_StarSessSub1IPv4InACLDrop_Object = MibScalar
starSessSub1IPv4InACLDrop = _StarSessSub1IPv4InACLDrop_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 115),
    _StarSessSub1IPv4InACLDrop_Type()
)
starSessSub1IPv4InACLDrop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IPv4InACLDrop.setStatus("current")
_StarSessSub1IPv4OutACLDrop_Type = Counter32
_StarSessSub1IPv4OutACLDrop_Object = MibScalar
starSessSub1IPv4OutACLDrop = _StarSessSub1IPv4OutACLDrop_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 116),
    _StarSessSub1IPv4OutACLDrop_Type()
)
starSessSub1IPv4OutACLDrop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IPv4OutACLDrop.setStatus("current")
_StarSessSub1IPv4InCSSDownDrop_Type = Counter32
_StarSessSub1IPv4InCSSDownDrop_Object = MibScalar
starSessSub1IPv4InCSSDownDrop = _StarSessSub1IPv4InCSSDownDrop_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 117),
    _StarSessSub1IPv4InCSSDownDrop_Type()
)
starSessSub1IPv4InCSSDownDrop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IPv4InCSSDownDrop.setStatus("current")
_StarSessSub1IPv4OutCSSDownDrop_Type = Counter32
_StarSessSub1IPv4OutCSSDownDrop_Object = MibScalar
starSessSub1IPv4OutCSSDownDrop = _StarSessSub1IPv4OutCSSDownDrop_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 118),
    _StarSessSub1IPv4OutCSSDownDrop_Type()
)
starSessSub1IPv4OutCSSDownDrop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IPv4OutCSSDownDrop.setStatus("current")
_StarSessSub1IPv4OutXOFFDropPkt_Type = Counter32
_StarSessSub1IPv4OutXOFFDropPkt_Object = MibScalar
starSessSub1IPv4OutXOFFDropPkt = _StarSessSub1IPv4OutXOFFDropPkt_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 119),
    _StarSessSub1IPv4OutXOFFDropPkt_Type()
)
starSessSub1IPv4OutXOFFDropPkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IPv4OutXOFFDropPkt.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1IPv4OutXOFFDropPkt.setUnits("packets")
_StarSessSub1IPv4OutXOFFDropByte_Type = Counter32
_StarSessSub1IPv4OutXOFFDropByte_Object = MibScalar
starSessSub1IPv4OutXOFFDropByte = _StarSessSub1IPv4OutXOFFDropByte_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 120),
    _StarSessSub1IPv4OutXOFFDropByte_Type()
)
starSessSub1IPv4OutXOFFDropByte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IPv4OutXOFFDropByte.setStatus("current")
_StarSessSub1IPv4SrcViol_Type = Counter32
_StarSessSub1IPv4SrcViol_Object = MibScalar
starSessSub1IPv4SrcViol = _StarSessSub1IPv4SrcViol_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 121),
    _StarSessSub1IPv4SrcViol_Type()
)
starSessSub1IPv4SrcViol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IPv4SrcViol.setStatus("current")
_StarSessSub1IPv4ProxyDNSRedir_Type = Counter32
_StarSessSub1IPv4ProxyDNSRedir_Object = MibScalar
starSessSub1IPv4ProxyDNSRedir = _StarSessSub1IPv4ProxyDNSRedir_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 122),
    _StarSessSub1IPv4ProxyDNSRedir_Type()
)
starSessSub1IPv4ProxyDNSRedir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IPv4ProxyDNSRedir.setStatus("current")
_StarSessSub1IPv4SrcProxyDNSPThru_Type = Counter32
_StarSessSub1IPv4SrcProxyDNSPThru_Object = MibScalar
starSessSub1IPv4SrcProxyDNSPThru = _StarSessSub1IPv4SrcProxyDNSPThru_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 123),
    _StarSessSub1IPv4SrcProxyDNSPThru_Type()
)
starSessSub1IPv4SrcProxyDNSPThru.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IPv4SrcProxyDNSPThru.setStatus("current")
_StarSessSub1IPv4ProxyDNSDrop_Type = Counter32
_StarSessSub1IPv4ProxyDNSDrop_Object = MibScalar
starSessSub1IPv4ProxyDNSDrop = _StarSessSub1IPv4ProxyDNSDrop_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 124),
    _StarSessSub1IPv4ProxyDNSDrop_Type()
)
starSessSub1IPv4ProxyDNSDrop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IPv4ProxyDNSDrop.setStatus("current")
_StarSessSub1IPv4SrcViolNoAcct_Type = Counter32
_StarSessSub1IPv4SrcViolNoAcct_Object = MibScalar
starSessSub1IPv4SrcViolNoAcct = _StarSessSub1IPv4SrcViolNoAcct_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 125),
    _StarSessSub1IPv4SrcViolNoAcct_Type()
)
starSessSub1IPv4SrcViolNoAcct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IPv4SrcViolNoAcct.setStatus("current")
_StarSessSub1IPv4SrcViolIgnored_Type = Counter32
_StarSessSub1IPv4SrcViolIgnored_Object = MibScalar
starSessSub1IPv4SrcViolIgnored = _StarSessSub1IPv4SrcViolIgnored_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 126),
    _StarSessSub1IPv4SrcViolIgnored_Type()
)
starSessSub1IPv4SrcViolIgnored.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IPv4SrcViolIgnored.setStatus("current")
_StarSessSub1ExtInlSrvrTxPkt_Type = Counter32
_StarSessSub1ExtInlSrvrTxPkt_Object = MibScalar
starSessSub1ExtInlSrvrTxPkt = _StarSessSub1ExtInlSrvrTxPkt_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 127),
    _StarSessSub1ExtInlSrvrTxPkt_Type()
)
starSessSub1ExtInlSrvrTxPkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1ExtInlSrvrTxPkt.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1ExtInlSrvrTxPkt.setUnits("packets")
_StarSessSub1ExtInlSrvrRxPkt_Type = Counter32
_StarSessSub1ExtInlSrvrRxPkt_Object = MibScalar
starSessSub1ExtInlSrvrRxPkt = _StarSessSub1ExtInlSrvrRxPkt_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 128),
    _StarSessSub1ExtInlSrvrRxPkt_Type()
)
starSessSub1ExtInlSrvrRxPkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1ExtInlSrvrRxPkt.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1ExtInlSrvrRxPkt.setUnits("packets")
_StarSessSub1IPv4ICMPDropPkt_Type = Counter32
_StarSessSub1IPv4ICMPDropPkt_Object = MibScalar
starSessSub1IPv4ICMPDropPkt = _StarSessSub1IPv4ICMPDropPkt_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 129),
    _StarSessSub1IPv4ICMPDropPkt_Type()
)
starSessSub1IPv4ICMPDropPkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IPv4ICMPDropPkt.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1IPv4ICMPDropPkt.setUnits("packets")


class _StarSessSub1TunnelType_Type(Integer32):
    """Custom type starSessSub1TunnelType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("ah", 4),
          ("esp", 6),
          ("gre", 7),
          ("ipinip", 5),
          ("l2tp", 3),
          ("none", 1),
          ("pptp", 2),
          ("unknown", 0))
    )


_StarSessSub1TunnelType_Type.__name__ = "Integer32"
_StarSessSub1TunnelType_Object = MibScalar
starSessSub1TunnelType = _StarSessSub1TunnelType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 130),
    _StarSessSub1TunnelType_Type()
)
starSessSub1TunnelType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1TunnelType.setStatus("current")
_StarSessSub1IPSECTunDownDropPkt_Type = Counter32
_StarSessSub1IPSECTunDownDropPkt_Object = MibScalar
starSessSub1IPSECTunDownDropPkt = _StarSessSub1IPSECTunDownDropPkt_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 131),
    _StarSessSub1IPSECTunDownDropPkt_Type()
)
starSessSub1IPSECTunDownDropPkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IPSECTunDownDropPkt.setStatus("current")
if mibBuilder.loadTexts:
    starSessSub1IPSECTunDownDropPkt.setUnits("packets")
_StarSessSub1IPSECFlowID_Type = Integer32
_StarSessSub1IPSECFlowID_Object = MibScalar
starSessSub1IPSECFlowID = _StarSessSub1IPSECFlowID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 132),
    _StarSessSub1IPSECFlowID_Type()
)
starSessSub1IPSECFlowID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IPSECFlowID.setStatus("current")
_StarSessSub1DormancyTotal_Type = Counter32
_StarSessSub1DormancyTotal_Object = MibScalar
starSessSub1DormancyTotal = _StarSessSub1DormancyTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 133),
    _StarSessSub1DormancyTotal_Type()
)
starSessSub1DormancyTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1DormancyTotal.setStatus("current")
_StarSessSub1HandoffTotal_Type = Counter32
_StarSessSub1HandoffTotal_Object = MibScalar
starSessSub1HandoffTotal = _StarSessSub1HandoffTotal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 134),
    _StarSessSub1HandoffTotal_Type()
)
starSessSub1HandoffTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1HandoffTotal.setStatus("current")
_StarSessSub1AccessFlows_Type = Gauge32
_StarSessSub1AccessFlows_Object = MibScalar
starSessSub1AccessFlows = _StarSessSub1AccessFlows_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 135),
    _StarSessSub1AccessFlows_Type()
)
starSessSub1AccessFlows.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1AccessFlows.setStatus("current")
_StarSessSub1TFT_Type = Gauge32
_StarSessSub1TFT_Object = MibScalar
starSessSub1TFT = _StarSessSub1TFT_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 136),
    _StarSessSub1TFT_Type()
)
starSessSub1TFT.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1TFT.setStatus("current")
_StarSessSub1NASPort_Type = Integer32
_StarSessSub1NASPort_Object = MibScalar
starSessSub1NASPort = _StarSessSub1NASPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 137),
    _StarSessSub1NASPort_Type()
)
starSessSub1NASPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1NASPort.setStatus("current")


class _StarSessSub1CorrID_Type(OctetString):
    """Custom type starSessSub1CorrID based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 47),
    )


_StarSessSub1CorrID_Type.__name__ = "OctetString"
_StarSessSub1CorrID_Object = MibScalar
starSessSub1CorrID = _StarSessSub1CorrID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 139),
    _StarSessSub1CorrID_Type()
)
starSessSub1CorrID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1CorrID.setStatus("current")
_StarSessSub1L2TPPeerIPAddr_Type = IpAddress
_StarSessSub1L2TPPeerIPAddr_Object = MibScalar
starSessSub1L2TPPeerIPAddr = _StarSessSub1L2TPPeerIPAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 140),
    _StarSessSub1L2TPPeerIPAddr_Type()
)
starSessSub1L2TPPeerIPAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1L2TPPeerIPAddr.setStatus("current")
_StarSessSub1IPv4EarlyPDURecv_Type = Counter32
_StarSessSub1IPv4EarlyPDURecv_Object = MibScalar
starSessSub1IPv4EarlyPDURecv = _StarSessSub1IPv4EarlyPDURecv_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 34, 141),
    _StarSessSub1IPv4EarlyPDURecv_Type()
)
starSessSub1IPv4EarlyPDURecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSub1IPv4EarlyPDURecv.setStatus("current")
_StarentNwReachServer_ObjectIdentity = ObjectIdentity
starentNwReachServer = _StarentNwReachServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 35)
)
_StarNwReachTable_Object = MibTable
starNwReachTable = _StarNwReachTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 35, 1)
)
if mibBuilder.loadTexts:
    starNwReachTable.setStatus("current")
_StarNwReachEntry_Object = MibTableRow
starNwReachEntry = _StarNwReachEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 35, 1, 1)
)
starNwReachEntry.setIndexNames(
    (0, "STARENT-MIB", "starNwReachName"),
)
if mibBuilder.loadTexts:
    starNwReachEntry.setStatus("current")


class _StarNwReachName_Type(OctetString):
    """Custom type starNwReachName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_StarNwReachName_Type.__name__ = "OctetString"
_StarNwReachName_Object = MibTableColumn
starNwReachName = _StarNwReachName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 35, 1, 1, 1),
    _StarNwReachName_Type()
)
starNwReachName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starNwReachName.setStatus("current")
_StarNwReachSrvrAddr_Type = IpAddress
_StarNwReachSrvrAddr_Object = MibTableColumn
starNwReachSrvrAddr = _StarNwReachSrvrAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 35, 1, 1, 2),
    _StarNwReachSrvrAddr_Type()
)
starNwReachSrvrAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starNwReachSrvrAddr.setStatus("current")
_StarentIPSEC_ObjectIdentity = ObjectIdentity
starentIPSEC = _StarentIPSEC_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 36)
)
_StarIPSECContextName_Type = DisplayString
_StarIPSECContextName_Object = MibScalar
starIPSECContextName = _StarIPSECContextName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 36, 1),
    _StarIPSECContextName_Type()
)
starIPSECContextName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starIPSECContextName.setStatus("current")
_StarIPSECGroupName_Type = DisplayString
_StarIPSECGroupName_Object = MibScalar
starIPSECGroupName = _StarIPSECGroupName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 36, 2),
    _StarIPSECGroupName_Type()
)
starIPSECGroupName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starIPSECGroupName.setStatus("current")
_StarIPSECTunLocalIpAddr_Type = DisplayString
_StarIPSECTunLocalIpAddr_Object = MibScalar
starIPSECTunLocalIpAddr = _StarIPSECTunLocalIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 36, 3),
    _StarIPSECTunLocalIpAddr_Type()
)
starIPSECTunLocalIpAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starIPSECTunLocalIpAddr.setStatus("current")
_StarIPSECTunRemoteIpAddr_Type = DisplayString
_StarIPSECTunRemoteIpAddr_Object = MibScalar
starIPSECTunRemoteIpAddr = _StarIPSECTunRemoteIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 36, 4),
    _StarIPSECTunRemoteIpAddr_Type()
)
starIPSECTunRemoteIpAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starIPSECTunRemoteIpAddr.setStatus("current")
_StarIPSECPolicyName_Type = DisplayString
_StarIPSECPolicyName_Object = MibScalar
starIPSECPolicyName = _StarIPSECPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 36, 5),
    _StarIPSECPolicyName_Type()
)
starIPSECPolicyName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starIPSECPolicyName.setStatus("current")


class _StarIPSECDynPolicyType_Type(Integer32):
    """Custom type starIPSECDynPolicyType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("dynamic", 6),
          ("isakmp", 2),
          ("manual", 1),
          ("subscribertemplate", 3),
          ("subscribertunnel", 4),
          ("test", 5),
          ("unknown", 0))
    )


_StarIPSECDynPolicyType_Type.__name__ = "Integer32"
_StarIPSECDynPolicyType_Object = MibScalar
starIPSECDynPolicyType = _StarIPSECDynPolicyType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 36, 6),
    _StarIPSECDynPolicyType_Type()
)
starIPSECDynPolicyType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starIPSECDynPolicyType.setStatus("current")


class _StarIPSECDynPolicyPayloadType_Type(Integer32):
    """Custom type starIPSECDynPolicyPayloadType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("control", 1),
          ("data", 2),
          ("gre", 4),
          ("ipip", 3),
          ("test", 5),
          ("unknown", 0))
    )


_StarIPSECDynPolicyPayloadType_Type.__name__ = "Integer32"
_StarIPSECDynPolicyPayloadType_Object = MibScalar
starIPSECDynPolicyPayloadType = _StarIPSECDynPolicyPayloadType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 36, 7),
    _StarIPSECDynPolicyPayloadType_Type()
)
starIPSECDynPolicyPayloadType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starIPSECDynPolicyPayloadType.setStatus("current")
_StarIPSECLocalGateway_Type = IpAddress
_StarIPSECLocalGateway_Object = MibScalar
starIPSECLocalGateway = _StarIPSECLocalGateway_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 36, 8),
    _StarIPSECLocalGateway_Type()
)
starIPSECLocalGateway.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starIPSECLocalGateway.setStatus("current")
_StarIPSECRemoteGateway_Type = IpAddress
_StarIPSECRemoteGateway_Object = MibScalar
starIPSECRemoteGateway = _StarIPSECRemoteGateway_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 36, 9),
    _StarIPSECRemoteGateway_Type()
)
starIPSECRemoteGateway.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starIPSECRemoteGateway.setStatus("current")
_StarentSIPRoute_ObjectIdentity = ObjectIdentity
starentSIPRoute = _StarentSIPRoute_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 37)
)
_StarSIPRouteTable_Object = MibTable
starSIPRouteTable = _StarSIPRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 37, 1)
)
if mibBuilder.loadTexts:
    starSIPRouteTable.setStatus("current")
_StarSIPRouteEntry_Object = MibTableRow
starSIPRouteEntry = _StarSIPRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 37, 1, 1)
)
starSIPRouteEntry.setIndexNames(
    (0, "STARENT-MIB", "starSIPRouteVpnID"),
)
if mibBuilder.loadTexts:
    starSIPRouteEntry.setStatus("current")
_StarSIPRouteVpnID_Type = Gauge32
_StarSIPRouteVpnID_Object = MibTableColumn
starSIPRouteVpnID = _StarSIPRouteVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 37, 1, 1, 1),
    _StarSIPRouteVpnID_Type()
)
starSIPRouteVpnID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starSIPRouteVpnID.setStatus("current")
_StarSIPRouteVpnName_Type = DisplayString
_StarSIPRouteVpnName_Object = MibTableColumn
starSIPRouteVpnName = _StarSIPRouteVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 37, 1, 1, 2),
    _StarSIPRouteVpnName_Type()
)
starSIPRouteVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSIPRouteVpnName.setStatus("current")
_StarSIPRouteVmgName_Type = DisplayString
_StarSIPRouteVmgName_Object = MibTableColumn
starSIPRouteVmgName = _StarSIPRouteVmgName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 37, 1, 1, 3),
    _StarSIPRouteVmgName_Type()
)
starSIPRouteVmgName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSIPRouteVmgName.setStatus("current")
_StarSIPRouteAsName_Type = DisplayString
_StarSIPRouteAsName_Object = MibTableColumn
starSIPRouteAsName = _StarSIPRouteAsName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 37, 1, 1, 4),
    _StarSIPRouteAsName_Type()
)
starSIPRouteAsName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSIPRouteAsName.setStatus("current")
_StarSIPRouteDestPartyNum_Type = DisplayString
_StarSIPRouteDestPartyNum_Object = MibTableColumn
starSIPRouteDestPartyNum = _StarSIPRouteDestPartyNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 37, 1, 1, 5),
    _StarSIPRouteDestPartyNum_Type()
)
starSIPRouteDestPartyNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSIPRouteDestPartyNum.setStatus("current")
_StarSIPRouteReqNum_Type = DisplayString
_StarSIPRouteReqNum_Object = MibTableColumn
starSIPRouteReqNum = _StarSIPRouteReqNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 37, 1, 1, 6),
    _StarSIPRouteReqNum_Type()
)
starSIPRouteReqNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSIPRouteReqNum.setStatus("current")
_StarentRPServiceOption_ObjectIdentity = ObjectIdentity
starentRPServiceOption = _StarentRPServiceOption_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 38)
)
_StarRPServiceOptionTable_Object = MibTable
starRPServiceOptionTable = _StarRPServiceOptionTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 38, 1)
)
if mibBuilder.loadTexts:
    starRPServiceOptionTable.setStatus("current")
_StarRPServiceOptionEntry_Object = MibTableRow
starRPServiceOptionEntry = _StarRPServiceOptionEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 38, 1, 1)
)
starRPServiceOptionEntry.setIndexNames(
    (0, "STARENT-MIB", "starRPServiceOptionNum"),
)
if mibBuilder.loadTexts:
    starRPServiceOptionEntry.setStatus("current")


class _StarRPServiceOptionNum_Type(Integer32):
    """Custom type starRPServiceOptionNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_StarRPServiceOptionNum_Type.__name__ = "Integer32"
_StarRPServiceOptionNum_Object = MibTableColumn
starRPServiceOptionNum = _StarRPServiceOptionNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 38, 1, 1, 1),
    _StarRPServiceOptionNum_Type()
)
starRPServiceOptionNum.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starRPServiceOptionNum.setStatus("current")
_StarRPServiceOptionCalls_Type = Gauge32
_StarRPServiceOptionCalls_Object = MibTableColumn
starRPServiceOptionCalls = _StarRPServiceOptionCalls_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 38, 1, 1, 2),
    _StarRPServiceOptionCalls_Type()
)
starRPServiceOptionCalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starRPServiceOptionCalls.setStatus("current")
_StarentPCFStats_ObjectIdentity = ObjectIdentity
starentPCFStats = _StarentPCFStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39)
)
_StarPCFStatTable_Object = MibTable
starPCFStatTable = _StarPCFStatTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 1)
)
if mibBuilder.loadTexts:
    starPCFStatTable.setStatus("current")
_StarPCFStatEntry_Object = MibTableRow
starPCFStatEntry = _StarPCFStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 1, 1)
)
starPCFStatEntry.setIndexNames(
    (0, "STARENT-MIB", "starPCFStatVpnID"),
    (0, "STARENT-MIB", "starPCFStatIpAddr"),
)
if mibBuilder.loadTexts:
    starPCFStatEntry.setStatus("current")
_StarPCFStatVpnID_Type = Gauge32
_StarPCFStatVpnID_Object = MibTableColumn
starPCFStatVpnID = _StarPCFStatVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 1, 1, 1),
    _StarPCFStatVpnID_Type()
)
starPCFStatVpnID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starPCFStatVpnID.setStatus("current")
_StarPCFStatIpAddr_Type = IpAddress
_StarPCFStatIpAddr_Object = MibTableColumn
starPCFStatIpAddr = _StarPCFStatIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 1, 1, 2),
    _StarPCFStatIpAddr_Type()
)
starPCFStatIpAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starPCFStatIpAddr.setStatus("current")
_StarPCFStatVpnName_Type = DisplayString
_StarPCFStatVpnName_Object = MibTableColumn
starPCFStatVpnName = _StarPCFStatVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 1, 1, 3),
    _StarPCFStatVpnName_Type()
)
starPCFStatVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFStatVpnName.setStatus("current")
_StarPCFStatRxPkts_Type = Counter32
_StarPCFStatRxPkts_Object = MibTableColumn
starPCFStatRxPkts = _StarPCFStatRxPkts_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 1, 1, 4),
    _StarPCFStatRxPkts_Type()
)
starPCFStatRxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFStatRxPkts.setStatus("current")
if mibBuilder.loadTexts:
    starPCFStatRxPkts.setUnits("Millions")
_StarPCFStatTxPkts_Type = Counter32
_StarPCFStatTxPkts_Object = MibTableColumn
starPCFStatTxPkts = _StarPCFStatTxPkts_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 1, 1, 5),
    _StarPCFStatTxPkts_Type()
)
starPCFStatTxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFStatTxPkts.setStatus("current")
if mibBuilder.loadTexts:
    starPCFStatTxPkts.setUnits("Millions")
_StarPCFStatRxBytes_Type = Counter32
_StarPCFStatRxBytes_Object = MibTableColumn
starPCFStatRxBytes = _StarPCFStatRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 1, 1, 6),
    _StarPCFStatRxBytes_Type()
)
starPCFStatRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFStatRxBytes.setStatus("current")
if mibBuilder.loadTexts:
    starPCFStatRxBytes.setUnits("Megabytes")
_StarPCFStatTxBytes_Type = Counter32
_StarPCFStatTxBytes_Object = MibTableColumn
starPCFStatTxBytes = _StarPCFStatTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 1, 1, 7),
    _StarPCFStatTxBytes_Type()
)
starPCFStatTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFStatTxBytes.setStatus("current")
if mibBuilder.loadTexts:
    starPCFStatTxBytes.setUnits("Megabytes")
_StarPCFStatTotalSessions_Type = Counter32
_StarPCFStatTotalSessions_Object = MibTableColumn
starPCFStatTotalSessions = _StarPCFStatTotalSessions_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 1, 1, 8),
    _StarPCFStatTotalSessions_Type()
)
starPCFStatTotalSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFStatTotalSessions.setStatus("current")
_StarPCFStatCurrentSessions_Type = Gauge32
_StarPCFStatCurrentSessions_Object = MibTableColumn
starPCFStatCurrentSessions = _StarPCFStatCurrentSessions_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 1, 1, 9),
    _StarPCFStatCurrentSessions_Type()
)
starPCFStatCurrentSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFStatCurrentSessions.setStatus("current")
_StarPCFStatCurrentActiveSessions_Type = Gauge32
_StarPCFStatCurrentActiveSessions_Object = MibTableColumn
starPCFStatCurrentActiveSessions = _StarPCFStatCurrentActiveSessions_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 1, 1, 10),
    _StarPCFStatCurrentActiveSessions_Type()
)
starPCFStatCurrentActiveSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFStatCurrentActiveSessions.setStatus("current")
_StarPCFStatCurrentDormantSessions_Type = Gauge32
_StarPCFStatCurrentDormantSessions_Object = MibTableColumn
starPCFStatCurrentDormantSessions = _StarPCFStatCurrentDormantSessions_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 1, 1, 11),
    _StarPCFStatCurrentDormantSessions_Type()
)
starPCFStatCurrentDormantSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFStatCurrentDormantSessions.setStatus("current")
_StarPCFStatCurrentSIPConnected_Type = Gauge32
_StarPCFStatCurrentSIPConnected_Object = MibTableColumn
starPCFStatCurrentSIPConnected = _StarPCFStatCurrentSIPConnected_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 1, 1, 12),
    _StarPCFStatCurrentSIPConnected_Type()
)
starPCFStatCurrentSIPConnected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFStatCurrentSIPConnected.setStatus("current")
_StarPCFStatCurrentMIPConnected_Type = Gauge32
_StarPCFStatCurrentMIPConnected_Object = MibTableColumn
starPCFStatCurrentMIPConnected = _StarPCFStatCurrentMIPConnected_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 1, 1, 13),
    _StarPCFStatCurrentMIPConnected_Type()
)
starPCFStatCurrentMIPConnected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFStatCurrentMIPConnected.setStatus("current")
_StarPCFStatCurrentPMIPConnected_Type = Gauge32
_StarPCFStatCurrentPMIPConnected_Object = MibTableColumn
starPCFStatCurrentPMIPConnected = _StarPCFStatCurrentPMIPConnected_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 1, 1, 14),
    _StarPCFStatCurrentPMIPConnected_Type()
)
starPCFStatCurrentPMIPConnected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFStatCurrentPMIPConnected.setStatus("current")
_StarPCFStatCurrentL2TPLACConnected_Type = Gauge32
_StarPCFStatCurrentL2TPLACConnected_Object = MibTableColumn
starPCFStatCurrentL2TPLACConnected = _StarPCFStatCurrentL2TPLACConnected_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 1, 1, 15),
    _StarPCFStatCurrentL2TPLACConnected_Type()
)
starPCFStatCurrentL2TPLACConnected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFStatCurrentL2TPLACConnected.setStatus("current")
_StarPCFStatCurrentOtherConnected_Type = Gauge32
_StarPCFStatCurrentOtherConnected_Object = MibTableColumn
starPCFStatCurrentOtherConnected = _StarPCFStatCurrentOtherConnected_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 1, 1, 16),
    _StarPCFStatCurrentOtherConnected_Type()
)
starPCFStatCurrentOtherConnected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFStatCurrentOtherConnected.setStatus("current")
_StarPCFTable_Object = MibTable
starPCFTable = _StarPCFTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2)
)
if mibBuilder.loadTexts:
    starPCFTable.setStatus("current")
_StarPCFEntry_Object = MibTableRow
starPCFEntry = _StarPCFEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1)
)
starPCFEntry.setIndexNames(
    (0, "STARENT-MIB", "starPCFSvcID"),
    (0, "STARENT-MIB", "starPCFIpAddr"),
)
if mibBuilder.loadTexts:
    starPCFEntry.setStatus("current")
_StarPCFSvcID_Type = StarShortID
_StarPCFSvcID_Object = MibTableColumn
starPCFSvcID = _StarPCFSvcID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 1),
    _StarPCFSvcID_Type()
)
starPCFSvcID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starPCFSvcID.setStatus("current")
_StarPCFIpAddr_Type = IpAddress
_StarPCFIpAddr_Object = MibTableColumn
starPCFIpAddr = _StarPCFIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 2),
    _StarPCFIpAddr_Type()
)
starPCFIpAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starPCFIpAddr.setStatus("current")
_StarPCFVpnID_Type = Gauge32
_StarPCFVpnID_Object = MibTableColumn
starPCFVpnID = _StarPCFVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 3),
    _StarPCFVpnID_Type()
)
starPCFVpnID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFVpnID.setStatus("current")
_StarPCFVpnName_Type = DisplayString
_StarPCFVpnName_Object = MibTableColumn
starPCFVpnName = _StarPCFVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 4),
    _StarPCFVpnName_Type()
)
starPCFVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFVpnName.setStatus("current")
_StarPCFServName_Type = DisplayString
_StarPCFServName_Object = MibTableColumn
starPCFServName = _StarPCFServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 5),
    _StarPCFServName_Type()
)
starPCFServName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFServName.setStatus("current")
_StarPCFRrqRcvd_Type = Counter32
_StarPCFRrqRcvd_Object = MibTableColumn
starPCFRrqRcvd = _StarPCFRrqRcvd_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 6),
    _StarPCFRrqRcvd_Type()
)
starPCFRrqRcvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFRrqRcvd.setStatus("current")
_StarPCFRrqAccepted_Type = Counter32
_StarPCFRrqAccepted_Object = MibTableColumn
starPCFRrqAccepted = _StarPCFRrqAccepted_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 7),
    _StarPCFRrqAccepted_Type()
)
starPCFRrqAccepted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFRrqAccepted.setStatus("current")
_StarPCFRrqDenied_Type = Counter32
_StarPCFRrqDenied_Object = MibTableColumn
starPCFRrqDenied = _StarPCFRrqDenied_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 8),
    _StarPCFRrqDenied_Type()
)
starPCFRrqDenied.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFRrqDenied.setStatus("current")
_StarPCFRrqDiscarded_Type = Counter32
_StarPCFRrqDiscarded_Object = MibTableColumn
starPCFRrqDiscarded = _StarPCFRrqDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 9),
    _StarPCFRrqDiscarded_Type()
)
starPCFRrqDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFRrqDiscarded.setStatus("current")
_StarPCFInitialRrqRcvd_Type = Counter32
_StarPCFInitialRrqRcvd_Object = MibTableColumn
starPCFInitialRrqRcvd = _StarPCFInitialRrqRcvd_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 10),
    _StarPCFInitialRrqRcvd_Type()
)
starPCFInitialRrqRcvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFInitialRrqRcvd.setStatus("current")
_StarPCFInitialRrqAccepted_Type = Counter32
_StarPCFInitialRrqAccepted_Object = MibTableColumn
starPCFInitialRrqAccepted = _StarPCFInitialRrqAccepted_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 11),
    _StarPCFInitialRrqAccepted_Type()
)
starPCFInitialRrqAccepted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFInitialRrqAccepted.setStatus("current")
_StarPCFIntraPDSNActiveHORrqAccepted_Type = Counter32
_StarPCFIntraPDSNActiveHORrqAccepted_Object = MibTableColumn
starPCFIntraPDSNActiveHORrqAccepted = _StarPCFIntraPDSNActiveHORrqAccepted_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 12),
    _StarPCFIntraPDSNActiveHORrqAccepted_Type()
)
starPCFIntraPDSNActiveHORrqAccepted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFIntraPDSNActiveHORrqAccepted.setStatus("current")
_StarPCFIntraPDSNDormantHORrqAccepted_Type = Counter32
_StarPCFIntraPDSNDormantHORrqAccepted_Object = MibTableColumn
starPCFIntraPDSNDormantHORrqAccepted = _StarPCFIntraPDSNDormantHORrqAccepted_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 13),
    _StarPCFIntraPDSNDormantHORrqAccepted_Type()
)
starPCFIntraPDSNDormantHORrqAccepted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFIntraPDSNDormantHORrqAccepted.setStatus("current")
_StarPCFInterPDSNHORrqAccepted_Type = Counter32
_StarPCFInterPDSNHORrqAccepted_Object = MibTableColumn
starPCFInterPDSNHORrqAccepted = _StarPCFInterPDSNHORrqAccepted_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 14),
    _StarPCFInterPDSNHORrqAccepted_Type()
)
starPCFInterPDSNHORrqAccepted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFInterPDSNHORrqAccepted.setStatus("current")
_StarPCFInitialRrqDenied_Type = Counter32
_StarPCFInitialRrqDenied_Object = MibTableColumn
starPCFInitialRrqDenied = _StarPCFInitialRrqDenied_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 15),
    _StarPCFInitialRrqDenied_Type()
)
starPCFInitialRrqDenied.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFInitialRrqDenied.setStatus("current")
_StarPCFInitialRrqDiscarded_Type = Counter32
_StarPCFInitialRrqDiscarded_Object = MibTableColumn
starPCFInitialRrqDiscarded = _StarPCFInitialRrqDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 16),
    _StarPCFInitialRrqDiscarded_Type()
)
starPCFInitialRrqDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFInitialRrqDiscarded.setStatus("current")
_StarPCFRenewRrqRcvd_Type = Counter32
_StarPCFRenewRrqRcvd_Object = MibTableColumn
starPCFRenewRrqRcvd = _StarPCFRenewRrqRcvd_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 17),
    _StarPCFRenewRrqRcvd_Type()
)
starPCFRenewRrqRcvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFRenewRrqRcvd.setStatus("current")
_StarPCFRenewRrqAccepted_Type = Counter32
_StarPCFRenewRrqAccepted_Object = MibTableColumn
starPCFRenewRrqAccepted = _StarPCFRenewRrqAccepted_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 18),
    _StarPCFRenewRrqAccepted_Type()
)
starPCFRenewRrqAccepted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFRenewRrqAccepted.setStatus("current")
_StarPCFRenewActiveRrqAccepted_Type = Counter32
_StarPCFRenewActiveRrqAccepted_Object = MibTableColumn
starPCFRenewActiveRrqAccepted = _StarPCFRenewActiveRrqAccepted_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 19),
    _StarPCFRenewActiveRrqAccepted_Type()
)
starPCFRenewActiveRrqAccepted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFRenewActiveRrqAccepted.setStatus("current")
_StarPCFRenewDormantRrqAccepted_Type = Counter32
_StarPCFRenewDormantRrqAccepted_Object = MibTableColumn
starPCFRenewDormantRrqAccepted = _StarPCFRenewDormantRrqAccepted_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 20),
    _StarPCFRenewDormantRrqAccepted_Type()
)
starPCFRenewDormantRrqAccepted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFRenewDormantRrqAccepted.setStatus("current")
_StarPCFRenewRrqDenied_Type = Counter32
_StarPCFRenewRrqDenied_Object = MibTableColumn
starPCFRenewRrqDenied = _StarPCFRenewRrqDenied_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 21),
    _StarPCFRenewRrqDenied_Type()
)
starPCFRenewRrqDenied.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFRenewRrqDenied.setStatus("current")
_StarPCFRenewRrqDiscarded_Type = Counter32
_StarPCFRenewRrqDiscarded_Object = MibTableColumn
starPCFRenewRrqDiscarded = _StarPCFRenewRrqDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 22),
    _StarPCFRenewRrqDiscarded_Type()
)
starPCFRenewRrqDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFRenewRrqDiscarded.setStatus("current")
_StarPCFDeregRrqRcvd_Type = Counter32
_StarPCFDeregRrqRcvd_Object = MibTableColumn
starPCFDeregRrqRcvd = _StarPCFDeregRrqRcvd_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 23),
    _StarPCFDeregRrqRcvd_Type()
)
starPCFDeregRrqRcvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDeregRrqRcvd.setStatus("current")
_StarPCFDeregRrqAccepted_Type = Counter32
_StarPCFDeregRrqAccepted_Object = MibTableColumn
starPCFDeregRrqAccepted = _StarPCFDeregRrqAccepted_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 24),
    _StarPCFDeregRrqAccepted_Type()
)
starPCFDeregRrqAccepted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDeregRrqAccepted.setStatus("current")
_StarPCFDeregDormantRrqAccepted_Type = Counter32
_StarPCFDeregDormantRrqAccepted_Object = MibTableColumn
starPCFDeregDormantRrqAccepted = _StarPCFDeregDormantRrqAccepted_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 25),
    _StarPCFDeregDormantRrqAccepted_Type()
)
starPCFDeregDormantRrqAccepted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDeregDormantRrqAccepted.setStatus("current")
_StarPCFDeregRrqDenied_Type = Counter32
_StarPCFDeregRrqDenied_Object = MibTableColumn
starPCFDeregRrqDenied = _StarPCFDeregRrqDenied_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 26),
    _StarPCFDeregRrqDenied_Type()
)
starPCFDeregRrqDenied.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDeregRrqDenied.setStatus("current")
_StarPCFDeregRrqDiscarded_Type = Counter32
_StarPCFDeregRrqDiscarded_Object = MibTableColumn
starPCFDeregRrqDiscarded = _StarPCFDeregRrqDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 27),
    _StarPCFDeregRrqDiscarded_Type()
)
starPCFDeregRrqDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDeregRrqDiscarded.setStatus("current")
_StarPCFIntraPDSNActiveAnidHORrqAccepted_Type = Counter32
_StarPCFIntraPDSNActiveAnidHORrqAccepted_Object = MibTableColumn
starPCFIntraPDSNActiveAnidHORrqAccepted = _StarPCFIntraPDSNActiveAnidHORrqAccepted_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 28),
    _StarPCFIntraPDSNActiveAnidHORrqAccepted_Type()
)
starPCFIntraPDSNActiveAnidHORrqAccepted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFIntraPDSNActiveAnidHORrqAccepted.setStatus("current")
_StarPCFIntraPDSNDormantAnidHORrqAccepted_Type = Counter32
_StarPCFIntraPDSNDormantAnidHORrqAccepted_Object = MibTableColumn
starPCFIntraPDSNDormantAnidHORrqAccepted = _StarPCFIntraPDSNDormantAnidHORrqAccepted_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 29),
    _StarPCFIntraPDSNDormantAnidHORrqAccepted_Type()
)
starPCFIntraPDSNDormantAnidHORrqAccepted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFIntraPDSNDormantAnidHORrqAccepted.setStatus("current")
_StarPCFDeniedUnSpeReason_Type = Counter32
_StarPCFDeniedUnSpeReason_Object = MibTableColumn
starPCFDeniedUnSpeReason = _StarPCFDeniedUnSpeReason_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 30),
    _StarPCFDeniedUnSpeReason_Type()
)
starPCFDeniedUnSpeReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDeniedUnSpeReason.setStatus("current")
_StarPCFDeniedAdmProh_Type = Counter32
_StarPCFDeniedAdmProh_Object = MibTableColumn
starPCFDeniedAdmProh = _StarPCFDeniedAdmProh_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 31),
    _StarPCFDeniedAdmProh_Type()
)
starPCFDeniedAdmProh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDeniedAdmProh.setStatus("current")
_StarPCFDeniedInsufResource_Type = Counter32
_StarPCFDeniedInsufResource_Object = MibTableColumn
starPCFDeniedInsufResource = _StarPCFDeniedInsufResource_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 32),
    _StarPCFDeniedInsufResource_Type()
)
starPCFDeniedInsufResource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDeniedInsufResource.setStatus("current")
_StarPCFDeniedMobNodeAuthFail_Type = Counter32
_StarPCFDeniedMobNodeAuthFail_Object = MibTableColumn
starPCFDeniedMobNodeAuthFail = _StarPCFDeniedMobNodeAuthFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 33),
    _StarPCFDeniedMobNodeAuthFail_Type()
)
starPCFDeniedMobNodeAuthFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDeniedMobNodeAuthFail.setStatus("current")
_StarPCFDeniedIdentMismatch_Type = Counter32
_StarPCFDeniedIdentMismatch_Object = MibTableColumn
starPCFDeniedIdentMismatch = _StarPCFDeniedIdentMismatch_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 34),
    _StarPCFDeniedIdentMismatch_Type()
)
starPCFDeniedIdentMismatch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDeniedIdentMismatch.setStatus("current")
_StarPCFDeniedPoorFormedReq_Type = Counter32
_StarPCFDeniedPoorFormedReq_Object = MibTableColumn
starPCFDeniedPoorFormedReq = _StarPCFDeniedPoorFormedReq_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 35),
    _StarPCFDeniedPoorFormedReq_Type()
)
starPCFDeniedPoorFormedReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDeniedPoorFormedReq.setStatus("current")
_StarPCFDeniedUnknownPDSNAddr_Type = Counter32
_StarPCFDeniedUnknownPDSNAddr_Object = MibTableColumn
starPCFDeniedUnknownPDSNAddr = _StarPCFDeniedUnknownPDSNAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 36),
    _StarPCFDeniedUnknownPDSNAddr_Type()
)
starPCFDeniedUnknownPDSNAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDeniedUnknownPDSNAddr.setStatus("current")
_StarPCFDeniedRevTunnelUnavail_Type = Counter32
_StarPCFDeniedRevTunnelUnavail_Object = MibTableColumn
starPCFDeniedRevTunnelUnavail = _StarPCFDeniedRevTunnelUnavail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 37),
    _StarPCFDeniedRevTunnelUnavail_Type()
)
starPCFDeniedRevTunnelUnavail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDeniedRevTunnelUnavail.setStatus("current")
_StarPCFDeniedRevTunnelRequire_Type = Counter32
_StarPCFDeniedRevTunnelRequire_Object = MibTableColumn
starPCFDeniedRevTunnelRequire = _StarPCFDeniedRevTunnelRequire_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 38),
    _StarPCFDeniedRevTunnelRequire_Type()
)
starPCFDeniedRevTunnelRequire.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDeniedRevTunnelRequire.setStatus("current")
_StarPCFDeniedUnrecogVendorId_Type = Counter32
_StarPCFDeniedUnrecogVendorId_Object = MibTableColumn
starPCFDeniedUnrecogVendorId = _StarPCFDeniedUnrecogVendorId_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 39),
    _StarPCFDeniedUnrecogVendorId_Type()
)
starPCFDeniedUnrecogVendorId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDeniedUnrecogVendorId.setStatus("current")
_StarPCFDeniedSessionClosed_Type = Counter32
_StarPCFDeniedSessionClosed_Object = MibTableColumn
starPCFDeniedSessionClosed = _StarPCFDeniedSessionClosed_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 40),
    _StarPCFDeniedSessionClosed_Type()
)
starPCFDeniedSessionClosed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDeniedSessionClosed.setStatus("current")
_StarPCFDeniedBsnSessionInfoUnavail_Type = Counter32
_StarPCFDeniedBsnSessionInfoUnavail_Object = MibTableColumn
starPCFDeniedBsnSessionInfoUnavail = _StarPCFDeniedBsnSessionInfoUnavail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 41),
    _StarPCFDeniedBsnSessionInfoUnavail_Type()
)
starPCFDeniedBsnSessionInfoUnavail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDeniedBsnSessionInfoUnavail.setStatus("current")
_StarPCFRegUpdTransmitted_Type = Counter32
_StarPCFRegUpdTransmitted_Object = MibTableColumn
starPCFRegUpdTransmitted = _StarPCFRegUpdTransmitted_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 42),
    _StarPCFRegUpdTransmitted_Type()
)
starPCFRegUpdTransmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFRegUpdTransmitted.setStatus("current")
_StarPCFRegUpdAccepted_Type = Counter32
_StarPCFRegUpdAccepted_Object = MibTableColumn
starPCFRegUpdAccepted = _StarPCFRegUpdAccepted_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 43),
    _StarPCFRegUpdAccepted_Type()
)
starPCFRegUpdAccepted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFRegUpdAccepted.setStatus("current")
_StarPCFRegUpdateRpLifetimeExpiry_Type = Counter32
_StarPCFRegUpdateRpLifetimeExpiry_Object = MibTableColumn
starPCFRegUpdateRpLifetimeExpiry = _StarPCFRegUpdateRpLifetimeExpiry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 44),
    _StarPCFRegUpdateRpLifetimeExpiry_Type()
)
starPCFRegUpdateRpLifetimeExpiry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFRegUpdateRpLifetimeExpiry.setStatus("current")
_StarPCFRegUpdateUpperLayerIntiated_Type = Counter32
_StarPCFRegUpdateUpperLayerIntiated_Object = MibTableColumn
starPCFRegUpdateUpperLayerIntiated = _StarPCFRegUpdateUpperLayerIntiated_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 45),
    _StarPCFRegUpdateUpperLayerIntiated_Type()
)
starPCFRegUpdateUpperLayerIntiated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFRegUpdateUpperLayerIntiated.setStatus("current")
_StarPCFRegUpdateOtherReason_Type = Counter32
_StarPCFRegUpdateOtherReason_Object = MibTableColumn
starPCFRegUpdateOtherReason = _StarPCFRegUpdateOtherReason_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 46),
    _StarPCFRegUpdateOtherReason_Type()
)
starPCFRegUpdateOtherReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFRegUpdateOtherReason.setStatus("current")
_StarPCFRegUpdateHORelease_Type = Counter32
_StarPCFRegUpdateHORelease_Object = MibTableColumn
starPCFRegUpdateHORelease = _StarPCFRegUpdateHORelease_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 47),
    _StarPCFRegUpdateHORelease_Type()
)
starPCFRegUpdateHORelease.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFRegUpdateHORelease.setStatus("current")
_StarPCFRegUpdateSessmgrDied_Type = Counter32
_StarPCFRegUpdateSessmgrDied_Object = MibTableColumn
starPCFRegUpdateSessmgrDied = _StarPCFRegUpdateSessmgrDied_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 48),
    _StarPCFRegUpdateSessmgrDied_Type()
)
starPCFRegUpdateSessmgrDied.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFRegUpdateSessmgrDied.setStatus("current")
_StarPCFAuxA10ConnectionsSetup_Type = Counter32
_StarPCFAuxA10ConnectionsSetup_Object = MibTableColumn
starPCFAuxA10ConnectionsSetup = _StarPCFAuxA10ConnectionsSetup_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 49),
    _StarPCFAuxA10ConnectionsSetup_Type()
)
starPCFAuxA10ConnectionsSetup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFAuxA10ConnectionsSetup.setStatus("current")
_StarPCFSessionsDenied_Type = Counter32
_StarPCFSessionsDenied_Object = MibTableColumn
starPCFSessionsDenied = _StarPCFSessionsDenied_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 50),
    _StarPCFSessionsDenied_Type()
)
starPCFSessionsDenied.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFSessionsDenied.setStatus("current")
_StarPCFSessionsInit_Type = Counter32
_StarPCFSessionsInit_Object = MibTableColumn
starPCFSessionsInit = _StarPCFSessionsInit_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 51),
    _StarPCFSessionsInit_Type()
)
starPCFSessionsInit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFSessionsInit.setStatus("current")
_StarPCFSessionsReneg_Type = Counter32
_StarPCFSessionsReneg_Object = MibTableColumn
starPCFSessionsReneg = _StarPCFSessionsReneg_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 52),
    _StarPCFSessionsReneg_Type()
)
starPCFSessionsReneg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFSessionsReneg.setStatus("current")
_StarPCFDiscLcpRemote_Type = Counter32
_StarPCFDiscLcpRemote_Object = MibTableColumn
starPCFDiscLcpRemote = _StarPCFDiscLcpRemote_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 53),
    _StarPCFDiscLcpRemote_Type()
)
starPCFDiscLcpRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDiscLcpRemote.setStatus("current")
_StarPCFDiscRpRemote_Type = Counter32
_StarPCFDiscRpRemote_Object = MibTableColumn
starPCFDiscRpRemote = _StarPCFDiscRpRemote_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 54),
    _StarPCFDiscRpRemote_Type()
)
starPCFDiscRpRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDiscRpRemote.setStatus("current")
_StarPCFDiscRpLocal_Type = Counter32
_StarPCFDiscRpLocal_Object = MibTableColumn
starPCFDiscRpLocal = _StarPCFDiscRpLocal_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 55),
    _StarPCFDiscRpLocal_Type()
)
starPCFDiscRpLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDiscRpLocal.setStatus("current")
_StarPCFDiscMaxIpcpRetr_Type = Counter32
_StarPCFDiscMaxIpcpRetr_Object = MibTableColumn
starPCFDiscMaxIpcpRetr = _StarPCFDiscMaxIpcpRetr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 56),
    _StarPCFDiscMaxIpcpRetr_Type()
)
starPCFDiscMaxIpcpRetr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDiscMaxIpcpRetr.setStatus("current")
_StarPCFDiscMaxIpv6cpRetr_Type = Counter32
_StarPCFDiscMaxIpv6cpRetr_Object = MibTableColumn
starPCFDiscMaxIpv6cpRetr = _StarPCFDiscMaxIpv6cpRetr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 57),
    _StarPCFDiscMaxIpv6cpRetr_Type()
)
starPCFDiscMaxIpv6cpRetr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDiscMaxIpv6cpRetr.setStatus("current")
_StarPCFDiscMaxLcpRetr_Type = Counter32
_StarPCFDiscMaxLcpRetr_Object = MibTableColumn
starPCFDiscMaxLcpRetr = _StarPCFDiscMaxLcpRetr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 58),
    _StarPCFDiscMaxLcpRetr_Type()
)
starPCFDiscMaxLcpRetr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDiscMaxLcpRetr.setStatus("current")
_StarPCFDiscAuthFail_Type = Counter32
_StarPCFDiscAuthFail_Object = MibTableColumn
starPCFDiscAuthFail = _StarPCFDiscAuthFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 59),
    _StarPCFDiscAuthFail_Type()
)
starPCFDiscAuthFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDiscAuthFail.setStatus("current")
_StarPCFDiscSessSetupTimeout_Type = Counter32
_StarPCFDiscSessSetupTimeout_Object = MibTableColumn
starPCFDiscSessSetupTimeout = _StarPCFDiscSessSetupTimeout_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 60),
    _StarPCFDiscSessSetupTimeout_Type()
)
starPCFDiscSessSetupTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDiscSessSetupTimeout.setStatus("current")
_StarPCFDiscFlowAddFail_Type = Counter32
_StarPCFDiscFlowAddFail_Object = MibTableColumn
starPCFDiscFlowAddFail = _StarPCFDiscFlowAddFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 61),
    _StarPCFDiscFlowAddFail_Type()
)
starPCFDiscFlowAddFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDiscFlowAddFail.setStatus("current")
_StarPCFDiscInvDestContext_Type = Counter32
_StarPCFDiscInvDestContext_Object = MibTableColumn
starPCFDiscInvDestContext = _StarPCFDiscInvDestContext_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 62),
    _StarPCFDiscInvDestContext_Type()
)
starPCFDiscInvDestContext.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDiscInvDestContext.setStatus("current")
_StarPCFDiscLcpOptFail_Type = Counter32
_StarPCFDiscLcpOptFail_Object = MibTableColumn
starPCFDiscLcpOptFail = _StarPCFDiscLcpOptFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 63),
    _StarPCFDiscLcpOptFail_Type()
)
starPCFDiscLcpOptFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDiscLcpOptFail.setStatus("current")
_StarPCFDiscIpcpOptFail_Type = Counter32
_StarPCFDiscIpcpOptFail_Object = MibTableColumn
starPCFDiscIpcpOptFail = _StarPCFDiscIpcpOptFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 64),
    _StarPCFDiscIpcpOptFail_Type()
)
starPCFDiscIpcpOptFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDiscIpcpOptFail.setStatus("current")
_StarPCFDiscIpv6cpOptFail_Type = Counter32
_StarPCFDiscIpv6cpOptFail_Object = MibTableColumn
starPCFDiscIpv6cpOptFail = _StarPCFDiscIpv6cpOptFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 65),
    _StarPCFDiscIpv6cpOptFail_Type()
)
starPCFDiscIpv6cpOptFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDiscIpv6cpOptFail.setStatus("current")
_StarPCFDiscNoRemIpAddr_Type = Counter32
_StarPCFDiscNoRemIpAddr_Object = MibTableColumn
starPCFDiscNoRemIpAddr = _StarPCFDiscNoRemIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 66),
    _StarPCFDiscNoRemIpAddr_Type()
)
starPCFDiscNoRemIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDiscNoRemIpAddr.setStatus("current")
_StarPCFDiscDetectionFail_Type = Counter32
_StarPCFDiscDetectionFail_Object = MibTableColumn
starPCFDiscDetectionFail = _StarPCFDiscDetectionFail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 67),
    _StarPCFDiscDetectionFail_Type()
)
starPCFDiscDetectionFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDiscDetectionFail.setStatus("current")
_StarPCFDiscMisc_Type = Counter32
_StarPCFDiscMisc_Object = MibTableColumn
starPCFDiscMisc = _StarPCFDiscMisc_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 68),
    _StarPCFDiscMisc_Type()
)
starPCFDiscMisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFDiscMisc.setStatus("current")
_StarPCFCurrentSessions_Type = Gauge32
_StarPCFCurrentSessions_Object = MibTableColumn
starPCFCurrentSessions = _StarPCFCurrentSessions_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 69),
    _StarPCFCurrentSessions_Type()
)
starPCFCurrentSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFCurrentSessions.setStatus("current")
_StarPCFSessionsSetup_Type = Counter32
_StarPCFSessionsSetup_Object = MibTableColumn
starPCFSessionsSetup = _StarPCFSessionsSetup_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 70),
    _StarPCFSessionsSetup_Type()
)
starPCFSessionsSetup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFSessionsSetup.setStatus("current")
_StarPCFSessionsRelsese_Type = Counter32
_StarPCFSessionsRelsese_Object = MibTableColumn
starPCFSessionsRelsese = _StarPCFSessionsRelsese_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 71),
    _StarPCFSessionsRelsese_Type()
)
starPCFSessionsRelsese.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFSessionsRelsese.setStatus("current")
_StarPCFCurrentRevaSessions_Type = Gauge32
_StarPCFCurrentRevaSessions_Object = MibTableColumn
starPCFCurrentRevaSessions = _StarPCFCurrentRevaSessions_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 72),
    _StarPCFCurrentRevaSessions_Type()
)
starPCFCurrentRevaSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFCurrentRevaSessions.setStatus("current")
_StarPCFRevaSessionsSetup_Type = Counter32
_StarPCFRevaSessionsSetup_Object = MibTableColumn
starPCFRevaSessionsSetup = _StarPCFRevaSessionsSetup_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 73),
    _StarPCFRevaSessionsSetup_Type()
)
starPCFRevaSessionsSetup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFRevaSessionsSetup.setStatus("current")
_StarPCFRevaSessionsRelsese_Type = Counter32
_StarPCFRevaSessionsRelsese_Object = MibTableColumn
starPCFRevaSessionsRelsese = _StarPCFRevaSessionsRelsese_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 39, 2, 1, 74),
    _StarPCFRevaSessionsRelsese_Type()
)
starPCFRevaSessionsRelsese.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPCFRevaSessionsRelsese.setStatus("current")
_StarentSIPRouteServer_ObjectIdentity = ObjectIdentity
starentSIPRouteServer = _StarentSIPRouteServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 40)
)
_StarSIPRouteServerTable_Object = MibTable
starSIPRouteServerTable = _StarSIPRouteServerTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 40, 1)
)
if mibBuilder.loadTexts:
    starSIPRouteServerTable.setStatus("current")
_StarSIPRouteServerEntry_Object = MibTableRow
starSIPRouteServerEntry = _StarSIPRouteServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 40, 1, 1)
)
starSIPRouteServerEntry.setIndexNames(
    (0, "STARENT-MIB", "starSIPRouteServerVpnID"),
)
if mibBuilder.loadTexts:
    starSIPRouteServerEntry.setStatus("current")
_StarSIPRouteServerVpnID_Type = Gauge32
_StarSIPRouteServerVpnID_Object = MibTableColumn
starSIPRouteServerVpnID = _StarSIPRouteServerVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 40, 1, 1, 1),
    _StarSIPRouteServerVpnID_Type()
)
starSIPRouteServerVpnID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starSIPRouteServerVpnID.setStatus("current")
_StarSIPRouteServerVpnName_Type = DisplayString
_StarSIPRouteServerVpnName_Object = MibTableColumn
starSIPRouteServerVpnName = _StarSIPRouteServerVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 40, 1, 1, 2),
    _StarSIPRouteServerVpnName_Type()
)
starSIPRouteServerVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSIPRouteServerVpnName.setStatus("current")
_StarSIPRouteServerVmgName_Type = DisplayString
_StarSIPRouteServerVmgName_Object = MibTableColumn
starSIPRouteServerVmgName = _StarSIPRouteServerVmgName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 40, 1, 1, 3),
    _StarSIPRouteServerVmgName_Type()
)
starSIPRouteServerVmgName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSIPRouteServerVmgName.setStatus("current")
_StarSIPRouteServerAsName_Type = DisplayString
_StarSIPRouteServerAsName_Object = MibTableColumn
starSIPRouteServerAsName = _StarSIPRouteServerAsName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 40, 1, 1, 4),
    _StarSIPRouteServerAsName_Type()
)
starSIPRouteServerAsName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSIPRouteServerAsName.setStatus("current")
_StarSIPRouteServerIpAddr_Type = IpAddress
_StarSIPRouteServerIpAddr_Object = MibTableColumn
starSIPRouteServerIpAddr = _StarSIPRouteServerIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 40, 1, 1, 5),
    _StarSIPRouteServerIpAddr_Type()
)
starSIPRouteServerIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSIPRouteServerIpAddr.setStatus("current")
_StarentVIMService_ObjectIdentity = ObjectIdentity
starentVIMService = _StarentVIMService_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 41)
)
_StarVIMServiceTable_Object = MibTable
starVIMServiceTable = _StarVIMServiceTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 41, 1)
)
if mibBuilder.loadTexts:
    starVIMServiceTable.setStatus("current")
_StarVIMServiceEntry_Object = MibTableRow
starVIMServiceEntry = _StarVIMServiceEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 41, 1, 1)
)
starVIMServiceEntry.setIndexNames(
    (0, "STARENT-MIB", "starVIMServiceVpnID"),
    (0, "STARENT-MIB", "starVIMServiceInstanceId"),
)
if mibBuilder.loadTexts:
    starVIMServiceEntry.setStatus("current")
_StarVIMServiceVpnID_Type = Gauge32
_StarVIMServiceVpnID_Object = MibTableColumn
starVIMServiceVpnID = _StarVIMServiceVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 41, 1, 1, 1),
    _StarVIMServiceVpnID_Type()
)
starVIMServiceVpnID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starVIMServiceVpnID.setStatus("current")
_StarVIMServiceVpnName_Type = DisplayString
_StarVIMServiceVpnName_Object = MibTableColumn
starVIMServiceVpnName = _StarVIMServiceVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 41, 1, 1, 2),
    _StarVIMServiceVpnName_Type()
)
starVIMServiceVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starVIMServiceVpnName.setStatus("current")
_StarVIMServiceInstanceId_Type = Unsigned32
_StarVIMServiceInstanceId_Object = MibTableColumn
starVIMServiceInstanceId = _StarVIMServiceInstanceId_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 41, 1, 1, 3),
    _StarVIMServiceInstanceId_Type()
)
starVIMServiceInstanceId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starVIMServiceInstanceId.setStatus("current")
_StarVIMServiceFMDMaxCallRate_Type = Unsigned32
_StarVIMServiceFMDMaxCallRate_Object = MibTableColumn
starVIMServiceFMDMaxCallRate = _StarVIMServiceFMDMaxCallRate_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 41, 1, 1, 4),
    _StarVIMServiceFMDMaxCallRate_Type()
)
starVIMServiceFMDMaxCallRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starVIMServiceFMDMaxCallRate.setStatus("current")
if mibBuilder.loadTexts:
    starVIMServiceFMDMaxCallRate.setUnits("Calls per minute")
_StarVIMServiceFMDContinuousLoadCount_Type = Unsigned32
_StarVIMServiceFMDContinuousLoadCount_Object = MibTableColumn
starVIMServiceFMDContinuousLoadCount = _StarVIMServiceFMDContinuousLoadCount_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 41, 1, 1, 5),
    _StarVIMServiceFMDContinuousLoadCount_Type()
)
starVIMServiceFMDContinuousLoadCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starVIMServiceFMDContinuousLoadCount.setStatus("current")
_StarentGSS_ObjectIdentity = ObjectIdentity
starentGSS = _StarentGSS_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 42)
)
_StarGSSClusterName_Type = DisplayString
_StarGSSClusterName_Object = MibScalar
starGSSClusterName = _StarGSSClusterName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 42, 1),
    _StarGSSClusterName_Type()
)
starGSSClusterName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starGSSClusterName.setStatus("current")
_StarGSSClusterNodeName_Type = DisplayString
_StarGSSClusterNodeName_Object = MibScalar
starGSSClusterNodeName = _StarGSSClusterNodeName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 42, 2),
    _StarGSSClusterNodeName_Type()
)
starGSSClusterNodeName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starGSSClusterNodeName.setStatus("current")
_StarGSSClusterRgName_Type = DisplayString
_StarGSSClusterRgName_Object = MibScalar
starGSSClusterRgName = _StarGSSClusterRgName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 42, 3),
    _StarGSSClusterRgName_Type()
)
starGSSClusterRgName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starGSSClusterRgName.setStatus("current")
_StarGSSClusterRsName_Type = DisplayString
_StarGSSClusterRsName_Object = MibScalar
starGSSClusterRsName = _StarGSSClusterRsName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 42, 4),
    _StarGSSClusterRsName_Type()
)
starGSSClusterRsName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starGSSClusterRsName.setStatus("current")
_StarGSSClusterNodeState_Type = DisplayString
_StarGSSClusterNodeState_Object = MibScalar
starGSSClusterNodeState = _StarGSSClusterNodeState_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 42, 5),
    _StarGSSClusterNodeState_Type()
)
starGSSClusterNodeState.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starGSSClusterNodeState.setStatus("current")
_StarGSSClusterPrevOnlineNode_Type = DisplayString
_StarGSSClusterPrevOnlineNode_Object = MibScalar
starGSSClusterPrevOnlineNode = _StarGSSClusterPrevOnlineNode_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 42, 6),
    _StarGSSClusterPrevOnlineNode_Type()
)
starGSSClusterPrevOnlineNode.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starGSSClusterPrevOnlineNode.setStatus("current")
_StarGSSClusterFromNode_Type = DisplayString
_StarGSSClusterFromNode_Object = MibScalar
starGSSClusterFromNode = _StarGSSClusterFromNode_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 42, 7),
    _StarGSSClusterFromNode_Type()
)
starGSSClusterFromNode.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starGSSClusterFromNode.setStatus("current")
_StarGSSClusterToNode_Type = DisplayString
_StarGSSClusterToNode_Object = MibScalar
starGSSClusterToNode = _StarGSSClusterToNode_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 42, 8),
    _StarGSSClusterToNode_Type()
)
starGSSClusterToNode.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starGSSClusterToNode.setStatus("current")
_StarGSSDiskPath_Type = DisplayString
_StarGSSDiskPath_Object = MibScalar
starGSSDiskPath = _StarGSSDiskPath_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 42, 9),
    _StarGSSDiskPath_Type()
)
starGSSDiskPath.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starGSSDiskPath.setStatus("current")
_StarGSSTransportPath_Type = DisplayString
_StarGSSTransportPath_Object = MibScalar
starGSSTransportPath = _StarGSSTransportPath_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 42, 10),
    _StarGSSTransportPath_Type()
)
starGSSTransportPath.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starGSSTransportPath.setStatus("current")
_StarGSSIPMPGroupName_Type = DisplayString
_StarGSSIPMPGroupName_Object = MibScalar
starGSSIPMPGroupName = _StarGSSIPMPGroupName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 42, 11),
    _StarGSSIPMPGroupName_Type()
)
starGSSIPMPGroupName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starGSSIPMPGroupName.setStatus("current")
_StarGSSInterfaceName_Type = DisplayString
_StarGSSInterfaceName_Object = MibScalar
starGSSInterfaceName = _StarGSSInterfaceName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 42, 12),
    _StarGSSInterfaceName_Type()
)
starGSSInterfaceName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starGSSInterfaceName.setStatus("current")
_StarentPDIFSys_ObjectIdentity = ObjectIdentity
starentPDIFSys = _StarentPDIFSys_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 43)
)


class _StarPDIFSysStatus_Type(Integer32):
    """Custom type starPDIFSysStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("active", 2),
          ("noservice", 1),
          ("outofservice", 4),
          ("temporary", 3),
          ("unknown", 0))
    )


_StarPDIFSysStatus_Type.__name__ = "Integer32"
_StarPDIFSysStatus_Object = MibScalar
starPDIFSysStatus = _StarPDIFSysStatus_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 43, 1),
    _StarPDIFSysStatus_Type()
)
starPDIFSysStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFSysStatus.setStatus("current")
_StarPDIFSysNumService_Type = Unsigned32
_StarPDIFSysNumService_Object = MibScalar
starPDIFSysNumService = _StarPDIFSysNumService_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 43, 2),
    _StarPDIFSysNumService_Type()
)
starPDIFSysNumService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFSysNumService.setStatus("current")
if mibBuilder.loadTexts:
    starPDIFSysNumService.setUnits("Services")
_StarPDIFSysSessCurrent_Type = Gauge32
_StarPDIFSysSessCurrent_Object = MibScalar
starPDIFSysSessCurrent = _StarPDIFSysSessCurrent_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 43, 3),
    _StarPDIFSysSessCurrent_Type()
)
starPDIFSysSessCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFSysSessCurrent.setStatus("current")
_StarPDIFSysSessCurrActive_Type = Gauge32
_StarPDIFSysSessCurrActive_Object = MibScalar
starPDIFSysSessCurrActive = _StarPDIFSysSessCurrActive_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 43, 4),
    _StarPDIFSysSessCurrActive_Type()
)
starPDIFSysSessCurrActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFSysSessCurrActive.setStatus("current")
_StarPDIFSysSessCurrDormant_Type = Gauge32
_StarPDIFSysSessCurrDormant_Object = MibScalar
starPDIFSysSessCurrDormant = _StarPDIFSysSessCurrDormant_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 43, 5),
    _StarPDIFSysSessCurrDormant_Type()
)
starPDIFSysSessCurrDormant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFSysSessCurrDormant.setStatus("current")
_StarPDIFSysSessTtlSetup_Type = Counter32
_StarPDIFSysSessTtlSetup_Object = MibScalar
starPDIFSysSessTtlSetup = _StarPDIFSysSessTtlSetup_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 43, 6),
    _StarPDIFSysSessTtlSetup_Type()
)
starPDIFSysSessTtlSetup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFSysSessTtlSetup.setStatus("current")
_StarPDIFSysChildSACurrent_Type = Gauge32
_StarPDIFSysChildSACurrent_Object = MibScalar
starPDIFSysChildSACurrent = _StarPDIFSysChildSACurrent_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 43, 7),
    _StarPDIFSysChildSACurrent_Type()
)
starPDIFSysChildSACurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFSysChildSACurrent.setStatus("current")
_StarentPDIFService_ObjectIdentity = ObjectIdentity
starentPDIFService = _StarentPDIFService_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 44)
)
_StarPDIFTable_Object = MibTable
starPDIFTable = _StarPDIFTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 44, 1)
)
if mibBuilder.loadTexts:
    starPDIFTable.setStatus("current")
_StarPDIFEntry_Object = MibTableRow
starPDIFEntry = _StarPDIFEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 44, 1, 1)
)
starPDIFEntry.setIndexNames(
    (1, "STARENT-MIB", "starPDIFSvcID"),
)
if mibBuilder.loadTexts:
    starPDIFEntry.setStatus("current")
_StarPDIFSvcID_Type = StarShortID
_StarPDIFSvcID_Object = MibTableColumn
starPDIFSvcID = _StarPDIFSvcID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 44, 1, 1, 1),
    _StarPDIFSvcID_Type()
)
starPDIFSvcID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starPDIFSvcID.setStatus("current")
_StarPDIFVpnID_Type = Gauge32
_StarPDIFVpnID_Object = MibTableColumn
starPDIFVpnID = _StarPDIFVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 44, 1, 1, 2),
    _StarPDIFVpnID_Type()
)
starPDIFVpnID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFVpnID.setStatus("current")
_StarPDIFVpnName_Type = DisplayString
_StarPDIFVpnName_Object = MibTableColumn
starPDIFVpnName = _StarPDIFVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 44, 1, 1, 3),
    _StarPDIFVpnName_Type()
)
starPDIFVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFVpnName.setStatus("current")
_StarPDIFServName_Type = DisplayString
_StarPDIFServName_Object = MibTableColumn
starPDIFServName = _StarPDIFServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 44, 1, 1, 4),
    _StarPDIFServName_Type()
)
starPDIFServName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFServName.setStatus("current")


class _StarPDIFStatus_Type(Integer32):
    """Custom type starPDIFStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inservice", 1),
          ("outofservice", 2),
          ("unknown", 0))
    )


_StarPDIFStatus_Type.__name__ = "Integer32"
_StarPDIFStatus_Object = MibTableColumn
starPDIFStatus = _StarPDIFStatus_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 44, 1, 1, 5),
    _StarPDIFStatus_Type()
)
starPDIFStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFStatus.setStatus("current")
_StarPDIFSessCurrent_Type = Gauge32
_StarPDIFSessCurrent_Object = MibTableColumn
starPDIFSessCurrent = _StarPDIFSessCurrent_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 44, 1, 1, 6),
    _StarPDIFSessCurrent_Type()
)
starPDIFSessCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFSessCurrent.setStatus("current")
_StarPDIFSessRemain_Type = Gauge32
_StarPDIFSessRemain_Object = MibTableColumn
starPDIFSessRemain = _StarPDIFSessRemain_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 44, 1, 1, 7),
    _StarPDIFSessRemain_Type()
)
starPDIFSessRemain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFSessRemain.setStatus("current")
_StarPDIFSessCurrentActive_Type = Gauge32
_StarPDIFSessCurrentActive_Object = MibTableColumn
starPDIFSessCurrentActive = _StarPDIFSessCurrentActive_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 44, 1, 1, 8),
    _StarPDIFSessCurrentActive_Type()
)
starPDIFSessCurrentActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFSessCurrentActive.setStatus("current")
_StarPDIFSessCurrentDormant_Type = Gauge32
_StarPDIFSessCurrentDormant_Object = MibTableColumn
starPDIFSessCurrentDormant = _StarPDIFSessCurrentDormant_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 44, 1, 1, 9),
    _StarPDIFSessCurrentDormant_Type()
)
starPDIFSessCurrentDormant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFSessCurrentDormant.setStatus("current")
_StarPDIFSessCurrentIpv6Active_Type = Gauge32
_StarPDIFSessCurrentIpv6Active_Object = MibTableColumn
starPDIFSessCurrentIpv6Active = _StarPDIFSessCurrentIpv6Active_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 44, 1, 1, 10),
    _StarPDIFSessCurrentIpv6Active_Type()
)
starPDIFSessCurrentIpv6Active.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFSessCurrentIpv6Active.setStatus("current")
_StarPDIFSessCurrentIpv6Dormant_Type = Gauge32
_StarPDIFSessCurrentIpv6Dormant_Object = MibTableColumn
starPDIFSessCurrentIpv6Dormant = _StarPDIFSessCurrentIpv6Dormant_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 44, 1, 1, 11),
    _StarPDIFSessCurrentIpv6Dormant_Type()
)
starPDIFSessCurrentIpv6Dormant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFSessCurrentIpv6Dormant.setStatus("current")
_StarPDIFSessCurrentIpv4Active_Type = Gauge32
_StarPDIFSessCurrentIpv4Active_Object = MibTableColumn
starPDIFSessCurrentIpv4Active = _StarPDIFSessCurrentIpv4Active_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 44, 1, 1, 12),
    _StarPDIFSessCurrentIpv4Active_Type()
)
starPDIFSessCurrentIpv4Active.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFSessCurrentIpv4Active.setStatus("current")
_StarPDIFSessCurrentIpv4Dormant_Type = Gauge32
_StarPDIFSessCurrentIpv4Dormant_Object = MibTableColumn
starPDIFSessCurrentIpv4Dormant = _StarPDIFSessCurrentIpv4Dormant_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 44, 1, 1, 13),
    _StarPDIFSessCurrentIpv4Dormant_Type()
)
starPDIFSessCurrentIpv4Dormant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFSessCurrentIpv4Dormant.setStatus("current")
_StarPDIFBindIpAddress_Type = IpAddress
_StarPDIFBindIpAddress_Object = MibTableColumn
starPDIFBindIpAddress = _StarPDIFBindIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 44, 1, 1, 14),
    _StarPDIFBindIpAddress_Type()
)
starPDIFBindIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFBindIpAddress.setStatus("current")
_StarPDIFBindIpPort_Type = Integer32
_StarPDIFBindIpPort_Object = MibTableColumn
starPDIFBindIpPort = _StarPDIFBindIpPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 44, 1, 1, 15),
    _StarPDIFBindIpPort_Type()
)
starPDIFBindIpPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFBindIpPort.setStatus("current")
_StarPDIFBindSlot_Type = Integer32
_StarPDIFBindSlot_Object = MibTableColumn
starPDIFBindSlot = _StarPDIFBindSlot_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 44, 1, 1, 16),
    _StarPDIFBindSlot_Type()
)
starPDIFBindSlot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFBindSlot.setStatus("current")
_StarPDIFBindPort_Type = Integer32
_StarPDIFBindPort_Object = MibTableColumn
starPDIFBindPort = _StarPDIFBindPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 44, 1, 1, 17),
    _StarPDIFBindPort_Type()
)
starPDIFBindPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDIFBindPort.setStatus("current")
_StarentSGSNService_ObjectIdentity = ObjectIdentity
starentSGSNService = _StarentSGSNService_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 45)
)
_StarSGSNSerTable_Object = MibTable
starSGSNSerTable = _StarSGSNSerTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 45, 1)
)
if mibBuilder.loadTexts:
    starSGSNSerTable.setStatus("current")
_StarSGSNSerEntry_Object = MibTableRow
starSGSNSerEntry = _StarSGSNSerEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 45, 1, 1)
)
starSGSNSerEntry.setIndexNames(
    (0, "STARENT-MIB", "starSGSNSerVpnID"),
    (0, "STARENT-MIB", "starSGSNSerSvcID"),
)
if mibBuilder.loadTexts:
    starSGSNSerEntry.setStatus("current")
_StarSGSNSerVpnID_Type = Gauge32
_StarSGSNSerVpnID_Object = MibTableColumn
starSGSNSerVpnID = _StarSGSNSerVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 45, 1, 1, 1),
    _StarSGSNSerVpnID_Type()
)
starSGSNSerVpnID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starSGSNSerVpnID.setStatus("current")
_StarSGSNSerSvcID_Type = Gauge32
_StarSGSNSerSvcID_Object = MibTableColumn
starSGSNSerSvcID = _StarSGSNSerSvcID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 45, 1, 1, 2),
    _StarSGSNSerSvcID_Type()
)
starSGSNSerSvcID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starSGSNSerSvcID.setStatus("current")
_StarSessSGSNVpnName_Type = DisplayString
_StarSessSGSNVpnName_Object = MibTableColumn
starSessSGSNVpnName = _StarSessSGSNVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 45, 1, 1, 3),
    _StarSessSGSNVpnName_Type()
)
starSessSGSNVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSGSNVpnName.setStatus("current")
_StarSessSGSNServName_Type = DisplayString
_StarSessSGSNServName_Object = MibTableColumn
starSessSGSNServName = _StarSessSGSNServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 45, 1, 1, 4),
    _StarSessSGSNServName_Type()
)
starSessSGSNServName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSGSNServName.setStatus("current")


class _StarSessSGSNMcc_Type(OctetString):
    """Custom type starSessSGSNMcc based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 3),
    )


_StarSessSGSNMcc_Type.__name__ = "OctetString"
_StarSessSGSNMcc_Object = MibTableColumn
starSessSGSNMcc = _StarSessSGSNMcc_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 45, 1, 1, 5),
    _StarSessSGSNMcc_Type()
)
starSessSGSNMcc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSGSNMcc.setStatus("current")


class _StarSessSGSNMnc_Type(OctetString):
    """Custom type starSessSGSNMnc based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 3),
    )


_StarSessSGSNMnc_Type.__name__ = "OctetString"
_StarSessSGSNMnc_Object = MibTableColumn
starSessSGSNMnc = _StarSessSGSNMnc_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 45, 1, 1, 6),
    _StarSessSGSNMnc_Type()
)
starSessSGSNMnc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSGSNMnc.setStatus("current")
_StarSessSGSNRncId_Type = Gauge32
_StarSessSGSNRncId_Object = MibTableColumn
starSessSGSNRncId = _StarSessSGSNRncId_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 45, 1, 1, 7),
    _StarSessSGSNRncId_Type()
)
starSessSGSNRncId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSGSNRncId.setStatus("current")


class _StarSessSGSNHlrNum_Type(OctetString):
    """Custom type starSessSGSNHlrNum based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_StarSessSGSNHlrNum_Type.__name__ = "OctetString"
_StarSessSGSNHlrNum_Object = MibTableColumn
starSessSGSNHlrNum = _StarSessSGSNHlrNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 45, 1, 1, 8),
    _StarSessSGSNHlrNum_Type()
)
starSessSGSNHlrNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessSGSNHlrNum.setStatus("current")
_StarentSS7Rd_ObjectIdentity = ObjectIdentity
starentSS7Rd = _StarentSS7Rd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 46)
)
_StarSS7RdTable_Object = MibTable
starSS7RdTable = _StarSS7RdTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 46, 1)
)
if mibBuilder.loadTexts:
    starSS7RdTable.setStatus("current")
_StarSS7RdEntry_Object = MibTableRow
starSS7RdEntry = _StarSS7RdEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 46, 1, 1)
)
starSS7RdEntry.setIndexNames(
    (0, "STARENT-MIB", "starSS7rdId"),
)
if mibBuilder.loadTexts:
    starSS7RdEntry.setStatus("current")
_StarSS7rdId_Type = Gauge32
_StarSS7rdId_Object = MibTableColumn
starSS7rdId = _StarSS7rdId_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 46, 1, 1, 1),
    _StarSS7rdId_Type()
)
starSS7rdId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSS7rdId.setStatus("current")
_StarSS7Pc_Type = Gauge32
_StarSS7Pc_Object = MibTableColumn
starSS7Pc = _StarSS7Pc_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 46, 1, 1, 2),
    _StarSS7Pc_Type()
)
starSS7Pc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSS7Pc.setStatus("current")
_StarSS7M3UAPsId_Type = Gauge32
_StarSS7M3UAPsId_Object = MibTableColumn
starSS7M3UAPsId = _StarSS7M3UAPsId_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 46, 1, 1, 3),
    _StarSS7M3UAPsId_Type()
)
starSS7M3UAPsId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSS7M3UAPsId.setStatus("current")
_StarSS7M3UAPspId_Type = Gauge32
_StarSS7M3UAPspId_Object = MibTableColumn
starSS7M3UAPspId = _StarSS7M3UAPspId_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 46, 1, 1, 4),
    _StarSS7M3UAPspId_Type()
)
starSS7M3UAPspId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSS7M3UAPspId.setStatus("current")
_StarSS7MTP3LinkSetId_Type = Gauge32
_StarSS7MTP3LinkSetId_Object = MibTableColumn
starSS7MTP3LinkSetId = _StarSS7MTP3LinkSetId_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 46, 1, 1, 5),
    _StarSS7MTP3LinkSetId_Type()
)
starSS7MTP3LinkSetId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSS7MTP3LinkSetId.setStatus("current")
_StarSS7MTP3LinkId_Type = Gauge32
_StarSS7MTP3LinkId_Object = MibTableColumn
starSS7MTP3LinkId = _StarSS7MTP3LinkId_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 46, 1, 1, 6),
    _StarSS7MTP3LinkId_Type()
)
starSS7MTP3LinkId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSS7MTP3LinkId.setStatus("current")
_StarSS7SCTPSelfAddr_Type = IpAddress
_StarSS7SCTPSelfAddr_Object = MibTableColumn
starSS7SCTPSelfAddr = _StarSS7SCTPSelfAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 46, 1, 1, 7),
    _StarSS7SCTPSelfAddr_Type()
)
starSS7SCTPSelfAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSS7SCTPSelfAddr.setStatus("current")
_StarSS7SCTPPeerAddr_Type = IpAddress
_StarSS7SCTPPeerAddr_Object = MibTableColumn
starSS7SCTPPeerAddr = _StarSS7SCTPPeerAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 46, 1, 1, 8),
    _StarSS7SCTPPeerAddr_Type()
)
starSS7SCTPPeerAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSS7SCTPPeerAddr.setStatus("current")
_StarSS7SCTPSelfPort_Type = Gauge32
_StarSS7SCTPSelfPort_Object = MibTableColumn
starSS7SCTPSelfPort = _StarSS7SCTPSelfPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 46, 1, 1, 9),
    _StarSS7SCTPSelfPort_Type()
)
starSS7SCTPSelfPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSS7SCTPSelfPort.setStatus("current")
_StarSS7SCTPPeerPort_Type = Gauge32
_StarSS7SCTPPeerPort_Object = MibTableColumn
starSS7SCTPPeerPort = _StarSS7SCTPPeerPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 46, 1, 1, 10),
    _StarSS7SCTPPeerPort_Type()
)
starSS7SCTPPeerPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSS7SCTPPeerPort.setStatus("current")
_StarSS7CongLevel_Type = Gauge32
_StarSS7CongLevel_Object = MibTableColumn
starSS7CongLevel = _StarSS7CongLevel_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 46, 1, 1, 11),
    _StarSS7CongLevel_Type()
)
starSS7CongLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSS7CongLevel.setStatus("current")
_StarSS7LocalCong_Type = Gauge32
_StarSS7LocalCong_Object = MibTableColumn
starSS7LocalCong = _StarSS7LocalCong_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 46, 1, 1, 12),
    _StarSS7LocalCong_Type()
)
starSS7LocalCong.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSS7LocalCong.setStatus("current")
_StarSS7CauseString_Type = DisplayString
_StarSS7CauseString_Object = MibTableColumn
starSS7CauseString = _StarSS7CauseString_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 46, 1, 1, 13),
    _StarSS7CauseString_Type()
)
starSS7CauseString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSS7CauseString.setStatus("current")
_StarentSccpNw_ObjectIdentity = ObjectIdentity
starentSccpNw = _StarentSccpNw_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 47)
)
_StarSccpNwTable_Object = MibTable
starSccpNwTable = _StarSccpNwTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 47, 1)
)
if mibBuilder.loadTexts:
    starSccpNwTable.setStatus("current")
_StarSccpNwEntry_Object = MibTableRow
starSccpNwEntry = _StarSccpNwEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 47, 1, 1)
)
starSccpNwEntry.setIndexNames(
    (0, "STARENT-MIB", "starSccpNwId"),
)
if mibBuilder.loadTexts:
    starSccpNwEntry.setStatus("current")
_StarSccpNwId_Type = Gauge32
_StarSccpNwId_Object = MibTableColumn
starSccpNwId = _StarSccpNwId_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 47, 1, 1, 1),
    _StarSccpNwId_Type()
)
starSccpNwId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSccpNwId.setStatus("current")
_StarSccpSsn_Type = Gauge32
_StarSccpSsn_Object = MibTableColumn
starSccpSsn = _StarSccpSsn_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 47, 1, 1, 2),
    _StarSccpSsn_Type()
)
starSccpSsn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSccpSsn.setStatus("current")
_StarentSGTPService_ObjectIdentity = ObjectIdentity
starentSGTPService = _StarentSGTPService_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 48)
)
_StarSGTPSerTable_Object = MibTable
starSGTPSerTable = _StarSGTPSerTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 48, 1)
)
if mibBuilder.loadTexts:
    starSGTPSerTable.setStatus("current")
_StarSGTPSerEntry_Object = MibTableRow
starSGTPSerEntry = _StarSGTPSerEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 48, 1, 1)
)
starSGTPSerEntry.setIndexNames(
    (0, "STARENT-MIB", "starSGTPSerVpnID"),
    (0, "STARENT-MIB", "starSGTPSerSvcID"),
)
if mibBuilder.loadTexts:
    starSGTPSerEntry.setStatus("current")
_StarSGTPSerVpnID_Type = Gauge32
_StarSGTPSerVpnID_Object = MibTableColumn
starSGTPSerVpnID = _StarSGTPSerVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 48, 1, 1, 1),
    _StarSGTPSerVpnID_Type()
)
starSGTPSerVpnID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starSGTPSerVpnID.setStatus("current")
_StarSGTPSerSvcID_Type = Gauge32
_StarSGTPSerSvcID_Object = MibTableColumn
starSGTPSerSvcID = _StarSGTPSerSvcID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 48, 1, 1, 2),
    _StarSGTPSerSvcID_Type()
)
starSGTPSerSvcID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starSGTPSerSvcID.setStatus("current")
_StarSGTPVpnName_Type = DisplayString
_StarSGTPVpnName_Object = MibTableColumn
starSGTPVpnName = _StarSGTPVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 48, 1, 1, 3),
    _StarSGTPVpnName_Type()
)
starSGTPVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSGTPVpnName.setStatus("current")
_StarSGTPServName_Type = DisplayString
_StarSGTPServName_Object = MibTableColumn
starSGTPServName = _StarSGTPServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 48, 1, 1, 4),
    _StarSGTPServName_Type()
)
starSGTPServName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSGTPServName.setStatus("current")
_StarSGTPSelfAddr_Type = IpAddress
_StarSGTPSelfAddr_Object = MibTableColumn
starSGTPSelfAddr = _StarSGTPSelfAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 48, 1, 1, 5),
    _StarSGTPSelfAddr_Type()
)
starSGTPSelfAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSGTPSelfAddr.setStatus("current")
_StarSGTPPeerAddr_Type = IpAddress
_StarSGTPPeerAddr_Object = MibTableColumn
starSGTPPeerAddr = _StarSGTPPeerAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 48, 1, 1, 6),
    _StarSGTPPeerAddr_Type()
)
starSGTPPeerAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSGTPPeerAddr.setStatus("current")
_StarSGTPSelfPort_Type = Gauge32
_StarSGTPSelfPort_Object = MibTableColumn
starSGTPSelfPort = _StarSGTPSelfPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 48, 1, 1, 7),
    _StarSGTPSelfPort_Type()
)
starSGTPSelfPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSGTPSelfPort.setStatus("current")
_StarSGTPPeerPort_Type = Gauge32
_StarSGTPPeerPort_Object = MibTableColumn
starSGTPPeerPort = _StarSGTPPeerPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 48, 1, 1, 8),
    _StarSGTPPeerPort_Type()
)
starSGTPPeerPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSGTPPeerPort.setStatus("current")
_StarentIPMSServer_ObjectIdentity = ObjectIdentity
starentIPMSServer = _StarentIPMSServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 49)
)
_StarIPMSServerTable_Object = MibTable
starIPMSServerTable = _StarIPMSServerTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 49, 1)
)
if mibBuilder.loadTexts:
    starIPMSServerTable.setStatus("current")
_StarIPMSServerEntry_Object = MibTableRow
starIPMSServerEntry = _StarIPMSServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 49, 1, 1)
)
starIPMSServerEntry.setIndexNames(
    (0, "STARENT-MIB", "starIPMSServerVpnID"),
    (0, "STARENT-MIB", "starIPMSServerAddr"),
)
if mibBuilder.loadTexts:
    starIPMSServerEntry.setStatus("current")
_StarIPMSServerVpnID_Type = Gauge32
_StarIPMSServerVpnID_Object = MibTableColumn
starIPMSServerVpnID = _StarIPMSServerVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 49, 1, 1, 1),
    _StarIPMSServerVpnID_Type()
)
starIPMSServerVpnID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starIPMSServerVpnID.setStatus("current")
_StarIPMSServerAddr_Type = IpAddress
_StarIPMSServerAddr_Object = MibTableColumn
starIPMSServerAddr = _StarIPMSServerAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 49, 1, 1, 2),
    _StarIPMSServerAddr_Type()
)
starIPMSServerAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starIPMSServerAddr.setStatus("current")
_StarIPMSServerVpnName_Type = DisplayString
_StarIPMSServerVpnName_Object = MibTableColumn
starIPMSServerVpnName = _StarIPMSServerVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 49, 1, 1, 3),
    _StarIPMSServerVpnName_Type()
)
starIPMSServerVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPMSServerVpnName.setStatus("current")
_StarentCert_ObjectIdentity = ObjectIdentity
starentCert = _StarentCert_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 50)
)
_StarCertTable_Object = MibTable
starCertTable = _StarCertTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 50, 1)
)
if mibBuilder.loadTexts:
    starCertTable.setStatus("current")
_StarCertEntry_Object = MibTableRow
starCertEntry = _StarCertEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 50, 1, 1)
)
starCertEntry.setIndexNames(
    (1, "STARENT-MIB", "starCertSerialNumber"),
)
if mibBuilder.loadTexts:
    starCertEntry.setStatus("current")
_StarCertSerialNumber_Type = DisplayString
_StarCertSerialNumber_Object = MibTableColumn
starCertSerialNumber = _StarCertSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 50, 1, 1, 1),
    _StarCertSerialNumber_Type()
)
starCertSerialNumber.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starCertSerialNumber.setStatus("current")
_StarCertExpiryTime_Type = DateAndTime
_StarCertExpiryTime_Object = MibTableColumn
starCertExpiryTime = _StarCertExpiryTime_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 50, 1, 1, 2),
    _StarCertExpiryTime_Type()
)
starCertExpiryTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCertExpiryTime.setStatus("current")
_StarCertIssuer_Type = DisplayString
_StarCertIssuer_Object = MibTableColumn
starCertIssuer = _StarCertIssuer_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 50, 1, 1, 3),
    _StarCertIssuer_Type()
)
starCertIssuer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCertIssuer.setStatus("current")
_StarentFile_ObjectIdentity = ObjectIdentity
starentFile = _StarentFile_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 51)
)
_StarFileTable_Object = MibTable
starFileTable = _StarFileTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 51, 1)
)
if mibBuilder.loadTexts:
    starFileTable.setStatus("current")
_StarFileEntry_Object = MibTableRow
starFileEntry = _StarFileEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 51, 1, 1)
)
starFileEntry.setIndexNames(
    (1, "STARENT-MIB", "starFileName"),
)
if mibBuilder.loadTexts:
    starFileEntry.setStatus("current")
_StarFileName_Type = DisplayString
_StarFileName_Object = MibTableColumn
starFileName = _StarFileName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 51, 1, 1, 1),
    _StarFileName_Type()
)
starFileName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starFileName.setStatus("current")


class _StarFileApplication_Type(Integer32):
    """Custom type starFileApplication based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdrmod", 2),
          ("systemfile", 1),
          ("unknown", 0))
    )


_StarFileApplication_Type.__name__ = "Integer32"
_StarFileApplication_Object = MibTableColumn
starFileApplication = _StarFileApplication_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 51, 1, 1, 2),
    _StarFileApplication_Type()
)
starFileApplication.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFileApplication.setStatus("current")
_StarentFTPServ_ObjectIdentity = ObjectIdentity
starentFTPServ = _StarentFTPServ_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 52)
)
_StarFTPServTable_Object = MibTable
starFTPServTable = _StarFTPServTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 52, 1)
)
if mibBuilder.loadTexts:
    starFTPServTable.setStatus("current")
_StarFTPServEntry_Object = MibTableRow
starFTPServEntry = _StarFTPServEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 52, 1, 1)
)
starFTPServEntry.setIndexNames(
    (0, "STARENT-MIB", "starFTPServVpnID"),
    (0, "STARENT-MIB", "starFTPServIpAddr"),
)
if mibBuilder.loadTexts:
    starFTPServEntry.setStatus("current")
_StarFTPServVpnID_Type = Unsigned32
_StarFTPServVpnID_Object = MibTableColumn
starFTPServVpnID = _StarFTPServVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 52, 1, 1, 1),
    _StarFTPServVpnID_Type()
)
starFTPServVpnID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starFTPServVpnID.setStatus("current")
_StarFTPServIpAddr_Type = IpAddress
_StarFTPServIpAddr_Object = MibTableColumn
starFTPServIpAddr = _StarFTPServIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 52, 1, 1, 2),
    _StarFTPServIpAddr_Type()
)
starFTPServIpAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starFTPServIpAddr.setStatus("current")
_StarFTPServVpnName_Type = DisplayString
_StarFTPServVpnName_Object = MibTableColumn
starFTPServVpnName = _StarFTPServVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 52, 1, 1, 3),
    _StarFTPServVpnName_Type()
)
starFTPServVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFTPServVpnName.setStatus("current")
_StarentCSCFPeerServer_ObjectIdentity = ObjectIdentity
starentCSCFPeerServer = _StarentCSCFPeerServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 53)
)
_StarCSCFPeerServerTable_Object = MibTable
starCSCFPeerServerTable = _StarCSCFPeerServerTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 53, 1)
)
if mibBuilder.loadTexts:
    starCSCFPeerServerTable.setStatus("current")
_StarCSCFPeerServerEntry_Object = MibTableRow
starCSCFPeerServerEntry = _StarCSCFPeerServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 53, 1, 1)
)
starCSCFPeerServerEntry.setIndexNames(
    (0, "STARENT-MIB", "starCSCFPeerServerVpnID"),
    (0, "STARENT-MIB", "starCSCFPeerServerSvcID"),
)
if mibBuilder.loadTexts:
    starCSCFPeerServerEntry.setStatus("current")
_StarCSCFPeerServerVpnID_Type = Gauge32
_StarCSCFPeerServerVpnID_Object = MibTableColumn
starCSCFPeerServerVpnID = _StarCSCFPeerServerVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 53, 1, 1, 1),
    _StarCSCFPeerServerVpnID_Type()
)
starCSCFPeerServerVpnID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starCSCFPeerServerVpnID.setStatus("current")
_StarCSCFPeerServerSvcID_Type = Gauge32
_StarCSCFPeerServerSvcID_Object = MibTableColumn
starCSCFPeerServerSvcID = _StarCSCFPeerServerSvcID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 53, 1, 1, 2),
    _StarCSCFPeerServerSvcID_Type()
)
starCSCFPeerServerSvcID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starCSCFPeerServerSvcID.setStatus("current")
_StarCSCFPeerServerVpnName_Type = DisplayString
_StarCSCFPeerServerVpnName_Object = MibTableColumn
starCSCFPeerServerVpnName = _StarCSCFPeerServerVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 53, 1, 1, 3),
    _StarCSCFPeerServerVpnName_Type()
)
starCSCFPeerServerVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCSCFPeerServerVpnName.setStatus("current")
_StarCSCFPeerServerSvcName_Type = DisplayString
_StarCSCFPeerServerSvcName_Object = MibTableColumn
starCSCFPeerServerSvcName = _StarCSCFPeerServerSvcName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 53, 1, 1, 4),
    _StarCSCFPeerServerSvcName_Type()
)
starCSCFPeerServerSvcName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCSCFPeerServerSvcName.setStatus("current")
_StarCSCFPeerServerListName_Type = DisplayString
_StarCSCFPeerServerListName_Object = MibTableColumn
starCSCFPeerServerListName = _StarCSCFPeerServerListName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 53, 1, 1, 5),
    _StarCSCFPeerServerListName_Type()
)
starCSCFPeerServerListName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCSCFPeerServerListName.setStatus("current")
_StarCSCFPeerServerName_Type = DisplayString
_StarCSCFPeerServerName_Object = MibTableColumn
starCSCFPeerServerName = _StarCSCFPeerServerName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 53, 1, 1, 6),
    _StarCSCFPeerServerName_Type()
)
starCSCFPeerServerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCSCFPeerServerName.setStatus("current")
_StarCSCFPeerServerState_Type = DisplayString
_StarCSCFPeerServerState_Object = MibTableColumn
starCSCFPeerServerState = _StarCSCFPeerServerState_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 53, 1, 1, 7),
    _StarCSCFPeerServerState_Type()
)
starCSCFPeerServerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starCSCFPeerServerState.setStatus("current")
_StarentSDH_ObjectIdentity = ObjectIdentity
starentSDH = _StarentSDH_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 54)
)
_StarSDHTable_Object = MibTable
starSDHTable = _StarSDHTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 54, 1)
)
if mibBuilder.loadTexts:
    starSDHTable.setStatus("current")
_StarSDHEntry_Object = MibTableRow
starSDHEntry = _StarSDHEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 54, 1, 1)
)
starSDHEntry.setIndexNames(
    (0, "STARENT-MIB", "starSDHSlot"),
    (0, "STARENT-MIB", "starSDHPort"),
)
if mibBuilder.loadTexts:
    starSDHEntry.setStatus("current")


class _StarSDHSlot_Type(Integer32):
    """Custom type starSDHSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(17, 48),
    )


_StarSDHSlot_Type.__name__ = "Integer32"
_StarSDHSlot_Object = MibTableColumn
starSDHSlot = _StarSDHSlot_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 54, 1, 1, 1),
    _StarSDHSlot_Type()
)
starSDHSlot.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSDHSlot.setStatus("current")


class _StarSDHPort_Type(Integer32):
    """Custom type starSDHPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_StarSDHPort_Type.__name__ = "Integer32"
_StarSDHPort_Object = MibTableColumn
starSDHPort = _StarSDHPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 54, 1, 1, 2),
    _StarSDHPort_Type()
)
starSDHPort.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSDHPort.setStatus("current")
_StarSDHOperState_Type = Integer32
_StarSDHOperState_Object = MibTableColumn
starSDHOperState = _StarSDHOperState_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 54, 1, 1, 3),
    _StarSDHOperState_Type()
)
starSDHOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSDHOperState.setStatus("current")
_StarentSDHPath_ObjectIdentity = ObjectIdentity
starentSDHPath = _StarentSDHPath_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 55)
)
_StarSDHPathTable_Object = MibTable
starSDHPathTable = _StarSDHPathTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 55, 1)
)
if mibBuilder.loadTexts:
    starSDHPathTable.setStatus("current")
_StarSDHPathEntry_Object = MibTableRow
starSDHPathEntry = _StarSDHPathEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 55, 1, 1)
)
starSDHPathEntry.setIndexNames(
    (0, "STARENT-MIB", "starSDHPathSlot"),
    (0, "STARENT-MIB", "starSDHPathPort"),
    (0, "STARENT-MIB", "starSDHPathNum"),
)
if mibBuilder.loadTexts:
    starSDHPathEntry.setStatus("current")


class _StarSDHPathSlot_Type(Integer32):
    """Custom type starSDHPathSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(17, 48),
    )


_StarSDHPathSlot_Type.__name__ = "Integer32"
_StarSDHPathSlot_Object = MibTableColumn
starSDHPathSlot = _StarSDHPathSlot_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 55, 1, 1, 1),
    _StarSDHPathSlot_Type()
)
starSDHPathSlot.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSDHPathSlot.setStatus("current")


class _StarSDHPathPort_Type(Integer32):
    """Custom type starSDHPathPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_StarSDHPathPort_Type.__name__ = "Integer32"
_StarSDHPathPort_Object = MibTableColumn
starSDHPathPort = _StarSDHPathPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 55, 1, 1, 2),
    _StarSDHPathPort_Type()
)
starSDHPathPort.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSDHPathPort.setStatus("current")


class _StarSDHPathNum_Type(Integer32):
    """Custom type starSDHPathNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_StarSDHPathNum_Type.__name__ = "Integer32"
_StarSDHPathNum_Object = MibTableColumn
starSDHPathNum = _StarSDHPathNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 55, 1, 1, 3),
    _StarSDHPathNum_Type()
)
starSDHPathNum.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starSDHPathNum.setStatus("current")
_StarSDHPathOperState_Type = Integer32
_StarSDHPathOperState_Object = MibTableColumn
starSDHPathOperState = _StarSDHPathOperState_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 55, 1, 1, 4),
    _StarSDHPathOperState_Type()
)
starSDHPathOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSDHPathOperState.setStatus("current")
_StarentE1Trib_ObjectIdentity = ObjectIdentity
starentE1Trib = _StarentE1Trib_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 56)
)
_StarE1TribTable_Object = MibTable
starE1TribTable = _StarE1TribTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 56, 1)
)
if mibBuilder.loadTexts:
    starE1TribTable.setStatus("current")
_StarE1TribEntry_Object = MibTableRow
starE1TribEntry = _StarE1TribEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 56, 1, 1)
)
starE1TribEntry.setIndexNames(
    (0, "STARENT-MIB", "starE1TribSlot"),
    (0, "STARENT-MIB", "starE1TribPort"),
    (0, "STARENT-MIB", "starE1TribPath"),
    (0, "STARENT-MIB", "starE1TribTug2"),
    (0, "STARENT-MIB", "starE1TribTu12"),
)
if mibBuilder.loadTexts:
    starE1TribEntry.setStatus("current")


class _StarE1TribSlot_Type(Integer32):
    """Custom type starE1TribSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(17, 48),
    )


_StarE1TribSlot_Type.__name__ = "Integer32"
_StarE1TribSlot_Object = MibTableColumn
starE1TribSlot = _StarE1TribSlot_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 56, 1, 1, 1),
    _StarE1TribSlot_Type()
)
starE1TribSlot.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starE1TribSlot.setStatus("current")


class _StarE1TribPort_Type(Integer32):
    """Custom type starE1TribPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_StarE1TribPort_Type.__name__ = "Integer32"
_StarE1TribPort_Object = MibTableColumn
starE1TribPort = _StarE1TribPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 56, 1, 1, 2),
    _StarE1TribPort_Type()
)
starE1TribPort.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starE1TribPort.setStatus("current")


class _StarE1TribPath_Type(Integer32):
    """Custom type starE1TribPath based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_StarE1TribPath_Type.__name__ = "Integer32"
_StarE1TribPath_Object = MibTableColumn
starE1TribPath = _StarE1TribPath_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 56, 1, 1, 3),
    _StarE1TribPath_Type()
)
starE1TribPath.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starE1TribPath.setStatus("current")


class _StarE1TribTug2_Type(Integer32):
    """Custom type starE1TribTug2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_StarE1TribTug2_Type.__name__ = "Integer32"
_StarE1TribTug2_Object = MibTableColumn
starE1TribTug2 = _StarE1TribTug2_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 56, 1, 1, 4),
    _StarE1TribTug2_Type()
)
starE1TribTug2.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starE1TribTug2.setStatus("current")


class _StarE1TribTu12_Type(Integer32):
    """Custom type starE1TribTu12 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_StarE1TribTu12_Type.__name__ = "Integer32"
_StarE1TribTu12_Object = MibTableColumn
starE1TribTu12 = _StarE1TribTu12_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 56, 1, 1, 5),
    _StarE1TribTu12_Type()
)
starE1TribTu12.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starE1TribTu12.setStatus("current")
_StarE1TribOperStateLOP_Type = Integer32
_StarE1TribOperStateLOP_Object = MibTableColumn
starE1TribOperStateLOP = _StarE1TribOperStateLOP_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 56, 1, 1, 6),
    _StarE1TribOperStateLOP_Type()
)
starE1TribOperStateLOP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starE1TribOperStateLOP.setStatus("current")
_StarE1TribOperState_Type = Integer32
_StarE1TribOperState_Object = MibTableColumn
starE1TribOperState = _StarE1TribOperState_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 56, 1, 1, 7),
    _StarE1TribOperState_Type()
)
starE1TribOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starE1TribOperState.setStatus("current")
_StarentGPRSLink_ObjectIdentity = ObjectIdentity
starentGPRSLink = _StarentGPRSLink_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 57)
)
_StarGPRSLinkTable_Object = MibTable
starGPRSLinkTable = _StarGPRSLinkTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 57, 1)
)
if mibBuilder.loadTexts:
    starGPRSLinkTable.setStatus("current")
_StarGPRSLinkEntry_Object = MibTableRow
starGPRSLinkEntry = _StarGPRSLinkEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 57, 1, 1)
)
starGPRSLinkEntry.setIndexNames(
    (0, "STARENT-MIB", "starGPRSNsei"),
)
if mibBuilder.loadTexts:
    starGPRSLinkEntry.setStatus("current")
_StarGPRSNsei_Type = Gauge32
_StarGPRSNsei_Object = MibTableColumn
starGPRSNsei = _StarGPRSNsei_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 57, 1, 1, 1),
    _StarGPRSNsei_Type()
)
starGPRSNsei.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starGPRSNsei.setStatus("current")
_StarGPRSNsvci_Type = Gauge32
_StarGPRSNsvci_Object = MibTableColumn
starGPRSNsvci = _StarGPRSNsvci_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 57, 1, 1, 2),
    _StarGPRSNsvci_Type()
)
starGPRSNsvci.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starGPRSNsvci.setStatus("current")
_StarGPRSBvci_Type = Gauge32
_StarGPRSBvci_Object = MibTableColumn
starGPRSBvci = _StarGPRSBvci_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 57, 1, 1, 3),
    _StarGPRSBvci_Type()
)
starGPRSBvci.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starGPRSBvci.setStatus("current")
_StarentFractE1Trib_ObjectIdentity = ObjectIdentity
starentFractE1Trib = _StarentFractE1Trib_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 58)
)
_StarFractE1TribTable_Object = MibTable
starFractE1TribTable = _StarFractE1TribTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 58, 1)
)
if mibBuilder.loadTexts:
    starFractE1TribTable.setStatus("current")
_StarFractE1TribEntry_Object = MibTableRow
starFractE1TribEntry = _StarFractE1TribEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 58, 1, 1)
)
starFractE1TribEntry.setIndexNames(
    (0, "STARENT-MIB", "starFractE1TribSlot"),
    (0, "STARENT-MIB", "starFractE1TribPort"),
    (0, "STARENT-MIB", "starFractE1TribPath"),
    (0, "STARENT-MIB", "starFractE1TribTug2"),
    (0, "STARENT-MIB", "starFractE1TribTu12"),
    (0, "STARENT-MIB", "starFractE1TribBundNum"),
)
if mibBuilder.loadTexts:
    starFractE1TribEntry.setStatus("current")


class _StarFractE1TribSlot_Type(Integer32):
    """Custom type starFractE1TribSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(17, 48),
    )


_StarFractE1TribSlot_Type.__name__ = "Integer32"
_StarFractE1TribSlot_Object = MibTableColumn
starFractE1TribSlot = _StarFractE1TribSlot_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 58, 1, 1, 1),
    _StarFractE1TribSlot_Type()
)
starFractE1TribSlot.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starFractE1TribSlot.setStatus("current")


class _StarFractE1TribPort_Type(Integer32):
    """Custom type starFractE1TribPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_StarFractE1TribPort_Type.__name__ = "Integer32"
_StarFractE1TribPort_Object = MibTableColumn
starFractE1TribPort = _StarFractE1TribPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 58, 1, 1, 2),
    _StarFractE1TribPort_Type()
)
starFractE1TribPort.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starFractE1TribPort.setStatus("current")


class _StarFractE1TribPath_Type(Integer32):
    """Custom type starFractE1TribPath based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_StarFractE1TribPath_Type.__name__ = "Integer32"
_StarFractE1TribPath_Object = MibTableColumn
starFractE1TribPath = _StarFractE1TribPath_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 58, 1, 1, 3),
    _StarFractE1TribPath_Type()
)
starFractE1TribPath.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starFractE1TribPath.setStatus("current")


class _StarFractE1TribTug2_Type(Integer32):
    """Custom type starFractE1TribTug2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_StarFractE1TribTug2_Type.__name__ = "Integer32"
_StarFractE1TribTug2_Object = MibTableColumn
starFractE1TribTug2 = _StarFractE1TribTug2_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 58, 1, 1, 4),
    _StarFractE1TribTug2_Type()
)
starFractE1TribTug2.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starFractE1TribTug2.setStatus("current")


class _StarFractE1TribTu12_Type(Integer32):
    """Custom type starFractE1TribTu12 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_StarFractE1TribTu12_Type.__name__ = "Integer32"
_StarFractE1TribTu12_Object = MibTableColumn
starFractE1TribTu12 = _StarFractE1TribTu12_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 58, 1, 1, 5),
    _StarFractE1TribTu12_Type()
)
starFractE1TribTu12.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starFractE1TribTu12.setStatus("current")


class _StarFractE1TribBundNum_Type(Integer32):
    """Custom type starFractE1TribBundNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )


_StarFractE1TribBundNum_Type.__name__ = "Integer32"
_StarFractE1TribBundNum_Object = MibTableColumn
starFractE1TribBundNum = _StarFractE1TribBundNum_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 58, 1, 1, 6),
    _StarFractE1TribBundNum_Type()
)
starFractE1TribBundNum.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starFractE1TribBundNum.setStatus("obsolete")
_StarFractE1TribTimeslots_Type = DisplayString
_StarFractE1TribTimeslots_Object = MibTableColumn
starFractE1TribTimeslots = _StarFractE1TribTimeslots_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 58, 1, 1, 7),
    _StarFractE1TribTimeslots_Type()
)
starFractE1TribTimeslots.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFractE1TribTimeslots.setStatus("current")
_StarentStorage_ObjectIdentity = ObjectIdentity
starentStorage = _StarentStorage_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 59)
)
_StarStorageTable_Object = MibTable
starStorageTable = _StarStorageTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 59, 1)
)
if mibBuilder.loadTexts:
    starStorageTable.setStatus("current")
_StarStorageEntry_Object = MibTableRow
starStorageEntry = _StarStorageEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 59, 1, 1)
)
starStorageEntry.setIndexNames(
    (0, "STARENT-MIB", "starStorageSlot"),
    (1, "STARENT-MIB", "starStorageName"),
)
if mibBuilder.loadTexts:
    starStorageEntry.setStatus("current")


class _StarStorageSlot_Type(Integer32):
    """Custom type starStorageSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_StarStorageSlot_Type.__name__ = "Integer32"
_StarStorageSlot_Object = MibTableColumn
starStorageSlot = _StarStorageSlot_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 59, 1, 1, 1),
    _StarStorageSlot_Type()
)
starStorageSlot.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starStorageSlot.setStatus("current")
_StarStorageName_Type = DisplayString
_StarStorageName_Object = MibTableColumn
starStorageName = _StarStorageName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 59, 1, 1, 2),
    _StarStorageName_Type()
)
starStorageName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starStorageName.setStatus("current")


class _StarStorageDeviceType_Type(Integer32):
    """Custom type starStorageDeviceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("independent", 1),
          ("raid", 2),
          ("raidmember", 3),
          ("unknown", 0))
    )


_StarStorageDeviceType_Type.__name__ = "Integer32"
_StarStorageDeviceType_Object = MibTableColumn
starStorageDeviceType = _StarStorageDeviceType_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 59, 1, 1, 3),
    _StarStorageDeviceType_Type()
)
starStorageDeviceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starStorageDeviceType.setStatus("current")
_StarentFNGSys_ObjectIdentity = ObjectIdentity
starentFNGSys = _StarentFNGSys_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 60)
)


class _StarFNGSysStatus_Type(Integer32):
    """Custom type starFNGSysStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("active", 2),
          ("noservice", 1),
          ("outofservice", 4),
          ("temporary", 3),
          ("unknown", 0))
    )


_StarFNGSysStatus_Type.__name__ = "Integer32"
_StarFNGSysStatus_Object = MibScalar
starFNGSysStatus = _StarFNGSysStatus_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 60, 1),
    _StarFNGSysStatus_Type()
)
starFNGSysStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGSysStatus.setStatus("current")
_StarFNGSysNumService_Type = Unsigned32
_StarFNGSysNumService_Object = MibScalar
starFNGSysNumService = _StarFNGSysNumService_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 60, 2),
    _StarFNGSysNumService_Type()
)
starFNGSysNumService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGSysNumService.setStatus("current")
if mibBuilder.loadTexts:
    starFNGSysNumService.setUnits("Services")
_StarFNGSysSessCurrent_Type = Gauge32
_StarFNGSysSessCurrent_Object = MibScalar
starFNGSysSessCurrent = _StarFNGSysSessCurrent_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 60, 3),
    _StarFNGSysSessCurrent_Type()
)
starFNGSysSessCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGSysSessCurrent.setStatus("current")
_StarFNGSysSessCurrActive_Type = Gauge32
_StarFNGSysSessCurrActive_Object = MibScalar
starFNGSysSessCurrActive = _StarFNGSysSessCurrActive_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 60, 4),
    _StarFNGSysSessCurrActive_Type()
)
starFNGSysSessCurrActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGSysSessCurrActive.setStatus("current")
_StarFNGSysSessCurrDormant_Type = Gauge32
_StarFNGSysSessCurrDormant_Object = MibScalar
starFNGSysSessCurrDormant = _StarFNGSysSessCurrDormant_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 60, 5),
    _StarFNGSysSessCurrDormant_Type()
)
starFNGSysSessCurrDormant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGSysSessCurrDormant.setStatus("current")
_StarFNGSysSessTtlSetup_Type = Counter32
_StarFNGSysSessTtlSetup_Object = MibScalar
starFNGSysSessTtlSetup = _StarFNGSysSessTtlSetup_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 60, 6),
    _StarFNGSysSessTtlSetup_Type()
)
starFNGSysSessTtlSetup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGSysSessTtlSetup.setStatus("current")
_StarFNGSysChildSACurrent_Type = Gauge32
_StarFNGSysChildSACurrent_Object = MibScalar
starFNGSysChildSACurrent = _StarFNGSysChildSACurrent_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 60, 7),
    _StarFNGSysChildSACurrent_Type()
)
starFNGSysChildSACurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGSysChildSACurrent.setStatus("current")
_StarentFNGService_ObjectIdentity = ObjectIdentity
starentFNGService = _StarentFNGService_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 61)
)
_StarFNGTable_Object = MibTable
starFNGTable = _StarFNGTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 61, 1)
)
if mibBuilder.loadTexts:
    starFNGTable.setStatus("current")
_StarFNGEntry_Object = MibTableRow
starFNGEntry = _StarFNGEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 61, 1, 1)
)
starFNGEntry.setIndexNames(
    (1, "STARENT-MIB", "starFNGSvcID"),
)
if mibBuilder.loadTexts:
    starFNGEntry.setStatus("current")
_StarFNGSvcID_Type = StarShortID
_StarFNGSvcID_Object = MibTableColumn
starFNGSvcID = _StarFNGSvcID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 61, 1, 1, 1),
    _StarFNGSvcID_Type()
)
starFNGSvcID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starFNGSvcID.setStatus("current")
_StarFNGVpnID_Type = Gauge32
_StarFNGVpnID_Object = MibTableColumn
starFNGVpnID = _StarFNGVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 61, 1, 1, 2),
    _StarFNGVpnID_Type()
)
starFNGVpnID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGVpnID.setStatus("current")
_StarFNGVpnName_Type = DisplayString
_StarFNGVpnName_Object = MibTableColumn
starFNGVpnName = _StarFNGVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 61, 1, 1, 3),
    _StarFNGVpnName_Type()
)
starFNGVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGVpnName.setStatus("current")
_StarFNGServName_Type = DisplayString
_StarFNGServName_Object = MibTableColumn
starFNGServName = _StarFNGServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 61, 1, 1, 4),
    _StarFNGServName_Type()
)
starFNGServName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGServName.setStatus("current")


class _StarFNGStatus_Type(Integer32):
    """Custom type starFNGStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inservice", 1),
          ("outofservice", 2),
          ("unknown", 0))
    )


_StarFNGStatus_Type.__name__ = "Integer32"
_StarFNGStatus_Object = MibTableColumn
starFNGStatus = _StarFNGStatus_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 61, 1, 1, 5),
    _StarFNGStatus_Type()
)
starFNGStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGStatus.setStatus("current")
_StarFNGSessCurrent_Type = Gauge32
_StarFNGSessCurrent_Object = MibTableColumn
starFNGSessCurrent = _StarFNGSessCurrent_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 61, 1, 1, 6),
    _StarFNGSessCurrent_Type()
)
starFNGSessCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGSessCurrent.setStatus("current")
_StarFNGSessRemain_Type = Gauge32
_StarFNGSessRemain_Object = MibTableColumn
starFNGSessRemain = _StarFNGSessRemain_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 61, 1, 1, 7),
    _StarFNGSessRemain_Type()
)
starFNGSessRemain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGSessRemain.setStatus("current")
_StarFNGSessCurrentActive_Type = Gauge32
_StarFNGSessCurrentActive_Object = MibTableColumn
starFNGSessCurrentActive = _StarFNGSessCurrentActive_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 61, 1, 1, 8),
    _StarFNGSessCurrentActive_Type()
)
starFNGSessCurrentActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGSessCurrentActive.setStatus("current")
_StarFNGSessCurrentDormant_Type = Gauge32
_StarFNGSessCurrentDormant_Object = MibTableColumn
starFNGSessCurrentDormant = _StarFNGSessCurrentDormant_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 61, 1, 1, 9),
    _StarFNGSessCurrentDormant_Type()
)
starFNGSessCurrentDormant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGSessCurrentDormant.setStatus("current")
_StarFNGSessCurrentIpv6Active_Type = Gauge32
_StarFNGSessCurrentIpv6Active_Object = MibTableColumn
starFNGSessCurrentIpv6Active = _StarFNGSessCurrentIpv6Active_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 61, 1, 1, 10),
    _StarFNGSessCurrentIpv6Active_Type()
)
starFNGSessCurrentIpv6Active.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGSessCurrentIpv6Active.setStatus("current")
_StarFNGSessCurrentIpv6Dormant_Type = Gauge32
_StarFNGSessCurrentIpv6Dormant_Object = MibTableColumn
starFNGSessCurrentIpv6Dormant = _StarFNGSessCurrentIpv6Dormant_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 61, 1, 1, 11),
    _StarFNGSessCurrentIpv6Dormant_Type()
)
starFNGSessCurrentIpv6Dormant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGSessCurrentIpv6Dormant.setStatus("current")
_StarFNGSessCurrentIpv4Active_Type = Gauge32
_StarFNGSessCurrentIpv4Active_Object = MibTableColumn
starFNGSessCurrentIpv4Active = _StarFNGSessCurrentIpv4Active_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 61, 1, 1, 12),
    _StarFNGSessCurrentIpv4Active_Type()
)
starFNGSessCurrentIpv4Active.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGSessCurrentIpv4Active.setStatus("current")
_StarFNGSessCurrentIpv4Dormant_Type = Gauge32
_StarFNGSessCurrentIpv4Dormant_Object = MibTableColumn
starFNGSessCurrentIpv4Dormant = _StarFNGSessCurrentIpv4Dormant_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 61, 1, 1, 13),
    _StarFNGSessCurrentIpv4Dormant_Type()
)
starFNGSessCurrentIpv4Dormant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGSessCurrentIpv4Dormant.setStatus("current")
_StarFNGBindIpAddress_Type = IpAddress
_StarFNGBindIpAddress_Object = MibTableColumn
starFNGBindIpAddress = _StarFNGBindIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 61, 1, 1, 14),
    _StarFNGBindIpAddress_Type()
)
starFNGBindIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGBindIpAddress.setStatus("current")
_StarFNGBindIpPort_Type = Integer32
_StarFNGBindIpPort_Object = MibTableColumn
starFNGBindIpPort = _StarFNGBindIpPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 61, 1, 1, 15),
    _StarFNGBindIpPort_Type()
)
starFNGBindIpPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGBindIpPort.setStatus("current")
_StarFNGBindSlot_Type = Integer32
_StarFNGBindSlot_Object = MibTableColumn
starFNGBindSlot = _StarFNGBindSlot_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 61, 1, 1, 16),
    _StarFNGBindSlot_Type()
)
starFNGBindSlot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGBindSlot.setStatus("current")
_StarFNGBindPort_Type = Integer32
_StarFNGBindPort_Object = MibTableColumn
starFNGBindPort = _StarFNGBindPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 61, 1, 1, 17),
    _StarFNGBindPort_Type()
)
starFNGBindPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starFNGBindPort.setStatus("current")
_StarentPDGSys_ObjectIdentity = ObjectIdentity
starentPDGSys = _StarentPDGSys_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 62)
)


class _StarPDGSysStatus_Type(Integer32):
    """Custom type starPDGSysStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("active", 2),
          ("noservice", 1),
          ("outofservice", 4),
          ("temporary", 3),
          ("unknown", 0))
    )


_StarPDGSysStatus_Type.__name__ = "Integer32"
_StarPDGSysStatus_Object = MibScalar
starPDGSysStatus = _StarPDGSysStatus_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 62, 1),
    _StarPDGSysStatus_Type()
)
starPDGSysStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGSysStatus.setStatus("current")
_StarPDGSysNumService_Type = Unsigned32
_StarPDGSysNumService_Object = MibScalar
starPDGSysNumService = _StarPDGSysNumService_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 62, 2),
    _StarPDGSysNumService_Type()
)
starPDGSysNumService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGSysNumService.setStatus("current")
if mibBuilder.loadTexts:
    starPDGSysNumService.setUnits("Services")
_StarPDGSysSessCurrent_Type = Gauge32
_StarPDGSysSessCurrent_Object = MibScalar
starPDGSysSessCurrent = _StarPDGSysSessCurrent_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 62, 3),
    _StarPDGSysSessCurrent_Type()
)
starPDGSysSessCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGSysSessCurrent.setStatus("current")
_StarPDGSysSessCurrActive_Type = Gauge32
_StarPDGSysSessCurrActive_Object = MibScalar
starPDGSysSessCurrActive = _StarPDGSysSessCurrActive_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 62, 4),
    _StarPDGSysSessCurrActive_Type()
)
starPDGSysSessCurrActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGSysSessCurrActive.setStatus("current")
_StarPDGSysSessCurrDormant_Type = Gauge32
_StarPDGSysSessCurrDormant_Object = MibScalar
starPDGSysSessCurrDormant = _StarPDGSysSessCurrDormant_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 62, 5),
    _StarPDGSysSessCurrDormant_Type()
)
starPDGSysSessCurrDormant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGSysSessCurrDormant.setStatus("current")
_StarPDGSysSessTtlSetup_Type = Counter32
_StarPDGSysSessTtlSetup_Object = MibScalar
starPDGSysSessTtlSetup = _StarPDGSysSessTtlSetup_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 62, 6),
    _StarPDGSysSessTtlSetup_Type()
)
starPDGSysSessTtlSetup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGSysSessTtlSetup.setStatus("current")
_StarPDGSysChildSACurrent_Type = Gauge32
_StarPDGSysChildSACurrent_Object = MibScalar
starPDGSysChildSACurrent = _StarPDGSysChildSACurrent_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 62, 7),
    _StarPDGSysChildSACurrent_Type()
)
starPDGSysChildSACurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGSysChildSACurrent.setStatus("current")
_StarentPDGService_ObjectIdentity = ObjectIdentity
starentPDGService = _StarentPDGService_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 63)
)
_StarPDGTable_Object = MibTable
starPDGTable = _StarPDGTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 63, 1)
)
if mibBuilder.loadTexts:
    starPDGTable.setStatus("current")
_StarPDGEntry_Object = MibTableRow
starPDGEntry = _StarPDGEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 63, 1, 1)
)
starPDGEntry.setIndexNames(
    (1, "STARENT-MIB", "starPDGSvcID"),
)
if mibBuilder.loadTexts:
    starPDGEntry.setStatus("current")
_StarPDGSvcID_Type = StarShortID
_StarPDGSvcID_Object = MibTableColumn
starPDGSvcID = _StarPDGSvcID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 63, 1, 1, 1),
    _StarPDGSvcID_Type()
)
starPDGSvcID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starPDGSvcID.setStatus("current")
_StarPDGVpnID_Type = Gauge32
_StarPDGVpnID_Object = MibTableColumn
starPDGVpnID = _StarPDGVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 63, 1, 1, 2),
    _StarPDGVpnID_Type()
)
starPDGVpnID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGVpnID.setStatus("current")
_StarPDGVpnName_Type = DisplayString
_StarPDGVpnName_Object = MibTableColumn
starPDGVpnName = _StarPDGVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 63, 1, 1, 3),
    _StarPDGVpnName_Type()
)
starPDGVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGVpnName.setStatus("current")
_StarPDGServName_Type = DisplayString
_StarPDGServName_Object = MibTableColumn
starPDGServName = _StarPDGServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 63, 1, 1, 4),
    _StarPDGServName_Type()
)
starPDGServName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGServName.setStatus("current")


class _StarPDGStatus_Type(Integer32):
    """Custom type starPDGStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inservice", 1),
          ("outofservice", 2),
          ("unknown", 0))
    )


_StarPDGStatus_Type.__name__ = "Integer32"
_StarPDGStatus_Object = MibTableColumn
starPDGStatus = _StarPDGStatus_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 63, 1, 1, 5),
    _StarPDGStatus_Type()
)
starPDGStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGStatus.setStatus("current")
_StarPDGSessCurrent_Type = Gauge32
_StarPDGSessCurrent_Object = MibTableColumn
starPDGSessCurrent = _StarPDGSessCurrent_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 63, 1, 1, 6),
    _StarPDGSessCurrent_Type()
)
starPDGSessCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGSessCurrent.setStatus("current")
_StarPDGSessRemain_Type = Gauge32
_StarPDGSessRemain_Object = MibTableColumn
starPDGSessRemain = _StarPDGSessRemain_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 63, 1, 1, 7),
    _StarPDGSessRemain_Type()
)
starPDGSessRemain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGSessRemain.setStatus("current")
_StarPDGSessCurrentActive_Type = Gauge32
_StarPDGSessCurrentActive_Object = MibTableColumn
starPDGSessCurrentActive = _StarPDGSessCurrentActive_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 63, 1, 1, 8),
    _StarPDGSessCurrentActive_Type()
)
starPDGSessCurrentActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGSessCurrentActive.setStatus("current")
_StarPDGSessCurrentDormant_Type = Gauge32
_StarPDGSessCurrentDormant_Object = MibTableColumn
starPDGSessCurrentDormant = _StarPDGSessCurrentDormant_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 63, 1, 1, 9),
    _StarPDGSessCurrentDormant_Type()
)
starPDGSessCurrentDormant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGSessCurrentDormant.setStatus("current")
_StarPDGSessCurrentIpv6Active_Type = Gauge32
_StarPDGSessCurrentIpv6Active_Object = MibTableColumn
starPDGSessCurrentIpv6Active = _StarPDGSessCurrentIpv6Active_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 63, 1, 1, 10),
    _StarPDGSessCurrentIpv6Active_Type()
)
starPDGSessCurrentIpv6Active.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGSessCurrentIpv6Active.setStatus("current")
_StarPDGSessCurrentIpv6Dormant_Type = Gauge32
_StarPDGSessCurrentIpv6Dormant_Object = MibTableColumn
starPDGSessCurrentIpv6Dormant = _StarPDGSessCurrentIpv6Dormant_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 63, 1, 1, 11),
    _StarPDGSessCurrentIpv6Dormant_Type()
)
starPDGSessCurrentIpv6Dormant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGSessCurrentIpv6Dormant.setStatus("current")
_StarPDGSessCurrentIpv4Active_Type = Gauge32
_StarPDGSessCurrentIpv4Active_Object = MibTableColumn
starPDGSessCurrentIpv4Active = _StarPDGSessCurrentIpv4Active_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 63, 1, 1, 12),
    _StarPDGSessCurrentIpv4Active_Type()
)
starPDGSessCurrentIpv4Active.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGSessCurrentIpv4Active.setStatus("current")
_StarPDGSessCurrentIpv4Dormant_Type = Gauge32
_StarPDGSessCurrentIpv4Dormant_Object = MibTableColumn
starPDGSessCurrentIpv4Dormant = _StarPDGSessCurrentIpv4Dormant_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 63, 1, 1, 13),
    _StarPDGSessCurrentIpv4Dormant_Type()
)
starPDGSessCurrentIpv4Dormant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGSessCurrentIpv4Dormant.setStatus("current")
_StarPDGBindIpAddress_Type = IpAddress
_StarPDGBindIpAddress_Object = MibTableColumn
starPDGBindIpAddress = _StarPDGBindIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 63, 1, 1, 14),
    _StarPDGBindIpAddress_Type()
)
starPDGBindIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGBindIpAddress.setStatus("current")
_StarPDGBindIpPort_Type = Integer32
_StarPDGBindIpPort_Object = MibTableColumn
starPDGBindIpPort = _StarPDGBindIpPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 63, 1, 1, 15),
    _StarPDGBindIpPort_Type()
)
starPDGBindIpPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGBindIpPort.setStatus("current")
_StarPDGBindSlot_Type = Integer32
_StarPDGBindSlot_Object = MibTableColumn
starPDGBindSlot = _StarPDGBindSlot_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 63, 1, 1, 16),
    _StarPDGBindSlot_Type()
)
starPDGBindSlot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGBindSlot.setStatus("current")
_StarPDGBindPort_Type = Integer32
_StarPDGBindPort_Object = MibTableColumn
starPDGBindPort = _StarPDGBindPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 63, 1, 1, 17),
    _StarPDGBindPort_Type()
)
starPDGBindPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starPDGBindPort.setStatus("current")
_StarentIPPoolGroup_ObjectIdentity = ObjectIdentity
starentIPPoolGroup = _StarentIPPoolGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 64)
)
_StarIPPoolGroupTable_Object = MibTable
starIPPoolGroupTable = _StarIPPoolGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 64, 1)
)
if mibBuilder.loadTexts:
    starIPPoolGroupTable.setStatus("current")
_StarIPPoolGroupEntry_Object = MibTableRow
starIPPoolGroupEntry = _StarIPPoolGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 64, 1, 1)
)
starIPPoolGroupEntry.setIndexNames(
    (1, "STARENT-MIB", "starIPPoolGroupID"),
)
if mibBuilder.loadTexts:
    starIPPoolGroupEntry.setStatus("current")
_StarIPPoolGroupVpnID_Type = Gauge32
_StarIPPoolGroupVpnID_Object = MibTableColumn
starIPPoolGroupVpnID = _StarIPPoolGroupVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 64, 1, 1, 1),
    _StarIPPoolGroupVpnID_Type()
)
starIPPoolGroupVpnID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starIPPoolGroupVpnID.setStatus("current")
_StarIPPoolGroupID_Type = StarMediumID
_StarIPPoolGroupID_Object = MibTableColumn
starIPPoolGroupID = _StarIPPoolGroupID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 64, 1, 1, 2),
    _StarIPPoolGroupID_Type()
)
starIPPoolGroupID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starIPPoolGroupID.setStatus("current")
_StarIPPoolGroupName_Type = DisplayString
_StarIPPoolGroupName_Object = MibTableColumn
starIPPoolGroupName = _StarIPPoolGroupName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 64, 1, 1, 3),
    _StarIPPoolGroupName_Type()
)
starIPPoolGroupName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPPoolGroupName.setStatus("current")
_StarIPPoolGroupVpnName_Type = DisplayString
_StarIPPoolGroupVpnName_Object = MibTableColumn
starIPPoolGroupVpnName = _StarIPPoolGroupVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 64, 1, 1, 4),
    _StarIPPoolGroupVpnName_Type()
)
starIPPoolGroupVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPPoolGroupVpnName.setStatus("current")
_StarIPPoolGroupUsed_Type = Gauge32
_StarIPPoolGroupUsed_Object = MibTableColumn
starIPPoolGroupUsed = _StarIPPoolGroupUsed_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 64, 1, 1, 5),
    _StarIPPoolGroupUsed_Type()
)
starIPPoolGroupUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPPoolGroupUsed.setStatus("current")
_StarIPPoolGroupHold_Type = Gauge32
_StarIPPoolGroupHold_Object = MibTableColumn
starIPPoolGroupHold = _StarIPPoolGroupHold_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 64, 1, 1, 6),
    _StarIPPoolGroupHold_Type()
)
starIPPoolGroupHold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPPoolGroupHold.setStatus("current")
_StarIPPoolGroupRelease_Type = Gauge32
_StarIPPoolGroupRelease_Object = MibTableColumn
starIPPoolGroupRelease = _StarIPPoolGroupRelease_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 64, 1, 1, 7),
    _StarIPPoolGroupRelease_Type()
)
starIPPoolGroupRelease.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPPoolGroupRelease.setStatus("current")
_StarIPPoolGroupFree_Type = Gauge32
_StarIPPoolGroupFree_Object = MibTableColumn
starIPPoolGroupFree = _StarIPPoolGroupFree_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 64, 1, 1, 8),
    _StarIPPoolGroupFree_Type()
)
starIPPoolGroupFree.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPPoolGroupFree.setStatus("current")


class _StarIPPoolGroupPctUsed_Type(Integer32):
    """Custom type starIPPoolGroupPctUsed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_StarIPPoolGroupPctUsed_Type.__name__ = "Integer32"
_StarIPPoolGroupPctUsed_Object = MibTableColumn
starIPPoolGroupPctUsed = _StarIPPoolGroupPctUsed_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 64, 1, 1, 9),
    _StarIPPoolGroupPctUsed_Type()
)
starIPPoolGroupPctUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPPoolGroupPctUsed.setStatus("current")
if mibBuilder.loadTexts:
    starIPPoolGroupPctUsed.setUnits("percentage times 100")
_StarIPPoolGroupAvail_Type = Gauge32
_StarIPPoolGroupAvail_Object = MibTableColumn
starIPPoolGroupAvail = _StarIPPoolGroupAvail_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 64, 1, 1, 10),
    _StarIPPoolGroupAvail_Type()
)
starIPPoolGroupAvail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starIPPoolGroupAvail.setStatus("current")
_StarentHNBGWService_ObjectIdentity = ObjectIdentity
starentHNBGWService = _StarentHNBGWService_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 65)
)
_StarHNBGWServTable_Object = MibTable
starHNBGWServTable = _StarHNBGWServTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 65, 1)
)
if mibBuilder.loadTexts:
    starHNBGWServTable.setStatus("current")
_StarHNBGWServEntry_Object = MibTableRow
starHNBGWServEntry = _StarHNBGWServEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 65, 1, 1)
)
starHNBGWServEntry.setIndexNames(
    (0, "STARENT-MIB", "starHNBGWServVpnID"),
    (0, "STARENT-MIB", "starHNBGWServSvcID"),
)
if mibBuilder.loadTexts:
    starHNBGWServEntry.setStatus("current")
_StarHNBGWServVpnID_Type = Gauge32
_StarHNBGWServVpnID_Object = MibTableColumn
starHNBGWServVpnID = _StarHNBGWServVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 65, 1, 1, 1),
    _StarHNBGWServVpnID_Type()
)
starHNBGWServVpnID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starHNBGWServVpnID.setStatus("current")
_StarHNBGWServSvcID_Type = Gauge32
_StarHNBGWServSvcID_Object = MibTableColumn
starHNBGWServSvcID = _StarHNBGWServSvcID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 65, 1, 1, 2),
    _StarHNBGWServSvcID_Type()
)
starHNBGWServSvcID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starHNBGWServSvcID.setStatus("current")
_StarSessHNBGWVpnName_Type = DisplayString
_StarSessHNBGWVpnName_Object = MibTableColumn
starSessHNBGWVpnName = _StarSessHNBGWVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 65, 1, 1, 3),
    _StarSessHNBGWVpnName_Type()
)
starSessHNBGWVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessHNBGWVpnName.setStatus("current")
_StarSessHNBGWServName_Type = DisplayString
_StarSessHNBGWServName_Object = MibTableColumn
starSessHNBGWServName = _StarSessHNBGWServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 65, 1, 1, 4),
    _StarSessHNBGWServName_Type()
)
starSessHNBGWServName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessHNBGWServName.setStatus("current")
_StarSessHNBGWCsNwName_Type = DisplayString
_StarSessHNBGWCsNwName_Object = MibTableColumn
starSessHNBGWCsNwName = _StarSessHNBGWCsNwName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 65, 1, 1, 5),
    _StarSessHNBGWCsNwName_Type()
)
starSessHNBGWCsNwName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessHNBGWCsNwName.setStatus("current")
_StarSessHNBGWPsNwName_Type = DisplayString
_StarSessHNBGWPsNwName_Object = MibTableColumn
starSessHNBGWPsNwName = _StarSessHNBGWPsNwName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 65, 1, 1, 6),
    _StarSessHNBGWPsNwName_Type()
)
starSessHNBGWPsNwName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessHNBGWPsNwName.setStatus("current")
_StarSessHNBGWSgsnPtCd_Type = Integer32
_StarSessHNBGWSgsnPtCd_Object = MibTableColumn
starSessHNBGWSgsnPtCd = _StarSessHNBGWSgsnPtCd_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 65, 1, 1, 7),
    _StarSessHNBGWSgsnPtCd_Type()
)
starSessHNBGWSgsnPtCd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessHNBGWSgsnPtCd.setStatus("current")
_StarSessHNBGWMscPtCd_Type = Integer32
_StarSessHNBGWMscPtCd_Object = MibTableColumn
starSessHNBGWMscPtCd = _StarSessHNBGWMscPtCd_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 65, 1, 1, 8),
    _StarSessHNBGWMscPtCd_Type()
)
starSessHNBGWMscPtCd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessHNBGWMscPtCd.setStatus("current")
_StarentALCAPService_ObjectIdentity = ObjectIdentity
starentALCAPService = _StarentALCAPService_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 66)
)
_StarALCAPServTable_Object = MibTable
starALCAPServTable = _StarALCAPServTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 66, 1)
)
if mibBuilder.loadTexts:
    starALCAPServTable.setStatus("current")
_StarALCAPServEntry_Object = MibTableRow
starALCAPServEntry = _StarALCAPServEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 66, 1, 1)
)
starALCAPServEntry.setIndexNames(
    (0, "STARENT-MIB", "starALCAPSerVpnID"),
    (0, "STARENT-MIB", "starALCAPSerSvcID"),
)
if mibBuilder.loadTexts:
    starALCAPServEntry.setStatus("current")
_StarALCAPSerVpnID_Type = Gauge32
_StarALCAPSerVpnID_Object = MibTableColumn
starALCAPSerVpnID = _StarALCAPSerVpnID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 66, 1, 1, 1),
    _StarALCAPSerVpnID_Type()
)
starALCAPSerVpnID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starALCAPSerVpnID.setStatus("current")
_StarALCAPSerSvcID_Type = Gauge32
_StarALCAPSerSvcID_Object = MibTableColumn
starALCAPSerSvcID = _StarALCAPSerSvcID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 66, 1, 1, 2),
    _StarALCAPSerSvcID_Type()
)
starALCAPSerSvcID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starALCAPSerSvcID.setStatus("current")
_StarSessALCAPVpnName_Type = DisplayString
_StarSessALCAPVpnName_Object = MibTableColumn
starSessALCAPVpnName = _StarSessALCAPVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 66, 1, 1, 3),
    _StarSessALCAPVpnName_Type()
)
starSessALCAPVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessALCAPVpnName.setStatus("current")
_StarSessALCAPServName_Type = DisplayString
_StarSessALCAPServName_Object = MibTableColumn
starSessALCAPServName = _StarSessALCAPServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 66, 1, 1, 4),
    _StarSessALCAPServName_Type()
)
starSessALCAPServName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessALCAPServName.setStatus("current")
_StarSessALCAPAAL2NodeName_Type = DisplayString
_StarSessALCAPAAL2NodeName_Object = MibTableColumn
starSessALCAPAAL2NodeName = _StarSessALCAPAAL2NodeName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 66, 1, 1, 5),
    _StarSessALCAPAAL2NodeName_Type()
)
starSessALCAPAAL2NodeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessALCAPAAL2NodeName.setStatus("current")
_StarSessALCAPPathId_Type = Integer32
_StarSessALCAPPathId_Object = MibTableColumn
starSessALCAPPathId = _StarSessALCAPPathId_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 66, 1, 1, 6),
    _StarSessALCAPPathId_Type()
)
starSessALCAPPathId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starSessALCAPPathId.setStatus("current")
_StarentMMES1Assoc_ObjectIdentity = ObjectIdentity
starentMMES1Assoc = _StarentMMES1Assoc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 67)
)
_StarMMES1AssocTable_Object = MibTable
starMMES1AssocTable = _StarMMES1AssocTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 67, 1)
)
if mibBuilder.loadTexts:
    starMMES1AssocTable.setStatus("current")
_StarMMES1AssocEntry_Object = MibTableRow
starMMES1AssocEntry = _StarMMES1AssocEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 67, 1, 1)
)
starMMES1AssocEntry.setIndexNames(
    (0, "STARENT-MIB", "starMMES1AssocSvcID"),
    (0, "STARENT-MIB", "starMMES1AssocENBID"),
)
if mibBuilder.loadTexts:
    starMMES1AssocEntry.setStatus("current")
_StarMMES1AssocSvcID_Type = StarMediumID
_StarMMES1AssocSvcID_Object = MibTableColumn
starMMES1AssocSvcID = _StarMMES1AssocSvcID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 67, 1, 1, 1),
    _StarMMES1AssocSvcID_Type()
)
starMMES1AssocSvcID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starMMES1AssocSvcID.setStatus("current")
_StarMMES1AssocENBID_Type = StarENBID
_StarMMES1AssocENBID_Object = MibTableColumn
starMMES1AssocENBID = _StarMMES1AssocENBID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 67, 1, 1, 2),
    _StarMMES1AssocENBID_Type()
)
starMMES1AssocENBID.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starMMES1AssocENBID.setStatus("current")
_StarMMES1AssocVpnName_Type = DisplayString
_StarMMES1AssocVpnName_Object = MibTableColumn
starMMES1AssocVpnName = _StarMMES1AssocVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 67, 1, 1, 3),
    _StarMMES1AssocVpnName_Type()
)
starMMES1AssocVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMMES1AssocVpnName.setStatus("current")
_StarMMES1AssocServName_Type = DisplayString
_StarMMES1AssocServName_Object = MibTableColumn
starMMES1AssocServName = _StarMMES1AssocServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 67, 1, 1, 4),
    _StarMMES1AssocServName_Type()
)
starMMES1AssocServName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMMES1AssocServName.setStatus("current")
_StarentMMES1Path_ObjectIdentity = ObjectIdentity
starentMMES1Path = _StarentMMES1Path_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 1, 70)
)
_StarMMES1PathTable_Object = MibTable
starMMES1PathTable = _StarMMES1PathTable_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 70, 1)
)
if mibBuilder.loadTexts:
    starMMES1PathTable.setStatus("current")
_StarMMES1PathEntry_Object = MibTableRow
starMMES1PathEntry = _StarMMES1PathEntry_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 70, 1, 1)
)
starMMES1PathEntry.setIndexNames(
    (0, "STARENT-MIB", "starMMES1PathSvcID"),
    (0, "STARENT-MIB", "starMMES1PathENBID"),
)
if mibBuilder.loadTexts:
    starMMES1PathEntry.setStatus("current")
_StarMMES1PathSvcID_Type = StarMediumID
_StarMMES1PathSvcID_Object = MibTableColumn
starMMES1PathSvcID = _StarMMES1PathSvcID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 70, 1, 1, 1),
    _StarMMES1PathSvcID_Type()
)
starMMES1PathSvcID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    starMMES1PathSvcID.setStatus("current")
_StarMMES1PathENBID_Type = StarENBID
_StarMMES1PathENBID_Object = MibTableColumn
starMMES1PathENBID = _StarMMES1PathENBID_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 70, 1, 1, 2),
    _StarMMES1PathENBID_Type()
)
starMMES1PathENBID.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    starMMES1PathENBID.setStatus("current")
_StarMMES1PathVpnName_Type = DisplayString
_StarMMES1PathVpnName_Object = MibTableColumn
starMMES1PathVpnName = _StarMMES1PathVpnName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 70, 1, 1, 3),
    _StarMMES1PathVpnName_Type()
)
starMMES1PathVpnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMMES1PathVpnName.setStatus("current")
_StarMMES1PathServName_Type = DisplayString
_StarMMES1PathServName_Object = MibTableColumn
starMMES1PathServName = _StarMMES1PathServName_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 70, 1, 1, 4),
    _StarMMES1PathServName_Type()
)
starMMES1PathServName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMMES1PathServName.setStatus("current")
_StarMMES1PathSelfAddr_Type = IpAddress
_StarMMES1PathSelfAddr_Object = MibTableColumn
starMMES1PathSelfAddr = _StarMMES1PathSelfAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 70, 1, 1, 5),
    _StarMMES1PathSelfAddr_Type()
)
starMMES1PathSelfAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMMES1PathSelfAddr.setStatus("current")
_StarMMES1PathSelfPort_Type = Gauge32
_StarMMES1PathSelfPort_Object = MibTableColumn
starMMES1PathSelfPort = _StarMMES1PathSelfPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 70, 1, 1, 6),
    _StarMMES1PathSelfPort_Type()
)
starMMES1PathSelfPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMMES1PathSelfPort.setStatus("current")
_StarMMES1PathPeerAddr_Type = IpAddress
_StarMMES1PathPeerAddr_Object = MibTableColumn
starMMES1PathPeerAddr = _StarMMES1PathPeerAddr_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 70, 1, 1, 7),
    _StarMMES1PathPeerAddr_Type()
)
starMMES1PathPeerAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMMES1PathPeerAddr.setStatus("current")
_StarMMES1PathPeerPort_Type = Gauge32
_StarMMES1PathPeerPort_Object = MibTableColumn
starMMES1PathPeerPort = _StarMMES1PathPeerPort_Object(
    (1, 3, 6, 1, 4, 1, 8164, 1, 70, 1, 1, 8),
    _StarMMES1PathPeerPort_Type()
)
starMMES1PathPeerPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    starMMES1PathPeerPort.setStatus("current")
_StarentTraps_ObjectIdentity = ObjectIdentity
starentTraps = _StarentTraps_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 2)
)
_StarentMIBConformance_ObjectIdentity = ObjectIdentity
starentMIBConformance = _StarentMIBConformance_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 3)
)
_StarentMIBGroups_ObjectIdentity = ObjectIdentity
starentMIBGroups = _StarentMIBGroups_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 3, 1)
)
_StarentMIBCompliances_ObjectIdentity = ObjectIdentity
starentMIBCompliances = _StarentMIBCompliances_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 8164, 3, 2)
)

# Managed Objects groups

starChassisGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 8164, 3, 1, 1)
)
starChassisGroup.setObjects(
      *(("STARENT-MIB", "starChassisCriticalCO"),
        ("STARENT-MIB", "starChassisMajorCO"),
        ("STARENT-MIB", "starChassisMinorCO"),
        ("STARENT-MIB", "starChassisAudibleAlarm"),
        ("STARENT-MIB", "starChassisUTCTime"),
        ("STARENT-MIB", "starChassisLocalTime"),
        ("STARENT-MIB", "starChassisType"),
        ("STARENT-MIB", "starChassisAction"),
        ("STARENT-MIB", "starTimeTicks"),
        ("STARENT-MIB", "starChassisDescription"),
        ("STARENT-MIB", "starChassisSWRevision"),
        ("STARENT-MIB", "starChassisPeakCpuUsage"),
        ("STARENT-MIB", "starChassisPeakMemoryUsage"),
        ("STARENT-MIB", "starSlotType"),
        ("STARENT-MIB", "starCardType"),
        ("STARENT-MIB", "starCardOperState"),
        ("STARENT-MIB", "starCardAdminState"),
        ("STARENT-MIB", "starCardRevision"),
        ("STARENT-MIB", "starCardLastStateChange"),
        ("STARENT-MIB", "starCardMode"),
        ("STARENT-MIB", "starCardPacStandbyPriority"),
        ("STARENT-MIB", "starCardLock"),
        ("STARENT-MIB", "starCardHaltIssued"),
        ("STARENT-MIB", "starCardRebootPending"),
        ("STARENT-MIB", "starCardUsable"),
        ("STARENT-MIB", "starCardSinglePOF"),
        ("STARENT-MIB", "starCardAttachment"),
        ("STARENT-MIB", "starCardTemperature"),
        ("STARENT-MIB", "starSlotNumPorts"),
        ("STARENT-MIB", "starSlotAction"),
        ("STARENT-MIB", "starSlotVoltageState"),
        ("STARENT-MIB", "starSlotNumCPU"),
        ("STARENT-MIB", "starSlotPartNumber"),
        ("STARENT-MIB", "starSlotPartRevision"),
        ("STARENT-MIB", "starSlotSerialNumber"),
        ("STARENT-MIB", "starSlotCLEICode"),
        ("STARENT-MIB", "starSlotCiscoModelName"),
        ("STARENT-MIB", "starSlotCiscoHardwareRev"),
        ("STARENT-MIB", "starSlotCiscoSerialNumber"),
        ("STARENT-MIB", "starDeviceNum"),
        ("STARENT-MIB", "starSerdesNum"),
        ("STARENT-MIB", "starSlotMappingType"),
        ("STARENT-MIB", "starSlotMappingRCCNum"),
        ("STARENT-MIB", "starSlotMappingToSlot"),
        ("STARENT-MIB", "starNPUSlot"),
        ("STARENT-MIB", "starFanNum"),
        ("STARENT-MIB", "starFanLocation"),
        ("STARENT-MIB", "starFanStatus"),
        ("STARENT-MIB", "starFanSpeed"),
        ("STARENT-MIB", "starLogCurSize"),
        ("STARENT-MIB", "starLogMaxSize"),
        ("STARENT-MIB", "starLogText"),
        ("STARENT-MIB", "starPowerState"),
        ("STARENT-MIB", "starCPUUser"),
        ("STARENT-MIB", "starCPUSystem"),
        ("STARENT-MIB", "starCPUIdle"),
        ("STARENT-MIB", "starCPUIO"),
        ("STARENT-MIB", "starCPUIRQ"),
        ("STARENT-MIB", "starCPULoad1Min"),
        ("STARENT-MIB", "starCPULoad5Min"),
        ("STARENT-MIB", "starCPULoad15Min"),
        ("STARENT-MIB", "starCPUMemTotal"),
        ("STARENT-MIB", "starCPUMemUsed"),
        ("STARENT-MIB", "starCPUNumProcesses"),
        ("STARENT-MIB", "starCPUMemCached"),
        ("STARENT-MIB", "starSessInProgCalls"),
        ("STARENT-MIB", "starSessInProgActiveCalls"),
        ("STARENT-MIB", "starSessInProgDormantCalls"),
        ("STARENT-MIB", "starSessInProgArrived"),
        ("STARENT-MIB", "starSessInProgLCPNeg"),
        ("STARENT-MIB", "starSessInProgLCPUp"),
        ("STARENT-MIB", "starSessInProgAuthenticating"),
        ("STARENT-MIB", "starSessInProgAuthenticated"),
        ("STARENT-MIB", "starSessInProgIPCPUp"),
        ("STARENT-MIB", "starSessInProgSIPConn"),
        ("STARENT-MIB", "starSessInProgMIPConn"),
        ("STARENT-MIB", "starSessInProgDisc"),
        ("STARENT-MIB", "starSessMgrCount"),
        ("STARENT-MIB", "starSessTtlArrived"),
        ("STARENT-MIB", "starSessTtlRejected"),
        ("STARENT-MIB", "starSessTtlConnected"),
        ("STARENT-MIB", "starSessTtlAuthSucc"),
        ("STARENT-MIB", "starSessTtlAuthFail"),
        ("STARENT-MIB", "starSessTtlLCPUp"),
        ("STARENT-MIB", "starSessTtlIPCPUp"),
        ("STARENT-MIB", "starSessTtlSrcViol"),
        ("STARENT-MIB", "starSessTtlKeepFail"),
        ("STARENT-MIB", "starSessTtlOctForwarded"),
        ("STARENT-MIB", "starSessTtlRPRegAccept"),
        ("STARENT-MIB", "starSessTtlRPRegAcceptInterPDSN"),
        ("STARENT-MIB", "starSessCurrPPPSessions"),
        ("STARENT-MIB", "starSessTtlTxBytes"),
        ("STARENT-MIB", "starSessTtlRxBytes"),
        ("STARENT-MIB", "starSessTtlSIPTxBytes"),
        ("STARENT-MIB", "starSessTtlSIPRxBytes"),
        ("STARENT-MIB", "starSessTtlMIPTxBytes"),
        ("STARENT-MIB", "starSessTtlMIPRxBytes"),
        ("STARENT-MIB", "starSessTtlOctForwardedGB"),
        ("STARENT-MIB", "starSessTtlOctForwardedRev1"),
        ("STARENT-MIB", "starSessTtlTxBytesRev1"),
        ("STARENT-MIB", "starSessTtlRxBytesRev1"),
        ("STARENT-MIB", "starSessTtlSIPTxBytesRev1"),
        ("STARENT-MIB", "starSessTtlSIPRxBytesRev1"),
        ("STARENT-MIB", "starSessTtlMIPTxBytesRev1"),
        ("STARENT-MIB", "starSessTtlMIPRxBytesRev1"),
        ("STARENT-MIB", "starSessTtlOctForwardedGBRev1"),
        ("STARENT-MIB", "starAAAMgrCount"),
        ("STARENT-MIB", "starAAATtlRequests"),
        ("STARENT-MIB", "starAAATtlAuthRequests"),
        ("STARENT-MIB", "starAAATtlAcctRequests"),
        ("STARENT-MIB", "starAAACurRequests"),
        ("STARENT-MIB", "starAAACurAuthRequests"),
        ("STARENT-MIB", "starAAACurAcctRequests"),
        ("STARENT-MIB", "starAAATtlAcctSess"),
        ("STARENT-MIB", "starAAACurAcctSess"),
        ("STARENT-MIB", "starAAATtlAuthSuccess"),
        ("STARENT-MIB", "starAAATtlAuthFailure"),
        ("STARENT-MIB", "starA11MgrCount"),
        ("STARENT-MIB", "starA11TtlArrived"),
        ("STARENT-MIB", "starA11TtlRejected"),
        ("STARENT-MIB", "starA11TtlDemultiplexed"),
        ("STARENT-MIB", "starA11TtlDereg"),
        ("STARENT-MIB", "starA11CurActive"),
        ("STARENT-MIB", "starHAMgrCount"),
        ("STARENT-MIB", "starHATtlArrived"),
        ("STARENT-MIB", "starHATtlRejected"),
        ("STARENT-MIB", "starHATtlDemultiplexed"),
        ("STARENT-MIB", "starHATtlDereg"),
        ("STARENT-MIB", "starHACurActive"),
        ("STARENT-MIB", "starFAMgrCount"),
        ("STARENT-MIB", "starFATtlArrived"),
        ("STARENT-MIB", "starFATtlRejected"),
        ("STARENT-MIB", "starFATtlDemultiplexed"),
        ("STARENT-MIB", "starFATtlDereg"),
        ("STARENT-MIB", "starFACurActive"),
        ("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starServiceSubLimit"),
        ("STARENT-MIB", "starServiceSubCurrent"),
        ("STARENT-MIB", "starServiceType"),
        ("STARENT-MIB", "starServiceFAIpAddr"),
        ("STARENT-MIB", "starServiceHAIpAddr"),
        ("STARENT-MIB", "starCLITtyname"),
        ("STARENT-MIB", "starCLIPrivs"),
        ("STARENT-MIB", "starCLIType"),
        ("STARENT-MIB", "starCLIRemoteIpAddrType"),
        ("STARENT-MIB", "starCLIRemoteIpAddr"),
        ("STARENT-MIB", "starCLIContext"),
        ("STARENT-MIB", "starTaskFacilityName"),
        ("STARENT-MIB", "starTaskCard"),
        ("STARENT-MIB", "starTaskCPU"),
        ("STARENT-MIB", "starPPPStatVpnName"),
        ("STARENT-MIB", "starPPPStatServName"),
        ("STARENT-MIB", "starPPPStatInit"),
        ("STARENT-MIB", "starPPPStatReneg"),
        ("STARENT-MIB", "starPPPStatSuccess"),
        ("STARENT-MIB", "starPPPStatFailed"),
        ("STARENT-MIB", "starPPPStatReleased"),
        ("STARENT-MIB", "starPPPStatReleasedLocal"),
        ("STARENT-MIB", "starPPPStatReleasedRemote"),
        ("STARENT-MIB", "starPPPStatLcpFailMaxRetry"),
        ("STARENT-MIB", "starPPPStatLcpFailOption"),
        ("STARENT-MIB", "starPPPStatIpcpFailMaxRetry"),
        ("STARENT-MIB", "starPPPStatIpcpFailOption"),
        ("STARENT-MIB", "starPPPStatCcpFail"),
        ("STARENT-MIB", "starPPPStatAuthFail"),
        ("STARENT-MIB", "starPPPStatLcpEntered"),
        ("STARENT-MIB", "starPPPStatAuthEntered"),
        ("STARENT-MIB", "starPPPStatIpcpEntered"),
        ("STARENT-MIB", "starPPPStatRenegPdsn"),
        ("STARENT-MIB", "starPPPStatRenegMobil"),
        ("STARENT-MIB", "starPPPStatRenegAddrMismatch"),
        ("STARENT-MIB", "starPPPStatRenegOther"),
        ("STARENT-MIB", "starPPPStatChapAuthAttempt"),
        ("STARENT-MIB", "starPPPStatPapAuthAttempt"),
        ("STARENT-MIB", "starPPPStatMSChapAuthAttempt"),
        ("STARENT-MIB", "starPPPStatChapAuthFail"),
        ("STARENT-MIB", "starPPPStatPapAuthFail"),
        ("STARENT-MIB", "starPPPStatMSChapAuthFail"),
        ("STARENT-MIB", "starPPPStatStacComp"),
        ("STARENT-MIB", "starPPPStatMppcComp"),
        ("STARENT-MIB", "starPPPStatDeflComp"),
        ("STARENT-MIB", "starPPPStatFscErrs"),
        ("STARENT-MIB", "starPPPStatUnknProto"),
        ("STARENT-MIB", "starPPPStatBadAddr"),
        ("STARENT-MIB", "starPPPStatBadCtrl"),
        ("STARENT-MIB", "starPPPStatVjComp"),
        ("STARENT-MIB", "starPPPStatDiscLcpRemote"),
        ("STARENT-MIB", "starPPPStatDiscRpRemote"),
        ("STARENT-MIB", "starPPPStatDiscAdmin"),
        ("STARENT-MIB", "starPPPStatDiscIdleTimeout"),
        ("STARENT-MIB", "starPPPStatDiscAbsTimeout"),
        ("STARENT-MIB", "starPPPStatDiscPPPKeepalive"),
        ("STARENT-MIB", "starPPPStatDiscNoResource"),
        ("STARENT-MIB", "starPPPStatDiscMisc"),
        ("STARENT-MIB", "starPPPStatFailedReneg"),
        ("STARENT-MIB", "starPPPStatLcpFailUnknown"),
        ("STARENT-MIB", "starPPPStatIpcpFailUnknown"),
        ("STARENT-MIB", "starPPPStatAuthAbort"),
        ("STARENT-MIB", "starPPPStatLowerLayerDisc"),
        ("STARENT-MIB", "starPPPStatLcpSuccess"),
        ("STARENT-MIB", "starPPPStatAuthSuccess"),
        ("STARENT-MIB", "starPPPStatRenegLowerLayerHandoff"),
        ("STARENT-MIB", "starPPPStatRenegParamUpdate"),
        ("STARENT-MIB", "starPPPStatChapAuthSuccess"),
        ("STARENT-MIB", "starPPPStatPapAuthSuccess"),
        ("STARENT-MIB", "starPPPStatMSChapAuthSuccess"),
        ("STARENT-MIB", "starPPPStatChapAuthAbort"),
        ("STARENT-MIB", "starPPPStatPapAuthAbort"),
        ("STARENT-MIB", "starPPPStatMSChapAuthAbort"),
        ("STARENT-MIB", "starPPPStatSessSkipAuth"),
        ("STARENT-MIB", "starPPPStatNegComp"),
        ("STARENT-MIB", "starPPPStatCCPNegFailComp"),
        ("STARENT-MIB", "starPPPStatDiscLocalLowerLayer"),
        ("STARENT-MIB", "starPPPStatDiscAddFlowFail"),
        ("STARENT-MIB", "starPPPStatDiscMaxRetriesLCP"),
        ("STARENT-MIB", "starPPPStatDiscMaxRetriesIPCP"),
        ("STARENT-MIB", "starPPPStatDiscMaxSetupTimer"),
        ("STARENT-MIB", "starPPPStatDiscInvalidDestVpn"),
        ("STARENT-MIB", "starPPPStatDiscOptNegFailLCP"),
        ("STARENT-MIB", "starPPPStatDiscOptNegFailIPCP"),
        ("STARENT-MIB", "starPPPStatDiscNoRemoteIpAddr"),
        ("STARENT-MIB", "starPPPStatDiscCallTypeDetectFail"),
        ("STARENT-MIB", "starPPPStatDiscRemoteDiscUpLayer"),
        ("STARENT-MIB", "starPPPStatDiscLongDuraTimeout"),
        ("STARENT-MIB", "starPPPStatDiscAuthFail"),
        ("STARENT-MIB", "starPPPStatLCPEchoTotalReq"),
        ("STARENT-MIB", "starPPPStatLCPEchoReqResent"),
        ("STARENT-MIB", "starPPPStatLCPEchoRepRecved"),
        ("STARENT-MIB", "starPPPStatLCPEchoReqTimeout"),
        ("STARENT-MIB", "starPPPStatRecvErrBadCtrlField"),
        ("STARENT-MIB", "starPPPStatRecvErrBadPacketLen"),
        ("STARENT-MIB", "starPPPStatRemoteTerm"),
        ("STARENT-MIB", "starPPPStatMiscFail"),
        ("STARENT-MIB", "starMIPHAStatVpnID"),
        ("STARENT-MIB", "starMIPHAStatVpnName"),
        ("STARENT-MIB", "starMIPHAStatServName"),
        ("STARENT-MIB", "starMIPHAStatDisconnects"),
        ("STARENT-MIB", "starMIPHAStatExpiry"),
        ("STARENT-MIB", "starMIPHAStatDereg"),
        ("STARENT-MIB", "starMIPHAStatAdminDrop"),
        ("STARENT-MIB", "starMIPHAStatRegRecvTotal"),
        ("STARENT-MIB", "starMIPHAStatRegRecvInitial"),
        ("STARENT-MIB", "starMIPHAStatRegRecvRenew"),
        ("STARENT-MIB", "starMIPHAStatRegRecvDereg"),
        ("STARENT-MIB", "starMIPHAStatRegAcceptTotal"),
        ("STARENT-MIB", "starMIPHAStatRegAcceptReg"),
        ("STARENT-MIB", "starMIPHAStatRegAcceptRenew"),
        ("STARENT-MIB", "starMIPHAStatRegAcceptDereg"),
        ("STARENT-MIB", "starMIPHAStatRegDeniedTotal"),
        ("STARENT-MIB", "starMIPHAStatRegDeniedInitial"),
        ("STARENT-MIB", "starMIPHAStatRegDeniedRenew"),
        ("STARENT-MIB", "starMIPHAStatRegDeniedDereg"),
        ("STARENT-MIB", "starMIPHAStatRegReplyTotal"),
        ("STARENT-MIB", "starMIPHAStatRegReplyAcceptReg"),
        ("STARENT-MIB", "starMIPHAStatRegReplyAcceptDereg"),
        ("STARENT-MIB", "starMIPHAStatRegReplyDenied"),
        ("STARENT-MIB", "starMIPHAStatRegReplyBadReq"),
        ("STARENT-MIB", "starMIPHAStatRegReplyMismatchID"),
        ("STARENT-MIB", "starMIPHAStatRegReplyAdminProhib"),
        ("STARENT-MIB", "starMIPHAStatRegReplyUnspecErr"),
        ("STARENT-MIB", "starMIPHAStatRegReplyNoResource"),
        ("STARENT-MIB", "starMIPHAStatRegReplyMnAuthFail"),
        ("STARENT-MIB", "starMIPHAStatRegReplyFAAuthFail"),
        ("STARENT-MIB", "starMIPHAStatRegReplySimulBind"),
        ("STARENT-MIB", "starMIPHAStatRegReplyUnknownHA"),
        ("STARENT-MIB", "starMIPHAStatRegReplyRevTunUnav"),
        ("STARENT-MIB", "starMIPHAStatRegReplyRevTunMand"),
        ("STARENT-MIB", "starMIPHAStatRegReplyEncapUnav"),
        ("STARENT-MIB", "starMIPHAStatRegReplySendError"),
        ("STARENT-MIB", "starMIPHAStatFARevocations"),
        ("STARENT-MIB", "starMIPHAStatRegAcceptHO"),
        ("STARENT-MIB", "starMIPHAStatRegDeniedHO"),
        ("STARENT-MIB", "starMIPHAStatRegDiscardTotal"),
        ("STARENT-MIB", "starMIPFAStatVpnID"),
        ("STARENT-MIB", "starMIPFAStatVpnName"),
        ("STARENT-MIB", "starMIPFAStatServName"),
        ("STARENT-MIB", "starMIPFAStatAdvertSend"),
        ("STARENT-MIB", "starMIPFAStatDiscExpiry"),
        ("STARENT-MIB", "starMIPFAStatDiscDereg"),
        ("STARENT-MIB", "starMIPFAStatDiscAdmin"),
        ("STARENT-MIB", "starMIPFAStatAuthAttempt"),
        ("STARENT-MIB", "starMIPFAStatAuthSuccess"),
        ("STARENT-MIB", "starMIPFAStatAuthFailure"),
        ("STARENT-MIB", "starMIPFAStatRegRecvTotal"),
        ("STARENT-MIB", "starMIPFAStatRegRecvInitial"),
        ("STARENT-MIB", "starMIPFAStatRegRecvRenewal"),
        ("STARENT-MIB", "starMIPFAStatRegRecvDereg"),
        ("STARENT-MIB", "starMIPFAStatRegAcceptTotal"),
        ("STARENT-MIB", "starMIPFAStatRegAcceptInitial"),
        ("STARENT-MIB", "starMIPFAStatRegAcceptRenewal"),
        ("STARENT-MIB", "starMIPFAStatRegAcceptDereg"),
        ("STARENT-MIB", "starMIPFAStatRegDenTotal"),
        ("STARENT-MIB", "starMIPFAStatRegDenInitial"),
        ("STARENT-MIB", "starMIPFAStatRegDenRenewal"),
        ("STARENT-MIB", "starMIPFAStatRegDenDereg"),
        ("STARENT-MIB", "starMIPFAStatRegDiscardTotal"),
        ("STARENT-MIB", "starMIPFAStatRegDiscardInitial"),
        ("STARENT-MIB", "starMIPFAStatRegDiscardRenewal"),
        ("STARENT-MIB", "starMIPFAStatRegDiscardDereg"),
        ("STARENT-MIB", "starMIPFAStatRegRelayedTotal"),
        ("STARENT-MIB", "starMIPFAStatRegRelayedInitial"),
        ("STARENT-MIB", "starMIPFAStatRegRelayedRenewal"),
        ("STARENT-MIB", "starMIPFAStatRegRelayedDereg"),
        ("STARENT-MIB", "starMIPFAStatRegAuthFailTotal"),
        ("STARENT-MIB", "starMIPFAStatRegAuthFailInitial"),
        ("STARENT-MIB", "starMIPFAStatRegAuthFailRenewal"),
        ("STARENT-MIB", "starMIPFAStatRegAuthFailDereg"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNTotal"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNInitial"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNRenewal"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNDereg"),
        ("STARENT-MIB", "starMIPFAStatRegDenHATotal"),
        ("STARENT-MIB", "starMIPFAStatRegDenHAInitial"),
        ("STARENT-MIB", "starMIPFAStatRegDenHARenewal"),
        ("STARENT-MIB", "starMIPFAStatRegDenHADereg"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNUnspec"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNTimeout"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNAdmin"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNResources"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNMnAuth"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNHAAuth"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNTooLong"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNBadReq"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNEncapUnav"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNRevTunUnav"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNRevTunMand"),
        ("STARENT-MIB", "starMIPFAStatRegDenHAFAAuth"),
        ("STARENT-MIB", "starMIPFAStatRegDenHABadReq"),
        ("STARENT-MIB", "starMIPFAStatRegDenHAMismatchID"),
        ("STARENT-MIB", "starMIPFAStatRegDenHASimulBind"),
        ("STARENT-MIB", "starMIPFAStatRegDenHAUnknownHA"),
        ("STARENT-MIB", "starMIPFAStatRegDenHARevRunUnavail"),
        ("STARENT-MIB", "starMIPFAStatRegRplRcvTotal"),
        ("STARENT-MIB", "starMIPFAStatRegRplRcvTotalRly"),
        ("STARENT-MIB", "starMIPFAStatRegRplRcvErrors"),
        ("STARENT-MIB", "starMIPFAStatRegRplRcvInitial"),
        ("STARENT-MIB", "starMIPFAStatRegRplRcvInitialRly"),
        ("STARENT-MIB", "starMIPFAStatRegRplRcvRenewal"),
        ("STARENT-MIB", "starMIPFAStatRegRplRcvRenewalRly"),
        ("STARENT-MIB", "starMIPFAStatRegRplRcvDereg"),
        ("STARENT-MIB", "starMIPFAStatRegRplRcvDeregRly"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentTotal"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentAcceptReg"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentAcceptDereg"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentBadReq"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentTooLong"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentMnAuthFail"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentHAAuthFail"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentAdminProhib"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentNoResources"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentRevTunUnav"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentRevTunMand"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentSendErrors"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNBadReply"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNMissNAI"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNMissHomeAgent"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNMissHomeAddr"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNUnknChallenge"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNMissChallenge"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNStaleChallenge"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNMNTooDistant"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNStyleUnavail"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNHANetUnreach"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNHAHostUnreach"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNHAPortUnreach"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNHAUnreach"),
        ("STARENT-MIB", "starMIPFAStatRegDenPDSNInvCOA"),
        ("STARENT-MIB", "starMIPFAStatRegReqSentInitTotal"),
        ("STARENT-MIB", "starMIPFAStatRegReqSentInitResend"),
        ("STARENT-MIB", "starMIPFAStatRegReqSentRenewTotal"),
        ("STARENT-MIB", "starMIPFAStatRegReqSentRenewResend"),
        ("STARENT-MIB", "starMIPFAStatRegReqSentDeregTotal"),
        ("STARENT-MIB", "starMIPFAStatRegReqSentDeregResend"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentMNTooDistant"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentInvCOA"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentHANetUnreach"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentHAHostUnreach"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentHAPortUnreach"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentHAUnreach"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentRegTimeout"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentMissNAI"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentMissHomeAgent"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentMissHomeAddr"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentUnknChallenge"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentMissChallenge"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentStaleChallenge"),
        ("STARENT-MIB", "starMIPFAStatRegRplSentBadReply"),
        ("STARENT-MIB", "starRPStatVpnID"),
        ("STARENT-MIB", "starRPStatVpnName"),
        ("STARENT-MIB", "starRPStatServName"),
        ("STARENT-MIB", "starRPRegRecvTotal"),
        ("STARENT-MIB", "starRPRegAcceptTotal"),
        ("STARENT-MIB", "starRPRegDeniedTotal"),
        ("STARENT-MIB", "starRPRegDiscardTotal"),
        ("STARENT-MIB", "starRPRegAcceptInitial"),
        ("STARENT-MIB", "starRPRegAcceptInterPDSN"),
        ("STARENT-MIB", "starRPRegDeniedInitial"),
        ("STARENT-MIB", "starRPRegAcceptRenew"),
        ("STARENT-MIB", "starRPRegDeniedRenew"),
        ("STARENT-MIB", "starRPRegAcceptDereg"),
        ("STARENT-MIB", "starRPRegDeniedDereg"),
        ("STARENT-MIB", "starRPRegSendError"),
        ("STARENT-MIB", "starRPRegHashError"),
        ("STARENT-MIB", "starRPRegDecodeError"),
        ("STARENT-MIB", "starRPRegUnhandled"),
        ("STARENT-MIB", "starRPRegAirlinkSeqError"),
        ("STARENT-MIB", "starRPRegDenyUnspec"),
        ("STARENT-MIB", "starRPRegDenyAdminProhib"),
        ("STARENT-MIB", "starRPRegDenyNoResource"),
        ("STARENT-MIB", "starRPRegDenyAuth"),
        ("STARENT-MIB", "starRPRegDenyMismatchID"),
        ("STARENT-MIB", "starRPRegDenyBadRequest"),
        ("STARENT-MIB", "starRPRegDenyUnknownPDSN"),
        ("STARENT-MIB", "starRPRegDenyRevTunUnav"),
        ("STARENT-MIB", "starRPRegDenyRevTunReq"),
        ("STARENT-MIB", "starRPRegDenyUnrecogVend"),
        ("STARENT-MIB", "starRPRegUpdTotal"),
        ("STARENT-MIB", "starRPRegUpdAccept"),
        ("STARENT-MIB", "starRPRegUpdDenied"),
        ("STARENT-MIB", "starRPRegUpdUnack"),
        ("STARENT-MIB", "starRPRegUpdTrans"),
        ("STARENT-MIB", "starRPRegUpdRetrans"),
        ("STARENT-MIB", "starRPRegUpdReceived"),
        ("STARENT-MIB", "starRPRegUpdDiscard"),
        ("STARENT-MIB", "starRPRegUpdSendError"),
        ("STARENT-MIB", "starRPRegUpdUplyrInit"),
        ("STARENT-MIB", "starRPRegUpdOther"),
        ("STARENT-MIB", "starRPRegUpdHandoff"),
        ("STARENT-MIB", "starRPRegUpdDenyUnspec"),
        ("STARENT-MIB", "starRPRegUpdDenyAdminProhib"),
        ("STARENT-MIB", "starRPRegUpdDenyAuth"),
        ("STARENT-MIB", "starRPRegUpdDenyMismatchID"),
        ("STARENT-MIB", "starRPRegUpdDenyBadRequest"),
        ("STARENT-MIB", "starRPSecViolations"),
        ("STARENT-MIB", "starRPSecBadAuth"),
        ("STARENT-MIB", "starRPSecBadID"),
        ("STARENT-MIB", "starRPSecBadSpi"),
        ("STARENT-MIB", "starRPSecMissingMnHAAuth"),
        ("STARENT-MIB", "starRPSecMissingRegUpdate"),
        ("STARENT-MIB", "starRPRegRecvInitial"),
        ("STARENT-MIB", "starRPRegAcceptActvStartIntraPDSN"),
        ("STARENT-MIB", "starRPRegAcceptActvStopIntraPDSN"),
        ("STARENT-MIB", "starRPRegRecvRenew"),
        ("STARENT-MIB", "starRPRegActvStartRenew"),
        ("STARENT-MIB", "starRPRegActvStopRenew"),
        ("STARENT-MIB", "starRPRegRecvDereg"),
        ("STARENT-MIB", "starRPRegAcceptActvStopDereg"),
        ("STARENT-MIB", "starRPDiscSessAbsent"),
        ("STARENT-MIB", "starRPDiscNoMemory"),
        ("STARENT-MIB", "starRPDiscMalformed"),
        ("STARENT-MIB", "starRPDiscAuthFail"),
        ("STARENT-MIB", "starRPDiscInternalBounce"),
        ("STARENT-MIB", "starRPDiscInpuQueueExceeded"),
        ("STARENT-MIB", "starRPDiscMismatchedId"),
        ("STARENT-MIB", "starRPDiscInvPacketLen"),
        ("STARENT-MIB", "starRPDiscMisc"),
        ("STARENT-MIB", "starRP1xTxBytes"),
        ("STARENT-MIB", "starRP1xRxBytes"),
        ("STARENT-MIB", "starRP1xTxPackets"),
        ("STARENT-MIB", "starRP1xRxPackets"),
        ("STARENT-MIB", "starRPDoTxBytes"),
        ("STARENT-MIB", "starRPDoRxBytes"),
        ("STARENT-MIB", "starRPDoTxPackets"),
        ("STARENT-MIB", "starRPDoRxPackets"),
        ("STARENT-MIB", "starSubContext"),
        ("STARENT-MIB", "starSubTimerDuration"),
        ("STARENT-MIB", "starSubLongDurTimeoutAction"),
        ("STARENT-MIB", "starSubSetupTime"),
        ("STARENT-MIB", "starSubHomeAddr"),
        ("STARENT-MIB", "starSubHomeAddrv6"),
        ("STARENT-MIB", "starEISServerVPNName"),
        ("STARENT-MIB", "starThreshMeasuredPct"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredInt"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredMB"),
        ("STARENT-MIB", "starThreshMB"),
        ("STARENT-MIB", "starThreshMeasuredGB"),
        ("STARENT-MIB", "starThreshGB"),
        ("STARENT-MIB", "starPortType"),
        ("STARENT-MIB", "starPortTypeDescr"),
        ("STARENT-MIB", "starPortAdminState"),
        ("STARENT-MIB", "starPortOperState"),
        ("STARENT-MIB", "starPortOperMode"),
        ("STARENT-MIB", "starPortLinkState"),
        ("STARENT-MIB", "starRedundantPortSlot"),
        ("STARENT-MIB", "starRedundantPortNum"),
        ("STARENT-MIB", "starPortRxBytes"),
        ("STARENT-MIB", "starPortTxBytes"),
        ("STARENT-MIB", "starPortRxFrames"),
        ("STARENT-MIB", "starPortTxFrames"),
        ("STARENT-MIB", "starPortRxDiscards"),
        ("STARENT-MIB", "starPortTxDiscards"),
        ("STARENT-MIB", "starPortRxErrors"),
        ("STARENT-MIB", "starPortTxErrors"),
        ("STARENT-MIB", "starIPPoolVpnID"),
        ("STARENT-MIB", "starIPPoolContext"),
        ("STARENT-MIB", "starIPPoolGroup"),
        ("STARENT-MIB", "starIPPoolName"),
        ("STARENT-MIB", "starIPPoolType"),
        ("STARENT-MIB", "starIPPoolState"),
        ("STARENT-MIB", "starIPPoolStartAddr"),
        ("STARENT-MIB", "starIPPoolMaskorEndAddr"),
        ("STARENT-MIB", "starIPPoolPriority"),
        ("STARENT-MIB", "starIPPoolUsed"),
        ("STARENT-MIB", "starIPPoolHold"),
        ("STARENT-MIB", "starIPPoolRelease"),
        ("STARENT-MIB", "starIPPoolFree"),
        ("STARENT-MIB", "starIPPoolGroupName"),
        ("STARENT-MIB", "starIPPoolGroupVpnName"),
        ("STARENT-MIB", "starIPPoolGroupUsed"),
        ("STARENT-MIB", "starIPPoolGroupHold"),
        ("STARENT-MIB", "starIPPoolGroupRelease"),
        ("STARENT-MIB", "starIPPoolGroupFree"),
        ("STARENT-MIB", "starIPPoolGroupPctUsed"),
        ("STARENT-MIB", "starIPPoolGroupAvail"),
        ("STARENT-MIB", "starLicensedSessions"),
        ("STARENT-MIB", "starCurrentSessions"),
        ("STARENT-MIB", "starDiameterVpnName"),
        ("STARENT-MIB", "starDiameterPeerAddr"),
        ("STARENT-MIB", "starDiameterEndpointName"),
        ("STARENT-MIB", "starDiameterPeerAddrIpv6"),
        ("STARENT-MIB", "starInterfaceIPAddress"),
        ("STARENT-MIB", "starOSPFNeighborRouterID"),
        ("STARENT-MIB", "starOSPFFromState"),
        ("STARENT-MIB", "starOSPFToState"),
        ("STARENT-MIB", "starDiameterECode"),
        ("STARENT-MIB", "starGSSCDRLossConfigured"),
        ("STARENT-MIB", "starGSSCDRLossMeasured"),
        ("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNServName"),
        ("STARENT-MIB", "starSessGGSNPeerPort"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"),
        ("STARENT-MIB", "starSessGGSNImsi"),
        ("STARENT-MIB", "starSessGGSNSubsName"),
        ("STARENT-MIB", "starSessGGSNAPNName"),
        ("STARENT-MIB", "starSessGTPPGroupName"),
        ("STARENT-MIB", "starL2TPContextName"),
        ("STARENT-MIB", "starL2TPServiceName"),
        ("STARENT-MIB", "starL2TPServiceTypeName"),
        ("STARENT-MIB", "starL2TPLocalAddress"),
        ("STARENT-MIB", "starL2TPPeerAddress"),
        ("STARENT-MIB", "starSessSub1Context"),
        ("STARENT-MIB", "starSessSub1NAI"),
        ("STARENT-MIB", "starSessSub1MSID"),
        ("STARENT-MIB", "starSessSub1IpAddr"),
        ("STARENT-MIB", "starSessSub1LastResult"),
        ("STARENT-MIB", "starSessSub1ServiceName"),
        ("STARENT-MIB", "starSessSub1HAIpAddr"),
        ("STARENT-MIB", "starSessSub1PeerIpAddr"),
        ("STARENT-MIB", "starSessSub1InPackets"),
        ("STARENT-MIB", "starSessSub1InPacketsDropped"),
        ("STARENT-MIB", "starSessSub1InBytes"),
        ("STARENT-MIB", "starSessSub1OutPackets"),
        ("STARENT-MIB", "starSessSub1OutPacketsDropped"),
        ("STARENT-MIB", "starSessSub1OutBytes"),
        ("STARENT-MIB", "starSessSub1Activity"),
        ("STARENT-MIB", "starSessSub1State"),
        ("STARENT-MIB", "starSessSub1CallID"),
        ("STARENT-MIB", "starSessSub1ConnectTime"),
        ("STARENT-MIB", "starSessSub1CallDuration"),
        ("STARENT-MIB", "starSessSub1TimeIdle"),
        ("STARENT-MIB", "starSessSub1AccessType"),
        ("STARENT-MIB", "starSessSub1AccessTech"),
        ("STARENT-MIB", "starSessSub1LinkStatus"),
        ("STARENT-MIB", "starSessSub1NetworkType"),
        ("STARENT-MIB", "starSessSub1CarrierID"),
        ("STARENT-MIB", "starSessSub1ESN"),
        ("STARENT-MIB", "starSessSub1GMTTimezoneOffset"),
        ("STARENT-MIB", "starSessSub1SessMgr"),
        ("STARENT-MIB", "starSessSub1RemoteIPAddr"),
        ("STARENT-MIB", "starSessSub1Card"),
        ("STARENT-MIB", "starSessSub1CPU"),
        ("STARENT-MIB", "starSessSub1TimeIdleLeft"),
        ("STARENT-MIB", "starSessSub1TimeLeft"),
        ("STARENT-MIB", "starSessSub1TimeLongDurLeft"),
        ("STARENT-MIB", "starSessSub1LongDurAction"),
        ("STARENT-MIB", "starSessSub1AlwaysOn"),
        ("STARENT-MIB", "starSessSub1IPPoolName"),
        ("STARENT-MIB", "starSessSub1VLANID"),
        ("STARENT-MIB", "starSessSub1LNSIPAddr"),
        ("STARENT-MIB", "starSessSub1ProxyMIP"),
        ("STARENT-MIB", "starSessSub1GGSNMIP"),
        ("STARENT-MIB", "starSessSub1HomeAgentIpAddr"),
        ("STARENT-MIB", "starSessSub1LocalIPAddr"),
        ("STARENT-MIB", "starSessSub1FAServiceName"),
        ("STARENT-MIB", "starSessSub1FAVPNName"),
        ("STARENT-MIB", "starSessSub1SourceVPN"),
        ("STARENT-MIB", "starSessSub1DestVPN"),
        ("STARENT-MIB", "starSessSub1AAAVPN"),
        ("STARENT-MIB", "starSessSub1AAADomain"),
        ("STARENT-MIB", "starSessSub1AAAStart"),
        ("STARENT-MIB", "starSessSub1AAAStop"),
        ("STARENT-MIB", "starSessSub1AAAInterim"),
        ("STARENT-MIB", "starSessSub1AcctSessionID"),
        ("STARENT-MIB", "starSessSub1AAARadiusGroup"),
        ("STARENT-MIB", "starSessSub1AAARadiusAuthServerIPAddr"),
        ("STARENT-MIB", "starSessSub1AAARadiusAcctServerIPAddr"),
        ("STARENT-MIB", "starSessSub1NASIPAddr"),
        ("STARENT-MIB", "starSessSub1NexthopIPAddr"),
        ("STARENT-MIB", "starSessSub1ActiveInACL"),
        ("STARENT-MIB", "starSessSub1ActiveOutACL"),
        ("STARENT-MIB", "starSessSub1ECSRulebase"),
        ("STARENT-MIB", "starSessSub1InPlcyGrp"),
        ("STARENT-MIB", "starSessSub1OutPlcyGrp"),
        ("STARENT-MIB", "starSessSub1DownTrafPolState"),
        ("STARENT-MIB", "starSessSub1DownCommDataRate"),
        ("STARENT-MIB", "starSessSub1DownPeakDataRate"),
        ("STARENT-MIB", "starSessSub1DownBurstSize"),
        ("STARENT-MIB", "starSessSub1DownExceedAction"),
        ("STARENT-MIB", "starSessSub1DownViolateAction"),
        ("STARENT-MIB", "starSessSub1DownExceed"),
        ("STARENT-MIB", "starSessSub1DownViolate"),
        ("STARENT-MIB", "starSessSub1UpTrafPolState"),
        ("STARENT-MIB", "starSessSub1UpCommDataRate"),
        ("STARENT-MIB", "starSessSub1UpPeakDataRate"),
        ("STARENT-MIB", "starSessSub1UpBurstSize"),
        ("STARENT-MIB", "starSessSub1UpExceedAction"),
        ("STARENT-MIB", "starSessSub1UpViolateAction"),
        ("STARENT-MIB", "starSessSub1UpExceed"),
        ("STARENT-MIB", "starSessSub1UpViolate"),
        ("STARENT-MIB", "starSessSub1L3TunnelingState"),
        ("STARENT-MIB", "starSessSub1L3TunLocalIPAddr"),
        ("STARENT-MIB", "starSessSub1L3TunRemoteIPAddr"),
        ("STARENT-MIB", "starSessSub1AddrViaDHCP"),
        ("STARENT-MIB", "starSessSub1DHCPServName"),
        ("STARENT-MIB", "starSessSub1DHCPServIPAddr"),
        ("STARENT-MIB", "starSessSub1AccessLinkIPFrag"),
        ("STARENT-MIB", "starSessSub1IgnoreDFBit"),
        ("STARENT-MIB", "starSessSub1MIPGratARPMode"),
        ("STARENT-MIB", "starSessSub1ExtInlSrvrProc"),
        ("STARENT-MIB", "starSessSub1ExtInlSrvrIngrIPAddr"),
        ("STARENT-MIB", "starSessSub1ExtInlSrvrIngrVLANTag"),
        ("STARENT-MIB", "starSessSub1ExtInlSrvrEgrIPAddr"),
        ("STARENT-MIB", "starSessSub1ExtInlSrvrEgrVLANTag"),
        ("STARENT-MIB", "starSessSub1ExtInlSrvrVPNName"),
        ("STARENT-MIB", "starSessSub1RadAcctMode"),
        ("STARENT-MIB", "starSessSub1InBytesDropped"),
        ("STARENT-MIB", "starSessSub1OutBytesDropped"),
        ("STARENT-MIB", "starSessSub1PeakBPSTx"),
        ("STARENT-MIB", "starSessSub1PeakBPSRx"),
        ("STARENT-MIB", "starSessSub1AveBPSTx"),
        ("STARENT-MIB", "starSessSub1AveBPSRx"),
        ("STARENT-MIB", "starSessSub1SustBPSTx"),
        ("STARENT-MIB", "starSessSub1SustBPSRx"),
        ("STARENT-MIB", "starSessSub1PeakPPSTx"),
        ("STARENT-MIB", "starSessSub1PeakPPSRx"),
        ("STARENT-MIB", "starSessSub1AvePPSTx"),
        ("STARENT-MIB", "starSessSub1AvePPSRx"),
        ("STARENT-MIB", "starSessSub1SustPPSTx"),
        ("STARENT-MIB", "starSessSub1SustPPSRx"),
        ("STARENT-MIB", "starSessSub1ActivePct"),
        ("STARENT-MIB", "starSessSub1IPv4BadHdr"),
        ("STARENT-MIB", "starSessSub1IPv4TtlExceeded"),
        ("STARENT-MIB", "starSessSub1IPv4FragSent"),
        ("STARENT-MIB", "starSessSub1IPv4FragFail"),
        ("STARENT-MIB", "starSessSub1IPv4InACLDrop"),
        ("STARENT-MIB", "starSessSub1IPv4OutACLDrop"),
        ("STARENT-MIB", "starSessSub1IPv4InCSSDownDrop"),
        ("STARENT-MIB", "starSessSub1IPv4OutCSSDownDrop"),
        ("STARENT-MIB", "starSessSub1IPv4OutXOFFDropPkt"),
        ("STARENT-MIB", "starSessSub1IPv4OutXOFFDropByte"),
        ("STARENT-MIB", "starSessSub1IPv4SrcViol"),
        ("STARENT-MIB", "starSessSub1IPv4ProxyDNSRedir"),
        ("STARENT-MIB", "starSessSub1IPv4SrcProxyDNSPThru"),
        ("STARENT-MIB", "starSessSub1IPv4ProxyDNSDrop"),
        ("STARENT-MIB", "starSessSub1IPv4SrcViolNoAcct"),
        ("STARENT-MIB", "starSessSub1IPv4SrcViolIgnored"),
        ("STARENT-MIB", "starSessSub1ExtInlSrvrTxPkt"),
        ("STARENT-MIB", "starSessSub1ExtInlSrvrRxPkt"),
        ("STARENT-MIB", "starSessSub1IPv4ICMPDropPkt"),
        ("STARENT-MIB", "starSessSub1TunnelType"),
        ("STARENT-MIB", "starSessSub1IPSECTunDownDropPkt"),
        ("STARENT-MIB", "starSessSub1IPSECFlowID"),
        ("STARENT-MIB", "starSessSub1DormancyTotal"),
        ("STARENT-MIB", "starSessSub1HandoffTotal"),
        ("STARENT-MIB", "starSessSub1AccessFlows"),
        ("STARENT-MIB", "starSessSub1TFT"),
        ("STARENT-MIB", "starSessSub1NASPort"),
        ("STARENT-MIB", "starSessSub1AcctSessionID"),
        ("STARENT-MIB", "starSessSub1CorrID"),
        ("STARENT-MIB", "starSessSub1L2TPPeerIPAddr"),
        ("STARENT-MIB", "starSessSub1IPv4EarlyPDURecv"),
        ("STARENT-MIB", "starIPSECContextName"),
        ("STARENT-MIB", "starIPSECGroupName"),
        ("STARENT-MIB", "starIPSECTunLocalIpAddr"),
        ("STARENT-MIB", "starIPSECTunRemoteIpAddr"),
        ("STARENT-MIB", "starIPSECPolicyName"),
        ("STARENT-MIB", "starIPSECDynPolicyType"),
        ("STARENT-MIB", "starIPSECDynPolicyPayloadType"),
        ("STARENT-MIB", "starIPSECLocalGateway"),
        ("STARENT-MIB", "starIPSECRemoteGateway"),
        ("STARENT-MIB", "starSIPRouteVpnName"),
        ("STARENT-MIB", "starSIPRouteVmgName"),
        ("STARENT-MIB", "starSIPRouteAsName"),
        ("STARENT-MIB", "starSIPRouteDestPartyNum"),
        ("STARENT-MIB", "starSIPRouteReqNum"),
        ("STARENT-MIB", "starSIPRouteServerVpnName"),
        ("STARENT-MIB", "starSIPRouteServerVmgName"),
        ("STARENT-MIB", "starSIPRouteServerAsName"),
        ("STARENT-MIB", "starSIPRouteServerIpAddr"),
        ("STARENT-MIB", "starVIMServiceVpnName"),
        ("STARENT-MIB", "starVIMServiceFMDMaxCallRate"),
        ("STARENT-MIB", "starVIMServiceFMDContinuousLoadCount"),
        ("STARENT-MIB", "starGSSClusterName"),
        ("STARENT-MIB", "starGSSClusterNodeName"),
        ("STARENT-MIB", "starGSSClusterRgName"),
        ("STARENT-MIB", "starGSSClusterRsName"),
        ("STARENT-MIB", "starGSSClusterNodeState"),
        ("STARENT-MIB", "starGSSClusterPrevOnlineNode"),
        ("STARENT-MIB", "starGSSClusterFromNode"),
        ("STARENT-MIB", "starGSSClusterToNode"),
        ("STARENT-MIB", "starGSSDiskPath"),
        ("STARENT-MIB", "starGSSTransportPath"),
        ("STARENT-MIB", "starGSSIPMPGroupName"),
        ("STARENT-MIB", "starGSSInterfaceName"),
        ("STARENT-MIB", "starRPServiceOptionCalls"),
        ("STARENT-MIB", "starPCFStatVpnName"),
        ("STARENT-MIB", "starPCFStatRxPkts"),
        ("STARENT-MIB", "starPCFStatTxPkts"),
        ("STARENT-MIB", "starPCFStatRxBytes"),
        ("STARENT-MIB", "starPCFStatTxBytes"),
        ("STARENT-MIB", "starPCFStatTotalSessions"),
        ("STARENT-MIB", "starPCFStatCurrentSessions"),
        ("STARENT-MIB", "starPCFStatCurrentActiveSessions"),
        ("STARENT-MIB", "starPCFStatCurrentDormantSessions"),
        ("STARENT-MIB", "starPCFStatCurrentSIPConnected"),
        ("STARENT-MIB", "starPCFStatCurrentMIPConnected"),
        ("STARENT-MIB", "starPCFStatCurrentPMIPConnected"),
        ("STARENT-MIB", "starPCFStatCurrentL2TPLACConnected"),
        ("STARENT-MIB", "starPCFStatCurrentOtherConnected"),
        ("STARENT-MIB", "starPCFVpnID"),
        ("STARENT-MIB", "starPCFVpnName"),
        ("STARENT-MIB", "starPCFServName"),
        ("STARENT-MIB", "starPCFRrqRcvd"),
        ("STARENT-MIB", "starPCFRrqAccepted"),
        ("STARENT-MIB", "starPCFRrqDenied"),
        ("STARENT-MIB", "starPCFRrqDiscarded"),
        ("STARENT-MIB", "starPCFInitialRrqRcvd"),
        ("STARENT-MIB", "starPCFInitialRrqAccepted"),
        ("STARENT-MIB", "starPCFIntraPDSNActiveHORrqAccepted"),
        ("STARENT-MIB", "starPCFIntraPDSNDormantHORrqAccepted"),
        ("STARENT-MIB", "starPCFInterPDSNHORrqAccepted"),
        ("STARENT-MIB", "starPCFInitialRrqDenied"),
        ("STARENT-MIB", "starPCFInitialRrqDiscarded"),
        ("STARENT-MIB", "starPCFRenewRrqRcvd"),
        ("STARENT-MIB", "starPCFRenewRrqAccepted"),
        ("STARENT-MIB", "starPCFRenewActiveRrqAccepted"),
        ("STARENT-MIB", "starPCFRenewDormantRrqAccepted"),
        ("STARENT-MIB", "starPCFRenewRrqDenied"),
        ("STARENT-MIB", "starPCFRenewRrqDiscarded"),
        ("STARENT-MIB", "starPCFDeregRrqRcvd"),
        ("STARENT-MIB", "starPCFDeregRrqAccepted"),
        ("STARENT-MIB", "starPCFDeregDormantRrqAccepted"),
        ("STARENT-MIB", "starPCFDeregRrqDenied"),
        ("STARENT-MIB", "starPCFDeregRrqDiscarded"),
        ("STARENT-MIB", "starPCFIntraPDSNActiveAnidHORrqAccepted"),
        ("STARENT-MIB", "starPCFIntraPDSNDormantAnidHORrqAccepted"),
        ("STARENT-MIB", "starPCFDeniedUnSpeReason"),
        ("STARENT-MIB", "starPCFDeniedAdmProh"),
        ("STARENT-MIB", "starPCFDeniedInsufResource"),
        ("STARENT-MIB", "starPCFDeniedMobNodeAuthFail"),
        ("STARENT-MIB", "starPCFDeniedIdentMismatch"),
        ("STARENT-MIB", "starPCFDeniedPoorFormedReq"),
        ("STARENT-MIB", "starPCFDeniedUnknownPDSNAddr"),
        ("STARENT-MIB", "starPCFDeniedRevTunnelUnavail"),
        ("STARENT-MIB", "starPCFDeniedRevTunnelRequire"),
        ("STARENT-MIB", "starPCFDeniedUnrecogVendorId"),
        ("STARENT-MIB", "starPCFDeniedSessionClosed"),
        ("STARENT-MIB", "starPCFDeniedBsnSessionInfoUnavail"),
        ("STARENT-MIB", "starPCFRegUpdTransmitted"),
        ("STARENT-MIB", "starPCFRegUpdAccepted"),
        ("STARENT-MIB", "starPCFRegUpdateRpLifetimeExpiry"),
        ("STARENT-MIB", "starPCFRegUpdateUpperLayerIntiated"),
        ("STARENT-MIB", "starPCFRegUpdateOtherReason"),
        ("STARENT-MIB", "starPCFRegUpdateHORelease"),
        ("STARENT-MIB", "starPCFRegUpdateSessmgrDied"),
        ("STARENT-MIB", "starPCFAuxA10ConnectionsSetup"),
        ("STARENT-MIB", "starPCFSessionsDenied"),
        ("STARENT-MIB", "starPCFSessionsInit"),
        ("STARENT-MIB", "starPCFSessionsReneg"),
        ("STARENT-MIB", "starPCFDiscLcpRemote"),
        ("STARENT-MIB", "starPCFDiscRpRemote"),
        ("STARENT-MIB", "starPCFDiscRpLocal"),
        ("STARENT-MIB", "starPCFDiscMaxIpcpRetr"),
        ("STARENT-MIB", "starPCFDiscMaxIpv6cpRetr"),
        ("STARENT-MIB", "starPCFDiscMaxLcpRetr"),
        ("STARENT-MIB", "starPCFDiscAuthFail"),
        ("STARENT-MIB", "starPCFDiscSessSetupTimeout"),
        ("STARENT-MIB", "starPCFDiscFlowAddFail"),
        ("STARENT-MIB", "starPCFDiscInvDestContext"),
        ("STARENT-MIB", "starPCFDiscLcpOptFail"),
        ("STARENT-MIB", "starPCFDiscIpcpOptFail"),
        ("STARENT-MIB", "starPCFDiscIpv6cpOptFail"),
        ("STARENT-MIB", "starPCFDiscNoRemIpAddr"),
        ("STARENT-MIB", "starPCFDiscDetectionFail"),
        ("STARENT-MIB", "starPCFDiscMisc"),
        ("STARENT-MIB", "starPCFCurrentSessions"),
        ("STARENT-MIB", "starPCFSessionsSetup"),
        ("STARENT-MIB", "starPCFSessionsRelsese"),
        ("STARENT-MIB", "starPCFCurrentRevaSessions"),
        ("STARENT-MIB", "starPCFRevaSessionsSetup"),
        ("STARENT-MIB", "starPCFRevaSessionsRelsese"),
        ("STARENT-MIB", "starPDIFSysStatus"),
        ("STARENT-MIB", "starPDIFSysNumService"),
        ("STARENT-MIB", "starPDIFSysSessCurrent"),
        ("STARENT-MIB", "starPDIFSysSessCurrActive"),
        ("STARENT-MIB", "starPDIFSysSessCurrDormant"),
        ("STARENT-MIB", "starPDIFSysSessTtlSetup"),
        ("STARENT-MIB", "starPDIFSysChildSACurrent"),
        ("STARENT-MIB", "starPDIFVpnID"),
        ("STARENT-MIB", "starPDIFVpnName"),
        ("STARENT-MIB", "starPDIFServName"),
        ("STARENT-MIB", "starPDIFStatus"),
        ("STARENT-MIB", "starPDIFSessCurrent"),
        ("STARENT-MIB", "starPDIFSessRemain"),
        ("STARENT-MIB", "starPDIFSessCurrentActive"),
        ("STARENT-MIB", "starPDIFSessCurrentDormant"),
        ("STARENT-MIB", "starPDIFSessCurrentIpv6Active"),
        ("STARENT-MIB", "starPDIFSessCurrentIpv6Dormant"),
        ("STARENT-MIB", "starPDIFSessCurrentIpv4Active"),
        ("STARENT-MIB", "starPDIFSessCurrentIpv4Dormant"),
        ("STARENT-MIB", "starPDIFBindIpAddress"),
        ("STARENT-MIB", "starPDIFBindIpPort"),
        ("STARENT-MIB", "starPDIFBindSlot"),
        ("STARENT-MIB", "starPDIFBindPort"),
        ("STARENT-MIB", "starSessSGSNVpnName"),
        ("STARENT-MIB", "starSessSGSNServName"),
        ("STARENT-MIB", "starSessSGSNMcc"),
        ("STARENT-MIB", "starSessSGSNMnc"),
        ("STARENT-MIB", "starSessSGSNRncId"),
        ("STARENT-MIB", "starSessSGSNHlrNum"),
        ("STARENT-MIB", "starSS7Pc"),
        ("STARENT-MIB", "starSS7M3UAPsId"),
        ("STARENT-MIB", "starSS7M3UAPspId"),
        ("STARENT-MIB", "starSS7MTP3LinkSetId"),
        ("STARENT-MIB", "starSS7MTP3LinkId"),
        ("STARENT-MIB", "starSS7SCTPSelfAddr"),
        ("STARENT-MIB", "starSS7SCTPPeerAddr"),
        ("STARENT-MIB", "starSS7SCTPSelfPort"),
        ("STARENT-MIB", "starSS7SCTPPeerPort"),
        ("STARENT-MIB", "starSccpSsn"),
        ("STARENT-MIB", "starSGTPVpnName"),
        ("STARENT-MIB", "starSGTPServName"),
        ("STARENT-MIB", "starSGTPSelfAddr"),
        ("STARENT-MIB", "starSGTPPeerAddr"),
        ("STARENT-MIB", "starSGTPSelfPort"),
        ("STARENT-MIB", "starSGTPPeerPort"),
        ("STARENT-MIB", "starIPMSServerVpnName"),
        ("STARENT-MIB", "starCertExpiryTime"),
        ("STARENT-MIB", "starCertIssuer"),
        ("STARENT-MIB", "starFileApplication"),
        ("STARENT-MIB", "starFTPServVpnName"),
        ("STARENT-MIB", "starCSCFPeerServerVpnName"),
        ("STARENT-MIB", "starCSCFPeerServerSvcName"),
        ("STARENT-MIB", "starCSCFPeerServerListName"),
        ("STARENT-MIB", "starCSCFPeerServerName"),
        ("STARENT-MIB", "starCSCFPeerServerState"),
        ("STARENT-MIB", "starSDHOperState"),
        ("STARENT-MIB", "starSDHPathOperState"),
        ("STARENT-MIB", "starE1TribOperStateLOP"),
        ("STARENT-MIB", "starE1TribOperState"),
        ("STARENT-MIB", "starFractE1TribTimeslots"),
        ("STARENT-MIB", "starGPRSNsvci"),
        ("STARENT-MIB", "starGPRSBvci"),
        ("STARENT-MIB", "starStorageDeviceType"),
        ("STARENT-MIB", "starPDGSysStatus"),
        ("STARENT-MIB", "starPDGSysNumService"),
        ("STARENT-MIB", "starPDGSysSessCurrent"),
        ("STARENT-MIB", "starPDGSysSessCurrActive"),
        ("STARENT-MIB", "starPDGSysSessCurrDormant"),
        ("STARENT-MIB", "starPDGSysSessTtlSetup"),
        ("STARENT-MIB", "starPDGSysChildSACurrent"),
        ("STARENT-MIB", "starPDGVpnID"),
        ("STARENT-MIB", "starPDGVpnName"),
        ("STARENT-MIB", "starPDGServName"),
        ("STARENT-MIB", "starPDGStatus"),
        ("STARENT-MIB", "starPDGSessCurrent"),
        ("STARENT-MIB", "starPDGSessRemain"),
        ("STARENT-MIB", "starPDGSessCurrentActive"),
        ("STARENT-MIB", "starPDGSessCurrentDormant"),
        ("STARENT-MIB", "starPDGSessCurrentIpv6Active"),
        ("STARENT-MIB", "starPDGSessCurrentIpv6Dormant"),
        ("STARENT-MIB", "starPDGSessCurrentIpv4Active"),
        ("STARENT-MIB", "starPDGSessCurrentIpv4Dormant"),
        ("STARENT-MIB", "starPDGBindIpAddress"),
        ("STARENT-MIB", "starPDGBindIpPort"),
        ("STARENT-MIB", "starPDGBindSlot"),
        ("STARENT-MIB", "starPDGBindPort"),
        ("STARENT-MIB", "starPDGSysStatus"),
        ("STARENT-MIB", "starPDGSysNumService"),
        ("STARENT-MIB", "starPDGSysSessCurrent"),
        ("STARENT-MIB", "starPDGSysSessCurrActive"),
        ("STARENT-MIB", "starPDGSysSessCurrDormant"),
        ("STARENT-MIB", "starPDGSysSessTtlSetup"),
        ("STARENT-MIB", "starPDGSysChildSACurrent"),
        ("STARENT-MIB", "starPDGVpnID"),
        ("STARENT-MIB", "starPDGVpnName"),
        ("STARENT-MIB", "starPDGServName"),
        ("STARENT-MIB", "starPDGStatus"),
        ("STARENT-MIB", "starPDGSessCurrent"),
        ("STARENT-MIB", "starPDGSessRemain"),
        ("STARENT-MIB", "starPDGSessCurrentActive"),
        ("STARENT-MIB", "starPDGSessCurrentDormant"),
        ("STARENT-MIB", "starPDGSessCurrentIpv6Active"),
        ("STARENT-MIB", "starPDGSessCurrentIpv6Dormant"),
        ("STARENT-MIB", "starPDGSessCurrentIpv4Active"),
        ("STARENT-MIB", "starPDGSessCurrentIpv4Dormant"),
        ("STARENT-MIB", "starPDGBindIpAddress"),
        ("STARENT-MIB", "starPDGBindIpPort"),
        ("STARENT-MIB", "starPDGBindSlot"),
        ("STARENT-MIB", "starPDGBindPort"),
        ("STARENT-MIB", "starEGTPVpnName"),
        ("STARENT-MIB", "starEGTPServName"),
        ("STARENT-MIB", "starEGTPInterfaceType"),
        ("STARENT-MIB", "starEGTPSelfPort"),
        ("STARENT-MIB", "starEGTPSelfAddr"),
        ("STARENT-MIB", "starEGTPPeerPort"),
        ("STARENT-MIB", "starEGTPPeerAddr"),
        ("STARENT-MIB", "starEGTPPeerOldRstCnt"),
        ("STARENT-MIB", "starEGTPPeerNewRstCnt"),
        ("STARENT-MIB", "starEGTPPeerSessCnt"),
        ("STARENT-MIB", "starEGTPPeerOldRstCnt"),
        ("STARENT-MIB", "starEGTPFailureReason"),
        ("STARENT-MIB", "starLicenseKey"),
        ("STARENT-MIB", "starLicenseExpiryDate"),
        ("STARENT-MIB", "starLicenseDaysRemaining"),
        ("STARENT-MIB", "starLicenseDaysAfterExpiry"),
        ("STARENT-MIB", "starFNGSysStatus"),
        ("STARENT-MIB", "starFNGSysNumService"),
        ("STARENT-MIB", "starFNGSysSessCurrent"),
        ("STARENT-MIB", "starFNGSysSessCurrActive"),
        ("STARENT-MIB", "starFNGSysSessCurrDormant"),
        ("STARENT-MIB", "starFNGSysSessTtlSetup"),
        ("STARENT-MIB", "starFNGSysChildSACurrent"),
        ("STARENT-MIB", "starFNGVpnID"),
        ("STARENT-MIB", "starFNGVpnName"),
        ("STARENT-MIB", "starFNGServName"),
        ("STARENT-MIB", "starFNGStatus"),
        ("STARENT-MIB", "starFNGSessCurrent"),
        ("STARENT-MIB", "starFNGSessRemain"),
        ("STARENT-MIB", "starFNGSessCurrentActive"),
        ("STARENT-MIB", "starFNGSessCurrentDormant"),
        ("STARENT-MIB", "starFNGSessCurrentIpv6Active"),
        ("STARENT-MIB", "starFNGSessCurrentIpv6Dormant"),
        ("STARENT-MIB", "starFNGSessCurrentIpv4Active"),
        ("STARENT-MIB", "starFNGSessCurrentIpv4Dormant"),
        ("STARENT-MIB", "starFNGBindIpAddress"),
        ("STARENT-MIB", "starFNGBindIpPort"),
        ("STARENT-MIB", "starFNGBindSlot"),
        ("STARENT-MIB", "starFNGBindPort"),
        ("STARENT-MIB", "starMMES1AssocVpnName"),
        ("STARENT-MIB", "starMMES1AssocServName"),
        ("STARENT-MIB", "starMMES1PathVpnName"),
        ("STARENT-MIB", "starMMES1PathServName"),
        ("STARENT-MIB", "starMMES1PathSelfAddr"),
        ("STARENT-MIB", "starMMES1PathSelfPort"),
        ("STARENT-MIB", "starMMES1PathPeerAddr"),
        ("STARENT-MIB", "starMMES1PathPeerPort"),
        ("STARENT-MIB", "starSPRServerIpAddr"),
        ("STARENT-MIB", "starSessHNBGWVpnName"),
        ("STARENT-MIB", "starSessHNBGWServName"),
        ("STARENT-MIB", "starSessHNBGWCsNwName"),
        ("STARENT-MIB", "starSessHNBGWPsNwName"),
        ("STARENT-MIB", "starSessHNBGWSgsnPtCd"),
        ("STARENT-MIB", "starSessHNBGWMscPtCd"),
        ("STARENT-MIB", "starHENBGWServiceVpnName"),
        ("STARENT-MIB", "starHENBGWServiceServName"),
        ("STARENT-MIB", "starHENBGWServiceLogicalENBId"),
        ("STARENT-MIB", "starHENBGWServiceMMEServName"),
        ("STARENT-MIB", "starHENBGWServicePeerAddr"),
        ("STARENT-MIB", "starHENBGWServicePeerPort"),
        ("STARENT-MIB", "starHENBGWServiceTLRI"),
        ("STARENT-MIB", "starSessALCAPVpnName"),
        ("STARENT-MIB", "starSessALCAPServName"),
        ("STARENT-MIB", "starSessALCAPAAL2NodeName"),
        ("STARENT-MIB", "starSessALCAPPathId"),
        ("STARENT-MIB", "starMVGEndpointName"),
        ("STARENT-MIB", "starMVGCauseCode"),
        ("STARENT-MIB", "starMVGProtocolType"),
        ("STARENT-MIB", "starPCCNtfyIntfPeerName"),
        ("STARENT-MIB", "starPMIPVpnName"),
        ("STARENT-MIB", "starPMIPServName"),
        ("STARENT-MIB", "starPMIPSelfAddrType"),
        ("STARENT-MIB", "starPMIPSelfAddr"),
        ("STARENT-MIB", "starPMIPPeerAddrType"),
        ("STARENT-MIB", "starPMIPPeerAddr"),
        ("STARENT-MIB", "starPMIPPeerOldRstCnt"),
        ("STARENT-MIB", "starPMIPPeerNewRstCnt"),
        ("STARENT-MIB", "starPMIPPeerSessCnt"),
        ("STARENT-MIB", "starPMIPFailureReason"),
        ("STARENT-MIB", "starCBSServiceVpnName"),
        ("STARENT-MIB", "starIuBcSelfPortNum"),
        ("STARENT-MIB", "starIuBcSelfIpAddr"),
        ("STARENT-MIB", "starIuBcPeerPortNum"),
        ("STARENT-MIB", "starIuBcPeerIpAddr"),
        ("STARENT-MIB", "starIuBcTcpConnCauseStr"),
        ("STARENT-MIB", "starNpudriverECCError"),
        ("STARENT-MIB", "starGTPCRLFSessMgrInst"),
        ("STARENT-MIB", "starGTPCRLFVPNName"),
        ("STARENT-MIB", "starGTPCRLFVPNId"),
        ("STARENT-MIB", "starGTPCRLFContextName"),
        ("STARENT-MIB", "starGTPCRLFCurrAppTPS"),
        ("STARENT-MIB", "starGTPCRLFCurrAppDelayTol"))
)
if mibBuilder.loadTexts:
    starChassisGroup.setStatus("current")

starAlertGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 8164, 3, 1, 3)
)
starAlertGroup.setObjects(
      *(("STARENT-MIB", "starMaxAlertsPerTime"),
        ("STARENT-MIB", "starWindowTime"),
        ("STARENT-MIB", "starAlertSendingEnabled"))
)
if mibBuilder.loadTexts:
    starAlertGroup.setStatus("current")

starChassisObsoleteGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 8164, 3, 1, 7)
)
starChassisObsoleteGroup.setObjects(
      *(("STARENT-MIB", "starRPRegAcceptIntraPDSN"),
        ("STARENT-MIB", "starSlotVoltage1dot5"),
        ("STARENT-MIB", "starSlotVoltage1dot5LowThresh"),
        ("STARENT-MIB", "starSlotVoltage1dot5HighThresh"),
        ("STARENT-MIB", "starSlotVoltage1dot8"),
        ("STARENT-MIB", "starSlotVoltage1dot8LowThresh"),
        ("STARENT-MIB", "starSlotVoltage1dot8HighThresh"),
        ("STARENT-MIB", "starSlotVoltage2dot5"),
        ("STARENT-MIB", "starSlotVoltage2dot5LowThresh"),
        ("STARENT-MIB", "starSlotVoltage2dot5HighThresh"),
        ("STARENT-MIB", "starSlotVoltage3dot3"),
        ("STARENT-MIB", "starSlotVoltage3dot3LowThresh"),
        ("STARENT-MIB", "starSlotVoltage3dot3HighThresh"),
        ("STARENT-MIB", "starSlotVoltage5dot0"),
        ("STARENT-MIB", "starSlotVoltage5dot0LowThresh"),
        ("STARENT-MIB", "starSlotVoltage5dot0HighThresh"))
)
if mibBuilder.loadTexts:
    starChassisObsoleteGroup.setStatus("obsolete")


# Notification objects

starCardTempOverheat = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1)
)
starCardTempOverheat.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardTemperature"))
)
if mibBuilder.loadTexts:
    starCardTempOverheat.setStatus(
        "current"
    )

starCardTempOK = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 2)
)
starCardTempOK.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardTemperature"))
)
if mibBuilder.loadTexts:
    starCardTempOK.setStatus(
        "current"
    )

starCardReset = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 3)
)
starCardReset.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"))
)
if mibBuilder.loadTexts:
    starCardReset.setStatus(
        "obsolete"
    )

starCardRebootRequest = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 4)
)
starCardRebootRequest.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"))
)
if mibBuilder.loadTexts:
    starCardRebootRequest.setStatus(
        "current"
    )

starCardUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 5)
)
starCardUp.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"))
)
if mibBuilder.loadTexts:
    starCardUp.setStatus(
        "current"
    )

starCardVoltageFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 6)
)
starCardVoltageFailure.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"))
)
if mibBuilder.loadTexts:
    starCardVoltageFailure.setStatus(
        "current"
    )

starCardRemoved = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 7)
)
starCardRemoved.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"))
)
if mibBuilder.loadTexts:
    starCardRemoved.setStatus(
        "current"
    )

starCardInserted = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 8)
)
starCardInserted.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"))
)
if mibBuilder.loadTexts:
    starCardInserted.setStatus(
        "current"
    )

starCardBootFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 9)
)
starCardBootFailed.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"))
)
if mibBuilder.loadTexts:
    starCardBootFailed.setStatus(
        "current"
    )

starCardFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 10)
)
starCardFailed.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"))
)
if mibBuilder.loadTexts:
    starCardFailed.setStatus(
        "obsolete"
    )

starCardSWFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 11)
)
starCardSWFailed.setObjects(
    ("STARENT-MIB", "starSlotNum")
)
if mibBuilder.loadTexts:
    starCardSWFailed.setStatus(
        "obsolete"
    )

starCardRCCFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 12)
)
starCardRCCFailed.setObjects(
    ("STARENT-MIB", "starSlotNum")
)
if mibBuilder.loadTexts:
    starCardRCCFailed.setStatus(
        "obsolete"
    )

starCardMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 13)
)
starCardMismatch.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"))
)
if mibBuilder.loadTexts:
    starCardMismatch.setStatus(
        "current"
    )

starCardFailureLEDOn = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 14)
)
starCardFailureLEDOn.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"))
)
if mibBuilder.loadTexts:
    starCardFailureLEDOn.setStatus(
        "obsolete"
    )

starCardFailureLEDOff = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 15)
)
starCardFailureLEDOff.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"))
)
if mibBuilder.loadTexts:
    starCardFailureLEDOff.setStatus(
        "obsolete"
    )

starCardPACMigrateStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 16)
)
starCardPACMigrateStart.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starSlotNum"))
)
if mibBuilder.loadTexts:
    starCardPACMigrateStart.setStatus(
        "deprecated"
    )

starCardPACMigrateComplete = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 17)
)
starCardPACMigrateComplete.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starSlotNum"))
)
if mibBuilder.loadTexts:
    starCardPACMigrateComplete.setStatus(
        "deprecated"
    )

starCardPACMigrateFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 18)
)
starCardPACMigrateFailed.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starSlotNum"))
)
if mibBuilder.loadTexts:
    starCardPACMigrateFailed.setStatus(
        "deprecated"
    )

starCardSPCSwitchoverStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 19)
)
starCardSPCSwitchoverStart.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starSlotNum"))
)
if mibBuilder.loadTexts:
    starCardSPCSwitchoverStart.setStatus(
        "deprecated"
    )

starCardSPCSwitchoverComplete = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 20)
)
starCardSPCSwitchoverComplete.setObjects(
    ("STARENT-MIB", "starSlotNum")
)
if mibBuilder.loadTexts:
    starCardSPCSwitchoverComplete.setStatus(
        "deprecated"
    )

starCardSPCSwitchoverFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 21)
)
starCardSPCSwitchoverFailed.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starSlotNum"))
)
if mibBuilder.loadTexts:
    starCardSPCSwitchoverFailed.setStatus(
        "deprecated"
    )

starFanFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 22)
)
starFanFailed.setObjects(
      *(("STARENT-MIB", "starFanNum"),
        ("STARENT-MIB", "starFanStatus"))
)
if mibBuilder.loadTexts:
    starFanFailed.setStatus(
        "current"
    )

starFanRemoved = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 23)
)
starFanRemoved.setObjects(
    ("STARENT-MIB", "starFanNum")
)
if mibBuilder.loadTexts:
    starFanRemoved.setStatus(
        "current"
    )

starFanInserted = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 24)
)
starFanInserted.setObjects(
    ("STARENT-MIB", "starFanNum")
)
if mibBuilder.loadTexts:
    starFanInserted.setStatus(
        "current"
    )

starLogThreshold = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 25)
)
starLogThreshold.setObjects(
      *(("STARENT-MIB", "starLogName"),
        ("STARENT-MIB", "starLogCurSize"),
        ("STARENT-MIB", "starLogMaxSize"))
)
if mibBuilder.loadTexts:
    starLogThreshold.setStatus(
        "obsolete"
    )

starCPUBusy = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 26)
)
starCPUBusy.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"))
)
if mibBuilder.loadTexts:
    starCPUBusy.setStatus(
        "current"
    )

starCPUMemoryLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 27)
)
starCPUMemoryLow.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"))
)
if mibBuilder.loadTexts:
    starCPUMemoryLow.setStatus(
        "current"
    )

starCPUMemoryFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 28)
)
starCPUMemoryFailed.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"))
)
if mibBuilder.loadTexts:
    starCPUMemoryFailed.setStatus(
        "current"
    )

starCPUFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 29)
)
starCPUFailed.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"))
)
if mibBuilder.loadTexts:
    starCPUFailed.setStatus(
        "current"
    )

starCPUWatchDogExpired = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 30)
)
starCPUWatchDogExpired.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"))
)
if mibBuilder.loadTexts:
    starCPUWatchDogExpired.setStatus(
        "current"
    )

starNPUARPPoolExhausted = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 31)
)
starNPUARPPoolExhausted.setObjects(
    ("STARENT-MIB", "starNPUMgrNumber")
)
if mibBuilder.loadTexts:
    starNPUARPPoolExhausted.setStatus(
        "current"
    )

starPowerFilterUnitFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 32)
)
starPowerFilterUnitFailed.setObjects(
    ("STARENT-MIB", "starPowerNumber")
)
if mibBuilder.loadTexts:
    starPowerFilterUnitFailed.setStatus(
        "deprecated"
    )

starPowerFilterUnitUnavail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 33)
)
starPowerFilterUnitUnavail.setObjects(
    ("STARENT-MIB", "starPowerNumber")
)
if mibBuilder.loadTexts:
    starPowerFilterUnitUnavail.setStatus(
        "current"
    )

starPowerFilterUnitAvail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 34)
)
starPowerFilterUnitAvail.setObjects(
    ("STARENT-MIB", "starPowerNumber")
)
if mibBuilder.loadTexts:
    starPowerFilterUnitAvail.setStatus(
        "current"
    )

starAlertsDisabled = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 37)
)
starAlertsDisabled.setObjects(
      *(("STARENT-MIB", "starMaxAlertsPerTime"),
        ("STARENT-MIB", "starWindowTime"))
)
if mibBuilder.loadTexts:
    starAlertsDisabled.setStatus(
        "current"
    )

starAlertsEnabled = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 38)
)
if mibBuilder.loadTexts:
    starAlertsEnabled.setStatus(
        "current"
    )

starAAAAuthServerUnreachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 39)
)
starAAAAuthServerUnreachable.setObjects(
      *(("RADIUS-AUTH-CLIENT-MIB", "radiusAuthServerIndex"),
        ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthServerAddress"))
)
if mibBuilder.loadTexts:
    starAAAAuthServerUnreachable.setStatus(
        "current"
    )

starAAAAuthServerReachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 40)
)
starAAAAuthServerReachable.setObjects(
      *(("RADIUS-AUTH-CLIENT-MIB", "radiusAuthServerIndex"),
        ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthServerAddress"))
)
if mibBuilder.loadTexts:
    starAAAAuthServerReachable.setStatus(
        "current"
    )

starAAAAuthServerMisconfigured = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 41)
)
starAAAAuthServerMisconfigured.setObjects(
      *(("RADIUS-AUTH-CLIENT-MIB", "radiusAuthServerIndex"),
        ("RADIUS-AUTH-CLIENT-MIB", "radiusAuthServerAddress"))
)
if mibBuilder.loadTexts:
    starAAAAuthServerMisconfigured.setStatus(
        "current"
    )

starAAAAccServerUnreachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 42)
)
starAAAAccServerUnreachable.setObjects(
      *(("RADIUS-ACC-CLIENT-MIB", "radiusAccServerIndex"),
        ("RADIUS-ACC-CLIENT-MIB", "radiusAccServerAddress"))
)
if mibBuilder.loadTexts:
    starAAAAccServerUnreachable.setStatus(
        "current"
    )

starAAAAccServerReachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 43)
)
starAAAAccServerReachable.setObjects(
      *(("RADIUS-ACC-CLIENT-MIB", "radiusAccServerIndex"),
        ("RADIUS-ACC-CLIENT-MIB", "radiusAccServerAddress"))
)
if mibBuilder.loadTexts:
    starAAAAccServerReachable.setStatus(
        "current"
    )

starAAAAccServerMisconfigured = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 44)
)
starAAAAccServerMisconfigured.setObjects(
      *(("RADIUS-ACC-CLIENT-MIB", "radiusAccServerIndex"),
        ("RADIUS-ACC-CLIENT-MIB", "radiusAccServerAddress"))
)
if mibBuilder.loadTexts:
    starAAAAccServerMisconfigured.setStatus(
        "current"
    )

starLogMsg = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 45)
)
starLogMsg.setObjects(
    ("STARENT-MIB", "starLogText")
)
if mibBuilder.loadTexts:
    starLogMsg.setStatus(
        "current"
    )

starPDSNServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 46)
)
starPDSNServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starPDSNServiceStart.setStatus(
        "current"
    )

starPDSNServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 47)
)
starPDSNServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starPDSNServiceStop.setStatus(
        "current"
    )

starHAServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 48)
)
starHAServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starHAServiceStart.setStatus(
        "current"
    )

starHAServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 49)
)
starHAServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starHAServiceStop.setStatus(
        "current"
    )

starFAServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 50)
)
starFAServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starFAServiceStart.setStatus(
        "current"
    )

starFAServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 51)
)
starFAServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starFAServiceStop.setStatus(
        "current"
    )

starCLISessionStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 52)
)
starCLISessionStart.setObjects(
      *(("STARENT-MIB", "starCLIUsername"),
        ("STARENT-MIB", "starCLIPrivs"),
        ("STARENT-MIB", "starCLITtyname"))
)
if mibBuilder.loadTexts:
    starCLISessionStart.setStatus(
        "current"
    )

starCLISessionEnd = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 53)
)
starCLISessionEnd.setObjects(
      *(("STARENT-MIB", "starCLIUsername"),
        ("STARENT-MIB", "starCLIPrivs"),
        ("STARENT-MIB", "starCLITtyname"))
)
if mibBuilder.loadTexts:
    starCLISessionEnd.setStatus(
        "current"
    )

starCritTaskFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 54)
)
starCritTaskFailed.setObjects(
      *(("STARENT-MIB", "starTaskFacilityName"),
        ("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starTaskCard"),
        ("STARENT-MIB", "starTaskCPU"))
)
if mibBuilder.loadTexts:
    starCritTaskFailed.setStatus(
        "current"
    )

starCardActive = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 55)
)
starCardActive.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"))
)
if mibBuilder.loadTexts:
    starCardActive.setStatus(
        "current"
    )

starLACServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 56)
)
starLACServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starLACServiceStart.setStatus(
        "current"
    )

starLACServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 57)
)
starLACServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starLACServiceStop.setStatus(
        "current"
    )

starLNSServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 58)
)
starLNSServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starLNSServiceStart.setStatus(
        "current"
    )

starLNSServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 59)
)
starLNSServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starLNSServiceStop.setStatus(
        "current"
    )

starCardDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 60)
)
starCardDown.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"))
)
if mibBuilder.loadTexts:
    starCardDown.setStatus(
        "current"
    )

starGGSNServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 63)
)
starGGSNServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starGGSNServiceStart.setStatus(
        "current"
    )

starGGSNServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 64)
)
starGGSNServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starGGSNServiceStop.setStatus(
        "current"
    )

starLicenseExceeded = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 65)
)
starLicenseExceeded.setObjects(
      *(("STARENT-MIB", "starLicensedSessions"),
        ("STARENT-MIB", "starCurrentSessions"),
        ("STARENT-MIB", "starServiceType"))
)
if mibBuilder.loadTexts:
    starLicenseExceeded.setStatus(
        "current"
    )

starSubscriberLimit = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 66)
)
starSubscriberLimit.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starServiceSubLimit"),
        ("STARENT-MIB", "starServiceSubCurrent"),
        ("STARENT-MIB", "starServiceType"))
)
if mibBuilder.loadTexts:
    starSubscriberLimit.setStatus(
        "current"
    )

starSessionRejectNoResource = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 67)
)
starSessionRejectNoResource.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceType"))
)
if mibBuilder.loadTexts:
    starSessionRejectNoResource.setStatus(
        "current"
    )

starLongDurTimerExpiry = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 68)
)
starLongDurTimerExpiry.setObjects(
      *(("STARENT-MIB", "starSubContext"),
        ("STARENT-MIB", "starSubMSID"),
        ("STARENT-MIB", "starSubName"),
        ("STARENT-MIB", "starSubTimerDuration"),
        ("STARENT-MIB", "starSubLongDurTimeoutAction"),
        ("STARENT-MIB", "starSubSetupTime"),
        ("STARENT-MIB", "starSubHomeAddr"),
        ("STARENT-MIB", "starSubHomeAddrv6"))
)
if mibBuilder.loadTexts:
    starLongDurTimerExpiry.setStatus(
        "current"
    )

starClosedRPServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 69)
)
starClosedRPServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starClosedRPServiceStart.setStatus(
        "current"
    )

starClosedRPServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 70)
)
starClosedRPServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starClosedRPServiceStop.setStatus(
        "current"
    )

starGtpcPathFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 71)
)
starGtpcPathFailure.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNServName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"))
)
if mibBuilder.loadTexts:
    starGtpcPathFailure.setStatus(
        "current"
    )

starGtpuPathFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 72)
)
starGtpuPathFailure.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNServName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"))
)
if mibBuilder.loadTexts:
    starGtpuPathFailure.setStatus(
        "current"
    )

starManagerFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 73)
)
starManagerFailure.setObjects(
      *(("STARENT-MIB", "starTaskFacilityName"),
        ("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starTaskCard"),
        ("STARENT-MIB", "starTaskCPU"))
)
if mibBuilder.loadTexts:
    starManagerFailure.setStatus(
        "current"
    )

starEISServerAlive = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 74)
)
starEISServerAlive.setObjects(
      *(("STARENT-MIB", "starEISServerVPNName"),
        ("STARENT-MIB", "starEISServerAddr"))
)
if mibBuilder.loadTexts:
    starEISServerAlive.setStatus(
        "current"
    )

starEISServerDead = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 75)
)
starEISServerDead.setObjects(
      *(("STARENT-MIB", "starEISServerVPNName"),
        ("STARENT-MIB", "starEISServerAddr"))
)
if mibBuilder.loadTexts:
    starEISServerDead.setStatus(
        "current"
    )

starCgfAlive = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 76)
)
starCgfAlive.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerPort"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"))
)
if mibBuilder.loadTexts:
    starCgfAlive.setStatus(
        "current"
    )

starCgfDead = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 77)
)
starCgfDead.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerPort"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"))
)
if mibBuilder.loadTexts:
    starCgfDead.setStatus(
        "current"
    )

starStorageServerAlive = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 78)
)
starStorageServerAlive.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"))
)
if mibBuilder.loadTexts:
    starStorageServerAlive.setStatus(
        "current"
    )

starStorageServerDead = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 79)
)
starStorageServerDead.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"))
)
if mibBuilder.loadTexts:
    starStorageServerDead.setStatus(
        "current"
    )

starGgsnInitiatedUpdtFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 80)
)
starGgsnInitiatedUpdtFailed.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNServName"),
        ("STARENT-MIB", "starSessGGSNSubsName"),
        ("STARENT-MIB", "starSessGGSNAPNName"),
        ("STARENT-MIB", "starSessGGSNImsi"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"))
)
if mibBuilder.loadTexts:
    starGgsnInitiatedUpdtFailed.setStatus(
        "current"
    )

starCongestion = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 81)
)
starCongestion.setObjects(
      *(("STARENT-MIB", "starServiceType"),
        ("STARENT-MIB", "starCongestionPolicy"),
        ("STARENT-MIB", "starCongestionResourceType"))
)
if mibBuilder.loadTexts:
    starCongestion.setStatus(
        "current"
    )

starCongestionClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 82)
)
starCongestionClear.setObjects(
    ("STARENT-MIB", "starServiceType")
)
if mibBuilder.loadTexts:
    starCongestionClear.setStatus(
        "current"
    )

starServiceLossPTACs = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 83)
)
starServiceLossPTACs.setObjects(
      *(("STARENT-MIB", "starCardMode"),
        ("STARENT-MIB", "starPTACConfig"),
        ("STARENT-MIB", "starPTACActive"))
)
if mibBuilder.loadTexts:
    starServiceLossPTACs.setStatus(
        "current"
    )

starServiceLossLC = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 84)
)
starServiceLossLC.setObjects(
      *(("STARENT-MIB", "starCardType"),
        ("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starSlotNum"))
)
if mibBuilder.loadTexts:
    starServiceLossLC.setStatus(
        "current"
    )

starServiceLossSPIO = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 85)
)
if mibBuilder.loadTexts:
    starServiceLossSPIO.setStatus(
        "current"
    )

starIPSPAllAddrsFree = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 86)
)
starIPSPAllAddrsFree.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starInterfaceName"))
)
if mibBuilder.loadTexts:
    starIPSPAllAddrsFree.setStatus(
        "current"
    )

starPCFUnreachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 87)
)
starPCFUnreachable.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starPCFAddress"))
)
if mibBuilder.loadTexts:
    starPCFUnreachable.setStatus(
        "current"
    )

starDhcpAlive = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 88)
)
starDhcpAlive.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerPort"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"))
)
if mibBuilder.loadTexts:
    starDhcpAlive.setStatus(
        "current"
    )

starDhcpDead = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 89)
)
starDhcpDead.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerPort"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"))
)
if mibBuilder.loadTexts:
    starDhcpDead.setStatus(
        "current"
    )

starNTPPeerUnreachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 90)
)
starNTPPeerUnreachable.setObjects(
    ("STARENT-MIB", "starPeerAddress")
)
if mibBuilder.loadTexts:
    starNTPPeerUnreachable.setStatus(
        "current"
    )

starNTPSyncLost = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 91)
)
if mibBuilder.loadTexts:
    starNTPSyncLost.setStatus(
        "current"
    )

starL2TPTunnelDownPeerUnreachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 92)
)
starL2TPTunnelDownPeerUnreachable.setObjects(
      *(("STARENT-MIB", "starL2TPLocalTunnelID"),
        ("STARENT-MIB", "starL2TPPeerTunnelID"),
        ("STARENT-MIB", "starL2TPContextName"),
        ("STARENT-MIB", "starL2TPServiceName"),
        ("STARENT-MIB", "starL2TPServiceTypeName"),
        ("STARENT-MIB", "starL2TPLocalAddress"),
        ("STARENT-MIB", "starL2TPPeerAddress"))
)
if mibBuilder.loadTexts:
    starL2TPTunnelDownPeerUnreachable.setStatus(
        "current"
    )

starCardStandby = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 93)
)
starCardStandby.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"))
)
if mibBuilder.loadTexts:
    starCardStandby.setStatus(
        "current"
    )

starLicenseUnderLimit = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 94)
)
starLicenseUnderLimit.setObjects(
      *(("STARENT-MIB", "starLicensedSessions"),
        ("STARENT-MIB", "starCurrentSessions"),
        ("STARENT-MIB", "starServiceType"))
)
if mibBuilder.loadTexts:
    starLicenseUnderLimit.setStatus(
        "current"
    )

starIPSECPriTunDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 95)
)
starIPSECPriTunDown.setObjects(
      *(("STARENT-MIB", "starIPSECContextName"),
        ("STARENT-MIB", "starIPSECGroupName"),
        ("STARENT-MIB", "starIPSECTunLocalIpAddr"),
        ("STARENT-MIB", "starIPSECTunRemoteIpAddr"))
)
if mibBuilder.loadTexts:
    starIPSECPriTunDown.setStatus(
        "current"
    )

starIPSECPriTunUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 96)
)
starIPSECPriTunUp.setObjects(
      *(("STARENT-MIB", "starIPSECContextName"),
        ("STARENT-MIB", "starIPSECGroupName"),
        ("STARENT-MIB", "starIPSECTunLocalIpAddr"),
        ("STARENT-MIB", "starIPSECTunRemoteIpAddr"))
)
if mibBuilder.loadTexts:
    starIPSECPriTunUp.setStatus(
        "current"
    )

starIPSECSecTunDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 97)
)
starIPSECSecTunDown.setObjects(
      *(("STARENT-MIB", "starIPSECContextName"),
        ("STARENT-MIB", "starIPSECGroupName"),
        ("STARENT-MIB", "starIPSECTunLocalIpAddr"),
        ("STARENT-MIB", "starIPSECTunRemoteIpAddr"))
)
if mibBuilder.loadTexts:
    starIPSECSecTunDown.setStatus(
        "current"
    )

starIPSECSecTunUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 98)
)
starIPSECSecTunUp.setObjects(
      *(("STARENT-MIB", "starIPSECContextName"),
        ("STARENT-MIB", "starIPSECGroupName"),
        ("STARENT-MIB", "starIPSECTunLocalIpAddr"),
        ("STARENT-MIB", "starIPSECTunRemoteIpAddr"))
)
if mibBuilder.loadTexts:
    starIPSECSecTunUp.setStatus(
        "current"
    )

starIPSECTunSwitchFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 99)
)
starIPSECTunSwitchFail.setObjects(
      *(("STARENT-MIB", "starIPSECContextName"),
        ("STARENT-MIB", "starIPSECGroupName"))
)
if mibBuilder.loadTexts:
    starIPSECTunSwitchFail.setStatus(
        "current"
    )

starIPSECTunSwitchComplete = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 100)
)
starIPSECTunSwitchComplete.setObjects(
      *(("STARENT-MIB", "starIPSECContextName"),
        ("STARENT-MIB", "starIPSECGroupName"),
        ("STARENT-MIB", "starIPSECTunLocalIpAddr"),
        ("STARENT-MIB", "starIPSECTunRemoteIpAddr"))
)
if mibBuilder.loadTexts:
    starIPSECTunSwitchComplete.setStatus(
        "current"
    )

starNwReachServerAlive = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 101)
)
starNwReachServerAlive.setObjects(
      *(("STARENT-MIB", "starNwReachName"),
        ("STARENT-MIB", "starNwReachSrvrAddr"))
)
if mibBuilder.loadTexts:
    starNwReachServerAlive.setStatus(
        "current"
    )

starNwReachServerDead = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 102)
)
starNwReachServerDead.setObjects(
      *(("STARENT-MIB", "starNwReachName"),
        ("STARENT-MIB", "starNwReachSrvrAddr"))
)
if mibBuilder.loadTexts:
    starNwReachServerDead.setStatus(
        "current"
    )

starStorageServerUnackedGcdrVolPurge = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 103)
)
starStorageServerUnackedGcdrVolPurge.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"))
)
if mibBuilder.loadTexts:
    starStorageServerUnackedGcdrVolPurge.setStatus(
        "current"
    )

starStorageServerUnackedGcdrFileGen = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 104)
)
starStorageServerUnackedGcdrFileGen.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"))
)
if mibBuilder.loadTexts:
    starStorageServerUnackedGcdrFileGen.setStatus(
        "current"
    )

starNTPPeerReachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 105)
)
starNTPPeerReachable.setObjects(
    ("STARENT-MIB", "starPeerAddress")
)
if mibBuilder.loadTexts:
    starNTPPeerReachable.setStatus(
        "current"
    )

starNTPSyncEstablished = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 106)
)
if mibBuilder.loadTexts:
    starNTPSyncEstablished.setStatus(
        "current"
    )

starSIPServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 107)
)
starSIPServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starSIPServiceStart.setStatus(
        "current"
    )

starSIPServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 108)
)
starSIPServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starSIPServiceStop.setStatus(
        "current"
    )

starVIMServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 109)
)
starVIMServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starVIMServiceStart.setStatus(
        "current"
    )

starVIMServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 110)
)
starVIMServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starVIMServiceStop.setStatus(
        "current"
    )

starCHATCONFServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 111)
)
starCHATCONFServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starCHATCONFServiceStart.setStatus(
        "current"
    )

starCHATCONFServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 112)
)
starCHATCONFServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starCHATCONFServiceStop.setStatus(
        "current"
    )

starSIPRouteNomatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 113)
)
starSIPRouteNomatch.setObjects(
      *(("STARENT-MIB", "starSIPRouteVpnName"),
        ("STARENT-MIB", "starSIPRouteVmgName"),
        ("STARENT-MIB", "starSIPRouteAsName"),
        ("STARENT-MIB", "starSIPRouteDestPartyNum"),
        ("STARENT-MIB", "starSIPRouteReqNum"))
)
if mibBuilder.loadTexts:
    starSIPRouteNomatch.setStatus(
        "current"
    )

starL3AddrUnreachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 114)
)
starL3AddrUnreachable.setObjects(
      *(("STARENT-MIB", "starL3Address"),
        ("STARENT-MIB", "starPortSlot"),
        ("STARENT-MIB", "starPortNum"))
)
if mibBuilder.loadTexts:
    starL3AddrUnreachable.setStatus(
        "current"
    )

starSWUpgradeStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 115)
)
if mibBuilder.loadTexts:
    starSWUpgradeStart.setStatus(
        "current"
    )

starSWUpgradeComplete = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 116)
)
if mibBuilder.loadTexts:
    starSWUpgradeComplete.setStatus(
        "current"
    )

starSWUpgradeAborted = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 117)
)
if mibBuilder.loadTexts:
    starSWUpgradeAborted.setStatus(
        "current"
    )

starBGPPeerSessionUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 118)
)
starBGPPeerSessionUp.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starBGPPeerIpAddress"))
)
if mibBuilder.loadTexts:
    starBGPPeerSessionUp.setStatus(
        "current"
    )

starBGPPeerSessionDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 119)
)
starBGPPeerSessionDown.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starBGPPeerIpAddress"))
)
if mibBuilder.loadTexts:
    starBGPPeerSessionDown.setStatus(
        "current"
    )

starSRPActive = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 120)
)
starSRPActive.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starSRPIpAddress"))
)
if mibBuilder.loadTexts:
    starSRPActive.setStatus(
        "current"
    )

starSRPStandby = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 121)
)
starSRPStandby.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starSRPIpAddress"))
)
if mibBuilder.loadTexts:
    starSRPStandby.setStatus(
        "current"
    )

starBGPPeerReachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 122)
)
starBGPPeerReachable.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starSRPIpAddress"),
        ("STARENT-MIB", "starUDPPortNum"),
        ("STARENT-MIB", "starBGPPeerIpAddress"))
)
if mibBuilder.loadTexts:
    starBGPPeerReachable.setStatus(
        "current"
    )

starBGPPeerUnreachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 123)
)
starBGPPeerUnreachable.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starSRPIpAddress"),
        ("STARENT-MIB", "starUDPPortNum"),
        ("STARENT-MIB", "starBGPPeerIpAddress"))
)
if mibBuilder.loadTexts:
    starBGPPeerUnreachable.setStatus(
        "current"
    )

starSRPAAAReachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 124)
)
starSRPAAAReachable.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starSRPIpAddress"),
        ("STARENT-MIB", "starUDPPortNum"))
)
if mibBuilder.loadTexts:
    starSRPAAAReachable.setStatus(
        "current"
    )

starSRPAAAUnreachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 125)
)
starSRPAAAUnreachable.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starSRPIpAddress"),
        ("STARENT-MIB", "starUDPPortNum"))
)
if mibBuilder.loadTexts:
    starSRPAAAUnreachable.setStatus(
        "current"
    )

starSRPSwitchoverInitiated = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 126)
)
starSRPSwitchoverInitiated.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starSRPIpAddress"))
)
if mibBuilder.loadTexts:
    starSRPSwitchoverInitiated.setStatus(
        "current"
    )

starSRPCheckpointFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 127)
)
starSRPCheckpointFailure.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starSRPIpAddress"))
)
if mibBuilder.loadTexts:
    starSRPCheckpointFailure.setStatus(
        "current"
    )

starSRPConfigOutOfSync = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 128)
)
starSRPConfigOutOfSync.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starSRPIpAddress"))
)
if mibBuilder.loadTexts:
    starSRPConfigOutOfSync.setStatus(
        "current"
    )

starSRPConfigInSync = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 129)
)
starSRPConfigInSync.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starSRPIpAddress"))
)
if mibBuilder.loadTexts:
    starSRPConfigInSync.setStatus(
        "current"
    )

starGESwitchFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 130)
)
starGESwitchFailure.setObjects(
    ("STARENT-MIB", "starSlotNum")
)
if mibBuilder.loadTexts:
    starGESwitchFailure.setStatus(
        "current"
    )

starSIPRouteServerAvailable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 131)
)
starSIPRouteServerAvailable.setObjects(
      *(("STARENT-MIB", "starSIPRouteServerVpnName"),
        ("STARENT-MIB", "starSIPRouteServerVmgName"),
        ("STARENT-MIB", "starSIPRouteServerAsName"),
        ("STARENT-MIB", "starSIPRouteServerIpAddr"))
)
if mibBuilder.loadTexts:
    starSIPRouteServerAvailable.setStatus(
        "current"
    )

starSIPRouteServerUnavailable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 132)
)
starSIPRouteServerUnavailable.setObjects(
      *(("STARENT-MIB", "starSIPRouteServerVpnName"),
        ("STARENT-MIB", "starSIPRouteServerVmgName"),
        ("STARENT-MIB", "starSIPRouteServerAsName"),
        ("STARENT-MIB", "starSIPRouteServerIpAddr"))
)
if mibBuilder.loadTexts:
    starSIPRouteServerUnavailable.setStatus(
        "current"
    )

starFMDMaxCallRateReached = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 133)
)
starFMDMaxCallRateReached.setObjects(
      *(("STARENT-MIB", "starVIMServiceVpnName"),
        ("STARENT-MIB", "starVIMServiceInstanceId"),
        ("STARENT-MIB", "starVIMServiceFMDMaxCallRate"),
        ("STARENT-MIB", "starVIMServiceFMDContinuousLoadCount"))
)
if mibBuilder.loadTexts:
    starFMDMaxCallRateReached.setStatus(
        "current"
    )

starFMDCallRateUnderControl = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 134)
)
starFMDCallRateUnderControl.setObjects(
      *(("STARENT-MIB", "starVIMServiceVpnName"),
        ("STARENT-MIB", "starVIMServiceInstanceId"),
        ("STARENT-MIB", "starVIMServiceFMDMaxCallRate"),
        ("STARENT-MIB", "starVIMServiceFMDContinuousLoadCount"))
)
if mibBuilder.loadTexts:
    starFMDCallRateUnderControl.setStatus(
        "current"
    )

starStorageServerCPUBusy = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 135)
)
starStorageServerCPUBusy.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"),
        ("STARENT-MIB", "starGSSClusterName"),
        ("STARENT-MIB", "starGSSClusterNodeName"))
)
if mibBuilder.loadTexts:
    starStorageServerCPUBusy.setStatus(
        "current"
    )

starStorageServerCPUNormal = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 136)
)
starStorageServerCPUNormal.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"),
        ("STARENT-MIB", "starGSSClusterName"),
        ("STARENT-MIB", "starGSSClusterNodeName"))
)
if mibBuilder.loadTexts:
    starStorageServerCPUNormal.setStatus(
        "current"
    )

starStorageServerDiskSpaceLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 137)
)
starStorageServerDiskSpaceLow.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"),
        ("STARENT-MIB", "starThreshGB"),
        ("STARENT-MIB", "starThreshMeasuredGB"),
        ("STARENT-MIB", "starGSSClusterName"),
        ("STARENT-MIB", "starGSSClusterNodeName"))
)
if mibBuilder.loadTexts:
    starStorageServerDiskSpaceLow.setStatus(
        "current"
    )

starStorageServerDiskSpaceOK = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 138)
)
starStorageServerDiskSpaceOK.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"),
        ("STARENT-MIB", "starGSSClusterName"),
        ("STARENT-MIB", "starGSSClusterNodeName"))
)
if mibBuilder.loadTexts:
    starStorageServerDiskSpaceOK.setStatus(
        "current"
    )

starCardSPOFAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 139)
)
starCardSPOFAlarm.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"))
)
if mibBuilder.loadTexts:
    starCardSPOFAlarm.setStatus(
        "current"
    )

starCardSPOFClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 140)
)
starCardSPOFClear.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"))
)
if mibBuilder.loadTexts:
    starCardSPOFClear.setStatus(
        "current"
    )

starStorageServerOldGcdrPending = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 141)
)
starStorageServerOldGcdrPending.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"),
        ("STARENT-MIB", "starGSSClusterName"),
        ("STARENT-MIB", "starGSSClusterNodeName"))
)
if mibBuilder.loadTexts:
    starStorageServerOldGcdrPending.setStatus(
        "current"
    )

starStorageServerOldGcdrCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 142)
)
starStorageServerOldGcdrCleared.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starGSSClusterName"),
        ("STARENT-MIB", "starGSSClusterNodeName"))
)
if mibBuilder.loadTexts:
    starStorageServerOldGcdrCleared.setStatus(
        "current"
    )

starLoginFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 143)
)
starLoginFailure.setObjects(
      *(("STARENT-MIB", "starCLITtyname"),
        ("STARENT-MIB", "starCLIRemoteIpAddrType"),
        ("STARENT-MIB", "starCLIRemoteIpAddr"),
        ("STARENT-MIB", "starCLIType"))
)
if mibBuilder.loadTexts:
    starLoginFailure.setStatus(
        "current"
    )

starIPSGServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 144)
)
starIPSGServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starIPSGServiceStart.setStatus(
        "current"
    )

starIPSGServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 145)
)
starIPSGServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starIPSGServiceStop.setStatus(
        "current"
    )

starHAUnreachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 146)
)
starHAUnreachable.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starServiceFAIpAddr"),
        ("STARENT-MIB", "starServiceHAIpAddr"))
)
if mibBuilder.loadTexts:
    starHAUnreachable.setStatus(
        "current"
    )

starHAReachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 147)
)
starHAReachable.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starServiceFAIpAddr"),
        ("STARENT-MIB", "starServiceHAIpAddr"))
)
if mibBuilder.loadTexts:
    starHAReachable.setStatus(
        "current"
    )

starASNGWServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 148)
)
starASNGWServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starASNGWServiceStart.setStatus(
        "current"
    )

starASNGWServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 149)
)
starASNGWServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starASNGWServiceStop.setStatus(
        "current"
    )

starTaskFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 150)
)
starTaskFailed.setObjects(
      *(("STARENT-MIB", "starTaskFacilityName"),
        ("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starTaskCard"),
        ("STARENT-MIB", "starTaskCPU"))
)
if mibBuilder.loadTexts:
    starTaskFailed.setStatus(
        "current"
    )

starTaskRestart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 151)
)
starTaskRestart.setObjects(
      *(("STARENT-MIB", "starTaskFacilityName"),
        ("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starTaskCard"),
        ("STARENT-MIB", "starTaskCPU"))
)
if mibBuilder.loadTexts:
    starTaskRestart.setStatus(
        "current"
    )

starCSCFServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 152)
)
starCSCFServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starCSCFServiceStart.setStatus(
        "current"
    )

starCSCFServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 153)
)
starCSCFServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starCSCFServiceStop.setStatus(
        "current"
    )

starDhcpServiceStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 154)
)
starDhcpServiceStarted.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starDhcpServiceStarted.setStatus(
        "current"
    )

starDhcpServiceStopped = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 155)
)
starDhcpServiceStopped.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starDhcpServiceStopped.setStatus(
        "current"
    )

starContFiltDBError = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 156)
)
starContFiltDBError.setObjects(
      *(("STARENT-MIB", "starContFiltCFFilename"),
        ("STARENT-MIB", "starContFiltCFErrorCode"))
)
if mibBuilder.loadTexts:
    starContFiltDBError.setStatus(
        "current"
    )

starContFiltDBErrorClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 157)
)
starContFiltDBErrorClear.setObjects(
      *(("STARENT-MIB", "starContFiltCFFilename"),
        ("STARENT-MIB", "starContFiltCFErrorCode"))
)
if mibBuilder.loadTexts:
    starContFiltDBErrorClear.setStatus(
        "current"
    )

starBLDBError = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 158)
)
starBLDBError.setObjects(
      *(("STARENT-MIB", "starBLFilename"),
        ("STARENT-MIB", "starBLErrorCode"))
)
if mibBuilder.loadTexts:
    starBLDBError.setStatus(
        "current"
    )

starBLDBErrorClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 159)
)
starBLDBErrorClear.setObjects(
      *(("STARENT-MIB", "starBLFilename"),
        ("STARENT-MIB", "starBLErrorCode"))
)
if mibBuilder.loadTexts:
    starBLDBErrorClear.setStatus(
        "current"
    )

starContFiltDBUpgradeError = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 160)
)
starContFiltDBUpgradeError.setObjects(
      *(("STARENT-MIB", "starContFiltCFUpgradeFilename"),
        ("STARENT-MIB", "starContFiltCFUpgradeErrorCode"))
)
if mibBuilder.loadTexts:
    starContFiltDBUpgradeError.setStatus(
        "current"
    )

starContFiltDBUpgradeErrorClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 161)
)
starContFiltDBUpgradeErrorClear.setObjects(
      *(("STARENT-MIB", "starContFiltCFUpgradeFilename"),
        ("STARENT-MIB", "starContFiltCFUpgradeErrorCode"))
)
if mibBuilder.loadTexts:
    starContFiltDBUpgradeErrorClear.setStatus(
        "current"
    )

starBLDBUpgradeError = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 162)
)
starBLDBUpgradeError.setObjects(
      *(("STARENT-MIB", "starBLUpgradeFilename"),
        ("STARENT-MIB", "starBLUpgradeErrorCode"))
)
if mibBuilder.loadTexts:
    starBLDBUpgradeError.setStatus(
        "current"
    )

starBLDBUpgradeErrorClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 163)
)
starBLDBUpgradeErrorClear.setObjects(
      *(("STARENT-MIB", "starBLUpgradeFilename"),
        ("STARENT-MIB", "starBLUpgradeErrorCode"))
)
if mibBuilder.loadTexts:
    starBLDBUpgradeErrorClear.setStatus(
        "current"
    )

starIPSECDynTunUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 164)
)
starIPSECDynTunUp.setObjects(
      *(("STARENT-MIB", "starIPSECContextName"),
        ("STARENT-MIB", "starIPSECPolicyName"),
        ("STARENT-MIB", "starIPSECDynPolicyType"),
        ("STARENT-MIB", "starIPSECDynPolicyPayloadType"),
        ("STARENT-MIB", "starIPSECLocalGateway"),
        ("STARENT-MIB", "starIPSECRemoteGateway"))
)
if mibBuilder.loadTexts:
    starIPSECDynTunUp.setStatus(
        "current"
    )

starIPSECDynTunDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 165)
)
starIPSECDynTunDown.setObjects(
      *(("STARENT-MIB", "starIPSECContextName"),
        ("STARENT-MIB", "starIPSECPolicyName"),
        ("STARENT-MIB", "starIPSECDynPolicyType"),
        ("STARENT-MIB", "starIPSECDynPolicyPayloadType"),
        ("STARENT-MIB", "starIPSECLocalGateway"),
        ("STARENT-MIB", "starIPSECRemoteGateway"))
)
if mibBuilder.loadTexts:
    starIPSECDynTunDown.setStatus(
        "current"
    )

starHeartbeat = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 166)
)
if mibBuilder.loadTexts:
    starHeartbeat.setStatus(
        "current"
    )

starOverloadSystem = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 167)
)
starOverloadSystem.setObjects(
    ("STARENT-MIB", "starCongestionResourceType")
)
if mibBuilder.loadTexts:
    starOverloadSystem.setStatus(
        "current"
    )

starOverloadSystemClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 168)
)
if mibBuilder.loadTexts:
    starOverloadSystemClear.setStatus(
        "current"
    )

starOverloadService = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 169)
)
starOverloadService.setObjects(
      *(("STARENT-MIB", "starCongestionResourceType"),
        ("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starOverloadService.setStatus(
        "current"
    )

starOverloadServiceClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 170)
)
starOverloadServiceClear.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starOverloadServiceClear.setStatus(
        "current"
    )

starStorageServerClusterStateChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 171)
)
starStorageServerClusterStateChange.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"),
        ("STARENT-MIB", "starGSSClusterName"),
        ("STARENT-MIB", "starGSSClusterRgName"),
        ("STARENT-MIB", "starGSSClusterRsName"),
        ("STARENT-MIB", "starGSSClusterNodeState"),
        ("STARENT-MIB", "starGSSClusterPrevOnlineNode"))
)
if mibBuilder.loadTexts:
    starStorageServerClusterStateChange.setStatus(
        "current"
    )

starStorageServerClusSwitchOver = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 172)
)
starStorageServerClusSwitchOver.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"),
        ("STARENT-MIB", "starGSSClusterName"),
        ("STARENT-MIB", "starGSSClusterRgName"),
        ("STARENT-MIB", "starGSSClusterFromNode"),
        ("STARENT-MIB", "starGSSClusterToNode"))
)
if mibBuilder.loadTexts:
    starStorageServerClusSwitchOver.setStatus(
        "current"
    )

starStorageServerClusPathFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 173)
)
starStorageServerClusPathFail.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"),
        ("STARENT-MIB", "starGSSDiskPath"),
        ("STARENT-MIB", "starGSSClusterName"),
        ("STARENT-MIB", "starGSSClusterNodeName"))
)
if mibBuilder.loadTexts:
    starStorageServerClusPathFail.setStatus(
        "current"
    )

starStorageServerClusPathOK = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 174)
)
starStorageServerClusPathOK.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"),
        ("STARENT-MIB", "starGSSDiskPath"),
        ("STARENT-MIB", "starGSSClusterName"),
        ("STARENT-MIB", "starGSSClusterNodeName"))
)
if mibBuilder.loadTexts:
    starStorageServerClusPathOK.setStatus(
        "current"
    )

starStorageServerClusInterCFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 175)
)
starStorageServerClusInterCFail.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"),
        ("STARENT-MIB", "starGSSTransportPath"),
        ("STARENT-MIB", "starGSSClusterName"),
        ("STARENT-MIB", "starGSSClusterNodeName"))
)
if mibBuilder.loadTexts:
    starStorageServerClusInterCFail.setStatus(
        "current"
    )

starStorageServerClusInterCOK = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 176)
)
starStorageServerClusInterCOK.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"),
        ("STARENT-MIB", "starGSSTransportPath"),
        ("STARENT-MIB", "starGSSClusterName"),
        ("STARENT-MIB", "starGSSClusterNodeName"))
)
if mibBuilder.loadTexts:
    starStorageServerClusInterCOK.setStatus(
        "current"
    )

starStorageServerClusIntfFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 177)
)
starStorageServerClusIntfFail.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"),
        ("STARENT-MIB", "starGSSIPMPGroupName"),
        ("STARENT-MIB", "starGSSInterfaceName"),
        ("STARENT-MIB", "starGSSClusterName"),
        ("STARENT-MIB", "starGSSClusterNodeName"))
)
if mibBuilder.loadTexts:
    starStorageServerClusIntfFail.setStatus(
        "current"
    )

starStorageServerClusIntfOK = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 178)
)
starStorageServerClusIntfOK.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"),
        ("STARENT-MIB", "starGSSIPMPGroupName"),
        ("STARENT-MIB", "starGSSInterfaceName"),
        ("STARENT-MIB", "starGSSClusterName"),
        ("STARENT-MIB", "starGSSClusterNodeName"))
)
if mibBuilder.loadTexts:
    starStorageServerClusIntfOK.setStatus(
        "current"
    )

starStorageServerMemLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 179)
)
starStorageServerMemLow.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"),
        ("STARENT-MIB", "starThreshMB"),
        ("STARENT-MIB", "starThreshMeasuredMB"),
        ("STARENT-MIB", "starGSSClusterName"),
        ("STARENT-MIB", "starGSSClusterNodeName"))
)
if mibBuilder.loadTexts:
    starStorageServerMemLow.setStatus(
        "current"
    )

starStorageServerMemNormal = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 180)
)
starStorageServerMemNormal.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"),
        ("STARENT-MIB", "starThreshMB"),
        ("STARENT-MIB", "starThreshMeasuredMB"),
        ("STARENT-MIB", "starGSSClusterName"),
        ("STARENT-MIB", "starGSSClusterNodeName"))
)
if mibBuilder.loadTexts:
    starStorageServerMemNormal.setStatus(
        "current"
    )

starPDIFServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 181)
)
starPDIFServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starPDIFServiceStart.setStatus(
        "current"
    )

starPDIFServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 182)
)
starPDIFServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starPDIFServiceStop.setStatus(
        "current"
    )

starSessMgrRecoveryComplete = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 183)
)
starSessMgrRecoveryComplete.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"),
        ("STARENT-MIB", "starFecthedFromAAAMgr"),
        ("STARENT-MIB", "starPriorToAudit"),
        ("STARENT-MIB", "starPassedAudits"),
        ("STARENT-MIB", "starCallsRecovered"),
        ("STARENT-MIB", "starAllCallLines"),
        ("STARENT-MIB", "starElapsedMs"))
)
if mibBuilder.loadTexts:
    starSessMgrRecoveryComplete.setStatus(
        "current"
    )

starDiameterPeerDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 184)
)
starDiameterPeerDown.setObjects(
      *(("STARENT-MIB", "starDiameterVpnName"),
        ("STARENT-MIB", "starDiameterPeerAddr"),
        ("STARENT-MIB", "starDiameterEndpointName"))
)
if mibBuilder.loadTexts:
    starDiameterPeerDown.setStatus(
        "current"
    )

starDiameterPeerUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 185)
)
starDiameterPeerUp.setObjects(
      *(("STARENT-MIB", "starDiameterVpnName"),
        ("STARENT-MIB", "starDiameterPeerAddr"),
        ("STARENT-MIB", "starDiameterEndpointName"))
)
if mibBuilder.loadTexts:
    starDiameterPeerUp.setStatus(
        "current"
    )

starDiameterServerUnreachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 186)
)
starDiameterServerUnreachable.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starDiameterPeerAddr"),
        ("STARENT-MIB", "starDiameterEndpointName"))
)
if mibBuilder.loadTexts:
    starDiameterServerUnreachable.setStatus(
        "current"
    )

starDiameterServerReachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 187)
)
starDiameterServerReachable.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starDiameterPeerAddr"),
        ("STARENT-MIB", "starDiameterEndpointName"))
)
if mibBuilder.loadTexts:
    starDiameterServerReachable.setStatus(
        "current"
    )

starCDRFileRemoved = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 188)
)
starCDRFileRemoved.setObjects(
    ("STARENT-MIB", "starCDRFilename")
)
if mibBuilder.loadTexts:
    starCDRFileRemoved.setStatus(
        "current"
    )

starCSCFPeerServerReachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 189)
)
starCSCFPeerServerReachable.setObjects(
      *(("STARENT-MIB", "starCSCFPeerServerVpnName"),
        ("STARENT-MIB", "starCSCFPeerServerSvcName"),
        ("STARENT-MIB", "starCSCFPeerServerListName"))
)
if mibBuilder.loadTexts:
    starCSCFPeerServerReachable.setStatus(
        "current"
    )

starCSCFPeerServerUnreachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 190)
)
starCSCFPeerServerUnreachable.setObjects(
      *(("STARENT-MIB", "starCSCFPeerServerVpnName"),
        ("STARENT-MIB", "starCSCFPeerServerSvcName"),
        ("STARENT-MIB", "starCSCFPeerServerListName"))
)
if mibBuilder.loadTexts:
    starCSCFPeerServerUnreachable.setStatus(
        "current"
    )

starCLIConfigMode = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 192)
)
starCLIConfigMode.setObjects(
      *(("STARENT-MIB", "starCLIUsername"),
        ("STARENT-MIB", "starCLIContext"))
)
if mibBuilder.loadTexts:
    starCLIConfigMode.setStatus(
        "current"
    )

starSGSNServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 194)
)
starSGSNServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starSGSNServiceStart.setStatus(
        "current"
    )

starSGSNServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 195)
)
starSGSNServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starSGSNServiceStop.setStatus(
        "current"
    )

starM3UAPCUnavailable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 196)
)
starM3UAPCUnavailable.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7Pc"),
        ("STARENT-MIB", "starSS7M3UAPsId"),
        ("STARENT-MIB", "starSS7CauseString"))
)
if mibBuilder.loadTexts:
    starM3UAPCUnavailable.setStatus(
        "current"
    )

starM3UAPCAvailable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 197)
)
starM3UAPCAvailable.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7Pc"),
        ("STARENT-MIB", "starSS7M3UAPsId"),
        ("STARENT-MIB", "starSS7CauseString"))
)
if mibBuilder.loadTexts:
    starM3UAPCAvailable.setStatus(
        "current"
    )

starThreshCPUUtilization = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 200)
)
starThreshCPUUtilization.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshCPUUtilization.setStatus(
        "current"
    )

starThreshClearCPUUtilization = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 201)
)
starThreshClearCPUUtilization.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearCPUUtilization.setStatus(
        "current"
    )

starThreshCPUMemory = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 202)
)
starThreshCPUMemory.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshCPUMemory.setStatus(
        "current"
    )

starThreshClearCPUMemory = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 203)
)
starThreshClearCPUMemory.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearCPUMemory.setStatus(
        "current"
    )

starThreshLicense = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 204)
)
starThreshLicense.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"),
        ("STARENT-MIB", "starServiceType"))
)
if mibBuilder.loadTexts:
    starThreshLicense.setStatus(
        "current"
    )

starThreshClearLicense = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 205)
)
starThreshClearLicense.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"),
        ("STARENT-MIB", "starServiceType"))
)
if mibBuilder.loadTexts:
    starThreshClearLicense.setStatus(
        "current"
    )

starThreshSubscriberTotal = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 206)
)
starThreshSubscriberTotal.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshSubscriberTotal.setStatus(
        "current"
    )

starThreshClearSubscriberTotal = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 207)
)
starThreshClearSubscriberTotal.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearSubscriberTotal.setStatus(
        "current"
    )

starThreshSubscriberActive = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 208)
)
starThreshSubscriberActive.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshSubscriberActive.setStatus(
        "current"
    )

starThreshClearSubscriberActive = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 209)
)
starThreshClearSubscriberActive.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearSubscriberActive.setStatus(
        "current"
    )

starThreshPortRxUtil = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 210)
)
starThreshPortRxUtil.setObjects(
      *(("STARENT-MIB", "starPortSlot"),
        ("STARENT-MIB", "starPortNum"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshPortRxUtil.setStatus(
        "current"
    )

starThreshClearPortRxUtil = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 211)
)
starThreshClearPortRxUtil.setObjects(
      *(("STARENT-MIB", "starPortSlot"),
        ("STARENT-MIB", "starPortNum"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearPortRxUtil.setStatus(
        "current"
    )

starThreshPortTxUtil = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 212)
)
starThreshPortTxUtil.setObjects(
      *(("STARENT-MIB", "starPortSlot"),
        ("STARENT-MIB", "starPortNum"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshPortTxUtil.setStatus(
        "current"
    )

starThreshClearPortTxUtil = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 213)
)
starThreshClearPortTxUtil.setObjects(
      *(("STARENT-MIB", "starPortSlot"),
        ("STARENT-MIB", "starPortNum"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearPortTxUtil.setStatus(
        "current"
    )

starThreshPortHighActivity = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 214)
)
starThreshPortHighActivity.setObjects(
      *(("STARENT-MIB", "starPortSlot"),
        ("STARENT-MIB", "starPortNum"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshPortHighActivity.setStatus(
        "current"
    )

starThreshClearPortHighActivity = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 215)
)
starThreshClearPortHighActivity.setObjects(
      *(("STARENT-MIB", "starPortSlot"),
        ("STARENT-MIB", "starPortNum"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearPortHighActivity.setStatus(
        "current"
    )

starThreshAAAAuthFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 216)
)
starThreshAAAAuthFail.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshAAAAuthFail.setStatus(
        "current"
    )

starThreshClearAAAAuthFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 217)
)
starThreshClearAAAAuthFail.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearAAAAuthFail.setStatus(
        "current"
    )

starThreshAAAAuthFailRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 218)
)
starThreshAAAAuthFailRate.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshAAAAuthFailRate.setStatus(
        "current"
    )

starThreshClearAAAAuthFailRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 219)
)
starThreshClearAAAAuthFailRate.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearAAAAuthFailRate.setStatus(
        "current"
    )

starThreshAAAAcctFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 220)
)
starThreshAAAAcctFail.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshAAAAcctFail.setStatus(
        "current"
    )

starThreshClearAAAAcctFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 221)
)
starThreshClearAAAAcctFail.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearAAAAcctFail.setStatus(
        "current"
    )

starThreshAAAAcctFailRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 222)
)
starThreshAAAAcctFailRate.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshAAAAcctFailRate.setStatus(
        "current"
    )

starThreshClearAAAAcctFailRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 223)
)
starThreshClearAAAAcctFailRate.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearAAAAcctFailRate.setStatus(
        "current"
    )

starThreshAAARetryRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 224)
)
starThreshAAARetryRate.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshAAARetryRate.setStatus(
        "current"
    )

starThreshClearAAARetryRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 225)
)
starThreshClearAAARetryRate.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearAAARetryRate.setStatus(
        "current"
    )

starThreshCallSetup = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 226)
)
starThreshCallSetup.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshCallSetup.setStatus(
        "current"
    )

starThreshClearCallSetup = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 227)
)
starThreshClearCallSetup.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearCallSetup.setStatus(
        "current"
    )

starThreshCallSetupFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 228)
)
starThreshCallSetupFailure.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshCallSetupFailure.setStatus(
        "current"
    )

starThreshClearCallSetupFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 229)
)
starThreshClearCallSetupFailure.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearCallSetupFailure.setStatus(
        "current"
    )

starThreshCallRejectNoResource = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 230)
)
starThreshCallRejectNoResource.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshCallRejectNoResource.setStatus(
        "current"
    )

starThreshClearCallRejectNoResource = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 231)
)
starThreshClearCallRejectNoResource.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearCallRejectNoResource.setStatus(
        "current"
    )

starThreshPacketsFilteredDropped = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 232)
)
starThreshPacketsFilteredDropped.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPacketsFilteredDropped.setStatus(
        "current"
    )

starThreshClearPacketsFilteredDropped = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 233)
)
starThreshClearPacketsFilteredDropped.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPacketsFilteredDropped.setStatus(
        "current"
    )

starThreshPacketsForwarded = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 234)
)
starThreshPacketsForwarded.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPacketsForwarded.setStatus(
        "current"
    )

starThreshClearPacketsForwarded = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 235)
)
starThreshClearPacketsForwarded.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPacketsForwarded.setStatus(
        "current"
    )

starThreshSessCPUThroughput = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 236)
)
starThreshSessCPUThroughput.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"),
        ("STARENT-MIB", "starThreshMB"),
        ("STARENT-MIB", "starThreshMeasuredMB"))
)
if mibBuilder.loadTexts:
    starThreshSessCPUThroughput.setStatus(
        "current"
    )

starThreshClearSessCPUThroughput = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 237)
)
starThreshClearSessCPUThroughput.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"),
        ("STARENT-MIB", "starThreshMB"),
        ("STARENT-MIB", "starThreshMeasuredMB"))
)
if mibBuilder.loadTexts:
    starThreshClearSessCPUThroughput.setStatus(
        "current"
    )

starThreshIPPoolAvail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 238)
)
starThreshIPPoolAvail.setObjects(
      *(("STARENT-MIB", "starIPPoolContext"),
        ("STARENT-MIB", "starIPPoolGroup"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshIPPoolAvail.setStatus(
        "current"
    )

starThreshClearIPPoolAvail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 239)
)
starThreshClearIPPoolAvail.setObjects(
      *(("STARENT-MIB", "starIPPoolContext"),
        ("STARENT-MIB", "starIPPoolGroup"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearIPPoolAvail.setStatus(
        "current"
    )

starThreshCPUUtilization10Sec = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 240)
)
starThreshCPUUtilization10Sec.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshCPUUtilization10Sec.setStatus(
        "current"
    )

starThreshClearCPUUtilization10Sec = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 241)
)
starThreshClearCPUUtilization10Sec.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearCPUUtilization10Sec.setStatus(
        "current"
    )

starThreshCPULoad = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 242)
)
starThreshCPULoad.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshCPULoad.setStatus(
        "current"
    )

starThreshClearCPULoad = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 243)
)
starThreshClearCPULoad.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearCPULoad.setStatus(
        "current"
    )

starThreshCPUMemUsage = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 244)
)
starThreshCPUMemUsage.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshCPUMemUsage.setStatus(
        "current"
    )

starThreshClearCPUMemUsage = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 245)
)
starThreshClearCPUMemUsage.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearCPUMemUsage.setStatus(
        "current"
    )

starThreshPDSNSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 246)
)
starThreshPDSNSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPDSNSessions.setStatus(
        "current"
    )

starThreshClearPDSNSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 247)
)
starThreshClearPDSNSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPDSNSessions.setStatus(
        "current"
    )

starThreshGGSNSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 248)
)
starThreshGGSNSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshGGSNSessions.setStatus(
        "current"
    )

starThreshClearGGSNSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 249)
)
starThreshClearGGSNSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearGGSNSessions.setStatus(
        "current"
    )

starThreshHASessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 250)
)
starThreshHASessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshHASessions.setStatus(
        "current"
    )

starThreshClearHASessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 251)
)
starThreshClearHASessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearHASessions.setStatus(
        "current"
    )

starThreshLNSSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 252)
)
starThreshLNSSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshLNSSessions.setStatus(
        "current"
    )

starThreshClearLNSSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 253)
)
starThreshClearLNSSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearLNSSessions.setStatus(
        "current"
    )

starThreshPerServicePDSNSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 254)
)
starThreshPerServicePDSNSessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPerServicePDSNSessions.setStatus(
        "current"
    )

starThreshClearPerServicePDSNSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 255)
)
starThreshClearPerServicePDSNSessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPerServicePDSNSessions.setStatus(
        "current"
    )

starThreshPerServiceGGSNSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 256)
)
starThreshPerServiceGGSNSessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPerServiceGGSNSessions.setStatus(
        "current"
    )

starThreshClearPerServiceGGSNSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 257)
)
starThreshClearPerServiceGGSNSessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPerServiceGGSNSessions.setStatus(
        "current"
    )

starThreshPerServiceHASessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 258)
)
starThreshPerServiceHASessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPerServiceHASessions.setStatus(
        "current"
    )

starThreshClearPerServiceHASessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 259)
)
starThreshClearPerServiceHASessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPerServiceHASessions.setStatus(
        "current"
    )

starThreshPerServiceLNSSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 260)
)
starThreshPerServiceLNSSessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPerServiceLNSSessions.setStatus(
        "current"
    )

starThreshClearPerServiceLNSSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 261)
)
starThreshClearPerServiceLNSSessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPerServiceLNSSessions.setStatus(
        "current"
    )

starThreshIPPoolHold = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 262)
)
starThreshIPPoolHold.setObjects(
      *(("STARENT-MIB", "starIPPoolContext"),
        ("STARENT-MIB", "starIPPoolName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshIPPoolHold.setStatus(
        "current"
    )

starThreshClearIPPoolHold = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 263)
)
starThreshClearIPPoolHold.setObjects(
      *(("STARENT-MIB", "starIPPoolContext"),
        ("STARENT-MIB", "starIPPoolName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearIPPoolHold.setStatus(
        "current"
    )

starThreshIPPoolUsed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 264)
)
starThreshIPPoolUsed.setObjects(
      *(("STARENT-MIB", "starIPPoolContext"),
        ("STARENT-MIB", "starIPPoolName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshIPPoolUsed.setStatus(
        "current"
    )

starThreshClearIPPoolUsed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 265)
)
starThreshClearIPPoolUsed.setObjects(
      *(("STARENT-MIB", "starIPPoolContext"),
        ("STARENT-MIB", "starIPPoolName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearIPPoolUsed.setStatus(
        "current"
    )

starThreshIPPoolRelease = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 266)
)
starThreshIPPoolRelease.setObjects(
      *(("STARENT-MIB", "starIPPoolContext"),
        ("STARENT-MIB", "starIPPoolName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshIPPoolRelease.setStatus(
        "current"
    )

starThreshClearIPPoolRelease = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 267)
)
starThreshClearIPPoolRelease.setObjects(
      *(("STARENT-MIB", "starIPPoolContext"),
        ("STARENT-MIB", "starIPPoolName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearIPPoolRelease.setStatus(
        "current"
    )

starThreshIPPoolFree = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 268)
)
starThreshIPPoolFree.setObjects(
      *(("STARENT-MIB", "starIPPoolContext"),
        ("STARENT-MIB", "starIPPoolName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshIPPoolFree.setStatus(
        "current"
    )

starThreshClearIPPoolFree = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 269)
)
starThreshClearIPPoolFree.setObjects(
      *(("STARENT-MIB", "starIPPoolContext"),
        ("STARENT-MIB", "starIPPoolName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearIPPoolFree.setStatus(
        "current"
    )

starThreshAAAAcctArchive = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 270)
)
starThreshAAAAcctArchive.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshAAAAcctArchive.setStatus(
        "current"
    )

starThreshClearAAAAcctArchive = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 271)
)
starThreshClearAAAAcctArchive.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearAAAAcctArchive.setStatus(
        "current"
    )

starThreshPortSpecRxUtil = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 272)
)
starThreshPortSpecRxUtil.setObjects(
      *(("STARENT-MIB", "starPortSlot"),
        ("STARENT-MIB", "starPortNum"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshPortSpecRxUtil.setStatus(
        "deprecated"
    )

starThreshClearPortSpecRxUtil = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 273)
)
starThreshClearPortSpecRxUtil.setObjects(
      *(("STARENT-MIB", "starPortSlot"),
        ("STARENT-MIB", "starPortNum"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearPortSpecRxUtil.setStatus(
        "deprecated"
    )

starThreshPortSpecTxUtil = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 274)
)
starThreshPortSpecTxUtil.setObjects(
      *(("STARENT-MIB", "starPortSlot"),
        ("STARENT-MIB", "starPortNum"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshPortSpecTxUtil.setStatus(
        "deprecated"
    )

starThreshClearPortSpecTxUtil = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 275)
)
starThreshClearPortSpecTxUtil.setObjects(
      *(("STARENT-MIB", "starPortSlot"),
        ("STARENT-MIB", "starPortNum"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearPortSpecTxUtil.setStatus(
        "deprecated"
    )

starThreshHACallSetupRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 276)
)
starThreshHACallSetupRate.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshHACallSetupRate.setStatus(
        "current"
    )

starThreshClearHACallSetupRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 277)
)
starThreshClearHACallSetupRate.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearHACallSetupRate.setStatus(
        "current"
    )

starThreshHASvcCallSetupRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 278)
)
starThreshHASvcCallSetupRate.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshHASvcCallSetupRate.setStatus(
        "current"
    )

starThreshClearHASvcCallSetupRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 279)
)
starThreshClearHASvcCallSetupRate.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearHASvcCallSetupRate.setStatus(
        "current"
    )

starThreshHASvcRegReplyError = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 280)
)
starThreshHASvcRegReplyError.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshHASvcRegReplyError.setStatus(
        "current"
    )

starThreshClearHASvcRegReplyError = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 281)
)
starThreshClearHASvcRegReplyError.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearHASvcRegReplyError.setStatus(
        "current"
    )

starThreshHASvcReregReplyError = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 282)
)
starThreshHASvcReregReplyError.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshHASvcReregReplyError.setStatus(
        "current"
    )

starThreshClearHASvcReregReplyError = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 283)
)
starThreshClearHASvcReregReplyError.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearHASvcReregReplyError.setStatus(
        "current"
    )

starThreshHASvcDeregReplyError = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 284)
)
starThreshHASvcDeregReplyError.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshHASvcDeregReplyError.setStatus(
        "current"
    )

starThreshClearHASvcDeregReplyError = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 285)
)
starThreshClearHASvcDeregReplyError.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearHASvcDeregReplyError.setStatus(
        "current"
    )

starThreshFASvcRegReplyError = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 286)
)
starThreshFASvcRegReplyError.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshFASvcRegReplyError.setStatus(
        "current"
    )

starThreshClearFASvcRegReplyError = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 287)
)
starThreshClearFASvcRegReplyError.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearFASvcRegReplyError.setStatus(
        "current"
    )

starThreshPDSNCallSetupRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 288)
)
starThreshPDSNCallSetupRate.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPDSNCallSetupRate.setStatus(
        "current"
    )

starThreshClearPDSNCallSetupRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 289)
)
starThreshClearPDSNCallSetupRate.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPDSNCallSetupRate.setStatus(
        "current"
    )

starThreshPDSNSvcCallSetupRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 290)
)
starThreshPDSNSvcCallSetupRate.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPDSNSvcCallSetupRate.setStatus(
        "current"
    )

starThreshClearPDSNSvcCallSetupRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 291)
)
starThreshClearPDSNSvcCallSetupRate.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPDSNSvcCallSetupRate.setStatus(
        "current"
    )

starThreshPDSNSvcA11RRPFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 292)
)
starThreshPDSNSvcA11RRPFailure.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPDSNSvcA11RRPFailure.setStatus(
        "current"
    )

starThreshClearPDSNSvcA11RRPFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 293)
)
starThreshClearPDSNSvcA11RRPFailure.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPDSNSvcA11RRPFailure.setStatus(
        "current"
    )

starThreshPDSNSvcA11RRQMsgDiscard = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 294)
)
starThreshPDSNSvcA11RRQMsgDiscard.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPDSNSvcA11RRQMsgDiscard.setStatus(
        "current"
    )

starThreshClearPDSNSvcA11RRQMsgDiscard = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 295)
)
starThreshClearPDSNSvcA11RRQMsgDiscard.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPDSNSvcA11RRQMsgDiscard.setStatus(
        "current"
    )

starThreshPDSNSvcA11RACMsgDiscard = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 296)
)
starThreshPDSNSvcA11RACMsgDiscard.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPDSNSvcA11RACMsgDiscard.setStatus(
        "current"
    )

starThreshClearPDSNSvcA11RACMsgDiscard = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 297)
)
starThreshClearPDSNSvcA11RACMsgDiscard.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPDSNSvcA11RACMsgDiscard.setStatus(
        "current"
    )

starThreshPDSNSvcA11PPPSendDiscard = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 298)
)
starThreshPDSNSvcA11PPPSendDiscard.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPDSNSvcA11PPPSendDiscard.setStatus(
        "current"
    )

starThreshClearPDSNSvcA11PPPSendDiscard = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 299)
)
starThreshClearPDSNSvcA11PPPSendDiscard.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPDSNSvcA11PPPSendDiscard.setStatus(
        "current"
    )

starThreshAAAMgrQueue = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 300)
)
starThreshAAAMgrQueue.setObjects(
      *(("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshAAAMgrQueue.setStatus(
        "current"
    )

starThreshClearAAAMgrQueue = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 301)
)
starThreshClearAAAMgrQueue.setObjects(
      *(("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearAAAMgrQueue.setStatus(
        "current"
    )

starThreshCPUOrbsWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 302)
)
starThreshCPUOrbsWarn.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshCPUOrbsWarn.setStatus(
        "current"
    )

starThreshClearCPUOrbsWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 303)
)
starThreshClearCPUOrbsWarn.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearCPUOrbsWarn.setStatus(
        "current"
    )

starThreshCPUOrbsCritical = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 304)
)
starThreshCPUOrbsCritical.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshCPUOrbsCritical.setStatus(
        "current"
    )

starThreshClearCPUOrbsCritical = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 305)
)
starThreshClearCPUOrbsCritical.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearCPUOrbsCritical.setStatus(
        "current"
    )

starThreshRPSetupFailRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 306)
)
starThreshRPSetupFailRate.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshRPSetupFailRate.setStatus(
        "current"
    )

starThreshClearRPSetupFailRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 307)
)
starThreshClearRPSetupFailRate.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearRPSetupFailRate.setStatus(
        "current"
    )

starThreshPPPSetupFailRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 308)
)
starThreshPPPSetupFailRate.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshPPPSetupFailRate.setStatus(
        "current"
    )

starThreshClearPPPSetupFailRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 309)
)
starThreshClearPPPSetupFailRate.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearPPPSetupFailRate.setStatus(
        "current"
    )

starThreshStorageUtilization = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 310)
)
starThreshStorageUtilization.setObjects(
      *(("STARENT-MIB", "starStorageSlot"),
        ("STARENT-MIB", "starStorageName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshStorageUtilization.setStatus(
        "current"
    )

starThreshClearStorageUtilization = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 311)
)
starThreshClearStorageUtilization.setObjects(
      *(("STARENT-MIB", "starStorageSlot"),
        ("STARENT-MIB", "starStorageName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearStorageUtilization.setStatus(
        "current"
    )

starThreshDCCAProtocolErrors = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 312)
)
starThreshDCCAProtocolErrors.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshDCCAProtocolErrors.setStatus(
        "current"
    )

starThreshClearDCCAProtocolErrors = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 313)
)
starThreshClearDCCAProtocolErrors.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearDCCAProtocolErrors.setStatus(
        "current"
    )

starThreshDCCABadAnswers = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 314)
)
starThreshDCCABadAnswers.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshDCCABadAnswers.setStatus(
        "current"
    )

starThreshClearDCCABadAnswers = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 315)
)
starThreshClearDCCABadAnswers.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearDCCABadAnswers.setStatus(
        "current"
    )

starThreshDCCAUnknownRatingGroup = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 316)
)
starThreshDCCAUnknownRatingGroup.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshDCCAUnknownRatingGroup.setStatus(
        "current"
    )

starThreshClearDCCAUnknownRatingGroup = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 317)
)
starThreshClearDCCAUnknownRatingGroup.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearDCCAUnknownRatingGroup.setStatus(
        "current"
    )

starThreshDCCARatingFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 318)
)
starThreshDCCARatingFailed.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshDCCARatingFailed.setStatus(
        "current"
    )

starThreshClearDCCARatingFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 319)
)
starThreshClearDCCARatingFailed.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearDCCARatingFailed.setStatus(
        "current"
    )

starThreshIPSECIKERequests = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 320)
)
starThreshIPSECIKERequests.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshIPSECIKERequests.setStatus(
        "current"
    )

starThreshClearIPSECIKERequests = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 321)
)
starThreshClearIPSECIKERequests.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearIPSECIKERequests.setStatus(
        "current"
    )

starThreshIPSECIKEFailures = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 322)
)
starThreshIPSECIKEFailures.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshIPSECIKEFailures.setStatus(
        "current"
    )

starThreshClearIPSECIKEFailures = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 323)
)
starThreshClearIPSECIKEFailures.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearIPSECIKEFailures.setStatus(
        "current"
    )

starThreshIPSECIKEFailRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 324)
)
starThreshIPSECIKEFailRate.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshIPSECIKEFailRate.setStatus(
        "current"
    )

starThreshClearIPSECIKEFailRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 325)
)
starThreshClearIPSECIKEFailRate.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearIPSECIKEFailRate.setStatus(
        "current"
    )

starThreshIPSECTunSetup = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 326)
)
starThreshIPSECTunSetup.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshIPSECTunSetup.setStatus(
        "current"
    )

starThreshClearIPSECTunSetup = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 327)
)
starThreshClearIPSECTunSetup.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearIPSECTunSetup.setStatus(
        "current"
    )

starThreshIPSECTunEstabl = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 328)
)
starThreshIPSECTunEstabl.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshIPSECTunEstabl.setStatus(
        "current"
    )

starThreshClearIPSECTunEstabl = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 329)
)
starThreshClearIPSECTunEstabl.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearIPSECTunEstabl.setStatus(
        "current"
    )

starThreshIPSECCallReqRej = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 330)
)
starThreshIPSECCallReqRej.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshIPSECCallReqRej.setStatus(
        "current"
    )

starThreshClearIPSECCallReqRej = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 331)
)
starThreshClearIPSECCallReqRej.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearIPSECCallReqRej.setStatus(
        "current"
    )

starThreshCSCFSvcRouteFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 332)
)
starThreshCSCFSvcRouteFailure.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshCSCFSvcRouteFailure.setStatus(
        "current"
    )

starThreshClearCSCFSvcRouteFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 333)
)
starThreshClearCSCFSvcRouteFailure.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearCSCFSvcRouteFailure.setStatus(
        "current"
    )

starThreshContFiltRating = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 334)
)
starThreshContFiltRating.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshContFiltRating.setStatus(
        "current"
    )

starThreshClearContFiltRating = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 335)
)
starThreshClearContFiltRating.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearContFiltRating.setStatus(
        "current"
    )

starThreshContFiltBlock = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 336)
)
starThreshContFiltBlock.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshContFiltBlock.setStatus(
        "current"
    )

starThreshClearContFiltBlock = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 337)
)
starThreshClearContFiltBlock.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearContFiltBlock.setStatus(
        "current"
    )

starThreshCDRFileSpace = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 338)
)
starThreshCDRFileSpace.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshCDRFileSpace.setStatus(
        "current"
    )

starThreshClearCDRFileSpace = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 339)
)
starThreshClearCDRFileSpace.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearCDRFileSpace.setStatus(
        "current"
    )

starThreshEDRFileSpace = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 340)
)
starThreshEDRFileSpace.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshEDRFileSpace.setStatus(
        "current"
    )

starThreshClearEDRFileSpace = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 341)
)
starThreshClearEDRFileSpace.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearEDRFileSpace.setStatus(
        "current"
    )

starThreshPDIFCurrSess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 342)
)
starThreshPDIFCurrSess.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPDIFCurrSess.setStatus(
        "current"
    )

starThreshClearPDIFCurrSess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 343)
)
starThreshClearPDIFCurrSess.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPDIFCurrSess.setStatus(
        "current"
    )

starThreshPDIFCurrActSess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 344)
)
starThreshPDIFCurrActSess.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPDIFCurrActSess.setStatus(
        "current"
    )

starThreshClearPDIFCurrActSess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 345)
)
starThreshClearPDIFCurrActSess.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPDIFCurrActSess.setStatus(
        "current"
    )

starThreshCDRFlowControl = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 346)
)
starThreshCDRFlowControl.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshCDRFlowControl.setStatus(
        "current"
    )

starThreshClearCDRFlowControl = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 347)
)
starThreshClearCDRFlowControl.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearCDRFlowControl.setStatus(
        "current"
    )

starThreshASNGWSessTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 348)
)
starThreshASNGWSessTimeout.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshASNGWSessTimeout.setStatus(
        "current"
    )

starThreshClearASNGWSessTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 349)
)
starThreshClearASNGWSessTimeout.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearASNGWSessTimeout.setStatus(
        "current"
    )

starThreshASNGWSessSetupTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 350)
)
starThreshASNGWSessSetupTimeout.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshASNGWSessSetupTimeout.setStatus(
        "current"
    )

starThreshClearASNGWSessSetupTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 351)
)
starThreshClearASNGWSessSetupTimeout.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearASNGWSessSetupTimeout.setStatus(
        "current"
    )

starThreshASNGWAuthFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 352)
)
starThreshASNGWAuthFail.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshASNGWAuthFail.setStatus(
        "current"
    )

starThreshClearASNGWAuthFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 353)
)
starThreshClearASNGWAuthFail.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearASNGWAuthFail.setStatus(
        "current"
    )

starThreshASNGWR6InvNai = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 354)
)
starThreshASNGWR6InvNai.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshASNGWR6InvNai.setStatus(
        "obsolete"
    )

starThreshClearASNGWR6InvNai = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 355)
)
starThreshClearASNGWR6InvNai.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearASNGWR6InvNai.setStatus(
        "obsolete"
    )

starThreshASNGWMaxEAPRetry = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 356)
)
starThreshASNGWMaxEAPRetry.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshASNGWMaxEAPRetry.setStatus(
        "current"
    )

starThreshClearASNGWMaxEAPRetry = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 357)
)
starThreshClearASNGWMaxEAPRetry.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearASNGWMaxEAPRetry.setStatus(
        "current"
    )

starThreshASNGWNWEntryDenial = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 358)
)
starThreshASNGWNWEntryDenial.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshASNGWNWEntryDenial.setStatus(
        "current"
    )

starThreshClearASNGWNWEntryDenial = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 359)
)
starThreshClearASNGWNWEntryDenial.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearASNGWNWEntryDenial.setStatus(
        "current"
    )

starThreshASNGWHandoffDenial = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 360)
)
starThreshASNGWHandoffDenial.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshASNGWHandoffDenial.setStatus(
        "current"
    )

starThreshClearASNGWHandoffDenial = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 361)
)
starThreshClearASNGWHandoffDenial.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearASNGWHandoffDenial.setStatus(
        "current"
    )

starThreshSGSNSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 362)
)
starThreshSGSNSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshSGSNSessions.setStatus(
        "current"
    )

starThreshClearSGSNSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 363)
)
starThreshClearSGSNSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearSGSNSessions.setStatus(
        "current"
    )

starThreshPerServiceSGSNSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 364)
)
starThreshPerServiceSGSNSessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPerServiceSGSNSessions.setStatus(
        "current"
    )

starThreshClearPerServiceSGSNSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 365)
)
starThreshClearPerServiceSGSNSessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPerServiceSGSNSessions.setStatus(
        "current"
    )

starThreshSGSNPdpSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 366)
)
starThreshSGSNPdpSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshSGSNPdpSessions.setStatus(
        "current"
    )

starThreshClearSGSNPdpSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 367)
)
starThreshClearSGSNPdpSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearSGSNPdpSessions.setStatus(
        "current"
    )

starThreshPerServiceSGSNPdpSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 368)
)
starThreshPerServiceSGSNPdpSessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPerServiceSGSNPdpSessions.setStatus(
        "current"
    )

starThreshClearPerServiceSGSNPdpSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 369)
)
starThreshClearPerServiceSGSNPdpSessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPerServiceSGSNPdpSessions.setStatus(
        "current"
    )

starThreshFWDosAttack = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 370)
)
starThreshFWDosAttack.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshFWDosAttack.setStatus(
        "current"
    )

starThreshClearFWDosAttack = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 371)
)
starThreshClearFWDosAttack.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearFWDosAttack.setStatus(
        "current"
    )

starThreshFWDropPacket = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 372)
)
starThreshFWDropPacket.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshFWDropPacket.setStatus(
        "current"
    )

starThreshClearFWDropPacket = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 373)
)
starThreshClearFWDropPacket.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearFWDropPacket.setStatus(
        "current"
    )

starThreshFWDenyRule = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 374)
)
starThreshFWDenyRule.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshFWDenyRule.setStatus(
        "current"
    )

starThreshClearFWDenyRule = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 375)
)
starThreshClearFWDenyRule.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearFWDenyRule.setStatus(
        "current"
    )

starThreshFWNoRule = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 376)
)
starThreshFWNoRule.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshFWNoRule.setStatus(
        "current"
    )

starThreshClearFWNoRule = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 377)
)
starThreshClearFWNoRule.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearFWNoRule.setStatus(
        "current"
    )

starThreshPHSGWSessTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 378)
)
starThreshPHSGWSessTimeout.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPHSGWSessTimeout.setStatus(
        "current"
    )

starThreshClearPHSGWSessTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 379)
)
starThreshClearPHSGWSessTimeout.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPHSGWSessTimeout.setStatus(
        "current"
    )

starThreshPHSGWSessSetupTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 380)
)
starThreshPHSGWSessSetupTimeout.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPHSGWSessSetupTimeout.setStatus(
        "current"
    )

starThreshClearPHSGWSessSetupTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 381)
)
starThreshClearPHSGWSessSetupTimeout.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPHSGWSessSetupTimeout.setStatus(
        "current"
    )

starThreshPHSGWAuthFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 382)
)
starThreshPHSGWAuthFail.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPHSGWAuthFail.setStatus(
        "current"
    )

starThreshClearPHSGWAuthFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 383)
)
starThreshClearPHSGWAuthFail.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPHSGWAuthFail.setStatus(
        "current"
    )

starThreshPHSGWMaxEAPRetry = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 384)
)
starThreshPHSGWMaxEAPRetry.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPHSGWMaxEAPRetry.setStatus(
        "current"
    )

starThreshClearPHSGWMaxEAPRetry = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 385)
)
starThreshClearPHSGWMaxEAPRetry.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPHSGWMaxEAPRetry.setStatus(
        "current"
    )

starThreshPHSGWNWEntryDenial = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 386)
)
starThreshPHSGWNWEntryDenial.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPHSGWNWEntryDenial.setStatus(
        "current"
    )

starThreshClearPHSGWNWEntryDenial = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 387)
)
starThreshClearPHSGWNWEntryDenial.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPHSGWNWEntryDenial.setStatus(
        "current"
    )

starThreshPHSGWHandoffDenial = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 388)
)
starThreshPHSGWHandoffDenial.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPHSGWHandoffDenial.setStatus(
        "current"
    )

starThreshClearPHSGWHandoffDenial = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 389)
)
starThreshClearPHSGWHandoffDenial.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPHSGWHandoffDenial.setStatus(
        "current"
    )

starThreshASNGWSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 390)
)
starThreshASNGWSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshASNGWSessions.setStatus(
        "current"
    )

starThreshClearASNGWSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 391)
)
starThreshClearASNGWSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearASNGWSessions.setStatus(
        "current"
    )

starThreshPerServiceASNGWSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 392)
)
starThreshPerServiceASNGWSessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPerServiceASNGWSessions.setStatus(
        "current"
    )

starThreshClearPerServiceASNGWSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 393)
)
starThreshClearPerServiceASNGWSessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPerServiceASNGWSessions.setStatus(
        "current"
    )

starThreshPHSPCSessSetupTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 394)
)
starThreshPHSPCSessSetupTimeout.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPHSPCSessSetupTimeout.setStatus(
        "current"
    )

starThreshClearPHSPCSessSetupTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 395)
)
starThreshClearPHSPCSessSetupTimeout.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPHSPCSessSetupTimeout.setStatus(
        "current"
    )

starThreshPHSPCSleepModeTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 396)
)
starThreshPHSPCSleepModeTimeout.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPHSPCSleepModeTimeout.setStatus(
        "current"
    )

starThreshClearPHSPCSleepModeTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 397)
)
starThreshClearPHSPCSleepModeTimeout.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPHSPCSleepModeTimeout.setStatus(
        "current"
    )

starThreshPHSPCSmEntryDenial = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 398)
)
starThreshPHSPCSmEntryDenial.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPHSPCSmEntryDenial.setStatus(
        "current"
    )

starThreshClearPHSPCSmEntryDenial = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 399)
)
starThreshClearPHSPCSmEntryDenial.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPHSPCSmEntryDenial.setStatus(
        "current"
    )

starThreshSGWSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 408)
)
starThreshSGWSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshSGWSessions.setStatus(
        "current"
    )

starThreshClearSGWSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 409)
)
starThreshClearSGWSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearSGWSessions.setStatus(
        "current"
    )

starThreshPGWSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 410)
)
starThreshPGWSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPGWSessions.setStatus(
        "current"
    )

starThreshClearPGWSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 411)
)
starThreshClearPGWSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPGWSessions.setStatus(
        "current"
    )

starThreshLMASessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 412)
)
starThreshLMASessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshLMASessions.setStatus(
        "current"
    )

starThreshClearLMASessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 413)
)
starThreshClearLMASessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearLMASessions.setStatus(
        "current"
    )

starThreshMAGSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 414)
)
starThreshMAGSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshMAGSessions.setStatus(
        "current"
    )

starThreshClearMAGSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 415)
)
starThreshClearMAGSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearMAGSessions.setStatus(
        "current"
    )

starThreshFNGCurrSess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 416)
)
starThreshFNGCurrSess.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshFNGCurrSess.setStatus(
        "current"
    )

starThreshClearFNGCurrSess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 417)
)
starThreshClearFNGCurrSess.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearFNGCurrSess.setStatus(
        "current"
    )

starThreshFNGCurrActSess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 418)
)
starThreshFNGCurrActSess.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshFNGCurrActSess.setStatus(
        "current"
    )

starThreshClearFNGCurrActSess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 419)
)
starThreshClearFNGCurrActSess.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearFNGCurrActSess.setStatus(
        "current"
    )

starThreshPHSGWEAPOLAuthFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 420)
)
starThreshPHSGWEAPOLAuthFailure.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPHSGWEAPOLAuthFailure.setStatus(
        "current"
    )

starThreshClearPHSGWEAPOLAuthFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 421)
)
starThreshClearPHSGWEAPOLAuthFailure.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPHSGWEAPOLAuthFailure.setStatus(
        "current"
    )

starThreshPHSGWMaxEAPOLRetry = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 422)
)
starThreshPHSGWMaxEAPOLRetry.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPHSGWMaxEAPOLRetry.setStatus(
        "current"
    )

starThreshClearPHSGWMaxEAPOLRetry = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 423)
)
starThreshClearPHSGWMaxEAPOLRetry.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPHSGWMaxEAPOLRetry.setStatus(
        "current"
    )

starThreshHSGWSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 424)
)
starThreshHSGWSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshHSGWSessions.setStatus(
        "current"
    )

starThreshClearHSGWSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 425)
)
starThreshClearHSGWSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearHSGWSessions.setStatus(
        "current"
    )

starThreshPDGCurrSess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 426)
)
starThreshPDGCurrSess.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPDGCurrSess.setStatus(
        "current"
    )

starThreshClearPDGCurrSess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 427)
)
starThreshClearPDGCurrSess.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPDGCurrSess.setStatus(
        "current"
    )

starThreshPDGCurrActSess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 428)
)
starThreshPDGCurrActSess.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPDGCurrActSess.setStatus(
        "current"
    )

starThreshClearPDGCurrActSess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 429)
)
starThreshClearPDGCurrActSess.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPDGCurrActSess.setStatus(
        "current"
    )

starThreshNATPortChunks = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 430)
)
starThreshNATPortChunks.setObjects(
      *(("STARENT-MIB", "starIPPoolContext"),
        ("STARENT-MIB", "starIPPoolName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshNATPortChunks.setStatus(
        "current"
    )

starThreshClearNATPortChunks = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 431)
)
starThreshClearNATPortChunks.setObjects(
      *(("STARENT-MIB", "starIPPoolContext"),
        ("STARENT-MIB", "starIPPoolName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearNATPortChunks.setStatus(
        "current"
    )

starThreshGPRSSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 432)
)
starThreshGPRSSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshGPRSSessions.setStatus(
        "current"
    )

starThreshClearGPRSSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 433)
)
starThreshClearGPRSSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearGPRSSessions.setStatus(
        "current"
    )

starThreshPerServiceGPRSSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 434)
)
starThreshPerServiceGPRSSessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPerServiceGPRSSessions.setStatus(
        "current"
    )

starThreshClearPerServiceGPRSSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 435)
)
starThreshClearPerServiceGPRSSessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPerServiceGPRSSessions.setStatus(
        "current"
    )

starThreshGPRSPdpSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 436)
)
starThreshGPRSPdpSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshGPRSPdpSessions.setStatus(
        "current"
    )

starThreshClearGPRSPdpSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 437)
)
starThreshClearGPRSPdpSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearGPRSPdpSessions.setStatus(
        "current"
    )

starThreshPerServiceGPRSPdpSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 438)
)
starThreshPerServiceGPRSPdpSessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPerServiceGPRSPdpSessions.setStatus(
        "current"
    )

starThreshClearPerServiceGPRSPdpSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 439)
)
starThreshClearPerServiceGPRSPdpSessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPerServiceGPRSPdpSessions.setStatus(
        "current"
    )

starThreshMMESessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 440)
)
starThreshMMESessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshMMESessions.setStatus(
        "current"
    )

starThreshClearMMESessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 441)
)
starThreshClearMMESessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearMMESessions.setStatus(
        "current"
    )

starThreshMMEAuthFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 442)
)
starThreshMMEAuthFail.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshMMEAuthFail.setStatus(
        "current"
    )

starThreshClearMMEAuthFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 443)
)
starThreshClearMMEAuthFail.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearMMEAuthFail.setStatus(
        "current"
    )

starThreshMMEAttachFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 444)
)
starThreshMMEAttachFail.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshMMEAttachFail.setStatus(
        "current"
    )

starThreshClearMMEAttachFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 445)
)
starThreshClearMMEAttachFail.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearMMEAttachFail.setStatus(
        "current"
    )

starThreshCSCFSvcRegRcvdRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 446)
)
starThreshCSCFSvcRegRcvdRate.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshCSCFSvcRegRcvdRate.setStatus(
        "current"
    )

starThreshClearCSCFSvcRegRcvdRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 447)
)
starThreshClearCSCFSvcRegRcvdRate.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearCSCFSvcRegRcvdRate.setStatus(
        "current"
    )

starThreshCSCFSvcTotalActiveReg = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 448)
)
starThreshCSCFSvcTotalActiveReg.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshCSCFSvcTotalActiveReg.setStatus(
        "current"
    )

starThreshClearCSCFSvcTotalActiveReg = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 449)
)
starThreshClearCSCFSvcTotalActiveReg.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearCSCFSvcTotalActiveReg.setStatus(
        "current"
    )

starThreshCSCFSvcInviteRcvdRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 450)
)
starThreshCSCFSvcInviteRcvdRate.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshCSCFSvcInviteRcvdRate.setStatus(
        "current"
    )

starThreshClearCSCFSvcInviteRcvdRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 451)
)
starThreshClearCSCFSvcInviteRcvdRate.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearCSCFSvcInviteRcvdRate.setStatus(
        "current"
    )

starThreshCSCFSvcTotalActiveCalls = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 452)
)
starThreshCSCFSvcTotalActiveCalls.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshCSCFSvcTotalActiveCalls.setStatus(
        "current"
    )

starThreshClearCSCFSvcTotalActiveCalls = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 453)
)
starThreshClearCSCFSvcTotalActiveCalls.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearCSCFSvcTotalActiveCalls.setStatus(
        "current"
    )

starThreshCSCFSvcTotalCallFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 454)
)
starThreshCSCFSvcTotalCallFailure.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshCSCFSvcTotalCallFailure.setStatus(
        "current"
    )

starThreshClearCSCFSvcTotalCallFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 455)
)
starThreshClearCSCFSvcTotalCallFailure.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearCSCFSvcTotalCallFailure.setStatus(
        "current"
    )

starThreshCSCFSvcErrorNoResource = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 456)
)
starThreshCSCFSvcErrorNoResource.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshCSCFSvcErrorNoResource.setStatus(
        "current"
    )

starThreshClearCSCFSvcErrorNoResource = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 457)
)
starThreshClearCSCFSvcErrorNoResource.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearCSCFSvcErrorNoResource.setStatus(
        "current"
    )

starThreshCSCFSvcErrorTcp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 458)
)
starThreshCSCFSvcErrorTcp.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshCSCFSvcErrorTcp.setStatus(
        "current"
    )

starThreshClearCSCFSvcErrorTcp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 459)
)
starThreshClearCSCFSvcErrorTcp.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearCSCFSvcErrorTcp.setStatus(
        "current"
    )

starThreshCSCFSvcErrorPresence = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 460)
)
starThreshCSCFSvcErrorPresence.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshCSCFSvcErrorPresence.setStatus(
        "current"
    )

starThreshClearCSCFSvcErrorPresence = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 461)
)
starThreshClearCSCFSvcErrorPresence.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearCSCFSvcErrorPresence.setStatus(
        "current"
    )

starThreshCSCFSvcErrorRegAuth = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 462)
)
starThreshCSCFSvcErrorRegAuth.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshCSCFSvcErrorRegAuth.setStatus(
        "current"
    )

starThreshClearCSCFSvcErrorRegAuth = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 463)
)
starThreshClearCSCFSvcErrorRegAuth.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearCSCFSvcErrorRegAuth.setStatus(
        "current"
    )

starThreshBGPRoutes = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 464)
)
starThreshBGPRoutes.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshBGPRoutes.setStatus(
        "current"
    )

starThreshClearBGPRoutes = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 465)
)
starThreshClearBGPRoutes.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearBGPRoutes.setStatus(
        "current"
    )

starThreshPCCPolicySessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 466)
)
starThreshPCCPolicySessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPCCPolicySessions.setStatus(
        "current"
    )

starThreshClearPCCPolicySessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 467)
)
starThreshClearPCCPolicySessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPCCPolicySessions.setStatus(
        "current"
    )

starThreshPerServicePCCPolicySessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 468)
)
starThreshPerServicePCCPolicySessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPerServicePCCPolicySessions.setStatus(
        "current"
    )

starThreshClearPerServicePCCPolicySessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 469)
)
starThreshClearPerServicePCCPolicySessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPerServicePCCPolicySessions.setStatus(
        "current"
    )

starThreshPCCQuotaSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 470)
)
starThreshPCCQuotaSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPCCQuotaSessions.setStatus(
        "current"
    )

starThreshClearPCCQuotaSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 471)
)
starThreshClearPCCQuotaSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPCCQuotaSessions.setStatus(
        "current"
    )

starThreshPerServicePCCQuotaSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 472)
)
starThreshPerServicePCCQuotaSessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPerServicePCCQuotaSessions.setStatus(
        "current"
    )

starThreshClearPerServicePCCQuotaSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 473)
)
starThreshClearPerServicePCCQuotaSessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPerServicePCCQuotaSessions.setStatus(
        "current"
    )

starThreshPCCAFSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 474)
)
starThreshPCCAFSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPCCAFSessions.setStatus(
        "current"
    )

starThreshClearPCCAFSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 475)
)
starThreshClearPCCAFSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPCCAFSessions.setStatus(
        "current"
    )

starThreshPerServicePCCAFSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 476)
)
starThreshPerServicePCCAFSessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPerServicePCCAFSessions.setStatus(
        "current"
    )

starThreshClearPerServicePCCAFSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 477)
)
starThreshClearPerServicePCCAFSessions.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPerServicePCCAFSessions.setStatus(
        "current"
    )

starThreshNPUUtilization = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 478)
)
starThreshNPUUtilization.setObjects(
      *(("STARENT-MIB", "starNPUSlot"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshNPUUtilization.setStatus(
        "current"
    )

starThreshClearNPUUtilization = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 479)
)
starThreshClearNPUUtilization.setObjects(
      *(("STARENT-MIB", "starNPUSlot"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearNPUUtilization.setStatus(
        "current"
    )

starThreshDnsLookupFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 480)
)
starThreshDnsLookupFailure.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshDnsLookupFailure.setStatus(
        "current"
    )

starThreshClearDnsLookupFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 481)
)
starThreshClearDnsLookupFailure.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearDnsLookupFailure.setStatus(
        "current"
    )

starThreshDiameterRetryRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 482)
)
starThreshDiameterRetryRate.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshDiameterRetryRate.setStatus(
        "current"
    )

starThreshClearDiameterRetryRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 483)
)
starThreshClearDiameterRetryRate.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearDiameterRetryRate.setStatus(
        "current"
    )

starThreshHNBGWHnbSess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 484)
)
starThreshHNBGWHnbSess.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshHNBGWHnbSess.setStatus(
        "current"
    )

starThreshClearHNBGWHnbSess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 485)
)
starThreshClearHNBGWHnbSess.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearHNBGWHnbSess.setStatus(
        "current"
    )

starThreshHNBGWUeSess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 486)
)
starThreshHNBGWUeSess.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshHNBGWUeSess.setStatus(
        "current"
    )

starThreshClearHNBGWUeSess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 487)
)
starThreshClearHNBGWUeSess.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearHNBGWUeSess.setStatus(
        "current"
    )

starThreshHNBGWIuSess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 488)
)
starThreshHNBGWIuSess.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshHNBGWIuSess.setStatus(
        "current"
    )

starThreshClearHNBGWIuSess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 489)
)
starThreshClearHNBGWIuSess.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearHNBGWIuSess.setStatus(
        "current"
    )

starThreshPerServicePDGSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 491)
)
starThreshPerServicePDGSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPerServicePDGSessions.setStatus(
        "current"
    )

starThreshClearPerServicePDGSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 492)
)
starThreshClearPerServicePDGSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPerServicePDGSessions.setStatus(
        "current"
    )

starThreshSystemCapacity = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 493)
)
starThreshSystemCapacity.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshSystemCapacity.setStatus(
        "current"
    )

starThreshClearSystemCapacity = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 494)
)
starThreshClearSystemCapacity.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearSystemCapacity.setStatus(
        "current"
    )

starThreshTpoRtoTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 495)
)
starThreshTpoRtoTimeout.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshTpoRtoTimeout.setStatus(
        "current"
    )

starThreshClearTpoRtoTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 496)
)
starThreshClearTpoRtoTimeout.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearTpoRtoTimeout.setStatus(
        "current"
    )

starThreshTpoDnsFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 497)
)
starThreshTpoDnsFailure.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshTpoDnsFailure.setStatus(
        "current"
    )

starThreshClearTpoDnsFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 498)
)
starThreshClearTpoDnsFailure.setObjects(
      *(("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearTpoDnsFailure.setStatus(
        "current"
    )

starThreshTpoLowCompressionGain = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 499)
)
starThreshTpoLowCompressionGain.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshTpoLowCompressionGain.setStatus(
        "current"
    )

starThreshClearTpoLowCompressionGain = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 500)
)
starThreshClearTpoLowCompressionGain.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearTpoLowCompressionGain.setStatus(
        "current"
    )

starThreshEPDGCurrSess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 501)
)
starThreshEPDGCurrSess.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshEPDGCurrSess.setStatus(
        "current"
    )

starThreshClearEPDGCurrSess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 502)
)
starThreshClearEPDGCurrSess.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearEPDGCurrSess.setStatus(
        "current"
    )

starThreshCardTemperatureNearPowerOffLimit = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 503)
)
starThreshCardTemperatureNearPowerOffLimit.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshCardTemperatureNearPowerOffLimit.setStatus(
        "current"
    )

starThreshClearCardTemperaturePowerOffLimit = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 504)
)
starThreshClearCardTemperaturePowerOffLimit.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearCardTemperaturePowerOffLimit.setStatus(
        "current"
    )

starThreshAAAAcctArchiveQueue1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 505)
)
starThreshAAAAcctArchiveQueue1.setObjects(
      *(("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshAAAAcctArchiveQueue1.setStatus(
        "current"
    )

starThreshClearAAAAcctArchiveQueue1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 506)
)
starThreshClearAAAAcctArchiveQueue1.setObjects(
      *(("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearAAAAcctArchiveQueue1.setStatus(
        "current"
    )

starThreshAAAAcctArchiveQueue2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 507)
)
starThreshAAAAcctArchiveQueue2.setObjects(
      *(("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshAAAAcctArchiveQueue2.setStatus(
        "current"
    )

starThreshClearAAAAcctArchiveQueue2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 508)
)
starThreshClearAAAAcctArchiveQueue2.setObjects(
      *(("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearAAAAcctArchiveQueue2.setStatus(
        "current"
    )

starThreshAAAAcctArchiveQueue3 = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 509)
)
starThreshAAAAcctArchiveQueue3.setObjects(
      *(("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshAAAAcctArchiveQueue3.setStatus(
        "current"
    )

starThreshClearAAAAcctArchiveQueue3 = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 510)
)
starThreshClearAAAAcctArchiveQueue3.setObjects(
      *(("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearAAAAcctArchiveQueue3.setStatus(
        "current"
    )

starThreshDnsLookupSrvFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 511)
)
starThreshDnsLookupSrvFailure.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshDnsLookupSrvFailure.setStatus(
        "current"
    )

starThreshClearDnsLookupSrvFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 512)
)
starThreshClearDnsLookupSrvFailure.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearDnsLookupSrvFailure.setStatus(
        "current"
    )

starThreshHENBGWHenbSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 513)
)
starThreshHENBGWHenbSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshHENBGWHenbSessions.setStatus(
        "current"
    )

starThreshClearHENBGWHenbSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 514)
)
starThreshClearHENBGWHenbSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearHENBGWHenbSessions.setStatus(
        "current"
    )

starThreshHENBGWUeSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 515)
)
starThreshHENBGWUeSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshHENBGWUeSessions.setStatus(
        "current"
    )

starThreshClearHENBGWUeSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 516)
)
starThreshClearHENBGWUeSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearHENBGWUeSessions.setStatus(
        "current"
    )

starThreshHENBGWPagingMessages = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 517)
)
starThreshHENBGWPagingMessages.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshHENBGWPagingMessages.setStatus(
        "current"
    )

starThreshClearHENBGWPagingMessages = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 518)
)
starThreshClearHENBGWPagingMessages.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearHENBGWPagingMessages.setStatus(
        "current"
    )

starThreshPerServiceSAMOGSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 519)
)
starThreshPerServiceSAMOGSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshPerServiceSAMOGSessions.setStatus(
        "current"
    )

starThreshClearPerServiceSAMOGSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 520)
)
starThreshClearPerServiceSAMOGSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearPerServiceSAMOGSessions.setStatus(
        "current"
    )

starThreshNATPktDrop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 521)
)
starThreshNATPktDrop.setObjects(
      *(("STARENT-MIB", "starIPPoolContext"),
        ("STARENT-MIB", "starIPPoolName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshNATPktDrop.setStatus(
        "current"
    )

starThreshClearNATPktDrop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 522)
)
starThreshClearNATPktDrop.setObjects(
      *(("STARENT-MIB", "starIPPoolContext"),
        ("STARENT-MIB", "starIPPoolName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearNATPktDrop.setStatus(
        "current"
    )

starThreshFabricEGQDiscards = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 523)
)
starThreshFabricEGQDiscards.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starThreshDeviceNum"),
        ("STARENT-MIB", "starThreshMeasuredInt"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshPeriodInt"))
)
if mibBuilder.loadTexts:
    starThreshFabricEGQDiscards.setStatus(
        "current"
    )

starThreshClearFabricEGQDiscards = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 524)
)
starThreshClearFabricEGQDiscards.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starThreshDeviceNum"),
        ("STARENT-MIB", "starThreshMeasuredInt"),
        ("STARENT-MIB", "starThreshInt"))
)
if mibBuilder.loadTexts:
    starThreshClearFabricEGQDiscards.setStatus(
        "current"
    )

starGILANServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 525)
)
starGILANServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starGILANServiceStart.setStatus(
        "current"
    )

starGILANServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 526)
)
starGILANServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starGILANServiceStop.setStatus(
        "current"
    )

starThreshEPDGIKEV2SetupAttempts = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 527)
)
starThreshEPDGIKEV2SetupAttempts.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshEPDGIKEV2SetupAttempts.setStatus(
        "current"
    )

starThreshClearEPDGIKEV2SetupAttempts = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 528)
)
starThreshClearEPDGIKEV2SetupAttempts.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearEPDGIKEV2SetupAttempts.setStatus(
        "current"
    )

starThreshEPDGIKEV2AuthFailures = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 529)
)
starThreshEPDGIKEV2AuthFailures.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshEPDGIKEV2AuthFailures.setStatus(
        "current"
    )

starThreshClearEPDGIKEV2AuthFailures = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 530)
)
starThreshClearEPDGIKEV2AuthFailures.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearEPDGIKEV2AuthFailures.setStatus(
        "current"
    )

starThreshEPDGIKEV2SetupSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 531)
)
starThreshEPDGIKEV2SetupSuccess.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshEPDGIKEV2SetupSuccess.setStatus(
        "current"
    )

starThreshClearEPDGIKEV2SetupSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 532)
)
starThreshClearEPDGIKEV2SetupSuccess.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearEPDGIKEV2SetupSuccess.setStatus(
        "current"
    )

starThreshEPDGIKEV2SetupFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 533)
)
starThreshEPDGIKEV2SetupFailure.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshEPDGIKEV2SetupFailure.setStatus(
        "current"
    )

starThreshClearEPDGIKEV2SetupFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 534)
)
starThreshClearEPDGIKEV2SetupFailure.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearEPDGIKEV2SetupFailure.setStatus(
        "current"
    )

starThreshEPDGIKEV2SetupFailureRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 535)
)
starThreshEPDGIKEV2SetupFailureRate.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshEPDGIKEV2SetupFailureRate.setStatus(
        "current"
    )

starThreshClearEPDGIKEV2SetupFailureRate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 536)
)
starThreshClearEPDGIKEV2SetupFailureRate.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starThreshPct"),
        ("STARENT-MIB", "starThreshMeasuredPct"))
)
if mibBuilder.loadTexts:
    starThreshClearEPDGIKEV2SetupFailureRate.setStatus(
        "current"
    )

starOSPFNeighborDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1001)
)
starOSPFNeighborDown.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starInterfaceName"),
        ("STARENT-MIB", "starInterfaceIPAddress"),
        ("STARENT-MIB", "starOSPFNeighborRouterID"),
        ("STARENT-MIB", "starOSPFFromState"),
        ("STARENT-MIB", "starOSPFToState"))
)
if mibBuilder.loadTexts:
    starOSPFNeighborDown.setStatus(
        "current"
    )

starOSPFNeighborFull = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1002)
)
starOSPFNeighborFull.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starInterfaceName"),
        ("STARENT-MIB", "starInterfaceIPAddress"),
        ("STARENT-MIB", "starOSPFNeighborRouterID"))
)
if mibBuilder.loadTexts:
    starOSPFNeighborFull.setStatus(
        "current"
    )

starM3UAPSDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1004)
)
starM3UAPSDown.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7M3UAPsId"))
)
if mibBuilder.loadTexts:
    starM3UAPSDown.setStatus(
        "current"
    )

starM3UAPSActive = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1005)
)
starM3UAPSActive.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7M3UAPsId"))
)
if mibBuilder.loadTexts:
    starM3UAPSActive.setStatus(
        "current"
    )

starM3UAPSPDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1006)
)
starM3UAPSPDown.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7M3UAPsId"),
        ("STARENT-MIB", "starSS7M3UAPspId"),
        ("STARENT-MIB", "starSS7CauseString"))
)
if mibBuilder.loadTexts:
    starM3UAPSPDown.setStatus(
        "current"
    )

starM3UAPSPUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1007)
)
starM3UAPSPUp.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7M3UAPsId"),
        ("STARENT-MIB", "starSS7M3UAPspId"),
        ("STARENT-MIB", "starSS7CauseString"))
)
if mibBuilder.loadTexts:
    starM3UAPSPUp.setStatus(
        "current"
    )

starSCCPSspRcvd = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1008)
)
starSCCPSspRcvd.setObjects(
      *(("STARENT-MIB", "starSccpNwId"),
        ("STARENT-MIB", "starSS7Pc"),
        ("STARENT-MIB", "starSccpSsn"))
)
if mibBuilder.loadTexts:
    starSCCPSspRcvd.setStatus(
        "current"
    )

starSCCPSspClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1009)
)
starSCCPSspClear.setObjects(
      *(("STARENT-MIB", "starSccpNwId"),
        ("STARENT-MIB", "starSS7Pc"),
        ("STARENT-MIB", "starSccpSsn"))
)
if mibBuilder.loadTexts:
    starSCCPSspClear.setStatus(
        "current"
    )

starSGSNRNCReset = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1010)
)
starSGSNRNCReset.setObjects(
      *(("STARENT-MIB", "starSessSGSNVpnName"),
        ("STARENT-MIB", "starSessSGSNServName"),
        ("STARENT-MIB", "starSessSGSNMcc"),
        ("STARENT-MIB", "starSessSGSNMnc"),
        ("STARENT-MIB", "starSessSGSNRncId"))
)
if mibBuilder.loadTexts:
    starSGSNRNCReset.setStatus(
        "current"
    )

starSGSNHLRReset = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1011)
)
starSGSNHLRReset.setObjects(
      *(("STARENT-MIB", "starSessSGSNVpnName"),
        ("STARENT-MIB", "starSessSGSNServName"),
        ("STARENT-MIB", "starSessSGSNHlrNum"))
)
if mibBuilder.loadTexts:
    starSGSNHLRReset.setStatus(
        "current"
    )

starSGSNGtpcPathFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1012)
)
starSGSNGtpcPathFailure.setObjects(
      *(("STARENT-MIB", "starSGTPVpnName"),
        ("STARENT-MIB", "starSGTPServName"),
        ("STARENT-MIB", "starSGTPPeerAddr"),
        ("STARENT-MIB", "starSGTPPeerPort"),
        ("STARENT-MIB", "starSGTPSelfAddr"),
        ("STARENT-MIB", "starSGTPSelfPort"))
)
if mibBuilder.loadTexts:
    starSGSNGtpcPathFailure.setStatus(
        "current"
    )

starSGSNGtpcPathFailureClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1013)
)
starSGSNGtpcPathFailureClear.setObjects(
      *(("STARENT-MIB", "starSGTPVpnName"),
        ("STARENT-MIB", "starSGTPServName"),
        ("STARENT-MIB", "starSGTPPeerAddr"),
        ("STARENT-MIB", "starSGTPPeerPort"),
        ("STARENT-MIB", "starSGTPSelfAddr"),
        ("STARENT-MIB", "starSGTPSelfPort"))
)
if mibBuilder.loadTexts:
    starSGSNGtpcPathFailureClear.setStatus(
        "current"
    )

starSGSNGtpuPathFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1014)
)
starSGSNGtpuPathFailure.setObjects(
      *(("STARENT-MIB", "starSGTPVpnName"),
        ("STARENT-MIB", "starSGTPServName"),
        ("STARENT-MIB", "starSGTPPeerAddr"),
        ("STARENT-MIB", "starSGTPPeerPort"),
        ("STARENT-MIB", "starSGTPSelfAddr"),
        ("STARENT-MIB", "starSGTPSelfPort"))
)
if mibBuilder.loadTexts:
    starSGSNGtpuPathFailure.setStatus(
        "current"
    )

starSGSNGtpuPathFailureClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1015)
)
starSGSNGtpuPathFailureClear.setObjects(
      *(("STARENT-MIB", "starSGTPVpnName"),
        ("STARENT-MIB", "starSGTPServName"),
        ("STARENT-MIB", "starSGTPPeerAddr"),
        ("STARENT-MIB", "starSGTPPeerPort"),
        ("STARENT-MIB", "starSGTPSelfAddr"),
        ("STARENT-MIB", "starSGTPSelfPort"))
)
if mibBuilder.loadTexts:
    starSGSNGtpuPathFailureClear.setStatus(
        "current"
    )

starMTP3LinkOutOfService = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1016)
)
starMTP3LinkOutOfService.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7MTP3LinkSetId"),
        ("STARENT-MIB", "starSS7MTP3LinkId"))
)
if mibBuilder.loadTexts:
    starMTP3LinkOutOfService.setStatus(
        "current"
    )

starMTP3LinkInService = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1017)
)
starMTP3LinkInService.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7MTP3LinkSetId"),
        ("STARENT-MIB", "starSS7MTP3LinkId"))
)
if mibBuilder.loadTexts:
    starMTP3LinkInService.setStatus(
        "current"
    )

starMTP3LinkSetUnAvailable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1018)
)
starMTP3LinkSetUnAvailable.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7MTP3LinkSetId"))
)
if mibBuilder.loadTexts:
    starMTP3LinkSetUnAvailable.setStatus(
        "current"
    )

starMTP3LinkSetAvailable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1019)
)
starMTP3LinkSetAvailable.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7MTP3LinkSetId"))
)
if mibBuilder.loadTexts:
    starMTP3LinkSetAvailable.setStatus(
        "current"
    )

starSCTPAssociationFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1020)
)
starSCTPAssociationFail.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7M3UAPsId"),
        ("STARENT-MIB", "starSS7M3UAPspId"))
)
if mibBuilder.loadTexts:
    starSCTPAssociationFail.setStatus(
        "current"
    )

starSCTPAssociationEstablished = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1021)
)
starSCTPAssociationEstablished.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7M3UAPsId"),
        ("STARENT-MIB", "starSS7M3UAPspId"))
)
if mibBuilder.loadTexts:
    starSCTPAssociationEstablished.setStatus(
        "current"
    )

starSCTPPathDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1022)
)
starSCTPPathDown.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7M3UAPsId"),
        ("STARENT-MIB", "starSS7M3UAPspId"),
        ("STARENT-MIB", "starSS7SCTPSelfAddr"),
        ("STARENT-MIB", "starSS7SCTPSelfPort"),
        ("STARENT-MIB", "starSS7SCTPPeerAddr"),
        ("STARENT-MIB", "starSS7SCTPPeerPort"),
        ("STARENT-MIB", "starSS7CauseString"))
)
if mibBuilder.loadTexts:
    starSCTPPathDown.setStatus(
        "current"
    )

starSCTPPathUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1023)
)
starSCTPPathUp.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7M3UAPsId"),
        ("STARENT-MIB", "starSS7M3UAPspId"),
        ("STARENT-MIB", "starSS7SCTPSelfAddr"),
        ("STARENT-MIB", "starSS7SCTPSelfPort"),
        ("STARENT-MIB", "starSS7SCTPPeerAddr"),
        ("STARENT-MIB", "starSS7SCTPPeerPort"),
        ("STARENT-MIB", "starSS7CauseString"))
)
if mibBuilder.loadTexts:
    starSCTPPathUp.setStatus(
        "current"
    )

starPortDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1024)
)
starPortDown.setObjects(
      *(("STARENT-MIB", "starPortSlot"),
        ("STARENT-MIB", "starPortNum"),
        ("STARENT-MIB", "starPortType"))
)
if mibBuilder.loadTexts:
    starPortDown.setStatus(
        "current"
    )

starPortUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1025)
)
starPortUp.setObjects(
      *(("STARENT-MIB", "starPortSlot"),
        ("STARENT-MIB", "starPortNum"),
        ("STARENT-MIB", "starPortType"))
)
if mibBuilder.loadTexts:
    starPortUp.setStatus(
        "current"
    )

starBSReachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1026)
)
starBSReachable.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starPeerAddress"))
)
if mibBuilder.loadTexts:
    starBSReachable.setStatus(
        "current"
    )

starBSUnreachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1027)
)
starBSUnreachable.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starPeerAddress"))
)
if mibBuilder.loadTexts:
    starBSUnreachable.setStatus(
        "current"
    )

starSystemStartup = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1028)
)
starSystemStartup.setObjects(
      *(("STARENT-MIB", "starChassisType"),
        ("STARENT-MIB", "starChassisDescription"),
        ("STARENT-MIB", "starChassisSWRevision"))
)
if mibBuilder.loadTexts:
    starSystemStartup.setStatus(
        "current"
    )

starMTP3PCUnavailable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1029)
)
starMTP3PCUnavailable.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7Pc"),
        ("STARENT-MIB", "starSS7MTP3LinkSetId"))
)
if mibBuilder.loadTexts:
    starMTP3PCUnavailable.setStatus(
        "current"
    )

starMTP3PCAvailable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1030)
)
starMTP3PCAvailable.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7Pc"),
        ("STARENT-MIB", "starSS7MTP3LinkSetId"))
)
if mibBuilder.loadTexts:
    starMTP3PCAvailable.setStatus(
        "current"
    )

starSS7PCUnavailable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1031)
)
starSS7PCUnavailable.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7Pc"))
)
if mibBuilder.loadTexts:
    starSS7PCUnavailable.setStatus(
        "current"
    )

starSS7PCAvailable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1032)
)
starSS7PCAvailable.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7Pc"))
)
if mibBuilder.loadTexts:
    starSS7PCAvailable.setStatus(
        "current"
    )

starASNPCServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1033)
)
starASNPCServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starASNPCServiceStart.setStatus(
        "current"
    )

starASNPCServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1034)
)
starASNPCServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starASNPCServiceStop.setStatus(
        "current"
    )

starDiameterCapabilitiesExchangeFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1035)
)
starDiameterCapabilitiesExchangeFailure.setObjects(
      *(("STARENT-MIB", "starDiameterVpnName"),
        ("STARENT-MIB", "starDiameterPeerAddr"),
        ("STARENT-MIB", "starDiameterEndpointName"),
        ("STARENT-MIB", "starDiameterECode"))
)
if mibBuilder.loadTexts:
    starDiameterCapabilitiesExchangeFailure.setStatus(
        "current"
    )

starDiameterCapabilitiesExchangeSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1036)
)
starDiameterCapabilitiesExchangeSuccess.setObjects(
      *(("STARENT-MIB", "starDiameterVpnName"),
        ("STARENT-MIB", "starDiameterPeerAddr"),
        ("STARENT-MIB", "starDiameterEndpointName"))
)
if mibBuilder.loadTexts:
    starDiameterCapabilitiesExchangeSuccess.setStatus(
        "current"
    )

starSRPConnDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1037)
)
starSRPConnDown.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starSRPIpAddress"))
)
if mibBuilder.loadTexts:
    starSRPConnDown.setStatus(
        "current"
    )

starSRPConnUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1038)
)
starSRPConnUp.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starSRPIpAddress"))
)
if mibBuilder.loadTexts:
    starSRPConnUp.setStatus(
        "current"
    )

starDiameterIpv6PeerDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1039)
)
starDiameterIpv6PeerDown.setObjects(
      *(("STARENT-MIB", "starDiameterVpnName"),
        ("STARENT-MIB", "starDiameterPeerAddrIpv6"),
        ("STARENT-MIB", "starDiameterEndpointName"))
)
if mibBuilder.loadTexts:
    starDiameterIpv6PeerDown.setStatus(
        "current"
    )

starDiameterIpv6PeerUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1040)
)
starDiameterIpv6PeerUp.setObjects(
      *(("STARENT-MIB", "starDiameterVpnName"),
        ("STARENT-MIB", "starDiameterPeerAddrIpv6"),
        ("STARENT-MIB", "starDiameterEndpointName"))
)
if mibBuilder.loadTexts:
    starDiameterIpv6PeerUp.setStatus(
        "current"
    )

starIPMSServerUnreachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1041)
)
starIPMSServerUnreachable.setObjects(
      *(("STARENT-MIB", "starIPMSServerVpnName"),
        ("STARENT-MIB", "starIPMSServerAddr"))
)
if mibBuilder.loadTexts:
    starIPMSServerUnreachable.setStatus(
        "current"
    )

starIPMSServerReachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1042)
)
starIPMSServerReachable.setObjects(
      *(("STARENT-MIB", "starIPMSServerVpnName"),
        ("STARENT-MIB", "starIPMSServerAddr"))
)
if mibBuilder.loadTexts:
    starIPMSServerReachable.setStatus(
        "current"
    )

starCertShortLifetime = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1043)
)
starCertShortLifetime.setObjects(
      *(("STARENT-MIB", "starCertSerialNumber"),
        ("STARENT-MIB", "starCertIssuer"),
        ("STARENT-MIB", "starCertExpiryTime"))
)
if mibBuilder.loadTexts:
    starCertShortLifetime.setStatus(
        "current"
    )

starCertExpired = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1044)
)
starCertExpired.setObjects(
      *(("STARENT-MIB", "starCertSerialNumber"),
        ("STARENT-MIB", "starCertIssuer"),
        ("STARENT-MIB", "starCertExpiryTime"))
)
if mibBuilder.loadTexts:
    starCertExpired.setStatus(
        "current"
    )

starCertValid = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1045)
)
starCertValid.setObjects(
      *(("STARENT-MIB", "starCertSerialNumber"),
        ("STARENT-MIB", "starCertIssuer"),
        ("STARENT-MIB", "starCertExpiryTime"))
)
if mibBuilder.loadTexts:
    starCertValid.setStatus(
        "current"
    )

starFTPPushFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1046)
)
starFTPPushFail.setObjects(
      *(("STARENT-MIB", "starFTPServVpnName"),
        ("STARENT-MIB", "starFTPServIpAddr"),
        ("STARENT-MIB", "starFileName"),
        ("STARENT-MIB", "starFileApplication"))
)
if mibBuilder.loadTexts:
    starFTPPushFail.setStatus(
        "current"
    )

starFTPServSwitch = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1047)
)
starFTPServSwitch.setObjects(
      *(("STARENT-MIB", "starFTPServVpnName"),
        ("STARENT-MIB", "starFTPServIpAddr"),
        ("STARENT-MIB", "starFTPServIpAddr"),
        ("STARENT-MIB", "starFileApplication"))
)
if mibBuilder.loadTexts:
    starFTPServSwitch.setStatus(
        "current"
    )

starSDHSectionDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1048)
)
starSDHSectionDown.setObjects(
      *(("STARENT-MIB", "starSDHSlot"),
        ("STARENT-MIB", "starSDHPort"),
        ("STARENT-MIB", "starSDHOperState"))
)
if mibBuilder.loadTexts:
    starSDHSectionDown.setStatus(
        "current"
    )

starSDHSectionUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1049)
)
starSDHSectionUp.setObjects(
      *(("STARENT-MIB", "starSDHSlot"),
        ("STARENT-MIB", "starSDHPort"))
)
if mibBuilder.loadTexts:
    starSDHSectionUp.setStatus(
        "current"
    )

starSDHPathHopDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1050)
)
starSDHPathHopDown.setObjects(
      *(("STARENT-MIB", "starSDHPathSlot"),
        ("STARENT-MIB", "starSDHPathPort"),
        ("STARENT-MIB", "starSDHPathNum"),
        ("STARENT-MIB", "starSDHPathOperState"))
)
if mibBuilder.loadTexts:
    starSDHPathHopDown.setStatus(
        "current"
    )

starSDHPathHopUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1051)
)
starSDHPathHopUp.setObjects(
      *(("STARENT-MIB", "starSDHPathSlot"),
        ("STARENT-MIB", "starSDHPathPort"),
        ("STARENT-MIB", "starSDHPathNum"))
)
if mibBuilder.loadTexts:
    starSDHPathHopUp.setStatus(
        "current"
    )

starSDHLopDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1052)
)
starSDHLopDown.setObjects(
      *(("STARENT-MIB", "starE1TribSlot"),
        ("STARENT-MIB", "starE1TribPort"),
        ("STARENT-MIB", "starE1TribPath"),
        ("STARENT-MIB", "starE1TribTug2"),
        ("STARENT-MIB", "starE1TribTu12"),
        ("STARENT-MIB", "starE1TribOperStateLOP"))
)
if mibBuilder.loadTexts:
    starSDHLopDown.setStatus(
        "current"
    )

starSDHLopUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1053)
)
starSDHLopUp.setObjects(
      *(("STARENT-MIB", "starE1TribSlot"),
        ("STARENT-MIB", "starE1TribPort"),
        ("STARENT-MIB", "starE1TribPath"),
        ("STARENT-MIB", "starE1TribTug2"),
        ("STARENT-MIB", "starE1TribTu12"))
)
if mibBuilder.loadTexts:
    starSDHLopUp.setStatus(
        "current"
    )

starSS7PCCongested = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1056)
)
starSS7PCCongested.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7Pc"),
        ("STARENT-MIB", "starSS7CongLevel"),
        ("STARENT-MIB", "starSS7LocalCong"))
)
if mibBuilder.loadTexts:
    starSS7PCCongested.setStatus(
        "current"
    )

starSS7PCCongestionCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1057)
)
starSS7PCCongestionCleared.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7Pc"),
        ("STARENT-MIB", "starSS7CongLevel"),
        ("STARENT-MIB", "starSS7LocalCong"))
)
if mibBuilder.loadTexts:
    starSS7PCCongestionCleared.setStatus(
        "current"
    )

starPHSGWServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1058)
)
starPHSGWServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starPHSGWServiceStart.setStatus(
        "current"
    )

starPHSGWServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1059)
)
starPHSGWServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starPHSGWServiceStop.setStatus(
        "current"
    )

starGPRSServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1060)
)
starGPRSServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starGPRSServiceStart.setStatus(
        "current"
    )

starGPRSServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1061)
)
starGPRSServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starGPRSServiceStop.setStatus(
        "current"
    )

starGPRSNseDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1062)
)
starGPRSNseDown.setObjects(
    ("STARENT-MIB", "starGPRSNsei")
)
if mibBuilder.loadTexts:
    starGPRSNseDown.setStatus(
        "current"
    )

starGPRSNseUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1063)
)
starGPRSNseUp.setObjects(
    ("STARENT-MIB", "starGPRSNsei")
)
if mibBuilder.loadTexts:
    starGPRSNseUp.setStatus(
        "current"
    )

starGPRSNsvcDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1064)
)
starGPRSNsvcDown.setObjects(
      *(("STARENT-MIB", "starGPRSNsei"),
        ("STARENT-MIB", "starGPRSNsvci"))
)
if mibBuilder.loadTexts:
    starGPRSNsvcDown.setStatus(
        "current"
    )

starGPRSNsvcUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1065)
)
starGPRSNsvcUp.setObjects(
      *(("STARENT-MIB", "starGPRSNsei"),
        ("STARENT-MIB", "starGPRSNsvci"))
)
if mibBuilder.loadTexts:
    starGPRSNsvcUp.setStatus(
        "current"
    )

starGPRSBvcDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1066)
)
starGPRSBvcDown.setObjects(
      *(("STARENT-MIB", "starGPRSNsei"),
        ("STARENT-MIB", "starGPRSBvci"))
)
if mibBuilder.loadTexts:
    starGPRSBvcDown.setStatus(
        "current"
    )

starGPRSBvcUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1067)
)
starGPRSBvcUp.setObjects(
      *(("STARENT-MIB", "starGPRSNsei"),
        ("STARENT-MIB", "starGPRSBvci"))
)
if mibBuilder.loadTexts:
    starGPRSBvcUp.setStatus(
        "current"
    )

starSDHE1TribDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1068)
)
starSDHE1TribDown.setObjects(
      *(("STARENT-MIB", "starE1TribSlot"),
        ("STARENT-MIB", "starE1TribPort"),
        ("STARENT-MIB", "starE1TribPath"),
        ("STARENT-MIB", "starE1TribTug2"),
        ("STARENT-MIB", "starE1TribTu12"),
        ("STARENT-MIB", "starE1TribOperState"))
)
if mibBuilder.loadTexts:
    starSDHE1TribDown.setStatus(
        "current"
    )

starSDHE1TribUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1069)
)
starSDHE1TribUp.setObjects(
      *(("STARENT-MIB", "starE1TribSlot"),
        ("STARENT-MIB", "starE1TribPort"),
        ("STARENT-MIB", "starE1TribPath"),
        ("STARENT-MIB", "starE1TribTug2"),
        ("STARENT-MIB", "starE1TribTu12"))
)
if mibBuilder.loadTexts:
    starSDHE1TribUp.setStatus(
        "current"
    )

starSDHFractE1LMIDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1070)
)
starSDHFractE1LMIDown.setObjects(
      *(("STARENT-MIB", "starFractE1TribSlot"),
        ("STARENT-MIB", "starFractE1TribPort"),
        ("STARENT-MIB", "starFractE1TribPath"),
        ("STARENT-MIB", "starFractE1TribTug2"),
        ("STARENT-MIB", "starFractE1TribTu12"),
        ("STARENT-MIB", "starFractE1TribTimeslots"))
)
if mibBuilder.loadTexts:
    starSDHFractE1LMIDown.setStatus(
        "current"
    )

starSDHFractE1LMIUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1071)
)
starSDHFractE1LMIUp.setObjects(
      *(("STARENT-MIB", "starFractE1TribSlot"),
        ("STARENT-MIB", "starFractE1TribPort"),
        ("STARENT-MIB", "starFractE1TribPath"),
        ("STARENT-MIB", "starFractE1TribTug2"),
        ("STARENT-MIB", "starFractE1TribTu12"),
        ("STARENT-MIB", "starFractE1TribTimeslots"))
)
if mibBuilder.loadTexts:
    starSDHFractE1LMIUp.setStatus(
        "current"
    )

starPHSPCServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1072)
)
starPHSPCServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starPHSPCServiceStart.setStatus(
        "current"
    )

starPHSPCServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1073)
)
starPHSPCServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starPHSPCServiceStop.setStatus(
        "current"
    )

starM3UAPSPCongested = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1074)
)
starM3UAPSPCongested.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7M3UAPsId"),
        ("STARENT-MIB", "starSS7M3UAPspId"),
        ("STARENT-MIB", "starSS7Pc"),
        ("STARENT-MIB", "starSS7CongLevel"))
)
if mibBuilder.loadTexts:
    starM3UAPSPCongested.setStatus(
        "current"
    )

starM3UAPSPCongestionCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1075)
)
starM3UAPSPCongestionCleared.setObjects(
      *(("STARENT-MIB", "starSS7rdId"),
        ("STARENT-MIB", "starSS7M3UAPsId"),
        ("STARENT-MIB", "starSS7M3UAPspId"),
        ("STARENT-MIB", "starSS7Pc"),
        ("STARENT-MIB", "starSS7CongLevel"))
)
if mibBuilder.loadTexts:
    starM3UAPSPCongestionCleared.setStatus(
        "current"
    )

starStorageFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1076)
)
starStorageFailed.setObjects(
      *(("STARENT-MIB", "starStorageSlot"),
        ("STARENT-MIB", "starStorageName"))
)
if mibBuilder.loadTexts:
    starStorageFailed.setStatus(
        "current"
    )

starRaidFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1077)
)
starRaidFailed.setObjects(
    ("STARENT-MIB", "starStorageName")
)
if mibBuilder.loadTexts:
    starRaidFailed.setStatus(
        "current"
    )

starRaidStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1078)
)
starRaidStarted.setObjects(
    ("STARENT-MIB", "starStorageName")
)
if mibBuilder.loadTexts:
    starRaidStarted.setStatus(
        "current"
    )

starRaidDegraded = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1079)
)
starRaidDegraded.setObjects(
      *(("STARENT-MIB", "starStorageName"),
        ("STARENT-MIB", "starStorageSlot"),
        ("STARENT-MIB", "starStorageName"))
)
if mibBuilder.loadTexts:
    starRaidDegraded.setStatus(
        "current"
    )

starRaidRecovered = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1080)
)
starRaidRecovered.setObjects(
      *(("STARENT-MIB", "starStorageName"),
        ("STARENT-MIB", "starStorageSlot"),
        ("STARENT-MIB", "starStorageName"))
)
if mibBuilder.loadTexts:
    starRaidRecovered.setStatus(
        "current"
    )

starPGWServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1081)
)
starPGWServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starPGWServiceStart.setStatus(
        "current"
    )

starPGWServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1082)
)
starPGWServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starPGWServiceStop.setStatus(
        "current"
    )

starSGWServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1083)
)
starSGWServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starSGWServiceStart.setStatus(
        "current"
    )

starSGWServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1084)
)
starSGWServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starSGWServiceStop.setStatus(
        "current"
    )

starEGTPServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1085)
)
starEGTPServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starEGTPServiceStart.setStatus(
        "current"
    )

starEGTPServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1086)
)
starEGTPServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starEGTPServiceStop.setStatus(
        "current"
    )

starLMAServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1087)
)
starLMAServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starLMAServiceStart.setStatus(
        "current"
    )

starLMAServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1088)
)
starLMAServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starLMAServiceStop.setStatus(
        "current"
    )

starMAGServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1089)
)
starMAGServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starMAGServiceStart.setStatus(
        "current"
    )

starMAGServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1090)
)
starMAGServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starMAGServiceStop.setStatus(
        "current"
    )

starMMEServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1091)
)
starMMEServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starMMEServiceStart.setStatus(
        "current"
    )

starMMEServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1092)
)
starMMEServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starMMEServiceStop.setStatus(
        "current"
    )

starHSGWServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1093)
)
starHSGWServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starHSGWServiceStart.setStatus(
        "current"
    )

starHSGWServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1094)
)
starHSGWServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starHSGWServiceStop.setStatus(
        "current"
    )

starCPUBusyClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1095)
)
starCPUBusyClear.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"))
)
if mibBuilder.loadTexts:
    starCPUBusyClear.setStatus(
        "current"
    )

starCPUMemoryLowClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1096)
)
starCPUMemoryLowClear.setObjects(
      *(("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"))
)
if mibBuilder.loadTexts:
    starCPUMemoryLowClear.setStatus(
        "current"
    )

starFNGServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1097)
)
starFNGServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starFNGServiceStart.setStatus(
        "current"
    )

starFNGServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1098)
)
starFNGServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starFNGServiceStop.setStatus(
        "current"
    )

starManagerRestart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1099)
)
starManagerRestart.setObjects(
      *(("STARENT-MIB", "starTaskFacilityName"),
        ("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starTaskCard"),
        ("STARENT-MIB", "starTaskCPU"))
)
if mibBuilder.loadTexts:
    starManagerRestart.setStatus(
        "current"
    )

starConfigurationUpdate = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1100)
)
if mibBuilder.loadTexts:
    starConfigurationUpdate.setStatus(
        "current"
    )

starPDGServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1101)
)
starPDGServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starPDGServiceStart.setStatus(
        "current"
    )

starPDGServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1102)
)
starPDGServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starPDGServiceStop.setStatus(
        "current"
    )

starDynPkgLoadError = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1103)
)
starDynPkgLoadError.setObjects(
      *(("STARENT-MIB", "starDynPkgFilename"),
        ("STARENT-MIB", "starDynCFErrorCode"))
)
if mibBuilder.loadTexts:
    starDynPkgLoadError.setStatus(
        "current"
    )

starDynPkgLoadErrorClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1104)
)
starDynPkgLoadErrorClear.setObjects(
      *(("STARENT-MIB", "starDynPkgFilename"),
        ("STARENT-MIB", "starDynCFErrorCode"))
)
if mibBuilder.loadTexts:
    starDynPkgLoadErrorClear.setStatus(
        "current"
    )

starDynPkgUpgradeError = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1105)
)
starDynPkgUpgradeError.setObjects(
      *(("STARENT-MIB", "starDynPkgUpgradeFilename"),
        ("STARENT-MIB", "starDynCFUpgradeErrorCode"))
)
if mibBuilder.loadTexts:
    starDynPkgUpgradeError.setStatus(
        "current"
    )

starDynPkgUpgradeErrorClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1106)
)
starDynPkgUpgradeErrorClear.setObjects(
      *(("STARENT-MIB", "starDynPkgUpgradeFilename"),
        ("STARENT-MIB", "starDynCFUpgradeErrorCode"))
)
if mibBuilder.loadTexts:
    starDynPkgUpgradeErrorClear.setStatus(
        "current"
    )

starCSCFPeerServerUnavailable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1107)
)
starCSCFPeerServerUnavailable.setObjects(
      *(("STARENT-MIB", "starCSCFPeerServerVpnName"),
        ("STARENT-MIB", "starCSCFPeerServerSvcName"),
        ("STARENT-MIB", "starCSCFPeerServerName"))
)
if mibBuilder.loadTexts:
    starCSCFPeerServerUnavailable.setStatus(
        "current"
    )

starCSCFPeerServerOutofService = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1108)
)
starCSCFPeerServerOutofService.setObjects(
      *(("STARENT-MIB", "starCSCFPeerServerVpnName"),
        ("STARENT-MIB", "starCSCFPeerServerSvcName"),
        ("STARENT-MIB", "starCSCFPeerServerName"))
)
if mibBuilder.loadTexts:
    starCSCFPeerServerOutofService.setStatus(
        "current"
    )

starCSCFPeerServerInService = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1109)
)
starCSCFPeerServerInService.setObjects(
      *(("STARENT-MIB", "starCSCFPeerServerVpnName"),
        ("STARENT-MIB", "starCSCFPeerServerSvcName"),
        ("STARENT-MIB", "starCSCFPeerServerName"))
)
if mibBuilder.loadTexts:
    starCSCFPeerServerInService.setStatus(
        "current"
    )

starServiceLossPTACsClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1110)
)
starServiceLossPTACsClear.setObjects(
    ("STARENT-MIB", "starCardMode")
)
if mibBuilder.loadTexts:
    starServiceLossPTACsClear.setStatus(
        "current"
    )

starServiceLossLCClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1111)
)
starServiceLossLCClear.setObjects(
      *(("STARENT-MIB", "starCardType"),
        ("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starSlotNum"))
)
if mibBuilder.loadTexts:
    starServiceLossLCClear.setStatus(
        "current"
    )

starEgtpcPathFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1112)
)
starEgtpcPathFailure.setObjects(
      *(("STARENT-MIB", "starEGTPVpnName"),
        ("STARENT-MIB", "starEGTPServName"),
        ("STARENT-MIB", "starEGTPInterfaceType"),
        ("STARENT-MIB", "starEGTPSelfAddr"),
        ("STARENT-MIB", "starEGTPPeerAddr"),
        ("STARENT-MIB", "starEGTPPeerOldRstCnt"),
        ("STARENT-MIB", "starEGTPPeerNewRstCnt"),
        ("STARENT-MIB", "starEGTPPeerSessCnt"),
        ("STARENT-MIB", "starEGTPFailureReason"))
)
if mibBuilder.loadTexts:
    starEgtpcPathFailure.setStatus(
        "current"
    )

starEgtpcPathFailureClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1113)
)
starEgtpcPathFailureClear.setObjects(
      *(("STARENT-MIB", "starEGTPVpnName"),
        ("STARENT-MIB", "starEGTPServName"),
        ("STARENT-MIB", "starEGTPInterfaceType"),
        ("STARENT-MIB", "starEGTPSelfAddr"),
        ("STARENT-MIB", "starEGTPPeerAddr"),
        ("STARENT-MIB", "starEGTPPeerOldRstCnt"),
        ("STARENT-MIB", "starEGTPPeerSessCnt"))
)
if mibBuilder.loadTexts:
    starEgtpcPathFailureClear.setStatus(
        "current"
    )

starCscfSessResourceCongestion = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1114)
)
starCscfSessResourceCongestion.setObjects(
      *(("STARENT-MIB", "starSmgrId"),
        ("STARENT-MIB", "starCongestionPolicy"),
        ("STARENT-MIB", "starCscfSessCongestionResourceType"))
)
if mibBuilder.loadTexts:
    starCscfSessResourceCongestion.setStatus(
        "current"
    )

starCscfSessResourceCongestionClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1115)
)
starCscfSessResourceCongestionClear.setObjects(
    ("STARENT-MIB", "starSmgrId")
)
if mibBuilder.loadTexts:
    starCscfSessResourceCongestionClear.setStatus(
        "current"
    )

starOSPFv3NeighborDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1116)
)
starOSPFv3NeighborDown.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starInterfaceName"),
        ("STARENT-MIB", "starInterfaceIPAddress"),
        ("STARENT-MIB", "starOSPFNeighborRouterID"),
        ("STARENT-MIB", "starOSPFFromState"),
        ("STARENT-MIB", "starOSPFToState"))
)
if mibBuilder.loadTexts:
    starOSPFv3NeighborDown.setStatus(
        "current"
    )

starOSPFv3NeighborFull = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1117)
)
starOSPFv3NeighborFull.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starInterfaceName"),
        ("STARENT-MIB", "starInterfaceIPAddress"),
        ("STARENT-MIB", "starOSPFNeighborRouterID"))
)
if mibBuilder.loadTexts:
    starOSPFv3NeighborFull.setStatus(
        "current"
    )

starServiceLossSPIOClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1118)
)
if mibBuilder.loadTexts:
    starServiceLossSPIOClear.setStatus(
        "current"
    )

starEgtpuPathFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1119)
)
starEgtpuPathFailure.setObjects(
      *(("STARENT-MIB", "starEGTPVpnName"),
        ("STARENT-MIB", "starEGTPServName"),
        ("STARENT-MIB", "starEGTPSelfAddr"),
        ("STARENT-MIB", "starEGTPPeerAddr"),
        ("STARENT-MIB", "starEGTPSelfPort"),
        ("STARENT-MIB", "starEGTPPeerPort"),
        ("STARENT-MIB", "starEGTPPeerSessCnt"))
)
if mibBuilder.loadTexts:
    starEgtpuPathFailure.setStatus(
        "current"
    )

starEgtpuPathFailureClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1120)
)
starEgtpuPathFailureClear.setObjects(
      *(("STARENT-MIB", "starEGTPVpnName"),
        ("STARENT-MIB", "starEGTPServName"),
        ("STARENT-MIB", "starEGTPSelfAddr"),
        ("STARENT-MIB", "starEGTPPeerAddr"),
        ("STARENT-MIB", "starEGTPSelfPort"),
        ("STARENT-MIB", "starEGTPPeerPort"))
)
if mibBuilder.loadTexts:
    starEgtpuPathFailureClear.setStatus(
        "current"
    )

starStorageServerCDRLoss = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1121)
)
starStorageServerCDRLoss.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNPeerAddr"),
        ("STARENT-MIB", "starGSSCDRLossConfigured"),
        ("STARENT-MIB", "starGSSCDRLossMeasured"),
        ("STARENT-MIB", "starGSSClusterName"),
        ("STARENT-MIB", "starGSSClusterNodeName"))
)
if mibBuilder.loadTexts:
    starStorageServerCDRLoss.setStatus(
        "current"
    )

starHNBGWServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1122)
)
starHNBGWServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starHNBGWServiceStart.setStatus(
        "current"
    )

starHNBGWServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1123)
)
starHNBGWServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starHNBGWServiceStop.setStatus(
        "current"
    )

starSystemReboot = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1124)
)
starSystemReboot.setObjects(
      *(("STARENT-MIB", "starChassisType"),
        ("STARENT-MIB", "starChassisDescription"),
        ("STARENT-MIB", "starChassisSWRevision"))
)
if mibBuilder.loadTexts:
    starSystemReboot.setStatus(
        "current"
    )

starLicenseAboutToExpire = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1125)
)
starLicenseAboutToExpire.setObjects(
      *(("STARENT-MIB", "starLicenseKey"),
        ("STARENT-MIB", "starLicenseExpiryDate"),
        ("STARENT-MIB", "starLicenseDaysRemaining"))
)
if mibBuilder.loadTexts:
    starLicenseAboutToExpire.setStatus(
        "current"
    )

starLicenseExpired = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1126)
)
starLicenseExpired.setObjects(
      *(("STARENT-MIB", "starLicenseKey"),
        ("STARENT-MIB", "starLicenseExpiryDate"),
        ("STARENT-MIB", "starLicenseDaysAfterExpiry"))
)
if mibBuilder.loadTexts:
    starLicenseExpired.setStatus(
        "current"
    )

starPCCPolicyServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1127)
)
starPCCPolicyServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starPCCPolicyServiceStart.setStatus(
        "current"
    )

starPCCPolicyServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1128)
)
starPCCPolicyServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starPCCPolicyServiceStop.setStatus(
        "current"
    )

starPCCQuotaServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1129)
)
starPCCQuotaServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starPCCQuotaServiceStart.setStatus(
        "current"
    )

starPCCQuotaServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1130)
)
starPCCQuotaServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starPCCQuotaServiceStop.setStatus(
        "current"
    )

starPCCAFServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1131)
)
starPCCAFServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starPCCAFServiceStart.setStatus(
        "current"
    )

starPCCAFServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1132)
)
starPCCAFServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starPCCAFServiceStop.setStatus(
        "current"
    )

starSPRServerUnreachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1133)
)
starSPRServerUnreachable.setObjects(
    ("STARENT-MIB", "starSPRServerIpAddr")
)
if mibBuilder.loadTexts:
    starSPRServerUnreachable.setStatus(
        "current"
    )

starSPRServerReachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1134)
)
starSPRServerReachable.setObjects(
    ("STARENT-MIB", "starSPRServerIpAddr")
)
if mibBuilder.loadTexts:
    starSPRServerReachable.setStatus(
        "current"
    )

starGSServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1135)
)
starGSServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starGSServiceStart.setStatus(
        "current"
    )

starGSServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1136)
)
starGSServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starGSServiceStop.setStatus(
        "current"
    )

starMAPServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1137)
)
starMAPServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starMAPServiceStart.setStatus(
        "current"
    )

starMAPServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1138)
)
starMAPServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starMAPServiceStop.setStatus(
        "current"
    )

starIUPSServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1139)
)
starIUPSServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starIUPSServiceStart.setStatus(
        "current"
    )

starIUPSServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1140)
)
starIUPSServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starIUPSServiceStop.setStatus(
        "current"
    )

starSGTPServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1141)
)
starSGTPServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starSGTPServiceStart.setStatus(
        "current"
    )

starSGTPServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1142)
)
starSGTPServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starSGTPServiceStop.setStatus(
        "current"
    )

starEPDGServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1143)
)
starEPDGServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starEPDGServiceStart.setStatus(
        "current"
    )

starEPDGServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1144)
)
starEPDGServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starEPDGServiceStop.setStatus(
        "current"
    )

starApsCommandSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1145)
)
starApsCommandSuccess.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"),
        ("STARENT-MIB", "starPortNum"),
        ("STARENT-MIB", "starPortType"))
)
if mibBuilder.loadTexts:
    starApsCommandSuccess.setStatus(
        "current"
    )

starApsCommandFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1146)
)
starApsCommandFailure.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"),
        ("STARENT-MIB", "starPortNum"),
        ("STARENT-MIB", "starPortType"))
)
if mibBuilder.loadTexts:
    starApsCommandFailure.setStatus(
        "current"
    )

starApsSwitchSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1147)
)
starApsSwitchSuccess.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"),
        ("STARENT-MIB", "starPortNum"),
        ("STARENT-MIB", "starPortType"))
)
if mibBuilder.loadTexts:
    starApsSwitchSuccess.setStatus(
        "current"
    )

starApsSwitchFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1148)
)
starApsSwitchFailure.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"),
        ("STARENT-MIB", "starPortNum"),
        ("STARENT-MIB", "starPortType"))
)
if mibBuilder.loadTexts:
    starApsSwitchFailure.setStatus(
        "current"
    )

starApsModeMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1149)
)
starApsModeMismatch.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"),
        ("STARENT-MIB", "starPortNum"))
)
if mibBuilder.loadTexts:
    starApsModeMismatch.setStatus(
        "current"
    )

starApsChannelMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1150)
)
starApsChannelMismatch.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"),
        ("STARENT-MIB", "starSlotNum"))
)
if mibBuilder.loadTexts:
    starApsChannelMismatch.setStatus(
        "current"
    )

starApsByteMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1151)
)
starApsByteMismatch.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"),
        ("STARENT-MIB", "starSlotNum"))
)
if mibBuilder.loadTexts:
    starApsByteMismatch.setStatus(
        "current"
    )

starApsFeProtLineFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1152)
)
starApsFeProtLineFailure.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"),
        ("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starSlotNum"))
)
if mibBuilder.loadTexts:
    starApsFeProtLineFailure.setStatus(
        "current"
    )

starApsLossOfRedundancy = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1153)
)
starApsLossOfRedundancy.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"),
        ("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starSlotNum"))
)
if mibBuilder.loadTexts:
    starApsLossOfRedundancy.setStatus(
        "current"
    )

starApsLossOfRedundancyClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1154)
)
starApsLossOfRedundancyClear.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"),
        ("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starSlotNum"))
)
if mibBuilder.loadTexts:
    starApsLossOfRedundancyClear.setStatus(
        "current"
    )

starHNBGWSGSNRanapReset = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1155)
)
starHNBGWSGSNRanapReset.setObjects(
      *(("STARENT-MIB", "starSessHNBGWVpnName"),
        ("STARENT-MIB", "starSessHNBGWServName"),
        ("STARENT-MIB", "starSessHNBGWPsNwName"),
        ("STARENT-MIB", "starSessHNBGWSgsnPtCd"))
)
if mibBuilder.loadTexts:
    starHNBGWSGSNRanapReset.setStatus(
        "current"
    )

starHNBGWMSCRanapReset = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1156)
)
starHNBGWMSCRanapReset.setObjects(
      *(("STARENT-MIB", "starSessHNBGWVpnName"),
        ("STARENT-MIB", "starSessHNBGWServName"),
        ("STARENT-MIB", "starSessHNBGWCsNwName"),
        ("STARENT-MIB", "starSessHNBGWMscPtCd"))
)
if mibBuilder.loadTexts:
    starHNBGWMSCRanapReset.setStatus(
        "current"
    )

starALCAPNodeReset = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1157)
)
starALCAPNodeReset.setObjects(
      *(("STARENT-MIB", "starSessALCAPVpnName"),
        ("STARENT-MIB", "starSessALCAPServName"),
        ("STARENT-MIB", "starSessALCAPAAL2NodeName"))
)
if mibBuilder.loadTexts:
    starALCAPNodeReset.setStatus(
        "current"
    )

starALCAPPathReset = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1158)
)
starALCAPPathReset.setObjects(
      *(("STARENT-MIB", "starSessALCAPVpnName"),
        ("STARENT-MIB", "starSessALCAPServName"),
        ("STARENT-MIB", "starSessALCAPAAL2NodeName"),
        ("STARENT-MIB", "starSessALCAPPathId"))
)
if mibBuilder.loadTexts:
    starALCAPPathReset.setStatus(
        "current"
    )

starALCAPPathBlock = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1159)
)
starALCAPPathBlock.setObjects(
      *(("STARENT-MIB", "starSessALCAPVpnName"),
        ("STARENT-MIB", "starSessALCAPServName"),
        ("STARENT-MIB", "starSessALCAPPathId"))
)
if mibBuilder.loadTexts:
    starALCAPPathBlock.setStatus(
        "current"
    )

starALCAPPathUnBlock = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1160)
)
starALCAPPathUnBlock.setObjects(
      *(("STARENT-MIB", "starSessALCAPVpnName"),
        ("STARENT-MIB", "starSessALCAPServName"),
        ("STARENT-MIB", "starSessALCAPPathId"))
)
if mibBuilder.loadTexts:
    starALCAPPathUnBlock.setStatus(
        "current"
    )

starSGSServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1161)
)
starSGSServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starSGSServiceStart.setStatus(
        "current"
    )

starSGSServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1162)
)
starSGSServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starSGSServiceStop.setStatus(
        "current"
    )

starSgsnGnMsgDelay = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1163)
)
starSgsnGnMsgDelay.setObjects(
      *(("STARENT-MIB", "starSGTPVpnName"),
        ("STARENT-MIB", "starSGTPServName"),
        ("STARENT-MIB", "starSGTPPeerAddr"))
)
if mibBuilder.loadTexts:
    starSgsnGnMsgDelay.setStatus(
        "current"
    )

starSgsnGnMsgDelayClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1164)
)
starSgsnGnMsgDelayClear.setObjects(
      *(("STARENT-MIB", "starSGTPVpnName"),
        ("STARENT-MIB", "starSGTPServName"),
        ("STARENT-MIB", "starSGTPPeerAddr"))
)
if mibBuilder.loadTexts:
    starSgsnGnMsgDelayClear.setStatus(
        "current"
    )

starBNGServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1165)
)
starBNGServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starBNGServiceStart.setStatus(
        "current"
    )

starBNGServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1166)
)
starBNGServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starBNGServiceStop.setStatus(
        "current"
    )

starMMES1AssocFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1167)
)
starMMES1AssocFail.setObjects(
      *(("STARENT-MIB", "starMMES1AssocVpnName"),
        ("STARENT-MIB", "starMMES1AssocServName"),
        ("STARENT-MIB", "starMMES1AssocENBID"))
)
if mibBuilder.loadTexts:
    starMMES1AssocFail.setStatus(
        "current"
    )

starMMES1AssocSetup = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1168)
)
starMMES1AssocSetup.setObjects(
      *(("STARENT-MIB", "starMMES1AssocVpnName"),
        ("STARENT-MIB", "starMMES1AssocServName"),
        ("STARENT-MIB", "starMMES1AssocENBID"))
)
if mibBuilder.loadTexts:
    starMMES1AssocSetup.setStatus(
        "current"
    )

starMVGPeerDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1169)
)
starMVGPeerDown.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starPeerAddress"),
        ("STARENT-MIB", "starMVGEndpointName"),
        ("STARENT-MIB", "starMVGCauseCode"),
        ("STARENT-MIB", "starMVGProtocolType"))
)
if mibBuilder.loadTexts:
    starMVGPeerDown.setStatus(
        "current"
    )

starMVGPeerUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1170)
)
starMVGPeerUp.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starPeerAddress"),
        ("STARENT-MIB", "starMVGEndpointName"),
        ("STARENT-MIB", "starMVGCauseCode"),
        ("STARENT-MIB", "starMVGProtocolType"))
)
if mibBuilder.loadTexts:
    starMVGPeerUp.setStatus(
        "current"
    )

starPCCNtfyIntfPeerUnreachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1173)
)
starPCCNtfyIntfPeerUnreachable.setObjects(
    ("STARENT-MIB", "starPCCNtfyIntfPeerName")
)
if mibBuilder.loadTexts:
    starPCCNtfyIntfPeerUnreachable.setStatus(
        "current"
    )

starPCCNtfyIntfPeerReachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1174)
)
starPCCNtfyIntfPeerReachable.setObjects(
    ("STARENT-MIB", "starPCCNtfyIntfPeerName")
)
if mibBuilder.loadTexts:
    starPCCNtfyIntfPeerReachable.setStatus(
        "current"
    )

starIPSecNodePeerDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1175)
)
starIPSecNodePeerDown.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starPeerAddress"))
)
if mibBuilder.loadTexts:
    starIPSecNodePeerDown.setStatus(
        "current"
    )

starIPSecNodePeerUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1176)
)
starIPSecNodePeerUp.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starPeerAddress"))
)
if mibBuilder.loadTexts:
    starIPSecNodePeerUp.setStatus(
        "current"
    )

starApsRemoteResponseFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1177)
)
starApsRemoteResponseFail.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starCardType"),
        ("STARENT-MIB", "starPortSlot"))
)
if mibBuilder.loadTexts:
    starApsRemoteResponseFail.setStatus(
        "current"
    )

starCdrPurged = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1178)
)
starCdrPurged.setObjects(
      *(("STARENT-MIB", "starSessGGSNVpnName"),
        ("STARENT-MIB", "starSessGGSNAPNName"),
        ("STARENT-MIB", "starSessGTPPGroupName"))
)
if mibBuilder.loadTexts:
    starCdrPurged.setStatus(
        "current"
    )

starLocalUserAdded = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1180)
)
starLocalUserAdded.setObjects(
      *(("STARENT-MIB", "starCLIContext"),
        ("STARENT-MIB", "starCLIUsername"),
        ("STARENT-MIB", "starCLITtyname"),
        ("STARENT-MIB", "starCLIRemoteIpAddrType"),
        ("STARENT-MIB", "starCLIRemoteIpAddr"),
        ("STARENT-MIB", "starCLIDatabaseUsername"),
        ("STARENT-MIB", "starCLIPrivs"))
)
if mibBuilder.loadTexts:
    starLocalUserAdded.setStatus(
        "current"
    )

starLocalUserRemoved = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1181)
)
starLocalUserRemoved.setObjects(
      *(("STARENT-MIB", "starCLIContext"),
        ("STARENT-MIB", "starCLIUsername"),
        ("STARENT-MIB", "starCLITtyname"),
        ("STARENT-MIB", "starCLIRemoteIpAddrType"),
        ("STARENT-MIB", "starCLIRemoteIpAddr"),
        ("STARENT-MIB", "starCLIDatabaseUsername"))
)
if mibBuilder.loadTexts:
    starLocalUserRemoved.setStatus(
        "current"
    )

starLocalUserPrivilegeChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1182)
)
starLocalUserPrivilegeChanged.setObjects(
      *(("STARENT-MIB", "starCLIUsername"),
        ("STARENT-MIB", "starCLITtyname"),
        ("STARENT-MIB", "starCLIRemoteIpAddrType"),
        ("STARENT-MIB", "starCLIRemoteIpAddr"),
        ("STARENT-MIB", "starCLIDatabaseUsername"),
        ("STARENT-MIB", "starCLIPrivs"))
)
if mibBuilder.loadTexts:
    starLocalUserPrivilegeChanged.setStatus(
        "current"
    )

starOsShellAccessed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1183)
)
starOsShellAccessed.setObjects(
      *(("STARENT-MIB", "starCLIContext"),
        ("STARENT-MIB", "starCLIUsername"),
        ("STARENT-MIB", "starCLITtyname"),
        ("STARENT-MIB", "starCLIRemoteIpAddrType"),
        ("STARENT-MIB", "starCLIRemoteIpAddr"))
)
if mibBuilder.loadTexts:
    starOsShellAccessed.setStatus(
        "current"
    )

starTestModeEntered = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1184)
)
starTestModeEntered.setObjects(
      *(("STARENT-MIB", "starCLIContext"),
        ("STARENT-MIB", "starCLIUsername"),
        ("STARENT-MIB", "starCLITtyname"),
        ("STARENT-MIB", "starCLIRemoteIpAddrType"),
        ("STARENT-MIB", "starCLIRemoteIpAddr"))
)
if mibBuilder.loadTexts:
    starTestModeEntered.setStatus(
        "current"
    )

starLicenseFeaturesModified = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1185)
)
starLicenseFeaturesModified.setObjects(
      *(("STARENT-MIB", "starCLIContext"),
        ("STARENT-MIB", "starCLIUsername"),
        ("STARENT-MIB", "starCLITtyname"),
        ("STARENT-MIB", "starCLIRemoteIpAddrType"),
        ("STARENT-MIB", "starCLIRemoteIpAddr"))
)
if mibBuilder.loadTexts:
    starLicenseFeaturesModified.setStatus(
        "current"
    )

starHiddenAccessEnabled = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1186)
)
starHiddenAccessEnabled.setObjects(
      *(("STARENT-MIB", "starCLIContext"),
        ("STARENT-MIB", "starCLIUsername"),
        ("STARENT-MIB", "starCLITtyname"),
        ("STARENT-MIB", "starCLIRemoteIpAddrType"),
        ("STARENT-MIB", "starCLIRemoteIpAddr"))
)
if mibBuilder.loadTexts:
    starHiddenAccessEnabled.setStatus(
        "current"
    )

starHiddenAccessDisabled = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1187)
)
starHiddenAccessDisabled.setObjects(
      *(("STARENT-MIB", "starCLIContext"),
        ("STARENT-MIB", "starCLIUsername"),
        ("STARENT-MIB", "starCLITtyname"),
        ("STARENT-MIB", "starCLIRemoteIpAddrType"),
        ("STARENT-MIB", "starCLIRemoteIpAddr"))
)
if mibBuilder.loadTexts:
    starHiddenAccessDisabled.setStatus(
        "current"
    )

starLawfulInterceptChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1188)
)
starLawfulInterceptChanged.setObjects(
      *(("STARENT-MIB", "starCLIUsername"),
        ("STARENT-MIB", "starCLIUsername"))
)
if mibBuilder.loadTexts:
    starLawfulInterceptChanged.setStatus(
        "current"
    )

starMMES1PathFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1189)
)
starMMES1PathFail.setObjects(
      *(("STARENT-MIB", "starMMES1PathVpnName"),
        ("STARENT-MIB", "starMMES1PathServName"),
        ("STARENT-MIB", "starMMES1PathENBID"),
        ("STARENT-MIB", "starMMES1PathSelfAddr"),
        ("STARENT-MIB", "starMMES1PathSelfPort"),
        ("STARENT-MIB", "starMMES1PathPeerAddr"),
        ("STARENT-MIB", "starMMES1PathPeerPort"))
)
if mibBuilder.loadTexts:
    starMMES1PathFail.setStatus(
        "current"
    )

starMMES1PathSetup = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1190)
)
starMMES1PathSetup.setObjects(
      *(("STARENT-MIB", "starMMES1PathVpnName"),
        ("STARENT-MIB", "starMMES1PathServName"),
        ("STARENT-MIB", "starMMES1PathENBID"),
        ("STARENT-MIB", "starMMES1PathSelfAddr"),
        ("STARENT-MIB", "starMMES1PathSelfPort"),
        ("STARENT-MIB", "starMMES1PathPeerAddr"),
        ("STARENT-MIB", "starMMES1PathPeerPort"))
)
if mibBuilder.loadTexts:
    starMMES1PathSetup.setStatus(
        "current"
    )

starSAEGWServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1191)
)
starSAEGWServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starSAEGWServiceStart.setStatus(
        "current"
    )

starSAEGWServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1192)
)
starSAEGWServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starSAEGWServiceStop.setStatus(
        "current"
    )

starHenbgwAccessServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1193)
)
starHenbgwAccessServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starHenbgwAccessServiceStart.setStatus(
        "current"
    )

starHenbgwAccessServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1194)
)
starHenbgwAccessServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starHenbgwAccessServiceStop.setStatus(
        "current"
    )

starHenbgwNetworkServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1195)
)
starHenbgwNetworkServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starHenbgwNetworkServiceStart.setStatus(
        "current"
    )

starHenbgwNetworkServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1196)
)
starHenbgwNetworkServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starHenbgwNetworkServiceStop.setStatus(
        "current"
    )

starAAAArchiveStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1197)
)
starAAAArchiveStarted.setObjects(
    ("STARENT-MIB", "starTaskInstance")
)
if mibBuilder.loadTexts:
    starAAAArchiveStarted.setStatus(
        "current"
    )

starECSTotalDNSLearntIPv4Threshold = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1198)
)
starECSTotalDNSLearntIPv4Threshold.setObjects(
      *(("STARENT-MIB", "starECSTotalDNSLearntIPThresholdInstance"),
        ("STARENT-MIB", "starECSTotalDNSLearntIPThresholdconfigured"),
        ("STARENT-MIB", "starECSTotalDNSLearntIPThresholdmeasured"))
)
if mibBuilder.loadTexts:
    starECSTotalDNSLearntIPv4Threshold.setStatus(
        "current"
    )

starECSTotalDNSLearntIPv4ThresholdClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1199)
)
starECSTotalDNSLearntIPv4ThresholdClear.setObjects(
      *(("STARENT-MIB", "starECSTotalDNSLearntIPThresholdInstance"),
        ("STARENT-MIB", "starECSTotalDNSLearntIPThresholdconfigured"),
        ("STARENT-MIB", "starECSTotalDNSLearntIPThresholdmeasured"))
)
if mibBuilder.loadTexts:
    starECSTotalDNSLearntIPv4ThresholdClear.setStatus(
        "current"
    )

starECSTotalDNSLearntIPv6Threshold = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1200)
)
starECSTotalDNSLearntIPv6Threshold.setObjects(
      *(("STARENT-MIB", "starECSTotalDNSLearntIPThresholdInstance"),
        ("STARENT-MIB", "starECSTotalDNSLearntIPThresholdconfigured"),
        ("STARENT-MIB", "starECSTotalDNSLearntIPThresholdmeasured"))
)
if mibBuilder.loadTexts:
    starECSTotalDNSLearntIPv6Threshold.setStatus(
        "current"
    )

starECSTotalDNSLearntIPv6ThresholdClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1201)
)
starECSTotalDNSLearntIPv6ThresholdClear.setObjects(
      *(("STARENT-MIB", "starECSTotalDNSLearntIPThresholdInstance"),
        ("STARENT-MIB", "starECSTotalDNSLearntIPThresholdconfigured"),
        ("STARENT-MIB", "starECSTotalDNSLearntIPThresholdmeasured"))
)
if mibBuilder.loadTexts:
    starECSTotalDNSLearntIPv6ThresholdClear.setStatus(
        "current"
    )

starIPSecNodeIpv6PeerDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1202)
)
starIPSecNodeIpv6PeerDown.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starPeerAddressIpv6"))
)
if mibBuilder.loadTexts:
    starIPSecNodeIpv6PeerDown.setStatus(
        "current"
    )

starIPSecNodeIpv6PeerUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1203)
)
starIPSecNodeIpv6PeerUp.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starPeerAddressIpv6"))
)
if mibBuilder.loadTexts:
    starIPSecNodeIpv6PeerUp.setStatus(
        "current"
    )

starLAGGroupDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1204)
)
starLAGGroupDown.setObjects(
      *(("STARENT-MIB", "starPortSlot"),
        ("STARENT-MIB", "starPortNum"),
        ("STARENT-MIB", "starLAGPartner"))
)
if mibBuilder.loadTexts:
    starLAGGroupDown.setStatus(
        "current"
    )

starLAGGroupUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1205)
)
starLAGGroupUp.setObjects(
      *(("STARENT-MIB", "starPortSlot"),
        ("STARENT-MIB", "starPortNum"),
        ("STARENT-MIB", "starLAGPartner"))
)
if mibBuilder.loadTexts:
    starLAGGroupUp.setStatus(
        "current"
    )

starVLRAssocDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1206)
)
starVLRAssocDown.setObjects(
      *(("STARENT-MIB", "starSGSServiceVpnName"),
        ("STARENT-MIB", "starSGSServiceServName"),
        ("STARENT-MIB", "starVLRName"),
        ("STARENT-MIB", "starVLRIpAddr1"),
        ("STARENT-MIB", "starVLRIpAddr2"),
        ("STARENT-MIB", "starVLRPortNum"))
)
if mibBuilder.loadTexts:
    starVLRAssocDown.setStatus(
        "current"
    )

starVLRAssocUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1207)
)
starVLRAssocUp.setObjects(
      *(("STARENT-MIB", "starSGSServiceVpnName"),
        ("STARENT-MIB", "starSGSServiceServName"),
        ("STARENT-MIB", "starVLRName"),
        ("STARENT-MIB", "starVLRIpAddr1"),
        ("STARENT-MIB", "starVLRIpAddr2"),
        ("STARENT-MIB", "starVLRPortNum"))
)
if mibBuilder.loadTexts:
    starVLRAssocUp.setStatus(
        "current"
    )

starVLRAllAssocDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1208)
)
starVLRAllAssocDown.setObjects(
      *(("STARENT-MIB", "starSGSServiceVpnName"),
        ("STARENT-MIB", "starSGSServiceServName"))
)
if mibBuilder.loadTexts:
    starVLRAllAssocDown.setStatus(
        "current"
    )

starVLRAllAssocDownClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1209)
)
starVLRAllAssocDownClear.setObjects(
      *(("STARENT-MIB", "starSGSServiceVpnName"),
        ("STARENT-MIB", "starSGSServiceServName"))
)
if mibBuilder.loadTexts:
    starVLRAllAssocDownClear.setStatus(
        "current"
    )

starEnhancedCongestion = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1210)
)
starEnhancedCongestion.setObjects(
      *(("STARENT-MIB", "starServiceType"),
        ("STARENT-MIB", "starCongestionPolicy"),
        ("STARENT-MIB", "starCongestionResourceType"),
        ("STARENT-MIB", "starCongestionType"),
        ("STARENT-MIB", "starCongestionActionProfileName"))
)
if mibBuilder.loadTexts:
    starEnhancedCongestion.setStatus(
        "current"
    )

starEnhancedCongestionClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1211)
)
starEnhancedCongestionClear.setObjects(
      *(("STARENT-MIB", "starServiceType"),
        ("STARENT-MIB", "starCongestionType"))
)
if mibBuilder.loadTexts:
    starEnhancedCongestionClear.setStatus(
        "current"
    )

starSGSNRNCNoResetAck = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1212)
)
starSGSNRNCNoResetAck.setObjects(
      *(("STARENT-MIB", "starSessSGSNVpnName"),
        ("STARENT-MIB", "starSessSGSNServName"),
        ("STARENT-MIB", "starSessSGSNMcc"),
        ("STARENT-MIB", "starSessSGSNMnc"),
        ("STARENT-MIB", "starSessSGSNRncId"))
)
if mibBuilder.loadTexts:
    starSGSNRNCNoResetAck.setStatus(
        "current"
    )

starThreshSAEGWSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1213)
)
starThreshSAEGWSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshSAEGWSessions.setStatus(
        "current"
    )

starThreshClearSAEGWSessions = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1214)
)
starThreshClearSAEGWSessions.setObjects(
      *(("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshClearSAEGWSessions.setStatus(
        "current"
    )

starSGSNRMCPUWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1215)
)
starSGSNRMCPUWarn.setObjects(
      *(("STARENT-MIB", "starTaskFacilityName"),
        ("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starTaskCard"),
        ("STARENT-MIB", "starTaskCPU"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starSGSNRMCPUWarn.setStatus(
        "current"
    )

starSGSNRMCPUWarnClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1216)
)
starSGSNRMCPUWarnClear.setObjects(
      *(("STARENT-MIB", "starTaskFacilityName"),
        ("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starTaskCard"),
        ("STARENT-MIB", "starTaskCPU"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starSGSNRMCPUWarnClear.setStatus(
        "current"
    )

starSGSNRMMemWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1217)
)
starSGSNRMMemWarn.setObjects(
      *(("STARENT-MIB", "starTaskFacilityName"),
        ("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starTaskCard"),
        ("STARENT-MIB", "starTaskCPU"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starSGSNRMMemWarn.setStatus(
        "current"
    )

starSGSNRMMemWarnClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1218)
)
starSGSNRMMemWarnClear.setObjects(
      *(("STARENT-MIB", "starTaskFacilityName"),
        ("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starTaskCard"),
        ("STARENT-MIB", "starTaskCPU"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starSGSNRMMemWarnClear.setStatus(
        "current"
    )

starRMCPUOver = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1219)
)
starRMCPUOver.setObjects(
      *(("STARENT-MIB", "starTaskFacilityName"),
        ("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starTaskCard"),
        ("STARENT-MIB", "starTaskCPU"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starRMCPUOver.setStatus(
        "current"
    )

starRMCPUOverClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1220)
)
starRMCPUOverClear.setObjects(
      *(("STARENT-MIB", "starTaskFacilityName"),
        ("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starTaskCard"),
        ("STARENT-MIB", "starTaskCPU"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starRMCPUOverClear.setStatus(
        "current"
    )

starSGSNRMMemOver = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1221)
)
starSGSNRMMemOver.setObjects(
      *(("STARENT-MIB", "starTaskFacilityName"),
        ("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starTaskCard"),
        ("STARENT-MIB", "starTaskCPU"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starSGSNRMMemOver.setStatus(
        "current"
    )

starSGSNRMMemOverClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1222)
)
starSGSNRMMemOverClear.setObjects(
      *(("STARENT-MIB", "starTaskFacilityName"),
        ("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starTaskCard"),
        ("STARENT-MIB", "starTaskCPU"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starSGSNRMMemOverClear.setStatus(
        "current"
    )

starSessMgrFlowCount = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1223)
)
starSessMgrFlowCount.setObjects(
      *(("STARENT-MIB", "starSessMgrFlowInstId"),
        ("STARENT-MIB", "starSessMgrFlowPDNNo"),
        ("STARENT-MIB", "starSessMgrFlowMemUsage"),
        ("STARENT-MIB", "starSessMgrFlowCounter"),
        ("STARENT-MIB", "starSessMgrTotalFlowCount"))
)
if mibBuilder.loadTexts:
    starSessMgrFlowCount.setStatus(
        "current"
    )

starSessMgrFlowCountClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1224)
)
starSessMgrFlowCountClear.setObjects(
      *(("STARENT-MIB", "starSessMgrFlowInstId"),
        ("STARENT-MIB", "starSessMgrFlowPDNNo"),
        ("STARENT-MIB", "starSessMgrFlowMemUsage"),
        ("STARENT-MIB", "starSessMgrFlowCounter"),
        ("STARENT-MIB", "starSessMgrTotalFlowCount"))
)
if mibBuilder.loadTexts:
    starSessMgrFlowCountClear.setStatus(
        "current"
    )

starStorageFound = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1225)
)
starStorageFound.setObjects(
      *(("STARENT-MIB", "starStorageSlot"),
        ("STARENT-MIB", "starStorageName"))
)
if mibBuilder.loadTexts:
    starStorageFound.setStatus(
        "current"
    )

starStorageNotFound = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1226)
)
starStorageNotFound.setObjects(
      *(("STARENT-MIB", "starStorageSlot"),
        ("STARENT-MIB", "starStorageName"))
)
if mibBuilder.loadTexts:
    starStorageNotFound.setStatus(
        "current"
    )

starHENBGWMMESCTPAssocDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1227)
)
starHENBGWMMESCTPAssocDown.setObjects(
      *(("STARENT-MIB", "starHENBGWServiceVpnName"),
        ("STARENT-MIB", "starHENBGWServiceServName"),
        ("STARENT-MIB", "starHENBGWServiceLogicalENBId"),
        ("STARENT-MIB", "starHENBGWServiceMMEServName"),
        ("STARENT-MIB", "starHENBGWServicePeerAddr"),
        ("STARENT-MIB", "starHENBGWServicePeerPort"))
)
if mibBuilder.loadTexts:
    starHENBGWMMESCTPAssocDown.setStatus(
        "current"
    )

starHENBGWMMESCTPAssocUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1228)
)
starHENBGWMMESCTPAssocUp.setObjects(
      *(("STARENT-MIB", "starHENBGWServiceVpnName"),
        ("STARENT-MIB", "starHENBGWServiceServName"),
        ("STARENT-MIB", "starHENBGWServiceLogicalENBId"),
        ("STARENT-MIB", "starHENBGWServiceMMEServName"),
        ("STARENT-MIB", "starHENBGWServicePeerAddr"),
        ("STARENT-MIB", "starHENBGWServicePeerPort"))
)
if mibBuilder.loadTexts:
    starHENBGWMMESCTPAssocUp.setStatus(
        "current"
    )

starHENBGWMMESCTPAllAssocDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1229)
)
starHENBGWMMESCTPAllAssocDown.setObjects(
      *(("STARENT-MIB", "starHENBGWServiceVpnName"),
        ("STARENT-MIB", "starHENBGWServiceServName"))
)
if mibBuilder.loadTexts:
    starHENBGWMMESCTPAllAssocDown.setStatus(
        "current"
    )

starHENBGWMMESCTPAllAssocDownClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1230)
)
starHENBGWMMESCTPAllAssocDownClear.setObjects(
      *(("STARENT-MIB", "starHENBGWServiceVpnName"),
        ("STARENT-MIB", "starHENBGWServiceServName"))
)
if mibBuilder.loadTexts:
    starHENBGWMMESCTPAllAssocDownClear.setStatus(
        "current"
    )

starNPDBConnectionDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1231)
)
starNPDBConnectionDown.setObjects(
      *(("STARENT-MIB", "starTaskFacilityName"),
        ("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starNwReachSrvrAddr"))
)
if mibBuilder.loadTexts:
    starNPDBConnectionDown.setStatus(
        "current"
    )

starNPDBConnectionUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1232)
)
starNPDBConnectionUp.setObjects(
      *(("STARENT-MIB", "starTaskFacilityName"),
        ("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starNwReachSrvrAddr"))
)
if mibBuilder.loadTexts:
    starNPDBConnectionUp.setStatus(
        "current"
    )

starNPUMissedARPFrames = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1233)
)
starNPUMissedARPFrames.setObjects(
      *(("STARENT-MIB", "starNPUSlotNumber"),
        ("STARENT-MIB", "starNPUCPUNumber"),
        ("STARENT-MIB", "starNPUNPUNumber"))
)
if mibBuilder.loadTexts:
    starNPUMissedARPFrames.setStatus(
        "current"
    )

starNPUMissedARPFramesClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1234)
)
starNPUMissedARPFramesClear.setObjects(
      *(("STARENT-MIB", "starNPUSlotNumber"),
        ("STARENT-MIB", "starNPUCPUNumber"),
        ("STARENT-MIB", "starNPUNPUNumber"))
)
if mibBuilder.loadTexts:
    starNPUMissedARPFramesClear.setStatus(
        "current"
    )

starChassisCrashListFull = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1235)
)
starChassisCrashListFull.setObjects(
    ("STARENT-MIB", "starChassisCrashList")
)
if mibBuilder.loadTexts:
    starChassisCrashListFull.setStatus(
        "current"
    )

starSessMgrCSCFServiceRecoveryComplete = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1236)
)
starSessMgrCSCFServiceRecoveryComplete.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"),
        ("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starCPUSlot"),
        ("STARENT-MIB", "starCPUNumber"))
)
if mibBuilder.loadTexts:
    starSessMgrCSCFServiceRecoveryComplete.setStatus(
        "current"
    )

starECSreaddressServerDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1237)
)
starECSreaddressServerDown.setObjects(
      *(("STARENT-MIB", "starPeerAddress"),
        ("STARENT-MIB", "starUDPPortNum"))
)
if mibBuilder.loadTexts:
    starECSreaddressServerDown.setStatus(
        "current"
    )

starECSreaddressServerUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1238)
)
starECSreaddressServerUp.setObjects(
      *(("STARENT-MIB", "starPeerAddress"),
        ("STARENT-MIB", "starUDPPortNum"))
)
if mibBuilder.loadTexts:
    starECSreaddressServerUp.setStatus(
        "current"
    )

starCdrHDDStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1239)
)
starCdrHDDStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starSessGTPPGroupName"))
)
if mibBuilder.loadTexts:
    starCdrHDDStart.setStatus(
        "current"
    )

starCdrStreamingStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1240)
)
starCdrStreamingStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starSessGTPPGroupName"))
)
if mibBuilder.loadTexts:
    starCdrStreamingStart.setStatus(
        "current"
    )

starCdrStreamingComplete = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1241)
)
starCdrStreamingComplete.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starSessGTPPGroupName"))
)
if mibBuilder.loadTexts:
    starCdrStreamingComplete.setStatus(
        "current"
    )

starVLRDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1242)
)
starVLRDown.setObjects(
      *(("STARENT-MIB", "starSGSServiceVpnName"),
        ("STARENT-MIB", "starSGSServiceServName"),
        ("STARENT-MIB", "starVLRName"))
)
if mibBuilder.loadTexts:
    starVLRDown.setStatus(
        "current"
    )

starVLRUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1243)
)
starVLRUp.setObjects(
      *(("STARENT-MIB", "starSGSServiceVpnName"),
        ("STARENT-MIB", "starSGSServiceServName"),
        ("STARENT-MIB", "starVLRName"))
)
if mibBuilder.loadTexts:
    starVLRUp.setStatus(
        "current"
    )

starPCFReachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1244)
)
starPCFReachable.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starPCFAddress"))
)
if mibBuilder.loadTexts:
    starPCFReachable.setStatus(
        "current"
    )

starLIRcvryError = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1245)
)
starLIRcvryError.setObjects(
      *(("STARENT-MIB", "starLIRcvryErrType"),
        ("STARENT-MIB", "starLIRcvryErrString"))
)
if mibBuilder.loadTexts:
    starLIRcvryError.setStatus(
        "current"
    )

starLIRcvryComplete = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1246)
)
if mibBuilder.loadTexts:
    starLIRcvryComplete.setStatus(
        "current"
    )

starCGWServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1247)
)
starCGWServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starCGWServiceStart.setStatus(
        "current"
    )

starCGWServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1248)
)
starCGWServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starCGWServiceStop.setStatus(
        "current"
    )

starMMENewConnectionsDisallowed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1249)
)
starMMENewConnectionsDisallowed.setObjects(
      *(("STARENT-MIB", "starMMEInitialDisallowReason"),
        ("STARENT-MIB", "starImsimgrInstId"))
)
if mibBuilder.loadTexts:
    starMMENewConnectionsDisallowed.setStatus(
        "current"
    )

starMMENewConnectionsAllowed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1250)
)
if mibBuilder.loadTexts:
    starMMENewConnectionsAllowed.setStatus(
        "current"
    )

starSAMOGServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1251)
)
starSAMOGServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starSAMOGServiceStart.setStatus(
        "current"
    )

starSAMOGServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1252)
)
starSAMOGServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starSAMOGServiceStop.setStatus(
        "current"
    )

starCardSwitchoverStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1253)
)
starCardSwitchoverStart.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starSlotNum"))
)
if mibBuilder.loadTexts:
    starCardSwitchoverStart.setStatus(
        "current"
    )

starCardSwitchoverComplete = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1254)
)
starCardSwitchoverComplete.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starSlotNum"))
)
if mibBuilder.loadTexts:
    starCardSwitchoverComplete.setStatus(
        "current"
    )

starCardSwitchoverFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1255)
)
starCardSwitchoverFailed.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starSlotNum"))
)
if mibBuilder.loadTexts:
    starCardSwitchoverFailed.setStatus(
        "current"
    )

starCardMigrateStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1256)
)
starCardMigrateStart.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starSlotNum"))
)
if mibBuilder.loadTexts:
    starCardMigrateStart.setStatus(
        "current"
    )

starCardMigrateComplete = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1257)
)
starCardMigrateComplete.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starSlotNum"))
)
if mibBuilder.loadTexts:
    starCardMigrateComplete.setStatus(
        "current"
    )

starCardMigrateFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1258)
)
starCardMigrateFailed.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starSlotNum"))
)
if mibBuilder.loadTexts:
    starCardMigrateFailed.setStatus(
        "current"
    )

starTechSuppPasswdChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1259)
)
starTechSuppPasswdChanged.setObjects(
      *(("STARENT-MIB", "starCLIContext"),
        ("STARENT-MIB", "starCLIUsername"),
        ("STARENT-MIB", "starCLITtyname"),
        ("STARENT-MIB", "starCLIRemoteIpAddrType"),
        ("STARENT-MIB", "starCLIRemoteIpAddr"))
)
if mibBuilder.loadTexts:
    starTechSuppPasswdChanged.setStatus(
        "current"
    )

starPMIPPathFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1260)
)
starPMIPPathFailure.setObjects(
      *(("STARENT-MIB", "starPMIPVpnName"),
        ("STARENT-MIB", "starPMIPServName"),
        ("STARENT-MIB", "starPMIPSelfAddrType"),
        ("STARENT-MIB", "starPMIPSelfAddr"),
        ("STARENT-MIB", "starPMIPPeerAddrType"),
        ("STARENT-MIB", "starPMIPPeerAddr"),
        ("STARENT-MIB", "starPMIPPeerOldRstCnt"),
        ("STARENT-MIB", "starPMIPPeerNewRstCnt"),
        ("STARENT-MIB", "starPMIPPeerSessCnt"),
        ("STARENT-MIB", "starPMIPFailureReason"))
)
if mibBuilder.loadTexts:
    starPMIPPathFailure.setStatus(
        "current"
    )

starPMIPPathFailureClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1261)
)
starPMIPPathFailureClear.setObjects(
      *(("STARENT-MIB", "starPMIPVpnName"),
        ("STARENT-MIB", "starPMIPServName"),
        ("STARENT-MIB", "starPMIPSelfAddrType"),
        ("STARENT-MIB", "starPMIPSelfAddr"),
        ("STARENT-MIB", "starPMIPPeerAddrType"),
        ("STARENT-MIB", "starPMIPPeerAddr"))
)
if mibBuilder.loadTexts:
    starPMIPPathFailureClear.setStatus(
        "current"
    )

starHENBGWMMESCTPAssocDestAddrDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1262)
)
starHENBGWMMESCTPAssocDestAddrDown.setObjects(
      *(("STARENT-MIB", "starHENBGWServiceVpnName"),
        ("STARENT-MIB", "starHENBGWServiceServName"),
        ("STARENT-MIB", "starHENBGWServiceLogicalENBId"),
        ("STARENT-MIB", "starHENBGWServiceMMEServName"),
        ("STARENT-MIB", "starHENBGWServicePeerAddr"),
        ("STARENT-MIB", "starHENBGWServicePeerPort"))
)
if mibBuilder.loadTexts:
    starHENBGWMMESCTPAssocDestAddrDown.setStatus(
        "current"
    )

starHENBGWMMESCTPAssocDestAddrUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1263)
)
starHENBGWMMESCTPAssocDestAddrUp.setObjects(
      *(("STARENT-MIB", "starHENBGWServiceVpnName"),
        ("STARENT-MIB", "starHENBGWServiceServName"),
        ("STARENT-MIB", "starHENBGWServiceLogicalENBId"),
        ("STARENT-MIB", "starHENBGWServiceMMEServName"),
        ("STARENT-MIB", "starHENBGWServicePeerAddr"),
        ("STARENT-MIB", "starHENBGWServicePeerPort"))
)
if mibBuilder.loadTexts:
    starHENBGWMMESCTPAssocDestAddrUp.setStatus(
        "current"
    )

starMRMEServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1264)
)
starMRMEServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starMRMEServiceStart.setStatus(
        "current"
    )

starMRMEServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1265)
)
starMRMEServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starMRMEServiceStop.setStatus(
        "current"
    )

starSLSServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1266)
)
starSLSServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starSLSServiceStart.setStatus(
        "current"
    )

starSLSServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1267)
)
starSLSServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starSLSServiceStop.setStatus(
        "current"
    )

starESMLCAssocDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1268)
)
starESMLCAssocDown.setObjects(
      *(("STARENT-MIB", "starSLSServiceVpnName"),
        ("STARENT-MIB", "starSLSServiceServName"),
        ("STARENT-MIB", "starESMLCId"),
        ("STARENT-MIB", "starESMLCIpAddr1"),
        ("STARENT-MIB", "starESMLCIpAddr2"),
        ("STARENT-MIB", "starESMLCPortNum"))
)
if mibBuilder.loadTexts:
    starESMLCAssocDown.setStatus(
        "current"
    )

starESMLCAssocUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1269)
)
starESMLCAssocUp.setObjects(
      *(("STARENT-MIB", "starSLSServiceVpnName"),
        ("STARENT-MIB", "starSLSServiceServName"),
        ("STARENT-MIB", "starESMLCId"),
        ("STARENT-MIB", "starESMLCIpAddr1"),
        ("STARENT-MIB", "starESMLCIpAddr2"),
        ("STARENT-MIB", "starESMLCPortNum"))
)
if mibBuilder.loadTexts:
    starESMLCAssocUp.setStatus(
        "current"
    )

starESMLCAllAssocDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1270)
)
starESMLCAllAssocDown.setObjects(
      *(("STARENT-MIB", "starSLSServiceVpnName"),
        ("STARENT-MIB", "starSLSServiceServName"))
)
if mibBuilder.loadTexts:
    starESMLCAllAssocDown.setStatus(
        "current"
    )

starESMLCAllAssocDownClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1271)
)
starESMLCAllAssocDownClear.setObjects(
      *(("STARENT-MIB", "starSLSServiceVpnName"),
        ("STARENT-MIB", "starSLSServiceServName"))
)
if mibBuilder.loadTexts:
    starESMLCAllAssocDownClear.setStatus(
        "current"
    )

starSBCServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1272)
)
starSBCServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starSBCServiceStart.setStatus(
        "current"
    )

starSBCServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1273)
)
starSBCServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starSBCServiceStop.setStatus(
        "current"
    )

starCBCAssocDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1274)
)
starCBCAssocDown.setObjects(
      *(("STARENT-MIB", "starSBCServiceVpnName"),
        ("STARENT-MIB", "starSBCServiceServName"),
        ("STARENT-MIB", "starPeerId"),
        ("STARENT-MIB", "starPeerIpAddr"),
        ("STARENT-MIB", "starPeerPortNum"))
)
if mibBuilder.loadTexts:
    starCBCAssocDown.setStatus(
        "current"
    )

starCBCAssocUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1275)
)
starCBCAssocUp.setObjects(
      *(("STARENT-MIB", "starSBCServiceVpnName"),
        ("STARENT-MIB", "starSBCServiceServName"),
        ("STARENT-MIB", "starPeerId"),
        ("STARENT-MIB", "starPeerIpAddr"),
        ("STARENT-MIB", "starPeerPortNum"))
)
if mibBuilder.loadTexts:
    starCBCAssocUp.setStatus(
        "current"
    )

starBFDSessUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1276)
)
starBFDSessUp.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starBfdSrcAddressType"),
        ("STARENT-MIB", "starBfdSrcAddress"),
        ("STARENT-MIB", "starBfdDstAddressType"),
        ("STARENT-MIB", "starBfdDstAddress"),
        ("STARENT-MIB", "starBfdLocalDisc"),
        ("STARENT-MIB", "starBfdRemDisc"),
        ("STARENT-MIB", "starPhyPortId"))
)
if mibBuilder.loadTexts:
    starBFDSessUp.setStatus(
        "current"
    )

starBFDSessDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1277)
)
starBFDSessDown.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starBfdSrcAddressType"),
        ("STARENT-MIB", "starBfdSrcAddress"),
        ("STARENT-MIB", "starBfdDstAddressType"),
        ("STARENT-MIB", "starBfdDstAddress"),
        ("STARENT-MIB", "starBfdLocalDisc"),
        ("STARENT-MIB", "starBfdRemDisc"),
        ("STARENT-MIB", "starBfdSessDiagCode"),
        ("STARENT-MIB", "starPhyPortId"))
)
if mibBuilder.loadTexts:
    starBFDSessDown.setStatus(
        "current"
    )

starSRPSwitchoverOccured = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1278)
)
starSRPSwitchoverOccured.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starSRPIpAddress"),
        ("STARENT-MIB", "starSRPSwitchReason"))
)
if mibBuilder.loadTexts:
    starSRPSwitchoverOccured.setStatus(
        "current"
    )

starHENBGWMMEOverloadStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1279)
)
starHENBGWMMEOverloadStart.setObjects(
      *(("STARENT-MIB", "starHENBGWServiceVpnName"),
        ("STARENT-MIB", "starHENBGWServiceServName"),
        ("STARENT-MIB", "starHENBGWServiceLogicalENBId"),
        ("STARENT-MIB", "starHENBGWServiceMMEServName"),
        ("STARENT-MIB", "starHENBGWServicePeerAddr"),
        ("STARENT-MIB", "starHENBGWServicePeerPort"),
        ("STARENT-MIB", "starHENBGWServiceTLRI"))
)
if mibBuilder.loadTexts:
    starHENBGWMMEOverloadStart.setStatus(
        "current"
    )

starHENBGWMMEOverloadStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1280)
)
starHENBGWMMEOverloadStop.setObjects(
      *(("STARENT-MIB", "starHENBGWServiceVpnName"),
        ("STARENT-MIB", "starHENBGWServiceServName"),
        ("STARENT-MIB", "starHENBGWServiceLogicalENBId"),
        ("STARENT-MIB", "starHENBGWServiceMMEServName"),
        ("STARENT-MIB", "starHENBGWServicePeerAddr"),
        ("STARENT-MIB", "starHENBGWServicePeerPort"))
)
if mibBuilder.loadTexts:
    starHENBGWMMEOverloadStop.setStatus(
        "current"
    )

starNpudriverECCError = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1281)
)
starNpudriverECCError.setObjects(
    ("STARENT-MIB", "starSlotNum")
)
if mibBuilder.loadTexts:
    starNpudriverECCError.setStatus(
        "current"
    )

starGTPCRLFOverThreshold = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1282)
)
starGTPCRLFOverThreshold.setObjects(
      *(("STARENT-MIB", "starGTPCRLFSessMgrInst"),
        ("STARENT-MIB", "starGTPCRLFVPNName"),
        ("STARENT-MIB", "starGTPCRLFVPNId"),
        ("STARENT-MIB", "starGTPCRLFContextName"),
        ("STARENT-MIB", "starGTPCRLFCurrAppTPS"))
)
if mibBuilder.loadTexts:
    starGTPCRLFOverThreshold.setStatus(
        "current"
    )

starGTPCRLFOverLimit = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1283)
)
starGTPCRLFOverLimit.setObjects(
      *(("STARENT-MIB", "starGTPCRLFSessMgrInst"),
        ("STARENT-MIB", "starGTPCRLFVPNName"),
        ("STARENT-MIB", "starGTPCRLFVPNId"),
        ("STARENT-MIB", "starGTPCRLFContextName"),
        ("STARENT-MIB", "starGTPCRLFCurrAppDelayTol"))
)
if mibBuilder.loadTexts:
    starGTPCRLFOverLimit.setStatus(
        "current"
    )

starGTPCRLFOverThresholdClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1284)
)
starGTPCRLFOverThresholdClear.setObjects(
      *(("STARENT-MIB", "starGTPCRLFSessMgrInst"),
        ("STARENT-MIB", "starGTPCRLFVPNName"),
        ("STARENT-MIB", "starGTPCRLFVPNId"),
        ("STARENT-MIB", "starGTPCRLFContextName"))
)
if mibBuilder.loadTexts:
    starGTPCRLFOverThresholdClear.setStatus(
        "current"
    )

starGTPCRLFOverLimitClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1285)
)
starGTPCRLFOverLimitClear.setObjects(
      *(("STARENT-MIB", "starGTPCRLFSessMgrInst"),
        ("STARENT-MIB", "starGTPCRLFVPNName"),
        ("STARENT-MIB", "starGTPCRLFVPNId"),
        ("STARENT-MIB", "starGTPCRLFContextName"))
)
if mibBuilder.loadTexts:
    starGTPCRLFOverLimitClear.setStatus(
        "current"
    )

starS102ServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1286)
)
starS102ServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starS102ServiceStart.setStatus(
        "current"
    )

starS102ServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1287)
)
starS102ServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starS102ServiceStop.setStatus(
        "current"
    )

starBGPPeerSessionIPv6Up = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1288)
)
starBGPPeerSessionIPv6Up.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starBGPPeerIpv6Address"))
)
if mibBuilder.loadTexts:
    starBGPPeerSessionIPv6Up.setStatus(
        "current"
    )

starBGPPeerSessionIPv6Down = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1289)
)
starBGPPeerSessionIPv6Down.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starBGPPeerIpv6Address"))
)
if mibBuilder.loadTexts:
    starBGPPeerSessionIPv6Down.setStatus(
        "current"
    )

starMMEEMBMSServiceStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1290)
)
starMMEEMBMSServiceStart.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starMMEEMBMSServiceStart.setStatus(
        "current"
    )

starMMEEMBMSServiceStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1291)
)
starMMEEMBMSServiceStop.setObjects(
      *(("STARENT-MIB", "starServiceVpnName"),
        ("STARENT-MIB", "starServiceServName"))
)
if mibBuilder.loadTexts:
    starMMEEMBMSServiceStop.setStatus(
        "current"
    )

starMCEAssocDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1292)
)
starMCEAssocDown.setObjects(
      *(("STARENT-MIB", "starMMEEMBMSServiceVpnName"),
        ("STARENT-MIB", "starMMEEMBMSServiceServName"),
        ("STARENT-MIB", "starMMEEMBMSPeerId"),
        ("STARENT-MIB", "starMMEEMBMSPeerIpAddr"),
        ("STARENT-MIB", "starMMEEMBMSPeerPortNum"))
)
if mibBuilder.loadTexts:
    starMCEAssocDown.setStatus(
        "current"
    )

starMCEAssocUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1293)
)
starMCEAssocUp.setObjects(
      *(("STARENT-MIB", "starMMEEMBMSServiceVpnName"),
        ("STARENT-MIB", "starMMEEMBMSServiceServName"),
        ("STARENT-MIB", "starMMEEMBMSPeerId"),
        ("STARENT-MIB", "starMMEEMBMSPeerIpAddr"),
        ("STARENT-MIB", "starMMEEMBMSPeerPortNum"))
)
if mibBuilder.loadTexts:
    starMCEAssocUp.setStatus(
        "current"
    )

starIuBcTcpConnDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1294)
)
starIuBcTcpConnDown.setObjects(
      *(("STARENT-MIB", "starCBSServiceVpnName"),
        ("STARENT-MIB", "starIuBcSelfIpAddr"),
        ("STARENT-MIB", "starIuBcSelfPortNum"),
        ("STARENT-MIB", "starIuBcPeerIpAddr"),
        ("STARENT-MIB", "starIuBcPeerPortNum"),
        ("STARENT-MIB", "starIuBcTcpConnCauseStr"))
)
if mibBuilder.loadTexts:
    starIuBcTcpConnDown.setStatus(
        "current"
    )

starIuBcTcpConnUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1295)
)
starIuBcTcpConnUp.setObjects(
      *(("STARENT-MIB", "starCBSServiceVpnName"),
        ("STARENT-MIB", "starIuBcSelfIpAddr"),
        ("STARENT-MIB", "starIuBcSelfPortNum"),
        ("STARENT-MIB", "starIuBcPeerIpAddr"),
        ("STARENT-MIB", "starIuBcPeerPortNum"),
        ("STARENT-MIB", "starIuBcTcpConnCauseStr"))
)
if mibBuilder.loadTexts:
    starIuBcTcpConnUp.setStatus(
        "current"
    )

starSessCapReached = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1298)
)
starSessCapReached.setObjects(
      *(("STARENT-MIB", "starTaskInstance"),
        ("STARENT-MIB", "starTaskCard"),
        ("STARENT-MIB", "starTaskCPU"))
)
if mibBuilder.loadTexts:
    starSessCapReached.setStatus(
        "current"
    )

starLAGGroupDownDueToMinlink = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1299)
)
starLAGGroupDownDueToMinlink.setObjects(
      *(("STARENT-MIB", "starPortSlot"),
        ("STARENT-MIB", "starPortNum"),
        ("STARENT-MIB", "starLAGGroup"),
        ("STARENT-MIB", "starLAGMinlink"))
)
if mibBuilder.loadTexts:
    starLAGGroupDownDueToMinlink.setStatus(
        "current"
    )

starSerdesLanePermDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1303)
)
starSerdesLanePermDown.setObjects(
      *(("STARENT-MIB", "starSlotNum"),
        ("STARENT-MIB", "starDeviceNum"),
        ("STARENT-MIB", "starSerdesNum"))
)
if mibBuilder.loadTexts:
    starSerdesLanePermDown.setStatus(
        "current"
    )

starThreshAllFramedRoutes = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1304)
)
starThreshAllFramedRoutes.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starVRFName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshAllFramedRoutes.setStatus(
        "current"
    )

starThreshAllFramedRoutesClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1305)
)
starThreshAllFramedRoutesClear.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starVRFName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshAllFramedRoutesClear.setStatus(
        "current"
    )

starThreshAllTotalRoutes = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1306)
)
starThreshAllTotalRoutes.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starVRFName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshAllTotalRoutes.setStatus(
        "current"
    )

starThreshAllTotalRoutesClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1307)
)
starThreshAllTotalRoutesClear.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starVRFName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshAllTotalRoutesClear.setStatus(
        "current"
    )

starThreshVRFFramedRoutes = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1308)
)
starThreshVRFFramedRoutes.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starVRFName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshVRFFramedRoutes.setStatus(
        "current"
    )

starThreshVRFFramedRoutesClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1309)
)
starThreshVRFFramedRoutesClear.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starVRFName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshVRFFramedRoutesClear.setStatus(
        "current"
    )

starThreshVRFTotalRoutes = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1310)
)
starThreshVRFTotalRoutes.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starVRFName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshVRFTotalRoutes.setStatus(
        "current"
    )

starThreshVRFTotalRoutesClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1311)
)
starThreshVRFTotalRoutesClear.setObjects(
      *(("STARENT-MIB", "starContextName"),
        ("STARENT-MIB", "starVRFName"),
        ("STARENT-MIB", "starThreshInt"),
        ("STARENT-MIB", "starThreshMeasuredInt"))
)
if mibBuilder.loadTexts:
    starThreshVRFTotalRoutesClear.setStatus(
        "current"
    )

starStatFilesizeExceeded = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1312)
)
starStatFilesizeExceeded.setObjects(
      *(("STARENT-MIB", "starStatFilesizeLimit"),
        ("STARENT-MIB", "starStatFilesizeMeasured"))
)
if mibBuilder.loadTexts:
    starStatFilesizeExceeded.setStatus(
        "current"
    )

starStatFilesizeClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 8164, 2, 1313)
)
starStatFilesizeClear.setObjects(
      *(("STARENT-MIB", "starStatFilesizeLimit"),
        ("STARENT-MIB", "starStatFilesizeMeasured"))
)
if mibBuilder.loadTexts:
    starStatFilesizeClear.setStatus(
        "current"
    )


# Notifications groups

starAlertTrapGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 8164, 3, 1, 4)
)
starAlertTrapGroup.setObjects(
      *(("STARENT-MIB", "starAlertsDisabled"),
        ("STARENT-MIB", "starAlertsEnabled"))
)
if mibBuilder.loadTexts:
    starAlertTrapGroup.setStatus(
        "current"
    )

starTrapGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 8164, 3, 1, 5)
)
starTrapGroup.setObjects(
      *(("STARENT-MIB", "starCardTempOverheat"),
        ("STARENT-MIB", "starCardTempOK"),
        ("STARENT-MIB", "starCardRebootRequest"),
        ("STARENT-MIB", "starCardUp"),
        ("STARENT-MIB", "starCardVoltageFailure"),
        ("STARENT-MIB", "starCardRemoved"),
        ("STARENT-MIB", "starCardInserted"),
        ("STARENT-MIB", "starCardBootFailed"),
        ("STARENT-MIB", "starCardMismatch"),
        ("STARENT-MIB", "starCardPACMigrateStart"),
        ("STARENT-MIB", "starCardPACMigrateComplete"),
        ("STARENT-MIB", "starCardPACMigrateFailed"),
        ("STARENT-MIB", "starCardSPCSwitchoverStart"),
        ("STARENT-MIB", "starCardSPCSwitchoverComplete"),
        ("STARENT-MIB", "starCardSPCSwitchoverFailed"),
        ("STARENT-MIB", "starFanFailed"),
        ("STARENT-MIB", "starFanRemoved"),
        ("STARENT-MIB", "starFanInserted"),
        ("STARENT-MIB", "starCPUBusy"),
        ("STARENT-MIB", "starCPUMemoryLow"),
        ("STARENT-MIB", "starCPUMemoryFailed"),
        ("STARENT-MIB", "starCPUFailed"),
        ("STARENT-MIB", "starCPUWatchDogExpired"),
        ("STARENT-MIB", "starNPUARPPoolExhausted"),
        ("STARENT-MIB", "starPowerFilterUnitFailed"),
        ("STARENT-MIB", "starPowerFilterUnitUnavail"),
        ("STARENT-MIB", "starPowerFilterUnitAvail"),
        ("STARENT-MIB", "starAlertsDisabled"),
        ("STARENT-MIB", "starAlertsEnabled"),
        ("STARENT-MIB", "starAAAAuthServerUnreachable"),
        ("STARENT-MIB", "starAAAAuthServerReachable"),
        ("STARENT-MIB", "starAAAAuthServerMisconfigured"),
        ("STARENT-MIB", "starAAAAccServerUnreachable"),
        ("STARENT-MIB", "starAAAAccServerReachable"),
        ("STARENT-MIB", "starAAAAccServerMisconfigured"),
        ("STARENT-MIB", "starLogMsg"),
        ("STARENT-MIB", "starPDSNServiceStart"),
        ("STARENT-MIB", "starPDSNServiceStop"),
        ("STARENT-MIB", "starHAServiceStart"),
        ("STARENT-MIB", "starHAServiceStop"),
        ("STARENT-MIB", "starFAServiceStart"),
        ("STARENT-MIB", "starFAServiceStop"),
        ("STARENT-MIB", "starCLISessionStart"),
        ("STARENT-MIB", "starCLISessionEnd"),
        ("STARENT-MIB", "starCritTaskFailed"),
        ("STARENT-MIB", "starCardActive"),
        ("STARENT-MIB", "starLACServiceStart"),
        ("STARENT-MIB", "starLACServiceStop"),
        ("STARENT-MIB", "starLNSServiceStart"),
        ("STARENT-MIB", "starLNSServiceStop"),
        ("STARENT-MIB", "starCardDown"),
        ("STARENT-MIB", "starGGSNServiceStart"),
        ("STARENT-MIB", "starGGSNServiceStop"),
        ("STARENT-MIB", "starLicenseExceeded"),
        ("STARENT-MIB", "starSubscriberLimit"),
        ("STARENT-MIB", "starSessionRejectNoResource"),
        ("STARENT-MIB", "starSIPServiceStart"),
        ("STARENT-MIB", "starSIPServiceStop"),
        ("STARENT-MIB", "starVIMServiceStart"),
        ("STARENT-MIB", "starVIMServiceStop"),
        ("STARENT-MIB", "starCHATCONFServiceStart"),
        ("STARENT-MIB", "starCHATCONFServiceStop"),
        ("STARENT-MIB", "starSIPRouteNomatch"),
        ("STARENT-MIB", "starL3AddrUnreachable"),
        ("STARENT-MIB", "starSWUpgradeStart"),
        ("STARENT-MIB", "starSWUpgradeComplete"),
        ("STARENT-MIB", "starSWUpgradeAborted"),
        ("STARENT-MIB", "starBGPPeerSessionUp"),
        ("STARENT-MIB", "starBGPPeerSessionDown"),
        ("STARENT-MIB", "starSRPActive"),
        ("STARENT-MIB", "starSRPStandby"),
        ("STARENT-MIB", "starBGPPeerReachable"),
        ("STARENT-MIB", "starBGPPeerUnreachable"),
        ("STARENT-MIB", "starSRPAAAReachable"),
        ("STARENT-MIB", "starSRPAAAUnreachable"),
        ("STARENT-MIB", "starSRPSwitchoverInitiated"),
        ("STARENT-MIB", "starSRPCheckpointFailure"),
        ("STARENT-MIB", "starSRPConfigOutOfSync"),
        ("STARENT-MIB", "starSRPConfigInSync"),
        ("STARENT-MIB", "starGESwitchFailure"),
        ("STARENT-MIB", "starSIPRouteServerAvailable"),
        ("STARENT-MIB", "starSIPRouteServerUnavailable"),
        ("STARENT-MIB", "starFMDMaxCallRateReached"),
        ("STARENT-MIB", "starFMDCallRateUnderControl"),
        ("STARENT-MIB", "starStorageServerCPUBusy"),
        ("STARENT-MIB", "starStorageServerCPUNormal"),
        ("STARENT-MIB", "starStorageServerDiskSpaceLow"),
        ("STARENT-MIB", "starStorageServerDiskSpaceOK"),
        ("STARENT-MIB", "starCardSPOFAlarm"),
        ("STARENT-MIB", "starCardSPOFClear"),
        ("STARENT-MIB", "starStorageServerOldGcdrPending"),
        ("STARENT-MIB", "starStorageServerOldGcdrCleared"),
        ("STARENT-MIB", "starLoginFailure"),
        ("STARENT-MIB", "starIPSGServiceStart"),
        ("STARENT-MIB", "starIPSGServiceStop"),
        ("STARENT-MIB", "starHAUnreachable"),
        ("STARENT-MIB", "starHAReachable"),
        ("STARENT-MIB", "starASNGWServiceStart"),
        ("STARENT-MIB", "starASNGWServiceStop"),
        ("STARENT-MIB", "starTaskFailed"),
        ("STARENT-MIB", "starTaskRestart"),
        ("STARENT-MIB", "starCSCFServiceStart"),
        ("STARENT-MIB", "starCSCFServiceStop"),
        ("STARENT-MIB", "starPHSGWServiceStart"),
        ("STARENT-MIB", "starPHSGWServiceStop"),
        ("STARENT-MIB", "starPHSPCServiceStart"),
        ("STARENT-MIB", "starPHSPCServiceStop"),
        ("STARENT-MIB", "starIPSECDynTunUp"),
        ("STARENT-MIB", "starIPSECDynTunDown"),
        ("STARENT-MIB", "starHeartbeat"),
        ("STARENT-MIB", "starOverloadSystem"),
        ("STARENT-MIB", "starOverloadSystemClear"),
        ("STARENT-MIB", "starOverloadService"),
        ("STARENT-MIB", "starOverloadServiceClear"),
        ("STARENT-MIB", "starStorageServerClusterStateChange"),
        ("STARENT-MIB", "starStorageServerClusSwitchOver"),
        ("STARENT-MIB", "starStorageServerClusPathFail"),
        ("STARENT-MIB", "starStorageServerClusPathOK"),
        ("STARENT-MIB", "starStorageServerClusInterCFail"),
        ("STARENT-MIB", "starStorageServerClusInterCOK"),
        ("STARENT-MIB", "starStorageServerClusIntfFail"),
        ("STARENT-MIB", "starStorageServerClusIntfOK"),
        ("STARENT-MIB", "starStorageServerMemLow"),
        ("STARENT-MIB", "starStorageServerMemNormal"),
        ("STARENT-MIB", "starLongDurTimerExpiry"),
        ("STARENT-MIB", "starClosedRPServiceStart"),
        ("STARENT-MIB", "starClosedRPServiceStop"),
        ("STARENT-MIB", "starGtpcPathFailure"),
        ("STARENT-MIB", "starGtpuPathFailure"),
        ("STARENT-MIB", "starManagerFailure"),
        ("STARENT-MIB", "starEISServerAlive"),
        ("STARENT-MIB", "starEISServerDead"),
        ("STARENT-MIB", "starCgfAlive"),
        ("STARENT-MIB", "starCgfDead"),
        ("STARENT-MIB", "starCdrPurged"),
        ("STARENT-MIB", "starAAAArchiveStarted"),
        ("STARENT-MIB", "starIPSecNodeIpv6PeerDown"),
        ("STARENT-MIB", "starIPSecNodeIpv6PeerUp"),
        ("STARENT-MIB", "starVLRAssocDown"),
        ("STARENT-MIB", "starVLRAssocUp"),
        ("STARENT-MIB", "starVLRAllAssocDown"),
        ("STARENT-MIB", "starVLRAllAssocDownClear"),
        ("STARENT-MIB", "starVLRDown"),
        ("STARENT-MIB", "starVLRUp"),
        ("STARENT-MIB", "starStorageServerAlive"),
        ("STARENT-MIB", "starStorageServerDead"),
        ("STARENT-MIB", "starGgsnInitiatedUpdtFailed"),
        ("STARENT-MIB", "starCongestion"),
        ("STARENT-MIB", "starCongestionClear"),
        ("STARENT-MIB", "starCscfSessResourceCongestion"),
        ("STARENT-MIB", "starCscfSessResourceCongestionClear"),
        ("STARENT-MIB", "starServiceLossPTACs"),
        ("STARENT-MIB", "starServiceLossLC"),
        ("STARENT-MIB", "starServiceLossSPIO"),
        ("STARENT-MIB", "starIPSPAllAddrsFree"),
        ("STARENT-MIB", "starPCFUnreachable"),
        ("STARENT-MIB", "starPCFReachable"),
        ("STARENT-MIB", "starLIRcvryError"),
        ("STARENT-MIB", "starLIRcvryComplete"),
        ("STARENT-MIB", "starCGWServiceStart"),
        ("STARENT-MIB", "starCGWServiceStop"),
        ("STARENT-MIB", "starDhcpAlive"),
        ("STARENT-MIB", "starDhcpDead"),
        ("STARENT-MIB", "starDhcpServiceStarted"),
        ("STARENT-MIB", "starDhcpServiceStopped"),
        ("STARENT-MIB", "starNTPPeerUnreachable"),
        ("STARENT-MIB", "starNTPSyncLost"),
        ("STARENT-MIB", "starL2TPTunnelDownPeerUnreachable"),
        ("STARENT-MIB", "starCardStandby"),
        ("STARENT-MIB", "starLicenseUnderLimit"),
        ("STARENT-MIB", "starIPSECPriTunDown"),
        ("STARENT-MIB", "starIPSECPriTunUp"),
        ("STARENT-MIB", "starIPSECSecTunDown"),
        ("STARENT-MIB", "starIPSECSecTunUp"),
        ("STARENT-MIB", "starIPSECTunSwitchFail"),
        ("STARENT-MIB", "starIPSECTunSwitchComplete"),
        ("STARENT-MIB", "starNwReachServerAlive"),
        ("STARENT-MIB", "starNwReachServerDead"),
        ("STARENT-MIB", "starStorageServerUnackedGcdrVolPurge"),
        ("STARENT-MIB", "starStorageServerUnackedGcdrFileGen"),
        ("STARENT-MIB", "starNTPPeerReachable"),
        ("STARENT-MIB", "starNTPSyncEstablished"),
        ("STARENT-MIB", "starContFiltDBError"),
        ("STARENT-MIB", "starContFiltDBErrorClear"),
        ("STARENT-MIB", "starBLDBError"),
        ("STARENT-MIB", "starBLDBErrorClear"),
        ("STARENT-MIB", "starContFiltDBUpgradeError"),
        ("STARENT-MIB", "starContFiltDBUpgradeErrorClear"),
        ("STARENT-MIB", "starBLDBUpgradeError"),
        ("STARENT-MIB", "starBLDBUpgradeErrorClear"),
        ("STARENT-MIB", "starDynPkgLoadError"),
        ("STARENT-MIB", "starDynPkgLoadErrorClear"),
        ("STARENT-MIB", "starDynPkgUpgradeError"),
        ("STARENT-MIB", "starDynPkgUpgradeErrorClear"),
        ("STARENT-MIB", "starPDIFServiceStart"),
        ("STARENT-MIB", "starPDIFServiceStop"),
        ("STARENT-MIB", "starSessMgrRecoveryComplete"),
        ("STARENT-MIB", "starSessMgrFlowCount"),
        ("STARENT-MIB", "starSessMgrFlowCountClear"),
        ("STARENT-MIB", "starDiameterPeerDown"),
        ("STARENT-MIB", "starDiameterPeerUp"),
        ("STARENT-MIB", "starDiameterServerUnreachable"),
        ("STARENT-MIB", "starDiameterServerReachable"),
        ("STARENT-MIB", "starDiameterCapabilitiesExchangeSuccess"),
        ("STARENT-MIB", "starDiameterCapabilitiesExchangeFailure"),
        ("STARENT-MIB", "starCDRFileRemoved"),
        ("STARENT-MIB", "starCSCFPeerServerReachable"),
        ("STARENT-MIB", "starCSCFPeerServerUnreachable"),
        ("STARENT-MIB", "starCSCFPeerServerUnavailable"),
        ("STARENT-MIB", "starCSCFPeerServerOutofService"),
        ("STARENT-MIB", "starCSCFPeerServerInService"),
        ("STARENT-MIB", "starCLIConfigMode"),
        ("STARENT-MIB", "starSGSNServiceStart"),
        ("STARENT-MIB", "starSGSNServiceStop"),
        ("STARENT-MIB", "starM3UAPCUnavailable"),
        ("STARENT-MIB", "starM3UAPCAvailable"),
        ("STARENT-MIB", "starECSTotalDNSLearntIPv4Threshold"),
        ("STARENT-MIB", "starECSTotalDNSLearntIPv4ThresholdClear"),
        ("STARENT-MIB", "starECSTotalDNSLearntIPv6Threshold"),
        ("STARENT-MIB", "starECSTotalDNSLearntIPv6ThresholdClear"),
        ("STARENT-MIB", "starM3UAPSDown"),
        ("STARENT-MIB", "starM3UAPSActive"),
        ("STARENT-MIB", "starM3UAPSPDown"),
        ("STARENT-MIB", "starM3UAPSPUp"),
        ("STARENT-MIB", "starSCCPSspRcvd"),
        ("STARENT-MIB", "starSCCPSspClear"),
        ("STARENT-MIB", "starSGSNRNCReset"),
        ("STARENT-MIB", "starSGSNHLRReset"),
        ("STARENT-MIB", "starSGSNGtpcPathFailure"),
        ("STARENT-MIB", "starSGSNGtpcPathFailureClear"),
        ("STARENT-MIB", "starSGSNGtpuPathFailure"),
        ("STARENT-MIB", "starSGSNGtpuPathFailureClear"),
        ("STARENT-MIB", "starMTP3LinkOutOfService"),
        ("STARENT-MIB", "starMTP3LinkInService"),
        ("STARENT-MIB", "starMTP3LinkSetUnAvailable"),
        ("STARENT-MIB", "starMTP3LinkSetAvailable"),
        ("STARENT-MIB", "starSCTPAssociationFail"),
        ("STARENT-MIB", "starSCTPAssociationEstablished"),
        ("STARENT-MIB", "starSCTPPathDown"),
        ("STARENT-MIB", "starSCTPPathUp"),
        ("STARENT-MIB", "starMTP3PCUnavailable"),
        ("STARENT-MIB", "starMTP3PCAvailable"),
        ("STARENT-MIB", "starSS7PCUnavailable"),
        ("STARENT-MIB", "starSS7PCAvailable"),
        ("STARENT-MIB", "starSS7PCCongested"),
        ("STARENT-MIB", "starSS7PCCongestionCleared"),
        ("STARENT-MIB", "starM3UAPSPCongested"),
        ("STARENT-MIB", "starM3UAPSPCongestionCleared"),
        ("STARENT-MIB", "starStorageFailed"),
        ("STARENT-MIB", "starRaidFailed"),
        ("STARENT-MIB", "starRaidStarted"),
        ("STARENT-MIB", "starRaidDegraded"),
        ("STARENT-MIB", "starRaidRecovered"),
        ("STARENT-MIB", "starHENBGWMMESCTPAssocDown"),
        ("STARENT-MIB", "starHENBGWMMESCTPAssocUp"),
        ("STARENT-MIB", "starHENBGWMMESCTPAllAssocDown"),
        ("STARENT-MIB", "starHENBGWMMESCTPAllAssocDownClear"),
        ("STARENT-MIB", "starECSreaddressServerDown"),
        ("STARENT-MIB", "starECSreaddressServerUp"),
        ("STARENT-MIB", "starStorageFound"),
        ("STARENT-MIB", "starStorageNotFound"),
        ("STARENT-MIB", "starThreshCPUUtilization"),
        ("STARENT-MIB", "starThreshClearCPUUtilization"),
        ("STARENT-MIB", "starThreshCPUMemory"),
        ("STARENT-MIB", "starThreshClearCPUMemory"),
        ("STARENT-MIB", "starThreshLicense"),
        ("STARENT-MIB", "starThreshClearLicense"),
        ("STARENT-MIB", "starThreshSubscriberTotal"),
        ("STARENT-MIB", "starThreshClearSubscriberTotal"),
        ("STARENT-MIB", "starThreshSubscriberActive"),
        ("STARENT-MIB", "starThreshClearSubscriberActive"),
        ("STARENT-MIB", "starThreshPortRxUtil"),
        ("STARENT-MIB", "starThreshClearPortRxUtil"),
        ("STARENT-MIB", "starThreshPortTxUtil"),
        ("STARENT-MIB", "starThreshClearPortTxUtil"),
        ("STARENT-MIB", "starThreshPortHighActivity"),
        ("STARENT-MIB", "starThreshClearPortHighActivity"),
        ("STARENT-MIB", "starThreshAAAAuthFail"),
        ("STARENT-MIB", "starThreshClearAAAAuthFail"),
        ("STARENT-MIB", "starThreshAAAAuthFailRate"),
        ("STARENT-MIB", "starThreshClearAAAAuthFailRate"),
        ("STARENT-MIB", "starThreshAAAAcctFail"),
        ("STARENT-MIB", "starThreshClearAAAAcctFail"),
        ("STARENT-MIB", "starThreshAAAAcctFailRate"),
        ("STARENT-MIB", "starThreshClearAAAAcctFailRate"),
        ("STARENT-MIB", "starThreshAAARetryRate"),
        ("STARENT-MIB", "starThreshClearAAARetryRate"),
        ("STARENT-MIB", "starThreshCallSetup"),
        ("STARENT-MIB", "starThreshClearCallSetup"),
        ("STARENT-MIB", "starThreshCallSetupFailure"),
        ("STARENT-MIB", "starThreshClearCallSetupFailure"),
        ("STARENT-MIB", "starThreshCallRejectNoResource"),
        ("STARENT-MIB", "starThreshClearCallRejectNoResource"),
        ("STARENT-MIB", "starThreshPacketsFilteredDropped"),
        ("STARENT-MIB", "starThreshClearPacketsFilteredDropped"),
        ("STARENT-MIB", "starThreshPacketsForwarded"),
        ("STARENT-MIB", "starThreshClearPacketsForwarded"),
        ("STARENT-MIB", "starThreshSessCPUThroughput"),
        ("STARENT-MIB", "starThreshClearSessCPUThroughput"),
        ("STARENT-MIB", "starThreshIPPoolAvail"),
        ("STARENT-MIB", "starThreshClearIPPoolAvail"),
        ("STARENT-MIB", "starThreshCPUUtilization10Sec"),
        ("STARENT-MIB", "starThreshClearCPUUtilization10Sec"),
        ("STARENT-MIB", "starThreshCPULoad"),
        ("STARENT-MIB", "starThreshClearCPULoad"),
        ("STARENT-MIB", "starThreshCPUMemUsage"),
        ("STARENT-MIB", "starThreshClearCPUMemUsage"),
        ("STARENT-MIB", "starThreshPDSNSessions"),
        ("STARENT-MIB", "starThreshClearPDSNSessions"),
        ("STARENT-MIB", "starThreshGGSNSessions"),
        ("STARENT-MIB", "starThreshClearGGSNSessions"),
        ("STARENT-MIB", "starThreshHASessions"),
        ("STARENT-MIB", "starThreshClearHASessions"),
        ("STARENT-MIB", "starThreshLNSSessions"),
        ("STARENT-MIB", "starThreshClearLNSSessions"),
        ("STARENT-MIB", "starThreshPerServicePDSNSessions"),
        ("STARENT-MIB", "starThreshClearPerServicePDSNSessions"),
        ("STARENT-MIB", "starThreshPerServicePDGSessions"),
        ("STARENT-MIB", "starThreshClearPerServicePDGSessions"),
        ("STARENT-MIB", "starThreshPerServiceGGSNSessions"),
        ("STARENT-MIB", "starThreshClearPerServiceGGSNSessions"),
        ("STARENT-MIB", "starThreshPerServiceHASessions"),
        ("STARENT-MIB", "starThreshClearPerServiceHASessions"),
        ("STARENT-MIB", "starThreshPerServiceLNSSessions"),
        ("STARENT-MIB", "starThreshClearPerServiceLNSSessions"),
        ("STARENT-MIB", "starThreshIPPoolHold"),
        ("STARENT-MIB", "starThreshClearIPPoolHold"),
        ("STARENT-MIB", "starThreshIPPoolUsed"),
        ("STARENT-MIB", "starThreshClearIPPoolUsed"),
        ("STARENT-MIB", "starThreshIPPoolRelease"),
        ("STARENT-MIB", "starThreshClearIPPoolRelease"),
        ("STARENT-MIB", "starThreshIPPoolFree"),
        ("STARENT-MIB", "starThreshClearIPPoolFree"),
        ("STARENT-MIB", "starThreshAAAAcctArchive"),
        ("STARENT-MIB", "starThreshClearAAAAcctArchive"),
        ("STARENT-MIB", "starThreshPortSpecRxUtil"),
        ("STARENT-MIB", "starThreshClearPortSpecRxUtil"),
        ("STARENT-MIB", "starThreshPortSpecTxUtil"),
        ("STARENT-MIB", "starThreshClearPortSpecTxUtil"),
        ("STARENT-MIB", "starThreshHACallSetupRate"),
        ("STARENT-MIB", "starThreshClearHACallSetupRate"),
        ("STARENT-MIB", "starThreshHASvcCallSetupRate"),
        ("STARENT-MIB", "starThreshClearHASvcCallSetupRate"),
        ("STARENT-MIB", "starThreshHASvcRegReplyError"),
        ("STARENT-MIB", "starThreshClearHASvcRegReplyError"),
        ("STARENT-MIB", "starThreshHASvcReregReplyError"),
        ("STARENT-MIB", "starThreshClearHASvcReregReplyError"),
        ("STARENT-MIB", "starThreshHASvcDeregReplyError"),
        ("STARENT-MIB", "starThreshClearHASvcDeregReplyError"),
        ("STARENT-MIB", "starThreshFASvcRegReplyError"),
        ("STARENT-MIB", "starThreshClearFASvcRegReplyError"),
        ("STARENT-MIB", "starThreshPDSNCallSetupRate"),
        ("STARENT-MIB", "starThreshClearPDSNCallSetupRate"),
        ("STARENT-MIB", "starThreshPDSNSvcCallSetupRate"),
        ("STARENT-MIB", "starThreshClearPDSNSvcCallSetupRate"),
        ("STARENT-MIB", "starThreshPDSNSvcA11RRPFailure"),
        ("STARENT-MIB", "starThreshClearPDSNSvcA11RRPFailure"),
        ("STARENT-MIB", "starThreshPDSNSvcA11RRQMsgDiscard"),
        ("STARENT-MIB", "starThreshClearPDSNSvcA11RRQMsgDiscard"),
        ("STARENT-MIB", "starThreshPDSNSvcA11RACMsgDiscard"),
        ("STARENT-MIB", "starThreshClearPDSNSvcA11RACMsgDiscard"),
        ("STARENT-MIB", "starThreshPDSNSvcA11PPPSendDiscard"),
        ("STARENT-MIB", "starThreshClearPDSNSvcA11PPPSendDiscard"),
        ("STARENT-MIB", "starThreshAAAMgrQueue"),
        ("STARENT-MIB", "starThreshClearAAAMgrQueue"),
        ("STARENT-MIB", "starThreshAAAAcctArchiveQueue1"),
        ("STARENT-MIB", "starThreshClearAAAAcctArchiveQueue1"),
        ("STARENT-MIB", "starThreshAAAAcctArchiveQueue2"),
        ("STARENT-MIB", "starThreshClearAAAAcctArchiveQueue2"),
        ("STARENT-MIB", "starThreshAAAAcctArchiveQueue3"),
        ("STARENT-MIB", "starThreshClearAAAAcctArchiveQueue3"),
        ("STARENT-MIB", "starThreshDnsLookupSrvFailure"),
        ("STARENT-MIB", "starThreshClearDnsLookupSrvFailure"),
        ("STARENT-MIB", "starThreshCPUOrbsWarn"),
        ("STARENT-MIB", "starThreshClearCPUOrbsWarn"),
        ("STARENT-MIB", "starThreshCPUOrbsCritical"),
        ("STARENT-MIB", "starThreshClearCPUOrbsCritical"),
        ("STARENT-MIB", "starThreshRPSetupFailRate"),
        ("STARENT-MIB", "starThreshClearRPSetupFailRate"),
        ("STARENT-MIB", "starThreshPPPSetupFailRate"),
        ("STARENT-MIB", "starThreshClearPPPSetupFailRate"),
        ("STARENT-MIB", "starThreshStorageUtilization"),
        ("STARENT-MIB", "starThreshClearStorageUtilization"),
        ("STARENT-MIB", "starThreshDCCAProtocolErrors"),
        ("STARENT-MIB", "starThreshClearDCCAProtocolErrors"),
        ("STARENT-MIB", "starThreshDCCABadAnswers"),
        ("STARENT-MIB", "starThreshClearDCCABadAnswers"),
        ("STARENT-MIB", "starThreshDCCAUnknownRatingGroup"),
        ("STARENT-MIB", "starThreshClearDCCAUnknownRatingGroup"),
        ("STARENT-MIB", "starThreshDCCARatingFailed"),
        ("STARENT-MIB", "starThreshClearDCCARatingFailed"),
        ("STARENT-MIB", "starThreshIPSECIKERequests"),
        ("STARENT-MIB", "starThreshClearIPSECIKERequests"),
        ("STARENT-MIB", "starThreshIPSECIKEFailures"),
        ("STARENT-MIB", "starThreshClearIPSECIKEFailures"),
        ("STARENT-MIB", "starThreshIPSECIKEFailRate"),
        ("STARENT-MIB", "starThreshClearIPSECIKEFailRate"),
        ("STARENT-MIB", "starThreshIPSECTunSetup"),
        ("STARENT-MIB", "starThreshClearIPSECTunSetup"),
        ("STARENT-MIB", "starThreshIPSECTunEstabl"),
        ("STARENT-MIB", "starThreshClearIPSECTunEstabl"),
        ("STARENT-MIB", "starThreshIPSECCallReqRej"),
        ("STARENT-MIB", "starThreshClearIPSECCallReqRej"),
        ("STARENT-MIB", "starThreshEPDGIKEV2SetupAttempts"),
        ("STARENT-MIB", "starThreshClearEPDGIKEV2SetupAttempts"),
        ("STARENT-MIB", "starThreshEPDGIKEV2AuthFailures"),
        ("STARENT-MIB", "starThreshClearEPDGIKEV2AuthFailures"),
        ("STARENT-MIB", "starThreshEPDGIKEV2SetupSuccess"),
        ("STARENT-MIB", "starThreshClearEPDGIKEV2SetupSuccess"),
        ("STARENT-MIB", "starThreshEPDGIKEV2SetupFailure"),
        ("STARENT-MIB", "starThreshClearEPDGIKEV2SetupFailure"),
        ("STARENT-MIB", "starThreshEPDGIKEV2SetupFailureRate"),
        ("STARENT-MIB", "starThreshClearEPDGIKEV2SetupFailureRate"),
        ("STARENT-MIB", "starThreshCSCFSvcRouteFailure"),
        ("STARENT-MIB", "starThreshClearCSCFSvcRouteFailure"),
        ("STARENT-MIB", "starThreshCSCFSvcRegRcvdRate"),
        ("STARENT-MIB", "starThreshClearCSCFSvcRegRcvdRate"),
        ("STARENT-MIB", "starThreshCSCFSvcTotalActiveReg"),
        ("STARENT-MIB", "starThreshClearCSCFSvcTotalActiveReg"),
        ("STARENT-MIB", "starThreshCSCFSvcInviteRcvdRate"),
        ("STARENT-MIB", "starThreshClearCSCFSvcInviteRcvdRate"),
        ("STARENT-MIB", "starThreshCSCFSvcTotalActiveCalls"),
        ("STARENT-MIB", "starThreshClearCSCFSvcTotalActiveCalls"),
        ("STARENT-MIB", "starThreshCSCFSvcTotalCallFailure"),
        ("STARENT-MIB", "starThreshClearCSCFSvcTotalCallFailure"),
        ("STARENT-MIB", "starThreshCSCFSvcErrorNoResource"),
        ("STARENT-MIB", "starThreshClearCSCFSvcErrorNoResource"),
        ("STARENT-MIB", "starThreshCSCFSvcErrorTcp"),
        ("STARENT-MIB", "starThreshClearCSCFSvcErrorTcp"),
        ("STARENT-MIB", "starThreshCSCFSvcErrorPresence"),
        ("STARENT-MIB", "starThreshClearCSCFSvcErrorPresence"),
        ("STARENT-MIB", "starThreshCSCFSvcErrorRegAuth"),
        ("STARENT-MIB", "starThreshClearCSCFSvcErrorRegAuth"),
        ("STARENT-MIB", "starThreshContFiltRating"),
        ("STARENT-MIB", "starThreshClearContFiltRating"),
        ("STARENT-MIB", "starThreshContFiltBlock"),
        ("STARENT-MIB", "starThreshClearContFiltBlock"),
        ("STARENT-MIB", "starThreshCDRFileSpace"),
        ("STARENT-MIB", "starThreshClearCDRFileSpace"),
        ("STARENT-MIB", "starThreshEDRFileSpace"),
        ("STARENT-MIB", "starThreshClearEDRFileSpace"),
        ("STARENT-MIB", "starThreshPDIFCurrSess"),
        ("STARENT-MIB", "starThreshClearPDIFCurrSess"),
        ("STARENT-MIB", "starThreshPDIFCurrActSess"),
        ("STARENT-MIB", "starThreshClearPDIFCurrActSess"),
        ("STARENT-MIB", "starThreshCDRFlowControl"),
        ("STARENT-MIB", "starThreshSGSNSessions"),
        ("STARENT-MIB", "starThreshClearSGSNSessions"),
        ("STARENT-MIB", "starThreshPerServiceSGSNSessions"),
        ("STARENT-MIB", "starThreshClearPerServiceSGSNSessions"),
        ("STARENT-MIB", "starThreshSGSNPdpSessions"),
        ("STARENT-MIB", "starThreshClearSGSNPdpSessions"),
        ("STARENT-MIB", "starThreshPerServiceSGSNPdpSessions"),
        ("STARENT-MIB", "starThreshClearPerServiceSGSNPdpSessions"),
        ("STARENT-MIB", "starThreshClearCDRFlowControl"),
        ("STARENT-MIB", "starThreshASNGWSessTimeout"),
        ("STARENT-MIB", "starThreshClearASNGWSessTimeout"),
        ("STARENT-MIB", "starThreshASNGWSessSetupTimeout"),
        ("STARENT-MIB", "starThreshClearASNGWSessSetupTimeout"),
        ("STARENT-MIB", "starThreshASNGWAuthFail"),
        ("STARENT-MIB", "starThreshClearASNGWAuthFail"),
        ("STARENT-MIB", "starThreshASNGWMaxEAPRetry"),
        ("STARENT-MIB", "starThreshClearASNGWMaxEAPRetry"),
        ("STARENT-MIB", "starThreshASNGWNWEntryDenial"),
        ("STARENT-MIB", "starThreshClearASNGWNWEntryDenial"),
        ("STARENT-MIB", "starThreshASNGWHandoffDenial"),
        ("STARENT-MIB", "starThreshClearASNGWHandoffDenial"),
        ("STARENT-MIB", "starThreshPHSGWSessTimeout"),
        ("STARENT-MIB", "starThreshClearPHSGWSessTimeout"),
        ("STARENT-MIB", "starThreshPHSGWSessSetupTimeout"),
        ("STARENT-MIB", "starThreshClearPHSGWSessSetupTimeout"),
        ("STARENT-MIB", "starThreshPHSGWAuthFail"),
        ("STARENT-MIB", "starThreshClearPHSGWAuthFail"),
        ("STARENT-MIB", "starThreshPHSGWMaxEAPRetry"),
        ("STARENT-MIB", "starThreshClearPHSGWMaxEAPRetry"),
        ("STARENT-MIB", "starThreshPHSGWNWEntryDenial"),
        ("STARENT-MIB", "starThreshClearPHSGWNWEntryDenial"),
        ("STARENT-MIB", "starThreshPHSGWHandoffDenial"),
        ("STARENT-MIB", "starThreshClearPHSGWHandoffDenial"),
        ("STARENT-MIB", "starThreshASNGWSessions"),
        ("STARENT-MIB", "starThreshClearASNGWSessions"),
        ("STARENT-MIB", "starThreshPerServiceASNGWSessions"),
        ("STARENT-MIB", "starThreshClearPerServiceASNGWSessions"),
        ("STARENT-MIB", "starThreshPHSPCSessSetupTimeout"),
        ("STARENT-MIB", "starThreshClearPHSPCSessSetupTimeout"),
        ("STARENT-MIB", "starThreshPHSPCSleepModeTimeout"),
        ("STARENT-MIB", "starThreshClearPHSPCSleepModeTimeout"),
        ("STARENT-MIB", "starThreshPHSPCSmEntryDenial"),
        ("STARENT-MIB", "starThreshClearPHSPCSmEntryDenial"),
        ("STARENT-MIB", "starThreshSGWSessions"),
        ("STARENT-MIB", "starThreshClearSGWSessions"),
        ("STARENT-MIB", "starThreshPGWSessions"),
        ("STARENT-MIB", "starThreshClearPGWSessions"),
        ("STARENT-MIB", "starThreshLMASessions"),
        ("STARENT-MIB", "starThreshClearLMASessions"),
        ("STARENT-MIB", "starThreshMAGSessions"),
        ("STARENT-MIB", "starThreshClearMAGSessions"),
        ("STARENT-MIB", "starThreshHSGWSessions"),
        ("STARENT-MIB", "starThreshClearHSGWSessions"),
        ("STARENT-MIB", "starThreshHENBGWHenbSessions"),
        ("STARENT-MIB", "starThreshClearHENBGWHenbSessions"),
        ("STARENT-MIB", "starThreshHENBGWUeSessions"),
        ("STARENT-MIB", "starThreshClearHENBGWUeSessions"),
        ("STARENT-MIB", "starThreshHENBGWPagingMessages"),
        ("STARENT-MIB", "starThreshClearHENBGWPagingMessages"),
        ("STARENT-MIB", "starThreshPHSGWEAPOLAuthFailure"),
        ("STARENT-MIB", "starThreshClearPHSGWEAPOLAuthFailure"),
        ("STARENT-MIB", "starThreshPHSGWMaxEAPOLRetry"),
        ("STARENT-MIB", "starThreshClearPHSGWMaxEAPOLRetry"),
        ("STARENT-MIB", "starThreshFWDosAttack"),
        ("STARENT-MIB", "starThreshClearFWDosAttack"),
        ("STARENT-MIB", "starThreshFWDropPacket"),
        ("STARENT-MIB", "starThreshClearFWDropPacket"),
        ("STARENT-MIB", "starThreshFWDenyRule"),
        ("STARENT-MIB", "starThreshClearFWDenyRule"),
        ("STARENT-MIB", "starThreshFWNoRule"),
        ("STARENT-MIB", "starThreshClearFWNoRule"),
        ("STARENT-MIB", "starSRPConnDown"),
        ("STARENT-MIB", "starSRPConnUp"),
        ("STARENT-MIB", "starThreshNATPortChunks"),
        ("STARENT-MIB", "starThreshClearNATPortChunks"),
        ("STARENT-MIB", "starThreshClearFWDosAttack"),
        ("STARENT-MIB", "starThreshFWDropPacket"),
        ("STARENT-MIB", "starThreshClearFWDropPacket"),
        ("STARENT-MIB", "starThreshGPRSSessions"),
        ("STARENT-MIB", "starThreshClearGPRSSessions"),
        ("STARENT-MIB", "starThreshPerServiceGPRSSessions"),
        ("STARENT-MIB", "starThreshClearPerServiceGPRSSessions"),
        ("STARENT-MIB", "starThreshGPRSPdpSessions"),
        ("STARENT-MIB", "starThreshClearGPRSPdpSessions"),
        ("STARENT-MIB", "starThreshPerServiceGPRSPdpSessions"),
        ("STARENT-MIB", "starThreshClearPerServiceGPRSPdpSessions"),
        ("STARENT-MIB", "starThreshFWDenyRule"),
        ("STARENT-MIB", "starThreshClearFWDenyRule"),
        ("STARENT-MIB", "starThreshFWNoRule"),
        ("STARENT-MIB", "starThreshClearFWNoRule"),
        ("STARENT-MIB", "starThreshBGPRoutes"),
        ("STARENT-MIB", "starThreshClearBGPRoutes"),
        ("STARENT-MIB", "starThreshNPUUtilization"),
        ("STARENT-MIB", "starThreshClearNPUUtilization"),
        ("STARENT-MIB", "starThreshEPDGCurrSess"),
        ("STARENT-MIB", "starThreshClearEPDGCurrSess"),
        ("STARENT-MIB", "starSRPConnDown"),
        ("STARENT-MIB", "starSRPConnUp"),
        ("STARENT-MIB", "starPortDown"),
        ("STARENT-MIB", "starPortUp"),
        ("STARENT-MIB", "starOSPFNeighborDown"),
        ("STARENT-MIB", "starOSPFNeighborFull"),
        ("STARENT-MIB", "starBSReachable"),
        ("STARENT-MIB", "starBSUnreachable"),
        ("STARENT-MIB", "starSystemStartup"),
        ("STARENT-MIB", "starASNPCServiceStart"),
        ("STARENT-MIB", "starASNPCServiceStop"),
        ("STARENT-MIB", "starDiameterIpv6PeerDown"),
        ("STARENT-MIB", "starDiameterIpv6PeerUp"),
        ("STARENT-MIB", "starIPMSServerUnreachable"),
        ("STARENT-MIB", "starIPMSServerReachable"),
        ("STARENT-MIB", "starCertShortLifetime"),
        ("STARENT-MIB", "starCertExpired"),
        ("STARENT-MIB", "starCertValid"),
        ("STARENT-MIB", "starFTPPushFail"),
        ("STARENT-MIB", "starFTPServSwitch"),
        ("STARENT-MIB", "starSDHSectionDown"),
        ("STARENT-MIB", "starSDHSectionUp"),
        ("STARENT-MIB", "starSDHPathHopDown"),
        ("STARENT-MIB", "starSDHPathHopUp"),
        ("STARENT-MIB", "starSDHLopDown"),
        ("STARENT-MIB", "starSDHLopUp"),
        ("STARENT-MIB", "starSDHE1TribDown"),
        ("STARENT-MIB", "starSDHE1TribUp"),
        ("STARENT-MIB", "starSDHFractE1LMIDown"),
        ("STARENT-MIB", "starSDHFractE1LMIUp"),
        ("STARENT-MIB", "starGPRSServiceStart"),
        ("STARENT-MIB", "starGPRSServiceStop"),
        ("STARENT-MIB", "starGPRSNseDown"),
        ("STARENT-MIB", "starGPRSNseUp"),
        ("STARENT-MIB", "starGPRSNsvcDown"),
        ("STARENT-MIB", "starGPRSNsvcUp"),
        ("STARENT-MIB", "starGPRSBvcDown"),
        ("STARENT-MIB", "starGPRSBvcUp"),
        ("STARENT-MIB", "starPDGServiceStart"),
        ("STARENT-MIB", "starPDGServiceStop"),
        ("STARENT-MIB", "starThreshPDGCurrSess"),
        ("STARENT-MIB", "starThreshClearPDGCurrSess"),
        ("STARENT-MIB", "starThreshPDGCurrActSess"),
        ("STARENT-MIB", "starThreshClearPDGCurrActSess"),
        ("STARENT-MIB", "starPGWServiceStart"),
        ("STARENT-MIB", "starPGWServiceStop"),
        ("STARENT-MIB", "starSGWServiceStart"),
        ("STARENT-MIB", "starSGWServiceStop"),
        ("STARENT-MIB", "starEGTPServiceStart"),
        ("STARENT-MIB", "starEGTPServiceStop"),
        ("STARENT-MIB", "starLMAServiceStart"),
        ("STARENT-MIB", "starLMAServiceStop"),
        ("STARENT-MIB", "starMAGServiceStart"),
        ("STARENT-MIB", "starMAGServiceStop"),
        ("STARENT-MIB", "starMMEServiceStart"),
        ("STARENT-MIB", "starMMEServiceStop"),
        ("STARENT-MIB", "starHSGWServiceStart"),
        ("STARENT-MIB", "starHSGWServiceStop"),
        ("STARENT-MIB", "starCPUBusyClear"),
        ("STARENT-MIB", "starCPUMemoryLowClear"),
        ("STARENT-MIB", "starManagerRestart"),
        ("STARENT-MIB", "starConfigurationUpdate"),
        ("STARENT-MIB", "starFNGServiceStart"),
        ("STARENT-MIB", "starFNGServiceStop"),
        ("STARENT-MIB", "starThreshFNGCurrSess"),
        ("STARENT-MIB", "starThreshClearFNGCurrSess"),
        ("STARENT-MIB", "starThreshFNGCurrActSess"),
        ("STARENT-MIB", "starThreshClearFNGCurrActSess"),
        ("STARENT-MIB", "starEgtpcPathFailure"),
        ("STARENT-MIB", "starEgtpcPathFailureClear"),
        ("STARENT-MIB", "starEgtpuPathFailure"),
        ("STARENT-MIB", "starEgtpuPathFailureClear"),
        ("STARENT-MIB", "starServiceLossSPIOClear"),
        ("STARENT-MIB", "starHNBGWServiceStart"),
        ("STARENT-MIB", "starHNBGWServiceStop"),
        ("STARENT-MIB", "starSystemReboot"),
        ("STARENT-MIB", "starServiceLossPTACsClear"),
        ("STARENT-MIB", "starServiceLossLCClear"),
        ("STARENT-MIB", "starOSPFv3NeighborDown"),
        ("STARENT-MIB", "starOSPFv3NeighborFull"),
        ("STARENT-MIB", "starLicenseAboutToExpire"),
        ("STARENT-MIB", "starLicenseExpired"),
        ("STARENT-MIB", "starStorageServerCDRLoss"),
        ("STARENT-MIB", "starPCCPolicyServiceStart"),
        ("STARENT-MIB", "starPCCPolicyServiceStop"),
        ("STARENT-MIB", "starPCCQuotaServiceStart"),
        ("STARENT-MIB", "starPCCQuotaServiceStop"),
        ("STARENT-MIB", "starPCCAFServiceStart"),
        ("STARENT-MIB", "starPCCAFServiceStop"),
        ("STARENT-MIB", "starThreshPCCPolicySessions"),
        ("STARENT-MIB", "starThreshClearPCCPolicySessions"),
        ("STARENT-MIB", "starThreshPerServicePCCPolicySessions"),
        ("STARENT-MIB", "starThreshClearPerServicePCCPolicySessions"),
        ("STARENT-MIB", "starThreshPCCQuotaSessions"),
        ("STARENT-MIB", "starThreshClearPCCQuotaSessions"),
        ("STARENT-MIB", "starThreshPerServicePCCQuotaSessions"),
        ("STARENT-MIB", "starThreshClearPerServicePCCQuotaSessions"),
        ("STARENT-MIB", "starThreshPCCAFSessions"),
        ("STARENT-MIB", "starThreshClearPCCAFSessions"),
        ("STARENT-MIB", "starThreshPerServicePCCAFSessions"),
        ("STARENT-MIB", "starThreshClearPerServicePCCAFSessions"),
        ("STARENT-MIB", "starSPRServerUnreachable"),
        ("STARENT-MIB", "starSPRServerReachable"),
        ("STARENT-MIB", "starGSServiceStart"),
        ("STARENT-MIB", "starGSServiceStop"),
        ("STARENT-MIB", "starMAPServiceStart"),
        ("STARENT-MIB", "starMAPServiceStop"),
        ("STARENT-MIB", "starIUPSServiceStart"),
        ("STARENT-MIB", "starIUPSServiceStop"),
        ("STARENT-MIB", "starSGTPServiceStart"),
        ("STARENT-MIB", "starSGTPServiceStop"),
        ("STARENT-MIB", "starEPDGServiceStart"),
        ("STARENT-MIB", "starEPDGServiceStop"),
        ("STARENT-MIB", "starApsCommandSuccess"),
        ("STARENT-MIB", "starApsCommandFailure"),
        ("STARENT-MIB", "starApsSwitchSuccess"),
        ("STARENT-MIB", "starApsSwitchFailure"),
        ("STARENT-MIB", "starApsModeMismatch"),
        ("STARENT-MIB", "starApsChannelMismatch"),
        ("STARENT-MIB", "starApsByteMismatch"),
        ("STARENT-MIB", "starApsFeProtLineFailure"),
        ("STARENT-MIB", "starApsLossOfRedundancy"),
        ("STARENT-MIB", "starApsLossOfRedundancyClear"),
        ("STARENT-MIB", "starSGSServiceStart"),
        ("STARENT-MIB", "starSGSServiceStop"),
        ("STARENT-MIB", "starSgsnGnMsgDelay"),
        ("STARENT-MIB", "starSgsnGnMsgDelayClear"),
        ("STARENT-MIB", "starBNGServiceStart"),
        ("STARENT-MIB", "starBNGServiceStop"),
        ("STARENT-MIB", "starHenbgwAccessServiceStart"),
        ("STARENT-MIB", "starHenbgwAccessServiceStop"),
        ("STARENT-MIB", "starHenbgwNetworkServiceStart"),
        ("STARENT-MIB", "starHenbgwNetworkServiceStop"),
        ("STARENT-MIB", "starThreshDnsLookupFailure"),
        ("STARENT-MIB", "starThreshClearDnsLookupFailure"),
        ("STARENT-MIB", "starThreshDiameterRetryRate"),
        ("STARENT-MIB", "starThreshClearDiameterRetryRate"),
        ("STARENT-MIB", "starMMES1AssocFail"),
        ("STARENT-MIB", "starMMES1AssocSetup"),
        ("STARENT-MIB", "starMMES1PathFail"),
        ("STARENT-MIB", "starMMES1PathSetup"),
        ("STARENT-MIB", "starHNBGWSGSNRanapReset"),
        ("STARENT-MIB", "starHNBGWMSCRanapReset"),
        ("STARENT-MIB", "starALCAPNodeReset"),
        ("STARENT-MIB", "starALCAPPathReset"),
        ("STARENT-MIB", "starALCAPPathBlock"),
        ("STARENT-MIB", "starALCAPPathUnBlock"),
        ("STARENT-MIB", "starThreshHNBGWHnbSess"),
        ("STARENT-MIB", "starThreshClearHNBGWHnbSess"),
        ("STARENT-MIB", "starThreshHNBGWUeSess"),
        ("STARENT-MIB", "starThreshClearHNBGWUeSess"),
        ("STARENT-MIB", "starThreshHNBGWIuSess"),
        ("STARENT-MIB", "starThreshClearHNBGWIuSess"),
        ("STARENT-MIB", "starMVGPeerDown"),
        ("STARENT-MIB", "starMVGPeerUp"),
        ("STARENT-MIB", "starThreshSystemCapacity"),
        ("STARENT-MIB", "starThreshClearSystemCapacity"),
        ("STARENT-MIB", "starThreshClearHNBGWIuSess"),
        ("STARENT-MIB", "starThreshTpoRtoTimeout"),
        ("STARENT-MIB", "starThreshClearTpoRtoTimeout"),
        ("STARENT-MIB", "starThreshTpoDnsFailure"),
        ("STARENT-MIB", "starThreshClearTpoDnsFailure"),
        ("STARENT-MIB", "starThreshTpoLowCompressionGain"),
        ("STARENT-MIB", "starThreshClearTpoLowCompressionGain"),
        ("STARENT-MIB", "starSGSNRNCNoResetAck"),
        ("STARENT-MIB", "starThreshSAEGWSessions"),
        ("STARENT-MIB", "starThreshClearSAEGWSessions"),
        ("STARENT-MIB", "starPCCNtfyIntfPeerUnreachable"),
        ("STARENT-MIB", "starPCCNtfyIntfPeerReachable"),
        ("STARENT-MIB", "starIPSecNodePeerDown"),
        ("STARENT-MIB", "starIPSecNodePeerUp"),
        ("STARENT-MIB", "starThreshCardTemperatureNearPowerOffLimit"),
        ("STARENT-MIB", "starThreshClearCardTemperaturePowerOffLimit"),
        ("STARENT-MIB", "starEnhancedCongestion"),
        ("STARENT-MIB", "starEnhancedCongestionClear"),
        ("STARENT-MIB", "starChassisCrashListFull"),
        ("STARENT-MIB", "starSessMgrCSCFServiceRecoveryComplete"),
        ("STARENT-MIB", "starNPDBConnectionDown"),
        ("STARENT-MIB", "starNPDBConnectionUp"),
        ("STARENT-MIB", "starCdrHDDStart"),
        ("STARENT-MIB", "starCdrStreamingStart"),
        ("STARENT-MIB", "starCdrStreamingComplete"),
        ("STARENT-MIB", "starMMENewConnectionsDisallowed"),
        ("STARENT-MIB", "starMMENewConnectionsAllowed"),
        ("STARENT-MIB", "starSAMOGServiceStart"),
        ("STARENT-MIB", "starSAMOGServiceStop"),
        ("STARENT-MIB", "starCardSwitchoverStart"),
        ("STARENT-MIB", "starCardSwitchoverComplete"),
        ("STARENT-MIB", "starCardSwitchoverFailed"),
        ("STARENT-MIB", "starCardMigrateStart"),
        ("STARENT-MIB", "starCardMigrateComplete"),
        ("STARENT-MIB", "starCardMigrateFailed"),
        ("STARENT-MIB", "starPMIPPathFailure"),
        ("STARENT-MIB", "starPMIPPathFailureClear"),
        ("STARENT-MIB", "starHENBGWMMESCTPAssocDestAddrDown"),
        ("STARENT-MIB", "starHENBGWMMESCTPAssocDestAddrUp"),
        ("STARENT-MIB", "starMRMEServiceStart"),
        ("STARENT-MIB", "starMRMEServiceStop"),
        ("STARENT-MIB", "starThreshPerServiceSAMOGSessions"),
        ("STARENT-MIB", "starThreshClearPerServiceSAMOGSessions"),
        ("STARENT-MIB", "starSLSServiceStart"),
        ("STARENT-MIB", "starSLSServiceStop"),
        ("STARENT-MIB", "starESMLCAssocDown"),
        ("STARENT-MIB", "starESMLCAssocUp"),
        ("STARENT-MIB", "starESMLCAllAssocDown"),
        ("STARENT-MIB", "starESMLCAllAssocDownClear"),
        ("STARENT-MIB", "starSBCServiceStart"),
        ("STARENT-MIB", "starSBCServiceStop"),
        ("STARENT-MIB", "starCBCAssocDown"),
        ("STARENT-MIB", "starCBCAssocUp"),
        ("STARENT-MIB", "starBFDSessUp"),
        ("STARENT-MIB", "starBFDSessDown"),
        ("STARENT-MIB", "starThreshFabricEGQDiscards"),
        ("STARENT-MIB", "starThreshNATPktDrop"),
        ("STARENT-MIB", "starThreshClearNATPktDrop"),
        ("STARENT-MIB", "starThreshClearFabricEGQDiscards"),
        ("STARENT-MIB", "starHENBGWMMEOverloadStart"),
        ("STARENT-MIB", "starHENBGWMMEOverloadStop"),
        ("STARENT-MIB", "starBGPPeerSessionIPv6Up"),
        ("STARENT-MIB", "starBGPPeerSessionIPv6Down"),
        ("STARENT-MIB", "starMMEEMBMSServiceStart"),
        ("STARENT-MIB", "starMMEEMBMSServiceStop"),
        ("STARENT-MIB", "starMCEAssocDown"),
        ("STARENT-MIB", "starMCEAssocUp"),
        ("STARENT-MIB", "starIuBcTcpConnDown"),
        ("STARENT-MIB", "starIuBcTcpConnUp"),
        ("STARENT-MIB", "starGILANServiceStart"),
        ("STARENT-MIB", "starGILANServiceStop"),
        ("STARENT-MIB", "starGTPCRLFOverThreshold"),
        ("STARENT-MIB", "starGTPCRLFOverLimit"),
        ("STARENT-MIB", "starGTPCRLFOverThresholdClear"),
        ("STARENT-MIB", "starGTPCRLFOverLimitClear"))
)
if mibBuilder.loadTexts:
    starTrapGroup.setStatus(
        "current"
    )

starTrapObsoleteGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 8164, 3, 1, 6)
)
starTrapObsoleteGroup.setObjects(
      *(("STARENT-MIB", "starCardReset"),
        ("STARENT-MIB", "starCardFailed"),
        ("STARENT-MIB", "starCardRCCFailed"),
        ("STARENT-MIB", "starCardSWFailed"),
        ("STARENT-MIB", "starCardFailureLEDOn"),
        ("STARENT-MIB", "starCardFailureLEDOff"),
        ("STARENT-MIB", "starLogThreshold"),
        ("STARENT-MIB", "starThreshASNGWR6InvNai"),
        ("STARENT-MIB", "starThreshClearASNGWR6InvNai"))
)
if mibBuilder.loadTexts:
    starTrapObsoleteGroup.setStatus(
        "obsolete"
    )


# Agent capabilities


# Module compliance

starentMIBCompliance2 = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 8164, 3, 2, 2)
)
if mibBuilder.loadTexts:
    starentMIBCompliance2.setStatus(
        "current"
    )


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "STARENT-MIB",
    **{"StarentSlotType": StarentSlotType,
       "StarentCardType": StarentCardType,
       "StarentVersionNum": StarentVersionNum,
       "StarRelayState": StarRelayState,
       "StarLongDurTimeoutAction": StarLongDurTimeoutAction,
       "StarShortName": StarShortName,
       "StarShortID": StarShortID,
       "StarMediumID": StarMediumID,
       "StarENBID": StarENBID,
       "StarQOSTPAction": StarQOSTPAction,
       "StarOSPFNeighborState": StarOSPFNeighborState,
       "starentMIB": starentMIB,
       "starentMIBObjects": starentMIBObjects,
       "starentChassis": starentChassis,
       "starChassisCriticalCO": starChassisCriticalCO,
       "starChassisMajorCO": starChassisMajorCO,
       "starChassisMinorCO": starChassisMinorCO,
       "starChassisAction": starChassisAction,
       "starTimeTicks": starTimeTicks,
       "starChassisAudibleAlarm": starChassisAudibleAlarm,
       "starChassisUTCTime": starChassisUTCTime,
       "starChassisLocalTime": starChassisLocalTime,
       "starChassisType": starChassisType,
       "starChassisDescription": starChassisDescription,
       "starChassisSWRevision": starChassisSWRevision,
       "starChassisPeakCpuUsage": starChassisPeakCpuUsage,
       "starChassisPeakMemoryUsage": starChassisPeakMemoryUsage,
       "starentSlots": starentSlots,
       "starSlotTable": starSlotTable,
       "starSlotEntry": starSlotEntry,
       "starSlotNum": starSlotNum,
       "starSlotType": starSlotType,
       "starCardType": starCardType,
       "starCardOperState": starCardOperState,
       "starCardAdminState": starCardAdminState,
       "starCardRevision": starCardRevision,
       "starCardLastStateChange": starCardLastStateChange,
       "starCardMode": starCardMode,
       "starCardPacStandbyPriority": starCardPacStandbyPriority,
       "starCardHaltIssued": starCardHaltIssued,
       "starCardLock": starCardLock,
       "starCardRebootPending": starCardRebootPending,
       "starCardUsable": starCardUsable,
       "starCardSinglePOF": starCardSinglePOF,
       "starCardAttachment": starCardAttachment,
       "starCardTemperature": starCardTemperature,
       "starSlotVoltage1dot5": starSlotVoltage1dot5,
       "starSlotVoltage1dot5LowThresh": starSlotVoltage1dot5LowThresh,
       "starSlotVoltage1dot5HighThresh": starSlotVoltage1dot5HighThresh,
       "starSlotVoltage1dot8": starSlotVoltage1dot8,
       "starSlotVoltage1dot8LowThresh": starSlotVoltage1dot8LowThresh,
       "starSlotVoltage1dot8HighThresh": starSlotVoltage1dot8HighThresh,
       "starSlotVoltage2dot5": starSlotVoltage2dot5,
       "starSlotVoltage2dot5LowThresh": starSlotVoltage2dot5LowThresh,
       "starSlotVoltage2dot5HighThresh": starSlotVoltage2dot5HighThresh,
       "starSlotVoltage3dot3": starSlotVoltage3dot3,
       "starSlotVoltage3dot3LowThresh": starSlotVoltage3dot3LowThresh,
       "starSlotVoltage3dot3HighThresh": starSlotVoltage3dot3HighThresh,
       "starSlotVoltage5dot0": starSlotVoltage5dot0,
       "starSlotVoltage5dot0LowThresh": starSlotVoltage5dot0LowThresh,
       "starSlotVoltage5dot0HighThresh": starSlotVoltage5dot0HighThresh,
       "starSlotNumPorts": starSlotNumPorts,
       "starSlotAction": starSlotAction,
       "starSlotVoltageState": starSlotVoltageState,
       "starSlotNumCPU": starSlotNumCPU,
       "starSlotPartNumber": starSlotPartNumber,
       "starSlotPartRevision": starSlotPartRevision,
       "starSlotSerialNumber": starSlotSerialNumber,
       "starSlotCLEICode": starSlotCLEICode,
       "starSlotCiscoModelName": starSlotCiscoModelName,
       "starSlotCiscoHardwareRev": starSlotCiscoHardwareRev,
       "starSlotCiscoSerialNumber": starSlotCiscoSerialNumber,
       "starDeviceNum": starDeviceNum,
       "starSerdesNum": starSerdesNum,
       "starentSlotMapping": starentSlotMapping,
       "starSlotMappingTable": starSlotMappingTable,
       "starSlotMappingEntry": starSlotMappingEntry,
       "starSlotMappingNum": starSlotMappingNum,
       "starSlotMappingType": starSlotMappingType,
       "starSlotMappingRCCNum": starSlotMappingRCCNum,
       "starSlotMappingToSlot": starSlotMappingToSlot,
       "starentFans": starentFans,
       "starFanTable": starFanTable,
       "starFanEntry": starFanEntry,
       "starFanNum": starFanNum,
       "starFanLocation": starFanLocation,
       "starFanStatus": starFanStatus,
       "starFanSpeed": starFanSpeed,
       "starentLogs": starentLogs,
       "starLogTable": starLogTable,
       "starLogEntry": starLogEntry,
       "starLogName": starLogName,
       "starLogCurSize": starLogCurSize,
       "starLogMaxSize": starLogMaxSize,
       "starLogText": starLogText,
       "starentAlertMan": starentAlertMan,
       "starentFeedback": starentFeedback,
       "starMaxAlertsPerTime": starMaxAlertsPerTime,
       "starWindowTime": starWindowTime,
       "starAlertSendingEnabled": starAlertSendingEnabled,
       "starentPolledLog": starentPolledLog,
       "starentPower": starentPower,
       "starPowerTable": starPowerTable,
       "starPowerEntry": starPowerEntry,
       "starPowerNumber": starPowerNumber,
       "starPowerState": starPowerState,
       "starentCPU": starentCPU,
       "starCPUTable": starCPUTable,
       "starCPUEntry": starCPUEntry,
       "starCPUSlot": starCPUSlot,
       "starCPUNumber": starCPUNumber,
       "starCPUUser": starCPUUser,
       "starCPUSystem": starCPUSystem,
       "starCPUIdle": starCPUIdle,
       "starCPUIO": starCPUIO,
       "starCPUIRQ": starCPUIRQ,
       "starCPULoad1Min": starCPULoad1Min,
       "starCPULoad5Min": starCPULoad5Min,
       "starCPULoad15Min": starCPULoad15Min,
       "starCPUMemTotal": starCPUMemTotal,
       "starCPUMemUsed": starCPUMemUsed,
       "starCPUNumProcesses": starCPUNumProcesses,
       "starCPUMemCached": starCPUMemCached,
       "starentNPUMgr": starentNPUMgr,
       "starNPUMgrTable": starNPUMgrTable,
       "starNPUMgrEntry": starNPUMgrEntry,
       "starNPUMgrNumber": starNPUMgrNumber,
       "starentSessInP": starentSessInP,
       "starSessInProgCalls": starSessInProgCalls,
       "starSessInProgActiveCalls": starSessInProgActiveCalls,
       "starSessInProgDormantCalls": starSessInProgDormantCalls,
       "starSessInProgArrived": starSessInProgArrived,
       "starSessInProgLCPNeg": starSessInProgLCPNeg,
       "starSessInProgLCPUp": starSessInProgLCPUp,
       "starSessInProgAuthenticating": starSessInProgAuthenticating,
       "starSessInProgAuthenticated": starSessInProgAuthenticated,
       "starSessInProgIPCPUp": starSessInProgIPCPUp,
       "starSessInProgSIPConn": starSessInProgSIPConn,
       "starSessInProgMIPConn": starSessInProgMIPConn,
       "starSessInProgDisc": starSessInProgDisc,
       "starentSessMgr": starentSessMgr,
       "starSessMgrCount": starSessMgrCount,
       "starSessTtlArrived": starSessTtlArrived,
       "starSessTtlRejected": starSessTtlRejected,
       "starSessTtlConnected": starSessTtlConnected,
       "starSessTtlAuthSucc": starSessTtlAuthSucc,
       "starSessTtlAuthFail": starSessTtlAuthFail,
       "starSessTtlLCPUp": starSessTtlLCPUp,
       "starSessTtlIPCPUp": starSessTtlIPCPUp,
       "starSessTtlSrcViol": starSessTtlSrcViol,
       "starSessTtlKeepFail": starSessTtlKeepFail,
       "starSessTtlOctForwarded": starSessTtlOctForwarded,
       "starSessTtlRPRegAccept": starSessTtlRPRegAccept,
       "starSessTtlRPRegAcceptInterPDSN": starSessTtlRPRegAcceptInterPDSN,
       "starSessCurrPPPSessions": starSessCurrPPPSessions,
       "starSessTtlTxBytes": starSessTtlTxBytes,
       "starSessTtlRxBytes": starSessTtlRxBytes,
       "starSessTtlSIPTxBytes": starSessTtlSIPTxBytes,
       "starSessTtlSIPRxBytes": starSessTtlSIPRxBytes,
       "starSessTtlMIPTxBytes": starSessTtlMIPTxBytes,
       "starSessTtlMIPRxBytes": starSessTtlMIPRxBytes,
       "starSessTtlOctForwardedGB": starSessTtlOctForwardedGB,
       "starSessTtlOctForwardedRev1": starSessTtlOctForwardedRev1,
       "starSessTtlTxBytesRev1": starSessTtlTxBytesRev1,
       "starSessTtlRxBytesRev1": starSessTtlRxBytesRev1,
       "starSessTtlSIPTxBytesRev1": starSessTtlSIPTxBytesRev1,
       "starSessTtlSIPRxBytesRev1": starSessTtlSIPRxBytesRev1,
       "starSessTtlMIPTxBytesRev1": starSessTtlMIPTxBytesRev1,
       "starSessTtlMIPRxBytesRev1": starSessTtlMIPRxBytesRev1,
       "starSessTtlOctForwardedGBRev1": starSessTtlOctForwardedGBRev1,
       "starentAAAMgr": starentAAAMgr,
       "starAAAMgrCount": starAAAMgrCount,
       "starAAATtlRequests": starAAATtlRequests,
       "starAAATtlAuthRequests": starAAATtlAuthRequests,
       "starAAATtlAcctRequests": starAAATtlAcctRequests,
       "starAAACurRequests": starAAACurRequests,
       "starAAACurAuthRequests": starAAACurAuthRequests,
       "starAAACurAcctRequests": starAAACurAcctRequests,
       "starAAATtlAcctSess": starAAATtlAcctSess,
       "starAAACurAcctSess": starAAACurAcctSess,
       "starAAATtlAuthSuccess": starAAATtlAuthSuccess,
       "starAAATtlAuthFailure": starAAATtlAuthFailure,
       "starentA11Mgr": starentA11Mgr,
       "starA11MgrCount": starA11MgrCount,
       "starA11TtlArrived": starA11TtlArrived,
       "starA11TtlRejected": starA11TtlRejected,
       "starA11TtlDemultiplexed": starA11TtlDemultiplexed,
       "starA11TtlDereg": starA11TtlDereg,
       "starA11CurActive": starA11CurActive,
       "starentHAMgr": starentHAMgr,
       "starHAMgrCount": starHAMgrCount,
       "starHATtlArrived": starHATtlArrived,
       "starHATtlRejected": starHATtlRejected,
       "starHATtlDemultiplexed": starHATtlDemultiplexed,
       "starHATtlDereg": starHATtlDereg,
       "starHACurActive": starHACurActive,
       "starentFAMgr": starentFAMgr,
       "starFAMgrCount": starFAMgrCount,
       "starFATtlArrived": starFATtlArrived,
       "starFATtlRejected": starFATtlRejected,
       "starFATtlDemultiplexed": starFATtlDemultiplexed,
       "starFATtlDereg": starFATtlDereg,
       "starFACurActive": starFACurActive,
       "starentService": starentService,
       "starServiceTable": starServiceTable,
       "starServiceEntry": starServiceEntry,
       "starServiceVpnID": starServiceVpnID,
       "starServiceSvcID": starServiceSvcID,
       "starServiceVpnName": starServiceVpnName,
       "starServiceServName": starServiceServName,
       "starServiceSubLimit": starServiceSubLimit,
       "starServiceSubCurrent": starServiceSubCurrent,
       "starServiceType": starServiceType,
       "starServiceFAIpAddr": starServiceFAIpAddr,
       "starServiceHAIpAddr": starServiceHAIpAddr,
       "starentCLIMgr": starentCLIMgr,
       "starCLITable": starCLITable,
       "starCLIEntry": starCLIEntry,
       "starCLIID": starCLIID,
       "starCLIUsername": starCLIUsername,
       "starCLITtyname": starCLITtyname,
       "starCLIPrivs": starCLIPrivs,
       "starCLIType": starCLIType,
       "starCLIRemoteIpAddrType": starCLIRemoteIpAddrType,
       "starCLIRemoteIpAddr": starCLIRemoteIpAddr,
       "starCLIContext": starCLIContext,
       "starCLIDatabaseUsername": starCLIDatabaseUsername,
       "starentTaskMgr": starentTaskMgr,
       "starTaskTable": starTaskTable,
       "starTaskEntry": starTaskEntry,
       "starTaskFacility": starTaskFacility,
       "starTaskInstance": starTaskInstance,
       "starTaskFacilityName": starTaskFacilityName,
       "starTaskCard": starTaskCard,
       "starTaskCPU": starTaskCPU,
       "starentPPP": starentPPP,
       "starPPPStatTable": starPPPStatTable,
       "starPPPStatEntry": starPPPStatEntry,
       "starPPPStatVpnID": starPPPStatVpnID,
       "starPPPStatSvcID": starPPPStatSvcID,
       "starPPPStatVpnName": starPPPStatVpnName,
       "starPPPStatServName": starPPPStatServName,
       "starPPPStatInit": starPPPStatInit,
       "starPPPStatReneg": starPPPStatReneg,
       "starPPPStatSuccess": starPPPStatSuccess,
       "starPPPStatFailed": starPPPStatFailed,
       "starPPPStatReleased": starPPPStatReleased,
       "starPPPStatReleasedLocal": starPPPStatReleasedLocal,
       "starPPPStatReleasedRemote": starPPPStatReleasedRemote,
       "starPPPStatLcpFailMaxRetry": starPPPStatLcpFailMaxRetry,
       "starPPPStatLcpFailOption": starPPPStatLcpFailOption,
       "starPPPStatIpcpFailMaxRetry": starPPPStatIpcpFailMaxRetry,
       "starPPPStatIpcpFailOption": starPPPStatIpcpFailOption,
       "starPPPStatCcpFail": starPPPStatCcpFail,
       "starPPPStatAuthFail": starPPPStatAuthFail,
       "starPPPStatLcpEntered": starPPPStatLcpEntered,
       "starPPPStatAuthEntered": starPPPStatAuthEntered,
       "starPPPStatIpcpEntered": starPPPStatIpcpEntered,
       "starPPPStatRenegPdsn": starPPPStatRenegPdsn,
       "starPPPStatRenegMobil": starPPPStatRenegMobil,
       "starPPPStatRenegAddrMismatch": starPPPStatRenegAddrMismatch,
       "starPPPStatRenegOther": starPPPStatRenegOther,
       "starPPPStatChapAuthAttempt": starPPPStatChapAuthAttempt,
       "starPPPStatPapAuthAttempt": starPPPStatPapAuthAttempt,
       "starPPPStatMSChapAuthAttempt": starPPPStatMSChapAuthAttempt,
       "starPPPStatChapAuthFail": starPPPStatChapAuthFail,
       "starPPPStatPapAuthFail": starPPPStatPapAuthFail,
       "starPPPStatMSChapAuthFail": starPPPStatMSChapAuthFail,
       "starPPPStatStacComp": starPPPStatStacComp,
       "starPPPStatMppcComp": starPPPStatMppcComp,
       "starPPPStatDeflComp": starPPPStatDeflComp,
       "starPPPStatFscErrs": starPPPStatFscErrs,
       "starPPPStatUnknProto": starPPPStatUnknProto,
       "starPPPStatBadAddr": starPPPStatBadAddr,
       "starPPPStatBadCtrl": starPPPStatBadCtrl,
       "starPPPStatVjComp": starPPPStatVjComp,
       "starPPPStatDiscLcpRemote": starPPPStatDiscLcpRemote,
       "starPPPStatDiscRpRemote": starPPPStatDiscRpRemote,
       "starPPPStatDiscAdmin": starPPPStatDiscAdmin,
       "starPPPStatDiscIdleTimeout": starPPPStatDiscIdleTimeout,
       "starPPPStatDiscAbsTimeout": starPPPStatDiscAbsTimeout,
       "starPPPStatDiscPPPKeepalive": starPPPStatDiscPPPKeepalive,
       "starPPPStatDiscNoResource": starPPPStatDiscNoResource,
       "starPPPStatDiscMisc": starPPPStatDiscMisc,
       "starPPPStatFailedReneg": starPPPStatFailedReneg,
       "starPPPStatLcpFailUnknown": starPPPStatLcpFailUnknown,
       "starPPPStatIpcpFailUnknown": starPPPStatIpcpFailUnknown,
       "starPPPStatAuthAbort": starPPPStatAuthAbort,
       "starPPPStatLowerLayerDisc": starPPPStatLowerLayerDisc,
       "starPPPStatLcpSuccess": starPPPStatLcpSuccess,
       "starPPPStatAuthSuccess": starPPPStatAuthSuccess,
       "starPPPStatRenegLowerLayerHandoff": starPPPStatRenegLowerLayerHandoff,
       "starPPPStatRenegParamUpdate": starPPPStatRenegParamUpdate,
       "starPPPStatChapAuthSuccess": starPPPStatChapAuthSuccess,
       "starPPPStatPapAuthSuccess": starPPPStatPapAuthSuccess,
       "starPPPStatMSChapAuthSuccess": starPPPStatMSChapAuthSuccess,
       "starPPPStatChapAuthAbort": starPPPStatChapAuthAbort,
       "starPPPStatPapAuthAbort": starPPPStatPapAuthAbort,
       "starPPPStatMSChapAuthAbort": starPPPStatMSChapAuthAbort,
       "starPPPStatSessSkipAuth": starPPPStatSessSkipAuth,
       "starPPPStatNegComp": starPPPStatNegComp,
       "starPPPStatCCPNegFailComp": starPPPStatCCPNegFailComp,
       "starPPPStatDiscLocalLowerLayer": starPPPStatDiscLocalLowerLayer,
       "starPPPStatDiscAddFlowFail": starPPPStatDiscAddFlowFail,
       "starPPPStatDiscMaxRetriesLCP": starPPPStatDiscMaxRetriesLCP,
       "starPPPStatDiscMaxRetriesIPCP": starPPPStatDiscMaxRetriesIPCP,
       "starPPPStatDiscMaxSetupTimer": starPPPStatDiscMaxSetupTimer,
       "starPPPStatDiscInvalidDestVpn": starPPPStatDiscInvalidDestVpn,
       "starPPPStatDiscOptNegFailLCP": starPPPStatDiscOptNegFailLCP,
       "starPPPStatDiscOptNegFailIPCP": starPPPStatDiscOptNegFailIPCP,
       "starPPPStatDiscNoRemoteIpAddr": starPPPStatDiscNoRemoteIpAddr,
       "starPPPStatDiscCallTypeDetectFail": starPPPStatDiscCallTypeDetectFail,
       "starPPPStatDiscRemoteDiscUpLayer": starPPPStatDiscRemoteDiscUpLayer,
       "starPPPStatDiscLongDuraTimeout": starPPPStatDiscLongDuraTimeout,
       "starPPPStatDiscAuthFail": starPPPStatDiscAuthFail,
       "starPPPStatLCPEchoTotalReq": starPPPStatLCPEchoTotalReq,
       "starPPPStatLCPEchoReqResent": starPPPStatLCPEchoReqResent,
       "starPPPStatLCPEchoRepRecved": starPPPStatLCPEchoRepRecved,
       "starPPPStatLCPEchoReqTimeout": starPPPStatLCPEchoReqTimeout,
       "starPPPStatRecvErrBadCtrlField": starPPPStatRecvErrBadCtrlField,
       "starPPPStatRecvErrBadPacketLen": starPPPStatRecvErrBadPacketLen,
       "starPPPStatRemoteTerm": starPPPStatRemoteTerm,
       "starPPPStatMiscFail": starPPPStatMiscFail,
       "starentMIPHA": starentMIPHA,
       "starMIPHAStatTable": starMIPHAStatTable,
       "starMIPHAStatEntry": starMIPHAStatEntry,
       "starMIPHAStatVpnID": starMIPHAStatVpnID,
       "starMIPHAStatSvcID": starMIPHAStatSvcID,
       "starMIPHAStatVpnName": starMIPHAStatVpnName,
       "starMIPHAStatServName": starMIPHAStatServName,
       "starMIPHAStatDisconnects": starMIPHAStatDisconnects,
       "starMIPHAStatExpiry": starMIPHAStatExpiry,
       "starMIPHAStatDereg": starMIPHAStatDereg,
       "starMIPHAStatAdminDrop": starMIPHAStatAdminDrop,
       "starMIPHAStatRegRecvTotal": starMIPHAStatRegRecvTotal,
       "starMIPHAStatRegRecvInitial": starMIPHAStatRegRecvInitial,
       "starMIPHAStatRegRecvRenew": starMIPHAStatRegRecvRenew,
       "starMIPHAStatRegRecvDereg": starMIPHAStatRegRecvDereg,
       "starMIPHAStatRegAcceptTotal": starMIPHAStatRegAcceptTotal,
       "starMIPHAStatRegAcceptReg": starMIPHAStatRegAcceptReg,
       "starMIPHAStatRegAcceptRenew": starMIPHAStatRegAcceptRenew,
       "starMIPHAStatRegAcceptDereg": starMIPHAStatRegAcceptDereg,
       "starMIPHAStatRegDeniedTotal": starMIPHAStatRegDeniedTotal,
       "starMIPHAStatRegDeniedInitial": starMIPHAStatRegDeniedInitial,
       "starMIPHAStatRegDeniedRenew": starMIPHAStatRegDeniedRenew,
       "starMIPHAStatRegDeniedDereg": starMIPHAStatRegDeniedDereg,
       "starMIPHAStatRegReplyTotal": starMIPHAStatRegReplyTotal,
       "starMIPHAStatRegReplyAcceptReg": starMIPHAStatRegReplyAcceptReg,
       "starMIPHAStatRegReplyAcceptDereg": starMIPHAStatRegReplyAcceptDereg,
       "starMIPHAStatRegReplyDenied": starMIPHAStatRegReplyDenied,
       "starMIPHAStatRegReplyBadReq": starMIPHAStatRegReplyBadReq,
       "starMIPHAStatRegReplyMismatchID": starMIPHAStatRegReplyMismatchID,
       "starMIPHAStatRegReplyAdminProhib": starMIPHAStatRegReplyAdminProhib,
       "starMIPHAStatRegReplyUnspecErr": starMIPHAStatRegReplyUnspecErr,
       "starMIPHAStatRegReplyNoResource": starMIPHAStatRegReplyNoResource,
       "starMIPHAStatRegReplyMnAuthFail": starMIPHAStatRegReplyMnAuthFail,
       "starMIPHAStatRegReplyFAAuthFail": starMIPHAStatRegReplyFAAuthFail,
       "starMIPHAStatRegReplySimulBind": starMIPHAStatRegReplySimulBind,
       "starMIPHAStatRegReplyUnknownHA": starMIPHAStatRegReplyUnknownHA,
       "starMIPHAStatRegReplyRevTunUnav": starMIPHAStatRegReplyRevTunUnav,
       "starMIPHAStatRegReplyRevTunMand": starMIPHAStatRegReplyRevTunMand,
       "starMIPHAStatRegReplyEncapUnav": starMIPHAStatRegReplyEncapUnav,
       "starMIPHAStatRegReplySendError": starMIPHAStatRegReplySendError,
       "starMIPHAStatFARevocations": starMIPHAStatFARevocations,
       "starMIPHAStatRegAcceptHO": starMIPHAStatRegAcceptHO,
       "starMIPHAStatRegDeniedHO": starMIPHAStatRegDeniedHO,
       "starMIPHAStatRegDiscardTotal": starMIPHAStatRegDiscardTotal,
       "starentMIPFA": starentMIPFA,
       "starMIPFAStatTable": starMIPFAStatTable,
       "starMIPFAStatEntry": starMIPFAStatEntry,
       "starMIPFAStatVpnID": starMIPFAStatVpnID,
       "starMIPFAStatSvcID": starMIPFAStatSvcID,
       "starMIPFAStatVpnName": starMIPFAStatVpnName,
       "starMIPFAStatServName": starMIPFAStatServName,
       "starMIPFAStatAdvertSend": starMIPFAStatAdvertSend,
       "starMIPFAStatDiscExpiry": starMIPFAStatDiscExpiry,
       "starMIPFAStatDiscDereg": starMIPFAStatDiscDereg,
       "starMIPFAStatDiscAdmin": starMIPFAStatDiscAdmin,
       "starMIPFAStatAuthAttempt": starMIPFAStatAuthAttempt,
       "starMIPFAStatAuthSuccess": starMIPFAStatAuthSuccess,
       "starMIPFAStatAuthFailure": starMIPFAStatAuthFailure,
       "starMIPFAStatRegRecvTotal": starMIPFAStatRegRecvTotal,
       "starMIPFAStatRegRecvInitial": starMIPFAStatRegRecvInitial,
       "starMIPFAStatRegRecvRenewal": starMIPFAStatRegRecvRenewal,
       "starMIPFAStatRegRecvDereg": starMIPFAStatRegRecvDereg,
       "starMIPFAStatRegAcceptTotal": starMIPFAStatRegAcceptTotal,
       "starMIPFAStatRegAcceptInitial": starMIPFAStatRegAcceptInitial,
       "starMIPFAStatRegAcceptRenewal": starMIPFAStatRegAcceptRenewal,
       "starMIPFAStatRegAcceptDereg": starMIPFAStatRegAcceptDereg,
       "starMIPFAStatRegDenTotal": starMIPFAStatRegDenTotal,
       "starMIPFAStatRegDenInitial": starMIPFAStatRegDenInitial,
       "starMIPFAStatRegDenRenewal": starMIPFAStatRegDenRenewal,
       "starMIPFAStatRegDenDereg": starMIPFAStatRegDenDereg,
       "starMIPFAStatRegDiscardTotal": starMIPFAStatRegDiscardTotal,
       "starMIPFAStatRegDiscardInitial": starMIPFAStatRegDiscardInitial,
       "starMIPFAStatRegDiscardRenewal": starMIPFAStatRegDiscardRenewal,
       "starMIPFAStatRegDiscardDereg": starMIPFAStatRegDiscardDereg,
       "starMIPFAStatRegRelayedTotal": starMIPFAStatRegRelayedTotal,
       "starMIPFAStatRegRelayedInitial": starMIPFAStatRegRelayedInitial,
       "starMIPFAStatRegRelayedRenewal": starMIPFAStatRegRelayedRenewal,
       "starMIPFAStatRegRelayedDereg": starMIPFAStatRegRelayedDereg,
       "starMIPFAStatRegAuthFailTotal": starMIPFAStatRegAuthFailTotal,
       "starMIPFAStatRegAuthFailInitial": starMIPFAStatRegAuthFailInitial,
       "starMIPFAStatRegAuthFailRenewal": starMIPFAStatRegAuthFailRenewal,
       "starMIPFAStatRegAuthFailDereg": starMIPFAStatRegAuthFailDereg,
       "starMIPFAStatRegDenPDSNTotal": starMIPFAStatRegDenPDSNTotal,
       "starMIPFAStatRegDenPDSNInitial": starMIPFAStatRegDenPDSNInitial,
       "starMIPFAStatRegDenPDSNRenewal": starMIPFAStatRegDenPDSNRenewal,
       "starMIPFAStatRegDenPDSNDereg": starMIPFAStatRegDenPDSNDereg,
       "starMIPFAStatRegDenHATotal": starMIPFAStatRegDenHATotal,
       "starMIPFAStatRegDenHAInitial": starMIPFAStatRegDenHAInitial,
       "starMIPFAStatRegDenHARenewal": starMIPFAStatRegDenHARenewal,
       "starMIPFAStatRegDenHADereg": starMIPFAStatRegDenHADereg,
       "starMIPFAStatRegDenPDSNUnspec": starMIPFAStatRegDenPDSNUnspec,
       "starMIPFAStatRegDenPDSNTimeout": starMIPFAStatRegDenPDSNTimeout,
       "starMIPFAStatRegDenPDSNAdmin": starMIPFAStatRegDenPDSNAdmin,
       "starMIPFAStatRegDenPDSNResources": starMIPFAStatRegDenPDSNResources,
       "starMIPFAStatRegDenPDSNMnAuth": starMIPFAStatRegDenPDSNMnAuth,
       "starMIPFAStatRegDenPDSNHAAuth": starMIPFAStatRegDenPDSNHAAuth,
       "starMIPFAStatRegDenPDSNTooLong": starMIPFAStatRegDenPDSNTooLong,
       "starMIPFAStatRegDenPDSNBadReq": starMIPFAStatRegDenPDSNBadReq,
       "starMIPFAStatRegDenPDSNEncapUnav": starMIPFAStatRegDenPDSNEncapUnav,
       "starMIPFAStatRegDenPDSNRevTunUnav": starMIPFAStatRegDenPDSNRevTunUnav,
       "starMIPFAStatRegDenPDSNRevTunMand": starMIPFAStatRegDenPDSNRevTunMand,
       "starMIPFAStatRegDenHAFAAuth": starMIPFAStatRegDenHAFAAuth,
       "starMIPFAStatRegDenHABadReq": starMIPFAStatRegDenHABadReq,
       "starMIPFAStatRegDenHAMismatchID": starMIPFAStatRegDenHAMismatchID,
       "starMIPFAStatRegDenHASimulBind": starMIPFAStatRegDenHASimulBind,
       "starMIPFAStatRegDenHAUnknownHA": starMIPFAStatRegDenHAUnknownHA,
       "starMIPFAStatRegDenHARevRunUnavail": starMIPFAStatRegDenHARevRunUnavail,
       "starMIPFAStatRegRplRcvTotal": starMIPFAStatRegRplRcvTotal,
       "starMIPFAStatRegRplRcvTotalRly": starMIPFAStatRegRplRcvTotalRly,
       "starMIPFAStatRegRplRcvErrors": starMIPFAStatRegRplRcvErrors,
       "starMIPFAStatRegRplRcvInitial": starMIPFAStatRegRplRcvInitial,
       "starMIPFAStatRegRplRcvInitialRly": starMIPFAStatRegRplRcvInitialRly,
       "starMIPFAStatRegRplRcvRenewal": starMIPFAStatRegRplRcvRenewal,
       "starMIPFAStatRegRplRcvRenewalRly": starMIPFAStatRegRplRcvRenewalRly,
       "starMIPFAStatRegRplRcvDereg": starMIPFAStatRegRplRcvDereg,
       "starMIPFAStatRegRplRcvDeregRly": starMIPFAStatRegRplRcvDeregRly,
       "starMIPFAStatRegRplSentTotal": starMIPFAStatRegRplSentTotal,
       "starMIPFAStatRegRplSentAcceptReg": starMIPFAStatRegRplSentAcceptReg,
       "starMIPFAStatRegRplSentAcceptDereg": starMIPFAStatRegRplSentAcceptDereg,
       "starMIPFAStatRegRplSentBadReq": starMIPFAStatRegRplSentBadReq,
       "starMIPFAStatRegRplSentTooLong": starMIPFAStatRegRplSentTooLong,
       "starMIPFAStatRegRplSentMnAuthFail": starMIPFAStatRegRplSentMnAuthFail,
       "starMIPFAStatRegRplSentHAAuthFail": starMIPFAStatRegRplSentHAAuthFail,
       "starMIPFAStatRegRplSentAdminProhib": starMIPFAStatRegRplSentAdminProhib,
       "starMIPFAStatRegRplSentNoResources": starMIPFAStatRegRplSentNoResources,
       "starMIPFAStatRegRplSentRevTunUnav": starMIPFAStatRegRplSentRevTunUnav,
       "starMIPFAStatRegRplSentRevTunMand": starMIPFAStatRegRplSentRevTunMand,
       "starMIPFAStatRegRplSentSendErrors": starMIPFAStatRegRplSentSendErrors,
       "starMIPFAStatRegDenPDSNBadReply": starMIPFAStatRegDenPDSNBadReply,
       "starMIPFAStatRegDenPDSNMissNAI": starMIPFAStatRegDenPDSNMissNAI,
       "starMIPFAStatRegDenPDSNMissHomeAgent": starMIPFAStatRegDenPDSNMissHomeAgent,
       "starMIPFAStatRegDenPDSNMissHomeAddr": starMIPFAStatRegDenPDSNMissHomeAddr,
       "starMIPFAStatRegDenPDSNUnknChallenge": starMIPFAStatRegDenPDSNUnknChallenge,
       "starMIPFAStatRegDenPDSNMissChallenge": starMIPFAStatRegDenPDSNMissChallenge,
       "starMIPFAStatRegDenPDSNStaleChallenge": starMIPFAStatRegDenPDSNStaleChallenge,
       "starMIPFAStatRegDenPDSNMNTooDistant": starMIPFAStatRegDenPDSNMNTooDistant,
       "starMIPFAStatRegDenPDSNStyleUnavail": starMIPFAStatRegDenPDSNStyleUnavail,
       "starMIPFAStatRegDenPDSNHANetUnreach": starMIPFAStatRegDenPDSNHANetUnreach,
       "starMIPFAStatRegDenPDSNHAHostUnreach": starMIPFAStatRegDenPDSNHAHostUnreach,
       "starMIPFAStatRegDenPDSNHAPortUnreach": starMIPFAStatRegDenPDSNHAPortUnreach,
       "starMIPFAStatRegDenPDSNHAUnreach": starMIPFAStatRegDenPDSNHAUnreach,
       "starMIPFAStatRegDenPDSNInvCOA": starMIPFAStatRegDenPDSNInvCOA,
       "starMIPFAStatRegReqSentInitTotal": starMIPFAStatRegReqSentInitTotal,
       "starMIPFAStatRegReqSentInitResend": starMIPFAStatRegReqSentInitResend,
       "starMIPFAStatRegReqSentRenewTotal": starMIPFAStatRegReqSentRenewTotal,
       "starMIPFAStatRegReqSentRenewResend": starMIPFAStatRegReqSentRenewResend,
       "starMIPFAStatRegReqSentDeregTotal": starMIPFAStatRegReqSentDeregTotal,
       "starMIPFAStatRegReqSentDeregResend": starMIPFAStatRegReqSentDeregResend,
       "starMIPFAStatRegRplSentMNTooDistant": starMIPFAStatRegRplSentMNTooDistant,
       "starMIPFAStatRegRplSentInvCOA": starMIPFAStatRegRplSentInvCOA,
       "starMIPFAStatRegRplSentHANetUnreach": starMIPFAStatRegRplSentHANetUnreach,
       "starMIPFAStatRegRplSentHAHostUnreach": starMIPFAStatRegRplSentHAHostUnreach,
       "starMIPFAStatRegRplSentHAPortUnreach": starMIPFAStatRegRplSentHAPortUnreach,
       "starMIPFAStatRegRplSentHAUnreach": starMIPFAStatRegRplSentHAUnreach,
       "starMIPFAStatRegRplSentRegTimeout": starMIPFAStatRegRplSentRegTimeout,
       "starMIPFAStatRegRplSentMissNAI": starMIPFAStatRegRplSentMissNAI,
       "starMIPFAStatRegRplSentMissHomeAgent": starMIPFAStatRegRplSentMissHomeAgent,
       "starMIPFAStatRegRplSentMissHomeAddr": starMIPFAStatRegRplSentMissHomeAddr,
       "starMIPFAStatRegRplSentUnknChallenge": starMIPFAStatRegRplSentUnknChallenge,
       "starMIPFAStatRegRplSentMissChallenge": starMIPFAStatRegRplSentMissChallenge,
       "starMIPFAStatRegRplSentStaleChallenge": starMIPFAStatRegRplSentStaleChallenge,
       "starMIPFAStatRegRplSentBadReply": starMIPFAStatRegRplSentBadReply,
       "starentRP": starentRP,
       "starRPStatTable": starRPStatTable,
       "starRPStatEntry": starRPStatEntry,
       "starRPStatVpnID": starRPStatVpnID,
       "starRPStatSvcID": starRPStatSvcID,
       "starRPStatVpnName": starRPStatVpnName,
       "starRPStatServName": starRPStatServName,
       "starRPRegRecvTotal": starRPRegRecvTotal,
       "starRPRegAcceptTotal": starRPRegAcceptTotal,
       "starRPRegDeniedTotal": starRPRegDeniedTotal,
       "starRPRegDiscardTotal": starRPRegDiscardTotal,
       "starRPRegAcceptInitial": starRPRegAcceptInitial,
       "starRPRegAcceptIntraPDSN": starRPRegAcceptIntraPDSN,
       "starRPRegAcceptInterPDSN": starRPRegAcceptInterPDSN,
       "starRPRegDeniedInitial": starRPRegDeniedInitial,
       "starRPRegAcceptRenew": starRPRegAcceptRenew,
       "starRPRegDeniedRenew": starRPRegDeniedRenew,
       "starRPRegAcceptDereg": starRPRegAcceptDereg,
       "starRPRegDeniedDereg": starRPRegDeniedDereg,
       "starRPRegSendError": starRPRegSendError,
       "starRPRegHashError": starRPRegHashError,
       "starRPRegDecodeError": starRPRegDecodeError,
       "starRPRegUnhandled": starRPRegUnhandled,
       "starRPRegAirlinkSeqError": starRPRegAirlinkSeqError,
       "starRPRegDenyUnspec": starRPRegDenyUnspec,
       "starRPRegDenyAdminProhib": starRPRegDenyAdminProhib,
       "starRPRegDenyNoResource": starRPRegDenyNoResource,
       "starRPRegDenyAuth": starRPRegDenyAuth,
       "starRPRegDenyMismatchID": starRPRegDenyMismatchID,
       "starRPRegDenyBadRequest": starRPRegDenyBadRequest,
       "starRPRegDenyUnknownPDSN": starRPRegDenyUnknownPDSN,
       "starRPRegDenyRevTunUnav": starRPRegDenyRevTunUnav,
       "starRPRegDenyRevTunReq": starRPRegDenyRevTunReq,
       "starRPRegDenyUnrecogVend": starRPRegDenyUnrecogVend,
       "starRPRegUpdTotal": starRPRegUpdTotal,
       "starRPRegUpdAccept": starRPRegUpdAccept,
       "starRPRegUpdDenied": starRPRegUpdDenied,
       "starRPRegUpdUnack": starRPRegUpdUnack,
       "starRPRegUpdTrans": starRPRegUpdTrans,
       "starRPRegUpdRetrans": starRPRegUpdRetrans,
       "starRPRegUpdReceived": starRPRegUpdReceived,
       "starRPRegUpdDiscard": starRPRegUpdDiscard,
       "starRPRegUpdSendError": starRPRegUpdSendError,
       "starRPRegUpdUplyrInit": starRPRegUpdUplyrInit,
       "starRPRegUpdOther": starRPRegUpdOther,
       "starRPRegUpdHandoff": starRPRegUpdHandoff,
       "starRPRegUpdDenyUnspec": starRPRegUpdDenyUnspec,
       "starRPRegUpdDenyAdminProhib": starRPRegUpdDenyAdminProhib,
       "starRPRegUpdDenyAuth": starRPRegUpdDenyAuth,
       "starRPRegUpdDenyMismatchID": starRPRegUpdDenyMismatchID,
       "starRPRegUpdDenyBadRequest": starRPRegUpdDenyBadRequest,
       "starRPSecViolations": starRPSecViolations,
       "starRPSecBadAuth": starRPSecBadAuth,
       "starRPSecBadID": starRPSecBadID,
       "starRPSecBadSpi": starRPSecBadSpi,
       "starRPSecMissingMnHAAuth": starRPSecMissingMnHAAuth,
       "starRPSecMissingRegUpdate": starRPSecMissingRegUpdate,
       "starRPRegRecvInitial": starRPRegRecvInitial,
       "starRPRegAcceptActvStartIntraPDSN": starRPRegAcceptActvStartIntraPDSN,
       "starRPRegAcceptActvStopIntraPDSN": starRPRegAcceptActvStopIntraPDSN,
       "starRPRegRecvRenew": starRPRegRecvRenew,
       "starRPRegActvStartRenew": starRPRegActvStartRenew,
       "starRPRegActvStopRenew": starRPRegActvStopRenew,
       "starRPRegRecvDereg": starRPRegRecvDereg,
       "starRPRegAcceptActvStopDereg": starRPRegAcceptActvStopDereg,
       "starRPDiscSessAbsent": starRPDiscSessAbsent,
       "starRPDiscNoMemory": starRPDiscNoMemory,
       "starRPDiscMalformed": starRPDiscMalformed,
       "starRPDiscAuthFail": starRPDiscAuthFail,
       "starRPDiscInternalBounce": starRPDiscInternalBounce,
       "starRPDiscInpuQueueExceeded": starRPDiscInpuQueueExceeded,
       "starRPDiscMismatchedId": starRPDiscMismatchedId,
       "starRPDiscInvPacketLen": starRPDiscInvPacketLen,
       "starRPDiscMisc": starRPDiscMisc,
       "starRP1xTxBytes": starRP1xTxBytes,
       "starRP1xRxBytes": starRP1xRxBytes,
       "starRP1xTxPackets": starRP1xTxPackets,
       "starRP1xRxPackets": starRP1xRxPackets,
       "starRPDoTxBytes": starRPDoTxBytes,
       "starRPDoRxBytes": starRPDoRxBytes,
       "starRPDoTxPackets": starRPDoTxPackets,
       "starRPDoRxPackets": starRPDoRxPackets,
       "starentSubscriber": starentSubscriber,
       "starSubTable": starSubTable,
       "starSubEntry": starSubEntry,
       "starSubContext": starSubContext,
       "starSubMSID": starSubMSID,
       "starSubName": starSubName,
       "starSubTimerDuration": starSubTimerDuration,
       "starSubLongDurTimeoutAction": starSubLongDurTimeoutAction,
       "starSubSetupTime": starSubSetupTime,
       "starSubHomeAddr": starSubHomeAddr,
       "starSubHomeAddrv6": starSubHomeAddrv6,
       "starentEISServer": starentEISServer,
       "starEISServerTable": starEISServerTable,
       "starEISServerEntry": starEISServerEntry,
       "starEISServerVPNID": starEISServerVPNID,
       "starEISServerAddr": starEISServerAddr,
       "starEISServerVPNName": starEISServerVPNName,
       "starentThresholds": starentThresholds,
       "starThreshMeasuredPct": starThreshMeasuredPct,
       "starThreshPct": starThreshPct,
       "starThreshMeasuredInt": starThreshMeasuredInt,
       "starThreshInt": starThreshInt,
       "starThreshMeasuredMB": starThreshMeasuredMB,
       "starThreshMB": starThreshMB,
       "starThreshMeasuredGB": starThreshMeasuredGB,
       "starThreshGB": starThreshGB,
       "starThreshPeriodInt": starThreshPeriodInt,
       "starThreshDeviceNum": starThreshDeviceNum,
       "starentPort": starentPort,
       "starPortTable": starPortTable,
       "starPortEntry": starPortEntry,
       "starPortSlot": starPortSlot,
       "starPortNum": starPortNum,
       "starPortType": starPortType,
       "starPortTypeDescr": starPortTypeDescr,
       "starPortAdminState": starPortAdminState,
       "starPortOperState": starPortOperState,
       "starPortOperMode": starPortOperMode,
       "starPortLinkState": starPortLinkState,
       "starRedundantPortSlot": starRedundantPortSlot,
       "starRedundantPortNum": starRedundantPortNum,
       "starPortRxBytes": starPortRxBytes,
       "starPortTxBytes": starPortTxBytes,
       "starPortRxFrames": starPortRxFrames,
       "starPortTxFrames": starPortTxFrames,
       "starPortRxDiscards": starPortRxDiscards,
       "starPortTxDiscards": starPortTxDiscards,
       "starPortRxErrors": starPortRxErrors,
       "starPortTxErrors": starPortTxErrors,
       "starentIPPool": starentIPPool,
       "starIPPoolTable": starIPPoolTable,
       "starIPPoolEntry": starIPPoolEntry,
       "starIPPoolVpnID": starIPPoolVpnID,
       "starIPPoolID": starIPPoolID,
       "starIPPoolContext": starIPPoolContext,
       "starIPPoolGroup": starIPPoolGroup,
       "starIPPoolName": starIPPoolName,
       "starIPPoolType": starIPPoolType,
       "starIPPoolState": starIPPoolState,
       "starIPPoolStartAddr": starIPPoolStartAddr,
       "starIPPoolMaskorEndAddr": starIPPoolMaskorEndAddr,
       "starIPPoolPriority": starIPPoolPriority,
       "starIPPoolUsed": starIPPoolUsed,
       "starIPPoolHold": starIPPoolHold,
       "starIPPoolRelease": starIPPoolRelease,
       "starIPPoolFree": starIPPoolFree,
       "starentTrapData": starentTrapData,
       "starCongestionPolicy": starCongestionPolicy,
       "starCongestionResourceType": starCongestionResourceType,
       "starPTACConfig": starPTACConfig,
       "starPTACActive": starPTACActive,
       "starContextName": starContextName,
       "starInterfaceName": starInterfaceName,
       "starPCFAddress": starPCFAddress,
       "starPeerAddress": starPeerAddress,
       "starLicensedSessions": starLicensedSessions,
       "starCurrentSessions": starCurrentSessions,
       "starL3Address": starL3Address,
       "starUDPPortNum": starUDPPortNum,
       "starSRPIpAddress": starSRPIpAddress,
       "starBGPPeerIpAddress": starBGPPeerIpAddress,
       "starContFiltCFFilename": starContFiltCFFilename,
       "starContFiltCFErrorCode": starContFiltCFErrorCode,
       "starFecthedFromAAAMgr": starFecthedFromAAAMgr,
       "starPriorToAudit": starPriorToAudit,
       "starPassedAudits": starPassedAudits,
       "starCallsRecovered": starCallsRecovered,
       "starAllCallLines": starAllCallLines,
       "starElapsedMs": starElapsedMs,
       "starCDRFilename": starCDRFilename,
       "starDiameterVpnName": starDiameterVpnName,
       "starDiameterPeerAddr": starDiameterPeerAddr,
       "starDiameterEndpointName": starDiameterEndpointName,
       "starInterfaceIPAddress": starInterfaceIPAddress,
       "starOSPFNeighborRouterID": starOSPFNeighborRouterID,
       "starOSPFFromState": starOSPFFromState,
       "starOSPFToState": starOSPFToState,
       "starBLFilename": starBLFilename,
       "starBLErrorCode": starBLErrorCode,
       "starDiameterECode": starDiameterECode,
       "starDiameterPeerAddrIpv6": starDiameterPeerAddrIpv6,
       "starContFiltCFUpgradeFilename": starContFiltCFUpgradeFilename,
       "starContFiltCFUpgradeErrorCode": starContFiltCFUpgradeErrorCode,
       "starBLUpgradeFilename": starBLUpgradeFilename,
       "starBLUpgradeErrorCode": starBLUpgradeErrorCode,
       "starDynPkgFilename": starDynPkgFilename,
       "starDynCFErrorCode": starDynCFErrorCode,
       "starDynPkgUpgradeFilename": starDynPkgUpgradeFilename,
       "starDynCFUpgradeErrorCode": starDynCFUpgradeErrorCode,
       "starCscfSessCongestionResourceType": starCscfSessCongestionResourceType,
       "starSmgrId": starSmgrId,
       "starEGTPVpnName": starEGTPVpnName,
       "starEGTPServName": starEGTPServName,
       "starEGTPInterfaceType": starEGTPInterfaceType,
       "starEGTPSelfPort": starEGTPSelfPort,
       "starEGTPSelfAddr": starEGTPSelfAddr,
       "starEGTPPeerPort": starEGTPPeerPort,
       "starEGTPPeerAddr": starEGTPPeerAddr,
       "starEGTPPeerOldRstCnt": starEGTPPeerOldRstCnt,
       "starEGTPPeerNewRstCnt": starEGTPPeerNewRstCnt,
       "starEGTPPeerSessCnt": starEGTPPeerSessCnt,
       "starEGTPFailureReason": starEGTPFailureReason,
       "starGSSCDRLossConfigured": starGSSCDRLossConfigured,
       "starGSSCDRLossMeasured": starGSSCDRLossMeasured,
       "starLicenseKey": starLicenseKey,
       "starLicenseExpiryDate": starLicenseExpiryDate,
       "starLicenseDaysRemaining": starLicenseDaysRemaining,
       "starLicenseDaysAfterExpiry": starLicenseDaysAfterExpiry,
       "starNPUSlot": starNPUSlot,
       "starSPRServerIpAddr": starSPRServerIpAddr,
       "starMVGEndpointName": starMVGEndpointName,
       "starMVGProtocolType": starMVGProtocolType,
       "starMVGCauseCode": starMVGCauseCode,
       "starPCCNtfyIntfPeerName": starPCCNtfyIntfPeerName,
       "starECSTotalDNSLearntIPThresholdInstance": starECSTotalDNSLearntIPThresholdInstance,
       "starECSTotalDNSLearntIPThresholdconfigured": starECSTotalDNSLearntIPThresholdconfigured,
       "starECSTotalDNSLearntIPThresholdmeasured": starECSTotalDNSLearntIPThresholdmeasured,
       "starPeerAddressIpv6": starPeerAddressIpv6,
       "starLAGPartner": starLAGPartner,
       "starSGSServiceVpnName": starSGSServiceVpnName,
       "starSGSServiceServName": starSGSServiceServName,
       "starVLRName": starVLRName,
       "starVLRIpAddr1": starVLRIpAddr1,
       "starVLRIpAddr2": starVLRIpAddr2,
       "starVLRPortNum": starVLRPortNum,
       "starCongestionType": starCongestionType,
       "starCongestionActionProfileName": starCongestionActionProfileName,
       "starSessMgrFlowInstId": starSessMgrFlowInstId,
       "starSessMgrFlowPDNNo": starSessMgrFlowPDNNo,
       "starSessMgrFlowMemUsage": starSessMgrFlowMemUsage,
       "starSessMgrFlowCounter": starSessMgrFlowCounter,
       "starSessMgrTotalFlowCount": starSessMgrTotalFlowCount,
       "starHENBGWServiceVpnName": starHENBGWServiceVpnName,
       "starHENBGWServiceServName": starHENBGWServiceServName,
       "starHENBGWServiceLogicalENBId": starHENBGWServiceLogicalENBId,
       "starHENBGWServiceMMEServName": starHENBGWServiceMMEServName,
       "starHENBGWServiceSelfAddr": starHENBGWServiceSelfAddr,
       "starHENBGWServicePeerAddr": starHENBGWServicePeerAddr,
       "starHENBGWServiceSelfPort": starHENBGWServiceSelfPort,
       "starHENBGWServicePeerPort": starHENBGWServicePeerPort,
       "starNPUSlotNumber": starNPUSlotNumber,
       "starNPUCPUNumber": starNPUCPUNumber,
       "starNPUNPUNumber": starNPUNPUNumber,
       "starChassisCrashList": starChassisCrashList,
       "starLIRcvryErrType": starLIRcvryErrType,
       "starLIRcvryErrString": starLIRcvryErrString,
       "starPMIPVpnName": starPMIPVpnName,
       "starPMIPServName": starPMIPServName,
       "starPMIPSelfAddrType": starPMIPSelfAddrType,
       "starPMIPSelfAddr": starPMIPSelfAddr,
       "starPMIPPeerAddrType": starPMIPPeerAddrType,
       "starPMIPPeerAddr": starPMIPPeerAddr,
       "starPMIPPeerOldRstCnt": starPMIPPeerOldRstCnt,
       "starPMIPPeerNewRstCnt": starPMIPPeerNewRstCnt,
       "starPMIPPeerSessCnt": starPMIPPeerSessCnt,
       "starPMIPFailureReason": starPMIPFailureReason,
       "starMMEInitialDisallowReason": starMMEInitialDisallowReason,
       "starSLSServiceVpnName": starSLSServiceVpnName,
       "starSLSServiceServName": starSLSServiceServName,
       "starESMLCId": starESMLCId,
       "starESMLCIpAddr1": starESMLCIpAddr1,
       "starESMLCIpAddr2": starESMLCIpAddr2,
       "starESMLCPortNum": starESMLCPortNum,
       "starSBCServiceVpnName": starSBCServiceVpnName,
       "starSBCServiceServName": starSBCServiceServName,
       "starPeerId": starPeerId,
       "starPeerIpAddr": starPeerIpAddr,
       "starPeerPortNum": starPeerPortNum,
       "starBfdSrcAddressType": starBfdSrcAddressType,
       "starBfdSrcAddress": starBfdSrcAddress,
       "starBfdDstAddressType": starBfdDstAddressType,
       "starBfdDstAddress": starBfdDstAddress,
       "starBfdLocalDisc": starBfdLocalDisc,
       "starBfdRemDisc": starBfdRemDisc,
       "starBfdSessDiagCode": starBfdSessDiagCode,
       "starSRPSwitchReason": starSRPSwitchReason,
       "starHENBGWServiceTLRI": starHENBGWServiceTLRI,
       "starCBSServiceVpnName": starCBSServiceVpnName,
       "starIuBcSelfPortNum": starIuBcSelfPortNum,
       "starIuBcSelfIpAddr": starIuBcSelfIpAddr,
       "starIuBcPeerPortNum": starIuBcPeerPortNum,
       "starIuBcPeerIpAddr": starIuBcPeerIpAddr,
       "starIuBcTcpConnCauseStr": starIuBcTcpConnCauseStr,
       "starPhyPortId": starPhyPortId,
       "starGTPCRLFSessMgrInst": starGTPCRLFSessMgrInst,
       "starGTPCRLFVPNName": starGTPCRLFVPNName,
       "starGTPCRLFVPNId": starGTPCRLFVPNId,
       "starGTPCRLFContextName": starGTPCRLFContextName,
       "starGTPCRLFCurrAppTPS": starGTPCRLFCurrAppTPS,
       "starGTPCRLFCurrAppDelayTol": starGTPCRLFCurrAppDelayTol,
       "starBGPPeerIpv6Address": starBGPPeerIpv6Address,
       "starMMEEMBMSServiceVpnName": starMMEEMBMSServiceVpnName,
       "starMMEEMBMSServiceServName": starMMEEMBMSServiceServName,
       "starMMEEMBMSPeerId": starMMEEMBMSPeerId,
       "starMMEEMBMSPeerIpAddr": starMMEEMBMSPeerIpAddr,
       "starMMEEMBMSPeerPortNum": starMMEEMBMSPeerPortNum,
       "starImsimgrInstId": starImsimgrInstId,
       "starLAGGroup": starLAGGroup,
       "starLAGMinlink": starLAGMinlink,
       "starVRFName": starVRFName,
       "starStatFilesizeLimit": starStatFilesizeLimit,
       "starStatFilesizeMeasured": starStatFilesizeMeasured,
       "starentGGSNService": starentGGSNService,
       "starGGSNSerTable": starGGSNSerTable,
       "starGGSNSerEntry": starGGSNSerEntry,
       "starGGSNSerVpnID": starGGSNSerVpnID,
       "starGGSNSerSvcID": starGGSNSerSvcID,
       "starSessGGSNVpnName": starSessGGSNVpnName,
       "starSessGGSNServName": starSessGGSNServName,
       "starSessGGSNPeerPort": starSessGGSNPeerPort,
       "starSessGGSNPeerAddr": starSessGGSNPeerAddr,
       "starSessGGSNImsi": starSessGGSNImsi,
       "starSessGGSNSubsName": starSessGGSNSubsName,
       "starSessGGSNAPNName": starSessGGSNAPNName,
       "starSessGTPPGroupName": starSessGTPPGroupName,
       "starentL2TP": starentL2TP,
       "starL2TPTable": starL2TPTable,
       "starL2TPEntry": starL2TPEntry,
       "starL2TPLocalTunnelID": starL2TPLocalTunnelID,
       "starL2TPPeerTunnelID": starL2TPPeerTunnelID,
       "starL2TPContextName": starL2TPContextName,
       "starL2TPServiceName": starL2TPServiceName,
       "starL2TPServiceTypeName": starL2TPServiceTypeName,
       "starL2TPLocalAddress": starL2TPLocalAddress,
       "starL2TPPeerAddress": starL2TPPeerAddress,
       "starSessSub1": starSessSub1,
       "starSessSub1Context": starSessSub1Context,
       "starSessSub1NAI": starSessSub1NAI,
       "starSessSub1MSID": starSessSub1MSID,
       "starSessSub1IpAddr": starSessSub1IpAddr,
       "starSessSub1LastResult": starSessSub1LastResult,
       "starSessSub1ServiceName": starSessSub1ServiceName,
       "starSessSub1HAIpAddr": starSessSub1HAIpAddr,
       "starSessSub1PeerIpAddr": starSessSub1PeerIpAddr,
       "starSessSub1InPackets": starSessSub1InPackets,
       "starSessSub1InPacketsDropped": starSessSub1InPacketsDropped,
       "starSessSub1InBytes": starSessSub1InBytes,
       "starSessSub1OutPackets": starSessSub1OutPackets,
       "starSessSub1OutPacketsDropped": starSessSub1OutPacketsDropped,
       "starSessSub1OutBytes": starSessSub1OutBytes,
       "starSessSub1Activity": starSessSub1Activity,
       "starSessSub1State": starSessSub1State,
       "starSessSub1CallID": starSessSub1CallID,
       "starSessSub1ConnectTime": starSessSub1ConnectTime,
       "starSessSub1CallDuration": starSessSub1CallDuration,
       "starSessSub1TimeIdle": starSessSub1TimeIdle,
       "starSessSub1AccessType": starSessSub1AccessType,
       "starSessSub1AccessTech": starSessSub1AccessTech,
       "starSessSub1LinkStatus": starSessSub1LinkStatus,
       "starSessSub1NetworkType": starSessSub1NetworkType,
       "starSessSub1CarrierID": starSessSub1CarrierID,
       "starSessSub1ESN": starSessSub1ESN,
       "starSessSub1GMTTimezoneOffset": starSessSub1GMTTimezoneOffset,
       "starSessSub1SessMgr": starSessSub1SessMgr,
       "starSessSub1RemoteIPAddr": starSessSub1RemoteIPAddr,
       "starSessSub1Card": starSessSub1Card,
       "starSessSub1CPU": starSessSub1CPU,
       "starSessSub1TimeIdleLeft": starSessSub1TimeIdleLeft,
       "starSessSub1TimeLeft": starSessSub1TimeLeft,
       "starSessSub1TimeLongDurLeft": starSessSub1TimeLongDurLeft,
       "starSessSub1LongDurAction": starSessSub1LongDurAction,
       "starSessSub1AlwaysOn": starSessSub1AlwaysOn,
       "starSessSub1IPPoolName": starSessSub1IPPoolName,
       "starSessSub1VLANID": starSessSub1VLANID,
       "starSessSub1LNSIPAddr": starSessSub1LNSIPAddr,
       "starSessSub1ProxyMIP": starSessSub1ProxyMIP,
       "starSessSub1GGSNMIP": starSessSub1GGSNMIP,
       "starSessSub1HomeAgentIpAddr": starSessSub1HomeAgentIpAddr,
       "starSessSub1LocalIPAddr": starSessSub1LocalIPAddr,
       "starSessSub1FAServiceName": starSessSub1FAServiceName,
       "starSessSub1FAVPNName": starSessSub1FAVPNName,
       "starSessSub1SourceVPN": starSessSub1SourceVPN,
       "starSessSub1DestVPN": starSessSub1DestVPN,
       "starSessSub1AAAVPN": starSessSub1AAAVPN,
       "starSessSub1AAADomain": starSessSub1AAADomain,
       "starSessSub1AAAStart": starSessSub1AAAStart,
       "starSessSub1AAAStop": starSessSub1AAAStop,
       "starSessSub1AAAInterim": starSessSub1AAAInterim,
       "starSessSub1AcctSessionID": starSessSub1AcctSessionID,
       "starSessSub1AAARadiusGroup": starSessSub1AAARadiusGroup,
       "starSessSub1AAARadiusAuthServerIPAddr": starSessSub1AAARadiusAuthServerIPAddr,
       "starSessSub1AAARadiusAcctServerIPAddr": starSessSub1AAARadiusAcctServerIPAddr,
       "starSessSub1NASIPAddr": starSessSub1NASIPAddr,
       "starSessSub1NexthopIPAddr": starSessSub1NexthopIPAddr,
       "starSessSub1ActiveInACL": starSessSub1ActiveInACL,
       "starSessSub1ActiveOutACL": starSessSub1ActiveOutACL,
       "starSessSub1ECSRulebase": starSessSub1ECSRulebase,
       "starSessSub1InPlcyGrp": starSessSub1InPlcyGrp,
       "starSessSub1OutPlcyGrp": starSessSub1OutPlcyGrp,
       "starSessSub1DownTrafPolState": starSessSub1DownTrafPolState,
       "starSessSub1DownCommDataRate": starSessSub1DownCommDataRate,
       "starSessSub1DownPeakDataRate": starSessSub1DownPeakDataRate,
       "starSessSub1DownBurstSize": starSessSub1DownBurstSize,
       "starSessSub1DownExceedAction": starSessSub1DownExceedAction,
       "starSessSub1DownViolateAction": starSessSub1DownViolateAction,
       "starSessSub1DownExceed": starSessSub1DownExceed,
       "starSessSub1DownViolate": starSessSub1DownViolate,
       "starSessSub1UpTrafPolState": starSessSub1UpTrafPolState,
       "starSessSub1UpCommDataRate": starSessSub1UpCommDataRate,
       "starSessSub1UpPeakDataRate": starSessSub1UpPeakDataRate,
       "starSessSub1UpBurstSize": starSessSub1UpBurstSize,
       "starSessSub1UpExceedAction": starSessSub1UpExceedAction,
       "starSessSub1UpViolateAction": starSessSub1UpViolateAction,
       "starSessSub1UpExceed": starSessSub1UpExceed,
       "starSessSub1UpViolate": starSessSub1UpViolate,
       "starSessSub1L3TunnelingState": starSessSub1L3TunnelingState,
       "starSessSub1L3TunLocalIPAddr": starSessSub1L3TunLocalIPAddr,
       "starSessSub1L3TunRemoteIPAddr": starSessSub1L3TunRemoteIPAddr,
       "starSessSub1AddrViaDHCP": starSessSub1AddrViaDHCP,
       "starSessSub1DHCPServName": starSessSub1DHCPServName,
       "starSessSub1DHCPServIPAddr": starSessSub1DHCPServIPAddr,
       "starSessSub1AccessLinkIPFrag": starSessSub1AccessLinkIPFrag,
       "starSessSub1IgnoreDFBit": starSessSub1IgnoreDFBit,
       "starSessSub1MIPGratARPMode": starSessSub1MIPGratARPMode,
       "starSessSub1ExtInlSrvrProc": starSessSub1ExtInlSrvrProc,
       "starSessSub1ExtInlSrvrIngrIPAddr": starSessSub1ExtInlSrvrIngrIPAddr,
       "starSessSub1ExtInlSrvrIngrVLANTag": starSessSub1ExtInlSrvrIngrVLANTag,
       "starSessSub1ExtInlSrvrEgrIPAddr": starSessSub1ExtInlSrvrEgrIPAddr,
       "starSessSub1ExtInlSrvrEgrVLANTag": starSessSub1ExtInlSrvrEgrVLANTag,
       "starSessSub1ExtInlSrvrVPNName": starSessSub1ExtInlSrvrVPNName,
       "starSessSub1RadAcctMode": starSessSub1RadAcctMode,
       "starSessSub1InBytesDropped": starSessSub1InBytesDropped,
       "starSessSub1OutBytesDropped": starSessSub1OutBytesDropped,
       "starSessSub1PeakBPSTx": starSessSub1PeakBPSTx,
       "starSessSub1PeakBPSRx": starSessSub1PeakBPSRx,
       "starSessSub1AveBPSTx": starSessSub1AveBPSTx,
       "starSessSub1AveBPSRx": starSessSub1AveBPSRx,
       "starSessSub1SustBPSTx": starSessSub1SustBPSTx,
       "starSessSub1SustBPSRx": starSessSub1SustBPSRx,
       "starSessSub1PeakPPSTx": starSessSub1PeakPPSTx,
       "starSessSub1PeakPPSRx": starSessSub1PeakPPSRx,
       "starSessSub1AvePPSTx": starSessSub1AvePPSTx,
       "starSessSub1AvePPSRx": starSessSub1AvePPSRx,
       "starSessSub1SustPPSTx": starSessSub1SustPPSTx,
       "starSessSub1SustPPSRx": starSessSub1SustPPSRx,
       "starSessSub1ActivePct": starSessSub1ActivePct,
       "starSessSub1IPv4BadHdr": starSessSub1IPv4BadHdr,
       "starSessSub1IPv4TtlExceeded": starSessSub1IPv4TtlExceeded,
       "starSessSub1IPv4FragSent": starSessSub1IPv4FragSent,
       "starSessSub1IPv4FragFail": starSessSub1IPv4FragFail,
       "starSessSub1IPv4InACLDrop": starSessSub1IPv4InACLDrop,
       "starSessSub1IPv4OutACLDrop": starSessSub1IPv4OutACLDrop,
       "starSessSub1IPv4InCSSDownDrop": starSessSub1IPv4InCSSDownDrop,
       "starSessSub1IPv4OutCSSDownDrop": starSessSub1IPv4OutCSSDownDrop,
       "starSessSub1IPv4OutXOFFDropPkt": starSessSub1IPv4OutXOFFDropPkt,
       "starSessSub1IPv4OutXOFFDropByte": starSessSub1IPv4OutXOFFDropByte,
       "starSessSub1IPv4SrcViol": starSessSub1IPv4SrcViol,
       "starSessSub1IPv4ProxyDNSRedir": starSessSub1IPv4ProxyDNSRedir,
       "starSessSub1IPv4SrcProxyDNSPThru": starSessSub1IPv4SrcProxyDNSPThru,
       "starSessSub1IPv4ProxyDNSDrop": starSessSub1IPv4ProxyDNSDrop,
       "starSessSub1IPv4SrcViolNoAcct": starSessSub1IPv4SrcViolNoAcct,
       "starSessSub1IPv4SrcViolIgnored": starSessSub1IPv4SrcViolIgnored,
       "starSessSub1ExtInlSrvrTxPkt": starSessSub1ExtInlSrvrTxPkt,
       "starSessSub1ExtInlSrvrRxPkt": starSessSub1ExtInlSrvrRxPkt,
       "starSessSub1IPv4ICMPDropPkt": starSessSub1IPv4ICMPDropPkt,
       "starSessSub1TunnelType": starSessSub1TunnelType,
       "starSessSub1IPSECTunDownDropPkt": starSessSub1IPSECTunDownDropPkt,
       "starSessSub1IPSECFlowID": starSessSub1IPSECFlowID,
       "starSessSub1DormancyTotal": starSessSub1DormancyTotal,
       "starSessSub1HandoffTotal": starSessSub1HandoffTotal,
       "starSessSub1AccessFlows": starSessSub1AccessFlows,
       "starSessSub1TFT": starSessSub1TFT,
       "starSessSub1NASPort": starSessSub1NASPort,
       "starSessSub1CorrID": starSessSub1CorrID,
       "starSessSub1L2TPPeerIPAddr": starSessSub1L2TPPeerIPAddr,
       "starSessSub1IPv4EarlyPDURecv": starSessSub1IPv4EarlyPDURecv,
       "starentNwReachServer": starentNwReachServer,
       "starNwReachTable": starNwReachTable,
       "starNwReachEntry": starNwReachEntry,
       "starNwReachName": starNwReachName,
       "starNwReachSrvrAddr": starNwReachSrvrAddr,
       "starentIPSEC": starentIPSEC,
       "starIPSECContextName": starIPSECContextName,
       "starIPSECGroupName": starIPSECGroupName,
       "starIPSECTunLocalIpAddr": starIPSECTunLocalIpAddr,
       "starIPSECTunRemoteIpAddr": starIPSECTunRemoteIpAddr,
       "starIPSECPolicyName": starIPSECPolicyName,
       "starIPSECDynPolicyType": starIPSECDynPolicyType,
       "starIPSECDynPolicyPayloadType": starIPSECDynPolicyPayloadType,
       "starIPSECLocalGateway": starIPSECLocalGateway,
       "starIPSECRemoteGateway": starIPSECRemoteGateway,
       "starentSIPRoute": starentSIPRoute,
       "starSIPRouteTable": starSIPRouteTable,
       "starSIPRouteEntry": starSIPRouteEntry,
       "starSIPRouteVpnID": starSIPRouteVpnID,
       "starSIPRouteVpnName": starSIPRouteVpnName,
       "starSIPRouteVmgName": starSIPRouteVmgName,
       "starSIPRouteAsName": starSIPRouteAsName,
       "starSIPRouteDestPartyNum": starSIPRouteDestPartyNum,
       "starSIPRouteReqNum": starSIPRouteReqNum,
       "starentRPServiceOption": starentRPServiceOption,
       "starRPServiceOptionTable": starRPServiceOptionTable,
       "starRPServiceOptionEntry": starRPServiceOptionEntry,
       "starRPServiceOptionNum": starRPServiceOptionNum,
       "starRPServiceOptionCalls": starRPServiceOptionCalls,
       "starentPCFStats": starentPCFStats,
       "starPCFStatTable": starPCFStatTable,
       "starPCFStatEntry": starPCFStatEntry,
       "starPCFStatVpnID": starPCFStatVpnID,
       "starPCFStatIpAddr": starPCFStatIpAddr,
       "starPCFStatVpnName": starPCFStatVpnName,
       "starPCFStatRxPkts": starPCFStatRxPkts,
       "starPCFStatTxPkts": starPCFStatTxPkts,
       "starPCFStatRxBytes": starPCFStatRxBytes,
       "starPCFStatTxBytes": starPCFStatTxBytes,
       "starPCFStatTotalSessions": starPCFStatTotalSessions,
       "starPCFStatCurrentSessions": starPCFStatCurrentSessions,
       "starPCFStatCurrentActiveSessions": starPCFStatCurrentActiveSessions,
       "starPCFStatCurrentDormantSessions": starPCFStatCurrentDormantSessions,
       "starPCFStatCurrentSIPConnected": starPCFStatCurrentSIPConnected,
       "starPCFStatCurrentMIPConnected": starPCFStatCurrentMIPConnected,
       "starPCFStatCurrentPMIPConnected": starPCFStatCurrentPMIPConnected,
       "starPCFStatCurrentL2TPLACConnected": starPCFStatCurrentL2TPLACConnected,
       "starPCFStatCurrentOtherConnected": starPCFStatCurrentOtherConnected,
       "starPCFTable": starPCFTable,
       "starPCFEntry": starPCFEntry,
       "starPCFSvcID": starPCFSvcID,
       "starPCFIpAddr": starPCFIpAddr,
       "starPCFVpnID": starPCFVpnID,
       "starPCFVpnName": starPCFVpnName,
       "starPCFServName": starPCFServName,
       "starPCFRrqRcvd": starPCFRrqRcvd,
       "starPCFRrqAccepted": starPCFRrqAccepted,
       "starPCFRrqDenied": starPCFRrqDenied,
       "starPCFRrqDiscarded": starPCFRrqDiscarded,
       "starPCFInitialRrqRcvd": starPCFInitialRrqRcvd,
       "starPCFInitialRrqAccepted": starPCFInitialRrqAccepted,
       "starPCFIntraPDSNActiveHORrqAccepted": starPCFIntraPDSNActiveHORrqAccepted,
       "starPCFIntraPDSNDormantHORrqAccepted": starPCFIntraPDSNDormantHORrqAccepted,
       "starPCFInterPDSNHORrqAccepted": starPCFInterPDSNHORrqAccepted,
       "starPCFInitialRrqDenied": starPCFInitialRrqDenied,
       "starPCFInitialRrqDiscarded": starPCFInitialRrqDiscarded,
       "starPCFRenewRrqRcvd": starPCFRenewRrqRcvd,
       "starPCFRenewRrqAccepted": starPCFRenewRrqAccepted,
       "starPCFRenewActiveRrqAccepted": starPCFRenewActiveRrqAccepted,
       "starPCFRenewDormantRrqAccepted": starPCFRenewDormantRrqAccepted,
       "starPCFRenewRrqDenied": starPCFRenewRrqDenied,
       "starPCFRenewRrqDiscarded": starPCFRenewRrqDiscarded,
       "starPCFDeregRrqRcvd": starPCFDeregRrqRcvd,
       "starPCFDeregRrqAccepted": starPCFDeregRrqAccepted,
       "starPCFDeregDormantRrqAccepted": starPCFDeregDormantRrqAccepted,
       "starPCFDeregRrqDenied": starPCFDeregRrqDenied,
       "starPCFDeregRrqDiscarded": starPCFDeregRrqDiscarded,
       "starPCFIntraPDSNActiveAnidHORrqAccepted": starPCFIntraPDSNActiveAnidHORrqAccepted,
       "starPCFIntraPDSNDormantAnidHORrqAccepted": starPCFIntraPDSNDormantAnidHORrqAccepted,
       "starPCFDeniedUnSpeReason": starPCFDeniedUnSpeReason,
       "starPCFDeniedAdmProh": starPCFDeniedAdmProh,
       "starPCFDeniedInsufResource": starPCFDeniedInsufResource,
       "starPCFDeniedMobNodeAuthFail": starPCFDeniedMobNodeAuthFail,
       "starPCFDeniedIdentMismatch": starPCFDeniedIdentMismatch,
       "starPCFDeniedPoorFormedReq": starPCFDeniedPoorFormedReq,
       "starPCFDeniedUnknownPDSNAddr": starPCFDeniedUnknownPDSNAddr,
       "starPCFDeniedRevTunnelUnavail": starPCFDeniedRevTunnelUnavail,
       "starPCFDeniedRevTunnelRequire": starPCFDeniedRevTunnelRequire,
       "starPCFDeniedUnrecogVendorId": starPCFDeniedUnrecogVendorId,
       "starPCFDeniedSessionClosed": starPCFDeniedSessionClosed,
       "starPCFDeniedBsnSessionInfoUnavail": starPCFDeniedBsnSessionInfoUnavail,
       "starPCFRegUpdTransmitted": starPCFRegUpdTransmitted,
       "starPCFRegUpdAccepted": starPCFRegUpdAccepted,
       "starPCFRegUpdateRpLifetimeExpiry": starPCFRegUpdateRpLifetimeExpiry,
       "starPCFRegUpdateUpperLayerIntiated": starPCFRegUpdateUpperLayerIntiated,
       "starPCFRegUpdateOtherReason": starPCFRegUpdateOtherReason,
       "starPCFRegUpdateHORelease": starPCFRegUpdateHORelease,
       "starPCFRegUpdateSessmgrDied": starPCFRegUpdateSessmgrDied,
       "starPCFAuxA10ConnectionsSetup": starPCFAuxA10ConnectionsSetup,
       "starPCFSessionsDenied": starPCFSessionsDenied,
       "starPCFSessionsInit": starPCFSessionsInit,
       "starPCFSessionsReneg": starPCFSessionsReneg,
       "starPCFDiscLcpRemote": starPCFDiscLcpRemote,
       "starPCFDiscRpRemote": starPCFDiscRpRemote,
       "starPCFDiscRpLocal": starPCFDiscRpLocal,
       "starPCFDiscMaxIpcpRetr": starPCFDiscMaxIpcpRetr,
       "starPCFDiscMaxIpv6cpRetr": starPCFDiscMaxIpv6cpRetr,
       "starPCFDiscMaxLcpRetr": starPCFDiscMaxLcpRetr,
       "starPCFDiscAuthFail": starPCFDiscAuthFail,
       "starPCFDiscSessSetupTimeout": starPCFDiscSessSetupTimeout,
       "starPCFDiscFlowAddFail": starPCFDiscFlowAddFail,
       "starPCFDiscInvDestContext": starPCFDiscInvDestContext,
       "starPCFDiscLcpOptFail": starPCFDiscLcpOptFail,
       "starPCFDiscIpcpOptFail": starPCFDiscIpcpOptFail,
       "starPCFDiscIpv6cpOptFail": starPCFDiscIpv6cpOptFail,
       "starPCFDiscNoRemIpAddr": starPCFDiscNoRemIpAddr,
       "starPCFDiscDetectionFail": starPCFDiscDetectionFail,
       "starPCFDiscMisc": starPCFDiscMisc,
       "starPCFCurrentSessions": starPCFCurrentSessions,
       "starPCFSessionsSetup": starPCFSessionsSetup,
       "starPCFSessionsRelsese": starPCFSessionsRelsese,
       "starPCFCurrentRevaSessions": starPCFCurrentRevaSessions,
       "starPCFRevaSessionsSetup": starPCFRevaSessionsSetup,
       "starPCFRevaSessionsRelsese": starPCFRevaSessionsRelsese,
       "starentSIPRouteServer": starentSIPRouteServer,
       "starSIPRouteServerTable": starSIPRouteServerTable,
       "starSIPRouteServerEntry": starSIPRouteServerEntry,
       "starSIPRouteServerVpnID": starSIPRouteServerVpnID,
       "starSIPRouteServerVpnName": starSIPRouteServerVpnName,
       "starSIPRouteServerVmgName": starSIPRouteServerVmgName,
       "starSIPRouteServerAsName": starSIPRouteServerAsName,
       "starSIPRouteServerIpAddr": starSIPRouteServerIpAddr,
       "starentVIMService": starentVIMService,
       "starVIMServiceTable": starVIMServiceTable,
       "starVIMServiceEntry": starVIMServiceEntry,
       "starVIMServiceVpnID": starVIMServiceVpnID,
       "starVIMServiceVpnName": starVIMServiceVpnName,
       "starVIMServiceInstanceId": starVIMServiceInstanceId,
       "starVIMServiceFMDMaxCallRate": starVIMServiceFMDMaxCallRate,
       "starVIMServiceFMDContinuousLoadCount": starVIMServiceFMDContinuousLoadCount,
       "starentGSS": starentGSS,
       "starGSSClusterName": starGSSClusterName,
       "starGSSClusterNodeName": starGSSClusterNodeName,
       "starGSSClusterRgName": starGSSClusterRgName,
       "starGSSClusterRsName": starGSSClusterRsName,
       "starGSSClusterNodeState": starGSSClusterNodeState,
       "starGSSClusterPrevOnlineNode": starGSSClusterPrevOnlineNode,
       "starGSSClusterFromNode": starGSSClusterFromNode,
       "starGSSClusterToNode": starGSSClusterToNode,
       "starGSSDiskPath": starGSSDiskPath,
       "starGSSTransportPath": starGSSTransportPath,
       "starGSSIPMPGroupName": starGSSIPMPGroupName,
       "starGSSInterfaceName": starGSSInterfaceName,
       "starentPDIFSys": starentPDIFSys,
       "starPDIFSysStatus": starPDIFSysStatus,
       "starPDIFSysNumService": starPDIFSysNumService,
       "starPDIFSysSessCurrent": starPDIFSysSessCurrent,
       "starPDIFSysSessCurrActive": starPDIFSysSessCurrActive,
       "starPDIFSysSessCurrDormant": starPDIFSysSessCurrDormant,
       "starPDIFSysSessTtlSetup": starPDIFSysSessTtlSetup,
       "starPDIFSysChildSACurrent": starPDIFSysChildSACurrent,
       "starentPDIFService": starentPDIFService,
       "starPDIFTable": starPDIFTable,
       "starPDIFEntry": starPDIFEntry,
       "starPDIFSvcID": starPDIFSvcID,
       "starPDIFVpnID": starPDIFVpnID,
       "starPDIFVpnName": starPDIFVpnName,
       "starPDIFServName": starPDIFServName,
       "starPDIFStatus": starPDIFStatus,
       "starPDIFSessCurrent": starPDIFSessCurrent,
       "starPDIFSessRemain": starPDIFSessRemain,
       "starPDIFSessCurrentActive": starPDIFSessCurrentActive,
       "starPDIFSessCurrentDormant": starPDIFSessCurrentDormant,
       "starPDIFSessCurrentIpv6Active": starPDIFSessCurrentIpv6Active,
       "starPDIFSessCurrentIpv6Dormant": starPDIFSessCurrentIpv6Dormant,
       "starPDIFSessCurrentIpv4Active": starPDIFSessCurrentIpv4Active,
       "starPDIFSessCurrentIpv4Dormant": starPDIFSessCurrentIpv4Dormant,
       "starPDIFBindIpAddress": starPDIFBindIpAddress,
       "starPDIFBindIpPort": starPDIFBindIpPort,
       "starPDIFBindSlot": starPDIFBindSlot,
       "starPDIFBindPort": starPDIFBindPort,
       "starentSGSNService": starentSGSNService,
       "starSGSNSerTable": starSGSNSerTable,
       "starSGSNSerEntry": starSGSNSerEntry,
       "starSGSNSerVpnID": starSGSNSerVpnID,
       "starSGSNSerSvcID": starSGSNSerSvcID,
       "starSessSGSNVpnName": starSessSGSNVpnName,
       "starSessSGSNServName": starSessSGSNServName,
       "starSessSGSNMcc": starSessSGSNMcc,
       "starSessSGSNMnc": starSessSGSNMnc,
       "starSessSGSNRncId": starSessSGSNRncId,
       "starSessSGSNHlrNum": starSessSGSNHlrNum,
       "starentSS7Rd": starentSS7Rd,
       "starSS7RdTable": starSS7RdTable,
       "starSS7RdEntry": starSS7RdEntry,
       "starSS7rdId": starSS7rdId,
       "starSS7Pc": starSS7Pc,
       "starSS7M3UAPsId": starSS7M3UAPsId,
       "starSS7M3UAPspId": starSS7M3UAPspId,
       "starSS7MTP3LinkSetId": starSS7MTP3LinkSetId,
       "starSS7MTP3LinkId": starSS7MTP3LinkId,
       "starSS7SCTPSelfAddr": starSS7SCTPSelfAddr,
       "starSS7SCTPPeerAddr": starSS7SCTPPeerAddr,
       "starSS7SCTPSelfPort": starSS7SCTPSelfPort,
       "starSS7SCTPPeerPort": starSS7SCTPPeerPort,
       "starSS7CongLevel": starSS7CongLevel,
       "starSS7LocalCong": starSS7LocalCong,
       "starSS7CauseString": starSS7CauseString,
       "starentSccpNw": starentSccpNw,
       "starSccpNwTable": starSccpNwTable,
       "starSccpNwEntry": starSccpNwEntry,
       "starSccpNwId": starSccpNwId,
       "starSccpSsn": starSccpSsn,
       "starentSGTPService": starentSGTPService,
       "starSGTPSerTable": starSGTPSerTable,
       "starSGTPSerEntry": starSGTPSerEntry,
       "starSGTPSerVpnID": starSGTPSerVpnID,
       "starSGTPSerSvcID": starSGTPSerSvcID,
       "starSGTPVpnName": starSGTPVpnName,
       "starSGTPServName": starSGTPServName,
       "starSGTPSelfAddr": starSGTPSelfAddr,
       "starSGTPPeerAddr": starSGTPPeerAddr,
       "starSGTPSelfPort": starSGTPSelfPort,
       "starSGTPPeerPort": starSGTPPeerPort,
       "starentIPMSServer": starentIPMSServer,
       "starIPMSServerTable": starIPMSServerTable,
       "starIPMSServerEntry": starIPMSServerEntry,
       "starIPMSServerVpnID": starIPMSServerVpnID,
       "starIPMSServerAddr": starIPMSServerAddr,
       "starIPMSServerVpnName": starIPMSServerVpnName,
       "starentCert": starentCert,
       "starCertTable": starCertTable,
       "starCertEntry": starCertEntry,
       "starCertSerialNumber": starCertSerialNumber,
       "starCertExpiryTime": starCertExpiryTime,
       "starCertIssuer": starCertIssuer,
       "starentFile": starentFile,
       "starFileTable": starFileTable,
       "starFileEntry": starFileEntry,
       "starFileName": starFileName,
       "starFileApplication": starFileApplication,
       "starentFTPServ": starentFTPServ,
       "starFTPServTable": starFTPServTable,
       "starFTPServEntry": starFTPServEntry,
       "starFTPServVpnID": starFTPServVpnID,
       "starFTPServIpAddr": starFTPServIpAddr,
       "starFTPServVpnName": starFTPServVpnName,
       "starentCSCFPeerServer": starentCSCFPeerServer,
       "starCSCFPeerServerTable": starCSCFPeerServerTable,
       "starCSCFPeerServerEntry": starCSCFPeerServerEntry,
       "starCSCFPeerServerVpnID": starCSCFPeerServerVpnID,
       "starCSCFPeerServerSvcID": starCSCFPeerServerSvcID,
       "starCSCFPeerServerVpnName": starCSCFPeerServerVpnName,
       "starCSCFPeerServerSvcName": starCSCFPeerServerSvcName,
       "starCSCFPeerServerListName": starCSCFPeerServerListName,
       "starCSCFPeerServerName": starCSCFPeerServerName,
       "starCSCFPeerServerState": starCSCFPeerServerState,
       "starentSDH": starentSDH,
       "starSDHTable": starSDHTable,
       "starSDHEntry": starSDHEntry,
       "starSDHSlot": starSDHSlot,
       "starSDHPort": starSDHPort,
       "starSDHOperState": starSDHOperState,
       "starentSDHPath": starentSDHPath,
       "starSDHPathTable": starSDHPathTable,
       "starSDHPathEntry": starSDHPathEntry,
       "starSDHPathSlot": starSDHPathSlot,
       "starSDHPathPort": starSDHPathPort,
       "starSDHPathNum": starSDHPathNum,
       "starSDHPathOperState": starSDHPathOperState,
       "starentE1Trib": starentE1Trib,
       "starE1TribTable": starE1TribTable,
       "starE1TribEntry": starE1TribEntry,
       "starE1TribSlot": starE1TribSlot,
       "starE1TribPort": starE1TribPort,
       "starE1TribPath": starE1TribPath,
       "starE1TribTug2": starE1TribTug2,
       "starE1TribTu12": starE1TribTu12,
       "starE1TribOperStateLOP": starE1TribOperStateLOP,
       "starE1TribOperState": starE1TribOperState,
       "starentGPRSLink": starentGPRSLink,
       "starGPRSLinkTable": starGPRSLinkTable,
       "starGPRSLinkEntry": starGPRSLinkEntry,
       "starGPRSNsei": starGPRSNsei,
       "starGPRSNsvci": starGPRSNsvci,
       "starGPRSBvci": starGPRSBvci,
       "starentFractE1Trib": starentFractE1Trib,
       "starFractE1TribTable": starFractE1TribTable,
       "starFractE1TribEntry": starFractE1TribEntry,
       "starFractE1TribSlot": starFractE1TribSlot,
       "starFractE1TribPort": starFractE1TribPort,
       "starFractE1TribPath": starFractE1TribPath,
       "starFractE1TribTug2": starFractE1TribTug2,
       "starFractE1TribTu12": starFractE1TribTu12,
       "starFractE1TribBundNum": starFractE1TribBundNum,
       "starFractE1TribTimeslots": starFractE1TribTimeslots,
       "starentStorage": starentStorage,
       "starStorageTable": starStorageTable,
       "starStorageEntry": starStorageEntry,
       "starStorageSlot": starStorageSlot,
       "starStorageName": starStorageName,
       "starStorageDeviceType": starStorageDeviceType,
       "starentFNGSys": starentFNGSys,
       "starFNGSysStatus": starFNGSysStatus,
       "starFNGSysNumService": starFNGSysNumService,
       "starFNGSysSessCurrent": starFNGSysSessCurrent,
       "starFNGSysSessCurrActive": starFNGSysSessCurrActive,
       "starFNGSysSessCurrDormant": starFNGSysSessCurrDormant,
       "starFNGSysSessTtlSetup": starFNGSysSessTtlSetup,
       "starFNGSysChildSACurrent": starFNGSysChildSACurrent,
       "starentFNGService": starentFNGService,
       "starFNGTable": starFNGTable,
       "starFNGEntry": starFNGEntry,
       "starFNGSvcID": starFNGSvcID,
       "starFNGVpnID": starFNGVpnID,
       "starFNGVpnName": starFNGVpnName,
       "starFNGServName": starFNGServName,
       "starFNGStatus": starFNGStatus,
       "starFNGSessCurrent": starFNGSessCurrent,
       "starFNGSessRemain": starFNGSessRemain,
       "starFNGSessCurrentActive": starFNGSessCurrentActive,
       "starFNGSessCurrentDormant": starFNGSessCurrentDormant,
       "starFNGSessCurrentIpv6Active": starFNGSessCurrentIpv6Active,
       "starFNGSessCurrentIpv6Dormant": starFNGSessCurrentIpv6Dormant,
       "starFNGSessCurrentIpv4Active": starFNGSessCurrentIpv4Active,
       "starFNGSessCurrentIpv4Dormant": starFNGSessCurrentIpv4Dormant,
       "starFNGBindIpAddress": starFNGBindIpAddress,
       "starFNGBindIpPort": starFNGBindIpPort,
       "starFNGBindSlot": starFNGBindSlot,
       "starFNGBindPort": starFNGBindPort,
       "starentPDGSys": starentPDGSys,
       "starPDGSysStatus": starPDGSysStatus,
       "starPDGSysNumService": starPDGSysNumService,
       "starPDGSysSessCurrent": starPDGSysSessCurrent,
       "starPDGSysSessCurrActive": starPDGSysSessCurrActive,
       "starPDGSysSessCurrDormant": starPDGSysSessCurrDormant,
       "starPDGSysSessTtlSetup": starPDGSysSessTtlSetup,
       "starPDGSysChildSACurrent": starPDGSysChildSACurrent,
       "starentPDGService": starentPDGService,
       "starPDGTable": starPDGTable,
       "starPDGEntry": starPDGEntry,
       "starPDGSvcID": starPDGSvcID,
       "starPDGVpnID": starPDGVpnID,
       "starPDGVpnName": starPDGVpnName,
       "starPDGServName": starPDGServName,
       "starPDGStatus": starPDGStatus,
       "starPDGSessCurrent": starPDGSessCurrent,
       "starPDGSessRemain": starPDGSessRemain,
       "starPDGSessCurrentActive": starPDGSessCurrentActive,
       "starPDGSessCurrentDormant": starPDGSessCurrentDormant,
       "starPDGSessCurrentIpv6Active": starPDGSessCurrentIpv6Active,
       "starPDGSessCurrentIpv6Dormant": starPDGSessCurrentIpv6Dormant,
       "starPDGSessCurrentIpv4Active": starPDGSessCurrentIpv4Active,
       "starPDGSessCurrentIpv4Dormant": starPDGSessCurrentIpv4Dormant,
       "starPDGBindIpAddress": starPDGBindIpAddress,
       "starPDGBindIpPort": starPDGBindIpPort,
       "starPDGBindSlot": starPDGBindSlot,
       "starPDGBindPort": starPDGBindPort,
       "starentIPPoolGroup": starentIPPoolGroup,
       "starIPPoolGroupTable": starIPPoolGroupTable,
       "starIPPoolGroupEntry": starIPPoolGroupEntry,
       "starIPPoolGroupVpnID": starIPPoolGroupVpnID,
       "starIPPoolGroupID": starIPPoolGroupID,
       "starIPPoolGroupName": starIPPoolGroupName,
       "starIPPoolGroupVpnName": starIPPoolGroupVpnName,
       "starIPPoolGroupUsed": starIPPoolGroupUsed,
       "starIPPoolGroupHold": starIPPoolGroupHold,
       "starIPPoolGroupRelease": starIPPoolGroupRelease,
       "starIPPoolGroupFree": starIPPoolGroupFree,
       "starIPPoolGroupPctUsed": starIPPoolGroupPctUsed,
       "starIPPoolGroupAvail": starIPPoolGroupAvail,
       "starentHNBGWService": starentHNBGWService,
       "starHNBGWServTable": starHNBGWServTable,
       "starHNBGWServEntry": starHNBGWServEntry,
       "starHNBGWServVpnID": starHNBGWServVpnID,
       "starHNBGWServSvcID": starHNBGWServSvcID,
       "starSessHNBGWVpnName": starSessHNBGWVpnName,
       "starSessHNBGWServName": starSessHNBGWServName,
       "starSessHNBGWCsNwName": starSessHNBGWCsNwName,
       "starSessHNBGWPsNwName": starSessHNBGWPsNwName,
       "starSessHNBGWSgsnPtCd": starSessHNBGWSgsnPtCd,
       "starSessHNBGWMscPtCd": starSessHNBGWMscPtCd,
       "starentALCAPService": starentALCAPService,
       "starALCAPServTable": starALCAPServTable,
       "starALCAPServEntry": starALCAPServEntry,
       "starALCAPSerVpnID": starALCAPSerVpnID,
       "starALCAPSerSvcID": starALCAPSerSvcID,
       "starSessALCAPVpnName": starSessALCAPVpnName,
       "starSessALCAPServName": starSessALCAPServName,
       "starSessALCAPAAL2NodeName": starSessALCAPAAL2NodeName,
       "starSessALCAPPathId": starSessALCAPPathId,
       "starentMMES1Assoc": starentMMES1Assoc,
       "starMMES1AssocTable": starMMES1AssocTable,
       "starMMES1AssocEntry": starMMES1AssocEntry,
       "starMMES1AssocSvcID": starMMES1AssocSvcID,
       "starMMES1AssocENBID": starMMES1AssocENBID,
       "starMMES1AssocVpnName": starMMES1AssocVpnName,
       "starMMES1AssocServName": starMMES1AssocServName,
       "starentMMES1Path": starentMMES1Path,
       "starMMES1PathTable": starMMES1PathTable,
       "starMMES1PathEntry": starMMES1PathEntry,
       "starMMES1PathSvcID": starMMES1PathSvcID,
       "starMMES1PathENBID": starMMES1PathENBID,
       "starMMES1PathVpnName": starMMES1PathVpnName,
       "starMMES1PathServName": starMMES1PathServName,
       "starMMES1PathSelfAddr": starMMES1PathSelfAddr,
       "starMMES1PathSelfPort": starMMES1PathSelfPort,
       "starMMES1PathPeerAddr": starMMES1PathPeerAddr,
       "starMMES1PathPeerPort": starMMES1PathPeerPort,
       "starentTraps": starentTraps,
       "starCardTempOverheat": starCardTempOverheat,
       "starCardTempOK": starCardTempOK,
       "starCardReset": starCardReset,
       "starCardRebootRequest": starCardRebootRequest,
       "starCardUp": starCardUp,
       "starCardVoltageFailure": starCardVoltageFailure,
       "starCardRemoved": starCardRemoved,
       "starCardInserted": starCardInserted,
       "starCardBootFailed": starCardBootFailed,
       "starCardFailed": starCardFailed,
       "starCardSWFailed": starCardSWFailed,
       "starCardRCCFailed": starCardRCCFailed,
       "starCardMismatch": starCardMismatch,
       "starCardFailureLEDOn": starCardFailureLEDOn,
       "starCardFailureLEDOff": starCardFailureLEDOff,
       "starCardPACMigrateStart": starCardPACMigrateStart,
       "starCardPACMigrateComplete": starCardPACMigrateComplete,
       "starCardPACMigrateFailed": starCardPACMigrateFailed,
       "starCardSPCSwitchoverStart": starCardSPCSwitchoverStart,
       "starCardSPCSwitchoverComplete": starCardSPCSwitchoverComplete,
       "starCardSPCSwitchoverFailed": starCardSPCSwitchoverFailed,
       "starFanFailed": starFanFailed,
       "starFanRemoved": starFanRemoved,
       "starFanInserted": starFanInserted,
       "starLogThreshold": starLogThreshold,
       "starCPUBusy": starCPUBusy,
       "starCPUMemoryLow": starCPUMemoryLow,
       "starCPUMemoryFailed": starCPUMemoryFailed,
       "starCPUFailed": starCPUFailed,
       "starCPUWatchDogExpired": starCPUWatchDogExpired,
       "starNPUARPPoolExhausted": starNPUARPPoolExhausted,
       "starPowerFilterUnitFailed": starPowerFilterUnitFailed,
       "starPowerFilterUnitUnavail": starPowerFilterUnitUnavail,
       "starPowerFilterUnitAvail": starPowerFilterUnitAvail,
       "starAlertsDisabled": starAlertsDisabled,
       "starAlertsEnabled": starAlertsEnabled,
       "starAAAAuthServerUnreachable": starAAAAuthServerUnreachable,
       "starAAAAuthServerReachable": starAAAAuthServerReachable,
       "starAAAAuthServerMisconfigured": starAAAAuthServerMisconfigured,
       "starAAAAccServerUnreachable": starAAAAccServerUnreachable,
       "starAAAAccServerReachable": starAAAAccServerReachable,
       "starAAAAccServerMisconfigured": starAAAAccServerMisconfigured,
       "starLogMsg": starLogMsg,
       "starPDSNServiceStart": starPDSNServiceStart,
       "starPDSNServiceStop": starPDSNServiceStop,
       "starHAServiceStart": starHAServiceStart,
       "starHAServiceStop": starHAServiceStop,
       "starFAServiceStart": starFAServiceStart,
       "starFAServiceStop": starFAServiceStop,
       "starCLISessionStart": starCLISessionStart,
       "starCLISessionEnd": starCLISessionEnd,
       "starCritTaskFailed": starCritTaskFailed,
       "starCardActive": starCardActive,
       "starLACServiceStart": starLACServiceStart,
       "starLACServiceStop": starLACServiceStop,
       "starLNSServiceStart": starLNSServiceStart,
       "starLNSServiceStop": starLNSServiceStop,
       "starCardDown": starCardDown,
       "starGGSNServiceStart": starGGSNServiceStart,
       "starGGSNServiceStop": starGGSNServiceStop,
       "starLicenseExceeded": starLicenseExceeded,
       "starSubscriberLimit": starSubscriberLimit,
       "starSessionRejectNoResource": starSessionRejectNoResource,
       "starLongDurTimerExpiry": starLongDurTimerExpiry,
       "starClosedRPServiceStart": starClosedRPServiceStart,
       "starClosedRPServiceStop": starClosedRPServiceStop,
       "starGtpcPathFailure": starGtpcPathFailure,
       "starGtpuPathFailure": starGtpuPathFailure,
       "starManagerFailure": starManagerFailure,
       "starEISServerAlive": starEISServerAlive,
       "starEISServerDead": starEISServerDead,
       "starCgfAlive": starCgfAlive,
       "starCgfDead": starCgfDead,
       "starStorageServerAlive": starStorageServerAlive,
       "starStorageServerDead": starStorageServerDead,
       "starGgsnInitiatedUpdtFailed": starGgsnInitiatedUpdtFailed,
       "starCongestion": starCongestion,
       "starCongestionClear": starCongestionClear,
       "starServiceLossPTACs": starServiceLossPTACs,
       "starServiceLossLC": starServiceLossLC,
       "starServiceLossSPIO": starServiceLossSPIO,
       "starIPSPAllAddrsFree": starIPSPAllAddrsFree,
       "starPCFUnreachable": starPCFUnreachable,
       "starDhcpAlive": starDhcpAlive,
       "starDhcpDead": starDhcpDead,
       "starNTPPeerUnreachable": starNTPPeerUnreachable,
       "starNTPSyncLost": starNTPSyncLost,
       "starL2TPTunnelDownPeerUnreachable": starL2TPTunnelDownPeerUnreachable,
       "starCardStandby": starCardStandby,
       "starLicenseUnderLimit": starLicenseUnderLimit,
       "starIPSECPriTunDown": starIPSECPriTunDown,
       "starIPSECPriTunUp": starIPSECPriTunUp,
       "starIPSECSecTunDown": starIPSECSecTunDown,
       "starIPSECSecTunUp": starIPSECSecTunUp,
       "starIPSECTunSwitchFail": starIPSECTunSwitchFail,
       "starIPSECTunSwitchComplete": starIPSECTunSwitchComplete,
       "starNwReachServerAlive": starNwReachServerAlive,
       "starNwReachServerDead": starNwReachServerDead,
       "starStorageServerUnackedGcdrVolPurge": starStorageServerUnackedGcdrVolPurge,
       "starStorageServerUnackedGcdrFileGen": starStorageServerUnackedGcdrFileGen,
       "starNTPPeerReachable": starNTPPeerReachable,
       "starNTPSyncEstablished": starNTPSyncEstablished,
       "starSIPServiceStart": starSIPServiceStart,
       "starSIPServiceStop": starSIPServiceStop,
       "starVIMServiceStart": starVIMServiceStart,
       "starVIMServiceStop": starVIMServiceStop,
       "starCHATCONFServiceStart": starCHATCONFServiceStart,
       "starCHATCONFServiceStop": starCHATCONFServiceStop,
       "starSIPRouteNomatch": starSIPRouteNomatch,
       "starL3AddrUnreachable": starL3AddrUnreachable,
       "starSWUpgradeStart": starSWUpgradeStart,
       "starSWUpgradeComplete": starSWUpgradeComplete,
       "starSWUpgradeAborted": starSWUpgradeAborted,
       "starBGPPeerSessionUp": starBGPPeerSessionUp,
       "starBGPPeerSessionDown": starBGPPeerSessionDown,
       "starSRPActive": starSRPActive,
       "starSRPStandby": starSRPStandby,
       "starBGPPeerReachable": starBGPPeerReachable,
       "starBGPPeerUnreachable": starBGPPeerUnreachable,
       "starSRPAAAReachable": starSRPAAAReachable,
       "starSRPAAAUnreachable": starSRPAAAUnreachable,
       "starSRPSwitchoverInitiated": starSRPSwitchoverInitiated,
       "starSRPCheckpointFailure": starSRPCheckpointFailure,
       "starSRPConfigOutOfSync": starSRPConfigOutOfSync,
       "starSRPConfigInSync": starSRPConfigInSync,
       "starGESwitchFailure": starGESwitchFailure,
       "starSIPRouteServerAvailable": starSIPRouteServerAvailable,
       "starSIPRouteServerUnavailable": starSIPRouteServerUnavailable,
       "starFMDMaxCallRateReached": starFMDMaxCallRateReached,
       "starFMDCallRateUnderControl": starFMDCallRateUnderControl,
       "starStorageServerCPUBusy": starStorageServerCPUBusy,
       "starStorageServerCPUNormal": starStorageServerCPUNormal,
       "starStorageServerDiskSpaceLow": starStorageServerDiskSpaceLow,
       "starStorageServerDiskSpaceOK": starStorageServerDiskSpaceOK,
       "starCardSPOFAlarm": starCardSPOFAlarm,
       "starCardSPOFClear": starCardSPOFClear,
       "starStorageServerOldGcdrPending": starStorageServerOldGcdrPending,
       "starStorageServerOldGcdrCleared": starStorageServerOldGcdrCleared,
       "starLoginFailure": starLoginFailure,
       "starIPSGServiceStart": starIPSGServiceStart,
       "starIPSGServiceStop": starIPSGServiceStop,
       "starHAUnreachable": starHAUnreachable,
       "starHAReachable": starHAReachable,
       "starASNGWServiceStart": starASNGWServiceStart,
       "starASNGWServiceStop": starASNGWServiceStop,
       "starTaskFailed": starTaskFailed,
       "starTaskRestart": starTaskRestart,
       "starCSCFServiceStart": starCSCFServiceStart,
       "starCSCFServiceStop": starCSCFServiceStop,
       "starDhcpServiceStarted": starDhcpServiceStarted,
       "starDhcpServiceStopped": starDhcpServiceStopped,
       "starContFiltDBError": starContFiltDBError,
       "starContFiltDBErrorClear": starContFiltDBErrorClear,
       "starBLDBError": starBLDBError,
       "starBLDBErrorClear": starBLDBErrorClear,
       "starContFiltDBUpgradeError": starContFiltDBUpgradeError,
       "starContFiltDBUpgradeErrorClear": starContFiltDBUpgradeErrorClear,
       "starBLDBUpgradeError": starBLDBUpgradeError,
       "starBLDBUpgradeErrorClear": starBLDBUpgradeErrorClear,
       "starIPSECDynTunUp": starIPSECDynTunUp,
       "starIPSECDynTunDown": starIPSECDynTunDown,
       "starHeartbeat": starHeartbeat,
       "starOverloadSystem": starOverloadSystem,
       "starOverloadSystemClear": starOverloadSystemClear,
       "starOverloadService": starOverloadService,
       "starOverloadServiceClear": starOverloadServiceClear,
       "starStorageServerClusterStateChange": starStorageServerClusterStateChange,
       "starStorageServerClusSwitchOver": starStorageServerClusSwitchOver,
       "starStorageServerClusPathFail": starStorageServerClusPathFail,
       "starStorageServerClusPathOK": starStorageServerClusPathOK,
       "starStorageServerClusInterCFail": starStorageServerClusInterCFail,
       "starStorageServerClusInterCOK": starStorageServerClusInterCOK,
       "starStorageServerClusIntfFail": starStorageServerClusIntfFail,
       "starStorageServerClusIntfOK": starStorageServerClusIntfOK,
       "starStorageServerMemLow": starStorageServerMemLow,
       "starStorageServerMemNormal": starStorageServerMemNormal,
       "starPDIFServiceStart": starPDIFServiceStart,
       "starPDIFServiceStop": starPDIFServiceStop,
       "starSessMgrRecoveryComplete": starSessMgrRecoveryComplete,
       "starDiameterPeerDown": starDiameterPeerDown,
       "starDiameterPeerUp": starDiameterPeerUp,
       "starDiameterServerUnreachable": starDiameterServerUnreachable,
       "starDiameterServerReachable": starDiameterServerReachable,
       "starCDRFileRemoved": starCDRFileRemoved,
       "starCSCFPeerServerReachable": starCSCFPeerServerReachable,
       "starCSCFPeerServerUnreachable": starCSCFPeerServerUnreachable,
       "starCLIConfigMode": starCLIConfigMode,
       "starSGSNServiceStart": starSGSNServiceStart,
       "starSGSNServiceStop": starSGSNServiceStop,
       "starM3UAPCUnavailable": starM3UAPCUnavailable,
       "starM3UAPCAvailable": starM3UAPCAvailable,
       "starThreshCPUUtilization": starThreshCPUUtilization,
       "starThreshClearCPUUtilization": starThreshClearCPUUtilization,
       "starThreshCPUMemory": starThreshCPUMemory,
       "starThreshClearCPUMemory": starThreshClearCPUMemory,
       "starThreshLicense": starThreshLicense,
       "starThreshClearLicense": starThreshClearLicense,
       "starThreshSubscriberTotal": starThreshSubscriberTotal,
       "starThreshClearSubscriberTotal": starThreshClearSubscriberTotal,
       "starThreshSubscriberActive": starThreshSubscriberActive,
       "starThreshClearSubscriberActive": starThreshClearSubscriberActive,
       "starThreshPortRxUtil": starThreshPortRxUtil,
       "starThreshClearPortRxUtil": starThreshClearPortRxUtil,
       "starThreshPortTxUtil": starThreshPortTxUtil,
       "starThreshClearPortTxUtil": starThreshClearPortTxUtil,
       "starThreshPortHighActivity": starThreshPortHighActivity,
       "starThreshClearPortHighActivity": starThreshClearPortHighActivity,
       "starThreshAAAAuthFail": starThreshAAAAuthFail,
       "starThreshClearAAAAuthFail": starThreshClearAAAAuthFail,
       "starThreshAAAAuthFailRate": starThreshAAAAuthFailRate,
       "starThreshClearAAAAuthFailRate": starThreshClearAAAAuthFailRate,
       "starThreshAAAAcctFail": starThreshAAAAcctFail,
       "starThreshClearAAAAcctFail": starThreshClearAAAAcctFail,
       "starThreshAAAAcctFailRate": starThreshAAAAcctFailRate,
       "starThreshClearAAAAcctFailRate": starThreshClearAAAAcctFailRate,
       "starThreshAAARetryRate": starThreshAAARetryRate,
       "starThreshClearAAARetryRate": starThreshClearAAARetryRate,
       "starThreshCallSetup": starThreshCallSetup,
       "starThreshClearCallSetup": starThreshClearCallSetup,
       "starThreshCallSetupFailure": starThreshCallSetupFailure,
       "starThreshClearCallSetupFailure": starThreshClearCallSetupFailure,
       "starThreshCallRejectNoResource": starThreshCallRejectNoResource,
       "starThreshClearCallRejectNoResource": starThreshClearCallRejectNoResource,
       "starThreshPacketsFilteredDropped": starThreshPacketsFilteredDropped,
       "starThreshClearPacketsFilteredDropped": starThreshClearPacketsFilteredDropped,
       "starThreshPacketsForwarded": starThreshPacketsForwarded,
       "starThreshClearPacketsForwarded": starThreshClearPacketsForwarded,
       "starThreshSessCPUThroughput": starThreshSessCPUThroughput,
       "starThreshClearSessCPUThroughput": starThreshClearSessCPUThroughput,
       "starThreshIPPoolAvail": starThreshIPPoolAvail,
       "starThreshClearIPPoolAvail": starThreshClearIPPoolAvail,
       "starThreshCPUUtilization10Sec": starThreshCPUUtilization10Sec,
       "starThreshClearCPUUtilization10Sec": starThreshClearCPUUtilization10Sec,
       "starThreshCPULoad": starThreshCPULoad,
       "starThreshClearCPULoad": starThreshClearCPULoad,
       "starThreshCPUMemUsage": starThreshCPUMemUsage,
       "starThreshClearCPUMemUsage": starThreshClearCPUMemUsage,
       "starThreshPDSNSessions": starThreshPDSNSessions,
       "starThreshClearPDSNSessions": starThreshClearPDSNSessions,
       "starThreshGGSNSessions": starThreshGGSNSessions,
       "starThreshClearGGSNSessions": starThreshClearGGSNSessions,
       "starThreshHASessions": starThreshHASessions,
       "starThreshClearHASessions": starThreshClearHASessions,
       "starThreshLNSSessions": starThreshLNSSessions,
       "starThreshClearLNSSessions": starThreshClearLNSSessions,
       "starThreshPerServicePDSNSessions": starThreshPerServicePDSNSessions,
       "starThreshClearPerServicePDSNSessions": starThreshClearPerServicePDSNSessions,
       "starThreshPerServiceGGSNSessions": starThreshPerServiceGGSNSessions,
       "starThreshClearPerServiceGGSNSessions": starThreshClearPerServiceGGSNSessions,
       "starThreshPerServiceHASessions": starThreshPerServiceHASessions,
       "starThreshClearPerServiceHASessions": starThreshClearPerServiceHASessions,
       "starThreshPerServiceLNSSessions": starThreshPerServiceLNSSessions,
       "starThreshClearPerServiceLNSSessions": starThreshClearPerServiceLNSSessions,
       "starThreshIPPoolHold": starThreshIPPoolHold,
       "starThreshClearIPPoolHold": starThreshClearIPPoolHold,
       "starThreshIPPoolUsed": starThreshIPPoolUsed,
       "starThreshClearIPPoolUsed": starThreshClearIPPoolUsed,
       "starThreshIPPoolRelease": starThreshIPPoolRelease,
       "starThreshClearIPPoolRelease": starThreshClearIPPoolRelease,
       "starThreshIPPoolFree": starThreshIPPoolFree,
       "starThreshClearIPPoolFree": starThreshClearIPPoolFree,
       "starThreshAAAAcctArchive": starThreshAAAAcctArchive,
       "starThreshClearAAAAcctArchive": starThreshClearAAAAcctArchive,
       "starThreshPortSpecRxUtil": starThreshPortSpecRxUtil,
       "starThreshClearPortSpecRxUtil": starThreshClearPortSpecRxUtil,
       "starThreshPortSpecTxUtil": starThreshPortSpecTxUtil,
       "starThreshClearPortSpecTxUtil": starThreshClearPortSpecTxUtil,
       "starThreshHACallSetupRate": starThreshHACallSetupRate,
       "starThreshClearHACallSetupRate": starThreshClearHACallSetupRate,
       "starThreshHASvcCallSetupRate": starThreshHASvcCallSetupRate,
       "starThreshClearHASvcCallSetupRate": starThreshClearHASvcCallSetupRate,
       "starThreshHASvcRegReplyError": starThreshHASvcRegReplyError,
       "starThreshClearHASvcRegReplyError": starThreshClearHASvcRegReplyError,
       "starThreshHASvcReregReplyError": starThreshHASvcReregReplyError,
       "starThreshClearHASvcReregReplyError": starThreshClearHASvcReregReplyError,
       "starThreshHASvcDeregReplyError": starThreshHASvcDeregReplyError,
       "starThreshClearHASvcDeregReplyError": starThreshClearHASvcDeregReplyError,
       "starThreshFASvcRegReplyError": starThreshFASvcRegReplyError,
       "starThreshClearFASvcRegReplyError": starThreshClearFASvcRegReplyError,
       "starThreshPDSNCallSetupRate": starThreshPDSNCallSetupRate,
       "starThreshClearPDSNCallSetupRate": starThreshClearPDSNCallSetupRate,
       "starThreshPDSNSvcCallSetupRate": starThreshPDSNSvcCallSetupRate,
       "starThreshClearPDSNSvcCallSetupRate": starThreshClearPDSNSvcCallSetupRate,
       "starThreshPDSNSvcA11RRPFailure": starThreshPDSNSvcA11RRPFailure,
       "starThreshClearPDSNSvcA11RRPFailure": starThreshClearPDSNSvcA11RRPFailure,
       "starThreshPDSNSvcA11RRQMsgDiscard": starThreshPDSNSvcA11RRQMsgDiscard,
       "starThreshClearPDSNSvcA11RRQMsgDiscard": starThreshClearPDSNSvcA11RRQMsgDiscard,
       "starThreshPDSNSvcA11RACMsgDiscard": starThreshPDSNSvcA11RACMsgDiscard,
       "starThreshClearPDSNSvcA11RACMsgDiscard": starThreshClearPDSNSvcA11RACMsgDiscard,
       "starThreshPDSNSvcA11PPPSendDiscard": starThreshPDSNSvcA11PPPSendDiscard,
       "starThreshClearPDSNSvcA11PPPSendDiscard": starThreshClearPDSNSvcA11PPPSendDiscard,
       "starThreshAAAMgrQueue": starThreshAAAMgrQueue,
       "starThreshClearAAAMgrQueue": starThreshClearAAAMgrQueue,
       "starThreshCPUOrbsWarn": starThreshCPUOrbsWarn,
       "starThreshClearCPUOrbsWarn": starThreshClearCPUOrbsWarn,
       "starThreshCPUOrbsCritical": starThreshCPUOrbsCritical,
       "starThreshClearCPUOrbsCritical": starThreshClearCPUOrbsCritical,
       "starThreshRPSetupFailRate": starThreshRPSetupFailRate,
       "starThreshClearRPSetupFailRate": starThreshClearRPSetupFailRate,
       "starThreshPPPSetupFailRate": starThreshPPPSetupFailRate,
       "starThreshClearPPPSetupFailRate": starThreshClearPPPSetupFailRate,
       "starThreshStorageUtilization": starThreshStorageUtilization,
       "starThreshClearStorageUtilization": starThreshClearStorageUtilization,
       "starThreshDCCAProtocolErrors": starThreshDCCAProtocolErrors,
       "starThreshClearDCCAProtocolErrors": starThreshClearDCCAProtocolErrors,
       "starThreshDCCABadAnswers": starThreshDCCABadAnswers,
       "starThreshClearDCCABadAnswers": starThreshClearDCCABadAnswers,
       "starThreshDCCAUnknownRatingGroup": starThreshDCCAUnknownRatingGroup,
       "starThreshClearDCCAUnknownRatingGroup": starThreshClearDCCAUnknownRatingGroup,
       "starThreshDCCARatingFailed": starThreshDCCARatingFailed,
       "starThreshClearDCCARatingFailed": starThreshClearDCCARatingFailed,
       "starThreshIPSECIKERequests": starThreshIPSECIKERequests,
       "starThreshClearIPSECIKERequests": starThreshClearIPSECIKERequests,
       "starThreshIPSECIKEFailures": starThreshIPSECIKEFailures,
       "starThreshClearIPSECIKEFailures": starThreshClearIPSECIKEFailures,
       "starThreshIPSECIKEFailRate": starThreshIPSECIKEFailRate,
       "starThreshClearIPSECIKEFailRate": starThreshClearIPSECIKEFailRate,
       "starThreshIPSECTunSetup": starThreshIPSECTunSetup,
       "starThreshClearIPSECTunSetup": starThreshClearIPSECTunSetup,
       "starThreshIPSECTunEstabl": starThreshIPSECTunEstabl,
       "starThreshClearIPSECTunEstabl": starThreshClearIPSECTunEstabl,
       "starThreshIPSECCallReqRej": starThreshIPSECCallReqRej,
       "starThreshClearIPSECCallReqRej": starThreshClearIPSECCallReqRej,
       "starThreshCSCFSvcRouteFailure": starThreshCSCFSvcRouteFailure,
       "starThreshClearCSCFSvcRouteFailure": starThreshClearCSCFSvcRouteFailure,
       "starThreshContFiltRating": starThreshContFiltRating,
       "starThreshClearContFiltRating": starThreshClearContFiltRating,
       "starThreshContFiltBlock": starThreshContFiltBlock,
       "starThreshClearContFiltBlock": starThreshClearContFiltBlock,
       "starThreshCDRFileSpace": starThreshCDRFileSpace,
       "starThreshClearCDRFileSpace": starThreshClearCDRFileSpace,
       "starThreshEDRFileSpace": starThreshEDRFileSpace,
       "starThreshClearEDRFileSpace": starThreshClearEDRFileSpace,
       "starThreshPDIFCurrSess": starThreshPDIFCurrSess,
       "starThreshClearPDIFCurrSess": starThreshClearPDIFCurrSess,
       "starThreshPDIFCurrActSess": starThreshPDIFCurrActSess,
       "starThreshClearPDIFCurrActSess": starThreshClearPDIFCurrActSess,
       "starThreshCDRFlowControl": starThreshCDRFlowControl,
       "starThreshClearCDRFlowControl": starThreshClearCDRFlowControl,
       "starThreshASNGWSessTimeout": starThreshASNGWSessTimeout,
       "starThreshClearASNGWSessTimeout": starThreshClearASNGWSessTimeout,
       "starThreshASNGWSessSetupTimeout": starThreshASNGWSessSetupTimeout,
       "starThreshClearASNGWSessSetupTimeout": starThreshClearASNGWSessSetupTimeout,
       "starThreshASNGWAuthFail": starThreshASNGWAuthFail,
       "starThreshClearASNGWAuthFail": starThreshClearASNGWAuthFail,
       "starThreshASNGWR6InvNai": starThreshASNGWR6InvNai,
       "starThreshClearASNGWR6InvNai": starThreshClearASNGWR6InvNai,
       "starThreshASNGWMaxEAPRetry": starThreshASNGWMaxEAPRetry,
       "starThreshClearASNGWMaxEAPRetry": starThreshClearASNGWMaxEAPRetry,
       "starThreshASNGWNWEntryDenial": starThreshASNGWNWEntryDenial,
       "starThreshClearASNGWNWEntryDenial": starThreshClearASNGWNWEntryDenial,
       "starThreshASNGWHandoffDenial": starThreshASNGWHandoffDenial,
       "starThreshClearASNGWHandoffDenial": starThreshClearASNGWHandoffDenial,
       "starThreshSGSNSessions": starThreshSGSNSessions,
       "starThreshClearSGSNSessions": starThreshClearSGSNSessions,
       "starThreshPerServiceSGSNSessions": starThreshPerServiceSGSNSessions,
       "starThreshClearPerServiceSGSNSessions": starThreshClearPerServiceSGSNSessions,
       "starThreshSGSNPdpSessions": starThreshSGSNPdpSessions,
       "starThreshClearSGSNPdpSessions": starThreshClearSGSNPdpSessions,
       "starThreshPerServiceSGSNPdpSessions": starThreshPerServiceSGSNPdpSessions,
       "starThreshClearPerServiceSGSNPdpSessions": starThreshClearPerServiceSGSNPdpSessions,
       "starThreshFWDosAttack": starThreshFWDosAttack,
       "starThreshClearFWDosAttack": starThreshClearFWDosAttack,
       "starThreshFWDropPacket": starThreshFWDropPacket,
       "starThreshClearFWDropPacket": starThreshClearFWDropPacket,
       "starThreshFWDenyRule": starThreshFWDenyRule,
       "starThreshClearFWDenyRule": starThreshClearFWDenyRule,
       "starThreshFWNoRule": starThreshFWNoRule,
       "starThreshClearFWNoRule": starThreshClearFWNoRule,
       "starThreshPHSGWSessTimeout": starThreshPHSGWSessTimeout,
       "starThreshClearPHSGWSessTimeout": starThreshClearPHSGWSessTimeout,
       "starThreshPHSGWSessSetupTimeout": starThreshPHSGWSessSetupTimeout,
       "starThreshClearPHSGWSessSetupTimeout": starThreshClearPHSGWSessSetupTimeout,
       "starThreshPHSGWAuthFail": starThreshPHSGWAuthFail,
       "starThreshClearPHSGWAuthFail": starThreshClearPHSGWAuthFail,
       "starThreshPHSGWMaxEAPRetry": starThreshPHSGWMaxEAPRetry,
       "starThreshClearPHSGWMaxEAPRetry": starThreshClearPHSGWMaxEAPRetry,
       "starThreshPHSGWNWEntryDenial": starThreshPHSGWNWEntryDenial,
       "starThreshClearPHSGWNWEntryDenial": starThreshClearPHSGWNWEntryDenial,
       "starThreshPHSGWHandoffDenial": starThreshPHSGWHandoffDenial,
       "starThreshClearPHSGWHandoffDenial": starThreshClearPHSGWHandoffDenial,
       "starThreshASNGWSessions": starThreshASNGWSessions,
       "starThreshClearASNGWSessions": starThreshClearASNGWSessions,
       "starThreshPerServiceASNGWSessions": starThreshPerServiceASNGWSessions,
       "starThreshClearPerServiceASNGWSessions": starThreshClearPerServiceASNGWSessions,
       "starThreshPHSPCSessSetupTimeout": starThreshPHSPCSessSetupTimeout,
       "starThreshClearPHSPCSessSetupTimeout": starThreshClearPHSPCSessSetupTimeout,
       "starThreshPHSPCSleepModeTimeout": starThreshPHSPCSleepModeTimeout,
       "starThreshClearPHSPCSleepModeTimeout": starThreshClearPHSPCSleepModeTimeout,
       "starThreshPHSPCSmEntryDenial": starThreshPHSPCSmEntryDenial,
       "starThreshClearPHSPCSmEntryDenial": starThreshClearPHSPCSmEntryDenial,
       "starThreshSGWSessions": starThreshSGWSessions,
       "starThreshClearSGWSessions": starThreshClearSGWSessions,
       "starThreshPGWSessions": starThreshPGWSessions,
       "starThreshClearPGWSessions": starThreshClearPGWSessions,
       "starThreshLMASessions": starThreshLMASessions,
       "starThreshClearLMASessions": starThreshClearLMASessions,
       "starThreshMAGSessions": starThreshMAGSessions,
       "starThreshClearMAGSessions": starThreshClearMAGSessions,
       "starThreshFNGCurrSess": starThreshFNGCurrSess,
       "starThreshClearFNGCurrSess": starThreshClearFNGCurrSess,
       "starThreshFNGCurrActSess": starThreshFNGCurrActSess,
       "starThreshClearFNGCurrActSess": starThreshClearFNGCurrActSess,
       "starThreshPHSGWEAPOLAuthFailure": starThreshPHSGWEAPOLAuthFailure,
       "starThreshClearPHSGWEAPOLAuthFailure": starThreshClearPHSGWEAPOLAuthFailure,
       "starThreshPHSGWMaxEAPOLRetry": starThreshPHSGWMaxEAPOLRetry,
       "starThreshClearPHSGWMaxEAPOLRetry": starThreshClearPHSGWMaxEAPOLRetry,
       "starThreshHSGWSessions": starThreshHSGWSessions,
       "starThreshClearHSGWSessions": starThreshClearHSGWSessions,
       "starThreshPDGCurrSess": starThreshPDGCurrSess,
       "starThreshClearPDGCurrSess": starThreshClearPDGCurrSess,
       "starThreshPDGCurrActSess": starThreshPDGCurrActSess,
       "starThreshClearPDGCurrActSess": starThreshClearPDGCurrActSess,
       "starThreshNATPortChunks": starThreshNATPortChunks,
       "starThreshClearNATPortChunks": starThreshClearNATPortChunks,
       "starThreshGPRSSessions": starThreshGPRSSessions,
       "starThreshClearGPRSSessions": starThreshClearGPRSSessions,
       "starThreshPerServiceGPRSSessions": starThreshPerServiceGPRSSessions,
       "starThreshClearPerServiceGPRSSessions": starThreshClearPerServiceGPRSSessions,
       "starThreshGPRSPdpSessions": starThreshGPRSPdpSessions,
       "starThreshClearGPRSPdpSessions": starThreshClearGPRSPdpSessions,
       "starThreshPerServiceGPRSPdpSessions": starThreshPerServiceGPRSPdpSessions,
       "starThreshClearPerServiceGPRSPdpSessions": starThreshClearPerServiceGPRSPdpSessions,
       "starThreshMMESessions": starThreshMMESessions,
       "starThreshClearMMESessions": starThreshClearMMESessions,
       "starThreshMMEAuthFail": starThreshMMEAuthFail,
       "starThreshClearMMEAuthFail": starThreshClearMMEAuthFail,
       "starThreshMMEAttachFail": starThreshMMEAttachFail,
       "starThreshClearMMEAttachFail": starThreshClearMMEAttachFail,
       "starThreshCSCFSvcRegRcvdRate": starThreshCSCFSvcRegRcvdRate,
       "starThreshClearCSCFSvcRegRcvdRate": starThreshClearCSCFSvcRegRcvdRate,
       "starThreshCSCFSvcTotalActiveReg": starThreshCSCFSvcTotalActiveReg,
       "starThreshClearCSCFSvcTotalActiveReg": starThreshClearCSCFSvcTotalActiveReg,
       "starThreshCSCFSvcInviteRcvdRate": starThreshCSCFSvcInviteRcvdRate,
       "starThreshClearCSCFSvcInviteRcvdRate": starThreshClearCSCFSvcInviteRcvdRate,
       "starThreshCSCFSvcTotalActiveCalls": starThreshCSCFSvcTotalActiveCalls,
       "starThreshClearCSCFSvcTotalActiveCalls": starThreshClearCSCFSvcTotalActiveCalls,
       "starThreshCSCFSvcTotalCallFailure": starThreshCSCFSvcTotalCallFailure,
       "starThreshClearCSCFSvcTotalCallFailure": starThreshClearCSCFSvcTotalCallFailure,
       "starThreshCSCFSvcErrorNoResource": starThreshCSCFSvcErrorNoResource,
       "starThreshClearCSCFSvcErrorNoResource": starThreshClearCSCFSvcErrorNoResource,
       "starThreshCSCFSvcErrorTcp": starThreshCSCFSvcErrorTcp,
       "starThreshClearCSCFSvcErrorTcp": starThreshClearCSCFSvcErrorTcp,
       "starThreshCSCFSvcErrorPresence": starThreshCSCFSvcErrorPresence,
       "starThreshClearCSCFSvcErrorPresence": starThreshClearCSCFSvcErrorPresence,
       "starThreshCSCFSvcErrorRegAuth": starThreshCSCFSvcErrorRegAuth,
       "starThreshClearCSCFSvcErrorRegAuth": starThreshClearCSCFSvcErrorRegAuth,
       "starThreshBGPRoutes": starThreshBGPRoutes,
       "starThreshClearBGPRoutes": starThreshClearBGPRoutes,
       "starThreshPCCPolicySessions": starThreshPCCPolicySessions,
       "starThreshClearPCCPolicySessions": starThreshClearPCCPolicySessions,
       "starThreshPerServicePCCPolicySessions": starThreshPerServicePCCPolicySessions,
       "starThreshClearPerServicePCCPolicySessions": starThreshClearPerServicePCCPolicySessions,
       "starThreshPCCQuotaSessions": starThreshPCCQuotaSessions,
       "starThreshClearPCCQuotaSessions": starThreshClearPCCQuotaSessions,
       "starThreshPerServicePCCQuotaSessions": starThreshPerServicePCCQuotaSessions,
       "starThreshClearPerServicePCCQuotaSessions": starThreshClearPerServicePCCQuotaSessions,
       "starThreshPCCAFSessions": starThreshPCCAFSessions,
       "starThreshClearPCCAFSessions": starThreshClearPCCAFSessions,
       "starThreshPerServicePCCAFSessions": starThreshPerServicePCCAFSessions,
       "starThreshClearPerServicePCCAFSessions": starThreshClearPerServicePCCAFSessions,
       "starThreshNPUUtilization": starThreshNPUUtilization,
       "starThreshClearNPUUtilization": starThreshClearNPUUtilization,
       "starThreshDnsLookupFailure": starThreshDnsLookupFailure,
       "starThreshClearDnsLookupFailure": starThreshClearDnsLookupFailure,
       "starThreshDiameterRetryRate": starThreshDiameterRetryRate,
       "starThreshClearDiameterRetryRate": starThreshClearDiameterRetryRate,
       "starThreshHNBGWHnbSess": starThreshHNBGWHnbSess,
       "starThreshClearHNBGWHnbSess": starThreshClearHNBGWHnbSess,
       "starThreshHNBGWUeSess": starThreshHNBGWUeSess,
       "starThreshClearHNBGWUeSess": starThreshClearHNBGWUeSess,
       "starThreshHNBGWIuSess": starThreshHNBGWIuSess,
       "starThreshClearHNBGWIuSess": starThreshClearHNBGWIuSess,
       "starThreshPerServicePDGSessions": starThreshPerServicePDGSessions,
       "starThreshClearPerServicePDGSessions": starThreshClearPerServicePDGSessions,
       "starThreshSystemCapacity": starThreshSystemCapacity,
       "starThreshClearSystemCapacity": starThreshClearSystemCapacity,
       "starThreshTpoRtoTimeout": starThreshTpoRtoTimeout,
       "starThreshClearTpoRtoTimeout": starThreshClearTpoRtoTimeout,
       "starThreshTpoDnsFailure": starThreshTpoDnsFailure,
       "starThreshClearTpoDnsFailure": starThreshClearTpoDnsFailure,
       "starThreshTpoLowCompressionGain": starThreshTpoLowCompressionGain,
       "starThreshClearTpoLowCompressionGain": starThreshClearTpoLowCompressionGain,
       "starThreshEPDGCurrSess": starThreshEPDGCurrSess,
       "starThreshClearEPDGCurrSess": starThreshClearEPDGCurrSess,
       "starThreshCardTemperatureNearPowerOffLimit": starThreshCardTemperatureNearPowerOffLimit,
       "starThreshClearCardTemperaturePowerOffLimit": starThreshClearCardTemperaturePowerOffLimit,
       "starThreshAAAAcctArchiveQueue1": starThreshAAAAcctArchiveQueue1,
       "starThreshClearAAAAcctArchiveQueue1": starThreshClearAAAAcctArchiveQueue1,
       "starThreshAAAAcctArchiveQueue2": starThreshAAAAcctArchiveQueue2,
       "starThreshClearAAAAcctArchiveQueue2": starThreshClearAAAAcctArchiveQueue2,
       "starThreshAAAAcctArchiveQueue3": starThreshAAAAcctArchiveQueue3,
       "starThreshClearAAAAcctArchiveQueue3": starThreshClearAAAAcctArchiveQueue3,
       "starThreshDnsLookupSrvFailure": starThreshDnsLookupSrvFailure,
       "starThreshClearDnsLookupSrvFailure": starThreshClearDnsLookupSrvFailure,
       "starThreshHENBGWHenbSessions": starThreshHENBGWHenbSessions,
       "starThreshClearHENBGWHenbSessions": starThreshClearHENBGWHenbSessions,
       "starThreshHENBGWUeSessions": starThreshHENBGWUeSessions,
       "starThreshClearHENBGWUeSessions": starThreshClearHENBGWUeSessions,
       "starThreshHENBGWPagingMessages": starThreshHENBGWPagingMessages,
       "starThreshClearHENBGWPagingMessages": starThreshClearHENBGWPagingMessages,
       "starThreshPerServiceSAMOGSessions": starThreshPerServiceSAMOGSessions,
       "starThreshClearPerServiceSAMOGSessions": starThreshClearPerServiceSAMOGSessions,
       "starThreshNATPktDrop": starThreshNATPktDrop,
       "starThreshClearNATPktDrop": starThreshClearNATPktDrop,
       "starThreshFabricEGQDiscards": starThreshFabricEGQDiscards,
       "starThreshClearFabricEGQDiscards": starThreshClearFabricEGQDiscards,
       "starGILANServiceStart": starGILANServiceStart,
       "starGILANServiceStop": starGILANServiceStop,
       "starThreshEPDGIKEV2SetupAttempts": starThreshEPDGIKEV2SetupAttempts,
       "starThreshClearEPDGIKEV2SetupAttempts": starThreshClearEPDGIKEV2SetupAttempts,
       "starThreshEPDGIKEV2AuthFailures": starThreshEPDGIKEV2AuthFailures,
       "starThreshClearEPDGIKEV2AuthFailures": starThreshClearEPDGIKEV2AuthFailures,
       "starThreshEPDGIKEV2SetupSuccess": starThreshEPDGIKEV2SetupSuccess,
       "starThreshClearEPDGIKEV2SetupSuccess": starThreshClearEPDGIKEV2SetupSuccess,
       "starThreshEPDGIKEV2SetupFailure": starThreshEPDGIKEV2SetupFailure,
       "starThreshClearEPDGIKEV2SetupFailure": starThreshClearEPDGIKEV2SetupFailure,
       "starThreshEPDGIKEV2SetupFailureRate": starThreshEPDGIKEV2SetupFailureRate,
       "starThreshClearEPDGIKEV2SetupFailureRate": starThreshClearEPDGIKEV2SetupFailureRate,
       "starOSPFNeighborDown": starOSPFNeighborDown,
       "starOSPFNeighborFull": starOSPFNeighborFull,
       "starM3UAPSDown": starM3UAPSDown,
       "starM3UAPSActive": starM3UAPSActive,
       "starM3UAPSPDown": starM3UAPSPDown,
       "starM3UAPSPUp": starM3UAPSPUp,
       "starSCCPSspRcvd": starSCCPSspRcvd,
       "starSCCPSspClear": starSCCPSspClear,
       "starSGSNRNCReset": starSGSNRNCReset,
       "starSGSNHLRReset": starSGSNHLRReset,
       "starSGSNGtpcPathFailure": starSGSNGtpcPathFailure,
       "starSGSNGtpcPathFailureClear": starSGSNGtpcPathFailureClear,
       "starSGSNGtpuPathFailure": starSGSNGtpuPathFailure,
       "starSGSNGtpuPathFailureClear": starSGSNGtpuPathFailureClear,
       "starMTP3LinkOutOfService": starMTP3LinkOutOfService,
       "starMTP3LinkInService": starMTP3LinkInService,
       "starMTP3LinkSetUnAvailable": starMTP3LinkSetUnAvailable,
       "starMTP3LinkSetAvailable": starMTP3LinkSetAvailable,
       "starSCTPAssociationFail": starSCTPAssociationFail,
       "starSCTPAssociationEstablished": starSCTPAssociationEstablished,
       "starSCTPPathDown": starSCTPPathDown,
       "starSCTPPathUp": starSCTPPathUp,
       "starPortDown": starPortDown,
       "starPortUp": starPortUp,
       "starBSReachable": starBSReachable,
       "starBSUnreachable": starBSUnreachable,
       "starSystemStartup": starSystemStartup,
       "starMTP3PCUnavailable": starMTP3PCUnavailable,
       "starMTP3PCAvailable": starMTP3PCAvailable,
       "starSS7PCUnavailable": starSS7PCUnavailable,
       "starSS7PCAvailable": starSS7PCAvailable,
       "starASNPCServiceStart": starASNPCServiceStart,
       "starASNPCServiceStop": starASNPCServiceStop,
       "starDiameterCapabilitiesExchangeFailure": starDiameterCapabilitiesExchangeFailure,
       "starDiameterCapabilitiesExchangeSuccess": starDiameterCapabilitiesExchangeSuccess,
       "starSRPConnDown": starSRPConnDown,
       "starSRPConnUp": starSRPConnUp,
       "starDiameterIpv6PeerDown": starDiameterIpv6PeerDown,
       "starDiameterIpv6PeerUp": starDiameterIpv6PeerUp,
       "starIPMSServerUnreachable": starIPMSServerUnreachable,
       "starIPMSServerReachable": starIPMSServerReachable,
       "starCertShortLifetime": starCertShortLifetime,
       "starCertExpired": starCertExpired,
       "starCertValid": starCertValid,
       "starFTPPushFail": starFTPPushFail,
       "starFTPServSwitch": starFTPServSwitch,
       "starSDHSectionDown": starSDHSectionDown,
       "starSDHSectionUp": starSDHSectionUp,
       "starSDHPathHopDown": starSDHPathHopDown,
       "starSDHPathHopUp": starSDHPathHopUp,
       "starSDHLopDown": starSDHLopDown,
       "starSDHLopUp": starSDHLopUp,
       "starSS7PCCongested": starSS7PCCongested,
       "starSS7PCCongestionCleared": starSS7PCCongestionCleared,
       "starPHSGWServiceStart": starPHSGWServiceStart,
       "starPHSGWServiceStop": starPHSGWServiceStop,
       "starGPRSServiceStart": starGPRSServiceStart,
       "starGPRSServiceStop": starGPRSServiceStop,
       "starGPRSNseDown": starGPRSNseDown,
       "starGPRSNseUp": starGPRSNseUp,
       "starGPRSNsvcDown": starGPRSNsvcDown,
       "starGPRSNsvcUp": starGPRSNsvcUp,
       "starGPRSBvcDown": starGPRSBvcDown,
       "starGPRSBvcUp": starGPRSBvcUp,
       "starSDHE1TribDown": starSDHE1TribDown,
       "starSDHE1TribUp": starSDHE1TribUp,
       "starSDHFractE1LMIDown": starSDHFractE1LMIDown,
       "starSDHFractE1LMIUp": starSDHFractE1LMIUp,
       "starPHSPCServiceStart": starPHSPCServiceStart,
       "starPHSPCServiceStop": starPHSPCServiceStop,
       "starM3UAPSPCongested": starM3UAPSPCongested,
       "starM3UAPSPCongestionCleared": starM3UAPSPCongestionCleared,
       "starStorageFailed": starStorageFailed,
       "starRaidFailed": starRaidFailed,
       "starRaidStarted": starRaidStarted,
       "starRaidDegraded": starRaidDegraded,
       "starRaidRecovered": starRaidRecovered,
       "starPGWServiceStart": starPGWServiceStart,
       "starPGWServiceStop": starPGWServiceStop,
       "starSGWServiceStart": starSGWServiceStart,
       "starSGWServiceStop": starSGWServiceStop,
       "starEGTPServiceStart": starEGTPServiceStart,
       "starEGTPServiceStop": starEGTPServiceStop,
       "starLMAServiceStart": starLMAServiceStart,
       "starLMAServiceStop": starLMAServiceStop,
       "starMAGServiceStart": starMAGServiceStart,
       "starMAGServiceStop": starMAGServiceStop,
       "starMMEServiceStart": starMMEServiceStart,
       "starMMEServiceStop": starMMEServiceStop,
       "starHSGWServiceStart": starHSGWServiceStart,
       "starHSGWServiceStop": starHSGWServiceStop,
       "starCPUBusyClear": starCPUBusyClear,
       "starCPUMemoryLowClear": starCPUMemoryLowClear,
       "starFNGServiceStart": starFNGServiceStart,
       "starFNGServiceStop": starFNGServiceStop,
       "starManagerRestart": starManagerRestart,
       "starConfigurationUpdate": starConfigurationUpdate,
       "starPDGServiceStart": starPDGServiceStart,
       "starPDGServiceStop": starPDGServiceStop,
       "starDynPkgLoadError": starDynPkgLoadError,
       "starDynPkgLoadErrorClear": starDynPkgLoadErrorClear,
       "starDynPkgUpgradeError": starDynPkgUpgradeError,
       "starDynPkgUpgradeErrorClear": starDynPkgUpgradeErrorClear,
       "starCSCFPeerServerUnavailable": starCSCFPeerServerUnavailable,
       "starCSCFPeerServerOutofService": starCSCFPeerServerOutofService,
       "starCSCFPeerServerInService": starCSCFPeerServerInService,
       "starServiceLossPTACsClear": starServiceLossPTACsClear,
       "starServiceLossLCClear": starServiceLossLCClear,
       "starEgtpcPathFailure": starEgtpcPathFailure,
       "starEgtpcPathFailureClear": starEgtpcPathFailureClear,
       "starCscfSessResourceCongestion": starCscfSessResourceCongestion,
       "starCscfSessResourceCongestionClear": starCscfSessResourceCongestionClear,
       "starOSPFv3NeighborDown": starOSPFv3NeighborDown,
       "starOSPFv3NeighborFull": starOSPFv3NeighborFull,
       "starServiceLossSPIOClear": starServiceLossSPIOClear,
       "starEgtpuPathFailure": starEgtpuPathFailure,
       "starEgtpuPathFailureClear": starEgtpuPathFailureClear,
       "starStorageServerCDRLoss": starStorageServerCDRLoss,
       "starHNBGWServiceStart": starHNBGWServiceStart,
       "starHNBGWServiceStop": starHNBGWServiceStop,
       "starSystemReboot": starSystemReboot,
       "starLicenseAboutToExpire": starLicenseAboutToExpire,
       "starLicenseExpired": starLicenseExpired,
       "starPCCPolicyServiceStart": starPCCPolicyServiceStart,
       "starPCCPolicyServiceStop": starPCCPolicyServiceStop,
       "starPCCQuotaServiceStart": starPCCQuotaServiceStart,
       "starPCCQuotaServiceStop": starPCCQuotaServiceStop,
       "starPCCAFServiceStart": starPCCAFServiceStart,
       "starPCCAFServiceStop": starPCCAFServiceStop,
       "starSPRServerUnreachable": starSPRServerUnreachable,
       "starSPRServerReachable": starSPRServerReachable,
       "starGSServiceStart": starGSServiceStart,
       "starGSServiceStop": starGSServiceStop,
       "starMAPServiceStart": starMAPServiceStart,
       "starMAPServiceStop": starMAPServiceStop,
       "starIUPSServiceStart": starIUPSServiceStart,
       "starIUPSServiceStop": starIUPSServiceStop,
       "starSGTPServiceStart": starSGTPServiceStart,
       "starSGTPServiceStop": starSGTPServiceStop,
       "starEPDGServiceStart": starEPDGServiceStart,
       "starEPDGServiceStop": starEPDGServiceStop,
       "starApsCommandSuccess": starApsCommandSuccess,
       "starApsCommandFailure": starApsCommandFailure,
       "starApsSwitchSuccess": starApsSwitchSuccess,
       "starApsSwitchFailure": starApsSwitchFailure,
       "starApsModeMismatch": starApsModeMismatch,
       "starApsChannelMismatch": starApsChannelMismatch,
       "starApsByteMismatch": starApsByteMismatch,
       "starApsFeProtLineFailure": starApsFeProtLineFailure,
       "starApsLossOfRedundancy": starApsLossOfRedundancy,
       "starApsLossOfRedundancyClear": starApsLossOfRedundancyClear,
       "starHNBGWSGSNRanapReset": starHNBGWSGSNRanapReset,
       "starHNBGWMSCRanapReset": starHNBGWMSCRanapReset,
       "starALCAPNodeReset": starALCAPNodeReset,
       "starALCAPPathReset": starALCAPPathReset,
       "starALCAPPathBlock": starALCAPPathBlock,
       "starALCAPPathUnBlock": starALCAPPathUnBlock,
       "starSGSServiceStart": starSGSServiceStart,
       "starSGSServiceStop": starSGSServiceStop,
       "starSgsnGnMsgDelay": starSgsnGnMsgDelay,
       "starSgsnGnMsgDelayClear": starSgsnGnMsgDelayClear,
       "starBNGServiceStart": starBNGServiceStart,
       "starBNGServiceStop": starBNGServiceStop,
       "starMMES1AssocFail": starMMES1AssocFail,
       "starMMES1AssocSetup": starMMES1AssocSetup,
       "starMVGPeerDown": starMVGPeerDown,
       "starMVGPeerUp": starMVGPeerUp,
       "starPCCNtfyIntfPeerUnreachable": starPCCNtfyIntfPeerUnreachable,
       "starPCCNtfyIntfPeerReachable": starPCCNtfyIntfPeerReachable,
       "starIPSecNodePeerDown": starIPSecNodePeerDown,
       "starIPSecNodePeerUp": starIPSecNodePeerUp,
       "starApsRemoteResponseFail": starApsRemoteResponseFail,
       "starCdrPurged": starCdrPurged,
       "starLocalUserAdded": starLocalUserAdded,
       "starLocalUserRemoved": starLocalUserRemoved,
       "starLocalUserPrivilegeChanged": starLocalUserPrivilegeChanged,
       "starOsShellAccessed": starOsShellAccessed,
       "starTestModeEntered": starTestModeEntered,
       "starLicenseFeaturesModified": starLicenseFeaturesModified,
       "starHiddenAccessEnabled": starHiddenAccessEnabled,
       "starHiddenAccessDisabled": starHiddenAccessDisabled,
       "starLawfulInterceptChanged": starLawfulInterceptChanged,
       "starMMES1PathFail": starMMES1PathFail,
       "starMMES1PathSetup": starMMES1PathSetup,
       "starSAEGWServiceStart": starSAEGWServiceStart,
       "starSAEGWServiceStop": starSAEGWServiceStop,
       "starHenbgwAccessServiceStart": starHenbgwAccessServiceStart,
       "starHenbgwAccessServiceStop": starHenbgwAccessServiceStop,
       "starHenbgwNetworkServiceStart": starHenbgwNetworkServiceStart,
       "starHenbgwNetworkServiceStop": starHenbgwNetworkServiceStop,
       "starAAAArchiveStarted": starAAAArchiveStarted,
       "starECSTotalDNSLearntIPv4Threshold": starECSTotalDNSLearntIPv4Threshold,
       "starECSTotalDNSLearntIPv4ThresholdClear": starECSTotalDNSLearntIPv4ThresholdClear,
       "starECSTotalDNSLearntIPv6Threshold": starECSTotalDNSLearntIPv6Threshold,
       "starECSTotalDNSLearntIPv6ThresholdClear": starECSTotalDNSLearntIPv6ThresholdClear,
       "starIPSecNodeIpv6PeerDown": starIPSecNodeIpv6PeerDown,
       "starIPSecNodeIpv6PeerUp": starIPSecNodeIpv6PeerUp,
       "starLAGGroupDown": starLAGGroupDown,
       "starLAGGroupUp": starLAGGroupUp,
       "starVLRAssocDown": starVLRAssocDown,
       "starVLRAssocUp": starVLRAssocUp,
       "starVLRAllAssocDown": starVLRAllAssocDown,
       "starVLRAllAssocDownClear": starVLRAllAssocDownClear,
       "starEnhancedCongestion": starEnhancedCongestion,
       "starEnhancedCongestionClear": starEnhancedCongestionClear,
       "starSGSNRNCNoResetAck": starSGSNRNCNoResetAck,
       "starThreshSAEGWSessions": starThreshSAEGWSessions,
       "starThreshClearSAEGWSessions": starThreshClearSAEGWSessions,
       "starSGSNRMCPUWarn": starSGSNRMCPUWarn,
       "starSGSNRMCPUWarnClear": starSGSNRMCPUWarnClear,
       "starSGSNRMMemWarn": starSGSNRMMemWarn,
       "starSGSNRMMemWarnClear": starSGSNRMMemWarnClear,
       "starRMCPUOver": starRMCPUOver,
       "starRMCPUOverClear": starRMCPUOverClear,
       "starSGSNRMMemOver": starSGSNRMMemOver,
       "starSGSNRMMemOverClear": starSGSNRMMemOverClear,
       "starSessMgrFlowCount": starSessMgrFlowCount,
       "starSessMgrFlowCountClear": starSessMgrFlowCountClear,
       "starStorageFound": starStorageFound,
       "starStorageNotFound": starStorageNotFound,
       "starHENBGWMMESCTPAssocDown": starHENBGWMMESCTPAssocDown,
       "starHENBGWMMESCTPAssocUp": starHENBGWMMESCTPAssocUp,
       "starHENBGWMMESCTPAllAssocDown": starHENBGWMMESCTPAllAssocDown,
       "starHENBGWMMESCTPAllAssocDownClear": starHENBGWMMESCTPAllAssocDownClear,
       "starNPDBConnectionDown": starNPDBConnectionDown,
       "starNPDBConnectionUp": starNPDBConnectionUp,
       "starNPUMissedARPFrames": starNPUMissedARPFrames,
       "starNPUMissedARPFramesClear": starNPUMissedARPFramesClear,
       "starChassisCrashListFull": starChassisCrashListFull,
       "starSessMgrCSCFServiceRecoveryComplete": starSessMgrCSCFServiceRecoveryComplete,
       "starECSreaddressServerDown": starECSreaddressServerDown,
       "starECSreaddressServerUp": starECSreaddressServerUp,
       "starCdrHDDStart": starCdrHDDStart,
       "starCdrStreamingStart": starCdrStreamingStart,
       "starCdrStreamingComplete": starCdrStreamingComplete,
       "starVLRDown": starVLRDown,
       "starVLRUp": starVLRUp,
       "starPCFReachable": starPCFReachable,
       "starLIRcvryError": starLIRcvryError,
       "starLIRcvryComplete": starLIRcvryComplete,
       "starCGWServiceStart": starCGWServiceStart,
       "starCGWServiceStop": starCGWServiceStop,
       "starMMENewConnectionsDisallowed": starMMENewConnectionsDisallowed,
       "starMMENewConnectionsAllowed": starMMENewConnectionsAllowed,
       "starSAMOGServiceStart": starSAMOGServiceStart,
       "starSAMOGServiceStop": starSAMOGServiceStop,
       "starCardSwitchoverStart": starCardSwitchoverStart,
       "starCardSwitchoverComplete": starCardSwitchoverComplete,
       "starCardSwitchoverFailed": starCardSwitchoverFailed,
       "starCardMigrateStart": starCardMigrateStart,
       "starCardMigrateComplete": starCardMigrateComplete,
       "starCardMigrateFailed": starCardMigrateFailed,
       "starTechSuppPasswdChanged": starTechSuppPasswdChanged,
       "starPMIPPathFailure": starPMIPPathFailure,
       "starPMIPPathFailureClear": starPMIPPathFailureClear,
       "starHENBGWMMESCTPAssocDestAddrDown": starHENBGWMMESCTPAssocDestAddrDown,
       "starHENBGWMMESCTPAssocDestAddrUp": starHENBGWMMESCTPAssocDestAddrUp,
       "starMRMEServiceStart": starMRMEServiceStart,
       "starMRMEServiceStop": starMRMEServiceStop,
       "starSLSServiceStart": starSLSServiceStart,
       "starSLSServiceStop": starSLSServiceStop,
       "starESMLCAssocDown": starESMLCAssocDown,
       "starESMLCAssocUp": starESMLCAssocUp,
       "starESMLCAllAssocDown": starESMLCAllAssocDown,
       "starESMLCAllAssocDownClear": starESMLCAllAssocDownClear,
       "starSBCServiceStart": starSBCServiceStart,
       "starSBCServiceStop": starSBCServiceStop,
       "starCBCAssocDown": starCBCAssocDown,
       "starCBCAssocUp": starCBCAssocUp,
       "starBFDSessUp": starBFDSessUp,
       "starBFDSessDown": starBFDSessDown,
       "starSRPSwitchoverOccured": starSRPSwitchoverOccured,
       "starHENBGWMMEOverloadStart": starHENBGWMMEOverloadStart,
       "starHENBGWMMEOverloadStop": starHENBGWMMEOverloadStop,
       "starNpudriverECCError": starNpudriverECCError,
       "starGTPCRLFOverThreshold": starGTPCRLFOverThreshold,
       "starGTPCRLFOverLimit": starGTPCRLFOverLimit,
       "starGTPCRLFOverThresholdClear": starGTPCRLFOverThresholdClear,
       "starGTPCRLFOverLimitClear": starGTPCRLFOverLimitClear,
       "starS102ServiceStart": starS102ServiceStart,
       "starS102ServiceStop": starS102ServiceStop,
       "starBGPPeerSessionIPv6Up": starBGPPeerSessionIPv6Up,
       "starBGPPeerSessionIPv6Down": starBGPPeerSessionIPv6Down,
       "starMMEEMBMSServiceStart": starMMEEMBMSServiceStart,
       "starMMEEMBMSServiceStop": starMMEEMBMSServiceStop,
       "starMCEAssocDown": starMCEAssocDown,
       "starMCEAssocUp": starMCEAssocUp,
       "starIuBcTcpConnDown": starIuBcTcpConnDown,
       "starIuBcTcpConnUp": starIuBcTcpConnUp,
       "starSessCapReached": starSessCapReached,
       "starLAGGroupDownDueToMinlink": starLAGGroupDownDueToMinlink,
       "starSerdesLanePermDown": starSerdesLanePermDown,
       "starThreshAllFramedRoutes": starThreshAllFramedRoutes,
       "starThreshAllFramedRoutesClear": starThreshAllFramedRoutesClear,
       "starThreshAllTotalRoutes": starThreshAllTotalRoutes,
       "starThreshAllTotalRoutesClear": starThreshAllTotalRoutesClear,
       "starThreshVRFFramedRoutes": starThreshVRFFramedRoutes,
       "starThreshVRFFramedRoutesClear": starThreshVRFFramedRoutesClear,
       "starThreshVRFTotalRoutes": starThreshVRFTotalRoutes,
       "starThreshVRFTotalRoutesClear": starThreshVRFTotalRoutesClear,
       "starStatFilesizeExceeded": starStatFilesizeExceeded,
       "starStatFilesizeClear": starStatFilesizeClear,
       "starentMIBConformance": starentMIBConformance,
       "starentMIBGroups": starentMIBGroups,
       "starChassisGroup": starChassisGroup,
       "starAlertGroup": starAlertGroup,
       "starAlertTrapGroup": starAlertTrapGroup,
       "starTrapGroup": starTrapGroup,
       "starTrapObsoleteGroup": starTrapObsoleteGroup,
       "starChassisObsoleteGroup": starChassisObsoleteGroup,
       "starentMIBCompliances": starentMIBCompliances,
       "starentMIBCompliance2": starentMIBCompliance2}
)
