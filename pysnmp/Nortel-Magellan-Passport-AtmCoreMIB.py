# SNMP MIB module (Nortel-Magellan-Passport-AtmCoreMIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/lextm/pysnmp.com/mibs.pysnmp.com/asn1/Nortel-Magellan-Passport-AtmCoreMIB
# Produced by pysmi-1.5.4 at Mon Oct 14 22:30:17 2024
# On host MacBook-Pro.local platform Darwin version 24.0.0 by user lextm
# Using Python version 3.12.0 (main, Nov 14 2023, 23:52:11) [Clang 15.0.0 (clang-1500.0.40.1)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint,
 ConstraintsUnion) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint",
    "ConstraintsUnion")

# Import SMI symbols from the MIBs this MIB depends on

(Counter32,
 DisplayString,
 Gauge32,
 Integer32,
 PassportCounter64,
 RowStatus,
 StorageType,
 Unsigned32) = mibBuilder.importSymbols(
    "Nortel-Magellan-Passport-StandardTextualConventionsMIB",
    "Counter32",
    "DisplayString",
    "Gauge32",
    "Integer32",
    "PassportCounter64",
    "RowStatus",
    "StorageType",
    "Unsigned32")

(AsciiString,
 AsciiStringIndex,
 Hex,
 IntegerSequence,
 Link,
 NonReplicated) = mibBuilder.importSymbols(
    "Nortel-Magellan-Passport-TextualConventionsMIB",
    "AsciiString",
    "AsciiStringIndex",
    "Hex",
    "IntegerSequence",
    "Link",
    "NonReplicated")

(components,
 passportMIBs) = mibBuilder.importSymbols(
    "Nortel-Magellan-Passport-UsefulDefinitionsMIB",
    "components",
    "passportMIBs")

(ModuleCompliance,
 NotificationGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "iso")

(DisplayString,
 TextualConvention) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "TextualConvention")


# MODULE-IDENTITY


# Types definitions


# TEXTUAL-CONVENTIONS



# MIB Managed Objects in the order of their OIDs

_AtmIf_ObjectIdentity = ObjectIdentity
atmIf = _AtmIf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114)
)
_AtmIfRowStatusTable_Object = MibTable
atmIfRowStatusTable = _AtmIfRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 1)
)
if mibBuilder.loadTexts:
    atmIfRowStatusTable.setStatus("mandatory")
_AtmIfRowStatusEntry_Object = MibTableRow
atmIfRowStatusEntry = _AtmIfRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 1, 1)
)
atmIfRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
)
if mibBuilder.loadTexts:
    atmIfRowStatusEntry.setStatus("mandatory")
_AtmIfRowStatus_Type = RowStatus
_AtmIfRowStatus_Object = MibTableColumn
atmIfRowStatus = _AtmIfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 1, 1, 1),
    _AtmIfRowStatus_Type()
)
atmIfRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfRowStatus.setStatus("mandatory")
_AtmIfComponentName_Type = DisplayString
_AtmIfComponentName_Object = MibTableColumn
atmIfComponentName = _AtmIfComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 1, 1, 2),
    _AtmIfComponentName_Type()
)
atmIfComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfComponentName.setStatus("mandatory")
_AtmIfStorageType_Type = StorageType
_AtmIfStorageType_Object = MibTableColumn
atmIfStorageType = _AtmIfStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 1, 1, 4),
    _AtmIfStorageType_Type()
)
atmIfStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfStorageType.setStatus("mandatory")


class _AtmIfIndex_Type(Integer32):
    """Custom type atmIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_AtmIfIndex_Type.__name__ = "Integer32"
_AtmIfIndex_Object = MibTableColumn
atmIfIndex = _AtmIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 1, 1, 10),
    _AtmIfIndex_Type()
)
atmIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfIndex.setStatus("mandatory")
_AtmIfConnMap_ObjectIdentity = ObjectIdentity
atmIfConnMap = _AtmIfConnMap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2)
)
_AtmIfConnMapRowStatusTable_Object = MibTable
atmIfConnMapRowStatusTable = _AtmIfConnMapRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 1)
)
if mibBuilder.loadTexts:
    atmIfConnMapRowStatusTable.setStatus("mandatory")
_AtmIfConnMapRowStatusEntry_Object = MibTableRow
atmIfConnMapRowStatusEntry = _AtmIfConnMapRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 1, 1)
)
atmIfConnMapRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfConnMapIndex"),
)
if mibBuilder.loadTexts:
    atmIfConnMapRowStatusEntry.setStatus("mandatory")
_AtmIfConnMapRowStatus_Type = RowStatus
_AtmIfConnMapRowStatus_Object = MibTableColumn
atmIfConnMapRowStatus = _AtmIfConnMapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 1, 1, 1),
    _AtmIfConnMapRowStatus_Type()
)
atmIfConnMapRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfConnMapRowStatus.setStatus("mandatory")
_AtmIfConnMapComponentName_Type = DisplayString
_AtmIfConnMapComponentName_Object = MibTableColumn
atmIfConnMapComponentName = _AtmIfConnMapComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 1, 1, 2),
    _AtmIfConnMapComponentName_Type()
)
atmIfConnMapComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfConnMapComponentName.setStatus("mandatory")
_AtmIfConnMapStorageType_Type = StorageType
_AtmIfConnMapStorageType_Object = MibTableColumn
atmIfConnMapStorageType = _AtmIfConnMapStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 1, 1, 4),
    _AtmIfConnMapStorageType_Type()
)
atmIfConnMapStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfConnMapStorageType.setStatus("mandatory")
_AtmIfConnMapIndex_Type = NonReplicated
_AtmIfConnMapIndex_Object = MibTableColumn
atmIfConnMapIndex = _AtmIfConnMapIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 1, 1, 10),
    _AtmIfConnMapIndex_Type()
)
atmIfConnMapIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfConnMapIndex.setStatus("mandatory")
_AtmIfConnMapVccProvTable_Object = MibTable
atmIfConnMapVccProvTable = _AtmIfConnMapVccProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 100)
)
if mibBuilder.loadTexts:
    atmIfConnMapVccProvTable.setStatus("obsolete")
_AtmIfConnMapVccProvEntry_Object = MibTableRow
atmIfConnMapVccProvEntry = _AtmIfConnMapVccProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 100, 1)
)
atmIfConnMapVccProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfConnMapIndex"),
)
if mibBuilder.loadTexts:
    atmIfConnMapVccProvEntry.setStatus("obsolete")


class _AtmIfConnMapNumVccsForVpiZero_Type(Unsigned32):
    """Custom type atmIfConnMapNumVccsForVpiZero based on Unsigned32"""
    defaultValue = 768

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16128),
    )


_AtmIfConnMapNumVccsForVpiZero_Type.__name__ = "Unsigned32"
_AtmIfConnMapNumVccsForVpiZero_Object = MibTableColumn
atmIfConnMapNumVccsForVpiZero = _AtmIfConnMapNumVccsForVpiZero_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 100, 1, 10),
    _AtmIfConnMapNumVccsForVpiZero_Type()
)
atmIfConnMapNumVccsForVpiZero.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    atmIfConnMapNumVccsForVpiZero.setStatus("obsolete")


class _AtmIfConnMapNumNonZeroVpisForVccs_Type(Unsigned32):
    """Custom type atmIfConnMapNumNonZeroVpisForVccs based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmIfConnMapNumNonZeroVpisForVccs_Type.__name__ = "Unsigned32"
_AtmIfConnMapNumNonZeroVpisForVccs_Object = MibTableColumn
atmIfConnMapNumNonZeroVpisForVccs = _AtmIfConnMapNumNonZeroVpisForVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 100, 1, 20),
    _AtmIfConnMapNumNonZeroVpisForVccs_Type()
)
atmIfConnMapNumNonZeroVpisForVccs.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    atmIfConnMapNumNonZeroVpisForVccs.setStatus("obsolete")


class _AtmIfConnMapFirstNonZeroVpiForVccs_Type(Unsigned32):
    """Custom type atmIfConnMapFirstNonZeroVpiForVccs based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(48, 48),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(80, 80),
        ValueRangeConstraint(96, 96),
        ValueRangeConstraint(112, 112),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(144, 144),
        ValueRangeConstraint(160, 160),
        ValueRangeConstraint(176, 176),
        ValueRangeConstraint(192, 192),
        ValueRangeConstraint(208, 208),
        ValueRangeConstraint(224, 224),
        ValueRangeConstraint(240, 240),
    )


_AtmIfConnMapFirstNonZeroVpiForVccs_Type.__name__ = "Unsigned32"
_AtmIfConnMapFirstNonZeroVpiForVccs_Object = MibTableColumn
atmIfConnMapFirstNonZeroVpiForVccs = _AtmIfConnMapFirstNonZeroVpiForVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 100, 1, 30),
    _AtmIfConnMapFirstNonZeroVpiForVccs_Type()
)
atmIfConnMapFirstNonZeroVpiForVccs.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    atmIfConnMapFirstNonZeroVpiForVccs.setStatus("obsolete")


class _AtmIfConnMapNumVccsPerNonZeroVpi_Type(Unsigned32):
    """Custom type atmIfConnMapNumVccsPerNonZeroVpi based on Unsigned32"""
    defaultValue = 64

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
        ValueRangeConstraint(512, 512),
        ValueRangeConstraint(1024, 1024),
        ValueRangeConstraint(2048, 2048),
    )


_AtmIfConnMapNumVccsPerNonZeroVpi_Type.__name__ = "Unsigned32"
_AtmIfConnMapNumVccsPerNonZeroVpi_Object = MibTableColumn
atmIfConnMapNumVccsPerNonZeroVpi = _AtmIfConnMapNumVccsPerNonZeroVpi_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 100, 1, 40),
    _AtmIfConnMapNumVccsPerNonZeroVpi_Type()
)
atmIfConnMapNumVccsPerNonZeroVpi.setMaxAccess("write-only")
if mibBuilder.loadTexts:
    atmIfConnMapNumVccsPerNonZeroVpi.setStatus("obsolete")
_AtmIfConnMapOperTable_Object = MibTable
atmIfConnMapOperTable = _AtmIfConnMapOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 110)
)
if mibBuilder.loadTexts:
    atmIfConnMapOperTable.setStatus("mandatory")
_AtmIfConnMapOperEntry_Object = MibTableRow
atmIfConnMapOperEntry = _AtmIfConnMapOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 110, 1)
)
atmIfConnMapOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfConnMapIndex"),
)
if mibBuilder.loadTexts:
    atmIfConnMapOperEntry.setStatus("mandatory")


class _AtmIfConnMapNumVccsForVpiZeroOper_Type(Unsigned32):
    """Custom type atmIfConnMapNumVccsForVpiZeroOper based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16128),
    )


_AtmIfConnMapNumVccsForVpiZeroOper_Type.__name__ = "Unsigned32"
_AtmIfConnMapNumVccsForVpiZeroOper_Object = MibTableColumn
atmIfConnMapNumVccsForVpiZeroOper = _AtmIfConnMapNumVccsForVpiZeroOper_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 110, 1, 10),
    _AtmIfConnMapNumVccsForVpiZeroOper_Type()
)
atmIfConnMapNumVccsForVpiZeroOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfConnMapNumVccsForVpiZeroOper.setStatus("mandatory")


class _AtmIfConnMapNumNonZeroVpisForVccsOper_Type(Unsigned32):
    """Custom type atmIfConnMapNumNonZeroVpisForVccsOper based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmIfConnMapNumNonZeroVpisForVccsOper_Type.__name__ = "Unsigned32"
_AtmIfConnMapNumNonZeroVpisForVccsOper_Object = MibTableColumn
atmIfConnMapNumNonZeroVpisForVccsOper = _AtmIfConnMapNumNonZeroVpisForVccsOper_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 110, 1, 20),
    _AtmIfConnMapNumNonZeroVpisForVccsOper_Type()
)
atmIfConnMapNumNonZeroVpisForVccsOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfConnMapNumNonZeroVpisForVccsOper.setStatus("mandatory")


class _AtmIfConnMapFirstNonZeroVpiForVccsOper_Type(Unsigned32):
    """Custom type atmIfConnMapFirstNonZeroVpiForVccsOper based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(48, 48),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(80, 80),
        ValueRangeConstraint(96, 96),
        ValueRangeConstraint(112, 112),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(144, 144),
        ValueRangeConstraint(160, 160),
        ValueRangeConstraint(176, 176),
        ValueRangeConstraint(192, 192),
        ValueRangeConstraint(208, 208),
        ValueRangeConstraint(224, 224),
        ValueRangeConstraint(240, 240),
    )


_AtmIfConnMapFirstNonZeroVpiForVccsOper_Type.__name__ = "Unsigned32"
_AtmIfConnMapFirstNonZeroVpiForVccsOper_Object = MibTableColumn
atmIfConnMapFirstNonZeroVpiForVccsOper = _AtmIfConnMapFirstNonZeroVpiForVccsOper_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 110, 1, 30),
    _AtmIfConnMapFirstNonZeroVpiForVccsOper_Type()
)
atmIfConnMapFirstNonZeroVpiForVccsOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfConnMapFirstNonZeroVpiForVccsOper.setStatus("mandatory")


class _AtmIfConnMapNumVccsPerNonZeroVpiOper_Type(Unsigned32):
    """Custom type atmIfConnMapNumVccsPerNonZeroVpiOper based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
        ValueRangeConstraint(512, 512),
        ValueRangeConstraint(1024, 1024),
        ValueRangeConstraint(2048, 2048),
    )


_AtmIfConnMapNumVccsPerNonZeroVpiOper_Type.__name__ = "Unsigned32"
_AtmIfConnMapNumVccsPerNonZeroVpiOper_Object = MibTableColumn
atmIfConnMapNumVccsPerNonZeroVpiOper = _AtmIfConnMapNumVccsPerNonZeroVpiOper_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 110, 1, 40),
    _AtmIfConnMapNumVccsPerNonZeroVpiOper_Type()
)
atmIfConnMapNumVccsPerNonZeroVpiOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfConnMapNumVccsPerNonZeroVpiOper.setStatus("mandatory")
_AtmIfConnMapOv_ObjectIdentity = ObjectIdentity
atmIfConnMapOv = _AtmIfConnMapOv_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 120)
)
_AtmIfConnMapOvRowStatusTable_Object = MibTable
atmIfConnMapOvRowStatusTable = _AtmIfConnMapOvRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 120, 1)
)
if mibBuilder.loadTexts:
    atmIfConnMapOvRowStatusTable.setStatus("mandatory")
_AtmIfConnMapOvRowStatusEntry_Object = MibTableRow
atmIfConnMapOvRowStatusEntry = _AtmIfConnMapOvRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 120, 1, 1)
)
atmIfConnMapOvRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfConnMapIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfConnMapOvIndex"),
)
if mibBuilder.loadTexts:
    atmIfConnMapOvRowStatusEntry.setStatus("mandatory")
_AtmIfConnMapOvRowStatus_Type = RowStatus
_AtmIfConnMapOvRowStatus_Object = MibTableColumn
atmIfConnMapOvRowStatus = _AtmIfConnMapOvRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 120, 1, 1, 1),
    _AtmIfConnMapOvRowStatus_Type()
)
atmIfConnMapOvRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfConnMapOvRowStatus.setStatus("mandatory")
_AtmIfConnMapOvComponentName_Type = DisplayString
_AtmIfConnMapOvComponentName_Object = MibTableColumn
atmIfConnMapOvComponentName = _AtmIfConnMapOvComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 120, 1, 1, 2),
    _AtmIfConnMapOvComponentName_Type()
)
atmIfConnMapOvComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfConnMapOvComponentName.setStatus("mandatory")
_AtmIfConnMapOvStorageType_Type = StorageType
_AtmIfConnMapOvStorageType_Object = MibTableColumn
atmIfConnMapOvStorageType = _AtmIfConnMapOvStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 120, 1, 1, 4),
    _AtmIfConnMapOvStorageType_Type()
)
atmIfConnMapOvStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfConnMapOvStorageType.setStatus("mandatory")
_AtmIfConnMapOvIndex_Type = NonReplicated
_AtmIfConnMapOvIndex_Object = MibTableColumn
atmIfConnMapOvIndex = _AtmIfConnMapOvIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 120, 1, 1, 10),
    _AtmIfConnMapOvIndex_Type()
)
atmIfConnMapOvIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfConnMapOvIndex.setStatus("mandatory")
_AtmIfConnMapOvProvTable_Object = MibTable
atmIfConnMapOvProvTable = _AtmIfConnMapOvProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 120, 100)
)
if mibBuilder.loadTexts:
    atmIfConnMapOvProvTable.setStatus("mandatory")
_AtmIfConnMapOvProvEntry_Object = MibTableRow
atmIfConnMapOvProvEntry = _AtmIfConnMapOvProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 120, 100, 1)
)
atmIfConnMapOvProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfConnMapIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfConnMapOvIndex"),
)
if mibBuilder.loadTexts:
    atmIfConnMapOvProvEntry.setStatus("mandatory")


class _AtmIfConnMapOvNumVccsForVpiZero_Type(Unsigned32):
    """Custom type atmIfConnMapOvNumVccsForVpiZero based on Unsigned32"""
    defaultValue = 768

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16128),
    )


_AtmIfConnMapOvNumVccsForVpiZero_Type.__name__ = "Unsigned32"
_AtmIfConnMapOvNumVccsForVpiZero_Object = MibTableColumn
atmIfConnMapOvNumVccsForVpiZero = _AtmIfConnMapOvNumVccsForVpiZero_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 120, 100, 1, 10),
    _AtmIfConnMapOvNumVccsForVpiZero_Type()
)
atmIfConnMapOvNumVccsForVpiZero.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfConnMapOvNumVccsForVpiZero.setStatus("mandatory")


class _AtmIfConnMapOvNumNonZeroVpisForVccs_Type(Unsigned32):
    """Custom type atmIfConnMapOvNumNonZeroVpisForVccs based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmIfConnMapOvNumNonZeroVpisForVccs_Type.__name__ = "Unsigned32"
_AtmIfConnMapOvNumNonZeroVpisForVccs_Object = MibTableColumn
atmIfConnMapOvNumNonZeroVpisForVccs = _AtmIfConnMapOvNumNonZeroVpisForVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 120, 100, 1, 20),
    _AtmIfConnMapOvNumNonZeroVpisForVccs_Type()
)
atmIfConnMapOvNumNonZeroVpisForVccs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfConnMapOvNumNonZeroVpisForVccs.setStatus("mandatory")


class _AtmIfConnMapOvFirstNonZeroVpiForVccs_Type(Unsigned32):
    """Custom type atmIfConnMapOvFirstNonZeroVpiForVccs based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(48, 48),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(80, 80),
        ValueRangeConstraint(96, 96),
        ValueRangeConstraint(112, 112),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(144, 144),
        ValueRangeConstraint(160, 160),
        ValueRangeConstraint(176, 176),
        ValueRangeConstraint(192, 192),
        ValueRangeConstraint(208, 208),
        ValueRangeConstraint(224, 224),
        ValueRangeConstraint(240, 240),
    )


_AtmIfConnMapOvFirstNonZeroVpiForVccs_Type.__name__ = "Unsigned32"
_AtmIfConnMapOvFirstNonZeroVpiForVccs_Object = MibTableColumn
atmIfConnMapOvFirstNonZeroVpiForVccs = _AtmIfConnMapOvFirstNonZeroVpiForVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 120, 100, 1, 30),
    _AtmIfConnMapOvFirstNonZeroVpiForVccs_Type()
)
atmIfConnMapOvFirstNonZeroVpiForVccs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfConnMapOvFirstNonZeroVpiForVccs.setStatus("mandatory")


class _AtmIfConnMapOvNumVccsPerNonZeroVpi_Type(Unsigned32):
    """Custom type atmIfConnMapOvNumVccsPerNonZeroVpi based on Unsigned32"""
    defaultValue = 64

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
        ValueRangeConstraint(512, 512),
        ValueRangeConstraint(1024, 1024),
        ValueRangeConstraint(2048, 2048),
    )


_AtmIfConnMapOvNumVccsPerNonZeroVpi_Type.__name__ = "Unsigned32"
_AtmIfConnMapOvNumVccsPerNonZeroVpi_Object = MibTableColumn
atmIfConnMapOvNumVccsPerNonZeroVpi = _AtmIfConnMapOvNumVccsPerNonZeroVpi_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 2, 120, 100, 1, 40),
    _AtmIfConnMapOvNumVccsPerNonZeroVpi_Type()
)
atmIfConnMapOvNumVccsPerNonZeroVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfConnMapOvNumVccsPerNonZeroVpi.setStatus("mandatory")
_AtmIfCA_ObjectIdentity = ObjectIdentity
atmIfCA = _AtmIfCA_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3)
)
_AtmIfCARowStatusTable_Object = MibTable
atmIfCARowStatusTable = _AtmIfCARowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 1)
)
if mibBuilder.loadTexts:
    atmIfCARowStatusTable.setStatus("mandatory")
_AtmIfCARowStatusEntry_Object = MibTableRow
atmIfCARowStatusEntry = _AtmIfCARowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 1, 1)
)
atmIfCARowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
)
if mibBuilder.loadTexts:
    atmIfCARowStatusEntry.setStatus("mandatory")
_AtmIfCARowStatus_Type = RowStatus
_AtmIfCARowStatus_Object = MibTableColumn
atmIfCARowStatus = _AtmIfCARowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 1, 1, 1),
    _AtmIfCARowStatus_Type()
)
atmIfCARowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCARowStatus.setStatus("mandatory")
_AtmIfCAComponentName_Type = DisplayString
_AtmIfCAComponentName_Object = MibTableColumn
atmIfCAComponentName = _AtmIfCAComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 1, 1, 2),
    _AtmIfCAComponentName_Type()
)
atmIfCAComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAComponentName.setStatus("mandatory")
_AtmIfCAStorageType_Type = StorageType
_AtmIfCAStorageType_Object = MibTableColumn
atmIfCAStorageType = _AtmIfCAStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 1, 1, 4),
    _AtmIfCAStorageType_Type()
)
atmIfCAStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAStorageType.setStatus("mandatory")
_AtmIfCAIndex_Type = NonReplicated
_AtmIfCAIndex_Object = MibTableColumn
atmIfCAIndex = _AtmIfCAIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 1, 1, 10),
    _AtmIfCAIndex_Type()
)
atmIfCAIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfCAIndex.setStatus("mandatory")
_AtmIfCACbr_ObjectIdentity = ObjectIdentity
atmIfCACbr = _AtmIfCACbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2)
)
_AtmIfCACbrRowStatusTable_Object = MibTable
atmIfCACbrRowStatusTable = _AtmIfCACbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 1)
)
if mibBuilder.loadTexts:
    atmIfCACbrRowStatusTable.setStatus("mandatory")
_AtmIfCACbrRowStatusEntry_Object = MibTableRow
atmIfCACbrRowStatusEntry = _AtmIfCACbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 1, 1)
)
atmIfCACbrRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCACbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfCACbrRowStatusEntry.setStatus("mandatory")
_AtmIfCACbrRowStatus_Type = RowStatus
_AtmIfCACbrRowStatus_Object = MibTableColumn
atmIfCACbrRowStatus = _AtmIfCACbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 1, 1, 1),
    _AtmIfCACbrRowStatus_Type()
)
atmIfCACbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrRowStatus.setStatus("mandatory")
_AtmIfCACbrComponentName_Type = DisplayString
_AtmIfCACbrComponentName_Object = MibTableColumn
atmIfCACbrComponentName = _AtmIfCACbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 1, 1, 2),
    _AtmIfCACbrComponentName_Type()
)
atmIfCACbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCACbrComponentName.setStatus("mandatory")
_AtmIfCACbrStorageType_Type = StorageType
_AtmIfCACbrStorageType_Object = MibTableColumn
atmIfCACbrStorageType = _AtmIfCACbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 1, 1, 4),
    _AtmIfCACbrStorageType_Type()
)
atmIfCACbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCACbrStorageType.setStatus("mandatory")


class _AtmIfCACbrIndex_Type(Integer32):
    """Custom type atmIfCACbrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_AtmIfCACbrIndex_Type.__name__ = "Integer32"
_AtmIfCACbrIndex_Object = MibTableColumn
atmIfCACbrIndex = _AtmIfCACbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 1, 1, 10),
    _AtmIfCACbrIndex_Type()
)
atmIfCACbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfCACbrIndex.setStatus("mandatory")
_AtmIfCACbrProvTable_Object = MibTable
atmIfCACbrProvTable = _AtmIfCACbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 100)
)
if mibBuilder.loadTexts:
    atmIfCACbrProvTable.setStatus("mandatory")
_AtmIfCACbrProvEntry_Object = MibTableRow
atmIfCACbrProvEntry = _AtmIfCACbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 100, 1)
)
atmIfCACbrProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCACbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfCACbrProvEntry.setStatus("mandatory")


class _AtmIfCACbrProvPool_Type(Integer32):
    """Custom type atmIfCACbrProvPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pool1", 1),
          ("pool2", 2),
          ("pool3", 3),
          ("pool4", 4),
          ("pool5", 5))
    )


_AtmIfCACbrProvPool_Type.__name__ = "Integer32"
_AtmIfCACbrProvPool_Object = MibTableColumn
atmIfCACbrProvPool = _AtmIfCACbrProvPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 100, 1, 10),
    _AtmIfCACbrProvPool_Type()
)
atmIfCACbrProvPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrProvPool.setStatus("mandatory")


class _AtmIfCACbrProvCdvt_Type(Unsigned32):
    """Custom type atmIfCACbrProvCdvt based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_AtmIfCACbrProvCdvt_Type.__name__ = "Unsigned32"
_AtmIfCACbrProvCdvt_Object = MibTableColumn
atmIfCACbrProvCdvt = _AtmIfCACbrProvCdvt_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 100, 1, 20),
    _AtmIfCACbrProvCdvt_Type()
)
atmIfCACbrProvCdvt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrProvCdvt.setStatus("mandatory")


class _AtmIfCACbrCdv_Type(Unsigned32):
    """Custom type atmIfCACbrCdv based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfCACbrCdv_Type.__name__ = "Unsigned32"
_AtmIfCACbrCdv_Object = MibTableColumn
atmIfCACbrCdv = _AtmIfCACbrCdv_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 100, 1, 30),
    _AtmIfCACbrCdv_Type()
)
atmIfCACbrCdv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrCdv.setStatus("mandatory")


class _AtmIfCACbrMaxCtd_Type(Unsigned32):
    """Custom type atmIfCACbrMaxCtd based on Unsigned32"""
    defaultValue = 1000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfCACbrMaxCtd_Type.__name__ = "Unsigned32"
_AtmIfCACbrMaxCtd_Object = MibTableColumn
atmIfCACbrMaxCtd = _AtmIfCACbrMaxCtd_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 100, 1, 40),
    _AtmIfCACbrMaxCtd_Type()
)
atmIfCACbrMaxCtd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrMaxCtd.setStatus("mandatory")


class _AtmIfCACbrProvClr_Type(Unsigned32):
    """Custom type atmIfCACbrProvClr based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_AtmIfCACbrProvClr_Type.__name__ = "Unsigned32"
_AtmIfCACbrProvClr_Object = MibTableColumn
atmIfCACbrProvClr = _AtmIfCACbrProvClr_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 100, 1, 50),
    _AtmIfCACbrProvClr_Type()
)
atmIfCACbrProvClr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrProvClr.setStatus("mandatory")


class _AtmIfCACbrTxQueueLimit_Type(Unsigned32):
    """Custom type atmIfCACbrTxQueueLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 63488),
    )


_AtmIfCACbrTxQueueLimit_Type.__name__ = "Unsigned32"
_AtmIfCACbrTxQueueLimit_Object = MibTableColumn
atmIfCACbrTxQueueLimit = _AtmIfCACbrTxQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 100, 1, 60),
    _AtmIfCACbrTxQueueLimit_Type()
)
atmIfCACbrTxQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrTxQueueLimit.setStatus("mandatory")


class _AtmIfCACbrHoldingPriority_Type(Integer32):
    """Custom type atmIfCACbrHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfCACbrHoldingPriority_Type.__name__ = "Integer32"
_AtmIfCACbrHoldingPriority_Object = MibTableColumn
atmIfCACbrHoldingPriority = _AtmIfCACbrHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 100, 1, 61),
    _AtmIfCACbrHoldingPriority_Type()
)
atmIfCACbrHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrHoldingPriority.setStatus("mandatory")


class _AtmIfCACbrSvcHoldingPriority_Type(Integer32):
    """Custom type atmIfCACbrSvcHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfCACbrSvcHoldingPriority_Type.__name__ = "Integer32"
_AtmIfCACbrSvcHoldingPriority_Object = MibTableColumn
atmIfCACbrSvcHoldingPriority = _AtmIfCACbrSvcHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 100, 1, 70),
    _AtmIfCACbrSvcHoldingPriority_Type()
)
atmIfCACbrSvcHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrSvcHoldingPriority.setStatus("obsolete")


class _AtmIfCACbrSvcMpHoldingPriority_Type(Integer32):
    """Custom type atmIfCACbrSvcMpHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfCACbrSvcMpHoldingPriority_Type.__name__ = "Integer32"
_AtmIfCACbrSvcMpHoldingPriority_Object = MibTableColumn
atmIfCACbrSvcMpHoldingPriority = _AtmIfCACbrSvcMpHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 100, 1, 71),
    _AtmIfCACbrSvcMpHoldingPriority_Type()
)
atmIfCACbrSvcMpHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrSvcMpHoldingPriority.setStatus("mandatory")


class _AtmIfCACbrMinPerVcQueueLimit_Type(Unsigned32):
    """Custom type atmIfCACbrMinPerVcQueueLimit based on Unsigned32"""
    defaultValue = 88

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 12000),
    )


_AtmIfCACbrMinPerVcQueueLimit_Type.__name__ = "Unsigned32"
_AtmIfCACbrMinPerVcQueueLimit_Object = MibTableColumn
atmIfCACbrMinPerVcQueueLimit = _AtmIfCACbrMinPerVcQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 100, 1, 80),
    _AtmIfCACbrMinPerVcQueueLimit_Type()
)
atmIfCACbrMinPerVcQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrMinPerVcQueueLimit.setStatus("mandatory")


class _AtmIfCACbrPerVcQueueLimitReferenceRate_Type(Unsigned32):
    """Custom type atmIfCACbrPerVcQueueLimitReferenceRate based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 943396),
    )


_AtmIfCACbrPerVcQueueLimitReferenceRate_Type.__name__ = "Unsigned32"
_AtmIfCACbrPerVcQueueLimitReferenceRate_Object = MibTableColumn
atmIfCACbrPerVcQueueLimitReferenceRate = _AtmIfCACbrPerVcQueueLimitReferenceRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 100, 1, 90),
    _AtmIfCACbrPerVcQueueLimitReferenceRate_Type()
)
atmIfCACbrPerVcQueueLimitReferenceRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrPerVcQueueLimitReferenceRate.setStatus("mandatory")


class _AtmIfCACbrEmissionPriority_Type(Unsigned32):
    """Custom type atmIfCACbrEmissionPriority based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_AtmIfCACbrEmissionPriority_Type.__name__ = "Unsigned32"
_AtmIfCACbrEmissionPriority_Object = MibTableColumn
atmIfCACbrEmissionPriority = _AtmIfCACbrEmissionPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 100, 1, 100),
    _AtmIfCACbrEmissionPriority_Type()
)
atmIfCACbrEmissionPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrEmissionPriority.setStatus("mandatory")


class _AtmIfCACbrTrafficShaping_Type(Integer32):
    """Custom type atmIfCACbrTrafficShaping based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 5),
          ("inverseUpc", 6))
    )


_AtmIfCACbrTrafficShaping_Type.__name__ = "Integer32"
_AtmIfCACbrTrafficShaping_Object = MibTableColumn
atmIfCACbrTrafficShaping = _AtmIfCACbrTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 100, 1, 140),
    _AtmIfCACbrTrafficShaping_Type()
)
atmIfCACbrTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrTrafficShaping.setStatus("mandatory")


class _AtmIfCACbrShapeRecoupPolicy_Type(Integer32):
    """Custom type atmIfCACbrShapeRecoupPolicy based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("maximumEfficiency", 1),
          ("minimumCdv", 0))
    )


_AtmIfCACbrShapeRecoupPolicy_Type.__name__ = "Integer32"
_AtmIfCACbrShapeRecoupPolicy_Object = MibTableColumn
atmIfCACbrShapeRecoupPolicy = _AtmIfCACbrShapeRecoupPolicy_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 100, 1, 150),
    _AtmIfCACbrShapeRecoupPolicy_Type()
)
atmIfCACbrShapeRecoupPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrShapeRecoupPolicy.setStatus("mandatory")


class _AtmIfCACbrUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfCACbrUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("perVc", 0))
    )


_AtmIfCACbrUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfCACbrUnshapedTransmitQueueing_Object = MibTableColumn
atmIfCACbrUnshapedTransmitQueueing = _AtmIfCACbrUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 100, 1, 160),
    _AtmIfCACbrUnshapedTransmitQueueing_Type()
)
atmIfCACbrUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrUnshapedTransmitQueueing.setStatus("mandatory")


class _AtmIfCACbrWeightPolicy_Type(Integer32):
    """Custom type atmIfCACbrWeightPolicy based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ecr", 3),
          ("pcr", 2),
          ("scr", 1))
    )


_AtmIfCACbrWeightPolicy_Type.__name__ = "Integer32"
_AtmIfCACbrWeightPolicy_Object = MibTableColumn
atmIfCACbrWeightPolicy = _AtmIfCACbrWeightPolicy_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 100, 1, 165),
    _AtmIfCACbrWeightPolicy_Type()
)
atmIfCACbrWeightPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrWeightPolicy.setStatus("mandatory")


class _AtmIfCACbrForceTagging_Type(Integer32):
    """Custom type atmIfCACbrForceTagging based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0))
    )


_AtmIfCACbrForceTagging_Type.__name__ = "Integer32"
_AtmIfCACbrForceTagging_Object = MibTableColumn
atmIfCACbrForceTagging = _AtmIfCACbrForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 100, 1, 169),
    _AtmIfCACbrForceTagging_Type()
)
atmIfCACbrForceTagging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrForceTagging.setStatus("mandatory")


class _AtmIfCACbrUsageParameterControl_Type(Integer32):
    """Custom type atmIfCACbrUsageParameterControl based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4))
    )


_AtmIfCACbrUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfCACbrUsageParameterControl_Object = MibTableColumn
atmIfCACbrUsageParameterControl = _AtmIfCACbrUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 100, 1, 170),
    _AtmIfCACbrUsageParameterControl_Type()
)
atmIfCACbrUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrUsageParameterControl.setStatus("mandatory")
_AtmIfCACbrOperTable_Object = MibTable
atmIfCACbrOperTable = _AtmIfCACbrOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 110)
)
if mibBuilder.loadTexts:
    atmIfCACbrOperTable.setStatus("mandatory")
_AtmIfCACbrOperEntry_Object = MibTableRow
atmIfCACbrOperEntry = _AtmIfCACbrOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 110, 1)
)
atmIfCACbrOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCACbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfCACbrOperEntry.setStatus("mandatory")


class _AtmIfCACbrEpdOffset_Type(Unsigned32):
    """Custom type atmIfCACbrEpdOffset based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 1024),
    )


_AtmIfCACbrEpdOffset_Type.__name__ = "Unsigned32"
_AtmIfCACbrEpdOffset_Object = MibTableColumn
atmIfCACbrEpdOffset = _AtmIfCACbrEpdOffset_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 2, 110, 1, 10),
    _AtmIfCACbrEpdOffset_Type()
)
atmIfCACbrEpdOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCACbrEpdOffset.setStatus("mandatory")
_AtmIfCARtVbr_ObjectIdentity = ObjectIdentity
atmIfCARtVbr = _AtmIfCARtVbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3)
)
_AtmIfCARtVbrRowStatusTable_Object = MibTable
atmIfCARtVbrRowStatusTable = _AtmIfCARtVbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 1)
)
if mibBuilder.loadTexts:
    atmIfCARtVbrRowStatusTable.setStatus("mandatory")
_AtmIfCARtVbrRowStatusEntry_Object = MibTableRow
atmIfCARtVbrRowStatusEntry = _AtmIfCARtVbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 1, 1)
)
atmIfCARtVbrRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCARtVbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfCARtVbrRowStatusEntry.setStatus("mandatory")
_AtmIfCARtVbrRowStatus_Type = RowStatus
_AtmIfCARtVbrRowStatus_Object = MibTableColumn
atmIfCARtVbrRowStatus = _AtmIfCARtVbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 1, 1, 1),
    _AtmIfCARtVbrRowStatus_Type()
)
atmIfCARtVbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCARtVbrRowStatus.setStatus("mandatory")
_AtmIfCARtVbrComponentName_Type = DisplayString
_AtmIfCARtVbrComponentName_Object = MibTableColumn
atmIfCARtVbrComponentName = _AtmIfCARtVbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 1, 1, 2),
    _AtmIfCARtVbrComponentName_Type()
)
atmIfCARtVbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCARtVbrComponentName.setStatus("mandatory")
_AtmIfCARtVbrStorageType_Type = StorageType
_AtmIfCARtVbrStorageType_Object = MibTableColumn
atmIfCARtVbrStorageType = _AtmIfCARtVbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 1, 1, 4),
    _AtmIfCARtVbrStorageType_Type()
)
atmIfCARtVbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCARtVbrStorageType.setStatus("mandatory")


class _AtmIfCARtVbrIndex_Type(Integer32):
    """Custom type atmIfCARtVbrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_AtmIfCARtVbrIndex_Type.__name__ = "Integer32"
_AtmIfCARtVbrIndex_Object = MibTableColumn
atmIfCARtVbrIndex = _AtmIfCARtVbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 1, 1, 10),
    _AtmIfCARtVbrIndex_Type()
)
atmIfCARtVbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfCARtVbrIndex.setStatus("mandatory")
_AtmIfCARtVbrProvTable_Object = MibTable
atmIfCARtVbrProvTable = _AtmIfCARtVbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 100)
)
if mibBuilder.loadTexts:
    atmIfCARtVbrProvTable.setStatus("mandatory")
_AtmIfCARtVbrProvEntry_Object = MibTableRow
atmIfCARtVbrProvEntry = _AtmIfCARtVbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 100, 1)
)
atmIfCARtVbrProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCARtVbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfCARtVbrProvEntry.setStatus("mandatory")


class _AtmIfCARtVbrPool_Type(Integer32):
    """Custom type atmIfCARtVbrPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pool1", 1),
          ("pool2", 2),
          ("pool3", 3),
          ("pool4", 4),
          ("pool5", 5))
    )


_AtmIfCARtVbrPool_Type.__name__ = "Integer32"
_AtmIfCARtVbrPool_Object = MibTableColumn
atmIfCARtVbrPool = _AtmIfCARtVbrPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 100, 1, 10),
    _AtmIfCARtVbrPool_Type()
)
atmIfCARtVbrPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCARtVbrPool.setStatus("mandatory")


class _AtmIfCARtVbrCdvt_Type(Unsigned32):
    """Custom type atmIfCARtVbrCdvt based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1200000),
    )


_AtmIfCARtVbrCdvt_Type.__name__ = "Unsigned32"
_AtmIfCARtVbrCdvt_Object = MibTableColumn
atmIfCARtVbrCdvt = _AtmIfCARtVbrCdvt_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 100, 1, 20),
    _AtmIfCARtVbrCdvt_Type()
)
atmIfCARtVbrCdvt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCARtVbrCdvt.setStatus("mandatory")


class _AtmIfCARtVbrCdv_Type(Unsigned32):
    """Custom type atmIfCARtVbrCdv based on Unsigned32"""
    defaultValue = 1268

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfCARtVbrCdv_Type.__name__ = "Unsigned32"
_AtmIfCARtVbrCdv_Object = MibTableColumn
atmIfCARtVbrCdv = _AtmIfCARtVbrCdv_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 100, 1, 30),
    _AtmIfCARtVbrCdv_Type()
)
atmIfCARtVbrCdv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCARtVbrCdv.setStatus("mandatory")


class _AtmIfCARtVbrMaxCtd_Type(Unsigned32):
    """Custom type atmIfCARtVbrMaxCtd based on Unsigned32"""
    defaultValue = 2000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfCARtVbrMaxCtd_Type.__name__ = "Unsigned32"
_AtmIfCARtVbrMaxCtd_Object = MibTableColumn
atmIfCARtVbrMaxCtd = _AtmIfCARtVbrMaxCtd_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 100, 1, 40),
    _AtmIfCARtVbrMaxCtd_Type()
)
atmIfCARtVbrMaxCtd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCARtVbrMaxCtd.setStatus("mandatory")


class _AtmIfCARtVbrCellLossRatio_Type(Unsigned32):
    """Custom type atmIfCARtVbrCellLossRatio based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_AtmIfCARtVbrCellLossRatio_Type.__name__ = "Unsigned32"
_AtmIfCARtVbrCellLossRatio_Object = MibTableColumn
atmIfCARtVbrCellLossRatio = _AtmIfCARtVbrCellLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 100, 1, 50),
    _AtmIfCARtVbrCellLossRatio_Type()
)
atmIfCARtVbrCellLossRatio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCARtVbrCellLossRatio.setStatus("mandatory")


class _AtmIfCARtVbrTxQueueLimit_Type(Unsigned32):
    """Custom type atmIfCARtVbrTxQueueLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 63488),
    )


_AtmIfCARtVbrTxQueueLimit_Type.__name__ = "Unsigned32"
_AtmIfCARtVbrTxQueueLimit_Object = MibTableColumn
atmIfCARtVbrTxQueueLimit = _AtmIfCARtVbrTxQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 100, 1, 60),
    _AtmIfCARtVbrTxQueueLimit_Type()
)
atmIfCARtVbrTxQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCARtVbrTxQueueLimit.setStatus("mandatory")


class _AtmIfCARtVbrMinPerVcQueueLimit_Type(Unsigned32):
    """Custom type atmIfCARtVbrMinPerVcQueueLimit based on Unsigned32"""
    defaultValue = 88

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 12000),
    )


_AtmIfCARtVbrMinPerVcQueueLimit_Type.__name__ = "Unsigned32"
_AtmIfCARtVbrMinPerVcQueueLimit_Object = MibTableColumn
atmIfCARtVbrMinPerVcQueueLimit = _AtmIfCARtVbrMinPerVcQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 100, 1, 70),
    _AtmIfCARtVbrMinPerVcQueueLimit_Type()
)
atmIfCARtVbrMinPerVcQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCARtVbrMinPerVcQueueLimit.setStatus("mandatory")


class _AtmIfCARtVbrPerVcQueueLimitReferenceRate_Type(Unsigned32):
    """Custom type atmIfCARtVbrPerVcQueueLimitReferenceRate based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 943396),
    )


_AtmIfCARtVbrPerVcQueueLimitReferenceRate_Type.__name__ = "Unsigned32"
_AtmIfCARtVbrPerVcQueueLimitReferenceRate_Object = MibTableColumn
atmIfCARtVbrPerVcQueueLimitReferenceRate = _AtmIfCARtVbrPerVcQueueLimitReferenceRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 100, 1, 75),
    _AtmIfCARtVbrPerVcQueueLimitReferenceRate_Type()
)
atmIfCARtVbrPerVcQueueLimitReferenceRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCARtVbrPerVcQueueLimitReferenceRate.setStatus("mandatory")


class _AtmIfCARtVbrHoldingPriority_Type(Integer32):
    """Custom type atmIfCARtVbrHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfCARtVbrHoldingPriority_Type.__name__ = "Integer32"
_AtmIfCARtVbrHoldingPriority_Object = MibTableColumn
atmIfCARtVbrHoldingPriority = _AtmIfCARtVbrHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 100, 1, 76),
    _AtmIfCARtVbrHoldingPriority_Type()
)
atmIfCARtVbrHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCARtVbrHoldingPriority.setStatus("mandatory")


class _AtmIfCARtVbrSvcHoldingPriority_Type(Integer32):
    """Custom type atmIfCARtVbrSvcHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfCARtVbrSvcHoldingPriority_Type.__name__ = "Integer32"
_AtmIfCARtVbrSvcHoldingPriority_Object = MibTableColumn
atmIfCARtVbrSvcHoldingPriority = _AtmIfCARtVbrSvcHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 100, 1, 80),
    _AtmIfCARtVbrSvcHoldingPriority_Type()
)
atmIfCARtVbrSvcHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCARtVbrSvcHoldingPriority.setStatus("obsolete")


class _AtmIfCARtVbrSvcMpHoldingPriority_Type(Integer32):
    """Custom type atmIfCARtVbrSvcMpHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfCARtVbrSvcMpHoldingPriority_Type.__name__ = "Integer32"
_AtmIfCARtVbrSvcMpHoldingPriority_Object = MibTableColumn
atmIfCARtVbrSvcMpHoldingPriority = _AtmIfCARtVbrSvcMpHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 100, 1, 81),
    _AtmIfCARtVbrSvcMpHoldingPriority_Type()
)
atmIfCARtVbrSvcMpHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCARtVbrSvcMpHoldingPriority.setStatus("mandatory")


class _AtmIfCARtVbrEmissionPriority_Type(Unsigned32):
    """Custom type atmIfCARtVbrEmissionPriority based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_AtmIfCARtVbrEmissionPriority_Type.__name__ = "Unsigned32"
_AtmIfCARtVbrEmissionPriority_Object = MibTableColumn
atmIfCARtVbrEmissionPriority = _AtmIfCARtVbrEmissionPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 100, 1, 82),
    _AtmIfCARtVbrEmissionPriority_Type()
)
atmIfCARtVbrEmissionPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCARtVbrEmissionPriority.setStatus("mandatory")


class _AtmIfCARtVbrTrafficShaping_Type(Integer32):
    """Custom type atmIfCARtVbrTrafficShaping based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 5),
          ("inverseUpc", 6))
    )


_AtmIfCARtVbrTrafficShaping_Type.__name__ = "Integer32"
_AtmIfCARtVbrTrafficShaping_Object = MibTableColumn
atmIfCARtVbrTrafficShaping = _AtmIfCARtVbrTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 100, 1, 86),
    _AtmIfCARtVbrTrafficShaping_Type()
)
atmIfCARtVbrTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCARtVbrTrafficShaping.setStatus("mandatory")


class _AtmIfCARtVbrShapeRecoupPolicy_Type(Integer32):
    """Custom type atmIfCARtVbrShapeRecoupPolicy based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("maximumEfficiency", 1),
          ("minimumCdv", 0))
    )


_AtmIfCARtVbrShapeRecoupPolicy_Type.__name__ = "Integer32"
_AtmIfCARtVbrShapeRecoupPolicy_Object = MibTableColumn
atmIfCARtVbrShapeRecoupPolicy = _AtmIfCARtVbrShapeRecoupPolicy_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 100, 1, 87),
    _AtmIfCARtVbrShapeRecoupPolicy_Type()
)
atmIfCARtVbrShapeRecoupPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCARtVbrShapeRecoupPolicy.setStatus("mandatory")


class _AtmIfCARtVbrUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfCARtVbrUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("autoConfigure", 2),
          ("common", 1),
          ("perVc", 0))
    )


_AtmIfCARtVbrUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfCARtVbrUnshapedTransmitQueueing_Object = MibTableColumn
atmIfCARtVbrUnshapedTransmitQueueing = _AtmIfCARtVbrUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 100, 1, 88),
    _AtmIfCARtVbrUnshapedTransmitQueueing_Type()
)
atmIfCARtVbrUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCARtVbrUnshapedTransmitQueueing.setStatus("mandatory")


class _AtmIfCARtVbrUsageParameterControl_Type(Integer32):
    """Custom type atmIfCARtVbrUsageParameterControl based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4))
    )


_AtmIfCARtVbrUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfCARtVbrUsageParameterControl_Object = MibTableColumn
atmIfCARtVbrUsageParameterControl = _AtmIfCARtVbrUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 100, 1, 89),
    _AtmIfCARtVbrUsageParameterControl_Type()
)
atmIfCARtVbrUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCARtVbrUsageParameterControl.setStatus("mandatory")


class _AtmIfCARtVbrWeightPolicy_Type(Integer32):
    """Custom type atmIfCARtVbrWeightPolicy based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ecr", 3),
          ("pcr", 2),
          ("scr", 1))
    )


_AtmIfCARtVbrWeightPolicy_Type.__name__ = "Integer32"
_AtmIfCARtVbrWeightPolicy_Object = MibTableColumn
atmIfCARtVbrWeightPolicy = _AtmIfCARtVbrWeightPolicy_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 100, 1, 90),
    _AtmIfCARtVbrWeightPolicy_Type()
)
atmIfCARtVbrWeightPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCARtVbrWeightPolicy.setStatus("mandatory")


class _AtmIfCARtVbrForceTagging_Type(Integer32):
    """Custom type atmIfCARtVbrForceTagging based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0))
    )


_AtmIfCARtVbrForceTagging_Type.__name__ = "Integer32"
_AtmIfCARtVbrForceTagging_Object = MibTableColumn
atmIfCARtVbrForceTagging = _AtmIfCARtVbrForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 100, 1, 91),
    _AtmIfCARtVbrForceTagging_Type()
)
atmIfCARtVbrForceTagging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCARtVbrForceTagging.setStatus("mandatory")
_AtmIfCARtVbrOperTable_Object = MibTable
atmIfCARtVbrOperTable = _AtmIfCARtVbrOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 110)
)
if mibBuilder.loadTexts:
    atmIfCARtVbrOperTable.setStatus("mandatory")
_AtmIfCARtVbrOperEntry_Object = MibTableRow
atmIfCARtVbrOperEntry = _AtmIfCARtVbrOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 110, 1)
)
atmIfCARtVbrOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCARtVbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfCARtVbrOperEntry.setStatus("mandatory")


class _AtmIfCARtVbrOpUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfCARtVbrOpUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("perVc", 0))
    )


_AtmIfCARtVbrOpUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfCARtVbrOpUnshapedTransmitQueueing_Object = MibTableColumn
atmIfCARtVbrOpUnshapedTransmitQueueing = _AtmIfCARtVbrOpUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 110, 1, 10),
    _AtmIfCARtVbrOpUnshapedTransmitQueueing_Type()
)
atmIfCARtVbrOpUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCARtVbrOpUnshapedTransmitQueueing.setStatus("mandatory")


class _AtmIfCARtVbrEpdOffset_Type(Unsigned32):
    """Custom type atmIfCARtVbrEpdOffset based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 1024),
    )


_AtmIfCARtVbrEpdOffset_Type.__name__ = "Unsigned32"
_AtmIfCARtVbrEpdOffset_Object = MibTableColumn
atmIfCARtVbrEpdOffset = _AtmIfCARtVbrEpdOffset_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 3, 110, 1, 11),
    _AtmIfCARtVbrEpdOffset_Type()
)
atmIfCARtVbrEpdOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCARtVbrEpdOffset.setStatus("mandatory")
_AtmIfCANrtVbr_ObjectIdentity = ObjectIdentity
atmIfCANrtVbr = _AtmIfCANrtVbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4)
)
_AtmIfCANrtVbrRowStatusTable_Object = MibTable
atmIfCANrtVbrRowStatusTable = _AtmIfCANrtVbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 1)
)
if mibBuilder.loadTexts:
    atmIfCANrtVbrRowStatusTable.setStatus("mandatory")
_AtmIfCANrtVbrRowStatusEntry_Object = MibTableRow
atmIfCANrtVbrRowStatusEntry = _AtmIfCANrtVbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 1, 1)
)
atmIfCANrtVbrRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCANrtVbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfCANrtVbrRowStatusEntry.setStatus("mandatory")
_AtmIfCANrtVbrRowStatus_Type = RowStatus
_AtmIfCANrtVbrRowStatus_Object = MibTableColumn
atmIfCANrtVbrRowStatus = _AtmIfCANrtVbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 1, 1, 1),
    _AtmIfCANrtVbrRowStatus_Type()
)
atmIfCANrtVbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCANrtVbrRowStatus.setStatus("mandatory")
_AtmIfCANrtVbrComponentName_Type = DisplayString
_AtmIfCANrtVbrComponentName_Object = MibTableColumn
atmIfCANrtVbrComponentName = _AtmIfCANrtVbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 1, 1, 2),
    _AtmIfCANrtVbrComponentName_Type()
)
atmIfCANrtVbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCANrtVbrComponentName.setStatus("mandatory")
_AtmIfCANrtVbrStorageType_Type = StorageType
_AtmIfCANrtVbrStorageType_Object = MibTableColumn
atmIfCANrtVbrStorageType = _AtmIfCANrtVbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 1, 1, 4),
    _AtmIfCANrtVbrStorageType_Type()
)
atmIfCANrtVbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCANrtVbrStorageType.setStatus("mandatory")


class _AtmIfCANrtVbrIndex_Type(Integer32):
    """Custom type atmIfCANrtVbrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_AtmIfCANrtVbrIndex_Type.__name__ = "Integer32"
_AtmIfCANrtVbrIndex_Object = MibTableColumn
atmIfCANrtVbrIndex = _AtmIfCANrtVbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 1, 1, 10),
    _AtmIfCANrtVbrIndex_Type()
)
atmIfCANrtVbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfCANrtVbrIndex.setStatus("mandatory")
_AtmIfCANrtVbrProvTable_Object = MibTable
atmIfCANrtVbrProvTable = _AtmIfCANrtVbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 100)
)
if mibBuilder.loadTexts:
    atmIfCANrtVbrProvTable.setStatus("mandatory")
_AtmIfCANrtVbrProvEntry_Object = MibTableRow
atmIfCANrtVbrProvEntry = _AtmIfCANrtVbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 100, 1)
)
atmIfCANrtVbrProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCANrtVbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfCANrtVbrProvEntry.setStatus("mandatory")


class _AtmIfCANrtVbrPool_Type(Integer32):
    """Custom type atmIfCANrtVbrPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pool1", 1),
          ("pool2", 2),
          ("pool3", 3),
          ("pool4", 4),
          ("pool5", 5))
    )


_AtmIfCANrtVbrPool_Type.__name__ = "Integer32"
_AtmIfCANrtVbrPool_Object = MibTableColumn
atmIfCANrtVbrPool = _AtmIfCANrtVbrPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 100, 1, 1),
    _AtmIfCANrtVbrPool_Type()
)
atmIfCANrtVbrPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCANrtVbrPool.setStatus("mandatory")


class _AtmIfCANrtVbrCdvt_Type(Unsigned32):
    """Custom type atmIfCANrtVbrCdvt based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1200000),
    )


_AtmIfCANrtVbrCdvt_Type.__name__ = "Unsigned32"
_AtmIfCANrtVbrCdvt_Object = MibTableColumn
atmIfCANrtVbrCdvt = _AtmIfCANrtVbrCdvt_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 100, 1, 2),
    _AtmIfCANrtVbrCdvt_Type()
)
atmIfCANrtVbrCdvt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCANrtVbrCdvt.setStatus("mandatory")


class _AtmIfCANrtVbrCellLossRatio_Type(Unsigned32):
    """Custom type atmIfCANrtVbrCellLossRatio based on Unsigned32"""
    defaultValue = 7

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_AtmIfCANrtVbrCellLossRatio_Type.__name__ = "Unsigned32"
_AtmIfCANrtVbrCellLossRatio_Object = MibTableColumn
atmIfCANrtVbrCellLossRatio = _AtmIfCANrtVbrCellLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 100, 1, 3),
    _AtmIfCANrtVbrCellLossRatio_Type()
)
atmIfCANrtVbrCellLossRatio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCANrtVbrCellLossRatio.setStatus("mandatory")


class _AtmIfCANrtVbrTxQueueLimit_Type(Unsigned32):
    """Custom type atmIfCANrtVbrTxQueueLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 63488),
    )


_AtmIfCANrtVbrTxQueueLimit_Type.__name__ = "Unsigned32"
_AtmIfCANrtVbrTxQueueLimit_Object = MibTableColumn
atmIfCANrtVbrTxQueueLimit = _AtmIfCANrtVbrTxQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 100, 1, 4),
    _AtmIfCANrtVbrTxQueueLimit_Type()
)
atmIfCANrtVbrTxQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCANrtVbrTxQueueLimit.setStatus("mandatory")


class _AtmIfCANrtVbrSvcHoldingPriority_Type(Integer32):
    """Custom type atmIfCANrtVbrSvcHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfCANrtVbrSvcHoldingPriority_Type.__name__ = "Integer32"
_AtmIfCANrtVbrSvcHoldingPriority_Object = MibTableColumn
atmIfCANrtVbrSvcHoldingPriority = _AtmIfCANrtVbrSvcHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 100, 1, 5),
    _AtmIfCANrtVbrSvcHoldingPriority_Type()
)
atmIfCANrtVbrSvcHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCANrtVbrSvcHoldingPriority.setStatus("obsolete")


class _AtmIfCANrtVbrMinPerVcQueueLimit_Type(Unsigned32):
    """Custom type atmIfCANrtVbrMinPerVcQueueLimit based on Unsigned32"""
    defaultValue = 88

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 30000),
    )


_AtmIfCANrtVbrMinPerVcQueueLimit_Type.__name__ = "Unsigned32"
_AtmIfCANrtVbrMinPerVcQueueLimit_Object = MibTableColumn
atmIfCANrtVbrMinPerVcQueueLimit = _AtmIfCANrtVbrMinPerVcQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 100, 1, 6),
    _AtmIfCANrtVbrMinPerVcQueueLimit_Type()
)
atmIfCANrtVbrMinPerVcQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCANrtVbrMinPerVcQueueLimit.setStatus("mandatory")


class _AtmIfCANrtVbrPerVcQueueLimitReferenceRate_Type(Unsigned32):
    """Custom type atmIfCANrtVbrPerVcQueueLimitReferenceRate based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 943396),
    )


_AtmIfCANrtVbrPerVcQueueLimitReferenceRate_Type.__name__ = "Unsigned32"
_AtmIfCANrtVbrPerVcQueueLimitReferenceRate_Object = MibTableColumn
atmIfCANrtVbrPerVcQueueLimitReferenceRate = _AtmIfCANrtVbrPerVcQueueLimitReferenceRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 100, 1, 7),
    _AtmIfCANrtVbrPerVcQueueLimitReferenceRate_Type()
)
atmIfCANrtVbrPerVcQueueLimitReferenceRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCANrtVbrPerVcQueueLimitReferenceRate.setStatus("mandatory")


class _AtmIfCANrtVbrSvcMpHoldingPriority_Type(Integer32):
    """Custom type atmIfCANrtVbrSvcMpHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfCANrtVbrSvcMpHoldingPriority_Type.__name__ = "Integer32"
_AtmIfCANrtVbrSvcMpHoldingPriority_Object = MibTableColumn
atmIfCANrtVbrSvcMpHoldingPriority = _AtmIfCANrtVbrSvcMpHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 100, 1, 8),
    _AtmIfCANrtVbrSvcMpHoldingPriority_Type()
)
atmIfCANrtVbrSvcMpHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCANrtVbrSvcMpHoldingPriority.setStatus("mandatory")


class _AtmIfCANrtVbrHoldingPriority_Type(Integer32):
    """Custom type atmIfCANrtVbrHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfCANrtVbrHoldingPriority_Type.__name__ = "Integer32"
_AtmIfCANrtVbrHoldingPriority_Object = MibTableColumn
atmIfCANrtVbrHoldingPriority = _AtmIfCANrtVbrHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 100, 1, 9),
    _AtmIfCANrtVbrHoldingPriority_Type()
)
atmIfCANrtVbrHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCANrtVbrHoldingPriority.setStatus("mandatory")


class _AtmIfCANrtVbrEmissionPriority_Type(Unsigned32):
    """Custom type atmIfCANrtVbrEmissionPriority based on Unsigned32"""
    defaultValue = 4

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_AtmIfCANrtVbrEmissionPriority_Type.__name__ = "Unsigned32"
_AtmIfCANrtVbrEmissionPriority_Object = MibTableColumn
atmIfCANrtVbrEmissionPriority = _AtmIfCANrtVbrEmissionPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 100, 1, 10),
    _AtmIfCANrtVbrEmissionPriority_Type()
)
atmIfCANrtVbrEmissionPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCANrtVbrEmissionPriority.setStatus("mandatory")


class _AtmIfCANrtVbrTrafficShaping_Type(Integer32):
    """Custom type atmIfCANrtVbrTrafficShaping based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 5),
          ("inverseUpc", 6))
    )


_AtmIfCANrtVbrTrafficShaping_Type.__name__ = "Integer32"
_AtmIfCANrtVbrTrafficShaping_Object = MibTableColumn
atmIfCANrtVbrTrafficShaping = _AtmIfCANrtVbrTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 100, 1, 14),
    _AtmIfCANrtVbrTrafficShaping_Type()
)
atmIfCANrtVbrTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCANrtVbrTrafficShaping.setStatus("mandatory")


class _AtmIfCANrtVbrShapeRecoupPolicy_Type(Integer32):
    """Custom type atmIfCANrtVbrShapeRecoupPolicy based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("maximumEfficiency", 1),
          ("minimumCdv", 0))
    )


_AtmIfCANrtVbrShapeRecoupPolicy_Type.__name__ = "Integer32"
_AtmIfCANrtVbrShapeRecoupPolicy_Object = MibTableColumn
atmIfCANrtVbrShapeRecoupPolicy = _AtmIfCANrtVbrShapeRecoupPolicy_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 100, 1, 15),
    _AtmIfCANrtVbrShapeRecoupPolicy_Type()
)
atmIfCANrtVbrShapeRecoupPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCANrtVbrShapeRecoupPolicy.setStatus("mandatory")


class _AtmIfCANrtVbrUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfCANrtVbrUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("autoConfigure", 2),
          ("common", 1),
          ("perVc", 0))
    )


_AtmIfCANrtVbrUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfCANrtVbrUnshapedTransmitQueueing_Object = MibTableColumn
atmIfCANrtVbrUnshapedTransmitQueueing = _AtmIfCANrtVbrUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 100, 1, 16),
    _AtmIfCANrtVbrUnshapedTransmitQueueing_Type()
)
atmIfCANrtVbrUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCANrtVbrUnshapedTransmitQueueing.setStatus("mandatory")


class _AtmIfCANrtVbrUsageParameterControl_Type(Integer32):
    """Custom type atmIfCANrtVbrUsageParameterControl based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4))
    )


_AtmIfCANrtVbrUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfCANrtVbrUsageParameterControl_Object = MibTableColumn
atmIfCANrtVbrUsageParameterControl = _AtmIfCANrtVbrUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 100, 1, 17),
    _AtmIfCANrtVbrUsageParameterControl_Type()
)
atmIfCANrtVbrUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCANrtVbrUsageParameterControl.setStatus("mandatory")


class _AtmIfCANrtVbrWeightPolicy_Type(Integer32):
    """Custom type atmIfCANrtVbrWeightPolicy based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ecr", 3),
          ("pcr", 2),
          ("scr", 1))
    )


_AtmIfCANrtVbrWeightPolicy_Type.__name__ = "Integer32"
_AtmIfCANrtVbrWeightPolicy_Object = MibTableColumn
atmIfCANrtVbrWeightPolicy = _AtmIfCANrtVbrWeightPolicy_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 100, 1, 18),
    _AtmIfCANrtVbrWeightPolicy_Type()
)
atmIfCANrtVbrWeightPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCANrtVbrWeightPolicy.setStatus("mandatory")


class _AtmIfCANrtVbrForceTagging_Type(Integer32):
    """Custom type atmIfCANrtVbrForceTagging based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0))
    )


_AtmIfCANrtVbrForceTagging_Type.__name__ = "Integer32"
_AtmIfCANrtVbrForceTagging_Object = MibTableColumn
atmIfCANrtVbrForceTagging = _AtmIfCANrtVbrForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 100, 1, 19),
    _AtmIfCANrtVbrForceTagging_Type()
)
atmIfCANrtVbrForceTagging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCANrtVbrForceTagging.setStatus("mandatory")
_AtmIfCANrtVbrOperTable_Object = MibTable
atmIfCANrtVbrOperTable = _AtmIfCANrtVbrOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 110)
)
if mibBuilder.loadTexts:
    atmIfCANrtVbrOperTable.setStatus("mandatory")
_AtmIfCANrtVbrOperEntry_Object = MibTableRow
atmIfCANrtVbrOperEntry = _AtmIfCANrtVbrOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 110, 1)
)
atmIfCANrtVbrOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCANrtVbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfCANrtVbrOperEntry.setStatus("mandatory")


class _AtmIfCANrtVbrOpUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfCANrtVbrOpUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("perVc", 0))
    )


_AtmIfCANrtVbrOpUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfCANrtVbrOpUnshapedTransmitQueueing_Object = MibTableColumn
atmIfCANrtVbrOpUnshapedTransmitQueueing = _AtmIfCANrtVbrOpUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 110, 1, 10),
    _AtmIfCANrtVbrOpUnshapedTransmitQueueing_Type()
)
atmIfCANrtVbrOpUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCANrtVbrOpUnshapedTransmitQueueing.setStatus("mandatory")


class _AtmIfCANrtVbrEpdOffset_Type(Unsigned32):
    """Custom type atmIfCANrtVbrEpdOffset based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 1024),
    )


_AtmIfCANrtVbrEpdOffset_Type.__name__ = "Unsigned32"
_AtmIfCANrtVbrEpdOffset_Object = MibTableColumn
atmIfCANrtVbrEpdOffset = _AtmIfCANrtVbrEpdOffset_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 4, 110, 1, 11),
    _AtmIfCANrtVbrEpdOffset_Type()
)
atmIfCANrtVbrEpdOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCANrtVbrEpdOffset.setStatus("mandatory")
_AtmIfCAAbr_ObjectIdentity = ObjectIdentity
atmIfCAAbr = _AtmIfCAAbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5)
)
_AtmIfCAAbrRowStatusTable_Object = MibTable
atmIfCAAbrRowStatusTable = _AtmIfCAAbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 1)
)
if mibBuilder.loadTexts:
    atmIfCAAbrRowStatusTable.setStatus("mandatory")
_AtmIfCAAbrRowStatusEntry_Object = MibTableRow
atmIfCAAbrRowStatusEntry = _AtmIfCAAbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 1, 1)
)
atmIfCAAbrRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAAbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfCAAbrRowStatusEntry.setStatus("mandatory")
_AtmIfCAAbrRowStatus_Type = RowStatus
_AtmIfCAAbrRowStatus_Object = MibTableColumn
atmIfCAAbrRowStatus = _AtmIfCAAbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 1, 1, 1),
    _AtmIfCAAbrRowStatus_Type()
)
atmIfCAAbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAAbrRowStatus.setStatus("mandatory")
_AtmIfCAAbrComponentName_Type = DisplayString
_AtmIfCAAbrComponentName_Object = MibTableColumn
atmIfCAAbrComponentName = _AtmIfCAAbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 1, 1, 2),
    _AtmIfCAAbrComponentName_Type()
)
atmIfCAAbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAAbrComponentName.setStatus("mandatory")
_AtmIfCAAbrStorageType_Type = StorageType
_AtmIfCAAbrStorageType_Object = MibTableColumn
atmIfCAAbrStorageType = _AtmIfCAAbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 1, 1, 4),
    _AtmIfCAAbrStorageType_Type()
)
atmIfCAAbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAAbrStorageType.setStatus("mandatory")


class _AtmIfCAAbrIndex_Type(Integer32):
    """Custom type atmIfCAAbrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_AtmIfCAAbrIndex_Type.__name__ = "Integer32"
_AtmIfCAAbrIndex_Object = MibTableColumn
atmIfCAAbrIndex = _AtmIfCAAbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 1, 1, 10),
    _AtmIfCAAbrIndex_Type()
)
atmIfCAAbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfCAAbrIndex.setStatus("mandatory")
_AtmIfCAAbrProvTable_Object = MibTable
atmIfCAAbrProvTable = _AtmIfCAAbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100)
)
if mibBuilder.loadTexts:
    atmIfCAAbrProvTable.setStatus("mandatory")
_AtmIfCAAbrProvEntry_Object = MibTableRow
atmIfCAAbrProvEntry = _AtmIfCAAbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100, 1)
)
atmIfCAAbrProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAAbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfCAAbrProvEntry.setStatus("mandatory")


class _AtmIfCAAbrPool_Type(Integer32):
    """Custom type atmIfCAAbrPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pool1", 1),
          ("pool2", 2),
          ("pool3", 3),
          ("pool4", 4),
          ("pool5", 5))
    )


_AtmIfCAAbrPool_Type.__name__ = "Integer32"
_AtmIfCAAbrPool_Object = MibTableColumn
atmIfCAAbrPool = _AtmIfCAAbrPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100, 1, 10),
    _AtmIfCAAbrPool_Type()
)
atmIfCAAbrPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAAbrPool.setStatus("mandatory")


class _AtmIfCAAbrCdvt_Type(Unsigned32):
    """Custom type atmIfCAAbrCdvt based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1200000),
    )


_AtmIfCAAbrCdvt_Type.__name__ = "Unsigned32"
_AtmIfCAAbrCdvt_Object = MibTableColumn
atmIfCAAbrCdvt = _AtmIfCAAbrCdvt_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100, 1, 11),
    _AtmIfCAAbrCdvt_Type()
)
atmIfCAAbrCdvt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAAbrCdvt.setStatus("mandatory")


class _AtmIfCAAbrTxQueueLimit_Type(Unsigned32):
    """Custom type atmIfCAAbrTxQueueLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 63488),
    )


_AtmIfCAAbrTxQueueLimit_Type.__name__ = "Unsigned32"
_AtmIfCAAbrTxQueueLimit_Object = MibTableColumn
atmIfCAAbrTxQueueLimit = _AtmIfCAAbrTxQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100, 1, 12),
    _AtmIfCAAbrTxQueueLimit_Type()
)
atmIfCAAbrTxQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAAbrTxQueueLimit.setStatus("mandatory")


class _AtmIfCAAbrMinPerVcQueueLimit_Type(Unsigned32):
    """Custom type atmIfCAAbrMinPerVcQueueLimit based on Unsigned32"""
    defaultValue = 88

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 63488),
    )


_AtmIfCAAbrMinPerVcQueueLimit_Type.__name__ = "Unsigned32"
_AtmIfCAAbrMinPerVcQueueLimit_Object = MibTableColumn
atmIfCAAbrMinPerVcQueueLimit = _AtmIfCAAbrMinPerVcQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100, 1, 13),
    _AtmIfCAAbrMinPerVcQueueLimit_Type()
)
atmIfCAAbrMinPerVcQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAAbrMinPerVcQueueLimit.setStatus("mandatory")


class _AtmIfCAAbrPerVcQueueLimitReferenceRate_Type(Unsigned32):
    """Custom type atmIfCAAbrPerVcQueueLimitReferenceRate based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 943396),
    )


_AtmIfCAAbrPerVcQueueLimitReferenceRate_Type.__name__ = "Unsigned32"
_AtmIfCAAbrPerVcQueueLimitReferenceRate_Object = MibTableColumn
atmIfCAAbrPerVcQueueLimitReferenceRate = _AtmIfCAAbrPerVcQueueLimitReferenceRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100, 1, 14),
    _AtmIfCAAbrPerVcQueueLimitReferenceRate_Type()
)
atmIfCAAbrPerVcQueueLimitReferenceRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAAbrPerVcQueueLimitReferenceRate.setStatus("mandatory")


class _AtmIfCAAbrEmissionPriority_Type(Unsigned32):
    """Custom type atmIfCAAbrEmissionPriority based on Unsigned32"""
    defaultValue = 6

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_AtmIfCAAbrEmissionPriority_Type.__name__ = "Unsigned32"
_AtmIfCAAbrEmissionPriority_Object = MibTableColumn
atmIfCAAbrEmissionPriority = _AtmIfCAAbrEmissionPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100, 1, 15),
    _AtmIfCAAbrEmissionPriority_Type()
)
atmIfCAAbrEmissionPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAAbrEmissionPriority.setStatus("mandatory")


class _AtmIfCAAbrFairnessPolicy_Type(Integer32):
    """Custom type atmIfCAAbrFairnessPolicy based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              4)
        )
    )
    namedValues = NamedValues(
        *(("pcr", 2),
          ("pcrMinusMcr", 4))
    )


_AtmIfCAAbrFairnessPolicy_Type.__name__ = "Integer32"
_AtmIfCAAbrFairnessPolicy_Object = MibTableColumn
atmIfCAAbrFairnessPolicy = _AtmIfCAAbrFairnessPolicy_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100, 1, 19),
    _AtmIfCAAbrFairnessPolicy_Type()
)
atmIfCAAbrFairnessPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAAbrFairnessPolicy.setStatus("mandatory")


class _AtmIfCAAbrFrttPortion_Type(Unsigned32):
    """Custom type atmIfCAAbrFrttPortion based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_AtmIfCAAbrFrttPortion_Type.__name__ = "Unsigned32"
_AtmIfCAAbrFrttPortion_Object = MibTableColumn
atmIfCAAbrFrttPortion = _AtmIfCAAbrFrttPortion_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100, 1, 20),
    _AtmIfCAAbrFrttPortion_Type()
)
atmIfCAAbrFrttPortion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAAbrFrttPortion.setStatus("mandatory")


class _AtmIfCAAbrAbrConnectionType_Type(Integer32):
    """Custom type atmIfCAAbrAbrConnectionType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              3,
              5)
        )
    )
    namedValues = NamedValues(
        *(("abrSwitch", 0),
          ("nonAbrInterworking", 5),
          ("virtualSourceDest", 3))
    )


_AtmIfCAAbrAbrConnectionType_Type.__name__ = "Integer32"
_AtmIfCAAbrAbrConnectionType_Object = MibTableColumn
atmIfCAAbrAbrConnectionType = _AtmIfCAAbrAbrConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100, 1, 21),
    _AtmIfCAAbrAbrConnectionType_Type()
)
atmIfCAAbrAbrConnectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAAbrAbrConnectionType.setStatus("mandatory")


class _AtmIfCAAbrUsageParameterControl_Type(Integer32):
    """Custom type atmIfCAAbrUsageParameterControl based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4))
    )


_AtmIfCAAbrUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfCAAbrUsageParameterControl_Object = MibTableColumn
atmIfCAAbrUsageParameterControl = _AtmIfCAAbrUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100, 1, 22),
    _AtmIfCAAbrUsageParameterControl_Type()
)
atmIfCAAbrUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAAbrUsageParameterControl.setStatus("mandatory")


class _AtmIfCAAbrInitialCellRate_Type(Unsigned32):
    """Custom type atmIfCAAbrInitialCellRate based on Unsigned32"""
    defaultValue = 16777218

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
        ValueRangeConstraint(16777217, 16777217),
        ValueRangeConstraint(16777218, 16777218),
    )


_AtmIfCAAbrInitialCellRate_Type.__name__ = "Unsigned32"
_AtmIfCAAbrInitialCellRate_Object = MibTableColumn
atmIfCAAbrInitialCellRate = _AtmIfCAAbrInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100, 1, 23),
    _AtmIfCAAbrInitialCellRate_Type()
)
atmIfCAAbrInitialCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAAbrInitialCellRate.setStatus("mandatory")


class _AtmIfCAAbrRateDecreaseFactor_Type(Unsigned32):
    """Custom type atmIfCAAbrRateDecreaseFactor based on Unsigned32"""
    defaultValue = 15

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_AtmIfCAAbrRateDecreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfCAAbrRateDecreaseFactor_Object = MibTableColumn
atmIfCAAbrRateDecreaseFactor = _AtmIfCAAbrRateDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100, 1, 24),
    _AtmIfCAAbrRateDecreaseFactor_Type()
)
atmIfCAAbrRateDecreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAAbrRateDecreaseFactor.setStatus("mandatory")


class _AtmIfCAAbrRateIncreaseFactor_Type(Unsigned32):
    """Custom type atmIfCAAbrRateIncreaseFactor based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_AtmIfCAAbrRateIncreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfCAAbrRateIncreaseFactor_Object = MibTableColumn
atmIfCAAbrRateIncreaseFactor = _AtmIfCAAbrRateIncreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100, 1, 25),
    _AtmIfCAAbrRateIncreaseFactor_Type()
)
atmIfCAAbrRateIncreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAAbrRateIncreaseFactor.setStatus("mandatory")


class _AtmIfCAAbrMaxCellPerRmCell_Type(Unsigned32):
    """Custom type atmIfCAAbrMaxCellPerRmCell based on Unsigned32"""
    defaultValue = 256

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
    )


_AtmIfCAAbrMaxCellPerRmCell_Type.__name__ = "Unsigned32"
_AtmIfCAAbrMaxCellPerRmCell_Object = MibTableColumn
atmIfCAAbrMaxCellPerRmCell = _AtmIfCAAbrMaxCellPerRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100, 1, 26),
    _AtmIfCAAbrMaxCellPerRmCell_Type()
)
atmIfCAAbrMaxCellPerRmCell.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAAbrMaxCellPerRmCell.setStatus("mandatory")


class _AtmIfCAAbrMaxTimeBetweenRmCells_Type(Unsigned32):
    """Custom type atmIfCAAbrMaxTimeBetweenRmCells based on Unsigned32"""
    defaultValue = 100000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(781, 781),
        ValueRangeConstraint(1563, 1563),
        ValueRangeConstraint(3125, 3125),
        ValueRangeConstraint(6250, 6250),
        ValueRangeConstraint(12500, 12500),
        ValueRangeConstraint(25000, 25000),
        ValueRangeConstraint(50000, 50000),
        ValueRangeConstraint(100000, 100000),
    )


_AtmIfCAAbrMaxTimeBetweenRmCells_Type.__name__ = "Unsigned32"
_AtmIfCAAbrMaxTimeBetweenRmCells_Object = MibTableColumn
atmIfCAAbrMaxTimeBetweenRmCells = _AtmIfCAAbrMaxTimeBetweenRmCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100, 1, 27),
    _AtmIfCAAbrMaxTimeBetweenRmCells_Type()
)
atmIfCAAbrMaxTimeBetweenRmCells.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAAbrMaxTimeBetweenRmCells.setStatus("mandatory")


class _AtmIfCAAbrCutoffDecreaseFactor_Type(Unsigned32):
    """Custom type atmIfCAAbrCutoffDecreaseFactor based on Unsigned32"""
    defaultValue = 16

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
    )


_AtmIfCAAbrCutoffDecreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfCAAbrCutoffDecreaseFactor_Object = MibTableColumn
atmIfCAAbrCutoffDecreaseFactor = _AtmIfCAAbrCutoffDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100, 1, 28),
    _AtmIfCAAbrCutoffDecreaseFactor_Type()
)
atmIfCAAbrCutoffDecreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAAbrCutoffDecreaseFactor.setStatus("mandatory")


class _AtmIfCAAbrAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type atmIfCAAbrAcrDecreaseTimeFactor based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_AtmIfCAAbrAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_AtmIfCAAbrAcrDecreaseTimeFactor_Object = MibTableColumn
atmIfCAAbrAcrDecreaseTimeFactor = _AtmIfCAAbrAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100, 1, 29),
    _AtmIfCAAbrAcrDecreaseTimeFactor_Type()
)
atmIfCAAbrAcrDecreaseTimeFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAAbrAcrDecreaseTimeFactor.setStatus("mandatory")


class _AtmIfCAAbrDgcraMaximumDelay_Type(Unsigned32):
    """Custom type atmIfCAAbrDgcraMaximumDelay based on Unsigned32"""
    defaultValue = 10000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16700000),
    )


_AtmIfCAAbrDgcraMaximumDelay_Type.__name__ = "Unsigned32"
_AtmIfCAAbrDgcraMaximumDelay_Object = MibTableColumn
atmIfCAAbrDgcraMaximumDelay = _AtmIfCAAbrDgcraMaximumDelay_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100, 1, 30),
    _AtmIfCAAbrDgcraMaximumDelay_Type()
)
atmIfCAAbrDgcraMaximumDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAAbrDgcraMaximumDelay.setStatus("mandatory")


class _AtmIfCAAbrDgcraMinimumDelay_Type(Unsigned32):
    """Custom type atmIfCAAbrDgcraMinimumDelay based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16700000),
    )


_AtmIfCAAbrDgcraMinimumDelay_Type.__name__ = "Unsigned32"
_AtmIfCAAbrDgcraMinimumDelay_Object = MibTableColumn
atmIfCAAbrDgcraMinimumDelay = _AtmIfCAAbrDgcraMinimumDelay_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100, 1, 31),
    _AtmIfCAAbrDgcraMinimumDelay_Type()
)
atmIfCAAbrDgcraMinimumDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAAbrDgcraMinimumDelay.setStatus("mandatory")


class _AtmIfCAAbrHoldingPriority_Type(Integer32):
    """Custom type atmIfCAAbrHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfCAAbrHoldingPriority_Type.__name__ = "Integer32"
_AtmIfCAAbrHoldingPriority_Object = MibTableColumn
atmIfCAAbrHoldingPriority = _AtmIfCAAbrHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 100, 1, 32),
    _AtmIfCAAbrHoldingPriority_Type()
)
atmIfCAAbrHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAAbrHoldingPriority.setStatus("mandatory")
_AtmIfCAAbrOperTable_Object = MibTable
atmIfCAAbrOperTable = _AtmIfCAAbrOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 110)
)
if mibBuilder.loadTexts:
    atmIfCAAbrOperTable.setStatus("mandatory")
_AtmIfCAAbrOperEntry_Object = MibTableRow
atmIfCAAbrOperEntry = _AtmIfCAAbrOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 110, 1)
)
atmIfCAAbrOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAAbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfCAAbrOperEntry.setStatus("mandatory")


class _AtmIfCAAbrEpdOffset_Type(Unsigned32):
    """Custom type atmIfCAAbrEpdOffset based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 1024),
    )


_AtmIfCAAbrEpdOffset_Type.__name__ = "Unsigned32"
_AtmIfCAAbrEpdOffset_Object = MibTableColumn
atmIfCAAbrEpdOffset = _AtmIfCAAbrEpdOffset_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 5, 110, 1, 10),
    _AtmIfCAAbrEpdOffset_Type()
)
atmIfCAAbrEpdOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAAbrEpdOffset.setStatus("mandatory")
_AtmIfCAUbr_ObjectIdentity = ObjectIdentity
atmIfCAUbr = _AtmIfCAUbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6)
)
_AtmIfCAUbrRowStatusTable_Object = MibTable
atmIfCAUbrRowStatusTable = _AtmIfCAUbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 1)
)
if mibBuilder.loadTexts:
    atmIfCAUbrRowStatusTable.setStatus("mandatory")
_AtmIfCAUbrRowStatusEntry_Object = MibTableRow
atmIfCAUbrRowStatusEntry = _AtmIfCAUbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 1, 1)
)
atmIfCAUbrRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAUbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfCAUbrRowStatusEntry.setStatus("mandatory")
_AtmIfCAUbrRowStatus_Type = RowStatus
_AtmIfCAUbrRowStatus_Object = MibTableColumn
atmIfCAUbrRowStatus = _AtmIfCAUbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 1, 1, 1),
    _AtmIfCAUbrRowStatus_Type()
)
atmIfCAUbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAUbrRowStatus.setStatus("mandatory")
_AtmIfCAUbrComponentName_Type = DisplayString
_AtmIfCAUbrComponentName_Object = MibTableColumn
atmIfCAUbrComponentName = _AtmIfCAUbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 1, 1, 2),
    _AtmIfCAUbrComponentName_Type()
)
atmIfCAUbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAUbrComponentName.setStatus("mandatory")
_AtmIfCAUbrStorageType_Type = StorageType
_AtmIfCAUbrStorageType_Object = MibTableColumn
atmIfCAUbrStorageType = _AtmIfCAUbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 1, 1, 4),
    _AtmIfCAUbrStorageType_Type()
)
atmIfCAUbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAUbrStorageType.setStatus("mandatory")


class _AtmIfCAUbrIndex_Type(Integer32):
    """Custom type atmIfCAUbrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_AtmIfCAUbrIndex_Type.__name__ = "Integer32"
_AtmIfCAUbrIndex_Object = MibTableColumn
atmIfCAUbrIndex = _AtmIfCAUbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 1, 1, 10),
    _AtmIfCAUbrIndex_Type()
)
atmIfCAUbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfCAUbrIndex.setStatus("mandatory")
_AtmIfCAUbrProvTable_Object = MibTable
atmIfCAUbrProvTable = _AtmIfCAUbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 100)
)
if mibBuilder.loadTexts:
    atmIfCAUbrProvTable.setStatus("mandatory")
_AtmIfCAUbrProvEntry_Object = MibTableRow
atmIfCAUbrProvEntry = _AtmIfCAUbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 100, 1)
)
atmIfCAUbrProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAUbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfCAUbrProvEntry.setStatus("mandatory")


class _AtmIfCAUbrMaxVpcs_Type(Unsigned32):
    """Custom type atmIfCAUbrMaxVpcs based on Unsigned32"""
    defaultValue = 16385

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
        ValueRangeConstraint(16385, 16385),
    )


_AtmIfCAUbrMaxVpcs_Type.__name__ = "Unsigned32"
_AtmIfCAUbrMaxVpcs_Object = MibTableColumn
atmIfCAUbrMaxVpcs = _AtmIfCAUbrMaxVpcs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 100, 1, 5),
    _AtmIfCAUbrMaxVpcs_Type()
)
atmIfCAUbrMaxVpcs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAUbrMaxVpcs.setStatus("mandatory")


class _AtmIfCAUbrMaxVccs_Type(Unsigned32):
    """Custom type atmIfCAUbrMaxVccs based on Unsigned32"""
    defaultValue = 16385

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
        ValueRangeConstraint(16385, 16385),
    )


_AtmIfCAUbrMaxVccs_Type.__name__ = "Unsigned32"
_AtmIfCAUbrMaxVccs_Object = MibTableColumn
atmIfCAUbrMaxVccs = _AtmIfCAUbrMaxVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 100, 1, 6),
    _AtmIfCAUbrMaxVccs_Type()
)
atmIfCAUbrMaxVccs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAUbrMaxVccs.setStatus("mandatory")


class _AtmIfCAUbrMaxVpts_Type(Unsigned32):
    """Custom type atmIfCAUbrMaxVpts based on Unsigned32"""
    defaultValue = 16385

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
        ValueRangeConstraint(16385, 16385),
    )


_AtmIfCAUbrMaxVpts_Type.__name__ = "Unsigned32"
_AtmIfCAUbrMaxVpts_Object = MibTableColumn
atmIfCAUbrMaxVpts = _AtmIfCAUbrMaxVpts_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 100, 1, 7),
    _AtmIfCAUbrMaxVpts_Type()
)
atmIfCAUbrMaxVpts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAUbrMaxVpts.setStatus("mandatory")


class _AtmIfCAUbrPool_Type(Integer32):
    """Custom type atmIfCAUbrPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pool1", 1),
          ("pool2", 2),
          ("pool3", 3),
          ("pool4", 4),
          ("pool5", 5))
    )


_AtmIfCAUbrPool_Type.__name__ = "Integer32"
_AtmIfCAUbrPool_Object = MibTableColumn
atmIfCAUbrPool = _AtmIfCAUbrPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 100, 1, 10),
    _AtmIfCAUbrPool_Type()
)
atmIfCAUbrPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAUbrPool.setStatus("mandatory")


class _AtmIfCAUbrMinimumCellRate_Type(Unsigned32):
    """Custom type atmIfCAUbrMinimumCellRate based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfCAUbrMinimumCellRate_Type.__name__ = "Unsigned32"
_AtmIfCAUbrMinimumCellRate_Object = MibTableColumn
atmIfCAUbrMinimumCellRate = _AtmIfCAUbrMinimumCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 100, 1, 11),
    _AtmIfCAUbrMinimumCellRate_Type()
)
atmIfCAUbrMinimumCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAUbrMinimumCellRate.setStatus("mandatory")


class _AtmIfCAUbrTxQueueLimit_Type(Unsigned32):
    """Custom type atmIfCAUbrTxQueueLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 63488),
    )


_AtmIfCAUbrTxQueueLimit_Type.__name__ = "Unsigned32"
_AtmIfCAUbrTxQueueLimit_Object = MibTableColumn
atmIfCAUbrTxQueueLimit = _AtmIfCAUbrTxQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 100, 1, 12),
    _AtmIfCAUbrTxQueueLimit_Type()
)
atmIfCAUbrTxQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAUbrTxQueueLimit.setStatus("mandatory")


class _AtmIfCAUbrMinPerVcQueueLimit_Type(Unsigned32):
    """Custom type atmIfCAUbrMinPerVcQueueLimit based on Unsigned32"""
    defaultValue = 88

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 30000),
    )


_AtmIfCAUbrMinPerVcQueueLimit_Type.__name__ = "Unsigned32"
_AtmIfCAUbrMinPerVcQueueLimit_Object = MibTableColumn
atmIfCAUbrMinPerVcQueueLimit = _AtmIfCAUbrMinPerVcQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 100, 1, 13),
    _AtmIfCAUbrMinPerVcQueueLimit_Type()
)
atmIfCAUbrMinPerVcQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAUbrMinPerVcQueueLimit.setStatus("mandatory")


class _AtmIfCAUbrPerVcQueueLimitReferenceRate_Type(Unsigned32):
    """Custom type atmIfCAUbrPerVcQueueLimitReferenceRate based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 943396),
    )


_AtmIfCAUbrPerVcQueueLimitReferenceRate_Type.__name__ = "Unsigned32"
_AtmIfCAUbrPerVcQueueLimitReferenceRate_Object = MibTableColumn
atmIfCAUbrPerVcQueueLimitReferenceRate = _AtmIfCAUbrPerVcQueueLimitReferenceRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 100, 1, 14),
    _AtmIfCAUbrPerVcQueueLimitReferenceRate_Type()
)
atmIfCAUbrPerVcQueueLimitReferenceRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAUbrPerVcQueueLimitReferenceRate.setStatus("mandatory")


class _AtmIfCAUbrEmissionPriority_Type(Unsigned32):
    """Custom type atmIfCAUbrEmissionPriority based on Unsigned32"""
    defaultValue = 7

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_AtmIfCAUbrEmissionPriority_Type.__name__ = "Unsigned32"
_AtmIfCAUbrEmissionPriority_Object = MibTableColumn
atmIfCAUbrEmissionPriority = _AtmIfCAUbrEmissionPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 100, 1, 15),
    _AtmIfCAUbrEmissionPriority_Type()
)
atmIfCAUbrEmissionPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAUbrEmissionPriority.setStatus("mandatory")


class _AtmIfCAUbrTrafficShaping_Type(Integer32):
    """Custom type atmIfCAUbrTrafficShaping based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 5),
          ("inverseUpc", 6))
    )


_AtmIfCAUbrTrafficShaping_Type.__name__ = "Integer32"
_AtmIfCAUbrTrafficShaping_Object = MibTableColumn
atmIfCAUbrTrafficShaping = _AtmIfCAUbrTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 100, 1, 19),
    _AtmIfCAUbrTrafficShaping_Type()
)
atmIfCAUbrTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAUbrTrafficShaping.setStatus("mandatory")


class _AtmIfCAUbrShapeRecoupPolicy_Type(Integer32):
    """Custom type atmIfCAUbrShapeRecoupPolicy based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("maximumEfficiency", 1),
          ("minimumCdv", 0))
    )


_AtmIfCAUbrShapeRecoupPolicy_Type.__name__ = "Integer32"
_AtmIfCAUbrShapeRecoupPolicy_Object = MibTableColumn
atmIfCAUbrShapeRecoupPolicy = _AtmIfCAUbrShapeRecoupPolicy_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 100, 1, 20),
    _AtmIfCAUbrShapeRecoupPolicy_Type()
)
atmIfCAUbrShapeRecoupPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAUbrShapeRecoupPolicy.setStatus("mandatory")


class _AtmIfCAUbrUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfCAUbrUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("autoConfigure", 2),
          ("common", 1),
          ("perVc", 0))
    )


_AtmIfCAUbrUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfCAUbrUnshapedTransmitQueueing_Object = MibTableColumn
atmIfCAUbrUnshapedTransmitQueueing = _AtmIfCAUbrUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 100, 1, 21),
    _AtmIfCAUbrUnshapedTransmitQueueing_Type()
)
atmIfCAUbrUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAUbrUnshapedTransmitQueueing.setStatus("mandatory")


class _AtmIfCAUbrUsageParameterControl_Type(Integer32):
    """Custom type atmIfCAUbrUsageParameterControl based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4))
    )


_AtmIfCAUbrUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfCAUbrUsageParameterControl_Object = MibTableColumn
atmIfCAUbrUsageParameterControl = _AtmIfCAUbrUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 100, 1, 22),
    _AtmIfCAUbrUsageParameterControl_Type()
)
atmIfCAUbrUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAUbrUsageParameterControl.setStatus("mandatory")


class _AtmIfCAUbrWeightPolicy_Type(Integer32):
    """Custom type atmIfCAUbrWeightPolicy based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ecr", 3),
          ("mcr", 0),
          ("pcr", 2))
    )


_AtmIfCAUbrWeightPolicy_Type.__name__ = "Integer32"
_AtmIfCAUbrWeightPolicy_Object = MibTableColumn
atmIfCAUbrWeightPolicy = _AtmIfCAUbrWeightPolicy_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 100, 1, 23),
    _AtmIfCAUbrWeightPolicy_Type()
)
atmIfCAUbrWeightPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAUbrWeightPolicy.setStatus("mandatory")


class _AtmIfCAUbrForceTagging_Type(Integer32):
    """Custom type atmIfCAUbrForceTagging based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0))
    )


_AtmIfCAUbrForceTagging_Type.__name__ = "Integer32"
_AtmIfCAUbrForceTagging_Object = MibTableColumn
atmIfCAUbrForceTagging = _AtmIfCAUbrForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 100, 1, 24),
    _AtmIfCAUbrForceTagging_Type()
)
atmIfCAUbrForceTagging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAUbrForceTagging.setStatus("mandatory")


class _AtmIfCAUbrCdvt_Type(Unsigned32):
    """Custom type atmIfCAUbrCdvt based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1200000),
    )


_AtmIfCAUbrCdvt_Type.__name__ = "Unsigned32"
_AtmIfCAUbrCdvt_Object = MibTableColumn
atmIfCAUbrCdvt = _AtmIfCAUbrCdvt_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 100, 1, 30),
    _AtmIfCAUbrCdvt_Type()
)
atmIfCAUbrCdvt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAUbrCdvt.setStatus("mandatory")


class _AtmIfCAUbrHoldingPriority_Type(Integer32):
    """Custom type atmIfCAUbrHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfCAUbrHoldingPriority_Type.__name__ = "Integer32"
_AtmIfCAUbrHoldingPriority_Object = MibTableColumn
atmIfCAUbrHoldingPriority = _AtmIfCAUbrHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 100, 1, 40),
    _AtmIfCAUbrHoldingPriority_Type()
)
atmIfCAUbrHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAUbrHoldingPriority.setStatus("mandatory")


class _AtmIfCAUbrSvcMpHoldingPriority_Type(Integer32):
    """Custom type atmIfCAUbrSvcMpHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfCAUbrSvcMpHoldingPriority_Type.__name__ = "Integer32"
_AtmIfCAUbrSvcMpHoldingPriority_Object = MibTableColumn
atmIfCAUbrSvcMpHoldingPriority = _AtmIfCAUbrSvcMpHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 100, 1, 50),
    _AtmIfCAUbrSvcMpHoldingPriority_Type()
)
atmIfCAUbrSvcMpHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAUbrSvcMpHoldingPriority.setStatus("mandatory")
_AtmIfCAUbrOperTable_Object = MibTable
atmIfCAUbrOperTable = _AtmIfCAUbrOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 110)
)
if mibBuilder.loadTexts:
    atmIfCAUbrOperTable.setStatus("mandatory")
_AtmIfCAUbrOperEntry_Object = MibTableRow
atmIfCAUbrOperEntry = _AtmIfCAUbrOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 110, 1)
)
atmIfCAUbrOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAUbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfCAUbrOperEntry.setStatus("mandatory")


class _AtmIfCAUbrOpUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfCAUbrOpUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("perVc", 0))
    )


_AtmIfCAUbrOpUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfCAUbrOpUnshapedTransmitQueueing_Object = MibTableColumn
atmIfCAUbrOpUnshapedTransmitQueueing = _AtmIfCAUbrOpUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 110, 1, 10),
    _AtmIfCAUbrOpUnshapedTransmitQueueing_Type()
)
atmIfCAUbrOpUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAUbrOpUnshapedTransmitQueueing.setStatus("mandatory")


class _AtmIfCAUbrVpcUsage_Type(Unsigned32):
    """Custom type atmIfCAUbrVpcUsage based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_AtmIfCAUbrVpcUsage_Type.__name__ = "Unsigned32"
_AtmIfCAUbrVpcUsage_Object = MibTableColumn
atmIfCAUbrVpcUsage = _AtmIfCAUbrVpcUsage_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 110, 1, 11),
    _AtmIfCAUbrVpcUsage_Type()
)
atmIfCAUbrVpcUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAUbrVpcUsage.setStatus("mandatory")


class _AtmIfCAUbrVccUsage_Type(Unsigned32):
    """Custom type atmIfCAUbrVccUsage based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_AtmIfCAUbrVccUsage_Type.__name__ = "Unsigned32"
_AtmIfCAUbrVccUsage_Object = MibTableColumn
atmIfCAUbrVccUsage = _AtmIfCAUbrVccUsage_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 110, 1, 12),
    _AtmIfCAUbrVccUsage_Type()
)
atmIfCAUbrVccUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAUbrVccUsage.setStatus("mandatory")


class _AtmIfCAUbrVptUsage_Type(Unsigned32):
    """Custom type atmIfCAUbrVptUsage based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_AtmIfCAUbrVptUsage_Type.__name__ = "Unsigned32"
_AtmIfCAUbrVptUsage_Object = MibTableColumn
atmIfCAUbrVptUsage = _AtmIfCAUbrVptUsage_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 110, 1, 13),
    _AtmIfCAUbrVptUsage_Type()
)
atmIfCAUbrVptUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAUbrVptUsage.setStatus("mandatory")


class _AtmIfCAUbrEpdOffset_Type(Unsigned32):
    """Custom type atmIfCAUbrEpdOffset based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 1024),
    )


_AtmIfCAUbrEpdOffset_Type.__name__ = "Unsigned32"
_AtmIfCAUbrEpdOffset_Object = MibTableColumn
atmIfCAUbrEpdOffset = _AtmIfCAUbrEpdOffset_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 6, 110, 1, 14),
    _AtmIfCAUbrEpdOffset_Type()
)
atmIfCAUbrEpdOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAUbrEpdOffset.setStatus("mandatory")
_AtmIfCAProvTable_Object = MibTable
atmIfCAProvTable = _AtmIfCAProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100)
)
if mibBuilder.loadTexts:
    atmIfCAProvTable.setStatus("mandatory")
_AtmIfCAProvEntry_Object = MibTableRow
atmIfCAProvEntry = _AtmIfCAProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1)
)
atmIfCAProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
)
if mibBuilder.loadTexts:
    atmIfCAProvEntry.setStatus("mandatory")


class _AtmIfCAMaxVpcs_Type(Unsigned32):
    """Custom type atmIfCAMaxVpcs based on Unsigned32"""
    defaultValue = 128

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_AtmIfCAMaxVpcs_Type.__name__ = "Unsigned32"
_AtmIfCAMaxVpcs_Object = MibTableColumn
atmIfCAMaxVpcs = _AtmIfCAMaxVpcs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 5),
    _AtmIfCAMaxVpcs_Type()
)
atmIfCAMaxVpcs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAMaxVpcs.setStatus("obsolete")


class _AtmIfCAMaxVccs_Type(Unsigned32):
    """Custom type atmIfCAMaxVccs based on Unsigned32"""
    defaultValue = 255

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_AtmIfCAMaxVccs_Type.__name__ = "Unsigned32"
_AtmIfCAMaxVccs_Object = MibTableColumn
atmIfCAMaxVccs = _AtmIfCAMaxVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 6),
    _AtmIfCAMaxVccs_Type()
)
atmIfCAMaxVccs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAMaxVccs.setStatus("mandatory")


class _AtmIfCAMinMulticastBranches_Type(Unsigned32):
    """Custom type atmIfCAMinMulticastBranches based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_AtmIfCAMinMulticastBranches_Type.__name__ = "Unsigned32"
_AtmIfCAMinMulticastBranches_Object = MibTableColumn
atmIfCAMinMulticastBranches = _AtmIfCAMinMulticastBranches_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 7),
    _AtmIfCAMinMulticastBranches_Type()
)
atmIfCAMinMulticastBranches.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAMinMulticastBranches.setStatus("mandatory")


class _AtmIfCAMaxMulticastBranches_Type(Unsigned32):
    """Custom type atmIfCAMaxMulticastBranches based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 16384),
    )


_AtmIfCAMaxMulticastBranches_Type.__name__ = "Unsigned32"
_AtmIfCAMaxMulticastBranches_Object = MibTableColumn
atmIfCAMaxMulticastBranches = _AtmIfCAMaxMulticastBranches_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 8),
    _AtmIfCAMaxMulticastBranches_Type()
)
atmIfCAMaxMulticastBranches.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAMaxMulticastBranches.setStatus("mandatory")


class _AtmIfCAMaxVpts_Type(Unsigned32):
    """Custom type atmIfCAMaxVpts based on Unsigned32"""
    defaultValue = 128

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_AtmIfCAMaxVpts_Type.__name__ = "Unsigned32"
_AtmIfCAMaxVpts_Object = MibTableColumn
atmIfCAMaxVpts = _AtmIfCAMaxVpts_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 9),
    _AtmIfCAMaxVpts_Type()
)
atmIfCAMaxVpts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAMaxVpts.setStatus("obsolete")


class _AtmIfCAMinAutoSelectedVci_Type(Unsigned32):
    """Custom type atmIfCAMinAutoSelectedVci based on Unsigned32"""
    defaultValue = 32

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(32, 65535),
    )


_AtmIfCAMinAutoSelectedVci_Type.__name__ = "Unsigned32"
_AtmIfCAMinAutoSelectedVci_Object = MibTableColumn
atmIfCAMinAutoSelectedVci = _AtmIfCAMinAutoSelectedVci_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 10),
    _AtmIfCAMinAutoSelectedVci_Type()
)
atmIfCAMinAutoSelectedVci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAMinAutoSelectedVci.setStatus("obsolete")


class _AtmIfCAMinAutoSelectedVciForVpiZero_Type(Unsigned32):
    """Custom type atmIfCAMinAutoSelectedVciForVpiZero based on Unsigned32"""
    defaultValue = 32

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmIfCAMinAutoSelectedVciForVpiZero_Type.__name__ = "Unsigned32"
_AtmIfCAMinAutoSelectedVciForVpiZero_Object = MibTableColumn
atmIfCAMinAutoSelectedVciForVpiZero = _AtmIfCAMinAutoSelectedVciForVpiZero_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 15),
    _AtmIfCAMinAutoSelectedVciForVpiZero_Type()
)
atmIfCAMinAutoSelectedVciForVpiZero.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAMinAutoSelectedVciForVpiZero.setStatus("mandatory")


class _AtmIfCAMinAutoSelectedVciForNonZeroVpi_Type(Unsigned32):
    """Custom type atmIfCAMinAutoSelectedVciForNonZeroVpi based on Unsigned32"""
    defaultValue = 32

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 65535),
    )


_AtmIfCAMinAutoSelectedVciForNonZeroVpi_Type.__name__ = "Unsigned32"
_AtmIfCAMinAutoSelectedVciForNonZeroVpi_Object = MibTableColumn
atmIfCAMinAutoSelectedVciForNonZeroVpi = _AtmIfCAMinAutoSelectedVciForNonZeroVpi_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 20),
    _AtmIfCAMinAutoSelectedVciForNonZeroVpi_Type()
)
atmIfCAMinAutoSelectedVciForNonZeroVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAMinAutoSelectedVciForNonZeroVpi.setStatus("mandatory")


class _AtmIfCAPermittedSvcAtmServiceCategories_Type(OctetString):
    """Custom type atmIfCAPermittedSvcAtmServiceCategories based on OctetString"""
    defaultHexValue = "f0"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfCAPermittedSvcAtmServiceCategories_Type.__name__ = "OctetString"
_AtmIfCAPermittedSvcAtmServiceCategories_Object = MibTableColumn
atmIfCAPermittedSvcAtmServiceCategories = _AtmIfCAPermittedSvcAtmServiceCategories_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 25),
    _AtmIfCAPermittedSvcAtmServiceCategories_Type()
)
atmIfCAPermittedSvcAtmServiceCategories.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAPermittedSvcAtmServiceCategories.setStatus("obsolete")


class _AtmIfCACbrPool_Type(Integer32):
    """Custom type atmIfCACbrPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("pool1", 1),
          ("pool2", 2),
          ("pool3", 3))
    )


_AtmIfCACbrPool_Type.__name__ = "Integer32"
_AtmIfCACbrPool_Object = MibTableColumn
atmIfCACbrPool = _AtmIfCACbrPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 30),
    _AtmIfCACbrPool_Type()
)
atmIfCACbrPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrPool.setStatus("obsolete")


class _AtmIfCACbrCdvt_Type(Unsigned32):
    """Custom type atmIfCACbrCdvt based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_AtmIfCACbrCdvt_Type.__name__ = "Unsigned32"
_AtmIfCACbrCdvt_Object = MibTableColumn
atmIfCACbrCdvt = _AtmIfCACbrCdvt_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 40),
    _AtmIfCACbrCdvt_Type()
)
atmIfCACbrCdvt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrCdvt.setStatus("obsolete")


class _AtmIfCACbrCellLossRatio_Type(Integer32):
    """Custom type atmIfCACbrCellLossRatio based on Integer32"""
    defaultValue = -10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-10, 0),
    )


_AtmIfCACbrCellLossRatio_Type.__name__ = "Integer32"
_AtmIfCACbrCellLossRatio_Object = MibTableColumn
atmIfCACbrCellLossRatio = _AtmIfCACbrCellLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 50),
    _AtmIfCACbrCellLossRatio_Type()
)
atmIfCACbrCellLossRatio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCACbrCellLossRatio.setStatus("obsolete")


class _AtmIfCASvcCbrHoldingPriority_Type(Integer32):
    """Custom type atmIfCASvcCbrHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfCASvcCbrHoldingPriority_Type.__name__ = "Integer32"
_AtmIfCASvcCbrHoldingPriority_Object = MibTableColumn
atmIfCASvcCbrHoldingPriority = _AtmIfCASvcCbrHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 51),
    _AtmIfCASvcCbrHoldingPriority_Type()
)
atmIfCASvcCbrHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCASvcCbrHoldingPriority.setStatus("obsolete")


class _AtmIfCASvcVbrRtHoldingPriority_Type(Integer32):
    """Custom type atmIfCASvcVbrRtHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfCASvcVbrRtHoldingPriority_Type.__name__ = "Integer32"
_AtmIfCASvcVbrRtHoldingPriority_Object = MibTableColumn
atmIfCASvcVbrRtHoldingPriority = _AtmIfCASvcVbrRtHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 52),
    _AtmIfCASvcVbrRtHoldingPriority_Type()
)
atmIfCASvcVbrRtHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCASvcVbrRtHoldingPriority.setStatus("obsolete")


class _AtmIfCASvcVbrNrtHoldingPriority_Type(Integer32):
    """Custom type atmIfCASvcVbrNrtHoldingPriority based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfCASvcVbrNrtHoldingPriority_Type.__name__ = "Integer32"
_AtmIfCASvcVbrNrtHoldingPriority_Object = MibTableColumn
atmIfCASvcVbrNrtHoldingPriority = _AtmIfCASvcVbrNrtHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 53),
    _AtmIfCASvcVbrNrtHoldingPriority_Type()
)
atmIfCASvcVbrNrtHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCASvcVbrNrtHoldingPriority.setStatus("obsolete")


class _AtmIfCAVbrRtPool_Type(Integer32):
    """Custom type atmIfCAVbrRtPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("pool1", 1),
          ("pool2", 2),
          ("pool3", 3))
    )


_AtmIfCAVbrRtPool_Type.__name__ = "Integer32"
_AtmIfCAVbrRtPool_Object = MibTableColumn
atmIfCAVbrRtPool = _AtmIfCAVbrRtPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 60),
    _AtmIfCAVbrRtPool_Type()
)
atmIfCAVbrRtPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAVbrRtPool.setStatus("obsolete")


class _AtmIfCAVbrRtCdvt_Type(Unsigned32):
    """Custom type atmIfCAVbrRtCdvt based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1200000),
    )


_AtmIfCAVbrRtCdvt_Type.__name__ = "Unsigned32"
_AtmIfCAVbrRtCdvt_Object = MibTableColumn
atmIfCAVbrRtCdvt = _AtmIfCAVbrRtCdvt_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 70),
    _AtmIfCAVbrRtCdvt_Type()
)
atmIfCAVbrRtCdvt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAVbrRtCdvt.setStatus("obsolete")


class _AtmIfCAVbrRtCellLossRatio_Type(Integer32):
    """Custom type atmIfCAVbrRtCellLossRatio based on Integer32"""
    defaultValue = -10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-10, 0),
    )


_AtmIfCAVbrRtCellLossRatio_Type.__name__ = "Integer32"
_AtmIfCAVbrRtCellLossRatio_Object = MibTableColumn
atmIfCAVbrRtCellLossRatio = _AtmIfCAVbrRtCellLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 80),
    _AtmIfCAVbrRtCellLossRatio_Type()
)
atmIfCAVbrRtCellLossRatio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAVbrRtCellLossRatio.setStatus("obsolete")


class _AtmIfCAVbrNrtPool_Type(Integer32):
    """Custom type atmIfCAVbrNrtPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("pool1", 1),
          ("pool2", 2),
          ("pool3", 3))
    )


_AtmIfCAVbrNrtPool_Type.__name__ = "Integer32"
_AtmIfCAVbrNrtPool_Object = MibTableColumn
atmIfCAVbrNrtPool = _AtmIfCAVbrNrtPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 90),
    _AtmIfCAVbrNrtPool_Type()
)
atmIfCAVbrNrtPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAVbrNrtPool.setStatus("obsolete")


class _AtmIfCAVbrNrtCdvt_Type(Unsigned32):
    """Custom type atmIfCAVbrNrtCdvt based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1200000),
    )


_AtmIfCAVbrNrtCdvt_Type.__name__ = "Unsigned32"
_AtmIfCAVbrNrtCdvt_Object = MibTableColumn
atmIfCAVbrNrtCdvt = _AtmIfCAVbrNrtCdvt_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 100),
    _AtmIfCAVbrNrtCdvt_Type()
)
atmIfCAVbrNrtCdvt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAVbrNrtCdvt.setStatus("obsolete")


class _AtmIfCAMaxCaVpcs_Type(Unsigned32):
    """Custom type atmIfCAMaxCaVpcs based on Unsigned32"""
    defaultValue = 128

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_AtmIfCAMaxCaVpcs_Type.__name__ = "Unsigned32"
_AtmIfCAMaxCaVpcs_Object = MibTableColumn
atmIfCAMaxCaVpcs = _AtmIfCAMaxCaVpcs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 105),
    _AtmIfCAMaxCaVpcs_Type()
)
atmIfCAMaxCaVpcs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAMaxCaVpcs.setStatus("mandatory")


class _AtmIfCAMaxCaVpts_Type(Unsigned32):
    """Custom type atmIfCAMaxCaVpts based on Unsigned32"""
    defaultValue = 128

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_AtmIfCAMaxCaVpts_Type.__name__ = "Unsigned32"
_AtmIfCAMaxCaVpts_Object = MibTableColumn
atmIfCAMaxCaVpts = _AtmIfCAMaxCaVpts_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 106),
    _AtmIfCAMaxCaVpts_Type()
)
atmIfCAMaxCaVpts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAMaxCaVpts.setStatus("mandatory")


class _AtmIfCAVbrNrtCellLossRatio_Type(Integer32):
    """Custom type atmIfCAVbrNrtCellLossRatio based on Integer32"""
    defaultValue = -7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-10, 0),
    )


_AtmIfCAVbrNrtCellLossRatio_Type.__name__ = "Integer32"
_AtmIfCAVbrNrtCellLossRatio_Object = MibTableColumn
atmIfCAVbrNrtCellLossRatio = _AtmIfCAVbrNrtCellLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 110),
    _AtmIfCAVbrNrtCellLossRatio_Type()
)
atmIfCAVbrNrtCellLossRatio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAVbrNrtCellLossRatio.setStatus("obsolete")


class _AtmIfCAUbrMaxConnections_Type(Unsigned32):
    """Custom type atmIfCAUbrMaxConnections based on Unsigned32"""
    defaultValue = 16384

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_AtmIfCAUbrMaxConnections_Type.__name__ = "Unsigned32"
_AtmIfCAUbrMaxConnections_Object = MibTableColumn
atmIfCAUbrMaxConnections = _AtmIfCAUbrMaxConnections_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 120),
    _AtmIfCAUbrMaxConnections_Type()
)
atmIfCAUbrMaxConnections.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAUbrMaxConnections.setStatus("obsolete")


class _AtmIfCAMinAutoSelectedVpi_Type(Unsigned32):
    """Custom type atmIfCAMinAutoSelectedVpi based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_AtmIfCAMinAutoSelectedVpi_Type.__name__ = "Unsigned32"
_AtmIfCAMinAutoSelectedVpi_Object = MibTableColumn
atmIfCAMinAutoSelectedVpi = _AtmIfCAMinAutoSelectedVpi_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 121),
    _AtmIfCAMinAutoSelectedVpi_Type()
)
atmIfCAMinAutoSelectedVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAMinAutoSelectedVpi.setStatus("mandatory")


class _AtmIfCAPermittedAtmServiceCategories_Type(OctetString):
    """Custom type atmIfCAPermittedAtmServiceCategories based on OctetString"""
    defaultHexValue = "f0"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfCAPermittedAtmServiceCategories_Type.__name__ = "OctetString"
_AtmIfCAPermittedAtmServiceCategories_Object = MibTableColumn
atmIfCAPermittedAtmServiceCategories = _AtmIfCAPermittedAtmServiceCategories_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 122),
    _AtmIfCAPermittedAtmServiceCategories_Type()
)
atmIfCAPermittedAtmServiceCategories.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAPermittedAtmServiceCategories.setStatus("mandatory")


class _AtmIfCAMaxAutoSelectedVpi_Type(Unsigned32):
    """Custom type atmIfCAMaxAutoSelectedVpi based on Unsigned32"""
    defaultValue = 128

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_AtmIfCAMaxAutoSelectedVpi_Type.__name__ = "Unsigned32"
_AtmIfCAMaxAutoSelectedVpi_Object = MibTableColumn
atmIfCAMaxAutoSelectedVpi = _AtmIfCAMaxAutoSelectedVpi_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 125),
    _AtmIfCAMaxAutoSelectedVpi_Type()
)
atmIfCAMaxAutoSelectedVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAMaxAutoSelectedVpi.setStatus("mandatory")


class _AtmIfCAMaxAutoSelectedVciForVpiZero_Type(Unsigned32):
    """Custom type atmIfCAMaxAutoSelectedVciForVpiZero based on Unsigned32"""
    defaultValue = 767

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmIfCAMaxAutoSelectedVciForVpiZero_Type.__name__ = "Unsigned32"
_AtmIfCAMaxAutoSelectedVciForVpiZero_Object = MibTableColumn
atmIfCAMaxAutoSelectedVciForVpiZero = _AtmIfCAMaxAutoSelectedVciForVpiZero_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 126),
    _AtmIfCAMaxAutoSelectedVciForVpiZero_Type()
)
atmIfCAMaxAutoSelectedVciForVpiZero.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAMaxAutoSelectedVciForVpiZero.setStatus("mandatory")


class _AtmIfCAMaxAutoSelectedVciForNonZeroVpi_Type(Unsigned32):
    """Custom type atmIfCAMaxAutoSelectedVciForNonZeroVpi based on Unsigned32"""
    defaultValue = 63

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 65535),
    )


_AtmIfCAMaxAutoSelectedVciForNonZeroVpi_Type.__name__ = "Unsigned32"
_AtmIfCAMaxAutoSelectedVciForNonZeroVpi_Object = MibTableColumn
atmIfCAMaxAutoSelectedVciForNonZeroVpi = _AtmIfCAMaxAutoSelectedVciForNonZeroVpi_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 100, 1, 127),
    _AtmIfCAMaxAutoSelectedVciForNonZeroVpi_Type()
)
atmIfCAMaxAutoSelectedVciForNonZeroVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCAMaxAutoSelectedVciForNonZeroVpi.setStatus("mandatory")
_AtmIfCAOperTable_Object = MibTable
atmIfCAOperTable = _AtmIfCAOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 110)
)
if mibBuilder.loadTexts:
    atmIfCAOperTable.setStatus("mandatory")
_AtmIfCAOperEntry_Object = MibTableRow
atmIfCAOperEntry = _AtmIfCAOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 110, 1)
)
atmIfCAOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
)
if mibBuilder.loadTexts:
    atmIfCAOperEntry.setStatus("mandatory")


class _AtmIfCAPermanentVpcs_Type(Unsigned32):
    """Custom type atmIfCAPermanentVpcs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_AtmIfCAPermanentVpcs_Type.__name__ = "Unsigned32"
_AtmIfCAPermanentVpcs_Object = MibTableColumn
atmIfCAPermanentVpcs = _AtmIfCAPermanentVpcs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 110, 1, 10),
    _AtmIfCAPermanentVpcs_Type()
)
atmIfCAPermanentVpcs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAPermanentVpcs.setStatus("mandatory")


class _AtmIfCAPermanentVpts_Type(Unsigned32):
    """Custom type atmIfCAPermanentVpts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_AtmIfCAPermanentVpts_Type.__name__ = "Unsigned32"
_AtmIfCAPermanentVpts_Object = MibTableColumn
atmIfCAPermanentVpts = _AtmIfCAPermanentVpts_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 110, 1, 15),
    _AtmIfCAPermanentVpts_Type()
)
atmIfCAPermanentVpts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAPermanentVpts.setStatus("mandatory")


class _AtmIfCAPermanentVccs_Type(Unsigned32):
    """Custom type atmIfCAPermanentVccs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_AtmIfCAPermanentVccs_Type.__name__ = "Unsigned32"
_AtmIfCAPermanentVccs_Object = MibTableColumn
atmIfCAPermanentVccs = _AtmIfCAPermanentVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 110, 1, 20),
    _AtmIfCAPermanentVccs_Type()
)
atmIfCAPermanentVccs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAPermanentVccs.setStatus("mandatory")


class _AtmIfCASwitchedVccs_Type(Gauge32):
    """Custom type atmIfCASwitchedVccs based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_AtmIfCASwitchedVccs_Type.__name__ = "Gauge32"
_AtmIfCASwitchedVccs_Object = MibTableColumn
atmIfCASwitchedVccs = _AtmIfCASwitchedVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 110, 1, 30),
    _AtmIfCASwitchedVccs_Type()
)
atmIfCASwitchedVccs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCASwitchedVccs.setStatus("mandatory")


class _AtmIfCASwitchedMulticastBranches_Type(Gauge32):
    """Custom type atmIfCASwitchedMulticastBranches based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10752),
    )


_AtmIfCASwitchedMulticastBranches_Type.__name__ = "Gauge32"
_AtmIfCASwitchedMulticastBranches_Object = MibTableColumn
atmIfCASwitchedMulticastBranches = _AtmIfCASwitchedMulticastBranches_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 110, 1, 40),
    _AtmIfCASwitchedMulticastBranches_Type()
)
atmIfCASwitchedMulticastBranches.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCASwitchedMulticastBranches.setStatus("mandatory")


class _AtmIfCATroubledVpcs_Type(Unsigned32):
    """Custom type atmIfCATroubledVpcs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_AtmIfCATroubledVpcs_Type.__name__ = "Unsigned32"
_AtmIfCATroubledVpcs_Object = MibTableColumn
atmIfCATroubledVpcs = _AtmIfCATroubledVpcs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 110, 1, 60),
    _AtmIfCATroubledVpcs_Type()
)
atmIfCATroubledVpcs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCATroubledVpcs.setStatus("mandatory")


class _AtmIfCATroubledVpts_Type(Unsigned32):
    """Custom type atmIfCATroubledVpts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_AtmIfCATroubledVpts_Type.__name__ = "Unsigned32"
_AtmIfCATroubledVpts_Object = MibTableColumn
atmIfCATroubledVpts = _AtmIfCATroubledVpts_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 110, 1, 65),
    _AtmIfCATroubledVpts_Type()
)
atmIfCATroubledVpts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCATroubledVpts.setStatus("mandatory")


class _AtmIfCATroubledVccs_Type(Unsigned32):
    """Custom type atmIfCATroubledVccs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_AtmIfCATroubledVccs_Type.__name__ = "Unsigned32"
_AtmIfCATroubledVccs_Object = MibTableColumn
atmIfCATroubledVccs = _AtmIfCATroubledVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 110, 1, 70),
    _AtmIfCATroubledVccs_Type()
)
atmIfCATroubledVccs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCATroubledVccs.setStatus("mandatory")


class _AtmIfCAUbrAvailableConnections_Type(Gauge32):
    """Custom type atmIfCAUbrAvailableConnections based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_AtmIfCAUbrAvailableConnections_Type.__name__ = "Gauge32"
_AtmIfCAUbrAvailableConnections_Object = MibTableColumn
atmIfCAUbrAvailableConnections = _AtmIfCAUbrAvailableConnections_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 110, 1, 80),
    _AtmIfCAUbrAvailableConnections_Type()
)
atmIfCAUbrAvailableConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAUbrAvailableConnections.setStatus("obsolete")


class _AtmIfCAConnectionPoolUsage_Type(Gauge32):
    """Custom type atmIfCAConnectionPoolUsage based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_AtmIfCAConnectionPoolUsage_Type.__name__ = "Gauge32"
_AtmIfCAConnectionPoolUsage_Object = MibTableColumn
atmIfCAConnectionPoolUsage = _AtmIfCAConnectionPoolUsage_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 110, 1, 81),
    _AtmIfCAConnectionPoolUsage_Type()
)
atmIfCAConnectionPoolUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAConnectionPoolUsage.setStatus("mandatory")


class _AtmIfCASwitchedVpcs_Type(Gauge32):
    """Custom type atmIfCASwitchedVpcs based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmIfCASwitchedVpcs_Type.__name__ = "Gauge32"
_AtmIfCASwitchedVpcs_Object = MibTableColumn
atmIfCASwitchedVpcs = _AtmIfCASwitchedVpcs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 110, 1, 82),
    _AtmIfCASwitchedVpcs_Type()
)
atmIfCASwitchedVpcs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCASwitchedVpcs.setStatus("mandatory")


class _AtmIfCAVirtualLinkRequestedBandwidth_Type(Unsigned32):
    """Custom type atmIfCAVirtualLinkRequestedBandwidth based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16384),
    )


_AtmIfCAVirtualLinkRequestedBandwidth_Type.__name__ = "Unsigned32"
_AtmIfCAVirtualLinkRequestedBandwidth_Object = MibTableColumn
atmIfCAVirtualLinkRequestedBandwidth = _AtmIfCAVirtualLinkRequestedBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 110, 1, 130),
    _AtmIfCAVirtualLinkRequestedBandwidth_Type()
)
atmIfCAVirtualLinkRequestedBandwidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAVirtualLinkRequestedBandwidth.setStatus("mandatory")


class _AtmIfCAVirtualLinkAdmittedBandwidth_Type(Unsigned32):
    """Custom type atmIfCAVirtualLinkAdmittedBandwidth based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16384),
    )


_AtmIfCAVirtualLinkAdmittedBandwidth_Type.__name__ = "Unsigned32"
_AtmIfCAVirtualLinkAdmittedBandwidth_Object = MibTableColumn
atmIfCAVirtualLinkAdmittedBandwidth = _AtmIfCAVirtualLinkAdmittedBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 110, 1, 131),
    _AtmIfCAVirtualLinkAdmittedBandwidth_Type()
)
atmIfCAVirtualLinkAdmittedBandwidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAVirtualLinkAdmittedBandwidth.setStatus("mandatory")


class _AtmIfCAVirtualLinkUnallocatedBandwidth_Type(Unsigned32):
    """Custom type atmIfCAVirtualLinkUnallocatedBandwidth based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16384),
    )


_AtmIfCAVirtualLinkUnallocatedBandwidth_Type.__name__ = "Unsigned32"
_AtmIfCAVirtualLinkUnallocatedBandwidth_Object = MibTableColumn
atmIfCAVirtualLinkUnallocatedBandwidth = _AtmIfCAVirtualLinkUnallocatedBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 110, 1, 132),
    _AtmIfCAVirtualLinkUnallocatedBandwidth_Type()
)
atmIfCAVirtualLinkUnallocatedBandwidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAVirtualLinkUnallocatedBandwidth.setStatus("mandatory")
_AtmIfCABwPoolTable_Object = MibTable
atmIfCABwPoolTable = _AtmIfCABwPoolTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 293)
)
if mibBuilder.loadTexts:
    atmIfCABwPoolTable.setStatus("mandatory")
_AtmIfCABwPoolEntry_Object = MibTableRow
atmIfCABwPoolEntry = _AtmIfCABwPoolEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 293, 1)
)
atmIfCABwPoolEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCABwPoolIndex"),
)
if mibBuilder.loadTexts:
    atmIfCABwPoolEntry.setStatus("mandatory")


class _AtmIfCABwPoolIndex_Type(Integer32):
    """Custom type atmIfCABwPoolIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfCABwPoolIndex_Type.__name__ = "Integer32"
_AtmIfCABwPoolIndex_Object = MibTableColumn
atmIfCABwPoolIndex = _AtmIfCABwPoolIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 293, 1, 1),
    _AtmIfCABwPoolIndex_Type()
)
atmIfCABwPoolIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfCABwPoolIndex.setStatus("mandatory")


class _AtmIfCABwPoolValue_Type(Unsigned32):
    """Custom type atmIfCABwPoolValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 12800),
    )


_AtmIfCABwPoolValue_Type.__name__ = "Unsigned32"
_AtmIfCABwPoolValue_Object = MibTableColumn
atmIfCABwPoolValue = _AtmIfCABwPoolValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 293, 1, 2),
    _AtmIfCABwPoolValue_Type()
)
atmIfCABwPoolValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCABwPoolValue.setStatus("mandatory")
_AtmIfCAPoolRequBwTable_Object = MibTable
atmIfCAPoolRequBwTable = _AtmIfCAPoolRequBwTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 296)
)
if mibBuilder.loadTexts:
    atmIfCAPoolRequBwTable.setStatus("mandatory")
_AtmIfCAPoolRequBwEntry_Object = MibTableRow
atmIfCAPoolRequBwEntry = _AtmIfCAPoolRequBwEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 296, 1)
)
atmIfCAPoolRequBwEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAPoolRequBwIndex"),
)
if mibBuilder.loadTexts:
    atmIfCAPoolRequBwEntry.setStatus("mandatory")


class _AtmIfCAPoolRequBwIndex_Type(Integer32):
    """Custom type atmIfCAPoolRequBwIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfCAPoolRequBwIndex_Type.__name__ = "Integer32"
_AtmIfCAPoolRequBwIndex_Object = MibTableColumn
atmIfCAPoolRequBwIndex = _AtmIfCAPoolRequBwIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 296, 1, 1),
    _AtmIfCAPoolRequBwIndex_Type()
)
atmIfCAPoolRequBwIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfCAPoolRequBwIndex.setStatus("mandatory")


class _AtmIfCAPoolRequBwValue_Type(Gauge32):
    """Custom type atmIfCAPoolRequBwValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfCAPoolRequBwValue_Type.__name__ = "Gauge32"
_AtmIfCAPoolRequBwValue_Object = MibTableColumn
atmIfCAPoolRequBwValue = _AtmIfCAPoolRequBwValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 296, 1, 2),
    _AtmIfCAPoolRequBwValue_Type()
)
atmIfCAPoolRequBwValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAPoolRequBwValue.setStatus("mandatory")
_AtmIfCAPoolAdmitBwTable_Object = MibTable
atmIfCAPoolAdmitBwTable = _AtmIfCAPoolAdmitBwTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 299)
)
if mibBuilder.loadTexts:
    atmIfCAPoolAdmitBwTable.setStatus("mandatory")
_AtmIfCAPoolAdmitBwEntry_Object = MibTableRow
atmIfCAPoolAdmitBwEntry = _AtmIfCAPoolAdmitBwEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 299, 1)
)
atmIfCAPoolAdmitBwEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAPoolAdmitBwIndex"),
)
if mibBuilder.loadTexts:
    atmIfCAPoolAdmitBwEntry.setStatus("mandatory")


class _AtmIfCAPoolAdmitBwIndex_Type(Integer32):
    """Custom type atmIfCAPoolAdmitBwIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfCAPoolAdmitBwIndex_Type.__name__ = "Integer32"
_AtmIfCAPoolAdmitBwIndex_Object = MibTableColumn
atmIfCAPoolAdmitBwIndex = _AtmIfCAPoolAdmitBwIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 299, 1, 1),
    _AtmIfCAPoolAdmitBwIndex_Type()
)
atmIfCAPoolAdmitBwIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfCAPoolAdmitBwIndex.setStatus("mandatory")


class _AtmIfCAPoolAdmitBwValue_Type(Gauge32):
    """Custom type atmIfCAPoolAdmitBwValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfCAPoolAdmitBwValue_Type.__name__ = "Gauge32"
_AtmIfCAPoolAdmitBwValue_Object = MibTableColumn
atmIfCAPoolAdmitBwValue = _AtmIfCAPoolAdmitBwValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 299, 1, 2),
    _AtmIfCAPoolAdmitBwValue_Type()
)
atmIfCAPoolAdmitBwValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAPoolAdmitBwValue.setStatus("mandatory")
_AtmIfCAPoolAvailBwTable_Object = MibTable
atmIfCAPoolAvailBwTable = _AtmIfCAPoolAvailBwTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 300)
)
if mibBuilder.loadTexts:
    atmIfCAPoolAvailBwTable.setStatus("obsolete")
_AtmIfCAPoolAvailBwEntry_Object = MibTableRow
atmIfCAPoolAvailBwEntry = _AtmIfCAPoolAvailBwEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 300, 1)
)
atmIfCAPoolAvailBwEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAPoolAvailBwIndex"),
)
if mibBuilder.loadTexts:
    atmIfCAPoolAvailBwEntry.setStatus("obsolete")


class _AtmIfCAPoolAvailBwIndex_Type(Integer32):
    """Custom type atmIfCAPoolAvailBwIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_AtmIfCAPoolAvailBwIndex_Type.__name__ = "Integer32"
_AtmIfCAPoolAvailBwIndex_Object = MibTableColumn
atmIfCAPoolAvailBwIndex = _AtmIfCAPoolAvailBwIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 300, 1, 1),
    _AtmIfCAPoolAvailBwIndex_Type()
)
atmIfCAPoolAvailBwIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfCAPoolAvailBwIndex.setStatus("obsolete")


class _AtmIfCAPoolAvailBwValue_Type(Gauge32):
    """Custom type atmIfCAPoolAvailBwValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfCAPoolAvailBwValue_Type.__name__ = "Gauge32"
_AtmIfCAPoolAvailBwValue_Object = MibTableColumn
atmIfCAPoolAvailBwValue = _AtmIfCAPoolAvailBwValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 300, 1, 2),
    _AtmIfCAPoolAvailBwValue_Type()
)
atmIfCAPoolAvailBwValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAPoolAvailBwValue.setStatus("obsolete")
_AtmIfCAPoolProvBwTable_Object = MibTable
atmIfCAPoolProvBwTable = _AtmIfCAPoolProvBwTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 319)
)
if mibBuilder.loadTexts:
    atmIfCAPoolProvBwTable.setStatus("mandatory")
_AtmIfCAPoolProvBwEntry_Object = MibTableRow
atmIfCAPoolProvBwEntry = _AtmIfCAPoolProvBwEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 319, 1)
)
atmIfCAPoolProvBwEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAPoolProvBwIndex"),
)
if mibBuilder.loadTexts:
    atmIfCAPoolProvBwEntry.setStatus("mandatory")


class _AtmIfCAPoolProvBwIndex_Type(Integer32):
    """Custom type atmIfCAPoolProvBwIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfCAPoolProvBwIndex_Type.__name__ = "Integer32"
_AtmIfCAPoolProvBwIndex_Object = MibTableColumn
atmIfCAPoolProvBwIndex = _AtmIfCAPoolProvBwIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 319, 1, 1),
    _AtmIfCAPoolProvBwIndex_Type()
)
atmIfCAPoolProvBwIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfCAPoolProvBwIndex.setStatus("mandatory")


class _AtmIfCAPoolProvBwValue_Type(Gauge32):
    """Custom type atmIfCAPoolProvBwValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfCAPoolProvBwValue_Type.__name__ = "Gauge32"
_AtmIfCAPoolProvBwValue_Object = MibTableColumn
atmIfCAPoolProvBwValue = _AtmIfCAPoolProvBwValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 319, 1, 2),
    _AtmIfCAPoolProvBwValue_Type()
)
atmIfCAPoolProvBwValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAPoolProvBwValue.setStatus("mandatory")
_AtmIfCAPoolWaitAdmConnsTable_Object = MibTable
atmIfCAPoolWaitAdmConnsTable = _AtmIfCAPoolWaitAdmConnsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 320)
)
if mibBuilder.loadTexts:
    atmIfCAPoolWaitAdmConnsTable.setStatus("mandatory")
_AtmIfCAPoolWaitAdmConnsEntry_Object = MibTableRow
atmIfCAPoolWaitAdmConnsEntry = _AtmIfCAPoolWaitAdmConnsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 320, 1)
)
atmIfCAPoolWaitAdmConnsEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAPoolWaitAdmConnsIndex"),
)
if mibBuilder.loadTexts:
    atmIfCAPoolWaitAdmConnsEntry.setStatus("mandatory")


class _AtmIfCAPoolWaitAdmConnsIndex_Type(Integer32):
    """Custom type atmIfCAPoolWaitAdmConnsIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfCAPoolWaitAdmConnsIndex_Type.__name__ = "Integer32"
_AtmIfCAPoolWaitAdmConnsIndex_Object = MibTableColumn
atmIfCAPoolWaitAdmConnsIndex = _AtmIfCAPoolWaitAdmConnsIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 320, 1, 1),
    _AtmIfCAPoolWaitAdmConnsIndex_Type()
)
atmIfCAPoolWaitAdmConnsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfCAPoolWaitAdmConnsIndex.setStatus("mandatory")


class _AtmIfCAPoolWaitAdmConnsValue_Type(Gauge32):
    """Custom type atmIfCAPoolWaitAdmConnsValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_AtmIfCAPoolWaitAdmConnsValue_Type.__name__ = "Gauge32"
_AtmIfCAPoolWaitAdmConnsValue_Object = MibTableColumn
atmIfCAPoolWaitAdmConnsValue = _AtmIfCAPoolWaitAdmConnsValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 320, 1, 2),
    _AtmIfCAPoolWaitAdmConnsValue_Type()
)
atmIfCAPoolWaitAdmConnsValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAPoolWaitAdmConnsValue.setStatus("mandatory")
_AtmIfCAPoolAdmConnsTable_Object = MibTable
atmIfCAPoolAdmConnsTable = _AtmIfCAPoolAdmConnsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 321)
)
if mibBuilder.loadTexts:
    atmIfCAPoolAdmConnsTable.setStatus("mandatory")
_AtmIfCAPoolAdmConnsEntry_Object = MibTableRow
atmIfCAPoolAdmConnsEntry = _AtmIfCAPoolAdmConnsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 321, 1)
)
atmIfCAPoolAdmConnsEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAPoolAdmConnsIndex"),
)
if mibBuilder.loadTexts:
    atmIfCAPoolAdmConnsEntry.setStatus("mandatory")


class _AtmIfCAPoolAdmConnsIndex_Type(Integer32):
    """Custom type atmIfCAPoolAdmConnsIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfCAPoolAdmConnsIndex_Type.__name__ = "Integer32"
_AtmIfCAPoolAdmConnsIndex_Object = MibTableColumn
atmIfCAPoolAdmConnsIndex = _AtmIfCAPoolAdmConnsIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 321, 1, 1),
    _AtmIfCAPoolAdmConnsIndex_Type()
)
atmIfCAPoolAdmConnsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfCAPoolAdmConnsIndex.setStatus("mandatory")


class _AtmIfCAPoolAdmConnsValue_Type(Gauge32):
    """Custom type atmIfCAPoolAdmConnsValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_AtmIfCAPoolAdmConnsValue_Type.__name__ = "Gauge32"
_AtmIfCAPoolAdmConnsValue_Object = MibTableColumn
atmIfCAPoolAdmConnsValue = _AtmIfCAPoolAdmConnsValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 321, 1, 2),
    _AtmIfCAPoolAdmConnsValue_Type()
)
atmIfCAPoolAdmConnsValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAPoolAdmConnsValue.setStatus("mandatory")
_AtmIfCAPoolAvailableBwTable_Object = MibTable
atmIfCAPoolAvailableBwTable = _AtmIfCAPoolAvailableBwTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 326)
)
if mibBuilder.loadTexts:
    atmIfCAPoolAvailableBwTable.setStatus("mandatory")
_AtmIfCAPoolAvailableBwEntry_Object = MibTableRow
atmIfCAPoolAvailableBwEntry = _AtmIfCAPoolAvailableBwEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 326, 1)
)
atmIfCAPoolAvailableBwEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfCAPoolAvailableBwIndex"),
)
if mibBuilder.loadTexts:
    atmIfCAPoolAvailableBwEntry.setStatus("mandatory")


class _AtmIfCAPoolAvailableBwIndex_Type(Integer32):
    """Custom type atmIfCAPoolAvailableBwIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfCAPoolAvailableBwIndex_Type.__name__ = "Integer32"
_AtmIfCAPoolAvailableBwIndex_Object = MibTableColumn
atmIfCAPoolAvailableBwIndex = _AtmIfCAPoolAvailableBwIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 326, 1, 1),
    _AtmIfCAPoolAvailableBwIndex_Type()
)
atmIfCAPoolAvailableBwIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfCAPoolAvailableBwIndex.setStatus("mandatory")


class _AtmIfCAPoolAvailableBwValue_Type(Integer32):
    """Custom type atmIfCAPoolAvailableBwValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-2147483648, 2147483647),
    )


_AtmIfCAPoolAvailableBwValue_Type.__name__ = "Integer32"
_AtmIfCAPoolAvailableBwValue_Object = MibTableColumn
atmIfCAPoolAvailableBwValue = _AtmIfCAPoolAvailableBwValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 3, 326, 1, 2),
    _AtmIfCAPoolAvailableBwValue_Type()
)
atmIfCAPoolAvailableBwValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfCAPoolAvailableBwValue.setStatus("mandatory")
_AtmIfVpc_ObjectIdentity = ObjectIdentity
atmIfVpc = _AtmIfVpc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4)
)
_AtmIfVpcRowStatusTable_Object = MibTable
atmIfVpcRowStatusTable = _AtmIfVpcRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 1)
)
if mibBuilder.loadTexts:
    atmIfVpcRowStatusTable.setStatus("mandatory")
_AtmIfVpcRowStatusEntry_Object = MibTableRow
atmIfVpcRowStatusEntry = _AtmIfVpcRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 1, 1)
)
atmIfVpcRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcRowStatusEntry.setStatus("mandatory")
_AtmIfVpcRowStatus_Type = RowStatus
_AtmIfVpcRowStatus_Object = MibTableColumn
atmIfVpcRowStatus = _AtmIfVpcRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 1, 1, 1),
    _AtmIfVpcRowStatus_Type()
)
atmIfVpcRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcRowStatus.setStatus("mandatory")
_AtmIfVpcComponentName_Type = DisplayString
_AtmIfVpcComponentName_Object = MibTableColumn
atmIfVpcComponentName = _AtmIfVpcComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 1, 1, 2),
    _AtmIfVpcComponentName_Type()
)
atmIfVpcComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcComponentName.setStatus("mandatory")
_AtmIfVpcStorageType_Type = StorageType
_AtmIfVpcStorageType_Object = MibTableColumn
atmIfVpcStorageType = _AtmIfVpcStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 1, 1, 4),
    _AtmIfVpcStorageType_Type()
)
atmIfVpcStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcStorageType.setStatus("mandatory")


class _AtmIfVpcIndex_Type(Integer32):
    """Custom type atmIfVpcIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmIfVpcIndex_Type.__name__ = "Integer32"
_AtmIfVpcIndex_Object = MibTableColumn
atmIfVpcIndex = _AtmIfVpcIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 1, 1, 10),
    _AtmIfVpcIndex_Type()
)
atmIfVpcIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcIndex.setStatus("mandatory")
_AtmIfVpcVpd_ObjectIdentity = ObjectIdentity
atmIfVpcVpd = _AtmIfVpcVpd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2)
)
_AtmIfVpcVpdRowStatusTable_Object = MibTable
atmIfVpcVpdRowStatusTable = _AtmIfVpcVpdRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 1)
)
if mibBuilder.loadTexts:
    atmIfVpcVpdRowStatusTable.setStatus("mandatory")
_AtmIfVpcVpdRowStatusEntry_Object = MibTableRow
atmIfVpcVpdRowStatusEntry = _AtmIfVpcVpdRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 1, 1)
)
atmIfVpcVpdRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcVpdRowStatusEntry.setStatus("mandatory")
_AtmIfVpcVpdRowStatus_Type = RowStatus
_AtmIfVpcVpdRowStatus_Object = MibTableColumn
atmIfVpcVpdRowStatus = _AtmIfVpcVpdRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 1, 1, 1),
    _AtmIfVpcVpdRowStatus_Type()
)
atmIfVpcVpdRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcVpdRowStatus.setStatus("mandatory")
_AtmIfVpcVpdComponentName_Type = DisplayString
_AtmIfVpcVpdComponentName_Object = MibTableColumn
atmIfVpcVpdComponentName = _AtmIfVpcVpdComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 1, 1, 2),
    _AtmIfVpcVpdComponentName_Type()
)
atmIfVpcVpdComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcVpdComponentName.setStatus("mandatory")
_AtmIfVpcVpdStorageType_Type = StorageType
_AtmIfVpcVpdStorageType_Object = MibTableColumn
atmIfVpcVpdStorageType = _AtmIfVpcVpdStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 1, 1, 4),
    _AtmIfVpcVpdStorageType_Type()
)
atmIfVpcVpdStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcVpdStorageType.setStatus("mandatory")
_AtmIfVpcVpdIndex_Type = NonReplicated
_AtmIfVpcVpdIndex_Object = MibTableColumn
atmIfVpcVpdIndex = _AtmIfVpcVpdIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 1, 1, 10),
    _AtmIfVpcVpdIndex_Type()
)
atmIfVpcVpdIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcVpdIndex.setStatus("mandatory")
_AtmIfVpcVpdTm_ObjectIdentity = ObjectIdentity
atmIfVpcVpdTm = _AtmIfVpcVpdTm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2)
)
_AtmIfVpcVpdTmRowStatusTable_Object = MibTable
atmIfVpcVpdTmRowStatusTable = _AtmIfVpcVpdTmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 1)
)
if mibBuilder.loadTexts:
    atmIfVpcVpdTmRowStatusTable.setStatus("mandatory")
_AtmIfVpcVpdTmRowStatusEntry_Object = MibTableRow
atmIfVpcVpdTmRowStatusEntry = _AtmIfVpcVpdTmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 1, 1)
)
atmIfVpcVpdTmRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdTmIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcVpdTmRowStatusEntry.setStatus("mandatory")
_AtmIfVpcVpdTmRowStatus_Type = RowStatus
_AtmIfVpcVpdTmRowStatus_Object = MibTableColumn
atmIfVpcVpdTmRowStatus = _AtmIfVpcVpdTmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 1, 1, 1),
    _AtmIfVpcVpdTmRowStatus_Type()
)
atmIfVpcVpdTmRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmRowStatus.setStatus("mandatory")
_AtmIfVpcVpdTmComponentName_Type = DisplayString
_AtmIfVpcVpdTmComponentName_Object = MibTableColumn
atmIfVpcVpdTmComponentName = _AtmIfVpcVpdTmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 1, 1, 2),
    _AtmIfVpcVpdTmComponentName_Type()
)
atmIfVpcVpdTmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmComponentName.setStatus("mandatory")
_AtmIfVpcVpdTmStorageType_Type = StorageType
_AtmIfVpcVpdTmStorageType_Object = MibTableColumn
atmIfVpcVpdTmStorageType = _AtmIfVpcVpdTmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 1, 1, 4),
    _AtmIfVpcVpdTmStorageType_Type()
)
atmIfVpcVpdTmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmStorageType.setStatus("mandatory")
_AtmIfVpcVpdTmIndex_Type = NonReplicated
_AtmIfVpcVpdTmIndex_Object = MibTableColumn
atmIfVpcVpdTmIndex = _AtmIfVpcVpdTmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 1, 1, 10),
    _AtmIfVpcVpdTmIndex_Type()
)
atmIfVpcVpdTmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmIndex.setStatus("mandatory")
_AtmIfVpcVpdTmAbr_ObjectIdentity = ObjectIdentity
atmIfVpcVpdTmAbr = _AtmIfVpcVpdTmAbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2)
)
_AtmIfVpcVpdTmAbrRowStatusTable_Object = MibTable
atmIfVpcVpdTmAbrRowStatusTable = _AtmIfVpcVpdTmAbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2, 1)
)
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrRowStatusTable.setStatus("mandatory")
_AtmIfVpcVpdTmAbrRowStatusEntry_Object = MibTableRow
atmIfVpcVpdTmAbrRowStatusEntry = _AtmIfVpcVpdTmAbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2, 1, 1)
)
atmIfVpcVpdTmAbrRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdTmAbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrRowStatusEntry.setStatus("mandatory")
_AtmIfVpcVpdTmAbrRowStatus_Type = RowStatus
_AtmIfVpcVpdTmAbrRowStatus_Object = MibTableColumn
atmIfVpcVpdTmAbrRowStatus = _AtmIfVpcVpdTmAbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2, 1, 1, 1),
    _AtmIfVpcVpdTmAbrRowStatus_Type()
)
atmIfVpcVpdTmAbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrRowStatus.setStatus("mandatory")
_AtmIfVpcVpdTmAbrComponentName_Type = DisplayString
_AtmIfVpcVpdTmAbrComponentName_Object = MibTableColumn
atmIfVpcVpdTmAbrComponentName = _AtmIfVpcVpdTmAbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2, 1, 1, 2),
    _AtmIfVpcVpdTmAbrComponentName_Type()
)
atmIfVpcVpdTmAbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrComponentName.setStatus("mandatory")
_AtmIfVpcVpdTmAbrStorageType_Type = StorageType
_AtmIfVpcVpdTmAbrStorageType_Object = MibTableColumn
atmIfVpcVpdTmAbrStorageType = _AtmIfVpcVpdTmAbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2, 1, 1, 4),
    _AtmIfVpcVpdTmAbrStorageType_Type()
)
atmIfVpcVpdTmAbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrStorageType.setStatus("mandatory")
_AtmIfVpcVpdTmAbrIndex_Type = NonReplicated
_AtmIfVpcVpdTmAbrIndex_Object = MibTableColumn
atmIfVpcVpdTmAbrIndex = _AtmIfVpcVpdTmAbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2, 1, 1, 10),
    _AtmIfVpcVpdTmAbrIndex_Type()
)
atmIfVpcVpdTmAbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrIndex.setStatus("mandatory")
_AtmIfVpcVpdTmAbrProvTable_Object = MibTable
atmIfVpcVpdTmAbrProvTable = _AtmIfVpcVpdTmAbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2, 110)
)
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrProvTable.setStatus("mandatory")
_AtmIfVpcVpdTmAbrProvEntry_Object = MibTableRow
atmIfVpcVpdTmAbrProvEntry = _AtmIfVpcVpdTmAbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2, 110, 1)
)
atmIfVpcVpdTmAbrProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdTmAbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrProvEntry.setStatus("mandatory")


class _AtmIfVpcVpdTmAbrInitialCellRate_Type(Unsigned32):
    """Custom type atmIfVpcVpdTmAbrInitialCellRate based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
        ValueRangeConstraint(16777216, 16777216),
        ValueRangeConstraint(16777217, 16777217),
        ValueRangeConstraint(16777218, 16777218),
    )


_AtmIfVpcVpdTmAbrInitialCellRate_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdTmAbrInitialCellRate_Object = MibTableColumn
atmIfVpcVpdTmAbrInitialCellRate = _AtmIfVpcVpdTmAbrInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2, 110, 1, 10),
    _AtmIfVpcVpdTmAbrInitialCellRate_Type()
)
atmIfVpcVpdTmAbrInitialCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrInitialCellRate.setStatus("mandatory")


class _AtmIfVpcVpdTmAbrTransientBufferExposure_Type(Unsigned32):
    """Custom type atmIfVpcVpdTmAbrTransientBufferExposure based on Unsigned32"""
    defaultValue = 16777215

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVpcVpdTmAbrTransientBufferExposure_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdTmAbrTransientBufferExposure_Object = MibTableColumn
atmIfVpcVpdTmAbrTransientBufferExposure = _AtmIfVpcVpdTmAbrTransientBufferExposure_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2, 110, 1, 11),
    _AtmIfVpcVpdTmAbrTransientBufferExposure_Type()
)
atmIfVpcVpdTmAbrTransientBufferExposure.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrTransientBufferExposure.setStatus("mandatory")


class _AtmIfVpcVpdTmAbrFixedRoundTripTime_Type(Unsigned32):
    """Custom type atmIfVpcVpdTmAbrFixedRoundTripTime based on Unsigned32"""
    defaultValue = 5000000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16700000),
    )


_AtmIfVpcVpdTmAbrFixedRoundTripTime_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdTmAbrFixedRoundTripTime_Object = MibTableColumn
atmIfVpcVpdTmAbrFixedRoundTripTime = _AtmIfVpcVpdTmAbrFixedRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2, 110, 1, 12),
    _AtmIfVpcVpdTmAbrFixedRoundTripTime_Type()
)
atmIfVpcVpdTmAbrFixedRoundTripTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrFixedRoundTripTime.setStatus("mandatory")


class _AtmIfVpcVpdTmAbrRateDecreaseFactor_Type(Unsigned32):
    """Custom type atmIfVpcVpdTmAbrRateDecreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVpcVpdTmAbrRateDecreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdTmAbrRateDecreaseFactor_Object = MibTableColumn
atmIfVpcVpdTmAbrRateDecreaseFactor = _AtmIfVpcVpdTmAbrRateDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2, 110, 1, 13),
    _AtmIfVpcVpdTmAbrRateDecreaseFactor_Type()
)
atmIfVpcVpdTmAbrRateDecreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrRateDecreaseFactor.setStatus("mandatory")


class _AtmIfVpcVpdTmAbrRateIncreaseFactor_Type(Unsigned32):
    """Custom type atmIfVpcVpdTmAbrRateIncreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVpcVpdTmAbrRateIncreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdTmAbrRateIncreaseFactor_Object = MibTableColumn
atmIfVpcVpdTmAbrRateIncreaseFactor = _AtmIfVpcVpdTmAbrRateIncreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2, 110, 1, 14),
    _AtmIfVpcVpdTmAbrRateIncreaseFactor_Type()
)
atmIfVpcVpdTmAbrRateIncreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrRateIncreaseFactor.setStatus("mandatory")


class _AtmIfVpcVpdTmAbrMaxCellPerRmCell_Type(Unsigned32):
    """Custom type atmIfVpcVpdTmAbrMaxCellPerRmCell based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVpcVpdTmAbrMaxCellPerRmCell_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdTmAbrMaxCellPerRmCell_Object = MibTableColumn
atmIfVpcVpdTmAbrMaxCellPerRmCell = _AtmIfVpcVpdTmAbrMaxCellPerRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2, 110, 1, 15),
    _AtmIfVpcVpdTmAbrMaxCellPerRmCell_Type()
)
atmIfVpcVpdTmAbrMaxCellPerRmCell.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrMaxCellPerRmCell.setStatus("mandatory")


class _AtmIfVpcVpdTmAbrMaxTimeBetweenRmCells_Type(Unsigned32):
    """Custom type atmIfVpcVpdTmAbrMaxTimeBetweenRmCells based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(781, 781),
        ValueRangeConstraint(1563, 1563),
        ValueRangeConstraint(3125, 3125),
        ValueRangeConstraint(6250, 6250),
        ValueRangeConstraint(12500, 12500),
        ValueRangeConstraint(25000, 25000),
        ValueRangeConstraint(50000, 50000),
        ValueRangeConstraint(100000, 100000),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVpcVpdTmAbrMaxTimeBetweenRmCells_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdTmAbrMaxTimeBetweenRmCells_Object = MibTableColumn
atmIfVpcVpdTmAbrMaxTimeBetweenRmCells = _AtmIfVpcVpdTmAbrMaxTimeBetweenRmCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2, 110, 1, 16),
    _AtmIfVpcVpdTmAbrMaxTimeBetweenRmCells_Type()
)
atmIfVpcVpdTmAbrMaxTimeBetweenRmCells.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrMaxTimeBetweenRmCells.setStatus("mandatory")


class _AtmIfVpcVpdTmAbrCutoffDecreaseFactor_Type(Unsigned32):
    """Custom type atmIfVpcVpdTmAbrCutoffDecreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVpcVpdTmAbrCutoffDecreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdTmAbrCutoffDecreaseFactor_Object = MibTableColumn
atmIfVpcVpdTmAbrCutoffDecreaseFactor = _AtmIfVpcVpdTmAbrCutoffDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2, 110, 1, 17),
    _AtmIfVpcVpdTmAbrCutoffDecreaseFactor_Type()
)
atmIfVpcVpdTmAbrCutoffDecreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrCutoffDecreaseFactor.setStatus("mandatory")


class _AtmIfVpcVpdTmAbrAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type atmIfVpcVpdTmAbrAcrDecreaseTimeFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVpcVpdTmAbrAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdTmAbrAcrDecreaseTimeFactor_Object = MibTableColumn
atmIfVpcVpdTmAbrAcrDecreaseTimeFactor = _AtmIfVpcVpdTmAbrAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2, 110, 1, 18),
    _AtmIfVpcVpdTmAbrAcrDecreaseTimeFactor_Type()
)
atmIfVpcVpdTmAbrAcrDecreaseTimeFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrAcrDecreaseTimeFactor.setStatus("mandatory")


class _AtmIfVpcVpdTmAbrDgcraMaximumDelay_Type(Unsigned32):
    """Custom type atmIfVpcVpdTmAbrDgcraMaximumDelay based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16700000),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVpcVpdTmAbrDgcraMaximumDelay_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdTmAbrDgcraMaximumDelay_Object = MibTableColumn
atmIfVpcVpdTmAbrDgcraMaximumDelay = _AtmIfVpcVpdTmAbrDgcraMaximumDelay_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2, 110, 1, 19),
    _AtmIfVpcVpdTmAbrDgcraMaximumDelay_Type()
)
atmIfVpcVpdTmAbrDgcraMaximumDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrDgcraMaximumDelay.setStatus("mandatory")


class _AtmIfVpcVpdTmAbrDgcraMinimumDelay_Type(Unsigned32):
    """Custom type atmIfVpcVpdTmAbrDgcraMinimumDelay based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16700000),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVpcVpdTmAbrDgcraMinimumDelay_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdTmAbrDgcraMinimumDelay_Object = MibTableColumn
atmIfVpcVpdTmAbrDgcraMinimumDelay = _AtmIfVpcVpdTmAbrDgcraMinimumDelay_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2, 110, 1, 20),
    _AtmIfVpcVpdTmAbrDgcraMinimumDelay_Type()
)
atmIfVpcVpdTmAbrDgcraMinimumDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrDgcraMinimumDelay.setStatus("mandatory")


class _AtmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type atmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor based on Unsigned32"""
    defaultValue = 1024

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
        ValueRangeConstraint(1024, 1024),
    )


_AtmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor_Object = MibTableColumn
atmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor = _AtmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2, 110, 1, 21),
    _AtmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor_Type()
)
atmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor.setStatus("mandatory")


class _AtmIfVpcVpdTmAbrFarEndInitialCellRate_Type(Unsigned32):
    """Custom type atmIfVpcVpdTmAbrFarEndInitialCellRate based on Unsigned32"""
    defaultValue = 16777219

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
        ValueRangeConstraint(16777219, 16777219),
    )


_AtmIfVpcVpdTmAbrFarEndInitialCellRate_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdTmAbrFarEndInitialCellRate_Object = MibTableColumn
atmIfVpcVpdTmAbrFarEndInitialCellRate = _AtmIfVpcVpdTmAbrFarEndInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 2, 110, 1, 22),
    _AtmIfVpcVpdTmAbrFarEndInitialCellRate_Type()
)
atmIfVpcVpdTmAbrFarEndInitialCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrFarEndInitialCellRate.setStatus("mandatory")
_AtmIfVpcVpdTmProvTable_Object = MibTable
atmIfVpcVpdTmProvTable = _AtmIfVpcVpdTmProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100)
)
if mibBuilder.loadTexts:
    atmIfVpcVpdTmProvTable.setStatus("mandatory")
_AtmIfVpcVpdTmProvEntry_Object = MibTableRow
atmIfVpcVpdTmProvEntry = _AtmIfVpcVpdTmProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1)
)
atmIfVpcVpdTmProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdTmIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcVpdTmProvEntry.setStatus("mandatory")


class _AtmIfVpcVpdTmTxTrafficDescType_Type(Integer32):
    """Custom type atmIfVpcVpdTmTxTrafficDescType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_AtmIfVpcVpdTmTxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmTxTrafficDescType_Object = MibTableColumn
atmIfVpcVpdTmTxTrafficDescType = _AtmIfVpcVpdTmTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1, 10),
    _AtmIfVpcVpdTmTxTrafficDescType_Type()
)
atmIfVpcVpdTmTxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmTxTrafficDescType.setStatus("mandatory")


class _AtmIfVpcVpdTmFwdQosClass_Type(Integer32):
    """Custom type atmIfVpcVpdTmFwdQosClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfVpcVpdTmFwdQosClass_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmFwdQosClass_Object = MibTableColumn
atmIfVpcVpdTmFwdQosClass = _AtmIfVpcVpdTmFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1, 21),
    _AtmIfVpcVpdTmFwdQosClass_Type()
)
atmIfVpcVpdTmFwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmFwdQosClass.setStatus("mandatory")


class _AtmIfVpcVpdTmTxQueueLimit_Type(Unsigned32):
    """Custom type atmIfVpcVpdTmTxQueueLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 63488),
    )


_AtmIfVpcVpdTmTxQueueLimit_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdTmTxQueueLimit_Object = MibTableColumn
atmIfVpcVpdTmTxQueueLimit = _AtmIfVpcVpdTmTxQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1, 22),
    _AtmIfVpcVpdTmTxQueueLimit_Type()
)
atmIfVpcVpdTmTxQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmTxQueueLimit.setStatus("mandatory")


class _AtmIfVpcVpdTmHoldingPriority_Type(Integer32):
    """Custom type atmIfVpcVpdTmHoldingPriority based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfVpcVpdTmHoldingPriority_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmHoldingPriority_Object = MibTableColumn
atmIfVpcVpdTmHoldingPriority = _AtmIfVpcVpdTmHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1, 25),
    _AtmIfVpcVpdTmHoldingPriority_Type()
)
atmIfVpcVpdTmHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmHoldingPriority.setStatus("mandatory")


class _AtmIfVpcVpdTmRxTrafficDescType_Type(Integer32):
    """Custom type atmIfVpcVpdTmRxTrafficDescType based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9),
          ("sameAsTx", 15))
    )


_AtmIfVpcVpdTmRxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmRxTrafficDescType_Object = MibTableColumn
atmIfVpcVpdTmRxTrafficDescType = _AtmIfVpcVpdTmRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1, 30),
    _AtmIfVpcVpdTmRxTrafficDescType_Type()
)
atmIfVpcVpdTmRxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmRxTrafficDescType.setStatus("mandatory")


class _AtmIfVpcVpdTmBwdQosClass_Type(Integer32):
    """Custom type atmIfVpcVpdTmBwdQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("sameAsFwd", 15))
    )


_AtmIfVpcVpdTmBwdQosClass_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmBwdQosClass_Object = MibTableColumn
atmIfVpcVpdTmBwdQosClass = _AtmIfVpcVpdTmBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1, 41),
    _AtmIfVpcVpdTmBwdQosClass_Type()
)
atmIfVpcVpdTmBwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmBwdQosClass.setStatus("mandatory")


class _AtmIfVpcVpdTmAtmServiceCategory_Type(Integer32):
    """Custom type atmIfVpcVpdTmAtmServiceCategory based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("availableBitRate", 4),
          ("constantBitRate", 1),
          ("derivedFromBBC", 15),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_AtmIfVpcVpdTmAtmServiceCategory_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmAtmServiceCategory_Object = MibTableColumn
atmIfVpcVpdTmAtmServiceCategory = _AtmIfVpcVpdTmAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1, 42),
    _AtmIfVpcVpdTmAtmServiceCategory_Type()
)
atmIfVpcVpdTmAtmServiceCategory.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAtmServiceCategory.setStatus("mandatory")


class _AtmIfVpcVpdTmTrafficShaping_Type(Integer32):
    """Custom type atmIfVpcVpdTmTrafficShaping based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsCa", 2))
    )


_AtmIfVpcVpdTmTrafficShaping_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmTrafficShaping_Object = MibTableColumn
atmIfVpcVpdTmTrafficShaping = _AtmIfVpcVpdTmTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1, 50),
    _AtmIfVpcVpdTmTrafficShaping_Type()
)
atmIfVpcVpdTmTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmTrafficShaping.setStatus("mandatory")


class _AtmIfVpcVpdTmUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfVpcVpdTmUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("sameAsCa", 3))
    )


_AtmIfVpcVpdTmUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmUnshapedTransmitQueueing_Object = MibTableColumn
atmIfVpcVpdTmUnshapedTransmitQueueing = _AtmIfVpcVpdTmUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1, 60),
    _AtmIfVpcVpdTmUnshapedTransmitQueueing_Type()
)
atmIfVpcVpdTmUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmUnshapedTransmitQueueing.setStatus("mandatory")


class _AtmIfVpcVpdTmWeight_Type(Unsigned32):
    """Custom type atmIfVpcVpdTmWeight based on Unsigned32"""
    defaultValue = 65535

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(65535, 65535),
    )


_AtmIfVpcVpdTmWeight_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdTmWeight_Object = MibTableColumn
atmIfVpcVpdTmWeight = _AtmIfVpcVpdTmWeight_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1, 61),
    _AtmIfVpcVpdTmWeight_Type()
)
atmIfVpcVpdTmWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmWeight.setStatus("mandatory")


class _AtmIfVpcVpdTmForceTagging_Type(Integer32):
    """Custom type atmIfVpcVpdTmForceTagging based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("sameAsCa", 2))
    )


_AtmIfVpcVpdTmForceTagging_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmForceTagging_Object = MibTableColumn
atmIfVpcVpdTmForceTagging = _AtmIfVpcVpdTmForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1, 62),
    _AtmIfVpcVpdTmForceTagging_Type()
)
atmIfVpcVpdTmForceTagging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmForceTagging.setStatus("mandatory")


class _AtmIfVpcVpdTmUsageParameterControl_Type(Integer32):
    """Custom type atmIfVpcVpdTmUsageParameterControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4),
          ("sameAsCa", 2))
    )


_AtmIfVpcVpdTmUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmUsageParameterControl_Object = MibTableColumn
atmIfVpcVpdTmUsageParameterControl = _AtmIfVpcVpdTmUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1, 70),
    _AtmIfVpcVpdTmUsageParameterControl_Type()
)
atmIfVpcVpdTmUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmUsageParameterControl.setStatus("mandatory")


class _AtmIfVpcVpdTmBearerClassBbc_Type(Integer32):
    """Custom type atmIfVpcVpdTmBearerClassBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              31)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("derivedFromServiceCategory", 31),
          ("vp", 24),
          ("x", 16))
    )


_AtmIfVpcVpdTmBearerClassBbc_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmBearerClassBbc_Object = MibTableColumn
atmIfVpcVpdTmBearerClassBbc = _AtmIfVpcVpdTmBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1, 71),
    _AtmIfVpcVpdTmBearerClassBbc_Type()
)
atmIfVpcVpdTmBearerClassBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmBearerClassBbc.setStatus("mandatory")


class _AtmIfVpcVpdTmTransferCapabilityBbc_Type(Integer32):
    """Custom type atmIfVpcVpdTmTransferCapabilityBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 31),
          ("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_AtmIfVpcVpdTmTransferCapabilityBbc_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmTransferCapabilityBbc_Object = MibTableColumn
atmIfVpcVpdTmTransferCapabilityBbc = _AtmIfVpcVpdTmTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1, 72),
    _AtmIfVpcVpdTmTransferCapabilityBbc_Type()
)
atmIfVpcVpdTmTransferCapabilityBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmTransferCapabilityBbc.setStatus("mandatory")


class _AtmIfVpcVpdTmTxWredThreshold_Type(Unsigned32):
    """Custom type atmIfVpcVpdTmTxWredThreshold based on Unsigned32"""
    defaultValue = 25

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(25, 25),
        ValueRangeConstraint(50, 50),
        ValueRangeConstraint(75, 75),
    )


_AtmIfVpcVpdTmTxWredThreshold_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdTmTxWredThreshold_Object = MibTableColumn
atmIfVpcVpdTmTxWredThreshold = _AtmIfVpcVpdTmTxWredThreshold_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1, 73),
    _AtmIfVpcVpdTmTxWredThreshold_Type()
)
atmIfVpcVpdTmTxWredThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmTxWredThreshold.setStatus("mandatory")


class _AtmIfVpcVpdTmClippingBbc_Type(Integer32):
    """Custom type atmIfVpcVpdTmClippingBbc based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVpcVpdTmClippingBbc_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmClippingBbc_Object = MibTableColumn
atmIfVpcVpdTmClippingBbc = _AtmIfVpcVpdTmClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1, 74),
    _AtmIfVpcVpdTmClippingBbc_Type()
)
atmIfVpcVpdTmClippingBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmClippingBbc.setStatus("mandatory")


class _AtmIfVpcVpdTmBestEffort_Type(Integer32):
    """Custom type atmIfVpcVpdTmBestEffort based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              15)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 15),
          ("indicated", 0),
          ("notIndicated", 1))
    )


_AtmIfVpcVpdTmBestEffort_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmBestEffort_Object = MibTableColumn
atmIfVpcVpdTmBestEffort = _AtmIfVpcVpdTmBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1, 75),
    _AtmIfVpcVpdTmBestEffort_Type()
)
atmIfVpcVpdTmBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmBestEffort.setStatus("mandatory")


class _AtmIfVpcVpdTmTxPacketWiseDiscard_Type(Integer32):
    """Custom type atmIfVpcVpdTmTxPacketWiseDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_AtmIfVpcVpdTmTxPacketWiseDiscard_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmTxPacketWiseDiscard_Object = MibTableColumn
atmIfVpcVpdTmTxPacketWiseDiscard = _AtmIfVpcVpdTmTxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1, 76),
    _AtmIfVpcVpdTmTxPacketWiseDiscard_Type()
)
atmIfVpcVpdTmTxPacketWiseDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmTxPacketWiseDiscard.setStatus("mandatory")


class _AtmIfVpcVpdTmTxWredMode_Type(Integer32):
    """Custom type atmIfVpcVpdTmTxWredMode based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1),
          ("perFlow", 2))
    )


_AtmIfVpcVpdTmTxWredMode_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmTxWredMode_Object = MibTableColumn
atmIfVpcVpdTmTxWredMode = _AtmIfVpcVpdTmTxWredMode_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1, 77),
    _AtmIfVpcVpdTmTxWredMode_Type()
)
atmIfVpcVpdTmTxWredMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmTxWredMode.setStatus("mandatory")


class _AtmIfVpcVpdTmRxPacketWiseDiscard_Type(Integer32):
    """Custom type atmIfVpcVpdTmRxPacketWiseDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_AtmIfVpcVpdTmRxPacketWiseDiscard_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmRxPacketWiseDiscard_Object = MibTableColumn
atmIfVpcVpdTmRxPacketWiseDiscard = _AtmIfVpcVpdTmRxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1, 78),
    _AtmIfVpcVpdTmRxPacketWiseDiscard_Type()
)
atmIfVpcVpdTmRxPacketWiseDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmRxPacketWiseDiscard.setStatus("mandatory")


class _AtmIfVpcVpdTmAbrConnectionType_Type(Integer32):
    """Custom type atmIfVpcVpdTmAbrConnectionType based on Integer32"""
    defaultValue = 14

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              3,
              4,
              5,
              14)
        )
    )
    namedValues = NamedValues(
        *(("abrSwitch", 0),
          ("nonAbrInterworking", 5),
          ("sameAsCa", 14),
          ("sourceDest", 4),
          ("virtualSourceDest", 3))
    )


_AtmIfVpcVpdTmAbrConnectionType_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmAbrConnectionType_Object = MibTableColumn
atmIfVpcVpdTmAbrConnectionType = _AtmIfVpcVpdTmAbrConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 100, 1, 90),
    _AtmIfVpcVpdTmAbrConnectionType_Type()
)
atmIfVpcVpdTmAbrConnectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmAbrConnectionType.setStatus("mandatory")
_AtmIfVpcVpdTmTxTdpTable_Object = MibTable
atmIfVpcVpdTmTxTdpTable = _AtmIfVpcVpdTmTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 456)
)
if mibBuilder.loadTexts:
    atmIfVpcVpdTmTxTdpTable.setStatus("mandatory")
_AtmIfVpcVpdTmTxTdpEntry_Object = MibTableRow
atmIfVpcVpdTmTxTdpEntry = _AtmIfVpcVpdTmTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 456, 1)
)
atmIfVpcVpdTmTxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdTmTxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcVpdTmTxTdpEntry.setStatus("mandatory")


class _AtmIfVpcVpdTmTxTdpIndex_Type(Integer32):
    """Custom type atmIfVpcVpdTmTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVpcVpdTmTxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmTxTdpIndex_Object = MibTableColumn
atmIfVpcVpdTmTxTdpIndex = _AtmIfVpcVpdTmTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 456, 1, 1),
    _AtmIfVpcVpdTmTxTdpIndex_Type()
)
atmIfVpcVpdTmTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmTxTdpIndex.setStatus("mandatory")


class _AtmIfVpcVpdTmTxTdpValue_Type(Unsigned32):
    """Custom type atmIfVpcVpdTmTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVpcVpdTmTxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdTmTxTdpValue_Object = MibTableColumn
atmIfVpcVpdTmTxTdpValue = _AtmIfVpcVpdTmTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 456, 1, 2),
    _AtmIfVpcVpdTmTxTdpValue_Type()
)
atmIfVpcVpdTmTxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmTxTdpValue.setStatus("mandatory")
_AtmIfVpcVpdTmRxTdpTable_Object = MibTable
atmIfVpcVpdTmRxTdpTable = _AtmIfVpcVpdTmRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 457)
)
if mibBuilder.loadTexts:
    atmIfVpcVpdTmRxTdpTable.setStatus("mandatory")
_AtmIfVpcVpdTmRxTdpEntry_Object = MibTableRow
atmIfVpcVpdTmRxTdpEntry = _AtmIfVpcVpdTmRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 457, 1)
)
atmIfVpcVpdTmRxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdTmRxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcVpdTmRxTdpEntry.setStatus("mandatory")


class _AtmIfVpcVpdTmRxTdpIndex_Type(Integer32):
    """Custom type atmIfVpcVpdTmRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVpcVpdTmRxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmRxTdpIndex_Object = MibTableColumn
atmIfVpcVpdTmRxTdpIndex = _AtmIfVpcVpdTmRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 457, 1, 1),
    _AtmIfVpcVpdTmRxTdpIndex_Type()
)
atmIfVpcVpdTmRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmRxTdpIndex.setStatus("mandatory")


class _AtmIfVpcVpdTmRxTdpValue_Type(Unsigned32):
    """Custom type atmIfVpcVpdTmRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVpcVpdTmRxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdTmRxTdpValue_Object = MibTableColumn
atmIfVpcVpdTmRxTdpValue = _AtmIfVpcVpdTmRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 457, 1, 2),
    _AtmIfVpcVpdTmRxTdpValue_Type()
)
atmIfVpcVpdTmRxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmRxTdpValue.setStatus("mandatory")
_AtmIfVpcVpdTmFqpTable_Object = MibTable
atmIfVpcVpdTmFqpTable = _AtmIfVpcVpdTmFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 458)
)
if mibBuilder.loadTexts:
    atmIfVpcVpdTmFqpTable.setStatus("mandatory")
_AtmIfVpcVpdTmFqpEntry_Object = MibTableRow
atmIfVpcVpdTmFqpEntry = _AtmIfVpcVpdTmFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 458, 1)
)
atmIfVpcVpdTmFqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdTmFqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcVpdTmFqpEntry.setStatus("mandatory")


class _AtmIfVpcVpdTmFqpIndex_Type(Integer32):
    """Custom type atmIfVpcVpdTmFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVpcVpdTmFqpIndex_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmFqpIndex_Object = MibTableColumn
atmIfVpcVpdTmFqpIndex = _AtmIfVpcVpdTmFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 458, 1, 1),
    _AtmIfVpcVpdTmFqpIndex_Type()
)
atmIfVpcVpdTmFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmFqpIndex.setStatus("mandatory")


class _AtmIfVpcVpdTmFqpValue_Type(Unsigned32):
    """Custom type atmIfVpcVpdTmFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVpcVpdTmFqpValue_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdTmFqpValue_Object = MibTableColumn
atmIfVpcVpdTmFqpValue = _AtmIfVpcVpdTmFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 458, 1, 2),
    _AtmIfVpcVpdTmFqpValue_Type()
)
atmIfVpcVpdTmFqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmFqpValue.setStatus("mandatory")
_AtmIfVpcVpdTmBqpTable_Object = MibTable
atmIfVpcVpdTmBqpTable = _AtmIfVpcVpdTmBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 459)
)
if mibBuilder.loadTexts:
    atmIfVpcVpdTmBqpTable.setStatus("mandatory")
_AtmIfVpcVpdTmBqpEntry_Object = MibTableRow
atmIfVpcVpdTmBqpEntry = _AtmIfVpcVpdTmBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 459, 1)
)
atmIfVpcVpdTmBqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdTmBqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcVpdTmBqpEntry.setStatus("mandatory")


class _AtmIfVpcVpdTmBqpIndex_Type(Integer32):
    """Custom type atmIfVpcVpdTmBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2))
    )


_AtmIfVpcVpdTmBqpIndex_Type.__name__ = "Integer32"
_AtmIfVpcVpdTmBqpIndex_Object = MibTableColumn
atmIfVpcVpdTmBqpIndex = _AtmIfVpcVpdTmBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 459, 1, 1),
    _AtmIfVpcVpdTmBqpIndex_Type()
)
atmIfVpcVpdTmBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmBqpIndex.setStatus("mandatory")


class _AtmIfVpcVpdTmBqpValue_Type(Unsigned32):
    """Custom type atmIfVpcVpdTmBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVpcVpdTmBqpValue_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdTmBqpValue_Object = MibTableColumn
atmIfVpcVpdTmBqpValue = _AtmIfVpcVpdTmBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 2, 459, 1, 2),
    _AtmIfVpcVpdTmBqpValue_Type()
)
atmIfVpcVpdTmBqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTmBqpValue.setStatus("mandatory")
_AtmIfVpcVpdLbkTable_Object = MibTable
atmIfVpcVpdLbkTable = _AtmIfVpcVpdLbkTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 100)
)
if mibBuilder.loadTexts:
    atmIfVpcVpdLbkTable.setStatus("mandatory")
_AtmIfVpcVpdLbkEntry_Object = MibTableRow
atmIfVpcVpdLbkEntry = _AtmIfVpcVpdLbkEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 100, 1)
)
atmIfVpcVpdLbkEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcVpdLbkEntry.setStatus("mandatory")


class _AtmIfVpcVpdSegLinkSideLoopback_Type(Integer32):
    """Custom type atmIfVpcVpdSegLinkSideLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_AtmIfVpcVpdSegLinkSideLoopback_Type.__name__ = "Integer32"
_AtmIfVpcVpdSegLinkSideLoopback_Object = MibTableColumn
atmIfVpcVpdSegLinkSideLoopback = _AtmIfVpcVpdSegLinkSideLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 100, 1, 10),
    _AtmIfVpcVpdSegLinkSideLoopback_Type()
)
atmIfVpcVpdSegLinkSideLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdSegLinkSideLoopback.setStatus("mandatory")


class _AtmIfVpcVpdSegSwitchSideLoopback_Type(Integer32):
    """Custom type atmIfVpcVpdSegSwitchSideLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_AtmIfVpcVpdSegSwitchSideLoopback_Type.__name__ = "Integer32"
_AtmIfVpcVpdSegSwitchSideLoopback_Object = MibTableColumn
atmIfVpcVpdSegSwitchSideLoopback = _AtmIfVpcVpdSegSwitchSideLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 100, 1, 20),
    _AtmIfVpcVpdSegSwitchSideLoopback_Type()
)
atmIfVpcVpdSegSwitchSideLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdSegSwitchSideLoopback.setStatus("mandatory")


class _AtmIfVpcVpdEndToEndLoopback_Type(Integer32):
    """Custom type atmIfVpcVpdEndToEndLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_AtmIfVpcVpdEndToEndLoopback_Type.__name__ = "Integer32"
_AtmIfVpcVpdEndToEndLoopback_Object = MibTableColumn
atmIfVpcVpdEndToEndLoopback = _AtmIfVpcVpdEndToEndLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 100, 1, 30),
    _AtmIfVpcVpdEndToEndLoopback_Type()
)
atmIfVpcVpdEndToEndLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdEndToEndLoopback.setStatus("mandatory")


class _AtmIfVpcVpdLoopbackMonitoring_Type(Integer32):
    """Custom type atmIfVpcVpdLoopbackMonitoring based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_AtmIfVpcVpdLoopbackMonitoring_Type.__name__ = "Integer32"
_AtmIfVpcVpdLoopbackMonitoring_Object = MibTableColumn
atmIfVpcVpdLoopbackMonitoring = _AtmIfVpcVpdLoopbackMonitoring_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 100, 1, 1000),
    _AtmIfVpcVpdLoopbackMonitoring_Type()
)
atmIfVpcVpdLoopbackMonitoring.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdLoopbackMonitoring.setStatus("mandatory")
_AtmIfVpcVpdTrafficTable_Object = MibTable
atmIfVpcVpdTrafficTable = _AtmIfVpcVpdTrafficTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 110)
)
if mibBuilder.loadTexts:
    atmIfVpcVpdTrafficTable.setStatus("mandatory")
_AtmIfVpcVpdTrafficEntry_Object = MibTableRow
atmIfVpcVpdTrafficEntry = _AtmIfVpcVpdTrafficEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 110, 1)
)
atmIfVpcVpdTrafficEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcVpdTrafficEntry.setStatus("mandatory")


class _AtmIfVpcVpdTxTrafficDescType_Type(Integer32):
    """Custom type atmIfVpcVpdTxTrafficDescType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_AtmIfVpcVpdTxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVpcVpdTxTrafficDescType_Object = MibTableColumn
atmIfVpcVpdTxTrafficDescType = _AtmIfVpcVpdTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 110, 1, 10),
    _AtmIfVpcVpdTxTrafficDescType_Type()
)
atmIfVpcVpdTxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTxTrafficDescType.setStatus("obsolete")


class _AtmIfVpcVpdTxQosClass_Type(Integer32):
    """Custom type atmIfVpcVpdTxQosClass based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_AtmIfVpcVpdTxQosClass_Type.__name__ = "Integer32"
_AtmIfVpcVpdTxQosClass_Object = MibTableColumn
atmIfVpcVpdTxQosClass = _AtmIfVpcVpdTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 110, 1, 20),
    _AtmIfVpcVpdTxQosClass_Type()
)
atmIfVpcVpdTxQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTxQosClass.setStatus("obsolete")


class _AtmIfVpcVpdFwdQosClass_Type(Integer32):
    """Custom type atmIfVpcVpdFwdQosClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfVpcVpdFwdQosClass_Type.__name__ = "Integer32"
_AtmIfVpcVpdFwdQosClass_Object = MibTableColumn
atmIfVpcVpdFwdQosClass = _AtmIfVpcVpdFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 110, 1, 21),
    _AtmIfVpcVpdFwdQosClass_Type()
)
atmIfVpcVpdFwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdFwdQosClass.setStatus("obsolete")


class _AtmIfVpcVpdHoldingPriority_Type(Integer32):
    """Custom type atmIfVpcVpdHoldingPriority based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfVpcVpdHoldingPriority_Type.__name__ = "Integer32"
_AtmIfVpcVpdHoldingPriority_Object = MibTableColumn
atmIfVpcVpdHoldingPriority = _AtmIfVpcVpdHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 110, 1, 25),
    _AtmIfVpcVpdHoldingPriority_Type()
)
atmIfVpcVpdHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdHoldingPriority.setStatus("obsolete")


class _AtmIfVpcVpdRxTrafficDescType_Type(Integer32):
    """Custom type atmIfVpcVpdRxTrafficDescType based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("sameAsTx", 15))
    )


_AtmIfVpcVpdRxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVpcVpdRxTrafficDescType_Object = MibTableColumn
atmIfVpcVpdRxTrafficDescType = _AtmIfVpcVpdRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 110, 1, 30),
    _AtmIfVpcVpdRxTrafficDescType_Type()
)
atmIfVpcVpdRxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdRxTrafficDescType.setStatus("obsolete")


class _AtmIfVpcVpdRxQosClass_Type(Integer32):
    """Custom type atmIfVpcVpdRxQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("sameAsTx", 15),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_AtmIfVpcVpdRxQosClass_Type.__name__ = "Integer32"
_AtmIfVpcVpdRxQosClass_Object = MibTableColumn
atmIfVpcVpdRxQosClass = _AtmIfVpcVpdRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 110, 1, 40),
    _AtmIfVpcVpdRxQosClass_Type()
)
atmIfVpcVpdRxQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdRxQosClass.setStatus("obsolete")


class _AtmIfVpcVpdBwdQosClass_Type(Integer32):
    """Custom type atmIfVpcVpdBwdQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("sameAsFwd", 15))
    )


_AtmIfVpcVpdBwdQosClass_Type.__name__ = "Integer32"
_AtmIfVpcVpdBwdQosClass_Object = MibTableColumn
atmIfVpcVpdBwdQosClass = _AtmIfVpcVpdBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 110, 1, 41),
    _AtmIfVpcVpdBwdQosClass_Type()
)
atmIfVpcVpdBwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdBwdQosClass.setStatus("obsolete")


class _AtmIfVpcVpdAtmServiceCategory_Type(Integer32):
    """Custom type atmIfVpcVpdAtmServiceCategory based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              15)
        )
    )
    namedValues = NamedValues(
        *(("constantBitRate", 1),
          ("derivedFromBBC", 15),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_AtmIfVpcVpdAtmServiceCategory_Type.__name__ = "Integer32"
_AtmIfVpcVpdAtmServiceCategory_Object = MibTableColumn
atmIfVpcVpdAtmServiceCategory = _AtmIfVpcVpdAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 110, 1, 42),
    _AtmIfVpcVpdAtmServiceCategory_Type()
)
atmIfVpcVpdAtmServiceCategory.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdAtmServiceCategory.setStatus("obsolete")


class _AtmIfVpcVpdTrafficShaping_Type(Integer32):
    """Custom type atmIfVpcVpdTrafficShaping based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsInterface", 2))
    )


_AtmIfVpcVpdTrafficShaping_Type.__name__ = "Integer32"
_AtmIfVpcVpdTrafficShaping_Object = MibTableColumn
atmIfVpcVpdTrafficShaping = _AtmIfVpcVpdTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 110, 1, 50),
    _AtmIfVpcVpdTrafficShaping_Type()
)
atmIfVpcVpdTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTrafficShaping.setStatus("obsolete")


class _AtmIfVpcVpdUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfVpcVpdUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("sameAsInterface", 3))
    )


_AtmIfVpcVpdUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfVpcVpdUnshapedTransmitQueueing_Object = MibTableColumn
atmIfVpcVpdUnshapedTransmitQueueing = _AtmIfVpcVpdUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 110, 1, 60),
    _AtmIfVpcVpdUnshapedTransmitQueueing_Type()
)
atmIfVpcVpdUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdUnshapedTransmitQueueing.setStatus("obsolete")


class _AtmIfVpcVpdUsageParameterControl_Type(Integer32):
    """Custom type atmIfVpcVpdUsageParameterControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsInterface", 2))
    )


_AtmIfVpcVpdUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfVpcVpdUsageParameterControl_Object = MibTableColumn
atmIfVpcVpdUsageParameterControl = _AtmIfVpcVpdUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 110, 1, 70),
    _AtmIfVpcVpdUsageParameterControl_Type()
)
atmIfVpcVpdUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdUsageParameterControl.setStatus("obsolete")


class _AtmIfVpcVpdBearerClassBbc_Type(Integer32):
    """Custom type atmIfVpcVpdBearerClassBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              31)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("derivedFromServiceCategory", 31),
          ("vp", 24),
          ("x", 16))
    )


_AtmIfVpcVpdBearerClassBbc_Type.__name__ = "Integer32"
_AtmIfVpcVpdBearerClassBbc_Object = MibTableColumn
atmIfVpcVpdBearerClassBbc = _AtmIfVpcVpdBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 110, 1, 71),
    _AtmIfVpcVpdBearerClassBbc_Type()
)
atmIfVpcVpdBearerClassBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdBearerClassBbc.setStatus("obsolete")


class _AtmIfVpcVpdTransferCapabilityBbc_Type(Integer32):
    """Custom type atmIfVpcVpdTransferCapabilityBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 31),
          ("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_AtmIfVpcVpdTransferCapabilityBbc_Type.__name__ = "Integer32"
_AtmIfVpcVpdTransferCapabilityBbc_Object = MibTableColumn
atmIfVpcVpdTransferCapabilityBbc = _AtmIfVpcVpdTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 110, 1, 72),
    _AtmIfVpcVpdTransferCapabilityBbc_Type()
)
atmIfVpcVpdTransferCapabilityBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTransferCapabilityBbc.setStatus("obsolete")


class _AtmIfVpcVpdClippingBbc_Type(Integer32):
    """Custom type atmIfVpcVpdClippingBbc based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVpcVpdClippingBbc_Type.__name__ = "Integer32"
_AtmIfVpcVpdClippingBbc_Object = MibTableColumn
atmIfVpcVpdClippingBbc = _AtmIfVpcVpdClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 110, 1, 74),
    _AtmIfVpcVpdClippingBbc_Type()
)
atmIfVpcVpdClippingBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdClippingBbc.setStatus("obsolete")


class _AtmIfVpcVpdBestEffort_Type(Integer32):
    """Custom type atmIfVpcVpdBestEffort based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              15)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 15),
          ("indicated", 0),
          ("notIndicated", 1))
    )


_AtmIfVpcVpdBestEffort_Type.__name__ = "Integer32"
_AtmIfVpcVpdBestEffort_Object = MibTableColumn
atmIfVpcVpdBestEffort = _AtmIfVpcVpdBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 110, 1, 75),
    _AtmIfVpcVpdBestEffort_Type()
)
atmIfVpcVpdBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdBestEffort.setStatus("obsolete")


class _AtmIfVpcVpdFwdFrameDiscard_Type(Integer32):
    """Custom type atmIfVpcVpdFwdFrameDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_AtmIfVpcVpdFwdFrameDiscard_Type.__name__ = "Integer32"
_AtmIfVpcVpdFwdFrameDiscard_Object = MibTableColumn
atmIfVpcVpdFwdFrameDiscard = _AtmIfVpcVpdFwdFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 110, 1, 76),
    _AtmIfVpcVpdFwdFrameDiscard_Type()
)
atmIfVpcVpdFwdFrameDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdFwdFrameDiscard.setStatus("obsolete")


class _AtmIfVpcVpdBwdFrameDiscard_Type(Integer32):
    """Custom type atmIfVpcVpdBwdFrameDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_AtmIfVpcVpdBwdFrameDiscard_Type.__name__ = "Integer32"
_AtmIfVpcVpdBwdFrameDiscard_Object = MibTableColumn
atmIfVpcVpdBwdFrameDiscard = _AtmIfVpcVpdBwdFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 110, 1, 77),
    _AtmIfVpcVpdBwdFrameDiscard_Type()
)
atmIfVpcVpdBwdFrameDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdBwdFrameDiscard.setStatus("obsolete")
_AtmIfVpcVpdAcctTable_Object = MibTable
atmIfVpcVpdAcctTable = _AtmIfVpcVpdAcctTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 111)
)
if mibBuilder.loadTexts:
    atmIfVpcVpdAcctTable.setStatus("mandatory")
_AtmIfVpcVpdAcctEntry_Object = MibTableRow
atmIfVpcVpdAcctEntry = _AtmIfVpcVpdAcctEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 111, 1)
)
atmIfVpcVpdAcctEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcVpdAcctEntry.setStatus("mandatory")


class _AtmIfVpcVpdCorrelationTag_Type(AsciiString):
    """Custom type atmIfVpcVpdCorrelationTag based on AsciiString"""
    defaultHexValue = ""

    subtypeSpec = AsciiString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_AtmIfVpcVpdCorrelationTag_Type.__name__ = "AsciiString"
_AtmIfVpcVpdCorrelationTag_Object = MibTableColumn
atmIfVpcVpdCorrelationTag = _AtmIfVpcVpdCorrelationTag_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 111, 1, 10),
    _AtmIfVpcVpdCorrelationTag_Type()
)
atmIfVpcVpdCorrelationTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdCorrelationTag.setStatus("mandatory")
_AtmIfVpcVpdTxTdpTable_Object = MibTable
atmIfVpcVpdTxTdpTable = _AtmIfVpcVpdTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 297)
)
if mibBuilder.loadTexts:
    atmIfVpcVpdTxTdpTable.setStatus("obsolete")
_AtmIfVpcVpdTxTdpEntry_Object = MibTableRow
atmIfVpcVpdTxTdpEntry = _AtmIfVpcVpdTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 297, 1)
)
atmIfVpcVpdTxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdTxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcVpdTxTdpEntry.setStatus("obsolete")


class _AtmIfVpcVpdTxTdpIndex_Type(Integer32):
    """Custom type atmIfVpcVpdTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVpcVpdTxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVpcVpdTxTdpIndex_Object = MibTableColumn
atmIfVpcVpdTxTdpIndex = _AtmIfVpcVpdTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 297, 1, 1),
    _AtmIfVpcVpdTxTdpIndex_Type()
)
atmIfVpcVpdTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcVpdTxTdpIndex.setStatus("obsolete")


class _AtmIfVpcVpdTxTdpValue_Type(Unsigned32):
    """Custom type atmIfVpcVpdTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVpcVpdTxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdTxTdpValue_Object = MibTableColumn
atmIfVpcVpdTxTdpValue = _AtmIfVpcVpdTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 297, 1, 2),
    _AtmIfVpcVpdTxTdpValue_Type()
)
atmIfVpcVpdTxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdTxTdpValue.setStatus("obsolete")
_AtmIfVpcVpdRxTdpTable_Object = MibTable
atmIfVpcVpdRxTdpTable = _AtmIfVpcVpdRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 298)
)
if mibBuilder.loadTexts:
    atmIfVpcVpdRxTdpTable.setStatus("obsolete")
_AtmIfVpcVpdRxTdpEntry_Object = MibTableRow
atmIfVpcVpdRxTdpEntry = _AtmIfVpcVpdRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 298, 1)
)
atmIfVpcVpdRxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdRxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcVpdRxTdpEntry.setStatus("obsolete")


class _AtmIfVpcVpdRxTdpIndex_Type(Integer32):
    """Custom type atmIfVpcVpdRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVpcVpdRxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVpcVpdRxTdpIndex_Object = MibTableColumn
atmIfVpcVpdRxTdpIndex = _AtmIfVpcVpdRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 298, 1, 1),
    _AtmIfVpcVpdRxTdpIndex_Type()
)
atmIfVpcVpdRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcVpdRxTdpIndex.setStatus("obsolete")


class _AtmIfVpcVpdRxTdpValue_Type(Unsigned32):
    """Custom type atmIfVpcVpdRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVpcVpdRxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdRxTdpValue_Object = MibTableColumn
atmIfVpcVpdRxTdpValue = _AtmIfVpcVpdRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 298, 1, 2),
    _AtmIfVpcVpdRxTdpValue_Type()
)
atmIfVpcVpdRxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdRxTdpValue.setStatus("obsolete")
_AtmIfVpcVpdFqpTable_Object = MibTable
atmIfVpcVpdFqpTable = _AtmIfVpcVpdFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 359)
)
if mibBuilder.loadTexts:
    atmIfVpcVpdFqpTable.setStatus("obsolete")
_AtmIfVpcVpdFqpEntry_Object = MibTableRow
atmIfVpcVpdFqpEntry = _AtmIfVpcVpdFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 359, 1)
)
atmIfVpcVpdFqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdFqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcVpdFqpEntry.setStatus("obsolete")


class _AtmIfVpcVpdFqpIndex_Type(Integer32):
    """Custom type atmIfVpcVpdFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVpcVpdFqpIndex_Type.__name__ = "Integer32"
_AtmIfVpcVpdFqpIndex_Object = MibTableColumn
atmIfVpcVpdFqpIndex = _AtmIfVpcVpdFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 359, 1, 1),
    _AtmIfVpcVpdFqpIndex_Type()
)
atmIfVpcVpdFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcVpdFqpIndex.setStatus("obsolete")


class _AtmIfVpcVpdFqpValue_Type(Unsigned32):
    """Custom type atmIfVpcVpdFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVpcVpdFqpValue_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdFqpValue_Object = MibTableColumn
atmIfVpcVpdFqpValue = _AtmIfVpcVpdFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 359, 1, 2),
    _AtmIfVpcVpdFqpValue_Type()
)
atmIfVpcVpdFqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdFqpValue.setStatus("obsolete")
_AtmIfVpcVpdBqpTable_Object = MibTable
atmIfVpcVpdBqpTable = _AtmIfVpcVpdBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 360)
)
if mibBuilder.loadTexts:
    atmIfVpcVpdBqpTable.setStatus("obsolete")
_AtmIfVpcVpdBqpEntry_Object = MibTableRow
atmIfVpcVpdBqpEntry = _AtmIfVpcVpdBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 360, 1)
)
atmIfVpcVpdBqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcVpdBqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcVpdBqpEntry.setStatus("obsolete")


class _AtmIfVpcVpdBqpIndex_Type(Integer32):
    """Custom type atmIfVpcVpdBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVpcVpdBqpIndex_Type.__name__ = "Integer32"
_AtmIfVpcVpdBqpIndex_Object = MibTableColumn
atmIfVpcVpdBqpIndex = _AtmIfVpcVpdBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 360, 1, 1),
    _AtmIfVpcVpdBqpIndex_Type()
)
atmIfVpcVpdBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcVpdBqpIndex.setStatus("obsolete")


class _AtmIfVpcVpdBqpValue_Type(Unsigned32):
    """Custom type atmIfVpcVpdBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVpcVpdBqpValue_Type.__name__ = "Unsigned32"
_AtmIfVpcVpdBqpValue_Object = MibTableColumn
atmIfVpcVpdBqpValue = _AtmIfVpcVpdBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 2, 360, 1, 2),
    _AtmIfVpcVpdBqpValue_Type()
)
atmIfVpcVpdBqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcVpdBqpValue.setStatus("obsolete")
_AtmIfVpcLoop_ObjectIdentity = ObjectIdentity
atmIfVpcLoop = _AtmIfVpcLoop_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 3)
)
_AtmIfVpcLoopRowStatusTable_Object = MibTable
atmIfVpcLoopRowStatusTable = _AtmIfVpcLoopRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 3, 1)
)
if mibBuilder.loadTexts:
    atmIfVpcLoopRowStatusTable.setStatus("mandatory")
_AtmIfVpcLoopRowStatusEntry_Object = MibTableRow
atmIfVpcLoopRowStatusEntry = _AtmIfVpcLoopRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 3, 1, 1)
)
atmIfVpcLoopRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcLoopIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcLoopRowStatusEntry.setStatus("mandatory")
_AtmIfVpcLoopRowStatus_Type = RowStatus
_AtmIfVpcLoopRowStatus_Object = MibTableColumn
atmIfVpcLoopRowStatus = _AtmIfVpcLoopRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 3, 1, 1, 1),
    _AtmIfVpcLoopRowStatus_Type()
)
atmIfVpcLoopRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVpcLoopRowStatus.setStatus("mandatory")
_AtmIfVpcLoopComponentName_Type = DisplayString
_AtmIfVpcLoopComponentName_Object = MibTableColumn
atmIfVpcLoopComponentName = _AtmIfVpcLoopComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 3, 1, 1, 2),
    _AtmIfVpcLoopComponentName_Type()
)
atmIfVpcLoopComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcLoopComponentName.setStatus("mandatory")
_AtmIfVpcLoopStorageType_Type = StorageType
_AtmIfVpcLoopStorageType_Object = MibTableColumn
atmIfVpcLoopStorageType = _AtmIfVpcLoopStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 3, 1, 1, 4),
    _AtmIfVpcLoopStorageType_Type()
)
atmIfVpcLoopStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcLoopStorageType.setStatus("mandatory")
_AtmIfVpcLoopIndex_Type = NonReplicated
_AtmIfVpcLoopIndex_Object = MibTableColumn
atmIfVpcLoopIndex = _AtmIfVpcLoopIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 3, 1, 1, 10),
    _AtmIfVpcLoopIndex_Type()
)
atmIfVpcLoopIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcLoopIndex.setStatus("mandatory")
_AtmIfVpcTm_ObjectIdentity = ObjectIdentity
atmIfVpcTm = _AtmIfVpcTm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9)
)
_AtmIfVpcTmRowStatusTable_Object = MibTable
atmIfVpcTmRowStatusTable = _AtmIfVpcTmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 1)
)
if mibBuilder.loadTexts:
    atmIfVpcTmRowStatusTable.setStatus("mandatory")
_AtmIfVpcTmRowStatusEntry_Object = MibTableRow
atmIfVpcTmRowStatusEntry = _AtmIfVpcTmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 1, 1)
)
atmIfVpcTmRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcTmIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcTmRowStatusEntry.setStatus("mandatory")
_AtmIfVpcTmRowStatus_Type = RowStatus
_AtmIfVpcTmRowStatus_Object = MibTableColumn
atmIfVpcTmRowStatus = _AtmIfVpcTmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 1, 1, 1),
    _AtmIfVpcTmRowStatus_Type()
)
atmIfVpcTmRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmRowStatus.setStatus("mandatory")
_AtmIfVpcTmComponentName_Type = DisplayString
_AtmIfVpcTmComponentName_Object = MibTableColumn
atmIfVpcTmComponentName = _AtmIfVpcTmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 1, 1, 2),
    _AtmIfVpcTmComponentName_Type()
)
atmIfVpcTmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmComponentName.setStatus("mandatory")
_AtmIfVpcTmStorageType_Type = StorageType
_AtmIfVpcTmStorageType_Object = MibTableColumn
atmIfVpcTmStorageType = _AtmIfVpcTmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 1, 1, 4),
    _AtmIfVpcTmStorageType_Type()
)
atmIfVpcTmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmStorageType.setStatus("mandatory")
_AtmIfVpcTmIndex_Type = NonReplicated
_AtmIfVpcTmIndex_Object = MibTableColumn
atmIfVpcTmIndex = _AtmIfVpcTmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 1, 1, 10),
    _AtmIfVpcTmIndex_Type()
)
atmIfVpcTmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcTmIndex.setStatus("mandatory")
_AtmIfVpcTmAbr_ObjectIdentity = ObjectIdentity
atmIfVpcTmAbr = _AtmIfVpcTmAbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2)
)
_AtmIfVpcTmAbrRowStatusTable_Object = MibTable
atmIfVpcTmAbrRowStatusTable = _AtmIfVpcTmAbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 1)
)
if mibBuilder.loadTexts:
    atmIfVpcTmAbrRowStatusTable.setStatus("mandatory")
_AtmIfVpcTmAbrRowStatusEntry_Object = MibTableRow
atmIfVpcTmAbrRowStatusEntry = _AtmIfVpcTmAbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 1, 1)
)
atmIfVpcTmAbrRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcTmAbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcTmAbrRowStatusEntry.setStatus("mandatory")
_AtmIfVpcTmAbrRowStatus_Type = RowStatus
_AtmIfVpcTmAbrRowStatus_Object = MibTableColumn
atmIfVpcTmAbrRowStatus = _AtmIfVpcTmAbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 1, 1, 1),
    _AtmIfVpcTmAbrRowStatus_Type()
)
atmIfVpcTmAbrRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmAbrRowStatus.setStatus("mandatory")
_AtmIfVpcTmAbrComponentName_Type = DisplayString
_AtmIfVpcTmAbrComponentName_Object = MibTableColumn
atmIfVpcTmAbrComponentName = _AtmIfVpcTmAbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 1, 1, 2),
    _AtmIfVpcTmAbrComponentName_Type()
)
atmIfVpcTmAbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmAbrComponentName.setStatus("mandatory")
_AtmIfVpcTmAbrStorageType_Type = StorageType
_AtmIfVpcTmAbrStorageType_Object = MibTableColumn
atmIfVpcTmAbrStorageType = _AtmIfVpcTmAbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 1, 1, 4),
    _AtmIfVpcTmAbrStorageType_Type()
)
atmIfVpcTmAbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmAbrStorageType.setStatus("mandatory")
_AtmIfVpcTmAbrIndex_Type = NonReplicated
_AtmIfVpcTmAbrIndex_Object = MibTableColumn
atmIfVpcTmAbrIndex = _AtmIfVpcTmAbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 1, 1, 10),
    _AtmIfVpcTmAbrIndex_Type()
)
atmIfVpcTmAbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcTmAbrIndex.setStatus("mandatory")
_AtmIfVpcTmAbrOperTable_Object = MibTable
atmIfVpcTmAbrOperTable = _AtmIfVpcTmAbrOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 110)
)
if mibBuilder.loadTexts:
    atmIfVpcTmAbrOperTable.setStatus("mandatory")
_AtmIfVpcTmAbrOperEntry_Object = MibTableRow
atmIfVpcTmAbrOperEntry = _AtmIfVpcTmAbrOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 110, 1)
)
atmIfVpcTmAbrOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcTmAbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcTmAbrOperEntry.setStatus("mandatory")


class _AtmIfVpcTmAbrInitialCellRate_Type(Unsigned32):
    """Custom type atmIfVpcTmAbrInitialCellRate based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVpcTmAbrInitialCellRate_Type.__name__ = "Unsigned32"
_AtmIfVpcTmAbrInitialCellRate_Object = MibTableColumn
atmIfVpcTmAbrInitialCellRate = _AtmIfVpcTmAbrInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 110, 1, 10),
    _AtmIfVpcTmAbrInitialCellRate_Type()
)
atmIfVpcTmAbrInitialCellRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmAbrInitialCellRate.setStatus("mandatory")


class _AtmIfVpcTmAbrTransientBufferExposure_Type(Unsigned32):
    """Custom type atmIfVpcTmAbrTransientBufferExposure based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVpcTmAbrTransientBufferExposure_Type.__name__ = "Unsigned32"
_AtmIfVpcTmAbrTransientBufferExposure_Object = MibTableColumn
atmIfVpcTmAbrTransientBufferExposure = _AtmIfVpcTmAbrTransientBufferExposure_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 110, 1, 11),
    _AtmIfVpcTmAbrTransientBufferExposure_Type()
)
atmIfVpcTmAbrTransientBufferExposure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmAbrTransientBufferExposure.setStatus("mandatory")


class _AtmIfVpcTmAbrFixedRoundTripTime_Type(Unsigned32):
    """Custom type atmIfVpcTmAbrFixedRoundTripTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16700000),
    )


_AtmIfVpcTmAbrFixedRoundTripTime_Type.__name__ = "Unsigned32"
_AtmIfVpcTmAbrFixedRoundTripTime_Object = MibTableColumn
atmIfVpcTmAbrFixedRoundTripTime = _AtmIfVpcTmAbrFixedRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 110, 1, 12),
    _AtmIfVpcTmAbrFixedRoundTripTime_Type()
)
atmIfVpcTmAbrFixedRoundTripTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmAbrFixedRoundTripTime.setStatus("mandatory")


class _AtmIfVpcTmAbrRateDecreaseFactor_Type(Unsigned32):
    """Custom type atmIfVpcTmAbrRateDecreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_AtmIfVpcTmAbrRateDecreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVpcTmAbrRateDecreaseFactor_Object = MibTableColumn
atmIfVpcTmAbrRateDecreaseFactor = _AtmIfVpcTmAbrRateDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 110, 1, 13),
    _AtmIfVpcTmAbrRateDecreaseFactor_Type()
)
atmIfVpcTmAbrRateDecreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmAbrRateDecreaseFactor.setStatus("mandatory")


class _AtmIfVpcTmAbrRateIncreaseFactor_Type(Unsigned32):
    """Custom type atmIfVpcTmAbrRateIncreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_AtmIfVpcTmAbrRateIncreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVpcTmAbrRateIncreaseFactor_Object = MibTableColumn
atmIfVpcTmAbrRateIncreaseFactor = _AtmIfVpcTmAbrRateIncreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 110, 1, 14),
    _AtmIfVpcTmAbrRateIncreaseFactor_Type()
)
atmIfVpcTmAbrRateIncreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmAbrRateIncreaseFactor.setStatus("mandatory")


class _AtmIfVpcTmAbrMaxCellPerRmCell_Type(Unsigned32):
    """Custom type atmIfVpcTmAbrMaxCellPerRmCell based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
    )


_AtmIfVpcTmAbrMaxCellPerRmCell_Type.__name__ = "Unsigned32"
_AtmIfVpcTmAbrMaxCellPerRmCell_Object = MibTableColumn
atmIfVpcTmAbrMaxCellPerRmCell = _AtmIfVpcTmAbrMaxCellPerRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 110, 1, 15),
    _AtmIfVpcTmAbrMaxCellPerRmCell_Type()
)
atmIfVpcTmAbrMaxCellPerRmCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmAbrMaxCellPerRmCell.setStatus("mandatory")


class _AtmIfVpcTmAbrMaxTimeBetweenRmCell_Type(Unsigned32):
    """Custom type atmIfVpcTmAbrMaxTimeBetweenRmCell based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(781, 781),
        ValueRangeConstraint(1563, 1563),
        ValueRangeConstraint(3125, 3125),
        ValueRangeConstraint(6250, 6250),
        ValueRangeConstraint(12500, 12500),
        ValueRangeConstraint(25000, 25000),
        ValueRangeConstraint(50000, 50000),
        ValueRangeConstraint(100000, 100000),
    )


_AtmIfVpcTmAbrMaxTimeBetweenRmCell_Type.__name__ = "Unsigned32"
_AtmIfVpcTmAbrMaxTimeBetweenRmCell_Object = MibTableColumn
atmIfVpcTmAbrMaxTimeBetweenRmCell = _AtmIfVpcTmAbrMaxTimeBetweenRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 110, 1, 16),
    _AtmIfVpcTmAbrMaxTimeBetweenRmCell_Type()
)
atmIfVpcTmAbrMaxTimeBetweenRmCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmAbrMaxTimeBetweenRmCell.setStatus("mandatory")


class _AtmIfVpcTmAbrCutoffDecreaseFactor_Type(Unsigned32):
    """Custom type atmIfVpcTmAbrCutoffDecreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
    )


_AtmIfVpcTmAbrCutoffDecreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVpcTmAbrCutoffDecreaseFactor_Object = MibTableColumn
atmIfVpcTmAbrCutoffDecreaseFactor = _AtmIfVpcTmAbrCutoffDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 110, 1, 17),
    _AtmIfVpcTmAbrCutoffDecreaseFactor_Type()
)
atmIfVpcTmAbrCutoffDecreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmAbrCutoffDecreaseFactor.setStatus("mandatory")


class _AtmIfVpcTmAbrAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type atmIfVpcTmAbrAcrDecreaseTimeFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_AtmIfVpcTmAbrAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_AtmIfVpcTmAbrAcrDecreaseTimeFactor_Object = MibTableColumn
atmIfVpcTmAbrAcrDecreaseTimeFactor = _AtmIfVpcTmAbrAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 110, 1, 18),
    _AtmIfVpcTmAbrAcrDecreaseTimeFactor_Type()
)
atmIfVpcTmAbrAcrDecreaseTimeFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmAbrAcrDecreaseTimeFactor.setStatus("mandatory")


class _AtmIfVpcTmAbrForwardRmCellLimit_Type(Unsigned32):
    """Custom type atmIfVpcTmAbrForwardRmCellLimit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(3, 3),
        ValueRangeConstraint(7, 7),
        ValueRangeConstraint(15, 15),
        ValueRangeConstraint(31, 31),
        ValueRangeConstraint(63, 63),
        ValueRangeConstraint(127, 127),
        ValueRangeConstraint(255, 255),
        ValueRangeConstraint(511, 511),
        ValueRangeConstraint(1023, 1023),
        ValueRangeConstraint(2047, 2047),
        ValueRangeConstraint(4095, 4095),
    )


_AtmIfVpcTmAbrForwardRmCellLimit_Type.__name__ = "Unsigned32"
_AtmIfVpcTmAbrForwardRmCellLimit_Object = MibTableColumn
atmIfVpcTmAbrForwardRmCellLimit = _AtmIfVpcTmAbrForwardRmCellLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 110, 1, 19),
    _AtmIfVpcTmAbrForwardRmCellLimit_Type()
)
atmIfVpcTmAbrForwardRmCellLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmAbrForwardRmCellLimit.setStatus("mandatory")


class _AtmIfVpcTmAbrTxRateChangeInfo_Type(Integer32):
    """Custom type atmIfVpcTmAbrTxRateChangeInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("congestionIndicated", 0),
          ("explicitRateIndicated", 2),
          ("noIncreaseIndicated", 1))
    )


_AtmIfVpcTmAbrTxRateChangeInfo_Type.__name__ = "Integer32"
_AtmIfVpcTmAbrTxRateChangeInfo_Object = MibTableColumn
atmIfVpcTmAbrTxRateChangeInfo = _AtmIfVpcTmAbrTxRateChangeInfo_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 110, 1, 20),
    _AtmIfVpcTmAbrTxRateChangeInfo_Type()
)
atmIfVpcTmAbrTxRateChangeInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmAbrTxRateChangeInfo.setStatus("obsolete")


class _AtmIfVpcTmAbrAcrRateChangeInfo_Type(Integer32):
    """Custom type atmIfVpcTmAbrAcrRateChangeInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              15)
        )
    )
    namedValues = NamedValues(
        *(("decreasedByRdf", 1),
          ("increasedByRif", 2),
          ("noChange", 0),
          ("notApplicable", 15),
          ("setToExplicitRate", 3))
    )


_AtmIfVpcTmAbrAcrRateChangeInfo_Type.__name__ = "Integer32"
_AtmIfVpcTmAbrAcrRateChangeInfo_Object = MibTableColumn
atmIfVpcTmAbrAcrRateChangeInfo = _AtmIfVpcTmAbrAcrRateChangeInfo_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 110, 1, 21),
    _AtmIfVpcTmAbrAcrRateChangeInfo_Type()
)
atmIfVpcTmAbrAcrRateChangeInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmAbrAcrRateChangeInfo.setStatus("mandatory")


class _AtmIfVpcTmAbrTxFwdRmCells_Type(Unsigned32):
    """Custom type atmIfVpcTmAbrTxFwdRmCells based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmIfVpcTmAbrTxFwdRmCells_Type.__name__ = "Unsigned32"
_AtmIfVpcTmAbrTxFwdRmCells_Object = MibTableColumn
atmIfVpcTmAbrTxFwdRmCells = _AtmIfVpcTmAbrTxFwdRmCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 110, 1, 22),
    _AtmIfVpcTmAbrTxFwdRmCells_Type()
)
atmIfVpcTmAbrTxFwdRmCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmAbrTxFwdRmCells.setStatus("mandatory")


class _AtmIfVpcTmAbrRxEfci_Type(Integer32):
    """Custom type atmIfVpcTmAbrRxEfci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_AtmIfVpcTmAbrRxEfci_Type.__name__ = "Integer32"
_AtmIfVpcTmAbrRxEfci_Object = MibTableColumn
atmIfVpcTmAbrRxEfci = _AtmIfVpcTmAbrRxEfci_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 110, 1, 23),
    _AtmIfVpcTmAbrRxEfci_Type()
)
atmIfVpcTmAbrRxEfci.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmAbrRxEfci.setStatus("mandatory")


class _AtmIfVpcTmAbrBrmRateChangeInfo_Type(OctetString):
    """Custom type atmIfVpcTmAbrBrmRateChangeInfo based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVpcTmAbrBrmRateChangeInfo_Type.__name__ = "OctetString"
_AtmIfVpcTmAbrBrmRateChangeInfo_Object = MibTableColumn
atmIfVpcTmAbrBrmRateChangeInfo = _AtmIfVpcTmAbrBrmRateChangeInfo_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 110, 1, 24),
    _AtmIfVpcTmAbrBrmRateChangeInfo_Type()
)
atmIfVpcTmAbrBrmRateChangeInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmAbrBrmRateChangeInfo.setStatus("mandatory")


class _AtmIfVpcTmAbrBrmExplicitRate_Type(Unsigned32):
    """Custom type atmIfVpcTmAbrBrmExplicitRate based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVpcTmAbrBrmExplicitRate_Type.__name__ = "Unsigned32"
_AtmIfVpcTmAbrBrmExplicitRate_Object = MibTableColumn
atmIfVpcTmAbrBrmExplicitRate = _AtmIfVpcTmAbrBrmExplicitRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 2, 110, 1, 25),
    _AtmIfVpcTmAbrBrmExplicitRate_Type()
)
atmIfVpcTmAbrBrmExplicitRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmAbrBrmExplicitRate.setStatus("mandatory")
_AtmIfVpcTmOperTable_Object = MibTable
atmIfVpcTmOperTable = _AtmIfVpcTmOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100)
)
if mibBuilder.loadTexts:
    atmIfVpcTmOperTable.setStatus("mandatory")
_AtmIfVpcTmOperEntry_Object = MibTableRow
atmIfVpcTmOperEntry = _AtmIfVpcTmOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1)
)
atmIfVpcTmOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcTmIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcTmOperEntry.setStatus("mandatory")


class _AtmIfVpcTmTxTrafficDescType_Type(Integer32):
    """Custom type atmIfVpcTmTxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_AtmIfVpcTmTxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVpcTmTxTrafficDescType_Object = MibTableColumn
atmIfVpcTmTxTrafficDescType = _AtmIfVpcTmTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 10),
    _AtmIfVpcTmTxTrafficDescType_Type()
)
atmIfVpcTmTxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmTxTrafficDescType.setStatus("mandatory")


class _AtmIfVpcTmTxQosClass_Type(Integer32):
    """Custom type atmIfVpcTmTxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_AtmIfVpcTmTxQosClass_Type.__name__ = "Integer32"
_AtmIfVpcTmTxQosClass_Object = MibTableColumn
atmIfVpcTmTxQosClass = _AtmIfVpcTmTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 31),
    _AtmIfVpcTmTxQosClass_Type()
)
atmIfVpcTmTxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmTxQosClass.setStatus("mandatory")


class _AtmIfVpcTmTxQueueLength_Type(Unsigned32):
    """Custom type atmIfVpcTmTxQueueLength based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_AtmIfVpcTmTxQueueLength_Type.__name__ = "Unsigned32"
_AtmIfVpcTmTxQueueLength_Object = MibTableColumn
atmIfVpcTmTxQueueLength = _AtmIfVpcTmTxQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 32),
    _AtmIfVpcTmTxQueueLength_Type()
)
atmIfVpcTmTxQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmTxQueueLength.setStatus("mandatory")


class _AtmIfVpcTmTxQueueCongestionState_Type(Unsigned32):
    """Custom type atmIfVpcTmTxQueueCongestionState based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_AtmIfVpcTmTxQueueCongestionState_Type.__name__ = "Unsigned32"
_AtmIfVpcTmTxQueueCongestionState_Object = MibTableColumn
atmIfVpcTmTxQueueCongestionState = _AtmIfVpcTmTxQueueCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 33),
    _AtmIfVpcTmTxQueueCongestionState_Type()
)
atmIfVpcTmTxQueueCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmTxQueueCongestionState.setStatus("mandatory")


class _AtmIfVpcTmHoldingPriority_Type(Integer32):
    """Custom type atmIfVpcTmHoldingPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 6))
    )


_AtmIfVpcTmHoldingPriority_Type.__name__ = "Integer32"
_AtmIfVpcTmHoldingPriority_Object = MibTableColumn
atmIfVpcTmHoldingPriority = _AtmIfVpcTmHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 35),
    _AtmIfVpcTmHoldingPriority_Type()
)
atmIfVpcTmHoldingPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmHoldingPriority.setStatus("mandatory")


class _AtmIfVpcTmRxTrafficDescType_Type(Integer32):
    """Custom type atmIfVpcTmRxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_AtmIfVpcTmRxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVpcTmRxTrafficDescType_Object = MibTableColumn
atmIfVpcTmRxTrafficDescType = _AtmIfVpcTmRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 40),
    _AtmIfVpcTmRxTrafficDescType_Type()
)
atmIfVpcTmRxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmRxTrafficDescType.setStatus("mandatory")


class _AtmIfVpcTmRxQosClass_Type(Integer32):
    """Custom type atmIfVpcTmRxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_AtmIfVpcTmRxQosClass_Type.__name__ = "Integer32"
_AtmIfVpcTmRxQosClass_Object = MibTableColumn
atmIfVpcTmRxQosClass = _AtmIfVpcTmRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 61),
    _AtmIfVpcTmRxQosClass_Type()
)
atmIfVpcTmRxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmRxQosClass.setStatus("mandatory")


class _AtmIfVpcTmAtmServiceCategory_Type(Integer32):
    """Custom type atmIfVpcTmAtmServiceCategory based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("availableBitRate", 4),
          ("constantBitRate", 1),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_AtmIfVpcTmAtmServiceCategory_Type.__name__ = "Integer32"
_AtmIfVpcTmAtmServiceCategory_Object = MibTableColumn
atmIfVpcTmAtmServiceCategory = _AtmIfVpcTmAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 62),
    _AtmIfVpcTmAtmServiceCategory_Type()
)
atmIfVpcTmAtmServiceCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmAtmServiceCategory.setStatus("mandatory")


class _AtmIfVpcTmTrafficShaping_Type(Integer32):
    """Custom type atmIfVpcTmTrafficShaping based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("dynamic", 7),
          ("inverseUpc", 6),
          ("linear", 5),
          ("notApplicable", 4))
    )


_AtmIfVpcTmTrafficShaping_Type.__name__ = "Integer32"
_AtmIfVpcTmTrafficShaping_Object = MibTableColumn
atmIfVpcTmTrafficShaping = _AtmIfVpcTmTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 70),
    _AtmIfVpcTmTrafficShaping_Type()
)
atmIfVpcTmTrafficShaping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmTrafficShaping.setStatus("mandatory")


class _AtmIfVpcTmBearerClassBbc_Type(Integer32):
    """Custom type atmIfVpcTmBearerClassBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              30)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("notApplicable", 30),
          ("vp", 24),
          ("x", 16))
    )


_AtmIfVpcTmBearerClassBbc_Type.__name__ = "Integer32"
_AtmIfVpcTmBearerClassBbc_Object = MibTableColumn
atmIfVpcTmBearerClassBbc = _AtmIfVpcTmBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 71),
    _AtmIfVpcTmBearerClassBbc_Type()
)
atmIfVpcTmBearerClassBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmBearerClassBbc.setStatus("mandatory")


class _AtmIfVpcTmTransferCapabilityBbc_Type(Integer32):
    """Custom type atmIfVpcTmTransferCapabilityBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_AtmIfVpcTmTransferCapabilityBbc_Type.__name__ = "Integer32"
_AtmIfVpcTmTransferCapabilityBbc_Object = MibTableColumn
atmIfVpcTmTransferCapabilityBbc = _AtmIfVpcTmTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 72),
    _AtmIfVpcTmTransferCapabilityBbc_Type()
)
atmIfVpcTmTransferCapabilityBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmTransferCapabilityBbc.setStatus("mandatory")


class _AtmIfVpcTmClippingBbc_Type(Integer32):
    """Custom type atmIfVpcTmClippingBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("notApplicable", 14),
          ("yes", 1))
    )


_AtmIfVpcTmClippingBbc_Type.__name__ = "Integer32"
_AtmIfVpcTmClippingBbc_Object = MibTableColumn
atmIfVpcTmClippingBbc = _AtmIfVpcTmClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 74),
    _AtmIfVpcTmClippingBbc_Type()
)
atmIfVpcTmClippingBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmClippingBbc.setStatus("mandatory")


class _AtmIfVpcTmUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfVpcTmUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("fifo", 5),
          ("notApplicable", 4),
          ("perVc", 0))
    )


_AtmIfVpcTmUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfVpcTmUnshapedTransmitQueueing_Object = MibTableColumn
atmIfVpcTmUnshapedTransmitQueueing = _AtmIfVpcTmUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 75),
    _AtmIfVpcTmUnshapedTransmitQueueing_Type()
)
atmIfVpcTmUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmUnshapedTransmitQueueing.setStatus("mandatory")


class _AtmIfVpcTmBestEffort_Type(Integer32):
    """Custom type atmIfVpcTmBestEffort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 0),
          ("notApplicable", 14),
          ("notIndicated", 1))
    )


_AtmIfVpcTmBestEffort_Type.__name__ = "Integer32"
_AtmIfVpcTmBestEffort_Object = MibTableColumn
atmIfVpcTmBestEffort = _AtmIfVpcTmBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 76),
    _AtmIfVpcTmBestEffort_Type()
)
atmIfVpcTmBestEffort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmBestEffort.setStatus("mandatory")


class _AtmIfVpcTmForceTagging_Type(Integer32):
    """Custom type atmIfVpcTmForceTagging based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0))
    )


_AtmIfVpcTmForceTagging_Type.__name__ = "Integer32"
_AtmIfVpcTmForceTagging_Object = MibTableColumn
atmIfVpcTmForceTagging = _AtmIfVpcTmForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 78),
    _AtmIfVpcTmForceTagging_Type()
)
atmIfVpcTmForceTagging.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmForceTagging.setStatus("mandatory")


class _AtmIfVpcTmWeight_Type(Unsigned32):
    """Custom type atmIfVpcTmWeight based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(65534, 65534),
    )


_AtmIfVpcTmWeight_Type.__name__ = "Unsigned32"
_AtmIfVpcTmWeight_Object = MibTableColumn
atmIfVpcTmWeight = _AtmIfVpcTmWeight_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 79),
    _AtmIfVpcTmWeight_Type()
)
atmIfVpcTmWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmWeight.setStatus("mandatory")


class _AtmIfVpcTmUsageParameterControl_Type(Integer32):
    """Custom type atmIfVpcTmUsageParameterControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("abrEnforced", 6),
          ("abrMonitored", 5),
          ("disabled", 1),
          ("enforced", 0),
          ("monitored", 4),
          ("notApplicable", 3))
    )


_AtmIfVpcTmUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfVpcTmUsageParameterControl_Object = MibTableColumn
atmIfVpcTmUsageParameterControl = _AtmIfVpcTmUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 80),
    _AtmIfVpcTmUsageParameterControl_Type()
)
atmIfVpcTmUsageParameterControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmUsageParameterControl.setStatus("mandatory")


class _AtmIfVpcTmTxPacketWiseDiscard_Type(OctetString):
    """Custom type atmIfVpcTmTxPacketWiseDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVpcTmTxPacketWiseDiscard_Type.__name__ = "OctetString"
_AtmIfVpcTmTxPacketWiseDiscard_Object = MibTableColumn
atmIfVpcTmTxPacketWiseDiscard = _AtmIfVpcTmTxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 85),
    _AtmIfVpcTmTxPacketWiseDiscard_Type()
)
atmIfVpcTmTxPacketWiseDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmTxPacketWiseDiscard.setStatus("mandatory")


class _AtmIfVpcTmRxPacketWiseDiscard_Type(OctetString):
    """Custom type atmIfVpcTmRxPacketWiseDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVpcTmRxPacketWiseDiscard_Type.__name__ = "OctetString"
_AtmIfVpcTmRxPacketWiseDiscard_Object = MibTableColumn
atmIfVpcTmRxPacketWiseDiscard = _AtmIfVpcTmRxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 86),
    _AtmIfVpcTmRxPacketWiseDiscard_Type()
)
atmIfVpcTmRxPacketWiseDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmRxPacketWiseDiscard.setStatus("mandatory")


class _AtmIfVpcTmBandwidthElastic_Type(Integer32):
    """Custom type atmIfVpcTmBandwidthElastic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVpcTmBandwidthElastic_Type.__name__ = "Integer32"
_AtmIfVpcTmBandwidthElastic_Object = MibTableColumn
atmIfVpcTmBandwidthElastic = _AtmIfVpcTmBandwidthElastic_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 90),
    _AtmIfVpcTmBandwidthElastic_Type()
)
atmIfVpcTmBandwidthElastic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmBandwidthElastic.setStatus("mandatory")


class _AtmIfVpcTmBandwidthReduction_Type(Unsigned32):
    """Custom type atmIfVpcTmBandwidthReduction based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVpcTmBandwidthReduction_Type.__name__ = "Unsigned32"
_AtmIfVpcTmBandwidthReduction_Object = MibTableColumn
atmIfVpcTmBandwidthReduction = _AtmIfVpcTmBandwidthReduction_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 100),
    _AtmIfVpcTmBandwidthReduction_Type()
)
atmIfVpcTmBandwidthReduction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmBandwidthReduction.setStatus("mandatory")


class _AtmIfVpcTmAbrConnectionType_Type(Integer32):
    """Custom type atmIfVpcTmAbrConnectionType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              15)
        )
    )
    namedValues = NamedValues(
        *(("efciSwitch", 2),
          ("erSwitch", 1),
          ("nonAbrInterworking", 5),
          ("notApplicable", 15),
          ("sourceDest", 4),
          ("virtualSourceDest", 3))
    )


_AtmIfVpcTmAbrConnectionType_Type.__name__ = "Integer32"
_AtmIfVpcTmAbrConnectionType_Object = MibTableColumn
atmIfVpcTmAbrConnectionType = _AtmIfVpcTmAbrConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 100, 1, 110),
    _AtmIfVpcTmAbrConnectionType_Type()
)
atmIfVpcTmAbrConnectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmAbrConnectionType.setStatus("mandatory")
_AtmIfVpcTmTxTdpTable_Object = MibTable
atmIfVpcTmTxTdpTable = _AtmIfVpcTmTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 451)
)
if mibBuilder.loadTexts:
    atmIfVpcTmTxTdpTable.setStatus("mandatory")
_AtmIfVpcTmTxTdpEntry_Object = MibTableRow
atmIfVpcTmTxTdpEntry = _AtmIfVpcTmTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 451, 1)
)
atmIfVpcTmTxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcTmTxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcTmTxTdpEntry.setStatus("mandatory")


class _AtmIfVpcTmTxTdpIndex_Type(Integer32):
    """Custom type atmIfVpcTmTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVpcTmTxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVpcTmTxTdpIndex_Object = MibTableColumn
atmIfVpcTmTxTdpIndex = _AtmIfVpcTmTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 451, 1, 1),
    _AtmIfVpcTmTxTdpIndex_Type()
)
atmIfVpcTmTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcTmTxTdpIndex.setStatus("mandatory")


class _AtmIfVpcTmTxTdpValue_Type(Unsigned32):
    """Custom type atmIfVpcTmTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVpcTmTxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVpcTmTxTdpValue_Object = MibTableColumn
atmIfVpcTmTxTdpValue = _AtmIfVpcTmTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 451, 1, 2),
    _AtmIfVpcTmTxTdpValue_Type()
)
atmIfVpcTmTxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmTxTdpValue.setStatus("mandatory")
_AtmIfVpcTmTxQThreshTable_Object = MibTable
atmIfVpcTmTxQThreshTable = _AtmIfVpcTmTxQThreshTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 452)
)
if mibBuilder.loadTexts:
    atmIfVpcTmTxQThreshTable.setStatus("mandatory")
_AtmIfVpcTmTxQThreshEntry_Object = MibTableRow
atmIfVpcTmTxQThreshEntry = _AtmIfVpcTmTxQThreshEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 452, 1)
)
atmIfVpcTmTxQThreshEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcTmTxQThreshIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcTmTxQThreshEntry.setStatus("mandatory")


class _AtmIfVpcTmTxQThreshIndex_Type(Integer32):
    """Custom type atmIfVpcTmTxQThreshIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_AtmIfVpcTmTxQThreshIndex_Type.__name__ = "Integer32"
_AtmIfVpcTmTxQThreshIndex_Object = MibTableColumn
atmIfVpcTmTxQThreshIndex = _AtmIfVpcTmTxQThreshIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 452, 1, 1),
    _AtmIfVpcTmTxQThreshIndex_Type()
)
atmIfVpcTmTxQThreshIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcTmTxQThreshIndex.setStatus("mandatory")


class _AtmIfVpcTmTxQThreshValue_Type(Unsigned32):
    """Custom type atmIfVpcTmTxQThreshValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_AtmIfVpcTmTxQThreshValue_Type.__name__ = "Unsigned32"
_AtmIfVpcTmTxQThreshValue_Object = MibTableColumn
atmIfVpcTmTxQThreshValue = _AtmIfVpcTmTxQThreshValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 452, 1, 2),
    _AtmIfVpcTmTxQThreshValue_Type()
)
atmIfVpcTmTxQThreshValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmTxQThreshValue.setStatus("mandatory")
_AtmIfVpcTmRxTdpTable_Object = MibTable
atmIfVpcTmRxTdpTable = _AtmIfVpcTmRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 453)
)
if mibBuilder.loadTexts:
    atmIfVpcTmRxTdpTable.setStatus("mandatory")
_AtmIfVpcTmRxTdpEntry_Object = MibTableRow
atmIfVpcTmRxTdpEntry = _AtmIfVpcTmRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 453, 1)
)
atmIfVpcTmRxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcTmRxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcTmRxTdpEntry.setStatus("mandatory")


class _AtmIfVpcTmRxTdpIndex_Type(Integer32):
    """Custom type atmIfVpcTmRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_AtmIfVpcTmRxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVpcTmRxTdpIndex_Object = MibTableColumn
atmIfVpcTmRxTdpIndex = _AtmIfVpcTmRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 453, 1, 1),
    _AtmIfVpcTmRxTdpIndex_Type()
)
atmIfVpcTmRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcTmRxTdpIndex.setStatus("mandatory")


class _AtmIfVpcTmRxTdpValue_Type(Unsigned32):
    """Custom type atmIfVpcTmRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVpcTmRxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVpcTmRxTdpValue_Object = MibTableColumn
atmIfVpcTmRxTdpValue = _AtmIfVpcTmRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 453, 1, 2),
    _AtmIfVpcTmRxTdpValue_Type()
)
atmIfVpcTmRxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmRxTdpValue.setStatus("mandatory")
_AtmIfVpcTmTqpTable_Object = MibTable
atmIfVpcTmTqpTable = _AtmIfVpcTmTqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 454)
)
if mibBuilder.loadTexts:
    atmIfVpcTmTqpTable.setStatus("mandatory")
_AtmIfVpcTmTqpEntry_Object = MibTableRow
atmIfVpcTmTqpEntry = _AtmIfVpcTmTqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 454, 1)
)
atmIfVpcTmTqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcTmTqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcTmTqpEntry.setStatus("mandatory")


class _AtmIfVpcTmTqpIndex_Type(Integer32):
    """Custom type atmIfVpcTmTqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVpcTmTqpIndex_Type.__name__ = "Integer32"
_AtmIfVpcTmTqpIndex_Object = MibTableColumn
atmIfVpcTmTqpIndex = _AtmIfVpcTmTqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 454, 1, 1),
    _AtmIfVpcTmTqpIndex_Type()
)
atmIfVpcTmTqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcTmTqpIndex.setStatus("mandatory")


class _AtmIfVpcTmTqpValue_Type(Unsigned32):
    """Custom type atmIfVpcTmTqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVpcTmTqpValue_Type.__name__ = "Unsigned32"
_AtmIfVpcTmTqpValue_Object = MibTableColumn
atmIfVpcTmTqpValue = _AtmIfVpcTmTqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 454, 1, 2),
    _AtmIfVpcTmTqpValue_Type()
)
atmIfVpcTmTqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmTqpValue.setStatus("mandatory")
_AtmIfVpcTmRqpTable_Object = MibTable
atmIfVpcTmRqpTable = _AtmIfVpcTmRqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 455)
)
if mibBuilder.loadTexts:
    atmIfVpcTmRqpTable.setStatus("mandatory")
_AtmIfVpcTmRqpEntry_Object = MibTableRow
atmIfVpcTmRqpEntry = _AtmIfVpcTmRqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 455, 1)
)
atmIfVpcTmRqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcTmRqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcTmRqpEntry.setStatus("mandatory")


class _AtmIfVpcTmRqpIndex_Type(Integer32):
    """Custom type atmIfVpcTmRqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVpcTmRqpIndex_Type.__name__ = "Integer32"
_AtmIfVpcTmRqpIndex_Object = MibTableColumn
atmIfVpcTmRqpIndex = _AtmIfVpcTmRqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 455, 1, 1),
    _AtmIfVpcTmRqpIndex_Type()
)
atmIfVpcTmRqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcTmRqpIndex.setStatus("mandatory")


class _AtmIfVpcTmRqpValue_Type(Unsigned32):
    """Custom type atmIfVpcTmRqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVpcTmRqpValue_Type.__name__ = "Unsigned32"
_AtmIfVpcTmRqpValue_Object = MibTableColumn
atmIfVpcTmRqpValue = _AtmIfVpcTmRqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 9, 455, 1, 2),
    _AtmIfVpcTmRqpValue_Type()
)
atmIfVpcTmRqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTmRqpValue.setStatus("mandatory")
_AtmIfVpcStateTable_Object = MibTable
atmIfVpcStateTable = _AtmIfVpcStateTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 100)
)
if mibBuilder.loadTexts:
    atmIfVpcStateTable.setStatus("mandatory")
_AtmIfVpcStateEntry_Object = MibTableRow
atmIfVpcStateEntry = _AtmIfVpcStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 100, 1)
)
atmIfVpcStateEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcStateEntry.setStatus("mandatory")


class _AtmIfVpcAdminState_Type(Integer32):
    """Custom type atmIfVpcAdminState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("locked", 0),
          ("shuttingDown", 2),
          ("unlocked", 1))
    )


_AtmIfVpcAdminState_Type.__name__ = "Integer32"
_AtmIfVpcAdminState_Object = MibTableColumn
atmIfVpcAdminState = _AtmIfVpcAdminState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 100, 1, 1),
    _AtmIfVpcAdminState_Type()
)
atmIfVpcAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcAdminState.setStatus("mandatory")


class _AtmIfVpcOperationalState_Type(Integer32):
    """Custom type atmIfVpcOperationalState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_AtmIfVpcOperationalState_Type.__name__ = "Integer32"
_AtmIfVpcOperationalState_Object = MibTableColumn
atmIfVpcOperationalState = _AtmIfVpcOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 100, 1, 2),
    _AtmIfVpcOperationalState_Type()
)
atmIfVpcOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcOperationalState.setStatus("mandatory")


class _AtmIfVpcUsageState_Type(Integer32):
    """Custom type atmIfVpcUsageState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("busy", 2),
          ("idle", 0))
    )


_AtmIfVpcUsageState_Type.__name__ = "Integer32"
_AtmIfVpcUsageState_Object = MibTableColumn
atmIfVpcUsageState = _AtmIfVpcUsageState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 100, 1, 3),
    _AtmIfVpcUsageState_Type()
)
atmIfVpcUsageState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcUsageState.setStatus("mandatory")
_AtmIfVpcOperTable_Object = MibTable
atmIfVpcOperTable = _AtmIfVpcOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 110)
)
if mibBuilder.loadTexts:
    atmIfVpcOperTable.setStatus("mandatory")
_AtmIfVpcOperEntry_Object = MibTableRow
atmIfVpcOperEntry = _AtmIfVpcOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 110, 1)
)
atmIfVpcOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcOperEntry.setStatus("mandatory")


class _AtmIfVpcConnectionPointType_Type(Integer32):
    """Custom type atmIfVpcConnectionPointType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("connectingPoint", 2),
          ("connectionEndPoint", 0),
          ("segmentEndPoint", 1),
          ("unknown", 3))
    )


_AtmIfVpcConnectionPointType_Type.__name__ = "Integer32"
_AtmIfVpcConnectionPointType_Object = MibTableColumn
atmIfVpcConnectionPointType = _AtmIfVpcConnectionPointType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 110, 1, 10),
    _AtmIfVpcConnectionPointType_Type()
)
atmIfVpcConnectionPointType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcConnectionPointType.setStatus("mandatory")
_AtmIfVpcStatusTable_Object = MibTable
atmIfVpcStatusTable = _AtmIfVpcStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 120)
)
if mibBuilder.loadTexts:
    atmIfVpcStatusTable.setStatus("mandatory")
_AtmIfVpcStatusEntry_Object = MibTableRow
atmIfVpcStatusEntry = _AtmIfVpcStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 120, 1)
)
atmIfVpcStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcStatusEntry.setStatus("mandatory")


class _AtmIfVpcOperStatus_Type(Integer32):
    """Custom type atmIfVpcOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("end2endDown", 2),
          ("end2endUp", 1),
          ("localDown", 4),
          ("localUpEnd2endUnknown", 3),
          ("unknown", 0))
    )


_AtmIfVpcOperStatus_Type.__name__ = "Integer32"
_AtmIfVpcOperStatus_Object = MibTableColumn
atmIfVpcOperStatus = _AtmIfVpcOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 120, 1, 20),
    _AtmIfVpcOperStatus_Type()
)
atmIfVpcOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcOperStatus.setStatus("mandatory")


class _AtmIfVpcLocalFailureCause_Type(Integer32):
    """Custom type atmIfVpcLocalFailureCause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("appNotRegistered", 4),
          ("bwReduced", 6),
          ("disabledByApp", 5),
          ("localBwLoss", 1),
          ("noFailure", 0),
          ("notAdmitted", 3),
          ("portDown", 2),
          ("vpDown", 7))
    )


_AtmIfVpcLocalFailureCause_Type.__name__ = "Integer32"
_AtmIfVpcLocalFailureCause_Object = MibTableColumn
atmIfVpcLocalFailureCause = _AtmIfVpcLocalFailureCause_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 120, 1, 25),
    _AtmIfVpcLocalFailureCause_Type()
)
atmIfVpcLocalFailureCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcLocalFailureCause.setStatus("mandatory")


class _AtmIfVpcTroubled_Type(Integer32):
    """Custom type atmIfVpcTroubled based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVpcTroubled_Type.__name__ = "Integer32"
_AtmIfVpcTroubled_Object = MibTableColumn
atmIfVpcTroubled = _AtmIfVpcTroubled_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 120, 1, 28),
    _AtmIfVpcTroubled_Type()
)
atmIfVpcTroubled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTroubled.setStatus("mandatory")


class _AtmIfVpcSegLinkSideLoopbackState_Type(Integer32):
    """Custom type atmIfVpcSegLinkSideLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVpcSegLinkSideLoopbackState_Type.__name__ = "Integer32"
_AtmIfVpcSegLinkSideLoopbackState_Object = MibTableColumn
atmIfVpcSegLinkSideLoopbackState = _AtmIfVpcSegLinkSideLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 120, 1, 30),
    _AtmIfVpcSegLinkSideLoopbackState_Type()
)
atmIfVpcSegLinkSideLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcSegLinkSideLoopbackState.setStatus("mandatory")


class _AtmIfVpcSegSwitchSideLoopbackState_Type(Integer32):
    """Custom type atmIfVpcSegSwitchSideLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVpcSegSwitchSideLoopbackState_Type.__name__ = "Integer32"
_AtmIfVpcSegSwitchSideLoopbackState_Object = MibTableColumn
atmIfVpcSegSwitchSideLoopbackState = _AtmIfVpcSegSwitchSideLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 120, 1, 40),
    _AtmIfVpcSegSwitchSideLoopbackState_Type()
)
atmIfVpcSegSwitchSideLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcSegSwitchSideLoopbackState.setStatus("mandatory")


class _AtmIfVpcEndToEndLoopbackState_Type(Integer32):
    """Custom type atmIfVpcEndToEndLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVpcEndToEndLoopbackState_Type.__name__ = "Integer32"
_AtmIfVpcEndToEndLoopbackState_Object = MibTableColumn
atmIfVpcEndToEndLoopbackState = _AtmIfVpcEndToEndLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 120, 1, 50),
    _AtmIfVpcEndToEndLoopbackState_Type()
)
atmIfVpcEndToEndLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcEndToEndLoopbackState.setStatus("mandatory")


class _AtmIfVpcRxOamCellCongestionState_Type(Integer32):
    """Custom type atmIfVpcRxOamCellCongestionState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVpcRxOamCellCongestionState_Type.__name__ = "Integer32"
_AtmIfVpcRxOamCellCongestionState_Object = MibTableColumn
atmIfVpcRxOamCellCongestionState = _AtmIfVpcRxOamCellCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 120, 1, 55),
    _AtmIfVpcRxOamCellCongestionState_Type()
)
atmIfVpcRxOamCellCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcRxOamCellCongestionState.setStatus("mandatory")


class _AtmIfVpcAisState_Type(Integer32):
    """Custom type atmIfVpcAisState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVpcAisState_Type.__name__ = "Integer32"
_AtmIfVpcAisState_Object = MibTableColumn
atmIfVpcAisState = _AtmIfVpcAisState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 120, 1, 60),
    _AtmIfVpcAisState_Type()
)
atmIfVpcAisState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcAisState.setStatus("mandatory")


class _AtmIfVpcRdiState_Type(Integer32):
    """Custom type atmIfVpcRdiState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVpcRdiState_Type.__name__ = "Integer32"
_AtmIfVpcRdiState_Object = MibTableColumn
atmIfVpcRdiState = _AtmIfVpcRdiState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 120, 1, 70),
    _AtmIfVpcRdiState_Type()
)
atmIfVpcRdiState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcRdiState.setStatus("mandatory")
_AtmIfVpcTrafficTable_Object = MibTable
atmIfVpcTrafficTable = _AtmIfVpcTrafficTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130)
)
if mibBuilder.loadTexts:
    atmIfVpcTrafficTable.setStatus("mandatory")
_AtmIfVpcTrafficEntry_Object = MibTableRow
atmIfVpcTrafficEntry = _AtmIfVpcTrafficEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1)
)
atmIfVpcTrafficEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcTrafficEntry.setStatus("mandatory")


class _AtmIfVpcTxTrafficDescType_Type(Integer32):
    """Custom type atmIfVpcTxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8))
    )


_AtmIfVpcTxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVpcTxTrafficDescType_Object = MibTableColumn
atmIfVpcTxTrafficDescType = _AtmIfVpcTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1, 10),
    _AtmIfVpcTxTrafficDescType_Type()
)
atmIfVpcTxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTxTrafficDescType.setStatus("obsolete")


class _AtmIfVpcTxQosClass_Type(Integer32):
    """Custom type atmIfVpcTxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_AtmIfVpcTxQosClass_Type.__name__ = "Integer32"
_AtmIfVpcTxQosClass_Object = MibTableColumn
atmIfVpcTxQosClass = _AtmIfVpcTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1, 30),
    _AtmIfVpcTxQosClass_Type()
)
atmIfVpcTxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTxQosClass.setStatus("obsolete")


class _AtmIfVpcFwdQosClass_Type(Integer32):
    """Custom type atmIfVpcFwdQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_AtmIfVpcFwdQosClass_Type.__name__ = "Integer32"
_AtmIfVpcFwdQosClass_Object = MibTableColumn
atmIfVpcFwdQosClass = _AtmIfVpcFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1, 31),
    _AtmIfVpcFwdQosClass_Type()
)
atmIfVpcFwdQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcFwdQosClass.setStatus("obsolete")


class _AtmIfVpcTxQueueLength_Type(Integer32):
    """Custom type atmIfVpcTxQueueLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_AtmIfVpcTxQueueLength_Type.__name__ = "Integer32"
_AtmIfVpcTxQueueLength_Object = MibTableColumn
atmIfVpcTxQueueLength = _AtmIfVpcTxQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1, 32),
    _AtmIfVpcTxQueueLength_Type()
)
atmIfVpcTxQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTxQueueLength.setStatus("obsolete")


class _AtmIfVpcTxQueueCongestionState_Type(Integer32):
    """Custom type atmIfVpcTxQueueCongestionState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_AtmIfVpcTxQueueCongestionState_Type.__name__ = "Integer32"
_AtmIfVpcTxQueueCongestionState_Object = MibTableColumn
atmIfVpcTxQueueCongestionState = _AtmIfVpcTxQueueCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1, 33),
    _AtmIfVpcTxQueueCongestionState_Type()
)
atmIfVpcTxQueueCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTxQueueCongestionState.setStatus("obsolete")


class _AtmIfVpcHoldingPriority_Type(Integer32):
    """Custom type atmIfVpcHoldingPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 6))
    )


_AtmIfVpcHoldingPriority_Type.__name__ = "Integer32"
_AtmIfVpcHoldingPriority_Object = MibTableColumn
atmIfVpcHoldingPriority = _AtmIfVpcHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1, 35),
    _AtmIfVpcHoldingPriority_Type()
)
atmIfVpcHoldingPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcHoldingPriority.setStatus("obsolete")


class _AtmIfVpcRxTrafficDescType_Type(Integer32):
    """Custom type atmIfVpcRxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8))
    )


_AtmIfVpcRxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVpcRxTrafficDescType_Object = MibTableColumn
atmIfVpcRxTrafficDescType = _AtmIfVpcRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1, 40),
    _AtmIfVpcRxTrafficDescType_Type()
)
atmIfVpcRxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcRxTrafficDescType.setStatus("obsolete")


class _AtmIfVpcRxQosClass_Type(Integer32):
    """Custom type atmIfVpcRxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_AtmIfVpcRxQosClass_Type.__name__ = "Integer32"
_AtmIfVpcRxQosClass_Object = MibTableColumn
atmIfVpcRxQosClass = _AtmIfVpcRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1, 60),
    _AtmIfVpcRxQosClass_Type()
)
atmIfVpcRxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcRxQosClass.setStatus("obsolete")


class _AtmIfVpcBwdQosClass_Type(Integer32):
    """Custom type atmIfVpcBwdQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_AtmIfVpcBwdQosClass_Type.__name__ = "Integer32"
_AtmIfVpcBwdQosClass_Object = MibTableColumn
atmIfVpcBwdQosClass = _AtmIfVpcBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1, 61),
    _AtmIfVpcBwdQosClass_Type()
)
atmIfVpcBwdQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcBwdQosClass.setStatus("obsolete")


class _AtmIfVpcAtmServiceCategory_Type(Integer32):
    """Custom type atmIfVpcAtmServiceCategory based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("constantBitRate", 1),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_AtmIfVpcAtmServiceCategory_Type.__name__ = "Integer32"
_AtmIfVpcAtmServiceCategory_Object = MibTableColumn
atmIfVpcAtmServiceCategory = _AtmIfVpcAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1, 62),
    _AtmIfVpcAtmServiceCategory_Type()
)
atmIfVpcAtmServiceCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcAtmServiceCategory.setStatus("obsolete")


class _AtmIfVpcTrafficShaping_Type(Integer32):
    """Custom type atmIfVpcTrafficShaping based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("notApplicable", 4))
    )


_AtmIfVpcTrafficShaping_Type.__name__ = "Integer32"
_AtmIfVpcTrafficShaping_Object = MibTableColumn
atmIfVpcTrafficShaping = _AtmIfVpcTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1, 70),
    _AtmIfVpcTrafficShaping_Type()
)
atmIfVpcTrafficShaping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTrafficShaping.setStatus("obsolete")


class _AtmIfVpcBearerClassBbc_Type(Integer32):
    """Custom type atmIfVpcBearerClassBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              30)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("notApplicable", 30),
          ("vp", 24),
          ("x", 16))
    )


_AtmIfVpcBearerClassBbc_Type.__name__ = "Integer32"
_AtmIfVpcBearerClassBbc_Object = MibTableColumn
atmIfVpcBearerClassBbc = _AtmIfVpcBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1, 71),
    _AtmIfVpcBearerClassBbc_Type()
)
atmIfVpcBearerClassBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcBearerClassBbc.setStatus("obsolete")


class _AtmIfVpcTransferCapabilityBbc_Type(Integer32):
    """Custom type atmIfVpcTransferCapabilityBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_AtmIfVpcTransferCapabilityBbc_Type.__name__ = "Integer32"
_AtmIfVpcTransferCapabilityBbc_Object = MibTableColumn
atmIfVpcTransferCapabilityBbc = _AtmIfVpcTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1, 72),
    _AtmIfVpcTransferCapabilityBbc_Type()
)
atmIfVpcTransferCapabilityBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTransferCapabilityBbc.setStatus("obsolete")


class _AtmIfVpcClippingBbc_Type(Integer32):
    """Custom type atmIfVpcClippingBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("notApplicable", 14),
          ("yes", 1))
    )


_AtmIfVpcClippingBbc_Type.__name__ = "Integer32"
_AtmIfVpcClippingBbc_Object = MibTableColumn
atmIfVpcClippingBbc = _AtmIfVpcClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1, 74),
    _AtmIfVpcClippingBbc_Type()
)
atmIfVpcClippingBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcClippingBbc.setStatus("obsolete")


class _AtmIfVpcUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfVpcUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("notApplicable", 4),
          ("perVc", 0))
    )


_AtmIfVpcUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfVpcUnshapedTransmitQueueing_Object = MibTableColumn
atmIfVpcUnshapedTransmitQueueing = _AtmIfVpcUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1, 75),
    _AtmIfVpcUnshapedTransmitQueueing_Type()
)
atmIfVpcUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcUnshapedTransmitQueueing.setStatus("obsolete")


class _AtmIfVpcBestEffort_Type(Integer32):
    """Custom type atmIfVpcBestEffort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 0),
          ("notApplicable", 14),
          ("notIndicated", 1))
    )


_AtmIfVpcBestEffort_Type.__name__ = "Integer32"
_AtmIfVpcBestEffort_Object = MibTableColumn
atmIfVpcBestEffort = _AtmIfVpcBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1, 76),
    _AtmIfVpcBestEffort_Type()
)
atmIfVpcBestEffort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcBestEffort.setStatus("obsolete")


class _AtmIfVpcUsageParameterControl_Type(Integer32):
    """Custom type atmIfVpcUsageParameterControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("notApplicable", 3))
    )


_AtmIfVpcUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfVpcUsageParameterControl_Object = MibTableColumn
atmIfVpcUsageParameterControl = _AtmIfVpcUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1, 80),
    _AtmIfVpcUsageParameterControl_Type()
)
atmIfVpcUsageParameterControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcUsageParameterControl.setStatus("obsolete")


class _AtmIfVpcTxFrameDiscard_Type(OctetString):
    """Custom type atmIfVpcTxFrameDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVpcTxFrameDiscard_Type.__name__ = "OctetString"
_AtmIfVpcTxFrameDiscard_Object = MibTableColumn
atmIfVpcTxFrameDiscard = _AtmIfVpcTxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1, 85),
    _AtmIfVpcTxFrameDiscard_Type()
)
atmIfVpcTxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTxFrameDiscard.setStatus("obsolete")


class _AtmIfVpcRxFrameDiscard_Type(OctetString):
    """Custom type atmIfVpcRxFrameDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVpcRxFrameDiscard_Type.__name__ = "OctetString"
_AtmIfVpcRxFrameDiscard_Object = MibTableColumn
atmIfVpcRxFrameDiscard = _AtmIfVpcRxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1, 86),
    _AtmIfVpcRxFrameDiscard_Type()
)
atmIfVpcRxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcRxFrameDiscard.setStatus("obsolete")


class _AtmIfVpcBandwidthElastic_Type(Integer32):
    """Custom type atmIfVpcBandwidthElastic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVpcBandwidthElastic_Type.__name__ = "Integer32"
_AtmIfVpcBandwidthElastic_Object = MibTableColumn
atmIfVpcBandwidthElastic = _AtmIfVpcBandwidthElastic_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1, 90),
    _AtmIfVpcBandwidthElastic_Type()
)
atmIfVpcBandwidthElastic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcBandwidthElastic.setStatus("obsolete")


class _AtmIfVpcBandwidthReduction_Type(Integer32):
    """Custom type atmIfVpcBandwidthReduction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVpcBandwidthReduction_Type.__name__ = "Integer32"
_AtmIfVpcBandwidthReduction_Object = MibTableColumn
atmIfVpcBandwidthReduction = _AtmIfVpcBandwidthReduction_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 130, 1, 100),
    _AtmIfVpcBandwidthReduction_Type()
)
atmIfVpcBandwidthReduction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcBandwidthReduction.setStatus("obsolete")
_AtmIfVpcStatsTable_Object = MibTable
atmIfVpcStatsTable = _AtmIfVpcStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140)
)
if mibBuilder.loadTexts:
    atmIfVpcStatsTable.setStatus("mandatory")
_AtmIfVpcStatsEntry_Object = MibTableRow
atmIfVpcStatsEntry = _AtmIfVpcStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1)
)
atmIfVpcStatsEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcStatsEntry.setStatus("mandatory")
_AtmIfVpcStatsTxCell_Type = PassportCounter64
_AtmIfVpcStatsTxCell_Object = MibTableColumn
atmIfVpcStatsTxCell = _AtmIfVpcStatsTxCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 10),
    _AtmIfVpcStatsTxCell_Type()
)
atmIfVpcStatsTxCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcStatsTxCell.setStatus("mandatory")
_AtmIfVpcStatsTxCellClp_Type = PassportCounter64
_AtmIfVpcStatsTxCellClp_Object = MibTableColumn
atmIfVpcStatsTxCellClp = _AtmIfVpcStatsTxCellClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 20),
    _AtmIfVpcStatsTxCellClp_Type()
)
atmIfVpcStatsTxCellClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcStatsTxCellClp.setStatus("mandatory")
_AtmIfVpcTxDiscard_Type = PassportCounter64
_AtmIfVpcTxDiscard_Object = MibTableColumn
atmIfVpcTxDiscard = _AtmIfVpcTxDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 30),
    _AtmIfVpcTxDiscard_Type()
)
atmIfVpcTxDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTxDiscard.setStatus("obsolete")
_AtmIfVpcTxDiscardClp_Type = PassportCounter64
_AtmIfVpcTxDiscardClp_Object = MibTableColumn
atmIfVpcTxDiscardClp = _AtmIfVpcTxDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 40),
    _AtmIfVpcTxDiscardClp_Type()
)
atmIfVpcTxDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTxDiscardClp.setStatus("obsolete")
_AtmIfVpcStatsTxCellDiscard_Type = PassportCounter64
_AtmIfVpcStatsTxCellDiscard_Object = MibTableColumn
atmIfVpcStatsTxCellDiscard = _AtmIfVpcStatsTxCellDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 42),
    _AtmIfVpcStatsTxCellDiscard_Type()
)
atmIfVpcStatsTxCellDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcStatsTxCellDiscard.setStatus("mandatory")
_AtmIfVpcStatsTxCellDiscardClp_Type = PassportCounter64
_AtmIfVpcStatsTxCellDiscardClp_Object = MibTableColumn
atmIfVpcStatsTxCellDiscardClp = _AtmIfVpcStatsTxCellDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 43),
    _AtmIfVpcStatsTxCellDiscardClp_Type()
)
atmIfVpcStatsTxCellDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcStatsTxCellDiscardClp.setStatus("mandatory")
_AtmIfVpcStatsTxFrameDiscard_Type = PassportCounter64
_AtmIfVpcStatsTxFrameDiscard_Object = MibTableColumn
atmIfVpcStatsTxFrameDiscard = _AtmIfVpcStatsTxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 46),
    _AtmIfVpcStatsTxFrameDiscard_Type()
)
atmIfVpcStatsTxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcStatsTxFrameDiscard.setStatus("mandatory")
_AtmIfVpcStatsTxFrameDiscardClp_Type = PassportCounter64
_AtmIfVpcStatsTxFrameDiscardClp_Object = MibTableColumn
atmIfVpcStatsTxFrameDiscardClp = _AtmIfVpcStatsTxFrameDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 47),
    _AtmIfVpcStatsTxFrameDiscardClp_Type()
)
atmIfVpcStatsTxFrameDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcStatsTxFrameDiscardClp.setStatus("mandatory")


class _AtmIfVpcTxUtilization_Type(Gauge32):
    """Custom type atmIfVpcTxUtilization based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 200),
        ValueRangeConstraint(255, 255),
    )


_AtmIfVpcTxUtilization_Type.__name__ = "Gauge32"
_AtmIfVpcTxUtilization_Object = MibTableColumn
atmIfVpcTxUtilization = _AtmIfVpcTxUtilization_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 48),
    _AtmIfVpcTxUtilization_Type()
)
atmIfVpcTxUtilization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTxUtilization.setStatus("mandatory")
_AtmIfVpcStatsRxCell_Type = PassportCounter64
_AtmIfVpcStatsRxCell_Object = MibTableColumn
atmIfVpcStatsRxCell = _AtmIfVpcStatsRxCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 50),
    _AtmIfVpcStatsRxCell_Type()
)
atmIfVpcStatsRxCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcStatsRxCell.setStatus("mandatory")
_AtmIfVpcStatsRxCellClp_Type = PassportCounter64
_AtmIfVpcStatsRxCellClp_Object = MibTableColumn
atmIfVpcStatsRxCellClp = _AtmIfVpcStatsRxCellClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 60),
    _AtmIfVpcStatsRxCellClp_Type()
)
atmIfVpcStatsRxCellClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcStatsRxCellClp.setStatus("mandatory")
_AtmIfVpcRxDiscard_Type = PassportCounter64
_AtmIfVpcRxDiscard_Object = MibTableColumn
atmIfVpcRxDiscard = _AtmIfVpcRxDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 70),
    _AtmIfVpcRxDiscard_Type()
)
atmIfVpcRxDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcRxDiscard.setStatus("obsolete")
_AtmIfVpcRxDiscardClp_Type = PassportCounter64
_AtmIfVpcRxDiscardClp_Object = MibTableColumn
atmIfVpcRxDiscardClp = _AtmIfVpcRxDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 80),
    _AtmIfVpcRxDiscardClp_Type()
)
atmIfVpcRxDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcRxDiscardClp.setStatus("obsolete")
_AtmIfVpcStatsRxCellDiscard_Type = PassportCounter64
_AtmIfVpcStatsRxCellDiscard_Object = MibTableColumn
atmIfVpcStatsRxCellDiscard = _AtmIfVpcStatsRxCellDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 82),
    _AtmIfVpcStatsRxCellDiscard_Type()
)
atmIfVpcStatsRxCellDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcStatsRxCellDiscard.setStatus("mandatory")
_AtmIfVpcStatsRxCellDiscardClp_Type = PassportCounter64
_AtmIfVpcStatsRxCellDiscardClp_Object = MibTableColumn
atmIfVpcStatsRxCellDiscardClp = _AtmIfVpcStatsRxCellDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 83),
    _AtmIfVpcStatsRxCellDiscardClp_Type()
)
atmIfVpcStatsRxCellDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcStatsRxCellDiscardClp.setStatus("mandatory")
_AtmIfVpcStatsRxFrameDiscard_Type = PassportCounter64
_AtmIfVpcStatsRxFrameDiscard_Object = MibTableColumn
atmIfVpcStatsRxFrameDiscard = _AtmIfVpcStatsRxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 86),
    _AtmIfVpcStatsRxFrameDiscard_Type()
)
atmIfVpcStatsRxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcStatsRxFrameDiscard.setStatus("mandatory")
_AtmIfVpcStatsRxFrameDiscardClp_Type = PassportCounter64
_AtmIfVpcStatsRxFrameDiscardClp_Object = MibTableColumn
atmIfVpcStatsRxFrameDiscardClp = _AtmIfVpcStatsRxFrameDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 88),
    _AtmIfVpcStatsRxFrameDiscardClp_Type()
)
atmIfVpcStatsRxFrameDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcStatsRxFrameDiscardClp.setStatus("mandatory")


class _AtmIfVpcRxUtilization_Type(Gauge32):
    """Custom type atmIfVpcRxUtilization based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 200),
        ValueRangeConstraint(255, 255),
    )


_AtmIfVpcRxUtilization_Type.__name__ = "Gauge32"
_AtmIfVpcRxUtilization_Object = MibTableColumn
atmIfVpcRxUtilization = _AtmIfVpcRxUtilization_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 89),
    _AtmIfVpcRxUtilization_Type()
)
atmIfVpcRxUtilization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcRxUtilization.setStatus("mandatory")
_AtmIfVpcStatsRxUpcViolationOnEnforcer1_Type = PassportCounter64
_AtmIfVpcStatsRxUpcViolationOnEnforcer1_Object = MibTableColumn
atmIfVpcStatsRxUpcViolationOnEnforcer1 = _AtmIfVpcStatsRxUpcViolationOnEnforcer1_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 90),
    _AtmIfVpcStatsRxUpcViolationOnEnforcer1_Type()
)
atmIfVpcStatsRxUpcViolationOnEnforcer1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcStatsRxUpcViolationOnEnforcer1.setStatus("mandatory")
_AtmIfVpcStatsRxUpcViolationOnEnforcer2_Type = PassportCounter64
_AtmIfVpcStatsRxUpcViolationOnEnforcer2_Object = MibTableColumn
atmIfVpcStatsRxUpcViolationOnEnforcer2 = _AtmIfVpcStatsRxUpcViolationOnEnforcer2_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 92),
    _AtmIfVpcStatsRxUpcViolationOnEnforcer2_Type()
)
atmIfVpcStatsRxUpcViolationOnEnforcer2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcStatsRxUpcViolationOnEnforcer2.setStatus("mandatory")
_AtmIfVpcStatsRxAal5FrameError_Type = PassportCounter64
_AtmIfVpcStatsRxAal5FrameError_Object = MibTableColumn
atmIfVpcStatsRxAal5FrameError = _AtmIfVpcStatsRxAal5FrameError_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 100),
    _AtmIfVpcStatsRxAal5FrameError_Type()
)
atmIfVpcStatsRxAal5FrameError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcStatsRxAal5FrameError.setStatus("mandatory")
_AtmIfVpcStatsRxAal5FrameAbort_Type = PassportCounter64
_AtmIfVpcStatsRxAal5FrameAbort_Object = MibTableColumn
atmIfVpcStatsRxAal5FrameAbort = _AtmIfVpcStatsRxAal5FrameAbort_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 140, 1, 102),
    _AtmIfVpcStatsRxAal5FrameAbort_Type()
)
atmIfVpcStatsRxAal5FrameAbort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcStatsRxAal5FrameAbort.setStatus("mandatory")
_AtmIfVpcTxTdpTable_Object = MibTable
atmIfVpcTxTdpTable = _AtmIfVpcTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 294)
)
if mibBuilder.loadTexts:
    atmIfVpcTxTdpTable.setStatus("obsolete")
_AtmIfVpcTxTdpEntry_Object = MibTableRow
atmIfVpcTxTdpEntry = _AtmIfVpcTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 294, 1)
)
atmIfVpcTxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcTxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcTxTdpEntry.setStatus("obsolete")


class _AtmIfVpcTxTdpIndex_Type(Integer32):
    """Custom type atmIfVpcTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVpcTxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVpcTxTdpIndex_Object = MibTableColumn
atmIfVpcTxTdpIndex = _AtmIfVpcTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 294, 1, 1),
    _AtmIfVpcTxTdpIndex_Type()
)
atmIfVpcTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcTxTdpIndex.setStatus("obsolete")


class _AtmIfVpcTxTdpValue_Type(Unsigned32):
    """Custom type atmIfVpcTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVpcTxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVpcTxTdpValue_Object = MibTableColumn
atmIfVpcTxTdpValue = _AtmIfVpcTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 294, 1, 2),
    _AtmIfVpcTxTdpValue_Type()
)
atmIfVpcTxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTxTdpValue.setStatus("obsolete")
_AtmIfVpcRxTdpTable_Object = MibTable
atmIfVpcRxTdpTable = _AtmIfVpcRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 295)
)
if mibBuilder.loadTexts:
    atmIfVpcRxTdpTable.setStatus("obsolete")
_AtmIfVpcRxTdpEntry_Object = MibTableRow
atmIfVpcRxTdpEntry = _AtmIfVpcRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 295, 1)
)
atmIfVpcRxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcRxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcRxTdpEntry.setStatus("obsolete")


class _AtmIfVpcRxTdpIndex_Type(Integer32):
    """Custom type atmIfVpcRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_AtmIfVpcRxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVpcRxTdpIndex_Object = MibTableColumn
atmIfVpcRxTdpIndex = _AtmIfVpcRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 295, 1, 1),
    _AtmIfVpcRxTdpIndex_Type()
)
atmIfVpcRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcRxTdpIndex.setStatus("obsolete")


class _AtmIfVpcRxTdpValue_Type(Unsigned32):
    """Custom type atmIfVpcRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVpcRxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVpcRxTdpValue_Object = MibTableColumn
atmIfVpcRxTdpValue = _AtmIfVpcRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 295, 1, 2),
    _AtmIfVpcRxTdpValue_Type()
)
atmIfVpcRxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcRxTdpValue.setStatus("obsolete")
_AtmIfVpcTxQThreshTable_Object = MibTable
atmIfVpcTxQThreshTable = _AtmIfVpcTxQThreshTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 352)
)
if mibBuilder.loadTexts:
    atmIfVpcTxQThreshTable.setStatus("obsolete")
_AtmIfVpcTxQThreshEntry_Object = MibTableRow
atmIfVpcTxQThreshEntry = _AtmIfVpcTxQThreshEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 352, 1)
)
atmIfVpcTxQThreshEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcTxQThreshIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcTxQThreshEntry.setStatus("obsolete")


class _AtmIfVpcTxQThreshIndex_Type(Integer32):
    """Custom type atmIfVpcTxQThreshIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_AtmIfVpcTxQThreshIndex_Type.__name__ = "Integer32"
_AtmIfVpcTxQThreshIndex_Object = MibTableColumn
atmIfVpcTxQThreshIndex = _AtmIfVpcTxQThreshIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 352, 1, 1),
    _AtmIfVpcTxQThreshIndex_Type()
)
atmIfVpcTxQThreshIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcTxQThreshIndex.setStatus("obsolete")


class _AtmIfVpcTxQThreshValue_Type(Unsigned32):
    """Custom type atmIfVpcTxQThreshValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_AtmIfVpcTxQThreshValue_Type.__name__ = "Unsigned32"
_AtmIfVpcTxQThreshValue_Object = MibTableColumn
atmIfVpcTxQThreshValue = _AtmIfVpcTxQThreshValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 352, 1, 2),
    _AtmIfVpcTxQThreshValue_Type()
)
atmIfVpcTxQThreshValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcTxQThreshValue.setStatus("obsolete")
_AtmIfVpcFqpTable_Object = MibTable
atmIfVpcFqpTable = _AtmIfVpcFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 357)
)
if mibBuilder.loadTexts:
    atmIfVpcFqpTable.setStatus("obsolete")
_AtmIfVpcFqpEntry_Object = MibTableRow
atmIfVpcFqpEntry = _AtmIfVpcFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 357, 1)
)
atmIfVpcFqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcFqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcFqpEntry.setStatus("obsolete")


class _AtmIfVpcFqpIndex_Type(Integer32):
    """Custom type atmIfVpcFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVpcFqpIndex_Type.__name__ = "Integer32"
_AtmIfVpcFqpIndex_Object = MibTableColumn
atmIfVpcFqpIndex = _AtmIfVpcFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 357, 1, 1),
    _AtmIfVpcFqpIndex_Type()
)
atmIfVpcFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcFqpIndex.setStatus("obsolete")


class _AtmIfVpcFqpValue_Type(Unsigned32):
    """Custom type atmIfVpcFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVpcFqpValue_Type.__name__ = "Unsigned32"
_AtmIfVpcFqpValue_Object = MibTableColumn
atmIfVpcFqpValue = _AtmIfVpcFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 357, 1, 2),
    _AtmIfVpcFqpValue_Type()
)
atmIfVpcFqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcFqpValue.setStatus("obsolete")
_AtmIfVpcBqpTable_Object = MibTable
atmIfVpcBqpTable = _AtmIfVpcBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 358)
)
if mibBuilder.loadTexts:
    atmIfVpcBqpTable.setStatus("obsolete")
_AtmIfVpcBqpEntry_Object = MibTableRow
atmIfVpcBqpEntry = _AtmIfVpcBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 358, 1)
)
atmIfVpcBqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVpcBqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVpcBqpEntry.setStatus("obsolete")


class _AtmIfVpcBqpIndex_Type(Integer32):
    """Custom type atmIfVpcBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVpcBqpIndex_Type.__name__ = "Integer32"
_AtmIfVpcBqpIndex_Object = MibTableColumn
atmIfVpcBqpIndex = _AtmIfVpcBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 358, 1, 1),
    _AtmIfVpcBqpIndex_Type()
)
atmIfVpcBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVpcBqpIndex.setStatus("obsolete")


class _AtmIfVpcBqpValue_Type(Unsigned32):
    """Custom type atmIfVpcBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVpcBqpValue_Type.__name__ = "Unsigned32"
_AtmIfVpcBqpValue_Object = MibTableColumn
atmIfVpcBqpValue = _AtmIfVpcBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 4, 358, 1, 2),
    _AtmIfVpcBqpValue_Type()
)
atmIfVpcBqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVpcBqpValue.setStatus("obsolete")
_AtmIfVcc_ObjectIdentity = ObjectIdentity
atmIfVcc = _AtmIfVcc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5)
)
_AtmIfVccRowStatusTable_Object = MibTable
atmIfVccRowStatusTable = _AtmIfVccRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 1)
)
if mibBuilder.loadTexts:
    atmIfVccRowStatusTable.setStatus("mandatory")
_AtmIfVccRowStatusEntry_Object = MibTableRow
atmIfVccRowStatusEntry = _AtmIfVccRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 1, 1)
)
atmIfVccRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccRowStatusEntry.setStatus("mandatory")
_AtmIfVccRowStatus_Type = RowStatus
_AtmIfVccRowStatus_Object = MibTableColumn
atmIfVccRowStatus = _AtmIfVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 1, 1, 1),
    _AtmIfVccRowStatus_Type()
)
atmIfVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccRowStatus.setStatus("mandatory")
_AtmIfVccComponentName_Type = DisplayString
_AtmIfVccComponentName_Object = MibTableColumn
atmIfVccComponentName = _AtmIfVccComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 1, 1, 2),
    _AtmIfVccComponentName_Type()
)
atmIfVccComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccComponentName.setStatus("mandatory")
_AtmIfVccStorageType_Type = StorageType
_AtmIfVccStorageType_Object = MibTableColumn
atmIfVccStorageType = _AtmIfVccStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 1, 1, 4),
    _AtmIfVccStorageType_Type()
)
atmIfVccStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccStorageType.setStatus("mandatory")


class _AtmIfVccIndex_Type(AsciiStringIndex):
    """Custom type atmIfVccIndex based on AsciiStringIndex"""
    subtypeSpec = AsciiStringIndex.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(3, 10),
    )


_AtmIfVccIndex_Type.__name__ = "AsciiStringIndex"
_AtmIfVccIndex_Object = MibTableColumn
atmIfVccIndex = _AtmIfVccIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 1, 1, 10),
    _AtmIfVccIndex_Type()
)
atmIfVccIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccIndex.setStatus("mandatory")
_AtmIfVccVcd_ObjectIdentity = ObjectIdentity
atmIfVccVcd = _AtmIfVccVcd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2)
)
_AtmIfVccVcdRowStatusTable_Object = MibTable
atmIfVccVcdRowStatusTable = _AtmIfVccVcdRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 1)
)
if mibBuilder.loadTexts:
    atmIfVccVcdRowStatusTable.setStatus("mandatory")
_AtmIfVccVcdRowStatusEntry_Object = MibTableRow
atmIfVccVcdRowStatusEntry = _AtmIfVccVcdRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 1, 1)
)
atmIfVccVcdRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccVcdRowStatusEntry.setStatus("mandatory")
_AtmIfVccVcdRowStatus_Type = RowStatus
_AtmIfVccVcdRowStatus_Object = MibTableColumn
atmIfVccVcdRowStatus = _AtmIfVccVcdRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 1, 1, 1),
    _AtmIfVccVcdRowStatus_Type()
)
atmIfVccVcdRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccVcdRowStatus.setStatus("mandatory")
_AtmIfVccVcdComponentName_Type = DisplayString
_AtmIfVccVcdComponentName_Object = MibTableColumn
atmIfVccVcdComponentName = _AtmIfVccVcdComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 1, 1, 2),
    _AtmIfVccVcdComponentName_Type()
)
atmIfVccVcdComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccVcdComponentName.setStatus("mandatory")
_AtmIfVccVcdStorageType_Type = StorageType
_AtmIfVccVcdStorageType_Object = MibTableColumn
atmIfVccVcdStorageType = _AtmIfVccVcdStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 1, 1, 4),
    _AtmIfVccVcdStorageType_Type()
)
atmIfVccVcdStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccVcdStorageType.setStatus("mandatory")
_AtmIfVccVcdIndex_Type = NonReplicated
_AtmIfVccVcdIndex_Object = MibTableColumn
atmIfVccVcdIndex = _AtmIfVccVcdIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 1, 1, 10),
    _AtmIfVccVcdIndex_Type()
)
atmIfVccVcdIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccVcdIndex.setStatus("mandatory")
_AtmIfVccVcdTm_ObjectIdentity = ObjectIdentity
atmIfVccVcdTm = _AtmIfVccVcdTm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2)
)
_AtmIfVccVcdTmRowStatusTable_Object = MibTable
atmIfVccVcdTmRowStatusTable = _AtmIfVccVcdTmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 1)
)
if mibBuilder.loadTexts:
    atmIfVccVcdTmRowStatusTable.setStatus("mandatory")
_AtmIfVccVcdTmRowStatusEntry_Object = MibTableRow
atmIfVccVcdTmRowStatusEntry = _AtmIfVccVcdTmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 1, 1)
)
atmIfVccVcdTmRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdTmIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccVcdTmRowStatusEntry.setStatus("mandatory")
_AtmIfVccVcdTmRowStatus_Type = RowStatus
_AtmIfVccVcdTmRowStatus_Object = MibTableColumn
atmIfVccVcdTmRowStatus = _AtmIfVccVcdTmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 1, 1, 1),
    _AtmIfVccVcdTmRowStatus_Type()
)
atmIfVccVcdTmRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccVcdTmRowStatus.setStatus("mandatory")
_AtmIfVccVcdTmComponentName_Type = DisplayString
_AtmIfVccVcdTmComponentName_Object = MibTableColumn
atmIfVccVcdTmComponentName = _AtmIfVccVcdTmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 1, 1, 2),
    _AtmIfVccVcdTmComponentName_Type()
)
atmIfVccVcdTmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccVcdTmComponentName.setStatus("mandatory")
_AtmIfVccVcdTmStorageType_Type = StorageType
_AtmIfVccVcdTmStorageType_Object = MibTableColumn
atmIfVccVcdTmStorageType = _AtmIfVccVcdTmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 1, 1, 4),
    _AtmIfVccVcdTmStorageType_Type()
)
atmIfVccVcdTmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccVcdTmStorageType.setStatus("mandatory")
_AtmIfVccVcdTmIndex_Type = NonReplicated
_AtmIfVccVcdTmIndex_Object = MibTableColumn
atmIfVccVcdTmIndex = _AtmIfVccVcdTmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 1, 1, 10),
    _AtmIfVccVcdTmIndex_Type()
)
atmIfVccVcdTmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccVcdTmIndex.setStatus("mandatory")
_AtmIfVccVcdTmAbr_ObjectIdentity = ObjectIdentity
atmIfVccVcdTmAbr = _AtmIfVccVcdTmAbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2)
)
_AtmIfVccVcdTmAbrRowStatusTable_Object = MibTable
atmIfVccVcdTmAbrRowStatusTable = _AtmIfVccVcdTmAbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2, 1)
)
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrRowStatusTable.setStatus("mandatory")
_AtmIfVccVcdTmAbrRowStatusEntry_Object = MibTableRow
atmIfVccVcdTmAbrRowStatusEntry = _AtmIfVccVcdTmAbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2, 1, 1)
)
atmIfVccVcdTmAbrRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdTmAbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrRowStatusEntry.setStatus("mandatory")
_AtmIfVccVcdTmAbrRowStatus_Type = RowStatus
_AtmIfVccVcdTmAbrRowStatus_Object = MibTableColumn
atmIfVccVcdTmAbrRowStatus = _AtmIfVccVcdTmAbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2, 1, 1, 1),
    _AtmIfVccVcdTmAbrRowStatus_Type()
)
atmIfVccVcdTmAbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrRowStatus.setStatus("mandatory")
_AtmIfVccVcdTmAbrComponentName_Type = DisplayString
_AtmIfVccVcdTmAbrComponentName_Object = MibTableColumn
atmIfVccVcdTmAbrComponentName = _AtmIfVccVcdTmAbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2, 1, 1, 2),
    _AtmIfVccVcdTmAbrComponentName_Type()
)
atmIfVccVcdTmAbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrComponentName.setStatus("mandatory")
_AtmIfVccVcdTmAbrStorageType_Type = StorageType
_AtmIfVccVcdTmAbrStorageType_Object = MibTableColumn
atmIfVccVcdTmAbrStorageType = _AtmIfVccVcdTmAbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2, 1, 1, 4),
    _AtmIfVccVcdTmAbrStorageType_Type()
)
atmIfVccVcdTmAbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrStorageType.setStatus("mandatory")
_AtmIfVccVcdTmAbrIndex_Type = NonReplicated
_AtmIfVccVcdTmAbrIndex_Object = MibTableColumn
atmIfVccVcdTmAbrIndex = _AtmIfVccVcdTmAbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2, 1, 1, 10),
    _AtmIfVccVcdTmAbrIndex_Type()
)
atmIfVccVcdTmAbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrIndex.setStatus("mandatory")
_AtmIfVccVcdTmAbrProvTable_Object = MibTable
atmIfVccVcdTmAbrProvTable = _AtmIfVccVcdTmAbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2, 110)
)
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrProvTable.setStatus("mandatory")
_AtmIfVccVcdTmAbrProvEntry_Object = MibTableRow
atmIfVccVcdTmAbrProvEntry = _AtmIfVccVcdTmAbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2, 110, 1)
)
atmIfVccVcdTmAbrProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdTmAbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrProvEntry.setStatus("mandatory")


class _AtmIfVccVcdTmAbrInitialCellRate_Type(Unsigned32):
    """Custom type atmIfVccVcdTmAbrInitialCellRate based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
        ValueRangeConstraint(16777216, 16777216),
        ValueRangeConstraint(16777217, 16777217),
        ValueRangeConstraint(16777218, 16777218),
    )


_AtmIfVccVcdTmAbrInitialCellRate_Type.__name__ = "Unsigned32"
_AtmIfVccVcdTmAbrInitialCellRate_Object = MibTableColumn
atmIfVccVcdTmAbrInitialCellRate = _AtmIfVccVcdTmAbrInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2, 110, 1, 10),
    _AtmIfVccVcdTmAbrInitialCellRate_Type()
)
atmIfVccVcdTmAbrInitialCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrInitialCellRate.setStatus("mandatory")


class _AtmIfVccVcdTmAbrTransientBufferExposure_Type(Unsigned32):
    """Custom type atmIfVccVcdTmAbrTransientBufferExposure based on Unsigned32"""
    defaultValue = 16777215

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVccVcdTmAbrTransientBufferExposure_Type.__name__ = "Unsigned32"
_AtmIfVccVcdTmAbrTransientBufferExposure_Object = MibTableColumn
atmIfVccVcdTmAbrTransientBufferExposure = _AtmIfVccVcdTmAbrTransientBufferExposure_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2, 110, 1, 11),
    _AtmIfVccVcdTmAbrTransientBufferExposure_Type()
)
atmIfVccVcdTmAbrTransientBufferExposure.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrTransientBufferExposure.setStatus("mandatory")


class _AtmIfVccVcdTmAbrFixedRoundTripTime_Type(Unsigned32):
    """Custom type atmIfVccVcdTmAbrFixedRoundTripTime based on Unsigned32"""
    defaultValue = 5000000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16700000),
    )


_AtmIfVccVcdTmAbrFixedRoundTripTime_Type.__name__ = "Unsigned32"
_AtmIfVccVcdTmAbrFixedRoundTripTime_Object = MibTableColumn
atmIfVccVcdTmAbrFixedRoundTripTime = _AtmIfVccVcdTmAbrFixedRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2, 110, 1, 12),
    _AtmIfVccVcdTmAbrFixedRoundTripTime_Type()
)
atmIfVccVcdTmAbrFixedRoundTripTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrFixedRoundTripTime.setStatus("mandatory")


class _AtmIfVccVcdTmAbrRateDecreaseFactor_Type(Unsigned32):
    """Custom type atmIfVccVcdTmAbrRateDecreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVccVcdTmAbrRateDecreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVccVcdTmAbrRateDecreaseFactor_Object = MibTableColumn
atmIfVccVcdTmAbrRateDecreaseFactor = _AtmIfVccVcdTmAbrRateDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2, 110, 1, 13),
    _AtmIfVccVcdTmAbrRateDecreaseFactor_Type()
)
atmIfVccVcdTmAbrRateDecreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrRateDecreaseFactor.setStatus("mandatory")


class _AtmIfVccVcdTmAbrRateIncreaseFactor_Type(Unsigned32):
    """Custom type atmIfVccVcdTmAbrRateIncreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVccVcdTmAbrRateIncreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVccVcdTmAbrRateIncreaseFactor_Object = MibTableColumn
atmIfVccVcdTmAbrRateIncreaseFactor = _AtmIfVccVcdTmAbrRateIncreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2, 110, 1, 14),
    _AtmIfVccVcdTmAbrRateIncreaseFactor_Type()
)
atmIfVccVcdTmAbrRateIncreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrRateIncreaseFactor.setStatus("mandatory")


class _AtmIfVccVcdTmAbrMaxCellPerRmCell_Type(Unsigned32):
    """Custom type atmIfVccVcdTmAbrMaxCellPerRmCell based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVccVcdTmAbrMaxCellPerRmCell_Type.__name__ = "Unsigned32"
_AtmIfVccVcdTmAbrMaxCellPerRmCell_Object = MibTableColumn
atmIfVccVcdTmAbrMaxCellPerRmCell = _AtmIfVccVcdTmAbrMaxCellPerRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2, 110, 1, 15),
    _AtmIfVccVcdTmAbrMaxCellPerRmCell_Type()
)
atmIfVccVcdTmAbrMaxCellPerRmCell.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrMaxCellPerRmCell.setStatus("mandatory")


class _AtmIfVccVcdTmAbrMaxTimeBetweenRmCells_Type(Unsigned32):
    """Custom type atmIfVccVcdTmAbrMaxTimeBetweenRmCells based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(781, 781),
        ValueRangeConstraint(1563, 1563),
        ValueRangeConstraint(3125, 3125),
        ValueRangeConstraint(6250, 6250),
        ValueRangeConstraint(12500, 12500),
        ValueRangeConstraint(25000, 25000),
        ValueRangeConstraint(50000, 50000),
        ValueRangeConstraint(100000, 100000),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVccVcdTmAbrMaxTimeBetweenRmCells_Type.__name__ = "Unsigned32"
_AtmIfVccVcdTmAbrMaxTimeBetweenRmCells_Object = MibTableColumn
atmIfVccVcdTmAbrMaxTimeBetweenRmCells = _AtmIfVccVcdTmAbrMaxTimeBetweenRmCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2, 110, 1, 16),
    _AtmIfVccVcdTmAbrMaxTimeBetweenRmCells_Type()
)
atmIfVccVcdTmAbrMaxTimeBetweenRmCells.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrMaxTimeBetweenRmCells.setStatus("mandatory")


class _AtmIfVccVcdTmAbrCutoffDecreaseFactor_Type(Unsigned32):
    """Custom type atmIfVccVcdTmAbrCutoffDecreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVccVcdTmAbrCutoffDecreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVccVcdTmAbrCutoffDecreaseFactor_Object = MibTableColumn
atmIfVccVcdTmAbrCutoffDecreaseFactor = _AtmIfVccVcdTmAbrCutoffDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2, 110, 1, 17),
    _AtmIfVccVcdTmAbrCutoffDecreaseFactor_Type()
)
atmIfVccVcdTmAbrCutoffDecreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrCutoffDecreaseFactor.setStatus("mandatory")


class _AtmIfVccVcdTmAbrAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type atmIfVccVcdTmAbrAcrDecreaseTimeFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVccVcdTmAbrAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_AtmIfVccVcdTmAbrAcrDecreaseTimeFactor_Object = MibTableColumn
atmIfVccVcdTmAbrAcrDecreaseTimeFactor = _AtmIfVccVcdTmAbrAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2, 110, 1, 18),
    _AtmIfVccVcdTmAbrAcrDecreaseTimeFactor_Type()
)
atmIfVccVcdTmAbrAcrDecreaseTimeFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrAcrDecreaseTimeFactor.setStatus("mandatory")


class _AtmIfVccVcdTmAbrDgcraMaximumDelay_Type(Unsigned32):
    """Custom type atmIfVccVcdTmAbrDgcraMaximumDelay based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16700000),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVccVcdTmAbrDgcraMaximumDelay_Type.__name__ = "Unsigned32"
_AtmIfVccVcdTmAbrDgcraMaximumDelay_Object = MibTableColumn
atmIfVccVcdTmAbrDgcraMaximumDelay = _AtmIfVccVcdTmAbrDgcraMaximumDelay_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2, 110, 1, 19),
    _AtmIfVccVcdTmAbrDgcraMaximumDelay_Type()
)
atmIfVccVcdTmAbrDgcraMaximumDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrDgcraMaximumDelay.setStatus("mandatory")


class _AtmIfVccVcdTmAbrDgcraMinimumDelay_Type(Unsigned32):
    """Custom type atmIfVccVcdTmAbrDgcraMinimumDelay based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16700000),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVccVcdTmAbrDgcraMinimumDelay_Type.__name__ = "Unsigned32"
_AtmIfVccVcdTmAbrDgcraMinimumDelay_Object = MibTableColumn
atmIfVccVcdTmAbrDgcraMinimumDelay = _AtmIfVccVcdTmAbrDgcraMinimumDelay_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2, 110, 1, 20),
    _AtmIfVccVcdTmAbrDgcraMinimumDelay_Type()
)
atmIfVccVcdTmAbrDgcraMinimumDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrDgcraMinimumDelay.setStatus("mandatory")


class _AtmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type atmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor based on Unsigned32"""
    defaultValue = 1024

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
        ValueRangeConstraint(1024, 1024),
    )


_AtmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_AtmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor_Object = MibTableColumn
atmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor = _AtmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2, 110, 1, 21),
    _AtmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor_Type()
)
atmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor.setStatus("mandatory")


class _AtmIfVccVcdTmAbrFarEndInitialCellRate_Type(Unsigned32):
    """Custom type atmIfVccVcdTmAbrFarEndInitialCellRate based on Unsigned32"""
    defaultValue = 16777219

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
        ValueRangeConstraint(16777219, 16777219),
    )


_AtmIfVccVcdTmAbrFarEndInitialCellRate_Type.__name__ = "Unsigned32"
_AtmIfVccVcdTmAbrFarEndInitialCellRate_Object = MibTableColumn
atmIfVccVcdTmAbrFarEndInitialCellRate = _AtmIfVccVcdTmAbrFarEndInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 2, 110, 1, 22),
    _AtmIfVccVcdTmAbrFarEndInitialCellRate_Type()
)
atmIfVccVcdTmAbrFarEndInitialCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrFarEndInitialCellRate.setStatus("mandatory")
_AtmIfVccVcdTmProvTable_Object = MibTable
atmIfVccVcdTmProvTable = _AtmIfVccVcdTmProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100)
)
if mibBuilder.loadTexts:
    atmIfVccVcdTmProvTable.setStatus("mandatory")
_AtmIfVccVcdTmProvEntry_Object = MibTableRow
atmIfVccVcdTmProvEntry = _AtmIfVccVcdTmProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1)
)
atmIfVccVcdTmProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdTmIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccVcdTmProvEntry.setStatus("mandatory")


class _AtmIfVccVcdTmTxTrafficDescType_Type(Integer32):
    """Custom type atmIfVccVcdTmTxTrafficDescType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_AtmIfVccVcdTmTxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVccVcdTmTxTrafficDescType_Object = MibTableColumn
atmIfVccVcdTmTxTrafficDescType = _AtmIfVccVcdTmTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1, 10),
    _AtmIfVccVcdTmTxTrafficDescType_Type()
)
atmIfVccVcdTmTxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmTxTrafficDescType.setStatus("mandatory")


class _AtmIfVccVcdTmFwdQosClass_Type(Integer32):
    """Custom type atmIfVccVcdTmFwdQosClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfVccVcdTmFwdQosClass_Type.__name__ = "Integer32"
_AtmIfVccVcdTmFwdQosClass_Object = MibTableColumn
atmIfVccVcdTmFwdQosClass = _AtmIfVccVcdTmFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1, 21),
    _AtmIfVccVcdTmFwdQosClass_Type()
)
atmIfVccVcdTmFwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmFwdQosClass.setStatus("mandatory")


class _AtmIfVccVcdTmTxQueueLimit_Type(Unsigned32):
    """Custom type atmIfVccVcdTmTxQueueLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 63488),
    )


_AtmIfVccVcdTmTxQueueLimit_Type.__name__ = "Unsigned32"
_AtmIfVccVcdTmTxQueueLimit_Object = MibTableColumn
atmIfVccVcdTmTxQueueLimit = _AtmIfVccVcdTmTxQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1, 22),
    _AtmIfVccVcdTmTxQueueLimit_Type()
)
atmIfVccVcdTmTxQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmTxQueueLimit.setStatus("mandatory")


class _AtmIfVccVcdTmHoldingPriority_Type(Integer32):
    """Custom type atmIfVccVcdTmHoldingPriority based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfVccVcdTmHoldingPriority_Type.__name__ = "Integer32"
_AtmIfVccVcdTmHoldingPriority_Object = MibTableColumn
atmIfVccVcdTmHoldingPriority = _AtmIfVccVcdTmHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1, 25),
    _AtmIfVccVcdTmHoldingPriority_Type()
)
atmIfVccVcdTmHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmHoldingPriority.setStatus("mandatory")


class _AtmIfVccVcdTmRxTrafficDescType_Type(Integer32):
    """Custom type atmIfVccVcdTmRxTrafficDescType based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9),
          ("sameAsTx", 15))
    )


_AtmIfVccVcdTmRxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVccVcdTmRxTrafficDescType_Object = MibTableColumn
atmIfVccVcdTmRxTrafficDescType = _AtmIfVccVcdTmRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1, 30),
    _AtmIfVccVcdTmRxTrafficDescType_Type()
)
atmIfVccVcdTmRxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmRxTrafficDescType.setStatus("mandatory")


class _AtmIfVccVcdTmBwdQosClass_Type(Integer32):
    """Custom type atmIfVccVcdTmBwdQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("sameAsFwd", 15))
    )


_AtmIfVccVcdTmBwdQosClass_Type.__name__ = "Integer32"
_AtmIfVccVcdTmBwdQosClass_Object = MibTableColumn
atmIfVccVcdTmBwdQosClass = _AtmIfVccVcdTmBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1, 41),
    _AtmIfVccVcdTmBwdQosClass_Type()
)
atmIfVccVcdTmBwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmBwdQosClass.setStatus("mandatory")


class _AtmIfVccVcdTmAtmServiceCategory_Type(Integer32):
    """Custom type atmIfVccVcdTmAtmServiceCategory based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("availableBitRate", 4),
          ("constantBitRate", 1),
          ("derivedFromBBC", 15),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_AtmIfVccVcdTmAtmServiceCategory_Type.__name__ = "Integer32"
_AtmIfVccVcdTmAtmServiceCategory_Object = MibTableColumn
atmIfVccVcdTmAtmServiceCategory = _AtmIfVccVcdTmAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1, 42),
    _AtmIfVccVcdTmAtmServiceCategory_Type()
)
atmIfVccVcdTmAtmServiceCategory.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmAtmServiceCategory.setStatus("mandatory")


class _AtmIfVccVcdTmTrafficShaping_Type(Integer32):
    """Custom type atmIfVccVcdTmTrafficShaping based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsCa", 2))
    )


_AtmIfVccVcdTmTrafficShaping_Type.__name__ = "Integer32"
_AtmIfVccVcdTmTrafficShaping_Object = MibTableColumn
atmIfVccVcdTmTrafficShaping = _AtmIfVccVcdTmTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1, 50),
    _AtmIfVccVcdTmTrafficShaping_Type()
)
atmIfVccVcdTmTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmTrafficShaping.setStatus("mandatory")


class _AtmIfVccVcdTmUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfVccVcdTmUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("sameAsCa", 3))
    )


_AtmIfVccVcdTmUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfVccVcdTmUnshapedTransmitQueueing_Object = MibTableColumn
atmIfVccVcdTmUnshapedTransmitQueueing = _AtmIfVccVcdTmUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1, 60),
    _AtmIfVccVcdTmUnshapedTransmitQueueing_Type()
)
atmIfVccVcdTmUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmUnshapedTransmitQueueing.setStatus("mandatory")


class _AtmIfVccVcdTmWeight_Type(Unsigned32):
    """Custom type atmIfVccVcdTmWeight based on Unsigned32"""
    defaultValue = 65535

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(65535, 65535),
    )


_AtmIfVccVcdTmWeight_Type.__name__ = "Unsigned32"
_AtmIfVccVcdTmWeight_Object = MibTableColumn
atmIfVccVcdTmWeight = _AtmIfVccVcdTmWeight_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1, 61),
    _AtmIfVccVcdTmWeight_Type()
)
atmIfVccVcdTmWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmWeight.setStatus("mandatory")


class _AtmIfVccVcdTmForceTagging_Type(Integer32):
    """Custom type atmIfVccVcdTmForceTagging based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("sameAsCa", 2))
    )


_AtmIfVccVcdTmForceTagging_Type.__name__ = "Integer32"
_AtmIfVccVcdTmForceTagging_Object = MibTableColumn
atmIfVccVcdTmForceTagging = _AtmIfVccVcdTmForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1, 62),
    _AtmIfVccVcdTmForceTagging_Type()
)
atmIfVccVcdTmForceTagging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmForceTagging.setStatus("mandatory")


class _AtmIfVccVcdTmUsageParameterControl_Type(Integer32):
    """Custom type atmIfVccVcdTmUsageParameterControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4),
          ("sameAsCa", 2))
    )


_AtmIfVccVcdTmUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfVccVcdTmUsageParameterControl_Object = MibTableColumn
atmIfVccVcdTmUsageParameterControl = _AtmIfVccVcdTmUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1, 70),
    _AtmIfVccVcdTmUsageParameterControl_Type()
)
atmIfVccVcdTmUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmUsageParameterControl.setStatus("mandatory")


class _AtmIfVccVcdTmBearerClassBbc_Type(Integer32):
    """Custom type atmIfVccVcdTmBearerClassBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              31)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("derivedFromServiceCategory", 31),
          ("vp", 24),
          ("x", 16))
    )


_AtmIfVccVcdTmBearerClassBbc_Type.__name__ = "Integer32"
_AtmIfVccVcdTmBearerClassBbc_Object = MibTableColumn
atmIfVccVcdTmBearerClassBbc = _AtmIfVccVcdTmBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1, 71),
    _AtmIfVccVcdTmBearerClassBbc_Type()
)
atmIfVccVcdTmBearerClassBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmBearerClassBbc.setStatus("mandatory")


class _AtmIfVccVcdTmTransferCapabilityBbc_Type(Integer32):
    """Custom type atmIfVccVcdTmTransferCapabilityBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 31),
          ("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_AtmIfVccVcdTmTransferCapabilityBbc_Type.__name__ = "Integer32"
_AtmIfVccVcdTmTransferCapabilityBbc_Object = MibTableColumn
atmIfVccVcdTmTransferCapabilityBbc = _AtmIfVccVcdTmTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1, 72),
    _AtmIfVccVcdTmTransferCapabilityBbc_Type()
)
atmIfVccVcdTmTransferCapabilityBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmTransferCapabilityBbc.setStatus("mandatory")


class _AtmIfVccVcdTmTxWredThreshold_Type(Unsigned32):
    """Custom type atmIfVccVcdTmTxWredThreshold based on Unsigned32"""
    defaultValue = 25

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(25, 25),
        ValueRangeConstraint(50, 50),
        ValueRangeConstraint(75, 75),
    )


_AtmIfVccVcdTmTxWredThreshold_Type.__name__ = "Unsigned32"
_AtmIfVccVcdTmTxWredThreshold_Object = MibTableColumn
atmIfVccVcdTmTxWredThreshold = _AtmIfVccVcdTmTxWredThreshold_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1, 73),
    _AtmIfVccVcdTmTxWredThreshold_Type()
)
atmIfVccVcdTmTxWredThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmTxWredThreshold.setStatus("mandatory")


class _AtmIfVccVcdTmClippingBbc_Type(Integer32):
    """Custom type atmIfVccVcdTmClippingBbc based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVccVcdTmClippingBbc_Type.__name__ = "Integer32"
_AtmIfVccVcdTmClippingBbc_Object = MibTableColumn
atmIfVccVcdTmClippingBbc = _AtmIfVccVcdTmClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1, 74),
    _AtmIfVccVcdTmClippingBbc_Type()
)
atmIfVccVcdTmClippingBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmClippingBbc.setStatus("mandatory")


class _AtmIfVccVcdTmBestEffort_Type(Integer32):
    """Custom type atmIfVccVcdTmBestEffort based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              15)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 15),
          ("indicated", 0),
          ("notIndicated", 1))
    )


_AtmIfVccVcdTmBestEffort_Type.__name__ = "Integer32"
_AtmIfVccVcdTmBestEffort_Object = MibTableColumn
atmIfVccVcdTmBestEffort = _AtmIfVccVcdTmBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1, 75),
    _AtmIfVccVcdTmBestEffort_Type()
)
atmIfVccVcdTmBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmBestEffort.setStatus("mandatory")


class _AtmIfVccVcdTmTxPacketWiseDiscard_Type(Integer32):
    """Custom type atmIfVccVcdTmTxPacketWiseDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_AtmIfVccVcdTmTxPacketWiseDiscard_Type.__name__ = "Integer32"
_AtmIfVccVcdTmTxPacketWiseDiscard_Object = MibTableColumn
atmIfVccVcdTmTxPacketWiseDiscard = _AtmIfVccVcdTmTxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1, 76),
    _AtmIfVccVcdTmTxPacketWiseDiscard_Type()
)
atmIfVccVcdTmTxPacketWiseDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmTxPacketWiseDiscard.setStatus("mandatory")


class _AtmIfVccVcdTmTxWredMode_Type(Integer32):
    """Custom type atmIfVccVcdTmTxWredMode based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1),
          ("perFlow", 2))
    )


_AtmIfVccVcdTmTxWredMode_Type.__name__ = "Integer32"
_AtmIfVccVcdTmTxWredMode_Object = MibTableColumn
atmIfVccVcdTmTxWredMode = _AtmIfVccVcdTmTxWredMode_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1, 77),
    _AtmIfVccVcdTmTxWredMode_Type()
)
atmIfVccVcdTmTxWredMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmTxWredMode.setStatus("mandatory")


class _AtmIfVccVcdTmRxPacketWiseDiscard_Type(Integer32):
    """Custom type atmIfVccVcdTmRxPacketWiseDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_AtmIfVccVcdTmRxPacketWiseDiscard_Type.__name__ = "Integer32"
_AtmIfVccVcdTmRxPacketWiseDiscard_Object = MibTableColumn
atmIfVccVcdTmRxPacketWiseDiscard = _AtmIfVccVcdTmRxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1, 78),
    _AtmIfVccVcdTmRxPacketWiseDiscard_Type()
)
atmIfVccVcdTmRxPacketWiseDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmRxPacketWiseDiscard.setStatus("mandatory")


class _AtmIfVccVcdTmAbrConnectionType_Type(Integer32):
    """Custom type atmIfVccVcdTmAbrConnectionType based on Integer32"""
    defaultValue = 14

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              3,
              4,
              5,
              14)
        )
    )
    namedValues = NamedValues(
        *(("abrSwitch", 0),
          ("nonAbrInterworking", 5),
          ("sameAsCa", 14),
          ("sourceDest", 4),
          ("virtualSourceDest", 3))
    )


_AtmIfVccVcdTmAbrConnectionType_Type.__name__ = "Integer32"
_AtmIfVccVcdTmAbrConnectionType_Object = MibTableColumn
atmIfVccVcdTmAbrConnectionType = _AtmIfVccVcdTmAbrConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 100, 1, 90),
    _AtmIfVccVcdTmAbrConnectionType_Type()
)
atmIfVccVcdTmAbrConnectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmAbrConnectionType.setStatus("mandatory")
_AtmIfVccVcdTmTxTdpTable_Object = MibTable
atmIfVccVcdTmTxTdpTable = _AtmIfVccVcdTmTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 456)
)
if mibBuilder.loadTexts:
    atmIfVccVcdTmTxTdpTable.setStatus("mandatory")
_AtmIfVccVcdTmTxTdpEntry_Object = MibTableRow
atmIfVccVcdTmTxTdpEntry = _AtmIfVccVcdTmTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 456, 1)
)
atmIfVccVcdTmTxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdTmTxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccVcdTmTxTdpEntry.setStatus("mandatory")


class _AtmIfVccVcdTmTxTdpIndex_Type(Integer32):
    """Custom type atmIfVccVcdTmTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVccVcdTmTxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVccVcdTmTxTdpIndex_Object = MibTableColumn
atmIfVccVcdTmTxTdpIndex = _AtmIfVccVcdTmTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 456, 1, 1),
    _AtmIfVccVcdTmTxTdpIndex_Type()
)
atmIfVccVcdTmTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccVcdTmTxTdpIndex.setStatus("mandatory")


class _AtmIfVccVcdTmTxTdpValue_Type(Unsigned32):
    """Custom type atmIfVccVcdTmTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVccVcdTmTxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVccVcdTmTxTdpValue_Object = MibTableColumn
atmIfVccVcdTmTxTdpValue = _AtmIfVccVcdTmTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 456, 1, 2),
    _AtmIfVccVcdTmTxTdpValue_Type()
)
atmIfVccVcdTmTxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmTxTdpValue.setStatus("mandatory")
_AtmIfVccVcdTmRxTdpTable_Object = MibTable
atmIfVccVcdTmRxTdpTable = _AtmIfVccVcdTmRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 457)
)
if mibBuilder.loadTexts:
    atmIfVccVcdTmRxTdpTable.setStatus("mandatory")
_AtmIfVccVcdTmRxTdpEntry_Object = MibTableRow
atmIfVccVcdTmRxTdpEntry = _AtmIfVccVcdTmRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 457, 1)
)
atmIfVccVcdTmRxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdTmRxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccVcdTmRxTdpEntry.setStatus("mandatory")


class _AtmIfVccVcdTmRxTdpIndex_Type(Integer32):
    """Custom type atmIfVccVcdTmRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVccVcdTmRxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVccVcdTmRxTdpIndex_Object = MibTableColumn
atmIfVccVcdTmRxTdpIndex = _AtmIfVccVcdTmRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 457, 1, 1),
    _AtmIfVccVcdTmRxTdpIndex_Type()
)
atmIfVccVcdTmRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccVcdTmRxTdpIndex.setStatus("mandatory")


class _AtmIfVccVcdTmRxTdpValue_Type(Unsigned32):
    """Custom type atmIfVccVcdTmRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVccVcdTmRxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVccVcdTmRxTdpValue_Object = MibTableColumn
atmIfVccVcdTmRxTdpValue = _AtmIfVccVcdTmRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 457, 1, 2),
    _AtmIfVccVcdTmRxTdpValue_Type()
)
atmIfVccVcdTmRxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmRxTdpValue.setStatus("mandatory")
_AtmIfVccVcdTmFqpTable_Object = MibTable
atmIfVccVcdTmFqpTable = _AtmIfVccVcdTmFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 458)
)
if mibBuilder.loadTexts:
    atmIfVccVcdTmFqpTable.setStatus("mandatory")
_AtmIfVccVcdTmFqpEntry_Object = MibTableRow
atmIfVccVcdTmFqpEntry = _AtmIfVccVcdTmFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 458, 1)
)
atmIfVccVcdTmFqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdTmFqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccVcdTmFqpEntry.setStatus("mandatory")


class _AtmIfVccVcdTmFqpIndex_Type(Integer32):
    """Custom type atmIfVccVcdTmFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVccVcdTmFqpIndex_Type.__name__ = "Integer32"
_AtmIfVccVcdTmFqpIndex_Object = MibTableColumn
atmIfVccVcdTmFqpIndex = _AtmIfVccVcdTmFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 458, 1, 1),
    _AtmIfVccVcdTmFqpIndex_Type()
)
atmIfVccVcdTmFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccVcdTmFqpIndex.setStatus("mandatory")


class _AtmIfVccVcdTmFqpValue_Type(Unsigned32):
    """Custom type atmIfVccVcdTmFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVccVcdTmFqpValue_Type.__name__ = "Unsigned32"
_AtmIfVccVcdTmFqpValue_Object = MibTableColumn
atmIfVccVcdTmFqpValue = _AtmIfVccVcdTmFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 458, 1, 2),
    _AtmIfVccVcdTmFqpValue_Type()
)
atmIfVccVcdTmFqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmFqpValue.setStatus("mandatory")
_AtmIfVccVcdTmBqpTable_Object = MibTable
atmIfVccVcdTmBqpTable = _AtmIfVccVcdTmBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 459)
)
if mibBuilder.loadTexts:
    atmIfVccVcdTmBqpTable.setStatus("mandatory")
_AtmIfVccVcdTmBqpEntry_Object = MibTableRow
atmIfVccVcdTmBqpEntry = _AtmIfVccVcdTmBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 459, 1)
)
atmIfVccVcdTmBqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdTmBqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccVcdTmBqpEntry.setStatus("mandatory")


class _AtmIfVccVcdTmBqpIndex_Type(Integer32):
    """Custom type atmIfVccVcdTmBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2))
    )


_AtmIfVccVcdTmBqpIndex_Type.__name__ = "Integer32"
_AtmIfVccVcdTmBqpIndex_Object = MibTableColumn
atmIfVccVcdTmBqpIndex = _AtmIfVccVcdTmBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 459, 1, 1),
    _AtmIfVccVcdTmBqpIndex_Type()
)
atmIfVccVcdTmBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccVcdTmBqpIndex.setStatus("mandatory")


class _AtmIfVccVcdTmBqpValue_Type(Unsigned32):
    """Custom type atmIfVccVcdTmBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVccVcdTmBqpValue_Type.__name__ = "Unsigned32"
_AtmIfVccVcdTmBqpValue_Object = MibTableColumn
atmIfVccVcdTmBqpValue = _AtmIfVccVcdTmBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 2, 459, 1, 2),
    _AtmIfVccVcdTmBqpValue_Type()
)
atmIfVccVcdTmBqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTmBqpValue.setStatus("mandatory")
_AtmIfVccVcdLbkTable_Object = MibTable
atmIfVccVcdLbkTable = _AtmIfVccVcdLbkTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 100)
)
if mibBuilder.loadTexts:
    atmIfVccVcdLbkTable.setStatus("mandatory")
_AtmIfVccVcdLbkEntry_Object = MibTableRow
atmIfVccVcdLbkEntry = _AtmIfVccVcdLbkEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 100, 1)
)
atmIfVccVcdLbkEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccVcdLbkEntry.setStatus("mandatory")


class _AtmIfVccVcdSegLinkSideLoopback_Type(Integer32):
    """Custom type atmIfVccVcdSegLinkSideLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_AtmIfVccVcdSegLinkSideLoopback_Type.__name__ = "Integer32"
_AtmIfVccVcdSegLinkSideLoopback_Object = MibTableColumn
atmIfVccVcdSegLinkSideLoopback = _AtmIfVccVcdSegLinkSideLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 100, 1, 10),
    _AtmIfVccVcdSegLinkSideLoopback_Type()
)
atmIfVccVcdSegLinkSideLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdSegLinkSideLoopback.setStatus("mandatory")


class _AtmIfVccVcdSegSwitchSideLoopback_Type(Integer32):
    """Custom type atmIfVccVcdSegSwitchSideLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_AtmIfVccVcdSegSwitchSideLoopback_Type.__name__ = "Integer32"
_AtmIfVccVcdSegSwitchSideLoopback_Object = MibTableColumn
atmIfVccVcdSegSwitchSideLoopback = _AtmIfVccVcdSegSwitchSideLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 100, 1, 20),
    _AtmIfVccVcdSegSwitchSideLoopback_Type()
)
atmIfVccVcdSegSwitchSideLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdSegSwitchSideLoopback.setStatus("mandatory")


class _AtmIfVccVcdEndToEndLoopback_Type(Integer32):
    """Custom type atmIfVccVcdEndToEndLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_AtmIfVccVcdEndToEndLoopback_Type.__name__ = "Integer32"
_AtmIfVccVcdEndToEndLoopback_Object = MibTableColumn
atmIfVccVcdEndToEndLoopback = _AtmIfVccVcdEndToEndLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 100, 1, 30),
    _AtmIfVccVcdEndToEndLoopback_Type()
)
atmIfVccVcdEndToEndLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdEndToEndLoopback.setStatus("mandatory")


class _AtmIfVccVcdLoopbackMonitoring_Type(Integer32):
    """Custom type atmIfVccVcdLoopbackMonitoring based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_AtmIfVccVcdLoopbackMonitoring_Type.__name__ = "Integer32"
_AtmIfVccVcdLoopbackMonitoring_Object = MibTableColumn
atmIfVccVcdLoopbackMonitoring = _AtmIfVccVcdLoopbackMonitoring_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 100, 1, 1000),
    _AtmIfVccVcdLoopbackMonitoring_Type()
)
atmIfVccVcdLoopbackMonitoring.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdLoopbackMonitoring.setStatus("mandatory")
_AtmIfVccVcdTrafficTable_Object = MibTable
atmIfVccVcdTrafficTable = _AtmIfVccVcdTrafficTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 110)
)
if mibBuilder.loadTexts:
    atmIfVccVcdTrafficTable.setStatus("mandatory")
_AtmIfVccVcdTrafficEntry_Object = MibTableRow
atmIfVccVcdTrafficEntry = _AtmIfVccVcdTrafficEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 110, 1)
)
atmIfVccVcdTrafficEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccVcdTrafficEntry.setStatus("mandatory")


class _AtmIfVccVcdTxTrafficDescType_Type(Integer32):
    """Custom type atmIfVccVcdTxTrafficDescType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_AtmIfVccVcdTxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVccVcdTxTrafficDescType_Object = MibTableColumn
atmIfVccVcdTxTrafficDescType = _AtmIfVccVcdTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 110, 1, 10),
    _AtmIfVccVcdTxTrafficDescType_Type()
)
atmIfVccVcdTxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTxTrafficDescType.setStatus("obsolete")


class _AtmIfVccVcdTxQosClass_Type(Integer32):
    """Custom type atmIfVccVcdTxQosClass based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_AtmIfVccVcdTxQosClass_Type.__name__ = "Integer32"
_AtmIfVccVcdTxQosClass_Object = MibTableColumn
atmIfVccVcdTxQosClass = _AtmIfVccVcdTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 110, 1, 20),
    _AtmIfVccVcdTxQosClass_Type()
)
atmIfVccVcdTxQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTxQosClass.setStatus("obsolete")


class _AtmIfVccVcdFwdQosClass_Type(Integer32):
    """Custom type atmIfVccVcdFwdQosClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfVccVcdFwdQosClass_Type.__name__ = "Integer32"
_AtmIfVccVcdFwdQosClass_Object = MibTableColumn
atmIfVccVcdFwdQosClass = _AtmIfVccVcdFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 110, 1, 21),
    _AtmIfVccVcdFwdQosClass_Type()
)
atmIfVccVcdFwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdFwdQosClass.setStatus("obsolete")


class _AtmIfVccVcdHoldingPriority_Type(Integer32):
    """Custom type atmIfVccVcdHoldingPriority based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfVccVcdHoldingPriority_Type.__name__ = "Integer32"
_AtmIfVccVcdHoldingPriority_Object = MibTableColumn
atmIfVccVcdHoldingPriority = _AtmIfVccVcdHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 110, 1, 25),
    _AtmIfVccVcdHoldingPriority_Type()
)
atmIfVccVcdHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdHoldingPriority.setStatus("obsolete")


class _AtmIfVccVcdRxTrafficDescType_Type(Integer32):
    """Custom type atmIfVccVcdRxTrafficDescType based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("sameAsTx", 15))
    )


_AtmIfVccVcdRxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVccVcdRxTrafficDescType_Object = MibTableColumn
atmIfVccVcdRxTrafficDescType = _AtmIfVccVcdRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 110, 1, 30),
    _AtmIfVccVcdRxTrafficDescType_Type()
)
atmIfVccVcdRxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdRxTrafficDescType.setStatus("obsolete")


class _AtmIfVccVcdRxQosClass_Type(Integer32):
    """Custom type atmIfVccVcdRxQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("sameAsTx", 15),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_AtmIfVccVcdRxQosClass_Type.__name__ = "Integer32"
_AtmIfVccVcdRxQosClass_Object = MibTableColumn
atmIfVccVcdRxQosClass = _AtmIfVccVcdRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 110, 1, 40),
    _AtmIfVccVcdRxQosClass_Type()
)
atmIfVccVcdRxQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdRxQosClass.setStatus("obsolete")


class _AtmIfVccVcdBwdQosClass_Type(Integer32):
    """Custom type atmIfVccVcdBwdQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("sameAsFwd", 15))
    )


_AtmIfVccVcdBwdQosClass_Type.__name__ = "Integer32"
_AtmIfVccVcdBwdQosClass_Object = MibTableColumn
atmIfVccVcdBwdQosClass = _AtmIfVccVcdBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 110, 1, 41),
    _AtmIfVccVcdBwdQosClass_Type()
)
atmIfVccVcdBwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdBwdQosClass.setStatus("obsolete")


class _AtmIfVccVcdAtmServiceCategory_Type(Integer32):
    """Custom type atmIfVccVcdAtmServiceCategory based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              15)
        )
    )
    namedValues = NamedValues(
        *(("constantBitRate", 1),
          ("derivedFromBBC", 15),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_AtmIfVccVcdAtmServiceCategory_Type.__name__ = "Integer32"
_AtmIfVccVcdAtmServiceCategory_Object = MibTableColumn
atmIfVccVcdAtmServiceCategory = _AtmIfVccVcdAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 110, 1, 42),
    _AtmIfVccVcdAtmServiceCategory_Type()
)
atmIfVccVcdAtmServiceCategory.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdAtmServiceCategory.setStatus("obsolete")


class _AtmIfVccVcdTrafficShaping_Type(Integer32):
    """Custom type atmIfVccVcdTrafficShaping based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsInterface", 2))
    )


_AtmIfVccVcdTrafficShaping_Type.__name__ = "Integer32"
_AtmIfVccVcdTrafficShaping_Object = MibTableColumn
atmIfVccVcdTrafficShaping = _AtmIfVccVcdTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 110, 1, 50),
    _AtmIfVccVcdTrafficShaping_Type()
)
atmIfVccVcdTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTrafficShaping.setStatus("obsolete")


class _AtmIfVccVcdUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfVccVcdUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("sameAsInterface", 3))
    )


_AtmIfVccVcdUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfVccVcdUnshapedTransmitQueueing_Object = MibTableColumn
atmIfVccVcdUnshapedTransmitQueueing = _AtmIfVccVcdUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 110, 1, 60),
    _AtmIfVccVcdUnshapedTransmitQueueing_Type()
)
atmIfVccVcdUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdUnshapedTransmitQueueing.setStatus("obsolete")


class _AtmIfVccVcdUsageParameterControl_Type(Integer32):
    """Custom type atmIfVccVcdUsageParameterControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsInterface", 2))
    )


_AtmIfVccVcdUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfVccVcdUsageParameterControl_Object = MibTableColumn
atmIfVccVcdUsageParameterControl = _AtmIfVccVcdUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 110, 1, 70),
    _AtmIfVccVcdUsageParameterControl_Type()
)
atmIfVccVcdUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdUsageParameterControl.setStatus("obsolete")


class _AtmIfVccVcdBearerClassBbc_Type(Integer32):
    """Custom type atmIfVccVcdBearerClassBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              31)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("derivedFromServiceCategory", 31),
          ("vp", 24),
          ("x", 16))
    )


_AtmIfVccVcdBearerClassBbc_Type.__name__ = "Integer32"
_AtmIfVccVcdBearerClassBbc_Object = MibTableColumn
atmIfVccVcdBearerClassBbc = _AtmIfVccVcdBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 110, 1, 71),
    _AtmIfVccVcdBearerClassBbc_Type()
)
atmIfVccVcdBearerClassBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdBearerClassBbc.setStatus("obsolete")


class _AtmIfVccVcdTransferCapabilityBbc_Type(Integer32):
    """Custom type atmIfVccVcdTransferCapabilityBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 31),
          ("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_AtmIfVccVcdTransferCapabilityBbc_Type.__name__ = "Integer32"
_AtmIfVccVcdTransferCapabilityBbc_Object = MibTableColumn
atmIfVccVcdTransferCapabilityBbc = _AtmIfVccVcdTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 110, 1, 72),
    _AtmIfVccVcdTransferCapabilityBbc_Type()
)
atmIfVccVcdTransferCapabilityBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTransferCapabilityBbc.setStatus("obsolete")


class _AtmIfVccVcdClippingBbc_Type(Integer32):
    """Custom type atmIfVccVcdClippingBbc based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVccVcdClippingBbc_Type.__name__ = "Integer32"
_AtmIfVccVcdClippingBbc_Object = MibTableColumn
atmIfVccVcdClippingBbc = _AtmIfVccVcdClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 110, 1, 74),
    _AtmIfVccVcdClippingBbc_Type()
)
atmIfVccVcdClippingBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdClippingBbc.setStatus("obsolete")


class _AtmIfVccVcdBestEffort_Type(Integer32):
    """Custom type atmIfVccVcdBestEffort based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              15)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 15),
          ("indicated", 0),
          ("notIndicated", 1))
    )


_AtmIfVccVcdBestEffort_Type.__name__ = "Integer32"
_AtmIfVccVcdBestEffort_Object = MibTableColumn
atmIfVccVcdBestEffort = _AtmIfVccVcdBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 110, 1, 75),
    _AtmIfVccVcdBestEffort_Type()
)
atmIfVccVcdBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdBestEffort.setStatus("obsolete")


class _AtmIfVccVcdFwdFrameDiscard_Type(Integer32):
    """Custom type atmIfVccVcdFwdFrameDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_AtmIfVccVcdFwdFrameDiscard_Type.__name__ = "Integer32"
_AtmIfVccVcdFwdFrameDiscard_Object = MibTableColumn
atmIfVccVcdFwdFrameDiscard = _AtmIfVccVcdFwdFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 110, 1, 76),
    _AtmIfVccVcdFwdFrameDiscard_Type()
)
atmIfVccVcdFwdFrameDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdFwdFrameDiscard.setStatus("obsolete")


class _AtmIfVccVcdBwdFrameDiscard_Type(Integer32):
    """Custom type atmIfVccVcdBwdFrameDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_AtmIfVccVcdBwdFrameDiscard_Type.__name__ = "Integer32"
_AtmIfVccVcdBwdFrameDiscard_Object = MibTableColumn
atmIfVccVcdBwdFrameDiscard = _AtmIfVccVcdBwdFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 110, 1, 77),
    _AtmIfVccVcdBwdFrameDiscard_Type()
)
atmIfVccVcdBwdFrameDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdBwdFrameDiscard.setStatus("obsolete")
_AtmIfVccVcdAcctTable_Object = MibTable
atmIfVccVcdAcctTable = _AtmIfVccVcdAcctTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 111)
)
if mibBuilder.loadTexts:
    atmIfVccVcdAcctTable.setStatus("mandatory")
_AtmIfVccVcdAcctEntry_Object = MibTableRow
atmIfVccVcdAcctEntry = _AtmIfVccVcdAcctEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 111, 1)
)
atmIfVccVcdAcctEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccVcdAcctEntry.setStatus("mandatory")


class _AtmIfVccVcdCorrelationTag_Type(AsciiString):
    """Custom type atmIfVccVcdCorrelationTag based on AsciiString"""
    defaultHexValue = ""

    subtypeSpec = AsciiString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_AtmIfVccVcdCorrelationTag_Type.__name__ = "AsciiString"
_AtmIfVccVcdCorrelationTag_Object = MibTableColumn
atmIfVccVcdCorrelationTag = _AtmIfVccVcdCorrelationTag_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 111, 1, 10),
    _AtmIfVccVcdCorrelationTag_Type()
)
atmIfVccVcdCorrelationTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdCorrelationTag.setStatus("mandatory")
_AtmIfVccVcdTxTdpTable_Object = MibTable
atmIfVccVcdTxTdpTable = _AtmIfVccVcdTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 297)
)
if mibBuilder.loadTexts:
    atmIfVccVcdTxTdpTable.setStatus("obsolete")
_AtmIfVccVcdTxTdpEntry_Object = MibTableRow
atmIfVccVcdTxTdpEntry = _AtmIfVccVcdTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 297, 1)
)
atmIfVccVcdTxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdTxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccVcdTxTdpEntry.setStatus("obsolete")


class _AtmIfVccVcdTxTdpIndex_Type(Integer32):
    """Custom type atmIfVccVcdTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVccVcdTxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVccVcdTxTdpIndex_Object = MibTableColumn
atmIfVccVcdTxTdpIndex = _AtmIfVccVcdTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 297, 1, 1),
    _AtmIfVccVcdTxTdpIndex_Type()
)
atmIfVccVcdTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccVcdTxTdpIndex.setStatus("obsolete")


class _AtmIfVccVcdTxTdpValue_Type(Unsigned32):
    """Custom type atmIfVccVcdTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVccVcdTxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVccVcdTxTdpValue_Object = MibTableColumn
atmIfVccVcdTxTdpValue = _AtmIfVccVcdTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 297, 1, 2),
    _AtmIfVccVcdTxTdpValue_Type()
)
atmIfVccVcdTxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdTxTdpValue.setStatus("obsolete")
_AtmIfVccVcdRxTdpTable_Object = MibTable
atmIfVccVcdRxTdpTable = _AtmIfVccVcdRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 298)
)
if mibBuilder.loadTexts:
    atmIfVccVcdRxTdpTable.setStatus("obsolete")
_AtmIfVccVcdRxTdpEntry_Object = MibTableRow
atmIfVccVcdRxTdpEntry = _AtmIfVccVcdRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 298, 1)
)
atmIfVccVcdRxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdRxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccVcdRxTdpEntry.setStatus("obsolete")


class _AtmIfVccVcdRxTdpIndex_Type(Integer32):
    """Custom type atmIfVccVcdRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVccVcdRxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVccVcdRxTdpIndex_Object = MibTableColumn
atmIfVccVcdRxTdpIndex = _AtmIfVccVcdRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 298, 1, 1),
    _AtmIfVccVcdRxTdpIndex_Type()
)
atmIfVccVcdRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccVcdRxTdpIndex.setStatus("obsolete")


class _AtmIfVccVcdRxTdpValue_Type(Unsigned32):
    """Custom type atmIfVccVcdRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVccVcdRxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVccVcdRxTdpValue_Object = MibTableColumn
atmIfVccVcdRxTdpValue = _AtmIfVccVcdRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 298, 1, 2),
    _AtmIfVccVcdRxTdpValue_Type()
)
atmIfVccVcdRxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdRxTdpValue.setStatus("obsolete")
_AtmIfVccVcdFqpTable_Object = MibTable
atmIfVccVcdFqpTable = _AtmIfVccVcdFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 359)
)
if mibBuilder.loadTexts:
    atmIfVccVcdFqpTable.setStatus("obsolete")
_AtmIfVccVcdFqpEntry_Object = MibTableRow
atmIfVccVcdFqpEntry = _AtmIfVccVcdFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 359, 1)
)
atmIfVccVcdFqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdFqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccVcdFqpEntry.setStatus("obsolete")


class _AtmIfVccVcdFqpIndex_Type(Integer32):
    """Custom type atmIfVccVcdFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVccVcdFqpIndex_Type.__name__ = "Integer32"
_AtmIfVccVcdFqpIndex_Object = MibTableColumn
atmIfVccVcdFqpIndex = _AtmIfVccVcdFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 359, 1, 1),
    _AtmIfVccVcdFqpIndex_Type()
)
atmIfVccVcdFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccVcdFqpIndex.setStatus("obsolete")


class _AtmIfVccVcdFqpValue_Type(Unsigned32):
    """Custom type atmIfVccVcdFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVccVcdFqpValue_Type.__name__ = "Unsigned32"
_AtmIfVccVcdFqpValue_Object = MibTableColumn
atmIfVccVcdFqpValue = _AtmIfVccVcdFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 359, 1, 2),
    _AtmIfVccVcdFqpValue_Type()
)
atmIfVccVcdFqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdFqpValue.setStatus("obsolete")
_AtmIfVccVcdBqpTable_Object = MibTable
atmIfVccVcdBqpTable = _AtmIfVccVcdBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 360)
)
if mibBuilder.loadTexts:
    atmIfVccVcdBqpTable.setStatus("obsolete")
_AtmIfVccVcdBqpEntry_Object = MibTableRow
atmIfVccVcdBqpEntry = _AtmIfVccVcdBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 360, 1)
)
atmIfVccVcdBqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccVcdBqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccVcdBqpEntry.setStatus("obsolete")


class _AtmIfVccVcdBqpIndex_Type(Integer32):
    """Custom type atmIfVccVcdBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVccVcdBqpIndex_Type.__name__ = "Integer32"
_AtmIfVccVcdBqpIndex_Object = MibTableColumn
atmIfVccVcdBqpIndex = _AtmIfVccVcdBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 360, 1, 1),
    _AtmIfVccVcdBqpIndex_Type()
)
atmIfVccVcdBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccVcdBqpIndex.setStatus("obsolete")


class _AtmIfVccVcdBqpValue_Type(Unsigned32):
    """Custom type atmIfVccVcdBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVccVcdBqpValue_Type.__name__ = "Unsigned32"
_AtmIfVccVcdBqpValue_Object = MibTableColumn
atmIfVccVcdBqpValue = _AtmIfVccVcdBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 2, 360, 1, 2),
    _AtmIfVccVcdBqpValue_Type()
)
atmIfVccVcdBqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccVcdBqpValue.setStatus("obsolete")
_AtmIfVccLoop_ObjectIdentity = ObjectIdentity
atmIfVccLoop = _AtmIfVccLoop_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 3)
)
_AtmIfVccLoopRowStatusTable_Object = MibTable
atmIfVccLoopRowStatusTable = _AtmIfVccLoopRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 3, 1)
)
if mibBuilder.loadTexts:
    atmIfVccLoopRowStatusTable.setStatus("mandatory")
_AtmIfVccLoopRowStatusEntry_Object = MibTableRow
atmIfVccLoopRowStatusEntry = _AtmIfVccLoopRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 3, 1, 1)
)
atmIfVccLoopRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccLoopIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccLoopRowStatusEntry.setStatus("mandatory")
_AtmIfVccLoopRowStatus_Type = RowStatus
_AtmIfVccLoopRowStatus_Object = MibTableColumn
atmIfVccLoopRowStatus = _AtmIfVccLoopRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 3, 1, 1, 1),
    _AtmIfVccLoopRowStatus_Type()
)
atmIfVccLoopRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccLoopRowStatus.setStatus("mandatory")
_AtmIfVccLoopComponentName_Type = DisplayString
_AtmIfVccLoopComponentName_Object = MibTableColumn
atmIfVccLoopComponentName = _AtmIfVccLoopComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 3, 1, 1, 2),
    _AtmIfVccLoopComponentName_Type()
)
atmIfVccLoopComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccLoopComponentName.setStatus("mandatory")
_AtmIfVccLoopStorageType_Type = StorageType
_AtmIfVccLoopStorageType_Object = MibTableColumn
atmIfVccLoopStorageType = _AtmIfVccLoopStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 3, 1, 1, 4),
    _AtmIfVccLoopStorageType_Type()
)
atmIfVccLoopStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccLoopStorageType.setStatus("mandatory")
_AtmIfVccLoopIndex_Type = NonReplicated
_AtmIfVccLoopIndex_Object = MibTableColumn
atmIfVccLoopIndex = _AtmIfVccLoopIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 3, 1, 1, 10),
    _AtmIfVccLoopIndex_Type()
)
atmIfVccLoopIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccLoopIndex.setStatus("mandatory")
_AtmIfVccNep_ObjectIdentity = ObjectIdentity
atmIfVccNep = _AtmIfVccNep_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 5)
)
_AtmIfVccNepRowStatusTable_Object = MibTable
atmIfVccNepRowStatusTable = _AtmIfVccNepRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 5, 1)
)
if mibBuilder.loadTexts:
    atmIfVccNepRowStatusTable.setStatus("mandatory")
_AtmIfVccNepRowStatusEntry_Object = MibTableRow
atmIfVccNepRowStatusEntry = _AtmIfVccNepRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 5, 1, 1)
)
atmIfVccNepRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccNepIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccNepRowStatusEntry.setStatus("mandatory")
_AtmIfVccNepRowStatus_Type = RowStatus
_AtmIfVccNepRowStatus_Object = MibTableColumn
atmIfVccNepRowStatus = _AtmIfVccNepRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 5, 1, 1, 1),
    _AtmIfVccNepRowStatus_Type()
)
atmIfVccNepRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccNepRowStatus.setStatus("mandatory")
_AtmIfVccNepComponentName_Type = DisplayString
_AtmIfVccNepComponentName_Object = MibTableColumn
atmIfVccNepComponentName = _AtmIfVccNepComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 5, 1, 1, 2),
    _AtmIfVccNepComponentName_Type()
)
atmIfVccNepComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccNepComponentName.setStatus("mandatory")
_AtmIfVccNepStorageType_Type = StorageType
_AtmIfVccNepStorageType_Object = MibTableColumn
atmIfVccNepStorageType = _AtmIfVccNepStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 5, 1, 1, 4),
    _AtmIfVccNepStorageType_Type()
)
atmIfVccNepStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccNepStorageType.setStatus("mandatory")
_AtmIfVccNepIndex_Type = NonReplicated
_AtmIfVccNepIndex_Object = MibTableColumn
atmIfVccNepIndex = _AtmIfVccNepIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 5, 1, 1, 10),
    _AtmIfVccNepIndex_Type()
)
atmIfVccNepIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccNepIndex.setStatus("mandatory")
_AtmIfVccNepProvTable_Object = MibTable
atmIfVccNepProvTable = _AtmIfVccNepProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 5, 100)
)
if mibBuilder.loadTexts:
    atmIfVccNepProvTable.setStatus("mandatory")
_AtmIfVccNepProvEntry_Object = MibTableRow
atmIfVccNepProvEntry = _AtmIfVccNepProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 5, 100, 1)
)
atmIfVccNepProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccNepIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccNepProvEntry.setStatus("mandatory")
_AtmIfVccNepApplicationName_Type = Link
_AtmIfVccNepApplicationName_Object = MibTableColumn
atmIfVccNepApplicationName = _AtmIfVccNepApplicationName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 5, 100, 1, 10),
    _AtmIfVccNepApplicationName_Type()
)
atmIfVccNepApplicationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccNepApplicationName.setStatus("mandatory")
_AtmIfVccTest_ObjectIdentity = ObjectIdentity
atmIfVccTest = _AtmIfVccTest_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6)
)
_AtmIfVccTestRowStatusTable_Object = MibTable
atmIfVccTestRowStatusTable = _AtmIfVccTestRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 1)
)
if mibBuilder.loadTexts:
    atmIfVccTestRowStatusTable.setStatus("mandatory")
_AtmIfVccTestRowStatusEntry_Object = MibTableRow
atmIfVccTestRowStatusEntry = _AtmIfVccTestRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 1, 1)
)
atmIfVccTestRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTestIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccTestRowStatusEntry.setStatus("mandatory")
_AtmIfVccTestRowStatus_Type = RowStatus
_AtmIfVccTestRowStatus_Object = MibTableColumn
atmIfVccTestRowStatus = _AtmIfVccTestRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 1, 1, 1),
    _AtmIfVccTestRowStatus_Type()
)
atmIfVccTestRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccTestRowStatus.setStatus("mandatory")
_AtmIfVccTestComponentName_Type = DisplayString
_AtmIfVccTestComponentName_Object = MibTableColumn
atmIfVccTestComponentName = _AtmIfVccTestComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 1, 1, 2),
    _AtmIfVccTestComponentName_Type()
)
atmIfVccTestComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTestComponentName.setStatus("mandatory")
_AtmIfVccTestStorageType_Type = StorageType
_AtmIfVccTestStorageType_Object = MibTableColumn
atmIfVccTestStorageType = _AtmIfVccTestStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 1, 1, 4),
    _AtmIfVccTestStorageType_Type()
)
atmIfVccTestStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTestStorageType.setStatus("mandatory")
_AtmIfVccTestIndex_Type = NonReplicated
_AtmIfVccTestIndex_Object = MibTableColumn
atmIfVccTestIndex = _AtmIfVccTestIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 1, 1, 10),
    _AtmIfVccTestIndex_Type()
)
atmIfVccTestIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccTestIndex.setStatus("mandatory")
_AtmIfVccTestStateTable_Object = MibTable
atmIfVccTestStateTable = _AtmIfVccTestStateTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 100)
)
if mibBuilder.loadTexts:
    atmIfVccTestStateTable.setStatus("mandatory")
_AtmIfVccTestStateEntry_Object = MibTableRow
atmIfVccTestStateEntry = _AtmIfVccTestStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 100, 1)
)
atmIfVccTestStateEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTestIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccTestStateEntry.setStatus("mandatory")


class _AtmIfVccTestAdminState_Type(Integer32):
    """Custom type atmIfVccTestAdminState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("locked", 0),
          ("shuttingDown", 2),
          ("unlocked", 1))
    )


_AtmIfVccTestAdminState_Type.__name__ = "Integer32"
_AtmIfVccTestAdminState_Object = MibTableColumn
atmIfVccTestAdminState = _AtmIfVccTestAdminState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 100, 1, 1),
    _AtmIfVccTestAdminState_Type()
)
atmIfVccTestAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTestAdminState.setStatus("mandatory")


class _AtmIfVccTestOperationalState_Type(Integer32):
    """Custom type atmIfVccTestOperationalState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_AtmIfVccTestOperationalState_Type.__name__ = "Integer32"
_AtmIfVccTestOperationalState_Object = MibTableColumn
atmIfVccTestOperationalState = _AtmIfVccTestOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 100, 1, 2),
    _AtmIfVccTestOperationalState_Type()
)
atmIfVccTestOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTestOperationalState.setStatus("mandatory")


class _AtmIfVccTestUsageState_Type(Integer32):
    """Custom type atmIfVccTestUsageState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("busy", 2),
          ("idle", 0))
    )


_AtmIfVccTestUsageState_Type.__name__ = "Integer32"
_AtmIfVccTestUsageState_Object = MibTableColumn
atmIfVccTestUsageState = _AtmIfVccTestUsageState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 100, 1, 3),
    _AtmIfVccTestUsageState_Type()
)
atmIfVccTestUsageState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTestUsageState.setStatus("mandatory")
_AtmIfVccTestSetupTable_Object = MibTable
atmIfVccTestSetupTable = _AtmIfVccTestSetupTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 110)
)
if mibBuilder.loadTexts:
    atmIfVccTestSetupTable.setStatus("mandatory")
_AtmIfVccTestSetupEntry_Object = MibTableRow
atmIfVccTestSetupEntry = _AtmIfVccTestSetupEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 110, 1)
)
atmIfVccTestSetupEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTestIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccTestSetupEntry.setStatus("mandatory")


class _AtmIfVccTestFrmTypes_Type(OctetString):
    """Custom type atmIfVccTestFrmTypes based on OctetString"""
    defaultHexValue = "c0"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVccTestFrmTypes_Type.__name__ = "OctetString"
_AtmIfVccTestFrmTypes_Object = MibTableColumn
atmIfVccTestFrmTypes = _AtmIfVccTestFrmTypes_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 110, 1, 10),
    _AtmIfVccTestFrmTypes_Type()
)
atmIfVccTestFrmTypes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccTestFrmTypes.setStatus("mandatory")


class _AtmIfVccTestFrmSize_Type(Unsigned32):
    """Custom type atmIfVccTestFrmSize based on Unsigned32"""
    defaultValue = 1024

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(4, 4096),
    )


_AtmIfVccTestFrmSize_Type.__name__ = "Unsigned32"
_AtmIfVccTestFrmSize_Object = MibTableColumn
atmIfVccTestFrmSize = _AtmIfVccTestFrmSize_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 110, 1, 20),
    _AtmIfVccTestFrmSize_Type()
)
atmIfVccTestFrmSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccTestFrmSize.setStatus("mandatory")


class _AtmIfVccTestFrmPatternType_Type(Integer32):
    """Custom type atmIfVccTestFrmPatternType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ccitt32kBitPattern", 0),
          ("ccitt8MBitPattern", 1),
          ("customizedPattern", 2))
    )


_AtmIfVccTestFrmPatternType_Type.__name__ = "Integer32"
_AtmIfVccTestFrmPatternType_Object = MibTableColumn
atmIfVccTestFrmPatternType = _AtmIfVccTestFrmPatternType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 110, 1, 30),
    _AtmIfVccTestFrmPatternType_Type()
)
atmIfVccTestFrmPatternType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccTestFrmPatternType.setStatus("mandatory")


class _AtmIfVccTestCustomizedPattern_Type(Hex):
    """Custom type atmIfVccTestCustomizedPattern based on Hex"""
    defaultValue = 1431655765

    subtypeSpec = Hex.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_AtmIfVccTestCustomizedPattern_Type.__name__ = "Hex"
_AtmIfVccTestCustomizedPattern_Object = MibTableColumn
atmIfVccTestCustomizedPattern = _AtmIfVccTestCustomizedPattern_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 110, 1, 40),
    _AtmIfVccTestCustomizedPattern_Type()
)
atmIfVccTestCustomizedPattern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccTestCustomizedPattern.setStatus("mandatory")


class _AtmIfVccTestDuration_Type(Unsigned32):
    """Custom type atmIfVccTestDuration based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 30240),
    )


_AtmIfVccTestDuration_Type.__name__ = "Unsigned32"
_AtmIfVccTestDuration_Object = MibTableColumn
atmIfVccTestDuration = _AtmIfVccTestDuration_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 110, 1, 50),
    _AtmIfVccTestDuration_Type()
)
atmIfVccTestDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccTestDuration.setStatus("mandatory")


class _AtmIfVccTestBandwidthElastic_Type(Integer32):
    """Custom type atmIfVccTestBandwidthElastic based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVccTestBandwidthElastic_Type.__name__ = "Integer32"
_AtmIfVccTestBandwidthElastic_Object = MibTableColumn
atmIfVccTestBandwidthElastic = _AtmIfVccTestBandwidthElastic_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 110, 1, 60),
    _AtmIfVccTestBandwidthElastic_Type()
)
atmIfVccTestBandwidthElastic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccTestBandwidthElastic.setStatus("mandatory")


class _AtmIfVccTestOverrideHoldingPriority_Type(Integer32):
    """Custom type atmIfVccTestOverrideHoldingPriority based on Integer32"""
    defaultValue = 6

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("noOverride", 6))
    )


_AtmIfVccTestOverrideHoldingPriority_Type.__name__ = "Integer32"
_AtmIfVccTestOverrideHoldingPriority_Object = MibTableColumn
atmIfVccTestOverrideHoldingPriority = _AtmIfVccTestOverrideHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 110, 1, 70),
    _AtmIfVccTestOverrideHoldingPriority_Type()
)
atmIfVccTestOverrideHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVccTestOverrideHoldingPriority.setStatus("mandatory")
_AtmIfVccTestResultsTable_Object = MibTable
atmIfVccTestResultsTable = _AtmIfVccTestResultsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 120)
)
if mibBuilder.loadTexts:
    atmIfVccTestResultsTable.setStatus("mandatory")
_AtmIfVccTestResultsEntry_Object = MibTableRow
atmIfVccTestResultsEntry = _AtmIfVccTestResultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 120, 1)
)
atmIfVccTestResultsEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTestIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccTestResultsEntry.setStatus("mandatory")


class _AtmIfVccTestElapsedTime_Type(Unsigned32):
    """Custom type atmIfVccTestElapsedTime based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30240),
    )


_AtmIfVccTestElapsedTime_Type.__name__ = "Unsigned32"
_AtmIfVccTestElapsedTime_Object = MibTableColumn
atmIfVccTestElapsedTime = _AtmIfVccTestElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 120, 1, 10),
    _AtmIfVccTestElapsedTime_Type()
)
atmIfVccTestElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTestElapsedTime.setStatus("mandatory")


class _AtmIfVccTestTimeRemaining_Type(Unsigned32):
    """Custom type atmIfVccTestTimeRemaining based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30240),
    )


_AtmIfVccTestTimeRemaining_Type.__name__ = "Unsigned32"
_AtmIfVccTestTimeRemaining_Object = MibTableColumn
atmIfVccTestTimeRemaining = _AtmIfVccTestTimeRemaining_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 120, 1, 20),
    _AtmIfVccTestTimeRemaining_Type()
)
atmIfVccTestTimeRemaining.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTestTimeRemaining.setStatus("mandatory")


class _AtmIfVccTestCauseOfTermination_Type(Integer32):
    """Custom type atmIfVccTestCauseOfTermination based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("neverStarted", 2),
          ("stoppedByOperator", 1),
          ("testRunning", 3),
          ("testTimeExpired", 0))
    )


_AtmIfVccTestCauseOfTermination_Type.__name__ = "Integer32"
_AtmIfVccTestCauseOfTermination_Object = MibTableColumn
atmIfVccTestCauseOfTermination = _AtmIfVccTestCauseOfTermination_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 120, 1, 30),
    _AtmIfVccTestCauseOfTermination_Type()
)
atmIfVccTestCauseOfTermination.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTestCauseOfTermination.setStatus("mandatory")
_AtmIfVccTestBytesTx_Type = PassportCounter64
_AtmIfVccTestBytesTx_Object = MibTableColumn
atmIfVccTestBytesTx = _AtmIfVccTestBytesTx_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 120, 1, 40),
    _AtmIfVccTestBytesTx_Type()
)
atmIfVccTestBytesTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTestBytesTx.setStatus("mandatory")
_AtmIfVccTestBytesRx_Type = PassportCounter64
_AtmIfVccTestBytesRx_Object = MibTableColumn
atmIfVccTestBytesRx = _AtmIfVccTestBytesRx_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 120, 1, 50),
    _AtmIfVccTestBytesRx_Type()
)
atmIfVccTestBytesRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTestBytesRx.setStatus("mandatory")
_AtmIfVccTestLoadingFrmTx_Type = PassportCounter64
_AtmIfVccTestLoadingFrmTx_Object = MibTableColumn
atmIfVccTestLoadingFrmTx = _AtmIfVccTestLoadingFrmTx_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 120, 1, 60),
    _AtmIfVccTestLoadingFrmTx_Type()
)
atmIfVccTestLoadingFrmTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTestLoadingFrmTx.setStatus("mandatory")
_AtmIfVccTestLoadingFrmRx_Type = PassportCounter64
_AtmIfVccTestLoadingFrmRx_Object = MibTableColumn
atmIfVccTestLoadingFrmRx = _AtmIfVccTestLoadingFrmRx_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 120, 1, 70),
    _AtmIfVccTestLoadingFrmRx_Type()
)
atmIfVccTestLoadingFrmRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTestLoadingFrmRx.setStatus("mandatory")
_AtmIfVccTestLoadingFrmLost_Type = PassportCounter64
_AtmIfVccTestLoadingFrmLost_Object = MibTableColumn
atmIfVccTestLoadingFrmLost = _AtmIfVccTestLoadingFrmLost_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 120, 1, 80),
    _AtmIfVccTestLoadingFrmLost_Type()
)
atmIfVccTestLoadingFrmLost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTestLoadingFrmLost.setStatus("mandatory")
_AtmIfVccTestVerificationFrmTx_Type = PassportCounter64
_AtmIfVccTestVerificationFrmTx_Object = MibTableColumn
atmIfVccTestVerificationFrmTx = _AtmIfVccTestVerificationFrmTx_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 120, 1, 90),
    _AtmIfVccTestVerificationFrmTx_Type()
)
atmIfVccTestVerificationFrmTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTestVerificationFrmTx.setStatus("mandatory")
_AtmIfVccTestVerificationFrmRx_Type = PassportCounter64
_AtmIfVccTestVerificationFrmRx_Object = MibTableColumn
atmIfVccTestVerificationFrmRx = _AtmIfVccTestVerificationFrmRx_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 120, 1, 100),
    _AtmIfVccTestVerificationFrmRx_Type()
)
atmIfVccTestVerificationFrmRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTestVerificationFrmRx.setStatus("mandatory")
_AtmIfVccTestVerificationFrmBad_Type = PassportCounter64
_AtmIfVccTestVerificationFrmBad_Object = MibTableColumn
atmIfVccTestVerificationFrmBad = _AtmIfVccTestVerificationFrmBad_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 120, 1, 110),
    _AtmIfVccTestVerificationFrmBad_Type()
)
atmIfVccTestVerificationFrmBad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTestVerificationFrmBad.setStatus("mandatory")
_AtmIfVccTestUnrecognizableFrmRx_Type = PassportCounter64
_AtmIfVccTestUnrecognizableFrmRx_Object = MibTableColumn
atmIfVccTestUnrecognizableFrmRx = _AtmIfVccTestUnrecognizableFrmRx_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 6, 120, 1, 120),
    _AtmIfVccTestUnrecognizableFrmRx_Type()
)
atmIfVccTestUnrecognizableFrmRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTestUnrecognizableFrmRx.setStatus("mandatory")
_AtmIfVccTm_ObjectIdentity = ObjectIdentity
atmIfVccTm = _AtmIfVccTm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7)
)
_AtmIfVccTmRowStatusTable_Object = MibTable
atmIfVccTmRowStatusTable = _AtmIfVccTmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 1)
)
if mibBuilder.loadTexts:
    atmIfVccTmRowStatusTable.setStatus("mandatory")
_AtmIfVccTmRowStatusEntry_Object = MibTableRow
atmIfVccTmRowStatusEntry = _AtmIfVccTmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 1, 1)
)
atmIfVccTmRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTmIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccTmRowStatusEntry.setStatus("mandatory")
_AtmIfVccTmRowStatus_Type = RowStatus
_AtmIfVccTmRowStatus_Object = MibTableColumn
atmIfVccTmRowStatus = _AtmIfVccTmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 1, 1, 1),
    _AtmIfVccTmRowStatus_Type()
)
atmIfVccTmRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmRowStatus.setStatus("mandatory")
_AtmIfVccTmComponentName_Type = DisplayString
_AtmIfVccTmComponentName_Object = MibTableColumn
atmIfVccTmComponentName = _AtmIfVccTmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 1, 1, 2),
    _AtmIfVccTmComponentName_Type()
)
atmIfVccTmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmComponentName.setStatus("mandatory")
_AtmIfVccTmStorageType_Type = StorageType
_AtmIfVccTmStorageType_Object = MibTableColumn
atmIfVccTmStorageType = _AtmIfVccTmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 1, 1, 4),
    _AtmIfVccTmStorageType_Type()
)
atmIfVccTmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmStorageType.setStatus("mandatory")
_AtmIfVccTmIndex_Type = NonReplicated
_AtmIfVccTmIndex_Object = MibTableColumn
atmIfVccTmIndex = _AtmIfVccTmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 1, 1, 10),
    _AtmIfVccTmIndex_Type()
)
atmIfVccTmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccTmIndex.setStatus("mandatory")
_AtmIfVccTmAbr_ObjectIdentity = ObjectIdentity
atmIfVccTmAbr = _AtmIfVccTmAbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2)
)
_AtmIfVccTmAbrRowStatusTable_Object = MibTable
atmIfVccTmAbrRowStatusTable = _AtmIfVccTmAbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 1)
)
if mibBuilder.loadTexts:
    atmIfVccTmAbrRowStatusTable.setStatus("mandatory")
_AtmIfVccTmAbrRowStatusEntry_Object = MibTableRow
atmIfVccTmAbrRowStatusEntry = _AtmIfVccTmAbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 1, 1)
)
atmIfVccTmAbrRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTmAbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccTmAbrRowStatusEntry.setStatus("mandatory")
_AtmIfVccTmAbrRowStatus_Type = RowStatus
_AtmIfVccTmAbrRowStatus_Object = MibTableColumn
atmIfVccTmAbrRowStatus = _AtmIfVccTmAbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 1, 1, 1),
    _AtmIfVccTmAbrRowStatus_Type()
)
atmIfVccTmAbrRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmAbrRowStatus.setStatus("mandatory")
_AtmIfVccTmAbrComponentName_Type = DisplayString
_AtmIfVccTmAbrComponentName_Object = MibTableColumn
atmIfVccTmAbrComponentName = _AtmIfVccTmAbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 1, 1, 2),
    _AtmIfVccTmAbrComponentName_Type()
)
atmIfVccTmAbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmAbrComponentName.setStatus("mandatory")
_AtmIfVccTmAbrStorageType_Type = StorageType
_AtmIfVccTmAbrStorageType_Object = MibTableColumn
atmIfVccTmAbrStorageType = _AtmIfVccTmAbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 1, 1, 4),
    _AtmIfVccTmAbrStorageType_Type()
)
atmIfVccTmAbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmAbrStorageType.setStatus("mandatory")
_AtmIfVccTmAbrIndex_Type = NonReplicated
_AtmIfVccTmAbrIndex_Object = MibTableColumn
atmIfVccTmAbrIndex = _AtmIfVccTmAbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 1, 1, 10),
    _AtmIfVccTmAbrIndex_Type()
)
atmIfVccTmAbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccTmAbrIndex.setStatus("mandatory")
_AtmIfVccTmAbrOperTable_Object = MibTable
atmIfVccTmAbrOperTable = _AtmIfVccTmAbrOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 110)
)
if mibBuilder.loadTexts:
    atmIfVccTmAbrOperTable.setStatus("mandatory")
_AtmIfVccTmAbrOperEntry_Object = MibTableRow
atmIfVccTmAbrOperEntry = _AtmIfVccTmAbrOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 110, 1)
)
atmIfVccTmAbrOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTmAbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccTmAbrOperEntry.setStatus("mandatory")


class _AtmIfVccTmAbrInitialCellRate_Type(Unsigned32):
    """Custom type atmIfVccTmAbrInitialCellRate based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVccTmAbrInitialCellRate_Type.__name__ = "Unsigned32"
_AtmIfVccTmAbrInitialCellRate_Object = MibTableColumn
atmIfVccTmAbrInitialCellRate = _AtmIfVccTmAbrInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 110, 1, 10),
    _AtmIfVccTmAbrInitialCellRate_Type()
)
atmIfVccTmAbrInitialCellRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmAbrInitialCellRate.setStatus("mandatory")


class _AtmIfVccTmAbrTransientBufferExposure_Type(Unsigned32):
    """Custom type atmIfVccTmAbrTransientBufferExposure based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVccTmAbrTransientBufferExposure_Type.__name__ = "Unsigned32"
_AtmIfVccTmAbrTransientBufferExposure_Object = MibTableColumn
atmIfVccTmAbrTransientBufferExposure = _AtmIfVccTmAbrTransientBufferExposure_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 110, 1, 11),
    _AtmIfVccTmAbrTransientBufferExposure_Type()
)
atmIfVccTmAbrTransientBufferExposure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmAbrTransientBufferExposure.setStatus("mandatory")


class _AtmIfVccTmAbrFixedRoundTripTime_Type(Unsigned32):
    """Custom type atmIfVccTmAbrFixedRoundTripTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16700000),
    )


_AtmIfVccTmAbrFixedRoundTripTime_Type.__name__ = "Unsigned32"
_AtmIfVccTmAbrFixedRoundTripTime_Object = MibTableColumn
atmIfVccTmAbrFixedRoundTripTime = _AtmIfVccTmAbrFixedRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 110, 1, 12),
    _AtmIfVccTmAbrFixedRoundTripTime_Type()
)
atmIfVccTmAbrFixedRoundTripTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmAbrFixedRoundTripTime.setStatus("mandatory")


class _AtmIfVccTmAbrRateDecreaseFactor_Type(Unsigned32):
    """Custom type atmIfVccTmAbrRateDecreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_AtmIfVccTmAbrRateDecreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVccTmAbrRateDecreaseFactor_Object = MibTableColumn
atmIfVccTmAbrRateDecreaseFactor = _AtmIfVccTmAbrRateDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 110, 1, 13),
    _AtmIfVccTmAbrRateDecreaseFactor_Type()
)
atmIfVccTmAbrRateDecreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmAbrRateDecreaseFactor.setStatus("mandatory")


class _AtmIfVccTmAbrRateIncreaseFactor_Type(Unsigned32):
    """Custom type atmIfVccTmAbrRateIncreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_AtmIfVccTmAbrRateIncreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVccTmAbrRateIncreaseFactor_Object = MibTableColumn
atmIfVccTmAbrRateIncreaseFactor = _AtmIfVccTmAbrRateIncreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 110, 1, 14),
    _AtmIfVccTmAbrRateIncreaseFactor_Type()
)
atmIfVccTmAbrRateIncreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmAbrRateIncreaseFactor.setStatus("mandatory")


class _AtmIfVccTmAbrMaxCellPerRmCell_Type(Unsigned32):
    """Custom type atmIfVccTmAbrMaxCellPerRmCell based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
    )


_AtmIfVccTmAbrMaxCellPerRmCell_Type.__name__ = "Unsigned32"
_AtmIfVccTmAbrMaxCellPerRmCell_Object = MibTableColumn
atmIfVccTmAbrMaxCellPerRmCell = _AtmIfVccTmAbrMaxCellPerRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 110, 1, 15),
    _AtmIfVccTmAbrMaxCellPerRmCell_Type()
)
atmIfVccTmAbrMaxCellPerRmCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmAbrMaxCellPerRmCell.setStatus("mandatory")


class _AtmIfVccTmAbrMaxTimeBetweenRmCell_Type(Unsigned32):
    """Custom type atmIfVccTmAbrMaxTimeBetweenRmCell based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(781, 781),
        ValueRangeConstraint(1563, 1563),
        ValueRangeConstraint(3125, 3125),
        ValueRangeConstraint(6250, 6250),
        ValueRangeConstraint(12500, 12500),
        ValueRangeConstraint(25000, 25000),
        ValueRangeConstraint(50000, 50000),
        ValueRangeConstraint(100000, 100000),
    )


_AtmIfVccTmAbrMaxTimeBetweenRmCell_Type.__name__ = "Unsigned32"
_AtmIfVccTmAbrMaxTimeBetweenRmCell_Object = MibTableColumn
atmIfVccTmAbrMaxTimeBetweenRmCell = _AtmIfVccTmAbrMaxTimeBetweenRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 110, 1, 16),
    _AtmIfVccTmAbrMaxTimeBetweenRmCell_Type()
)
atmIfVccTmAbrMaxTimeBetweenRmCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmAbrMaxTimeBetweenRmCell.setStatus("mandatory")


class _AtmIfVccTmAbrCutoffDecreaseFactor_Type(Unsigned32):
    """Custom type atmIfVccTmAbrCutoffDecreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
    )


_AtmIfVccTmAbrCutoffDecreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVccTmAbrCutoffDecreaseFactor_Object = MibTableColumn
atmIfVccTmAbrCutoffDecreaseFactor = _AtmIfVccTmAbrCutoffDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 110, 1, 17),
    _AtmIfVccTmAbrCutoffDecreaseFactor_Type()
)
atmIfVccTmAbrCutoffDecreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmAbrCutoffDecreaseFactor.setStatus("mandatory")


class _AtmIfVccTmAbrAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type atmIfVccTmAbrAcrDecreaseTimeFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_AtmIfVccTmAbrAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_AtmIfVccTmAbrAcrDecreaseTimeFactor_Object = MibTableColumn
atmIfVccTmAbrAcrDecreaseTimeFactor = _AtmIfVccTmAbrAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 110, 1, 18),
    _AtmIfVccTmAbrAcrDecreaseTimeFactor_Type()
)
atmIfVccTmAbrAcrDecreaseTimeFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmAbrAcrDecreaseTimeFactor.setStatus("mandatory")


class _AtmIfVccTmAbrForwardRmCellLimit_Type(Unsigned32):
    """Custom type atmIfVccTmAbrForwardRmCellLimit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(3, 3),
        ValueRangeConstraint(7, 7),
        ValueRangeConstraint(15, 15),
        ValueRangeConstraint(31, 31),
        ValueRangeConstraint(63, 63),
        ValueRangeConstraint(127, 127),
        ValueRangeConstraint(255, 255),
        ValueRangeConstraint(511, 511),
        ValueRangeConstraint(1023, 1023),
        ValueRangeConstraint(2047, 2047),
        ValueRangeConstraint(4095, 4095),
    )


_AtmIfVccTmAbrForwardRmCellLimit_Type.__name__ = "Unsigned32"
_AtmIfVccTmAbrForwardRmCellLimit_Object = MibTableColumn
atmIfVccTmAbrForwardRmCellLimit = _AtmIfVccTmAbrForwardRmCellLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 110, 1, 19),
    _AtmIfVccTmAbrForwardRmCellLimit_Type()
)
atmIfVccTmAbrForwardRmCellLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmAbrForwardRmCellLimit.setStatus("mandatory")


class _AtmIfVccTmAbrTxRateChangeInfo_Type(Integer32):
    """Custom type atmIfVccTmAbrTxRateChangeInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("congestionIndicated", 0),
          ("explicitRateIndicated", 2),
          ("noIncreaseIndicated", 1))
    )


_AtmIfVccTmAbrTxRateChangeInfo_Type.__name__ = "Integer32"
_AtmIfVccTmAbrTxRateChangeInfo_Object = MibTableColumn
atmIfVccTmAbrTxRateChangeInfo = _AtmIfVccTmAbrTxRateChangeInfo_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 110, 1, 20),
    _AtmIfVccTmAbrTxRateChangeInfo_Type()
)
atmIfVccTmAbrTxRateChangeInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmAbrTxRateChangeInfo.setStatus("obsolete")


class _AtmIfVccTmAbrAcrRateChangeInfo_Type(Integer32):
    """Custom type atmIfVccTmAbrAcrRateChangeInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              15)
        )
    )
    namedValues = NamedValues(
        *(("decreasedByRdf", 1),
          ("increasedByRif", 2),
          ("noChange", 0),
          ("notApplicable", 15),
          ("setToExplicitRate", 3))
    )


_AtmIfVccTmAbrAcrRateChangeInfo_Type.__name__ = "Integer32"
_AtmIfVccTmAbrAcrRateChangeInfo_Object = MibTableColumn
atmIfVccTmAbrAcrRateChangeInfo = _AtmIfVccTmAbrAcrRateChangeInfo_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 110, 1, 21),
    _AtmIfVccTmAbrAcrRateChangeInfo_Type()
)
atmIfVccTmAbrAcrRateChangeInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmAbrAcrRateChangeInfo.setStatus("mandatory")


class _AtmIfVccTmAbrTxFwdRmCells_Type(Unsigned32):
    """Custom type atmIfVccTmAbrTxFwdRmCells based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmIfVccTmAbrTxFwdRmCells_Type.__name__ = "Unsigned32"
_AtmIfVccTmAbrTxFwdRmCells_Object = MibTableColumn
atmIfVccTmAbrTxFwdRmCells = _AtmIfVccTmAbrTxFwdRmCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 110, 1, 22),
    _AtmIfVccTmAbrTxFwdRmCells_Type()
)
atmIfVccTmAbrTxFwdRmCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmAbrTxFwdRmCells.setStatus("mandatory")


class _AtmIfVccTmAbrRxEfci_Type(Integer32):
    """Custom type atmIfVccTmAbrRxEfci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_AtmIfVccTmAbrRxEfci_Type.__name__ = "Integer32"
_AtmIfVccTmAbrRxEfci_Object = MibTableColumn
atmIfVccTmAbrRxEfci = _AtmIfVccTmAbrRxEfci_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 110, 1, 23),
    _AtmIfVccTmAbrRxEfci_Type()
)
atmIfVccTmAbrRxEfci.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmAbrRxEfci.setStatus("mandatory")


class _AtmIfVccTmAbrBrmRateChangeInfo_Type(OctetString):
    """Custom type atmIfVccTmAbrBrmRateChangeInfo based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVccTmAbrBrmRateChangeInfo_Type.__name__ = "OctetString"
_AtmIfVccTmAbrBrmRateChangeInfo_Object = MibTableColumn
atmIfVccTmAbrBrmRateChangeInfo = _AtmIfVccTmAbrBrmRateChangeInfo_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 110, 1, 24),
    _AtmIfVccTmAbrBrmRateChangeInfo_Type()
)
atmIfVccTmAbrBrmRateChangeInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmAbrBrmRateChangeInfo.setStatus("mandatory")


class _AtmIfVccTmAbrBrmExplicitRate_Type(Unsigned32):
    """Custom type atmIfVccTmAbrBrmExplicitRate based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVccTmAbrBrmExplicitRate_Type.__name__ = "Unsigned32"
_AtmIfVccTmAbrBrmExplicitRate_Object = MibTableColumn
atmIfVccTmAbrBrmExplicitRate = _AtmIfVccTmAbrBrmExplicitRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 2, 110, 1, 25),
    _AtmIfVccTmAbrBrmExplicitRate_Type()
)
atmIfVccTmAbrBrmExplicitRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmAbrBrmExplicitRate.setStatus("mandatory")
_AtmIfVccTmOperTable_Object = MibTable
atmIfVccTmOperTable = _AtmIfVccTmOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100)
)
if mibBuilder.loadTexts:
    atmIfVccTmOperTable.setStatus("mandatory")
_AtmIfVccTmOperEntry_Object = MibTableRow
atmIfVccTmOperEntry = _AtmIfVccTmOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1)
)
atmIfVccTmOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTmIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccTmOperEntry.setStatus("mandatory")


class _AtmIfVccTmTxTrafficDescType_Type(Integer32):
    """Custom type atmIfVccTmTxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_AtmIfVccTmTxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVccTmTxTrafficDescType_Object = MibTableColumn
atmIfVccTmTxTrafficDescType = _AtmIfVccTmTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 10),
    _AtmIfVccTmTxTrafficDescType_Type()
)
atmIfVccTmTxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmTxTrafficDescType.setStatus("mandatory")


class _AtmIfVccTmTxQosClass_Type(Integer32):
    """Custom type atmIfVccTmTxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_AtmIfVccTmTxQosClass_Type.__name__ = "Integer32"
_AtmIfVccTmTxQosClass_Object = MibTableColumn
atmIfVccTmTxQosClass = _AtmIfVccTmTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 31),
    _AtmIfVccTmTxQosClass_Type()
)
atmIfVccTmTxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmTxQosClass.setStatus("mandatory")


class _AtmIfVccTmTxQueueLength_Type(Unsigned32):
    """Custom type atmIfVccTmTxQueueLength based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_AtmIfVccTmTxQueueLength_Type.__name__ = "Unsigned32"
_AtmIfVccTmTxQueueLength_Object = MibTableColumn
atmIfVccTmTxQueueLength = _AtmIfVccTmTxQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 32),
    _AtmIfVccTmTxQueueLength_Type()
)
atmIfVccTmTxQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmTxQueueLength.setStatus("mandatory")


class _AtmIfVccTmTxQueueCongestionState_Type(Unsigned32):
    """Custom type atmIfVccTmTxQueueCongestionState based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_AtmIfVccTmTxQueueCongestionState_Type.__name__ = "Unsigned32"
_AtmIfVccTmTxQueueCongestionState_Object = MibTableColumn
atmIfVccTmTxQueueCongestionState = _AtmIfVccTmTxQueueCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 33),
    _AtmIfVccTmTxQueueCongestionState_Type()
)
atmIfVccTmTxQueueCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmTxQueueCongestionState.setStatus("mandatory")


class _AtmIfVccTmHoldingPriority_Type(Integer32):
    """Custom type atmIfVccTmHoldingPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 6))
    )


_AtmIfVccTmHoldingPriority_Type.__name__ = "Integer32"
_AtmIfVccTmHoldingPriority_Object = MibTableColumn
atmIfVccTmHoldingPriority = _AtmIfVccTmHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 35),
    _AtmIfVccTmHoldingPriority_Type()
)
atmIfVccTmHoldingPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmHoldingPriority.setStatus("mandatory")


class _AtmIfVccTmRxTrafficDescType_Type(Integer32):
    """Custom type atmIfVccTmRxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_AtmIfVccTmRxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVccTmRxTrafficDescType_Object = MibTableColumn
atmIfVccTmRxTrafficDescType = _AtmIfVccTmRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 40),
    _AtmIfVccTmRxTrafficDescType_Type()
)
atmIfVccTmRxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmRxTrafficDescType.setStatus("mandatory")


class _AtmIfVccTmRxQosClass_Type(Integer32):
    """Custom type atmIfVccTmRxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_AtmIfVccTmRxQosClass_Type.__name__ = "Integer32"
_AtmIfVccTmRxQosClass_Object = MibTableColumn
atmIfVccTmRxQosClass = _AtmIfVccTmRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 61),
    _AtmIfVccTmRxQosClass_Type()
)
atmIfVccTmRxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmRxQosClass.setStatus("mandatory")


class _AtmIfVccTmAtmServiceCategory_Type(Integer32):
    """Custom type atmIfVccTmAtmServiceCategory based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("availableBitRate", 4),
          ("constantBitRate", 1),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_AtmIfVccTmAtmServiceCategory_Type.__name__ = "Integer32"
_AtmIfVccTmAtmServiceCategory_Object = MibTableColumn
atmIfVccTmAtmServiceCategory = _AtmIfVccTmAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 62),
    _AtmIfVccTmAtmServiceCategory_Type()
)
atmIfVccTmAtmServiceCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmAtmServiceCategory.setStatus("mandatory")


class _AtmIfVccTmTrafficShaping_Type(Integer32):
    """Custom type atmIfVccTmTrafficShaping based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("dynamic", 7),
          ("inverseUpc", 6),
          ("linear", 5),
          ("notApplicable", 4))
    )


_AtmIfVccTmTrafficShaping_Type.__name__ = "Integer32"
_AtmIfVccTmTrafficShaping_Object = MibTableColumn
atmIfVccTmTrafficShaping = _AtmIfVccTmTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 70),
    _AtmIfVccTmTrafficShaping_Type()
)
atmIfVccTmTrafficShaping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmTrafficShaping.setStatus("mandatory")


class _AtmIfVccTmBearerClassBbc_Type(Integer32):
    """Custom type atmIfVccTmBearerClassBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              30)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("notApplicable", 30),
          ("vp", 24),
          ("x", 16))
    )


_AtmIfVccTmBearerClassBbc_Type.__name__ = "Integer32"
_AtmIfVccTmBearerClassBbc_Object = MibTableColumn
atmIfVccTmBearerClassBbc = _AtmIfVccTmBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 71),
    _AtmIfVccTmBearerClassBbc_Type()
)
atmIfVccTmBearerClassBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmBearerClassBbc.setStatus("mandatory")


class _AtmIfVccTmTransferCapabilityBbc_Type(Integer32):
    """Custom type atmIfVccTmTransferCapabilityBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_AtmIfVccTmTransferCapabilityBbc_Type.__name__ = "Integer32"
_AtmIfVccTmTransferCapabilityBbc_Object = MibTableColumn
atmIfVccTmTransferCapabilityBbc = _AtmIfVccTmTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 72),
    _AtmIfVccTmTransferCapabilityBbc_Type()
)
atmIfVccTmTransferCapabilityBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmTransferCapabilityBbc.setStatus("mandatory")


class _AtmIfVccTmClippingBbc_Type(Integer32):
    """Custom type atmIfVccTmClippingBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("notApplicable", 14),
          ("yes", 1))
    )


_AtmIfVccTmClippingBbc_Type.__name__ = "Integer32"
_AtmIfVccTmClippingBbc_Object = MibTableColumn
atmIfVccTmClippingBbc = _AtmIfVccTmClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 74),
    _AtmIfVccTmClippingBbc_Type()
)
atmIfVccTmClippingBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmClippingBbc.setStatus("mandatory")


class _AtmIfVccTmUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfVccTmUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("fifo", 5),
          ("notApplicable", 4),
          ("perVc", 0))
    )


_AtmIfVccTmUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfVccTmUnshapedTransmitQueueing_Object = MibTableColumn
atmIfVccTmUnshapedTransmitQueueing = _AtmIfVccTmUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 75),
    _AtmIfVccTmUnshapedTransmitQueueing_Type()
)
atmIfVccTmUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmUnshapedTransmitQueueing.setStatus("mandatory")


class _AtmIfVccTmBestEffort_Type(Integer32):
    """Custom type atmIfVccTmBestEffort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 0),
          ("notApplicable", 14),
          ("notIndicated", 1))
    )


_AtmIfVccTmBestEffort_Type.__name__ = "Integer32"
_AtmIfVccTmBestEffort_Object = MibTableColumn
atmIfVccTmBestEffort = _AtmIfVccTmBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 76),
    _AtmIfVccTmBestEffort_Type()
)
atmIfVccTmBestEffort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmBestEffort.setStatus("mandatory")


class _AtmIfVccTmForceTagging_Type(Integer32):
    """Custom type atmIfVccTmForceTagging based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0))
    )


_AtmIfVccTmForceTagging_Type.__name__ = "Integer32"
_AtmIfVccTmForceTagging_Object = MibTableColumn
atmIfVccTmForceTagging = _AtmIfVccTmForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 78),
    _AtmIfVccTmForceTagging_Type()
)
atmIfVccTmForceTagging.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmForceTagging.setStatus("mandatory")


class _AtmIfVccTmWeight_Type(Unsigned32):
    """Custom type atmIfVccTmWeight based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(65534, 65534),
    )


_AtmIfVccTmWeight_Type.__name__ = "Unsigned32"
_AtmIfVccTmWeight_Object = MibTableColumn
atmIfVccTmWeight = _AtmIfVccTmWeight_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 79),
    _AtmIfVccTmWeight_Type()
)
atmIfVccTmWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmWeight.setStatus("mandatory")


class _AtmIfVccTmUsageParameterControl_Type(Integer32):
    """Custom type atmIfVccTmUsageParameterControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("abrEnforced", 6),
          ("abrMonitored", 5),
          ("disabled", 1),
          ("enforced", 0),
          ("monitored", 4),
          ("notApplicable", 3))
    )


_AtmIfVccTmUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfVccTmUsageParameterControl_Object = MibTableColumn
atmIfVccTmUsageParameterControl = _AtmIfVccTmUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 80),
    _AtmIfVccTmUsageParameterControl_Type()
)
atmIfVccTmUsageParameterControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmUsageParameterControl.setStatus("mandatory")


class _AtmIfVccTmTxPacketWiseDiscard_Type(OctetString):
    """Custom type atmIfVccTmTxPacketWiseDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVccTmTxPacketWiseDiscard_Type.__name__ = "OctetString"
_AtmIfVccTmTxPacketWiseDiscard_Object = MibTableColumn
atmIfVccTmTxPacketWiseDiscard = _AtmIfVccTmTxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 85),
    _AtmIfVccTmTxPacketWiseDiscard_Type()
)
atmIfVccTmTxPacketWiseDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmTxPacketWiseDiscard.setStatus("mandatory")


class _AtmIfVccTmRxPacketWiseDiscard_Type(OctetString):
    """Custom type atmIfVccTmRxPacketWiseDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVccTmRxPacketWiseDiscard_Type.__name__ = "OctetString"
_AtmIfVccTmRxPacketWiseDiscard_Object = MibTableColumn
atmIfVccTmRxPacketWiseDiscard = _AtmIfVccTmRxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 86),
    _AtmIfVccTmRxPacketWiseDiscard_Type()
)
atmIfVccTmRxPacketWiseDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmRxPacketWiseDiscard.setStatus("mandatory")


class _AtmIfVccTmBandwidthElastic_Type(Integer32):
    """Custom type atmIfVccTmBandwidthElastic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVccTmBandwidthElastic_Type.__name__ = "Integer32"
_AtmIfVccTmBandwidthElastic_Object = MibTableColumn
atmIfVccTmBandwidthElastic = _AtmIfVccTmBandwidthElastic_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 90),
    _AtmIfVccTmBandwidthElastic_Type()
)
atmIfVccTmBandwidthElastic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmBandwidthElastic.setStatus("mandatory")


class _AtmIfVccTmBandwidthReduction_Type(Unsigned32):
    """Custom type atmIfVccTmBandwidthReduction based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVccTmBandwidthReduction_Type.__name__ = "Unsigned32"
_AtmIfVccTmBandwidthReduction_Object = MibTableColumn
atmIfVccTmBandwidthReduction = _AtmIfVccTmBandwidthReduction_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 100),
    _AtmIfVccTmBandwidthReduction_Type()
)
atmIfVccTmBandwidthReduction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmBandwidthReduction.setStatus("mandatory")


class _AtmIfVccTmAbrConnectionType_Type(Integer32):
    """Custom type atmIfVccTmAbrConnectionType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              15)
        )
    )
    namedValues = NamedValues(
        *(("efciSwitch", 2),
          ("erSwitch", 1),
          ("nonAbrInterworking", 5),
          ("notApplicable", 15),
          ("sourceDest", 4),
          ("virtualSourceDest", 3))
    )


_AtmIfVccTmAbrConnectionType_Type.__name__ = "Integer32"
_AtmIfVccTmAbrConnectionType_Object = MibTableColumn
atmIfVccTmAbrConnectionType = _AtmIfVccTmAbrConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 100, 1, 110),
    _AtmIfVccTmAbrConnectionType_Type()
)
atmIfVccTmAbrConnectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmAbrConnectionType.setStatus("mandatory")
_AtmIfVccTmTxTdpTable_Object = MibTable
atmIfVccTmTxTdpTable = _AtmIfVccTmTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 451)
)
if mibBuilder.loadTexts:
    atmIfVccTmTxTdpTable.setStatus("mandatory")
_AtmIfVccTmTxTdpEntry_Object = MibTableRow
atmIfVccTmTxTdpEntry = _AtmIfVccTmTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 451, 1)
)
atmIfVccTmTxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTmTxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccTmTxTdpEntry.setStatus("mandatory")


class _AtmIfVccTmTxTdpIndex_Type(Integer32):
    """Custom type atmIfVccTmTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVccTmTxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVccTmTxTdpIndex_Object = MibTableColumn
atmIfVccTmTxTdpIndex = _AtmIfVccTmTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 451, 1, 1),
    _AtmIfVccTmTxTdpIndex_Type()
)
atmIfVccTmTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccTmTxTdpIndex.setStatus("mandatory")


class _AtmIfVccTmTxTdpValue_Type(Unsigned32):
    """Custom type atmIfVccTmTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVccTmTxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVccTmTxTdpValue_Object = MibTableColumn
atmIfVccTmTxTdpValue = _AtmIfVccTmTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 451, 1, 2),
    _AtmIfVccTmTxTdpValue_Type()
)
atmIfVccTmTxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmTxTdpValue.setStatus("mandatory")
_AtmIfVccTmTxQThreshTable_Object = MibTable
atmIfVccTmTxQThreshTable = _AtmIfVccTmTxQThreshTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 452)
)
if mibBuilder.loadTexts:
    atmIfVccTmTxQThreshTable.setStatus("mandatory")
_AtmIfVccTmTxQThreshEntry_Object = MibTableRow
atmIfVccTmTxQThreshEntry = _AtmIfVccTmTxQThreshEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 452, 1)
)
atmIfVccTmTxQThreshEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTmTxQThreshIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccTmTxQThreshEntry.setStatus("mandatory")


class _AtmIfVccTmTxQThreshIndex_Type(Integer32):
    """Custom type atmIfVccTmTxQThreshIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_AtmIfVccTmTxQThreshIndex_Type.__name__ = "Integer32"
_AtmIfVccTmTxQThreshIndex_Object = MibTableColumn
atmIfVccTmTxQThreshIndex = _AtmIfVccTmTxQThreshIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 452, 1, 1),
    _AtmIfVccTmTxQThreshIndex_Type()
)
atmIfVccTmTxQThreshIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccTmTxQThreshIndex.setStatus("mandatory")


class _AtmIfVccTmTxQThreshValue_Type(Unsigned32):
    """Custom type atmIfVccTmTxQThreshValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_AtmIfVccTmTxQThreshValue_Type.__name__ = "Unsigned32"
_AtmIfVccTmTxQThreshValue_Object = MibTableColumn
atmIfVccTmTxQThreshValue = _AtmIfVccTmTxQThreshValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 452, 1, 2),
    _AtmIfVccTmTxQThreshValue_Type()
)
atmIfVccTmTxQThreshValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmTxQThreshValue.setStatus("mandatory")
_AtmIfVccTmRxTdpTable_Object = MibTable
atmIfVccTmRxTdpTable = _AtmIfVccTmRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 453)
)
if mibBuilder.loadTexts:
    atmIfVccTmRxTdpTable.setStatus("mandatory")
_AtmIfVccTmRxTdpEntry_Object = MibTableRow
atmIfVccTmRxTdpEntry = _AtmIfVccTmRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 453, 1)
)
atmIfVccTmRxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTmRxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccTmRxTdpEntry.setStatus("mandatory")


class _AtmIfVccTmRxTdpIndex_Type(Integer32):
    """Custom type atmIfVccTmRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_AtmIfVccTmRxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVccTmRxTdpIndex_Object = MibTableColumn
atmIfVccTmRxTdpIndex = _AtmIfVccTmRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 453, 1, 1),
    _AtmIfVccTmRxTdpIndex_Type()
)
atmIfVccTmRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccTmRxTdpIndex.setStatus("mandatory")


class _AtmIfVccTmRxTdpValue_Type(Unsigned32):
    """Custom type atmIfVccTmRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVccTmRxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVccTmRxTdpValue_Object = MibTableColumn
atmIfVccTmRxTdpValue = _AtmIfVccTmRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 453, 1, 2),
    _AtmIfVccTmRxTdpValue_Type()
)
atmIfVccTmRxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmRxTdpValue.setStatus("mandatory")
_AtmIfVccTmTqpTable_Object = MibTable
atmIfVccTmTqpTable = _AtmIfVccTmTqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 454)
)
if mibBuilder.loadTexts:
    atmIfVccTmTqpTable.setStatus("mandatory")
_AtmIfVccTmTqpEntry_Object = MibTableRow
atmIfVccTmTqpEntry = _AtmIfVccTmTqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 454, 1)
)
atmIfVccTmTqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTmTqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccTmTqpEntry.setStatus("mandatory")


class _AtmIfVccTmTqpIndex_Type(Integer32):
    """Custom type atmIfVccTmTqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVccTmTqpIndex_Type.__name__ = "Integer32"
_AtmIfVccTmTqpIndex_Object = MibTableColumn
atmIfVccTmTqpIndex = _AtmIfVccTmTqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 454, 1, 1),
    _AtmIfVccTmTqpIndex_Type()
)
atmIfVccTmTqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccTmTqpIndex.setStatus("mandatory")


class _AtmIfVccTmTqpValue_Type(Unsigned32):
    """Custom type atmIfVccTmTqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVccTmTqpValue_Type.__name__ = "Unsigned32"
_AtmIfVccTmTqpValue_Object = MibTableColumn
atmIfVccTmTqpValue = _AtmIfVccTmTqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 454, 1, 2),
    _AtmIfVccTmTqpValue_Type()
)
atmIfVccTmTqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmTqpValue.setStatus("mandatory")
_AtmIfVccTmRqpTable_Object = MibTable
atmIfVccTmRqpTable = _AtmIfVccTmRqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 455)
)
if mibBuilder.loadTexts:
    atmIfVccTmRqpTable.setStatus("mandatory")
_AtmIfVccTmRqpEntry_Object = MibTableRow
atmIfVccTmRqpEntry = _AtmIfVccTmRqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 455, 1)
)
atmIfVccTmRqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTmRqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccTmRqpEntry.setStatus("mandatory")


class _AtmIfVccTmRqpIndex_Type(Integer32):
    """Custom type atmIfVccTmRqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVccTmRqpIndex_Type.__name__ = "Integer32"
_AtmIfVccTmRqpIndex_Object = MibTableColumn
atmIfVccTmRqpIndex = _AtmIfVccTmRqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 455, 1, 1),
    _AtmIfVccTmRqpIndex_Type()
)
atmIfVccTmRqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccTmRqpIndex.setStatus("mandatory")


class _AtmIfVccTmRqpValue_Type(Unsigned32):
    """Custom type atmIfVccTmRqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVccTmRqpValue_Type.__name__ = "Unsigned32"
_AtmIfVccTmRqpValue_Object = MibTableColumn
atmIfVccTmRqpValue = _AtmIfVccTmRqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 7, 455, 1, 2),
    _AtmIfVccTmRqpValue_Type()
)
atmIfVccTmRqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTmRqpValue.setStatus("mandatory")
_AtmIfVccStateTable_Object = MibTable
atmIfVccStateTable = _AtmIfVccStateTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 100)
)
if mibBuilder.loadTexts:
    atmIfVccStateTable.setStatus("mandatory")
_AtmIfVccStateEntry_Object = MibTableRow
atmIfVccStateEntry = _AtmIfVccStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 100, 1)
)
atmIfVccStateEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccStateEntry.setStatus("mandatory")


class _AtmIfVccAdminState_Type(Integer32):
    """Custom type atmIfVccAdminState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("locked", 0),
          ("shuttingDown", 2),
          ("unlocked", 1))
    )


_AtmIfVccAdminState_Type.__name__ = "Integer32"
_AtmIfVccAdminState_Object = MibTableColumn
atmIfVccAdminState = _AtmIfVccAdminState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 100, 1, 1),
    _AtmIfVccAdminState_Type()
)
atmIfVccAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccAdminState.setStatus("mandatory")


class _AtmIfVccOperationalState_Type(Integer32):
    """Custom type atmIfVccOperationalState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_AtmIfVccOperationalState_Type.__name__ = "Integer32"
_AtmIfVccOperationalState_Object = MibTableColumn
atmIfVccOperationalState = _AtmIfVccOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 100, 1, 2),
    _AtmIfVccOperationalState_Type()
)
atmIfVccOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccOperationalState.setStatus("mandatory")


class _AtmIfVccUsageState_Type(Integer32):
    """Custom type atmIfVccUsageState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("busy", 2),
          ("idle", 0))
    )


_AtmIfVccUsageState_Type.__name__ = "Integer32"
_AtmIfVccUsageState_Object = MibTableColumn
atmIfVccUsageState = _AtmIfVccUsageState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 100, 1, 3),
    _AtmIfVccUsageState_Type()
)
atmIfVccUsageState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccUsageState.setStatus("mandatory")
_AtmIfVccOperTable_Object = MibTable
atmIfVccOperTable = _AtmIfVccOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 110)
)
if mibBuilder.loadTexts:
    atmIfVccOperTable.setStatus("mandatory")
_AtmIfVccOperEntry_Object = MibTableRow
atmIfVccOperEntry = _AtmIfVccOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 110, 1)
)
atmIfVccOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccOperEntry.setStatus("mandatory")


class _AtmIfVccConnectionPointType_Type(Integer32):
    """Custom type atmIfVccConnectionPointType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("connectingPoint", 2),
          ("connectionEndPoint", 0),
          ("segmentEndPoint", 1),
          ("unknown", 3))
    )


_AtmIfVccConnectionPointType_Type.__name__ = "Integer32"
_AtmIfVccConnectionPointType_Object = MibTableColumn
atmIfVccConnectionPointType = _AtmIfVccConnectionPointType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 110, 1, 10),
    _AtmIfVccConnectionPointType_Type()
)
atmIfVccConnectionPointType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccConnectionPointType.setStatus("mandatory")
_AtmIfVccConnInfoTable_Object = MibTable
atmIfVccConnInfoTable = _AtmIfVccConnInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 115)
)
if mibBuilder.loadTexts:
    atmIfVccConnInfoTable.setStatus("mandatory")
_AtmIfVccConnInfoEntry_Object = MibTableRow
atmIfVccConnInfoEntry = _AtmIfVccConnInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 115, 1)
)
atmIfVccConnInfoEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccConnInfoEntry.setStatus("mandatory")


class _AtmIfVccDistributionType_Type(Integer32):
    """Custom type atmIfVccDistributionType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("pointToMultipoint", 1),
          ("pointToPoint", 0))
    )


_AtmIfVccDistributionType_Type.__name__ = "Integer32"
_AtmIfVccDistributionType_Object = MibTableColumn
atmIfVccDistributionType = _AtmIfVccDistributionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 115, 1, 11),
    _AtmIfVccDistributionType_Type()
)
atmIfVccDistributionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccDistributionType.setStatus("mandatory")


class _AtmIfVccNumLeaves_Type(Gauge32):
    """Custom type atmIfVccNumLeaves based on Gauge32"""
    defaultValue = 0

    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVccNumLeaves_Type.__name__ = "Gauge32"
_AtmIfVccNumLeaves_Object = MibTableColumn
atmIfVccNumLeaves = _AtmIfVccNumLeaves_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 115, 1, 12),
    _AtmIfVccNumLeaves_Type()
)
atmIfVccNumLeaves.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccNumLeaves.setStatus("mandatory")


class _AtmIfVccCallDirection_Type(Integer32):
    """Custom type atmIfVccCallDirection based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("fromLink", 0),
          ("notApplicable", 2),
          ("toLink", 1))
    )


_AtmIfVccCallDirection_Type.__name__ = "Integer32"
_AtmIfVccCallDirection_Object = MibTableColumn
atmIfVccCallDirection = _AtmIfVccCallDirection_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 115, 1, 13),
    _AtmIfVccCallDirection_Type()
)
atmIfVccCallDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccCallDirection.setStatus("mandatory")
_AtmIfVccStatusTable_Object = MibTable
atmIfVccStatusTable = _AtmIfVccStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 120)
)
if mibBuilder.loadTexts:
    atmIfVccStatusTable.setStatus("mandatory")
_AtmIfVccStatusEntry_Object = MibTableRow
atmIfVccStatusEntry = _AtmIfVccStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 120, 1)
)
atmIfVccStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccStatusEntry.setStatus("mandatory")


class _AtmIfVccOperStatus_Type(Integer32):
    """Custom type atmIfVccOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("end2endDown", 2),
          ("end2endUp", 1),
          ("localDown", 4),
          ("localUpEnd2endUnknown", 3),
          ("unknown", 0))
    )


_AtmIfVccOperStatus_Type.__name__ = "Integer32"
_AtmIfVccOperStatus_Object = MibTableColumn
atmIfVccOperStatus = _AtmIfVccOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 120, 1, 20),
    _AtmIfVccOperStatus_Type()
)
atmIfVccOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccOperStatus.setStatus("mandatory")


class _AtmIfVccLocalFailureCause_Type(Integer32):
    """Custom type atmIfVccLocalFailureCause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("appNotRegistered", 4),
          ("bwReduced", 6),
          ("disabledByApp", 5),
          ("localBwLoss", 1),
          ("noFailure", 0),
          ("notAdmitted", 3),
          ("portDown", 2),
          ("vpDown", 7))
    )


_AtmIfVccLocalFailureCause_Type.__name__ = "Integer32"
_AtmIfVccLocalFailureCause_Object = MibTableColumn
atmIfVccLocalFailureCause = _AtmIfVccLocalFailureCause_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 120, 1, 25),
    _AtmIfVccLocalFailureCause_Type()
)
atmIfVccLocalFailureCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccLocalFailureCause.setStatus("mandatory")


class _AtmIfVccTroubled_Type(Integer32):
    """Custom type atmIfVccTroubled based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVccTroubled_Type.__name__ = "Integer32"
_AtmIfVccTroubled_Object = MibTableColumn
atmIfVccTroubled = _AtmIfVccTroubled_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 120, 1, 28),
    _AtmIfVccTroubled_Type()
)
atmIfVccTroubled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTroubled.setStatus("mandatory")


class _AtmIfVccSegLinkSideLoopbackState_Type(Integer32):
    """Custom type atmIfVccSegLinkSideLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVccSegLinkSideLoopbackState_Type.__name__ = "Integer32"
_AtmIfVccSegLinkSideLoopbackState_Object = MibTableColumn
atmIfVccSegLinkSideLoopbackState = _AtmIfVccSegLinkSideLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 120, 1, 30),
    _AtmIfVccSegLinkSideLoopbackState_Type()
)
atmIfVccSegLinkSideLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccSegLinkSideLoopbackState.setStatus("mandatory")


class _AtmIfVccSegSwitchSideLoopbackState_Type(Integer32):
    """Custom type atmIfVccSegSwitchSideLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVccSegSwitchSideLoopbackState_Type.__name__ = "Integer32"
_AtmIfVccSegSwitchSideLoopbackState_Object = MibTableColumn
atmIfVccSegSwitchSideLoopbackState = _AtmIfVccSegSwitchSideLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 120, 1, 40),
    _AtmIfVccSegSwitchSideLoopbackState_Type()
)
atmIfVccSegSwitchSideLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccSegSwitchSideLoopbackState.setStatus("mandatory")


class _AtmIfVccEndToEndLoopbackState_Type(Integer32):
    """Custom type atmIfVccEndToEndLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVccEndToEndLoopbackState_Type.__name__ = "Integer32"
_AtmIfVccEndToEndLoopbackState_Object = MibTableColumn
atmIfVccEndToEndLoopbackState = _AtmIfVccEndToEndLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 120, 1, 50),
    _AtmIfVccEndToEndLoopbackState_Type()
)
atmIfVccEndToEndLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccEndToEndLoopbackState.setStatus("mandatory")


class _AtmIfVccRxOamCellCongestionState_Type(Integer32):
    """Custom type atmIfVccRxOamCellCongestionState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVccRxOamCellCongestionState_Type.__name__ = "Integer32"
_AtmIfVccRxOamCellCongestionState_Object = MibTableColumn
atmIfVccRxOamCellCongestionState = _AtmIfVccRxOamCellCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 120, 1, 55),
    _AtmIfVccRxOamCellCongestionState_Type()
)
atmIfVccRxOamCellCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccRxOamCellCongestionState.setStatus("mandatory")


class _AtmIfVccAisState_Type(Integer32):
    """Custom type atmIfVccAisState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVccAisState_Type.__name__ = "Integer32"
_AtmIfVccAisState_Object = MibTableColumn
atmIfVccAisState = _AtmIfVccAisState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 120, 1, 60),
    _AtmIfVccAisState_Type()
)
atmIfVccAisState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccAisState.setStatus("mandatory")


class _AtmIfVccRdiState_Type(Integer32):
    """Custom type atmIfVccRdiState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVccRdiState_Type.__name__ = "Integer32"
_AtmIfVccRdiState_Object = MibTableColumn
atmIfVccRdiState = _AtmIfVccRdiState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 120, 1, 70),
    _AtmIfVccRdiState_Type()
)
atmIfVccRdiState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccRdiState.setStatus("mandatory")
_AtmIfVccTrafficTable_Object = MibTable
atmIfVccTrafficTable = _AtmIfVccTrafficTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130)
)
if mibBuilder.loadTexts:
    atmIfVccTrafficTable.setStatus("mandatory")
_AtmIfVccTrafficEntry_Object = MibTableRow
atmIfVccTrafficEntry = _AtmIfVccTrafficEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1)
)
atmIfVccTrafficEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccTrafficEntry.setStatus("mandatory")


class _AtmIfVccTxTrafficDescType_Type(Integer32):
    """Custom type atmIfVccTxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8))
    )


_AtmIfVccTxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVccTxTrafficDescType_Object = MibTableColumn
atmIfVccTxTrafficDescType = _AtmIfVccTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1, 10),
    _AtmIfVccTxTrafficDescType_Type()
)
atmIfVccTxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTxTrafficDescType.setStatus("obsolete")


class _AtmIfVccTxQosClass_Type(Integer32):
    """Custom type atmIfVccTxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_AtmIfVccTxQosClass_Type.__name__ = "Integer32"
_AtmIfVccTxQosClass_Object = MibTableColumn
atmIfVccTxQosClass = _AtmIfVccTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1, 30),
    _AtmIfVccTxQosClass_Type()
)
atmIfVccTxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTxQosClass.setStatus("obsolete")


class _AtmIfVccFwdQosClass_Type(Integer32):
    """Custom type atmIfVccFwdQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_AtmIfVccFwdQosClass_Type.__name__ = "Integer32"
_AtmIfVccFwdQosClass_Object = MibTableColumn
atmIfVccFwdQosClass = _AtmIfVccFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1, 31),
    _AtmIfVccFwdQosClass_Type()
)
atmIfVccFwdQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccFwdQosClass.setStatus("obsolete")


class _AtmIfVccTxQueueLength_Type(Integer32):
    """Custom type atmIfVccTxQueueLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_AtmIfVccTxQueueLength_Type.__name__ = "Integer32"
_AtmIfVccTxQueueLength_Object = MibTableColumn
atmIfVccTxQueueLength = _AtmIfVccTxQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1, 32),
    _AtmIfVccTxQueueLength_Type()
)
atmIfVccTxQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTxQueueLength.setStatus("obsolete")


class _AtmIfVccTxQueueCongestionState_Type(Integer32):
    """Custom type atmIfVccTxQueueCongestionState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_AtmIfVccTxQueueCongestionState_Type.__name__ = "Integer32"
_AtmIfVccTxQueueCongestionState_Object = MibTableColumn
atmIfVccTxQueueCongestionState = _AtmIfVccTxQueueCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1, 33),
    _AtmIfVccTxQueueCongestionState_Type()
)
atmIfVccTxQueueCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTxQueueCongestionState.setStatus("obsolete")


class _AtmIfVccHoldingPriority_Type(Integer32):
    """Custom type atmIfVccHoldingPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 6))
    )


_AtmIfVccHoldingPriority_Type.__name__ = "Integer32"
_AtmIfVccHoldingPriority_Object = MibTableColumn
atmIfVccHoldingPriority = _AtmIfVccHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1, 35),
    _AtmIfVccHoldingPriority_Type()
)
atmIfVccHoldingPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccHoldingPriority.setStatus("obsolete")


class _AtmIfVccRxTrafficDescType_Type(Integer32):
    """Custom type atmIfVccRxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8))
    )


_AtmIfVccRxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVccRxTrafficDescType_Object = MibTableColumn
atmIfVccRxTrafficDescType = _AtmIfVccRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1, 40),
    _AtmIfVccRxTrafficDescType_Type()
)
atmIfVccRxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccRxTrafficDescType.setStatus("obsolete")


class _AtmIfVccRxQosClass_Type(Integer32):
    """Custom type atmIfVccRxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_AtmIfVccRxQosClass_Type.__name__ = "Integer32"
_AtmIfVccRxQosClass_Object = MibTableColumn
atmIfVccRxQosClass = _AtmIfVccRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1, 60),
    _AtmIfVccRxQosClass_Type()
)
atmIfVccRxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccRxQosClass.setStatus("obsolete")


class _AtmIfVccBwdQosClass_Type(Integer32):
    """Custom type atmIfVccBwdQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_AtmIfVccBwdQosClass_Type.__name__ = "Integer32"
_AtmIfVccBwdQosClass_Object = MibTableColumn
atmIfVccBwdQosClass = _AtmIfVccBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1, 61),
    _AtmIfVccBwdQosClass_Type()
)
atmIfVccBwdQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccBwdQosClass.setStatus("obsolete")


class _AtmIfVccAtmServiceCategory_Type(Integer32):
    """Custom type atmIfVccAtmServiceCategory based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("constantBitRate", 1),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_AtmIfVccAtmServiceCategory_Type.__name__ = "Integer32"
_AtmIfVccAtmServiceCategory_Object = MibTableColumn
atmIfVccAtmServiceCategory = _AtmIfVccAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1, 62),
    _AtmIfVccAtmServiceCategory_Type()
)
atmIfVccAtmServiceCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccAtmServiceCategory.setStatus("obsolete")


class _AtmIfVccTrafficShaping_Type(Integer32):
    """Custom type atmIfVccTrafficShaping based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("notApplicable", 4))
    )


_AtmIfVccTrafficShaping_Type.__name__ = "Integer32"
_AtmIfVccTrafficShaping_Object = MibTableColumn
atmIfVccTrafficShaping = _AtmIfVccTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1, 70),
    _AtmIfVccTrafficShaping_Type()
)
atmIfVccTrafficShaping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTrafficShaping.setStatus("obsolete")


class _AtmIfVccBearerClassBbc_Type(Integer32):
    """Custom type atmIfVccBearerClassBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              30)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("notApplicable", 30),
          ("vp", 24),
          ("x", 16))
    )


_AtmIfVccBearerClassBbc_Type.__name__ = "Integer32"
_AtmIfVccBearerClassBbc_Object = MibTableColumn
atmIfVccBearerClassBbc = _AtmIfVccBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1, 71),
    _AtmIfVccBearerClassBbc_Type()
)
atmIfVccBearerClassBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccBearerClassBbc.setStatus("obsolete")


class _AtmIfVccTransferCapabilityBbc_Type(Integer32):
    """Custom type atmIfVccTransferCapabilityBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_AtmIfVccTransferCapabilityBbc_Type.__name__ = "Integer32"
_AtmIfVccTransferCapabilityBbc_Object = MibTableColumn
atmIfVccTransferCapabilityBbc = _AtmIfVccTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1, 72),
    _AtmIfVccTransferCapabilityBbc_Type()
)
atmIfVccTransferCapabilityBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTransferCapabilityBbc.setStatus("obsolete")


class _AtmIfVccClippingBbc_Type(Integer32):
    """Custom type atmIfVccClippingBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("notApplicable", 14),
          ("yes", 1))
    )


_AtmIfVccClippingBbc_Type.__name__ = "Integer32"
_AtmIfVccClippingBbc_Object = MibTableColumn
atmIfVccClippingBbc = _AtmIfVccClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1, 74),
    _AtmIfVccClippingBbc_Type()
)
atmIfVccClippingBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccClippingBbc.setStatus("obsolete")


class _AtmIfVccUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfVccUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("notApplicable", 4),
          ("perVc", 0))
    )


_AtmIfVccUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfVccUnshapedTransmitQueueing_Object = MibTableColumn
atmIfVccUnshapedTransmitQueueing = _AtmIfVccUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1, 75),
    _AtmIfVccUnshapedTransmitQueueing_Type()
)
atmIfVccUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccUnshapedTransmitQueueing.setStatus("obsolete")


class _AtmIfVccBestEffort_Type(Integer32):
    """Custom type atmIfVccBestEffort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 0),
          ("notApplicable", 14),
          ("notIndicated", 1))
    )


_AtmIfVccBestEffort_Type.__name__ = "Integer32"
_AtmIfVccBestEffort_Object = MibTableColumn
atmIfVccBestEffort = _AtmIfVccBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1, 76),
    _AtmIfVccBestEffort_Type()
)
atmIfVccBestEffort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccBestEffort.setStatus("obsolete")


class _AtmIfVccUsageParameterControl_Type(Integer32):
    """Custom type atmIfVccUsageParameterControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("notApplicable", 3))
    )


_AtmIfVccUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfVccUsageParameterControl_Object = MibTableColumn
atmIfVccUsageParameterControl = _AtmIfVccUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1, 80),
    _AtmIfVccUsageParameterControl_Type()
)
atmIfVccUsageParameterControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccUsageParameterControl.setStatus("obsolete")


class _AtmIfVccTxFrameDiscard_Type(OctetString):
    """Custom type atmIfVccTxFrameDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVccTxFrameDiscard_Type.__name__ = "OctetString"
_AtmIfVccTxFrameDiscard_Object = MibTableColumn
atmIfVccTxFrameDiscard = _AtmIfVccTxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1, 85),
    _AtmIfVccTxFrameDiscard_Type()
)
atmIfVccTxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTxFrameDiscard.setStatus("obsolete")


class _AtmIfVccRxFrameDiscard_Type(OctetString):
    """Custom type atmIfVccRxFrameDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVccRxFrameDiscard_Type.__name__ = "OctetString"
_AtmIfVccRxFrameDiscard_Object = MibTableColumn
atmIfVccRxFrameDiscard = _AtmIfVccRxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1, 86),
    _AtmIfVccRxFrameDiscard_Type()
)
atmIfVccRxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccRxFrameDiscard.setStatus("obsolete")


class _AtmIfVccBandwidthElastic_Type(Integer32):
    """Custom type atmIfVccBandwidthElastic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVccBandwidthElastic_Type.__name__ = "Integer32"
_AtmIfVccBandwidthElastic_Object = MibTableColumn
atmIfVccBandwidthElastic = _AtmIfVccBandwidthElastic_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1, 90),
    _AtmIfVccBandwidthElastic_Type()
)
atmIfVccBandwidthElastic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccBandwidthElastic.setStatus("obsolete")


class _AtmIfVccBandwidthReduction_Type(Integer32):
    """Custom type atmIfVccBandwidthReduction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVccBandwidthReduction_Type.__name__ = "Integer32"
_AtmIfVccBandwidthReduction_Object = MibTableColumn
atmIfVccBandwidthReduction = _AtmIfVccBandwidthReduction_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 130, 1, 100),
    _AtmIfVccBandwidthReduction_Type()
)
atmIfVccBandwidthReduction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccBandwidthReduction.setStatus("obsolete")
_AtmIfVccStatsTable_Object = MibTable
atmIfVccStatsTable = _AtmIfVccStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140)
)
if mibBuilder.loadTexts:
    atmIfVccStatsTable.setStatus("mandatory")
_AtmIfVccStatsEntry_Object = MibTableRow
atmIfVccStatsEntry = _AtmIfVccStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1)
)
atmIfVccStatsEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccStatsEntry.setStatus("mandatory")
_AtmIfVccStatsTxCell_Type = PassportCounter64
_AtmIfVccStatsTxCell_Object = MibTableColumn
atmIfVccStatsTxCell = _AtmIfVccStatsTxCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 10),
    _AtmIfVccStatsTxCell_Type()
)
atmIfVccStatsTxCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccStatsTxCell.setStatus("mandatory")
_AtmIfVccStatsTxCellClp_Type = PassportCounter64
_AtmIfVccStatsTxCellClp_Object = MibTableColumn
atmIfVccStatsTxCellClp = _AtmIfVccStatsTxCellClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 20),
    _AtmIfVccStatsTxCellClp_Type()
)
atmIfVccStatsTxCellClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccStatsTxCellClp.setStatus("mandatory")
_AtmIfVccTxDiscard_Type = PassportCounter64
_AtmIfVccTxDiscard_Object = MibTableColumn
atmIfVccTxDiscard = _AtmIfVccTxDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 30),
    _AtmIfVccTxDiscard_Type()
)
atmIfVccTxDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTxDiscard.setStatus("obsolete")
_AtmIfVccTxDiscardClp_Type = PassportCounter64
_AtmIfVccTxDiscardClp_Object = MibTableColumn
atmIfVccTxDiscardClp = _AtmIfVccTxDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 40),
    _AtmIfVccTxDiscardClp_Type()
)
atmIfVccTxDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTxDiscardClp.setStatus("obsolete")
_AtmIfVccStatsTxCellDiscard_Type = PassportCounter64
_AtmIfVccStatsTxCellDiscard_Object = MibTableColumn
atmIfVccStatsTxCellDiscard = _AtmIfVccStatsTxCellDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 42),
    _AtmIfVccStatsTxCellDiscard_Type()
)
atmIfVccStatsTxCellDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccStatsTxCellDiscard.setStatus("mandatory")
_AtmIfVccStatsTxCellDiscardClp_Type = PassportCounter64
_AtmIfVccStatsTxCellDiscardClp_Object = MibTableColumn
atmIfVccStatsTxCellDiscardClp = _AtmIfVccStatsTxCellDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 43),
    _AtmIfVccStatsTxCellDiscardClp_Type()
)
atmIfVccStatsTxCellDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccStatsTxCellDiscardClp.setStatus("mandatory")
_AtmIfVccStatsTxFrameDiscard_Type = PassportCounter64
_AtmIfVccStatsTxFrameDiscard_Object = MibTableColumn
atmIfVccStatsTxFrameDiscard = _AtmIfVccStatsTxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 46),
    _AtmIfVccStatsTxFrameDiscard_Type()
)
atmIfVccStatsTxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccStatsTxFrameDiscard.setStatus("mandatory")
_AtmIfVccStatsTxFrameDiscardClp_Type = PassportCounter64
_AtmIfVccStatsTxFrameDiscardClp_Object = MibTableColumn
atmIfVccStatsTxFrameDiscardClp = _AtmIfVccStatsTxFrameDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 47),
    _AtmIfVccStatsTxFrameDiscardClp_Type()
)
atmIfVccStatsTxFrameDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccStatsTxFrameDiscardClp.setStatus("mandatory")


class _AtmIfVccTxUtilization_Type(Gauge32):
    """Custom type atmIfVccTxUtilization based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 200),
        ValueRangeConstraint(255, 255),
    )


_AtmIfVccTxUtilization_Type.__name__ = "Gauge32"
_AtmIfVccTxUtilization_Object = MibTableColumn
atmIfVccTxUtilization = _AtmIfVccTxUtilization_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 48),
    _AtmIfVccTxUtilization_Type()
)
atmIfVccTxUtilization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTxUtilization.setStatus("mandatory")
_AtmIfVccStatsRxCell_Type = PassportCounter64
_AtmIfVccStatsRxCell_Object = MibTableColumn
atmIfVccStatsRxCell = _AtmIfVccStatsRxCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 50),
    _AtmIfVccStatsRxCell_Type()
)
atmIfVccStatsRxCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccStatsRxCell.setStatus("mandatory")
_AtmIfVccStatsRxCellClp_Type = PassportCounter64
_AtmIfVccStatsRxCellClp_Object = MibTableColumn
atmIfVccStatsRxCellClp = _AtmIfVccStatsRxCellClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 60),
    _AtmIfVccStatsRxCellClp_Type()
)
atmIfVccStatsRxCellClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccStatsRxCellClp.setStatus("mandatory")
_AtmIfVccRxDiscard_Type = PassportCounter64
_AtmIfVccRxDiscard_Object = MibTableColumn
atmIfVccRxDiscard = _AtmIfVccRxDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 70),
    _AtmIfVccRxDiscard_Type()
)
atmIfVccRxDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccRxDiscard.setStatus("obsolete")
_AtmIfVccRxDiscardClp_Type = PassportCounter64
_AtmIfVccRxDiscardClp_Object = MibTableColumn
atmIfVccRxDiscardClp = _AtmIfVccRxDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 80),
    _AtmIfVccRxDiscardClp_Type()
)
atmIfVccRxDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccRxDiscardClp.setStatus("obsolete")
_AtmIfVccStatsRxCellDiscard_Type = PassportCounter64
_AtmIfVccStatsRxCellDiscard_Object = MibTableColumn
atmIfVccStatsRxCellDiscard = _AtmIfVccStatsRxCellDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 82),
    _AtmIfVccStatsRxCellDiscard_Type()
)
atmIfVccStatsRxCellDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccStatsRxCellDiscard.setStatus("mandatory")
_AtmIfVccStatsRxCellDiscardClp_Type = PassportCounter64
_AtmIfVccStatsRxCellDiscardClp_Object = MibTableColumn
atmIfVccStatsRxCellDiscardClp = _AtmIfVccStatsRxCellDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 83),
    _AtmIfVccStatsRxCellDiscardClp_Type()
)
atmIfVccStatsRxCellDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccStatsRxCellDiscardClp.setStatus("mandatory")
_AtmIfVccStatsRxFrameDiscard_Type = PassportCounter64
_AtmIfVccStatsRxFrameDiscard_Object = MibTableColumn
atmIfVccStatsRxFrameDiscard = _AtmIfVccStatsRxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 86),
    _AtmIfVccStatsRxFrameDiscard_Type()
)
atmIfVccStatsRxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccStatsRxFrameDiscard.setStatus("mandatory")
_AtmIfVccStatsRxFrameDiscardClp_Type = PassportCounter64
_AtmIfVccStatsRxFrameDiscardClp_Object = MibTableColumn
atmIfVccStatsRxFrameDiscardClp = _AtmIfVccStatsRxFrameDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 88),
    _AtmIfVccStatsRxFrameDiscardClp_Type()
)
atmIfVccStatsRxFrameDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccStatsRxFrameDiscardClp.setStatus("mandatory")


class _AtmIfVccRxUtilization_Type(Gauge32):
    """Custom type atmIfVccRxUtilization based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 200),
        ValueRangeConstraint(255, 255),
    )


_AtmIfVccRxUtilization_Type.__name__ = "Gauge32"
_AtmIfVccRxUtilization_Object = MibTableColumn
atmIfVccRxUtilization = _AtmIfVccRxUtilization_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 89),
    _AtmIfVccRxUtilization_Type()
)
atmIfVccRxUtilization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccRxUtilization.setStatus("mandatory")
_AtmIfVccStatsRxUpcViolationOnEnforcer1_Type = PassportCounter64
_AtmIfVccStatsRxUpcViolationOnEnforcer1_Object = MibTableColumn
atmIfVccStatsRxUpcViolationOnEnforcer1 = _AtmIfVccStatsRxUpcViolationOnEnforcer1_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 90),
    _AtmIfVccStatsRxUpcViolationOnEnforcer1_Type()
)
atmIfVccStatsRxUpcViolationOnEnforcer1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccStatsRxUpcViolationOnEnforcer1.setStatus("mandatory")
_AtmIfVccStatsRxUpcViolationOnEnforcer2_Type = PassportCounter64
_AtmIfVccStatsRxUpcViolationOnEnforcer2_Object = MibTableColumn
atmIfVccStatsRxUpcViolationOnEnforcer2 = _AtmIfVccStatsRxUpcViolationOnEnforcer2_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 92),
    _AtmIfVccStatsRxUpcViolationOnEnforcer2_Type()
)
atmIfVccStatsRxUpcViolationOnEnforcer2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccStatsRxUpcViolationOnEnforcer2.setStatus("mandatory")
_AtmIfVccStatsRxAal5FrameError_Type = PassportCounter64
_AtmIfVccStatsRxAal5FrameError_Object = MibTableColumn
atmIfVccStatsRxAal5FrameError = _AtmIfVccStatsRxAal5FrameError_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 100),
    _AtmIfVccStatsRxAal5FrameError_Type()
)
atmIfVccStatsRxAal5FrameError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccStatsRxAal5FrameError.setStatus("mandatory")
_AtmIfVccStatsRxAal5FrameAbort_Type = PassportCounter64
_AtmIfVccStatsRxAal5FrameAbort_Object = MibTableColumn
atmIfVccStatsRxAal5FrameAbort = _AtmIfVccStatsRxAal5FrameAbort_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 140, 1, 102),
    _AtmIfVccStatsRxAal5FrameAbort_Type()
)
atmIfVccStatsRxAal5FrameAbort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccStatsRxAal5FrameAbort.setStatus("mandatory")
_AtmIfVccTxTdpTable_Object = MibTable
atmIfVccTxTdpTable = _AtmIfVccTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 294)
)
if mibBuilder.loadTexts:
    atmIfVccTxTdpTable.setStatus("obsolete")
_AtmIfVccTxTdpEntry_Object = MibTableRow
atmIfVccTxTdpEntry = _AtmIfVccTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 294, 1)
)
atmIfVccTxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccTxTdpEntry.setStatus("obsolete")


class _AtmIfVccTxTdpIndex_Type(Integer32):
    """Custom type atmIfVccTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVccTxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVccTxTdpIndex_Object = MibTableColumn
atmIfVccTxTdpIndex = _AtmIfVccTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 294, 1, 1),
    _AtmIfVccTxTdpIndex_Type()
)
atmIfVccTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccTxTdpIndex.setStatus("obsolete")


class _AtmIfVccTxTdpValue_Type(Unsigned32):
    """Custom type atmIfVccTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVccTxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVccTxTdpValue_Object = MibTableColumn
atmIfVccTxTdpValue = _AtmIfVccTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 294, 1, 2),
    _AtmIfVccTxTdpValue_Type()
)
atmIfVccTxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTxTdpValue.setStatus("obsolete")
_AtmIfVccRxTdpTable_Object = MibTable
atmIfVccRxTdpTable = _AtmIfVccRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 295)
)
if mibBuilder.loadTexts:
    atmIfVccRxTdpTable.setStatus("obsolete")
_AtmIfVccRxTdpEntry_Object = MibTableRow
atmIfVccRxTdpEntry = _AtmIfVccRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 295, 1)
)
atmIfVccRxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccRxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccRxTdpEntry.setStatus("obsolete")


class _AtmIfVccRxTdpIndex_Type(Integer32):
    """Custom type atmIfVccRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_AtmIfVccRxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVccRxTdpIndex_Object = MibTableColumn
atmIfVccRxTdpIndex = _AtmIfVccRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 295, 1, 1),
    _AtmIfVccRxTdpIndex_Type()
)
atmIfVccRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccRxTdpIndex.setStatus("obsolete")


class _AtmIfVccRxTdpValue_Type(Unsigned32):
    """Custom type atmIfVccRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVccRxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVccRxTdpValue_Object = MibTableColumn
atmIfVccRxTdpValue = _AtmIfVccRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 295, 1, 2),
    _AtmIfVccRxTdpValue_Type()
)
atmIfVccRxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccRxTdpValue.setStatus("obsolete")
_AtmIfVccTxQThreshTable_Object = MibTable
atmIfVccTxQThreshTable = _AtmIfVccTxQThreshTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 352)
)
if mibBuilder.loadTexts:
    atmIfVccTxQThreshTable.setStatus("obsolete")
_AtmIfVccTxQThreshEntry_Object = MibTableRow
atmIfVccTxQThreshEntry = _AtmIfVccTxQThreshEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 352, 1)
)
atmIfVccTxQThreshEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccTxQThreshIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccTxQThreshEntry.setStatus("obsolete")


class _AtmIfVccTxQThreshIndex_Type(Integer32):
    """Custom type atmIfVccTxQThreshIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_AtmIfVccTxQThreshIndex_Type.__name__ = "Integer32"
_AtmIfVccTxQThreshIndex_Object = MibTableColumn
atmIfVccTxQThreshIndex = _AtmIfVccTxQThreshIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 352, 1, 1),
    _AtmIfVccTxQThreshIndex_Type()
)
atmIfVccTxQThreshIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccTxQThreshIndex.setStatus("obsolete")


class _AtmIfVccTxQThreshValue_Type(Unsigned32):
    """Custom type atmIfVccTxQThreshValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_AtmIfVccTxQThreshValue_Type.__name__ = "Unsigned32"
_AtmIfVccTxQThreshValue_Object = MibTableColumn
atmIfVccTxQThreshValue = _AtmIfVccTxQThreshValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 352, 1, 2),
    _AtmIfVccTxQThreshValue_Type()
)
atmIfVccTxQThreshValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccTxQThreshValue.setStatus("obsolete")
_AtmIfVccFqpTable_Object = MibTable
atmIfVccFqpTable = _AtmIfVccFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 357)
)
if mibBuilder.loadTexts:
    atmIfVccFqpTable.setStatus("obsolete")
_AtmIfVccFqpEntry_Object = MibTableRow
atmIfVccFqpEntry = _AtmIfVccFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 357, 1)
)
atmIfVccFqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccFqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccFqpEntry.setStatus("obsolete")


class _AtmIfVccFqpIndex_Type(Integer32):
    """Custom type atmIfVccFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVccFqpIndex_Type.__name__ = "Integer32"
_AtmIfVccFqpIndex_Object = MibTableColumn
atmIfVccFqpIndex = _AtmIfVccFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 357, 1, 1),
    _AtmIfVccFqpIndex_Type()
)
atmIfVccFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccFqpIndex.setStatus("obsolete")


class _AtmIfVccFqpValue_Type(Unsigned32):
    """Custom type atmIfVccFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVccFqpValue_Type.__name__ = "Unsigned32"
_AtmIfVccFqpValue_Object = MibTableColumn
atmIfVccFqpValue = _AtmIfVccFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 357, 1, 2),
    _AtmIfVccFqpValue_Type()
)
atmIfVccFqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccFqpValue.setStatus("obsolete")
_AtmIfVccBqpTable_Object = MibTable
atmIfVccBqpTable = _AtmIfVccBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 358)
)
if mibBuilder.loadTexts:
    atmIfVccBqpTable.setStatus("obsolete")
_AtmIfVccBqpEntry_Object = MibTableRow
atmIfVccBqpEntry = _AtmIfVccBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 358, 1)
)
atmIfVccBqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVccBqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVccBqpEntry.setStatus("obsolete")


class _AtmIfVccBqpIndex_Type(Integer32):
    """Custom type atmIfVccBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVccBqpIndex_Type.__name__ = "Integer32"
_AtmIfVccBqpIndex_Object = MibTableColumn
atmIfVccBqpIndex = _AtmIfVccBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 358, 1, 1),
    _AtmIfVccBqpIndex_Type()
)
atmIfVccBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVccBqpIndex.setStatus("obsolete")


class _AtmIfVccBqpValue_Type(Unsigned32):
    """Custom type atmIfVccBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVccBqpValue_Type.__name__ = "Unsigned32"
_AtmIfVccBqpValue_Object = MibTableColumn
atmIfVccBqpValue = _AtmIfVccBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 5, 358, 1, 2),
    _AtmIfVccBqpValue_Type()
)
atmIfVccBqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVccBqpValue.setStatus("obsolete")
_AtmIfNAcct_ObjectIdentity = ObjectIdentity
atmIfNAcct = _AtmIfNAcct_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 8)
)
_AtmIfNAcctRowStatusTable_Object = MibTable
atmIfNAcctRowStatusTable = _AtmIfNAcctRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 8, 1)
)
if mibBuilder.loadTexts:
    atmIfNAcctRowStatusTable.setStatus("mandatory")
_AtmIfNAcctRowStatusEntry_Object = MibTableRow
atmIfNAcctRowStatusEntry = _AtmIfNAcctRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 8, 1, 1)
)
atmIfNAcctRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfNAcctIndex"),
)
if mibBuilder.loadTexts:
    atmIfNAcctRowStatusEntry.setStatus("mandatory")
_AtmIfNAcctRowStatus_Type = RowStatus
_AtmIfNAcctRowStatus_Object = MibTableColumn
atmIfNAcctRowStatus = _AtmIfNAcctRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 8, 1, 1, 1),
    _AtmIfNAcctRowStatus_Type()
)
atmIfNAcctRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfNAcctRowStatus.setStatus("mandatory")
_AtmIfNAcctComponentName_Type = DisplayString
_AtmIfNAcctComponentName_Object = MibTableColumn
atmIfNAcctComponentName = _AtmIfNAcctComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 8, 1, 1, 2),
    _AtmIfNAcctComponentName_Type()
)
atmIfNAcctComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfNAcctComponentName.setStatus("mandatory")
_AtmIfNAcctStorageType_Type = StorageType
_AtmIfNAcctStorageType_Object = MibTableColumn
atmIfNAcctStorageType = _AtmIfNAcctStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 8, 1, 1, 4),
    _AtmIfNAcctStorageType_Type()
)
atmIfNAcctStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfNAcctStorageType.setStatus("mandatory")
_AtmIfNAcctIndex_Type = NonReplicated
_AtmIfNAcctIndex_Object = MibTableColumn
atmIfNAcctIndex = _AtmIfNAcctIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 8, 1, 1, 10),
    _AtmIfNAcctIndex_Type()
)
atmIfNAcctIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfNAcctIndex.setStatus("mandatory")
_AtmIfNAcctProvTable_Object = MibTable
atmIfNAcctProvTable = _AtmIfNAcctProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 8, 10)
)
if mibBuilder.loadTexts:
    atmIfNAcctProvTable.setStatus("mandatory")
_AtmIfNAcctProvEntry_Object = MibTableRow
atmIfNAcctProvEntry = _AtmIfNAcctProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 8, 10, 1)
)
atmIfNAcctProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfNAcctIndex"),
)
if mibBuilder.loadTexts:
    atmIfNAcctProvEntry.setStatus("mandatory")


class _AtmIfNAcctAccountCollection_Type(OctetString):
    """Custom type atmIfNAcctAccountCollection based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfNAcctAccountCollection_Type.__name__ = "OctetString"
_AtmIfNAcctAccountCollection_Object = MibTableColumn
atmIfNAcctAccountCollection = _AtmIfNAcctAccountCollection_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 8, 10, 1, 1),
    _AtmIfNAcctAccountCollection_Type()
)
atmIfNAcctAccountCollection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfNAcctAccountCollection.setStatus("mandatory")


class _AtmIfNAcctAccountConnectionType_Type(Integer32):
    """Custom type atmIfNAcctAccountConnectionType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("intermediate", 1),
          ("origTerm", 0))
    )


_AtmIfNAcctAccountConnectionType_Type.__name__ = "Integer32"
_AtmIfNAcctAccountConnectionType_Object = MibTableColumn
atmIfNAcctAccountConnectionType = _AtmIfNAcctAccountConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 8, 10, 1, 2),
    _AtmIfNAcctAccountConnectionType_Type()
)
atmIfNAcctAccountConnectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfNAcctAccountConnectionType.setStatus("mandatory")


class _AtmIfNAcctAccountClass_Type(Unsigned32):
    """Custom type atmIfNAcctAccountClass based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmIfNAcctAccountClass_Type.__name__ = "Unsigned32"
_AtmIfNAcctAccountClass_Object = MibTableColumn
atmIfNAcctAccountClass = _AtmIfNAcctAccountClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 8, 10, 1, 3),
    _AtmIfNAcctAccountClass_Type()
)
atmIfNAcctAccountClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfNAcctAccountClass.setStatus("mandatory")


class _AtmIfNAcctServiceExchange_Type(Unsigned32):
    """Custom type atmIfNAcctServiceExchange based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmIfNAcctServiceExchange_Type.__name__ = "Unsigned32"
_AtmIfNAcctServiceExchange_Object = MibTableColumn
atmIfNAcctServiceExchange = _AtmIfNAcctServiceExchange_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 8, 10, 1, 4),
    _AtmIfNAcctServiceExchange_Type()
)
atmIfNAcctServiceExchange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfNAcctServiceExchange.setStatus("mandatory")
_AtmIfVpt_ObjectIdentity = ObjectIdentity
atmIfVpt = _AtmIfVpt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9)
)
_AtmIfVptRowStatusTable_Object = MibTable
atmIfVptRowStatusTable = _AtmIfVptRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 1)
)
if mibBuilder.loadTexts:
    atmIfVptRowStatusTable.setStatus("mandatory")
_AtmIfVptRowStatusEntry_Object = MibTableRow
atmIfVptRowStatusEntry = _AtmIfVptRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 1, 1)
)
atmIfVptRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptRowStatusEntry.setStatus("mandatory")
_AtmIfVptRowStatus_Type = RowStatus
_AtmIfVptRowStatus_Object = MibTableColumn
atmIfVptRowStatus = _AtmIfVptRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 1, 1, 1),
    _AtmIfVptRowStatus_Type()
)
atmIfVptRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptRowStatus.setStatus("mandatory")
_AtmIfVptComponentName_Type = DisplayString
_AtmIfVptComponentName_Object = MibTableColumn
atmIfVptComponentName = _AtmIfVptComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 1, 1, 2),
    _AtmIfVptComponentName_Type()
)
atmIfVptComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptComponentName.setStatus("mandatory")
_AtmIfVptStorageType_Type = StorageType
_AtmIfVptStorageType_Object = MibTableColumn
atmIfVptStorageType = _AtmIfVptStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 1, 1, 4),
    _AtmIfVptStorageType_Type()
)
atmIfVptStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptStorageType.setStatus("mandatory")


class _AtmIfVptIndex_Type(Integer32):
    """Custom type atmIfVptIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmIfVptIndex_Type.__name__ = "Integer32"
_AtmIfVptIndex_Object = MibTableColumn
atmIfVptIndex = _AtmIfVptIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 1, 1, 10),
    _AtmIfVptIndex_Type()
)
atmIfVptIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptIndex.setStatus("mandatory")
_AtmIfVptVpd_ObjectIdentity = ObjectIdentity
atmIfVptVpd = _AtmIfVptVpd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2)
)
_AtmIfVptVpdRowStatusTable_Object = MibTable
atmIfVptVpdRowStatusTable = _AtmIfVptVpdRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 1)
)
if mibBuilder.loadTexts:
    atmIfVptVpdRowStatusTable.setStatus("mandatory")
_AtmIfVptVpdRowStatusEntry_Object = MibTableRow
atmIfVptVpdRowStatusEntry = _AtmIfVptVpdRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 1, 1)
)
atmIfVptVpdRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVpdRowStatusEntry.setStatus("mandatory")
_AtmIfVptVpdRowStatus_Type = RowStatus
_AtmIfVptVpdRowStatus_Object = MibTableColumn
atmIfVptVpdRowStatus = _AtmIfVptVpdRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 1, 1, 1),
    _AtmIfVptVpdRowStatus_Type()
)
atmIfVptVpdRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVpdRowStatus.setStatus("mandatory")
_AtmIfVptVpdComponentName_Type = DisplayString
_AtmIfVptVpdComponentName_Object = MibTableColumn
atmIfVptVpdComponentName = _AtmIfVptVpdComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 1, 1, 2),
    _AtmIfVptVpdComponentName_Type()
)
atmIfVptVpdComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVpdComponentName.setStatus("mandatory")
_AtmIfVptVpdStorageType_Type = StorageType
_AtmIfVptVpdStorageType_Object = MibTableColumn
atmIfVptVpdStorageType = _AtmIfVptVpdStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 1, 1, 4),
    _AtmIfVptVpdStorageType_Type()
)
atmIfVptVpdStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVpdStorageType.setStatus("mandatory")
_AtmIfVptVpdIndex_Type = NonReplicated
_AtmIfVptVpdIndex_Object = MibTableColumn
atmIfVptVpdIndex = _AtmIfVptVpdIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 1, 1, 10),
    _AtmIfVptVpdIndex_Type()
)
atmIfVptVpdIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVpdIndex.setStatus("mandatory")
_AtmIfVptVpdTm_ObjectIdentity = ObjectIdentity
atmIfVptVpdTm = _AtmIfVptVpdTm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2)
)
_AtmIfVptVpdTmRowStatusTable_Object = MibTable
atmIfVptVpdTmRowStatusTable = _AtmIfVptVpdTmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 1)
)
if mibBuilder.loadTexts:
    atmIfVptVpdTmRowStatusTable.setStatus("mandatory")
_AtmIfVptVpdTmRowStatusEntry_Object = MibTableRow
atmIfVptVpdTmRowStatusEntry = _AtmIfVptVpdTmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 1, 1)
)
atmIfVptVpdTmRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdTmIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVpdTmRowStatusEntry.setStatus("mandatory")
_AtmIfVptVpdTmRowStatus_Type = RowStatus
_AtmIfVptVpdTmRowStatus_Object = MibTableColumn
atmIfVptVpdTmRowStatus = _AtmIfVptVpdTmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 1, 1, 1),
    _AtmIfVptVpdTmRowStatus_Type()
)
atmIfVptVpdTmRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVpdTmRowStatus.setStatus("mandatory")
_AtmIfVptVpdTmComponentName_Type = DisplayString
_AtmIfVptVpdTmComponentName_Object = MibTableColumn
atmIfVptVpdTmComponentName = _AtmIfVptVpdTmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 1, 1, 2),
    _AtmIfVptVpdTmComponentName_Type()
)
atmIfVptVpdTmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVpdTmComponentName.setStatus("mandatory")
_AtmIfVptVpdTmStorageType_Type = StorageType
_AtmIfVptVpdTmStorageType_Object = MibTableColumn
atmIfVptVpdTmStorageType = _AtmIfVptVpdTmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 1, 1, 4),
    _AtmIfVptVpdTmStorageType_Type()
)
atmIfVptVpdTmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVpdTmStorageType.setStatus("mandatory")
_AtmIfVptVpdTmIndex_Type = NonReplicated
_AtmIfVptVpdTmIndex_Object = MibTableColumn
atmIfVptVpdTmIndex = _AtmIfVptVpdTmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 1, 1, 10),
    _AtmIfVptVpdTmIndex_Type()
)
atmIfVptVpdTmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVpdTmIndex.setStatus("mandatory")
_AtmIfVptVpdTmAbr_ObjectIdentity = ObjectIdentity
atmIfVptVpdTmAbr = _AtmIfVptVpdTmAbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2)
)
_AtmIfVptVpdTmAbrRowStatusTable_Object = MibTable
atmIfVptVpdTmAbrRowStatusTable = _AtmIfVptVpdTmAbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2, 1)
)
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrRowStatusTable.setStatus("mandatory")
_AtmIfVptVpdTmAbrRowStatusEntry_Object = MibTableRow
atmIfVptVpdTmAbrRowStatusEntry = _AtmIfVptVpdTmAbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2, 1, 1)
)
atmIfVptVpdTmAbrRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdTmAbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrRowStatusEntry.setStatus("mandatory")
_AtmIfVptVpdTmAbrRowStatus_Type = RowStatus
_AtmIfVptVpdTmAbrRowStatus_Object = MibTableColumn
atmIfVptVpdTmAbrRowStatus = _AtmIfVptVpdTmAbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2, 1, 1, 1),
    _AtmIfVptVpdTmAbrRowStatus_Type()
)
atmIfVptVpdTmAbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrRowStatus.setStatus("mandatory")
_AtmIfVptVpdTmAbrComponentName_Type = DisplayString
_AtmIfVptVpdTmAbrComponentName_Object = MibTableColumn
atmIfVptVpdTmAbrComponentName = _AtmIfVptVpdTmAbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2, 1, 1, 2),
    _AtmIfVptVpdTmAbrComponentName_Type()
)
atmIfVptVpdTmAbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrComponentName.setStatus("mandatory")
_AtmIfVptVpdTmAbrStorageType_Type = StorageType
_AtmIfVptVpdTmAbrStorageType_Object = MibTableColumn
atmIfVptVpdTmAbrStorageType = _AtmIfVptVpdTmAbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2, 1, 1, 4),
    _AtmIfVptVpdTmAbrStorageType_Type()
)
atmIfVptVpdTmAbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrStorageType.setStatus("mandatory")
_AtmIfVptVpdTmAbrIndex_Type = NonReplicated
_AtmIfVptVpdTmAbrIndex_Object = MibTableColumn
atmIfVptVpdTmAbrIndex = _AtmIfVptVpdTmAbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2, 1, 1, 10),
    _AtmIfVptVpdTmAbrIndex_Type()
)
atmIfVptVpdTmAbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrIndex.setStatus("mandatory")
_AtmIfVptVpdTmAbrProvTable_Object = MibTable
atmIfVptVpdTmAbrProvTable = _AtmIfVptVpdTmAbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2, 110)
)
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrProvTable.setStatus("mandatory")
_AtmIfVptVpdTmAbrProvEntry_Object = MibTableRow
atmIfVptVpdTmAbrProvEntry = _AtmIfVptVpdTmAbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2, 110, 1)
)
atmIfVptVpdTmAbrProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdTmAbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrProvEntry.setStatus("mandatory")


class _AtmIfVptVpdTmAbrInitialCellRate_Type(Unsigned32):
    """Custom type atmIfVptVpdTmAbrInitialCellRate based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
        ValueRangeConstraint(16777216, 16777216),
        ValueRangeConstraint(16777217, 16777217),
        ValueRangeConstraint(16777218, 16777218),
    )


_AtmIfVptVpdTmAbrInitialCellRate_Type.__name__ = "Unsigned32"
_AtmIfVptVpdTmAbrInitialCellRate_Object = MibTableColumn
atmIfVptVpdTmAbrInitialCellRate = _AtmIfVptVpdTmAbrInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2, 110, 1, 10),
    _AtmIfVptVpdTmAbrInitialCellRate_Type()
)
atmIfVptVpdTmAbrInitialCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrInitialCellRate.setStatus("mandatory")


class _AtmIfVptVpdTmAbrTransientBufferExposure_Type(Unsigned32):
    """Custom type atmIfVptVpdTmAbrTransientBufferExposure based on Unsigned32"""
    defaultValue = 16777215

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVptVpdTmAbrTransientBufferExposure_Type.__name__ = "Unsigned32"
_AtmIfVptVpdTmAbrTransientBufferExposure_Object = MibTableColumn
atmIfVptVpdTmAbrTransientBufferExposure = _AtmIfVptVpdTmAbrTransientBufferExposure_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2, 110, 1, 11),
    _AtmIfVptVpdTmAbrTransientBufferExposure_Type()
)
atmIfVptVpdTmAbrTransientBufferExposure.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrTransientBufferExposure.setStatus("mandatory")


class _AtmIfVptVpdTmAbrFixedRoundTripTime_Type(Unsigned32):
    """Custom type atmIfVptVpdTmAbrFixedRoundTripTime based on Unsigned32"""
    defaultValue = 5000000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16700000),
    )


_AtmIfVptVpdTmAbrFixedRoundTripTime_Type.__name__ = "Unsigned32"
_AtmIfVptVpdTmAbrFixedRoundTripTime_Object = MibTableColumn
atmIfVptVpdTmAbrFixedRoundTripTime = _AtmIfVptVpdTmAbrFixedRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2, 110, 1, 12),
    _AtmIfVptVpdTmAbrFixedRoundTripTime_Type()
)
atmIfVptVpdTmAbrFixedRoundTripTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrFixedRoundTripTime.setStatus("mandatory")


class _AtmIfVptVpdTmAbrRateDecreaseFactor_Type(Unsigned32):
    """Custom type atmIfVptVpdTmAbrRateDecreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVptVpdTmAbrRateDecreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVptVpdTmAbrRateDecreaseFactor_Object = MibTableColumn
atmIfVptVpdTmAbrRateDecreaseFactor = _AtmIfVptVpdTmAbrRateDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2, 110, 1, 13),
    _AtmIfVptVpdTmAbrRateDecreaseFactor_Type()
)
atmIfVptVpdTmAbrRateDecreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrRateDecreaseFactor.setStatus("mandatory")


class _AtmIfVptVpdTmAbrRateIncreaseFactor_Type(Unsigned32):
    """Custom type atmIfVptVpdTmAbrRateIncreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVptVpdTmAbrRateIncreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVptVpdTmAbrRateIncreaseFactor_Object = MibTableColumn
atmIfVptVpdTmAbrRateIncreaseFactor = _AtmIfVptVpdTmAbrRateIncreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2, 110, 1, 14),
    _AtmIfVptVpdTmAbrRateIncreaseFactor_Type()
)
atmIfVptVpdTmAbrRateIncreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrRateIncreaseFactor.setStatus("mandatory")


class _AtmIfVptVpdTmAbrMaxCellPerRmCell_Type(Unsigned32):
    """Custom type atmIfVptVpdTmAbrMaxCellPerRmCell based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVptVpdTmAbrMaxCellPerRmCell_Type.__name__ = "Unsigned32"
_AtmIfVptVpdTmAbrMaxCellPerRmCell_Object = MibTableColumn
atmIfVptVpdTmAbrMaxCellPerRmCell = _AtmIfVptVpdTmAbrMaxCellPerRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2, 110, 1, 15),
    _AtmIfVptVpdTmAbrMaxCellPerRmCell_Type()
)
atmIfVptVpdTmAbrMaxCellPerRmCell.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrMaxCellPerRmCell.setStatus("mandatory")


class _AtmIfVptVpdTmAbrMaxTimeBetweenRmCells_Type(Unsigned32):
    """Custom type atmIfVptVpdTmAbrMaxTimeBetweenRmCells based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(781, 781),
        ValueRangeConstraint(1563, 1563),
        ValueRangeConstraint(3125, 3125),
        ValueRangeConstraint(6250, 6250),
        ValueRangeConstraint(12500, 12500),
        ValueRangeConstraint(25000, 25000),
        ValueRangeConstraint(50000, 50000),
        ValueRangeConstraint(100000, 100000),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVptVpdTmAbrMaxTimeBetweenRmCells_Type.__name__ = "Unsigned32"
_AtmIfVptVpdTmAbrMaxTimeBetweenRmCells_Object = MibTableColumn
atmIfVptVpdTmAbrMaxTimeBetweenRmCells = _AtmIfVptVpdTmAbrMaxTimeBetweenRmCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2, 110, 1, 16),
    _AtmIfVptVpdTmAbrMaxTimeBetweenRmCells_Type()
)
atmIfVptVpdTmAbrMaxTimeBetweenRmCells.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrMaxTimeBetweenRmCells.setStatus("mandatory")


class _AtmIfVptVpdTmAbrCutoffDecreaseFactor_Type(Unsigned32):
    """Custom type atmIfVptVpdTmAbrCutoffDecreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVptVpdTmAbrCutoffDecreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVptVpdTmAbrCutoffDecreaseFactor_Object = MibTableColumn
atmIfVptVpdTmAbrCutoffDecreaseFactor = _AtmIfVptVpdTmAbrCutoffDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2, 110, 1, 17),
    _AtmIfVptVpdTmAbrCutoffDecreaseFactor_Type()
)
atmIfVptVpdTmAbrCutoffDecreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrCutoffDecreaseFactor.setStatus("mandatory")


class _AtmIfVptVpdTmAbrAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type atmIfVptVpdTmAbrAcrDecreaseTimeFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVptVpdTmAbrAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_AtmIfVptVpdTmAbrAcrDecreaseTimeFactor_Object = MibTableColumn
atmIfVptVpdTmAbrAcrDecreaseTimeFactor = _AtmIfVptVpdTmAbrAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2, 110, 1, 18),
    _AtmIfVptVpdTmAbrAcrDecreaseTimeFactor_Type()
)
atmIfVptVpdTmAbrAcrDecreaseTimeFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrAcrDecreaseTimeFactor.setStatus("mandatory")


class _AtmIfVptVpdTmAbrDgcraMaximumDelay_Type(Unsigned32):
    """Custom type atmIfVptVpdTmAbrDgcraMaximumDelay based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16700000),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVptVpdTmAbrDgcraMaximumDelay_Type.__name__ = "Unsigned32"
_AtmIfVptVpdTmAbrDgcraMaximumDelay_Object = MibTableColumn
atmIfVptVpdTmAbrDgcraMaximumDelay = _AtmIfVptVpdTmAbrDgcraMaximumDelay_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2, 110, 1, 19),
    _AtmIfVptVpdTmAbrDgcraMaximumDelay_Type()
)
atmIfVptVpdTmAbrDgcraMaximumDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrDgcraMaximumDelay.setStatus("mandatory")


class _AtmIfVptVpdTmAbrDgcraMinimumDelay_Type(Unsigned32):
    """Custom type atmIfVptVpdTmAbrDgcraMinimumDelay based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16700000),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVptVpdTmAbrDgcraMinimumDelay_Type.__name__ = "Unsigned32"
_AtmIfVptVpdTmAbrDgcraMinimumDelay_Object = MibTableColumn
atmIfVptVpdTmAbrDgcraMinimumDelay = _AtmIfVptVpdTmAbrDgcraMinimumDelay_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2, 110, 1, 20),
    _AtmIfVptVpdTmAbrDgcraMinimumDelay_Type()
)
atmIfVptVpdTmAbrDgcraMinimumDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrDgcraMinimumDelay.setStatus("mandatory")


class _AtmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type atmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor based on Unsigned32"""
    defaultValue = 1024

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
        ValueRangeConstraint(1024, 1024),
    )


_AtmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_AtmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor_Object = MibTableColumn
atmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor = _AtmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2, 110, 1, 21),
    _AtmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor_Type()
)
atmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor.setStatus("mandatory")


class _AtmIfVptVpdTmAbrFarEndInitialCellRate_Type(Unsigned32):
    """Custom type atmIfVptVpdTmAbrFarEndInitialCellRate based on Unsigned32"""
    defaultValue = 16777219

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
        ValueRangeConstraint(16777219, 16777219),
    )


_AtmIfVptVpdTmAbrFarEndInitialCellRate_Type.__name__ = "Unsigned32"
_AtmIfVptVpdTmAbrFarEndInitialCellRate_Object = MibTableColumn
atmIfVptVpdTmAbrFarEndInitialCellRate = _AtmIfVptVpdTmAbrFarEndInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 2, 110, 1, 22),
    _AtmIfVptVpdTmAbrFarEndInitialCellRate_Type()
)
atmIfVptVpdTmAbrFarEndInitialCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrFarEndInitialCellRate.setStatus("mandatory")
_AtmIfVptVpdTmProvTable_Object = MibTable
atmIfVptVpdTmProvTable = _AtmIfVptVpdTmProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100)
)
if mibBuilder.loadTexts:
    atmIfVptVpdTmProvTable.setStatus("mandatory")
_AtmIfVptVpdTmProvEntry_Object = MibTableRow
atmIfVptVpdTmProvEntry = _AtmIfVptVpdTmProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1)
)
atmIfVptVpdTmProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdTmIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVpdTmProvEntry.setStatus("mandatory")


class _AtmIfVptVpdTmTxTrafficDescType_Type(Integer32):
    """Custom type atmIfVptVpdTmTxTrafficDescType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_AtmIfVptVpdTmTxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVptVpdTmTxTrafficDescType_Object = MibTableColumn
atmIfVptVpdTmTxTrafficDescType = _AtmIfVptVpdTmTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1, 10),
    _AtmIfVptVpdTmTxTrafficDescType_Type()
)
atmIfVptVpdTmTxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmTxTrafficDescType.setStatus("mandatory")


class _AtmIfVptVpdTmFwdQosClass_Type(Integer32):
    """Custom type atmIfVptVpdTmFwdQosClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfVptVpdTmFwdQosClass_Type.__name__ = "Integer32"
_AtmIfVptVpdTmFwdQosClass_Object = MibTableColumn
atmIfVptVpdTmFwdQosClass = _AtmIfVptVpdTmFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1, 21),
    _AtmIfVptVpdTmFwdQosClass_Type()
)
atmIfVptVpdTmFwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmFwdQosClass.setStatus("mandatory")


class _AtmIfVptVpdTmTxQueueLimit_Type(Unsigned32):
    """Custom type atmIfVptVpdTmTxQueueLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 63488),
    )


_AtmIfVptVpdTmTxQueueLimit_Type.__name__ = "Unsigned32"
_AtmIfVptVpdTmTxQueueLimit_Object = MibTableColumn
atmIfVptVpdTmTxQueueLimit = _AtmIfVptVpdTmTxQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1, 22),
    _AtmIfVptVpdTmTxQueueLimit_Type()
)
atmIfVptVpdTmTxQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmTxQueueLimit.setStatus("mandatory")


class _AtmIfVptVpdTmHoldingPriority_Type(Integer32):
    """Custom type atmIfVptVpdTmHoldingPriority based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfVptVpdTmHoldingPriority_Type.__name__ = "Integer32"
_AtmIfVptVpdTmHoldingPriority_Object = MibTableColumn
atmIfVptVpdTmHoldingPriority = _AtmIfVptVpdTmHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1, 25),
    _AtmIfVptVpdTmHoldingPriority_Type()
)
atmIfVptVpdTmHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmHoldingPriority.setStatus("mandatory")


class _AtmIfVptVpdTmRxTrafficDescType_Type(Integer32):
    """Custom type atmIfVptVpdTmRxTrafficDescType based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9),
          ("sameAsTx", 15))
    )


_AtmIfVptVpdTmRxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVptVpdTmRxTrafficDescType_Object = MibTableColumn
atmIfVptVpdTmRxTrafficDescType = _AtmIfVptVpdTmRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1, 30),
    _AtmIfVptVpdTmRxTrafficDescType_Type()
)
atmIfVptVpdTmRxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmRxTrafficDescType.setStatus("mandatory")


class _AtmIfVptVpdTmBwdQosClass_Type(Integer32):
    """Custom type atmIfVptVpdTmBwdQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("sameAsFwd", 15))
    )


_AtmIfVptVpdTmBwdQosClass_Type.__name__ = "Integer32"
_AtmIfVptVpdTmBwdQosClass_Object = MibTableColumn
atmIfVptVpdTmBwdQosClass = _AtmIfVptVpdTmBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1, 41),
    _AtmIfVptVpdTmBwdQosClass_Type()
)
atmIfVptVpdTmBwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmBwdQosClass.setStatus("mandatory")


class _AtmIfVptVpdTmAtmServiceCategory_Type(Integer32):
    """Custom type atmIfVptVpdTmAtmServiceCategory based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("availableBitRate", 4),
          ("constantBitRate", 1),
          ("derivedFromBBC", 15),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_AtmIfVptVpdTmAtmServiceCategory_Type.__name__ = "Integer32"
_AtmIfVptVpdTmAtmServiceCategory_Object = MibTableColumn
atmIfVptVpdTmAtmServiceCategory = _AtmIfVptVpdTmAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1, 42),
    _AtmIfVptVpdTmAtmServiceCategory_Type()
)
atmIfVptVpdTmAtmServiceCategory.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmAtmServiceCategory.setStatus("mandatory")


class _AtmIfVptVpdTmTrafficShaping_Type(Integer32):
    """Custom type atmIfVptVpdTmTrafficShaping based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsCa", 2))
    )


_AtmIfVptVpdTmTrafficShaping_Type.__name__ = "Integer32"
_AtmIfVptVpdTmTrafficShaping_Object = MibTableColumn
atmIfVptVpdTmTrafficShaping = _AtmIfVptVpdTmTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1, 50),
    _AtmIfVptVpdTmTrafficShaping_Type()
)
atmIfVptVpdTmTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmTrafficShaping.setStatus("mandatory")


class _AtmIfVptVpdTmUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfVptVpdTmUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("sameAsCa", 3))
    )


_AtmIfVptVpdTmUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfVptVpdTmUnshapedTransmitQueueing_Object = MibTableColumn
atmIfVptVpdTmUnshapedTransmitQueueing = _AtmIfVptVpdTmUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1, 60),
    _AtmIfVptVpdTmUnshapedTransmitQueueing_Type()
)
atmIfVptVpdTmUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmUnshapedTransmitQueueing.setStatus("mandatory")


class _AtmIfVptVpdTmWeight_Type(Unsigned32):
    """Custom type atmIfVptVpdTmWeight based on Unsigned32"""
    defaultValue = 65535

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(65535, 65535),
    )


_AtmIfVptVpdTmWeight_Type.__name__ = "Unsigned32"
_AtmIfVptVpdTmWeight_Object = MibTableColumn
atmIfVptVpdTmWeight = _AtmIfVptVpdTmWeight_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1, 61),
    _AtmIfVptVpdTmWeight_Type()
)
atmIfVptVpdTmWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmWeight.setStatus("mandatory")


class _AtmIfVptVpdTmForceTagging_Type(Integer32):
    """Custom type atmIfVptVpdTmForceTagging based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("sameAsCa", 2))
    )


_AtmIfVptVpdTmForceTagging_Type.__name__ = "Integer32"
_AtmIfVptVpdTmForceTagging_Object = MibTableColumn
atmIfVptVpdTmForceTagging = _AtmIfVptVpdTmForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1, 62),
    _AtmIfVptVpdTmForceTagging_Type()
)
atmIfVptVpdTmForceTagging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmForceTagging.setStatus("mandatory")


class _AtmIfVptVpdTmUsageParameterControl_Type(Integer32):
    """Custom type atmIfVptVpdTmUsageParameterControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4),
          ("sameAsCa", 2))
    )


_AtmIfVptVpdTmUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfVptVpdTmUsageParameterControl_Object = MibTableColumn
atmIfVptVpdTmUsageParameterControl = _AtmIfVptVpdTmUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1, 70),
    _AtmIfVptVpdTmUsageParameterControl_Type()
)
atmIfVptVpdTmUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmUsageParameterControl.setStatus("mandatory")


class _AtmIfVptVpdTmBearerClassBbc_Type(Integer32):
    """Custom type atmIfVptVpdTmBearerClassBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              31)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("derivedFromServiceCategory", 31),
          ("vp", 24),
          ("x", 16))
    )


_AtmIfVptVpdTmBearerClassBbc_Type.__name__ = "Integer32"
_AtmIfVptVpdTmBearerClassBbc_Object = MibTableColumn
atmIfVptVpdTmBearerClassBbc = _AtmIfVptVpdTmBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1, 71),
    _AtmIfVptVpdTmBearerClassBbc_Type()
)
atmIfVptVpdTmBearerClassBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmBearerClassBbc.setStatus("mandatory")


class _AtmIfVptVpdTmTransferCapabilityBbc_Type(Integer32):
    """Custom type atmIfVptVpdTmTransferCapabilityBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 31),
          ("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_AtmIfVptVpdTmTransferCapabilityBbc_Type.__name__ = "Integer32"
_AtmIfVptVpdTmTransferCapabilityBbc_Object = MibTableColumn
atmIfVptVpdTmTransferCapabilityBbc = _AtmIfVptVpdTmTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1, 72),
    _AtmIfVptVpdTmTransferCapabilityBbc_Type()
)
atmIfVptVpdTmTransferCapabilityBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmTransferCapabilityBbc.setStatus("mandatory")


class _AtmIfVptVpdTmTxWredThreshold_Type(Unsigned32):
    """Custom type atmIfVptVpdTmTxWredThreshold based on Unsigned32"""
    defaultValue = 25

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(25, 25),
        ValueRangeConstraint(50, 50),
        ValueRangeConstraint(75, 75),
    )


_AtmIfVptVpdTmTxWredThreshold_Type.__name__ = "Unsigned32"
_AtmIfVptVpdTmTxWredThreshold_Object = MibTableColumn
atmIfVptVpdTmTxWredThreshold = _AtmIfVptVpdTmTxWredThreshold_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1, 73),
    _AtmIfVptVpdTmTxWredThreshold_Type()
)
atmIfVptVpdTmTxWredThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmTxWredThreshold.setStatus("mandatory")


class _AtmIfVptVpdTmClippingBbc_Type(Integer32):
    """Custom type atmIfVptVpdTmClippingBbc based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVptVpdTmClippingBbc_Type.__name__ = "Integer32"
_AtmIfVptVpdTmClippingBbc_Object = MibTableColumn
atmIfVptVpdTmClippingBbc = _AtmIfVptVpdTmClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1, 74),
    _AtmIfVptVpdTmClippingBbc_Type()
)
atmIfVptVpdTmClippingBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmClippingBbc.setStatus("mandatory")


class _AtmIfVptVpdTmBestEffort_Type(Integer32):
    """Custom type atmIfVptVpdTmBestEffort based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              15)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 15),
          ("indicated", 0),
          ("notIndicated", 1))
    )


_AtmIfVptVpdTmBestEffort_Type.__name__ = "Integer32"
_AtmIfVptVpdTmBestEffort_Object = MibTableColumn
atmIfVptVpdTmBestEffort = _AtmIfVptVpdTmBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1, 75),
    _AtmIfVptVpdTmBestEffort_Type()
)
atmIfVptVpdTmBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmBestEffort.setStatus("mandatory")


class _AtmIfVptVpdTmTxPacketWiseDiscard_Type(Integer32):
    """Custom type atmIfVptVpdTmTxPacketWiseDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_AtmIfVptVpdTmTxPacketWiseDiscard_Type.__name__ = "Integer32"
_AtmIfVptVpdTmTxPacketWiseDiscard_Object = MibTableColumn
atmIfVptVpdTmTxPacketWiseDiscard = _AtmIfVptVpdTmTxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1, 76),
    _AtmIfVptVpdTmTxPacketWiseDiscard_Type()
)
atmIfVptVpdTmTxPacketWiseDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmTxPacketWiseDiscard.setStatus("mandatory")


class _AtmIfVptVpdTmTxWredMode_Type(Integer32):
    """Custom type atmIfVptVpdTmTxWredMode based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1),
          ("perFlow", 2))
    )


_AtmIfVptVpdTmTxWredMode_Type.__name__ = "Integer32"
_AtmIfVptVpdTmTxWredMode_Object = MibTableColumn
atmIfVptVpdTmTxWredMode = _AtmIfVptVpdTmTxWredMode_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1, 77),
    _AtmIfVptVpdTmTxWredMode_Type()
)
atmIfVptVpdTmTxWredMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmTxWredMode.setStatus("mandatory")


class _AtmIfVptVpdTmRxPacketWiseDiscard_Type(Integer32):
    """Custom type atmIfVptVpdTmRxPacketWiseDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_AtmIfVptVpdTmRxPacketWiseDiscard_Type.__name__ = "Integer32"
_AtmIfVptVpdTmRxPacketWiseDiscard_Object = MibTableColumn
atmIfVptVpdTmRxPacketWiseDiscard = _AtmIfVptVpdTmRxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1, 78),
    _AtmIfVptVpdTmRxPacketWiseDiscard_Type()
)
atmIfVptVpdTmRxPacketWiseDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmRxPacketWiseDiscard.setStatus("mandatory")


class _AtmIfVptVpdTmAbrConnectionType_Type(Integer32):
    """Custom type atmIfVptVpdTmAbrConnectionType based on Integer32"""
    defaultValue = 14

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              3,
              4,
              5,
              14)
        )
    )
    namedValues = NamedValues(
        *(("abrSwitch", 0),
          ("nonAbrInterworking", 5),
          ("sameAsCa", 14),
          ("sourceDest", 4),
          ("virtualSourceDest", 3))
    )


_AtmIfVptVpdTmAbrConnectionType_Type.__name__ = "Integer32"
_AtmIfVptVpdTmAbrConnectionType_Object = MibTableColumn
atmIfVptVpdTmAbrConnectionType = _AtmIfVptVpdTmAbrConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 100, 1, 90),
    _AtmIfVptVpdTmAbrConnectionType_Type()
)
atmIfVptVpdTmAbrConnectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmAbrConnectionType.setStatus("mandatory")
_AtmIfVptVpdTmTxTdpTable_Object = MibTable
atmIfVptVpdTmTxTdpTable = _AtmIfVptVpdTmTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 456)
)
if mibBuilder.loadTexts:
    atmIfVptVpdTmTxTdpTable.setStatus("mandatory")
_AtmIfVptVpdTmTxTdpEntry_Object = MibTableRow
atmIfVptVpdTmTxTdpEntry = _AtmIfVptVpdTmTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 456, 1)
)
atmIfVptVpdTmTxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdTmTxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVpdTmTxTdpEntry.setStatus("mandatory")


class _AtmIfVptVpdTmTxTdpIndex_Type(Integer32):
    """Custom type atmIfVptVpdTmTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVptVpdTmTxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVptVpdTmTxTdpIndex_Object = MibTableColumn
atmIfVptVpdTmTxTdpIndex = _AtmIfVptVpdTmTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 456, 1, 1),
    _AtmIfVptVpdTmTxTdpIndex_Type()
)
atmIfVptVpdTmTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVpdTmTxTdpIndex.setStatus("mandatory")


class _AtmIfVptVpdTmTxTdpValue_Type(Unsigned32):
    """Custom type atmIfVptVpdTmTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVpdTmTxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVpdTmTxTdpValue_Object = MibTableColumn
atmIfVptVpdTmTxTdpValue = _AtmIfVptVpdTmTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 456, 1, 2),
    _AtmIfVptVpdTmTxTdpValue_Type()
)
atmIfVptVpdTmTxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmTxTdpValue.setStatus("mandatory")
_AtmIfVptVpdTmRxTdpTable_Object = MibTable
atmIfVptVpdTmRxTdpTable = _AtmIfVptVpdTmRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 457)
)
if mibBuilder.loadTexts:
    atmIfVptVpdTmRxTdpTable.setStatus("mandatory")
_AtmIfVptVpdTmRxTdpEntry_Object = MibTableRow
atmIfVptVpdTmRxTdpEntry = _AtmIfVptVpdTmRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 457, 1)
)
atmIfVptVpdTmRxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdTmRxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVpdTmRxTdpEntry.setStatus("mandatory")


class _AtmIfVptVpdTmRxTdpIndex_Type(Integer32):
    """Custom type atmIfVptVpdTmRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVptVpdTmRxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVptVpdTmRxTdpIndex_Object = MibTableColumn
atmIfVptVpdTmRxTdpIndex = _AtmIfVptVpdTmRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 457, 1, 1),
    _AtmIfVptVpdTmRxTdpIndex_Type()
)
atmIfVptVpdTmRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVpdTmRxTdpIndex.setStatus("mandatory")


class _AtmIfVptVpdTmRxTdpValue_Type(Unsigned32):
    """Custom type atmIfVptVpdTmRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVpdTmRxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVpdTmRxTdpValue_Object = MibTableColumn
atmIfVptVpdTmRxTdpValue = _AtmIfVptVpdTmRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 457, 1, 2),
    _AtmIfVptVpdTmRxTdpValue_Type()
)
atmIfVptVpdTmRxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmRxTdpValue.setStatus("mandatory")
_AtmIfVptVpdTmFqpTable_Object = MibTable
atmIfVptVpdTmFqpTable = _AtmIfVptVpdTmFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 458)
)
if mibBuilder.loadTexts:
    atmIfVptVpdTmFqpTable.setStatus("mandatory")
_AtmIfVptVpdTmFqpEntry_Object = MibTableRow
atmIfVptVpdTmFqpEntry = _AtmIfVptVpdTmFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 458, 1)
)
atmIfVptVpdTmFqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdTmFqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVpdTmFqpEntry.setStatus("mandatory")


class _AtmIfVptVpdTmFqpIndex_Type(Integer32):
    """Custom type atmIfVptVpdTmFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVptVpdTmFqpIndex_Type.__name__ = "Integer32"
_AtmIfVptVpdTmFqpIndex_Object = MibTableColumn
atmIfVptVpdTmFqpIndex = _AtmIfVptVpdTmFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 458, 1, 1),
    _AtmIfVptVpdTmFqpIndex_Type()
)
atmIfVptVpdTmFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVpdTmFqpIndex.setStatus("mandatory")


class _AtmIfVptVpdTmFqpValue_Type(Unsigned32):
    """Custom type atmIfVptVpdTmFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVptVpdTmFqpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVpdTmFqpValue_Object = MibTableColumn
atmIfVptVpdTmFqpValue = _AtmIfVptVpdTmFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 458, 1, 2),
    _AtmIfVptVpdTmFqpValue_Type()
)
atmIfVptVpdTmFqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmFqpValue.setStatus("mandatory")
_AtmIfVptVpdTmBqpTable_Object = MibTable
atmIfVptVpdTmBqpTable = _AtmIfVptVpdTmBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 459)
)
if mibBuilder.loadTexts:
    atmIfVptVpdTmBqpTable.setStatus("mandatory")
_AtmIfVptVpdTmBqpEntry_Object = MibTableRow
atmIfVptVpdTmBqpEntry = _AtmIfVptVpdTmBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 459, 1)
)
atmIfVptVpdTmBqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdTmBqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVpdTmBqpEntry.setStatus("mandatory")


class _AtmIfVptVpdTmBqpIndex_Type(Integer32):
    """Custom type atmIfVptVpdTmBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2))
    )


_AtmIfVptVpdTmBqpIndex_Type.__name__ = "Integer32"
_AtmIfVptVpdTmBqpIndex_Object = MibTableColumn
atmIfVptVpdTmBqpIndex = _AtmIfVptVpdTmBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 459, 1, 1),
    _AtmIfVptVpdTmBqpIndex_Type()
)
atmIfVptVpdTmBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVpdTmBqpIndex.setStatus("mandatory")


class _AtmIfVptVpdTmBqpValue_Type(Unsigned32):
    """Custom type atmIfVptVpdTmBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVptVpdTmBqpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVpdTmBqpValue_Object = MibTableColumn
atmIfVptVpdTmBqpValue = _AtmIfVptVpdTmBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 2, 459, 1, 2),
    _AtmIfVptVpdTmBqpValue_Type()
)
atmIfVptVpdTmBqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTmBqpValue.setStatus("mandatory")
_AtmIfVptVpdLbkTable_Object = MibTable
atmIfVptVpdLbkTable = _AtmIfVptVpdLbkTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 100)
)
if mibBuilder.loadTexts:
    atmIfVptVpdLbkTable.setStatus("mandatory")
_AtmIfVptVpdLbkEntry_Object = MibTableRow
atmIfVptVpdLbkEntry = _AtmIfVptVpdLbkEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 100, 1)
)
atmIfVptVpdLbkEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVpdLbkEntry.setStatus("mandatory")


class _AtmIfVptVpdSegLinkSideLoopback_Type(Integer32):
    """Custom type atmIfVptVpdSegLinkSideLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_AtmIfVptVpdSegLinkSideLoopback_Type.__name__ = "Integer32"
_AtmIfVptVpdSegLinkSideLoopback_Object = MibTableColumn
atmIfVptVpdSegLinkSideLoopback = _AtmIfVptVpdSegLinkSideLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 100, 1, 10),
    _AtmIfVptVpdSegLinkSideLoopback_Type()
)
atmIfVptVpdSegLinkSideLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdSegLinkSideLoopback.setStatus("mandatory")


class _AtmIfVptVpdSegSwitchSideLoopback_Type(Integer32):
    """Custom type atmIfVptVpdSegSwitchSideLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_AtmIfVptVpdSegSwitchSideLoopback_Type.__name__ = "Integer32"
_AtmIfVptVpdSegSwitchSideLoopback_Object = MibTableColumn
atmIfVptVpdSegSwitchSideLoopback = _AtmIfVptVpdSegSwitchSideLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 100, 1, 20),
    _AtmIfVptVpdSegSwitchSideLoopback_Type()
)
atmIfVptVpdSegSwitchSideLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdSegSwitchSideLoopback.setStatus("mandatory")


class _AtmIfVptVpdEndToEndLoopback_Type(Integer32):
    """Custom type atmIfVptVpdEndToEndLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_AtmIfVptVpdEndToEndLoopback_Type.__name__ = "Integer32"
_AtmIfVptVpdEndToEndLoopback_Object = MibTableColumn
atmIfVptVpdEndToEndLoopback = _AtmIfVptVpdEndToEndLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 100, 1, 30),
    _AtmIfVptVpdEndToEndLoopback_Type()
)
atmIfVptVpdEndToEndLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdEndToEndLoopback.setStatus("mandatory")


class _AtmIfVptVpdLoopbackMonitoring_Type(Integer32):
    """Custom type atmIfVptVpdLoopbackMonitoring based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_AtmIfVptVpdLoopbackMonitoring_Type.__name__ = "Integer32"
_AtmIfVptVpdLoopbackMonitoring_Object = MibTableColumn
atmIfVptVpdLoopbackMonitoring = _AtmIfVptVpdLoopbackMonitoring_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 100, 1, 1000),
    _AtmIfVptVpdLoopbackMonitoring_Type()
)
atmIfVptVpdLoopbackMonitoring.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdLoopbackMonitoring.setStatus("mandatory")
_AtmIfVptVpdTrafficTable_Object = MibTable
atmIfVptVpdTrafficTable = _AtmIfVptVpdTrafficTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 110)
)
if mibBuilder.loadTexts:
    atmIfVptVpdTrafficTable.setStatus("mandatory")
_AtmIfVptVpdTrafficEntry_Object = MibTableRow
atmIfVptVpdTrafficEntry = _AtmIfVptVpdTrafficEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 110, 1)
)
atmIfVptVpdTrafficEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVpdTrafficEntry.setStatus("mandatory")


class _AtmIfVptVpdTxTrafficDescType_Type(Integer32):
    """Custom type atmIfVptVpdTxTrafficDescType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_AtmIfVptVpdTxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVptVpdTxTrafficDescType_Object = MibTableColumn
atmIfVptVpdTxTrafficDescType = _AtmIfVptVpdTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 110, 1, 10),
    _AtmIfVptVpdTxTrafficDescType_Type()
)
atmIfVptVpdTxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTxTrafficDescType.setStatus("obsolete")


class _AtmIfVptVpdTxQosClass_Type(Integer32):
    """Custom type atmIfVptVpdTxQosClass based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_AtmIfVptVpdTxQosClass_Type.__name__ = "Integer32"
_AtmIfVptVpdTxQosClass_Object = MibTableColumn
atmIfVptVpdTxQosClass = _AtmIfVptVpdTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 110, 1, 20),
    _AtmIfVptVpdTxQosClass_Type()
)
atmIfVptVpdTxQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTxQosClass.setStatus("obsolete")


class _AtmIfVptVpdFwdQosClass_Type(Integer32):
    """Custom type atmIfVptVpdFwdQosClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfVptVpdFwdQosClass_Type.__name__ = "Integer32"
_AtmIfVptVpdFwdQosClass_Object = MibTableColumn
atmIfVptVpdFwdQosClass = _AtmIfVptVpdFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 110, 1, 21),
    _AtmIfVptVpdFwdQosClass_Type()
)
atmIfVptVpdFwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdFwdQosClass.setStatus("obsolete")


class _AtmIfVptVpdHoldingPriority_Type(Integer32):
    """Custom type atmIfVptVpdHoldingPriority based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfVptVpdHoldingPriority_Type.__name__ = "Integer32"
_AtmIfVptVpdHoldingPriority_Object = MibTableColumn
atmIfVptVpdHoldingPriority = _AtmIfVptVpdHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 110, 1, 25),
    _AtmIfVptVpdHoldingPriority_Type()
)
atmIfVptVpdHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdHoldingPriority.setStatus("obsolete")


class _AtmIfVptVpdRxTrafficDescType_Type(Integer32):
    """Custom type atmIfVptVpdRxTrafficDescType based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("sameAsTx", 15))
    )


_AtmIfVptVpdRxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVptVpdRxTrafficDescType_Object = MibTableColumn
atmIfVptVpdRxTrafficDescType = _AtmIfVptVpdRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 110, 1, 30),
    _AtmIfVptVpdRxTrafficDescType_Type()
)
atmIfVptVpdRxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdRxTrafficDescType.setStatus("obsolete")


class _AtmIfVptVpdRxQosClass_Type(Integer32):
    """Custom type atmIfVptVpdRxQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("sameAsTx", 15),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_AtmIfVptVpdRxQosClass_Type.__name__ = "Integer32"
_AtmIfVptVpdRxQosClass_Object = MibTableColumn
atmIfVptVpdRxQosClass = _AtmIfVptVpdRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 110, 1, 40),
    _AtmIfVptVpdRxQosClass_Type()
)
atmIfVptVpdRxQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdRxQosClass.setStatus("obsolete")


class _AtmIfVptVpdBwdQosClass_Type(Integer32):
    """Custom type atmIfVptVpdBwdQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("sameAsFwd", 15))
    )


_AtmIfVptVpdBwdQosClass_Type.__name__ = "Integer32"
_AtmIfVptVpdBwdQosClass_Object = MibTableColumn
atmIfVptVpdBwdQosClass = _AtmIfVptVpdBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 110, 1, 41),
    _AtmIfVptVpdBwdQosClass_Type()
)
atmIfVptVpdBwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdBwdQosClass.setStatus("obsolete")


class _AtmIfVptVpdAtmServiceCategory_Type(Integer32):
    """Custom type atmIfVptVpdAtmServiceCategory based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              15)
        )
    )
    namedValues = NamedValues(
        *(("constantBitRate", 1),
          ("derivedFromBBC", 15),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_AtmIfVptVpdAtmServiceCategory_Type.__name__ = "Integer32"
_AtmIfVptVpdAtmServiceCategory_Object = MibTableColumn
atmIfVptVpdAtmServiceCategory = _AtmIfVptVpdAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 110, 1, 42),
    _AtmIfVptVpdAtmServiceCategory_Type()
)
atmIfVptVpdAtmServiceCategory.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdAtmServiceCategory.setStatus("obsolete")


class _AtmIfVptVpdTrafficShaping_Type(Integer32):
    """Custom type atmIfVptVpdTrafficShaping based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsInterface", 2))
    )


_AtmIfVptVpdTrafficShaping_Type.__name__ = "Integer32"
_AtmIfVptVpdTrafficShaping_Object = MibTableColumn
atmIfVptVpdTrafficShaping = _AtmIfVptVpdTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 110, 1, 50),
    _AtmIfVptVpdTrafficShaping_Type()
)
atmIfVptVpdTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTrafficShaping.setStatus("obsolete")


class _AtmIfVptVpdUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfVptVpdUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("sameAsInterface", 3))
    )


_AtmIfVptVpdUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfVptVpdUnshapedTransmitQueueing_Object = MibTableColumn
atmIfVptVpdUnshapedTransmitQueueing = _AtmIfVptVpdUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 110, 1, 60),
    _AtmIfVptVpdUnshapedTransmitQueueing_Type()
)
atmIfVptVpdUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdUnshapedTransmitQueueing.setStatus("obsolete")


class _AtmIfVptVpdUsageParameterControl_Type(Integer32):
    """Custom type atmIfVptVpdUsageParameterControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsInterface", 2))
    )


_AtmIfVptVpdUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfVptVpdUsageParameterControl_Object = MibTableColumn
atmIfVptVpdUsageParameterControl = _AtmIfVptVpdUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 110, 1, 70),
    _AtmIfVptVpdUsageParameterControl_Type()
)
atmIfVptVpdUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdUsageParameterControl.setStatus("obsolete")


class _AtmIfVptVpdBearerClassBbc_Type(Integer32):
    """Custom type atmIfVptVpdBearerClassBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              31)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("derivedFromServiceCategory", 31),
          ("vp", 24),
          ("x", 16))
    )


_AtmIfVptVpdBearerClassBbc_Type.__name__ = "Integer32"
_AtmIfVptVpdBearerClassBbc_Object = MibTableColumn
atmIfVptVpdBearerClassBbc = _AtmIfVptVpdBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 110, 1, 71),
    _AtmIfVptVpdBearerClassBbc_Type()
)
atmIfVptVpdBearerClassBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdBearerClassBbc.setStatus("obsolete")


class _AtmIfVptVpdTransferCapabilityBbc_Type(Integer32):
    """Custom type atmIfVptVpdTransferCapabilityBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 31),
          ("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_AtmIfVptVpdTransferCapabilityBbc_Type.__name__ = "Integer32"
_AtmIfVptVpdTransferCapabilityBbc_Object = MibTableColumn
atmIfVptVpdTransferCapabilityBbc = _AtmIfVptVpdTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 110, 1, 72),
    _AtmIfVptVpdTransferCapabilityBbc_Type()
)
atmIfVptVpdTransferCapabilityBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTransferCapabilityBbc.setStatus("obsolete")


class _AtmIfVptVpdClippingBbc_Type(Integer32):
    """Custom type atmIfVptVpdClippingBbc based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVptVpdClippingBbc_Type.__name__ = "Integer32"
_AtmIfVptVpdClippingBbc_Object = MibTableColumn
atmIfVptVpdClippingBbc = _AtmIfVptVpdClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 110, 1, 74),
    _AtmIfVptVpdClippingBbc_Type()
)
atmIfVptVpdClippingBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdClippingBbc.setStatus("obsolete")


class _AtmIfVptVpdBestEffort_Type(Integer32):
    """Custom type atmIfVptVpdBestEffort based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              15)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 15),
          ("indicated", 0),
          ("notIndicated", 1))
    )


_AtmIfVptVpdBestEffort_Type.__name__ = "Integer32"
_AtmIfVptVpdBestEffort_Object = MibTableColumn
atmIfVptVpdBestEffort = _AtmIfVptVpdBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 110, 1, 75),
    _AtmIfVptVpdBestEffort_Type()
)
atmIfVptVpdBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdBestEffort.setStatus("obsolete")


class _AtmIfVptVpdFwdFrameDiscard_Type(Integer32):
    """Custom type atmIfVptVpdFwdFrameDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_AtmIfVptVpdFwdFrameDiscard_Type.__name__ = "Integer32"
_AtmIfVptVpdFwdFrameDiscard_Object = MibTableColumn
atmIfVptVpdFwdFrameDiscard = _AtmIfVptVpdFwdFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 110, 1, 76),
    _AtmIfVptVpdFwdFrameDiscard_Type()
)
atmIfVptVpdFwdFrameDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdFwdFrameDiscard.setStatus("obsolete")


class _AtmIfVptVpdBwdFrameDiscard_Type(Integer32):
    """Custom type atmIfVptVpdBwdFrameDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_AtmIfVptVpdBwdFrameDiscard_Type.__name__ = "Integer32"
_AtmIfVptVpdBwdFrameDiscard_Object = MibTableColumn
atmIfVptVpdBwdFrameDiscard = _AtmIfVptVpdBwdFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 110, 1, 77),
    _AtmIfVptVpdBwdFrameDiscard_Type()
)
atmIfVptVpdBwdFrameDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdBwdFrameDiscard.setStatus("obsolete")
_AtmIfVptVpdAcctTable_Object = MibTable
atmIfVptVpdAcctTable = _AtmIfVptVpdAcctTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 111)
)
if mibBuilder.loadTexts:
    atmIfVptVpdAcctTable.setStatus("mandatory")
_AtmIfVptVpdAcctEntry_Object = MibTableRow
atmIfVptVpdAcctEntry = _AtmIfVptVpdAcctEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 111, 1)
)
atmIfVptVpdAcctEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVpdAcctEntry.setStatus("mandatory")


class _AtmIfVptVpdCorrelationTag_Type(AsciiString):
    """Custom type atmIfVptVpdCorrelationTag based on AsciiString"""
    defaultHexValue = ""

    subtypeSpec = AsciiString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_AtmIfVptVpdCorrelationTag_Type.__name__ = "AsciiString"
_AtmIfVptVpdCorrelationTag_Object = MibTableColumn
atmIfVptVpdCorrelationTag = _AtmIfVptVpdCorrelationTag_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 111, 1, 10),
    _AtmIfVptVpdCorrelationTag_Type()
)
atmIfVptVpdCorrelationTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdCorrelationTag.setStatus("mandatory")
_AtmIfVptVpdProvTable_Object = MibTable
atmIfVptVpdProvTable = _AtmIfVptVpdProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 112)
)
if mibBuilder.loadTexts:
    atmIfVptVpdProvTable.setStatus("mandatory")
_AtmIfVptVpdProvEntry_Object = MibTableRow
atmIfVptVpdProvEntry = _AtmIfVptVpdProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 112, 1)
)
atmIfVptVpdProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVpdProvEntry.setStatus("mandatory")


class _AtmIfVptVpdVptType_Type(Integer32):
    """Custom type atmIfVptVpdVptType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("basic", 0),
          ("standard", 1),
          ("virtualLink", 2))
    )


_AtmIfVptVpdVptType_Type.__name__ = "Integer32"
_AtmIfVptVpdVptType_Object = MibTableColumn
atmIfVptVpdVptType = _AtmIfVptVpdVptType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 112, 1, 10),
    _AtmIfVptVpdVptType_Type()
)
atmIfVptVpdVptType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdVptType.setStatus("mandatory")
_AtmIfVptVpdTxTdpTable_Object = MibTable
atmIfVptVpdTxTdpTable = _AtmIfVptVpdTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 297)
)
if mibBuilder.loadTexts:
    atmIfVptVpdTxTdpTable.setStatus("obsolete")
_AtmIfVptVpdTxTdpEntry_Object = MibTableRow
atmIfVptVpdTxTdpEntry = _AtmIfVptVpdTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 297, 1)
)
atmIfVptVpdTxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdTxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVpdTxTdpEntry.setStatus("obsolete")


class _AtmIfVptVpdTxTdpIndex_Type(Integer32):
    """Custom type atmIfVptVpdTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVptVpdTxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVptVpdTxTdpIndex_Object = MibTableColumn
atmIfVptVpdTxTdpIndex = _AtmIfVptVpdTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 297, 1, 1),
    _AtmIfVptVpdTxTdpIndex_Type()
)
atmIfVptVpdTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVpdTxTdpIndex.setStatus("obsolete")


class _AtmIfVptVpdTxTdpValue_Type(Unsigned32):
    """Custom type atmIfVptVpdTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVpdTxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVpdTxTdpValue_Object = MibTableColumn
atmIfVptVpdTxTdpValue = _AtmIfVptVpdTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 297, 1, 2),
    _AtmIfVptVpdTxTdpValue_Type()
)
atmIfVptVpdTxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdTxTdpValue.setStatus("obsolete")
_AtmIfVptVpdRxTdpTable_Object = MibTable
atmIfVptVpdRxTdpTable = _AtmIfVptVpdRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 298)
)
if mibBuilder.loadTexts:
    atmIfVptVpdRxTdpTable.setStatus("obsolete")
_AtmIfVptVpdRxTdpEntry_Object = MibTableRow
atmIfVptVpdRxTdpEntry = _AtmIfVptVpdRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 298, 1)
)
atmIfVptVpdRxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdRxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVpdRxTdpEntry.setStatus("obsolete")


class _AtmIfVptVpdRxTdpIndex_Type(Integer32):
    """Custom type atmIfVptVpdRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVptVpdRxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVptVpdRxTdpIndex_Object = MibTableColumn
atmIfVptVpdRxTdpIndex = _AtmIfVptVpdRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 298, 1, 1),
    _AtmIfVptVpdRxTdpIndex_Type()
)
atmIfVptVpdRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVpdRxTdpIndex.setStatus("obsolete")


class _AtmIfVptVpdRxTdpValue_Type(Unsigned32):
    """Custom type atmIfVptVpdRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVpdRxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVpdRxTdpValue_Object = MibTableColumn
atmIfVptVpdRxTdpValue = _AtmIfVptVpdRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 298, 1, 2),
    _AtmIfVptVpdRxTdpValue_Type()
)
atmIfVptVpdRxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdRxTdpValue.setStatus("obsolete")
_AtmIfVptVpdFqpTable_Object = MibTable
atmIfVptVpdFqpTable = _AtmIfVptVpdFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 359)
)
if mibBuilder.loadTexts:
    atmIfVptVpdFqpTable.setStatus("obsolete")
_AtmIfVptVpdFqpEntry_Object = MibTableRow
atmIfVptVpdFqpEntry = _AtmIfVptVpdFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 359, 1)
)
atmIfVptVpdFqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdFqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVpdFqpEntry.setStatus("obsolete")


class _AtmIfVptVpdFqpIndex_Type(Integer32):
    """Custom type atmIfVptVpdFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVptVpdFqpIndex_Type.__name__ = "Integer32"
_AtmIfVptVpdFqpIndex_Object = MibTableColumn
atmIfVptVpdFqpIndex = _AtmIfVptVpdFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 359, 1, 1),
    _AtmIfVptVpdFqpIndex_Type()
)
atmIfVptVpdFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVpdFqpIndex.setStatus("obsolete")


class _AtmIfVptVpdFqpValue_Type(Unsigned32):
    """Custom type atmIfVptVpdFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVpdFqpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVpdFqpValue_Object = MibTableColumn
atmIfVptVpdFqpValue = _AtmIfVptVpdFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 359, 1, 2),
    _AtmIfVptVpdFqpValue_Type()
)
atmIfVptVpdFqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdFqpValue.setStatus("obsolete")
_AtmIfVptVpdBqpTable_Object = MibTable
atmIfVptVpdBqpTable = _AtmIfVptVpdBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 360)
)
if mibBuilder.loadTexts:
    atmIfVptVpdBqpTable.setStatus("obsolete")
_AtmIfVptVpdBqpEntry_Object = MibTableRow
atmIfVptVpdBqpEntry = _AtmIfVptVpdBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 360, 1)
)
atmIfVptVpdBqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVpdBqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVpdBqpEntry.setStatus("obsolete")


class _AtmIfVptVpdBqpIndex_Type(Integer32):
    """Custom type atmIfVptVpdBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVptVpdBqpIndex_Type.__name__ = "Integer32"
_AtmIfVptVpdBqpIndex_Object = MibTableColumn
atmIfVptVpdBqpIndex = _AtmIfVptVpdBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 360, 1, 1),
    _AtmIfVptVpdBqpIndex_Type()
)
atmIfVptVpdBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVpdBqpIndex.setStatus("obsolete")


class _AtmIfVptVpdBqpValue_Type(Unsigned32):
    """Custom type atmIfVptVpdBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVpdBqpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVpdBqpValue_Object = MibTableColumn
atmIfVptVpdBqpValue = _AtmIfVptVpdBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 2, 360, 1, 2),
    _AtmIfVptVpdBqpValue_Type()
)
atmIfVptVpdBqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVpdBqpValue.setStatus("obsolete")
_AtmIfVptCA_ObjectIdentity = ObjectIdentity
atmIfVptCA = _AtmIfVptCA_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5)
)
_AtmIfVptCARowStatusTable_Object = MibTable
atmIfVptCARowStatusTable = _AtmIfVptCARowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 1)
)
if mibBuilder.loadTexts:
    atmIfVptCARowStatusTable.setStatus("mandatory")
_AtmIfVptCARowStatusEntry_Object = MibTableRow
atmIfVptCARowStatusEntry = _AtmIfVptCARowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 1, 1)
)
atmIfVptCARowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptCARowStatusEntry.setStatus("mandatory")
_AtmIfVptCARowStatus_Type = RowStatus
_AtmIfVptCARowStatus_Object = MibTableColumn
atmIfVptCARowStatus = _AtmIfVptCARowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 1, 1, 1),
    _AtmIfVptCARowStatus_Type()
)
atmIfVptCARowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCARowStatus.setStatus("mandatory")
_AtmIfVptCAComponentName_Type = DisplayString
_AtmIfVptCAComponentName_Object = MibTableColumn
atmIfVptCAComponentName = _AtmIfVptCAComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 1, 1, 2),
    _AtmIfVptCAComponentName_Type()
)
atmIfVptCAComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCAComponentName.setStatus("mandatory")
_AtmIfVptCAStorageType_Type = StorageType
_AtmIfVptCAStorageType_Object = MibTableColumn
atmIfVptCAStorageType = _AtmIfVptCAStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 1, 1, 4),
    _AtmIfVptCAStorageType_Type()
)
atmIfVptCAStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCAStorageType.setStatus("mandatory")
_AtmIfVptCAIndex_Type = NonReplicated
_AtmIfVptCAIndex_Object = MibTableColumn
atmIfVptCAIndex = _AtmIfVptCAIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 1, 1, 10),
    _AtmIfVptCAIndex_Type()
)
atmIfVptCAIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptCAIndex.setStatus("mandatory")
_AtmIfVptCACbr_ObjectIdentity = ObjectIdentity
atmIfVptCACbr = _AtmIfVptCACbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 2)
)
_AtmIfVptCACbrRowStatusTable_Object = MibTable
atmIfVptCACbrRowStatusTable = _AtmIfVptCACbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 2, 1)
)
if mibBuilder.loadTexts:
    atmIfVptCACbrRowStatusTable.setStatus("mandatory")
_AtmIfVptCACbrRowStatusEntry_Object = MibTableRow
atmIfVptCACbrRowStatusEntry = _AtmIfVptCACbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 2, 1, 1)
)
atmIfVptCACbrRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCACbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptCACbrRowStatusEntry.setStatus("mandatory")
_AtmIfVptCACbrRowStatus_Type = RowStatus
_AtmIfVptCACbrRowStatus_Object = MibTableColumn
atmIfVptCACbrRowStatus = _AtmIfVptCACbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 2, 1, 1, 1),
    _AtmIfVptCACbrRowStatus_Type()
)
atmIfVptCACbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCACbrRowStatus.setStatus("mandatory")
_AtmIfVptCACbrComponentName_Type = DisplayString
_AtmIfVptCACbrComponentName_Object = MibTableColumn
atmIfVptCACbrComponentName = _AtmIfVptCACbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 2, 1, 1, 2),
    _AtmIfVptCACbrComponentName_Type()
)
atmIfVptCACbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCACbrComponentName.setStatus("mandatory")
_AtmIfVptCACbrStorageType_Type = StorageType
_AtmIfVptCACbrStorageType_Object = MibTableColumn
atmIfVptCACbrStorageType = _AtmIfVptCACbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 2, 1, 1, 4),
    _AtmIfVptCACbrStorageType_Type()
)
atmIfVptCACbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCACbrStorageType.setStatus("mandatory")


class _AtmIfVptCACbrIndex_Type(Integer32):
    """Custom type atmIfVptCACbrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_AtmIfVptCACbrIndex_Type.__name__ = "Integer32"
_AtmIfVptCACbrIndex_Object = MibTableColumn
atmIfVptCACbrIndex = _AtmIfVptCACbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 2, 1, 1, 10),
    _AtmIfVptCACbrIndex_Type()
)
atmIfVptCACbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptCACbrIndex.setStatus("mandatory")
_AtmIfVptCACbrProvTable_Object = MibTable
atmIfVptCACbrProvTable = _AtmIfVptCACbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 2, 100)
)
if mibBuilder.loadTexts:
    atmIfVptCACbrProvTable.setStatus("mandatory")
_AtmIfVptCACbrProvEntry_Object = MibTableRow
atmIfVptCACbrProvEntry = _AtmIfVptCACbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 2, 100, 1)
)
atmIfVptCACbrProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCACbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptCACbrProvEntry.setStatus("mandatory")


class _AtmIfVptCACbrPool_Type(Integer32):
    """Custom type atmIfVptCACbrPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pool1", 1),
          ("pool2", 2),
          ("pool3", 3),
          ("pool4", 4),
          ("pool5", 5))
    )


_AtmIfVptCACbrPool_Type.__name__ = "Integer32"
_AtmIfVptCACbrPool_Object = MibTableColumn
atmIfVptCACbrPool = _AtmIfVptCACbrPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 2, 100, 1, 10),
    _AtmIfVptCACbrPool_Type()
)
atmIfVptCACbrPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCACbrPool.setStatus("mandatory")


class _AtmIfVptCACbrCdvt_Type(Unsigned32):
    """Custom type atmIfVptCACbrCdvt based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_AtmIfVptCACbrCdvt_Type.__name__ = "Unsigned32"
_AtmIfVptCACbrCdvt_Object = MibTableColumn
atmIfVptCACbrCdvt = _AtmIfVptCACbrCdvt_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 2, 100, 1, 20),
    _AtmIfVptCACbrCdvt_Type()
)
atmIfVptCACbrCdvt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCACbrCdvt.setStatus("mandatory")


class _AtmIfVptCACbrCdv_Type(Unsigned32):
    """Custom type atmIfVptCACbrCdv based on Unsigned32"""
    defaultValue = 250

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptCACbrCdv_Type.__name__ = "Unsigned32"
_AtmIfVptCACbrCdv_Object = MibTableColumn
atmIfVptCACbrCdv = _AtmIfVptCACbrCdv_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 2, 100, 1, 30),
    _AtmIfVptCACbrCdv_Type()
)
atmIfVptCACbrCdv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCACbrCdv.setStatus("mandatory")


class _AtmIfVptCACbrMaxCtd_Type(Unsigned32):
    """Custom type atmIfVptCACbrMaxCtd based on Unsigned32"""
    defaultValue = 1000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptCACbrMaxCtd_Type.__name__ = "Unsigned32"
_AtmIfVptCACbrMaxCtd_Object = MibTableColumn
atmIfVptCACbrMaxCtd = _AtmIfVptCACbrMaxCtd_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 2, 100, 1, 40),
    _AtmIfVptCACbrMaxCtd_Type()
)
atmIfVptCACbrMaxCtd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCACbrMaxCtd.setStatus("mandatory")


class _AtmIfVptCACbrCellLossRatio_Type(Unsigned32):
    """Custom type atmIfVptCACbrCellLossRatio based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_AtmIfVptCACbrCellLossRatio_Type.__name__ = "Unsigned32"
_AtmIfVptCACbrCellLossRatio_Object = MibTableColumn
atmIfVptCACbrCellLossRatio = _AtmIfVptCACbrCellLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 2, 100, 1, 50),
    _AtmIfVptCACbrCellLossRatio_Type()
)
atmIfVptCACbrCellLossRatio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCACbrCellLossRatio.setStatus("mandatory")
_AtmIfVptCARtVbr_ObjectIdentity = ObjectIdentity
atmIfVptCARtVbr = _AtmIfVptCARtVbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 3)
)
_AtmIfVptCARtVbrRowStatusTable_Object = MibTable
atmIfVptCARtVbrRowStatusTable = _AtmIfVptCARtVbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 3, 1)
)
if mibBuilder.loadTexts:
    atmIfVptCARtVbrRowStatusTable.setStatus("mandatory")
_AtmIfVptCARtVbrRowStatusEntry_Object = MibTableRow
atmIfVptCARtVbrRowStatusEntry = _AtmIfVptCARtVbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 3, 1, 1)
)
atmIfVptCARtVbrRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCARtVbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptCARtVbrRowStatusEntry.setStatus("mandatory")
_AtmIfVptCARtVbrRowStatus_Type = RowStatus
_AtmIfVptCARtVbrRowStatus_Object = MibTableColumn
atmIfVptCARtVbrRowStatus = _AtmIfVptCARtVbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 3, 1, 1, 1),
    _AtmIfVptCARtVbrRowStatus_Type()
)
atmIfVptCARtVbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCARtVbrRowStatus.setStatus("mandatory")
_AtmIfVptCARtVbrComponentName_Type = DisplayString
_AtmIfVptCARtVbrComponentName_Object = MibTableColumn
atmIfVptCARtVbrComponentName = _AtmIfVptCARtVbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 3, 1, 1, 2),
    _AtmIfVptCARtVbrComponentName_Type()
)
atmIfVptCARtVbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCARtVbrComponentName.setStatus("mandatory")
_AtmIfVptCARtVbrStorageType_Type = StorageType
_AtmIfVptCARtVbrStorageType_Object = MibTableColumn
atmIfVptCARtVbrStorageType = _AtmIfVptCARtVbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 3, 1, 1, 4),
    _AtmIfVptCARtVbrStorageType_Type()
)
atmIfVptCARtVbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCARtVbrStorageType.setStatus("mandatory")


class _AtmIfVptCARtVbrIndex_Type(Integer32):
    """Custom type atmIfVptCARtVbrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_AtmIfVptCARtVbrIndex_Type.__name__ = "Integer32"
_AtmIfVptCARtVbrIndex_Object = MibTableColumn
atmIfVptCARtVbrIndex = _AtmIfVptCARtVbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 3, 1, 1, 10),
    _AtmIfVptCARtVbrIndex_Type()
)
atmIfVptCARtVbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptCARtVbrIndex.setStatus("mandatory")
_AtmIfVptCARtVbrProvTable_Object = MibTable
atmIfVptCARtVbrProvTable = _AtmIfVptCARtVbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 3, 100)
)
if mibBuilder.loadTexts:
    atmIfVptCARtVbrProvTable.setStatus("mandatory")
_AtmIfVptCARtVbrProvEntry_Object = MibTableRow
atmIfVptCARtVbrProvEntry = _AtmIfVptCARtVbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 3, 100, 1)
)
atmIfVptCARtVbrProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCARtVbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptCARtVbrProvEntry.setStatus("mandatory")


class _AtmIfVptCARtVbrPool_Type(Integer32):
    """Custom type atmIfVptCARtVbrPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pool1", 1),
          ("pool2", 2),
          ("pool3", 3),
          ("pool4", 4),
          ("pool5", 5))
    )


_AtmIfVptCARtVbrPool_Type.__name__ = "Integer32"
_AtmIfVptCARtVbrPool_Object = MibTableColumn
atmIfVptCARtVbrPool = _AtmIfVptCARtVbrPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 3, 100, 1, 10),
    _AtmIfVptCARtVbrPool_Type()
)
atmIfVptCARtVbrPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCARtVbrPool.setStatus("mandatory")


class _AtmIfVptCARtVbrCdv_Type(Unsigned32):
    """Custom type atmIfVptCARtVbrCdv based on Unsigned32"""
    defaultValue = 1268

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptCARtVbrCdv_Type.__name__ = "Unsigned32"
_AtmIfVptCARtVbrCdv_Object = MibTableColumn
atmIfVptCARtVbrCdv = _AtmIfVptCARtVbrCdv_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 3, 100, 1, 30),
    _AtmIfVptCARtVbrCdv_Type()
)
atmIfVptCARtVbrCdv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCARtVbrCdv.setStatus("mandatory")


class _AtmIfVptCARtVbrMaxCtd_Type(Unsigned32):
    """Custom type atmIfVptCARtVbrMaxCtd based on Unsigned32"""
    defaultValue = 2000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptCARtVbrMaxCtd_Type.__name__ = "Unsigned32"
_AtmIfVptCARtVbrMaxCtd_Object = MibTableColumn
atmIfVptCARtVbrMaxCtd = _AtmIfVptCARtVbrMaxCtd_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 3, 100, 1, 40),
    _AtmIfVptCARtVbrMaxCtd_Type()
)
atmIfVptCARtVbrMaxCtd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCARtVbrMaxCtd.setStatus("mandatory")


class _AtmIfVptCARtVbrCellLossRatio_Type(Unsigned32):
    """Custom type atmIfVptCARtVbrCellLossRatio based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_AtmIfVptCARtVbrCellLossRatio_Type.__name__ = "Unsigned32"
_AtmIfVptCARtVbrCellLossRatio_Object = MibTableColumn
atmIfVptCARtVbrCellLossRatio = _AtmIfVptCARtVbrCellLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 3, 100, 1, 50),
    _AtmIfVptCARtVbrCellLossRatio_Type()
)
atmIfVptCARtVbrCellLossRatio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCARtVbrCellLossRatio.setStatus("mandatory")
_AtmIfVptCANrtVbr_ObjectIdentity = ObjectIdentity
atmIfVptCANrtVbr = _AtmIfVptCANrtVbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 4)
)
_AtmIfVptCANrtVbrRowStatusTable_Object = MibTable
atmIfVptCANrtVbrRowStatusTable = _AtmIfVptCANrtVbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 4, 1)
)
if mibBuilder.loadTexts:
    atmIfVptCANrtVbrRowStatusTable.setStatus("mandatory")
_AtmIfVptCANrtVbrRowStatusEntry_Object = MibTableRow
atmIfVptCANrtVbrRowStatusEntry = _AtmIfVptCANrtVbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 4, 1, 1)
)
atmIfVptCANrtVbrRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCANrtVbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptCANrtVbrRowStatusEntry.setStatus("mandatory")
_AtmIfVptCANrtVbrRowStatus_Type = RowStatus
_AtmIfVptCANrtVbrRowStatus_Object = MibTableColumn
atmIfVptCANrtVbrRowStatus = _AtmIfVptCANrtVbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 4, 1, 1, 1),
    _AtmIfVptCANrtVbrRowStatus_Type()
)
atmIfVptCANrtVbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCANrtVbrRowStatus.setStatus("mandatory")
_AtmIfVptCANrtVbrComponentName_Type = DisplayString
_AtmIfVptCANrtVbrComponentName_Object = MibTableColumn
atmIfVptCANrtVbrComponentName = _AtmIfVptCANrtVbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 4, 1, 1, 2),
    _AtmIfVptCANrtVbrComponentName_Type()
)
atmIfVptCANrtVbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCANrtVbrComponentName.setStatus("mandatory")
_AtmIfVptCANrtVbrStorageType_Type = StorageType
_AtmIfVptCANrtVbrStorageType_Object = MibTableColumn
atmIfVptCANrtVbrStorageType = _AtmIfVptCANrtVbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 4, 1, 1, 4),
    _AtmIfVptCANrtVbrStorageType_Type()
)
atmIfVptCANrtVbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCANrtVbrStorageType.setStatus("mandatory")


class _AtmIfVptCANrtVbrIndex_Type(Integer32):
    """Custom type atmIfVptCANrtVbrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_AtmIfVptCANrtVbrIndex_Type.__name__ = "Integer32"
_AtmIfVptCANrtVbrIndex_Object = MibTableColumn
atmIfVptCANrtVbrIndex = _AtmIfVptCANrtVbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 4, 1, 1, 10),
    _AtmIfVptCANrtVbrIndex_Type()
)
atmIfVptCANrtVbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptCANrtVbrIndex.setStatus("mandatory")
_AtmIfVptCANrtVbrProvTable_Object = MibTable
atmIfVptCANrtVbrProvTable = _AtmIfVptCANrtVbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 4, 100)
)
if mibBuilder.loadTexts:
    atmIfVptCANrtVbrProvTable.setStatus("mandatory")
_AtmIfVptCANrtVbrProvEntry_Object = MibTableRow
atmIfVptCANrtVbrProvEntry = _AtmIfVptCANrtVbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 4, 100, 1)
)
atmIfVptCANrtVbrProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCANrtVbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptCANrtVbrProvEntry.setStatus("mandatory")


class _AtmIfVptCANrtVbrPool_Type(Integer32):
    """Custom type atmIfVptCANrtVbrPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pool1", 1),
          ("pool2", 2),
          ("pool3", 3),
          ("pool4", 4),
          ("pool5", 5))
    )


_AtmIfVptCANrtVbrPool_Type.__name__ = "Integer32"
_AtmIfVptCANrtVbrPool_Object = MibTableColumn
atmIfVptCANrtVbrPool = _AtmIfVptCANrtVbrPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 4, 100, 1, 1),
    _AtmIfVptCANrtVbrPool_Type()
)
atmIfVptCANrtVbrPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCANrtVbrPool.setStatus("mandatory")


class _AtmIfVptCANrtVbrCellLossRatio_Type(Unsigned32):
    """Custom type atmIfVptCANrtVbrCellLossRatio based on Unsigned32"""
    defaultValue = 7

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_AtmIfVptCANrtVbrCellLossRatio_Type.__name__ = "Unsigned32"
_AtmIfVptCANrtVbrCellLossRatio_Object = MibTableColumn
atmIfVptCANrtVbrCellLossRatio = _AtmIfVptCANrtVbrCellLossRatio_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 4, 100, 1, 3),
    _AtmIfVptCANrtVbrCellLossRatio_Type()
)
atmIfVptCANrtVbrCellLossRatio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCANrtVbrCellLossRatio.setStatus("mandatory")
_AtmIfVptCAAbr_ObjectIdentity = ObjectIdentity
atmIfVptCAAbr = _AtmIfVptCAAbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 5)
)
_AtmIfVptCAAbrRowStatusTable_Object = MibTable
atmIfVptCAAbrRowStatusTable = _AtmIfVptCAAbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 5, 1)
)
if mibBuilder.loadTexts:
    atmIfVptCAAbrRowStatusTable.setStatus("mandatory")
_AtmIfVptCAAbrRowStatusEntry_Object = MibTableRow
atmIfVptCAAbrRowStatusEntry = _AtmIfVptCAAbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 5, 1, 1)
)
atmIfVptCAAbrRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAAbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptCAAbrRowStatusEntry.setStatus("mandatory")
_AtmIfVptCAAbrRowStatus_Type = RowStatus
_AtmIfVptCAAbrRowStatus_Object = MibTableColumn
atmIfVptCAAbrRowStatus = _AtmIfVptCAAbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 5, 1, 1, 1),
    _AtmIfVptCAAbrRowStatus_Type()
)
atmIfVptCAAbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCAAbrRowStatus.setStatus("mandatory")
_AtmIfVptCAAbrComponentName_Type = DisplayString
_AtmIfVptCAAbrComponentName_Object = MibTableColumn
atmIfVptCAAbrComponentName = _AtmIfVptCAAbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 5, 1, 1, 2),
    _AtmIfVptCAAbrComponentName_Type()
)
atmIfVptCAAbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCAAbrComponentName.setStatus("mandatory")
_AtmIfVptCAAbrStorageType_Type = StorageType
_AtmIfVptCAAbrStorageType_Object = MibTableColumn
atmIfVptCAAbrStorageType = _AtmIfVptCAAbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 5, 1, 1, 4),
    _AtmIfVptCAAbrStorageType_Type()
)
atmIfVptCAAbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCAAbrStorageType.setStatus("mandatory")


class _AtmIfVptCAAbrIndex_Type(Integer32):
    """Custom type atmIfVptCAAbrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_AtmIfVptCAAbrIndex_Type.__name__ = "Integer32"
_AtmIfVptCAAbrIndex_Object = MibTableColumn
atmIfVptCAAbrIndex = _AtmIfVptCAAbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 5, 1, 1, 10),
    _AtmIfVptCAAbrIndex_Type()
)
atmIfVptCAAbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptCAAbrIndex.setStatus("mandatory")
_AtmIfVptCAAbrProvTable_Object = MibTable
atmIfVptCAAbrProvTable = _AtmIfVptCAAbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 5, 100)
)
if mibBuilder.loadTexts:
    atmIfVptCAAbrProvTable.setStatus("mandatory")
_AtmIfVptCAAbrProvEntry_Object = MibTableRow
atmIfVptCAAbrProvEntry = _AtmIfVptCAAbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 5, 100, 1)
)
atmIfVptCAAbrProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAAbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptCAAbrProvEntry.setStatus("mandatory")


class _AtmIfVptCAAbrPool_Type(Integer32):
    """Custom type atmIfVptCAAbrPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pool1", 1),
          ("pool2", 2),
          ("pool3", 3),
          ("pool4", 4),
          ("pool5", 5))
    )


_AtmIfVptCAAbrPool_Type.__name__ = "Integer32"
_AtmIfVptCAAbrPool_Object = MibTableColumn
atmIfVptCAAbrPool = _AtmIfVptCAAbrPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 5, 100, 1, 10),
    _AtmIfVptCAAbrPool_Type()
)
atmIfVptCAAbrPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCAAbrPool.setStatus("mandatory")
_AtmIfVptCAUbr_ObjectIdentity = ObjectIdentity
atmIfVptCAUbr = _AtmIfVptCAUbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 6)
)
_AtmIfVptCAUbrRowStatusTable_Object = MibTable
atmIfVptCAUbrRowStatusTable = _AtmIfVptCAUbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 6, 1)
)
if mibBuilder.loadTexts:
    atmIfVptCAUbrRowStatusTable.setStatus("mandatory")
_AtmIfVptCAUbrRowStatusEntry_Object = MibTableRow
atmIfVptCAUbrRowStatusEntry = _AtmIfVptCAUbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 6, 1, 1)
)
atmIfVptCAUbrRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAUbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptCAUbrRowStatusEntry.setStatus("mandatory")
_AtmIfVptCAUbrRowStatus_Type = RowStatus
_AtmIfVptCAUbrRowStatus_Object = MibTableColumn
atmIfVptCAUbrRowStatus = _AtmIfVptCAUbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 6, 1, 1, 1),
    _AtmIfVptCAUbrRowStatus_Type()
)
atmIfVptCAUbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCAUbrRowStatus.setStatus("mandatory")
_AtmIfVptCAUbrComponentName_Type = DisplayString
_AtmIfVptCAUbrComponentName_Object = MibTableColumn
atmIfVptCAUbrComponentName = _AtmIfVptCAUbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 6, 1, 1, 2),
    _AtmIfVptCAUbrComponentName_Type()
)
atmIfVptCAUbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCAUbrComponentName.setStatus("mandatory")
_AtmIfVptCAUbrStorageType_Type = StorageType
_AtmIfVptCAUbrStorageType_Object = MibTableColumn
atmIfVptCAUbrStorageType = _AtmIfVptCAUbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 6, 1, 1, 4),
    _AtmIfVptCAUbrStorageType_Type()
)
atmIfVptCAUbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCAUbrStorageType.setStatus("mandatory")


class _AtmIfVptCAUbrIndex_Type(Integer32):
    """Custom type atmIfVptCAUbrIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_AtmIfVptCAUbrIndex_Type.__name__ = "Integer32"
_AtmIfVptCAUbrIndex_Object = MibTableColumn
atmIfVptCAUbrIndex = _AtmIfVptCAUbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 6, 1, 1, 10),
    _AtmIfVptCAUbrIndex_Type()
)
atmIfVptCAUbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptCAUbrIndex.setStatus("mandatory")
_AtmIfVptCAUbrProvTable_Object = MibTable
atmIfVptCAUbrProvTable = _AtmIfVptCAUbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 6, 100)
)
if mibBuilder.loadTexts:
    atmIfVptCAUbrProvTable.setStatus("mandatory")
_AtmIfVptCAUbrProvEntry_Object = MibTableRow
atmIfVptCAUbrProvEntry = _AtmIfVptCAUbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 6, 100, 1)
)
atmIfVptCAUbrProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAUbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptCAUbrProvEntry.setStatus("mandatory")


class _AtmIfVptCAUbrMaxVccs_Type(Unsigned32):
    """Custom type atmIfVptCAUbrMaxVccs based on Unsigned32"""
    defaultValue = 16385

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
        ValueRangeConstraint(16385, 16385),
    )


_AtmIfVptCAUbrMaxVccs_Type.__name__ = "Unsigned32"
_AtmIfVptCAUbrMaxVccs_Object = MibTableColumn
atmIfVptCAUbrMaxVccs = _AtmIfVptCAUbrMaxVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 6, 100, 1, 6),
    _AtmIfVptCAUbrMaxVccs_Type()
)
atmIfVptCAUbrMaxVccs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCAUbrMaxVccs.setStatus("mandatory")


class _AtmIfVptCAUbrPool_Type(Integer32):
    """Custom type atmIfVptCAUbrPool based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pool1", 1),
          ("pool2", 2),
          ("pool3", 3),
          ("pool4", 4),
          ("pool5", 5))
    )


_AtmIfVptCAUbrPool_Type.__name__ = "Integer32"
_AtmIfVptCAUbrPool_Object = MibTableColumn
atmIfVptCAUbrPool = _AtmIfVptCAUbrPool_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 6, 100, 1, 10),
    _AtmIfVptCAUbrPool_Type()
)
atmIfVptCAUbrPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCAUbrPool.setStatus("mandatory")


class _AtmIfVptCAUbrMinimumCellRate_Type(Unsigned32):
    """Custom type atmIfVptCAUbrMinimumCellRate based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptCAUbrMinimumCellRate_Type.__name__ = "Unsigned32"
_AtmIfVptCAUbrMinimumCellRate_Object = MibTableColumn
atmIfVptCAUbrMinimumCellRate = _AtmIfVptCAUbrMinimumCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 6, 100, 1, 11),
    _AtmIfVptCAUbrMinimumCellRate_Type()
)
atmIfVptCAUbrMinimumCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCAUbrMinimumCellRate.setStatus("mandatory")
_AtmIfVptCAUbrOperTable_Object = MibTable
atmIfVptCAUbrOperTable = _AtmIfVptCAUbrOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 6, 110)
)
if mibBuilder.loadTexts:
    atmIfVptCAUbrOperTable.setStatus("mandatory")
_AtmIfVptCAUbrOperEntry_Object = MibTableRow
atmIfVptCAUbrOperEntry = _AtmIfVptCAUbrOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 6, 110, 1)
)
atmIfVptCAUbrOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAUbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptCAUbrOperEntry.setStatus("mandatory")


class _AtmIfVptCAUbrVccUsage_Type(Unsigned32):
    """Custom type atmIfVptCAUbrVccUsage based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_AtmIfVptCAUbrVccUsage_Type.__name__ = "Unsigned32"
_AtmIfVptCAUbrVccUsage_Object = MibTableColumn
atmIfVptCAUbrVccUsage = _AtmIfVptCAUbrVccUsage_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 6, 110, 1, 12),
    _AtmIfVptCAUbrVccUsage_Type()
)
atmIfVptCAUbrVccUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCAUbrVccUsage.setStatus("mandatory")
_AtmIfVptCAProvTable_Object = MibTable
atmIfVptCAProvTable = _AtmIfVptCAProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 100)
)
if mibBuilder.loadTexts:
    atmIfVptCAProvTable.setStatus("mandatory")
_AtmIfVptCAProvEntry_Object = MibTableRow
atmIfVptCAProvEntry = _AtmIfVptCAProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 100, 1)
)
atmIfVptCAProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptCAProvEntry.setStatus("mandatory")


class _AtmIfVptCAMaxVccs_Type(Unsigned32):
    """Custom type atmIfVptCAMaxVccs based on Unsigned32"""
    defaultValue = 255

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_AtmIfVptCAMaxVccs_Type.__name__ = "Unsigned32"
_AtmIfVptCAMaxVccs_Object = MibTableColumn
atmIfVptCAMaxVccs = _AtmIfVptCAMaxVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 100, 1, 6),
    _AtmIfVptCAMaxVccs_Type()
)
atmIfVptCAMaxVccs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCAMaxVccs.setStatus("mandatory")


class _AtmIfVptCAPermittedAtmServiceCategories_Type(OctetString):
    """Custom type atmIfVptCAPermittedAtmServiceCategories based on OctetString"""
    defaultHexValue = "f0"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVptCAPermittedAtmServiceCategories_Type.__name__ = "OctetString"
_AtmIfVptCAPermittedAtmServiceCategories_Object = MibTableColumn
atmIfVptCAPermittedAtmServiceCategories = _AtmIfVptCAPermittedAtmServiceCategories_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 100, 1, 25),
    _AtmIfVptCAPermittedAtmServiceCategories_Type()
)
atmIfVptCAPermittedAtmServiceCategories.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCAPermittedAtmServiceCategories.setStatus("mandatory")
_AtmIfVptCAOperTable_Object = MibTable
atmIfVptCAOperTable = _AtmIfVptCAOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 110)
)
if mibBuilder.loadTexts:
    atmIfVptCAOperTable.setStatus("mandatory")
_AtmIfVptCAOperEntry_Object = MibTableRow
atmIfVptCAOperEntry = _AtmIfVptCAOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 110, 1)
)
atmIfVptCAOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptCAOperEntry.setStatus("mandatory")


class _AtmIfVptCAPermanentVccs_Type(Unsigned32):
    """Custom type atmIfVptCAPermanentVccs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_AtmIfVptCAPermanentVccs_Type.__name__ = "Unsigned32"
_AtmIfVptCAPermanentVccs_Object = MibTableColumn
atmIfVptCAPermanentVccs = _AtmIfVptCAPermanentVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 110, 1, 20),
    _AtmIfVptCAPermanentVccs_Type()
)
atmIfVptCAPermanentVccs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCAPermanentVccs.setStatus("mandatory")


class _AtmIfVptCASwitchedVccs_Type(Gauge32):
    """Custom type atmIfVptCASwitchedVccs based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_AtmIfVptCASwitchedVccs_Type.__name__ = "Gauge32"
_AtmIfVptCASwitchedVccs_Object = MibTableColumn
atmIfVptCASwitchedVccs = _AtmIfVptCASwitchedVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 110, 1, 30),
    _AtmIfVptCASwitchedVccs_Type()
)
atmIfVptCASwitchedVccs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCASwitchedVccs.setStatus("mandatory")


class _AtmIfVptCATroubledVccs_Type(Unsigned32):
    """Custom type atmIfVptCATroubledVccs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_AtmIfVptCATroubledVccs_Type.__name__ = "Unsigned32"
_AtmIfVptCATroubledVccs_Object = MibTableColumn
atmIfVptCATroubledVccs = _AtmIfVptCATroubledVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 110, 1, 70),
    _AtmIfVptCATroubledVccs_Type()
)
atmIfVptCATroubledVccs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCATroubledVccs.setStatus("mandatory")


class _AtmIfVptCAConnectionPoolUsage_Type(Gauge32):
    """Custom type atmIfVptCAConnectionPoolUsage based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10752),
    )


_AtmIfVptCAConnectionPoolUsage_Type.__name__ = "Gauge32"
_AtmIfVptCAConnectionPoolUsage_Object = MibTableColumn
atmIfVptCAConnectionPoolUsage = _AtmIfVptCAConnectionPoolUsage_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 110, 1, 81),
    _AtmIfVptCAConnectionPoolUsage_Type()
)
atmIfVptCAConnectionPoolUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCAConnectionPoolUsage.setStatus("mandatory")
_AtmIfVptCAPoolAvailBwTable_Object = MibTable
atmIfVptCAPoolAvailBwTable = _AtmIfVptCAPoolAvailBwTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 460)
)
if mibBuilder.loadTexts:
    atmIfVptCAPoolAvailBwTable.setStatus("mandatory")
_AtmIfVptCAPoolAvailBwEntry_Object = MibTableRow
atmIfVptCAPoolAvailBwEntry = _AtmIfVptCAPoolAvailBwEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 460, 1)
)
atmIfVptCAPoolAvailBwEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAPoolAvailBwIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptCAPoolAvailBwEntry.setStatus("mandatory")


class _AtmIfVptCAPoolAvailBwIndex_Type(Integer32):
    """Custom type atmIfVptCAPoolAvailBwIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVptCAPoolAvailBwIndex_Type.__name__ = "Integer32"
_AtmIfVptCAPoolAvailBwIndex_Object = MibTableColumn
atmIfVptCAPoolAvailBwIndex = _AtmIfVptCAPoolAvailBwIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 460, 1, 1),
    _AtmIfVptCAPoolAvailBwIndex_Type()
)
atmIfVptCAPoolAvailBwIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptCAPoolAvailBwIndex.setStatus("mandatory")


class _AtmIfVptCAPoolAvailBwValue_Type(Integer32):
    """Custom type atmIfVptCAPoolAvailBwValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptCAPoolAvailBwValue_Type.__name__ = "Integer32"
_AtmIfVptCAPoolAvailBwValue_Object = MibTableColumn
atmIfVptCAPoolAvailBwValue = _AtmIfVptCAPoolAvailBwValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 460, 1, 2),
    _AtmIfVptCAPoolAvailBwValue_Type()
)
atmIfVptCAPoolAvailBwValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCAPoolAvailBwValue.setStatus("mandatory")
_AtmIfVptCABwPoolTable_Object = MibTable
atmIfVptCABwPoolTable = _AtmIfVptCABwPoolTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 461)
)
if mibBuilder.loadTexts:
    atmIfVptCABwPoolTable.setStatus("mandatory")
_AtmIfVptCABwPoolEntry_Object = MibTableRow
atmIfVptCABwPoolEntry = _AtmIfVptCABwPoolEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 461, 1)
)
atmIfVptCABwPoolEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCABwPoolIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptCABwPoolEntry.setStatus("mandatory")


class _AtmIfVptCABwPoolIndex_Type(Integer32):
    """Custom type atmIfVptCABwPoolIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVptCABwPoolIndex_Type.__name__ = "Integer32"
_AtmIfVptCABwPoolIndex_Object = MibTableColumn
atmIfVptCABwPoolIndex = _AtmIfVptCABwPoolIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 461, 1, 1),
    _AtmIfVptCABwPoolIndex_Type()
)
atmIfVptCABwPoolIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptCABwPoolIndex.setStatus("mandatory")


class _AtmIfVptCABwPoolValue_Type(Unsigned32):
    """Custom type atmIfVptCABwPoolValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 12800),
    )


_AtmIfVptCABwPoolValue_Type.__name__ = "Unsigned32"
_AtmIfVptCABwPoolValue_Object = MibTableColumn
atmIfVptCABwPoolValue = _AtmIfVptCABwPoolValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 461, 1, 2),
    _AtmIfVptCABwPoolValue_Type()
)
atmIfVptCABwPoolValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptCABwPoolValue.setStatus("mandatory")
_AtmIfVptCAPoolProvBwTable_Object = MibTable
atmIfVptCAPoolProvBwTable = _AtmIfVptCAPoolProvBwTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 462)
)
if mibBuilder.loadTexts:
    atmIfVptCAPoolProvBwTable.setStatus("mandatory")
_AtmIfVptCAPoolProvBwEntry_Object = MibTableRow
atmIfVptCAPoolProvBwEntry = _AtmIfVptCAPoolProvBwEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 462, 1)
)
atmIfVptCAPoolProvBwEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAPoolProvBwIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptCAPoolProvBwEntry.setStatus("mandatory")


class _AtmIfVptCAPoolProvBwIndex_Type(Integer32):
    """Custom type atmIfVptCAPoolProvBwIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVptCAPoolProvBwIndex_Type.__name__ = "Integer32"
_AtmIfVptCAPoolProvBwIndex_Object = MibTableColumn
atmIfVptCAPoolProvBwIndex = _AtmIfVptCAPoolProvBwIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 462, 1, 1),
    _AtmIfVptCAPoolProvBwIndex_Type()
)
atmIfVptCAPoolProvBwIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptCAPoolProvBwIndex.setStatus("mandatory")


class _AtmIfVptCAPoolProvBwValue_Type(Gauge32):
    """Custom type atmIfVptCAPoolProvBwValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptCAPoolProvBwValue_Type.__name__ = "Gauge32"
_AtmIfVptCAPoolProvBwValue_Object = MibTableColumn
atmIfVptCAPoolProvBwValue = _AtmIfVptCAPoolProvBwValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 462, 1, 2),
    _AtmIfVptCAPoolProvBwValue_Type()
)
atmIfVptCAPoolProvBwValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCAPoolProvBwValue.setStatus("mandatory")
_AtmIfVptCAPoolRequBwTable_Object = MibTable
atmIfVptCAPoolRequBwTable = _AtmIfVptCAPoolRequBwTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 463)
)
if mibBuilder.loadTexts:
    atmIfVptCAPoolRequBwTable.setStatus("mandatory")
_AtmIfVptCAPoolRequBwEntry_Object = MibTableRow
atmIfVptCAPoolRequBwEntry = _AtmIfVptCAPoolRequBwEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 463, 1)
)
atmIfVptCAPoolRequBwEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAPoolRequBwIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptCAPoolRequBwEntry.setStatus("mandatory")


class _AtmIfVptCAPoolRequBwIndex_Type(Integer32):
    """Custom type atmIfVptCAPoolRequBwIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVptCAPoolRequBwIndex_Type.__name__ = "Integer32"
_AtmIfVptCAPoolRequBwIndex_Object = MibTableColumn
atmIfVptCAPoolRequBwIndex = _AtmIfVptCAPoolRequBwIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 463, 1, 1),
    _AtmIfVptCAPoolRequBwIndex_Type()
)
atmIfVptCAPoolRequBwIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptCAPoolRequBwIndex.setStatus("mandatory")


class _AtmIfVptCAPoolRequBwValue_Type(Gauge32):
    """Custom type atmIfVptCAPoolRequBwValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptCAPoolRequBwValue_Type.__name__ = "Gauge32"
_AtmIfVptCAPoolRequBwValue_Object = MibTableColumn
atmIfVptCAPoolRequBwValue = _AtmIfVptCAPoolRequBwValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 463, 1, 2),
    _AtmIfVptCAPoolRequBwValue_Type()
)
atmIfVptCAPoolRequBwValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCAPoolRequBwValue.setStatus("mandatory")
_AtmIfVptCAPoolAdmitBwTable_Object = MibTable
atmIfVptCAPoolAdmitBwTable = _AtmIfVptCAPoolAdmitBwTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 464)
)
if mibBuilder.loadTexts:
    atmIfVptCAPoolAdmitBwTable.setStatus("mandatory")
_AtmIfVptCAPoolAdmitBwEntry_Object = MibTableRow
atmIfVptCAPoolAdmitBwEntry = _AtmIfVptCAPoolAdmitBwEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 464, 1)
)
atmIfVptCAPoolAdmitBwEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAPoolAdmitBwIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptCAPoolAdmitBwEntry.setStatus("mandatory")


class _AtmIfVptCAPoolAdmitBwIndex_Type(Integer32):
    """Custom type atmIfVptCAPoolAdmitBwIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVptCAPoolAdmitBwIndex_Type.__name__ = "Integer32"
_AtmIfVptCAPoolAdmitBwIndex_Object = MibTableColumn
atmIfVptCAPoolAdmitBwIndex = _AtmIfVptCAPoolAdmitBwIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 464, 1, 1),
    _AtmIfVptCAPoolAdmitBwIndex_Type()
)
atmIfVptCAPoolAdmitBwIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptCAPoolAdmitBwIndex.setStatus("mandatory")


class _AtmIfVptCAPoolAdmitBwValue_Type(Gauge32):
    """Custom type atmIfVptCAPoolAdmitBwValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptCAPoolAdmitBwValue_Type.__name__ = "Gauge32"
_AtmIfVptCAPoolAdmitBwValue_Object = MibTableColumn
atmIfVptCAPoolAdmitBwValue = _AtmIfVptCAPoolAdmitBwValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 464, 1, 2),
    _AtmIfVptCAPoolAdmitBwValue_Type()
)
atmIfVptCAPoolAdmitBwValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCAPoolAdmitBwValue.setStatus("mandatory")
_AtmIfVptCAPoolAdmConnsTable_Object = MibTable
atmIfVptCAPoolAdmConnsTable = _AtmIfVptCAPoolAdmConnsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 465)
)
if mibBuilder.loadTexts:
    atmIfVptCAPoolAdmConnsTable.setStatus("mandatory")
_AtmIfVptCAPoolAdmConnsEntry_Object = MibTableRow
atmIfVptCAPoolAdmConnsEntry = _AtmIfVptCAPoolAdmConnsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 465, 1)
)
atmIfVptCAPoolAdmConnsEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAPoolAdmConnsIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptCAPoolAdmConnsEntry.setStatus("mandatory")


class _AtmIfVptCAPoolAdmConnsIndex_Type(Integer32):
    """Custom type atmIfVptCAPoolAdmConnsIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVptCAPoolAdmConnsIndex_Type.__name__ = "Integer32"
_AtmIfVptCAPoolAdmConnsIndex_Object = MibTableColumn
atmIfVptCAPoolAdmConnsIndex = _AtmIfVptCAPoolAdmConnsIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 465, 1, 1),
    _AtmIfVptCAPoolAdmConnsIndex_Type()
)
atmIfVptCAPoolAdmConnsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptCAPoolAdmConnsIndex.setStatus("mandatory")


class _AtmIfVptCAPoolAdmConnsValue_Type(Gauge32):
    """Custom type atmIfVptCAPoolAdmConnsValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_AtmIfVptCAPoolAdmConnsValue_Type.__name__ = "Gauge32"
_AtmIfVptCAPoolAdmConnsValue_Object = MibTableColumn
atmIfVptCAPoolAdmConnsValue = _AtmIfVptCAPoolAdmConnsValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 465, 1, 2),
    _AtmIfVptCAPoolAdmConnsValue_Type()
)
atmIfVptCAPoolAdmConnsValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCAPoolAdmConnsValue.setStatus("mandatory")
_AtmIfVptCAPoolWaitAdmConnsTable_Object = MibTable
atmIfVptCAPoolWaitAdmConnsTable = _AtmIfVptCAPoolWaitAdmConnsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 466)
)
if mibBuilder.loadTexts:
    atmIfVptCAPoolWaitAdmConnsTable.setStatus("mandatory")
_AtmIfVptCAPoolWaitAdmConnsEntry_Object = MibTableRow
atmIfVptCAPoolWaitAdmConnsEntry = _AtmIfVptCAPoolWaitAdmConnsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 466, 1)
)
atmIfVptCAPoolWaitAdmConnsEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptCAPoolWaitAdmConnsIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptCAPoolWaitAdmConnsEntry.setStatus("mandatory")


class _AtmIfVptCAPoolWaitAdmConnsIndex_Type(Integer32):
    """Custom type atmIfVptCAPoolWaitAdmConnsIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVptCAPoolWaitAdmConnsIndex_Type.__name__ = "Integer32"
_AtmIfVptCAPoolWaitAdmConnsIndex_Object = MibTableColumn
atmIfVptCAPoolWaitAdmConnsIndex = _AtmIfVptCAPoolWaitAdmConnsIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 466, 1, 1),
    _AtmIfVptCAPoolWaitAdmConnsIndex_Type()
)
atmIfVptCAPoolWaitAdmConnsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptCAPoolWaitAdmConnsIndex.setStatus("mandatory")


class _AtmIfVptCAPoolWaitAdmConnsValue_Type(Gauge32):
    """Custom type atmIfVptCAPoolWaitAdmConnsValue based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_AtmIfVptCAPoolWaitAdmConnsValue_Type.__name__ = "Gauge32"
_AtmIfVptCAPoolWaitAdmConnsValue_Object = MibTableColumn
atmIfVptCAPoolWaitAdmConnsValue = _AtmIfVptCAPoolWaitAdmConnsValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 5, 466, 1, 2),
    _AtmIfVptCAPoolWaitAdmConnsValue_Type()
)
atmIfVptCAPoolWaitAdmConnsValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptCAPoolWaitAdmConnsValue.setStatus("mandatory")
_AtmIfVptTm_ObjectIdentity = ObjectIdentity
atmIfVptTm = _AtmIfVptTm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9)
)
_AtmIfVptTmRowStatusTable_Object = MibTable
atmIfVptTmRowStatusTable = _AtmIfVptTmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 1)
)
if mibBuilder.loadTexts:
    atmIfVptTmRowStatusTable.setStatus("mandatory")
_AtmIfVptTmRowStatusEntry_Object = MibTableRow
atmIfVptTmRowStatusEntry = _AtmIfVptTmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 1, 1)
)
atmIfVptTmRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptTmIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptTmRowStatusEntry.setStatus("mandatory")
_AtmIfVptTmRowStatus_Type = RowStatus
_AtmIfVptTmRowStatus_Object = MibTableColumn
atmIfVptTmRowStatus = _AtmIfVptTmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 1, 1, 1),
    _AtmIfVptTmRowStatus_Type()
)
atmIfVptTmRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmRowStatus.setStatus("mandatory")
_AtmIfVptTmComponentName_Type = DisplayString
_AtmIfVptTmComponentName_Object = MibTableColumn
atmIfVptTmComponentName = _AtmIfVptTmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 1, 1, 2),
    _AtmIfVptTmComponentName_Type()
)
atmIfVptTmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmComponentName.setStatus("mandatory")
_AtmIfVptTmStorageType_Type = StorageType
_AtmIfVptTmStorageType_Object = MibTableColumn
atmIfVptTmStorageType = _AtmIfVptTmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 1, 1, 4),
    _AtmIfVptTmStorageType_Type()
)
atmIfVptTmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmStorageType.setStatus("mandatory")
_AtmIfVptTmIndex_Type = NonReplicated
_AtmIfVptTmIndex_Object = MibTableColumn
atmIfVptTmIndex = _AtmIfVptTmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 1, 1, 10),
    _AtmIfVptTmIndex_Type()
)
atmIfVptTmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptTmIndex.setStatus("mandatory")
_AtmIfVptTmAbr_ObjectIdentity = ObjectIdentity
atmIfVptTmAbr = _AtmIfVptTmAbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2)
)
_AtmIfVptTmAbrRowStatusTable_Object = MibTable
atmIfVptTmAbrRowStatusTable = _AtmIfVptTmAbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 1)
)
if mibBuilder.loadTexts:
    atmIfVptTmAbrRowStatusTable.setStatus("mandatory")
_AtmIfVptTmAbrRowStatusEntry_Object = MibTableRow
atmIfVptTmAbrRowStatusEntry = _AtmIfVptTmAbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 1, 1)
)
atmIfVptTmAbrRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptTmAbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptTmAbrRowStatusEntry.setStatus("mandatory")
_AtmIfVptTmAbrRowStatus_Type = RowStatus
_AtmIfVptTmAbrRowStatus_Object = MibTableColumn
atmIfVptTmAbrRowStatus = _AtmIfVptTmAbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 1, 1, 1),
    _AtmIfVptTmAbrRowStatus_Type()
)
atmIfVptTmAbrRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmAbrRowStatus.setStatus("mandatory")
_AtmIfVptTmAbrComponentName_Type = DisplayString
_AtmIfVptTmAbrComponentName_Object = MibTableColumn
atmIfVptTmAbrComponentName = _AtmIfVptTmAbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 1, 1, 2),
    _AtmIfVptTmAbrComponentName_Type()
)
atmIfVptTmAbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmAbrComponentName.setStatus("mandatory")
_AtmIfVptTmAbrStorageType_Type = StorageType
_AtmIfVptTmAbrStorageType_Object = MibTableColumn
atmIfVptTmAbrStorageType = _AtmIfVptTmAbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 1, 1, 4),
    _AtmIfVptTmAbrStorageType_Type()
)
atmIfVptTmAbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmAbrStorageType.setStatus("mandatory")
_AtmIfVptTmAbrIndex_Type = NonReplicated
_AtmIfVptTmAbrIndex_Object = MibTableColumn
atmIfVptTmAbrIndex = _AtmIfVptTmAbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 1, 1, 10),
    _AtmIfVptTmAbrIndex_Type()
)
atmIfVptTmAbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptTmAbrIndex.setStatus("mandatory")
_AtmIfVptTmAbrOperTable_Object = MibTable
atmIfVptTmAbrOperTable = _AtmIfVptTmAbrOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 110)
)
if mibBuilder.loadTexts:
    atmIfVptTmAbrOperTable.setStatus("mandatory")
_AtmIfVptTmAbrOperEntry_Object = MibTableRow
atmIfVptTmAbrOperEntry = _AtmIfVptTmAbrOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 110, 1)
)
atmIfVptTmAbrOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptTmAbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptTmAbrOperEntry.setStatus("mandatory")


class _AtmIfVptTmAbrInitialCellRate_Type(Unsigned32):
    """Custom type atmIfVptTmAbrInitialCellRate based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVptTmAbrInitialCellRate_Type.__name__ = "Unsigned32"
_AtmIfVptTmAbrInitialCellRate_Object = MibTableColumn
atmIfVptTmAbrInitialCellRate = _AtmIfVptTmAbrInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 110, 1, 10),
    _AtmIfVptTmAbrInitialCellRate_Type()
)
atmIfVptTmAbrInitialCellRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmAbrInitialCellRate.setStatus("mandatory")


class _AtmIfVptTmAbrTransientBufferExposure_Type(Unsigned32):
    """Custom type atmIfVptTmAbrTransientBufferExposure based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVptTmAbrTransientBufferExposure_Type.__name__ = "Unsigned32"
_AtmIfVptTmAbrTransientBufferExposure_Object = MibTableColumn
atmIfVptTmAbrTransientBufferExposure = _AtmIfVptTmAbrTransientBufferExposure_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 110, 1, 11),
    _AtmIfVptTmAbrTransientBufferExposure_Type()
)
atmIfVptTmAbrTransientBufferExposure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmAbrTransientBufferExposure.setStatus("mandatory")


class _AtmIfVptTmAbrFixedRoundTripTime_Type(Unsigned32):
    """Custom type atmIfVptTmAbrFixedRoundTripTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16700000),
    )


_AtmIfVptTmAbrFixedRoundTripTime_Type.__name__ = "Unsigned32"
_AtmIfVptTmAbrFixedRoundTripTime_Object = MibTableColumn
atmIfVptTmAbrFixedRoundTripTime = _AtmIfVptTmAbrFixedRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 110, 1, 12),
    _AtmIfVptTmAbrFixedRoundTripTime_Type()
)
atmIfVptTmAbrFixedRoundTripTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmAbrFixedRoundTripTime.setStatus("mandatory")


class _AtmIfVptTmAbrRateDecreaseFactor_Type(Unsigned32):
    """Custom type atmIfVptTmAbrRateDecreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_AtmIfVptTmAbrRateDecreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVptTmAbrRateDecreaseFactor_Object = MibTableColumn
atmIfVptTmAbrRateDecreaseFactor = _AtmIfVptTmAbrRateDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 110, 1, 13),
    _AtmIfVptTmAbrRateDecreaseFactor_Type()
)
atmIfVptTmAbrRateDecreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmAbrRateDecreaseFactor.setStatus("mandatory")


class _AtmIfVptTmAbrRateIncreaseFactor_Type(Unsigned32):
    """Custom type atmIfVptTmAbrRateIncreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_AtmIfVptTmAbrRateIncreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVptTmAbrRateIncreaseFactor_Object = MibTableColumn
atmIfVptTmAbrRateIncreaseFactor = _AtmIfVptTmAbrRateIncreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 110, 1, 14),
    _AtmIfVptTmAbrRateIncreaseFactor_Type()
)
atmIfVptTmAbrRateIncreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmAbrRateIncreaseFactor.setStatus("mandatory")


class _AtmIfVptTmAbrMaxCellPerRmCell_Type(Unsigned32):
    """Custom type atmIfVptTmAbrMaxCellPerRmCell based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
    )


_AtmIfVptTmAbrMaxCellPerRmCell_Type.__name__ = "Unsigned32"
_AtmIfVptTmAbrMaxCellPerRmCell_Object = MibTableColumn
atmIfVptTmAbrMaxCellPerRmCell = _AtmIfVptTmAbrMaxCellPerRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 110, 1, 15),
    _AtmIfVptTmAbrMaxCellPerRmCell_Type()
)
atmIfVptTmAbrMaxCellPerRmCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmAbrMaxCellPerRmCell.setStatus("mandatory")


class _AtmIfVptTmAbrMaxTimeBetweenRmCell_Type(Unsigned32):
    """Custom type atmIfVptTmAbrMaxTimeBetweenRmCell based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(781, 781),
        ValueRangeConstraint(1563, 1563),
        ValueRangeConstraint(3125, 3125),
        ValueRangeConstraint(6250, 6250),
        ValueRangeConstraint(12500, 12500),
        ValueRangeConstraint(25000, 25000),
        ValueRangeConstraint(50000, 50000),
        ValueRangeConstraint(100000, 100000),
    )


_AtmIfVptTmAbrMaxTimeBetweenRmCell_Type.__name__ = "Unsigned32"
_AtmIfVptTmAbrMaxTimeBetweenRmCell_Object = MibTableColumn
atmIfVptTmAbrMaxTimeBetweenRmCell = _AtmIfVptTmAbrMaxTimeBetweenRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 110, 1, 16),
    _AtmIfVptTmAbrMaxTimeBetweenRmCell_Type()
)
atmIfVptTmAbrMaxTimeBetweenRmCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmAbrMaxTimeBetweenRmCell.setStatus("mandatory")


class _AtmIfVptTmAbrCutoffDecreaseFactor_Type(Unsigned32):
    """Custom type atmIfVptTmAbrCutoffDecreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
    )


_AtmIfVptTmAbrCutoffDecreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVptTmAbrCutoffDecreaseFactor_Object = MibTableColumn
atmIfVptTmAbrCutoffDecreaseFactor = _AtmIfVptTmAbrCutoffDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 110, 1, 17),
    _AtmIfVptTmAbrCutoffDecreaseFactor_Type()
)
atmIfVptTmAbrCutoffDecreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmAbrCutoffDecreaseFactor.setStatus("mandatory")


class _AtmIfVptTmAbrAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type atmIfVptTmAbrAcrDecreaseTimeFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_AtmIfVptTmAbrAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_AtmIfVptTmAbrAcrDecreaseTimeFactor_Object = MibTableColumn
atmIfVptTmAbrAcrDecreaseTimeFactor = _AtmIfVptTmAbrAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 110, 1, 18),
    _AtmIfVptTmAbrAcrDecreaseTimeFactor_Type()
)
atmIfVptTmAbrAcrDecreaseTimeFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmAbrAcrDecreaseTimeFactor.setStatus("mandatory")


class _AtmIfVptTmAbrForwardRmCellLimit_Type(Unsigned32):
    """Custom type atmIfVptTmAbrForwardRmCellLimit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(3, 3),
        ValueRangeConstraint(7, 7),
        ValueRangeConstraint(15, 15),
        ValueRangeConstraint(31, 31),
        ValueRangeConstraint(63, 63),
        ValueRangeConstraint(127, 127),
        ValueRangeConstraint(255, 255),
        ValueRangeConstraint(511, 511),
        ValueRangeConstraint(1023, 1023),
        ValueRangeConstraint(2047, 2047),
        ValueRangeConstraint(4095, 4095),
    )


_AtmIfVptTmAbrForwardRmCellLimit_Type.__name__ = "Unsigned32"
_AtmIfVptTmAbrForwardRmCellLimit_Object = MibTableColumn
atmIfVptTmAbrForwardRmCellLimit = _AtmIfVptTmAbrForwardRmCellLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 110, 1, 19),
    _AtmIfVptTmAbrForwardRmCellLimit_Type()
)
atmIfVptTmAbrForwardRmCellLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmAbrForwardRmCellLimit.setStatus("mandatory")


class _AtmIfVptTmAbrTxRateChangeInfo_Type(Integer32):
    """Custom type atmIfVptTmAbrTxRateChangeInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("congestionIndicated", 0),
          ("explicitRateIndicated", 2),
          ("noIncreaseIndicated", 1))
    )


_AtmIfVptTmAbrTxRateChangeInfo_Type.__name__ = "Integer32"
_AtmIfVptTmAbrTxRateChangeInfo_Object = MibTableColumn
atmIfVptTmAbrTxRateChangeInfo = _AtmIfVptTmAbrTxRateChangeInfo_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 110, 1, 20),
    _AtmIfVptTmAbrTxRateChangeInfo_Type()
)
atmIfVptTmAbrTxRateChangeInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmAbrTxRateChangeInfo.setStatus("obsolete")


class _AtmIfVptTmAbrAcrRateChangeInfo_Type(Integer32):
    """Custom type atmIfVptTmAbrAcrRateChangeInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              15)
        )
    )
    namedValues = NamedValues(
        *(("decreasedByRdf", 1),
          ("increasedByRif", 2),
          ("noChange", 0),
          ("notApplicable", 15),
          ("setToExplicitRate", 3))
    )


_AtmIfVptTmAbrAcrRateChangeInfo_Type.__name__ = "Integer32"
_AtmIfVptTmAbrAcrRateChangeInfo_Object = MibTableColumn
atmIfVptTmAbrAcrRateChangeInfo = _AtmIfVptTmAbrAcrRateChangeInfo_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 110, 1, 21),
    _AtmIfVptTmAbrAcrRateChangeInfo_Type()
)
atmIfVptTmAbrAcrRateChangeInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmAbrAcrRateChangeInfo.setStatus("mandatory")


class _AtmIfVptTmAbrTxFwdRmCells_Type(Unsigned32):
    """Custom type atmIfVptTmAbrTxFwdRmCells based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmIfVptTmAbrTxFwdRmCells_Type.__name__ = "Unsigned32"
_AtmIfVptTmAbrTxFwdRmCells_Object = MibTableColumn
atmIfVptTmAbrTxFwdRmCells = _AtmIfVptTmAbrTxFwdRmCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 110, 1, 22),
    _AtmIfVptTmAbrTxFwdRmCells_Type()
)
atmIfVptTmAbrTxFwdRmCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmAbrTxFwdRmCells.setStatus("mandatory")


class _AtmIfVptTmAbrRxEfci_Type(Integer32):
    """Custom type atmIfVptTmAbrRxEfci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_AtmIfVptTmAbrRxEfci_Type.__name__ = "Integer32"
_AtmIfVptTmAbrRxEfci_Object = MibTableColumn
atmIfVptTmAbrRxEfci = _AtmIfVptTmAbrRxEfci_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 110, 1, 23),
    _AtmIfVptTmAbrRxEfci_Type()
)
atmIfVptTmAbrRxEfci.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmAbrRxEfci.setStatus("mandatory")


class _AtmIfVptTmAbrBrmRateChangeInfo_Type(OctetString):
    """Custom type atmIfVptTmAbrBrmRateChangeInfo based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVptTmAbrBrmRateChangeInfo_Type.__name__ = "OctetString"
_AtmIfVptTmAbrBrmRateChangeInfo_Object = MibTableColumn
atmIfVptTmAbrBrmRateChangeInfo = _AtmIfVptTmAbrBrmRateChangeInfo_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 110, 1, 24),
    _AtmIfVptTmAbrBrmRateChangeInfo_Type()
)
atmIfVptTmAbrBrmRateChangeInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmAbrBrmRateChangeInfo.setStatus("mandatory")


class _AtmIfVptTmAbrBrmExplicitRate_Type(Unsigned32):
    """Custom type atmIfVptTmAbrBrmExplicitRate based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVptTmAbrBrmExplicitRate_Type.__name__ = "Unsigned32"
_AtmIfVptTmAbrBrmExplicitRate_Object = MibTableColumn
atmIfVptTmAbrBrmExplicitRate = _AtmIfVptTmAbrBrmExplicitRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 2, 110, 1, 25),
    _AtmIfVptTmAbrBrmExplicitRate_Type()
)
atmIfVptTmAbrBrmExplicitRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmAbrBrmExplicitRate.setStatus("mandatory")
_AtmIfVptTmOperTable_Object = MibTable
atmIfVptTmOperTable = _AtmIfVptTmOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100)
)
if mibBuilder.loadTexts:
    atmIfVptTmOperTable.setStatus("mandatory")
_AtmIfVptTmOperEntry_Object = MibTableRow
atmIfVptTmOperEntry = _AtmIfVptTmOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1)
)
atmIfVptTmOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptTmIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptTmOperEntry.setStatus("mandatory")


class _AtmIfVptTmTxTrafficDescType_Type(Integer32):
    """Custom type atmIfVptTmTxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_AtmIfVptTmTxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVptTmTxTrafficDescType_Object = MibTableColumn
atmIfVptTmTxTrafficDescType = _AtmIfVptTmTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 10),
    _AtmIfVptTmTxTrafficDescType_Type()
)
atmIfVptTmTxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmTxTrafficDescType.setStatus("mandatory")


class _AtmIfVptTmTxQosClass_Type(Integer32):
    """Custom type atmIfVptTmTxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_AtmIfVptTmTxQosClass_Type.__name__ = "Integer32"
_AtmIfVptTmTxQosClass_Object = MibTableColumn
atmIfVptTmTxQosClass = _AtmIfVptTmTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 31),
    _AtmIfVptTmTxQosClass_Type()
)
atmIfVptTmTxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmTxQosClass.setStatus("mandatory")


class _AtmIfVptTmTxQueueLength_Type(Unsigned32):
    """Custom type atmIfVptTmTxQueueLength based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_AtmIfVptTmTxQueueLength_Type.__name__ = "Unsigned32"
_AtmIfVptTmTxQueueLength_Object = MibTableColumn
atmIfVptTmTxQueueLength = _AtmIfVptTmTxQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 32),
    _AtmIfVptTmTxQueueLength_Type()
)
atmIfVptTmTxQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmTxQueueLength.setStatus("mandatory")


class _AtmIfVptTmTxQueueCongestionState_Type(Unsigned32):
    """Custom type atmIfVptTmTxQueueCongestionState based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_AtmIfVptTmTxQueueCongestionState_Type.__name__ = "Unsigned32"
_AtmIfVptTmTxQueueCongestionState_Object = MibTableColumn
atmIfVptTmTxQueueCongestionState = _AtmIfVptTmTxQueueCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 33),
    _AtmIfVptTmTxQueueCongestionState_Type()
)
atmIfVptTmTxQueueCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmTxQueueCongestionState.setStatus("mandatory")


class _AtmIfVptTmHoldingPriority_Type(Integer32):
    """Custom type atmIfVptTmHoldingPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 6))
    )


_AtmIfVptTmHoldingPriority_Type.__name__ = "Integer32"
_AtmIfVptTmHoldingPriority_Object = MibTableColumn
atmIfVptTmHoldingPriority = _AtmIfVptTmHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 35),
    _AtmIfVptTmHoldingPriority_Type()
)
atmIfVptTmHoldingPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmHoldingPriority.setStatus("mandatory")


class _AtmIfVptTmRxTrafficDescType_Type(Integer32):
    """Custom type atmIfVptTmRxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_AtmIfVptTmRxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVptTmRxTrafficDescType_Object = MibTableColumn
atmIfVptTmRxTrafficDescType = _AtmIfVptTmRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 40),
    _AtmIfVptTmRxTrafficDescType_Type()
)
atmIfVptTmRxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmRxTrafficDescType.setStatus("mandatory")


class _AtmIfVptTmRxQosClass_Type(Integer32):
    """Custom type atmIfVptTmRxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_AtmIfVptTmRxQosClass_Type.__name__ = "Integer32"
_AtmIfVptTmRxQosClass_Object = MibTableColumn
atmIfVptTmRxQosClass = _AtmIfVptTmRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 61),
    _AtmIfVptTmRxQosClass_Type()
)
atmIfVptTmRxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmRxQosClass.setStatus("mandatory")


class _AtmIfVptTmAtmServiceCategory_Type(Integer32):
    """Custom type atmIfVptTmAtmServiceCategory based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("availableBitRate", 4),
          ("constantBitRate", 1),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_AtmIfVptTmAtmServiceCategory_Type.__name__ = "Integer32"
_AtmIfVptTmAtmServiceCategory_Object = MibTableColumn
atmIfVptTmAtmServiceCategory = _AtmIfVptTmAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 62),
    _AtmIfVptTmAtmServiceCategory_Type()
)
atmIfVptTmAtmServiceCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmAtmServiceCategory.setStatus("mandatory")


class _AtmIfVptTmTrafficShaping_Type(Integer32):
    """Custom type atmIfVptTmTrafficShaping based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("dynamic", 7),
          ("inverseUpc", 6),
          ("linear", 5),
          ("notApplicable", 4))
    )


_AtmIfVptTmTrafficShaping_Type.__name__ = "Integer32"
_AtmIfVptTmTrafficShaping_Object = MibTableColumn
atmIfVptTmTrafficShaping = _AtmIfVptTmTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 70),
    _AtmIfVptTmTrafficShaping_Type()
)
atmIfVptTmTrafficShaping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmTrafficShaping.setStatus("mandatory")


class _AtmIfVptTmBearerClassBbc_Type(Integer32):
    """Custom type atmIfVptTmBearerClassBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              30)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("notApplicable", 30),
          ("vp", 24),
          ("x", 16))
    )


_AtmIfVptTmBearerClassBbc_Type.__name__ = "Integer32"
_AtmIfVptTmBearerClassBbc_Object = MibTableColumn
atmIfVptTmBearerClassBbc = _AtmIfVptTmBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 71),
    _AtmIfVptTmBearerClassBbc_Type()
)
atmIfVptTmBearerClassBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmBearerClassBbc.setStatus("mandatory")


class _AtmIfVptTmTransferCapabilityBbc_Type(Integer32):
    """Custom type atmIfVptTmTransferCapabilityBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_AtmIfVptTmTransferCapabilityBbc_Type.__name__ = "Integer32"
_AtmIfVptTmTransferCapabilityBbc_Object = MibTableColumn
atmIfVptTmTransferCapabilityBbc = _AtmIfVptTmTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 72),
    _AtmIfVptTmTransferCapabilityBbc_Type()
)
atmIfVptTmTransferCapabilityBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmTransferCapabilityBbc.setStatus("mandatory")


class _AtmIfVptTmClippingBbc_Type(Integer32):
    """Custom type atmIfVptTmClippingBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("notApplicable", 14),
          ("yes", 1))
    )


_AtmIfVptTmClippingBbc_Type.__name__ = "Integer32"
_AtmIfVptTmClippingBbc_Object = MibTableColumn
atmIfVptTmClippingBbc = _AtmIfVptTmClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 74),
    _AtmIfVptTmClippingBbc_Type()
)
atmIfVptTmClippingBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmClippingBbc.setStatus("mandatory")


class _AtmIfVptTmUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfVptTmUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("fifo", 5),
          ("notApplicable", 4),
          ("perVc", 0))
    )


_AtmIfVptTmUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfVptTmUnshapedTransmitQueueing_Object = MibTableColumn
atmIfVptTmUnshapedTransmitQueueing = _AtmIfVptTmUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 75),
    _AtmIfVptTmUnshapedTransmitQueueing_Type()
)
atmIfVptTmUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmUnshapedTransmitQueueing.setStatus("mandatory")


class _AtmIfVptTmBestEffort_Type(Integer32):
    """Custom type atmIfVptTmBestEffort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 0),
          ("notApplicable", 14),
          ("notIndicated", 1))
    )


_AtmIfVptTmBestEffort_Type.__name__ = "Integer32"
_AtmIfVptTmBestEffort_Object = MibTableColumn
atmIfVptTmBestEffort = _AtmIfVptTmBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 76),
    _AtmIfVptTmBestEffort_Type()
)
atmIfVptTmBestEffort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmBestEffort.setStatus("mandatory")


class _AtmIfVptTmForceTagging_Type(Integer32):
    """Custom type atmIfVptTmForceTagging based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0))
    )


_AtmIfVptTmForceTagging_Type.__name__ = "Integer32"
_AtmIfVptTmForceTagging_Object = MibTableColumn
atmIfVptTmForceTagging = _AtmIfVptTmForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 78),
    _AtmIfVptTmForceTagging_Type()
)
atmIfVptTmForceTagging.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmForceTagging.setStatus("mandatory")


class _AtmIfVptTmWeight_Type(Unsigned32):
    """Custom type atmIfVptTmWeight based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(65534, 65534),
    )


_AtmIfVptTmWeight_Type.__name__ = "Unsigned32"
_AtmIfVptTmWeight_Object = MibTableColumn
atmIfVptTmWeight = _AtmIfVptTmWeight_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 79),
    _AtmIfVptTmWeight_Type()
)
atmIfVptTmWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmWeight.setStatus("mandatory")


class _AtmIfVptTmUsageParameterControl_Type(Integer32):
    """Custom type atmIfVptTmUsageParameterControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("abrEnforced", 6),
          ("abrMonitored", 5),
          ("disabled", 1),
          ("enforced", 0),
          ("monitored", 4),
          ("notApplicable", 3))
    )


_AtmIfVptTmUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfVptTmUsageParameterControl_Object = MibTableColumn
atmIfVptTmUsageParameterControl = _AtmIfVptTmUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 80),
    _AtmIfVptTmUsageParameterControl_Type()
)
atmIfVptTmUsageParameterControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmUsageParameterControl.setStatus("mandatory")


class _AtmIfVptTmTxPacketWiseDiscard_Type(OctetString):
    """Custom type atmIfVptTmTxPacketWiseDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVptTmTxPacketWiseDiscard_Type.__name__ = "OctetString"
_AtmIfVptTmTxPacketWiseDiscard_Object = MibTableColumn
atmIfVptTmTxPacketWiseDiscard = _AtmIfVptTmTxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 85),
    _AtmIfVptTmTxPacketWiseDiscard_Type()
)
atmIfVptTmTxPacketWiseDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmTxPacketWiseDiscard.setStatus("mandatory")


class _AtmIfVptTmRxPacketWiseDiscard_Type(OctetString):
    """Custom type atmIfVptTmRxPacketWiseDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVptTmRxPacketWiseDiscard_Type.__name__ = "OctetString"
_AtmIfVptTmRxPacketWiseDiscard_Object = MibTableColumn
atmIfVptTmRxPacketWiseDiscard = _AtmIfVptTmRxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 86),
    _AtmIfVptTmRxPacketWiseDiscard_Type()
)
atmIfVptTmRxPacketWiseDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmRxPacketWiseDiscard.setStatus("mandatory")


class _AtmIfVptTmBandwidthElastic_Type(Integer32):
    """Custom type atmIfVptTmBandwidthElastic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVptTmBandwidthElastic_Type.__name__ = "Integer32"
_AtmIfVptTmBandwidthElastic_Object = MibTableColumn
atmIfVptTmBandwidthElastic = _AtmIfVptTmBandwidthElastic_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 90),
    _AtmIfVptTmBandwidthElastic_Type()
)
atmIfVptTmBandwidthElastic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmBandwidthElastic.setStatus("mandatory")


class _AtmIfVptTmBandwidthReduction_Type(Unsigned32):
    """Custom type atmIfVptTmBandwidthReduction based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptTmBandwidthReduction_Type.__name__ = "Unsigned32"
_AtmIfVptTmBandwidthReduction_Object = MibTableColumn
atmIfVptTmBandwidthReduction = _AtmIfVptTmBandwidthReduction_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 100),
    _AtmIfVptTmBandwidthReduction_Type()
)
atmIfVptTmBandwidthReduction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmBandwidthReduction.setStatus("mandatory")


class _AtmIfVptTmAbrConnectionType_Type(Integer32):
    """Custom type atmIfVptTmAbrConnectionType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              15)
        )
    )
    namedValues = NamedValues(
        *(("efciSwitch", 2),
          ("erSwitch", 1),
          ("nonAbrInterworking", 5),
          ("notApplicable", 15),
          ("sourceDest", 4),
          ("virtualSourceDest", 3))
    )


_AtmIfVptTmAbrConnectionType_Type.__name__ = "Integer32"
_AtmIfVptTmAbrConnectionType_Object = MibTableColumn
atmIfVptTmAbrConnectionType = _AtmIfVptTmAbrConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 100, 1, 110),
    _AtmIfVptTmAbrConnectionType_Type()
)
atmIfVptTmAbrConnectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmAbrConnectionType.setStatus("mandatory")
_AtmIfVptTmTxTdpTable_Object = MibTable
atmIfVptTmTxTdpTable = _AtmIfVptTmTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 451)
)
if mibBuilder.loadTexts:
    atmIfVptTmTxTdpTable.setStatus("mandatory")
_AtmIfVptTmTxTdpEntry_Object = MibTableRow
atmIfVptTmTxTdpEntry = _AtmIfVptTmTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 451, 1)
)
atmIfVptTmTxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptTmTxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptTmTxTdpEntry.setStatus("mandatory")


class _AtmIfVptTmTxTdpIndex_Type(Integer32):
    """Custom type atmIfVptTmTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVptTmTxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVptTmTxTdpIndex_Object = MibTableColumn
atmIfVptTmTxTdpIndex = _AtmIfVptTmTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 451, 1, 1),
    _AtmIfVptTmTxTdpIndex_Type()
)
atmIfVptTmTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptTmTxTdpIndex.setStatus("mandatory")


class _AtmIfVptTmTxTdpValue_Type(Unsigned32):
    """Custom type atmIfVptTmTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptTmTxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVptTmTxTdpValue_Object = MibTableColumn
atmIfVptTmTxTdpValue = _AtmIfVptTmTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 451, 1, 2),
    _AtmIfVptTmTxTdpValue_Type()
)
atmIfVptTmTxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmTxTdpValue.setStatus("mandatory")
_AtmIfVptTmTxQThreshTable_Object = MibTable
atmIfVptTmTxQThreshTable = _AtmIfVptTmTxQThreshTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 452)
)
if mibBuilder.loadTexts:
    atmIfVptTmTxQThreshTable.setStatus("mandatory")
_AtmIfVptTmTxQThreshEntry_Object = MibTableRow
atmIfVptTmTxQThreshEntry = _AtmIfVptTmTxQThreshEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 452, 1)
)
atmIfVptTmTxQThreshEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptTmTxQThreshIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptTmTxQThreshEntry.setStatus("mandatory")


class _AtmIfVptTmTxQThreshIndex_Type(Integer32):
    """Custom type atmIfVptTmTxQThreshIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_AtmIfVptTmTxQThreshIndex_Type.__name__ = "Integer32"
_AtmIfVptTmTxQThreshIndex_Object = MibTableColumn
atmIfVptTmTxQThreshIndex = _AtmIfVptTmTxQThreshIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 452, 1, 1),
    _AtmIfVptTmTxQThreshIndex_Type()
)
atmIfVptTmTxQThreshIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptTmTxQThreshIndex.setStatus("mandatory")


class _AtmIfVptTmTxQThreshValue_Type(Unsigned32):
    """Custom type atmIfVptTmTxQThreshValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_AtmIfVptTmTxQThreshValue_Type.__name__ = "Unsigned32"
_AtmIfVptTmTxQThreshValue_Object = MibTableColumn
atmIfVptTmTxQThreshValue = _AtmIfVptTmTxQThreshValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 452, 1, 2),
    _AtmIfVptTmTxQThreshValue_Type()
)
atmIfVptTmTxQThreshValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmTxQThreshValue.setStatus("mandatory")
_AtmIfVptTmRxTdpTable_Object = MibTable
atmIfVptTmRxTdpTable = _AtmIfVptTmRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 453)
)
if mibBuilder.loadTexts:
    atmIfVptTmRxTdpTable.setStatus("mandatory")
_AtmIfVptTmRxTdpEntry_Object = MibTableRow
atmIfVptTmRxTdpEntry = _AtmIfVptTmRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 453, 1)
)
atmIfVptTmRxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptTmRxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptTmRxTdpEntry.setStatus("mandatory")


class _AtmIfVptTmRxTdpIndex_Type(Integer32):
    """Custom type atmIfVptTmRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_AtmIfVptTmRxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVptTmRxTdpIndex_Object = MibTableColumn
atmIfVptTmRxTdpIndex = _AtmIfVptTmRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 453, 1, 1),
    _AtmIfVptTmRxTdpIndex_Type()
)
atmIfVptTmRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptTmRxTdpIndex.setStatus("mandatory")


class _AtmIfVptTmRxTdpValue_Type(Unsigned32):
    """Custom type atmIfVptTmRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptTmRxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVptTmRxTdpValue_Object = MibTableColumn
atmIfVptTmRxTdpValue = _AtmIfVptTmRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 453, 1, 2),
    _AtmIfVptTmRxTdpValue_Type()
)
atmIfVptTmRxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmRxTdpValue.setStatus("mandatory")
_AtmIfVptTmTqpTable_Object = MibTable
atmIfVptTmTqpTable = _AtmIfVptTmTqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 454)
)
if mibBuilder.loadTexts:
    atmIfVptTmTqpTable.setStatus("mandatory")
_AtmIfVptTmTqpEntry_Object = MibTableRow
atmIfVptTmTqpEntry = _AtmIfVptTmTqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 454, 1)
)
atmIfVptTmTqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptTmTqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptTmTqpEntry.setStatus("mandatory")


class _AtmIfVptTmTqpIndex_Type(Integer32):
    """Custom type atmIfVptTmTqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVptTmTqpIndex_Type.__name__ = "Integer32"
_AtmIfVptTmTqpIndex_Object = MibTableColumn
atmIfVptTmTqpIndex = _AtmIfVptTmTqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 454, 1, 1),
    _AtmIfVptTmTqpIndex_Type()
)
atmIfVptTmTqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptTmTqpIndex.setStatus("mandatory")


class _AtmIfVptTmTqpValue_Type(Unsigned32):
    """Custom type atmIfVptTmTqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptTmTqpValue_Type.__name__ = "Unsigned32"
_AtmIfVptTmTqpValue_Object = MibTableColumn
atmIfVptTmTqpValue = _AtmIfVptTmTqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 454, 1, 2),
    _AtmIfVptTmTqpValue_Type()
)
atmIfVptTmTqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmTqpValue.setStatus("mandatory")
_AtmIfVptTmRqpTable_Object = MibTable
atmIfVptTmRqpTable = _AtmIfVptTmRqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 455)
)
if mibBuilder.loadTexts:
    atmIfVptTmRqpTable.setStatus("mandatory")
_AtmIfVptTmRqpEntry_Object = MibTableRow
atmIfVptTmRqpEntry = _AtmIfVptTmRqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 455, 1)
)
atmIfVptTmRqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptTmRqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptTmRqpEntry.setStatus("mandatory")


class _AtmIfVptTmRqpIndex_Type(Integer32):
    """Custom type atmIfVptTmRqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVptTmRqpIndex_Type.__name__ = "Integer32"
_AtmIfVptTmRqpIndex_Object = MibTableColumn
atmIfVptTmRqpIndex = _AtmIfVptTmRqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 455, 1, 1),
    _AtmIfVptTmRqpIndex_Type()
)
atmIfVptTmRqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptTmRqpIndex.setStatus("mandatory")


class _AtmIfVptTmRqpValue_Type(Unsigned32):
    """Custom type atmIfVptTmRqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptTmRqpValue_Type.__name__ = "Unsigned32"
_AtmIfVptTmRqpValue_Object = MibTableColumn
atmIfVptTmRqpValue = _AtmIfVptTmRqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 9, 455, 1, 2),
    _AtmIfVptTmRqpValue_Type()
)
atmIfVptTmRqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTmRqpValue.setStatus("mandatory")
_AtmIfVptVcc_ObjectIdentity = ObjectIdentity
atmIfVptVcc = _AtmIfVptVcc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20)
)
_AtmIfVptVccRowStatusTable_Object = MibTable
atmIfVptVccRowStatusTable = _AtmIfVptVccRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 1)
)
if mibBuilder.loadTexts:
    atmIfVptVccRowStatusTable.setStatus("mandatory")
_AtmIfVptVccRowStatusEntry_Object = MibTableRow
atmIfVptVccRowStatusEntry = _AtmIfVptVccRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 1, 1)
)
atmIfVptVccRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccRowStatusEntry.setStatus("mandatory")
_AtmIfVptVccRowStatus_Type = RowStatus
_AtmIfVptVccRowStatus_Object = MibTableColumn
atmIfVptVccRowStatus = _AtmIfVptVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 1, 1, 1),
    _AtmIfVptVccRowStatus_Type()
)
atmIfVptVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccRowStatus.setStatus("mandatory")
_AtmIfVptVccComponentName_Type = DisplayString
_AtmIfVptVccComponentName_Object = MibTableColumn
atmIfVptVccComponentName = _AtmIfVptVccComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 1, 1, 2),
    _AtmIfVptVccComponentName_Type()
)
atmIfVptVccComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccComponentName.setStatus("mandatory")
_AtmIfVptVccStorageType_Type = StorageType
_AtmIfVptVccStorageType_Object = MibTableColumn
atmIfVptVccStorageType = _AtmIfVptVccStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 1, 1, 4),
    _AtmIfVptVccStorageType_Type()
)
atmIfVptVccStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccStorageType.setStatus("mandatory")


class _AtmIfVptVccIndex_Type(Integer32):
    """Custom type atmIfVptVccIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmIfVptVccIndex_Type.__name__ = "Integer32"
_AtmIfVptVccIndex_Object = MibTableColumn
atmIfVptVccIndex = _AtmIfVptVccIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 1, 1, 10),
    _AtmIfVptVccIndex_Type()
)
atmIfVptVccIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccIndex.setStatus("mandatory")
_AtmIfVptVccVcd_ObjectIdentity = ObjectIdentity
atmIfVptVccVcd = _AtmIfVptVccVcd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2)
)
_AtmIfVptVccVcdRowStatusTable_Object = MibTable
atmIfVptVccVcdRowStatusTable = _AtmIfVptVccVcdRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 1)
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdRowStatusTable.setStatus("mandatory")
_AtmIfVptVccVcdRowStatusEntry_Object = MibTableRow
atmIfVptVccVcdRowStatusEntry = _AtmIfVptVccVcdRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 1, 1)
)
atmIfVptVccVcdRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdRowStatusEntry.setStatus("mandatory")
_AtmIfVptVccVcdRowStatus_Type = RowStatus
_AtmIfVptVccVcdRowStatus_Object = MibTableColumn
atmIfVptVccVcdRowStatus = _AtmIfVptVccVcdRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 1, 1, 1),
    _AtmIfVptVccVcdRowStatus_Type()
)
atmIfVptVccVcdRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccVcdRowStatus.setStatus("mandatory")
_AtmIfVptVccVcdComponentName_Type = DisplayString
_AtmIfVptVccVcdComponentName_Object = MibTableColumn
atmIfVptVccVcdComponentName = _AtmIfVptVccVcdComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 1, 1, 2),
    _AtmIfVptVccVcdComponentName_Type()
)
atmIfVptVccVcdComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccVcdComponentName.setStatus("mandatory")
_AtmIfVptVccVcdStorageType_Type = StorageType
_AtmIfVptVccVcdStorageType_Object = MibTableColumn
atmIfVptVccVcdStorageType = _AtmIfVptVccVcdStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 1, 1, 4),
    _AtmIfVptVccVcdStorageType_Type()
)
atmIfVptVccVcdStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccVcdStorageType.setStatus("mandatory")
_AtmIfVptVccVcdIndex_Type = NonReplicated
_AtmIfVptVccVcdIndex_Object = MibTableColumn
atmIfVptVccVcdIndex = _AtmIfVptVccVcdIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 1, 1, 10),
    _AtmIfVptVccVcdIndex_Type()
)
atmIfVptVccVcdIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccVcdIndex.setStatus("mandatory")
_AtmIfVptVccVcdTm_ObjectIdentity = ObjectIdentity
atmIfVptVccVcdTm = _AtmIfVptVccVcdTm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2)
)
_AtmIfVptVccVcdTmRowStatusTable_Object = MibTable
atmIfVptVccVcdTmRowStatusTable = _AtmIfVptVccVcdTmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 1)
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmRowStatusTable.setStatus("mandatory")
_AtmIfVptVccVcdTmRowStatusEntry_Object = MibTableRow
atmIfVptVccVcdTmRowStatusEntry = _AtmIfVptVccVcdTmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 1, 1)
)
atmIfVptVccVcdTmRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdTmIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmRowStatusEntry.setStatus("mandatory")
_AtmIfVptVccVcdTmRowStatus_Type = RowStatus
_AtmIfVptVccVcdTmRowStatus_Object = MibTableColumn
atmIfVptVccVcdTmRowStatus = _AtmIfVptVccVcdTmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 1, 1, 1),
    _AtmIfVptVccVcdTmRowStatus_Type()
)
atmIfVptVccVcdTmRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmRowStatus.setStatus("mandatory")
_AtmIfVptVccVcdTmComponentName_Type = DisplayString
_AtmIfVptVccVcdTmComponentName_Object = MibTableColumn
atmIfVptVccVcdTmComponentName = _AtmIfVptVccVcdTmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 1, 1, 2),
    _AtmIfVptVccVcdTmComponentName_Type()
)
atmIfVptVccVcdTmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmComponentName.setStatus("mandatory")
_AtmIfVptVccVcdTmStorageType_Type = StorageType
_AtmIfVptVccVcdTmStorageType_Object = MibTableColumn
atmIfVptVccVcdTmStorageType = _AtmIfVptVccVcdTmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 1, 1, 4),
    _AtmIfVptVccVcdTmStorageType_Type()
)
atmIfVptVccVcdTmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmStorageType.setStatus("mandatory")
_AtmIfVptVccVcdTmIndex_Type = NonReplicated
_AtmIfVptVccVcdTmIndex_Object = MibTableColumn
atmIfVptVccVcdTmIndex = _AtmIfVptVccVcdTmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 1, 1, 10),
    _AtmIfVptVccVcdTmIndex_Type()
)
atmIfVptVccVcdTmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmIndex.setStatus("mandatory")
_AtmIfVptVccVcdTmAbr_ObjectIdentity = ObjectIdentity
atmIfVptVccVcdTmAbr = _AtmIfVptVccVcdTmAbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2)
)
_AtmIfVptVccVcdTmAbrRowStatusTable_Object = MibTable
atmIfVptVccVcdTmAbrRowStatusTable = _AtmIfVptVccVcdTmAbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2, 1)
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrRowStatusTable.setStatus("mandatory")
_AtmIfVptVccVcdTmAbrRowStatusEntry_Object = MibTableRow
atmIfVptVccVcdTmAbrRowStatusEntry = _AtmIfVptVccVcdTmAbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2, 1, 1)
)
atmIfVptVccVcdTmAbrRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdTmAbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrRowStatusEntry.setStatus("mandatory")
_AtmIfVptVccVcdTmAbrRowStatus_Type = RowStatus
_AtmIfVptVccVcdTmAbrRowStatus_Object = MibTableColumn
atmIfVptVccVcdTmAbrRowStatus = _AtmIfVptVccVcdTmAbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2, 1, 1, 1),
    _AtmIfVptVccVcdTmAbrRowStatus_Type()
)
atmIfVptVccVcdTmAbrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrRowStatus.setStatus("mandatory")
_AtmIfVptVccVcdTmAbrComponentName_Type = DisplayString
_AtmIfVptVccVcdTmAbrComponentName_Object = MibTableColumn
atmIfVptVccVcdTmAbrComponentName = _AtmIfVptVccVcdTmAbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2, 1, 1, 2),
    _AtmIfVptVccVcdTmAbrComponentName_Type()
)
atmIfVptVccVcdTmAbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrComponentName.setStatus("mandatory")
_AtmIfVptVccVcdTmAbrStorageType_Type = StorageType
_AtmIfVptVccVcdTmAbrStorageType_Object = MibTableColumn
atmIfVptVccVcdTmAbrStorageType = _AtmIfVptVccVcdTmAbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2, 1, 1, 4),
    _AtmIfVptVccVcdTmAbrStorageType_Type()
)
atmIfVptVccVcdTmAbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrStorageType.setStatus("mandatory")
_AtmIfVptVccVcdTmAbrIndex_Type = NonReplicated
_AtmIfVptVccVcdTmAbrIndex_Object = MibTableColumn
atmIfVptVccVcdTmAbrIndex = _AtmIfVptVccVcdTmAbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2, 1, 1, 10),
    _AtmIfVptVccVcdTmAbrIndex_Type()
)
atmIfVptVccVcdTmAbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrIndex.setStatus("mandatory")
_AtmIfVptVccVcdTmAbrProvTable_Object = MibTable
atmIfVptVccVcdTmAbrProvTable = _AtmIfVptVccVcdTmAbrProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2, 110)
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrProvTable.setStatus("mandatory")
_AtmIfVptVccVcdTmAbrProvEntry_Object = MibTableRow
atmIfVptVccVcdTmAbrProvEntry = _AtmIfVptVccVcdTmAbrProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2, 110, 1)
)
atmIfVptVccVcdTmAbrProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdTmAbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrProvEntry.setStatus("mandatory")


class _AtmIfVptVccVcdTmAbrInitialCellRate_Type(Unsigned32):
    """Custom type atmIfVptVccVcdTmAbrInitialCellRate based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
        ValueRangeConstraint(16777216, 16777216),
        ValueRangeConstraint(16777217, 16777217),
        ValueRangeConstraint(16777218, 16777218),
    )


_AtmIfVptVccVcdTmAbrInitialCellRate_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdTmAbrInitialCellRate_Object = MibTableColumn
atmIfVptVccVcdTmAbrInitialCellRate = _AtmIfVptVccVcdTmAbrInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2, 110, 1, 10),
    _AtmIfVptVccVcdTmAbrInitialCellRate_Type()
)
atmIfVptVccVcdTmAbrInitialCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrInitialCellRate.setStatus("mandatory")


class _AtmIfVptVccVcdTmAbrTransientBufferExposure_Type(Unsigned32):
    """Custom type atmIfVptVccVcdTmAbrTransientBufferExposure based on Unsigned32"""
    defaultValue = 16777215

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVptVccVcdTmAbrTransientBufferExposure_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdTmAbrTransientBufferExposure_Object = MibTableColumn
atmIfVptVccVcdTmAbrTransientBufferExposure = _AtmIfVptVccVcdTmAbrTransientBufferExposure_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2, 110, 1, 11),
    _AtmIfVptVccVcdTmAbrTransientBufferExposure_Type()
)
atmIfVptVccVcdTmAbrTransientBufferExposure.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrTransientBufferExposure.setStatus("mandatory")


class _AtmIfVptVccVcdTmAbrFixedRoundTripTime_Type(Unsigned32):
    """Custom type atmIfVptVccVcdTmAbrFixedRoundTripTime based on Unsigned32"""
    defaultValue = 5000000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16700000),
    )


_AtmIfVptVccVcdTmAbrFixedRoundTripTime_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdTmAbrFixedRoundTripTime_Object = MibTableColumn
atmIfVptVccVcdTmAbrFixedRoundTripTime = _AtmIfVptVccVcdTmAbrFixedRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2, 110, 1, 12),
    _AtmIfVptVccVcdTmAbrFixedRoundTripTime_Type()
)
atmIfVptVccVcdTmAbrFixedRoundTripTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrFixedRoundTripTime.setStatus("mandatory")


class _AtmIfVptVccVcdTmAbrRateDecreaseFactor_Type(Unsigned32):
    """Custom type atmIfVptVccVcdTmAbrRateDecreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVptVccVcdTmAbrRateDecreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdTmAbrRateDecreaseFactor_Object = MibTableColumn
atmIfVptVccVcdTmAbrRateDecreaseFactor = _AtmIfVptVccVcdTmAbrRateDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2, 110, 1, 13),
    _AtmIfVptVccVcdTmAbrRateDecreaseFactor_Type()
)
atmIfVptVccVcdTmAbrRateDecreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrRateDecreaseFactor.setStatus("mandatory")


class _AtmIfVptVccVcdTmAbrRateIncreaseFactor_Type(Unsigned32):
    """Custom type atmIfVptVccVcdTmAbrRateIncreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVptVccVcdTmAbrRateIncreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdTmAbrRateIncreaseFactor_Object = MibTableColumn
atmIfVptVccVcdTmAbrRateIncreaseFactor = _AtmIfVptVccVcdTmAbrRateIncreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2, 110, 1, 14),
    _AtmIfVptVccVcdTmAbrRateIncreaseFactor_Type()
)
atmIfVptVccVcdTmAbrRateIncreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrRateIncreaseFactor.setStatus("mandatory")


class _AtmIfVptVccVcdTmAbrMaxCellPerRmCell_Type(Unsigned32):
    """Custom type atmIfVptVccVcdTmAbrMaxCellPerRmCell based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVptVccVcdTmAbrMaxCellPerRmCell_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdTmAbrMaxCellPerRmCell_Object = MibTableColumn
atmIfVptVccVcdTmAbrMaxCellPerRmCell = _AtmIfVptVccVcdTmAbrMaxCellPerRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2, 110, 1, 15),
    _AtmIfVptVccVcdTmAbrMaxCellPerRmCell_Type()
)
atmIfVptVccVcdTmAbrMaxCellPerRmCell.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrMaxCellPerRmCell.setStatus("mandatory")


class _AtmIfVptVccVcdTmAbrMaxTimeBetweenRmCells_Type(Unsigned32):
    """Custom type atmIfVptVccVcdTmAbrMaxTimeBetweenRmCells based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(781, 781),
        ValueRangeConstraint(1563, 1563),
        ValueRangeConstraint(3125, 3125),
        ValueRangeConstraint(6250, 6250),
        ValueRangeConstraint(12500, 12500),
        ValueRangeConstraint(25000, 25000),
        ValueRangeConstraint(50000, 50000),
        ValueRangeConstraint(100000, 100000),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVptVccVcdTmAbrMaxTimeBetweenRmCells_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdTmAbrMaxTimeBetweenRmCells_Object = MibTableColumn
atmIfVptVccVcdTmAbrMaxTimeBetweenRmCells = _AtmIfVptVccVcdTmAbrMaxTimeBetweenRmCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2, 110, 1, 16),
    _AtmIfVptVccVcdTmAbrMaxTimeBetweenRmCells_Type()
)
atmIfVptVccVcdTmAbrMaxTimeBetweenRmCells.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrMaxTimeBetweenRmCells.setStatus("mandatory")


class _AtmIfVptVccVcdTmAbrCutoffDecreaseFactor_Type(Unsigned32):
    """Custom type atmIfVptVccVcdTmAbrCutoffDecreaseFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVptVccVcdTmAbrCutoffDecreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdTmAbrCutoffDecreaseFactor_Object = MibTableColumn
atmIfVptVccVcdTmAbrCutoffDecreaseFactor = _AtmIfVptVccVcdTmAbrCutoffDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2, 110, 1, 17),
    _AtmIfVptVccVcdTmAbrCutoffDecreaseFactor_Type()
)
atmIfVptVccVcdTmAbrCutoffDecreaseFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrCutoffDecreaseFactor.setStatus("mandatory")


class _AtmIfVptVccVcdTmAbrAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type atmIfVptVccVcdTmAbrAcrDecreaseTimeFactor based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVptVccVcdTmAbrAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdTmAbrAcrDecreaseTimeFactor_Object = MibTableColumn
atmIfVptVccVcdTmAbrAcrDecreaseTimeFactor = _AtmIfVptVccVcdTmAbrAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2, 110, 1, 18),
    _AtmIfVptVccVcdTmAbrAcrDecreaseTimeFactor_Type()
)
atmIfVptVccVcdTmAbrAcrDecreaseTimeFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrAcrDecreaseTimeFactor.setStatus("mandatory")


class _AtmIfVptVccVcdTmAbrDgcraMaximumDelay_Type(Unsigned32):
    """Custom type atmIfVptVccVcdTmAbrDgcraMaximumDelay based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16700000),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVptVccVcdTmAbrDgcraMaximumDelay_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdTmAbrDgcraMaximumDelay_Object = MibTableColumn
atmIfVptVccVcdTmAbrDgcraMaximumDelay = _AtmIfVptVccVcdTmAbrDgcraMaximumDelay_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2, 110, 1, 19),
    _AtmIfVptVccVcdTmAbrDgcraMaximumDelay_Type()
)
atmIfVptVccVcdTmAbrDgcraMaximumDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrDgcraMaximumDelay.setStatus("mandatory")


class _AtmIfVptVccVcdTmAbrDgcraMinimumDelay_Type(Unsigned32):
    """Custom type atmIfVptVccVcdTmAbrDgcraMinimumDelay based on Unsigned32"""
    defaultValue = 16777216

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16700000),
        ValueRangeConstraint(16777216, 16777216),
    )


_AtmIfVptVccVcdTmAbrDgcraMinimumDelay_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdTmAbrDgcraMinimumDelay_Object = MibTableColumn
atmIfVptVccVcdTmAbrDgcraMinimumDelay = _AtmIfVptVccVcdTmAbrDgcraMinimumDelay_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2, 110, 1, 20),
    _AtmIfVptVccVcdTmAbrDgcraMinimumDelay_Type()
)
atmIfVptVccVcdTmAbrDgcraMinimumDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrDgcraMinimumDelay.setStatus("mandatory")


class _AtmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type atmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor based on Unsigned32"""
    defaultValue = 1024

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
        ValueRangeConstraint(1024, 1024),
    )


_AtmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor_Object = MibTableColumn
atmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor = _AtmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2, 110, 1, 21),
    _AtmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor_Type()
)
atmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor.setStatus("mandatory")


class _AtmIfVptVccVcdTmAbrFarEndInitialCellRate_Type(Unsigned32):
    """Custom type atmIfVptVccVcdTmAbrFarEndInitialCellRate based on Unsigned32"""
    defaultValue = 16777219

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
        ValueRangeConstraint(16777219, 16777219),
    )


_AtmIfVptVccVcdTmAbrFarEndInitialCellRate_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdTmAbrFarEndInitialCellRate_Object = MibTableColumn
atmIfVptVccVcdTmAbrFarEndInitialCellRate = _AtmIfVptVccVcdTmAbrFarEndInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 2, 110, 1, 22),
    _AtmIfVptVccVcdTmAbrFarEndInitialCellRate_Type()
)
atmIfVptVccVcdTmAbrFarEndInitialCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrFarEndInitialCellRate.setStatus("mandatory")
_AtmIfVptVccVcdTmProvTable_Object = MibTable
atmIfVptVccVcdTmProvTable = _AtmIfVptVccVcdTmProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100)
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmProvTable.setStatus("mandatory")
_AtmIfVptVccVcdTmProvEntry_Object = MibTableRow
atmIfVptVccVcdTmProvEntry = _AtmIfVptVccVcdTmProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1)
)
atmIfVptVccVcdTmProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdTmIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmProvEntry.setStatus("mandatory")


class _AtmIfVptVccVcdTmTxTrafficDescType_Type(Integer32):
    """Custom type atmIfVptVccVcdTmTxTrafficDescType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_AtmIfVptVccVcdTmTxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmTxTrafficDescType_Object = MibTableColumn
atmIfVptVccVcdTmTxTrafficDescType = _AtmIfVptVccVcdTmTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1, 10),
    _AtmIfVptVccVcdTmTxTrafficDescType_Type()
)
atmIfVptVccVcdTmTxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmTxTrafficDescType.setStatus("mandatory")


class _AtmIfVptVccVcdTmFwdQosClass_Type(Integer32):
    """Custom type atmIfVptVccVcdTmFwdQosClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfVptVccVcdTmFwdQosClass_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmFwdQosClass_Object = MibTableColumn
atmIfVptVccVcdTmFwdQosClass = _AtmIfVptVccVcdTmFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1, 21),
    _AtmIfVptVccVcdTmFwdQosClass_Type()
)
atmIfVptVccVcdTmFwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmFwdQosClass.setStatus("mandatory")


class _AtmIfVptVccVcdTmTxQueueLimit_Type(Unsigned32):
    """Custom type atmIfVptVccVcdTmTxQueueLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 63488),
    )


_AtmIfVptVccVcdTmTxQueueLimit_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdTmTxQueueLimit_Object = MibTableColumn
atmIfVptVccVcdTmTxQueueLimit = _AtmIfVptVccVcdTmTxQueueLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1, 22),
    _AtmIfVptVccVcdTmTxQueueLimit_Type()
)
atmIfVptVccVcdTmTxQueueLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmTxQueueLimit.setStatus("mandatory")


class _AtmIfVptVccVcdTmHoldingPriority_Type(Integer32):
    """Custom type atmIfVptVccVcdTmHoldingPriority based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfVptVccVcdTmHoldingPriority_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmHoldingPriority_Object = MibTableColumn
atmIfVptVccVcdTmHoldingPriority = _AtmIfVptVccVcdTmHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1, 25),
    _AtmIfVptVccVcdTmHoldingPriority_Type()
)
atmIfVptVccVcdTmHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmHoldingPriority.setStatus("mandatory")


class _AtmIfVptVccVcdTmRxTrafficDescType_Type(Integer32):
    """Custom type atmIfVptVccVcdTmRxTrafficDescType based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9),
          ("sameAsTx", 15))
    )


_AtmIfVptVccVcdTmRxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmRxTrafficDescType_Object = MibTableColumn
atmIfVptVccVcdTmRxTrafficDescType = _AtmIfVptVccVcdTmRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1, 30),
    _AtmIfVptVccVcdTmRxTrafficDescType_Type()
)
atmIfVptVccVcdTmRxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmRxTrafficDescType.setStatus("mandatory")


class _AtmIfVptVccVcdTmBwdQosClass_Type(Integer32):
    """Custom type atmIfVptVccVcdTmBwdQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("sameAsFwd", 15))
    )


_AtmIfVptVccVcdTmBwdQosClass_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmBwdQosClass_Object = MibTableColumn
atmIfVptVccVcdTmBwdQosClass = _AtmIfVptVccVcdTmBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1, 41),
    _AtmIfVptVccVcdTmBwdQosClass_Type()
)
atmIfVptVccVcdTmBwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmBwdQosClass.setStatus("mandatory")


class _AtmIfVptVccVcdTmAtmServiceCategory_Type(Integer32):
    """Custom type atmIfVptVccVcdTmAtmServiceCategory based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("availableBitRate", 4),
          ("constantBitRate", 1),
          ("derivedFromBBC", 15),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_AtmIfVptVccVcdTmAtmServiceCategory_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmAtmServiceCategory_Object = MibTableColumn
atmIfVptVccVcdTmAtmServiceCategory = _AtmIfVptVccVcdTmAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1, 42),
    _AtmIfVptVccVcdTmAtmServiceCategory_Type()
)
atmIfVptVccVcdTmAtmServiceCategory.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAtmServiceCategory.setStatus("mandatory")


class _AtmIfVptVccVcdTmTrafficShaping_Type(Integer32):
    """Custom type atmIfVptVccVcdTmTrafficShaping based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsCa", 2))
    )


_AtmIfVptVccVcdTmTrafficShaping_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmTrafficShaping_Object = MibTableColumn
atmIfVptVccVcdTmTrafficShaping = _AtmIfVptVccVcdTmTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1, 50),
    _AtmIfVptVccVcdTmTrafficShaping_Type()
)
atmIfVptVccVcdTmTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmTrafficShaping.setStatus("mandatory")


class _AtmIfVptVccVcdTmUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfVptVccVcdTmUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("sameAsCa", 3))
    )


_AtmIfVptVccVcdTmUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmUnshapedTransmitQueueing_Object = MibTableColumn
atmIfVptVccVcdTmUnshapedTransmitQueueing = _AtmIfVptVccVcdTmUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1, 60),
    _AtmIfVptVccVcdTmUnshapedTransmitQueueing_Type()
)
atmIfVptVccVcdTmUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmUnshapedTransmitQueueing.setStatus("mandatory")


class _AtmIfVptVccVcdTmWeight_Type(Unsigned32):
    """Custom type atmIfVptVccVcdTmWeight based on Unsigned32"""
    defaultValue = 65535

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(65535, 65535),
    )


_AtmIfVptVccVcdTmWeight_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdTmWeight_Object = MibTableColumn
atmIfVptVccVcdTmWeight = _AtmIfVptVccVcdTmWeight_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1, 61),
    _AtmIfVptVccVcdTmWeight_Type()
)
atmIfVptVccVcdTmWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmWeight.setStatus("mandatory")


class _AtmIfVptVccVcdTmForceTagging_Type(Integer32):
    """Custom type atmIfVptVccVcdTmForceTagging based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("sameAsCa", 2))
    )


_AtmIfVptVccVcdTmForceTagging_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmForceTagging_Object = MibTableColumn
atmIfVptVccVcdTmForceTagging = _AtmIfVptVccVcdTmForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1, 62),
    _AtmIfVptVccVcdTmForceTagging_Type()
)
atmIfVptVccVcdTmForceTagging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmForceTagging.setStatus("mandatory")


class _AtmIfVptVccVcdTmUsageParameterControl_Type(Integer32):
    """Custom type atmIfVptVccVcdTmUsageParameterControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enforced", 0),
          ("monitored", 4),
          ("sameAsCa", 2))
    )


_AtmIfVptVccVcdTmUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmUsageParameterControl_Object = MibTableColumn
atmIfVptVccVcdTmUsageParameterControl = _AtmIfVptVccVcdTmUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1, 70),
    _AtmIfVptVccVcdTmUsageParameterControl_Type()
)
atmIfVptVccVcdTmUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmUsageParameterControl.setStatus("mandatory")


class _AtmIfVptVccVcdTmBearerClassBbc_Type(Integer32):
    """Custom type atmIfVptVccVcdTmBearerClassBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              31)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("derivedFromServiceCategory", 31),
          ("vp", 24),
          ("x", 16))
    )


_AtmIfVptVccVcdTmBearerClassBbc_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmBearerClassBbc_Object = MibTableColumn
atmIfVptVccVcdTmBearerClassBbc = _AtmIfVptVccVcdTmBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1, 71),
    _AtmIfVptVccVcdTmBearerClassBbc_Type()
)
atmIfVptVccVcdTmBearerClassBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmBearerClassBbc.setStatus("mandatory")


class _AtmIfVptVccVcdTmTransferCapabilityBbc_Type(Integer32):
    """Custom type atmIfVptVccVcdTmTransferCapabilityBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 31),
          ("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_AtmIfVptVccVcdTmTransferCapabilityBbc_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmTransferCapabilityBbc_Object = MibTableColumn
atmIfVptVccVcdTmTransferCapabilityBbc = _AtmIfVptVccVcdTmTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1, 72),
    _AtmIfVptVccVcdTmTransferCapabilityBbc_Type()
)
atmIfVptVccVcdTmTransferCapabilityBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmTransferCapabilityBbc.setStatus("mandatory")


class _AtmIfVptVccVcdTmTxWredThreshold_Type(Unsigned32):
    """Custom type atmIfVptVccVcdTmTxWredThreshold based on Unsigned32"""
    defaultValue = 25

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(25, 25),
        ValueRangeConstraint(50, 50),
        ValueRangeConstraint(75, 75),
    )


_AtmIfVptVccVcdTmTxWredThreshold_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdTmTxWredThreshold_Object = MibTableColumn
atmIfVptVccVcdTmTxWredThreshold = _AtmIfVptVccVcdTmTxWredThreshold_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1, 73),
    _AtmIfVptVccVcdTmTxWredThreshold_Type()
)
atmIfVptVccVcdTmTxWredThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmTxWredThreshold.setStatus("mandatory")


class _AtmIfVptVccVcdTmClippingBbc_Type(Integer32):
    """Custom type atmIfVptVccVcdTmClippingBbc based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVptVccVcdTmClippingBbc_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmClippingBbc_Object = MibTableColumn
atmIfVptVccVcdTmClippingBbc = _AtmIfVptVccVcdTmClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1, 74),
    _AtmIfVptVccVcdTmClippingBbc_Type()
)
atmIfVptVccVcdTmClippingBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmClippingBbc.setStatus("mandatory")


class _AtmIfVptVccVcdTmBestEffort_Type(Integer32):
    """Custom type atmIfVptVccVcdTmBestEffort based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              15)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 15),
          ("indicated", 0),
          ("notIndicated", 1))
    )


_AtmIfVptVccVcdTmBestEffort_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmBestEffort_Object = MibTableColumn
atmIfVptVccVcdTmBestEffort = _AtmIfVptVccVcdTmBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1, 75),
    _AtmIfVptVccVcdTmBestEffort_Type()
)
atmIfVptVccVcdTmBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmBestEffort.setStatus("mandatory")


class _AtmIfVptVccVcdTmTxPacketWiseDiscard_Type(Integer32):
    """Custom type atmIfVptVccVcdTmTxPacketWiseDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_AtmIfVptVccVcdTmTxPacketWiseDiscard_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmTxPacketWiseDiscard_Object = MibTableColumn
atmIfVptVccVcdTmTxPacketWiseDiscard = _AtmIfVptVccVcdTmTxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1, 76),
    _AtmIfVptVccVcdTmTxPacketWiseDiscard_Type()
)
atmIfVptVccVcdTmTxPacketWiseDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmTxPacketWiseDiscard.setStatus("mandatory")


class _AtmIfVptVccVcdTmTxWredMode_Type(Integer32):
    """Custom type atmIfVptVccVcdTmTxWredMode based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1),
          ("perFlow", 2))
    )


_AtmIfVptVccVcdTmTxWredMode_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmTxWredMode_Object = MibTableColumn
atmIfVptVccVcdTmTxWredMode = _AtmIfVptVccVcdTmTxWredMode_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1, 77),
    _AtmIfVptVccVcdTmTxWredMode_Type()
)
atmIfVptVccVcdTmTxWredMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmTxWredMode.setStatus("mandatory")


class _AtmIfVptVccVcdTmRxPacketWiseDiscard_Type(Integer32):
    """Custom type atmIfVptVccVcdTmRxPacketWiseDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_AtmIfVptVccVcdTmRxPacketWiseDiscard_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmRxPacketWiseDiscard_Object = MibTableColumn
atmIfVptVccVcdTmRxPacketWiseDiscard = _AtmIfVptVccVcdTmRxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1, 78),
    _AtmIfVptVccVcdTmRxPacketWiseDiscard_Type()
)
atmIfVptVccVcdTmRxPacketWiseDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmRxPacketWiseDiscard.setStatus("mandatory")


class _AtmIfVptVccVcdTmAbrConnectionType_Type(Integer32):
    """Custom type atmIfVptVccVcdTmAbrConnectionType based on Integer32"""
    defaultValue = 14

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              3,
              4,
              5,
              14)
        )
    )
    namedValues = NamedValues(
        *(("abrSwitch", 0),
          ("nonAbrInterworking", 5),
          ("sameAsCa", 14),
          ("sourceDest", 4),
          ("virtualSourceDest", 3))
    )


_AtmIfVptVccVcdTmAbrConnectionType_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmAbrConnectionType_Object = MibTableColumn
atmIfVptVccVcdTmAbrConnectionType = _AtmIfVptVccVcdTmAbrConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 100, 1, 90),
    _AtmIfVptVccVcdTmAbrConnectionType_Type()
)
atmIfVptVccVcdTmAbrConnectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmAbrConnectionType.setStatus("mandatory")
_AtmIfVptVccVcdTmTxTdpTable_Object = MibTable
atmIfVptVccVcdTmTxTdpTable = _AtmIfVptVccVcdTmTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 456)
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmTxTdpTable.setStatus("mandatory")
_AtmIfVptVccVcdTmTxTdpEntry_Object = MibTableRow
atmIfVptVccVcdTmTxTdpEntry = _AtmIfVptVccVcdTmTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 456, 1)
)
atmIfVptVccVcdTmTxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdTmTxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmTxTdpEntry.setStatus("mandatory")


class _AtmIfVptVccVcdTmTxTdpIndex_Type(Integer32):
    """Custom type atmIfVptVccVcdTmTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVptVccVcdTmTxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmTxTdpIndex_Object = MibTableColumn
atmIfVptVccVcdTmTxTdpIndex = _AtmIfVptVccVcdTmTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 456, 1, 1),
    _AtmIfVptVccVcdTmTxTdpIndex_Type()
)
atmIfVptVccVcdTmTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmTxTdpIndex.setStatus("mandatory")


class _AtmIfVptVccVcdTmTxTdpValue_Type(Unsigned32):
    """Custom type atmIfVptVccVcdTmTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVccVcdTmTxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdTmTxTdpValue_Object = MibTableColumn
atmIfVptVccVcdTmTxTdpValue = _AtmIfVptVccVcdTmTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 456, 1, 2),
    _AtmIfVptVccVcdTmTxTdpValue_Type()
)
atmIfVptVccVcdTmTxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmTxTdpValue.setStatus("mandatory")
_AtmIfVptVccVcdTmRxTdpTable_Object = MibTable
atmIfVptVccVcdTmRxTdpTable = _AtmIfVptVccVcdTmRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 457)
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmRxTdpTable.setStatus("mandatory")
_AtmIfVptVccVcdTmRxTdpEntry_Object = MibTableRow
atmIfVptVccVcdTmRxTdpEntry = _AtmIfVptVccVcdTmRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 457, 1)
)
atmIfVptVccVcdTmRxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdTmRxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmRxTdpEntry.setStatus("mandatory")


class _AtmIfVptVccVcdTmRxTdpIndex_Type(Integer32):
    """Custom type atmIfVptVccVcdTmRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVptVccVcdTmRxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmRxTdpIndex_Object = MibTableColumn
atmIfVptVccVcdTmRxTdpIndex = _AtmIfVptVccVcdTmRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 457, 1, 1),
    _AtmIfVptVccVcdTmRxTdpIndex_Type()
)
atmIfVptVccVcdTmRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmRxTdpIndex.setStatus("mandatory")


class _AtmIfVptVccVcdTmRxTdpValue_Type(Unsigned32):
    """Custom type atmIfVptVccVcdTmRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVccVcdTmRxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdTmRxTdpValue_Object = MibTableColumn
atmIfVptVccVcdTmRxTdpValue = _AtmIfVptVccVcdTmRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 457, 1, 2),
    _AtmIfVptVccVcdTmRxTdpValue_Type()
)
atmIfVptVccVcdTmRxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmRxTdpValue.setStatus("mandatory")
_AtmIfVptVccVcdTmFqpTable_Object = MibTable
atmIfVptVccVcdTmFqpTable = _AtmIfVptVccVcdTmFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 458)
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmFqpTable.setStatus("mandatory")
_AtmIfVptVccVcdTmFqpEntry_Object = MibTableRow
atmIfVptVccVcdTmFqpEntry = _AtmIfVptVccVcdTmFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 458, 1)
)
atmIfVptVccVcdTmFqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdTmFqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmFqpEntry.setStatus("mandatory")


class _AtmIfVptVccVcdTmFqpIndex_Type(Integer32):
    """Custom type atmIfVptVccVcdTmFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVptVccVcdTmFqpIndex_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmFqpIndex_Object = MibTableColumn
atmIfVptVccVcdTmFqpIndex = _AtmIfVptVccVcdTmFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 458, 1, 1),
    _AtmIfVptVccVcdTmFqpIndex_Type()
)
atmIfVptVccVcdTmFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmFqpIndex.setStatus("mandatory")


class _AtmIfVptVccVcdTmFqpValue_Type(Unsigned32):
    """Custom type atmIfVptVccVcdTmFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVptVccVcdTmFqpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdTmFqpValue_Object = MibTableColumn
atmIfVptVccVcdTmFqpValue = _AtmIfVptVccVcdTmFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 458, 1, 2),
    _AtmIfVptVccVcdTmFqpValue_Type()
)
atmIfVptVccVcdTmFqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmFqpValue.setStatus("mandatory")
_AtmIfVptVccVcdTmBqpTable_Object = MibTable
atmIfVptVccVcdTmBqpTable = _AtmIfVptVccVcdTmBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 459)
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmBqpTable.setStatus("mandatory")
_AtmIfVptVccVcdTmBqpEntry_Object = MibTableRow
atmIfVptVccVcdTmBqpEntry = _AtmIfVptVccVcdTmBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 459, 1)
)
atmIfVptVccVcdTmBqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdTmBqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmBqpEntry.setStatus("mandatory")


class _AtmIfVptVccVcdTmBqpIndex_Type(Integer32):
    """Custom type atmIfVptVccVcdTmBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2))
    )


_AtmIfVptVccVcdTmBqpIndex_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTmBqpIndex_Object = MibTableColumn
atmIfVptVccVcdTmBqpIndex = _AtmIfVptVccVcdTmBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 459, 1, 1),
    _AtmIfVptVccVcdTmBqpIndex_Type()
)
atmIfVptVccVcdTmBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmBqpIndex.setStatus("mandatory")


class _AtmIfVptVccVcdTmBqpValue_Type(Unsigned32):
    """Custom type atmIfVptVccVcdTmBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVptVccVcdTmBqpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdTmBqpValue_Object = MibTableColumn
atmIfVptVccVcdTmBqpValue = _AtmIfVptVccVcdTmBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 2, 459, 1, 2),
    _AtmIfVptVccVcdTmBqpValue_Type()
)
atmIfVptVccVcdTmBqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTmBqpValue.setStatus("mandatory")
_AtmIfVptVccVcdLbkTable_Object = MibTable
atmIfVptVccVcdLbkTable = _AtmIfVptVccVcdLbkTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 100)
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdLbkTable.setStatus("mandatory")
_AtmIfVptVccVcdLbkEntry_Object = MibTableRow
atmIfVptVccVcdLbkEntry = _AtmIfVptVccVcdLbkEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 100, 1)
)
atmIfVptVccVcdLbkEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdLbkEntry.setStatus("mandatory")


class _AtmIfVptVccVcdSegLinkSideLoopback_Type(Integer32):
    """Custom type atmIfVptVccVcdSegLinkSideLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_AtmIfVptVccVcdSegLinkSideLoopback_Type.__name__ = "Integer32"
_AtmIfVptVccVcdSegLinkSideLoopback_Object = MibTableColumn
atmIfVptVccVcdSegLinkSideLoopback = _AtmIfVptVccVcdSegLinkSideLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 100, 1, 10),
    _AtmIfVptVccVcdSegLinkSideLoopback_Type()
)
atmIfVptVccVcdSegLinkSideLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdSegLinkSideLoopback.setStatus("mandatory")


class _AtmIfVptVccVcdSegSwitchSideLoopback_Type(Integer32):
    """Custom type atmIfVptVccVcdSegSwitchSideLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_AtmIfVptVccVcdSegSwitchSideLoopback_Type.__name__ = "Integer32"
_AtmIfVptVccVcdSegSwitchSideLoopback_Object = MibTableColumn
atmIfVptVccVcdSegSwitchSideLoopback = _AtmIfVptVccVcdSegSwitchSideLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 100, 1, 20),
    _AtmIfVptVccVcdSegSwitchSideLoopback_Type()
)
atmIfVptVccVcdSegSwitchSideLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdSegSwitchSideLoopback.setStatus("mandatory")


class _AtmIfVptVccVcdEndToEndLoopback_Type(Integer32):
    """Custom type atmIfVptVccVcdEndToEndLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_AtmIfVptVccVcdEndToEndLoopback_Type.__name__ = "Integer32"
_AtmIfVptVccVcdEndToEndLoopback_Object = MibTableColumn
atmIfVptVccVcdEndToEndLoopback = _AtmIfVptVccVcdEndToEndLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 100, 1, 30),
    _AtmIfVptVccVcdEndToEndLoopback_Type()
)
atmIfVptVccVcdEndToEndLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdEndToEndLoopback.setStatus("mandatory")


class _AtmIfVptVccVcdLoopbackMonitoring_Type(Integer32):
    """Custom type atmIfVptVccVcdLoopbackMonitoring based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0),
          ("sameAsInterface", 2))
    )


_AtmIfVptVccVcdLoopbackMonitoring_Type.__name__ = "Integer32"
_AtmIfVptVccVcdLoopbackMonitoring_Object = MibTableColumn
atmIfVptVccVcdLoopbackMonitoring = _AtmIfVptVccVcdLoopbackMonitoring_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 100, 1, 1000),
    _AtmIfVptVccVcdLoopbackMonitoring_Type()
)
atmIfVptVccVcdLoopbackMonitoring.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdLoopbackMonitoring.setStatus("mandatory")
_AtmIfVptVccVcdTrafficTable_Object = MibTable
atmIfVptVccVcdTrafficTable = _AtmIfVptVccVcdTrafficTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 110)
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdTrafficTable.setStatus("mandatory")
_AtmIfVptVccVcdTrafficEntry_Object = MibTableRow
atmIfVptVccVcdTrafficEntry = _AtmIfVptVccVcdTrafficEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 110, 1)
)
atmIfVptVccVcdTrafficEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdTrafficEntry.setStatus("mandatory")


class _AtmIfVptVccVcdTxTrafficDescType_Type(Integer32):
    """Custom type atmIfVptVccVcdTxTrafficDescType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_AtmIfVptVccVcdTxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTxTrafficDescType_Object = MibTableColumn
atmIfVptVccVcdTxTrafficDescType = _AtmIfVptVccVcdTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 110, 1, 10),
    _AtmIfVptVccVcdTxTrafficDescType_Type()
)
atmIfVptVccVcdTxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTxTrafficDescType.setStatus("obsolete")


class _AtmIfVptVccVcdTxQosClass_Type(Integer32):
    """Custom type atmIfVptVccVcdTxQosClass based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_AtmIfVptVccVcdTxQosClass_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTxQosClass_Object = MibTableColumn
atmIfVptVccVcdTxQosClass = _AtmIfVptVccVcdTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 110, 1, 20),
    _AtmIfVptVccVcdTxQosClass_Type()
)
atmIfVptVccVcdTxQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTxQosClass.setStatus("obsolete")


class _AtmIfVptVccVcdFwdQosClass_Type(Integer32):
    """Custom type atmIfVptVccVcdFwdQosClass based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfVptVccVcdFwdQosClass_Type.__name__ = "Integer32"
_AtmIfVptVccVcdFwdQosClass_Object = MibTableColumn
atmIfVptVccVcdFwdQosClass = _AtmIfVptVccVcdFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 110, 1, 21),
    _AtmIfVptVccVcdFwdQosClass_Type()
)
atmIfVptVccVcdFwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdFwdQosClass.setStatus("obsolete")


class _AtmIfVptVccVcdHoldingPriority_Type(Integer32):
    """Custom type atmIfVptVccVcdHoldingPriority based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4))
    )


_AtmIfVptVccVcdHoldingPriority_Type.__name__ = "Integer32"
_AtmIfVptVccVcdHoldingPriority_Object = MibTableColumn
atmIfVptVccVcdHoldingPriority = _AtmIfVptVccVcdHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 110, 1, 25),
    _AtmIfVptVccVcdHoldingPriority_Type()
)
atmIfVptVccVcdHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdHoldingPriority.setStatus("obsolete")


class _AtmIfVptVccVcdRxTrafficDescType_Type(Integer32):
    """Custom type atmIfVptVccVcdRxTrafficDescType based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("sameAsTx", 15))
    )


_AtmIfVptVccVcdRxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVptVccVcdRxTrafficDescType_Object = MibTableColumn
atmIfVptVccVcdRxTrafficDescType = _AtmIfVptVccVcdRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 110, 1, 30),
    _AtmIfVptVccVcdRxTrafficDescType_Type()
)
atmIfVptVccVcdRxTrafficDescType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdRxTrafficDescType.setStatus("obsolete")


class _AtmIfVptVccVcdRxQosClass_Type(Integer32):
    """Custom type atmIfVptVccVcdRxQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("sameAsTx", 15),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_AtmIfVptVccVcdRxQosClass_Type.__name__ = "Integer32"
_AtmIfVptVccVcdRxQosClass_Object = MibTableColumn
atmIfVptVccVcdRxQosClass = _AtmIfVptVccVcdRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 110, 1, 40),
    _AtmIfVptVccVcdRxQosClass_Type()
)
atmIfVptVccVcdRxQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdRxQosClass.setStatus("obsolete")


class _AtmIfVptVccVcdBwdQosClass_Type(Integer32):
    """Custom type atmIfVptVccVcdBwdQosClass based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              15)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("sameAsFwd", 15))
    )


_AtmIfVptVccVcdBwdQosClass_Type.__name__ = "Integer32"
_AtmIfVptVccVcdBwdQosClass_Object = MibTableColumn
atmIfVptVccVcdBwdQosClass = _AtmIfVptVccVcdBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 110, 1, 41),
    _AtmIfVptVccVcdBwdQosClass_Type()
)
atmIfVptVccVcdBwdQosClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdBwdQosClass.setStatus("obsolete")


class _AtmIfVptVccVcdAtmServiceCategory_Type(Integer32):
    """Custom type atmIfVptVccVcdAtmServiceCategory based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              15)
        )
    )
    namedValues = NamedValues(
        *(("constantBitRate", 1),
          ("derivedFromBBC", 15),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_AtmIfVptVccVcdAtmServiceCategory_Type.__name__ = "Integer32"
_AtmIfVptVccVcdAtmServiceCategory_Object = MibTableColumn
atmIfVptVccVcdAtmServiceCategory = _AtmIfVptVccVcdAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 110, 1, 42),
    _AtmIfVptVccVcdAtmServiceCategory_Type()
)
atmIfVptVccVcdAtmServiceCategory.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdAtmServiceCategory.setStatus("obsolete")


class _AtmIfVptVccVcdTrafficShaping_Type(Integer32):
    """Custom type atmIfVptVccVcdTrafficShaping based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsInterface", 2))
    )


_AtmIfVptVccVcdTrafficShaping_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTrafficShaping_Object = MibTableColumn
atmIfVptVccVcdTrafficShaping = _AtmIfVptVccVcdTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 110, 1, 50),
    _AtmIfVptVccVcdTrafficShaping_Type()
)
atmIfVptVccVcdTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTrafficShaping.setStatus("obsolete")


class _AtmIfVptVccVcdUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfVptVccVcdUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("sameAsInterface", 3))
    )


_AtmIfVptVccVcdUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfVptVccVcdUnshapedTransmitQueueing_Object = MibTableColumn
atmIfVptVccVcdUnshapedTransmitQueueing = _AtmIfVptVccVcdUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 110, 1, 60),
    _AtmIfVptVccVcdUnshapedTransmitQueueing_Type()
)
atmIfVptVccVcdUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdUnshapedTransmitQueueing.setStatus("obsolete")


class _AtmIfVptVccVcdUsageParameterControl_Type(Integer32):
    """Custom type atmIfVptVccVcdUsageParameterControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("sameAsInterface", 2))
    )


_AtmIfVptVccVcdUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfVptVccVcdUsageParameterControl_Object = MibTableColumn
atmIfVptVccVcdUsageParameterControl = _AtmIfVptVccVcdUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 110, 1, 70),
    _AtmIfVptVccVcdUsageParameterControl_Type()
)
atmIfVptVccVcdUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdUsageParameterControl.setStatus("obsolete")


class _AtmIfVptVccVcdBearerClassBbc_Type(Integer32):
    """Custom type atmIfVptVccVcdBearerClassBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              31)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("derivedFromServiceCategory", 31),
          ("vp", 24),
          ("x", 16))
    )


_AtmIfVptVccVcdBearerClassBbc_Type.__name__ = "Integer32"
_AtmIfVptVccVcdBearerClassBbc_Object = MibTableColumn
atmIfVptVccVcdBearerClassBbc = _AtmIfVptVccVcdBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 110, 1, 71),
    _AtmIfVptVccVcdBearerClassBbc_Type()
)
atmIfVptVccVcdBearerClassBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdBearerClassBbc.setStatus("obsolete")


class _AtmIfVptVccVcdTransferCapabilityBbc_Type(Integer32):
    """Custom type atmIfVptVccVcdTransferCapabilityBbc based on Integer32"""
    defaultValue = 31

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 31),
          ("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_AtmIfVptVccVcdTransferCapabilityBbc_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTransferCapabilityBbc_Object = MibTableColumn
atmIfVptVccVcdTransferCapabilityBbc = _AtmIfVptVccVcdTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 110, 1, 72),
    _AtmIfVptVccVcdTransferCapabilityBbc_Type()
)
atmIfVptVccVcdTransferCapabilityBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTransferCapabilityBbc.setStatus("obsolete")


class _AtmIfVptVccVcdClippingBbc_Type(Integer32):
    """Custom type atmIfVptVccVcdClippingBbc based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVptVccVcdClippingBbc_Type.__name__ = "Integer32"
_AtmIfVptVccVcdClippingBbc_Object = MibTableColumn
atmIfVptVccVcdClippingBbc = _AtmIfVptVccVcdClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 110, 1, 74),
    _AtmIfVptVccVcdClippingBbc_Type()
)
atmIfVptVccVcdClippingBbc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdClippingBbc.setStatus("obsolete")


class _AtmIfVptVccVcdBestEffort_Type(Integer32):
    """Custom type atmIfVptVccVcdBestEffort based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              15)
        )
    )
    namedValues = NamedValues(
        *(("derivedFromServiceCategory", 15),
          ("indicated", 0),
          ("notIndicated", 1))
    )


_AtmIfVptVccVcdBestEffort_Type.__name__ = "Integer32"
_AtmIfVptVccVcdBestEffort_Object = MibTableColumn
atmIfVptVccVcdBestEffort = _AtmIfVptVccVcdBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 110, 1, 75),
    _AtmIfVptVccVcdBestEffort_Type()
)
atmIfVptVccVcdBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdBestEffort.setStatus("obsolete")


class _AtmIfVptVccVcdFwdFrameDiscard_Type(Integer32):
    """Custom type atmIfVptVccVcdFwdFrameDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_AtmIfVptVccVcdFwdFrameDiscard_Type.__name__ = "Integer32"
_AtmIfVptVccVcdFwdFrameDiscard_Object = MibTableColumn
atmIfVptVccVcdFwdFrameDiscard = _AtmIfVptVccVcdFwdFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 110, 1, 76),
    _AtmIfVptVccVcdFwdFrameDiscard_Type()
)
atmIfVptVccVcdFwdFrameDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdFwdFrameDiscard.setStatus("obsolete")


class _AtmIfVptVccVcdBwdFrameDiscard_Type(Integer32):
    """Custom type atmIfVptVccVcdBwdFrameDiscard based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_AtmIfVptVccVcdBwdFrameDiscard_Type.__name__ = "Integer32"
_AtmIfVptVccVcdBwdFrameDiscard_Object = MibTableColumn
atmIfVptVccVcdBwdFrameDiscard = _AtmIfVptVccVcdBwdFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 110, 1, 77),
    _AtmIfVptVccVcdBwdFrameDiscard_Type()
)
atmIfVptVccVcdBwdFrameDiscard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdBwdFrameDiscard.setStatus("obsolete")
_AtmIfVptVccVcdAcctTable_Object = MibTable
atmIfVptVccVcdAcctTable = _AtmIfVptVccVcdAcctTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 111)
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdAcctTable.setStatus("mandatory")
_AtmIfVptVccVcdAcctEntry_Object = MibTableRow
atmIfVptVccVcdAcctEntry = _AtmIfVptVccVcdAcctEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 111, 1)
)
atmIfVptVccVcdAcctEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdAcctEntry.setStatus("mandatory")


class _AtmIfVptVccVcdCorrelationTag_Type(AsciiString):
    """Custom type atmIfVptVccVcdCorrelationTag based on AsciiString"""
    defaultHexValue = ""

    subtypeSpec = AsciiString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_AtmIfVptVccVcdCorrelationTag_Type.__name__ = "AsciiString"
_AtmIfVptVccVcdCorrelationTag_Object = MibTableColumn
atmIfVptVccVcdCorrelationTag = _AtmIfVptVccVcdCorrelationTag_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 111, 1, 10),
    _AtmIfVptVccVcdCorrelationTag_Type()
)
atmIfVptVccVcdCorrelationTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdCorrelationTag.setStatus("mandatory")
_AtmIfVptVccVcdTxTdpTable_Object = MibTable
atmIfVptVccVcdTxTdpTable = _AtmIfVptVccVcdTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 297)
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdTxTdpTable.setStatus("obsolete")
_AtmIfVptVccVcdTxTdpEntry_Object = MibTableRow
atmIfVptVccVcdTxTdpEntry = _AtmIfVptVccVcdTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 297, 1)
)
atmIfVptVccVcdTxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdTxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdTxTdpEntry.setStatus("obsolete")


class _AtmIfVptVccVcdTxTdpIndex_Type(Integer32):
    """Custom type atmIfVptVccVcdTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVptVccVcdTxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVptVccVcdTxTdpIndex_Object = MibTableColumn
atmIfVptVccVcdTxTdpIndex = _AtmIfVptVccVcdTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 297, 1, 1),
    _AtmIfVptVccVcdTxTdpIndex_Type()
)
atmIfVptVccVcdTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTxTdpIndex.setStatus("obsolete")


class _AtmIfVptVccVcdTxTdpValue_Type(Unsigned32):
    """Custom type atmIfVptVccVcdTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVccVcdTxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdTxTdpValue_Object = MibTableColumn
atmIfVptVccVcdTxTdpValue = _AtmIfVptVccVcdTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 297, 1, 2),
    _AtmIfVptVccVcdTxTdpValue_Type()
)
atmIfVptVccVcdTxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdTxTdpValue.setStatus("obsolete")
_AtmIfVptVccVcdRxTdpTable_Object = MibTable
atmIfVptVccVcdRxTdpTable = _AtmIfVptVccVcdRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 298)
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdRxTdpTable.setStatus("obsolete")
_AtmIfVptVccVcdRxTdpEntry_Object = MibTableRow
atmIfVptVccVcdRxTdpEntry = _AtmIfVptVccVcdRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 298, 1)
)
atmIfVptVccVcdRxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdRxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdRxTdpEntry.setStatus("obsolete")


class _AtmIfVptVccVcdRxTdpIndex_Type(Integer32):
    """Custom type atmIfVptVccVcdRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVptVccVcdRxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVptVccVcdRxTdpIndex_Object = MibTableColumn
atmIfVptVccVcdRxTdpIndex = _AtmIfVptVccVcdRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 298, 1, 1),
    _AtmIfVptVccVcdRxTdpIndex_Type()
)
atmIfVptVccVcdRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccVcdRxTdpIndex.setStatus("obsolete")


class _AtmIfVptVccVcdRxTdpValue_Type(Unsigned32):
    """Custom type atmIfVptVccVcdRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVccVcdRxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdRxTdpValue_Object = MibTableColumn
atmIfVptVccVcdRxTdpValue = _AtmIfVptVccVcdRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 298, 1, 2),
    _AtmIfVptVccVcdRxTdpValue_Type()
)
atmIfVptVccVcdRxTdpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdRxTdpValue.setStatus("obsolete")
_AtmIfVptVccVcdFqpTable_Object = MibTable
atmIfVptVccVcdFqpTable = _AtmIfVptVccVcdFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 359)
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdFqpTable.setStatus("obsolete")
_AtmIfVptVccVcdFqpEntry_Object = MibTableRow
atmIfVptVccVcdFqpEntry = _AtmIfVptVccVcdFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 359, 1)
)
atmIfVptVccVcdFqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdFqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdFqpEntry.setStatus("obsolete")


class _AtmIfVptVccVcdFqpIndex_Type(Integer32):
    """Custom type atmIfVptVccVcdFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVptVccVcdFqpIndex_Type.__name__ = "Integer32"
_AtmIfVptVccVcdFqpIndex_Object = MibTableColumn
atmIfVptVccVcdFqpIndex = _AtmIfVptVccVcdFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 359, 1, 1),
    _AtmIfVptVccVcdFqpIndex_Type()
)
atmIfVptVccVcdFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccVcdFqpIndex.setStatus("obsolete")


class _AtmIfVptVccVcdFqpValue_Type(Unsigned32):
    """Custom type atmIfVptVccVcdFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVccVcdFqpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdFqpValue_Object = MibTableColumn
atmIfVptVccVcdFqpValue = _AtmIfVptVccVcdFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 359, 1, 2),
    _AtmIfVptVccVcdFqpValue_Type()
)
atmIfVptVccVcdFqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdFqpValue.setStatus("obsolete")
_AtmIfVptVccVcdBqpTable_Object = MibTable
atmIfVptVccVcdBqpTable = _AtmIfVptVccVcdBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 360)
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdBqpTable.setStatus("obsolete")
_AtmIfVptVccVcdBqpEntry_Object = MibTableRow
atmIfVptVccVcdBqpEntry = _AtmIfVptVccVcdBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 360, 1)
)
atmIfVptVccVcdBqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccVcdBqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccVcdBqpEntry.setStatus("obsolete")


class _AtmIfVptVccVcdBqpIndex_Type(Integer32):
    """Custom type atmIfVptVccVcdBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVptVccVcdBqpIndex_Type.__name__ = "Integer32"
_AtmIfVptVccVcdBqpIndex_Object = MibTableColumn
atmIfVptVccVcdBqpIndex = _AtmIfVptVccVcdBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 360, 1, 1),
    _AtmIfVptVccVcdBqpIndex_Type()
)
atmIfVptVccVcdBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccVcdBqpIndex.setStatus("obsolete")


class _AtmIfVptVccVcdBqpValue_Type(Unsigned32):
    """Custom type atmIfVptVccVcdBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVccVcdBqpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVccVcdBqpValue_Object = MibTableColumn
atmIfVptVccVcdBqpValue = _AtmIfVptVccVcdBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 2, 360, 1, 2),
    _AtmIfVptVccVcdBqpValue_Type()
)
atmIfVptVccVcdBqpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccVcdBqpValue.setStatus("obsolete")
_AtmIfVptVccLoop_ObjectIdentity = ObjectIdentity
atmIfVptVccLoop = _AtmIfVptVccLoop_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 3)
)
_AtmIfVptVccLoopRowStatusTable_Object = MibTable
atmIfVptVccLoopRowStatusTable = _AtmIfVptVccLoopRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 3, 1)
)
if mibBuilder.loadTexts:
    atmIfVptVccLoopRowStatusTable.setStatus("mandatory")
_AtmIfVptVccLoopRowStatusEntry_Object = MibTableRow
atmIfVptVccLoopRowStatusEntry = _AtmIfVptVccLoopRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 3, 1, 1)
)
atmIfVptVccLoopRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccLoopIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccLoopRowStatusEntry.setStatus("mandatory")
_AtmIfVptVccLoopRowStatus_Type = RowStatus
_AtmIfVptVccLoopRowStatus_Object = MibTableColumn
atmIfVptVccLoopRowStatus = _AtmIfVptVccLoopRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 3, 1, 1, 1),
    _AtmIfVptVccLoopRowStatus_Type()
)
atmIfVptVccLoopRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccLoopRowStatus.setStatus("mandatory")
_AtmIfVptVccLoopComponentName_Type = DisplayString
_AtmIfVptVccLoopComponentName_Object = MibTableColumn
atmIfVptVccLoopComponentName = _AtmIfVptVccLoopComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 3, 1, 1, 2),
    _AtmIfVptVccLoopComponentName_Type()
)
atmIfVptVccLoopComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccLoopComponentName.setStatus("mandatory")
_AtmIfVptVccLoopStorageType_Type = StorageType
_AtmIfVptVccLoopStorageType_Object = MibTableColumn
atmIfVptVccLoopStorageType = _AtmIfVptVccLoopStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 3, 1, 1, 4),
    _AtmIfVptVccLoopStorageType_Type()
)
atmIfVptVccLoopStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccLoopStorageType.setStatus("mandatory")
_AtmIfVptVccLoopIndex_Type = NonReplicated
_AtmIfVptVccLoopIndex_Object = MibTableColumn
atmIfVptVccLoopIndex = _AtmIfVptVccLoopIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 3, 1, 1, 10),
    _AtmIfVptVccLoopIndex_Type()
)
atmIfVptVccLoopIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccLoopIndex.setStatus("mandatory")
_AtmIfVptVccNep_ObjectIdentity = ObjectIdentity
atmIfVptVccNep = _AtmIfVptVccNep_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 5)
)
_AtmIfVptVccNepRowStatusTable_Object = MibTable
atmIfVptVccNepRowStatusTable = _AtmIfVptVccNepRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 5, 1)
)
if mibBuilder.loadTexts:
    atmIfVptVccNepRowStatusTable.setStatus("mandatory")
_AtmIfVptVccNepRowStatusEntry_Object = MibTableRow
atmIfVptVccNepRowStatusEntry = _AtmIfVptVccNepRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 5, 1, 1)
)
atmIfVptVccNepRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccNepIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccNepRowStatusEntry.setStatus("mandatory")
_AtmIfVptVccNepRowStatus_Type = RowStatus
_AtmIfVptVccNepRowStatus_Object = MibTableColumn
atmIfVptVccNepRowStatus = _AtmIfVptVccNepRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 5, 1, 1, 1),
    _AtmIfVptVccNepRowStatus_Type()
)
atmIfVptVccNepRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccNepRowStatus.setStatus("mandatory")
_AtmIfVptVccNepComponentName_Type = DisplayString
_AtmIfVptVccNepComponentName_Object = MibTableColumn
atmIfVptVccNepComponentName = _AtmIfVptVccNepComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 5, 1, 1, 2),
    _AtmIfVptVccNepComponentName_Type()
)
atmIfVptVccNepComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccNepComponentName.setStatus("mandatory")
_AtmIfVptVccNepStorageType_Type = StorageType
_AtmIfVptVccNepStorageType_Object = MibTableColumn
atmIfVptVccNepStorageType = _AtmIfVptVccNepStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 5, 1, 1, 4),
    _AtmIfVptVccNepStorageType_Type()
)
atmIfVptVccNepStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccNepStorageType.setStatus("mandatory")
_AtmIfVptVccNepIndex_Type = NonReplicated
_AtmIfVptVccNepIndex_Object = MibTableColumn
atmIfVptVccNepIndex = _AtmIfVptVccNepIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 5, 1, 1, 10),
    _AtmIfVptVccNepIndex_Type()
)
atmIfVptVccNepIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccNepIndex.setStatus("mandatory")
_AtmIfVptVccNepProvTable_Object = MibTable
atmIfVptVccNepProvTable = _AtmIfVptVccNepProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 5, 100)
)
if mibBuilder.loadTexts:
    atmIfVptVccNepProvTable.setStatus("mandatory")
_AtmIfVptVccNepProvEntry_Object = MibTableRow
atmIfVptVccNepProvEntry = _AtmIfVptVccNepProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 5, 100, 1)
)
atmIfVptVccNepProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccNepIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccNepProvEntry.setStatus("mandatory")
_AtmIfVptVccNepApplicationName_Type = Link
_AtmIfVptVccNepApplicationName_Object = MibTableColumn
atmIfVptVccNepApplicationName = _AtmIfVptVccNepApplicationName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 5, 100, 1, 10),
    _AtmIfVptVccNepApplicationName_Type()
)
atmIfVptVccNepApplicationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccNepApplicationName.setStatus("mandatory")
_AtmIfVptVccTest_ObjectIdentity = ObjectIdentity
atmIfVptVccTest = _AtmIfVptVccTest_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6)
)
_AtmIfVptVccTestRowStatusTable_Object = MibTable
atmIfVptVccTestRowStatusTable = _AtmIfVptVccTestRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 1)
)
if mibBuilder.loadTexts:
    atmIfVptVccTestRowStatusTable.setStatus("mandatory")
_AtmIfVptVccTestRowStatusEntry_Object = MibTableRow
atmIfVptVccTestRowStatusEntry = _AtmIfVptVccTestRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 1, 1)
)
atmIfVptVccTestRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTestIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccTestRowStatusEntry.setStatus("mandatory")
_AtmIfVptVccTestRowStatus_Type = RowStatus
_AtmIfVptVccTestRowStatus_Object = MibTableColumn
atmIfVptVccTestRowStatus = _AtmIfVptVccTestRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 1, 1, 1),
    _AtmIfVptVccTestRowStatus_Type()
)
atmIfVptVccTestRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccTestRowStatus.setStatus("mandatory")
_AtmIfVptVccTestComponentName_Type = DisplayString
_AtmIfVptVccTestComponentName_Object = MibTableColumn
atmIfVptVccTestComponentName = _AtmIfVptVccTestComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 1, 1, 2),
    _AtmIfVptVccTestComponentName_Type()
)
atmIfVptVccTestComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTestComponentName.setStatus("mandatory")
_AtmIfVptVccTestStorageType_Type = StorageType
_AtmIfVptVccTestStorageType_Object = MibTableColumn
atmIfVptVccTestStorageType = _AtmIfVptVccTestStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 1, 1, 4),
    _AtmIfVptVccTestStorageType_Type()
)
atmIfVptVccTestStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTestStorageType.setStatus("mandatory")
_AtmIfVptVccTestIndex_Type = NonReplicated
_AtmIfVptVccTestIndex_Object = MibTableColumn
atmIfVptVccTestIndex = _AtmIfVptVccTestIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 1, 1, 10),
    _AtmIfVptVccTestIndex_Type()
)
atmIfVptVccTestIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccTestIndex.setStatus("mandatory")
_AtmIfVptVccTestStateTable_Object = MibTable
atmIfVptVccTestStateTable = _AtmIfVptVccTestStateTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 100)
)
if mibBuilder.loadTexts:
    atmIfVptVccTestStateTable.setStatus("mandatory")
_AtmIfVptVccTestStateEntry_Object = MibTableRow
atmIfVptVccTestStateEntry = _AtmIfVptVccTestStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 100, 1)
)
atmIfVptVccTestStateEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTestIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccTestStateEntry.setStatus("mandatory")


class _AtmIfVptVccTestAdminState_Type(Integer32):
    """Custom type atmIfVptVccTestAdminState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("locked", 0),
          ("shuttingDown", 2),
          ("unlocked", 1))
    )


_AtmIfVptVccTestAdminState_Type.__name__ = "Integer32"
_AtmIfVptVccTestAdminState_Object = MibTableColumn
atmIfVptVccTestAdminState = _AtmIfVptVccTestAdminState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 100, 1, 1),
    _AtmIfVptVccTestAdminState_Type()
)
atmIfVptVccTestAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTestAdminState.setStatus("mandatory")


class _AtmIfVptVccTestOperationalState_Type(Integer32):
    """Custom type atmIfVptVccTestOperationalState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_AtmIfVptVccTestOperationalState_Type.__name__ = "Integer32"
_AtmIfVptVccTestOperationalState_Object = MibTableColumn
atmIfVptVccTestOperationalState = _AtmIfVptVccTestOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 100, 1, 2),
    _AtmIfVptVccTestOperationalState_Type()
)
atmIfVptVccTestOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTestOperationalState.setStatus("mandatory")


class _AtmIfVptVccTestUsageState_Type(Integer32):
    """Custom type atmIfVptVccTestUsageState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("busy", 2),
          ("idle", 0))
    )


_AtmIfVptVccTestUsageState_Type.__name__ = "Integer32"
_AtmIfVptVccTestUsageState_Object = MibTableColumn
atmIfVptVccTestUsageState = _AtmIfVptVccTestUsageState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 100, 1, 3),
    _AtmIfVptVccTestUsageState_Type()
)
atmIfVptVccTestUsageState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTestUsageState.setStatus("mandatory")
_AtmIfVptVccTestSetupTable_Object = MibTable
atmIfVptVccTestSetupTable = _AtmIfVptVccTestSetupTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 110)
)
if mibBuilder.loadTexts:
    atmIfVptVccTestSetupTable.setStatus("mandatory")
_AtmIfVptVccTestSetupEntry_Object = MibTableRow
atmIfVptVccTestSetupEntry = _AtmIfVptVccTestSetupEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 110, 1)
)
atmIfVptVccTestSetupEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTestIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccTestSetupEntry.setStatus("mandatory")


class _AtmIfVptVccTestFrmTypes_Type(OctetString):
    """Custom type atmIfVptVccTestFrmTypes based on OctetString"""
    defaultHexValue = "c0"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVptVccTestFrmTypes_Type.__name__ = "OctetString"
_AtmIfVptVccTestFrmTypes_Object = MibTableColumn
atmIfVptVccTestFrmTypes = _AtmIfVptVccTestFrmTypes_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 110, 1, 10),
    _AtmIfVptVccTestFrmTypes_Type()
)
atmIfVptVccTestFrmTypes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccTestFrmTypes.setStatus("mandatory")


class _AtmIfVptVccTestFrmSize_Type(Unsigned32):
    """Custom type atmIfVptVccTestFrmSize based on Unsigned32"""
    defaultValue = 1024

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(4, 4096),
    )


_AtmIfVptVccTestFrmSize_Type.__name__ = "Unsigned32"
_AtmIfVptVccTestFrmSize_Object = MibTableColumn
atmIfVptVccTestFrmSize = _AtmIfVptVccTestFrmSize_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 110, 1, 20),
    _AtmIfVptVccTestFrmSize_Type()
)
atmIfVptVccTestFrmSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccTestFrmSize.setStatus("mandatory")


class _AtmIfVptVccTestFrmPatternType_Type(Integer32):
    """Custom type atmIfVptVccTestFrmPatternType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ccitt32kBitPattern", 0),
          ("ccitt8MBitPattern", 1),
          ("customizedPattern", 2))
    )


_AtmIfVptVccTestFrmPatternType_Type.__name__ = "Integer32"
_AtmIfVptVccTestFrmPatternType_Object = MibTableColumn
atmIfVptVccTestFrmPatternType = _AtmIfVptVccTestFrmPatternType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 110, 1, 30),
    _AtmIfVptVccTestFrmPatternType_Type()
)
atmIfVptVccTestFrmPatternType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccTestFrmPatternType.setStatus("mandatory")


class _AtmIfVptVccTestCustomizedPattern_Type(Hex):
    """Custom type atmIfVptVccTestCustomizedPattern based on Hex"""
    defaultValue = 1431655765

    subtypeSpec = Hex.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_AtmIfVptVccTestCustomizedPattern_Type.__name__ = "Hex"
_AtmIfVptVccTestCustomizedPattern_Object = MibTableColumn
atmIfVptVccTestCustomizedPattern = _AtmIfVptVccTestCustomizedPattern_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 110, 1, 40),
    _AtmIfVptVccTestCustomizedPattern_Type()
)
atmIfVptVccTestCustomizedPattern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccTestCustomizedPattern.setStatus("mandatory")


class _AtmIfVptVccTestDuration_Type(Unsigned32):
    """Custom type atmIfVptVccTestDuration based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 30240),
    )


_AtmIfVptVccTestDuration_Type.__name__ = "Unsigned32"
_AtmIfVptVccTestDuration_Object = MibTableColumn
atmIfVptVccTestDuration = _AtmIfVptVccTestDuration_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 110, 1, 50),
    _AtmIfVptVccTestDuration_Type()
)
atmIfVptVccTestDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccTestDuration.setStatus("mandatory")


class _AtmIfVptVccTestBandwidthElastic_Type(Integer32):
    """Custom type atmIfVptVccTestBandwidthElastic based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVptVccTestBandwidthElastic_Type.__name__ = "Integer32"
_AtmIfVptVccTestBandwidthElastic_Object = MibTableColumn
atmIfVptVccTestBandwidthElastic = _AtmIfVptVccTestBandwidthElastic_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 110, 1, 60),
    _AtmIfVptVccTestBandwidthElastic_Type()
)
atmIfVptVccTestBandwidthElastic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccTestBandwidthElastic.setStatus("mandatory")


class _AtmIfVptVccTestOverrideHoldingPriority_Type(Integer32):
    """Custom type atmIfVptVccTestOverrideHoldingPriority based on Integer32"""
    defaultValue = 6

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("noOverride", 6))
    )


_AtmIfVptVccTestOverrideHoldingPriority_Type.__name__ = "Integer32"
_AtmIfVptVccTestOverrideHoldingPriority_Object = MibTableColumn
atmIfVptVccTestOverrideHoldingPriority = _AtmIfVptVccTestOverrideHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 110, 1, 70),
    _AtmIfVptVccTestOverrideHoldingPriority_Type()
)
atmIfVptVccTestOverrideHoldingPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfVptVccTestOverrideHoldingPriority.setStatus("mandatory")
_AtmIfVptVccTestResultsTable_Object = MibTable
atmIfVptVccTestResultsTable = _AtmIfVptVccTestResultsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 120)
)
if mibBuilder.loadTexts:
    atmIfVptVccTestResultsTable.setStatus("mandatory")
_AtmIfVptVccTestResultsEntry_Object = MibTableRow
atmIfVptVccTestResultsEntry = _AtmIfVptVccTestResultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 120, 1)
)
atmIfVptVccTestResultsEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTestIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccTestResultsEntry.setStatus("mandatory")


class _AtmIfVptVccTestElapsedTime_Type(Unsigned32):
    """Custom type atmIfVptVccTestElapsedTime based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30240),
    )


_AtmIfVptVccTestElapsedTime_Type.__name__ = "Unsigned32"
_AtmIfVptVccTestElapsedTime_Object = MibTableColumn
atmIfVptVccTestElapsedTime = _AtmIfVptVccTestElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 120, 1, 10),
    _AtmIfVptVccTestElapsedTime_Type()
)
atmIfVptVccTestElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTestElapsedTime.setStatus("mandatory")


class _AtmIfVptVccTestTimeRemaining_Type(Unsigned32):
    """Custom type atmIfVptVccTestTimeRemaining based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30240),
    )


_AtmIfVptVccTestTimeRemaining_Type.__name__ = "Unsigned32"
_AtmIfVptVccTestTimeRemaining_Object = MibTableColumn
atmIfVptVccTestTimeRemaining = _AtmIfVptVccTestTimeRemaining_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 120, 1, 20),
    _AtmIfVptVccTestTimeRemaining_Type()
)
atmIfVptVccTestTimeRemaining.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTestTimeRemaining.setStatus("mandatory")


class _AtmIfVptVccTestCauseOfTermination_Type(Integer32):
    """Custom type atmIfVptVccTestCauseOfTermination based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("neverStarted", 2),
          ("stoppedByOperator", 1),
          ("testRunning", 3),
          ("testTimeExpired", 0))
    )


_AtmIfVptVccTestCauseOfTermination_Type.__name__ = "Integer32"
_AtmIfVptVccTestCauseOfTermination_Object = MibTableColumn
atmIfVptVccTestCauseOfTermination = _AtmIfVptVccTestCauseOfTermination_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 120, 1, 30),
    _AtmIfVptVccTestCauseOfTermination_Type()
)
atmIfVptVccTestCauseOfTermination.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTestCauseOfTermination.setStatus("mandatory")
_AtmIfVptVccTestBytesTx_Type = PassportCounter64
_AtmIfVptVccTestBytesTx_Object = MibTableColumn
atmIfVptVccTestBytesTx = _AtmIfVptVccTestBytesTx_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 120, 1, 40),
    _AtmIfVptVccTestBytesTx_Type()
)
atmIfVptVccTestBytesTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTestBytesTx.setStatus("mandatory")
_AtmIfVptVccTestBytesRx_Type = PassportCounter64
_AtmIfVptVccTestBytesRx_Object = MibTableColumn
atmIfVptVccTestBytesRx = _AtmIfVptVccTestBytesRx_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 120, 1, 50),
    _AtmIfVptVccTestBytesRx_Type()
)
atmIfVptVccTestBytesRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTestBytesRx.setStatus("mandatory")
_AtmIfVptVccTestLoadingFrmTx_Type = PassportCounter64
_AtmIfVptVccTestLoadingFrmTx_Object = MibTableColumn
atmIfVptVccTestLoadingFrmTx = _AtmIfVptVccTestLoadingFrmTx_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 120, 1, 60),
    _AtmIfVptVccTestLoadingFrmTx_Type()
)
atmIfVptVccTestLoadingFrmTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTestLoadingFrmTx.setStatus("mandatory")
_AtmIfVptVccTestLoadingFrmRx_Type = PassportCounter64
_AtmIfVptVccTestLoadingFrmRx_Object = MibTableColumn
atmIfVptVccTestLoadingFrmRx = _AtmIfVptVccTestLoadingFrmRx_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 120, 1, 70),
    _AtmIfVptVccTestLoadingFrmRx_Type()
)
atmIfVptVccTestLoadingFrmRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTestLoadingFrmRx.setStatus("mandatory")
_AtmIfVptVccTestLoadingFrmLost_Type = PassportCounter64
_AtmIfVptVccTestLoadingFrmLost_Object = MibTableColumn
atmIfVptVccTestLoadingFrmLost = _AtmIfVptVccTestLoadingFrmLost_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 120, 1, 80),
    _AtmIfVptVccTestLoadingFrmLost_Type()
)
atmIfVptVccTestLoadingFrmLost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTestLoadingFrmLost.setStatus("mandatory")
_AtmIfVptVccTestVerificationFrmTx_Type = PassportCounter64
_AtmIfVptVccTestVerificationFrmTx_Object = MibTableColumn
atmIfVptVccTestVerificationFrmTx = _AtmIfVptVccTestVerificationFrmTx_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 120, 1, 90),
    _AtmIfVptVccTestVerificationFrmTx_Type()
)
atmIfVptVccTestVerificationFrmTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTestVerificationFrmTx.setStatus("mandatory")
_AtmIfVptVccTestVerificationFrmRx_Type = PassportCounter64
_AtmIfVptVccTestVerificationFrmRx_Object = MibTableColumn
atmIfVptVccTestVerificationFrmRx = _AtmIfVptVccTestVerificationFrmRx_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 120, 1, 100),
    _AtmIfVptVccTestVerificationFrmRx_Type()
)
atmIfVptVccTestVerificationFrmRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTestVerificationFrmRx.setStatus("mandatory")
_AtmIfVptVccTestVerificationFrmBad_Type = PassportCounter64
_AtmIfVptVccTestVerificationFrmBad_Object = MibTableColumn
atmIfVptVccTestVerificationFrmBad = _AtmIfVptVccTestVerificationFrmBad_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 120, 1, 110),
    _AtmIfVptVccTestVerificationFrmBad_Type()
)
atmIfVptVccTestVerificationFrmBad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTestVerificationFrmBad.setStatus("mandatory")
_AtmIfVptVccTestUnrecognizableFrmRx_Type = PassportCounter64
_AtmIfVptVccTestUnrecognizableFrmRx_Object = MibTableColumn
atmIfVptVccTestUnrecognizableFrmRx = _AtmIfVptVccTestUnrecognizableFrmRx_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 6, 120, 1, 120),
    _AtmIfVptVccTestUnrecognizableFrmRx_Type()
)
atmIfVptVccTestUnrecognizableFrmRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTestUnrecognizableFrmRx.setStatus("mandatory")
_AtmIfVptVccTm_ObjectIdentity = ObjectIdentity
atmIfVptVccTm = _AtmIfVptVccTm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7)
)
_AtmIfVptVccTmRowStatusTable_Object = MibTable
atmIfVptVccTmRowStatusTable = _AtmIfVptVccTmRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 1)
)
if mibBuilder.loadTexts:
    atmIfVptVccTmRowStatusTable.setStatus("mandatory")
_AtmIfVptVccTmRowStatusEntry_Object = MibTableRow
atmIfVptVccTmRowStatusEntry = _AtmIfVptVccTmRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 1, 1)
)
atmIfVptVccTmRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTmIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccTmRowStatusEntry.setStatus("mandatory")
_AtmIfVptVccTmRowStatus_Type = RowStatus
_AtmIfVptVccTmRowStatus_Object = MibTableColumn
atmIfVptVccTmRowStatus = _AtmIfVptVccTmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 1, 1, 1),
    _AtmIfVptVccTmRowStatus_Type()
)
atmIfVptVccTmRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmRowStatus.setStatus("mandatory")
_AtmIfVptVccTmComponentName_Type = DisplayString
_AtmIfVptVccTmComponentName_Object = MibTableColumn
atmIfVptVccTmComponentName = _AtmIfVptVccTmComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 1, 1, 2),
    _AtmIfVptVccTmComponentName_Type()
)
atmIfVptVccTmComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmComponentName.setStatus("mandatory")
_AtmIfVptVccTmStorageType_Type = StorageType
_AtmIfVptVccTmStorageType_Object = MibTableColumn
atmIfVptVccTmStorageType = _AtmIfVptVccTmStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 1, 1, 4),
    _AtmIfVptVccTmStorageType_Type()
)
atmIfVptVccTmStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmStorageType.setStatus("mandatory")
_AtmIfVptVccTmIndex_Type = NonReplicated
_AtmIfVptVccTmIndex_Object = MibTableColumn
atmIfVptVccTmIndex = _AtmIfVptVccTmIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 1, 1, 10),
    _AtmIfVptVccTmIndex_Type()
)
atmIfVptVccTmIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccTmIndex.setStatus("mandatory")
_AtmIfVptVccTmAbr_ObjectIdentity = ObjectIdentity
atmIfVptVccTmAbr = _AtmIfVptVccTmAbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2)
)
_AtmIfVptVccTmAbrRowStatusTable_Object = MibTable
atmIfVptVccTmAbrRowStatusTable = _AtmIfVptVccTmAbrRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 1)
)
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrRowStatusTable.setStatus("mandatory")
_AtmIfVptVccTmAbrRowStatusEntry_Object = MibTableRow
atmIfVptVccTmAbrRowStatusEntry = _AtmIfVptVccTmAbrRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 1, 1)
)
atmIfVptVccTmAbrRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTmAbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrRowStatusEntry.setStatus("mandatory")
_AtmIfVptVccTmAbrRowStatus_Type = RowStatus
_AtmIfVptVccTmAbrRowStatus_Object = MibTableColumn
atmIfVptVccTmAbrRowStatus = _AtmIfVptVccTmAbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 1, 1, 1),
    _AtmIfVptVccTmAbrRowStatus_Type()
)
atmIfVptVccTmAbrRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrRowStatus.setStatus("mandatory")
_AtmIfVptVccTmAbrComponentName_Type = DisplayString
_AtmIfVptVccTmAbrComponentName_Object = MibTableColumn
atmIfVptVccTmAbrComponentName = _AtmIfVptVccTmAbrComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 1, 1, 2),
    _AtmIfVptVccTmAbrComponentName_Type()
)
atmIfVptVccTmAbrComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrComponentName.setStatus("mandatory")
_AtmIfVptVccTmAbrStorageType_Type = StorageType
_AtmIfVptVccTmAbrStorageType_Object = MibTableColumn
atmIfVptVccTmAbrStorageType = _AtmIfVptVccTmAbrStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 1, 1, 4),
    _AtmIfVptVccTmAbrStorageType_Type()
)
atmIfVptVccTmAbrStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrStorageType.setStatus("mandatory")
_AtmIfVptVccTmAbrIndex_Type = NonReplicated
_AtmIfVptVccTmAbrIndex_Object = MibTableColumn
atmIfVptVccTmAbrIndex = _AtmIfVptVccTmAbrIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 1, 1, 10),
    _AtmIfVptVccTmAbrIndex_Type()
)
atmIfVptVccTmAbrIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrIndex.setStatus("mandatory")
_AtmIfVptVccTmAbrOperTable_Object = MibTable
atmIfVptVccTmAbrOperTable = _AtmIfVptVccTmAbrOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 110)
)
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrOperTable.setStatus("mandatory")
_AtmIfVptVccTmAbrOperEntry_Object = MibTableRow
atmIfVptVccTmAbrOperEntry = _AtmIfVptVccTmAbrOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 110, 1)
)
atmIfVptVccTmAbrOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTmAbrIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrOperEntry.setStatus("mandatory")


class _AtmIfVptVccTmAbrInitialCellRate_Type(Unsigned32):
    """Custom type atmIfVptVccTmAbrInitialCellRate based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVptVccTmAbrInitialCellRate_Type.__name__ = "Unsigned32"
_AtmIfVptVccTmAbrInitialCellRate_Object = MibTableColumn
atmIfVptVccTmAbrInitialCellRate = _AtmIfVptVccTmAbrInitialCellRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 110, 1, 10),
    _AtmIfVptVccTmAbrInitialCellRate_Type()
)
atmIfVptVccTmAbrInitialCellRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrInitialCellRate.setStatus("mandatory")


class _AtmIfVptVccTmAbrTransientBufferExposure_Type(Unsigned32):
    """Custom type atmIfVptVccTmAbrTransientBufferExposure based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVptVccTmAbrTransientBufferExposure_Type.__name__ = "Unsigned32"
_AtmIfVptVccTmAbrTransientBufferExposure_Object = MibTableColumn
atmIfVptVccTmAbrTransientBufferExposure = _AtmIfVptVccTmAbrTransientBufferExposure_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 110, 1, 11),
    _AtmIfVptVccTmAbrTransientBufferExposure_Type()
)
atmIfVptVccTmAbrTransientBufferExposure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrTransientBufferExposure.setStatus("mandatory")


class _AtmIfVptVccTmAbrFixedRoundTripTime_Type(Unsigned32):
    """Custom type atmIfVptVccTmAbrFixedRoundTripTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16700000),
    )


_AtmIfVptVccTmAbrFixedRoundTripTime_Type.__name__ = "Unsigned32"
_AtmIfVptVccTmAbrFixedRoundTripTime_Object = MibTableColumn
atmIfVptVccTmAbrFixedRoundTripTime = _AtmIfVptVccTmAbrFixedRoundTripTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 110, 1, 12),
    _AtmIfVptVccTmAbrFixedRoundTripTime_Type()
)
atmIfVptVccTmAbrFixedRoundTripTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrFixedRoundTripTime.setStatus("mandatory")


class _AtmIfVptVccTmAbrRateDecreaseFactor_Type(Unsigned32):
    """Custom type atmIfVptVccTmAbrRateDecreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_AtmIfVptVccTmAbrRateDecreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVptVccTmAbrRateDecreaseFactor_Object = MibTableColumn
atmIfVptVccTmAbrRateDecreaseFactor = _AtmIfVptVccTmAbrRateDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 110, 1, 13),
    _AtmIfVptVccTmAbrRateDecreaseFactor_Type()
)
atmIfVptVccTmAbrRateDecreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrRateDecreaseFactor.setStatus("mandatory")


class _AtmIfVptVccTmAbrRateIncreaseFactor_Type(Unsigned32):
    """Custom type atmIfVptVccTmAbrRateIncreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_AtmIfVptVccTmAbrRateIncreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVptVccTmAbrRateIncreaseFactor_Object = MibTableColumn
atmIfVptVccTmAbrRateIncreaseFactor = _AtmIfVptVccTmAbrRateIncreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 110, 1, 14),
    _AtmIfVptVccTmAbrRateIncreaseFactor_Type()
)
atmIfVptVccTmAbrRateIncreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrRateIncreaseFactor.setStatus("mandatory")


class _AtmIfVptVccTmAbrMaxCellPerRmCell_Type(Unsigned32):
    """Custom type atmIfVptVccTmAbrMaxCellPerRmCell based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
        ValueRangeConstraint(128, 128),
        ValueRangeConstraint(256, 256),
    )


_AtmIfVptVccTmAbrMaxCellPerRmCell_Type.__name__ = "Unsigned32"
_AtmIfVptVccTmAbrMaxCellPerRmCell_Object = MibTableColumn
atmIfVptVccTmAbrMaxCellPerRmCell = _AtmIfVptVccTmAbrMaxCellPerRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 110, 1, 15),
    _AtmIfVptVccTmAbrMaxCellPerRmCell_Type()
)
atmIfVptVccTmAbrMaxCellPerRmCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrMaxCellPerRmCell.setStatus("mandatory")


class _AtmIfVptVccTmAbrMaxTimeBetweenRmCell_Type(Unsigned32):
    """Custom type atmIfVptVccTmAbrMaxTimeBetweenRmCell based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(781, 781),
        ValueRangeConstraint(1563, 1563),
        ValueRangeConstraint(3125, 3125),
        ValueRangeConstraint(6250, 6250),
        ValueRangeConstraint(12500, 12500),
        ValueRangeConstraint(25000, 25000),
        ValueRangeConstraint(50000, 50000),
        ValueRangeConstraint(100000, 100000),
    )


_AtmIfVptVccTmAbrMaxTimeBetweenRmCell_Type.__name__ = "Unsigned32"
_AtmIfVptVccTmAbrMaxTimeBetweenRmCell_Object = MibTableColumn
atmIfVptVccTmAbrMaxTimeBetweenRmCell = _AtmIfVptVccTmAbrMaxTimeBetweenRmCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 110, 1, 16),
    _AtmIfVptVccTmAbrMaxTimeBetweenRmCell_Type()
)
atmIfVptVccTmAbrMaxTimeBetweenRmCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrMaxTimeBetweenRmCell.setStatus("mandatory")


class _AtmIfVptVccTmAbrCutoffDecreaseFactor_Type(Unsigned32):
    """Custom type atmIfVptVccTmAbrCutoffDecreaseFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(2, 2),
        ValueRangeConstraint(4, 4),
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(16, 16),
        ValueRangeConstraint(32, 32),
        ValueRangeConstraint(64, 64),
    )


_AtmIfVptVccTmAbrCutoffDecreaseFactor_Type.__name__ = "Unsigned32"
_AtmIfVptVccTmAbrCutoffDecreaseFactor_Object = MibTableColumn
atmIfVptVccTmAbrCutoffDecreaseFactor = _AtmIfVptVccTmAbrCutoffDecreaseFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 110, 1, 17),
    _AtmIfVptVccTmAbrCutoffDecreaseFactor_Type()
)
atmIfVptVccTmAbrCutoffDecreaseFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrCutoffDecreaseFactor.setStatus("mandatory")


class _AtmIfVptVccTmAbrAcrDecreaseTimeFactor_Type(Unsigned32):
    """Custom type atmIfVptVccTmAbrAcrDecreaseTimeFactor based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_AtmIfVptVccTmAbrAcrDecreaseTimeFactor_Type.__name__ = "Unsigned32"
_AtmIfVptVccTmAbrAcrDecreaseTimeFactor_Object = MibTableColumn
atmIfVptVccTmAbrAcrDecreaseTimeFactor = _AtmIfVptVccTmAbrAcrDecreaseTimeFactor_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 110, 1, 18),
    _AtmIfVptVccTmAbrAcrDecreaseTimeFactor_Type()
)
atmIfVptVccTmAbrAcrDecreaseTimeFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrAcrDecreaseTimeFactor.setStatus("mandatory")


class _AtmIfVptVccTmAbrForwardRmCellLimit_Type(Unsigned32):
    """Custom type atmIfVptVccTmAbrForwardRmCellLimit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
        ValueRangeConstraint(3, 3),
        ValueRangeConstraint(7, 7),
        ValueRangeConstraint(15, 15),
        ValueRangeConstraint(31, 31),
        ValueRangeConstraint(63, 63),
        ValueRangeConstraint(127, 127),
        ValueRangeConstraint(255, 255),
        ValueRangeConstraint(511, 511),
        ValueRangeConstraint(1023, 1023),
        ValueRangeConstraint(2047, 2047),
        ValueRangeConstraint(4095, 4095),
    )


_AtmIfVptVccTmAbrForwardRmCellLimit_Type.__name__ = "Unsigned32"
_AtmIfVptVccTmAbrForwardRmCellLimit_Object = MibTableColumn
atmIfVptVccTmAbrForwardRmCellLimit = _AtmIfVptVccTmAbrForwardRmCellLimit_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 110, 1, 19),
    _AtmIfVptVccTmAbrForwardRmCellLimit_Type()
)
atmIfVptVccTmAbrForwardRmCellLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrForwardRmCellLimit.setStatus("mandatory")


class _AtmIfVptVccTmAbrTxRateChangeInfo_Type(Integer32):
    """Custom type atmIfVptVccTmAbrTxRateChangeInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("congestionIndicated", 0),
          ("explicitRateIndicated", 2),
          ("noIncreaseIndicated", 1))
    )


_AtmIfVptVccTmAbrTxRateChangeInfo_Type.__name__ = "Integer32"
_AtmIfVptVccTmAbrTxRateChangeInfo_Object = MibTableColumn
atmIfVptVccTmAbrTxRateChangeInfo = _AtmIfVptVccTmAbrTxRateChangeInfo_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 110, 1, 20),
    _AtmIfVptVccTmAbrTxRateChangeInfo_Type()
)
atmIfVptVccTmAbrTxRateChangeInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrTxRateChangeInfo.setStatus("obsolete")


class _AtmIfVptVccTmAbrAcrRateChangeInfo_Type(Integer32):
    """Custom type atmIfVptVccTmAbrAcrRateChangeInfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              15)
        )
    )
    namedValues = NamedValues(
        *(("decreasedByRdf", 1),
          ("increasedByRif", 2),
          ("noChange", 0),
          ("notApplicable", 15),
          ("setToExplicitRate", 3))
    )


_AtmIfVptVccTmAbrAcrRateChangeInfo_Type.__name__ = "Integer32"
_AtmIfVptVccTmAbrAcrRateChangeInfo_Object = MibTableColumn
atmIfVptVccTmAbrAcrRateChangeInfo = _AtmIfVptVccTmAbrAcrRateChangeInfo_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 110, 1, 21),
    _AtmIfVptVccTmAbrAcrRateChangeInfo_Type()
)
atmIfVptVccTmAbrAcrRateChangeInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrAcrRateChangeInfo.setStatus("mandatory")


class _AtmIfVptVccTmAbrTxFwdRmCells_Type(Unsigned32):
    """Custom type atmIfVptVccTmAbrTxFwdRmCells based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmIfVptVccTmAbrTxFwdRmCells_Type.__name__ = "Unsigned32"
_AtmIfVptVccTmAbrTxFwdRmCells_Object = MibTableColumn
atmIfVptVccTmAbrTxFwdRmCells = _AtmIfVptVccTmAbrTxFwdRmCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 110, 1, 22),
    _AtmIfVptVccTmAbrTxFwdRmCells_Type()
)
atmIfVptVccTmAbrTxFwdRmCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrTxFwdRmCells.setStatus("mandatory")


class _AtmIfVptVccTmAbrRxEfci_Type(Integer32):
    """Custom type atmIfVptVccTmAbrRxEfci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 1),
          ("notIndicated", 0))
    )


_AtmIfVptVccTmAbrRxEfci_Type.__name__ = "Integer32"
_AtmIfVptVccTmAbrRxEfci_Object = MibTableColumn
atmIfVptVccTmAbrRxEfci = _AtmIfVptVccTmAbrRxEfci_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 110, 1, 23),
    _AtmIfVptVccTmAbrRxEfci_Type()
)
atmIfVptVccTmAbrRxEfci.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrRxEfci.setStatus("mandatory")


class _AtmIfVptVccTmAbrBrmRateChangeInfo_Type(OctetString):
    """Custom type atmIfVptVccTmAbrBrmRateChangeInfo based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVptVccTmAbrBrmRateChangeInfo_Type.__name__ = "OctetString"
_AtmIfVptVccTmAbrBrmRateChangeInfo_Object = MibTableColumn
atmIfVptVccTmAbrBrmRateChangeInfo = _AtmIfVptVccTmAbrBrmRateChangeInfo_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 110, 1, 24),
    _AtmIfVptVccTmAbrBrmRateChangeInfo_Type()
)
atmIfVptVccTmAbrBrmRateChangeInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrBrmRateChangeInfo.setStatus("mandatory")


class _AtmIfVptVccTmAbrBrmExplicitRate_Type(Unsigned32):
    """Custom type atmIfVptVccTmAbrBrmExplicitRate based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )


_AtmIfVptVccTmAbrBrmExplicitRate_Type.__name__ = "Unsigned32"
_AtmIfVptVccTmAbrBrmExplicitRate_Object = MibTableColumn
atmIfVptVccTmAbrBrmExplicitRate = _AtmIfVptVccTmAbrBrmExplicitRate_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 2, 110, 1, 25),
    _AtmIfVptVccTmAbrBrmExplicitRate_Type()
)
atmIfVptVccTmAbrBrmExplicitRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrBrmExplicitRate.setStatus("mandatory")
_AtmIfVptVccTmOperTable_Object = MibTable
atmIfVptVccTmOperTable = _AtmIfVptVccTmOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100)
)
if mibBuilder.loadTexts:
    atmIfVptVccTmOperTable.setStatus("mandatory")
_AtmIfVptVccTmOperEntry_Object = MibTableRow
atmIfVptVccTmOperEntry = _AtmIfVptVccTmOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1)
)
atmIfVptVccTmOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTmIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccTmOperEntry.setStatus("mandatory")


class _AtmIfVptVccTmTxTrafficDescType_Type(Integer32):
    """Custom type atmIfVptVccTmTxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_AtmIfVptVccTmTxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVptVccTmTxTrafficDescType_Object = MibTableColumn
atmIfVptVccTmTxTrafficDescType = _AtmIfVptVccTmTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 10),
    _AtmIfVptVccTmTxTrafficDescType_Type()
)
atmIfVptVccTmTxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmTxTrafficDescType.setStatus("mandatory")


class _AtmIfVptVccTmTxQosClass_Type(Integer32):
    """Custom type atmIfVptVccTmTxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_AtmIfVptVccTmTxQosClass_Type.__name__ = "Integer32"
_AtmIfVptVccTmTxQosClass_Object = MibTableColumn
atmIfVptVccTmTxQosClass = _AtmIfVptVccTmTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 31),
    _AtmIfVptVccTmTxQosClass_Type()
)
atmIfVptVccTmTxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmTxQosClass.setStatus("mandatory")


class _AtmIfVptVccTmTxQueueLength_Type(Unsigned32):
    """Custom type atmIfVptVccTmTxQueueLength based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_AtmIfVptVccTmTxQueueLength_Type.__name__ = "Unsigned32"
_AtmIfVptVccTmTxQueueLength_Object = MibTableColumn
atmIfVptVccTmTxQueueLength = _AtmIfVptVccTmTxQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 32),
    _AtmIfVptVccTmTxQueueLength_Type()
)
atmIfVptVccTmTxQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmTxQueueLength.setStatus("mandatory")


class _AtmIfVptVccTmTxQueueCongestionState_Type(Unsigned32):
    """Custom type atmIfVptVccTmTxQueueCongestionState based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_AtmIfVptVccTmTxQueueCongestionState_Type.__name__ = "Unsigned32"
_AtmIfVptVccTmTxQueueCongestionState_Object = MibTableColumn
atmIfVptVccTmTxQueueCongestionState = _AtmIfVptVccTmTxQueueCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 33),
    _AtmIfVptVccTmTxQueueCongestionState_Type()
)
atmIfVptVccTmTxQueueCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmTxQueueCongestionState.setStatus("mandatory")


class _AtmIfVptVccTmHoldingPriority_Type(Integer32):
    """Custom type atmIfVptVccTmHoldingPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 6))
    )


_AtmIfVptVccTmHoldingPriority_Type.__name__ = "Integer32"
_AtmIfVptVccTmHoldingPriority_Object = MibTableColumn
atmIfVptVccTmHoldingPriority = _AtmIfVptVccTmHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 35),
    _AtmIfVptVccTmHoldingPriority_Type()
)
atmIfVptVccTmHoldingPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmHoldingPriority.setStatus("mandatory")


class _AtmIfVptVccTmRxTrafficDescType_Type(Integer32):
    """Custom type atmIfVptVccTmRxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8),
          ("n9", 9))
    )


_AtmIfVptVccTmRxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVptVccTmRxTrafficDescType_Object = MibTableColumn
atmIfVptVccTmRxTrafficDescType = _AtmIfVptVccTmRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 40),
    _AtmIfVptVccTmRxTrafficDescType_Type()
)
atmIfVptVccTmRxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmRxTrafficDescType.setStatus("mandatory")


class _AtmIfVptVccTmRxQosClass_Type(Integer32):
    """Custom type atmIfVptVccTmRxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_AtmIfVptVccTmRxQosClass_Type.__name__ = "Integer32"
_AtmIfVptVccTmRxQosClass_Object = MibTableColumn
atmIfVptVccTmRxQosClass = _AtmIfVptVccTmRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 61),
    _AtmIfVptVccTmRxQosClass_Type()
)
atmIfVptVccTmRxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmRxQosClass.setStatus("mandatory")


class _AtmIfVptVccTmAtmServiceCategory_Type(Integer32):
    """Custom type atmIfVptVccTmAtmServiceCategory based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("availableBitRate", 4),
          ("constantBitRate", 1),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_AtmIfVptVccTmAtmServiceCategory_Type.__name__ = "Integer32"
_AtmIfVptVccTmAtmServiceCategory_Object = MibTableColumn
atmIfVptVccTmAtmServiceCategory = _AtmIfVptVccTmAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 62),
    _AtmIfVptVccTmAtmServiceCategory_Type()
)
atmIfVptVccTmAtmServiceCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmAtmServiceCategory.setStatus("mandatory")


class _AtmIfVptVccTmTrafficShaping_Type(Integer32):
    """Custom type atmIfVptVccTmTrafficShaping based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("dynamic", 7),
          ("inverseUpc", 6),
          ("linear", 5),
          ("notApplicable", 4))
    )


_AtmIfVptVccTmTrafficShaping_Type.__name__ = "Integer32"
_AtmIfVptVccTmTrafficShaping_Object = MibTableColumn
atmIfVptVccTmTrafficShaping = _AtmIfVptVccTmTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 70),
    _AtmIfVptVccTmTrafficShaping_Type()
)
atmIfVptVccTmTrafficShaping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmTrafficShaping.setStatus("mandatory")


class _AtmIfVptVccTmBearerClassBbc_Type(Integer32):
    """Custom type atmIfVptVccTmBearerClassBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              30)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("notApplicable", 30),
          ("vp", 24),
          ("x", 16))
    )


_AtmIfVptVccTmBearerClassBbc_Type.__name__ = "Integer32"
_AtmIfVptVccTmBearerClassBbc_Object = MibTableColumn
atmIfVptVccTmBearerClassBbc = _AtmIfVptVccTmBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 71),
    _AtmIfVptVccTmBearerClassBbc_Type()
)
atmIfVptVccTmBearerClassBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmBearerClassBbc.setStatus("mandatory")


class _AtmIfVptVccTmTransferCapabilityBbc_Type(Integer32):
    """Custom type atmIfVptVccTmTransferCapabilityBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_AtmIfVptVccTmTransferCapabilityBbc_Type.__name__ = "Integer32"
_AtmIfVptVccTmTransferCapabilityBbc_Object = MibTableColumn
atmIfVptVccTmTransferCapabilityBbc = _AtmIfVptVccTmTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 72),
    _AtmIfVptVccTmTransferCapabilityBbc_Type()
)
atmIfVptVccTmTransferCapabilityBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmTransferCapabilityBbc.setStatus("mandatory")


class _AtmIfVptVccTmClippingBbc_Type(Integer32):
    """Custom type atmIfVptVccTmClippingBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("notApplicable", 14),
          ("yes", 1))
    )


_AtmIfVptVccTmClippingBbc_Type.__name__ = "Integer32"
_AtmIfVptVccTmClippingBbc_Object = MibTableColumn
atmIfVptVccTmClippingBbc = _AtmIfVptVccTmClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 74),
    _AtmIfVptVccTmClippingBbc_Type()
)
atmIfVptVccTmClippingBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmClippingBbc.setStatus("mandatory")


class _AtmIfVptVccTmUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfVptVccTmUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("fifo", 5),
          ("notApplicable", 4),
          ("perVc", 0))
    )


_AtmIfVptVccTmUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfVptVccTmUnshapedTransmitQueueing_Object = MibTableColumn
atmIfVptVccTmUnshapedTransmitQueueing = _AtmIfVptVccTmUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 75),
    _AtmIfVptVccTmUnshapedTransmitQueueing_Type()
)
atmIfVptVccTmUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmUnshapedTransmitQueueing.setStatus("mandatory")


class _AtmIfVptVccTmBestEffort_Type(Integer32):
    """Custom type atmIfVptVccTmBestEffort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 0),
          ("notApplicable", 14),
          ("notIndicated", 1))
    )


_AtmIfVptVccTmBestEffort_Type.__name__ = "Integer32"
_AtmIfVptVccTmBestEffort_Object = MibTableColumn
atmIfVptVccTmBestEffort = _AtmIfVptVccTmBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 76),
    _AtmIfVptVccTmBestEffort_Type()
)
atmIfVptVccTmBestEffort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmBestEffort.setStatus("mandatory")


class _AtmIfVptVccTmForceTagging_Type(Integer32):
    """Custom type atmIfVptVccTmForceTagging based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0))
    )


_AtmIfVptVccTmForceTagging_Type.__name__ = "Integer32"
_AtmIfVptVccTmForceTagging_Object = MibTableColumn
atmIfVptVccTmForceTagging = _AtmIfVptVccTmForceTagging_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 78),
    _AtmIfVptVccTmForceTagging_Type()
)
atmIfVptVccTmForceTagging.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmForceTagging.setStatus("mandatory")


class _AtmIfVptVccTmWeight_Type(Unsigned32):
    """Custom type atmIfVptVccTmWeight based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(65534, 65534),
    )


_AtmIfVptVccTmWeight_Type.__name__ = "Unsigned32"
_AtmIfVptVccTmWeight_Object = MibTableColumn
atmIfVptVccTmWeight = _AtmIfVptVccTmWeight_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 79),
    _AtmIfVptVccTmWeight_Type()
)
atmIfVptVccTmWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmWeight.setStatus("mandatory")


class _AtmIfVptVccTmUsageParameterControl_Type(Integer32):
    """Custom type atmIfVptVccTmUsageParameterControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("abrEnforced", 6),
          ("abrMonitored", 5),
          ("disabled", 1),
          ("enforced", 0),
          ("monitored", 4),
          ("notApplicable", 3))
    )


_AtmIfVptVccTmUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfVptVccTmUsageParameterControl_Object = MibTableColumn
atmIfVptVccTmUsageParameterControl = _AtmIfVptVccTmUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 80),
    _AtmIfVptVccTmUsageParameterControl_Type()
)
atmIfVptVccTmUsageParameterControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmUsageParameterControl.setStatus("mandatory")


class _AtmIfVptVccTmTxPacketWiseDiscard_Type(OctetString):
    """Custom type atmIfVptVccTmTxPacketWiseDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVptVccTmTxPacketWiseDiscard_Type.__name__ = "OctetString"
_AtmIfVptVccTmTxPacketWiseDiscard_Object = MibTableColumn
atmIfVptVccTmTxPacketWiseDiscard = _AtmIfVptVccTmTxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 85),
    _AtmIfVptVccTmTxPacketWiseDiscard_Type()
)
atmIfVptVccTmTxPacketWiseDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmTxPacketWiseDiscard.setStatus("mandatory")


class _AtmIfVptVccTmRxPacketWiseDiscard_Type(OctetString):
    """Custom type atmIfVptVccTmRxPacketWiseDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVptVccTmRxPacketWiseDiscard_Type.__name__ = "OctetString"
_AtmIfVptVccTmRxPacketWiseDiscard_Object = MibTableColumn
atmIfVptVccTmRxPacketWiseDiscard = _AtmIfVptVccTmRxPacketWiseDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 86),
    _AtmIfVptVccTmRxPacketWiseDiscard_Type()
)
atmIfVptVccTmRxPacketWiseDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmRxPacketWiseDiscard.setStatus("mandatory")


class _AtmIfVptVccTmBandwidthElastic_Type(Integer32):
    """Custom type atmIfVptVccTmBandwidthElastic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVptVccTmBandwidthElastic_Type.__name__ = "Integer32"
_AtmIfVptVccTmBandwidthElastic_Object = MibTableColumn
atmIfVptVccTmBandwidthElastic = _AtmIfVptVccTmBandwidthElastic_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 90),
    _AtmIfVptVccTmBandwidthElastic_Type()
)
atmIfVptVccTmBandwidthElastic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmBandwidthElastic.setStatus("mandatory")


class _AtmIfVptVccTmBandwidthReduction_Type(Unsigned32):
    """Custom type atmIfVptVccTmBandwidthReduction based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVccTmBandwidthReduction_Type.__name__ = "Unsigned32"
_AtmIfVptVccTmBandwidthReduction_Object = MibTableColumn
atmIfVptVccTmBandwidthReduction = _AtmIfVptVccTmBandwidthReduction_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 100),
    _AtmIfVptVccTmBandwidthReduction_Type()
)
atmIfVptVccTmBandwidthReduction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmBandwidthReduction.setStatus("mandatory")


class _AtmIfVptVccTmAbrConnectionType_Type(Integer32):
    """Custom type atmIfVptVccTmAbrConnectionType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              15)
        )
    )
    namedValues = NamedValues(
        *(("efciSwitch", 2),
          ("erSwitch", 1),
          ("nonAbrInterworking", 5),
          ("notApplicable", 15),
          ("sourceDest", 4),
          ("virtualSourceDest", 3))
    )


_AtmIfVptVccTmAbrConnectionType_Type.__name__ = "Integer32"
_AtmIfVptVccTmAbrConnectionType_Object = MibTableColumn
atmIfVptVccTmAbrConnectionType = _AtmIfVptVccTmAbrConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 100, 1, 110),
    _AtmIfVptVccTmAbrConnectionType_Type()
)
atmIfVptVccTmAbrConnectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmAbrConnectionType.setStatus("mandatory")
_AtmIfVptVccTmTxTdpTable_Object = MibTable
atmIfVptVccTmTxTdpTable = _AtmIfVptVccTmTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 451)
)
if mibBuilder.loadTexts:
    atmIfVptVccTmTxTdpTable.setStatus("mandatory")
_AtmIfVptVccTmTxTdpEntry_Object = MibTableRow
atmIfVptVccTmTxTdpEntry = _AtmIfVptVccTmTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 451, 1)
)
atmIfVptVccTmTxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTmTxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccTmTxTdpEntry.setStatus("mandatory")


class _AtmIfVptVccTmTxTdpIndex_Type(Integer32):
    """Custom type atmIfVptVccTmTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVptVccTmTxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVptVccTmTxTdpIndex_Object = MibTableColumn
atmIfVptVccTmTxTdpIndex = _AtmIfVptVccTmTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 451, 1, 1),
    _AtmIfVptVccTmTxTdpIndex_Type()
)
atmIfVptVccTmTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccTmTxTdpIndex.setStatus("mandatory")


class _AtmIfVptVccTmTxTdpValue_Type(Unsigned32):
    """Custom type atmIfVptVccTmTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVccTmTxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVccTmTxTdpValue_Object = MibTableColumn
atmIfVptVccTmTxTdpValue = _AtmIfVptVccTmTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 451, 1, 2),
    _AtmIfVptVccTmTxTdpValue_Type()
)
atmIfVptVccTmTxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmTxTdpValue.setStatus("mandatory")
_AtmIfVptVccTmTxQThreshTable_Object = MibTable
atmIfVptVccTmTxQThreshTable = _AtmIfVptVccTmTxQThreshTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 452)
)
if mibBuilder.loadTexts:
    atmIfVptVccTmTxQThreshTable.setStatus("mandatory")
_AtmIfVptVccTmTxQThreshEntry_Object = MibTableRow
atmIfVptVccTmTxQThreshEntry = _AtmIfVptVccTmTxQThreshEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 452, 1)
)
atmIfVptVccTmTxQThreshEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTmTxQThreshIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccTmTxQThreshEntry.setStatus("mandatory")


class _AtmIfVptVccTmTxQThreshIndex_Type(Integer32):
    """Custom type atmIfVptVccTmTxQThreshIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_AtmIfVptVccTmTxQThreshIndex_Type.__name__ = "Integer32"
_AtmIfVptVccTmTxQThreshIndex_Object = MibTableColumn
atmIfVptVccTmTxQThreshIndex = _AtmIfVptVccTmTxQThreshIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 452, 1, 1),
    _AtmIfVptVccTmTxQThreshIndex_Type()
)
atmIfVptVccTmTxQThreshIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccTmTxQThreshIndex.setStatus("mandatory")


class _AtmIfVptVccTmTxQThreshValue_Type(Unsigned32):
    """Custom type atmIfVptVccTmTxQThreshValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_AtmIfVptVccTmTxQThreshValue_Type.__name__ = "Unsigned32"
_AtmIfVptVccTmTxQThreshValue_Object = MibTableColumn
atmIfVptVccTmTxQThreshValue = _AtmIfVptVccTmTxQThreshValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 452, 1, 2),
    _AtmIfVptVccTmTxQThreshValue_Type()
)
atmIfVptVccTmTxQThreshValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmTxQThreshValue.setStatus("mandatory")
_AtmIfVptVccTmRxTdpTable_Object = MibTable
atmIfVptVccTmRxTdpTable = _AtmIfVptVccTmRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 453)
)
if mibBuilder.loadTexts:
    atmIfVptVccTmRxTdpTable.setStatus("mandatory")
_AtmIfVptVccTmRxTdpEntry_Object = MibTableRow
atmIfVptVccTmRxTdpEntry = _AtmIfVptVccTmRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 453, 1)
)
atmIfVptVccTmRxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTmRxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccTmRxTdpEntry.setStatus("mandatory")


class _AtmIfVptVccTmRxTdpIndex_Type(Integer32):
    """Custom type atmIfVptVccTmRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_AtmIfVptVccTmRxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVptVccTmRxTdpIndex_Object = MibTableColumn
atmIfVptVccTmRxTdpIndex = _AtmIfVptVccTmRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 453, 1, 1),
    _AtmIfVptVccTmRxTdpIndex_Type()
)
atmIfVptVccTmRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccTmRxTdpIndex.setStatus("mandatory")


class _AtmIfVptVccTmRxTdpValue_Type(Unsigned32):
    """Custom type atmIfVptVccTmRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVccTmRxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVccTmRxTdpValue_Object = MibTableColumn
atmIfVptVccTmRxTdpValue = _AtmIfVptVccTmRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 453, 1, 2),
    _AtmIfVptVccTmRxTdpValue_Type()
)
atmIfVptVccTmRxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmRxTdpValue.setStatus("mandatory")
_AtmIfVptVccTmTqpTable_Object = MibTable
atmIfVptVccTmTqpTable = _AtmIfVptVccTmTqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 454)
)
if mibBuilder.loadTexts:
    atmIfVptVccTmTqpTable.setStatus("mandatory")
_AtmIfVptVccTmTqpEntry_Object = MibTableRow
atmIfVptVccTmTqpEntry = _AtmIfVptVccTmTqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 454, 1)
)
atmIfVptVccTmTqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTmTqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccTmTqpEntry.setStatus("mandatory")


class _AtmIfVptVccTmTqpIndex_Type(Integer32):
    """Custom type atmIfVptVccTmTqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVptVccTmTqpIndex_Type.__name__ = "Integer32"
_AtmIfVptVccTmTqpIndex_Object = MibTableColumn
atmIfVptVccTmTqpIndex = _AtmIfVptVccTmTqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 454, 1, 1),
    _AtmIfVptVccTmTqpIndex_Type()
)
atmIfVptVccTmTqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccTmTqpIndex.setStatus("mandatory")


class _AtmIfVptVccTmTqpValue_Type(Unsigned32):
    """Custom type atmIfVptVccTmTqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVccTmTqpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVccTmTqpValue_Object = MibTableColumn
atmIfVptVccTmTqpValue = _AtmIfVptVccTmTqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 454, 1, 2),
    _AtmIfVptVccTmTqpValue_Type()
)
atmIfVptVccTmTqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmTqpValue.setStatus("mandatory")
_AtmIfVptVccTmRqpTable_Object = MibTable
atmIfVptVccTmRqpTable = _AtmIfVptVccTmRqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 455)
)
if mibBuilder.loadTexts:
    atmIfVptVccTmRqpTable.setStatus("mandatory")
_AtmIfVptVccTmRqpEntry_Object = MibTableRow
atmIfVptVccTmRqpEntry = _AtmIfVptVccTmRqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 455, 1)
)
atmIfVptVccTmRqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTmIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTmRqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccTmRqpEntry.setStatus("mandatory")


class _AtmIfVptVccTmRqpIndex_Type(Integer32):
    """Custom type atmIfVptVccTmRqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVptVccTmRqpIndex_Type.__name__ = "Integer32"
_AtmIfVptVccTmRqpIndex_Object = MibTableColumn
atmIfVptVccTmRqpIndex = _AtmIfVptVccTmRqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 455, 1, 1),
    _AtmIfVptVccTmRqpIndex_Type()
)
atmIfVptVccTmRqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccTmRqpIndex.setStatus("mandatory")


class _AtmIfVptVccTmRqpValue_Type(Unsigned32):
    """Custom type atmIfVptVccTmRqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVccTmRqpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVccTmRqpValue_Object = MibTableColumn
atmIfVptVccTmRqpValue = _AtmIfVptVccTmRqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 7, 455, 1, 2),
    _AtmIfVptVccTmRqpValue_Type()
)
atmIfVptVccTmRqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTmRqpValue.setStatus("mandatory")
_AtmIfVptVccStateTable_Object = MibTable
atmIfVptVccStateTable = _AtmIfVptVccStateTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 100)
)
if mibBuilder.loadTexts:
    atmIfVptVccStateTable.setStatus("mandatory")
_AtmIfVptVccStateEntry_Object = MibTableRow
atmIfVptVccStateEntry = _AtmIfVptVccStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 100, 1)
)
atmIfVptVccStateEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccStateEntry.setStatus("mandatory")


class _AtmIfVptVccAdminState_Type(Integer32):
    """Custom type atmIfVptVccAdminState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("locked", 0),
          ("shuttingDown", 2),
          ("unlocked", 1))
    )


_AtmIfVptVccAdminState_Type.__name__ = "Integer32"
_AtmIfVptVccAdminState_Object = MibTableColumn
atmIfVptVccAdminState = _AtmIfVptVccAdminState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 100, 1, 1),
    _AtmIfVptVccAdminState_Type()
)
atmIfVptVccAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccAdminState.setStatus("mandatory")


class _AtmIfVptVccOperationalState_Type(Integer32):
    """Custom type atmIfVptVccOperationalState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_AtmIfVptVccOperationalState_Type.__name__ = "Integer32"
_AtmIfVptVccOperationalState_Object = MibTableColumn
atmIfVptVccOperationalState = _AtmIfVptVccOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 100, 1, 2),
    _AtmIfVptVccOperationalState_Type()
)
atmIfVptVccOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccOperationalState.setStatus("mandatory")


class _AtmIfVptVccUsageState_Type(Integer32):
    """Custom type atmIfVptVccUsageState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("busy", 2),
          ("idle", 0))
    )


_AtmIfVptVccUsageState_Type.__name__ = "Integer32"
_AtmIfVptVccUsageState_Object = MibTableColumn
atmIfVptVccUsageState = _AtmIfVptVccUsageState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 100, 1, 3),
    _AtmIfVptVccUsageState_Type()
)
atmIfVptVccUsageState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccUsageState.setStatus("mandatory")
_AtmIfVptVccOperTable_Object = MibTable
atmIfVptVccOperTable = _AtmIfVptVccOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 110)
)
if mibBuilder.loadTexts:
    atmIfVptVccOperTable.setStatus("mandatory")
_AtmIfVptVccOperEntry_Object = MibTableRow
atmIfVptVccOperEntry = _AtmIfVptVccOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 110, 1)
)
atmIfVptVccOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccOperEntry.setStatus("mandatory")


class _AtmIfVptVccConnectionPointType_Type(Integer32):
    """Custom type atmIfVptVccConnectionPointType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("connectingPoint", 2),
          ("connectionEndPoint", 0),
          ("segmentEndPoint", 1),
          ("unknown", 3))
    )


_AtmIfVptVccConnectionPointType_Type.__name__ = "Integer32"
_AtmIfVptVccConnectionPointType_Object = MibTableColumn
atmIfVptVccConnectionPointType = _AtmIfVptVccConnectionPointType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 110, 1, 10),
    _AtmIfVptVccConnectionPointType_Type()
)
atmIfVptVccConnectionPointType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccConnectionPointType.setStatus("mandatory")
_AtmIfVptVccConnInfoTable_Object = MibTable
atmIfVptVccConnInfoTable = _AtmIfVptVccConnInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 115)
)
if mibBuilder.loadTexts:
    atmIfVptVccConnInfoTable.setStatus("mandatory")
_AtmIfVptVccConnInfoEntry_Object = MibTableRow
atmIfVptVccConnInfoEntry = _AtmIfVptVccConnInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 115, 1)
)
atmIfVptVccConnInfoEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccConnInfoEntry.setStatus("mandatory")


class _AtmIfVptVccDistributionType_Type(Integer32):
    """Custom type atmIfVptVccDistributionType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("pointToMultipoint", 1),
          ("pointToPoint", 0))
    )


_AtmIfVptVccDistributionType_Type.__name__ = "Integer32"
_AtmIfVptVccDistributionType_Object = MibTableColumn
atmIfVptVccDistributionType = _AtmIfVptVccDistributionType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 115, 1, 11),
    _AtmIfVptVccDistributionType_Type()
)
atmIfVptVccDistributionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccDistributionType.setStatus("mandatory")


class _AtmIfVptVccNumLeaves_Type(Gauge32):
    """Custom type atmIfVptVccNumLeaves based on Gauge32"""
    defaultValue = 0

    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVccNumLeaves_Type.__name__ = "Gauge32"
_AtmIfVptVccNumLeaves_Object = MibTableColumn
atmIfVptVccNumLeaves = _AtmIfVptVccNumLeaves_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 115, 1, 12),
    _AtmIfVptVccNumLeaves_Type()
)
atmIfVptVccNumLeaves.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccNumLeaves.setStatus("mandatory")


class _AtmIfVptVccCallDirection_Type(Integer32):
    """Custom type atmIfVptVccCallDirection based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("fromLink", 0),
          ("notApplicable", 2),
          ("toLink", 1))
    )


_AtmIfVptVccCallDirection_Type.__name__ = "Integer32"
_AtmIfVptVccCallDirection_Object = MibTableColumn
atmIfVptVccCallDirection = _AtmIfVptVccCallDirection_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 115, 1, 13),
    _AtmIfVptVccCallDirection_Type()
)
atmIfVptVccCallDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccCallDirection.setStatus("mandatory")
_AtmIfVptVccStatusTable_Object = MibTable
atmIfVptVccStatusTable = _AtmIfVptVccStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 120)
)
if mibBuilder.loadTexts:
    atmIfVptVccStatusTable.setStatus("mandatory")
_AtmIfVptVccStatusEntry_Object = MibTableRow
atmIfVptVccStatusEntry = _AtmIfVptVccStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 120, 1)
)
atmIfVptVccStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccStatusEntry.setStatus("mandatory")


class _AtmIfVptVccOperStatus_Type(Integer32):
    """Custom type atmIfVptVccOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("end2endDown", 2),
          ("end2endUp", 1),
          ("localDown", 4),
          ("localUpEnd2endUnknown", 3),
          ("unknown", 0))
    )


_AtmIfVptVccOperStatus_Type.__name__ = "Integer32"
_AtmIfVptVccOperStatus_Object = MibTableColumn
atmIfVptVccOperStatus = _AtmIfVptVccOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 120, 1, 20),
    _AtmIfVptVccOperStatus_Type()
)
atmIfVptVccOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccOperStatus.setStatus("mandatory")


class _AtmIfVptVccLocalFailureCause_Type(Integer32):
    """Custom type atmIfVptVccLocalFailureCause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("appNotRegistered", 4),
          ("bwReduced", 6),
          ("disabledByApp", 5),
          ("localBwLoss", 1),
          ("noFailure", 0),
          ("notAdmitted", 3),
          ("portDown", 2),
          ("vpDown", 7))
    )


_AtmIfVptVccLocalFailureCause_Type.__name__ = "Integer32"
_AtmIfVptVccLocalFailureCause_Object = MibTableColumn
atmIfVptVccLocalFailureCause = _AtmIfVptVccLocalFailureCause_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 120, 1, 25),
    _AtmIfVptVccLocalFailureCause_Type()
)
atmIfVptVccLocalFailureCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccLocalFailureCause.setStatus("mandatory")


class _AtmIfVptVccTroubled_Type(Integer32):
    """Custom type atmIfVptVccTroubled based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVptVccTroubled_Type.__name__ = "Integer32"
_AtmIfVptVccTroubled_Object = MibTableColumn
atmIfVptVccTroubled = _AtmIfVptVccTroubled_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 120, 1, 28),
    _AtmIfVptVccTroubled_Type()
)
atmIfVptVccTroubled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTroubled.setStatus("mandatory")


class _AtmIfVptVccSegLinkSideLoopbackState_Type(Integer32):
    """Custom type atmIfVptVccSegLinkSideLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVptVccSegLinkSideLoopbackState_Type.__name__ = "Integer32"
_AtmIfVptVccSegLinkSideLoopbackState_Object = MibTableColumn
atmIfVptVccSegLinkSideLoopbackState = _AtmIfVptVccSegLinkSideLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 120, 1, 30),
    _AtmIfVptVccSegLinkSideLoopbackState_Type()
)
atmIfVptVccSegLinkSideLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccSegLinkSideLoopbackState.setStatus("mandatory")


class _AtmIfVptVccSegSwitchSideLoopbackState_Type(Integer32):
    """Custom type atmIfVptVccSegSwitchSideLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVptVccSegSwitchSideLoopbackState_Type.__name__ = "Integer32"
_AtmIfVptVccSegSwitchSideLoopbackState_Object = MibTableColumn
atmIfVptVccSegSwitchSideLoopbackState = _AtmIfVptVccSegSwitchSideLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 120, 1, 40),
    _AtmIfVptVccSegSwitchSideLoopbackState_Type()
)
atmIfVptVccSegSwitchSideLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccSegSwitchSideLoopbackState.setStatus("mandatory")


class _AtmIfVptVccEndToEndLoopbackState_Type(Integer32):
    """Custom type atmIfVptVccEndToEndLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVptVccEndToEndLoopbackState_Type.__name__ = "Integer32"
_AtmIfVptVccEndToEndLoopbackState_Object = MibTableColumn
atmIfVptVccEndToEndLoopbackState = _AtmIfVptVccEndToEndLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 120, 1, 50),
    _AtmIfVptVccEndToEndLoopbackState_Type()
)
atmIfVptVccEndToEndLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccEndToEndLoopbackState.setStatus("mandatory")


class _AtmIfVptVccRxOamCellCongestionState_Type(Integer32):
    """Custom type atmIfVptVccRxOamCellCongestionState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVptVccRxOamCellCongestionState_Type.__name__ = "Integer32"
_AtmIfVptVccRxOamCellCongestionState_Object = MibTableColumn
atmIfVptVccRxOamCellCongestionState = _AtmIfVptVccRxOamCellCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 120, 1, 55),
    _AtmIfVptVccRxOamCellCongestionState_Type()
)
atmIfVptVccRxOamCellCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccRxOamCellCongestionState.setStatus("mandatory")


class _AtmIfVptVccAisState_Type(Integer32):
    """Custom type atmIfVptVccAisState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVptVccAisState_Type.__name__ = "Integer32"
_AtmIfVptVccAisState_Object = MibTableColumn
atmIfVptVccAisState = _AtmIfVptVccAisState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 120, 1, 60),
    _AtmIfVptVccAisState_Type()
)
atmIfVptVccAisState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccAisState.setStatus("mandatory")


class _AtmIfVptVccRdiState_Type(Integer32):
    """Custom type atmIfVptVccRdiState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVptVccRdiState_Type.__name__ = "Integer32"
_AtmIfVptVccRdiState_Object = MibTableColumn
atmIfVptVccRdiState = _AtmIfVptVccRdiState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 120, 1, 70),
    _AtmIfVptVccRdiState_Type()
)
atmIfVptVccRdiState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccRdiState.setStatus("mandatory")
_AtmIfVptVccTrafficTable_Object = MibTable
atmIfVptVccTrafficTable = _AtmIfVptVccTrafficTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130)
)
if mibBuilder.loadTexts:
    atmIfVptVccTrafficTable.setStatus("mandatory")
_AtmIfVptVccTrafficEntry_Object = MibTableRow
atmIfVptVccTrafficEntry = _AtmIfVptVccTrafficEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1)
)
atmIfVptVccTrafficEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccTrafficEntry.setStatus("mandatory")


class _AtmIfVptVccTxTrafficDescType_Type(Integer32):
    """Custom type atmIfVptVccTxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8))
    )


_AtmIfVptVccTxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVptVccTxTrafficDescType_Object = MibTableColumn
atmIfVptVccTxTrafficDescType = _AtmIfVptVccTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1, 10),
    _AtmIfVptVccTxTrafficDescType_Type()
)
atmIfVptVccTxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTxTrafficDescType.setStatus("obsolete")


class _AtmIfVptVccTxQosClass_Type(Integer32):
    """Custom type atmIfVptVccTxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_AtmIfVptVccTxQosClass_Type.__name__ = "Integer32"
_AtmIfVptVccTxQosClass_Object = MibTableColumn
atmIfVptVccTxQosClass = _AtmIfVptVccTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1, 30),
    _AtmIfVptVccTxQosClass_Type()
)
atmIfVptVccTxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTxQosClass.setStatus("obsolete")


class _AtmIfVptVccFwdQosClass_Type(Integer32):
    """Custom type atmIfVptVccFwdQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_AtmIfVptVccFwdQosClass_Type.__name__ = "Integer32"
_AtmIfVptVccFwdQosClass_Object = MibTableColumn
atmIfVptVccFwdQosClass = _AtmIfVptVccFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1, 31),
    _AtmIfVptVccFwdQosClass_Type()
)
atmIfVptVccFwdQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccFwdQosClass.setStatus("obsolete")


class _AtmIfVptVccTxQueueLength_Type(Integer32):
    """Custom type atmIfVptVccTxQueueLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_AtmIfVptVccTxQueueLength_Type.__name__ = "Integer32"
_AtmIfVptVccTxQueueLength_Object = MibTableColumn
atmIfVptVccTxQueueLength = _AtmIfVptVccTxQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1, 32),
    _AtmIfVptVccTxQueueLength_Type()
)
atmIfVptVccTxQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTxQueueLength.setStatus("obsolete")


class _AtmIfVptVccTxQueueCongestionState_Type(Integer32):
    """Custom type atmIfVptVccTxQueueCongestionState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_AtmIfVptVccTxQueueCongestionState_Type.__name__ = "Integer32"
_AtmIfVptVccTxQueueCongestionState_Object = MibTableColumn
atmIfVptVccTxQueueCongestionState = _AtmIfVptVccTxQueueCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1, 33),
    _AtmIfVptVccTxQueueCongestionState_Type()
)
atmIfVptVccTxQueueCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTxQueueCongestionState.setStatus("obsolete")


class _AtmIfVptVccHoldingPriority_Type(Integer32):
    """Custom type atmIfVptVccHoldingPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 6))
    )


_AtmIfVptVccHoldingPriority_Type.__name__ = "Integer32"
_AtmIfVptVccHoldingPriority_Object = MibTableColumn
atmIfVptVccHoldingPriority = _AtmIfVptVccHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1, 35),
    _AtmIfVptVccHoldingPriority_Type()
)
atmIfVptVccHoldingPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccHoldingPriority.setStatus("obsolete")


class _AtmIfVptVccRxTrafficDescType_Type(Integer32):
    """Custom type atmIfVptVccRxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8))
    )


_AtmIfVptVccRxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVptVccRxTrafficDescType_Object = MibTableColumn
atmIfVptVccRxTrafficDescType = _AtmIfVptVccRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1, 40),
    _AtmIfVptVccRxTrafficDescType_Type()
)
atmIfVptVccRxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccRxTrafficDescType.setStatus("obsolete")


class _AtmIfVptVccRxQosClass_Type(Integer32):
    """Custom type atmIfVptVccRxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_AtmIfVptVccRxQosClass_Type.__name__ = "Integer32"
_AtmIfVptVccRxQosClass_Object = MibTableColumn
atmIfVptVccRxQosClass = _AtmIfVptVccRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1, 60),
    _AtmIfVptVccRxQosClass_Type()
)
atmIfVptVccRxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccRxQosClass.setStatus("obsolete")


class _AtmIfVptVccBwdQosClass_Type(Integer32):
    """Custom type atmIfVptVccBwdQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_AtmIfVptVccBwdQosClass_Type.__name__ = "Integer32"
_AtmIfVptVccBwdQosClass_Object = MibTableColumn
atmIfVptVccBwdQosClass = _AtmIfVptVccBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1, 61),
    _AtmIfVptVccBwdQosClass_Type()
)
atmIfVptVccBwdQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccBwdQosClass.setStatus("obsolete")


class _AtmIfVptVccAtmServiceCategory_Type(Integer32):
    """Custom type atmIfVptVccAtmServiceCategory based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("constantBitRate", 1),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_AtmIfVptVccAtmServiceCategory_Type.__name__ = "Integer32"
_AtmIfVptVccAtmServiceCategory_Object = MibTableColumn
atmIfVptVccAtmServiceCategory = _AtmIfVptVccAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1, 62),
    _AtmIfVptVccAtmServiceCategory_Type()
)
atmIfVptVccAtmServiceCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccAtmServiceCategory.setStatus("obsolete")


class _AtmIfVptVccTrafficShaping_Type(Integer32):
    """Custom type atmIfVptVccTrafficShaping based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("notApplicable", 4))
    )


_AtmIfVptVccTrafficShaping_Type.__name__ = "Integer32"
_AtmIfVptVccTrafficShaping_Object = MibTableColumn
atmIfVptVccTrafficShaping = _AtmIfVptVccTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1, 70),
    _AtmIfVptVccTrafficShaping_Type()
)
atmIfVptVccTrafficShaping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTrafficShaping.setStatus("obsolete")


class _AtmIfVptVccBearerClassBbc_Type(Integer32):
    """Custom type atmIfVptVccBearerClassBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              30)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("notApplicable", 30),
          ("vp", 24),
          ("x", 16))
    )


_AtmIfVptVccBearerClassBbc_Type.__name__ = "Integer32"
_AtmIfVptVccBearerClassBbc_Object = MibTableColumn
atmIfVptVccBearerClassBbc = _AtmIfVptVccBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1, 71),
    _AtmIfVptVccBearerClassBbc_Type()
)
atmIfVptVccBearerClassBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccBearerClassBbc.setStatus("obsolete")


class _AtmIfVptVccTransferCapabilityBbc_Type(Integer32):
    """Custom type atmIfVptVccTransferCapabilityBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_AtmIfVptVccTransferCapabilityBbc_Type.__name__ = "Integer32"
_AtmIfVptVccTransferCapabilityBbc_Object = MibTableColumn
atmIfVptVccTransferCapabilityBbc = _AtmIfVptVccTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1, 72),
    _AtmIfVptVccTransferCapabilityBbc_Type()
)
atmIfVptVccTransferCapabilityBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTransferCapabilityBbc.setStatus("obsolete")


class _AtmIfVptVccClippingBbc_Type(Integer32):
    """Custom type atmIfVptVccClippingBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("notApplicable", 14),
          ("yes", 1))
    )


_AtmIfVptVccClippingBbc_Type.__name__ = "Integer32"
_AtmIfVptVccClippingBbc_Object = MibTableColumn
atmIfVptVccClippingBbc = _AtmIfVptVccClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1, 74),
    _AtmIfVptVccClippingBbc_Type()
)
atmIfVptVccClippingBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccClippingBbc.setStatus("obsolete")


class _AtmIfVptVccUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfVptVccUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("notApplicable", 4),
          ("perVc", 0))
    )


_AtmIfVptVccUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfVptVccUnshapedTransmitQueueing_Object = MibTableColumn
atmIfVptVccUnshapedTransmitQueueing = _AtmIfVptVccUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1, 75),
    _AtmIfVptVccUnshapedTransmitQueueing_Type()
)
atmIfVptVccUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccUnshapedTransmitQueueing.setStatus("obsolete")


class _AtmIfVptVccBestEffort_Type(Integer32):
    """Custom type atmIfVptVccBestEffort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 0),
          ("notApplicable", 14),
          ("notIndicated", 1))
    )


_AtmIfVptVccBestEffort_Type.__name__ = "Integer32"
_AtmIfVptVccBestEffort_Object = MibTableColumn
atmIfVptVccBestEffort = _AtmIfVptVccBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1, 76),
    _AtmIfVptVccBestEffort_Type()
)
atmIfVptVccBestEffort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccBestEffort.setStatus("obsolete")


class _AtmIfVptVccUsageParameterControl_Type(Integer32):
    """Custom type atmIfVptVccUsageParameterControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("notApplicable", 3))
    )


_AtmIfVptVccUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfVptVccUsageParameterControl_Object = MibTableColumn
atmIfVptVccUsageParameterControl = _AtmIfVptVccUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1, 80),
    _AtmIfVptVccUsageParameterControl_Type()
)
atmIfVptVccUsageParameterControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccUsageParameterControl.setStatus("obsolete")


class _AtmIfVptVccTxFrameDiscard_Type(OctetString):
    """Custom type atmIfVptVccTxFrameDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVptVccTxFrameDiscard_Type.__name__ = "OctetString"
_AtmIfVptVccTxFrameDiscard_Object = MibTableColumn
atmIfVptVccTxFrameDiscard = _AtmIfVptVccTxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1, 85),
    _AtmIfVptVccTxFrameDiscard_Type()
)
atmIfVptVccTxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTxFrameDiscard.setStatus("obsolete")


class _AtmIfVptVccRxFrameDiscard_Type(OctetString):
    """Custom type atmIfVptVccRxFrameDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVptVccRxFrameDiscard_Type.__name__ = "OctetString"
_AtmIfVptVccRxFrameDiscard_Object = MibTableColumn
atmIfVptVccRxFrameDiscard = _AtmIfVptVccRxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1, 86),
    _AtmIfVptVccRxFrameDiscard_Type()
)
atmIfVptVccRxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccRxFrameDiscard.setStatus("obsolete")


class _AtmIfVptVccBandwidthElastic_Type(Integer32):
    """Custom type atmIfVptVccBandwidthElastic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVptVccBandwidthElastic_Type.__name__ = "Integer32"
_AtmIfVptVccBandwidthElastic_Object = MibTableColumn
atmIfVptVccBandwidthElastic = _AtmIfVptVccBandwidthElastic_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1, 90),
    _AtmIfVptVccBandwidthElastic_Type()
)
atmIfVptVccBandwidthElastic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccBandwidthElastic.setStatus("obsolete")


class _AtmIfVptVccBandwidthReduction_Type(Integer32):
    """Custom type atmIfVptVccBandwidthReduction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVccBandwidthReduction_Type.__name__ = "Integer32"
_AtmIfVptVccBandwidthReduction_Object = MibTableColumn
atmIfVptVccBandwidthReduction = _AtmIfVptVccBandwidthReduction_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 130, 1, 100),
    _AtmIfVptVccBandwidthReduction_Type()
)
atmIfVptVccBandwidthReduction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccBandwidthReduction.setStatus("obsolete")
_AtmIfVptVccStatsTable_Object = MibTable
atmIfVptVccStatsTable = _AtmIfVptVccStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140)
)
if mibBuilder.loadTexts:
    atmIfVptVccStatsTable.setStatus("mandatory")
_AtmIfVptVccStatsEntry_Object = MibTableRow
atmIfVptVccStatsEntry = _AtmIfVptVccStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1)
)
atmIfVptVccStatsEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccStatsEntry.setStatus("mandatory")
_AtmIfVptVccStatsTxCell_Type = PassportCounter64
_AtmIfVptVccStatsTxCell_Object = MibTableColumn
atmIfVptVccStatsTxCell = _AtmIfVptVccStatsTxCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 10),
    _AtmIfVptVccStatsTxCell_Type()
)
atmIfVptVccStatsTxCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccStatsTxCell.setStatus("mandatory")
_AtmIfVptVccStatsTxCellClp_Type = PassportCounter64
_AtmIfVptVccStatsTxCellClp_Object = MibTableColumn
atmIfVptVccStatsTxCellClp = _AtmIfVptVccStatsTxCellClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 20),
    _AtmIfVptVccStatsTxCellClp_Type()
)
atmIfVptVccStatsTxCellClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccStatsTxCellClp.setStatus("mandatory")
_AtmIfVptVccTxDiscard_Type = PassportCounter64
_AtmIfVptVccTxDiscard_Object = MibTableColumn
atmIfVptVccTxDiscard = _AtmIfVptVccTxDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 30),
    _AtmIfVptVccTxDiscard_Type()
)
atmIfVptVccTxDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTxDiscard.setStatus("obsolete")
_AtmIfVptVccTxDiscardClp_Type = PassportCounter64
_AtmIfVptVccTxDiscardClp_Object = MibTableColumn
atmIfVptVccTxDiscardClp = _AtmIfVptVccTxDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 40),
    _AtmIfVptVccTxDiscardClp_Type()
)
atmIfVptVccTxDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTxDiscardClp.setStatus("obsolete")
_AtmIfVptVccStatsTxCellDiscard_Type = PassportCounter64
_AtmIfVptVccStatsTxCellDiscard_Object = MibTableColumn
atmIfVptVccStatsTxCellDiscard = _AtmIfVptVccStatsTxCellDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 42),
    _AtmIfVptVccStatsTxCellDiscard_Type()
)
atmIfVptVccStatsTxCellDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccStatsTxCellDiscard.setStatus("mandatory")
_AtmIfVptVccStatsTxCellDiscardClp_Type = PassportCounter64
_AtmIfVptVccStatsTxCellDiscardClp_Object = MibTableColumn
atmIfVptVccStatsTxCellDiscardClp = _AtmIfVptVccStatsTxCellDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 43),
    _AtmIfVptVccStatsTxCellDiscardClp_Type()
)
atmIfVptVccStatsTxCellDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccStatsTxCellDiscardClp.setStatus("mandatory")
_AtmIfVptVccStatsTxFrameDiscard_Type = PassportCounter64
_AtmIfVptVccStatsTxFrameDiscard_Object = MibTableColumn
atmIfVptVccStatsTxFrameDiscard = _AtmIfVptVccStatsTxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 46),
    _AtmIfVptVccStatsTxFrameDiscard_Type()
)
atmIfVptVccStatsTxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccStatsTxFrameDiscard.setStatus("mandatory")
_AtmIfVptVccStatsTxFrameDiscardClp_Type = PassportCounter64
_AtmIfVptVccStatsTxFrameDiscardClp_Object = MibTableColumn
atmIfVptVccStatsTxFrameDiscardClp = _AtmIfVptVccStatsTxFrameDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 47),
    _AtmIfVptVccStatsTxFrameDiscardClp_Type()
)
atmIfVptVccStatsTxFrameDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccStatsTxFrameDiscardClp.setStatus("mandatory")


class _AtmIfVptVccTxUtilization_Type(Gauge32):
    """Custom type atmIfVptVccTxUtilization based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 200),
        ValueRangeConstraint(255, 255),
    )


_AtmIfVptVccTxUtilization_Type.__name__ = "Gauge32"
_AtmIfVptVccTxUtilization_Object = MibTableColumn
atmIfVptVccTxUtilization = _AtmIfVptVccTxUtilization_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 48),
    _AtmIfVptVccTxUtilization_Type()
)
atmIfVptVccTxUtilization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTxUtilization.setStatus("mandatory")
_AtmIfVptVccStatsRxCell_Type = PassportCounter64
_AtmIfVptVccStatsRxCell_Object = MibTableColumn
atmIfVptVccStatsRxCell = _AtmIfVptVccStatsRxCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 50),
    _AtmIfVptVccStatsRxCell_Type()
)
atmIfVptVccStatsRxCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccStatsRxCell.setStatus("mandatory")
_AtmIfVptVccStatsRxCellClp_Type = PassportCounter64
_AtmIfVptVccStatsRxCellClp_Object = MibTableColumn
atmIfVptVccStatsRxCellClp = _AtmIfVptVccStatsRxCellClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 60),
    _AtmIfVptVccStatsRxCellClp_Type()
)
atmIfVptVccStatsRxCellClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccStatsRxCellClp.setStatus("mandatory")
_AtmIfVptVccRxDiscard_Type = PassportCounter64
_AtmIfVptVccRxDiscard_Object = MibTableColumn
atmIfVptVccRxDiscard = _AtmIfVptVccRxDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 70),
    _AtmIfVptVccRxDiscard_Type()
)
atmIfVptVccRxDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccRxDiscard.setStatus("obsolete")
_AtmIfVptVccRxDiscardClp_Type = PassportCounter64
_AtmIfVptVccRxDiscardClp_Object = MibTableColumn
atmIfVptVccRxDiscardClp = _AtmIfVptVccRxDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 80),
    _AtmIfVptVccRxDiscardClp_Type()
)
atmIfVptVccRxDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccRxDiscardClp.setStatus("obsolete")
_AtmIfVptVccStatsRxCellDiscard_Type = PassportCounter64
_AtmIfVptVccStatsRxCellDiscard_Object = MibTableColumn
atmIfVptVccStatsRxCellDiscard = _AtmIfVptVccStatsRxCellDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 82),
    _AtmIfVptVccStatsRxCellDiscard_Type()
)
atmIfVptVccStatsRxCellDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccStatsRxCellDiscard.setStatus("mandatory")
_AtmIfVptVccStatsRxCellDiscardClp_Type = PassportCounter64
_AtmIfVptVccStatsRxCellDiscardClp_Object = MibTableColumn
atmIfVptVccStatsRxCellDiscardClp = _AtmIfVptVccStatsRxCellDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 83),
    _AtmIfVptVccStatsRxCellDiscardClp_Type()
)
atmIfVptVccStatsRxCellDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccStatsRxCellDiscardClp.setStatus("mandatory")
_AtmIfVptVccStatsRxFrameDiscard_Type = PassportCounter64
_AtmIfVptVccStatsRxFrameDiscard_Object = MibTableColumn
atmIfVptVccStatsRxFrameDiscard = _AtmIfVptVccStatsRxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 86),
    _AtmIfVptVccStatsRxFrameDiscard_Type()
)
atmIfVptVccStatsRxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccStatsRxFrameDiscard.setStatus("mandatory")
_AtmIfVptVccStatsRxFrameDiscardClp_Type = PassportCounter64
_AtmIfVptVccStatsRxFrameDiscardClp_Object = MibTableColumn
atmIfVptVccStatsRxFrameDiscardClp = _AtmIfVptVccStatsRxFrameDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 88),
    _AtmIfVptVccStatsRxFrameDiscardClp_Type()
)
atmIfVptVccStatsRxFrameDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccStatsRxFrameDiscardClp.setStatus("mandatory")


class _AtmIfVptVccRxUtilization_Type(Gauge32):
    """Custom type atmIfVptVccRxUtilization based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 200),
        ValueRangeConstraint(255, 255),
    )


_AtmIfVptVccRxUtilization_Type.__name__ = "Gauge32"
_AtmIfVptVccRxUtilization_Object = MibTableColumn
atmIfVptVccRxUtilization = _AtmIfVptVccRxUtilization_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 89),
    _AtmIfVptVccRxUtilization_Type()
)
atmIfVptVccRxUtilization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccRxUtilization.setStatus("mandatory")
_AtmIfVptVccStatsRxUpcViolationOnEnforcer1_Type = PassportCounter64
_AtmIfVptVccStatsRxUpcViolationOnEnforcer1_Object = MibTableColumn
atmIfVptVccStatsRxUpcViolationOnEnforcer1 = _AtmIfVptVccStatsRxUpcViolationOnEnforcer1_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 90),
    _AtmIfVptVccStatsRxUpcViolationOnEnforcer1_Type()
)
atmIfVptVccStatsRxUpcViolationOnEnforcer1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccStatsRxUpcViolationOnEnforcer1.setStatus("mandatory")
_AtmIfVptVccStatsRxUpcViolationOnEnforcer2_Type = PassportCounter64
_AtmIfVptVccStatsRxUpcViolationOnEnforcer2_Object = MibTableColumn
atmIfVptVccStatsRxUpcViolationOnEnforcer2 = _AtmIfVptVccStatsRxUpcViolationOnEnforcer2_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 92),
    _AtmIfVptVccStatsRxUpcViolationOnEnforcer2_Type()
)
atmIfVptVccStatsRxUpcViolationOnEnforcer2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccStatsRxUpcViolationOnEnforcer2.setStatus("mandatory")
_AtmIfVptVccStatsRxAal5FrameError_Type = PassportCounter64
_AtmIfVptVccStatsRxAal5FrameError_Object = MibTableColumn
atmIfVptVccStatsRxAal5FrameError = _AtmIfVptVccStatsRxAal5FrameError_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 100),
    _AtmIfVptVccStatsRxAal5FrameError_Type()
)
atmIfVptVccStatsRxAal5FrameError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccStatsRxAal5FrameError.setStatus("mandatory")
_AtmIfVptVccStatsRxAal5FrameAbort_Type = PassportCounter64
_AtmIfVptVccStatsRxAal5FrameAbort_Object = MibTableColumn
atmIfVptVccStatsRxAal5FrameAbort = _AtmIfVptVccStatsRxAal5FrameAbort_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 140, 1, 102),
    _AtmIfVptVccStatsRxAal5FrameAbort_Type()
)
atmIfVptVccStatsRxAal5FrameAbort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccStatsRxAal5FrameAbort.setStatus("mandatory")
_AtmIfVptVccTxTdpTable_Object = MibTable
atmIfVptVccTxTdpTable = _AtmIfVptVccTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 294)
)
if mibBuilder.loadTexts:
    atmIfVptVccTxTdpTable.setStatus("obsolete")
_AtmIfVptVccTxTdpEntry_Object = MibTableRow
atmIfVptVccTxTdpEntry = _AtmIfVptVccTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 294, 1)
)
atmIfVptVccTxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccTxTdpEntry.setStatus("obsolete")


class _AtmIfVptVccTxTdpIndex_Type(Integer32):
    """Custom type atmIfVptVccTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVptVccTxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVptVccTxTdpIndex_Object = MibTableColumn
atmIfVptVccTxTdpIndex = _AtmIfVptVccTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 294, 1, 1),
    _AtmIfVptVccTxTdpIndex_Type()
)
atmIfVptVccTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccTxTdpIndex.setStatus("obsolete")


class _AtmIfVptVccTxTdpValue_Type(Unsigned32):
    """Custom type atmIfVptVccTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVccTxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVccTxTdpValue_Object = MibTableColumn
atmIfVptVccTxTdpValue = _AtmIfVptVccTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 294, 1, 2),
    _AtmIfVptVccTxTdpValue_Type()
)
atmIfVptVccTxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTxTdpValue.setStatus("obsolete")
_AtmIfVptVccRxTdpTable_Object = MibTable
atmIfVptVccRxTdpTable = _AtmIfVptVccRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 295)
)
if mibBuilder.loadTexts:
    atmIfVptVccRxTdpTable.setStatus("obsolete")
_AtmIfVptVccRxTdpEntry_Object = MibTableRow
atmIfVptVccRxTdpEntry = _AtmIfVptVccRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 295, 1)
)
atmIfVptVccRxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccRxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccRxTdpEntry.setStatus("obsolete")


class _AtmIfVptVccRxTdpIndex_Type(Integer32):
    """Custom type atmIfVptVccRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_AtmIfVptVccRxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVptVccRxTdpIndex_Object = MibTableColumn
atmIfVptVccRxTdpIndex = _AtmIfVptVccRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 295, 1, 1),
    _AtmIfVptVccRxTdpIndex_Type()
)
atmIfVptVccRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccRxTdpIndex.setStatus("obsolete")


class _AtmIfVptVccRxTdpValue_Type(Unsigned32):
    """Custom type atmIfVptVccRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVccRxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVccRxTdpValue_Object = MibTableColumn
atmIfVptVccRxTdpValue = _AtmIfVptVccRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 295, 1, 2),
    _AtmIfVptVccRxTdpValue_Type()
)
atmIfVptVccRxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccRxTdpValue.setStatus("obsolete")
_AtmIfVptVccTxQThreshTable_Object = MibTable
atmIfVptVccTxQThreshTable = _AtmIfVptVccTxQThreshTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 352)
)
if mibBuilder.loadTexts:
    atmIfVptVccTxQThreshTable.setStatus("obsolete")
_AtmIfVptVccTxQThreshEntry_Object = MibTableRow
atmIfVptVccTxQThreshEntry = _AtmIfVptVccTxQThreshEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 352, 1)
)
atmIfVptVccTxQThreshEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccTxQThreshIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccTxQThreshEntry.setStatus("obsolete")


class _AtmIfVptVccTxQThreshIndex_Type(Integer32):
    """Custom type atmIfVptVccTxQThreshIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_AtmIfVptVccTxQThreshIndex_Type.__name__ = "Integer32"
_AtmIfVptVccTxQThreshIndex_Object = MibTableColumn
atmIfVptVccTxQThreshIndex = _AtmIfVptVccTxQThreshIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 352, 1, 1),
    _AtmIfVptVccTxQThreshIndex_Type()
)
atmIfVptVccTxQThreshIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccTxQThreshIndex.setStatus("obsolete")


class _AtmIfVptVccTxQThreshValue_Type(Unsigned32):
    """Custom type atmIfVptVccTxQThreshValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_AtmIfVptVccTxQThreshValue_Type.__name__ = "Unsigned32"
_AtmIfVptVccTxQThreshValue_Object = MibTableColumn
atmIfVptVccTxQThreshValue = _AtmIfVptVccTxQThreshValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 352, 1, 2),
    _AtmIfVptVccTxQThreshValue_Type()
)
atmIfVptVccTxQThreshValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccTxQThreshValue.setStatus("obsolete")
_AtmIfVptVccFqpTable_Object = MibTable
atmIfVptVccFqpTable = _AtmIfVptVccFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 357)
)
if mibBuilder.loadTexts:
    atmIfVptVccFqpTable.setStatus("obsolete")
_AtmIfVptVccFqpEntry_Object = MibTableRow
atmIfVptVccFqpEntry = _AtmIfVptVccFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 357, 1)
)
atmIfVptVccFqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccFqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccFqpEntry.setStatus("obsolete")


class _AtmIfVptVccFqpIndex_Type(Integer32):
    """Custom type atmIfVptVccFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVptVccFqpIndex_Type.__name__ = "Integer32"
_AtmIfVptVccFqpIndex_Object = MibTableColumn
atmIfVptVccFqpIndex = _AtmIfVptVccFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 357, 1, 1),
    _AtmIfVptVccFqpIndex_Type()
)
atmIfVptVccFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccFqpIndex.setStatus("obsolete")


class _AtmIfVptVccFqpValue_Type(Unsigned32):
    """Custom type atmIfVptVccFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVccFqpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVccFqpValue_Object = MibTableColumn
atmIfVptVccFqpValue = _AtmIfVptVccFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 357, 1, 2),
    _AtmIfVptVccFqpValue_Type()
)
atmIfVptVccFqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccFqpValue.setStatus("obsolete")
_AtmIfVptVccBqpTable_Object = MibTable
atmIfVptVccBqpTable = _AtmIfVptVccBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 358)
)
if mibBuilder.loadTexts:
    atmIfVptVccBqpTable.setStatus("obsolete")
_AtmIfVptVccBqpEntry_Object = MibTableRow
atmIfVptVccBqpEntry = _AtmIfVptVccBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 358, 1)
)
atmIfVptVccBqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptVccBqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptVccBqpEntry.setStatus("obsolete")


class _AtmIfVptVccBqpIndex_Type(Integer32):
    """Custom type atmIfVptVccBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVptVccBqpIndex_Type.__name__ = "Integer32"
_AtmIfVptVccBqpIndex_Object = MibTableColumn
atmIfVptVccBqpIndex = _AtmIfVptVccBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 358, 1, 1),
    _AtmIfVptVccBqpIndex_Type()
)
atmIfVptVccBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptVccBqpIndex.setStatus("obsolete")


class _AtmIfVptVccBqpValue_Type(Unsigned32):
    """Custom type atmIfVptVccBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptVccBqpValue_Type.__name__ = "Unsigned32"
_AtmIfVptVccBqpValue_Object = MibTableColumn
atmIfVptVccBqpValue = _AtmIfVptVccBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 20, 358, 1, 2),
    _AtmIfVptVccBqpValue_Type()
)
atmIfVptVccBqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptVccBqpValue.setStatus("obsolete")
_AtmIfVptStateTable_Object = MibTable
atmIfVptStateTable = _AtmIfVptStateTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 100)
)
if mibBuilder.loadTexts:
    atmIfVptStateTable.setStatus("mandatory")
_AtmIfVptStateEntry_Object = MibTableRow
atmIfVptStateEntry = _AtmIfVptStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 100, 1)
)
atmIfVptStateEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptStateEntry.setStatus("mandatory")


class _AtmIfVptAdminState_Type(Integer32):
    """Custom type atmIfVptAdminState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("locked", 0),
          ("shuttingDown", 2),
          ("unlocked", 1))
    )


_AtmIfVptAdminState_Type.__name__ = "Integer32"
_AtmIfVptAdminState_Object = MibTableColumn
atmIfVptAdminState = _AtmIfVptAdminState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 100, 1, 1),
    _AtmIfVptAdminState_Type()
)
atmIfVptAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptAdminState.setStatus("mandatory")


class _AtmIfVptOperationalState_Type(Integer32):
    """Custom type atmIfVptOperationalState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_AtmIfVptOperationalState_Type.__name__ = "Integer32"
_AtmIfVptOperationalState_Object = MibTableColumn
atmIfVptOperationalState = _AtmIfVptOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 100, 1, 2),
    _AtmIfVptOperationalState_Type()
)
atmIfVptOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptOperationalState.setStatus("mandatory")


class _AtmIfVptUsageState_Type(Integer32):
    """Custom type atmIfVptUsageState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("busy", 2),
          ("idle", 0))
    )


_AtmIfVptUsageState_Type.__name__ = "Integer32"
_AtmIfVptUsageState_Object = MibTableColumn
atmIfVptUsageState = _AtmIfVptUsageState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 100, 1, 3),
    _AtmIfVptUsageState_Type()
)
atmIfVptUsageState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptUsageState.setStatus("mandatory")
_AtmIfVptOperTable_Object = MibTable
atmIfVptOperTable = _AtmIfVptOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 110)
)
if mibBuilder.loadTexts:
    atmIfVptOperTable.setStatus("mandatory")
_AtmIfVptOperEntry_Object = MibTableRow
atmIfVptOperEntry = _AtmIfVptOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 110, 1)
)
atmIfVptOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptOperEntry.setStatus("mandatory")


class _AtmIfVptConnectionPointType_Type(Integer32):
    """Custom type atmIfVptConnectionPointType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("connectingPoint", 2),
          ("connectionEndPoint", 0),
          ("segmentEndPoint", 1),
          ("unknown", 3))
    )


_AtmIfVptConnectionPointType_Type.__name__ = "Integer32"
_AtmIfVptConnectionPointType_Object = MibTableColumn
atmIfVptConnectionPointType = _AtmIfVptConnectionPointType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 110, 1, 10),
    _AtmIfVptConnectionPointType_Type()
)
atmIfVptConnectionPointType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptConnectionPointType.setStatus("mandatory")
_AtmIfVptStatusTable_Object = MibTable
atmIfVptStatusTable = _AtmIfVptStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 120)
)
if mibBuilder.loadTexts:
    atmIfVptStatusTable.setStatus("mandatory")
_AtmIfVptStatusEntry_Object = MibTableRow
atmIfVptStatusEntry = _AtmIfVptStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 120, 1)
)
atmIfVptStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptStatusEntry.setStatus("mandatory")


class _AtmIfVptOperStatus_Type(Integer32):
    """Custom type atmIfVptOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("end2endDown", 2),
          ("end2endUp", 1),
          ("localDown", 4),
          ("localUpEnd2endUnknown", 3),
          ("unknown", 0))
    )


_AtmIfVptOperStatus_Type.__name__ = "Integer32"
_AtmIfVptOperStatus_Object = MibTableColumn
atmIfVptOperStatus = _AtmIfVptOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 120, 1, 20),
    _AtmIfVptOperStatus_Type()
)
atmIfVptOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptOperStatus.setStatus("mandatory")


class _AtmIfVptLocalFailureCause_Type(Integer32):
    """Custom type atmIfVptLocalFailureCause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("appNotRegistered", 4),
          ("bwReduced", 6),
          ("disabledByApp", 5),
          ("localBwLoss", 1),
          ("noFailure", 0),
          ("notAdmitted", 3),
          ("portDown", 2),
          ("vpDown", 7))
    )


_AtmIfVptLocalFailureCause_Type.__name__ = "Integer32"
_AtmIfVptLocalFailureCause_Object = MibTableColumn
atmIfVptLocalFailureCause = _AtmIfVptLocalFailureCause_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 120, 1, 25),
    _AtmIfVptLocalFailureCause_Type()
)
atmIfVptLocalFailureCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptLocalFailureCause.setStatus("mandatory")


class _AtmIfVptTroubled_Type(Integer32):
    """Custom type atmIfVptTroubled based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVptTroubled_Type.__name__ = "Integer32"
_AtmIfVptTroubled_Object = MibTableColumn
atmIfVptTroubled = _AtmIfVptTroubled_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 120, 1, 28),
    _AtmIfVptTroubled_Type()
)
atmIfVptTroubled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTroubled.setStatus("mandatory")


class _AtmIfVptSegLinkSideLoopbackState_Type(Integer32):
    """Custom type atmIfVptSegLinkSideLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVptSegLinkSideLoopbackState_Type.__name__ = "Integer32"
_AtmIfVptSegLinkSideLoopbackState_Object = MibTableColumn
atmIfVptSegLinkSideLoopbackState = _AtmIfVptSegLinkSideLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 120, 1, 30),
    _AtmIfVptSegLinkSideLoopbackState_Type()
)
atmIfVptSegLinkSideLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptSegLinkSideLoopbackState.setStatus("mandatory")


class _AtmIfVptSegSwitchSideLoopbackState_Type(Integer32):
    """Custom type atmIfVptSegSwitchSideLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVptSegSwitchSideLoopbackState_Type.__name__ = "Integer32"
_AtmIfVptSegSwitchSideLoopbackState_Object = MibTableColumn
atmIfVptSegSwitchSideLoopbackState = _AtmIfVptSegSwitchSideLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 120, 1, 40),
    _AtmIfVptSegSwitchSideLoopbackState_Type()
)
atmIfVptSegSwitchSideLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptSegSwitchSideLoopbackState.setStatus("mandatory")


class _AtmIfVptEndToEndLoopbackState_Type(Integer32):
    """Custom type atmIfVptEndToEndLoopbackState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVptEndToEndLoopbackState_Type.__name__ = "Integer32"
_AtmIfVptEndToEndLoopbackState_Object = MibTableColumn
atmIfVptEndToEndLoopbackState = _AtmIfVptEndToEndLoopbackState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 120, 1, 50),
    _AtmIfVptEndToEndLoopbackState_Type()
)
atmIfVptEndToEndLoopbackState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptEndToEndLoopbackState.setStatus("mandatory")


class _AtmIfVptRxOamCellCongestionState_Type(Integer32):
    """Custom type atmIfVptRxOamCellCongestionState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVptRxOamCellCongestionState_Type.__name__ = "Integer32"
_AtmIfVptRxOamCellCongestionState_Object = MibTableColumn
atmIfVptRxOamCellCongestionState = _AtmIfVptRxOamCellCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 120, 1, 55),
    _AtmIfVptRxOamCellCongestionState_Type()
)
atmIfVptRxOamCellCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptRxOamCellCongestionState.setStatus("mandatory")


class _AtmIfVptAisState_Type(Integer32):
    """Custom type atmIfVptAisState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVptAisState_Type.__name__ = "Integer32"
_AtmIfVptAisState_Object = MibTableColumn
atmIfVptAisState = _AtmIfVptAisState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 120, 1, 60),
    _AtmIfVptAisState_Type()
)
atmIfVptAisState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptAisState.setStatus("mandatory")


class _AtmIfVptRdiState_Type(Integer32):
    """Custom type atmIfVptRdiState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bad", 1),
          ("good", 0),
          ("notApplicable", 3),
          ("unknown", 2))
    )


_AtmIfVptRdiState_Type.__name__ = "Integer32"
_AtmIfVptRdiState_Object = MibTableColumn
atmIfVptRdiState = _AtmIfVptRdiState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 120, 1, 70),
    _AtmIfVptRdiState_Type()
)
atmIfVptRdiState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptRdiState.setStatus("mandatory")
_AtmIfVptTrafficTable_Object = MibTable
atmIfVptTrafficTable = _AtmIfVptTrafficTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130)
)
if mibBuilder.loadTexts:
    atmIfVptTrafficTable.setStatus("mandatory")
_AtmIfVptTrafficEntry_Object = MibTableRow
atmIfVptTrafficEntry = _AtmIfVptTrafficEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1)
)
atmIfVptTrafficEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptTrafficEntry.setStatus("mandatory")


class _AtmIfVptTxTrafficDescType_Type(Integer32):
    """Custom type atmIfVptTxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8))
    )


_AtmIfVptTxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVptTxTrafficDescType_Object = MibTableColumn
atmIfVptTxTrafficDescType = _AtmIfVptTxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1, 10),
    _AtmIfVptTxTrafficDescType_Type()
)
atmIfVptTxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTxTrafficDescType.setStatus("obsolete")


class _AtmIfVptTxQosClass_Type(Integer32):
    """Custom type atmIfVptTxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_AtmIfVptTxQosClass_Type.__name__ = "Integer32"
_AtmIfVptTxQosClass_Object = MibTableColumn
atmIfVptTxQosClass = _AtmIfVptTxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1, 30),
    _AtmIfVptTxQosClass_Type()
)
atmIfVptTxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTxQosClass.setStatus("obsolete")


class _AtmIfVptFwdQosClass_Type(Integer32):
    """Custom type atmIfVptFwdQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_AtmIfVptFwdQosClass_Type.__name__ = "Integer32"
_AtmIfVptFwdQosClass_Object = MibTableColumn
atmIfVptFwdQosClass = _AtmIfVptFwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1, 31),
    _AtmIfVptFwdQosClass_Type()
)
atmIfVptFwdQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptFwdQosClass.setStatus("obsolete")


class _AtmIfVptTxQueueLength_Type(Integer32):
    """Custom type atmIfVptTxQueueLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_AtmIfVptTxQueueLength_Type.__name__ = "Integer32"
_AtmIfVptTxQueueLength_Object = MibTableColumn
atmIfVptTxQueueLength = _AtmIfVptTxQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1, 32),
    _AtmIfVptTxQueueLength_Type()
)
atmIfVptTxQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTxQueueLength.setStatus("obsolete")


class _AtmIfVptTxQueueCongestionState_Type(Integer32):
    """Custom type atmIfVptTxQueueCongestionState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_AtmIfVptTxQueueCongestionState_Type.__name__ = "Integer32"
_AtmIfVptTxQueueCongestionState_Object = MibTableColumn
atmIfVptTxQueueCongestionState = _AtmIfVptTxQueueCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1, 33),
    _AtmIfVptTxQueueCongestionState_Type()
)
atmIfVptTxQueueCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTxQueueCongestionState.setStatus("obsolete")


class _AtmIfVptHoldingPriority_Type(Integer32):
    """Custom type atmIfVptHoldingPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 6))
    )


_AtmIfVptHoldingPriority_Type.__name__ = "Integer32"
_AtmIfVptHoldingPriority_Object = MibTableColumn
atmIfVptHoldingPriority = _AtmIfVptHoldingPriority_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1, 35),
    _AtmIfVptHoldingPriority_Type()
)
atmIfVptHoldingPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptHoldingPriority.setStatus("obsolete")


class _AtmIfVptRxTrafficDescType_Type(Integer32):
    """Custom type atmIfVptRxTrafficDescType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("n5", 5),
          ("n6", 6),
          ("n7", 7),
          ("n8", 8))
    )


_AtmIfVptRxTrafficDescType_Type.__name__ = "Integer32"
_AtmIfVptRxTrafficDescType_Object = MibTableColumn
atmIfVptRxTrafficDescType = _AtmIfVptRxTrafficDescType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1, 40),
    _AtmIfVptRxTrafficDescType_Type()
)
atmIfVptRxTrafficDescType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptRxTrafficDescType.setStatus("obsolete")


class _AtmIfVptRxQosClass_Type(Integer32):
    """Custom type atmIfVptRxQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionOriented", 3),
          ("connectionless", 4),
          ("constantBitRate", 1),
          ("unspecified", 0),
          ("variableBitRate", 2))
    )


_AtmIfVptRxQosClass_Type.__name__ = "Integer32"
_AtmIfVptRxQosClass_Object = MibTableColumn
atmIfVptRxQosClass = _AtmIfVptRxQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1, 60),
    _AtmIfVptRxQosClass_Type()
)
atmIfVptRxQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptRxQosClass.setStatus("obsolete")


class _AtmIfVptBwdQosClass_Type(Integer32):
    """Custom type atmIfVptBwdQosClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              14)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n2", 2),
          ("n3", 3),
          ("n4", 4),
          ("notApplicable", 14))
    )


_AtmIfVptBwdQosClass_Type.__name__ = "Integer32"
_AtmIfVptBwdQosClass_Object = MibTableColumn
atmIfVptBwdQosClass = _AtmIfVptBwdQosClass_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1, 61),
    _AtmIfVptBwdQosClass_Type()
)
atmIfVptBwdQosClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptBwdQosClass.setStatus("obsolete")


class _AtmIfVptAtmServiceCategory_Type(Integer32):
    """Custom type atmIfVptAtmServiceCategory based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("constantBitRate", 1),
          ("nrtVariableBitRate", 3),
          ("rtVariableBitRate", 2),
          ("unspecifiedBitRate", 0))
    )


_AtmIfVptAtmServiceCategory_Type.__name__ = "Integer32"
_AtmIfVptAtmServiceCategory_Object = MibTableColumn
atmIfVptAtmServiceCategory = _AtmIfVptAtmServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1, 62),
    _AtmIfVptAtmServiceCategory_Type()
)
atmIfVptAtmServiceCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptAtmServiceCategory.setStatus("obsolete")


class _AtmIfVptTrafficShaping_Type(Integer32):
    """Custom type atmIfVptTrafficShaping based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("notApplicable", 4))
    )


_AtmIfVptTrafficShaping_Type.__name__ = "Integer32"
_AtmIfVptTrafficShaping_Object = MibTableColumn
atmIfVptTrafficShaping = _AtmIfVptTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1, 70),
    _AtmIfVptTrafficShaping_Type()
)
atmIfVptTrafficShaping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTrafficShaping.setStatus("obsolete")


class _AtmIfVptBearerClassBbc_Type(Integer32):
    """Custom type atmIfVptBearerClassBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              16,
              24,
              30)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("c", 3),
          ("notApplicable", 30),
          ("vp", 24),
          ("x", 16))
    )


_AtmIfVptBearerClassBbc_Type.__name__ = "Integer32"
_AtmIfVptBearerClassBbc_Object = MibTableColumn
atmIfVptBearerClassBbc = _AtmIfVptBearerClassBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1, 71),
    _AtmIfVptBearerClassBbc_Type()
)
atmIfVptBearerClassBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptBearerClassBbc.setStatus("obsolete")


class _AtmIfVptTransferCapabilityBbc_Type(Integer32):
    """Custom type atmIfVptTransferCapabilityBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              8,
              9,
              10,
              30)
        )
    )
    namedValues = NamedValues(
        *(("n0", 0),
          ("n1", 1),
          ("n10", 10),
          ("n2", 2),
          ("n5", 5),
          ("n8", 8),
          ("n9", 9),
          ("notApplicable", 30))
    )


_AtmIfVptTransferCapabilityBbc_Type.__name__ = "Integer32"
_AtmIfVptTransferCapabilityBbc_Object = MibTableColumn
atmIfVptTransferCapabilityBbc = _AtmIfVptTransferCapabilityBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1, 72),
    _AtmIfVptTransferCapabilityBbc_Type()
)
atmIfVptTransferCapabilityBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTransferCapabilityBbc.setStatus("obsolete")


class _AtmIfVptClippingBbc_Type(Integer32):
    """Custom type atmIfVptClippingBbc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("notApplicable", 14),
          ("yes", 1))
    )


_AtmIfVptClippingBbc_Type.__name__ = "Integer32"
_AtmIfVptClippingBbc_Object = MibTableColumn
atmIfVptClippingBbc = _AtmIfVptClippingBbc_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1, 74),
    _AtmIfVptClippingBbc_Type()
)
atmIfVptClippingBbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptClippingBbc.setStatus("obsolete")


class _AtmIfVptUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfVptUnshapedTransmitQueueing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("notApplicable", 4),
          ("perVc", 0))
    )


_AtmIfVptUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfVptUnshapedTransmitQueueing_Object = MibTableColumn
atmIfVptUnshapedTransmitQueueing = _AtmIfVptUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1, 75),
    _AtmIfVptUnshapedTransmitQueueing_Type()
)
atmIfVptUnshapedTransmitQueueing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptUnshapedTransmitQueueing.setStatus("obsolete")


class _AtmIfVptBestEffort_Type(Integer32):
    """Custom type atmIfVptBestEffort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              14)
        )
    )
    namedValues = NamedValues(
        *(("indicated", 0),
          ("notApplicable", 14),
          ("notIndicated", 1))
    )


_AtmIfVptBestEffort_Type.__name__ = "Integer32"
_AtmIfVptBestEffort_Object = MibTableColumn
atmIfVptBestEffort = _AtmIfVptBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1, 76),
    _AtmIfVptBestEffort_Type()
)
atmIfVptBestEffort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptBestEffort.setStatus("obsolete")


class _AtmIfVptUsageParameterControl_Type(Integer32):
    """Custom type atmIfVptUsageParameterControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0),
          ("notApplicable", 3))
    )


_AtmIfVptUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfVptUsageParameterControl_Object = MibTableColumn
atmIfVptUsageParameterControl = _AtmIfVptUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1, 80),
    _AtmIfVptUsageParameterControl_Type()
)
atmIfVptUsageParameterControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptUsageParameterControl.setStatus("obsolete")


class _AtmIfVptTxFrameDiscard_Type(OctetString):
    """Custom type atmIfVptTxFrameDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVptTxFrameDiscard_Type.__name__ = "OctetString"
_AtmIfVptTxFrameDiscard_Object = MibTableColumn
atmIfVptTxFrameDiscard = _AtmIfVptTxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1, 85),
    _AtmIfVptTxFrameDiscard_Type()
)
atmIfVptTxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTxFrameDiscard.setStatus("obsolete")


class _AtmIfVptRxFrameDiscard_Type(OctetString):
    """Custom type atmIfVptRxFrameDiscard based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfVptRxFrameDiscard_Type.__name__ = "OctetString"
_AtmIfVptRxFrameDiscard_Object = MibTableColumn
atmIfVptRxFrameDiscard = _AtmIfVptRxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1, 86),
    _AtmIfVptRxFrameDiscard_Type()
)
atmIfVptRxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptRxFrameDiscard.setStatus("obsolete")


class _AtmIfVptBandwidthElastic_Type(Integer32):
    """Custom type atmIfVptBandwidthElastic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfVptBandwidthElastic_Type.__name__ = "Integer32"
_AtmIfVptBandwidthElastic_Object = MibTableColumn
atmIfVptBandwidthElastic = _AtmIfVptBandwidthElastic_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1, 90),
    _AtmIfVptBandwidthElastic_Type()
)
atmIfVptBandwidthElastic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptBandwidthElastic.setStatus("obsolete")


class _AtmIfVptBandwidthReduction_Type(Integer32):
    """Custom type atmIfVptBandwidthReduction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptBandwidthReduction_Type.__name__ = "Integer32"
_AtmIfVptBandwidthReduction_Object = MibTableColumn
atmIfVptBandwidthReduction = _AtmIfVptBandwidthReduction_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 130, 1, 100),
    _AtmIfVptBandwidthReduction_Type()
)
atmIfVptBandwidthReduction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptBandwidthReduction.setStatus("obsolete")
_AtmIfVptStatsTable_Object = MibTable
atmIfVptStatsTable = _AtmIfVptStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140)
)
if mibBuilder.loadTexts:
    atmIfVptStatsTable.setStatus("mandatory")
_AtmIfVptStatsEntry_Object = MibTableRow
atmIfVptStatsEntry = _AtmIfVptStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1)
)
atmIfVptStatsEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptStatsEntry.setStatus("mandatory")
_AtmIfVptStatsTxCell_Type = PassportCounter64
_AtmIfVptStatsTxCell_Object = MibTableColumn
atmIfVptStatsTxCell = _AtmIfVptStatsTxCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 10),
    _AtmIfVptStatsTxCell_Type()
)
atmIfVptStatsTxCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptStatsTxCell.setStatus("mandatory")
_AtmIfVptStatsTxCellClp_Type = PassportCounter64
_AtmIfVptStatsTxCellClp_Object = MibTableColumn
atmIfVptStatsTxCellClp = _AtmIfVptStatsTxCellClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 20),
    _AtmIfVptStatsTxCellClp_Type()
)
atmIfVptStatsTxCellClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptStatsTxCellClp.setStatus("mandatory")
_AtmIfVptTxDiscard_Type = PassportCounter64
_AtmIfVptTxDiscard_Object = MibTableColumn
atmIfVptTxDiscard = _AtmIfVptTxDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 30),
    _AtmIfVptTxDiscard_Type()
)
atmIfVptTxDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTxDiscard.setStatus("obsolete")
_AtmIfVptTxDiscardClp_Type = PassportCounter64
_AtmIfVptTxDiscardClp_Object = MibTableColumn
atmIfVptTxDiscardClp = _AtmIfVptTxDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 40),
    _AtmIfVptTxDiscardClp_Type()
)
atmIfVptTxDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTxDiscardClp.setStatus("obsolete")
_AtmIfVptStatsTxCellDiscard_Type = PassportCounter64
_AtmIfVptStatsTxCellDiscard_Object = MibTableColumn
atmIfVptStatsTxCellDiscard = _AtmIfVptStatsTxCellDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 42),
    _AtmIfVptStatsTxCellDiscard_Type()
)
atmIfVptStatsTxCellDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptStatsTxCellDiscard.setStatus("mandatory")
_AtmIfVptStatsTxCellDiscardClp_Type = PassportCounter64
_AtmIfVptStatsTxCellDiscardClp_Object = MibTableColumn
atmIfVptStatsTxCellDiscardClp = _AtmIfVptStatsTxCellDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 43),
    _AtmIfVptStatsTxCellDiscardClp_Type()
)
atmIfVptStatsTxCellDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptStatsTxCellDiscardClp.setStatus("mandatory")
_AtmIfVptStatsTxFrameDiscard_Type = PassportCounter64
_AtmIfVptStatsTxFrameDiscard_Object = MibTableColumn
atmIfVptStatsTxFrameDiscard = _AtmIfVptStatsTxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 46),
    _AtmIfVptStatsTxFrameDiscard_Type()
)
atmIfVptStatsTxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptStatsTxFrameDiscard.setStatus("mandatory")
_AtmIfVptStatsTxFrameDiscardClp_Type = PassportCounter64
_AtmIfVptStatsTxFrameDiscardClp_Object = MibTableColumn
atmIfVptStatsTxFrameDiscardClp = _AtmIfVptStatsTxFrameDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 47),
    _AtmIfVptStatsTxFrameDiscardClp_Type()
)
atmIfVptStatsTxFrameDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptStatsTxFrameDiscardClp.setStatus("mandatory")


class _AtmIfVptTxUtilization_Type(Gauge32):
    """Custom type atmIfVptTxUtilization based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 200),
        ValueRangeConstraint(255, 255),
    )


_AtmIfVptTxUtilization_Type.__name__ = "Gauge32"
_AtmIfVptTxUtilization_Object = MibTableColumn
atmIfVptTxUtilization = _AtmIfVptTxUtilization_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 48),
    _AtmIfVptTxUtilization_Type()
)
atmIfVptTxUtilization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTxUtilization.setStatus("mandatory")
_AtmIfVptStatsRxCell_Type = PassportCounter64
_AtmIfVptStatsRxCell_Object = MibTableColumn
atmIfVptStatsRxCell = _AtmIfVptStatsRxCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 50),
    _AtmIfVptStatsRxCell_Type()
)
atmIfVptStatsRxCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptStatsRxCell.setStatus("mandatory")
_AtmIfVptStatsRxCellClp_Type = PassportCounter64
_AtmIfVptStatsRxCellClp_Object = MibTableColumn
atmIfVptStatsRxCellClp = _AtmIfVptStatsRxCellClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 60),
    _AtmIfVptStatsRxCellClp_Type()
)
atmIfVptStatsRxCellClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptStatsRxCellClp.setStatus("mandatory")
_AtmIfVptRxDiscard_Type = PassportCounter64
_AtmIfVptRxDiscard_Object = MibTableColumn
atmIfVptRxDiscard = _AtmIfVptRxDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 70),
    _AtmIfVptRxDiscard_Type()
)
atmIfVptRxDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptRxDiscard.setStatus("obsolete")
_AtmIfVptRxDiscardClp_Type = PassportCounter64
_AtmIfVptRxDiscardClp_Object = MibTableColumn
atmIfVptRxDiscardClp = _AtmIfVptRxDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 80),
    _AtmIfVptRxDiscardClp_Type()
)
atmIfVptRxDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptRxDiscardClp.setStatus("obsolete")
_AtmIfVptStatsRxCellDiscard_Type = PassportCounter64
_AtmIfVptStatsRxCellDiscard_Object = MibTableColumn
atmIfVptStatsRxCellDiscard = _AtmIfVptStatsRxCellDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 82),
    _AtmIfVptStatsRxCellDiscard_Type()
)
atmIfVptStatsRxCellDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptStatsRxCellDiscard.setStatus("mandatory")
_AtmIfVptStatsRxCellDiscardClp_Type = PassportCounter64
_AtmIfVptStatsRxCellDiscardClp_Object = MibTableColumn
atmIfVptStatsRxCellDiscardClp = _AtmIfVptStatsRxCellDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 83),
    _AtmIfVptStatsRxCellDiscardClp_Type()
)
atmIfVptStatsRxCellDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptStatsRxCellDiscardClp.setStatus("mandatory")
_AtmIfVptStatsRxFrameDiscard_Type = PassportCounter64
_AtmIfVptStatsRxFrameDiscard_Object = MibTableColumn
atmIfVptStatsRxFrameDiscard = _AtmIfVptStatsRxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 86),
    _AtmIfVptStatsRxFrameDiscard_Type()
)
atmIfVptStatsRxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptStatsRxFrameDiscard.setStatus("mandatory")
_AtmIfVptStatsRxFrameDiscardClp_Type = PassportCounter64
_AtmIfVptStatsRxFrameDiscardClp_Object = MibTableColumn
atmIfVptStatsRxFrameDiscardClp = _AtmIfVptStatsRxFrameDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 88),
    _AtmIfVptStatsRxFrameDiscardClp_Type()
)
atmIfVptStatsRxFrameDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptStatsRxFrameDiscardClp.setStatus("mandatory")


class _AtmIfVptRxUtilization_Type(Gauge32):
    """Custom type atmIfVptRxUtilization based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 200),
        ValueRangeConstraint(255, 255),
    )


_AtmIfVptRxUtilization_Type.__name__ = "Gauge32"
_AtmIfVptRxUtilization_Object = MibTableColumn
atmIfVptRxUtilization = _AtmIfVptRxUtilization_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 89),
    _AtmIfVptRxUtilization_Type()
)
atmIfVptRxUtilization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptRxUtilization.setStatus("mandatory")
_AtmIfVptStatsRxUpcViolationOnEnforcer1_Type = PassportCounter64
_AtmIfVptStatsRxUpcViolationOnEnforcer1_Object = MibTableColumn
atmIfVptStatsRxUpcViolationOnEnforcer1 = _AtmIfVptStatsRxUpcViolationOnEnforcer1_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 90),
    _AtmIfVptStatsRxUpcViolationOnEnforcer1_Type()
)
atmIfVptStatsRxUpcViolationOnEnforcer1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptStatsRxUpcViolationOnEnforcer1.setStatus("mandatory")
_AtmIfVptStatsRxUpcViolationOnEnforcer2_Type = PassportCounter64
_AtmIfVptStatsRxUpcViolationOnEnforcer2_Object = MibTableColumn
atmIfVptStatsRxUpcViolationOnEnforcer2 = _AtmIfVptStatsRxUpcViolationOnEnforcer2_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 92),
    _AtmIfVptStatsRxUpcViolationOnEnforcer2_Type()
)
atmIfVptStatsRxUpcViolationOnEnforcer2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptStatsRxUpcViolationOnEnforcer2.setStatus("mandatory")
_AtmIfVptStatsRxAal5FrameError_Type = PassportCounter64
_AtmIfVptStatsRxAal5FrameError_Object = MibTableColumn
atmIfVptStatsRxAal5FrameError = _AtmIfVptStatsRxAal5FrameError_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 100),
    _AtmIfVptStatsRxAal5FrameError_Type()
)
atmIfVptStatsRxAal5FrameError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptStatsRxAal5FrameError.setStatus("mandatory")
_AtmIfVptStatsRxAal5FrameAbort_Type = PassportCounter64
_AtmIfVptStatsRxAal5FrameAbort_Object = MibTableColumn
atmIfVptStatsRxAal5FrameAbort = _AtmIfVptStatsRxAal5FrameAbort_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 140, 1, 102),
    _AtmIfVptStatsRxAal5FrameAbort_Type()
)
atmIfVptStatsRxAal5FrameAbort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptStatsRxAal5FrameAbort.setStatus("mandatory")
_AtmIfVptTxTdpTable_Object = MibTable
atmIfVptTxTdpTable = _AtmIfVptTxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 294)
)
if mibBuilder.loadTexts:
    atmIfVptTxTdpTable.setStatus("obsolete")
_AtmIfVptTxTdpEntry_Object = MibTableRow
atmIfVptTxTdpEntry = _AtmIfVptTxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 294, 1)
)
atmIfVptTxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptTxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptTxTdpEntry.setStatus("obsolete")


class _AtmIfVptTxTdpIndex_Type(Integer32):
    """Custom type atmIfVptTxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_AtmIfVptTxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVptTxTdpIndex_Object = MibTableColumn
atmIfVptTxTdpIndex = _AtmIfVptTxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 294, 1, 1),
    _AtmIfVptTxTdpIndex_Type()
)
atmIfVptTxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptTxTdpIndex.setStatus("obsolete")


class _AtmIfVptTxTdpValue_Type(Unsigned32):
    """Custom type atmIfVptTxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptTxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVptTxTdpValue_Object = MibTableColumn
atmIfVptTxTdpValue = _AtmIfVptTxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 294, 1, 2),
    _AtmIfVptTxTdpValue_Type()
)
atmIfVptTxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTxTdpValue.setStatus("obsolete")
_AtmIfVptRxTdpTable_Object = MibTable
atmIfVptRxTdpTable = _AtmIfVptRxTdpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 295)
)
if mibBuilder.loadTexts:
    atmIfVptRxTdpTable.setStatus("obsolete")
_AtmIfVptRxTdpEntry_Object = MibTableRow
atmIfVptRxTdpEntry = _AtmIfVptRxTdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 295, 1)
)
atmIfVptRxTdpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptRxTdpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptRxTdpEntry.setStatus("obsolete")


class _AtmIfVptRxTdpIndex_Type(Integer32):
    """Custom type atmIfVptRxTdpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_AtmIfVptRxTdpIndex_Type.__name__ = "Integer32"
_AtmIfVptRxTdpIndex_Object = MibTableColumn
atmIfVptRxTdpIndex = _AtmIfVptRxTdpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 295, 1, 1),
    _AtmIfVptRxTdpIndex_Type()
)
atmIfVptRxTdpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptRxTdpIndex.setStatus("obsolete")


class _AtmIfVptRxTdpValue_Type(Unsigned32):
    """Custom type atmIfVptRxTdpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptRxTdpValue_Type.__name__ = "Unsigned32"
_AtmIfVptRxTdpValue_Object = MibTableColumn
atmIfVptRxTdpValue = _AtmIfVptRxTdpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 295, 1, 2),
    _AtmIfVptRxTdpValue_Type()
)
atmIfVptRxTdpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptRxTdpValue.setStatus("obsolete")
_AtmIfVptTxQThreshTable_Object = MibTable
atmIfVptTxQThreshTable = _AtmIfVptTxQThreshTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 352)
)
if mibBuilder.loadTexts:
    atmIfVptTxQThreshTable.setStatus("obsolete")
_AtmIfVptTxQThreshEntry_Object = MibTableRow
atmIfVptTxQThreshEntry = _AtmIfVptTxQThreshEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 352, 1)
)
atmIfVptTxQThreshEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptTxQThreshIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptTxQThreshEntry.setStatus("obsolete")


class _AtmIfVptTxQThreshIndex_Type(Integer32):
    """Custom type atmIfVptTxQThreshIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_AtmIfVptTxQThreshIndex_Type.__name__ = "Integer32"
_AtmIfVptTxQThreshIndex_Object = MibTableColumn
atmIfVptTxQThreshIndex = _AtmIfVptTxQThreshIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 352, 1, 1),
    _AtmIfVptTxQThreshIndex_Type()
)
atmIfVptTxQThreshIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptTxQThreshIndex.setStatus("obsolete")


class _AtmIfVptTxQThreshValue_Type(Unsigned32):
    """Custom type atmIfVptTxQThreshValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30720),
    )


_AtmIfVptTxQThreshValue_Type.__name__ = "Unsigned32"
_AtmIfVptTxQThreshValue_Object = MibTableColumn
atmIfVptTxQThreshValue = _AtmIfVptTxQThreshValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 352, 1, 2),
    _AtmIfVptTxQThreshValue_Type()
)
atmIfVptTxQThreshValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptTxQThreshValue.setStatus("obsolete")
_AtmIfVptFqpTable_Object = MibTable
atmIfVptFqpTable = _AtmIfVptFqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 357)
)
if mibBuilder.loadTexts:
    atmIfVptFqpTable.setStatus("obsolete")
_AtmIfVptFqpEntry_Object = MibTableRow
atmIfVptFqpEntry = _AtmIfVptFqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 357, 1)
)
atmIfVptFqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptFqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptFqpEntry.setStatus("obsolete")


class _AtmIfVptFqpIndex_Type(Integer32):
    """Custom type atmIfVptFqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVptFqpIndex_Type.__name__ = "Integer32"
_AtmIfVptFqpIndex_Object = MibTableColumn
atmIfVptFqpIndex = _AtmIfVptFqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 357, 1, 1),
    _AtmIfVptFqpIndex_Type()
)
atmIfVptFqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptFqpIndex.setStatus("obsolete")


class _AtmIfVptFqpValue_Type(Unsigned32):
    """Custom type atmIfVptFqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptFqpValue_Type.__name__ = "Unsigned32"
_AtmIfVptFqpValue_Object = MibTableColumn
atmIfVptFqpValue = _AtmIfVptFqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 357, 1, 2),
    _AtmIfVptFqpValue_Type()
)
atmIfVptFqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptFqpValue.setStatus("obsolete")
_AtmIfVptBqpTable_Object = MibTable
atmIfVptBqpTable = _AtmIfVptBqpTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 358)
)
if mibBuilder.loadTexts:
    atmIfVptBqpTable.setStatus("obsolete")
_AtmIfVptBqpEntry_Object = MibTableRow
atmIfVptBqpEntry = _AtmIfVptBqpEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 358, 1)
)
atmIfVptBqpEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptBqpIndex"),
)
if mibBuilder.loadTexts:
    atmIfVptBqpEntry.setStatus("obsolete")


class _AtmIfVptBqpIndex_Type(Integer32):
    """Custom type atmIfVptBqpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cdv", 0),
          ("clr", 2),
          ("ctd", 1))
    )


_AtmIfVptBqpIndex_Type.__name__ = "Integer32"
_AtmIfVptBqpIndex_Object = MibTableColumn
atmIfVptBqpIndex = _AtmIfVptBqpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 358, 1, 1),
    _AtmIfVptBqpIndex_Type()
)
atmIfVptBqpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfVptBqpIndex.setStatus("obsolete")


class _AtmIfVptBqpValue_Type(Unsigned32):
    """Custom type atmIfVptBqpValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_AtmIfVptBqpValue_Type.__name__ = "Unsigned32"
_AtmIfVptBqpValue_Object = MibTableColumn
atmIfVptBqpValue = _AtmIfVptBqpValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 358, 1, 2),
    _AtmIfVptBqpValue_Type()
)
atmIfVptBqpValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfVptBqpValue.setStatus("obsolete")
_AtmIfEp_ObjectIdentity = ObjectIdentity
atmIfEp = _AtmIfEp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 10)
)
_AtmIfEpRowStatusTable_Object = MibTable
atmIfEpRowStatusTable = _AtmIfEpRowStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 10, 1)
)
if mibBuilder.loadTexts:
    atmIfEpRowStatusTable.setStatus("mandatory")
_AtmIfEpRowStatusEntry_Object = MibTableRow
atmIfEpRowStatusEntry = _AtmIfEpRowStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 10, 1, 1)
)
atmIfEpRowStatusEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfEpIndex"),
)
if mibBuilder.loadTexts:
    atmIfEpRowStatusEntry.setStatus("mandatory")
_AtmIfEpRowStatus_Type = RowStatus
_AtmIfEpRowStatus_Object = MibTableColumn
atmIfEpRowStatus = _AtmIfEpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 10, 1, 1, 1),
    _AtmIfEpRowStatus_Type()
)
atmIfEpRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfEpRowStatus.setStatus("mandatory")
_AtmIfEpComponentName_Type = DisplayString
_AtmIfEpComponentName_Object = MibTableColumn
atmIfEpComponentName = _AtmIfEpComponentName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 10, 1, 1, 2),
    _AtmIfEpComponentName_Type()
)
atmIfEpComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfEpComponentName.setStatus("mandatory")
_AtmIfEpStorageType_Type = StorageType
_AtmIfEpStorageType_Object = MibTableColumn
atmIfEpStorageType = _AtmIfEpStorageType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 10, 1, 1, 4),
    _AtmIfEpStorageType_Type()
)
atmIfEpStorageType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfEpStorageType.setStatus("mandatory")


class _AtmIfEpIndex_Type(Integer32):
    """Custom type atmIfEpIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 7),
    )


_AtmIfEpIndex_Type.__name__ = "Integer32"
_AtmIfEpIndex_Object = MibTableColumn
atmIfEpIndex = _AtmIfEpIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 10, 1, 1, 10),
    _AtmIfEpIndex_Type()
)
atmIfEpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfEpIndex.setStatus("mandatory")
_AtmIfEpProvTable_Object = MibTable
atmIfEpProvTable = _AtmIfEpProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 10, 100)
)
if mibBuilder.loadTexts:
    atmIfEpProvTable.setStatus("mandatory")
_AtmIfEpProvEntry_Object = MibTableRow
atmIfEpProvEntry = _AtmIfEpProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 10, 100, 1)
)
atmIfEpProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfEpIndex"),
)
if mibBuilder.loadTexts:
    atmIfEpProvEntry.setStatus("mandatory")


class _AtmIfEpMinimumBandwidthGuarantee_Type(Unsigned32):
    """Custom type atmIfEpMinimumBandwidthGuarantee based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 49),
    )


_AtmIfEpMinimumBandwidthGuarantee_Type.__name__ = "Unsigned32"
_AtmIfEpMinimumBandwidthGuarantee_Object = MibTableColumn
atmIfEpMinimumBandwidthGuarantee = _AtmIfEpMinimumBandwidthGuarantee_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 10, 100, 1, 1),
    _AtmIfEpMinimumBandwidthGuarantee_Type()
)
atmIfEpMinimumBandwidthGuarantee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfEpMinimumBandwidthGuarantee.setStatus("mandatory")
_AtmIfCidDataTable_Object = MibTable
atmIfCidDataTable = _AtmIfCidDataTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 100)
)
if mibBuilder.loadTexts:
    atmIfCidDataTable.setStatus("mandatory")
_AtmIfCidDataEntry_Object = MibTableRow
atmIfCidDataEntry = _AtmIfCidDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 100, 1)
)
atmIfCidDataEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
)
if mibBuilder.loadTexts:
    atmIfCidDataEntry.setStatus("mandatory")


class _AtmIfCustomerIdentifier_Type(Unsigned32):
    """Custom type atmIfCustomerIdentifier based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(1, 8191),
    )


_AtmIfCustomerIdentifier_Type.__name__ = "Unsigned32"
_AtmIfCustomerIdentifier_Object = MibTableColumn
atmIfCustomerIdentifier = _AtmIfCustomerIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 100, 1, 1),
    _AtmIfCustomerIdentifier_Type()
)
atmIfCustomerIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfCustomerIdentifier.setStatus("mandatory")
_AtmIfProvTable_Object = MibTable
atmIfProvTable = _AtmIfProvTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 110)
)
if mibBuilder.loadTexts:
    atmIfProvTable.setStatus("mandatory")
_AtmIfProvEntry_Object = MibTableRow
atmIfProvEntry = _AtmIfProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 110, 1)
)
atmIfProvEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
)
if mibBuilder.loadTexts:
    atmIfProvEntry.setStatus("mandatory")
_AtmIfInterfaceName_Type = Link
_AtmIfInterfaceName_Object = MibTableColumn
atmIfInterfaceName = _AtmIfInterfaceName_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 110, 1, 10),
    _AtmIfInterfaceName_Type()
)
atmIfInterfaceName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfInterfaceName.setStatus("mandatory")


class _AtmIfType_Type(Integer32):
    """Custom type atmIfType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("ppi", 1),
          ("uni", 0))
    )


_AtmIfType_Type.__name__ = "Integer32"
_AtmIfType_Object = MibTableColumn
atmIfType = _AtmIfType_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 110, 1, 20),
    _AtmIfType_Type()
)
atmIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfType.setStatus("obsolete")


class _AtmIfOamSegmentBoundary_Type(Integer32):
    """Custom type atmIfOamSegmentBoundary based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_AtmIfOamSegmentBoundary_Type.__name__ = "Integer32"
_AtmIfOamSegmentBoundary_Object = MibTableColumn
atmIfOamSegmentBoundary = _AtmIfOamSegmentBoundary_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 110, 1, 30),
    _AtmIfOamSegmentBoundary_Type()
)
atmIfOamSegmentBoundary.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfOamSegmentBoundary.setStatus("mandatory")


class _AtmIfMaxVpcs_Type(Unsigned32):
    """Custom type atmIfMaxVpcs based on Unsigned32"""
    defaultValue = 128

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmIfMaxVpcs_Type.__name__ = "Unsigned32"
_AtmIfMaxVpcs_Object = MibTableColumn
atmIfMaxVpcs = _AtmIfMaxVpcs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 110, 1, 40),
    _AtmIfMaxVpcs_Type()
)
atmIfMaxVpcs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfMaxVpcs.setStatus("obsolete")


class _AtmIfMaxVccs_Type(Unsigned32):
    """Custom type atmIfMaxVccs based on Unsigned32"""
    defaultValue = 255

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16384),
    )


_AtmIfMaxVccs_Type.__name__ = "Unsigned32"
_AtmIfMaxVccs_Object = MibTableColumn
atmIfMaxVccs = _AtmIfMaxVccs_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 110, 1, 50),
    _AtmIfMaxVccs_Type()
)
atmIfMaxVccs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfMaxVccs.setStatus("obsolete")


class _AtmIfTrafficShaping_Type(Integer32):
    """Custom type atmIfTrafficShaping based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0))
    )


_AtmIfTrafficShaping_Type.__name__ = "Integer32"
_AtmIfTrafficShaping_Object = MibTableColumn
atmIfTrafficShaping = _AtmIfTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 110, 1, 60),
    _AtmIfTrafficShaping_Type()
)
atmIfTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfTrafficShaping.setStatus("obsolete")


class _AtmIfUnshapedTransmitQueueing_Type(Integer32):
    """Custom type atmIfUnshapedTransmitQueueing based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("autoConfigure", 2),
          ("common", 1),
          ("perVc", 0))
    )


_AtmIfUnshapedTransmitQueueing_Type.__name__ = "Integer32"
_AtmIfUnshapedTransmitQueueing_Object = MibTableColumn
atmIfUnshapedTransmitQueueing = _AtmIfUnshapedTransmitQueueing_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 110, 1, 70),
    _AtmIfUnshapedTransmitQueueing_Type()
)
atmIfUnshapedTransmitQueueing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfUnshapedTransmitQueueing.setStatus("obsolete")


class _AtmIfUsageParameterControl_Type(Integer32):
    """Custom type atmIfUsageParameterControl based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 0))
    )


_AtmIfUsageParameterControl_Type.__name__ = "Integer32"
_AtmIfUsageParameterControl_Object = MibTableColumn
atmIfUsageParameterControl = _AtmIfUsageParameterControl_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 110, 1, 80),
    _AtmIfUsageParameterControl_Type()
)
atmIfUsageParameterControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfUsageParameterControl.setStatus("obsolete")


class _AtmIfMaxVpiBits_Type(Unsigned32):
    """Custom type atmIfMaxVpiBits based on Unsigned32"""
    defaultValue = 8

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 8),
        ValueRangeConstraint(12, 12),
    )


_AtmIfMaxVpiBits_Type.__name__ = "Unsigned32"
_AtmIfMaxVpiBits_Object = MibTableColumn
atmIfMaxVpiBits = _AtmIfMaxVpiBits_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 110, 1, 85),
    _AtmIfMaxVpiBits_Type()
)
atmIfMaxVpiBits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfMaxVpiBits.setStatus("mandatory")


class _AtmIfRemoteAtmInterfaceLabel_Type(AsciiString):
    """Custom type atmIfRemoteAtmInterfaceLabel based on AsciiString"""
    defaultHexValue = ""

    subtypeSpec = AsciiString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 60),
    )


_AtmIfRemoteAtmInterfaceLabel_Type.__name__ = "AsciiString"
_AtmIfRemoteAtmInterfaceLabel_Object = MibTableColumn
atmIfRemoteAtmInterfaceLabel = _AtmIfRemoteAtmInterfaceLabel_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 110, 1, 90),
    _AtmIfRemoteAtmInterfaceLabel_Type()
)
atmIfRemoteAtmInterfaceLabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfRemoteAtmInterfaceLabel.setStatus("mandatory")


class _AtmIfTxCellMemory_Type(Unsigned32):
    """Custom type atmIfTxCellMemory based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_AtmIfTxCellMemory_Type.__name__ = "Unsigned32"
_AtmIfTxCellMemory_Object = MibTableColumn
atmIfTxCellMemory = _AtmIfTxCellMemory_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 110, 1, 91),
    _AtmIfTxCellMemory_Type()
)
atmIfTxCellMemory.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfTxCellMemory.setStatus("mandatory")


class _AtmIfFaultHoldOffTime_Type(Integer32):
    """Custom type atmIfFaultHoldOffTime based on Integer32"""
    defaultValue = 65535

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              65535)
        )
    )
    namedValues = NamedValues(
        *(("infinity", 65535),
          ("n0", 0))
    )


_AtmIfFaultHoldOffTime_Type.__name__ = "Integer32"
_AtmIfFaultHoldOffTime_Object = MibTableColumn
atmIfFaultHoldOffTime = _AtmIfFaultHoldOffTime_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 110, 1, 100),
    _AtmIfFaultHoldOffTime_Type()
)
atmIfFaultHoldOffTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfFaultHoldOffTime.setStatus("mandatory")
_AtmIfLbkTable_Object = MibTable
atmIfLbkTable = _AtmIfLbkTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 120)
)
if mibBuilder.loadTexts:
    atmIfLbkTable.setStatus("mandatory")
_AtmIfLbkEntry_Object = MibTableRow
atmIfLbkEntry = _AtmIfLbkEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 120, 1)
)
atmIfLbkEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
)
if mibBuilder.loadTexts:
    atmIfLbkEntry.setStatus("mandatory")


class _AtmIfSegLinkSideLoopback_Type(Integer32):
    """Custom type atmIfSegLinkSideLoopback based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0))
    )


_AtmIfSegLinkSideLoopback_Type.__name__ = "Integer32"
_AtmIfSegLinkSideLoopback_Object = MibTableColumn
atmIfSegLinkSideLoopback = _AtmIfSegLinkSideLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 120, 1, 10),
    _AtmIfSegLinkSideLoopback_Type()
)
atmIfSegLinkSideLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfSegLinkSideLoopback.setStatus("mandatory")


class _AtmIfSegSwitchSideLoopback_Type(Integer32):
    """Custom type atmIfSegSwitchSideLoopback based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0))
    )


_AtmIfSegSwitchSideLoopback_Type.__name__ = "Integer32"
_AtmIfSegSwitchSideLoopback_Object = MibTableColumn
atmIfSegSwitchSideLoopback = _AtmIfSegSwitchSideLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 120, 1, 20),
    _AtmIfSegSwitchSideLoopback_Type()
)
atmIfSegSwitchSideLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfSegSwitchSideLoopback.setStatus("mandatory")


class _AtmIfEndToEndLoopback_Type(Integer32):
    """Custom type atmIfEndToEndLoopback based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0))
    )


_AtmIfEndToEndLoopback_Type.__name__ = "Integer32"
_AtmIfEndToEndLoopback_Object = MibTableColumn
atmIfEndToEndLoopback = _AtmIfEndToEndLoopback_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 120, 1, 30),
    _AtmIfEndToEndLoopback_Type()
)
atmIfEndToEndLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfEndToEndLoopback.setStatus("mandatory")


class _AtmIfLoopbackMonitoring_Type(Integer32):
    """Custom type atmIfLoopbackMonitoring based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 0))
    )


_AtmIfLoopbackMonitoring_Type.__name__ = "Integer32"
_AtmIfLoopbackMonitoring_Object = MibTableColumn
atmIfLoopbackMonitoring = _AtmIfLoopbackMonitoring_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 120, 1, 110),
    _AtmIfLoopbackMonitoring_Type()
)
atmIfLoopbackMonitoring.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIfLoopbackMonitoring.setStatus("mandatory")
_AtmIfStateTable_Object = MibTable
atmIfStateTable = _AtmIfStateTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 130)
)
if mibBuilder.loadTexts:
    atmIfStateTable.setStatus("mandatory")
_AtmIfStateEntry_Object = MibTableRow
atmIfStateEntry = _AtmIfStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 130, 1)
)
atmIfStateEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
)
if mibBuilder.loadTexts:
    atmIfStateEntry.setStatus("mandatory")


class _AtmIfAdminState_Type(Integer32):
    """Custom type atmIfAdminState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("locked", 0),
          ("shuttingDown", 2),
          ("unlocked", 1))
    )


_AtmIfAdminState_Type.__name__ = "Integer32"
_AtmIfAdminState_Object = MibTableColumn
atmIfAdminState = _AtmIfAdminState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 130, 1, 1),
    _AtmIfAdminState_Type()
)
atmIfAdminState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfAdminState.setStatus("mandatory")


class _AtmIfOperationalState_Type(Integer32):
    """Custom type atmIfOperationalState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_AtmIfOperationalState_Type.__name__ = "Integer32"
_AtmIfOperationalState_Object = MibTableColumn
atmIfOperationalState = _AtmIfOperationalState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 130, 1, 2),
    _AtmIfOperationalState_Type()
)
atmIfOperationalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfOperationalState.setStatus("mandatory")


class _AtmIfUsageState_Type(Integer32):
    """Custom type atmIfUsageState based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("busy", 2),
          ("idle", 0))
    )


_AtmIfUsageState_Type.__name__ = "Integer32"
_AtmIfUsageState_Object = MibTableColumn
atmIfUsageState = _AtmIfUsageState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 130, 1, 3),
    _AtmIfUsageState_Type()
)
atmIfUsageState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfUsageState.setStatus("mandatory")


class _AtmIfAvailabilityStatus_Type(OctetString):
    """Custom type atmIfAvailabilityStatus based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(2, 2),
    )


_AtmIfAvailabilityStatus_Type.__name__ = "OctetString"
_AtmIfAvailabilityStatus_Object = MibTableColumn
atmIfAvailabilityStatus = _AtmIfAvailabilityStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 130, 1, 4),
    _AtmIfAvailabilityStatus_Type()
)
atmIfAvailabilityStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfAvailabilityStatus.setStatus("mandatory")


class _AtmIfProceduralStatus_Type(OctetString):
    """Custom type atmIfProceduralStatus based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfProceduralStatus_Type.__name__ = "OctetString"
_AtmIfProceduralStatus_Object = MibTableColumn
atmIfProceduralStatus = _AtmIfProceduralStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 130, 1, 5),
    _AtmIfProceduralStatus_Type()
)
atmIfProceduralStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfProceduralStatus.setStatus("mandatory")


class _AtmIfControlStatus_Type(OctetString):
    """Custom type atmIfControlStatus based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfControlStatus_Type.__name__ = "OctetString"
_AtmIfControlStatus_Object = MibTableColumn
atmIfControlStatus = _AtmIfControlStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 130, 1, 6),
    _AtmIfControlStatus_Type()
)
atmIfControlStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfControlStatus.setStatus("mandatory")


class _AtmIfAlarmStatus_Type(OctetString):
    """Custom type atmIfAlarmStatus based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AtmIfAlarmStatus_Type.__name__ = "OctetString"
_AtmIfAlarmStatus_Object = MibTableColumn
atmIfAlarmStatus = _AtmIfAlarmStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 130, 1, 7),
    _AtmIfAlarmStatus_Type()
)
atmIfAlarmStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfAlarmStatus.setStatus("mandatory")


class _AtmIfStandbyStatus_Type(Integer32):
    """Custom type atmIfStandbyStatus based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              15)
        )
    )
    namedValues = NamedValues(
        *(("coldStandby", 1),
          ("hotStandby", 0),
          ("notSet", 15),
          ("providingService", 2))
    )


_AtmIfStandbyStatus_Type.__name__ = "Integer32"
_AtmIfStandbyStatus_Object = MibTableColumn
atmIfStandbyStatus = _AtmIfStandbyStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 130, 1, 8),
    _AtmIfStandbyStatus_Type()
)
atmIfStandbyStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfStandbyStatus.setStatus("mandatory")


class _AtmIfUnknownStatus_Type(Integer32):
    """Custom type atmIfUnknownStatus based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("false", 0),
          ("true", 1))
    )


_AtmIfUnknownStatus_Type.__name__ = "Integer32"
_AtmIfUnknownStatus_Object = MibTableColumn
atmIfUnknownStatus = _AtmIfUnknownStatus_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 130, 1, 9),
    _AtmIfUnknownStatus_Type()
)
atmIfUnknownStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfUnknownStatus.setStatus("mandatory")
_AtmIfOperTable_Object = MibTable
atmIfOperTable = _AtmIfOperTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 140)
)
if mibBuilder.loadTexts:
    atmIfOperTable.setStatus("mandatory")
_AtmIfOperEntry_Object = MibTableRow
atmIfOperEntry = _AtmIfOperEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 140, 1)
)
atmIfOperEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
)
if mibBuilder.loadTexts:
    atmIfOperEntry.setStatus("mandatory")


class _AtmIfTxCellMemoryAvailable_Type(Gauge32):
    """Custom type atmIfTxCellMemoryAvailable based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 163839),
    )


_AtmIfTxCellMemoryAvailable_Type.__name__ = "Gauge32"
_AtmIfTxCellMemoryAvailable_Object = MibTableColumn
atmIfTxCellMemoryAvailable = _AtmIfTxCellMemoryAvailable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 140, 1, 1),
    _AtmIfTxCellMemoryAvailable_Type()
)
atmIfTxCellMemoryAvailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfTxCellMemoryAvailable.setStatus("obsolete")


class _AtmIfTxCellMemoryCongestionState_Type(Gauge32):
    """Custom type atmIfTxCellMemoryCongestionState based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_AtmIfTxCellMemoryCongestionState_Type.__name__ = "Gauge32"
_AtmIfTxCellMemoryCongestionState_Object = MibTableColumn
atmIfTxCellMemoryCongestionState = _AtmIfTxCellMemoryCongestionState_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 140, 1, 2),
    _AtmIfTxCellMemoryCongestionState_Type()
)
atmIfTxCellMemoryCongestionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfTxCellMemoryCongestionState.setStatus("mandatory")


class _AtmIfTxCellMemoryUsage_Type(Gauge32):
    """Custom type atmIfTxCellMemoryUsage based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 163839),
    )


_AtmIfTxCellMemoryUsage_Type.__name__ = "Gauge32"
_AtmIfTxCellMemoryUsage_Object = MibTableColumn
atmIfTxCellMemoryUsage = _AtmIfTxCellMemoryUsage_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 140, 1, 3),
    _AtmIfTxCellMemoryUsage_Type()
)
atmIfTxCellMemoryUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfTxCellMemoryUsage.setStatus("mandatory")


class _AtmIfUnshapedTransmitQueueingOper_Type(Integer32):
    """Custom type atmIfUnshapedTransmitQueueingOper based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("common", 1),
          ("perVc", 0))
    )


_AtmIfUnshapedTransmitQueueingOper_Type.__name__ = "Integer32"
_AtmIfUnshapedTransmitQueueingOper_Object = MibTableColumn
atmIfUnshapedTransmitQueueingOper = _AtmIfUnshapedTransmitQueueingOper_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 140, 1, 10),
    _AtmIfUnshapedTransmitQueueingOper_Type()
)
atmIfUnshapedTransmitQueueingOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfUnshapedTransmitQueueingOper.setStatus("obsolete")
_AtmIfStatsTable_Object = MibTable
atmIfStatsTable = _AtmIfStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150)
)
if mibBuilder.loadTexts:
    atmIfStatsTable.setStatus("mandatory")
_AtmIfStatsEntry_Object = MibTableRow
atmIfStatsEntry = _AtmIfStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1)
)
atmIfStatsEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
)
if mibBuilder.loadTexts:
    atmIfStatsEntry.setStatus("mandatory")
_AtmIfTransmittedCells_Type = PassportCounter64
_AtmIfTransmittedCells_Object = MibTableColumn
atmIfTransmittedCells = _AtmIfTransmittedCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 10),
    _AtmIfTransmittedCells_Type()
)
atmIfTransmittedCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfTransmittedCells.setStatus("obsolete")
_AtmIfTxCell_Type = PassportCounter64
_AtmIfTxCell_Object = MibTableColumn
atmIfTxCell = _AtmIfTxCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 13),
    _AtmIfTxCell_Type()
)
atmIfTxCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfTxCell.setStatus("mandatory")
_AtmIfTxCellClp_Type = PassportCounter64
_AtmIfTxCellClp_Object = MibTableColumn
atmIfTxCellClp = _AtmIfTxCellClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 14),
    _AtmIfTxCellClp_Type()
)
atmIfTxCellClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfTxCellClp.setStatus("mandatory")
_AtmIfTxCellEfci_Type = PassportCounter64
_AtmIfTxCellEfci_Object = MibTableColumn
atmIfTxCellEfci = _AtmIfTxCellEfci_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 15),
    _AtmIfTxCellEfci_Type()
)
atmIfTxCellEfci.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfTxCellEfci.setStatus("mandatory")
_AtmIfTxCellDiscard_Type = PassportCounter64
_AtmIfTxCellDiscard_Object = MibTableColumn
atmIfTxCellDiscard = _AtmIfTxCellDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 16),
    _AtmIfTxCellDiscard_Type()
)
atmIfTxCellDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfTxCellDiscard.setStatus("mandatory")
_AtmIfTxCellDiscardClp_Type = PassportCounter64
_AtmIfTxCellDiscardClp_Object = MibTableColumn
atmIfTxCellDiscardClp = _AtmIfTxCellDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 17),
    _AtmIfTxCellDiscardClp_Type()
)
atmIfTxCellDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfTxCellDiscardClp.setStatus("mandatory")
_AtmIfTxFrameDiscard_Type = PassportCounter64
_AtmIfTxFrameDiscard_Object = MibTableColumn
atmIfTxFrameDiscard = _AtmIfTxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 18),
    _AtmIfTxFrameDiscard_Type()
)
atmIfTxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfTxFrameDiscard.setStatus("mandatory")
_AtmIfTxFrameDiscardClp_Type = PassportCounter64
_AtmIfTxFrameDiscardClp_Object = MibTableColumn
atmIfTxFrameDiscardClp = _AtmIfTxFrameDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 19),
    _AtmIfTxFrameDiscardClp_Type()
)
atmIfTxFrameDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfTxFrameDiscardClp.setStatus("mandatory")
_AtmIfReceivedCells_Type = PassportCounter64
_AtmIfReceivedCells_Object = MibTableColumn
atmIfReceivedCells = _AtmIfReceivedCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 20),
    _AtmIfReceivedCells_Type()
)
atmIfReceivedCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfReceivedCells.setStatus("obsolete")
_AtmIfRxCell_Type = PassportCounter64
_AtmIfRxCell_Object = MibTableColumn
atmIfRxCell = _AtmIfRxCell_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 23),
    _AtmIfRxCell_Type()
)
atmIfRxCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfRxCell.setStatus("mandatory")
_AtmIfRxCellClp_Type = PassportCounter64
_AtmIfRxCellClp_Object = MibTableColumn
atmIfRxCellClp = _AtmIfRxCellClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 24),
    _AtmIfRxCellClp_Type()
)
atmIfRxCellClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfRxCellClp.setStatus("mandatory")
_AtmIfRxCellEfci_Type = PassportCounter64
_AtmIfRxCellEfci_Object = MibTableColumn
atmIfRxCellEfci = _AtmIfRxCellEfci_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 25),
    _AtmIfRxCellEfci_Type()
)
atmIfRxCellEfci.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfRxCellEfci.setStatus("mandatory")
_AtmIfRxCellDiscard_Type = PassportCounter64
_AtmIfRxCellDiscard_Object = MibTableColumn
atmIfRxCellDiscard = _AtmIfRxCellDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 26),
    _AtmIfRxCellDiscard_Type()
)
atmIfRxCellDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfRxCellDiscard.setStatus("mandatory")
_AtmIfRxCellDiscardClp_Type = PassportCounter64
_AtmIfRxCellDiscardClp_Object = MibTableColumn
atmIfRxCellDiscardClp = _AtmIfRxCellDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 27),
    _AtmIfRxCellDiscardClp_Type()
)
atmIfRxCellDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfRxCellDiscardClp.setStatus("mandatory")
_AtmIfRxFrameDiscard_Type = PassportCounter64
_AtmIfRxFrameDiscard_Object = MibTableColumn
atmIfRxFrameDiscard = _AtmIfRxFrameDiscard_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 28),
    _AtmIfRxFrameDiscard_Type()
)
atmIfRxFrameDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfRxFrameDiscard.setStatus("mandatory")
_AtmIfRxFrameDiscardClp_Type = PassportCounter64
_AtmIfRxFrameDiscardClp_Object = MibTableColumn
atmIfRxFrameDiscardClp = _AtmIfRxFrameDiscardClp_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 29),
    _AtmIfRxFrameDiscardClp_Type()
)
atmIfRxFrameDiscardClp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfRxFrameDiscardClp.setStatus("mandatory")
_AtmIfDroppedRxCells_Type = PassportCounter64
_AtmIfDroppedRxCells_Object = MibTableColumn
atmIfDroppedRxCells = _AtmIfDroppedRxCells_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 30),
    _AtmIfDroppedRxCells_Type()
)
atmIfDroppedRxCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfDroppedRxCells.setStatus("mandatory")


class _AtmIfLastDroppedRxCellConnection_Type(IntegerSequence):
    """Custom type atmIfLastDroppedRxCellConnection based on IntegerSequence"""
    subtypeSpec = IntegerSequence.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(3, 10),
    )


_AtmIfLastDroppedRxCellConnection_Type.__name__ = "IntegerSequence"
_AtmIfLastDroppedRxCellConnection_Object = MibTableColumn
atmIfLastDroppedRxCellConnection = _AtmIfLastDroppedRxCellConnection_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 31),
    _AtmIfLastDroppedRxCellConnection_Type()
)
atmIfLastDroppedRxCellConnection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfLastDroppedRxCellConnection.setStatus("mandatory")
_AtmIfAal5RxErrors_Type = Counter32
_AtmIfAal5RxErrors_Object = MibTableColumn
atmIfAal5RxErrors = _AtmIfAal5RxErrors_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 32),
    _AtmIfAal5RxErrors_Type()
)
atmIfAal5RxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfAal5RxErrors.setStatus("mandatory")


class _AtmIfLastAal5RxErrorConnection_Type(IntegerSequence):
    """Custom type atmIfLastAal5RxErrorConnection based on IntegerSequence"""
    subtypeSpec = IntegerSequence.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(3, 10),
    )


_AtmIfLastAal5RxErrorConnection_Type.__name__ = "IntegerSequence"
_AtmIfLastAal5RxErrorConnection_Object = MibTableColumn
atmIfLastAal5RxErrorConnection = _AtmIfLastAal5RxErrorConnection_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 33),
    _AtmIfLastAal5RxErrorConnection_Type()
)
atmIfLastAal5RxErrorConnection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfLastAal5RxErrorConnection.setStatus("mandatory")
_AtmIfLrcFrameErrors_Type = Counter32
_AtmIfLrcFrameErrors_Object = MibTableColumn
atmIfLrcFrameErrors = _AtmIfLrcFrameErrors_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 34),
    _AtmIfLrcFrameErrors_Type()
)
atmIfLrcFrameErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfLrcFrameErrors.setStatus("mandatory")


class _AtmIfLastLrcFrameErrorConnection_Type(IntegerSequence):
    """Custom type atmIfLastLrcFrameErrorConnection based on IntegerSequence"""
    subtypeSpec = IntegerSequence.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(3, 10),
    )


_AtmIfLastLrcFrameErrorConnection_Type.__name__ = "IntegerSequence"
_AtmIfLastLrcFrameErrorConnection_Object = MibTableColumn
atmIfLastLrcFrameErrorConnection = _AtmIfLastLrcFrameErrorConnection_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 35),
    _AtmIfLastLrcFrameErrorConnection_Type()
)
atmIfLastLrcFrameErrorConnection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfLastLrcFrameErrorConnection.setStatus("mandatory")
_AtmIfAal5RxAborts_Type = Counter32
_AtmIfAal5RxAborts_Object = MibTableColumn
atmIfAal5RxAborts = _AtmIfAal5RxAborts_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 40),
    _AtmIfAal5RxAborts_Type()
)
atmIfAal5RxAborts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfAal5RxAborts.setStatus("mandatory")


class _AtmIfLastAal5RxAbortConnection_Type(IntegerSequence):
    """Custom type atmIfLastAal5RxAbortConnection based on IntegerSequence"""
    subtypeSpec = IntegerSequence.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(3, 10),
    )


_AtmIfLastAal5RxAbortConnection_Type.__name__ = "IntegerSequence"
_AtmIfLastAal5RxAbortConnection_Object = MibTableColumn
atmIfLastAal5RxAbortConnection = _AtmIfLastAal5RxAbortConnection_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 50),
    _AtmIfLastAal5RxAbortConnection_Type()
)
atmIfLastAal5RxAbortConnection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfLastAal5RxAbortConnection.setStatus("mandatory")


class _AtmIfTxLinkUtilization_Type(Gauge32):
    """Custom type atmIfTxLinkUtilization based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_AtmIfTxLinkUtilization_Type.__name__ = "Gauge32"
_AtmIfTxLinkUtilization_Object = MibTableColumn
atmIfTxLinkUtilization = _AtmIfTxLinkUtilization_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 59),
    _AtmIfTxLinkUtilization_Type()
)
atmIfTxLinkUtilization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfTxLinkUtilization.setStatus("mandatory")


class _AtmIfRxLinkUtilization_Type(Gauge32):
    """Custom type atmIfRxLinkUtilization based on Gauge32"""
    subtypeSpec = Gauge32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_AtmIfRxLinkUtilization_Type.__name__ = "Gauge32"
_AtmIfRxLinkUtilization_Object = MibTableColumn
atmIfRxLinkUtilization = _AtmIfRxLinkUtilization_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 150, 1, 60),
    _AtmIfRxLinkUtilization_Type()
)
atmIfRxLinkUtilization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfRxLinkUtilization.setStatus("mandatory")
_AtmIfTxCellMemoryThresholdTable_Object = MibTable
atmIfTxCellMemoryThresholdTable = _AtmIfTxCellMemoryThresholdTable_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 441)
)
if mibBuilder.loadTexts:
    atmIfTxCellMemoryThresholdTable.setStatus("mandatory")
_AtmIfTxCellMemoryThresholdEntry_Object = MibTableRow
atmIfTxCellMemoryThresholdEntry = _AtmIfTxCellMemoryThresholdEntry_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 441, 1)
)
atmIfTxCellMemoryThresholdEntry.setIndexNames(
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"),
    (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfTxCellMemoryThresholdIndex"),
)
if mibBuilder.loadTexts:
    atmIfTxCellMemoryThresholdEntry.setStatus("mandatory")


class _AtmIfTxCellMemoryThresholdIndex_Type(Integer32):
    """Custom type atmIfTxCellMemoryThresholdIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_AtmIfTxCellMemoryThresholdIndex_Type.__name__ = "Integer32"
_AtmIfTxCellMemoryThresholdIndex_Object = MibTableColumn
atmIfTxCellMemoryThresholdIndex = _AtmIfTxCellMemoryThresholdIndex_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 441, 1, 1),
    _AtmIfTxCellMemoryThresholdIndex_Type()
)
atmIfTxCellMemoryThresholdIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfTxCellMemoryThresholdIndex.setStatus("mandatory")


class _AtmIfTxCellMemoryThresholdValue_Type(Unsigned32):
    """Custom type atmIfTxCellMemoryThresholdValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 163839),
    )


_AtmIfTxCellMemoryThresholdValue_Type.__name__ = "Unsigned32"
_AtmIfTxCellMemoryThresholdValue_Object = MibTableColumn
atmIfTxCellMemoryThresholdValue = _AtmIfTxCellMemoryThresholdValue_Object(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 441, 1, 2),
    _AtmIfTxCellMemoryThresholdValue_Type()
)
atmIfTxCellMemoryThresholdValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfTxCellMemoryThresholdValue.setStatus("mandatory")
_AtmCoreMIB_ObjectIdentity = ObjectIdentity
atmCoreMIB = _AtmCoreMIB_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 123)
)
_AtmCoreGroup_ObjectIdentity = ObjectIdentity
atmCoreGroup = _AtmCoreGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 123, 1)
)
_AtmCoreGroupBE_ObjectIdentity = ObjectIdentity
atmCoreGroupBE = _AtmCoreGroupBE_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 123, 1, 5)
)
_AtmCoreGroupBE01_ObjectIdentity = ObjectIdentity
atmCoreGroupBE01 = _AtmCoreGroupBE01_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 123, 1, 5, 2)
)
_AtmCoreGroupBE01A_ObjectIdentity = ObjectIdentity
atmCoreGroupBE01A = _AtmCoreGroupBE01A_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 123, 1, 5, 2, 2)
)
_AtmCoreCapabilities_ObjectIdentity = ObjectIdentity
atmCoreCapabilities = _AtmCoreCapabilities_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 123, 3)
)
_AtmCoreCapabilitiesBE_ObjectIdentity = ObjectIdentity
atmCoreCapabilitiesBE = _AtmCoreCapabilitiesBE_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 123, 3, 5)
)
_AtmCoreCapabilitiesBE01_ObjectIdentity = ObjectIdentity
atmCoreCapabilitiesBE01 = _AtmCoreCapabilitiesBE01_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 123, 3, 5, 2)
)
_AtmCoreCapabilitiesBE01A_ObjectIdentity = ObjectIdentity
atmCoreCapabilitiesBE01A = _AtmCoreCapabilitiesBE01A_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 123, 3, 5, 2, 2)
)

# Managed Objects groups


# Notification objects


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "Nortel-Magellan-Passport-AtmCoreMIB",
    **{"atmIf": atmIf,
       "atmIfRowStatusTable": atmIfRowStatusTable,
       "atmIfRowStatusEntry": atmIfRowStatusEntry,
       "atmIfRowStatus": atmIfRowStatus,
       "atmIfComponentName": atmIfComponentName,
       "atmIfStorageType": atmIfStorageType,
       "atmIfIndex": atmIfIndex,
       "atmIfConnMap": atmIfConnMap,
       "atmIfConnMapRowStatusTable": atmIfConnMapRowStatusTable,
       "atmIfConnMapRowStatusEntry": atmIfConnMapRowStatusEntry,
       "atmIfConnMapRowStatus": atmIfConnMapRowStatus,
       "atmIfConnMapComponentName": atmIfConnMapComponentName,
       "atmIfConnMapStorageType": atmIfConnMapStorageType,
       "atmIfConnMapIndex": atmIfConnMapIndex,
       "atmIfConnMapVccProvTable": atmIfConnMapVccProvTable,
       "atmIfConnMapVccProvEntry": atmIfConnMapVccProvEntry,
       "atmIfConnMapNumVccsForVpiZero": atmIfConnMapNumVccsForVpiZero,
       "atmIfConnMapNumNonZeroVpisForVccs": atmIfConnMapNumNonZeroVpisForVccs,
       "atmIfConnMapFirstNonZeroVpiForVccs": atmIfConnMapFirstNonZeroVpiForVccs,
       "atmIfConnMapNumVccsPerNonZeroVpi": atmIfConnMapNumVccsPerNonZeroVpi,
       "atmIfConnMapOperTable": atmIfConnMapOperTable,
       "atmIfConnMapOperEntry": atmIfConnMapOperEntry,
       "atmIfConnMapNumVccsForVpiZeroOper": atmIfConnMapNumVccsForVpiZeroOper,
       "atmIfConnMapNumNonZeroVpisForVccsOper": atmIfConnMapNumNonZeroVpisForVccsOper,
       "atmIfConnMapFirstNonZeroVpiForVccsOper": atmIfConnMapFirstNonZeroVpiForVccsOper,
       "atmIfConnMapNumVccsPerNonZeroVpiOper": atmIfConnMapNumVccsPerNonZeroVpiOper,
       "atmIfConnMapOv": atmIfConnMapOv,
       "atmIfConnMapOvRowStatusTable": atmIfConnMapOvRowStatusTable,
       "atmIfConnMapOvRowStatusEntry": atmIfConnMapOvRowStatusEntry,
       "atmIfConnMapOvRowStatus": atmIfConnMapOvRowStatus,
       "atmIfConnMapOvComponentName": atmIfConnMapOvComponentName,
       "atmIfConnMapOvStorageType": atmIfConnMapOvStorageType,
       "atmIfConnMapOvIndex": atmIfConnMapOvIndex,
       "atmIfConnMapOvProvTable": atmIfConnMapOvProvTable,
       "atmIfConnMapOvProvEntry": atmIfConnMapOvProvEntry,
       "atmIfConnMapOvNumVccsForVpiZero": atmIfConnMapOvNumVccsForVpiZero,
       "atmIfConnMapOvNumNonZeroVpisForVccs": atmIfConnMapOvNumNonZeroVpisForVccs,
       "atmIfConnMapOvFirstNonZeroVpiForVccs": atmIfConnMapOvFirstNonZeroVpiForVccs,
       "atmIfConnMapOvNumVccsPerNonZeroVpi": atmIfConnMapOvNumVccsPerNonZeroVpi,
       "atmIfCA": atmIfCA,
       "atmIfCARowStatusTable": atmIfCARowStatusTable,
       "atmIfCARowStatusEntry": atmIfCARowStatusEntry,
       "atmIfCARowStatus": atmIfCARowStatus,
       "atmIfCAComponentName": atmIfCAComponentName,
       "atmIfCAStorageType": atmIfCAStorageType,
       "atmIfCAIndex": atmIfCAIndex,
       "atmIfCACbr": atmIfCACbr,
       "atmIfCACbrRowStatusTable": atmIfCACbrRowStatusTable,
       "atmIfCACbrRowStatusEntry": atmIfCACbrRowStatusEntry,
       "atmIfCACbrRowStatus": atmIfCACbrRowStatus,
       "atmIfCACbrComponentName": atmIfCACbrComponentName,
       "atmIfCACbrStorageType": atmIfCACbrStorageType,
       "atmIfCACbrIndex": atmIfCACbrIndex,
       "atmIfCACbrProvTable": atmIfCACbrProvTable,
       "atmIfCACbrProvEntry": atmIfCACbrProvEntry,
       "atmIfCACbrProvPool": atmIfCACbrProvPool,
       "atmIfCACbrProvCdvt": atmIfCACbrProvCdvt,
       "atmIfCACbrCdv": atmIfCACbrCdv,
       "atmIfCACbrMaxCtd": atmIfCACbrMaxCtd,
       "atmIfCACbrProvClr": atmIfCACbrProvClr,
       "atmIfCACbrTxQueueLimit": atmIfCACbrTxQueueLimit,
       "atmIfCACbrHoldingPriority": atmIfCACbrHoldingPriority,
       "atmIfCACbrSvcHoldingPriority": atmIfCACbrSvcHoldingPriority,
       "atmIfCACbrSvcMpHoldingPriority": atmIfCACbrSvcMpHoldingPriority,
       "atmIfCACbrMinPerVcQueueLimit": atmIfCACbrMinPerVcQueueLimit,
       "atmIfCACbrPerVcQueueLimitReferenceRate": atmIfCACbrPerVcQueueLimitReferenceRate,
       "atmIfCACbrEmissionPriority": atmIfCACbrEmissionPriority,
       "atmIfCACbrTrafficShaping": atmIfCACbrTrafficShaping,
       "atmIfCACbrShapeRecoupPolicy": atmIfCACbrShapeRecoupPolicy,
       "atmIfCACbrUnshapedTransmitQueueing": atmIfCACbrUnshapedTransmitQueueing,
       "atmIfCACbrWeightPolicy": atmIfCACbrWeightPolicy,
       "atmIfCACbrForceTagging": atmIfCACbrForceTagging,
       "atmIfCACbrUsageParameterControl": atmIfCACbrUsageParameterControl,
       "atmIfCACbrOperTable": atmIfCACbrOperTable,
       "atmIfCACbrOperEntry": atmIfCACbrOperEntry,
       "atmIfCACbrEpdOffset": atmIfCACbrEpdOffset,
       "atmIfCARtVbr": atmIfCARtVbr,
       "atmIfCARtVbrRowStatusTable": atmIfCARtVbrRowStatusTable,
       "atmIfCARtVbrRowStatusEntry": atmIfCARtVbrRowStatusEntry,
       "atmIfCARtVbrRowStatus": atmIfCARtVbrRowStatus,
       "atmIfCARtVbrComponentName": atmIfCARtVbrComponentName,
       "atmIfCARtVbrStorageType": atmIfCARtVbrStorageType,
       "atmIfCARtVbrIndex": atmIfCARtVbrIndex,
       "atmIfCARtVbrProvTable": atmIfCARtVbrProvTable,
       "atmIfCARtVbrProvEntry": atmIfCARtVbrProvEntry,
       "atmIfCARtVbrPool": atmIfCARtVbrPool,
       "atmIfCARtVbrCdvt": atmIfCARtVbrCdvt,
       "atmIfCARtVbrCdv": atmIfCARtVbrCdv,
       "atmIfCARtVbrMaxCtd": atmIfCARtVbrMaxCtd,
       "atmIfCARtVbrCellLossRatio": atmIfCARtVbrCellLossRatio,
       "atmIfCARtVbrTxQueueLimit": atmIfCARtVbrTxQueueLimit,
       "atmIfCARtVbrMinPerVcQueueLimit": atmIfCARtVbrMinPerVcQueueLimit,
       "atmIfCARtVbrPerVcQueueLimitReferenceRate": atmIfCARtVbrPerVcQueueLimitReferenceRate,
       "atmIfCARtVbrHoldingPriority": atmIfCARtVbrHoldingPriority,
       "atmIfCARtVbrSvcHoldingPriority": atmIfCARtVbrSvcHoldingPriority,
       "atmIfCARtVbrSvcMpHoldingPriority": atmIfCARtVbrSvcMpHoldingPriority,
       "atmIfCARtVbrEmissionPriority": atmIfCARtVbrEmissionPriority,
       "atmIfCARtVbrTrafficShaping": atmIfCARtVbrTrafficShaping,
       "atmIfCARtVbrShapeRecoupPolicy": atmIfCARtVbrShapeRecoupPolicy,
       "atmIfCARtVbrUnshapedTransmitQueueing": atmIfCARtVbrUnshapedTransmitQueueing,
       "atmIfCARtVbrUsageParameterControl": atmIfCARtVbrUsageParameterControl,
       "atmIfCARtVbrWeightPolicy": atmIfCARtVbrWeightPolicy,
       "atmIfCARtVbrForceTagging": atmIfCARtVbrForceTagging,
       "atmIfCARtVbrOperTable": atmIfCARtVbrOperTable,
       "atmIfCARtVbrOperEntry": atmIfCARtVbrOperEntry,
       "atmIfCARtVbrOpUnshapedTransmitQueueing": atmIfCARtVbrOpUnshapedTransmitQueueing,
       "atmIfCARtVbrEpdOffset": atmIfCARtVbrEpdOffset,
       "atmIfCANrtVbr": atmIfCANrtVbr,
       "atmIfCANrtVbrRowStatusTable": atmIfCANrtVbrRowStatusTable,
       "atmIfCANrtVbrRowStatusEntry": atmIfCANrtVbrRowStatusEntry,
       "atmIfCANrtVbrRowStatus": atmIfCANrtVbrRowStatus,
       "atmIfCANrtVbrComponentName": atmIfCANrtVbrComponentName,
       "atmIfCANrtVbrStorageType": atmIfCANrtVbrStorageType,
       "atmIfCANrtVbrIndex": atmIfCANrtVbrIndex,
       "atmIfCANrtVbrProvTable": atmIfCANrtVbrProvTable,
       "atmIfCANrtVbrProvEntry": atmIfCANrtVbrProvEntry,
       "atmIfCANrtVbrPool": atmIfCANrtVbrPool,
       "atmIfCANrtVbrCdvt": atmIfCANrtVbrCdvt,
       "atmIfCANrtVbrCellLossRatio": atmIfCANrtVbrCellLossRatio,
       "atmIfCANrtVbrTxQueueLimit": atmIfCANrtVbrTxQueueLimit,
       "atmIfCANrtVbrSvcHoldingPriority": atmIfCANrtVbrSvcHoldingPriority,
       "atmIfCANrtVbrMinPerVcQueueLimit": atmIfCANrtVbrMinPerVcQueueLimit,
       "atmIfCANrtVbrPerVcQueueLimitReferenceRate": atmIfCANrtVbrPerVcQueueLimitReferenceRate,
       "atmIfCANrtVbrSvcMpHoldingPriority": atmIfCANrtVbrSvcMpHoldingPriority,
       "atmIfCANrtVbrHoldingPriority": atmIfCANrtVbrHoldingPriority,
       "atmIfCANrtVbrEmissionPriority": atmIfCANrtVbrEmissionPriority,
       "atmIfCANrtVbrTrafficShaping": atmIfCANrtVbrTrafficShaping,
       "atmIfCANrtVbrShapeRecoupPolicy": atmIfCANrtVbrShapeRecoupPolicy,
       "atmIfCANrtVbrUnshapedTransmitQueueing": atmIfCANrtVbrUnshapedTransmitQueueing,
       "atmIfCANrtVbrUsageParameterControl": atmIfCANrtVbrUsageParameterControl,
       "atmIfCANrtVbrWeightPolicy": atmIfCANrtVbrWeightPolicy,
       "atmIfCANrtVbrForceTagging": atmIfCANrtVbrForceTagging,
       "atmIfCANrtVbrOperTable": atmIfCANrtVbrOperTable,
       "atmIfCANrtVbrOperEntry": atmIfCANrtVbrOperEntry,
       "atmIfCANrtVbrOpUnshapedTransmitQueueing": atmIfCANrtVbrOpUnshapedTransmitQueueing,
       "atmIfCANrtVbrEpdOffset": atmIfCANrtVbrEpdOffset,
       "atmIfCAAbr": atmIfCAAbr,
       "atmIfCAAbrRowStatusTable": atmIfCAAbrRowStatusTable,
       "atmIfCAAbrRowStatusEntry": atmIfCAAbrRowStatusEntry,
       "atmIfCAAbrRowStatus": atmIfCAAbrRowStatus,
       "atmIfCAAbrComponentName": atmIfCAAbrComponentName,
       "atmIfCAAbrStorageType": atmIfCAAbrStorageType,
       "atmIfCAAbrIndex": atmIfCAAbrIndex,
       "atmIfCAAbrProvTable": atmIfCAAbrProvTable,
       "atmIfCAAbrProvEntry": atmIfCAAbrProvEntry,
       "atmIfCAAbrPool": atmIfCAAbrPool,
       "atmIfCAAbrCdvt": atmIfCAAbrCdvt,
       "atmIfCAAbrTxQueueLimit": atmIfCAAbrTxQueueLimit,
       "atmIfCAAbrMinPerVcQueueLimit": atmIfCAAbrMinPerVcQueueLimit,
       "atmIfCAAbrPerVcQueueLimitReferenceRate": atmIfCAAbrPerVcQueueLimitReferenceRate,
       "atmIfCAAbrEmissionPriority": atmIfCAAbrEmissionPriority,
       "atmIfCAAbrFairnessPolicy": atmIfCAAbrFairnessPolicy,
       "atmIfCAAbrFrttPortion": atmIfCAAbrFrttPortion,
       "atmIfCAAbrAbrConnectionType": atmIfCAAbrAbrConnectionType,
       "atmIfCAAbrUsageParameterControl": atmIfCAAbrUsageParameterControl,
       "atmIfCAAbrInitialCellRate": atmIfCAAbrInitialCellRate,
       "atmIfCAAbrRateDecreaseFactor": atmIfCAAbrRateDecreaseFactor,
       "atmIfCAAbrRateIncreaseFactor": atmIfCAAbrRateIncreaseFactor,
       "atmIfCAAbrMaxCellPerRmCell": atmIfCAAbrMaxCellPerRmCell,
       "atmIfCAAbrMaxTimeBetweenRmCells": atmIfCAAbrMaxTimeBetweenRmCells,
       "atmIfCAAbrCutoffDecreaseFactor": atmIfCAAbrCutoffDecreaseFactor,
       "atmIfCAAbrAcrDecreaseTimeFactor": atmIfCAAbrAcrDecreaseTimeFactor,
       "atmIfCAAbrDgcraMaximumDelay": atmIfCAAbrDgcraMaximumDelay,
       "atmIfCAAbrDgcraMinimumDelay": atmIfCAAbrDgcraMinimumDelay,
       "atmIfCAAbrHoldingPriority": atmIfCAAbrHoldingPriority,
       "atmIfCAAbrOperTable": atmIfCAAbrOperTable,
       "atmIfCAAbrOperEntry": atmIfCAAbrOperEntry,
       "atmIfCAAbrEpdOffset": atmIfCAAbrEpdOffset,
       "atmIfCAUbr": atmIfCAUbr,
       "atmIfCAUbrRowStatusTable": atmIfCAUbrRowStatusTable,
       "atmIfCAUbrRowStatusEntry": atmIfCAUbrRowStatusEntry,
       "atmIfCAUbrRowStatus": atmIfCAUbrRowStatus,
       "atmIfCAUbrComponentName": atmIfCAUbrComponentName,
       "atmIfCAUbrStorageType": atmIfCAUbrStorageType,
       "atmIfCAUbrIndex": atmIfCAUbrIndex,
       "atmIfCAUbrProvTable": atmIfCAUbrProvTable,
       "atmIfCAUbrProvEntry": atmIfCAUbrProvEntry,
       "atmIfCAUbrMaxVpcs": atmIfCAUbrMaxVpcs,
       "atmIfCAUbrMaxVccs": atmIfCAUbrMaxVccs,
       "atmIfCAUbrMaxVpts": atmIfCAUbrMaxVpts,
       "atmIfCAUbrPool": atmIfCAUbrPool,
       "atmIfCAUbrMinimumCellRate": atmIfCAUbrMinimumCellRate,
       "atmIfCAUbrTxQueueLimit": atmIfCAUbrTxQueueLimit,
       "atmIfCAUbrMinPerVcQueueLimit": atmIfCAUbrMinPerVcQueueLimit,
       "atmIfCAUbrPerVcQueueLimitReferenceRate": atmIfCAUbrPerVcQueueLimitReferenceRate,
       "atmIfCAUbrEmissionPriority": atmIfCAUbrEmissionPriority,
       "atmIfCAUbrTrafficShaping": atmIfCAUbrTrafficShaping,
       "atmIfCAUbrShapeRecoupPolicy": atmIfCAUbrShapeRecoupPolicy,
       "atmIfCAUbrUnshapedTransmitQueueing": atmIfCAUbrUnshapedTransmitQueueing,
       "atmIfCAUbrUsageParameterControl": atmIfCAUbrUsageParameterControl,
       "atmIfCAUbrWeightPolicy": atmIfCAUbrWeightPolicy,
       "atmIfCAUbrForceTagging": atmIfCAUbrForceTagging,
       "atmIfCAUbrCdvt": atmIfCAUbrCdvt,
       "atmIfCAUbrHoldingPriority": atmIfCAUbrHoldingPriority,
       "atmIfCAUbrSvcMpHoldingPriority": atmIfCAUbrSvcMpHoldingPriority,
       "atmIfCAUbrOperTable": atmIfCAUbrOperTable,
       "atmIfCAUbrOperEntry": atmIfCAUbrOperEntry,
       "atmIfCAUbrOpUnshapedTransmitQueueing": atmIfCAUbrOpUnshapedTransmitQueueing,
       "atmIfCAUbrVpcUsage": atmIfCAUbrVpcUsage,
       "atmIfCAUbrVccUsage": atmIfCAUbrVccUsage,
       "atmIfCAUbrVptUsage": atmIfCAUbrVptUsage,
       "atmIfCAUbrEpdOffset": atmIfCAUbrEpdOffset,
       "atmIfCAProvTable": atmIfCAProvTable,
       "atmIfCAProvEntry": atmIfCAProvEntry,
       "atmIfCAMaxVpcs": atmIfCAMaxVpcs,
       "atmIfCAMaxVccs": atmIfCAMaxVccs,
       "atmIfCAMinMulticastBranches": atmIfCAMinMulticastBranches,
       "atmIfCAMaxMulticastBranches": atmIfCAMaxMulticastBranches,
       "atmIfCAMaxVpts": atmIfCAMaxVpts,
       "atmIfCAMinAutoSelectedVci": atmIfCAMinAutoSelectedVci,
       "atmIfCAMinAutoSelectedVciForVpiZero": atmIfCAMinAutoSelectedVciForVpiZero,
       "atmIfCAMinAutoSelectedVciForNonZeroVpi": atmIfCAMinAutoSelectedVciForNonZeroVpi,
       "atmIfCAPermittedSvcAtmServiceCategories": atmIfCAPermittedSvcAtmServiceCategories,
       "atmIfCACbrPool": atmIfCACbrPool,
       "atmIfCACbrCdvt": atmIfCACbrCdvt,
       "atmIfCACbrCellLossRatio": atmIfCACbrCellLossRatio,
       "atmIfCASvcCbrHoldingPriority": atmIfCASvcCbrHoldingPriority,
       "atmIfCASvcVbrRtHoldingPriority": atmIfCASvcVbrRtHoldingPriority,
       "atmIfCASvcVbrNrtHoldingPriority": atmIfCASvcVbrNrtHoldingPriority,
       "atmIfCAVbrRtPool": atmIfCAVbrRtPool,
       "atmIfCAVbrRtCdvt": atmIfCAVbrRtCdvt,
       "atmIfCAVbrRtCellLossRatio": atmIfCAVbrRtCellLossRatio,
       "atmIfCAVbrNrtPool": atmIfCAVbrNrtPool,
       "atmIfCAVbrNrtCdvt": atmIfCAVbrNrtCdvt,
       "atmIfCAMaxCaVpcs": atmIfCAMaxCaVpcs,
       "atmIfCAMaxCaVpts": atmIfCAMaxCaVpts,
       "atmIfCAVbrNrtCellLossRatio": atmIfCAVbrNrtCellLossRatio,
       "atmIfCAUbrMaxConnections": atmIfCAUbrMaxConnections,
       "atmIfCAMinAutoSelectedVpi": atmIfCAMinAutoSelectedVpi,
       "atmIfCAPermittedAtmServiceCategories": atmIfCAPermittedAtmServiceCategories,
       "atmIfCAMaxAutoSelectedVpi": atmIfCAMaxAutoSelectedVpi,
       "atmIfCAMaxAutoSelectedVciForVpiZero": atmIfCAMaxAutoSelectedVciForVpiZero,
       "atmIfCAMaxAutoSelectedVciForNonZeroVpi": atmIfCAMaxAutoSelectedVciForNonZeroVpi,
       "atmIfCAOperTable": atmIfCAOperTable,
       "atmIfCAOperEntry": atmIfCAOperEntry,
       "atmIfCAPermanentVpcs": atmIfCAPermanentVpcs,
       "atmIfCAPermanentVpts": atmIfCAPermanentVpts,
       "atmIfCAPermanentVccs": atmIfCAPermanentVccs,
       "atmIfCASwitchedVccs": atmIfCASwitchedVccs,
       "atmIfCASwitchedMulticastBranches": atmIfCASwitchedMulticastBranches,
       "atmIfCATroubledVpcs": atmIfCATroubledVpcs,
       "atmIfCATroubledVpts": atmIfCATroubledVpts,
       "atmIfCATroubledVccs": atmIfCATroubledVccs,
       "atmIfCAUbrAvailableConnections": atmIfCAUbrAvailableConnections,
       "atmIfCAConnectionPoolUsage": atmIfCAConnectionPoolUsage,
       "atmIfCASwitchedVpcs": atmIfCASwitchedVpcs,
       "atmIfCAVirtualLinkRequestedBandwidth": atmIfCAVirtualLinkRequestedBandwidth,
       "atmIfCAVirtualLinkAdmittedBandwidth": atmIfCAVirtualLinkAdmittedBandwidth,
       "atmIfCAVirtualLinkUnallocatedBandwidth": atmIfCAVirtualLinkUnallocatedBandwidth,
       "atmIfCABwPoolTable": atmIfCABwPoolTable,
       "atmIfCABwPoolEntry": atmIfCABwPoolEntry,
       "atmIfCABwPoolIndex": atmIfCABwPoolIndex,
       "atmIfCABwPoolValue": atmIfCABwPoolValue,
       "atmIfCAPoolRequBwTable": atmIfCAPoolRequBwTable,
       "atmIfCAPoolRequBwEntry": atmIfCAPoolRequBwEntry,
       "atmIfCAPoolRequBwIndex": atmIfCAPoolRequBwIndex,
       "atmIfCAPoolRequBwValue": atmIfCAPoolRequBwValue,
       "atmIfCAPoolAdmitBwTable": atmIfCAPoolAdmitBwTable,
       "atmIfCAPoolAdmitBwEntry": atmIfCAPoolAdmitBwEntry,
       "atmIfCAPoolAdmitBwIndex": atmIfCAPoolAdmitBwIndex,
       "atmIfCAPoolAdmitBwValue": atmIfCAPoolAdmitBwValue,
       "atmIfCAPoolAvailBwTable": atmIfCAPoolAvailBwTable,
       "atmIfCAPoolAvailBwEntry": atmIfCAPoolAvailBwEntry,
       "atmIfCAPoolAvailBwIndex": atmIfCAPoolAvailBwIndex,
       "atmIfCAPoolAvailBwValue": atmIfCAPoolAvailBwValue,
       "atmIfCAPoolProvBwTable": atmIfCAPoolProvBwTable,
       "atmIfCAPoolProvBwEntry": atmIfCAPoolProvBwEntry,
       "atmIfCAPoolProvBwIndex": atmIfCAPoolProvBwIndex,
       "atmIfCAPoolProvBwValue": atmIfCAPoolProvBwValue,
       "atmIfCAPoolWaitAdmConnsTable": atmIfCAPoolWaitAdmConnsTable,
       "atmIfCAPoolWaitAdmConnsEntry": atmIfCAPoolWaitAdmConnsEntry,
       "atmIfCAPoolWaitAdmConnsIndex": atmIfCAPoolWaitAdmConnsIndex,
       "atmIfCAPoolWaitAdmConnsValue": atmIfCAPoolWaitAdmConnsValue,
       "atmIfCAPoolAdmConnsTable": atmIfCAPoolAdmConnsTable,
       "atmIfCAPoolAdmConnsEntry": atmIfCAPoolAdmConnsEntry,
       "atmIfCAPoolAdmConnsIndex": atmIfCAPoolAdmConnsIndex,
       "atmIfCAPoolAdmConnsValue": atmIfCAPoolAdmConnsValue,
       "atmIfCAPoolAvailableBwTable": atmIfCAPoolAvailableBwTable,
       "atmIfCAPoolAvailableBwEntry": atmIfCAPoolAvailableBwEntry,
       "atmIfCAPoolAvailableBwIndex": atmIfCAPoolAvailableBwIndex,
       "atmIfCAPoolAvailableBwValue": atmIfCAPoolAvailableBwValue,
       "atmIfVpc": atmIfVpc,
       "atmIfVpcRowStatusTable": atmIfVpcRowStatusTable,
       "atmIfVpcRowStatusEntry": atmIfVpcRowStatusEntry,
       "atmIfVpcRowStatus": atmIfVpcRowStatus,
       "atmIfVpcComponentName": atmIfVpcComponentName,
       "atmIfVpcStorageType": atmIfVpcStorageType,
       "atmIfVpcIndex": atmIfVpcIndex,
       "atmIfVpcVpd": atmIfVpcVpd,
       "atmIfVpcVpdRowStatusTable": atmIfVpcVpdRowStatusTable,
       "atmIfVpcVpdRowStatusEntry": atmIfVpcVpdRowStatusEntry,
       "atmIfVpcVpdRowStatus": atmIfVpcVpdRowStatus,
       "atmIfVpcVpdComponentName": atmIfVpcVpdComponentName,
       "atmIfVpcVpdStorageType": atmIfVpcVpdStorageType,
       "atmIfVpcVpdIndex": atmIfVpcVpdIndex,
       "atmIfVpcVpdTm": atmIfVpcVpdTm,
       "atmIfVpcVpdTmRowStatusTable": atmIfVpcVpdTmRowStatusTable,
       "atmIfVpcVpdTmRowStatusEntry": atmIfVpcVpdTmRowStatusEntry,
       "atmIfVpcVpdTmRowStatus": atmIfVpcVpdTmRowStatus,
       "atmIfVpcVpdTmComponentName": atmIfVpcVpdTmComponentName,
       "atmIfVpcVpdTmStorageType": atmIfVpcVpdTmStorageType,
       "atmIfVpcVpdTmIndex": atmIfVpcVpdTmIndex,
       "atmIfVpcVpdTmAbr": atmIfVpcVpdTmAbr,
       "atmIfVpcVpdTmAbrRowStatusTable": atmIfVpcVpdTmAbrRowStatusTable,
       "atmIfVpcVpdTmAbrRowStatusEntry": atmIfVpcVpdTmAbrRowStatusEntry,
       "atmIfVpcVpdTmAbrRowStatus": atmIfVpcVpdTmAbrRowStatus,
       "atmIfVpcVpdTmAbrComponentName": atmIfVpcVpdTmAbrComponentName,
       "atmIfVpcVpdTmAbrStorageType": atmIfVpcVpdTmAbrStorageType,
       "atmIfVpcVpdTmAbrIndex": atmIfVpcVpdTmAbrIndex,
       "atmIfVpcVpdTmAbrProvTable": atmIfVpcVpdTmAbrProvTable,
       "atmIfVpcVpdTmAbrProvEntry": atmIfVpcVpdTmAbrProvEntry,
       "atmIfVpcVpdTmAbrInitialCellRate": atmIfVpcVpdTmAbrInitialCellRate,
       "atmIfVpcVpdTmAbrTransientBufferExposure": atmIfVpcVpdTmAbrTransientBufferExposure,
       "atmIfVpcVpdTmAbrFixedRoundTripTime": atmIfVpcVpdTmAbrFixedRoundTripTime,
       "atmIfVpcVpdTmAbrRateDecreaseFactor": atmIfVpcVpdTmAbrRateDecreaseFactor,
       "atmIfVpcVpdTmAbrRateIncreaseFactor": atmIfVpcVpdTmAbrRateIncreaseFactor,
       "atmIfVpcVpdTmAbrMaxCellPerRmCell": atmIfVpcVpdTmAbrMaxCellPerRmCell,
       "atmIfVpcVpdTmAbrMaxTimeBetweenRmCells": atmIfVpcVpdTmAbrMaxTimeBetweenRmCells,
       "atmIfVpcVpdTmAbrCutoffDecreaseFactor": atmIfVpcVpdTmAbrCutoffDecreaseFactor,
       "atmIfVpcVpdTmAbrAcrDecreaseTimeFactor": atmIfVpcVpdTmAbrAcrDecreaseTimeFactor,
       "atmIfVpcVpdTmAbrDgcraMaximumDelay": atmIfVpcVpdTmAbrDgcraMaximumDelay,
       "atmIfVpcVpdTmAbrDgcraMinimumDelay": atmIfVpcVpdTmAbrDgcraMinimumDelay,
       "atmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor": atmIfVpcVpdTmAbrFarEndAcrDecreaseTimeFactor,
       "atmIfVpcVpdTmAbrFarEndInitialCellRate": atmIfVpcVpdTmAbrFarEndInitialCellRate,
       "atmIfVpcVpdTmProvTable": atmIfVpcVpdTmProvTable,
       "atmIfVpcVpdTmProvEntry": atmIfVpcVpdTmProvEntry,
       "atmIfVpcVpdTmTxTrafficDescType": atmIfVpcVpdTmTxTrafficDescType,
       "atmIfVpcVpdTmFwdQosClass": atmIfVpcVpdTmFwdQosClass,
       "atmIfVpcVpdTmTxQueueLimit": atmIfVpcVpdTmTxQueueLimit,
       "atmIfVpcVpdTmHoldingPriority": atmIfVpcVpdTmHoldingPriority,
       "atmIfVpcVpdTmRxTrafficDescType": atmIfVpcVpdTmRxTrafficDescType,
       "atmIfVpcVpdTmBwdQosClass": atmIfVpcVpdTmBwdQosClass,
       "atmIfVpcVpdTmAtmServiceCategory": atmIfVpcVpdTmAtmServiceCategory,
       "atmIfVpcVpdTmTrafficShaping": atmIfVpcVpdTmTrafficShaping,
       "atmIfVpcVpdTmUnshapedTransmitQueueing": atmIfVpcVpdTmUnshapedTransmitQueueing,
       "atmIfVpcVpdTmWeight": atmIfVpcVpdTmWeight,
       "atmIfVpcVpdTmForceTagging": atmIfVpcVpdTmForceTagging,
       "atmIfVpcVpdTmUsageParameterControl": atmIfVpcVpdTmUsageParameterControl,
       "atmIfVpcVpdTmBearerClassBbc": atmIfVpcVpdTmBearerClassBbc,
       "atmIfVpcVpdTmTransferCapabilityBbc": atmIfVpcVpdTmTransferCapabilityBbc,
       "atmIfVpcVpdTmTxWredThreshold": atmIfVpcVpdTmTxWredThreshold,
       "atmIfVpcVpdTmClippingBbc": atmIfVpcVpdTmClippingBbc,
       "atmIfVpcVpdTmBestEffort": atmIfVpcVpdTmBestEffort,
       "atmIfVpcVpdTmTxPacketWiseDiscard": atmIfVpcVpdTmTxPacketWiseDiscard,
       "atmIfVpcVpdTmTxWredMode": atmIfVpcVpdTmTxWredMode,
       "atmIfVpcVpdTmRxPacketWiseDiscard": atmIfVpcVpdTmRxPacketWiseDiscard,
       "atmIfVpcVpdTmAbrConnectionType": atmIfVpcVpdTmAbrConnectionType,
       "atmIfVpcVpdTmTxTdpTable": atmIfVpcVpdTmTxTdpTable,
       "atmIfVpcVpdTmTxTdpEntry": atmIfVpcVpdTmTxTdpEntry,
       "atmIfVpcVpdTmTxTdpIndex": atmIfVpcVpdTmTxTdpIndex,
       "atmIfVpcVpdTmTxTdpValue": atmIfVpcVpdTmTxTdpValue,
       "atmIfVpcVpdTmRxTdpTable": atmIfVpcVpdTmRxTdpTable,
       "atmIfVpcVpdTmRxTdpEntry": atmIfVpcVpdTmRxTdpEntry,
       "atmIfVpcVpdTmRxTdpIndex": atmIfVpcVpdTmRxTdpIndex,
       "atmIfVpcVpdTmRxTdpValue": atmIfVpcVpdTmRxTdpValue,
       "atmIfVpcVpdTmFqpTable": atmIfVpcVpdTmFqpTable,
       "atmIfVpcVpdTmFqpEntry": atmIfVpcVpdTmFqpEntry,
       "atmIfVpcVpdTmFqpIndex": atmIfVpcVpdTmFqpIndex,
       "atmIfVpcVpdTmFqpValue": atmIfVpcVpdTmFqpValue,
       "atmIfVpcVpdTmBqpTable": atmIfVpcVpdTmBqpTable,
       "atmIfVpcVpdTmBqpEntry": atmIfVpcVpdTmBqpEntry,
       "atmIfVpcVpdTmBqpIndex": atmIfVpcVpdTmBqpIndex,
       "atmIfVpcVpdTmBqpValue": atmIfVpcVpdTmBqpValue,
       "atmIfVpcVpdLbkTable": atmIfVpcVpdLbkTable,
       "atmIfVpcVpdLbkEntry": atmIfVpcVpdLbkEntry,
       "atmIfVpcVpdSegLinkSideLoopback": atmIfVpcVpdSegLinkSideLoopback,
       "atmIfVpcVpdSegSwitchSideLoopback": atmIfVpcVpdSegSwitchSideLoopback,
       "atmIfVpcVpdEndToEndLoopback": atmIfVpcVpdEndToEndLoopback,
       "atmIfVpcVpdLoopbackMonitoring": atmIfVpcVpdLoopbackMonitoring,
       "atmIfVpcVpdTrafficTable": atmIfVpcVpdTrafficTable,
       "atmIfVpcVpdTrafficEntry": atmIfVpcVpdTrafficEntry,
       "atmIfVpcVpdTxTrafficDescType": atmIfVpcVpdTxTrafficDescType,
       "atmIfVpcVpdTxQosClass": atmIfVpcVpdTxQosClass,
       "atmIfVpcVpdFwdQosClass": atmIfVpcVpdFwdQosClass,
       "atmIfVpcVpdHoldingPriority": atmIfVpcVpdHoldingPriority,
       "atmIfVpcVpdRxTrafficDescType": atmIfVpcVpdRxTrafficDescType,
       "atmIfVpcVpdRxQosClass": atmIfVpcVpdRxQosClass,
       "atmIfVpcVpdBwdQosClass": atmIfVpcVpdBwdQosClass,
       "atmIfVpcVpdAtmServiceCategory": atmIfVpcVpdAtmServiceCategory,
       "atmIfVpcVpdTrafficShaping": atmIfVpcVpdTrafficShaping,
       "atmIfVpcVpdUnshapedTransmitQueueing": atmIfVpcVpdUnshapedTransmitQueueing,
       "atmIfVpcVpdUsageParameterControl": atmIfVpcVpdUsageParameterControl,
       "atmIfVpcVpdBearerClassBbc": atmIfVpcVpdBearerClassBbc,
       "atmIfVpcVpdTransferCapabilityBbc": atmIfVpcVpdTransferCapabilityBbc,
       "atmIfVpcVpdClippingBbc": atmIfVpcVpdClippingBbc,
       "atmIfVpcVpdBestEffort": atmIfVpcVpdBestEffort,
       "atmIfVpcVpdFwdFrameDiscard": atmIfVpcVpdFwdFrameDiscard,
       "atmIfVpcVpdBwdFrameDiscard": atmIfVpcVpdBwdFrameDiscard,
       "atmIfVpcVpdAcctTable": atmIfVpcVpdAcctTable,
       "atmIfVpcVpdAcctEntry": atmIfVpcVpdAcctEntry,
       "atmIfVpcVpdCorrelationTag": atmIfVpcVpdCorrelationTag,
       "atmIfVpcVpdTxTdpTable": atmIfVpcVpdTxTdpTable,
       "atmIfVpcVpdTxTdpEntry": atmIfVpcVpdTxTdpEntry,
       "atmIfVpcVpdTxTdpIndex": atmIfVpcVpdTxTdpIndex,
       "atmIfVpcVpdTxTdpValue": atmIfVpcVpdTxTdpValue,
       "atmIfVpcVpdRxTdpTable": atmIfVpcVpdRxTdpTable,
       "atmIfVpcVpdRxTdpEntry": atmIfVpcVpdRxTdpEntry,
       "atmIfVpcVpdRxTdpIndex": atmIfVpcVpdRxTdpIndex,
       "atmIfVpcVpdRxTdpValue": atmIfVpcVpdRxTdpValue,
       "atmIfVpcVpdFqpTable": atmIfVpcVpdFqpTable,
       "atmIfVpcVpdFqpEntry": atmIfVpcVpdFqpEntry,
       "atmIfVpcVpdFqpIndex": atmIfVpcVpdFqpIndex,
       "atmIfVpcVpdFqpValue": atmIfVpcVpdFqpValue,
       "atmIfVpcVpdBqpTable": atmIfVpcVpdBqpTable,
       "atmIfVpcVpdBqpEntry": atmIfVpcVpdBqpEntry,
       "atmIfVpcVpdBqpIndex": atmIfVpcVpdBqpIndex,
       "atmIfVpcVpdBqpValue": atmIfVpcVpdBqpValue,
       "atmIfVpcLoop": atmIfVpcLoop,
       "atmIfVpcLoopRowStatusTable": atmIfVpcLoopRowStatusTable,
       "atmIfVpcLoopRowStatusEntry": atmIfVpcLoopRowStatusEntry,
       "atmIfVpcLoopRowStatus": atmIfVpcLoopRowStatus,
       "atmIfVpcLoopComponentName": atmIfVpcLoopComponentName,
       "atmIfVpcLoopStorageType": atmIfVpcLoopStorageType,
       "atmIfVpcLoopIndex": atmIfVpcLoopIndex,
       "atmIfVpcTm": atmIfVpcTm,
       "atmIfVpcTmRowStatusTable": atmIfVpcTmRowStatusTable,
       "atmIfVpcTmRowStatusEntry": atmIfVpcTmRowStatusEntry,
       "atmIfVpcTmRowStatus": atmIfVpcTmRowStatus,
       "atmIfVpcTmComponentName": atmIfVpcTmComponentName,
       "atmIfVpcTmStorageType": atmIfVpcTmStorageType,
       "atmIfVpcTmIndex": atmIfVpcTmIndex,
       "atmIfVpcTmAbr": atmIfVpcTmAbr,
       "atmIfVpcTmAbrRowStatusTable": atmIfVpcTmAbrRowStatusTable,
       "atmIfVpcTmAbrRowStatusEntry": atmIfVpcTmAbrRowStatusEntry,
       "atmIfVpcTmAbrRowStatus": atmIfVpcTmAbrRowStatus,
       "atmIfVpcTmAbrComponentName": atmIfVpcTmAbrComponentName,
       "atmIfVpcTmAbrStorageType": atmIfVpcTmAbrStorageType,
       "atmIfVpcTmAbrIndex": atmIfVpcTmAbrIndex,
       "atmIfVpcTmAbrOperTable": atmIfVpcTmAbrOperTable,
       "atmIfVpcTmAbrOperEntry": atmIfVpcTmAbrOperEntry,
       "atmIfVpcTmAbrInitialCellRate": atmIfVpcTmAbrInitialCellRate,
       "atmIfVpcTmAbrTransientBufferExposure": atmIfVpcTmAbrTransientBufferExposure,
       "atmIfVpcTmAbrFixedRoundTripTime": atmIfVpcTmAbrFixedRoundTripTime,
       "atmIfVpcTmAbrRateDecreaseFactor": atmIfVpcTmAbrRateDecreaseFactor,
       "atmIfVpcTmAbrRateIncreaseFactor": atmIfVpcTmAbrRateIncreaseFactor,
       "atmIfVpcTmAbrMaxCellPerRmCell": atmIfVpcTmAbrMaxCellPerRmCell,
       "atmIfVpcTmAbrMaxTimeBetweenRmCell": atmIfVpcTmAbrMaxTimeBetweenRmCell,
       "atmIfVpcTmAbrCutoffDecreaseFactor": atmIfVpcTmAbrCutoffDecreaseFactor,
       "atmIfVpcTmAbrAcrDecreaseTimeFactor": atmIfVpcTmAbrAcrDecreaseTimeFactor,
       "atmIfVpcTmAbrForwardRmCellLimit": atmIfVpcTmAbrForwardRmCellLimit,
       "atmIfVpcTmAbrTxRateChangeInfo": atmIfVpcTmAbrTxRateChangeInfo,
       "atmIfVpcTmAbrAcrRateChangeInfo": atmIfVpcTmAbrAcrRateChangeInfo,
       "atmIfVpcTmAbrTxFwdRmCells": atmIfVpcTmAbrTxFwdRmCells,
       "atmIfVpcTmAbrRxEfci": atmIfVpcTmAbrRxEfci,
       "atmIfVpcTmAbrBrmRateChangeInfo": atmIfVpcTmAbrBrmRateChangeInfo,
       "atmIfVpcTmAbrBrmExplicitRate": atmIfVpcTmAbrBrmExplicitRate,
       "atmIfVpcTmOperTable": atmIfVpcTmOperTable,
       "atmIfVpcTmOperEntry": atmIfVpcTmOperEntry,
       "atmIfVpcTmTxTrafficDescType": atmIfVpcTmTxTrafficDescType,
       "atmIfVpcTmTxQosClass": atmIfVpcTmTxQosClass,
       "atmIfVpcTmTxQueueLength": atmIfVpcTmTxQueueLength,
       "atmIfVpcTmTxQueueCongestionState": atmIfVpcTmTxQueueCongestionState,
       "atmIfVpcTmHoldingPriority": atmIfVpcTmHoldingPriority,
       "atmIfVpcTmRxTrafficDescType": atmIfVpcTmRxTrafficDescType,
       "atmIfVpcTmRxQosClass": atmIfVpcTmRxQosClass,
       "atmIfVpcTmAtmServiceCategory": atmIfVpcTmAtmServiceCategory,
       "atmIfVpcTmTrafficShaping": atmIfVpcTmTrafficShaping,
       "atmIfVpcTmBearerClassBbc": atmIfVpcTmBearerClassBbc,
       "atmIfVpcTmTransferCapabilityBbc": atmIfVpcTmTransferCapabilityBbc,
       "atmIfVpcTmClippingBbc": atmIfVpcTmClippingBbc,
       "atmIfVpcTmUnshapedTransmitQueueing": atmIfVpcTmUnshapedTransmitQueueing,
       "atmIfVpcTmBestEffort": atmIfVpcTmBestEffort,
       "atmIfVpcTmForceTagging": atmIfVpcTmForceTagging,
       "atmIfVpcTmWeight": atmIfVpcTmWeight,
       "atmIfVpcTmUsageParameterControl": atmIfVpcTmUsageParameterControl,
       "atmIfVpcTmTxPacketWiseDiscard": atmIfVpcTmTxPacketWiseDiscard,
       "atmIfVpcTmRxPacketWiseDiscard": atmIfVpcTmRxPacketWiseDiscard,
       "atmIfVpcTmBandwidthElastic": atmIfVpcTmBandwidthElastic,
       "atmIfVpcTmBandwidthReduction": atmIfVpcTmBandwidthReduction,
       "atmIfVpcTmAbrConnectionType": atmIfVpcTmAbrConnectionType,
       "atmIfVpcTmTxTdpTable": atmIfVpcTmTxTdpTable,
       "atmIfVpcTmTxTdpEntry": atmIfVpcTmTxTdpEntry,
       "atmIfVpcTmTxTdpIndex": atmIfVpcTmTxTdpIndex,
       "atmIfVpcTmTxTdpValue": atmIfVpcTmTxTdpValue,
       "atmIfVpcTmTxQThreshTable": atmIfVpcTmTxQThreshTable,
       "atmIfVpcTmTxQThreshEntry": atmIfVpcTmTxQThreshEntry,
       "atmIfVpcTmTxQThreshIndex": atmIfVpcTmTxQThreshIndex,
       "atmIfVpcTmTxQThreshValue": atmIfVpcTmTxQThreshValue,
       "atmIfVpcTmRxTdpTable": atmIfVpcTmRxTdpTable,
       "atmIfVpcTmRxTdpEntry": atmIfVpcTmRxTdpEntry,
       "atmIfVpcTmRxTdpIndex": atmIfVpcTmRxTdpIndex,
       "atmIfVpcTmRxTdpValue": atmIfVpcTmRxTdpValue,
       "atmIfVpcTmTqpTable": atmIfVpcTmTqpTable,
       "atmIfVpcTmTqpEntry": atmIfVpcTmTqpEntry,
       "atmIfVpcTmTqpIndex": atmIfVpcTmTqpIndex,
       "atmIfVpcTmTqpValue": atmIfVpcTmTqpValue,
       "atmIfVpcTmRqpTable": atmIfVpcTmRqpTable,
       "atmIfVpcTmRqpEntry": atmIfVpcTmRqpEntry,
       "atmIfVpcTmRqpIndex": atmIfVpcTmRqpIndex,
       "atmIfVpcTmRqpValue": atmIfVpcTmRqpValue,
       "atmIfVpcStateTable": atmIfVpcStateTable,
       "atmIfVpcStateEntry": atmIfVpcStateEntry,
       "atmIfVpcAdminState": atmIfVpcAdminState,
       "atmIfVpcOperationalState": atmIfVpcOperationalState,
       "atmIfVpcUsageState": atmIfVpcUsageState,
       "atmIfVpcOperTable": atmIfVpcOperTable,
       "atmIfVpcOperEntry": atmIfVpcOperEntry,
       "atmIfVpcConnectionPointType": atmIfVpcConnectionPointType,
       "atmIfVpcStatusTable": atmIfVpcStatusTable,
       "atmIfVpcStatusEntry": atmIfVpcStatusEntry,
       "atmIfVpcOperStatus": atmIfVpcOperStatus,
       "atmIfVpcLocalFailureCause": atmIfVpcLocalFailureCause,
       "atmIfVpcTroubled": atmIfVpcTroubled,
       "atmIfVpcSegLinkSideLoopbackState": atmIfVpcSegLinkSideLoopbackState,
       "atmIfVpcSegSwitchSideLoopbackState": atmIfVpcSegSwitchSideLoopbackState,
       "atmIfVpcEndToEndLoopbackState": atmIfVpcEndToEndLoopbackState,
       "atmIfVpcRxOamCellCongestionState": atmIfVpcRxOamCellCongestionState,
       "atmIfVpcAisState": atmIfVpcAisState,
       "atmIfVpcRdiState": atmIfVpcRdiState,
       "atmIfVpcTrafficTable": atmIfVpcTrafficTable,
       "atmIfVpcTrafficEntry": atmIfVpcTrafficEntry,
       "atmIfVpcTxTrafficDescType": atmIfVpcTxTrafficDescType,
       "atmIfVpcTxQosClass": atmIfVpcTxQosClass,
       "atmIfVpcFwdQosClass": atmIfVpcFwdQosClass,
       "atmIfVpcTxQueueLength": atmIfVpcTxQueueLength,
       "atmIfVpcTxQueueCongestionState": atmIfVpcTxQueueCongestionState,
       "atmIfVpcHoldingPriority": atmIfVpcHoldingPriority,
       "atmIfVpcRxTrafficDescType": atmIfVpcRxTrafficDescType,
       "atmIfVpcRxQosClass": atmIfVpcRxQosClass,
       "atmIfVpcBwdQosClass": atmIfVpcBwdQosClass,
       "atmIfVpcAtmServiceCategory": atmIfVpcAtmServiceCategory,
       "atmIfVpcTrafficShaping": atmIfVpcTrafficShaping,
       "atmIfVpcBearerClassBbc": atmIfVpcBearerClassBbc,
       "atmIfVpcTransferCapabilityBbc": atmIfVpcTransferCapabilityBbc,
       "atmIfVpcClippingBbc": atmIfVpcClippingBbc,
       "atmIfVpcUnshapedTransmitQueueing": atmIfVpcUnshapedTransmitQueueing,
       "atmIfVpcBestEffort": atmIfVpcBestEffort,
       "atmIfVpcUsageParameterControl": atmIfVpcUsageParameterControl,
       "atmIfVpcTxFrameDiscard": atmIfVpcTxFrameDiscard,
       "atmIfVpcRxFrameDiscard": atmIfVpcRxFrameDiscard,
       "atmIfVpcBandwidthElastic": atmIfVpcBandwidthElastic,
       "atmIfVpcBandwidthReduction": atmIfVpcBandwidthReduction,
       "atmIfVpcStatsTable": atmIfVpcStatsTable,
       "atmIfVpcStatsEntry": atmIfVpcStatsEntry,
       "atmIfVpcStatsTxCell": atmIfVpcStatsTxCell,
       "atmIfVpcStatsTxCellClp": atmIfVpcStatsTxCellClp,
       "atmIfVpcTxDiscard": atmIfVpcTxDiscard,
       "atmIfVpcTxDiscardClp": atmIfVpcTxDiscardClp,
       "atmIfVpcStatsTxCellDiscard": atmIfVpcStatsTxCellDiscard,
       "atmIfVpcStatsTxCellDiscardClp": atmIfVpcStatsTxCellDiscardClp,
       "atmIfVpcStatsTxFrameDiscard": atmIfVpcStatsTxFrameDiscard,
       "atmIfVpcStatsTxFrameDiscardClp": atmIfVpcStatsTxFrameDiscardClp,
       "atmIfVpcTxUtilization": atmIfVpcTxUtilization,
       "atmIfVpcStatsRxCell": atmIfVpcStatsRxCell,
       "atmIfVpcStatsRxCellClp": atmIfVpcStatsRxCellClp,
       "atmIfVpcRxDiscard": atmIfVpcRxDiscard,
       "atmIfVpcRxDiscardClp": atmIfVpcRxDiscardClp,
       "atmIfVpcStatsRxCellDiscard": atmIfVpcStatsRxCellDiscard,
       "atmIfVpcStatsRxCellDiscardClp": atmIfVpcStatsRxCellDiscardClp,
       "atmIfVpcStatsRxFrameDiscard": atmIfVpcStatsRxFrameDiscard,
       "atmIfVpcStatsRxFrameDiscardClp": atmIfVpcStatsRxFrameDiscardClp,
       "atmIfVpcRxUtilization": atmIfVpcRxUtilization,
       "atmIfVpcStatsRxUpcViolationOnEnforcer1": atmIfVpcStatsRxUpcViolationOnEnforcer1,
       "atmIfVpcStatsRxUpcViolationOnEnforcer2": atmIfVpcStatsRxUpcViolationOnEnforcer2,
       "atmIfVpcStatsRxAal5FrameError": atmIfVpcStatsRxAal5FrameError,
       "atmIfVpcStatsRxAal5FrameAbort": atmIfVpcStatsRxAal5FrameAbort,
       "atmIfVpcTxTdpTable": atmIfVpcTxTdpTable,
       "atmIfVpcTxTdpEntry": atmIfVpcTxTdpEntry,
       "atmIfVpcTxTdpIndex": atmIfVpcTxTdpIndex,
       "atmIfVpcTxTdpValue": atmIfVpcTxTdpValue,
       "atmIfVpcRxTdpTable": atmIfVpcRxTdpTable,
       "atmIfVpcRxTdpEntry": atmIfVpcRxTdpEntry,
       "atmIfVpcRxTdpIndex": atmIfVpcRxTdpIndex,
       "atmIfVpcRxTdpValue": atmIfVpcRxTdpValue,
       "atmIfVpcTxQThreshTable": atmIfVpcTxQThreshTable,
       "atmIfVpcTxQThreshEntry": atmIfVpcTxQThreshEntry,
       "atmIfVpcTxQThreshIndex": atmIfVpcTxQThreshIndex,
       "atmIfVpcTxQThreshValue": atmIfVpcTxQThreshValue,
       "atmIfVpcFqpTable": atmIfVpcFqpTable,
       "atmIfVpcFqpEntry": atmIfVpcFqpEntry,
       "atmIfVpcFqpIndex": atmIfVpcFqpIndex,
       "atmIfVpcFqpValue": atmIfVpcFqpValue,
       "atmIfVpcBqpTable": atmIfVpcBqpTable,
       "atmIfVpcBqpEntry": atmIfVpcBqpEntry,
       "atmIfVpcBqpIndex": atmIfVpcBqpIndex,
       "atmIfVpcBqpValue": atmIfVpcBqpValue,
       "atmIfVcc": atmIfVcc,
       "atmIfVccRowStatusTable": atmIfVccRowStatusTable,
       "atmIfVccRowStatusEntry": atmIfVccRowStatusEntry,
       "atmIfVccRowStatus": atmIfVccRowStatus,
       "atmIfVccComponentName": atmIfVccComponentName,
       "atmIfVccStorageType": atmIfVccStorageType,
       "atmIfVccIndex": atmIfVccIndex,
       "atmIfVccVcd": atmIfVccVcd,
       "atmIfVccVcdRowStatusTable": atmIfVccVcdRowStatusTable,
       "atmIfVccVcdRowStatusEntry": atmIfVccVcdRowStatusEntry,
       "atmIfVccVcdRowStatus": atmIfVccVcdRowStatus,
       "atmIfVccVcdComponentName": atmIfVccVcdComponentName,
       "atmIfVccVcdStorageType": atmIfVccVcdStorageType,
       "atmIfVccVcdIndex": atmIfVccVcdIndex,
       "atmIfVccVcdTm": atmIfVccVcdTm,
       "atmIfVccVcdTmRowStatusTable": atmIfVccVcdTmRowStatusTable,
       "atmIfVccVcdTmRowStatusEntry": atmIfVccVcdTmRowStatusEntry,
       "atmIfVccVcdTmRowStatus": atmIfVccVcdTmRowStatus,
       "atmIfVccVcdTmComponentName": atmIfVccVcdTmComponentName,
       "atmIfVccVcdTmStorageType": atmIfVccVcdTmStorageType,
       "atmIfVccVcdTmIndex": atmIfVccVcdTmIndex,
       "atmIfVccVcdTmAbr": atmIfVccVcdTmAbr,
       "atmIfVccVcdTmAbrRowStatusTable": atmIfVccVcdTmAbrRowStatusTable,
       "atmIfVccVcdTmAbrRowStatusEntry": atmIfVccVcdTmAbrRowStatusEntry,
       "atmIfVccVcdTmAbrRowStatus": atmIfVccVcdTmAbrRowStatus,
       "atmIfVccVcdTmAbrComponentName": atmIfVccVcdTmAbrComponentName,
       "atmIfVccVcdTmAbrStorageType": atmIfVccVcdTmAbrStorageType,
       "atmIfVccVcdTmAbrIndex": atmIfVccVcdTmAbrIndex,
       "atmIfVccVcdTmAbrProvTable": atmIfVccVcdTmAbrProvTable,
       "atmIfVccVcdTmAbrProvEntry": atmIfVccVcdTmAbrProvEntry,
       "atmIfVccVcdTmAbrInitialCellRate": atmIfVccVcdTmAbrInitialCellRate,
       "atmIfVccVcdTmAbrTransientBufferExposure": atmIfVccVcdTmAbrTransientBufferExposure,
       "atmIfVccVcdTmAbrFixedRoundTripTime": atmIfVccVcdTmAbrFixedRoundTripTime,
       "atmIfVccVcdTmAbrRateDecreaseFactor": atmIfVccVcdTmAbrRateDecreaseFactor,
       "atmIfVccVcdTmAbrRateIncreaseFactor": atmIfVccVcdTmAbrRateIncreaseFactor,
       "atmIfVccVcdTmAbrMaxCellPerRmCell": atmIfVccVcdTmAbrMaxCellPerRmCell,
       "atmIfVccVcdTmAbrMaxTimeBetweenRmCells": atmIfVccVcdTmAbrMaxTimeBetweenRmCells,
       "atmIfVccVcdTmAbrCutoffDecreaseFactor": atmIfVccVcdTmAbrCutoffDecreaseFactor,
       "atmIfVccVcdTmAbrAcrDecreaseTimeFactor": atmIfVccVcdTmAbrAcrDecreaseTimeFactor,
       "atmIfVccVcdTmAbrDgcraMaximumDelay": atmIfVccVcdTmAbrDgcraMaximumDelay,
       "atmIfVccVcdTmAbrDgcraMinimumDelay": atmIfVccVcdTmAbrDgcraMinimumDelay,
       "atmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor": atmIfVccVcdTmAbrFarEndAcrDecreaseTimeFactor,
       "atmIfVccVcdTmAbrFarEndInitialCellRate": atmIfVccVcdTmAbrFarEndInitialCellRate,
       "atmIfVccVcdTmProvTable": atmIfVccVcdTmProvTable,
       "atmIfVccVcdTmProvEntry": atmIfVccVcdTmProvEntry,
       "atmIfVccVcdTmTxTrafficDescType": atmIfVccVcdTmTxTrafficDescType,
       "atmIfVccVcdTmFwdQosClass": atmIfVccVcdTmFwdQosClass,
       "atmIfVccVcdTmTxQueueLimit": atmIfVccVcdTmTxQueueLimit,
       "atmIfVccVcdTmHoldingPriority": atmIfVccVcdTmHoldingPriority,
       "atmIfVccVcdTmRxTrafficDescType": atmIfVccVcdTmRxTrafficDescType,
       "atmIfVccVcdTmBwdQosClass": atmIfVccVcdTmBwdQosClass,
       "atmIfVccVcdTmAtmServiceCategory": atmIfVccVcdTmAtmServiceCategory,
       "atmIfVccVcdTmTrafficShaping": atmIfVccVcdTmTrafficShaping,
       "atmIfVccVcdTmUnshapedTransmitQueueing": atmIfVccVcdTmUnshapedTransmitQueueing,
       "atmIfVccVcdTmWeight": atmIfVccVcdTmWeight,
       "atmIfVccVcdTmForceTagging": atmIfVccVcdTmForceTagging,
       "atmIfVccVcdTmUsageParameterControl": atmIfVccVcdTmUsageParameterControl,
       "atmIfVccVcdTmBearerClassBbc": atmIfVccVcdTmBearerClassBbc,
       "atmIfVccVcdTmTransferCapabilityBbc": atmIfVccVcdTmTransferCapabilityBbc,
       "atmIfVccVcdTmTxWredThreshold": atmIfVccVcdTmTxWredThreshold,
       "atmIfVccVcdTmClippingBbc": atmIfVccVcdTmClippingBbc,
       "atmIfVccVcdTmBestEffort": atmIfVccVcdTmBestEffort,
       "atmIfVccVcdTmTxPacketWiseDiscard": atmIfVccVcdTmTxPacketWiseDiscard,
       "atmIfVccVcdTmTxWredMode": atmIfVccVcdTmTxWredMode,
       "atmIfVccVcdTmRxPacketWiseDiscard": atmIfVccVcdTmRxPacketWiseDiscard,
       "atmIfVccVcdTmAbrConnectionType": atmIfVccVcdTmAbrConnectionType,
       "atmIfVccVcdTmTxTdpTable": atmIfVccVcdTmTxTdpTable,
       "atmIfVccVcdTmTxTdpEntry": atmIfVccVcdTmTxTdpEntry,
       "atmIfVccVcdTmTxTdpIndex": atmIfVccVcdTmTxTdpIndex,
       "atmIfVccVcdTmTxTdpValue": atmIfVccVcdTmTxTdpValue,
       "atmIfVccVcdTmRxTdpTable": atmIfVccVcdTmRxTdpTable,
       "atmIfVccVcdTmRxTdpEntry": atmIfVccVcdTmRxTdpEntry,
       "atmIfVccVcdTmRxTdpIndex": atmIfVccVcdTmRxTdpIndex,
       "atmIfVccVcdTmRxTdpValue": atmIfVccVcdTmRxTdpValue,
       "atmIfVccVcdTmFqpTable": atmIfVccVcdTmFqpTable,
       "atmIfVccVcdTmFqpEntry": atmIfVccVcdTmFqpEntry,
       "atmIfVccVcdTmFqpIndex": atmIfVccVcdTmFqpIndex,
       "atmIfVccVcdTmFqpValue": atmIfVccVcdTmFqpValue,
       "atmIfVccVcdTmBqpTable": atmIfVccVcdTmBqpTable,
       "atmIfVccVcdTmBqpEntry": atmIfVccVcdTmBqpEntry,
       "atmIfVccVcdTmBqpIndex": atmIfVccVcdTmBqpIndex,
       "atmIfVccVcdTmBqpValue": atmIfVccVcdTmBqpValue,
       "atmIfVccVcdLbkTable": atmIfVccVcdLbkTable,
       "atmIfVccVcdLbkEntry": atmIfVccVcdLbkEntry,
       "atmIfVccVcdSegLinkSideLoopback": atmIfVccVcdSegLinkSideLoopback,
       "atmIfVccVcdSegSwitchSideLoopback": atmIfVccVcdSegSwitchSideLoopback,
       "atmIfVccVcdEndToEndLoopback": atmIfVccVcdEndToEndLoopback,
       "atmIfVccVcdLoopbackMonitoring": atmIfVccVcdLoopbackMonitoring,
       "atmIfVccVcdTrafficTable": atmIfVccVcdTrafficTable,
       "atmIfVccVcdTrafficEntry": atmIfVccVcdTrafficEntry,
       "atmIfVccVcdTxTrafficDescType": atmIfVccVcdTxTrafficDescType,
       "atmIfVccVcdTxQosClass": atmIfVccVcdTxQosClass,
       "atmIfVccVcdFwdQosClass": atmIfVccVcdFwdQosClass,
       "atmIfVccVcdHoldingPriority": atmIfVccVcdHoldingPriority,
       "atmIfVccVcdRxTrafficDescType": atmIfVccVcdRxTrafficDescType,
       "atmIfVccVcdRxQosClass": atmIfVccVcdRxQosClass,
       "atmIfVccVcdBwdQosClass": atmIfVccVcdBwdQosClass,
       "atmIfVccVcdAtmServiceCategory": atmIfVccVcdAtmServiceCategory,
       "atmIfVccVcdTrafficShaping": atmIfVccVcdTrafficShaping,
       "atmIfVccVcdUnshapedTransmitQueueing": atmIfVccVcdUnshapedTransmitQueueing,
       "atmIfVccVcdUsageParameterControl": atmIfVccVcdUsageParameterControl,
       "atmIfVccVcdBearerClassBbc": atmIfVccVcdBearerClassBbc,
       "atmIfVccVcdTransferCapabilityBbc": atmIfVccVcdTransferCapabilityBbc,
       "atmIfVccVcdClippingBbc": atmIfVccVcdClippingBbc,
       "atmIfVccVcdBestEffort": atmIfVccVcdBestEffort,
       "atmIfVccVcdFwdFrameDiscard": atmIfVccVcdFwdFrameDiscard,
       "atmIfVccVcdBwdFrameDiscard": atmIfVccVcdBwdFrameDiscard,
       "atmIfVccVcdAcctTable": atmIfVccVcdAcctTable,
       "atmIfVccVcdAcctEntry": atmIfVccVcdAcctEntry,
       "atmIfVccVcdCorrelationTag": atmIfVccVcdCorrelationTag,
       "atmIfVccVcdTxTdpTable": atmIfVccVcdTxTdpTable,
       "atmIfVccVcdTxTdpEntry": atmIfVccVcdTxTdpEntry,
       "atmIfVccVcdTxTdpIndex": atmIfVccVcdTxTdpIndex,
       "atmIfVccVcdTxTdpValue": atmIfVccVcdTxTdpValue,
       "atmIfVccVcdRxTdpTable": atmIfVccVcdRxTdpTable,
       "atmIfVccVcdRxTdpEntry": atmIfVccVcdRxTdpEntry,
       "atmIfVccVcdRxTdpIndex": atmIfVccVcdRxTdpIndex,
       "atmIfVccVcdRxTdpValue": atmIfVccVcdRxTdpValue,
       "atmIfVccVcdFqpTable": atmIfVccVcdFqpTable,
       "atmIfVccVcdFqpEntry": atmIfVccVcdFqpEntry,
       "atmIfVccVcdFqpIndex": atmIfVccVcdFqpIndex,
       "atmIfVccVcdFqpValue": atmIfVccVcdFqpValue,
       "atmIfVccVcdBqpTable": atmIfVccVcdBqpTable,
       "atmIfVccVcdBqpEntry": atmIfVccVcdBqpEntry,
       "atmIfVccVcdBqpIndex": atmIfVccVcdBqpIndex,
       "atmIfVccVcdBqpValue": atmIfVccVcdBqpValue,
       "atmIfVccLoop": atmIfVccLoop,
       "atmIfVccLoopRowStatusTable": atmIfVccLoopRowStatusTable,
       "atmIfVccLoopRowStatusEntry": atmIfVccLoopRowStatusEntry,
       "atmIfVccLoopRowStatus": atmIfVccLoopRowStatus,
       "atmIfVccLoopComponentName": atmIfVccLoopComponentName,
       "atmIfVccLoopStorageType": atmIfVccLoopStorageType,
       "atmIfVccLoopIndex": atmIfVccLoopIndex,
       "atmIfVccNep": atmIfVccNep,
       "atmIfVccNepRowStatusTable": atmIfVccNepRowStatusTable,
       "atmIfVccNepRowStatusEntry": atmIfVccNepRowStatusEntry,
       "atmIfVccNepRowStatus": atmIfVccNepRowStatus,
       "atmIfVccNepComponentName": atmIfVccNepComponentName,
       "atmIfVccNepStorageType": atmIfVccNepStorageType,
       "atmIfVccNepIndex": atmIfVccNepIndex,
       "atmIfVccNepProvTable": atmIfVccNepProvTable,
       "atmIfVccNepProvEntry": atmIfVccNepProvEntry,
       "atmIfVccNepApplicationName": atmIfVccNepApplicationName,
       "atmIfVccTest": atmIfVccTest,
       "atmIfVccTestRowStatusTable": atmIfVccTestRowStatusTable,
       "atmIfVccTestRowStatusEntry": atmIfVccTestRowStatusEntry,
       "atmIfVccTestRowStatus": atmIfVccTestRowStatus,
       "atmIfVccTestComponentName": atmIfVccTestComponentName,
       "atmIfVccTestStorageType": atmIfVccTestStorageType,
       "atmIfVccTestIndex": atmIfVccTestIndex,
       "atmIfVccTestStateTable": atmIfVccTestStateTable,
       "atmIfVccTestStateEntry": atmIfVccTestStateEntry,
       "atmIfVccTestAdminState": atmIfVccTestAdminState,
       "atmIfVccTestOperationalState": atmIfVccTestOperationalState,
       "atmIfVccTestUsageState": atmIfVccTestUsageState,
       "atmIfVccTestSetupTable": atmIfVccTestSetupTable,
       "atmIfVccTestSetupEntry": atmIfVccTestSetupEntry,
       "atmIfVccTestFrmTypes": atmIfVccTestFrmTypes,
       "atmIfVccTestFrmSize": atmIfVccTestFrmSize,
       "atmIfVccTestFrmPatternType": atmIfVccTestFrmPatternType,
       "atmIfVccTestCustomizedPattern": atmIfVccTestCustomizedPattern,
       "atmIfVccTestDuration": atmIfVccTestDuration,
       "atmIfVccTestBandwidthElastic": atmIfVccTestBandwidthElastic,
       "atmIfVccTestOverrideHoldingPriority": atmIfVccTestOverrideHoldingPriority,
       "atmIfVccTestResultsTable": atmIfVccTestResultsTable,
       "atmIfVccTestResultsEntry": atmIfVccTestResultsEntry,
       "atmIfVccTestElapsedTime": atmIfVccTestElapsedTime,
       "atmIfVccTestTimeRemaining": atmIfVccTestTimeRemaining,
       "atmIfVccTestCauseOfTermination": atmIfVccTestCauseOfTermination,
       "atmIfVccTestBytesTx": atmIfVccTestBytesTx,
       "atmIfVccTestBytesRx": atmIfVccTestBytesRx,
       "atmIfVccTestLoadingFrmTx": atmIfVccTestLoadingFrmTx,
       "atmIfVccTestLoadingFrmRx": atmIfVccTestLoadingFrmRx,
       "atmIfVccTestLoadingFrmLost": atmIfVccTestLoadingFrmLost,
       "atmIfVccTestVerificationFrmTx": atmIfVccTestVerificationFrmTx,
       "atmIfVccTestVerificationFrmRx": atmIfVccTestVerificationFrmRx,
       "atmIfVccTestVerificationFrmBad": atmIfVccTestVerificationFrmBad,
       "atmIfVccTestUnrecognizableFrmRx": atmIfVccTestUnrecognizableFrmRx,
       "atmIfVccTm": atmIfVccTm,
       "atmIfVccTmRowStatusTable": atmIfVccTmRowStatusTable,
       "atmIfVccTmRowStatusEntry": atmIfVccTmRowStatusEntry,
       "atmIfVccTmRowStatus": atmIfVccTmRowStatus,
       "atmIfVccTmComponentName": atmIfVccTmComponentName,
       "atmIfVccTmStorageType": atmIfVccTmStorageType,
       "atmIfVccTmIndex": atmIfVccTmIndex,
       "atmIfVccTmAbr": atmIfVccTmAbr,
       "atmIfVccTmAbrRowStatusTable": atmIfVccTmAbrRowStatusTable,
       "atmIfVccTmAbrRowStatusEntry": atmIfVccTmAbrRowStatusEntry,
       "atmIfVccTmAbrRowStatus": atmIfVccTmAbrRowStatus,
       "atmIfVccTmAbrComponentName": atmIfVccTmAbrComponentName,
       "atmIfVccTmAbrStorageType": atmIfVccTmAbrStorageType,
       "atmIfVccTmAbrIndex": atmIfVccTmAbrIndex,
       "atmIfVccTmAbrOperTable": atmIfVccTmAbrOperTable,
       "atmIfVccTmAbrOperEntry": atmIfVccTmAbrOperEntry,
       "atmIfVccTmAbrInitialCellRate": atmIfVccTmAbrInitialCellRate,
       "atmIfVccTmAbrTransientBufferExposure": atmIfVccTmAbrTransientBufferExposure,
       "atmIfVccTmAbrFixedRoundTripTime": atmIfVccTmAbrFixedRoundTripTime,
       "atmIfVccTmAbrRateDecreaseFactor": atmIfVccTmAbrRateDecreaseFactor,
       "atmIfVccTmAbrRateIncreaseFactor": atmIfVccTmAbrRateIncreaseFactor,
       "atmIfVccTmAbrMaxCellPerRmCell": atmIfVccTmAbrMaxCellPerRmCell,
       "atmIfVccTmAbrMaxTimeBetweenRmCell": atmIfVccTmAbrMaxTimeBetweenRmCell,
       "atmIfVccTmAbrCutoffDecreaseFactor": atmIfVccTmAbrCutoffDecreaseFactor,
       "atmIfVccTmAbrAcrDecreaseTimeFactor": atmIfVccTmAbrAcrDecreaseTimeFactor,
       "atmIfVccTmAbrForwardRmCellLimit": atmIfVccTmAbrForwardRmCellLimit,
       "atmIfVccTmAbrTxRateChangeInfo": atmIfVccTmAbrTxRateChangeInfo,
       "atmIfVccTmAbrAcrRateChangeInfo": atmIfVccTmAbrAcrRateChangeInfo,
       "atmIfVccTmAbrTxFwdRmCells": atmIfVccTmAbrTxFwdRmCells,
       "atmIfVccTmAbrRxEfci": atmIfVccTmAbrRxEfci,
       "atmIfVccTmAbrBrmRateChangeInfo": atmIfVccTmAbrBrmRateChangeInfo,
       "atmIfVccTmAbrBrmExplicitRate": atmIfVccTmAbrBrmExplicitRate,
       "atmIfVccTmOperTable": atmIfVccTmOperTable,
       "atmIfVccTmOperEntry": atmIfVccTmOperEntry,
       "atmIfVccTmTxTrafficDescType": atmIfVccTmTxTrafficDescType,
       "atmIfVccTmTxQosClass": atmIfVccTmTxQosClass,
       "atmIfVccTmTxQueueLength": atmIfVccTmTxQueueLength,
       "atmIfVccTmTxQueueCongestionState": atmIfVccTmTxQueueCongestionState,
       "atmIfVccTmHoldingPriority": atmIfVccTmHoldingPriority,
       "atmIfVccTmRxTrafficDescType": atmIfVccTmRxTrafficDescType,
       "atmIfVccTmRxQosClass": atmIfVccTmRxQosClass,
       "atmIfVccTmAtmServiceCategory": atmIfVccTmAtmServiceCategory,
       "atmIfVccTmTrafficShaping": atmIfVccTmTrafficShaping,
       "atmIfVccTmBearerClassBbc": atmIfVccTmBearerClassBbc,
       "atmIfVccTmTransferCapabilityBbc": atmIfVccTmTransferCapabilityBbc,
       "atmIfVccTmClippingBbc": atmIfVccTmClippingBbc,
       "atmIfVccTmUnshapedTransmitQueueing": atmIfVccTmUnshapedTransmitQueueing,
       "atmIfVccTmBestEffort": atmIfVccTmBestEffort,
       "atmIfVccTmForceTagging": atmIfVccTmForceTagging,
       "atmIfVccTmWeight": atmIfVccTmWeight,
       "atmIfVccTmUsageParameterControl": atmIfVccTmUsageParameterControl,
       "atmIfVccTmTxPacketWiseDiscard": atmIfVccTmTxPacketWiseDiscard,
       "atmIfVccTmRxPacketWiseDiscard": atmIfVccTmRxPacketWiseDiscard,
       "atmIfVccTmBandwidthElastic": atmIfVccTmBandwidthElastic,
       "atmIfVccTmBandwidthReduction": atmIfVccTmBandwidthReduction,
       "atmIfVccTmAbrConnectionType": atmIfVccTmAbrConnectionType,
       "atmIfVccTmTxTdpTable": atmIfVccTmTxTdpTable,
       "atmIfVccTmTxTdpEntry": atmIfVccTmTxTdpEntry,
       "atmIfVccTmTxTdpIndex": atmIfVccTmTxTdpIndex,
       "atmIfVccTmTxTdpValue": atmIfVccTmTxTdpValue,
       "atmIfVccTmTxQThreshTable": atmIfVccTmTxQThreshTable,
       "atmIfVccTmTxQThreshEntry": atmIfVccTmTxQThreshEntry,
       "atmIfVccTmTxQThreshIndex": atmIfVccTmTxQThreshIndex,
       "atmIfVccTmTxQThreshValue": atmIfVccTmTxQThreshValue,
       "atmIfVccTmRxTdpTable": atmIfVccTmRxTdpTable,
       "atmIfVccTmRxTdpEntry": atmIfVccTmRxTdpEntry,
       "atmIfVccTmRxTdpIndex": atmIfVccTmRxTdpIndex,
       "atmIfVccTmRxTdpValue": atmIfVccTmRxTdpValue,
       "atmIfVccTmTqpTable": atmIfVccTmTqpTable,
       "atmIfVccTmTqpEntry": atmIfVccTmTqpEntry,
       "atmIfVccTmTqpIndex": atmIfVccTmTqpIndex,
       "atmIfVccTmTqpValue": atmIfVccTmTqpValue,
       "atmIfVccTmRqpTable": atmIfVccTmRqpTable,
       "atmIfVccTmRqpEntry": atmIfVccTmRqpEntry,
       "atmIfVccTmRqpIndex": atmIfVccTmRqpIndex,
       "atmIfVccTmRqpValue": atmIfVccTmRqpValue,
       "atmIfVccStateTable": atmIfVccStateTable,
       "atmIfVccStateEntry": atmIfVccStateEntry,
       "atmIfVccAdminState": atmIfVccAdminState,
       "atmIfVccOperationalState": atmIfVccOperationalState,
       "atmIfVccUsageState": atmIfVccUsageState,
       "atmIfVccOperTable": atmIfVccOperTable,
       "atmIfVccOperEntry": atmIfVccOperEntry,
       "atmIfVccConnectionPointType": atmIfVccConnectionPointType,
       "atmIfVccConnInfoTable": atmIfVccConnInfoTable,
       "atmIfVccConnInfoEntry": atmIfVccConnInfoEntry,
       "atmIfVccDistributionType": atmIfVccDistributionType,
       "atmIfVccNumLeaves": atmIfVccNumLeaves,
       "atmIfVccCallDirection": atmIfVccCallDirection,
       "atmIfVccStatusTable": atmIfVccStatusTable,
       "atmIfVccStatusEntry": atmIfVccStatusEntry,
       "atmIfVccOperStatus": atmIfVccOperStatus,
       "atmIfVccLocalFailureCause": atmIfVccLocalFailureCause,
       "atmIfVccTroubled": atmIfVccTroubled,
       "atmIfVccSegLinkSideLoopbackState": atmIfVccSegLinkSideLoopbackState,
       "atmIfVccSegSwitchSideLoopbackState": atmIfVccSegSwitchSideLoopbackState,
       "atmIfVccEndToEndLoopbackState": atmIfVccEndToEndLoopbackState,
       "atmIfVccRxOamCellCongestionState": atmIfVccRxOamCellCongestionState,
       "atmIfVccAisState": atmIfVccAisState,
       "atmIfVccRdiState": atmIfVccRdiState,
       "atmIfVccTrafficTable": atmIfVccTrafficTable,
       "atmIfVccTrafficEntry": atmIfVccTrafficEntry,
       "atmIfVccTxTrafficDescType": atmIfVccTxTrafficDescType,
       "atmIfVccTxQosClass": atmIfVccTxQosClass,
       "atmIfVccFwdQosClass": atmIfVccFwdQosClass,
       "atmIfVccTxQueueLength": atmIfVccTxQueueLength,
       "atmIfVccTxQueueCongestionState": atmIfVccTxQueueCongestionState,
       "atmIfVccHoldingPriority": atmIfVccHoldingPriority,
       "atmIfVccRxTrafficDescType": atmIfVccRxTrafficDescType,
       "atmIfVccRxQosClass": atmIfVccRxQosClass,
       "atmIfVccBwdQosClass": atmIfVccBwdQosClass,
       "atmIfVccAtmServiceCategory": atmIfVccAtmServiceCategory,
       "atmIfVccTrafficShaping": atmIfVccTrafficShaping,
       "atmIfVccBearerClassBbc": atmIfVccBearerClassBbc,
       "atmIfVccTransferCapabilityBbc": atmIfVccTransferCapabilityBbc,
       "atmIfVccClippingBbc": atmIfVccClippingBbc,
       "atmIfVccUnshapedTransmitQueueing": atmIfVccUnshapedTransmitQueueing,
       "atmIfVccBestEffort": atmIfVccBestEffort,
       "atmIfVccUsageParameterControl": atmIfVccUsageParameterControl,
       "atmIfVccTxFrameDiscard": atmIfVccTxFrameDiscard,
       "atmIfVccRxFrameDiscard": atmIfVccRxFrameDiscard,
       "atmIfVccBandwidthElastic": atmIfVccBandwidthElastic,
       "atmIfVccBandwidthReduction": atmIfVccBandwidthReduction,
       "atmIfVccStatsTable": atmIfVccStatsTable,
       "atmIfVccStatsEntry": atmIfVccStatsEntry,
       "atmIfVccStatsTxCell": atmIfVccStatsTxCell,
       "atmIfVccStatsTxCellClp": atmIfVccStatsTxCellClp,
       "atmIfVccTxDiscard": atmIfVccTxDiscard,
       "atmIfVccTxDiscardClp": atmIfVccTxDiscardClp,
       "atmIfVccStatsTxCellDiscard": atmIfVccStatsTxCellDiscard,
       "atmIfVccStatsTxCellDiscardClp": atmIfVccStatsTxCellDiscardClp,
       "atmIfVccStatsTxFrameDiscard": atmIfVccStatsTxFrameDiscard,
       "atmIfVccStatsTxFrameDiscardClp": atmIfVccStatsTxFrameDiscardClp,
       "atmIfVccTxUtilization": atmIfVccTxUtilization,
       "atmIfVccStatsRxCell": atmIfVccStatsRxCell,
       "atmIfVccStatsRxCellClp": atmIfVccStatsRxCellClp,
       "atmIfVccRxDiscard": atmIfVccRxDiscard,
       "atmIfVccRxDiscardClp": atmIfVccRxDiscardClp,
       "atmIfVccStatsRxCellDiscard": atmIfVccStatsRxCellDiscard,
       "atmIfVccStatsRxCellDiscardClp": atmIfVccStatsRxCellDiscardClp,
       "atmIfVccStatsRxFrameDiscard": atmIfVccStatsRxFrameDiscard,
       "atmIfVccStatsRxFrameDiscardClp": atmIfVccStatsRxFrameDiscardClp,
       "atmIfVccRxUtilization": atmIfVccRxUtilization,
       "atmIfVccStatsRxUpcViolationOnEnforcer1": atmIfVccStatsRxUpcViolationOnEnforcer1,
       "atmIfVccStatsRxUpcViolationOnEnforcer2": atmIfVccStatsRxUpcViolationOnEnforcer2,
       "atmIfVccStatsRxAal5FrameError": atmIfVccStatsRxAal5FrameError,
       "atmIfVccStatsRxAal5FrameAbort": atmIfVccStatsRxAal5FrameAbort,
       "atmIfVccTxTdpTable": atmIfVccTxTdpTable,
       "atmIfVccTxTdpEntry": atmIfVccTxTdpEntry,
       "atmIfVccTxTdpIndex": atmIfVccTxTdpIndex,
       "atmIfVccTxTdpValue": atmIfVccTxTdpValue,
       "atmIfVccRxTdpTable": atmIfVccRxTdpTable,
       "atmIfVccRxTdpEntry": atmIfVccRxTdpEntry,
       "atmIfVccRxTdpIndex": atmIfVccRxTdpIndex,
       "atmIfVccRxTdpValue": atmIfVccRxTdpValue,
       "atmIfVccTxQThreshTable": atmIfVccTxQThreshTable,
       "atmIfVccTxQThreshEntry": atmIfVccTxQThreshEntry,
       "atmIfVccTxQThreshIndex": atmIfVccTxQThreshIndex,
       "atmIfVccTxQThreshValue": atmIfVccTxQThreshValue,
       "atmIfVccFqpTable": atmIfVccFqpTable,
       "atmIfVccFqpEntry": atmIfVccFqpEntry,
       "atmIfVccFqpIndex": atmIfVccFqpIndex,
       "atmIfVccFqpValue": atmIfVccFqpValue,
       "atmIfVccBqpTable": atmIfVccBqpTable,
       "atmIfVccBqpEntry": atmIfVccBqpEntry,
       "atmIfVccBqpIndex": atmIfVccBqpIndex,
       "atmIfVccBqpValue": atmIfVccBqpValue,
       "atmIfNAcct": atmIfNAcct,
       "atmIfNAcctRowStatusTable": atmIfNAcctRowStatusTable,
       "atmIfNAcctRowStatusEntry": atmIfNAcctRowStatusEntry,
       "atmIfNAcctRowStatus": atmIfNAcctRowStatus,
       "atmIfNAcctComponentName": atmIfNAcctComponentName,
       "atmIfNAcctStorageType": atmIfNAcctStorageType,
       "atmIfNAcctIndex": atmIfNAcctIndex,
       "atmIfNAcctProvTable": atmIfNAcctProvTable,
       "atmIfNAcctProvEntry": atmIfNAcctProvEntry,
       "atmIfNAcctAccountCollection": atmIfNAcctAccountCollection,
       "atmIfNAcctAccountConnectionType": atmIfNAcctAccountConnectionType,
       "atmIfNAcctAccountClass": atmIfNAcctAccountClass,
       "atmIfNAcctServiceExchange": atmIfNAcctServiceExchange,
       "atmIfVpt": atmIfVpt,
       "atmIfVptRowStatusTable": atmIfVptRowStatusTable,
       "atmIfVptRowStatusEntry": atmIfVptRowStatusEntry,
       "atmIfVptRowStatus": atmIfVptRowStatus,
       "atmIfVptComponentName": atmIfVptComponentName,
       "atmIfVptStorageType": atmIfVptStorageType,
       "atmIfVptIndex": atmIfVptIndex,
       "atmIfVptVpd": atmIfVptVpd,
       "atmIfVptVpdRowStatusTable": atmIfVptVpdRowStatusTable,
       "atmIfVptVpdRowStatusEntry": atmIfVptVpdRowStatusEntry,
       "atmIfVptVpdRowStatus": atmIfVptVpdRowStatus,
       "atmIfVptVpdComponentName": atmIfVptVpdComponentName,
       "atmIfVptVpdStorageType": atmIfVptVpdStorageType,
       "atmIfVptVpdIndex": atmIfVptVpdIndex,
       "atmIfVptVpdTm": atmIfVptVpdTm,
       "atmIfVptVpdTmRowStatusTable": atmIfVptVpdTmRowStatusTable,
       "atmIfVptVpdTmRowStatusEntry": atmIfVptVpdTmRowStatusEntry,
       "atmIfVptVpdTmRowStatus": atmIfVptVpdTmRowStatus,
       "atmIfVptVpdTmComponentName": atmIfVptVpdTmComponentName,
       "atmIfVptVpdTmStorageType": atmIfVptVpdTmStorageType,
       "atmIfVptVpdTmIndex": atmIfVptVpdTmIndex,
       "atmIfVptVpdTmAbr": atmIfVptVpdTmAbr,
       "atmIfVptVpdTmAbrRowStatusTable": atmIfVptVpdTmAbrRowStatusTable,
       "atmIfVptVpdTmAbrRowStatusEntry": atmIfVptVpdTmAbrRowStatusEntry,
       "atmIfVptVpdTmAbrRowStatus": atmIfVptVpdTmAbrRowStatus,
       "atmIfVptVpdTmAbrComponentName": atmIfVptVpdTmAbrComponentName,
       "atmIfVptVpdTmAbrStorageType": atmIfVptVpdTmAbrStorageType,
       "atmIfVptVpdTmAbrIndex": atmIfVptVpdTmAbrIndex,
       "atmIfVptVpdTmAbrProvTable": atmIfVptVpdTmAbrProvTable,
       "atmIfVptVpdTmAbrProvEntry": atmIfVptVpdTmAbrProvEntry,
       "atmIfVptVpdTmAbrInitialCellRate": atmIfVptVpdTmAbrInitialCellRate,
       "atmIfVptVpdTmAbrTransientBufferExposure": atmIfVptVpdTmAbrTransientBufferExposure,
       "atmIfVptVpdTmAbrFixedRoundTripTime": atmIfVptVpdTmAbrFixedRoundTripTime,
       "atmIfVptVpdTmAbrRateDecreaseFactor": atmIfVptVpdTmAbrRateDecreaseFactor,
       "atmIfVptVpdTmAbrRateIncreaseFactor": atmIfVptVpdTmAbrRateIncreaseFactor,
       "atmIfVptVpdTmAbrMaxCellPerRmCell": atmIfVptVpdTmAbrMaxCellPerRmCell,
       "atmIfVptVpdTmAbrMaxTimeBetweenRmCells": atmIfVptVpdTmAbrMaxTimeBetweenRmCells,
       "atmIfVptVpdTmAbrCutoffDecreaseFactor": atmIfVptVpdTmAbrCutoffDecreaseFactor,
       "atmIfVptVpdTmAbrAcrDecreaseTimeFactor": atmIfVptVpdTmAbrAcrDecreaseTimeFactor,
       "atmIfVptVpdTmAbrDgcraMaximumDelay": atmIfVptVpdTmAbrDgcraMaximumDelay,
       "atmIfVptVpdTmAbrDgcraMinimumDelay": atmIfVptVpdTmAbrDgcraMinimumDelay,
       "atmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor": atmIfVptVpdTmAbrFarEndAcrDecreaseTimeFactor,
       "atmIfVptVpdTmAbrFarEndInitialCellRate": atmIfVptVpdTmAbrFarEndInitialCellRate,
       "atmIfVptVpdTmProvTable": atmIfVptVpdTmProvTable,
       "atmIfVptVpdTmProvEntry": atmIfVptVpdTmProvEntry,
       "atmIfVptVpdTmTxTrafficDescType": atmIfVptVpdTmTxTrafficDescType,
       "atmIfVptVpdTmFwdQosClass": atmIfVptVpdTmFwdQosClass,
       "atmIfVptVpdTmTxQueueLimit": atmIfVptVpdTmTxQueueLimit,
       "atmIfVptVpdTmHoldingPriority": atmIfVptVpdTmHoldingPriority,
       "atmIfVptVpdTmRxTrafficDescType": atmIfVptVpdTmRxTrafficDescType,
       "atmIfVptVpdTmBwdQosClass": atmIfVptVpdTmBwdQosClass,
       "atmIfVptVpdTmAtmServiceCategory": atmIfVptVpdTmAtmServiceCategory,
       "atmIfVptVpdTmTrafficShaping": atmIfVptVpdTmTrafficShaping,
       "atmIfVptVpdTmUnshapedTransmitQueueing": atmIfVptVpdTmUnshapedTransmitQueueing,
       "atmIfVptVpdTmWeight": atmIfVptVpdTmWeight,
       "atmIfVptVpdTmForceTagging": atmIfVptVpdTmForceTagging,
       "atmIfVptVpdTmUsageParameterControl": atmIfVptVpdTmUsageParameterControl,
       "atmIfVptVpdTmBearerClassBbc": atmIfVptVpdTmBearerClassBbc,
       "atmIfVptVpdTmTransferCapabilityBbc": atmIfVptVpdTmTransferCapabilityBbc,
       "atmIfVptVpdTmTxWredThreshold": atmIfVptVpdTmTxWredThreshold,
       "atmIfVptVpdTmClippingBbc": atmIfVptVpdTmClippingBbc,
       "atmIfVptVpdTmBestEffort": atmIfVptVpdTmBestEffort,
       "atmIfVptVpdTmTxPacketWiseDiscard": atmIfVptVpdTmTxPacketWiseDiscard,
       "atmIfVptVpdTmTxWredMode": atmIfVptVpdTmTxWredMode,
       "atmIfVptVpdTmRxPacketWiseDiscard": atmIfVptVpdTmRxPacketWiseDiscard,
       "atmIfVptVpdTmAbrConnectionType": atmIfVptVpdTmAbrConnectionType,
       "atmIfVptVpdTmTxTdpTable": atmIfVptVpdTmTxTdpTable,
       "atmIfVptVpdTmTxTdpEntry": atmIfVptVpdTmTxTdpEntry,
       "atmIfVptVpdTmTxTdpIndex": atmIfVptVpdTmTxTdpIndex,
       "atmIfVptVpdTmTxTdpValue": atmIfVptVpdTmTxTdpValue,
       "atmIfVptVpdTmRxTdpTable": atmIfVptVpdTmRxTdpTable,
       "atmIfVptVpdTmRxTdpEntry": atmIfVptVpdTmRxTdpEntry,
       "atmIfVptVpdTmRxTdpIndex": atmIfVptVpdTmRxTdpIndex,
       "atmIfVptVpdTmRxTdpValue": atmIfVptVpdTmRxTdpValue,
       "atmIfVptVpdTmFqpTable": atmIfVptVpdTmFqpTable,
       "atmIfVptVpdTmFqpEntry": atmIfVptVpdTmFqpEntry,
       "atmIfVptVpdTmFqpIndex": atmIfVptVpdTmFqpIndex,
       "atmIfVptVpdTmFqpValue": atmIfVptVpdTmFqpValue,
       "atmIfVptVpdTmBqpTable": atmIfVptVpdTmBqpTable,
       "atmIfVptVpdTmBqpEntry": atmIfVptVpdTmBqpEntry,
       "atmIfVptVpdTmBqpIndex": atmIfVptVpdTmBqpIndex,
       "atmIfVptVpdTmBqpValue": atmIfVptVpdTmBqpValue,
       "atmIfVptVpdLbkTable": atmIfVptVpdLbkTable,
       "atmIfVptVpdLbkEntry": atmIfVptVpdLbkEntry,
       "atmIfVptVpdSegLinkSideLoopback": atmIfVptVpdSegLinkSideLoopback,
       "atmIfVptVpdSegSwitchSideLoopback": atmIfVptVpdSegSwitchSideLoopback,
       "atmIfVptVpdEndToEndLoopback": atmIfVptVpdEndToEndLoopback,
       "atmIfVptVpdLoopbackMonitoring": atmIfVptVpdLoopbackMonitoring,
       "atmIfVptVpdTrafficTable": atmIfVptVpdTrafficTable,
       "atmIfVptVpdTrafficEntry": atmIfVptVpdTrafficEntry,
       "atmIfVptVpdTxTrafficDescType": atmIfVptVpdTxTrafficDescType,
       "atmIfVptVpdTxQosClass": atmIfVptVpdTxQosClass,
       "atmIfVptVpdFwdQosClass": atmIfVptVpdFwdQosClass,
       "atmIfVptVpdHoldingPriority": atmIfVptVpdHoldingPriority,
       "atmIfVptVpdRxTrafficDescType": atmIfVptVpdRxTrafficDescType,
       "atmIfVptVpdRxQosClass": atmIfVptVpdRxQosClass,
       "atmIfVptVpdBwdQosClass": atmIfVptVpdBwdQosClass,
       "atmIfVptVpdAtmServiceCategory": atmIfVptVpdAtmServiceCategory,
       "atmIfVptVpdTrafficShaping": atmIfVptVpdTrafficShaping,
       "atmIfVptVpdUnshapedTransmitQueueing": atmIfVptVpdUnshapedTransmitQueueing,
       "atmIfVptVpdUsageParameterControl": atmIfVptVpdUsageParameterControl,
       "atmIfVptVpdBearerClassBbc": atmIfVptVpdBearerClassBbc,
       "atmIfVptVpdTransferCapabilityBbc": atmIfVptVpdTransferCapabilityBbc,
       "atmIfVptVpdClippingBbc": atmIfVptVpdClippingBbc,
       "atmIfVptVpdBestEffort": atmIfVptVpdBestEffort,
       "atmIfVptVpdFwdFrameDiscard": atmIfVptVpdFwdFrameDiscard,
       "atmIfVptVpdBwdFrameDiscard": atmIfVptVpdBwdFrameDiscard,
       "atmIfVptVpdAcctTable": atmIfVptVpdAcctTable,
       "atmIfVptVpdAcctEntry": atmIfVptVpdAcctEntry,
       "atmIfVptVpdCorrelationTag": atmIfVptVpdCorrelationTag,
       "atmIfVptVpdProvTable": atmIfVptVpdProvTable,
       "atmIfVptVpdProvEntry": atmIfVptVpdProvEntry,
       "atmIfVptVpdVptType": atmIfVptVpdVptType,
       "atmIfVptVpdTxTdpTable": atmIfVptVpdTxTdpTable,
       "atmIfVptVpdTxTdpEntry": atmIfVptVpdTxTdpEntry,
       "atmIfVptVpdTxTdpIndex": atmIfVptVpdTxTdpIndex,
       "atmIfVptVpdTxTdpValue": atmIfVptVpdTxTdpValue,
       "atmIfVptVpdRxTdpTable": atmIfVptVpdRxTdpTable,
       "atmIfVptVpdRxTdpEntry": atmIfVptVpdRxTdpEntry,
       "atmIfVptVpdRxTdpIndex": atmIfVptVpdRxTdpIndex,
       "atmIfVptVpdRxTdpValue": atmIfVptVpdRxTdpValue,
       "atmIfVptVpdFqpTable": atmIfVptVpdFqpTable,
       "atmIfVptVpdFqpEntry": atmIfVptVpdFqpEntry,
       "atmIfVptVpdFqpIndex": atmIfVptVpdFqpIndex,
       "atmIfVptVpdFqpValue": atmIfVptVpdFqpValue,
       "atmIfVptVpdBqpTable": atmIfVptVpdBqpTable,
       "atmIfVptVpdBqpEntry": atmIfVptVpdBqpEntry,
       "atmIfVptVpdBqpIndex": atmIfVptVpdBqpIndex,
       "atmIfVptVpdBqpValue": atmIfVptVpdBqpValue,
       "atmIfVptCA": atmIfVptCA,
       "atmIfVptCARowStatusTable": atmIfVptCARowStatusTable,
       "atmIfVptCARowStatusEntry": atmIfVptCARowStatusEntry,
       "atmIfVptCARowStatus": atmIfVptCARowStatus,
       "atmIfVptCAComponentName": atmIfVptCAComponentName,
       "atmIfVptCAStorageType": atmIfVptCAStorageType,
       "atmIfVptCAIndex": atmIfVptCAIndex,
       "atmIfVptCACbr": atmIfVptCACbr,
       "atmIfVptCACbrRowStatusTable": atmIfVptCACbrRowStatusTable,
       "atmIfVptCACbrRowStatusEntry": atmIfVptCACbrRowStatusEntry,
       "atmIfVptCACbrRowStatus": atmIfVptCACbrRowStatus,
       "atmIfVptCACbrComponentName": atmIfVptCACbrComponentName,
       "atmIfVptCACbrStorageType": atmIfVptCACbrStorageType,
       "atmIfVptCACbrIndex": atmIfVptCACbrIndex,
       "atmIfVptCACbrProvTable": atmIfVptCACbrProvTable,
       "atmIfVptCACbrProvEntry": atmIfVptCACbrProvEntry,
       "atmIfVptCACbrPool": atmIfVptCACbrPool,
       "atmIfVptCACbrCdvt": atmIfVptCACbrCdvt,
       "atmIfVptCACbrCdv": atmIfVptCACbrCdv,
       "atmIfVptCACbrMaxCtd": atmIfVptCACbrMaxCtd,
       "atmIfVptCACbrCellLossRatio": atmIfVptCACbrCellLossRatio,
       "atmIfVptCARtVbr": atmIfVptCARtVbr,
       "atmIfVptCARtVbrRowStatusTable": atmIfVptCARtVbrRowStatusTable,
       "atmIfVptCARtVbrRowStatusEntry": atmIfVptCARtVbrRowStatusEntry,
       "atmIfVptCARtVbrRowStatus": atmIfVptCARtVbrRowStatus,
       "atmIfVptCARtVbrComponentName": atmIfVptCARtVbrComponentName,
       "atmIfVptCARtVbrStorageType": atmIfVptCARtVbrStorageType,
       "atmIfVptCARtVbrIndex": atmIfVptCARtVbrIndex,
       "atmIfVptCARtVbrProvTable": atmIfVptCARtVbrProvTable,
       "atmIfVptCARtVbrProvEntry": atmIfVptCARtVbrProvEntry,
       "atmIfVptCARtVbrPool": atmIfVptCARtVbrPool,
       "atmIfVptCARtVbrCdv": atmIfVptCARtVbrCdv,
       "atmIfVptCARtVbrMaxCtd": atmIfVptCARtVbrMaxCtd,
       "atmIfVptCARtVbrCellLossRatio": atmIfVptCARtVbrCellLossRatio,
       "atmIfVptCANrtVbr": atmIfVptCANrtVbr,
       "atmIfVptCANrtVbrRowStatusTable": atmIfVptCANrtVbrRowStatusTable,
       "atmIfVptCANrtVbrRowStatusEntry": atmIfVptCANrtVbrRowStatusEntry,
       "atmIfVptCANrtVbrRowStatus": atmIfVptCANrtVbrRowStatus,
       "atmIfVptCANrtVbrComponentName": atmIfVptCANrtVbrComponentName,
       "atmIfVptCANrtVbrStorageType": atmIfVptCANrtVbrStorageType,
       "atmIfVptCANrtVbrIndex": atmIfVptCANrtVbrIndex,
       "atmIfVptCANrtVbrProvTable": atmIfVptCANrtVbrProvTable,
       "atmIfVptCANrtVbrProvEntry": atmIfVptCANrtVbrProvEntry,
       "atmIfVptCANrtVbrPool": atmIfVptCANrtVbrPool,
       "atmIfVptCANrtVbrCellLossRatio": atmIfVptCANrtVbrCellLossRatio,
       "atmIfVptCAAbr": atmIfVptCAAbr,
       "atmIfVptCAAbrRowStatusTable": atmIfVptCAAbrRowStatusTable,
       "atmIfVptCAAbrRowStatusEntry": atmIfVptCAAbrRowStatusEntry,
       "atmIfVptCAAbrRowStatus": atmIfVptCAAbrRowStatus,
       "atmIfVptCAAbrComponentName": atmIfVptCAAbrComponentName,
       "atmIfVptCAAbrStorageType": atmIfVptCAAbrStorageType,
       "atmIfVptCAAbrIndex": atmIfVptCAAbrIndex,
       "atmIfVptCAAbrProvTable": atmIfVptCAAbrProvTable,
       "atmIfVptCAAbrProvEntry": atmIfVptCAAbrProvEntry,
       "atmIfVptCAAbrPool": atmIfVptCAAbrPool,
       "atmIfVptCAUbr": atmIfVptCAUbr,
       "atmIfVptCAUbrRowStatusTable": atmIfVptCAUbrRowStatusTable,
       "atmIfVptCAUbrRowStatusEntry": atmIfVptCAUbrRowStatusEntry,
       "atmIfVptCAUbrRowStatus": atmIfVptCAUbrRowStatus,
       "atmIfVptCAUbrComponentName": atmIfVptCAUbrComponentName,
       "atmIfVptCAUbrStorageType": atmIfVptCAUbrStorageType,
       "atmIfVptCAUbrIndex": atmIfVptCAUbrIndex,
       "atmIfVptCAUbrProvTable": atmIfVptCAUbrProvTable,
       "atmIfVptCAUbrProvEntry": atmIfVptCAUbrProvEntry,
       "atmIfVptCAUbrMaxVccs": atmIfVptCAUbrMaxVccs,
       "atmIfVptCAUbrPool": atmIfVptCAUbrPool,
       "atmIfVptCAUbrMinimumCellRate": atmIfVptCAUbrMinimumCellRate,
       "atmIfVptCAUbrOperTable": atmIfVptCAUbrOperTable,
       "atmIfVptCAUbrOperEntry": atmIfVptCAUbrOperEntry,
       "atmIfVptCAUbrVccUsage": atmIfVptCAUbrVccUsage,
       "atmIfVptCAProvTable": atmIfVptCAProvTable,
       "atmIfVptCAProvEntry": atmIfVptCAProvEntry,
       "atmIfVptCAMaxVccs": atmIfVptCAMaxVccs,
       "atmIfVptCAPermittedAtmServiceCategories": atmIfVptCAPermittedAtmServiceCategories,
       "atmIfVptCAOperTable": atmIfVptCAOperTable,
       "atmIfVptCAOperEntry": atmIfVptCAOperEntry,
       "atmIfVptCAPermanentVccs": atmIfVptCAPermanentVccs,
       "atmIfVptCASwitchedVccs": atmIfVptCASwitchedVccs,
       "atmIfVptCATroubledVccs": atmIfVptCATroubledVccs,
       "atmIfVptCAConnectionPoolUsage": atmIfVptCAConnectionPoolUsage,
       "atmIfVptCAPoolAvailBwTable": atmIfVptCAPoolAvailBwTable,
       "atmIfVptCAPoolAvailBwEntry": atmIfVptCAPoolAvailBwEntry,
       "atmIfVptCAPoolAvailBwIndex": atmIfVptCAPoolAvailBwIndex,
       "atmIfVptCAPoolAvailBwValue": atmIfVptCAPoolAvailBwValue,
       "atmIfVptCABwPoolTable": atmIfVptCABwPoolTable,
       "atmIfVptCABwPoolEntry": atmIfVptCABwPoolEntry,
       "atmIfVptCABwPoolIndex": atmIfVptCABwPoolIndex,
       "atmIfVptCABwPoolValue": atmIfVptCABwPoolValue,
       "atmIfVptCAPoolProvBwTable": atmIfVptCAPoolProvBwTable,
       "atmIfVptCAPoolProvBwEntry": atmIfVptCAPoolProvBwEntry,
       "atmIfVptCAPoolProvBwIndex": atmIfVptCAPoolProvBwIndex,
       "atmIfVptCAPoolProvBwValue": atmIfVptCAPoolProvBwValue,
       "atmIfVptCAPoolRequBwTable": atmIfVptCAPoolRequBwTable,
       "atmIfVptCAPoolRequBwEntry": atmIfVptCAPoolRequBwEntry,
       "atmIfVptCAPoolRequBwIndex": atmIfVptCAPoolRequBwIndex,
       "atmIfVptCAPoolRequBwValue": atmIfVptCAPoolRequBwValue,
       "atmIfVptCAPoolAdmitBwTable": atmIfVptCAPoolAdmitBwTable,
       "atmIfVptCAPoolAdmitBwEntry": atmIfVptCAPoolAdmitBwEntry,
       "atmIfVptCAPoolAdmitBwIndex": atmIfVptCAPoolAdmitBwIndex,
       "atmIfVptCAPoolAdmitBwValue": atmIfVptCAPoolAdmitBwValue,
       "atmIfVptCAPoolAdmConnsTable": atmIfVptCAPoolAdmConnsTable,
       "atmIfVptCAPoolAdmConnsEntry": atmIfVptCAPoolAdmConnsEntry,
       "atmIfVptCAPoolAdmConnsIndex": atmIfVptCAPoolAdmConnsIndex,
       "atmIfVptCAPoolAdmConnsValue": atmIfVptCAPoolAdmConnsValue,
       "atmIfVptCAPoolWaitAdmConnsTable": atmIfVptCAPoolWaitAdmConnsTable,
       "atmIfVptCAPoolWaitAdmConnsEntry": atmIfVptCAPoolWaitAdmConnsEntry,
       "atmIfVptCAPoolWaitAdmConnsIndex": atmIfVptCAPoolWaitAdmConnsIndex,
       "atmIfVptCAPoolWaitAdmConnsValue": atmIfVptCAPoolWaitAdmConnsValue,
       "atmIfVptTm": atmIfVptTm,
       "atmIfVptTmRowStatusTable": atmIfVptTmRowStatusTable,
       "atmIfVptTmRowStatusEntry": atmIfVptTmRowStatusEntry,
       "atmIfVptTmRowStatus": atmIfVptTmRowStatus,
       "atmIfVptTmComponentName": atmIfVptTmComponentName,
       "atmIfVptTmStorageType": atmIfVptTmStorageType,
       "atmIfVptTmIndex": atmIfVptTmIndex,
       "atmIfVptTmAbr": atmIfVptTmAbr,
       "atmIfVptTmAbrRowStatusTable": atmIfVptTmAbrRowStatusTable,
       "atmIfVptTmAbrRowStatusEntry": atmIfVptTmAbrRowStatusEntry,
       "atmIfVptTmAbrRowStatus": atmIfVptTmAbrRowStatus,
       "atmIfVptTmAbrComponentName": atmIfVptTmAbrComponentName,
       "atmIfVptTmAbrStorageType": atmIfVptTmAbrStorageType,
       "atmIfVptTmAbrIndex": atmIfVptTmAbrIndex,
       "atmIfVptTmAbrOperTable": atmIfVptTmAbrOperTable,
       "atmIfVptTmAbrOperEntry": atmIfVptTmAbrOperEntry,
       "atmIfVptTmAbrInitialCellRate": atmIfVptTmAbrInitialCellRate,
       "atmIfVptTmAbrTransientBufferExposure": atmIfVptTmAbrTransientBufferExposure,
       "atmIfVptTmAbrFixedRoundTripTime": atmIfVptTmAbrFixedRoundTripTime,
       "atmIfVptTmAbrRateDecreaseFactor": atmIfVptTmAbrRateDecreaseFactor,
       "atmIfVptTmAbrRateIncreaseFactor": atmIfVptTmAbrRateIncreaseFactor,
       "atmIfVptTmAbrMaxCellPerRmCell": atmIfVptTmAbrMaxCellPerRmCell,
       "atmIfVptTmAbrMaxTimeBetweenRmCell": atmIfVptTmAbrMaxTimeBetweenRmCell,
       "atmIfVptTmAbrCutoffDecreaseFactor": atmIfVptTmAbrCutoffDecreaseFactor,
       "atmIfVptTmAbrAcrDecreaseTimeFactor": atmIfVptTmAbrAcrDecreaseTimeFactor,
       "atmIfVptTmAbrForwardRmCellLimit": atmIfVptTmAbrForwardRmCellLimit,
       "atmIfVptTmAbrTxRateChangeInfo": atmIfVptTmAbrTxRateChangeInfo,
       "atmIfVptTmAbrAcrRateChangeInfo": atmIfVptTmAbrAcrRateChangeInfo,
       "atmIfVptTmAbrTxFwdRmCells": atmIfVptTmAbrTxFwdRmCells,
       "atmIfVptTmAbrRxEfci": atmIfVptTmAbrRxEfci,
       "atmIfVptTmAbrBrmRateChangeInfo": atmIfVptTmAbrBrmRateChangeInfo,
       "atmIfVptTmAbrBrmExplicitRate": atmIfVptTmAbrBrmExplicitRate,
       "atmIfVptTmOperTable": atmIfVptTmOperTable,
       "atmIfVptTmOperEntry": atmIfVptTmOperEntry,
       "atmIfVptTmTxTrafficDescType": atmIfVptTmTxTrafficDescType,
       "atmIfVptTmTxQosClass": atmIfVptTmTxQosClass,
       "atmIfVptTmTxQueueLength": atmIfVptTmTxQueueLength,
       "atmIfVptTmTxQueueCongestionState": atmIfVptTmTxQueueCongestionState,
       "atmIfVptTmHoldingPriority": atmIfVptTmHoldingPriority,
       "atmIfVptTmRxTrafficDescType": atmIfVptTmRxTrafficDescType,
       "atmIfVptTmRxQosClass": atmIfVptTmRxQosClass,
       "atmIfVptTmAtmServiceCategory": atmIfVptTmAtmServiceCategory,
       "atmIfVptTmTrafficShaping": atmIfVptTmTrafficShaping,
       "atmIfVptTmBearerClassBbc": atmIfVptTmBearerClassBbc,
       "atmIfVptTmTransferCapabilityBbc": atmIfVptTmTransferCapabilityBbc,
       "atmIfVptTmClippingBbc": atmIfVptTmClippingBbc,
       "atmIfVptTmUnshapedTransmitQueueing": atmIfVptTmUnshapedTransmitQueueing,
       "atmIfVptTmBestEffort": atmIfVptTmBestEffort,
       "atmIfVptTmForceTagging": atmIfVptTmForceTagging,
       "atmIfVptTmWeight": atmIfVptTmWeight,
       "atmIfVptTmUsageParameterControl": atmIfVptTmUsageParameterControl,
       "atmIfVptTmTxPacketWiseDiscard": atmIfVptTmTxPacketWiseDiscard,
       "atmIfVptTmRxPacketWiseDiscard": atmIfVptTmRxPacketWiseDiscard,
       "atmIfVptTmBandwidthElastic": atmIfVptTmBandwidthElastic,
       "atmIfVptTmBandwidthReduction": atmIfVptTmBandwidthReduction,
       "atmIfVptTmAbrConnectionType": atmIfVptTmAbrConnectionType,
       "atmIfVptTmTxTdpTable": atmIfVptTmTxTdpTable,
       "atmIfVptTmTxTdpEntry": atmIfVptTmTxTdpEntry,
       "atmIfVptTmTxTdpIndex": atmIfVptTmTxTdpIndex,
       "atmIfVptTmTxTdpValue": atmIfVptTmTxTdpValue,
       "atmIfVptTmTxQThreshTable": atmIfVptTmTxQThreshTable,
       "atmIfVptTmTxQThreshEntry": atmIfVptTmTxQThreshEntry,
       "atmIfVptTmTxQThreshIndex": atmIfVptTmTxQThreshIndex,
       "atmIfVptTmTxQThreshValue": atmIfVptTmTxQThreshValue,
       "atmIfVptTmRxTdpTable": atmIfVptTmRxTdpTable,
       "atmIfVptTmRxTdpEntry": atmIfVptTmRxTdpEntry,
       "atmIfVptTmRxTdpIndex": atmIfVptTmRxTdpIndex,
       "atmIfVptTmRxTdpValue": atmIfVptTmRxTdpValue,
       "atmIfVptTmTqpTable": atmIfVptTmTqpTable,
       "atmIfVptTmTqpEntry": atmIfVptTmTqpEntry,
       "atmIfVptTmTqpIndex": atmIfVptTmTqpIndex,
       "atmIfVptTmTqpValue": atmIfVptTmTqpValue,
       "atmIfVptTmRqpTable": atmIfVptTmRqpTable,
       "atmIfVptTmRqpEntry": atmIfVptTmRqpEntry,
       "atmIfVptTmRqpIndex": atmIfVptTmRqpIndex,
       "atmIfVptTmRqpValue": atmIfVptTmRqpValue,
       "atmIfVptVcc": atmIfVptVcc,
       "atmIfVptVccRowStatusTable": atmIfVptVccRowStatusTable,
       "atmIfVptVccRowStatusEntry": atmIfVptVccRowStatusEntry,
       "atmIfVptVccRowStatus": atmIfVptVccRowStatus,
       "atmIfVptVccComponentName": atmIfVptVccComponentName,
       "atmIfVptVccStorageType": atmIfVptVccStorageType,
       "atmIfVptVccIndex": atmIfVptVccIndex,
       "atmIfVptVccVcd": atmIfVptVccVcd,
       "atmIfVptVccVcdRowStatusTable": atmIfVptVccVcdRowStatusTable,
       "atmIfVptVccVcdRowStatusEntry": atmIfVptVccVcdRowStatusEntry,
       "atmIfVptVccVcdRowStatus": atmIfVptVccVcdRowStatus,
       "atmIfVptVccVcdComponentName": atmIfVptVccVcdComponentName,
       "atmIfVptVccVcdStorageType": atmIfVptVccVcdStorageType,
       "atmIfVptVccVcdIndex": atmIfVptVccVcdIndex,
       "atmIfVptVccVcdTm": atmIfVptVccVcdTm,
       "atmIfVptVccVcdTmRowStatusTable": atmIfVptVccVcdTmRowStatusTable,
       "atmIfVptVccVcdTmRowStatusEntry": atmIfVptVccVcdTmRowStatusEntry,
       "atmIfVptVccVcdTmRowStatus": atmIfVptVccVcdTmRowStatus,
       "atmIfVptVccVcdTmComponentName": atmIfVptVccVcdTmComponentName,
       "atmIfVptVccVcdTmStorageType": atmIfVptVccVcdTmStorageType,
       "atmIfVptVccVcdTmIndex": atmIfVptVccVcdTmIndex,
       "atmIfVptVccVcdTmAbr": atmIfVptVccVcdTmAbr,
       "atmIfVptVccVcdTmAbrRowStatusTable": atmIfVptVccVcdTmAbrRowStatusTable,
       "atmIfVptVccVcdTmAbrRowStatusEntry": atmIfVptVccVcdTmAbrRowStatusEntry,
       "atmIfVptVccVcdTmAbrRowStatus": atmIfVptVccVcdTmAbrRowStatus,
       "atmIfVptVccVcdTmAbrComponentName": atmIfVptVccVcdTmAbrComponentName,
       "atmIfVptVccVcdTmAbrStorageType": atmIfVptVccVcdTmAbrStorageType,
       "atmIfVptVccVcdTmAbrIndex": atmIfVptVccVcdTmAbrIndex,
       "atmIfVptVccVcdTmAbrProvTable": atmIfVptVccVcdTmAbrProvTable,
       "atmIfVptVccVcdTmAbrProvEntry": atmIfVptVccVcdTmAbrProvEntry,
       "atmIfVptVccVcdTmAbrInitialCellRate": atmIfVptVccVcdTmAbrInitialCellRate,
       "atmIfVptVccVcdTmAbrTransientBufferExposure": atmIfVptVccVcdTmAbrTransientBufferExposure,
       "atmIfVptVccVcdTmAbrFixedRoundTripTime": atmIfVptVccVcdTmAbrFixedRoundTripTime,
       "atmIfVptVccVcdTmAbrRateDecreaseFactor": atmIfVptVccVcdTmAbrRateDecreaseFactor,
       "atmIfVptVccVcdTmAbrRateIncreaseFactor": atmIfVptVccVcdTmAbrRateIncreaseFactor,
       "atmIfVptVccVcdTmAbrMaxCellPerRmCell": atmIfVptVccVcdTmAbrMaxCellPerRmCell,
       "atmIfVptVccVcdTmAbrMaxTimeBetweenRmCells": atmIfVptVccVcdTmAbrMaxTimeBetweenRmCells,
       "atmIfVptVccVcdTmAbrCutoffDecreaseFactor": atmIfVptVccVcdTmAbrCutoffDecreaseFactor,
       "atmIfVptVccVcdTmAbrAcrDecreaseTimeFactor": atmIfVptVccVcdTmAbrAcrDecreaseTimeFactor,
       "atmIfVptVccVcdTmAbrDgcraMaximumDelay": atmIfVptVccVcdTmAbrDgcraMaximumDelay,
       "atmIfVptVccVcdTmAbrDgcraMinimumDelay": atmIfVptVccVcdTmAbrDgcraMinimumDelay,
       "atmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor": atmIfVptVccVcdTmAbrFarEndAcrDecreaseTimeFactor,
       "atmIfVptVccVcdTmAbrFarEndInitialCellRate": atmIfVptVccVcdTmAbrFarEndInitialCellRate,
       "atmIfVptVccVcdTmProvTable": atmIfVptVccVcdTmProvTable,
       "atmIfVptVccVcdTmProvEntry": atmIfVptVccVcdTmProvEntry,
       "atmIfVptVccVcdTmTxTrafficDescType": atmIfVptVccVcdTmTxTrafficDescType,
       "atmIfVptVccVcdTmFwdQosClass": atmIfVptVccVcdTmFwdQosClass,
       "atmIfVptVccVcdTmTxQueueLimit": atmIfVptVccVcdTmTxQueueLimit,
       "atmIfVptVccVcdTmHoldingPriority": atmIfVptVccVcdTmHoldingPriority,
       "atmIfVptVccVcdTmRxTrafficDescType": atmIfVptVccVcdTmRxTrafficDescType,
       "atmIfVptVccVcdTmBwdQosClass": atmIfVptVccVcdTmBwdQosClass,
       "atmIfVptVccVcdTmAtmServiceCategory": atmIfVptVccVcdTmAtmServiceCategory,
       "atmIfVptVccVcdTmTrafficShaping": atmIfVptVccVcdTmTrafficShaping,
       "atmIfVptVccVcdTmUnshapedTransmitQueueing": atmIfVptVccVcdTmUnshapedTransmitQueueing,
       "atmIfVptVccVcdTmWeight": atmIfVptVccVcdTmWeight,
       "atmIfVptVccVcdTmForceTagging": atmIfVptVccVcdTmForceTagging,
       "atmIfVptVccVcdTmUsageParameterControl": atmIfVptVccVcdTmUsageParameterControl,
       "atmIfVptVccVcdTmBearerClassBbc": atmIfVptVccVcdTmBearerClassBbc,
       "atmIfVptVccVcdTmTransferCapabilityBbc": atmIfVptVccVcdTmTransferCapabilityBbc,
       "atmIfVptVccVcdTmTxWredThreshold": atmIfVptVccVcdTmTxWredThreshold,
       "atmIfVptVccVcdTmClippingBbc": atmIfVptVccVcdTmClippingBbc,
       "atmIfVptVccVcdTmBestEffort": atmIfVptVccVcdTmBestEffort,
       "atmIfVptVccVcdTmTxPacketWiseDiscard": atmIfVptVccVcdTmTxPacketWiseDiscard,
       "atmIfVptVccVcdTmTxWredMode": atmIfVptVccVcdTmTxWredMode,
       "atmIfVptVccVcdTmRxPacketWiseDiscard": atmIfVptVccVcdTmRxPacketWiseDiscard,
       "atmIfVptVccVcdTmAbrConnectionType": atmIfVptVccVcdTmAbrConnectionType,
       "atmIfVptVccVcdTmTxTdpTable": atmIfVptVccVcdTmTxTdpTable,
       "atmIfVptVccVcdTmTxTdpEntry": atmIfVptVccVcdTmTxTdpEntry,
       "atmIfVptVccVcdTmTxTdpIndex": atmIfVptVccVcdTmTxTdpIndex,
       "atmIfVptVccVcdTmTxTdpValue": atmIfVptVccVcdTmTxTdpValue,
       "atmIfVptVccVcdTmRxTdpTable": atmIfVptVccVcdTmRxTdpTable,
       "atmIfVptVccVcdTmRxTdpEntry": atmIfVptVccVcdTmRxTdpEntry,
       "atmIfVptVccVcdTmRxTdpIndex": atmIfVptVccVcdTmRxTdpIndex,
       "atmIfVptVccVcdTmRxTdpValue": atmIfVptVccVcdTmRxTdpValue,
       "atmIfVptVccVcdTmFqpTable": atmIfVptVccVcdTmFqpTable,
       "atmIfVptVccVcdTmFqpEntry": atmIfVptVccVcdTmFqpEntry,
       "atmIfVptVccVcdTmFqpIndex": atmIfVptVccVcdTmFqpIndex,
       "atmIfVptVccVcdTmFqpValue": atmIfVptVccVcdTmFqpValue,
       "atmIfVptVccVcdTmBqpTable": atmIfVptVccVcdTmBqpTable,
       "atmIfVptVccVcdTmBqpEntry": atmIfVptVccVcdTmBqpEntry,
       "atmIfVptVccVcdTmBqpIndex": atmIfVptVccVcdTmBqpIndex,
       "atmIfVptVccVcdTmBqpValue": atmIfVptVccVcdTmBqpValue,
       "atmIfVptVccVcdLbkTable": atmIfVptVccVcdLbkTable,
       "atmIfVptVccVcdLbkEntry": atmIfVptVccVcdLbkEntry,
       "atmIfVptVccVcdSegLinkSideLoopback": atmIfVptVccVcdSegLinkSideLoopback,
       "atmIfVptVccVcdSegSwitchSideLoopback": atmIfVptVccVcdSegSwitchSideLoopback,
       "atmIfVptVccVcdEndToEndLoopback": atmIfVptVccVcdEndToEndLoopback,
       "atmIfVptVccVcdLoopbackMonitoring": atmIfVptVccVcdLoopbackMonitoring,
       "atmIfVptVccVcdTrafficTable": atmIfVptVccVcdTrafficTable,
       "atmIfVptVccVcdTrafficEntry": atmIfVptVccVcdTrafficEntry,
       "atmIfVptVccVcdTxTrafficDescType": atmIfVptVccVcdTxTrafficDescType,
       "atmIfVptVccVcdTxQosClass": atmIfVptVccVcdTxQosClass,
       "atmIfVptVccVcdFwdQosClass": atmIfVptVccVcdFwdQosClass,
       "atmIfVptVccVcdHoldingPriority": atmIfVptVccVcdHoldingPriority,
       "atmIfVptVccVcdRxTrafficDescType": atmIfVptVccVcdRxTrafficDescType,
       "atmIfVptVccVcdRxQosClass": atmIfVptVccVcdRxQosClass,
       "atmIfVptVccVcdBwdQosClass": atmIfVptVccVcdBwdQosClass,
       "atmIfVptVccVcdAtmServiceCategory": atmIfVptVccVcdAtmServiceCategory,
       "atmIfVptVccVcdTrafficShaping": atmIfVptVccVcdTrafficShaping,
       "atmIfVptVccVcdUnshapedTransmitQueueing": atmIfVptVccVcdUnshapedTransmitQueueing,
       "atmIfVptVccVcdUsageParameterControl": atmIfVptVccVcdUsageParameterControl,
       "atmIfVptVccVcdBearerClassBbc": atmIfVptVccVcdBearerClassBbc,
       "atmIfVptVccVcdTransferCapabilityBbc": atmIfVptVccVcdTransferCapabilityBbc,
       "atmIfVptVccVcdClippingBbc": atmIfVptVccVcdClippingBbc,
       "atmIfVptVccVcdBestEffort": atmIfVptVccVcdBestEffort,
       "atmIfVptVccVcdFwdFrameDiscard": atmIfVptVccVcdFwdFrameDiscard,
       "atmIfVptVccVcdBwdFrameDiscard": atmIfVptVccVcdBwdFrameDiscard,
       "atmIfVptVccVcdAcctTable": atmIfVptVccVcdAcctTable,
       "atmIfVptVccVcdAcctEntry": atmIfVptVccVcdAcctEntry,
       "atmIfVptVccVcdCorrelationTag": atmIfVptVccVcdCorrelationTag,
       "atmIfVptVccVcdTxTdpTable": atmIfVptVccVcdTxTdpTable,
       "atmIfVptVccVcdTxTdpEntry": atmIfVptVccVcdTxTdpEntry,
       "atmIfVptVccVcdTxTdpIndex": atmIfVptVccVcdTxTdpIndex,
       "atmIfVptVccVcdTxTdpValue": atmIfVptVccVcdTxTdpValue,
       "atmIfVptVccVcdRxTdpTable": atmIfVptVccVcdRxTdpTable,
       "atmIfVptVccVcdRxTdpEntry": atmIfVptVccVcdRxTdpEntry,
       "atmIfVptVccVcdRxTdpIndex": atmIfVptVccVcdRxTdpIndex,
       "atmIfVptVccVcdRxTdpValue": atmIfVptVccVcdRxTdpValue,
       "atmIfVptVccVcdFqpTable": atmIfVptVccVcdFqpTable,
       "atmIfVptVccVcdFqpEntry": atmIfVptVccVcdFqpEntry,
       "atmIfVptVccVcdFqpIndex": atmIfVptVccVcdFqpIndex,
       "atmIfVptVccVcdFqpValue": atmIfVptVccVcdFqpValue,
       "atmIfVptVccVcdBqpTable": atmIfVptVccVcdBqpTable,
       "atmIfVptVccVcdBqpEntry": atmIfVptVccVcdBqpEntry,
       "atmIfVptVccVcdBqpIndex": atmIfVptVccVcdBqpIndex,
       "atmIfVptVccVcdBqpValue": atmIfVptVccVcdBqpValue,
       "atmIfVptVccLoop": atmIfVptVccLoop,
       "atmIfVptVccLoopRowStatusTable": atmIfVptVccLoopRowStatusTable,
       "atmIfVptVccLoopRowStatusEntry": atmIfVptVccLoopRowStatusEntry,
       "atmIfVptVccLoopRowStatus": atmIfVptVccLoopRowStatus,
       "atmIfVptVccLoopComponentName": atmIfVptVccLoopComponentName,
       "atmIfVptVccLoopStorageType": atmIfVptVccLoopStorageType,
       "atmIfVptVccLoopIndex": atmIfVptVccLoopIndex,
       "atmIfVptVccNep": atmIfVptVccNep,
       "atmIfVptVccNepRowStatusTable": atmIfVptVccNepRowStatusTable,
       "atmIfVptVccNepRowStatusEntry": atmIfVptVccNepRowStatusEntry,
       "atmIfVptVccNepRowStatus": atmIfVptVccNepRowStatus,
       "atmIfVptVccNepComponentName": atmIfVptVccNepComponentName,
       "atmIfVptVccNepStorageType": atmIfVptVccNepStorageType,
       "atmIfVptVccNepIndex": atmIfVptVccNepIndex,
       "atmIfVptVccNepProvTable": atmIfVptVccNepProvTable,
       "atmIfVptVccNepProvEntry": atmIfVptVccNepProvEntry,
       "atmIfVptVccNepApplicationName": atmIfVptVccNepApplicationName,
       "atmIfVptVccTest": atmIfVptVccTest,
       "atmIfVptVccTestRowStatusTable": atmIfVptVccTestRowStatusTable,
       "atmIfVptVccTestRowStatusEntry": atmIfVptVccTestRowStatusEntry,
       "atmIfVptVccTestRowStatus": atmIfVptVccTestRowStatus,
       "atmIfVptVccTestComponentName": atmIfVptVccTestComponentName,
       "atmIfVptVccTestStorageType": atmIfVptVccTestStorageType,
       "atmIfVptVccTestIndex": atmIfVptVccTestIndex,
       "atmIfVptVccTestStateTable": atmIfVptVccTestStateTable,
       "atmIfVptVccTestStateEntry": atmIfVptVccTestStateEntry,
       "atmIfVptVccTestAdminState": atmIfVptVccTestAdminState,
       "atmIfVptVccTestOperationalState": atmIfVptVccTestOperationalState,
       "atmIfVptVccTestUsageState": atmIfVptVccTestUsageState,
       "atmIfVptVccTestSetupTable": atmIfVptVccTestSetupTable,
       "atmIfVptVccTestSetupEntry": atmIfVptVccTestSetupEntry,
       "atmIfVptVccTestFrmTypes": atmIfVptVccTestFrmTypes,
       "atmIfVptVccTestFrmSize": atmIfVptVccTestFrmSize,
       "atmIfVptVccTestFrmPatternType": atmIfVptVccTestFrmPatternType,
       "atmIfVptVccTestCustomizedPattern": atmIfVptVccTestCustomizedPattern,
       "atmIfVptVccTestDuration": atmIfVptVccTestDuration,
       "atmIfVptVccTestBandwidthElastic": atmIfVptVccTestBandwidthElastic,
       "atmIfVptVccTestOverrideHoldingPriority": atmIfVptVccTestOverrideHoldingPriority,
       "atmIfVptVccTestResultsTable": atmIfVptVccTestResultsTable,
       "atmIfVptVccTestResultsEntry": atmIfVptVccTestResultsEntry,
       "atmIfVptVccTestElapsedTime": atmIfVptVccTestElapsedTime,
       "atmIfVptVccTestTimeRemaining": atmIfVptVccTestTimeRemaining,
       "atmIfVptVccTestCauseOfTermination": atmIfVptVccTestCauseOfTermination,
       "atmIfVptVccTestBytesTx": atmIfVptVccTestBytesTx,
       "atmIfVptVccTestBytesRx": atmIfVptVccTestBytesRx,
       "atmIfVptVccTestLoadingFrmTx": atmIfVptVccTestLoadingFrmTx,
       "atmIfVptVccTestLoadingFrmRx": atmIfVptVccTestLoadingFrmRx,
       "atmIfVptVccTestLoadingFrmLost": atmIfVptVccTestLoadingFrmLost,
       "atmIfVptVccTestVerificationFrmTx": atmIfVptVccTestVerificationFrmTx,
       "atmIfVptVccTestVerificationFrmRx": atmIfVptVccTestVerificationFrmRx,
       "atmIfVptVccTestVerificationFrmBad": atmIfVptVccTestVerificationFrmBad,
       "atmIfVptVccTestUnrecognizableFrmRx": atmIfVptVccTestUnrecognizableFrmRx,
       "atmIfVptVccTm": atmIfVptVccTm,
       "atmIfVptVccTmRowStatusTable": atmIfVptVccTmRowStatusTable,
       "atmIfVptVccTmRowStatusEntry": atmIfVptVccTmRowStatusEntry,
       "atmIfVptVccTmRowStatus": atmIfVptVccTmRowStatus,
       "atmIfVptVccTmComponentName": atmIfVptVccTmComponentName,
       "atmIfVptVccTmStorageType": atmIfVptVccTmStorageType,
       "atmIfVptVccTmIndex": atmIfVptVccTmIndex,
       "atmIfVptVccTmAbr": atmIfVptVccTmAbr,
       "atmIfVptVccTmAbrRowStatusTable": atmIfVptVccTmAbrRowStatusTable,
       "atmIfVptVccTmAbrRowStatusEntry": atmIfVptVccTmAbrRowStatusEntry,
       "atmIfVptVccTmAbrRowStatus": atmIfVptVccTmAbrRowStatus,
       "atmIfVptVccTmAbrComponentName": atmIfVptVccTmAbrComponentName,
       "atmIfVptVccTmAbrStorageType": atmIfVptVccTmAbrStorageType,
       "atmIfVptVccTmAbrIndex": atmIfVptVccTmAbrIndex,
       "atmIfVptVccTmAbrOperTable": atmIfVptVccTmAbrOperTable,
       "atmIfVptVccTmAbrOperEntry": atmIfVptVccTmAbrOperEntry,
       "atmIfVptVccTmAbrInitialCellRate": atmIfVptVccTmAbrInitialCellRate,
       "atmIfVptVccTmAbrTransientBufferExposure": atmIfVptVccTmAbrTransientBufferExposure,
       "atmIfVptVccTmAbrFixedRoundTripTime": atmIfVptVccTmAbrFixedRoundTripTime,
       "atmIfVptVccTmAbrRateDecreaseFactor": atmIfVptVccTmAbrRateDecreaseFactor,
       "atmIfVptVccTmAbrRateIncreaseFactor": atmIfVptVccTmAbrRateIncreaseFactor,
       "atmIfVptVccTmAbrMaxCellPerRmCell": atmIfVptVccTmAbrMaxCellPerRmCell,
       "atmIfVptVccTmAbrMaxTimeBetweenRmCell": atmIfVptVccTmAbrMaxTimeBetweenRmCell,
       "atmIfVptVccTmAbrCutoffDecreaseFactor": atmIfVptVccTmAbrCutoffDecreaseFactor,
       "atmIfVptVccTmAbrAcrDecreaseTimeFactor": atmIfVptVccTmAbrAcrDecreaseTimeFactor,
       "atmIfVptVccTmAbrForwardRmCellLimit": atmIfVptVccTmAbrForwardRmCellLimit,
       "atmIfVptVccTmAbrTxRateChangeInfo": atmIfVptVccTmAbrTxRateChangeInfo,
       "atmIfVptVccTmAbrAcrRateChangeInfo": atmIfVptVccTmAbrAcrRateChangeInfo,
       "atmIfVptVccTmAbrTxFwdRmCells": atmIfVptVccTmAbrTxFwdRmCells,
       "atmIfVptVccTmAbrRxEfci": atmIfVptVccTmAbrRxEfci,
       "atmIfVptVccTmAbrBrmRateChangeInfo": atmIfVptVccTmAbrBrmRateChangeInfo,
       "atmIfVptVccTmAbrBrmExplicitRate": atmIfVptVccTmAbrBrmExplicitRate,
       "atmIfVptVccTmOperTable": atmIfVptVccTmOperTable,
       "atmIfVptVccTmOperEntry": atmIfVptVccTmOperEntry,
       "atmIfVptVccTmTxTrafficDescType": atmIfVptVccTmTxTrafficDescType,
       "atmIfVptVccTmTxQosClass": atmIfVptVccTmTxQosClass,
       "atmIfVptVccTmTxQueueLength": atmIfVptVccTmTxQueueLength,
       "atmIfVptVccTmTxQueueCongestionState": atmIfVptVccTmTxQueueCongestionState,
       "atmIfVptVccTmHoldingPriority": atmIfVptVccTmHoldingPriority,
       "atmIfVptVccTmRxTrafficDescType": atmIfVptVccTmRxTrafficDescType,
       "atmIfVptVccTmRxQosClass": atmIfVptVccTmRxQosClass,
       "atmIfVptVccTmAtmServiceCategory": atmIfVptVccTmAtmServiceCategory,
       "atmIfVptVccTmTrafficShaping": atmIfVptVccTmTrafficShaping,
       "atmIfVptVccTmBearerClassBbc": atmIfVptVccTmBearerClassBbc,
       "atmIfVptVccTmTransferCapabilityBbc": atmIfVptVccTmTransferCapabilityBbc,
       "atmIfVptVccTmClippingBbc": atmIfVptVccTmClippingBbc,
       "atmIfVptVccTmUnshapedTransmitQueueing": atmIfVptVccTmUnshapedTransmitQueueing,
       "atmIfVptVccTmBestEffort": atmIfVptVccTmBestEffort,
       "atmIfVptVccTmForceTagging": atmIfVptVccTmForceTagging,
       "atmIfVptVccTmWeight": atmIfVptVccTmWeight,
       "atmIfVptVccTmUsageParameterControl": atmIfVptVccTmUsageParameterControl,
       "atmIfVptVccTmTxPacketWiseDiscard": atmIfVptVccTmTxPacketWiseDiscard,
       "atmIfVptVccTmRxPacketWiseDiscard": atmIfVptVccTmRxPacketWiseDiscard,
       "atmIfVptVccTmBandwidthElastic": atmIfVptVccTmBandwidthElastic,
       "atmIfVptVccTmBandwidthReduction": atmIfVptVccTmBandwidthReduction,
       "atmIfVptVccTmAbrConnectionType": atmIfVptVccTmAbrConnectionType,
       "atmIfVptVccTmTxTdpTable": atmIfVptVccTmTxTdpTable,
       "atmIfVptVccTmTxTdpEntry": atmIfVptVccTmTxTdpEntry,
       "atmIfVptVccTmTxTdpIndex": atmIfVptVccTmTxTdpIndex,
       "atmIfVptVccTmTxTdpValue": atmIfVptVccTmTxTdpValue,
       "atmIfVptVccTmTxQThreshTable": atmIfVptVccTmTxQThreshTable,
       "atmIfVptVccTmTxQThreshEntry": atmIfVptVccTmTxQThreshEntry,
       "atmIfVptVccTmTxQThreshIndex": atmIfVptVccTmTxQThreshIndex,
       "atmIfVptVccTmTxQThreshValue": atmIfVptVccTmTxQThreshValue,
       "atmIfVptVccTmRxTdpTable": atmIfVptVccTmRxTdpTable,
       "atmIfVptVccTmRxTdpEntry": atmIfVptVccTmRxTdpEntry,
       "atmIfVptVccTmRxTdpIndex": atmIfVptVccTmRxTdpIndex,
       "atmIfVptVccTmRxTdpValue": atmIfVptVccTmRxTdpValue,
       "atmIfVptVccTmTqpTable": atmIfVptVccTmTqpTable,
       "atmIfVptVccTmTqpEntry": atmIfVptVccTmTqpEntry,
       "atmIfVptVccTmTqpIndex": atmIfVptVccTmTqpIndex,
       "atmIfVptVccTmTqpValue": atmIfVptVccTmTqpValue,
       "atmIfVptVccTmRqpTable": atmIfVptVccTmRqpTable,
       "atmIfVptVccTmRqpEntry": atmIfVptVccTmRqpEntry,
       "atmIfVptVccTmRqpIndex": atmIfVptVccTmRqpIndex,
       "atmIfVptVccTmRqpValue": atmIfVptVccTmRqpValue,
       "atmIfVptVccStateTable": atmIfVptVccStateTable,
       "atmIfVptVccStateEntry": atmIfVptVccStateEntry,
       "atmIfVptVccAdminState": atmIfVptVccAdminState,
       "atmIfVptVccOperationalState": atmIfVptVccOperationalState,
       "atmIfVptVccUsageState": atmIfVptVccUsageState,
       "atmIfVptVccOperTable": atmIfVptVccOperTable,
       "atmIfVptVccOperEntry": atmIfVptVccOperEntry,
       "atmIfVptVccConnectionPointType": atmIfVptVccConnectionPointType,
       "atmIfVptVccConnInfoTable": atmIfVptVccConnInfoTable,
       "atmIfVptVccConnInfoEntry": atmIfVptVccConnInfoEntry,
       "atmIfVptVccDistributionType": atmIfVptVccDistributionType,
       "atmIfVptVccNumLeaves": atmIfVptVccNumLeaves,
       "atmIfVptVccCallDirection": atmIfVptVccCallDirection,
       "atmIfVptVccStatusTable": atmIfVptVccStatusTable,
       "atmIfVptVccStatusEntry": atmIfVptVccStatusEntry,
       "atmIfVptVccOperStatus": atmIfVptVccOperStatus,
       "atmIfVptVccLocalFailureCause": atmIfVptVccLocalFailureCause,
       "atmIfVptVccTroubled": atmIfVptVccTroubled,
       "atmIfVptVccSegLinkSideLoopbackState": atmIfVptVccSegLinkSideLoopbackState,
       "atmIfVptVccSegSwitchSideLoopbackState": atmIfVptVccSegSwitchSideLoopbackState,
       "atmIfVptVccEndToEndLoopbackState": atmIfVptVccEndToEndLoopbackState,
       "atmIfVptVccRxOamCellCongestionState": atmIfVptVccRxOamCellCongestionState,
       "atmIfVptVccAisState": atmIfVptVccAisState,
       "atmIfVptVccRdiState": atmIfVptVccRdiState,
       "atmIfVptVccTrafficTable": atmIfVptVccTrafficTable,
       "atmIfVptVccTrafficEntry": atmIfVptVccTrafficEntry,
       "atmIfVptVccTxTrafficDescType": atmIfVptVccTxTrafficDescType,
       "atmIfVptVccTxQosClass": atmIfVptVccTxQosClass,
       "atmIfVptVccFwdQosClass": atmIfVptVccFwdQosClass,
       "atmIfVptVccTxQueueLength": atmIfVptVccTxQueueLength,
       "atmIfVptVccTxQueueCongestionState": atmIfVptVccTxQueueCongestionState,
       "atmIfVptVccHoldingPriority": atmIfVptVccHoldingPriority,
       "atmIfVptVccRxTrafficDescType": atmIfVptVccRxTrafficDescType,
       "atmIfVptVccRxQosClass": atmIfVptVccRxQosClass,
       "atmIfVptVccBwdQosClass": atmIfVptVccBwdQosClass,
       "atmIfVptVccAtmServiceCategory": atmIfVptVccAtmServiceCategory,
       "atmIfVptVccTrafficShaping": atmIfVptVccTrafficShaping,
       "atmIfVptVccBearerClassBbc": atmIfVptVccBearerClassBbc,
       "atmIfVptVccTransferCapabilityBbc": atmIfVptVccTransferCapabilityBbc,
       "atmIfVptVccClippingBbc": atmIfVptVccClippingBbc,
       "atmIfVptVccUnshapedTransmitQueueing": atmIfVptVccUnshapedTransmitQueueing,
       "atmIfVptVccBestEffort": atmIfVptVccBestEffort,
       "atmIfVptVccUsageParameterControl": atmIfVptVccUsageParameterControl,
       "atmIfVptVccTxFrameDiscard": atmIfVptVccTxFrameDiscard,
       "atmIfVptVccRxFrameDiscard": atmIfVptVccRxFrameDiscard,
       "atmIfVptVccBandwidthElastic": atmIfVptVccBandwidthElastic,
       "atmIfVptVccBandwidthReduction": atmIfVptVccBandwidthReduction,
       "atmIfVptVccStatsTable": atmIfVptVccStatsTable,
       "atmIfVptVccStatsEntry": atmIfVptVccStatsEntry,
       "atmIfVptVccStatsTxCell": atmIfVptVccStatsTxCell,
       "atmIfVptVccStatsTxCellClp": atmIfVptVccStatsTxCellClp,
       "atmIfVptVccTxDiscard": atmIfVptVccTxDiscard,
       "atmIfVptVccTxDiscardClp": atmIfVptVccTxDiscardClp,
       "atmIfVptVccStatsTxCellDiscard": atmIfVptVccStatsTxCellDiscard,
       "atmIfVptVccStatsTxCellDiscardClp": atmIfVptVccStatsTxCellDiscardClp,
       "atmIfVptVccStatsTxFrameDiscard": atmIfVptVccStatsTxFrameDiscard,
       "atmIfVptVccStatsTxFrameDiscardClp": atmIfVptVccStatsTxFrameDiscardClp,
       "atmIfVptVccTxUtilization": atmIfVptVccTxUtilization,
       "atmIfVptVccStatsRxCell": atmIfVptVccStatsRxCell,
       "atmIfVptVccStatsRxCellClp": atmIfVptVccStatsRxCellClp,
       "atmIfVptVccRxDiscard": atmIfVptVccRxDiscard,
       "atmIfVptVccRxDiscardClp": atmIfVptVccRxDiscardClp,
       "atmIfVptVccStatsRxCellDiscard": atmIfVptVccStatsRxCellDiscard,
       "atmIfVptVccStatsRxCellDiscardClp": atmIfVptVccStatsRxCellDiscardClp,
       "atmIfVptVccStatsRxFrameDiscard": atmIfVptVccStatsRxFrameDiscard,
       "atmIfVptVccStatsRxFrameDiscardClp": atmIfVptVccStatsRxFrameDiscardClp,
       "atmIfVptVccRxUtilization": atmIfVptVccRxUtilization,
       "atmIfVptVccStatsRxUpcViolationOnEnforcer1": atmIfVptVccStatsRxUpcViolationOnEnforcer1,
       "atmIfVptVccStatsRxUpcViolationOnEnforcer2": atmIfVptVccStatsRxUpcViolationOnEnforcer2,
       "atmIfVptVccStatsRxAal5FrameError": atmIfVptVccStatsRxAal5FrameError,
       "atmIfVptVccStatsRxAal5FrameAbort": atmIfVptVccStatsRxAal5FrameAbort,
       "atmIfVptVccTxTdpTable": atmIfVptVccTxTdpTable,
       "atmIfVptVccTxTdpEntry": atmIfVptVccTxTdpEntry,
       "atmIfVptVccTxTdpIndex": atmIfVptVccTxTdpIndex,
       "atmIfVptVccTxTdpValue": atmIfVptVccTxTdpValue,
       "atmIfVptVccRxTdpTable": atmIfVptVccRxTdpTable,
       "atmIfVptVccRxTdpEntry": atmIfVptVccRxTdpEntry,
       "atmIfVptVccRxTdpIndex": atmIfVptVccRxTdpIndex,
       "atmIfVptVccRxTdpValue": atmIfVptVccRxTdpValue,
       "atmIfVptVccTxQThreshTable": atmIfVptVccTxQThreshTable,
       "atmIfVptVccTxQThreshEntry": atmIfVptVccTxQThreshEntry,
       "atmIfVptVccTxQThreshIndex": atmIfVptVccTxQThreshIndex,
       "atmIfVptVccTxQThreshValue": atmIfVptVccTxQThreshValue,
       "atmIfVptVccFqpTable": atmIfVptVccFqpTable,
       "atmIfVptVccFqpEntry": atmIfVptVccFqpEntry,
       "atmIfVptVccFqpIndex": atmIfVptVccFqpIndex,
       "atmIfVptVccFqpValue": atmIfVptVccFqpValue,
       "atmIfVptVccBqpTable": atmIfVptVccBqpTable,
       "atmIfVptVccBqpEntry": atmIfVptVccBqpEntry,
       "atmIfVptVccBqpIndex": atmIfVptVccBqpIndex,
       "atmIfVptVccBqpValue": atmIfVptVccBqpValue,
       "atmIfVptStateTable": atmIfVptStateTable,
       "atmIfVptStateEntry": atmIfVptStateEntry,
       "atmIfVptAdminState": atmIfVptAdminState,
       "atmIfVptOperationalState": atmIfVptOperationalState,
       "atmIfVptUsageState": atmIfVptUsageState,
       "atmIfVptOperTable": atmIfVptOperTable,
       "atmIfVptOperEntry": atmIfVptOperEntry,
       "atmIfVptConnectionPointType": atmIfVptConnectionPointType,
       "atmIfVptStatusTable": atmIfVptStatusTable,
       "atmIfVptStatusEntry": atmIfVptStatusEntry,
       "atmIfVptOperStatus": atmIfVptOperStatus,
       "atmIfVptLocalFailureCause": atmIfVptLocalFailureCause,
       "atmIfVptTroubled": atmIfVptTroubled,
       "atmIfVptSegLinkSideLoopbackState": atmIfVptSegLinkSideLoopbackState,
       "atmIfVptSegSwitchSideLoopbackState": atmIfVptSegSwitchSideLoopbackState,
       "atmIfVptEndToEndLoopbackState": atmIfVptEndToEndLoopbackState,
       "atmIfVptRxOamCellCongestionState": atmIfVptRxOamCellCongestionState,
       "atmIfVptAisState": atmIfVptAisState,
       "atmIfVptRdiState": atmIfVptRdiState,
       "atmIfVptTrafficTable": atmIfVptTrafficTable,
       "atmIfVptTrafficEntry": atmIfVptTrafficEntry,
       "atmIfVptTxTrafficDescType": atmIfVptTxTrafficDescType,
       "atmIfVptTxQosClass": atmIfVptTxQosClass,
       "atmIfVptFwdQosClass": atmIfVptFwdQosClass,
       "atmIfVptTxQueueLength": atmIfVptTxQueueLength,
       "atmIfVptTxQueueCongestionState": atmIfVptTxQueueCongestionState,
       "atmIfVptHoldingPriority": atmIfVptHoldingPriority,
       "atmIfVptRxTrafficDescType": atmIfVptRxTrafficDescType,
       "atmIfVptRxQosClass": atmIfVptRxQosClass,
       "atmIfVptBwdQosClass": atmIfVptBwdQosClass,
       "atmIfVptAtmServiceCategory": atmIfVptAtmServiceCategory,
       "atmIfVptTrafficShaping": atmIfVptTrafficShaping,
       "atmIfVptBearerClassBbc": atmIfVptBearerClassBbc,
       "atmIfVptTransferCapabilityBbc": atmIfVptTransferCapabilityBbc,
       "atmIfVptClippingBbc": atmIfVptClippingBbc,
       "atmIfVptUnshapedTransmitQueueing": atmIfVptUnshapedTransmitQueueing,
       "atmIfVptBestEffort": atmIfVptBestEffort,
       "atmIfVptUsageParameterControl": atmIfVptUsageParameterControl,
       "atmIfVptTxFrameDiscard": atmIfVptTxFrameDiscard,
       "atmIfVptRxFrameDiscard": atmIfVptRxFrameDiscard,
       "atmIfVptBandwidthElastic": atmIfVptBandwidthElastic,
       "atmIfVptBandwidthReduction": atmIfVptBandwidthReduction,
       "atmIfVptStatsTable": atmIfVptStatsTable,
       "atmIfVptStatsEntry": atmIfVptStatsEntry,
       "atmIfVptStatsTxCell": atmIfVptStatsTxCell,
       "atmIfVptStatsTxCellClp": atmIfVptStatsTxCellClp,
       "atmIfVptTxDiscard": atmIfVptTxDiscard,
       "atmIfVptTxDiscardClp": atmIfVptTxDiscardClp,
       "atmIfVptStatsTxCellDiscard": atmIfVptStatsTxCellDiscard,
       "atmIfVptStatsTxCellDiscardClp": atmIfVptStatsTxCellDiscardClp,
       "atmIfVptStatsTxFrameDiscard": atmIfVptStatsTxFrameDiscard,
       "atmIfVptStatsTxFrameDiscardClp": atmIfVptStatsTxFrameDiscardClp,
       "atmIfVptTxUtilization": atmIfVptTxUtilization,
       "atmIfVptStatsRxCell": atmIfVptStatsRxCell,
       "atmIfVptStatsRxCellClp": atmIfVptStatsRxCellClp,
       "atmIfVptRxDiscard": atmIfVptRxDiscard,
       "atmIfVptRxDiscardClp": atmIfVptRxDiscardClp,
       "atmIfVptStatsRxCellDiscard": atmIfVptStatsRxCellDiscard,
       "atmIfVptStatsRxCellDiscardClp": atmIfVptStatsRxCellDiscardClp,
       "atmIfVptStatsRxFrameDiscard": atmIfVptStatsRxFrameDiscard,
       "atmIfVptStatsRxFrameDiscardClp": atmIfVptStatsRxFrameDiscardClp,
       "atmIfVptRxUtilization": atmIfVptRxUtilization,
       "atmIfVptStatsRxUpcViolationOnEnforcer1": atmIfVptStatsRxUpcViolationOnEnforcer1,
       "atmIfVptStatsRxUpcViolationOnEnforcer2": atmIfVptStatsRxUpcViolationOnEnforcer2,
       "atmIfVptStatsRxAal5FrameError": atmIfVptStatsRxAal5FrameError,
       "atmIfVptStatsRxAal5FrameAbort": atmIfVptStatsRxAal5FrameAbort,
       "atmIfVptTxTdpTable": atmIfVptTxTdpTable,
       "atmIfVptTxTdpEntry": atmIfVptTxTdpEntry,
       "atmIfVptTxTdpIndex": atmIfVptTxTdpIndex,
       "atmIfVptTxTdpValue": atmIfVptTxTdpValue,
       "atmIfVptRxTdpTable": atmIfVptRxTdpTable,
       "atmIfVptRxTdpEntry": atmIfVptRxTdpEntry,
       "atmIfVptRxTdpIndex": atmIfVptRxTdpIndex,
       "atmIfVptRxTdpValue": atmIfVptRxTdpValue,
       "atmIfVptTxQThreshTable": atmIfVptTxQThreshTable,
       "atmIfVptTxQThreshEntry": atmIfVptTxQThreshEntry,
       "atmIfVptTxQThreshIndex": atmIfVptTxQThreshIndex,
       "atmIfVptTxQThreshValue": atmIfVptTxQThreshValue,
       "atmIfVptFqpTable": atmIfVptFqpTable,
       "atmIfVptFqpEntry": atmIfVptFqpEntry,
       "atmIfVptFqpIndex": atmIfVptFqpIndex,
       "atmIfVptFqpValue": atmIfVptFqpValue,
       "atmIfVptBqpTable": atmIfVptBqpTable,
       "atmIfVptBqpEntry": atmIfVptBqpEntry,
       "atmIfVptBqpIndex": atmIfVptBqpIndex,
       "atmIfVptBqpValue": atmIfVptBqpValue,
       "atmIfEp": atmIfEp,
       "atmIfEpRowStatusTable": atmIfEpRowStatusTable,
       "atmIfEpRowStatusEntry": atmIfEpRowStatusEntry,
       "atmIfEpRowStatus": atmIfEpRowStatus,
       "atmIfEpComponentName": atmIfEpComponentName,
       "atmIfEpStorageType": atmIfEpStorageType,
       "atmIfEpIndex": atmIfEpIndex,
       "atmIfEpProvTable": atmIfEpProvTable,
       "atmIfEpProvEntry": atmIfEpProvEntry,
       "atmIfEpMinimumBandwidthGuarantee": atmIfEpMinimumBandwidthGuarantee,
       "atmIfCidDataTable": atmIfCidDataTable,
       "atmIfCidDataEntry": atmIfCidDataEntry,
       "atmIfCustomerIdentifier": atmIfCustomerIdentifier,
       "atmIfProvTable": atmIfProvTable,
       "atmIfProvEntry": atmIfProvEntry,
       "atmIfInterfaceName": atmIfInterfaceName,
       "atmIfType": atmIfType,
       "atmIfOamSegmentBoundary": atmIfOamSegmentBoundary,
       "atmIfMaxVpcs": atmIfMaxVpcs,
       "atmIfMaxVccs": atmIfMaxVccs,
       "atmIfTrafficShaping": atmIfTrafficShaping,
       "atmIfUnshapedTransmitQueueing": atmIfUnshapedTransmitQueueing,
       "atmIfUsageParameterControl": atmIfUsageParameterControl,
       "atmIfMaxVpiBits": atmIfMaxVpiBits,
       "atmIfRemoteAtmInterfaceLabel": atmIfRemoteAtmInterfaceLabel,
       "atmIfTxCellMemory": atmIfTxCellMemory,
       "atmIfFaultHoldOffTime": atmIfFaultHoldOffTime,
       "atmIfLbkTable": atmIfLbkTable,
       "atmIfLbkEntry": atmIfLbkEntry,
       "atmIfSegLinkSideLoopback": atmIfSegLinkSideLoopback,
       "atmIfSegSwitchSideLoopback": atmIfSegSwitchSideLoopback,
       "atmIfEndToEndLoopback": atmIfEndToEndLoopback,
       "atmIfLoopbackMonitoring": atmIfLoopbackMonitoring,
       "atmIfStateTable": atmIfStateTable,
       "atmIfStateEntry": atmIfStateEntry,
       "atmIfAdminState": atmIfAdminState,
       "atmIfOperationalState": atmIfOperationalState,
       "atmIfUsageState": atmIfUsageState,
       "atmIfAvailabilityStatus": atmIfAvailabilityStatus,
       "atmIfProceduralStatus": atmIfProceduralStatus,
       "atmIfControlStatus": atmIfControlStatus,
       "atmIfAlarmStatus": atmIfAlarmStatus,
       "atmIfStandbyStatus": atmIfStandbyStatus,
       "atmIfUnknownStatus": atmIfUnknownStatus,
       "atmIfOperTable": atmIfOperTable,
       "atmIfOperEntry": atmIfOperEntry,
       "atmIfTxCellMemoryAvailable": atmIfTxCellMemoryAvailable,
       "atmIfTxCellMemoryCongestionState": atmIfTxCellMemoryCongestionState,
       "atmIfTxCellMemoryUsage": atmIfTxCellMemoryUsage,
       "atmIfUnshapedTransmitQueueingOper": atmIfUnshapedTransmitQueueingOper,
       "atmIfStatsTable": atmIfStatsTable,
       "atmIfStatsEntry": atmIfStatsEntry,
       "atmIfTransmittedCells": atmIfTransmittedCells,
       "atmIfTxCell": atmIfTxCell,
       "atmIfTxCellClp": atmIfTxCellClp,
       "atmIfTxCellEfci": atmIfTxCellEfci,
       "atmIfTxCellDiscard": atmIfTxCellDiscard,
       "atmIfTxCellDiscardClp": atmIfTxCellDiscardClp,
       "atmIfTxFrameDiscard": atmIfTxFrameDiscard,
       "atmIfTxFrameDiscardClp": atmIfTxFrameDiscardClp,
       "atmIfReceivedCells": atmIfReceivedCells,
       "atmIfRxCell": atmIfRxCell,
       "atmIfRxCellClp": atmIfRxCellClp,
       "atmIfRxCellEfci": atmIfRxCellEfci,
       "atmIfRxCellDiscard": atmIfRxCellDiscard,
       "atmIfRxCellDiscardClp": atmIfRxCellDiscardClp,
       "atmIfRxFrameDiscard": atmIfRxFrameDiscard,
       "atmIfRxFrameDiscardClp": atmIfRxFrameDiscardClp,
       "atmIfDroppedRxCells": atmIfDroppedRxCells,
       "atmIfLastDroppedRxCellConnection": atmIfLastDroppedRxCellConnection,
       "atmIfAal5RxErrors": atmIfAal5RxErrors,
       "atmIfLastAal5RxErrorConnection": atmIfLastAal5RxErrorConnection,
       "atmIfLrcFrameErrors": atmIfLrcFrameErrors,
       "atmIfLastLrcFrameErrorConnection": atmIfLastLrcFrameErrorConnection,
       "atmIfAal5RxAborts": atmIfAal5RxAborts,
       "atmIfLastAal5RxAbortConnection": atmIfLastAal5RxAbortConnection,
       "atmIfTxLinkUtilization": atmIfTxLinkUtilization,
       "atmIfRxLinkUtilization": atmIfRxLinkUtilization,
       "atmIfTxCellMemoryThresholdTable": atmIfTxCellMemoryThresholdTable,
       "atmIfTxCellMemoryThresholdEntry": atmIfTxCellMemoryThresholdEntry,
       "atmIfTxCellMemoryThresholdIndex": atmIfTxCellMemoryThresholdIndex,
       "atmIfTxCellMemoryThresholdValue": atmIfTxCellMemoryThresholdValue,
       "atmCoreMIB": atmCoreMIB,
       "atmCoreGroup": atmCoreGroup,
       "atmCoreGroupBE": atmCoreGroupBE,
       "atmCoreGroupBE01": atmCoreGroupBE01,
       "atmCoreGroupBE01A": atmCoreGroupBE01A,
       "atmCoreCapabilities": atmCoreCapabilities,
       "atmCoreCapabilitiesBE": atmCoreCapabilitiesBE,
       "atmCoreCapabilitiesBE01": atmCoreCapabilitiesBE01,
       "atmCoreCapabilitiesBE01A": atmCoreCapabilitiesBE01A}
)
