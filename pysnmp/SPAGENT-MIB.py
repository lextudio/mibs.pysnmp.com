# SNMP MIB module (SPAGENT-MIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/lextm/pysnmp.com/mibs.pysnmp.com/asn1/SPAGENT-MIB
# Produced by pysmi-1.5.4 at Mon Oct 14 22:57:18 2024
# On host MacBook-Pro.local platform Darwin version 24.0.0 by user lextm
# Using Python version 3.12.0 (main, Nov 14 2023, 23:52:11) [Clang 15.0.0 (clang-1500.0.40.1)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint,
 ConstraintsUnion) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint",
    "ConstraintsUnion")

# Import SMI symbols from the MIBs this MIB depends on

(ModuleCompliance,
 NotificationGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 NotificationType,
 TimeTicks,
 Unsigned32,
 enterprises,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "NotificationType",
    "TimeTicks",
    "Unsigned32",
    "enterprises",
    "iso")

(DisplayString,
 TextualConvention) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "TextualConvention")


# MODULE-IDENTITY


# Types definitions


# TEXTUAL-CONVENTIONS



# MIB Managed Objects in the order of their OIDs

_Akcp_ObjectIdentity = ObjectIdentity
akcp = _Akcp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854)
)
_SensorProbe_ObjectIdentity = ObjectIdentity
sensorProbe = _SensorProbe_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1)
)
_SpSummary_ObjectIdentity = ObjectIdentity
spSummary = _SpSummary_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 1)
)


class _SpStatus_Type(Integer32):
    """Custom type spStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("critical", 4),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 5),
          ("warning", 3))
    )


_SpStatus_Type.__name__ = "Integer32"
_SpStatus_Object = MibScalar
spStatus = _SpStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 1, 2),
    _SpStatus_Type()
)
spStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spStatus.setStatus("mandatory")
_SpManufName_Type = DisplayString
_SpManufName_Object = MibScalar
spManufName = _SpManufName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 1, 6),
    _SpManufName_Type()
)
spManufName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spManufName.setStatus("mandatory")
_SpHelpUrl_Type = DisplayString
_SpHelpUrl_Object = MibScalar
spHelpUrl = _SpHelpUrl_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 1, 7),
    _SpHelpUrl_Type()
)
spHelpUrl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spHelpUrl.setStatus("mandatory")
_SpProductName_Type = DisplayString
_SpProductName_Object = MibScalar
spProductName = _SpProductName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 1, 8),
    _SpProductName_Type()
)
spProductName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spProductName.setStatus("mandatory")
_SpHostName_Type = DisplayString
_SpHostName_Object = MibScalar
spHostName = _SpHostName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 1, 9),
    _SpHostName_Type()
)
spHostName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spHostName.setStatus("mandatory")
_SpSensor_ObjectIdentity = ObjectIdentity
spSensor = _SpSensor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2)
)
_SensorProbeDetail_ObjectIdentity = ObjectIdentity
sensorProbeDetail = _SensorProbeDetail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2)
)
_SensorProbeEntry_ObjectIdentity = ObjectIdentity
sensorProbeEntry = _SensorProbeEntry_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1)
)
_SensorProbeHost_Type = IpAddress
_SensorProbeHost_Object = MibScalar
sensorProbeHost = _SensorProbeHost_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 1),
    _SensorProbeHost_Type()
)
sensorProbeHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHost.setStatus("mandatory")


class _SensorProbeUseDHCP_Type(Integer32):
    """Custom type sensorProbeUseDHCP based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 2),
          ("yes", 1))
    )


_SensorProbeUseDHCP_Type.__name__ = "Integer32"
_SensorProbeUseDHCP_Object = MibScalar
sensorProbeUseDHCP = _SensorProbeUseDHCP_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 2),
    _SensorProbeUseDHCP_Type()
)
sensorProbeUseDHCP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeUseDHCP.setStatus("mandatory")
_SensorProbeMAC_Type = DisplayString
_SensorProbeMAC_Object = MibScalar
sensorProbeMAC = _SensorProbeMAC_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 3),
    _SensorProbeMAC_Type()
)
sensorProbeMAC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeMAC.setStatus("mandatory")
_SensorProbeSetCommunity_Type = DisplayString
_SensorProbeSetCommunity_Object = MibScalar
sensorProbeSetCommunity = _SensorProbeSetCommunity_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 4),
    _SensorProbeSetCommunity_Type()
)
sensorProbeSetCommunity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSetCommunity.setStatus("mandatory")
_SensorProbeGetCommunity_Type = DisplayString
_SensorProbeGetCommunity_Object = MibScalar
sensorProbeGetCommunity = _SensorProbeGetCommunity_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 5),
    _SensorProbeGetCommunity_Type()
)
sensorProbeGetCommunity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeGetCommunity.setStatus("mandatory")
_SensorProbeTempTable_Object = MibTable
sensorProbeTempTable = _SensorProbeTempTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16)
)
if mibBuilder.loadTexts:
    sensorProbeTempTable.setStatus("mandatory")
_SensorProbeTempEntry_Object = MibTableRow
sensorProbeTempEntry = _SensorProbeTempEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1)
)
sensorProbeTempEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeTempIndex"),
)
if mibBuilder.loadTexts:
    sensorProbeTempEntry.setStatus("mandatory")
_SensorProbeTempDescription_Type = DisplayString
_SensorProbeTempDescription_Object = MibTableColumn
sensorProbeTempDescription = _SensorProbeTempDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 1),
    _SensorProbeTempDescription_Type()
)
sensorProbeTempDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempDescription.setStatus("mandatory")
_SensorProbeTempLocation_Type = DisplayString
_SensorProbeTempLocation_Object = MibTableColumn
sensorProbeTempLocation = _SensorProbeTempLocation_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 2),
    _SensorProbeTempLocation_Type()
)
sensorProbeTempLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempLocation.setStatus("mandatory")
_SensorProbeTempDegree_Type = Integer32
_SensorProbeTempDegree_Object = MibTableColumn
sensorProbeTempDegree = _SensorProbeTempDegree_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 3),
    _SensorProbeTempDegree_Type()
)
sensorProbeTempDegree.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTempDegree.setStatus("mandatory")


class _SensorProbeTempStatus_Type(Integer32):
    """Custom type sensorProbeTempStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorProbeTempStatus_Type.__name__ = "Integer32"
_SensorProbeTempStatus_Object = MibTableColumn
sensorProbeTempStatus = _SensorProbeTempStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 4),
    _SensorProbeTempStatus_Type()
)
sensorProbeTempStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTempStatus.setStatus("mandatory")


class _SensorProbeTempOnline_Type(Integer32):
    """Custom type sensorProbeTempOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeTempOnline_Type.__name__ = "Integer32"
_SensorProbeTempOnline_Object = MibTableColumn
sensorProbeTempOnline = _SensorProbeTempOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 5),
    _SensorProbeTempOnline_Type()
)
sensorProbeTempOnline.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTempOnline.setStatus("mandatory")


class _SensorProbeTempGoOnline_Type(Integer32):
    """Custom type sensorProbeTempGoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeTempGoOnline_Type.__name__ = "Integer32"
_SensorProbeTempGoOnline_Object = MibTableColumn
sensorProbeTempGoOnline = _SensorProbeTempGoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 6),
    _SensorProbeTempGoOnline_Type()
)
sensorProbeTempGoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempGoOnline.setStatus("mandatory")
_SensorProbeTempHighWarning_Type = Integer32
_SensorProbeTempHighWarning_Object = MibTableColumn
sensorProbeTempHighWarning = _SensorProbeTempHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 7),
    _SensorProbeTempHighWarning_Type()
)
sensorProbeTempHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempHighWarning.setStatus("mandatory")
_SensorProbeTempHighCritical_Type = Integer32
_SensorProbeTempHighCritical_Object = MibTableColumn
sensorProbeTempHighCritical = _SensorProbeTempHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 8),
    _SensorProbeTempHighCritical_Type()
)
sensorProbeTempHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempHighCritical.setStatus("mandatory")
_SensorProbeTempLowWarning_Type = Integer32
_SensorProbeTempLowWarning_Object = MibTableColumn
sensorProbeTempLowWarning = _SensorProbeTempLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 9),
    _SensorProbeTempLowWarning_Type()
)
sensorProbeTempLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempLowWarning.setStatus("mandatory")
_SensorProbeTempLowCritical_Type = Integer32
_SensorProbeTempLowCritical_Object = MibTableColumn
sensorProbeTempLowCritical = _SensorProbeTempLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 10),
    _SensorProbeTempLowCritical_Type()
)
sensorProbeTempLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempLowCritical.setStatus("mandatory")
_SensorProbeTempRearm_Type = Integer32
_SensorProbeTempRearm_Object = MibTableColumn
sensorProbeTempRearm = _SensorProbeTempRearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 11),
    _SensorProbeTempRearm_Type()
)
sensorProbeTempRearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempRearm.setStatus("mandatory")


class _SensorProbeTempDegreeType_Type(Integer32):
    """Custom type sensorProbeTempDegreeType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("celsius", 1),
          ("fahr", 0))
    )


_SensorProbeTempDegreeType_Type.__name__ = "Integer32"
_SensorProbeTempDegreeType_Object = MibTableColumn
sensorProbeTempDegreeType = _SensorProbeTempDegreeType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 12),
    _SensorProbeTempDegreeType_Type()
)
sensorProbeTempDegreeType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempDegreeType.setStatus("mandatory")


class _SensorProbeTempSensorType_Type(Integer32):
    """Custom type sensorProbeTempSensorType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("type1", 0),
          ("type2", 1))
    )


_SensorProbeTempSensorType_Type.__name__ = "Integer32"
_SensorProbeTempSensorType_Object = MibTableColumn
sensorProbeTempSensorType = _SensorProbeTempSensorType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 13),
    _SensorProbeTempSensorType_Type()
)
sensorProbeTempSensorType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempSensorType.setStatus("mandatory")
_SensorProbeTempDegreeRaw_Type = Integer32
_SensorProbeTempDegreeRaw_Object = MibTableColumn
sensorProbeTempDegreeRaw = _SensorProbeTempDegreeRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 14),
    _SensorProbeTempDegreeRaw_Type()
)
sensorProbeTempDegreeRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTempDegreeRaw.setStatus("mandatory")


class _SensorProbeTempEmailTrapLimit_Type(Integer32):
    """Custom type sensorProbeTempEmailTrapLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeTempEmailTrapLimit_Type.__name__ = "Integer32"
_SensorProbeTempEmailTrapLimit_Object = MibTableColumn
sensorProbeTempEmailTrapLimit = _SensorProbeTempEmailTrapLimit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 16),
    _SensorProbeTempEmailTrapLimit_Type()
)
sensorProbeTempEmailTrapLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempEmailTrapLimit.setStatus("mandatory")
_SensorProbeTempEmailTrapSchedule_Type = DisplayString
_SensorProbeTempEmailTrapSchedule_Object = MibTableColumn
sensorProbeTempEmailTrapSchedule = _SensorProbeTempEmailTrapSchedule_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 17),
    _SensorProbeTempEmailTrapSchedule_Type()
)
sensorProbeTempEmailTrapSchedule.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempEmailTrapSchedule.setStatus("mandatory")


class _SensorProbeTempEmailTrapInterval_Type(Integer32):
    """Custom type sensorProbeTempEmailTrapInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 60),
    )


_SensorProbeTempEmailTrapInterval_Type.__name__ = "Integer32"
_SensorProbeTempEmailTrapInterval_Object = MibTableColumn
sensorProbeTempEmailTrapInterval = _SensorProbeTempEmailTrapInterval_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 18),
    _SensorProbeTempEmailTrapInterval_Type()
)
sensorProbeTempEmailTrapInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempEmailTrapInterval.setStatus("mandatory")


class _SensorProbeTempSendNormalTrap_Type(Integer32):
    """Custom type sensorProbeTempSendNormalTrap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeTempSendNormalTrap_Type.__name__ = "Integer32"
_SensorProbeTempSendNormalTrap_Object = MibTableColumn
sensorProbeTempSendNormalTrap = _SensorProbeTempSendNormalTrap_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 19),
    _SensorProbeTempSendNormalTrap_Type()
)
sensorProbeTempSendNormalTrap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempSendNormalTrap.setStatus("mandatory")


class _SensorProbeTempDelayError_Type(Integer32):
    """Custom type sensorProbeTempDelayError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeTempDelayError_Type.__name__ = "Integer32"
_SensorProbeTempDelayError_Object = MibTableColumn
sensorProbeTempDelayError = _SensorProbeTempDelayError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 20),
    _SensorProbeTempDelayError_Type()
)
sensorProbeTempDelayError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempDelayError.setStatus("mandatory")


class _SensorProbeTempDelayNormal_Type(Integer32):
    """Custom type sensorProbeTempDelayNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeTempDelayNormal_Type.__name__ = "Integer32"
_SensorProbeTempDelayNormal_Object = MibTableColumn
sensorProbeTempDelayNormal = _SensorProbeTempDelayNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 21),
    _SensorProbeTempDelayNormal_Type()
)
sensorProbeTempDelayNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempDelayNormal.setStatus("mandatory")


class _SensorProbeTempIndex_Type(Integer32):
    """Custom type sensorProbeTempIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeTempIndex_Type.__name__ = "Integer32"
_SensorProbeTempIndex_Object = MibTableColumn
sensorProbeTempIndex = _SensorProbeTempIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 22),
    _SensorProbeTempIndex_Type()
)
sensorProbeTempIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTempIndex.setStatus("mandatory")


class _SensorProbeTempRelayCycleTime_Type(Integer32):
    """Custom type sensorProbeTempRelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeTempRelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeTempRelayCycleTime_Object = MibTableColumn
sensorProbeTempRelayCycleTime = _SensorProbeTempRelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 23),
    _SensorProbeTempRelayCycleTime_Type()
)
sensorProbeTempRelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempRelayCycleTime.setStatus("mandatory")


class _SensorProbeTempRelayOnPort_Type(Integer32):
    """Custom type sensorProbeTempRelayOnPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SensorProbeTempRelayOnPort_Type.__name__ = "Integer32"
_SensorProbeTempRelayOnPort_Object = MibTableColumn
sensorProbeTempRelayOnPort = _SensorProbeTempRelayOnPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 24),
    _SensorProbeTempRelayOnPort_Type()
)
sensorProbeTempRelayOnPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempRelayOnPort.setStatus("mandatory")


class _SensorProbeTempRelayActiveStatus_Type(Integer32):
    """Custom type sensorProbeTempRelayActiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("anyError", 7),
          ("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5))
    )


_SensorProbeTempRelayActiveStatus_Type.__name__ = "Integer32"
_SensorProbeTempRelayActiveStatus_Object = MibTableColumn
sensorProbeTempRelayActiveStatus = _SensorProbeTempRelayActiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 25),
    _SensorProbeTempRelayActiveStatus_Type()
)
sensorProbeTempRelayActiveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempRelayActiveStatus.setStatus("mandatory")


class _SensorProbeTempRelayAction_Type(Integer32):
    """Custom type sensorProbeTempRelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cycle", 2),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeTempRelayAction_Type.__name__ = "Integer32"
_SensorProbeTempRelayAction_Object = MibTableColumn
sensorProbeTempRelayAction = _SensorProbeTempRelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 26),
    _SensorProbeTempRelayAction_Type()
)
sensorProbeTempRelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempRelayAction.setStatus("mandatory")


class _SensorProbeTempEmailInterval_Type(Integer32):
    """Custom type sensorProbeTempEmailInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 60),
    )


_SensorProbeTempEmailInterval_Type.__name__ = "Integer32"
_SensorProbeTempEmailInterval_Object = MibTableColumn
sensorProbeTempEmailInterval = _SensorProbeTempEmailInterval_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 27),
    _SensorProbeTempEmailInterval_Type()
)
sensorProbeTempEmailInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempEmailInterval.setStatus("mandatory")
_SensorProbeTempIndexCount_Type = Integer32
_SensorProbeTempIndexCount_Object = MibTableColumn
sensorProbeTempIndexCount = _SensorProbeTempIndexCount_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 28),
    _SensorProbeTempIndexCount_Type()
)
sensorProbeTempIndexCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTempIndexCount.setStatus("mandatory")
_SensorProbeTempOffset_Type = Integer32
_SensorProbeTempOffset_Object = MibTableColumn
sensorProbeTempOffset = _SensorProbeTempOffset_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 29),
    _SensorProbeTempOffset_Type()
)
sensorProbeTempOffset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempOffset.setStatus("mandatory")


class _SensorProbeTempSirenCycleTime_Type(Integer32):
    """Custom type sensorProbeTempSirenCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeTempSirenCycleTime_Type.__name__ = "Integer32"
_SensorProbeTempSirenCycleTime_Object = MibTableColumn
sensorProbeTempSirenCycleTime = _SensorProbeTempSirenCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 30),
    _SensorProbeTempSirenCycleTime_Type()
)
sensorProbeTempSirenCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempSirenCycleTime.setStatus("mandatory")


class _SensorProbeTempSirenOnPort_Type(Integer32):
    """Custom type sensorProbeTempSirenOnPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SensorProbeTempSirenOnPort_Type.__name__ = "Integer32"
_SensorProbeTempSirenOnPort_Object = MibTableColumn
sensorProbeTempSirenOnPort = _SensorProbeTempSirenOnPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 31),
    _SensorProbeTempSirenOnPort_Type()
)
sensorProbeTempSirenOnPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempSirenOnPort.setStatus("mandatory")


class _SensorProbeTempSirenActiveStatus_Type(Integer32):
    """Custom type sensorProbeTempSirenActiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("anyError", 7),
          ("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5))
    )


_SensorProbeTempSirenActiveStatus_Type.__name__ = "Integer32"
_SensorProbeTempSirenActiveStatus_Object = MibTableColumn
sensorProbeTempSirenActiveStatus = _SensorProbeTempSirenActiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 32),
    _SensorProbeTempSirenActiveStatus_Type()
)
sensorProbeTempSirenActiveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempSirenActiveStatus.setStatus("mandatory")


class _SensorProbeTempSirenAction_Type(Integer32):
    """Custom type sensorProbeTempSirenAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cycle", 2),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeTempSirenAction_Type.__name__ = "Integer32"
_SensorProbeTempSirenAction_Object = MibTableColumn
sensorProbeTempSirenAction = _SensorProbeTempSirenAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 33),
    _SensorProbeTempSirenAction_Type()
)
sensorProbeTempSirenAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempSirenAction.setStatus("mandatory")


class _SensorProbeTempAcknowledgement_Type(Integer32):
    """Custom type sensorProbeTempAcknowledgement based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("ack", 1)
    )


_SensorProbeTempAcknowledgement_Type.__name__ = "Integer32"
_SensorProbeTempAcknowledgement_Object = MibTableColumn
sensorProbeTempAcknowledgement = _SensorProbeTempAcknowledgement_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 34),
    _SensorProbeTempAcknowledgement_Type()
)
sensorProbeTempAcknowledgement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempAcknowledgement.setStatus("mandatory")


class _SensorProbeTempSirenDelayAlarm_Type(Integer32):
    """Custom type sensorProbeTempSirenDelayAlarm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeTempSirenDelayAlarm_Type.__name__ = "Integer32"
_SensorProbeTempSirenDelayAlarm_Object = MibTableColumn
sensorProbeTempSirenDelayAlarm = _SensorProbeTempSirenDelayAlarm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 35),
    _SensorProbeTempSirenDelayAlarm_Type()
)
sensorProbeTempSirenDelayAlarm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempSirenDelayAlarm.setStatus("mandatory")
_SensorProbeTempURL_Type = DisplayString
_SensorProbeTempURL_Object = MibTableColumn
sensorProbeTempURL = _SensorProbeTempURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 36),
    _SensorProbeTempURL_Type()
)
sensorProbeTempURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempURL.setStatus("mandatory")


class _SensorProbeTempOpenURL_Type(Integer32):
    """Custom type sensorProbeTempOpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeTempOpenURL_Type.__name__ = "Integer32"
_SensorProbeTempOpenURL_Object = MibTableColumn
sensorProbeTempOpenURL = _SensorProbeTempOpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 37),
    _SensorProbeTempOpenURL_Type()
)
sensorProbeTempOpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempOpenURL.setStatus("mandatory")


class _SensorProbeTempDatacollectType_Type(Integer32):
    """Custom type sensorProbeTempDatacollectType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("average", 1),
          ("highest", 2),
          ("lowest", 3))
    )


_SensorProbeTempDatacollectType_Type.__name__ = "Integer32"
_SensorProbeTempDatacollectType_Object = MibTableColumn
sensorProbeTempDatacollectType = _SensorProbeTempDatacollectType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 38),
    _SensorProbeTempDatacollectType_Type()
)
sensorProbeTempDatacollectType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempDatacollectType.setStatus("mandatory")


class _SensorProbeTempContTimeHighCritical_Type(Integer32):
    """Custom type sensorProbeTempContTimeHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTempContTimeHighCritical_Type.__name__ = "Integer32"
_SensorProbeTempContTimeHighCritical_Object = MibTableColumn
sensorProbeTempContTimeHighCritical = _SensorProbeTempContTimeHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 39),
    _SensorProbeTempContTimeHighCritical_Type()
)
sensorProbeTempContTimeHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempContTimeHighCritical.setStatus("mandatory")


class _SensorProbeTempContTimeHighWarning_Type(Integer32):
    """Custom type sensorProbeTempContTimeHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTempContTimeHighWarning_Type.__name__ = "Integer32"
_SensorProbeTempContTimeHighWarning_Object = MibTableColumn
sensorProbeTempContTimeHighWarning = _SensorProbeTempContTimeHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 40),
    _SensorProbeTempContTimeHighWarning_Type()
)
sensorProbeTempContTimeHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempContTimeHighWarning.setStatus("mandatory")


class _SensorProbeTempContTimeNormal_Type(Integer32):
    """Custom type sensorProbeTempContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTempContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeTempContTimeNormal_Object = MibTableColumn
sensorProbeTempContTimeNormal = _SensorProbeTempContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 41),
    _SensorProbeTempContTimeNormal_Type()
)
sensorProbeTempContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempContTimeNormal.setStatus("mandatory")


class _SensorProbeTempContTimeLowWarning_Type(Integer32):
    """Custom type sensorProbeTempContTimeLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTempContTimeLowWarning_Type.__name__ = "Integer32"
_SensorProbeTempContTimeLowWarning_Object = MibTableColumn
sensorProbeTempContTimeLowWarning = _SensorProbeTempContTimeLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 42),
    _SensorProbeTempContTimeLowWarning_Type()
)
sensorProbeTempContTimeLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempContTimeLowWarning.setStatus("mandatory")


class _SensorProbeTempContTimeLowCritical_Type(Integer32):
    """Custom type sensorProbeTempContTimeLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTempContTimeLowCritical_Type.__name__ = "Integer32"
_SensorProbeTempContTimeLowCritical_Object = MibTableColumn
sensorProbeTempContTimeLowCritical = _SensorProbeTempContTimeLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 43),
    _SensorProbeTempContTimeLowCritical_Type()
)
sensorProbeTempContTimeLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempContTimeLowCritical.setStatus("mandatory")


class _SensorProbeTempContTimeSensorError_Type(Integer32):
    """Custom type sensorProbeTempContTimeSensorError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTempContTimeSensorError_Type.__name__ = "Integer32"
_SensorProbeTempContTimeSensorError_Object = MibTableColumn
sensorProbeTempContTimeSensorError = _SensorProbeTempContTimeSensorError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 44),
    _SensorProbeTempContTimeSensorError_Type()
)
sensorProbeTempContTimeSensorError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempContTimeSensorError.setStatus("mandatory")


class _SensorProbeTempCalendar_Type(Integer32):
    """Custom type sensorProbeTempCalendar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeTempCalendar_Type.__name__ = "Integer32"
_SensorProbeTempCalendar_Object = MibTableColumn
sensorProbeTempCalendar = _SensorProbeTempCalendar_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 45),
    _SensorProbeTempCalendar_Type()
)
sensorProbeTempCalendar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempCalendar.setStatus("mandatory")
_SensorProbeThermostatIndex_Type = Integer32
_SensorProbeThermostatIndex_Object = MibTableColumn
sensorProbeThermostatIndex = _SensorProbeThermostatIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 46),
    _SensorProbeThermostatIndex_Type()
)
sensorProbeThermostatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatIndex.setStatus("mandatory")
_SensorProbeThermostatDescription_Type = DisplayString
_SensorProbeThermostatDescription_Object = MibTableColumn
sensorProbeThermostatDescription = _SensorProbeThermostatDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 47),
    _SensorProbeThermostatDescription_Type()
)
sensorProbeThermostatDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatDescription.setStatus("mandatory")
_SensorProbeThermostatValue_Type = Integer32
_SensorProbeThermostatValue_Object = MibTableColumn
sensorProbeThermostatValue = _SensorProbeThermostatValue_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 48),
    _SensorProbeThermostatValue_Type()
)
sensorProbeThermostatValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatValue.setStatus("mandatory")


class _SensorProbeThermostatOnline_Type(Integer32):
    """Custom type sensorProbeThermostatOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeThermostatOnline_Type.__name__ = "Integer32"
_SensorProbeThermostatOnline_Object = MibTableColumn
sensorProbeThermostatOnline = _SensorProbeThermostatOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 49),
    _SensorProbeThermostatOnline_Type()
)
sensorProbeThermostatOnline.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatOnline.setStatus("mandatory")


class _SensorProbeThermostatGoOnline_Type(Integer32):
    """Custom type sensorProbeThermostatGoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeThermostatGoOnline_Type.__name__ = "Integer32"
_SensorProbeThermostatGoOnline_Object = MibTableColumn
sensorProbeThermostatGoOnline = _SensorProbeThermostatGoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 50),
    _SensorProbeThermostatGoOnline_Type()
)
sensorProbeThermostatGoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatGoOnline.setStatus("mandatory")


class _SensorProbeThermostatMode_Type(Integer32):
    """Custom type sensorProbeThermostatMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("time-bases", 1))
    )


_SensorProbeThermostatMode_Type.__name__ = "Integer32"
_SensorProbeThermostatMode_Object = MibTableColumn
sensorProbeThermostatMode = _SensorProbeThermostatMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 51),
    _SensorProbeThermostatMode_Type()
)
sensorProbeThermostatMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatMode.setStatus("mandatory")
_SensorProbeThermostatRelayControlPort_Type = Integer32
_SensorProbeThermostatRelayControlPort_Object = MibTableColumn
sensorProbeThermostatRelayControlPort = _SensorProbeThermostatRelayControlPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 52),
    _SensorProbeThermostatRelayControlPort_Type()
)
sensorProbeThermostatRelayControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatRelayControlPort.setStatus("mandatory")


class _SensorProbeThermostatNormalAction1_Type(Integer32):
    """Custom type sensorProbeThermostatNormalAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatNormalAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatNormalAction1_Object = MibTableColumn
sensorProbeThermostatNormalAction1 = _SensorProbeThermostatNormalAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 53),
    _SensorProbeThermostatNormalAction1_Type()
)
sensorProbeThermostatNormalAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatNormalAction1.setStatus("mandatory")


class _SensorProbeThermostatHighLimit1_Type(Integer32):
    """Custom type sensorProbeThermostatHighLimit1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatHighLimit1_Type.__name__ = "Integer32"
_SensorProbeThermostatHighLimit1_Object = MibTableColumn
sensorProbeThermostatHighLimit1 = _SensorProbeThermostatHighLimit1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 54),
    _SensorProbeThermostatHighLimit1_Type()
)
sensorProbeThermostatHighLimit1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatHighLimit1.setStatus("mandatory")


class _SensorProbeThermostatHighLimitAction1_Type(Integer32):
    """Custom type sensorProbeThermostatHighLimitAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatHighLimitAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatHighLimitAction1_Object = MibTableColumn
sensorProbeThermostatHighLimitAction1 = _SensorProbeThermostatHighLimitAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 55),
    _SensorProbeThermostatHighLimitAction1_Type()
)
sensorProbeThermostatHighLimitAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatHighLimitAction1.setStatus("mandatory")


class _SensorProbeThermostatLowLimit1_Type(Integer32):
    """Custom type sensorProbeThermostatLowLimit1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatLowLimit1_Type.__name__ = "Integer32"
_SensorProbeThermostatLowLimit1_Object = MibTableColumn
sensorProbeThermostatLowLimit1 = _SensorProbeThermostatLowLimit1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 56),
    _SensorProbeThermostatLowLimit1_Type()
)
sensorProbeThermostatLowLimit1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatLowLimit1.setStatus("mandatory")


class _SensorProbeThermostatLowLimitAction1_Type(Integer32):
    """Custom type sensorProbeThermostatLowLimitAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatLowLimitAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatLowLimitAction1_Object = MibTableColumn
sensorProbeThermostatLowLimitAction1 = _SensorProbeThermostatLowLimitAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 57),
    _SensorProbeThermostatLowLimitAction1_Type()
)
sensorProbeThermostatLowLimitAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatLowLimitAction1.setStatus("mandatory")


class _SensorProbeThermostatNormalAction2_Type(Integer32):
    """Custom type sensorProbeThermostatNormalAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatNormalAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatNormalAction2_Object = MibTableColumn
sensorProbeThermostatNormalAction2 = _SensorProbeThermostatNormalAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 58),
    _SensorProbeThermostatNormalAction2_Type()
)
sensorProbeThermostatNormalAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatNormalAction2.setStatus("mandatory")


class _SensorProbeThermostatHighLimit2_Type(Integer32):
    """Custom type sensorProbeThermostatHighLimit2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatHighLimit2_Type.__name__ = "Integer32"
_SensorProbeThermostatHighLimit2_Object = MibTableColumn
sensorProbeThermostatHighLimit2 = _SensorProbeThermostatHighLimit2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 59),
    _SensorProbeThermostatHighLimit2_Type()
)
sensorProbeThermostatHighLimit2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatHighLimit2.setStatus("mandatory")


class _SensorProbeThermostatHighLimitAction2_Type(Integer32):
    """Custom type sensorProbeThermostatHighLimitAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatHighLimitAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatHighLimitAction2_Object = MibTableColumn
sensorProbeThermostatHighLimitAction2 = _SensorProbeThermostatHighLimitAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 60),
    _SensorProbeThermostatHighLimitAction2_Type()
)
sensorProbeThermostatHighLimitAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatHighLimitAction2.setStatus("mandatory")


class _SensorProbeThermostatLowLimit2_Type(Integer32):
    """Custom type sensorProbeThermostatLowLimit2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatLowLimit2_Type.__name__ = "Integer32"
_SensorProbeThermostatLowLimit2_Object = MibTableColumn
sensorProbeThermostatLowLimit2 = _SensorProbeThermostatLowLimit2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 61),
    _SensorProbeThermostatLowLimit2_Type()
)
sensorProbeThermostatLowLimit2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatLowLimit2.setStatus("mandatory")


class _SensorProbeThermostatLowLimitAction2_Type(Integer32):
    """Custom type sensorProbeThermostatLowLimitAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatLowLimitAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatLowLimitAction2_Object = MibTableColumn
sensorProbeThermostatLowLimitAction2 = _SensorProbeThermostatLowLimitAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 62),
    _SensorProbeThermostatLowLimitAction2_Type()
)
sensorProbeThermostatLowLimitAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatLowLimitAction2.setStatus("mandatory")
_SensorProbeThermostatEnableTime_Type = DisplayString
_SensorProbeThermostatEnableTime_Object = MibTableColumn
sensorProbeThermostatEnableTime = _SensorProbeThermostatEnableTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 63),
    _SensorProbeThermostatEnableTime_Type()
)
sensorProbeThermostatEnableTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatEnableTime.setStatus("mandatory")


class _SensorProbeTempSendNormalMail_Type(Integer32):
    """Custom type sensorProbeTempSendNormalMail based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeTempSendNormalMail_Type.__name__ = "Integer32"
_SensorProbeTempSendNormalMail_Object = MibTableColumn
sensorProbeTempSendNormalMail = _SensorProbeTempSendNormalMail_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 64),
    _SensorProbeTempSendNormalMail_Type()
)
sensorProbeTempSendNormalMail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempSendNormalMail.setStatus("mandatory")


class _SensorProbeTempSendTrap_Type(Integer32):
    """Custom type sensorProbeTempSendTrap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeTempSendTrap_Type.__name__ = "Integer32"
_SensorProbeTempSendTrap_Object = MibTableColumn
sensorProbeTempSendTrap = _SensorProbeTempSendTrap_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 65),
    _SensorProbeTempSendTrap_Type()
)
sensorProbeTempSendTrap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempSendTrap.setStatus("mandatory")


class _SensorProbeTempSendMail_Type(Integer32):
    """Custom type sensorProbeTempSendMail based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeTempSendMail_Type.__name__ = "Integer32"
_SensorProbeTempSendMail_Object = MibTableColumn
sensorProbeTempSendMail = _SensorProbeTempSendMail_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 66),
    _SensorProbeTempSendMail_Type()
)
sensorProbeTempSendMail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTempSendMail.setStatus("mandatory")
_SensorProbeHumidityTable_Object = MibTable
sensorProbeHumidityTable = _SensorProbeHumidityTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17)
)
if mibBuilder.loadTexts:
    sensorProbeHumidityTable.setStatus("mandatory")
_SensorProbeHumidityEntry_Object = MibTableRow
sensorProbeHumidityEntry = _SensorProbeHumidityEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1)
)
sensorProbeHumidityEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeHumidityIndex"),
)
if mibBuilder.loadTexts:
    sensorProbeHumidityEntry.setStatus("mandatory")
_SensorProbeHumidityDescription_Type = DisplayString
_SensorProbeHumidityDescription_Object = MibTableColumn
sensorProbeHumidityDescription = _SensorProbeHumidityDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 1),
    _SensorProbeHumidityDescription_Type()
)
sensorProbeHumidityDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityDescription.setStatus("mandatory")
_SensorProbeHumidityLocation_Type = DisplayString
_SensorProbeHumidityLocation_Object = MibTableColumn
sensorProbeHumidityLocation = _SensorProbeHumidityLocation_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 2),
    _SensorProbeHumidityLocation_Type()
)
sensorProbeHumidityLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityLocation.setStatus("mandatory")


class _SensorProbeHumidityPercent_Type(Integer32):
    """Custom type sensorProbeHumidityPercent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-32768, 32767),
    )


_SensorProbeHumidityPercent_Type.__name__ = "Integer32"
_SensorProbeHumidityPercent_Object = MibTableColumn
sensorProbeHumidityPercent = _SensorProbeHumidityPercent_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 3),
    _SensorProbeHumidityPercent_Type()
)
sensorProbeHumidityPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeHumidityPercent.setStatus("mandatory")


class _SensorProbeHumidityStatus_Type(Integer32):
    """Custom type sensorProbeHumidityStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorProbeHumidityStatus_Type.__name__ = "Integer32"
_SensorProbeHumidityStatus_Object = MibTableColumn
sensorProbeHumidityStatus = _SensorProbeHumidityStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 4),
    _SensorProbeHumidityStatus_Type()
)
sensorProbeHumidityStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeHumidityStatus.setStatus("mandatory")


class _SensorProbeHumidityOnline_Type(Integer32):
    """Custom type sensorProbeHumidityOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeHumidityOnline_Type.__name__ = "Integer32"
_SensorProbeHumidityOnline_Object = MibTableColumn
sensorProbeHumidityOnline = _SensorProbeHumidityOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 5),
    _SensorProbeHumidityOnline_Type()
)
sensorProbeHumidityOnline.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeHumidityOnline.setStatus("mandatory")


class _SensorProbeHumidityGoOnline_Type(Integer32):
    """Custom type sensorProbeHumidityGoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeHumidityGoOnline_Type.__name__ = "Integer32"
_SensorProbeHumidityGoOnline_Object = MibTableColumn
sensorProbeHumidityGoOnline = _SensorProbeHumidityGoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 6),
    _SensorProbeHumidityGoOnline_Type()
)
sensorProbeHumidityGoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityGoOnline.setStatus("mandatory")
_SensorProbeHumidityHighWarning_Type = Integer32
_SensorProbeHumidityHighWarning_Object = MibTableColumn
sensorProbeHumidityHighWarning = _SensorProbeHumidityHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 7),
    _SensorProbeHumidityHighWarning_Type()
)
sensorProbeHumidityHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityHighWarning.setStatus("mandatory")
_SensorProbeHumidityHighCritical_Type = Integer32
_SensorProbeHumidityHighCritical_Object = MibTableColumn
sensorProbeHumidityHighCritical = _SensorProbeHumidityHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 8),
    _SensorProbeHumidityHighCritical_Type()
)
sensorProbeHumidityHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityHighCritical.setStatus("mandatory")
_SensorProbeHumidityLowWarning_Type = Integer32
_SensorProbeHumidityLowWarning_Object = MibTableColumn
sensorProbeHumidityLowWarning = _SensorProbeHumidityLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 9),
    _SensorProbeHumidityLowWarning_Type()
)
sensorProbeHumidityLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityLowWarning.setStatus("mandatory")
_SensorProbeHumidityLowCritical_Type = Integer32
_SensorProbeHumidityLowCritical_Object = MibTableColumn
sensorProbeHumidityLowCritical = _SensorProbeHumidityLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 10),
    _SensorProbeHumidityLowCritical_Type()
)
sensorProbeHumidityLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityLowCritical.setStatus("mandatory")
_SensorProbeHumidityRearm_Type = Integer32
_SensorProbeHumidityRearm_Object = MibTableColumn
sensorProbeHumidityRearm = _SensorProbeHumidityRearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 11),
    _SensorProbeHumidityRearm_Type()
)
sensorProbeHumidityRearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityRearm.setStatus("mandatory")
_SensorProbeHumidityRaw_Type = Integer32
_SensorProbeHumidityRaw_Object = MibTableColumn
sensorProbeHumidityRaw = _SensorProbeHumidityRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 13),
    _SensorProbeHumidityRaw_Type()
)
sensorProbeHumidityRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeHumidityRaw.setStatus("mandatory")
_SensorProbeHumidityLowVoltage_Type = Integer32
_SensorProbeHumidityLowVoltage_Object = MibTableColumn
sensorProbeHumidityLowVoltage = _SensorProbeHumidityLowVoltage_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 14),
    _SensorProbeHumidityLowVoltage_Type()
)
sensorProbeHumidityLowVoltage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityLowVoltage.setStatus("mandatory")
_SensorProbeHumidityHighVoltage_Type = Integer32
_SensorProbeHumidityHighVoltage_Object = MibTableColumn
sensorProbeHumidityHighVoltage = _SensorProbeHumidityHighVoltage_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 15),
    _SensorProbeHumidityHighVoltage_Type()
)
sensorProbeHumidityHighVoltage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityHighVoltage.setStatus("mandatory")


class _SensorProbeHumidityEmailTrapLimit_Type(Integer32):
    """Custom type sensorProbeHumidityEmailTrapLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeHumidityEmailTrapLimit_Type.__name__ = "Integer32"
_SensorProbeHumidityEmailTrapLimit_Object = MibTableColumn
sensorProbeHumidityEmailTrapLimit = _SensorProbeHumidityEmailTrapLimit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 17),
    _SensorProbeHumidityEmailTrapLimit_Type()
)
sensorProbeHumidityEmailTrapLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityEmailTrapLimit.setStatus("mandatory")
_SensorProbeHumidityEmailTrapSchedule_Type = DisplayString
_SensorProbeHumidityEmailTrapSchedule_Object = MibTableColumn
sensorProbeHumidityEmailTrapSchedule = _SensorProbeHumidityEmailTrapSchedule_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 18),
    _SensorProbeHumidityEmailTrapSchedule_Type()
)
sensorProbeHumidityEmailTrapSchedule.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityEmailTrapSchedule.setStatus("mandatory")


class _SensorProbeHumidityEmailTrapInterval_Type(Integer32):
    """Custom type sensorProbeHumidityEmailTrapInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 60),
    )


_SensorProbeHumidityEmailTrapInterval_Type.__name__ = "Integer32"
_SensorProbeHumidityEmailTrapInterval_Object = MibTableColumn
sensorProbeHumidityEmailTrapInterval = _SensorProbeHumidityEmailTrapInterval_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 19),
    _SensorProbeHumidityEmailTrapInterval_Type()
)
sensorProbeHumidityEmailTrapInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityEmailTrapInterval.setStatus("mandatory")


class _SensorProbeHumiditySendNormalTrap_Type(Integer32):
    """Custom type sensorProbeHumiditySendNormalTrap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeHumiditySendNormalTrap_Type.__name__ = "Integer32"
_SensorProbeHumiditySendNormalTrap_Object = MibTableColumn
sensorProbeHumiditySendNormalTrap = _SensorProbeHumiditySendNormalTrap_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 20),
    _SensorProbeHumiditySendNormalTrap_Type()
)
sensorProbeHumiditySendNormalTrap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumiditySendNormalTrap.setStatus("mandatory")


class _SensorProbeHumidityDelayError_Type(Integer32):
    """Custom type sensorProbeHumidityDelayError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeHumidityDelayError_Type.__name__ = "Integer32"
_SensorProbeHumidityDelayError_Object = MibTableColumn
sensorProbeHumidityDelayError = _SensorProbeHumidityDelayError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 21),
    _SensorProbeHumidityDelayError_Type()
)
sensorProbeHumidityDelayError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityDelayError.setStatus("mandatory")


class _SensorProbeHumidityDelayNormal_Type(Integer32):
    """Custom type sensorProbeHumidityDelayNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeHumidityDelayNormal_Type.__name__ = "Integer32"
_SensorProbeHumidityDelayNormal_Object = MibTableColumn
sensorProbeHumidityDelayNormal = _SensorProbeHumidityDelayNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 22),
    _SensorProbeHumidityDelayNormal_Type()
)
sensorProbeHumidityDelayNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityDelayNormal.setStatus("mandatory")


class _SensorProbeHumidityIndex_Type(Integer32):
    """Custom type sensorProbeHumidityIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeHumidityIndex_Type.__name__ = "Integer32"
_SensorProbeHumidityIndex_Object = MibTableColumn
sensorProbeHumidityIndex = _SensorProbeHumidityIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 23),
    _SensorProbeHumidityIndex_Type()
)
sensorProbeHumidityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeHumidityIndex.setStatus("mandatory")
_SensorProbeHumidityAtoDAmountMaxVoltage_Type = Integer32
_SensorProbeHumidityAtoDAmountMaxVoltage_Object = MibTableColumn
sensorProbeHumidityAtoDAmountMaxVoltage = _SensorProbeHumidityAtoDAmountMaxVoltage_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 24),
    _SensorProbeHumidityAtoDAmountMaxVoltage_Type()
)
sensorProbeHumidityAtoDAmountMaxVoltage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityAtoDAmountMaxVoltage.setStatus("mandatory")
_SensorProbeHumidityAtoDAmountBaseVoltage_Type = Integer32
_SensorProbeHumidityAtoDAmountBaseVoltage_Object = MibTableColumn
sensorProbeHumidityAtoDAmountBaseVoltage = _SensorProbeHumidityAtoDAmountBaseVoltage_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 25),
    _SensorProbeHumidityAtoDAmountBaseVoltage_Type()
)
sensorProbeHumidityAtoDAmountBaseVoltage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityAtoDAmountBaseVoltage.setStatus("mandatory")


class _SensorProbeHumidityAtoDTypeUnit_Type(Integer32):
    """Custom type sensorProbeHumidityAtoDTypeUnit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("absolute", 1),
          ("percent", 2))
    )


_SensorProbeHumidityAtoDTypeUnit_Type.__name__ = "Integer32"
_SensorProbeHumidityAtoDTypeUnit_Object = MibTableColumn
sensorProbeHumidityAtoDTypeUnit = _SensorProbeHumidityAtoDTypeUnit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 26),
    _SensorProbeHumidityAtoDTypeUnit_Type()
)
sensorProbeHumidityAtoDTypeUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityAtoDTypeUnit.setStatus("mandatory")
_SensorProbeHumidityDcUnit_Type = DisplayString
_SensorProbeHumidityDcUnit_Object = MibTableColumn
sensorProbeHumidityDcUnit = _SensorProbeHumidityDcUnit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 27),
    _SensorProbeHumidityDcUnit_Type()
)
sensorProbeHumidityDcUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityDcUnit.setStatus("mandatory")


class _SensorProbeHumidityAtoDJumper_Type(Integer32):
    """Custom type sensorProbeHumidityAtoDJumper based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-600,
              -400,
              -300,
              -200,
              -100,
              100,
              200,
              300,
              400,
              600)
        )
    )
    namedValues = NamedValues(
        *(("jumperAt-10", -100),
          ("jumperAt-20", -200),
          ("jumperAt-30", -300),
          ("jumperAt-40", -400),
          ("jumperAt-60", -600),
          ("jumperAt10", 100),
          ("jumperAt20", 200),
          ("jumperAt30", 300),
          ("jumperAt40", 400),
          ("jumperAt60", 600))
    )


_SensorProbeHumidityAtoDJumper_Type.__name__ = "Integer32"
_SensorProbeHumidityAtoDJumper_Object = MibTableColumn
sensorProbeHumidityAtoDJumper = _SensorProbeHumidityAtoDJumper_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 28),
    _SensorProbeHumidityAtoDJumper_Type()
)
sensorProbeHumidityAtoDJumper.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityAtoDJumper.setStatus("mandatory")


class _SensorProbeHumidityRelayCycleTime_Type(Integer32):
    """Custom type sensorProbeHumidityRelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeHumidityRelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeHumidityRelayCycleTime_Object = MibTableColumn
sensorProbeHumidityRelayCycleTime = _SensorProbeHumidityRelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 29),
    _SensorProbeHumidityRelayCycleTime_Type()
)
sensorProbeHumidityRelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityRelayCycleTime.setStatus("mandatory")


class _SensorProbeHumidityRelayOnPort_Type(Integer32):
    """Custom type sensorProbeHumidityRelayOnPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SensorProbeHumidityRelayOnPort_Type.__name__ = "Integer32"
_SensorProbeHumidityRelayOnPort_Object = MibTableColumn
sensorProbeHumidityRelayOnPort = _SensorProbeHumidityRelayOnPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 30),
    _SensorProbeHumidityRelayOnPort_Type()
)
sensorProbeHumidityRelayOnPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityRelayOnPort.setStatus("mandatory")


class _SensorProbeHumidityRelayActiveStatus_Type(Integer32):
    """Custom type sensorProbeHumidityRelayActiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("anyError", 7),
          ("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5))
    )


_SensorProbeHumidityRelayActiveStatus_Type.__name__ = "Integer32"
_SensorProbeHumidityRelayActiveStatus_Object = MibTableColumn
sensorProbeHumidityRelayActiveStatus = _SensorProbeHumidityRelayActiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 31),
    _SensorProbeHumidityRelayActiveStatus_Type()
)
sensorProbeHumidityRelayActiveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityRelayActiveStatus.setStatus("mandatory")


class _SensorProbeHumidityRelayAction_Type(Integer32):
    """Custom type sensorProbeHumidityRelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cycle", 2),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeHumidityRelayAction_Type.__name__ = "Integer32"
_SensorProbeHumidityRelayAction_Object = MibTableColumn
sensorProbeHumidityRelayAction = _SensorProbeHumidityRelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 32),
    _SensorProbeHumidityRelayAction_Type()
)
sensorProbeHumidityRelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityRelayAction.setStatus("mandatory")


class _SensorProbeHumidityEmailInterval_Type(Integer32):
    """Custom type sensorProbeHumidityEmailInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 60),
    )


_SensorProbeHumidityEmailInterval_Type.__name__ = "Integer32"
_SensorProbeHumidityEmailInterval_Object = MibTableColumn
sensorProbeHumidityEmailInterval = _SensorProbeHumidityEmailInterval_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 33),
    _SensorProbeHumidityEmailInterval_Type()
)
sensorProbeHumidityEmailInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityEmailInterval.setStatus("mandatory")
_SensorProbeHumidity4to20mAUnit_Type = DisplayString
_SensorProbeHumidity4to20mAUnit_Object = MibTableColumn
sensorProbeHumidity4to20mAUnit = _SensorProbeHumidity4to20mAUnit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 34),
    _SensorProbeHumidity4to20mAUnit_Type()
)
sensorProbeHumidity4to20mAUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidity4to20mAUnit.setStatus("mandatory")
_SensorProbeHumidityIndexCount_Type = Integer32
_SensorProbeHumidityIndexCount_Object = MibTableColumn
sensorProbeHumidityIndexCount = _SensorProbeHumidityIndexCount_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 35),
    _SensorProbeHumidityIndexCount_Type()
)
sensorProbeHumidityIndexCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeHumidityIndexCount.setStatus("mandatory")
_SensorProbeHumidityOffset_Type = Integer32
_SensorProbeHumidityOffset_Object = MibTableColumn
sensorProbeHumidityOffset = _SensorProbeHumidityOffset_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 36),
    _SensorProbeHumidityOffset_Type()
)
sensorProbeHumidityOffset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityOffset.setStatus("mandatory")


class _SensorProbeHumiditySirenCycleTime_Type(Integer32):
    """Custom type sensorProbeHumiditySirenCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeHumiditySirenCycleTime_Type.__name__ = "Integer32"
_SensorProbeHumiditySirenCycleTime_Object = MibTableColumn
sensorProbeHumiditySirenCycleTime = _SensorProbeHumiditySirenCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 37),
    _SensorProbeHumiditySirenCycleTime_Type()
)
sensorProbeHumiditySirenCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumiditySirenCycleTime.setStatus("mandatory")


class _SensorProbeHumiditySirenOnPort_Type(Integer32):
    """Custom type sensorProbeHumiditySirenOnPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SensorProbeHumiditySirenOnPort_Type.__name__ = "Integer32"
_SensorProbeHumiditySirenOnPort_Object = MibTableColumn
sensorProbeHumiditySirenOnPort = _SensorProbeHumiditySirenOnPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 38),
    _SensorProbeHumiditySirenOnPort_Type()
)
sensorProbeHumiditySirenOnPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumiditySirenOnPort.setStatus("mandatory")


class _SensorProbeHumiditySirenActiveStatus_Type(Integer32):
    """Custom type sensorProbeHumiditySirenActiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("anyError", 7),
          ("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5))
    )


_SensorProbeHumiditySirenActiveStatus_Type.__name__ = "Integer32"
_SensorProbeHumiditySirenActiveStatus_Object = MibTableColumn
sensorProbeHumiditySirenActiveStatus = _SensorProbeHumiditySirenActiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 39),
    _SensorProbeHumiditySirenActiveStatus_Type()
)
sensorProbeHumiditySirenActiveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumiditySirenActiveStatus.setStatus("mandatory")


class _SensorProbeHumiditySirenAction_Type(Integer32):
    """Custom type sensorProbeHumiditySirenAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cycle", 2),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeHumiditySirenAction_Type.__name__ = "Integer32"
_SensorProbeHumiditySirenAction_Object = MibTableColumn
sensorProbeHumiditySirenAction = _SensorProbeHumiditySirenAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 40),
    _SensorProbeHumiditySirenAction_Type()
)
sensorProbeHumiditySirenAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumiditySirenAction.setStatus("mandatory")


class _SensorProbeHumidityAcknowledgement_Type(Integer32):
    """Custom type sensorProbeHumidityAcknowledgement based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("ack", 1)
    )


_SensorProbeHumidityAcknowledgement_Type.__name__ = "Integer32"
_SensorProbeHumidityAcknowledgement_Object = MibTableColumn
sensorProbeHumidityAcknowledgement = _SensorProbeHumidityAcknowledgement_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 41),
    _SensorProbeHumidityAcknowledgement_Type()
)
sensorProbeHumidityAcknowledgement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityAcknowledgement.setStatus("mandatory")


class _SensorProbeHumiditySirenDelayAlarm_Type(Integer32):
    """Custom type sensorProbeHumiditySirenDelayAlarm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeHumiditySirenDelayAlarm_Type.__name__ = "Integer32"
_SensorProbeHumiditySirenDelayAlarm_Object = MibTableColumn
sensorProbeHumiditySirenDelayAlarm = _SensorProbeHumiditySirenDelayAlarm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 42),
    _SensorProbeHumiditySirenDelayAlarm_Type()
)
sensorProbeHumiditySirenDelayAlarm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumiditySirenDelayAlarm.setStatus("mandatory")
_SensorProbeHumidityURL_Type = DisplayString
_SensorProbeHumidityURL_Object = MibTableColumn
sensorProbeHumidityURL = _SensorProbeHumidityURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 43),
    _SensorProbeHumidityURL_Type()
)
sensorProbeHumidityURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityURL.setStatus("mandatory")


class _SensorProbeHumidityOpenURL_Type(Integer32):
    """Custom type sensorProbeHumidityOpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeHumidityOpenURL_Type.__name__ = "Integer32"
_SensorProbeHumidityOpenURL_Object = MibTableColumn
sensorProbeHumidityOpenURL = _SensorProbeHumidityOpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 44),
    _SensorProbeHumidityOpenURL_Type()
)
sensorProbeHumidityOpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityOpenURL.setStatus("mandatory")


class _SensorProbeHumidityDatacollectType_Type(Integer32):
    """Custom type sensorProbeHumidityDatacollectType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("average", 1),
          ("highest", 2),
          ("lowest", 3))
    )


_SensorProbeHumidityDatacollectType_Type.__name__ = "Integer32"
_SensorProbeHumidityDatacollectType_Object = MibTableColumn
sensorProbeHumidityDatacollectType = _SensorProbeHumidityDatacollectType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 45),
    _SensorProbeHumidityDatacollectType_Type()
)
sensorProbeHumidityDatacollectType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityDatacollectType.setStatus("mandatory")


class _SensorProbeHumidityContTimeHighCritical_Type(Integer32):
    """Custom type sensorProbeHumidityContTimeHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeHumidityContTimeHighCritical_Type.__name__ = "Integer32"
_SensorProbeHumidityContTimeHighCritical_Object = MibTableColumn
sensorProbeHumidityContTimeHighCritical = _SensorProbeHumidityContTimeHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 46),
    _SensorProbeHumidityContTimeHighCritical_Type()
)
sensorProbeHumidityContTimeHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityContTimeHighCritical.setStatus("mandatory")


class _SensorProbeHumidityContTimeHighWarning_Type(Integer32):
    """Custom type sensorProbeHumidityContTimeHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeHumidityContTimeHighWarning_Type.__name__ = "Integer32"
_SensorProbeHumidityContTimeHighWarning_Object = MibTableColumn
sensorProbeHumidityContTimeHighWarning = _SensorProbeHumidityContTimeHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 47),
    _SensorProbeHumidityContTimeHighWarning_Type()
)
sensorProbeHumidityContTimeHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityContTimeHighWarning.setStatus("mandatory")


class _SensorProbeHumidityContTimeNormal_Type(Integer32):
    """Custom type sensorProbeHumidityContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeHumidityContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeHumidityContTimeNormal_Object = MibTableColumn
sensorProbeHumidityContTimeNormal = _SensorProbeHumidityContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 48),
    _SensorProbeHumidityContTimeNormal_Type()
)
sensorProbeHumidityContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityContTimeNormal.setStatus("mandatory")


class _SensorProbeHumidityContTimeLowWarning_Type(Integer32):
    """Custom type sensorProbeHumidityContTimeLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeHumidityContTimeLowWarning_Type.__name__ = "Integer32"
_SensorProbeHumidityContTimeLowWarning_Object = MibTableColumn
sensorProbeHumidityContTimeLowWarning = _SensorProbeHumidityContTimeLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 49),
    _SensorProbeHumidityContTimeLowWarning_Type()
)
sensorProbeHumidityContTimeLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityContTimeLowWarning.setStatus("mandatory")


class _SensorProbeHumidityContTimeLowCritical_Type(Integer32):
    """Custom type sensorProbeHumidityContTimeLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeHumidityContTimeLowCritical_Type.__name__ = "Integer32"
_SensorProbeHumidityContTimeLowCritical_Object = MibTableColumn
sensorProbeHumidityContTimeLowCritical = _SensorProbeHumidityContTimeLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 50),
    _SensorProbeHumidityContTimeLowCritical_Type()
)
sensorProbeHumidityContTimeLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityContTimeLowCritical.setStatus("mandatory")


class _SensorProbeHumidityContTimeSensorError_Type(Integer32):
    """Custom type sensorProbeHumidityContTimeSensorError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeHumidityContTimeSensorError_Type.__name__ = "Integer32"
_SensorProbeHumidityContTimeSensorError_Object = MibTableColumn
sensorProbeHumidityContTimeSensorError = _SensorProbeHumidityContTimeSensorError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 51),
    _SensorProbeHumidityContTimeSensorError_Type()
)
sensorProbeHumidityContTimeSensorError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityContTimeSensorError.setStatus("mandatory")


class _SensorProbeHumidityCalendar_Type(Integer32):
    """Custom type sensorProbeHumidityCalendar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeHumidityCalendar_Type.__name__ = "Integer32"
_SensorProbeHumidityCalendar_Object = MibTableColumn
sensorProbeHumidityCalendar = _SensorProbeHumidityCalendar_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 52),
    _SensorProbeHumidityCalendar_Type()
)
sensorProbeHumidityCalendar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumidityCalendar.setStatus("mandatory")


class _SensorProbeHumiditySendNormalMail_Type(Integer32):
    """Custom type sensorProbeHumiditySendNormalMail based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeHumiditySendNormalMail_Type.__name__ = "Integer32"
_SensorProbeHumiditySendNormalMail_Object = MibTableColumn
sensorProbeHumiditySendNormalMail = _SensorProbeHumiditySendNormalMail_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 53),
    _SensorProbeHumiditySendNormalMail_Type()
)
sensorProbeHumiditySendNormalMail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumiditySendNormalMail.setStatus("mandatory")


class _SensorProbeHumiditySendTrap_Type(Integer32):
    """Custom type sensorProbeHumiditySendTrap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeHumiditySendTrap_Type.__name__ = "Integer32"
_SensorProbeHumiditySendTrap_Object = MibTableColumn
sensorProbeHumiditySendTrap = _SensorProbeHumiditySendTrap_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 54),
    _SensorProbeHumiditySendTrap_Type()
)
sensorProbeHumiditySendTrap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumiditySendTrap.setStatus("mandatory")


class _SensorProbeHumiditySendMail_Type(Integer32):
    """Custom type sensorProbeHumiditySendMail based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeHumiditySendMail_Type.__name__ = "Integer32"
_SensorProbeHumiditySendMail_Object = MibTableColumn
sensorProbeHumiditySendMail = _SensorProbeHumiditySendMail_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 55),
    _SensorProbeHumiditySendMail_Type()
)
sensorProbeHumiditySendMail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeHumiditySendMail.setStatus("mandatory")
_SensorProbeSwitchTable_Object = MibTable
sensorProbeSwitchTable = _SensorProbeSwitchTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18)
)
if mibBuilder.loadTexts:
    sensorProbeSwitchTable.setStatus("mandatory")
_SensorProbeSwitchEntry_Object = MibTableRow
sensorProbeSwitchEntry = _SensorProbeSwitchEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1)
)
sensorProbeSwitchEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeSwitchIndex"),
)
if mibBuilder.loadTexts:
    sensorProbeSwitchEntry.setStatus("mandatory")
_SensorProbeSwitchDescription_Type = DisplayString
_SensorProbeSwitchDescription_Object = MibTableColumn
sensorProbeSwitchDescription = _SensorProbeSwitchDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 1),
    _SensorProbeSwitchDescription_Type()
)
sensorProbeSwitchDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchDescription.setStatus("mandatory")
_SensorProbeSwitchLocation_Type = DisplayString
_SensorProbeSwitchLocation_Object = MibTableColumn
sensorProbeSwitchLocation = _SensorProbeSwitchLocation_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 2),
    _SensorProbeSwitchLocation_Type()
)
sensorProbeSwitchLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchLocation.setStatus("mandatory")


class _SensorProbeSwitchStatus_Type(Integer32):
    """Custom type sensorProbeSwitchStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorProbeSwitchStatus_Type.__name__ = "Integer32"
_SensorProbeSwitchStatus_Object = MibTableColumn
sensorProbeSwitchStatus = _SensorProbeSwitchStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 3),
    _SensorProbeSwitchStatus_Type()
)
sensorProbeSwitchStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeSwitchStatus.setStatus("mandatory")


class _SensorProbeSwitchOnline_Type(Integer32):
    """Custom type sensorProbeSwitchOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeSwitchOnline_Type.__name__ = "Integer32"
_SensorProbeSwitchOnline_Object = MibTableColumn
sensorProbeSwitchOnline = _SensorProbeSwitchOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 4),
    _SensorProbeSwitchOnline_Type()
)
sensorProbeSwitchOnline.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeSwitchOnline.setStatus("mandatory")


class _SensorProbeSwitchGoOnline_Type(Integer32):
    """Custom type sensorProbeSwitchGoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeSwitchGoOnline_Type.__name__ = "Integer32"
_SensorProbeSwitchGoOnline_Object = MibTableColumn
sensorProbeSwitchGoOnline = _SensorProbeSwitchGoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 5),
    _SensorProbeSwitchGoOnline_Type()
)
sensorProbeSwitchGoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchGoOnline.setStatus("mandatory")


class _SensorProbeSwitchDirection_Type(Integer32):
    """Custom type sensorProbeSwitchDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("input", 0),
          ("output", 1))
    )


_SensorProbeSwitchDirection_Type.__name__ = "Integer32"
_SensorProbeSwitchDirection_Object = MibTableColumn
sensorProbeSwitchDirection = _SensorProbeSwitchDirection_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 6),
    _SensorProbeSwitchDirection_Type()
)
sensorProbeSwitchDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchDirection.setStatus("mandatory")


class _SensorProbeSwitchNormalState_Type(Integer32):
    """Custom type sensorProbeSwitchNormalState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("closed", 0),
          ("open", 1))
    )


_SensorProbeSwitchNormalState_Type.__name__ = "Integer32"
_SensorProbeSwitchNormalState_Object = MibTableColumn
sensorProbeSwitchNormalState = _SensorProbeSwitchNormalState_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 7),
    _SensorProbeSwitchNormalState_Type()
)
sensorProbeSwitchNormalState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchNormalState.setStatus("mandatory")


class _SensorProbeSwitchOutputLevel_Type(Integer32):
    """Custom type sensorProbeSwitchOutputLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("high", 1),
          ("low", 0))
    )


_SensorProbeSwitchOutputLevel_Type.__name__ = "Integer32"
_SensorProbeSwitchOutputLevel_Object = MibTableColumn
sensorProbeSwitchOutputLevel = _SensorProbeSwitchOutputLevel_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 8),
    _SensorProbeSwitchOutputLevel_Type()
)
sensorProbeSwitchOutputLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchOutputLevel.setStatus("mandatory")


class _SensorProbeSensorType_Type(Integer32):
    """Custom type sensorProbeSensorType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              8,
              9,
              10,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("airflow", 8),
          ("atod", 5),
          ("dryContact", 10),
          ("fourTo20mA", 2),
          ("humidity", 3),
          ("motion", 14),
          ("relay", 13),
          ("security", 6),
          ("siren", 9),
          ("temperature", 1),
          ("voltage", 12),
          ("water", 4))
    )


_SensorProbeSensorType_Type.__name__ = "Integer32"
_SensorProbeSensorType_Object = MibTableColumn
sensorProbeSensorType = _SensorProbeSensorType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 9),
    _SensorProbeSensorType_Type()
)
sensorProbeSensorType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSensorType.setStatus("mandatory")


class _SensorProbeSwitchEmailTrapLimit_Type(Integer32):
    """Custom type sensorProbeSwitchEmailTrapLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeSwitchEmailTrapLimit_Type.__name__ = "Integer32"
_SensorProbeSwitchEmailTrapLimit_Object = MibTableColumn
sensorProbeSwitchEmailTrapLimit = _SensorProbeSwitchEmailTrapLimit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 11),
    _SensorProbeSwitchEmailTrapLimit_Type()
)
sensorProbeSwitchEmailTrapLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchEmailTrapLimit.setStatus("mandatory")
_SensorProbeSwitchEmailTrapSchedule_Type = DisplayString
_SensorProbeSwitchEmailTrapSchedule_Object = MibTableColumn
sensorProbeSwitchEmailTrapSchedule = _SensorProbeSwitchEmailTrapSchedule_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 12),
    _SensorProbeSwitchEmailTrapSchedule_Type()
)
sensorProbeSwitchEmailTrapSchedule.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchEmailTrapSchedule.setStatus("mandatory")


class _SensorProbeSwitchEmailTrapInterval_Type(Integer32):
    """Custom type sensorProbeSwitchEmailTrapInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 60),
    )


_SensorProbeSwitchEmailTrapInterval_Type.__name__ = "Integer32"
_SensorProbeSwitchEmailTrapInterval_Object = MibTableColumn
sensorProbeSwitchEmailTrapInterval = _SensorProbeSwitchEmailTrapInterval_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 13),
    _SensorProbeSwitchEmailTrapInterval_Type()
)
sensorProbeSwitchEmailTrapInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchEmailTrapInterval.setStatus("mandatory")


class _SensorProbeSwitchSendNormalTrap_Type(Integer32):
    """Custom type sensorProbeSwitchSendNormalTrap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeSwitchSendNormalTrap_Type.__name__ = "Integer32"
_SensorProbeSwitchSendNormalTrap_Object = MibTableColumn
sensorProbeSwitchSendNormalTrap = _SensorProbeSwitchSendNormalTrap_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 14),
    _SensorProbeSwitchSendNormalTrap_Type()
)
sensorProbeSwitchSendNormalTrap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchSendNormalTrap.setStatus("mandatory")


class _SensorProbeSwitchDelayError_Type(Integer32):
    """Custom type sensorProbeSwitchDelayError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeSwitchDelayError_Type.__name__ = "Integer32"
_SensorProbeSwitchDelayError_Object = MibTableColumn
sensorProbeSwitchDelayError = _SensorProbeSwitchDelayError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 15),
    _SensorProbeSwitchDelayError_Type()
)
sensorProbeSwitchDelayError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchDelayError.setStatus("mandatory")


class _SensorProbeSwitchDelayNormal_Type(Integer32):
    """Custom type sensorProbeSwitchDelayNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeSwitchDelayNormal_Type.__name__ = "Integer32"
_SensorProbeSwitchDelayNormal_Object = MibTableColumn
sensorProbeSwitchDelayNormal = _SensorProbeSwitchDelayNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 16),
    _SensorProbeSwitchDelayNormal_Type()
)
sensorProbeSwitchDelayNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchDelayNormal.setStatus("mandatory")


class _SensorProbeSwitchIndex_Type(Integer32):
    """Custom type sensorProbeSwitchIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 67),
    )


_SensorProbeSwitchIndex_Type.__name__ = "Integer32"
_SensorProbeSwitchIndex_Object = MibTableColumn
sensorProbeSwitchIndex = _SensorProbeSwitchIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 17),
    _SensorProbeSwitchIndex_Type()
)
sensorProbeSwitchIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeSwitchIndex.setStatus("mandatory")


class _SensorProbeSwitchRelayCycleTime_Type(Integer32):
    """Custom type sensorProbeSwitchRelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeSwitchRelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeSwitchRelayCycleTime_Object = MibTableColumn
sensorProbeSwitchRelayCycleTime = _SensorProbeSwitchRelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 18),
    _SensorProbeSwitchRelayCycleTime_Type()
)
sensorProbeSwitchRelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchRelayCycleTime.setStatus("mandatory")


class _SensorProbeSwitchRelayOnPort_Type(Integer32):
    """Custom type sensorProbeSwitchRelayOnPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SensorProbeSwitchRelayOnPort_Type.__name__ = "Integer32"
_SensorProbeSwitchRelayOnPort_Object = MibTableColumn
sensorProbeSwitchRelayOnPort = _SensorProbeSwitchRelayOnPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 19),
    _SensorProbeSwitchRelayOnPort_Type()
)
sensorProbeSwitchRelayOnPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchRelayOnPort.setStatus("mandatory")


class _SensorProbeSwitchRelayActiveStatus_Type(Integer32):
    """Custom type sensorProbeSwitchRelayActiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("anyError", 7),
          ("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5))
    )


_SensorProbeSwitchRelayActiveStatus_Type.__name__ = "Integer32"
_SensorProbeSwitchRelayActiveStatus_Object = MibTableColumn
sensorProbeSwitchRelayActiveStatus = _SensorProbeSwitchRelayActiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 20),
    _SensorProbeSwitchRelayActiveStatus_Type()
)
sensorProbeSwitchRelayActiveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchRelayActiveStatus.setStatus("mandatory")


class _SensorProbeSwitchRelayAction_Type(Integer32):
    """Custom type sensorProbeSwitchRelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cycle", 2),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeSwitchRelayAction_Type.__name__ = "Integer32"
_SensorProbeSwitchRelayAction_Object = MibTableColumn
sensorProbeSwitchRelayAction = _SensorProbeSwitchRelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 21),
    _SensorProbeSwitchRelayAction_Type()
)
sensorProbeSwitchRelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchRelayAction.setStatus("mandatory")


class _SensorProbeSwitchEmailInterval_Type(Integer32):
    """Custom type sensorProbeSwitchEmailInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 60),
    )


_SensorProbeSwitchEmailInterval_Type.__name__ = "Integer32"
_SensorProbeSwitchEmailInterval_Object = MibTableColumn
sensorProbeSwitchEmailInterval = _SensorProbeSwitchEmailInterval_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 22),
    _SensorProbeSwitchEmailInterval_Type()
)
sensorProbeSwitchEmailInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchEmailInterval.setStatus("mandatory")


class _SensorProbeSwitchRelayOutputVoltStatus_Type(Integer32):
    """Custom type sensorProbeSwitchRelayOutputVoltStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(7,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("noVoltagePresent", 10),
          ("sensorError", 7),
          ("voltagePresent", 11))
    )


_SensorProbeSwitchRelayOutputVoltStatus_Type.__name__ = "Integer32"
_SensorProbeSwitchRelayOutputVoltStatus_Object = MibTableColumn
sensorProbeSwitchRelayOutputVoltStatus = _SensorProbeSwitchRelayOutputVoltStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 23),
    _SensorProbeSwitchRelayOutputVoltStatus_Type()
)
sensorProbeSwitchRelayOutputVoltStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeSwitchRelayOutputVoltStatus.setStatus("mandatory")


class _SensorProbeSwitchManualRelayCycleTime_Type(Integer32):
    """Custom type sensorProbeSwitchManualRelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeSwitchManualRelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeSwitchManualRelayCycleTime_Object = MibTableColumn
sensorProbeSwitchManualRelayCycleTime = _SensorProbeSwitchManualRelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 24),
    _SensorProbeSwitchManualRelayCycleTime_Type()
)
sensorProbeSwitchManualRelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchManualRelayCycleTime.setStatus("mandatory")


class _SensorProbeSwitchManualRelayAction_Type(Integer32):
    """Custom type sensorProbeSwitchManualRelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("allow-sensor-control", 1),
          ("cycle-Off-On-Off", 7),
          ("cycle-On-Off-On", 8),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeSwitchManualRelayAction_Type.__name__ = "Integer32"
_SensorProbeSwitchManualRelayAction_Object = MibTableColumn
sensorProbeSwitchManualRelayAction = _SensorProbeSwitchManualRelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 25),
    _SensorProbeSwitchManualRelayAction_Type()
)
sensorProbeSwitchManualRelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchManualRelayAction.setStatus("mandatory")
_SensorProbeSwitchRelayDescOn_Type = DisplayString
_SensorProbeSwitchRelayDescOn_Object = MibTableColumn
sensorProbeSwitchRelayDescOn = _SensorProbeSwitchRelayDescOn_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 26),
    _SensorProbeSwitchRelayDescOn_Type()
)
sensorProbeSwitchRelayDescOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchRelayDescOn.setStatus("mandatory")
_SensorProbeSwitchRelayDescOff_Type = DisplayString
_SensorProbeSwitchRelayDescOff_Object = MibTableColumn
sensorProbeSwitchRelayDescOff = _SensorProbeSwitchRelayDescOff_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 27),
    _SensorProbeSwitchRelayDescOff_Type()
)
sensorProbeSwitchRelayDescOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchRelayDescOff.setStatus("mandatory")
_SensorProbeSwitchIndexCount_Type = Integer32
_SensorProbeSwitchIndexCount_Object = MibTableColumn
sensorProbeSwitchIndexCount = _SensorProbeSwitchIndexCount_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 28),
    _SensorProbeSwitchIndexCount_Type()
)
sensorProbeSwitchIndexCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeSwitchIndexCount.setStatus("mandatory")


class _SensorProbeSwitchSirenCycleTime_Type(Integer32):
    """Custom type sensorProbeSwitchSirenCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeSwitchSirenCycleTime_Type.__name__ = "Integer32"
_SensorProbeSwitchSirenCycleTime_Object = MibTableColumn
sensorProbeSwitchSirenCycleTime = _SensorProbeSwitchSirenCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 29),
    _SensorProbeSwitchSirenCycleTime_Type()
)
sensorProbeSwitchSirenCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchSirenCycleTime.setStatus("mandatory")


class _SensorProbeSwitchSirenOnPort_Type(Integer32):
    """Custom type sensorProbeSwitchSirenOnPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SensorProbeSwitchSirenOnPort_Type.__name__ = "Integer32"
_SensorProbeSwitchSirenOnPort_Object = MibTableColumn
sensorProbeSwitchSirenOnPort = _SensorProbeSwitchSirenOnPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 30),
    _SensorProbeSwitchSirenOnPort_Type()
)
sensorProbeSwitchSirenOnPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchSirenOnPort.setStatus("mandatory")


class _SensorProbeSwitchSirenActiveStatus_Type(Integer32):
    """Custom type sensorProbeSwitchSirenActiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("anyError", 7),
          ("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5))
    )


_SensorProbeSwitchSirenActiveStatus_Type.__name__ = "Integer32"
_SensorProbeSwitchSirenActiveStatus_Object = MibTableColumn
sensorProbeSwitchSirenActiveStatus = _SensorProbeSwitchSirenActiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 31),
    _SensorProbeSwitchSirenActiveStatus_Type()
)
sensorProbeSwitchSirenActiveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchSirenActiveStatus.setStatus("mandatory")


class _SensorProbeSwitchSirenAction_Type(Integer32):
    """Custom type sensorProbeSwitchSirenAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cycle", 2),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeSwitchSirenAction_Type.__name__ = "Integer32"
_SensorProbeSwitchSirenAction_Object = MibTableColumn
sensorProbeSwitchSirenAction = _SensorProbeSwitchSirenAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 32),
    _SensorProbeSwitchSirenAction_Type()
)
sensorProbeSwitchSirenAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchSirenAction.setStatus("mandatory")


class _SensorProbeSwitchAcknowledgement_Type(Integer32):
    """Custom type sensorProbeSwitchAcknowledgement based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("ack", 1)
    )


_SensorProbeSwitchAcknowledgement_Type.__name__ = "Integer32"
_SensorProbeSwitchAcknowledgement_Object = MibTableColumn
sensorProbeSwitchAcknowledgement = _SensorProbeSwitchAcknowledgement_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 33),
    _SensorProbeSwitchAcknowledgement_Type()
)
sensorProbeSwitchAcknowledgement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchAcknowledgement.setStatus("mandatory")


class _SensorProbeSwitchSirenDelayAlarm_Type(Integer32):
    """Custom type sensorProbeSwitchSirenDelayAlarm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeSwitchSirenDelayAlarm_Type.__name__ = "Integer32"
_SensorProbeSwitchSirenDelayAlarm_Object = MibTableColumn
sensorProbeSwitchSirenDelayAlarm = _SensorProbeSwitchSirenDelayAlarm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 34),
    _SensorProbeSwitchSirenDelayAlarm_Type()
)
sensorProbeSwitchSirenDelayAlarm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchSirenDelayAlarm.setStatus("mandatory")
_SensorProbeSwitchURL_Type = DisplayString
_SensorProbeSwitchURL_Object = MibTableColumn
sensorProbeSwitchURL = _SensorProbeSwitchURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 35),
    _SensorProbeSwitchURL_Type()
)
sensorProbeSwitchURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchURL.setStatus("mandatory")


class _SensorProbeSwitchOpenURL_Type(Integer32):
    """Custom type sensorProbeSwitchOpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeSwitchOpenURL_Type.__name__ = "Integer32"
_SensorProbeSwitchOpenURL_Object = MibTableColumn
sensorProbeSwitchOpenURL = _SensorProbeSwitchOpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 36),
    _SensorProbeSwitchOpenURL_Type()
)
sensorProbeSwitchOpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchOpenURL.setStatus("mandatory")


class _SensorProbeSwitchContTimeHighCritical_Type(Integer32):
    """Custom type sensorProbeSwitchContTimeHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeSwitchContTimeHighCritical_Type.__name__ = "Integer32"
_SensorProbeSwitchContTimeHighCritical_Object = MibTableColumn
sensorProbeSwitchContTimeHighCritical = _SensorProbeSwitchContTimeHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 37),
    _SensorProbeSwitchContTimeHighCritical_Type()
)
sensorProbeSwitchContTimeHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchContTimeHighCritical.setStatus("mandatory")


class _SensorProbeSwitchContTimeNormal_Type(Integer32):
    """Custom type sensorProbeSwitchContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeSwitchContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeSwitchContTimeNormal_Object = MibTableColumn
sensorProbeSwitchContTimeNormal = _SensorProbeSwitchContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 39),
    _SensorProbeSwitchContTimeNormal_Type()
)
sensorProbeSwitchContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchContTimeNormal.setStatus("mandatory")


class _SensorProbeSwitchCalendar_Type(Integer32):
    """Custom type sensorProbeSwitchCalendar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeSwitchCalendar_Type.__name__ = "Integer32"
_SensorProbeSwitchCalendar_Object = MibTableColumn
sensorProbeSwitchCalendar = _SensorProbeSwitchCalendar_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 43),
    _SensorProbeSwitchCalendar_Type()
)
sensorProbeSwitchCalendar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchCalendar.setStatus("mandatory")


class _SensorProbeSwitchRelayControlMode_Type(Integer32):
    """Custom type sensorProbeSwitchRelayControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("manual-control", 0),
          ("notification-control", 1),
          ("thermostat-control", 3),
          ("time-control", 2))
    )


_SensorProbeSwitchRelayControlMode_Type.__name__ = "Integer32"
_SensorProbeSwitchRelayControlMode_Object = MibTableColumn
sensorProbeSwitchRelayControlMode = _SensorProbeSwitchRelayControlMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 44),
    _SensorProbeSwitchRelayControlMode_Type()
)
sensorProbeSwitchRelayControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchRelayControlMode.setStatus("mandatory")


class _SensorProbeSwitchSirenControlMode_Type(Integer32):
    """Custom type sensorProbeSwitchSirenControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("manual-control", 0),
          ("notification-control", 1),
          ("time-control", 2))
    )


_SensorProbeSwitchSirenControlMode_Type.__name__ = "Integer32"
_SensorProbeSwitchSirenControlMode_Object = MibTableColumn
sensorProbeSwitchSirenControlMode = _SensorProbeSwitchSirenControlMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 45),
    _SensorProbeSwitchSirenControlMode_Type()
)
sensorProbeSwitchSirenControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchSirenControlMode.setStatus("mandatory")


class _SensorProbeSwitchSendNormalMail_Type(Integer32):
    """Custom type sensorProbeSwitchSendNormalMail based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeSwitchSendNormalMail_Type.__name__ = "Integer32"
_SensorProbeSwitchSendNormalMail_Object = MibTableColumn
sensorProbeSwitchSendNormalMail = _SensorProbeSwitchSendNormalMail_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 46),
    _SensorProbeSwitchSendNormalMail_Type()
)
sensorProbeSwitchSendNormalMail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchSendNormalMail.setStatus("mandatory")


class _SensorProbeSwitchSendTrap_Type(Integer32):
    """Custom type sensorProbeSwitchSendTrap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeSwitchSendTrap_Type.__name__ = "Integer32"
_SensorProbeSwitchSendTrap_Object = MibTableColumn
sensorProbeSwitchSendTrap = _SensorProbeSwitchSendTrap_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 47),
    _SensorProbeSwitchSendTrap_Type()
)
sensorProbeSwitchSendTrap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchSendTrap.setStatus("mandatory")


class _SensorProbeSwitchSendMail_Type(Integer32):
    """Custom type sensorProbeSwitchSendMail based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeSwitchSendMail_Type.__name__ = "Integer32"
_SensorProbeSwitchSendMail_Object = MibTableColumn
sensorProbeSwitchSendMail = _SensorProbeSwitchSendMail_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 48),
    _SensorProbeSwitchSendMail_Type()
)
sensorProbeSwitchSendMail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchSendMail.setStatus("mandatory")
_SensorProbeSwitchWaterRopeLeakLocation_Type = Integer32
_SensorProbeSwitchWaterRopeLeakLocation_Object = MibTableColumn
sensorProbeSwitchWaterRopeLeakLocation = _SensorProbeSwitchWaterRopeLeakLocation_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 49),
    _SensorProbeSwitchWaterRopeLeakLocation_Type()
)
sensorProbeSwitchWaterRopeLeakLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeSwitchWaterRopeLeakLocation.setStatus("mandatory")
_SensorProbeSwitchWaterRopeLength_Type = Integer32
_SensorProbeSwitchWaterRopeLength_Object = MibTableColumn
sensorProbeSwitchWaterRopeLength = _SensorProbeSwitchWaterRopeLength_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 50),
    _SensorProbeSwitchWaterRopeLength_Type()
)
sensorProbeSwitchWaterRopeLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeSwitchWaterRopeLength.setStatus("mandatory")


class _SensorProbeSwitchWaterRopeUnit_Type(Integer32):
    """Custom type sensorProbeSwitchWaterRopeUnit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("feet", 1),
          ("meters", 0))
    )


_SensorProbeSwitchWaterRopeUnit_Type.__name__ = "Integer32"
_SensorProbeSwitchWaterRopeUnit_Object = MibTableColumn
sensorProbeSwitchWaterRopeUnit = _SensorProbeSwitchWaterRopeUnit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 51),
    _SensorProbeSwitchWaterRopeUnit_Type()
)
sensorProbeSwitchWaterRopeUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchWaterRopeUnit.setStatus("mandatory")


class _SensorProbeSwitchWaterRopeImpedance_Type(Integer32):
    """Custom type sensorProbeSwitchWaterRopeImpedance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeSwitchWaterRopeImpedance_Type.__name__ = "Integer32"
_SensorProbeSwitchWaterRopeImpedance_Object = MibTableColumn
sensorProbeSwitchWaterRopeImpedance = _SensorProbeSwitchWaterRopeImpedance_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 52),
    _SensorProbeSwitchWaterRopeImpedance_Type()
)
sensorProbeSwitchWaterRopeImpedance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchWaterRopeImpedance.setStatus("mandatory")
_SensorProbeSwitchWaterRopeRaw_Type = Integer32
_SensorProbeSwitchWaterRopeRaw_Object = MibTableColumn
sensorProbeSwitchWaterRopeRaw = _SensorProbeSwitchWaterRopeRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 53),
    _SensorProbeSwitchWaterRopeRaw_Type()
)
sensorProbeSwitchWaterRopeRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeSwitchWaterRopeRaw.setStatus("mandatory")


class _SensorProbeSwitchWaterRopeType_Type(Integer32):
    """Custom type sensorProbeSwitchWaterRopeType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("custom", 0),
          ("fuel", 2),
          ("water", 1))
    )


_SensorProbeSwitchWaterRopeType_Type.__name__ = "Integer32"
_SensorProbeSwitchWaterRopeType_Object = MibTableColumn
sensorProbeSwitchWaterRopeType = _SensorProbeSwitchWaterRopeType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 55),
    _SensorProbeSwitchWaterRopeType_Type()
)
sensorProbeSwitchWaterRopeType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSwitchWaterRopeType.setStatus("mandatory")
_SensorProbeOtherSensor_ObjectIdentity = ObjectIdentity
sensorProbeOtherSensor = _SensorProbeOtherSensor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19)
)
_SensorProbeIRMSSensor_ObjectIdentity = ObjectIdentity
sensorProbeIRMSSensor = _SensorProbeIRMSSensor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26)
)
_SensorProbeIRMSSensorNumber_Type = Integer32
_SensorProbeIRMSSensorNumber_Object = MibScalar
sensorProbeIRMSSensorNumber = _SensorProbeIRMSSensorNumber_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 1),
    _SensorProbeIRMSSensorNumber_Type()
)
sensorProbeIRMSSensorNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeIRMSSensorNumber.setStatus("mandatory")
_SensorProbeIRMSSensorTable_Object = MibTable
sensorProbeIRMSSensorTable = _SensorProbeIRMSSensorTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2)
)
if mibBuilder.loadTexts:
    sensorProbeIRMSSensorTable.setStatus("mandatory")
_SensorProbeIRMSSensorEntry_Object = MibTableRow
sensorProbeIRMSSensorEntry = _SensorProbeIRMSSensorEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1)
)
sensorProbeIRMSSensorEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeIRMSSensorIndex"),
)
if mibBuilder.loadTexts:
    sensorProbeIRMSSensorEntry.setStatus("mandatory")


class _SensorProbeIRMSSensorIndex_Type(Integer32):
    """Custom type sensorProbeIRMSSensorIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeIRMSSensorIndex_Type.__name__ = "Integer32"
_SensorProbeIRMSSensorIndex_Object = MibTableColumn
sensorProbeIRMSSensorIndex = _SensorProbeIRMSSensorIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 1),
    _SensorProbeIRMSSensorIndex_Type()
)
sensorProbeIRMSSensorIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeIRMSSensorIndex.setStatus("mandatory")
_SensorProbeIRMSDescription_Type = DisplayString
_SensorProbeIRMSDescription_Object = MibTableColumn
sensorProbeIRMSDescription = _SensorProbeIRMSDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 2),
    _SensorProbeIRMSDescription_Type()
)
sensorProbeIRMSDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSDescription.setStatus("mandatory")


class _SensorProbeIRMSPercent_Type(Integer32):
    """Custom type sensorProbeIRMSPercent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-32768, 32767),
    )


_SensorProbeIRMSPercent_Type.__name__ = "Integer32"
_SensorProbeIRMSPercent_Object = MibTableColumn
sensorProbeIRMSPercent = _SensorProbeIRMSPercent_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 3),
    _SensorProbeIRMSPercent_Type()
)
sensorProbeIRMSPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeIRMSPercent.setStatus("mandatory")


class _SensorProbeIRMSStatus_Type(Integer32):
    """Custom type sensorProbeIRMSStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorProbeIRMSStatus_Type.__name__ = "Integer32"
_SensorProbeIRMSStatus_Object = MibTableColumn
sensorProbeIRMSStatus = _SensorProbeIRMSStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 4),
    _SensorProbeIRMSStatus_Type()
)
sensorProbeIRMSStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeIRMSStatus.setStatus("mandatory")


class _SensorProbeIRMSOnline_Type(Integer32):
    """Custom type sensorProbeIRMSOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeIRMSOnline_Type.__name__ = "Integer32"
_SensorProbeIRMSOnline_Object = MibTableColumn
sensorProbeIRMSOnline = _SensorProbeIRMSOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 5),
    _SensorProbeIRMSOnline_Type()
)
sensorProbeIRMSOnline.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeIRMSOnline.setStatus("mandatory")


class _SensorProbeIRMSGoOnline_Type(Integer32):
    """Custom type sensorProbeIRMSGoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeIRMSGoOnline_Type.__name__ = "Integer32"
_SensorProbeIRMSGoOnline_Object = MibTableColumn
sensorProbeIRMSGoOnline = _SensorProbeIRMSGoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 6),
    _SensorProbeIRMSGoOnline_Type()
)
sensorProbeIRMSGoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSGoOnline.setStatus("mandatory")
_SensorProbeIRMSHighWarning_Type = Integer32
_SensorProbeIRMSHighWarning_Object = MibTableColumn
sensorProbeIRMSHighWarning = _SensorProbeIRMSHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 7),
    _SensorProbeIRMSHighWarning_Type()
)
sensorProbeIRMSHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSHighWarning.setStatus("mandatory")
_SensorProbeIRMSHighCritical_Type = Integer32
_SensorProbeIRMSHighCritical_Object = MibTableColumn
sensorProbeIRMSHighCritical = _SensorProbeIRMSHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 8),
    _SensorProbeIRMSHighCritical_Type()
)
sensorProbeIRMSHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSHighCritical.setStatus("mandatory")
_SensorProbeIRMSLowWarning_Type = Integer32
_SensorProbeIRMSLowWarning_Object = MibTableColumn
sensorProbeIRMSLowWarning = _SensorProbeIRMSLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 9),
    _SensorProbeIRMSLowWarning_Type()
)
sensorProbeIRMSLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSLowWarning.setStatus("mandatory")
_SensorProbeIRMSLowCritical_Type = Integer32
_SensorProbeIRMSLowCritical_Object = MibTableColumn
sensorProbeIRMSLowCritical = _SensorProbeIRMSLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 10),
    _SensorProbeIRMSLowCritical_Type()
)
sensorProbeIRMSLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSLowCritical.setStatus("mandatory")
_SensorProbeIRMSRearm_Type = Integer32
_SensorProbeIRMSRearm_Object = MibTableColumn
sensorProbeIRMSRearm = _SensorProbeIRMSRearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 11),
    _SensorProbeIRMSRearm_Type()
)
sensorProbeIRMSRearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSRearm.setStatus("mandatory")
_SensorProbeIRMSRaw_Type = Integer32
_SensorProbeIRMSRaw_Object = MibTableColumn
sensorProbeIRMSRaw = _SensorProbeIRMSRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 13),
    _SensorProbeIRMSRaw_Type()
)
sensorProbeIRMSRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeIRMSRaw.setStatus("mandatory")


class _SensorProbeIRMSEmailTrapLimit_Type(Integer32):
    """Custom type sensorProbeIRMSEmailTrapLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeIRMSEmailTrapLimit_Type.__name__ = "Integer32"
_SensorProbeIRMSEmailTrapLimit_Object = MibTableColumn
sensorProbeIRMSEmailTrapLimit = _SensorProbeIRMSEmailTrapLimit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 17),
    _SensorProbeIRMSEmailTrapLimit_Type()
)
sensorProbeIRMSEmailTrapLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSEmailTrapLimit.setStatus("mandatory")


class _SensorProbeIRMSDelayError_Type(Integer32):
    """Custom type sensorProbeIRMSDelayError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeIRMSDelayError_Type.__name__ = "Integer32"
_SensorProbeIRMSDelayError_Object = MibTableColumn
sensorProbeIRMSDelayError = _SensorProbeIRMSDelayError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 21),
    _SensorProbeIRMSDelayError_Type()
)
sensorProbeIRMSDelayError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSDelayError.setStatus("mandatory")


class _SensorProbeIRMSDelayNormal_Type(Integer32):
    """Custom type sensorProbeIRMSDelayNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeIRMSDelayNormal_Type.__name__ = "Integer32"
_SensorProbeIRMSDelayNormal_Object = MibTableColumn
sensorProbeIRMSDelayNormal = _SensorProbeIRMSDelayNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 22),
    _SensorProbeIRMSDelayNormal_Type()
)
sensorProbeIRMSDelayNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSDelayNormal.setStatus("mandatory")


class _SensorProbeIRMSRelayCycleTime_Type(Integer32):
    """Custom type sensorProbeIRMSRelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeIRMSRelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeIRMSRelayCycleTime_Object = MibTableColumn
sensorProbeIRMSRelayCycleTime = _SensorProbeIRMSRelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 29),
    _SensorProbeIRMSRelayCycleTime_Type()
)
sensorProbeIRMSRelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSRelayCycleTime.setStatus("mandatory")


class _SensorProbeIRMSRelayOnPort_Type(Integer32):
    """Custom type sensorProbeIRMSRelayOnPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SensorProbeIRMSRelayOnPort_Type.__name__ = "Integer32"
_SensorProbeIRMSRelayOnPort_Object = MibTableColumn
sensorProbeIRMSRelayOnPort = _SensorProbeIRMSRelayOnPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 30),
    _SensorProbeIRMSRelayOnPort_Type()
)
sensorProbeIRMSRelayOnPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSRelayOnPort.setStatus("mandatory")


class _SensorProbeIRMSRelayActiveStatus_Type(Integer32):
    """Custom type sensorProbeIRMSRelayActiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("anyError", 7),
          ("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5))
    )


_SensorProbeIRMSRelayActiveStatus_Type.__name__ = "Integer32"
_SensorProbeIRMSRelayActiveStatus_Object = MibTableColumn
sensorProbeIRMSRelayActiveStatus = _SensorProbeIRMSRelayActiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 31),
    _SensorProbeIRMSRelayActiveStatus_Type()
)
sensorProbeIRMSRelayActiveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSRelayActiveStatus.setStatus("mandatory")


class _SensorProbeIRMSRelayAction_Type(Integer32):
    """Custom type sensorProbeIRMSRelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cycle", 2),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeIRMSRelayAction_Type.__name__ = "Integer32"
_SensorProbeIRMSRelayAction_Object = MibTableColumn
sensorProbeIRMSRelayAction = _SensorProbeIRMSRelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 32),
    _SensorProbeIRMSRelayAction_Type()
)
sensorProbeIRMSRelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSRelayAction.setStatus("mandatory")


class _SensorProbeIRMSSirenCycleTime_Type(Integer32):
    """Custom type sensorProbeIRMSSirenCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeIRMSSirenCycleTime_Type.__name__ = "Integer32"
_SensorProbeIRMSSirenCycleTime_Object = MibTableColumn
sensorProbeIRMSSirenCycleTime = _SensorProbeIRMSSirenCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 37),
    _SensorProbeIRMSSirenCycleTime_Type()
)
sensorProbeIRMSSirenCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSSirenCycleTime.setStatus("mandatory")


class _SensorProbeIRMSSirenOnPort_Type(Integer32):
    """Custom type sensorProbeIRMSSirenOnPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SensorProbeIRMSSirenOnPort_Type.__name__ = "Integer32"
_SensorProbeIRMSSirenOnPort_Object = MibTableColumn
sensorProbeIRMSSirenOnPort = _SensorProbeIRMSSirenOnPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 38),
    _SensorProbeIRMSSirenOnPort_Type()
)
sensorProbeIRMSSirenOnPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSSirenOnPort.setStatus("mandatory")


class _SensorProbeIRMSSirenActiveStatus_Type(Integer32):
    """Custom type sensorProbeIRMSSirenActiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("anyError", 7),
          ("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5))
    )


_SensorProbeIRMSSirenActiveStatus_Type.__name__ = "Integer32"
_SensorProbeIRMSSirenActiveStatus_Object = MibTableColumn
sensorProbeIRMSSirenActiveStatus = _SensorProbeIRMSSirenActiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 39),
    _SensorProbeIRMSSirenActiveStatus_Type()
)
sensorProbeIRMSSirenActiveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSSirenActiveStatus.setStatus("mandatory")


class _SensorProbeIRMSSirenAction_Type(Integer32):
    """Custom type sensorProbeIRMSSirenAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cycle", 2),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeIRMSSirenAction_Type.__name__ = "Integer32"
_SensorProbeIRMSSirenAction_Object = MibTableColumn
sensorProbeIRMSSirenAction = _SensorProbeIRMSSirenAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 40),
    _SensorProbeIRMSSirenAction_Type()
)
sensorProbeIRMSSirenAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSSirenAction.setStatus("mandatory")


class _SensorProbeIRMSAcknowledgement_Type(Integer32):
    """Custom type sensorProbeIRMSAcknowledgement based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("ack", 1)
    )


_SensorProbeIRMSAcknowledgement_Type.__name__ = "Integer32"
_SensorProbeIRMSAcknowledgement_Object = MibTableColumn
sensorProbeIRMSAcknowledgement = _SensorProbeIRMSAcknowledgement_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 41),
    _SensorProbeIRMSAcknowledgement_Type()
)
sensorProbeIRMSAcknowledgement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSAcknowledgement.setStatus("mandatory")


class _SensorProbeIRMSSirenDelayAlarm_Type(Integer32):
    """Custom type sensorProbeIRMSSirenDelayAlarm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeIRMSSirenDelayAlarm_Type.__name__ = "Integer32"
_SensorProbeIRMSSirenDelayAlarm_Object = MibTableColumn
sensorProbeIRMSSirenDelayAlarm = _SensorProbeIRMSSirenDelayAlarm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 42),
    _SensorProbeIRMSSirenDelayAlarm_Type()
)
sensorProbeIRMSSirenDelayAlarm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSSirenDelayAlarm.setStatus("mandatory")
_SensorProbeIRMSURL_Type = DisplayString
_SensorProbeIRMSURL_Object = MibTableColumn
sensorProbeIRMSURL = _SensorProbeIRMSURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 43),
    _SensorProbeIRMSURL_Type()
)
sensorProbeIRMSURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSURL.setStatus("mandatory")


class _SensorProbeIRMSOpenURL_Type(Integer32):
    """Custom type sensorProbeIRMSOpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeIRMSOpenURL_Type.__name__ = "Integer32"
_SensorProbeIRMSOpenURL_Object = MibTableColumn
sensorProbeIRMSOpenURL = _SensorProbeIRMSOpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 44),
    _SensorProbeIRMSOpenURL_Type()
)
sensorProbeIRMSOpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSOpenURL.setStatus("mandatory")


class _SensorProbeIRMSDatacollectType_Type(Integer32):
    """Custom type sensorProbeIRMSDatacollectType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("average", 1),
          ("highest", 2),
          ("lowest", 3))
    )


_SensorProbeIRMSDatacollectType_Type.__name__ = "Integer32"
_SensorProbeIRMSDatacollectType_Object = MibTableColumn
sensorProbeIRMSDatacollectType = _SensorProbeIRMSDatacollectType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 45),
    _SensorProbeIRMSDatacollectType_Type()
)
sensorProbeIRMSDatacollectType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSDatacollectType.setStatus("mandatory")


class _SensorProbeIRMSContTimeHighCritical_Type(Integer32):
    """Custom type sensorProbeIRMSContTimeHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeIRMSContTimeHighCritical_Type.__name__ = "Integer32"
_SensorProbeIRMSContTimeHighCritical_Object = MibTableColumn
sensorProbeIRMSContTimeHighCritical = _SensorProbeIRMSContTimeHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 46),
    _SensorProbeIRMSContTimeHighCritical_Type()
)
sensorProbeIRMSContTimeHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSContTimeHighCritical.setStatus("mandatory")


class _SensorProbeIRMSContTimeHighWarning_Type(Integer32):
    """Custom type sensorProbeIRMSContTimeHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeIRMSContTimeHighWarning_Type.__name__ = "Integer32"
_SensorProbeIRMSContTimeHighWarning_Object = MibTableColumn
sensorProbeIRMSContTimeHighWarning = _SensorProbeIRMSContTimeHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 47),
    _SensorProbeIRMSContTimeHighWarning_Type()
)
sensorProbeIRMSContTimeHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSContTimeHighWarning.setStatus("mandatory")


class _SensorProbeIRMSContTimeNormal_Type(Integer32):
    """Custom type sensorProbeIRMSContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeIRMSContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeIRMSContTimeNormal_Object = MibTableColumn
sensorProbeIRMSContTimeNormal = _SensorProbeIRMSContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 48),
    _SensorProbeIRMSContTimeNormal_Type()
)
sensorProbeIRMSContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSContTimeNormal.setStatus("mandatory")


class _SensorProbeIRMSContTimeLowWarning_Type(Integer32):
    """Custom type sensorProbeIRMSContTimeLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeIRMSContTimeLowWarning_Type.__name__ = "Integer32"
_SensorProbeIRMSContTimeLowWarning_Object = MibTableColumn
sensorProbeIRMSContTimeLowWarning = _SensorProbeIRMSContTimeLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 49),
    _SensorProbeIRMSContTimeLowWarning_Type()
)
sensorProbeIRMSContTimeLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSContTimeLowWarning.setStatus("mandatory")


class _SensorProbeIRMSContTimeLowCritical_Type(Integer32):
    """Custom type sensorProbeIRMSContTimeLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeIRMSContTimeLowCritical_Type.__name__ = "Integer32"
_SensorProbeIRMSContTimeLowCritical_Object = MibTableColumn
sensorProbeIRMSContTimeLowCritical = _SensorProbeIRMSContTimeLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 50),
    _SensorProbeIRMSContTimeLowCritical_Type()
)
sensorProbeIRMSContTimeLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSContTimeLowCritical.setStatus("mandatory")


class _SensorProbeIRMSContTimeSensorError_Type(Integer32):
    """Custom type sensorProbeIRMSContTimeSensorError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeIRMSContTimeSensorError_Type.__name__ = "Integer32"
_SensorProbeIRMSContTimeSensorError_Object = MibTableColumn
sensorProbeIRMSContTimeSensorError = _SensorProbeIRMSContTimeSensorError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 51),
    _SensorProbeIRMSContTimeSensorError_Type()
)
sensorProbeIRMSContTimeSensorError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSContTimeSensorError.setStatus("mandatory")


class _SensorProbeIRMSCalendar_Type(Integer32):
    """Custom type sensorProbeIRMSCalendar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeIRMSCalendar_Type.__name__ = "Integer32"
_SensorProbeIRMSCalendar_Object = MibTableColumn
sensorProbeIRMSCalendar = _SensorProbeIRMSCalendar_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 26, 2, 1, 52),
    _SensorProbeIRMSCalendar_Type()
)
sensorProbeIRMSCalendar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeIRMSCalendar.setStatus("mandatory")
_SensorProbeVRMSSensor_ObjectIdentity = ObjectIdentity
sensorProbeVRMSSensor = _SensorProbeVRMSSensor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27)
)
_SensorProbeVRMSSensorNumber_Type = Integer32
_SensorProbeVRMSSensorNumber_Object = MibScalar
sensorProbeVRMSSensorNumber = _SensorProbeVRMSSensorNumber_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 1),
    _SensorProbeVRMSSensorNumber_Type()
)
sensorProbeVRMSSensorNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeVRMSSensorNumber.setStatus("mandatory")
_SensorProbeVRMSSensorTable_Object = MibTable
sensorProbeVRMSSensorTable = _SensorProbeVRMSSensorTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2)
)
if mibBuilder.loadTexts:
    sensorProbeVRMSSensorTable.setStatus("mandatory")
_SensorProbeVRMSSensorEntry_Object = MibTableRow
sensorProbeVRMSSensorEntry = _SensorProbeVRMSSensorEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1)
)
sensorProbeVRMSSensorEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeVRMSSensorIndex"),
)
if mibBuilder.loadTexts:
    sensorProbeVRMSSensorEntry.setStatus("mandatory")


class _SensorProbeVRMSSensorIndex_Type(Integer32):
    """Custom type sensorProbeVRMSSensorIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeVRMSSensorIndex_Type.__name__ = "Integer32"
_SensorProbeVRMSSensorIndex_Object = MibTableColumn
sensorProbeVRMSSensorIndex = _SensorProbeVRMSSensorIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 1),
    _SensorProbeVRMSSensorIndex_Type()
)
sensorProbeVRMSSensorIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeVRMSSensorIndex.setStatus("mandatory")
_SensorProbeVRMSDescription_Type = DisplayString
_SensorProbeVRMSDescription_Object = MibTableColumn
sensorProbeVRMSDescription = _SensorProbeVRMSDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 2),
    _SensorProbeVRMSDescription_Type()
)
sensorProbeVRMSDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSDescription.setStatus("mandatory")


class _SensorProbeVRMSPercent_Type(Integer32):
    """Custom type sensorProbeVRMSPercent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-32768, 32767),
    )


_SensorProbeVRMSPercent_Type.__name__ = "Integer32"
_SensorProbeVRMSPercent_Object = MibTableColumn
sensorProbeVRMSPercent = _SensorProbeVRMSPercent_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 3),
    _SensorProbeVRMSPercent_Type()
)
sensorProbeVRMSPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeVRMSPercent.setStatus("mandatory")


class _SensorProbeVRMSStatus_Type(Integer32):
    """Custom type sensorProbeVRMSStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorProbeVRMSStatus_Type.__name__ = "Integer32"
_SensorProbeVRMSStatus_Object = MibTableColumn
sensorProbeVRMSStatus = _SensorProbeVRMSStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 4),
    _SensorProbeVRMSStatus_Type()
)
sensorProbeVRMSStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeVRMSStatus.setStatus("mandatory")


class _SensorProbeVRMSOnline_Type(Integer32):
    """Custom type sensorProbeVRMSOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeVRMSOnline_Type.__name__ = "Integer32"
_SensorProbeVRMSOnline_Object = MibTableColumn
sensorProbeVRMSOnline = _SensorProbeVRMSOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 5),
    _SensorProbeVRMSOnline_Type()
)
sensorProbeVRMSOnline.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeVRMSOnline.setStatus("mandatory")


class _SensorProbeVRMSGoOnline_Type(Integer32):
    """Custom type sensorProbeVRMSGoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeVRMSGoOnline_Type.__name__ = "Integer32"
_SensorProbeVRMSGoOnline_Object = MibTableColumn
sensorProbeVRMSGoOnline = _SensorProbeVRMSGoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 6),
    _SensorProbeVRMSGoOnline_Type()
)
sensorProbeVRMSGoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSGoOnline.setStatus("mandatory")
_SensorProbeVRMSHighWarning_Type = Integer32
_SensorProbeVRMSHighWarning_Object = MibTableColumn
sensorProbeVRMSHighWarning = _SensorProbeVRMSHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 7),
    _SensorProbeVRMSHighWarning_Type()
)
sensorProbeVRMSHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSHighWarning.setStatus("mandatory")
_SensorProbeVRMSHighCritical_Type = Integer32
_SensorProbeVRMSHighCritical_Object = MibTableColumn
sensorProbeVRMSHighCritical = _SensorProbeVRMSHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 8),
    _SensorProbeVRMSHighCritical_Type()
)
sensorProbeVRMSHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSHighCritical.setStatus("mandatory")
_SensorProbeVRMSLowWarning_Type = Integer32
_SensorProbeVRMSLowWarning_Object = MibTableColumn
sensorProbeVRMSLowWarning = _SensorProbeVRMSLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 9),
    _SensorProbeVRMSLowWarning_Type()
)
sensorProbeVRMSLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSLowWarning.setStatus("mandatory")
_SensorProbeVRMSLowCritical_Type = Integer32
_SensorProbeVRMSLowCritical_Object = MibTableColumn
sensorProbeVRMSLowCritical = _SensorProbeVRMSLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 10),
    _SensorProbeVRMSLowCritical_Type()
)
sensorProbeVRMSLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSLowCritical.setStatus("mandatory")
_SensorProbeVRMSRearm_Type = Integer32
_SensorProbeVRMSRearm_Object = MibTableColumn
sensorProbeVRMSRearm = _SensorProbeVRMSRearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 11),
    _SensorProbeVRMSRearm_Type()
)
sensorProbeVRMSRearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSRearm.setStatus("mandatory")
_SensorProbeVRMSRaw_Type = Integer32
_SensorProbeVRMSRaw_Object = MibTableColumn
sensorProbeVRMSRaw = _SensorProbeVRMSRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 13),
    _SensorProbeVRMSRaw_Type()
)
sensorProbeVRMSRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeVRMSRaw.setStatus("mandatory")


class _SensorProbeVRMSEmailTrapLimit_Type(Integer32):
    """Custom type sensorProbeVRMSEmailTrapLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeVRMSEmailTrapLimit_Type.__name__ = "Integer32"
_SensorProbeVRMSEmailTrapLimit_Object = MibTableColumn
sensorProbeVRMSEmailTrapLimit = _SensorProbeVRMSEmailTrapLimit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 17),
    _SensorProbeVRMSEmailTrapLimit_Type()
)
sensorProbeVRMSEmailTrapLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSEmailTrapLimit.setStatus("mandatory")


class _SensorProbeVRMSDelayError_Type(Integer32):
    """Custom type sensorProbeVRMSDelayError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeVRMSDelayError_Type.__name__ = "Integer32"
_SensorProbeVRMSDelayError_Object = MibTableColumn
sensorProbeVRMSDelayError = _SensorProbeVRMSDelayError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 21),
    _SensorProbeVRMSDelayError_Type()
)
sensorProbeVRMSDelayError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSDelayError.setStatus("mandatory")


class _SensorProbeVRMSDelayNormal_Type(Integer32):
    """Custom type sensorProbeVRMSDelayNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeVRMSDelayNormal_Type.__name__ = "Integer32"
_SensorProbeVRMSDelayNormal_Object = MibTableColumn
sensorProbeVRMSDelayNormal = _SensorProbeVRMSDelayNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 22),
    _SensorProbeVRMSDelayNormal_Type()
)
sensorProbeVRMSDelayNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSDelayNormal.setStatus("mandatory")


class _SensorProbeVRMSRelayCycleTime_Type(Integer32):
    """Custom type sensorProbeVRMSRelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeVRMSRelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeVRMSRelayCycleTime_Object = MibTableColumn
sensorProbeVRMSRelayCycleTime = _SensorProbeVRMSRelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 29),
    _SensorProbeVRMSRelayCycleTime_Type()
)
sensorProbeVRMSRelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSRelayCycleTime.setStatus("mandatory")


class _SensorProbeVRMSRelayOnPort_Type(Integer32):
    """Custom type sensorProbeVRMSRelayOnPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SensorProbeVRMSRelayOnPort_Type.__name__ = "Integer32"
_SensorProbeVRMSRelayOnPort_Object = MibTableColumn
sensorProbeVRMSRelayOnPort = _SensorProbeVRMSRelayOnPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 30),
    _SensorProbeVRMSRelayOnPort_Type()
)
sensorProbeVRMSRelayOnPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSRelayOnPort.setStatus("mandatory")


class _SensorProbeVRMSRelayActiveStatus_Type(Integer32):
    """Custom type sensorProbeVRMSRelayActiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("anyError", 7),
          ("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5))
    )


_SensorProbeVRMSRelayActiveStatus_Type.__name__ = "Integer32"
_SensorProbeVRMSRelayActiveStatus_Object = MibTableColumn
sensorProbeVRMSRelayActiveStatus = _SensorProbeVRMSRelayActiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 31),
    _SensorProbeVRMSRelayActiveStatus_Type()
)
sensorProbeVRMSRelayActiveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSRelayActiveStatus.setStatus("mandatory")


class _SensorProbeVRMSRelayAction_Type(Integer32):
    """Custom type sensorProbeVRMSRelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cycle", 2),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeVRMSRelayAction_Type.__name__ = "Integer32"
_SensorProbeVRMSRelayAction_Object = MibTableColumn
sensorProbeVRMSRelayAction = _SensorProbeVRMSRelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 32),
    _SensorProbeVRMSRelayAction_Type()
)
sensorProbeVRMSRelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSRelayAction.setStatus("mandatory")


class _SensorProbeVRMSSirenCycleTime_Type(Integer32):
    """Custom type sensorProbeVRMSSirenCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeVRMSSirenCycleTime_Type.__name__ = "Integer32"
_SensorProbeVRMSSirenCycleTime_Object = MibTableColumn
sensorProbeVRMSSirenCycleTime = _SensorProbeVRMSSirenCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 37),
    _SensorProbeVRMSSirenCycleTime_Type()
)
sensorProbeVRMSSirenCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSSirenCycleTime.setStatus("mandatory")


class _SensorProbeVRMSSirenOnPort_Type(Integer32):
    """Custom type sensorProbeVRMSSirenOnPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SensorProbeVRMSSirenOnPort_Type.__name__ = "Integer32"
_SensorProbeVRMSSirenOnPort_Object = MibTableColumn
sensorProbeVRMSSirenOnPort = _SensorProbeVRMSSirenOnPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 38),
    _SensorProbeVRMSSirenOnPort_Type()
)
sensorProbeVRMSSirenOnPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSSirenOnPort.setStatus("mandatory")


class _SensorProbeVRMSSirenActiveStatus_Type(Integer32):
    """Custom type sensorProbeVRMSSirenActiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("anyError", 7),
          ("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5))
    )


_SensorProbeVRMSSirenActiveStatus_Type.__name__ = "Integer32"
_SensorProbeVRMSSirenActiveStatus_Object = MibTableColumn
sensorProbeVRMSSirenActiveStatus = _SensorProbeVRMSSirenActiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 39),
    _SensorProbeVRMSSirenActiveStatus_Type()
)
sensorProbeVRMSSirenActiveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSSirenActiveStatus.setStatus("mandatory")


class _SensorProbeVRMSSirenAction_Type(Integer32):
    """Custom type sensorProbeVRMSSirenAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cycle", 2),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeVRMSSirenAction_Type.__name__ = "Integer32"
_SensorProbeVRMSSirenAction_Object = MibTableColumn
sensorProbeVRMSSirenAction = _SensorProbeVRMSSirenAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 40),
    _SensorProbeVRMSSirenAction_Type()
)
sensorProbeVRMSSirenAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSSirenAction.setStatus("mandatory")


class _SensorProbeVRMSAcknowledgement_Type(Integer32):
    """Custom type sensorProbeVRMSAcknowledgement based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("ack", 1)
    )


_SensorProbeVRMSAcknowledgement_Type.__name__ = "Integer32"
_SensorProbeVRMSAcknowledgement_Object = MibTableColumn
sensorProbeVRMSAcknowledgement = _SensorProbeVRMSAcknowledgement_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 41),
    _SensorProbeVRMSAcknowledgement_Type()
)
sensorProbeVRMSAcknowledgement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSAcknowledgement.setStatus("mandatory")


class _SensorProbeVRMSSirenDelayAlarm_Type(Integer32):
    """Custom type sensorProbeVRMSSirenDelayAlarm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeVRMSSirenDelayAlarm_Type.__name__ = "Integer32"
_SensorProbeVRMSSirenDelayAlarm_Object = MibTableColumn
sensorProbeVRMSSirenDelayAlarm = _SensorProbeVRMSSirenDelayAlarm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 42),
    _SensorProbeVRMSSirenDelayAlarm_Type()
)
sensorProbeVRMSSirenDelayAlarm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSSirenDelayAlarm.setStatus("mandatory")


class _SensorProbeVRMSvoltageMode_Type(Integer32):
    """Custom type sensorProbeVRMSvoltageMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(110,
              220)
        )
    )
    namedValues = NamedValues(
        *(("ac-110", 110),
          ("ac-220", 220))
    )


_SensorProbeVRMSvoltageMode_Type.__name__ = "Integer32"
_SensorProbeVRMSvoltageMode_Object = MibTableColumn
sensorProbeVRMSvoltageMode = _SensorProbeVRMSvoltageMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 43),
    _SensorProbeVRMSvoltageMode_Type()
)
sensorProbeVRMSvoltageMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSvoltageMode.setStatus("mandatory")
_SensorProbeVRMSURL_Type = DisplayString
_SensorProbeVRMSURL_Object = MibTableColumn
sensorProbeVRMSURL = _SensorProbeVRMSURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 44),
    _SensorProbeVRMSURL_Type()
)
sensorProbeVRMSURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSURL.setStatus("mandatory")


class _SensorProbeVRMSOpenURL_Type(Integer32):
    """Custom type sensorProbeVRMSOpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeVRMSOpenURL_Type.__name__ = "Integer32"
_SensorProbeVRMSOpenURL_Object = MibTableColumn
sensorProbeVRMSOpenURL = _SensorProbeVRMSOpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 45),
    _SensorProbeVRMSOpenURL_Type()
)
sensorProbeVRMSOpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSOpenURL.setStatus("mandatory")


class _SensorProbeVRMSDatacollectType_Type(Integer32):
    """Custom type sensorProbeVRMSDatacollectType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("average", 1),
          ("highest", 2),
          ("lowest", 3))
    )


_SensorProbeVRMSDatacollectType_Type.__name__ = "Integer32"
_SensorProbeVRMSDatacollectType_Object = MibTableColumn
sensorProbeVRMSDatacollectType = _SensorProbeVRMSDatacollectType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 46),
    _SensorProbeVRMSDatacollectType_Type()
)
sensorProbeVRMSDatacollectType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSDatacollectType.setStatus("mandatory")


class _SensorProbeVRMSContTimeHighCritical_Type(Integer32):
    """Custom type sensorProbeVRMSContTimeHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeVRMSContTimeHighCritical_Type.__name__ = "Integer32"
_SensorProbeVRMSContTimeHighCritical_Object = MibTableColumn
sensorProbeVRMSContTimeHighCritical = _SensorProbeVRMSContTimeHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 47),
    _SensorProbeVRMSContTimeHighCritical_Type()
)
sensorProbeVRMSContTimeHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSContTimeHighCritical.setStatus("mandatory")


class _SensorProbeVRMSContTimeHighWarning_Type(Integer32):
    """Custom type sensorProbeVRMSContTimeHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeVRMSContTimeHighWarning_Type.__name__ = "Integer32"
_SensorProbeVRMSContTimeHighWarning_Object = MibTableColumn
sensorProbeVRMSContTimeHighWarning = _SensorProbeVRMSContTimeHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 48),
    _SensorProbeVRMSContTimeHighWarning_Type()
)
sensorProbeVRMSContTimeHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSContTimeHighWarning.setStatus("mandatory")


class _SensorProbeVRMSContTimeNormal_Type(Integer32):
    """Custom type sensorProbeVRMSContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeVRMSContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeVRMSContTimeNormal_Object = MibTableColumn
sensorProbeVRMSContTimeNormal = _SensorProbeVRMSContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 49),
    _SensorProbeVRMSContTimeNormal_Type()
)
sensorProbeVRMSContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSContTimeNormal.setStatus("mandatory")


class _SensorProbeVRMSContTimeLowWarning_Type(Integer32):
    """Custom type sensorProbeVRMSContTimeLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeVRMSContTimeLowWarning_Type.__name__ = "Integer32"
_SensorProbeVRMSContTimeLowWarning_Object = MibTableColumn
sensorProbeVRMSContTimeLowWarning = _SensorProbeVRMSContTimeLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 50),
    _SensorProbeVRMSContTimeLowWarning_Type()
)
sensorProbeVRMSContTimeLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSContTimeLowWarning.setStatus("mandatory")


class _SensorProbeVRMSContTimeLowCritical_Type(Integer32):
    """Custom type sensorProbeVRMSContTimeLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeVRMSContTimeLowCritical_Type.__name__ = "Integer32"
_SensorProbeVRMSContTimeLowCritical_Object = MibTableColumn
sensorProbeVRMSContTimeLowCritical = _SensorProbeVRMSContTimeLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 51),
    _SensorProbeVRMSContTimeLowCritical_Type()
)
sensorProbeVRMSContTimeLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSContTimeLowCritical.setStatus("mandatory")


class _SensorProbeVRMSContTimeSensorError_Type(Integer32):
    """Custom type sensorProbeVRMSContTimeSensorError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeVRMSContTimeSensorError_Type.__name__ = "Integer32"
_SensorProbeVRMSContTimeSensorError_Object = MibTableColumn
sensorProbeVRMSContTimeSensorError = _SensorProbeVRMSContTimeSensorError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 52),
    _SensorProbeVRMSContTimeSensorError_Type()
)
sensorProbeVRMSContTimeSensorError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSContTimeSensorError.setStatus("mandatory")


class _SensorProbeVRMSCalendar_Type(Integer32):
    """Custom type sensorProbeVRMSCalendar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeVRMSCalendar_Type.__name__ = "Integer32"
_SensorProbeVRMSCalendar_Object = MibTableColumn
sensorProbeVRMSCalendar = _SensorProbeVRMSCalendar_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 27, 2, 1, 53),
    _SensorProbeVRMSCalendar_Type()
)
sensorProbeVRMSCalendar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVRMSCalendar.setStatus("mandatory")
_SensorProbeEnergySensor_ObjectIdentity = ObjectIdentity
sensorProbeEnergySensor = _SensorProbeEnergySensor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28)
)
_SensorProbeEnergySensorNumber_Type = Integer32
_SensorProbeEnergySensorNumber_Object = MibScalar
sensorProbeEnergySensorNumber = _SensorProbeEnergySensorNumber_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 1),
    _SensorProbeEnergySensorNumber_Type()
)
sensorProbeEnergySensorNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeEnergySensorNumber.setStatus("mandatory")
_SensorProbeEnergySensorTable_Object = MibTable
sensorProbeEnergySensorTable = _SensorProbeEnergySensorTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2)
)
if mibBuilder.loadTexts:
    sensorProbeEnergySensorTable.setStatus("mandatory")
_SensorProbeEnergySensorEntry_Object = MibTableRow
sensorProbeEnergySensorEntry = _SensorProbeEnergySensorEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1)
)
sensorProbeEnergySensorEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeEnergySensorIndex"),
)
if mibBuilder.loadTexts:
    sensorProbeEnergySensorEntry.setStatus("mandatory")


class _SensorProbeEnergySensorIndex_Type(Integer32):
    """Custom type sensorProbeEnergySensorIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeEnergySensorIndex_Type.__name__ = "Integer32"
_SensorProbeEnergySensorIndex_Object = MibTableColumn
sensorProbeEnergySensorIndex = _SensorProbeEnergySensorIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 1),
    _SensorProbeEnergySensorIndex_Type()
)
sensorProbeEnergySensorIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeEnergySensorIndex.setStatus("mandatory")
_SensorProbeEnergyDescription_Type = DisplayString
_SensorProbeEnergyDescription_Object = MibTableColumn
sensorProbeEnergyDescription = _SensorProbeEnergyDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 2),
    _SensorProbeEnergyDescription_Type()
)
sensorProbeEnergyDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyDescription.setStatus("mandatory")


class _SensorProbeEnergyPercent_Type(Integer32):
    """Custom type sensorProbeEnergyPercent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-32768, 32767),
    )


_SensorProbeEnergyPercent_Type.__name__ = "Integer32"
_SensorProbeEnergyPercent_Object = MibTableColumn
sensorProbeEnergyPercent = _SensorProbeEnergyPercent_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 3),
    _SensorProbeEnergyPercent_Type()
)
sensorProbeEnergyPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeEnergyPercent.setStatus("mandatory")


class _SensorProbeEnergyStatus_Type(Integer32):
    """Custom type sensorProbeEnergyStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorProbeEnergyStatus_Type.__name__ = "Integer32"
_SensorProbeEnergyStatus_Object = MibTableColumn
sensorProbeEnergyStatus = _SensorProbeEnergyStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 4),
    _SensorProbeEnergyStatus_Type()
)
sensorProbeEnergyStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeEnergyStatus.setStatus("mandatory")


class _SensorProbeEnergyOnline_Type(Integer32):
    """Custom type sensorProbeEnergyOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeEnergyOnline_Type.__name__ = "Integer32"
_SensorProbeEnergyOnline_Object = MibTableColumn
sensorProbeEnergyOnline = _SensorProbeEnergyOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 5),
    _SensorProbeEnergyOnline_Type()
)
sensorProbeEnergyOnline.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeEnergyOnline.setStatus("mandatory")


class _SensorProbeEnergyGoOnline_Type(Integer32):
    """Custom type sensorProbeEnergyGoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeEnergyGoOnline_Type.__name__ = "Integer32"
_SensorProbeEnergyGoOnline_Object = MibTableColumn
sensorProbeEnergyGoOnline = _SensorProbeEnergyGoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 6),
    _SensorProbeEnergyGoOnline_Type()
)
sensorProbeEnergyGoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyGoOnline.setStatus("mandatory")
_SensorProbeEnergyHighWarning_Type = Integer32
_SensorProbeEnergyHighWarning_Object = MibTableColumn
sensorProbeEnergyHighWarning = _SensorProbeEnergyHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 7),
    _SensorProbeEnergyHighWarning_Type()
)
sensorProbeEnergyHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyHighWarning.setStatus("mandatory")
_SensorProbeEnergyHighCritical_Type = Integer32
_SensorProbeEnergyHighCritical_Object = MibTableColumn
sensorProbeEnergyHighCritical = _SensorProbeEnergyHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 8),
    _SensorProbeEnergyHighCritical_Type()
)
sensorProbeEnergyHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyHighCritical.setStatus("mandatory")
_SensorProbeEnergyLowWarning_Type = Integer32
_SensorProbeEnergyLowWarning_Object = MibTableColumn
sensorProbeEnergyLowWarning = _SensorProbeEnergyLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 9),
    _SensorProbeEnergyLowWarning_Type()
)
sensorProbeEnergyLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyLowWarning.setStatus("mandatory")
_SensorProbeEnergyLowCritical_Type = Integer32
_SensorProbeEnergyLowCritical_Object = MibTableColumn
sensorProbeEnergyLowCritical = _SensorProbeEnergyLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 10),
    _SensorProbeEnergyLowCritical_Type()
)
sensorProbeEnergyLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyLowCritical.setStatus("mandatory")
_SensorProbeEnergyRearm_Type = Integer32
_SensorProbeEnergyRearm_Object = MibTableColumn
sensorProbeEnergyRearm = _SensorProbeEnergyRearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 11),
    _SensorProbeEnergyRearm_Type()
)
sensorProbeEnergyRearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyRearm.setStatus("mandatory")
_SensorProbeEnergyRaw_Type = Integer32
_SensorProbeEnergyRaw_Object = MibTableColumn
sensorProbeEnergyRaw = _SensorProbeEnergyRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 13),
    _SensorProbeEnergyRaw_Type()
)
sensorProbeEnergyRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeEnergyRaw.setStatus("mandatory")


class _SensorProbeEnergyEmailTrapLimit_Type(Integer32):
    """Custom type sensorProbeEnergyEmailTrapLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeEnergyEmailTrapLimit_Type.__name__ = "Integer32"
_SensorProbeEnergyEmailTrapLimit_Object = MibTableColumn
sensorProbeEnergyEmailTrapLimit = _SensorProbeEnergyEmailTrapLimit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 17),
    _SensorProbeEnergyEmailTrapLimit_Type()
)
sensorProbeEnergyEmailTrapLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyEmailTrapLimit.setStatus("mandatory")


class _SensorProbeEnergyDelayError_Type(Integer32):
    """Custom type sensorProbeEnergyDelayError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeEnergyDelayError_Type.__name__ = "Integer32"
_SensorProbeEnergyDelayError_Object = MibTableColumn
sensorProbeEnergyDelayError = _SensorProbeEnergyDelayError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 21),
    _SensorProbeEnergyDelayError_Type()
)
sensorProbeEnergyDelayError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyDelayError.setStatus("mandatory")


class _SensorProbeEnergyDelayNormal_Type(Integer32):
    """Custom type sensorProbeEnergyDelayNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeEnergyDelayNormal_Type.__name__ = "Integer32"
_SensorProbeEnergyDelayNormal_Object = MibTableColumn
sensorProbeEnergyDelayNormal = _SensorProbeEnergyDelayNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 22),
    _SensorProbeEnergyDelayNormal_Type()
)
sensorProbeEnergyDelayNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyDelayNormal.setStatus("mandatory")


class _SensorProbeEnergyRelayCycleTime_Type(Integer32):
    """Custom type sensorProbeEnergyRelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeEnergyRelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeEnergyRelayCycleTime_Object = MibTableColumn
sensorProbeEnergyRelayCycleTime = _SensorProbeEnergyRelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 29),
    _SensorProbeEnergyRelayCycleTime_Type()
)
sensorProbeEnergyRelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyRelayCycleTime.setStatus("mandatory")


class _SensorProbeEnergyRelayOnPort_Type(Integer32):
    """Custom type sensorProbeEnergyRelayOnPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SensorProbeEnergyRelayOnPort_Type.__name__ = "Integer32"
_SensorProbeEnergyRelayOnPort_Object = MibTableColumn
sensorProbeEnergyRelayOnPort = _SensorProbeEnergyRelayOnPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 30),
    _SensorProbeEnergyRelayOnPort_Type()
)
sensorProbeEnergyRelayOnPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyRelayOnPort.setStatus("mandatory")


class _SensorProbeEnergyRelayActiveStatus_Type(Integer32):
    """Custom type sensorProbeEnergyRelayActiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("anyError", 7),
          ("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5))
    )


_SensorProbeEnergyRelayActiveStatus_Type.__name__ = "Integer32"
_SensorProbeEnergyRelayActiveStatus_Object = MibTableColumn
sensorProbeEnergyRelayActiveStatus = _SensorProbeEnergyRelayActiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 31),
    _SensorProbeEnergyRelayActiveStatus_Type()
)
sensorProbeEnergyRelayActiveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyRelayActiveStatus.setStatus("mandatory")


class _SensorProbeEnergyRelayAction_Type(Integer32):
    """Custom type sensorProbeEnergyRelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cycle", 2),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeEnergyRelayAction_Type.__name__ = "Integer32"
_SensorProbeEnergyRelayAction_Object = MibTableColumn
sensorProbeEnergyRelayAction = _SensorProbeEnergyRelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 32),
    _SensorProbeEnergyRelayAction_Type()
)
sensorProbeEnergyRelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyRelayAction.setStatus("mandatory")


class _SensorProbeEnergySirenCycleTime_Type(Integer32):
    """Custom type sensorProbeEnergySirenCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeEnergySirenCycleTime_Type.__name__ = "Integer32"
_SensorProbeEnergySirenCycleTime_Object = MibTableColumn
sensorProbeEnergySirenCycleTime = _SensorProbeEnergySirenCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 37),
    _SensorProbeEnergySirenCycleTime_Type()
)
sensorProbeEnergySirenCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergySirenCycleTime.setStatus("mandatory")


class _SensorProbeEnergySirenOnPort_Type(Integer32):
    """Custom type sensorProbeEnergySirenOnPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SensorProbeEnergySirenOnPort_Type.__name__ = "Integer32"
_SensorProbeEnergySirenOnPort_Object = MibTableColumn
sensorProbeEnergySirenOnPort = _SensorProbeEnergySirenOnPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 38),
    _SensorProbeEnergySirenOnPort_Type()
)
sensorProbeEnergySirenOnPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergySirenOnPort.setStatus("mandatory")


class _SensorProbeEnergySirenActiveStatus_Type(Integer32):
    """Custom type sensorProbeEnergySirenActiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("anyError", 7),
          ("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5))
    )


_SensorProbeEnergySirenActiveStatus_Type.__name__ = "Integer32"
_SensorProbeEnergySirenActiveStatus_Object = MibTableColumn
sensorProbeEnergySirenActiveStatus = _SensorProbeEnergySirenActiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 39),
    _SensorProbeEnergySirenActiveStatus_Type()
)
sensorProbeEnergySirenActiveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergySirenActiveStatus.setStatus("mandatory")


class _SensorProbeEnergySirenAction_Type(Integer32):
    """Custom type sensorProbeEnergySirenAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cycle", 2),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeEnergySirenAction_Type.__name__ = "Integer32"
_SensorProbeEnergySirenAction_Object = MibTableColumn
sensorProbeEnergySirenAction = _SensorProbeEnergySirenAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 40),
    _SensorProbeEnergySirenAction_Type()
)
sensorProbeEnergySirenAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergySirenAction.setStatus("mandatory")


class _SensorProbeEnergyAcknowledgement_Type(Integer32):
    """Custom type sensorProbeEnergyAcknowledgement based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("ack", 1)
    )


_SensorProbeEnergyAcknowledgement_Type.__name__ = "Integer32"
_SensorProbeEnergyAcknowledgement_Object = MibTableColumn
sensorProbeEnergyAcknowledgement = _SensorProbeEnergyAcknowledgement_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 41),
    _SensorProbeEnergyAcknowledgement_Type()
)
sensorProbeEnergyAcknowledgement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyAcknowledgement.setStatus("mandatory")


class _SensorProbeEnergySirenDelayAlarm_Type(Integer32):
    """Custom type sensorProbeEnergySirenDelayAlarm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeEnergySirenDelayAlarm_Type.__name__ = "Integer32"
_SensorProbeEnergySirenDelayAlarm_Object = MibTableColumn
sensorProbeEnergySirenDelayAlarm = _SensorProbeEnergySirenDelayAlarm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 42),
    _SensorProbeEnergySirenDelayAlarm_Type()
)
sensorProbeEnergySirenDelayAlarm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergySirenDelayAlarm.setStatus("mandatory")


class _SensorProbeEnergyReadingMode_Type(Integer32):
    """Custom type sensorProbeEnergyReadingMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("active", 0),
          ("apparent", 1))
    )


_SensorProbeEnergyReadingMode_Type.__name__ = "Integer32"
_SensorProbeEnergyReadingMode_Object = MibTableColumn
sensorProbeEnergyReadingMode = _SensorProbeEnergyReadingMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 43),
    _SensorProbeEnergyReadingMode_Type()
)
sensorProbeEnergyReadingMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyReadingMode.setStatus("mandatory")
_SensorProbeEnergyURL_Type = DisplayString
_SensorProbeEnergyURL_Object = MibTableColumn
sensorProbeEnergyURL = _SensorProbeEnergyURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 44),
    _SensorProbeEnergyURL_Type()
)
sensorProbeEnergyURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyURL.setStatus("mandatory")


class _SensorProbeEnergyOpenURL_Type(Integer32):
    """Custom type sensorProbeEnergyOpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeEnergyOpenURL_Type.__name__ = "Integer32"
_SensorProbeEnergyOpenURL_Object = MibTableColumn
sensorProbeEnergyOpenURL = _SensorProbeEnergyOpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 45),
    _SensorProbeEnergyOpenURL_Type()
)
sensorProbeEnergyOpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyOpenURL.setStatus("mandatory")


class _SensorProbeEnergyDatacollectType_Type(Integer32):
    """Custom type sensorProbeEnergyDatacollectType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("average", 1),
          ("highest", 2),
          ("lowest", 3))
    )


_SensorProbeEnergyDatacollectType_Type.__name__ = "Integer32"
_SensorProbeEnergyDatacollectType_Object = MibTableColumn
sensorProbeEnergyDatacollectType = _SensorProbeEnergyDatacollectType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 46),
    _SensorProbeEnergyDatacollectType_Type()
)
sensorProbeEnergyDatacollectType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyDatacollectType.setStatus("mandatory")


class _SensorProbeEnergyContTimeHighCritical_Type(Integer32):
    """Custom type sensorProbeEnergyContTimeHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeEnergyContTimeHighCritical_Type.__name__ = "Integer32"
_SensorProbeEnergyContTimeHighCritical_Object = MibTableColumn
sensorProbeEnergyContTimeHighCritical = _SensorProbeEnergyContTimeHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 47),
    _SensorProbeEnergyContTimeHighCritical_Type()
)
sensorProbeEnergyContTimeHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyContTimeHighCritical.setStatus("mandatory")


class _SensorProbeEnergyContTimeHighWarning_Type(Integer32):
    """Custom type sensorProbeEnergyContTimeHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeEnergyContTimeHighWarning_Type.__name__ = "Integer32"
_SensorProbeEnergyContTimeHighWarning_Object = MibTableColumn
sensorProbeEnergyContTimeHighWarning = _SensorProbeEnergyContTimeHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 48),
    _SensorProbeEnergyContTimeHighWarning_Type()
)
sensorProbeEnergyContTimeHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyContTimeHighWarning.setStatus("mandatory")


class _SensorProbeEnergyContTimeNormal_Type(Integer32):
    """Custom type sensorProbeEnergyContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeEnergyContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeEnergyContTimeNormal_Object = MibTableColumn
sensorProbeEnergyContTimeNormal = _SensorProbeEnergyContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 49),
    _SensorProbeEnergyContTimeNormal_Type()
)
sensorProbeEnergyContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyContTimeNormal.setStatus("mandatory")


class _SensorProbeEnergyContTimeLowWarning_Type(Integer32):
    """Custom type sensorProbeEnergyContTimeLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeEnergyContTimeLowWarning_Type.__name__ = "Integer32"
_SensorProbeEnergyContTimeLowWarning_Object = MibTableColumn
sensorProbeEnergyContTimeLowWarning = _SensorProbeEnergyContTimeLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 50),
    _SensorProbeEnergyContTimeLowWarning_Type()
)
sensorProbeEnergyContTimeLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyContTimeLowWarning.setStatus("mandatory")


class _SensorProbeEnergyContTimeLowCritical_Type(Integer32):
    """Custom type sensorProbeEnergyContTimeLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeEnergyContTimeLowCritical_Type.__name__ = "Integer32"
_SensorProbeEnergyContTimeLowCritical_Object = MibTableColumn
sensorProbeEnergyContTimeLowCritical = _SensorProbeEnergyContTimeLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 51),
    _SensorProbeEnergyContTimeLowCritical_Type()
)
sensorProbeEnergyContTimeLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyContTimeLowCritical.setStatus("mandatory")


class _SensorProbeEnergyContTimeSensorError_Type(Integer32):
    """Custom type sensorProbeEnergyContTimeSensorError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeEnergyContTimeSensorError_Type.__name__ = "Integer32"
_SensorProbeEnergyContTimeSensorError_Object = MibTableColumn
sensorProbeEnergyContTimeSensorError = _SensorProbeEnergyContTimeSensorError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 52),
    _SensorProbeEnergyContTimeSensorError_Type()
)
sensorProbeEnergyContTimeSensorError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyContTimeSensorError.setStatus("mandatory")


class _SensorProbeEnergyCalendar_Type(Integer32):
    """Custom type sensorProbeEnergyCalendar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeEnergyCalendar_Type.__name__ = "Integer32"
_SensorProbeEnergyCalendar_Object = MibTableColumn
sensorProbeEnergyCalendar = _SensorProbeEnergyCalendar_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 28, 2, 1, 53),
    _SensorProbeEnergyCalendar_Type()
)
sensorProbeEnergyCalendar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnergyCalendar.setStatus("mandatory")
_SensorProbeRelayArraySensor_ObjectIdentity = ObjectIdentity
sensorProbeRelayArraySensor = _SensorProbeRelayArraySensor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29)
)
_SensorProbeRelayArrayPort1_ObjectIdentity = ObjectIdentity
sensorProbeRelayArrayPort1 = _SensorProbeRelayArrayPort1_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 1)
)
_SensorProbeRelayArrayPort1Number_Type = Integer32
_SensorProbeRelayArrayPort1Number_Object = MibScalar
sensorProbeRelayArrayPort1Number = _SensorProbeRelayArrayPort1Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 1, 1),
    _SensorProbeRelayArrayPort1Number_Type()
)
sensorProbeRelayArrayPort1Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort1Number.setStatus("mandatory")
_SensorProbeRelayArrayPort1Table_Object = MibTable
sensorProbeRelayArrayPort1Table = _SensorProbeRelayArrayPort1Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 1, 2)
)
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort1Table.setStatus("mandatory")
_SensorProbeRelayArrayPort1Entry_Object = MibTableRow
sensorProbeRelayArrayPort1Entry = _SensorProbeRelayArrayPort1Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 1, 2, 1)
)
sensorProbeRelayArrayPort1Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeRelayArrayPort1Index"),
)
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort1Entry.setStatus("mandatory")


class _SensorProbeRelayArrayPort1Index_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort1Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeRelayArrayPort1Index_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort1Index_Object = MibTableColumn
sensorProbeRelayArrayPort1Index = _SensorProbeRelayArrayPort1Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 1, 2, 1, 1),
    _SensorProbeRelayArrayPort1Index_Type()
)
sensorProbeRelayArrayPort1Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort1Index.setStatus("mandatory")
_SensorProbeRelayArrayPort1Description_Type = DisplayString
_SensorProbeRelayArrayPort1Description_Object = MibTableColumn
sensorProbeRelayArrayPort1Description = _SensorProbeRelayArrayPort1Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 1, 2, 1, 2),
    _SensorProbeRelayArrayPort1Description_Type()
)
sensorProbeRelayArrayPort1Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort1Description.setStatus("mandatory")


class _SensorProbeRelayArrayPort1Status_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort1Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorProbeRelayArrayPort1Status_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort1Status_Object = MibTableColumn
sensorProbeRelayArrayPort1Status = _SensorProbeRelayArrayPort1Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 1, 2, 1, 4),
    _SensorProbeRelayArrayPort1Status_Type()
)
sensorProbeRelayArrayPort1Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort1Status.setStatus("mandatory")


class _SensorProbeRelayArrayPort1Online_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort1Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeRelayArrayPort1Online_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort1Online_Object = MibTableColumn
sensorProbeRelayArrayPort1Online = _SensorProbeRelayArrayPort1Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 1, 2, 1, 5),
    _SensorProbeRelayArrayPort1Online_Type()
)
sensorProbeRelayArrayPort1Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort1Online.setStatus("mandatory")


class _SensorProbeRelayArrayPort1GoOnline_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort1GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeRelayArrayPort1GoOnline_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort1GoOnline_Object = MibTableColumn
sensorProbeRelayArrayPort1GoOnline = _SensorProbeRelayArrayPort1GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 1, 2, 1, 6),
    _SensorProbeRelayArrayPort1GoOnline_Type()
)
sensorProbeRelayArrayPort1GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort1GoOnline.setStatus("mandatory")


class _SensorProbeRelayArrayPort1NormalState_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort1NormalState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("closed", 0),
          ("open", 1))
    )


_SensorProbeRelayArrayPort1NormalState_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort1NormalState_Object = MibTableColumn
sensorProbeRelayArrayPort1NormalState = _SensorProbeRelayArrayPort1NormalState_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 1, 2, 1, 7),
    _SensorProbeRelayArrayPort1NormalState_Type()
)
sensorProbeRelayArrayPort1NormalState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort1NormalState.setStatus("mandatory")


class _SensorProbeRelayArrayPort1RelayCycleTime_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort1RelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeRelayArrayPort1RelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort1RelayCycleTime_Object = MibTableColumn
sensorProbeRelayArrayPort1RelayCycleTime = _SensorProbeRelayArrayPort1RelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 1, 2, 1, 18),
    _SensorProbeRelayArrayPort1RelayCycleTime_Type()
)
sensorProbeRelayArrayPort1RelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort1RelayCycleTime.setStatus("mandatory")


class _SensorProbeRelayArrayPort1RelayAction_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort1RelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cycle", 2),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeRelayArrayPort1RelayAction_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort1RelayAction_Object = MibTableColumn
sensorProbeRelayArrayPort1RelayAction = _SensorProbeRelayArrayPort1RelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 1, 2, 1, 21),
    _SensorProbeRelayArrayPort1RelayAction_Type()
)
sensorProbeRelayArrayPort1RelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort1RelayAction.setStatus("mandatory")


class _SensorProbeRelayArrayPort1ManualRelayCycleTime_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort1ManualRelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeRelayArrayPort1ManualRelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort1ManualRelayCycleTime_Object = MibTableColumn
sensorProbeRelayArrayPort1ManualRelayCycleTime = _SensorProbeRelayArrayPort1ManualRelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 1, 2, 1, 24),
    _SensorProbeRelayArrayPort1ManualRelayCycleTime_Type()
)
sensorProbeRelayArrayPort1ManualRelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort1ManualRelayCycleTime.setStatus("mandatory")


class _SensorProbeRelayArrayPort1ManualRelayAction_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort1ManualRelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("allow-sensor-control", 1),
          ("cycle-Off-On-Off", 7),
          ("cycle-On-Off-On", 8),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeRelayArrayPort1ManualRelayAction_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort1ManualRelayAction_Object = MibTableColumn
sensorProbeRelayArrayPort1ManualRelayAction = _SensorProbeRelayArrayPort1ManualRelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 1, 2, 1, 25),
    _SensorProbeRelayArrayPort1ManualRelayAction_Type()
)
sensorProbeRelayArrayPort1ManualRelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort1ManualRelayAction.setStatus("mandatory")
_SensorProbeRelayArrayPort1RelayDescOn_Type = DisplayString
_SensorProbeRelayArrayPort1RelayDescOn_Object = MibTableColumn
sensorProbeRelayArrayPort1RelayDescOn = _SensorProbeRelayArrayPort1RelayDescOn_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 1, 2, 1, 26),
    _SensorProbeRelayArrayPort1RelayDescOn_Type()
)
sensorProbeRelayArrayPort1RelayDescOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort1RelayDescOn.setStatus("mandatory")
_SensorProbeRelayArrayPort1RelayDescOff_Type = DisplayString
_SensorProbeRelayArrayPort1RelayDescOff_Object = MibTableColumn
sensorProbeRelayArrayPort1RelayDescOff = _SensorProbeRelayArrayPort1RelayDescOff_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 1, 2, 1, 27),
    _SensorProbeRelayArrayPort1RelayDescOff_Type()
)
sensorProbeRelayArrayPort1RelayDescOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort1RelayDescOff.setStatus("mandatory")
_SensorProbeRelayArrayPort1URL_Type = DisplayString
_SensorProbeRelayArrayPort1URL_Object = MibTableColumn
sensorProbeRelayArrayPort1URL = _SensorProbeRelayArrayPort1URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 1, 2, 1, 28),
    _SensorProbeRelayArrayPort1URL_Type()
)
sensorProbeRelayArrayPort1URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort1URL.setStatus("mandatory")


class _SensorProbeRelayArrayPort1OpenURL_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort1OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeRelayArrayPort1OpenURL_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort1OpenURL_Object = MibTableColumn
sensorProbeRelayArrayPort1OpenURL = _SensorProbeRelayArrayPort1OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 1, 2, 1, 29),
    _SensorProbeRelayArrayPort1OpenURL_Type()
)
sensorProbeRelayArrayPort1OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort1OpenURL.setStatus("mandatory")


class _SensorProbeRelayArrayPort1ControlMode_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort1ControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("manual-control", 0),
          ("notification-control", 1),
          ("thermostat-control", 3),
          ("time-control", 2))
    )


_SensorProbeRelayArrayPort1ControlMode_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort1ControlMode_Object = MibTableColumn
sensorProbeRelayArrayPort1ControlMode = _SensorProbeRelayArrayPort1ControlMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 1, 2, 1, 30),
    _SensorProbeRelayArrayPort1ControlMode_Type()
)
sensorProbeRelayArrayPort1ControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort1ControlMode.setStatus("mandatory")
_SensorProbeRelayArrayPort2_ObjectIdentity = ObjectIdentity
sensorProbeRelayArrayPort2 = _SensorProbeRelayArrayPort2_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 2)
)
_SensorProbeRelayArrayPort2Number_Type = Integer32
_SensorProbeRelayArrayPort2Number_Object = MibScalar
sensorProbeRelayArrayPort2Number = _SensorProbeRelayArrayPort2Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 2, 1),
    _SensorProbeRelayArrayPort2Number_Type()
)
sensorProbeRelayArrayPort2Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort2Number.setStatus("mandatory")
_SensorProbeRelayArrayPort2Table_Object = MibTable
sensorProbeRelayArrayPort2Table = _SensorProbeRelayArrayPort2Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 2, 2)
)
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort2Table.setStatus("mandatory")
_SensorProbeRelayArrayPort2Entry_Object = MibTableRow
sensorProbeRelayArrayPort2Entry = _SensorProbeRelayArrayPort2Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 2, 2, 1)
)
sensorProbeRelayArrayPort2Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeRelayArrayPort2Index"),
)
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort2Entry.setStatus("mandatory")


class _SensorProbeRelayArrayPort2Index_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort2Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeRelayArrayPort2Index_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort2Index_Object = MibTableColumn
sensorProbeRelayArrayPort2Index = _SensorProbeRelayArrayPort2Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 2, 2, 1, 1),
    _SensorProbeRelayArrayPort2Index_Type()
)
sensorProbeRelayArrayPort2Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort2Index.setStatus("mandatory")
_SensorProbeRelayArrayPort2Description_Type = DisplayString
_SensorProbeRelayArrayPort2Description_Object = MibTableColumn
sensorProbeRelayArrayPort2Description = _SensorProbeRelayArrayPort2Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 2, 2, 1, 2),
    _SensorProbeRelayArrayPort2Description_Type()
)
sensorProbeRelayArrayPort2Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort2Description.setStatus("mandatory")


class _SensorProbeRelayArrayPort2Status_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort2Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorProbeRelayArrayPort2Status_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort2Status_Object = MibTableColumn
sensorProbeRelayArrayPort2Status = _SensorProbeRelayArrayPort2Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 2, 2, 1, 4),
    _SensorProbeRelayArrayPort2Status_Type()
)
sensorProbeRelayArrayPort2Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort2Status.setStatus("mandatory")


class _SensorProbeRelayArrayPort2Online_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort2Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeRelayArrayPort2Online_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort2Online_Object = MibTableColumn
sensorProbeRelayArrayPort2Online = _SensorProbeRelayArrayPort2Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 2, 2, 1, 5),
    _SensorProbeRelayArrayPort2Online_Type()
)
sensorProbeRelayArrayPort2Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort2Online.setStatus("mandatory")


class _SensorProbeRelayArrayPort2GoOnline_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort2GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeRelayArrayPort2GoOnline_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort2GoOnline_Object = MibTableColumn
sensorProbeRelayArrayPort2GoOnline = _SensorProbeRelayArrayPort2GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 2, 2, 1, 6),
    _SensorProbeRelayArrayPort2GoOnline_Type()
)
sensorProbeRelayArrayPort2GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort2GoOnline.setStatus("mandatory")


class _SensorProbeRelayArrayPort2NormalState_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort2NormalState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("closed", 0),
          ("open", 1))
    )


_SensorProbeRelayArrayPort2NormalState_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort2NormalState_Object = MibTableColumn
sensorProbeRelayArrayPort2NormalState = _SensorProbeRelayArrayPort2NormalState_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 2, 2, 1, 7),
    _SensorProbeRelayArrayPort2NormalState_Type()
)
sensorProbeRelayArrayPort2NormalState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort2NormalState.setStatus("mandatory")


class _SensorProbeRelayArrayPort2RelayCycleTime_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort2RelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeRelayArrayPort2RelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort2RelayCycleTime_Object = MibTableColumn
sensorProbeRelayArrayPort2RelayCycleTime = _SensorProbeRelayArrayPort2RelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 2, 2, 1, 18),
    _SensorProbeRelayArrayPort2RelayCycleTime_Type()
)
sensorProbeRelayArrayPort2RelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort2RelayCycleTime.setStatus("mandatory")


class _SensorProbeRelayArrayPort2RelayAction_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort2RelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cycle", 2),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeRelayArrayPort2RelayAction_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort2RelayAction_Object = MibTableColumn
sensorProbeRelayArrayPort2RelayAction = _SensorProbeRelayArrayPort2RelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 2, 2, 1, 21),
    _SensorProbeRelayArrayPort2RelayAction_Type()
)
sensorProbeRelayArrayPort2RelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort2RelayAction.setStatus("mandatory")


class _SensorProbeRelayArrayPort2ManualRelayCycleTime_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort2ManualRelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeRelayArrayPort2ManualRelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort2ManualRelayCycleTime_Object = MibTableColumn
sensorProbeRelayArrayPort2ManualRelayCycleTime = _SensorProbeRelayArrayPort2ManualRelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 2, 2, 1, 24),
    _SensorProbeRelayArrayPort2ManualRelayCycleTime_Type()
)
sensorProbeRelayArrayPort2ManualRelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort2ManualRelayCycleTime.setStatus("mandatory")


class _SensorProbeRelayArrayPort2ManualRelayAction_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort2ManualRelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("allow-sensor-control", 1),
          ("cycle-Off-On-Off", 7),
          ("cycle-On-Off-On", 8),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeRelayArrayPort2ManualRelayAction_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort2ManualRelayAction_Object = MibTableColumn
sensorProbeRelayArrayPort2ManualRelayAction = _SensorProbeRelayArrayPort2ManualRelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 2, 2, 1, 25),
    _SensorProbeRelayArrayPort2ManualRelayAction_Type()
)
sensorProbeRelayArrayPort2ManualRelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort2ManualRelayAction.setStatus("mandatory")
_SensorProbeRelayArrayPort2RelayDescOn_Type = DisplayString
_SensorProbeRelayArrayPort2RelayDescOn_Object = MibTableColumn
sensorProbeRelayArrayPort2RelayDescOn = _SensorProbeRelayArrayPort2RelayDescOn_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 2, 2, 1, 26),
    _SensorProbeRelayArrayPort2RelayDescOn_Type()
)
sensorProbeRelayArrayPort2RelayDescOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort2RelayDescOn.setStatus("mandatory")
_SensorProbeRelayArrayPort2RelayDescOff_Type = DisplayString
_SensorProbeRelayArrayPort2RelayDescOff_Object = MibTableColumn
sensorProbeRelayArrayPort2RelayDescOff = _SensorProbeRelayArrayPort2RelayDescOff_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 2, 2, 1, 27),
    _SensorProbeRelayArrayPort2RelayDescOff_Type()
)
sensorProbeRelayArrayPort2RelayDescOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort2RelayDescOff.setStatus("mandatory")
_SensorProbeRelayArrayPort2URL_Type = DisplayString
_SensorProbeRelayArrayPort2URL_Object = MibTableColumn
sensorProbeRelayArrayPort2URL = _SensorProbeRelayArrayPort2URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 2, 2, 1, 28),
    _SensorProbeRelayArrayPort2URL_Type()
)
sensorProbeRelayArrayPort2URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort2URL.setStatus("mandatory")


class _SensorProbeRelayArrayPort2OpenURL_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort2OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeRelayArrayPort2OpenURL_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort2OpenURL_Object = MibTableColumn
sensorProbeRelayArrayPort2OpenURL = _SensorProbeRelayArrayPort2OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 2, 2, 1, 29),
    _SensorProbeRelayArrayPort2OpenURL_Type()
)
sensorProbeRelayArrayPort2OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort2OpenURL.setStatus("mandatory")


class _SensorProbeRelayArrayPort2ControlMode_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort2ControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("manual-control", 0),
          ("notification-control", 1),
          ("thermostat-control", 3),
          ("time-control", 2))
    )


_SensorProbeRelayArrayPort2ControlMode_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort2ControlMode_Object = MibTableColumn
sensorProbeRelayArrayPort2ControlMode = _SensorProbeRelayArrayPort2ControlMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 2, 2, 1, 30),
    _SensorProbeRelayArrayPort2ControlMode_Type()
)
sensorProbeRelayArrayPort2ControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort2ControlMode.setStatus("mandatory")
_SensorProbeRelayArrayPort3_ObjectIdentity = ObjectIdentity
sensorProbeRelayArrayPort3 = _SensorProbeRelayArrayPort3_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 3)
)
_SensorProbeRelayArrayPort3Number_Type = Integer32
_SensorProbeRelayArrayPort3Number_Object = MibScalar
sensorProbeRelayArrayPort3Number = _SensorProbeRelayArrayPort3Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 3, 1),
    _SensorProbeRelayArrayPort3Number_Type()
)
sensorProbeRelayArrayPort3Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort3Number.setStatus("mandatory")
_SensorProbeRelayArrayPort3Table_Object = MibTable
sensorProbeRelayArrayPort3Table = _SensorProbeRelayArrayPort3Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 3, 2)
)
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort3Table.setStatus("mandatory")
_SensorProbeRelayArrayPort3Entry_Object = MibTableRow
sensorProbeRelayArrayPort3Entry = _SensorProbeRelayArrayPort3Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 3, 2, 1)
)
sensorProbeRelayArrayPort3Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeRelayArrayPort3Index"),
)
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort3Entry.setStatus("mandatory")


class _SensorProbeRelayArrayPort3Index_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort3Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeRelayArrayPort3Index_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort3Index_Object = MibTableColumn
sensorProbeRelayArrayPort3Index = _SensorProbeRelayArrayPort3Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 3, 2, 1, 1),
    _SensorProbeRelayArrayPort3Index_Type()
)
sensorProbeRelayArrayPort3Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort3Index.setStatus("mandatory")
_SensorProbeRelayArrayPort3Description_Type = DisplayString
_SensorProbeRelayArrayPort3Description_Object = MibTableColumn
sensorProbeRelayArrayPort3Description = _SensorProbeRelayArrayPort3Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 3, 2, 1, 2),
    _SensorProbeRelayArrayPort3Description_Type()
)
sensorProbeRelayArrayPort3Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort3Description.setStatus("mandatory")


class _SensorProbeRelayArrayPort3Status_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort3Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorProbeRelayArrayPort3Status_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort3Status_Object = MibTableColumn
sensorProbeRelayArrayPort3Status = _SensorProbeRelayArrayPort3Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 3, 2, 1, 4),
    _SensorProbeRelayArrayPort3Status_Type()
)
sensorProbeRelayArrayPort3Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort3Status.setStatus("mandatory")


class _SensorProbeRelayArrayPort3Online_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort3Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeRelayArrayPort3Online_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort3Online_Object = MibTableColumn
sensorProbeRelayArrayPort3Online = _SensorProbeRelayArrayPort3Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 3, 2, 1, 5),
    _SensorProbeRelayArrayPort3Online_Type()
)
sensorProbeRelayArrayPort3Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort3Online.setStatus("mandatory")


class _SensorProbeRelayArrayPort3GoOnline_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort3GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeRelayArrayPort3GoOnline_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort3GoOnline_Object = MibTableColumn
sensorProbeRelayArrayPort3GoOnline = _SensorProbeRelayArrayPort3GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 3, 2, 1, 6),
    _SensorProbeRelayArrayPort3GoOnline_Type()
)
sensorProbeRelayArrayPort3GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort3GoOnline.setStatus("mandatory")


class _SensorProbeRelayArrayPort3NormalState_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort3NormalState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("closed", 0),
          ("open", 1))
    )


_SensorProbeRelayArrayPort3NormalState_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort3NormalState_Object = MibTableColumn
sensorProbeRelayArrayPort3NormalState = _SensorProbeRelayArrayPort3NormalState_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 3, 2, 1, 7),
    _SensorProbeRelayArrayPort3NormalState_Type()
)
sensorProbeRelayArrayPort3NormalState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort3NormalState.setStatus("mandatory")


class _SensorProbeRelayArrayPort3RelayCycleTime_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort3RelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeRelayArrayPort3RelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort3RelayCycleTime_Object = MibTableColumn
sensorProbeRelayArrayPort3RelayCycleTime = _SensorProbeRelayArrayPort3RelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 3, 2, 1, 18),
    _SensorProbeRelayArrayPort3RelayCycleTime_Type()
)
sensorProbeRelayArrayPort3RelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort3RelayCycleTime.setStatus("mandatory")


class _SensorProbeRelayArrayPort3RelayAction_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort3RelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cycle", 2),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeRelayArrayPort3RelayAction_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort3RelayAction_Object = MibTableColumn
sensorProbeRelayArrayPort3RelayAction = _SensorProbeRelayArrayPort3RelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 3, 2, 1, 21),
    _SensorProbeRelayArrayPort3RelayAction_Type()
)
sensorProbeRelayArrayPort3RelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort3RelayAction.setStatus("mandatory")


class _SensorProbeRelayArrayPort3ManualRelayCycleTime_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort3ManualRelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeRelayArrayPort3ManualRelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort3ManualRelayCycleTime_Object = MibTableColumn
sensorProbeRelayArrayPort3ManualRelayCycleTime = _SensorProbeRelayArrayPort3ManualRelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 3, 2, 1, 24),
    _SensorProbeRelayArrayPort3ManualRelayCycleTime_Type()
)
sensorProbeRelayArrayPort3ManualRelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort3ManualRelayCycleTime.setStatus("mandatory")


class _SensorProbeRelayArrayPort3ManualRelayAction_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort3ManualRelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("allow-sensor-control", 1),
          ("cycle-Off-On-Off", 7),
          ("cycle-On-Off-On", 8),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeRelayArrayPort3ManualRelayAction_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort3ManualRelayAction_Object = MibTableColumn
sensorProbeRelayArrayPort3ManualRelayAction = _SensorProbeRelayArrayPort3ManualRelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 3, 2, 1, 25),
    _SensorProbeRelayArrayPort3ManualRelayAction_Type()
)
sensorProbeRelayArrayPort3ManualRelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort3ManualRelayAction.setStatus("mandatory")
_SensorProbeRelayArrayPort3RelayDescOn_Type = DisplayString
_SensorProbeRelayArrayPort3RelayDescOn_Object = MibTableColumn
sensorProbeRelayArrayPort3RelayDescOn = _SensorProbeRelayArrayPort3RelayDescOn_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 3, 2, 1, 26),
    _SensorProbeRelayArrayPort3RelayDescOn_Type()
)
sensorProbeRelayArrayPort3RelayDescOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort3RelayDescOn.setStatus("mandatory")
_SensorProbeRelayArrayPort3RelayDescOff_Type = DisplayString
_SensorProbeRelayArrayPort3RelayDescOff_Object = MibTableColumn
sensorProbeRelayArrayPort3RelayDescOff = _SensorProbeRelayArrayPort3RelayDescOff_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 3, 2, 1, 27),
    _SensorProbeRelayArrayPort3RelayDescOff_Type()
)
sensorProbeRelayArrayPort3RelayDescOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort3RelayDescOff.setStatus("mandatory")
_SensorProbeRelayArrayPort3URL_Type = DisplayString
_SensorProbeRelayArrayPort3URL_Object = MibTableColumn
sensorProbeRelayArrayPort3URL = _SensorProbeRelayArrayPort3URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 3, 2, 1, 28),
    _SensorProbeRelayArrayPort3URL_Type()
)
sensorProbeRelayArrayPort3URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort3URL.setStatus("mandatory")


class _SensorProbeRelayArrayPort3OpenURL_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort3OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeRelayArrayPort3OpenURL_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort3OpenURL_Object = MibTableColumn
sensorProbeRelayArrayPort3OpenURL = _SensorProbeRelayArrayPort3OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 3, 2, 1, 29),
    _SensorProbeRelayArrayPort3OpenURL_Type()
)
sensorProbeRelayArrayPort3OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort3OpenURL.setStatus("mandatory")


class _SensorProbeRelayArrayPort3ControlMode_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort3ControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("manual-control", 0),
          ("notification-control", 1),
          ("thermostat-control", 3),
          ("time-control", 2))
    )


_SensorProbeRelayArrayPort3ControlMode_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort3ControlMode_Object = MibTableColumn
sensorProbeRelayArrayPort3ControlMode = _SensorProbeRelayArrayPort3ControlMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 3, 2, 1, 30),
    _SensorProbeRelayArrayPort3ControlMode_Type()
)
sensorProbeRelayArrayPort3ControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort3ControlMode.setStatus("mandatory")
_SensorProbeRelayArrayPort4_ObjectIdentity = ObjectIdentity
sensorProbeRelayArrayPort4 = _SensorProbeRelayArrayPort4_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 4)
)
_SensorProbeRelayArrayPort4Number_Type = Integer32
_SensorProbeRelayArrayPort4Number_Object = MibScalar
sensorProbeRelayArrayPort4Number = _SensorProbeRelayArrayPort4Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 4, 1),
    _SensorProbeRelayArrayPort4Number_Type()
)
sensorProbeRelayArrayPort4Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort4Number.setStatus("mandatory")
_SensorProbeRelayArrayPort4Table_Object = MibTable
sensorProbeRelayArrayPort4Table = _SensorProbeRelayArrayPort4Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 4, 2)
)
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort4Table.setStatus("mandatory")
_SensorProbeRelayArrayPort4Entry_Object = MibTableRow
sensorProbeRelayArrayPort4Entry = _SensorProbeRelayArrayPort4Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 4, 2, 1)
)
sensorProbeRelayArrayPort4Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeRelayArrayPort4Index"),
)
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort4Entry.setStatus("mandatory")


class _SensorProbeRelayArrayPort4Index_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort4Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeRelayArrayPort4Index_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort4Index_Object = MibTableColumn
sensorProbeRelayArrayPort4Index = _SensorProbeRelayArrayPort4Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 4, 2, 1, 1),
    _SensorProbeRelayArrayPort4Index_Type()
)
sensorProbeRelayArrayPort4Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort4Index.setStatus("mandatory")
_SensorProbeRelayArrayPort4Description_Type = DisplayString
_SensorProbeRelayArrayPort4Description_Object = MibTableColumn
sensorProbeRelayArrayPort4Description = _SensorProbeRelayArrayPort4Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 4, 2, 1, 2),
    _SensorProbeRelayArrayPort4Description_Type()
)
sensorProbeRelayArrayPort4Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort4Description.setStatus("mandatory")


class _SensorProbeRelayArrayPort4Status_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort4Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorProbeRelayArrayPort4Status_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort4Status_Object = MibTableColumn
sensorProbeRelayArrayPort4Status = _SensorProbeRelayArrayPort4Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 4, 2, 1, 4),
    _SensorProbeRelayArrayPort4Status_Type()
)
sensorProbeRelayArrayPort4Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort4Status.setStatus("mandatory")


class _SensorProbeRelayArrayPort4Online_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort4Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeRelayArrayPort4Online_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort4Online_Object = MibTableColumn
sensorProbeRelayArrayPort4Online = _SensorProbeRelayArrayPort4Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 4, 2, 1, 5),
    _SensorProbeRelayArrayPort4Online_Type()
)
sensorProbeRelayArrayPort4Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort4Online.setStatus("mandatory")


class _SensorProbeRelayArrayPort4GoOnline_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort4GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeRelayArrayPort4GoOnline_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort4GoOnline_Object = MibTableColumn
sensorProbeRelayArrayPort4GoOnline = _SensorProbeRelayArrayPort4GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 4, 2, 1, 6),
    _SensorProbeRelayArrayPort4GoOnline_Type()
)
sensorProbeRelayArrayPort4GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort4GoOnline.setStatus("mandatory")


class _SensorProbeRelayArrayPort4NormalState_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort4NormalState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("closed", 0),
          ("open", 1))
    )


_SensorProbeRelayArrayPort4NormalState_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort4NormalState_Object = MibTableColumn
sensorProbeRelayArrayPort4NormalState = _SensorProbeRelayArrayPort4NormalState_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 4, 2, 1, 7),
    _SensorProbeRelayArrayPort4NormalState_Type()
)
sensorProbeRelayArrayPort4NormalState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort4NormalState.setStatus("mandatory")


class _SensorProbeRelayArrayPort4RelayCycleTime_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort4RelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeRelayArrayPort4RelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort4RelayCycleTime_Object = MibTableColumn
sensorProbeRelayArrayPort4RelayCycleTime = _SensorProbeRelayArrayPort4RelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 4, 2, 1, 18),
    _SensorProbeRelayArrayPort4RelayCycleTime_Type()
)
sensorProbeRelayArrayPort4RelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort4RelayCycleTime.setStatus("mandatory")


class _SensorProbeRelayArrayPort4RelayAction_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort4RelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cycle", 2),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeRelayArrayPort4RelayAction_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort4RelayAction_Object = MibTableColumn
sensorProbeRelayArrayPort4RelayAction = _SensorProbeRelayArrayPort4RelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 4, 2, 1, 21),
    _SensorProbeRelayArrayPort4RelayAction_Type()
)
sensorProbeRelayArrayPort4RelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort4RelayAction.setStatus("mandatory")


class _SensorProbeRelayArrayPort4ManualRelayCycleTime_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort4ManualRelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeRelayArrayPort4ManualRelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort4ManualRelayCycleTime_Object = MibTableColumn
sensorProbeRelayArrayPort4ManualRelayCycleTime = _SensorProbeRelayArrayPort4ManualRelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 4, 2, 1, 24),
    _SensorProbeRelayArrayPort4ManualRelayCycleTime_Type()
)
sensorProbeRelayArrayPort4ManualRelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort4ManualRelayCycleTime.setStatus("mandatory")


class _SensorProbeRelayArrayPort4ManualRelayAction_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort4ManualRelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("allow-sensor-control", 1),
          ("cycle-Off-On-Off", 7),
          ("cycle-On-Off-On", 8),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeRelayArrayPort4ManualRelayAction_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort4ManualRelayAction_Object = MibTableColumn
sensorProbeRelayArrayPort4ManualRelayAction = _SensorProbeRelayArrayPort4ManualRelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 4, 2, 1, 25),
    _SensorProbeRelayArrayPort4ManualRelayAction_Type()
)
sensorProbeRelayArrayPort4ManualRelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort4ManualRelayAction.setStatus("mandatory")
_SensorProbeRelayArrayPort4RelayDescOn_Type = DisplayString
_SensorProbeRelayArrayPort4RelayDescOn_Object = MibTableColumn
sensorProbeRelayArrayPort4RelayDescOn = _SensorProbeRelayArrayPort4RelayDescOn_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 4, 2, 1, 26),
    _SensorProbeRelayArrayPort4RelayDescOn_Type()
)
sensorProbeRelayArrayPort4RelayDescOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort4RelayDescOn.setStatus("mandatory")
_SensorProbeRelayArrayPort4RelayDescOff_Type = DisplayString
_SensorProbeRelayArrayPort4RelayDescOff_Object = MibTableColumn
sensorProbeRelayArrayPort4RelayDescOff = _SensorProbeRelayArrayPort4RelayDescOff_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 4, 2, 1, 27),
    _SensorProbeRelayArrayPort4RelayDescOff_Type()
)
sensorProbeRelayArrayPort4RelayDescOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort4RelayDescOff.setStatus("mandatory")
_SensorProbeRelayArrayPort4URL_Type = DisplayString
_SensorProbeRelayArrayPort4URL_Object = MibTableColumn
sensorProbeRelayArrayPort4URL = _SensorProbeRelayArrayPort4URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 4, 2, 1, 28),
    _SensorProbeRelayArrayPort4URL_Type()
)
sensorProbeRelayArrayPort4URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort4URL.setStatus("mandatory")


class _SensorProbeRelayArrayPort4OpenURL_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort4OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeRelayArrayPort4OpenURL_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort4OpenURL_Object = MibTableColumn
sensorProbeRelayArrayPort4OpenURL = _SensorProbeRelayArrayPort4OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 4, 2, 1, 29),
    _SensorProbeRelayArrayPort4OpenURL_Type()
)
sensorProbeRelayArrayPort4OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort4OpenURL.setStatus("mandatory")


class _SensorProbeRelayArrayPort4ControlMode_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort4ControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("manual-control", 0),
          ("notification-control", 1),
          ("thermostat-control", 3),
          ("time-control", 2))
    )


_SensorProbeRelayArrayPort4ControlMode_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort4ControlMode_Object = MibTableColumn
sensorProbeRelayArrayPort4ControlMode = _SensorProbeRelayArrayPort4ControlMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 4, 2, 1, 30),
    _SensorProbeRelayArrayPort4ControlMode_Type()
)
sensorProbeRelayArrayPort4ControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort4ControlMode.setStatus("mandatory")
_SensorProbeRelayArrayPort5_ObjectIdentity = ObjectIdentity
sensorProbeRelayArrayPort5 = _SensorProbeRelayArrayPort5_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 5)
)
_SensorProbeRelayArrayPort5Number_Type = Integer32
_SensorProbeRelayArrayPort5Number_Object = MibScalar
sensorProbeRelayArrayPort5Number = _SensorProbeRelayArrayPort5Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 5, 1),
    _SensorProbeRelayArrayPort5Number_Type()
)
sensorProbeRelayArrayPort5Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort5Number.setStatus("mandatory")
_SensorProbeRelayArrayPort5Table_Object = MibTable
sensorProbeRelayArrayPort5Table = _SensorProbeRelayArrayPort5Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 5, 2)
)
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort5Table.setStatus("mandatory")
_SensorProbeRelayArrayPort5Entry_Object = MibTableRow
sensorProbeRelayArrayPort5Entry = _SensorProbeRelayArrayPort5Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 5, 2, 1)
)
sensorProbeRelayArrayPort5Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeRelayArrayPort5Index"),
)
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort5Entry.setStatus("mandatory")


class _SensorProbeRelayArrayPort5Index_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort5Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeRelayArrayPort5Index_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort5Index_Object = MibTableColumn
sensorProbeRelayArrayPort5Index = _SensorProbeRelayArrayPort5Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 5, 2, 1, 1),
    _SensorProbeRelayArrayPort5Index_Type()
)
sensorProbeRelayArrayPort5Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort5Index.setStatus("mandatory")
_SensorProbeRelayArrayPort5Description_Type = DisplayString
_SensorProbeRelayArrayPort5Description_Object = MibTableColumn
sensorProbeRelayArrayPort5Description = _SensorProbeRelayArrayPort5Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 5, 2, 1, 2),
    _SensorProbeRelayArrayPort5Description_Type()
)
sensorProbeRelayArrayPort5Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort5Description.setStatus("mandatory")


class _SensorProbeRelayArrayPort5Status_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort5Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorProbeRelayArrayPort5Status_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort5Status_Object = MibTableColumn
sensorProbeRelayArrayPort5Status = _SensorProbeRelayArrayPort5Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 5, 2, 1, 4),
    _SensorProbeRelayArrayPort5Status_Type()
)
sensorProbeRelayArrayPort5Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort5Status.setStatus("mandatory")


class _SensorProbeRelayArrayPort5Online_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort5Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeRelayArrayPort5Online_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort5Online_Object = MibTableColumn
sensorProbeRelayArrayPort5Online = _SensorProbeRelayArrayPort5Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 5, 2, 1, 5),
    _SensorProbeRelayArrayPort5Online_Type()
)
sensorProbeRelayArrayPort5Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort5Online.setStatus("mandatory")


class _SensorProbeRelayArrayPort5GoOnline_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort5GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeRelayArrayPort5GoOnline_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort5GoOnline_Object = MibTableColumn
sensorProbeRelayArrayPort5GoOnline = _SensorProbeRelayArrayPort5GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 5, 2, 1, 6),
    _SensorProbeRelayArrayPort5GoOnline_Type()
)
sensorProbeRelayArrayPort5GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort5GoOnline.setStatus("mandatory")


class _SensorProbeRelayArrayPort5NormalState_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort5NormalState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("closed", 0),
          ("open", 1))
    )


_SensorProbeRelayArrayPort5NormalState_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort5NormalState_Object = MibTableColumn
sensorProbeRelayArrayPort5NormalState = _SensorProbeRelayArrayPort5NormalState_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 5, 2, 1, 7),
    _SensorProbeRelayArrayPort5NormalState_Type()
)
sensorProbeRelayArrayPort5NormalState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort5NormalState.setStatus("mandatory")


class _SensorProbeRelayArrayPort5RelayCycleTime_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort5RelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeRelayArrayPort5RelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort5RelayCycleTime_Object = MibTableColumn
sensorProbeRelayArrayPort5RelayCycleTime = _SensorProbeRelayArrayPort5RelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 5, 2, 1, 18),
    _SensorProbeRelayArrayPort5RelayCycleTime_Type()
)
sensorProbeRelayArrayPort5RelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort5RelayCycleTime.setStatus("mandatory")


class _SensorProbeRelayArrayPort5RelayAction_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort5RelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cycle", 2),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeRelayArrayPort5RelayAction_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort5RelayAction_Object = MibTableColumn
sensorProbeRelayArrayPort5RelayAction = _SensorProbeRelayArrayPort5RelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 5, 2, 1, 21),
    _SensorProbeRelayArrayPort5RelayAction_Type()
)
sensorProbeRelayArrayPort5RelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort5RelayAction.setStatus("mandatory")


class _SensorProbeRelayArrayPort5ManualRelayCycleTime_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort5ManualRelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeRelayArrayPort5ManualRelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort5ManualRelayCycleTime_Object = MibTableColumn
sensorProbeRelayArrayPort5ManualRelayCycleTime = _SensorProbeRelayArrayPort5ManualRelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 5, 2, 1, 24),
    _SensorProbeRelayArrayPort5ManualRelayCycleTime_Type()
)
sensorProbeRelayArrayPort5ManualRelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort5ManualRelayCycleTime.setStatus("mandatory")


class _SensorProbeRelayArrayPort5ManualRelayAction_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort5ManualRelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("allow-sensor-control", 1),
          ("cycle-Off-On-Off", 7),
          ("cycle-On-Off-On", 8),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeRelayArrayPort5ManualRelayAction_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort5ManualRelayAction_Object = MibTableColumn
sensorProbeRelayArrayPort5ManualRelayAction = _SensorProbeRelayArrayPort5ManualRelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 5, 2, 1, 25),
    _SensorProbeRelayArrayPort5ManualRelayAction_Type()
)
sensorProbeRelayArrayPort5ManualRelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort5ManualRelayAction.setStatus("mandatory")
_SensorProbeRelayArrayPort5RelayDescOn_Type = DisplayString
_SensorProbeRelayArrayPort5RelayDescOn_Object = MibTableColumn
sensorProbeRelayArrayPort5RelayDescOn = _SensorProbeRelayArrayPort5RelayDescOn_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 5, 2, 1, 26),
    _SensorProbeRelayArrayPort5RelayDescOn_Type()
)
sensorProbeRelayArrayPort5RelayDescOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort5RelayDescOn.setStatus("mandatory")
_SensorProbeRelayArrayPort5RelayDescOff_Type = DisplayString
_SensorProbeRelayArrayPort5RelayDescOff_Object = MibTableColumn
sensorProbeRelayArrayPort5RelayDescOff = _SensorProbeRelayArrayPort5RelayDescOff_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 5, 2, 1, 27),
    _SensorProbeRelayArrayPort5RelayDescOff_Type()
)
sensorProbeRelayArrayPort5RelayDescOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort5RelayDescOff.setStatus("mandatory")
_SensorProbeRelayArrayPort5URL_Type = DisplayString
_SensorProbeRelayArrayPort5URL_Object = MibTableColumn
sensorProbeRelayArrayPort5URL = _SensorProbeRelayArrayPort5URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 5, 2, 1, 28),
    _SensorProbeRelayArrayPort5URL_Type()
)
sensorProbeRelayArrayPort5URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort5URL.setStatus("mandatory")


class _SensorProbeRelayArrayPort5OpenURL_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort5OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeRelayArrayPort5OpenURL_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort5OpenURL_Object = MibTableColumn
sensorProbeRelayArrayPort5OpenURL = _SensorProbeRelayArrayPort5OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 5, 2, 1, 29),
    _SensorProbeRelayArrayPort5OpenURL_Type()
)
sensorProbeRelayArrayPort5OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort5OpenURL.setStatus("mandatory")


class _SensorProbeRelayArrayPort5ControlMode_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort5ControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("manual-control", 0),
          ("notification-control", 1),
          ("thermostat-control", 3),
          ("time-control", 2))
    )


_SensorProbeRelayArrayPort5ControlMode_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort5ControlMode_Object = MibTableColumn
sensorProbeRelayArrayPort5ControlMode = _SensorProbeRelayArrayPort5ControlMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 5, 2, 1, 30),
    _SensorProbeRelayArrayPort5ControlMode_Type()
)
sensorProbeRelayArrayPort5ControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort5ControlMode.setStatus("mandatory")
_SensorProbeRelayArrayPort6_ObjectIdentity = ObjectIdentity
sensorProbeRelayArrayPort6 = _SensorProbeRelayArrayPort6_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 6)
)
_SensorProbeRelayArrayPort6Number_Type = Integer32
_SensorProbeRelayArrayPort6Number_Object = MibScalar
sensorProbeRelayArrayPort6Number = _SensorProbeRelayArrayPort6Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 6, 1),
    _SensorProbeRelayArrayPort6Number_Type()
)
sensorProbeRelayArrayPort6Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort6Number.setStatus("mandatory")
_SensorProbeRelayArrayPort6Table_Object = MibTable
sensorProbeRelayArrayPort6Table = _SensorProbeRelayArrayPort6Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 6, 2)
)
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort6Table.setStatus("mandatory")
_SensorProbeRelayArrayPort6Entry_Object = MibTableRow
sensorProbeRelayArrayPort6Entry = _SensorProbeRelayArrayPort6Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 6, 2, 1)
)
sensorProbeRelayArrayPort6Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeRelayArrayPort6Index"),
)
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort6Entry.setStatus("mandatory")


class _SensorProbeRelayArrayPort6Index_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort6Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeRelayArrayPort6Index_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort6Index_Object = MibTableColumn
sensorProbeRelayArrayPort6Index = _SensorProbeRelayArrayPort6Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 6, 2, 1, 1),
    _SensorProbeRelayArrayPort6Index_Type()
)
sensorProbeRelayArrayPort6Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort6Index.setStatus("mandatory")
_SensorProbeRelayArrayPort6Description_Type = DisplayString
_SensorProbeRelayArrayPort6Description_Object = MibTableColumn
sensorProbeRelayArrayPort6Description = _SensorProbeRelayArrayPort6Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 6, 2, 1, 2),
    _SensorProbeRelayArrayPort6Description_Type()
)
sensorProbeRelayArrayPort6Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort6Description.setStatus("mandatory")


class _SensorProbeRelayArrayPort6Status_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort6Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorProbeRelayArrayPort6Status_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort6Status_Object = MibTableColumn
sensorProbeRelayArrayPort6Status = _SensorProbeRelayArrayPort6Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 6, 2, 1, 4),
    _SensorProbeRelayArrayPort6Status_Type()
)
sensorProbeRelayArrayPort6Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort6Status.setStatus("mandatory")


class _SensorProbeRelayArrayPort6Online_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort6Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeRelayArrayPort6Online_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort6Online_Object = MibTableColumn
sensorProbeRelayArrayPort6Online = _SensorProbeRelayArrayPort6Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 6, 2, 1, 5),
    _SensorProbeRelayArrayPort6Online_Type()
)
sensorProbeRelayArrayPort6Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort6Online.setStatus("mandatory")


class _SensorProbeRelayArrayPort6GoOnline_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort6GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeRelayArrayPort6GoOnline_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort6GoOnline_Object = MibTableColumn
sensorProbeRelayArrayPort6GoOnline = _SensorProbeRelayArrayPort6GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 6, 2, 1, 6),
    _SensorProbeRelayArrayPort6GoOnline_Type()
)
sensorProbeRelayArrayPort6GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort6GoOnline.setStatus("mandatory")


class _SensorProbeRelayArrayPort6NormalState_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort6NormalState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("closed", 0),
          ("open", 1))
    )


_SensorProbeRelayArrayPort6NormalState_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort6NormalState_Object = MibTableColumn
sensorProbeRelayArrayPort6NormalState = _SensorProbeRelayArrayPort6NormalState_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 6, 2, 1, 7),
    _SensorProbeRelayArrayPort6NormalState_Type()
)
sensorProbeRelayArrayPort6NormalState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort6NormalState.setStatus("mandatory")


class _SensorProbeRelayArrayPort6RelayCycleTime_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort6RelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeRelayArrayPort6RelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort6RelayCycleTime_Object = MibTableColumn
sensorProbeRelayArrayPort6RelayCycleTime = _SensorProbeRelayArrayPort6RelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 6, 2, 1, 18),
    _SensorProbeRelayArrayPort6RelayCycleTime_Type()
)
sensorProbeRelayArrayPort6RelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort6RelayCycleTime.setStatus("mandatory")


class _SensorProbeRelayArrayPort6RelayAction_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort6RelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cycle", 2),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeRelayArrayPort6RelayAction_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort6RelayAction_Object = MibTableColumn
sensorProbeRelayArrayPort6RelayAction = _SensorProbeRelayArrayPort6RelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 6, 2, 1, 21),
    _SensorProbeRelayArrayPort6RelayAction_Type()
)
sensorProbeRelayArrayPort6RelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort6RelayAction.setStatus("mandatory")


class _SensorProbeRelayArrayPort6ManualRelayCycleTime_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort6ManualRelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeRelayArrayPort6ManualRelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort6ManualRelayCycleTime_Object = MibTableColumn
sensorProbeRelayArrayPort6ManualRelayCycleTime = _SensorProbeRelayArrayPort6ManualRelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 6, 2, 1, 24),
    _SensorProbeRelayArrayPort6ManualRelayCycleTime_Type()
)
sensorProbeRelayArrayPort6ManualRelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort6ManualRelayCycleTime.setStatus("mandatory")


class _SensorProbeRelayArrayPort6ManualRelayAction_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort6ManualRelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("allow-sensor-control", 1),
          ("cycle-Off-On-Off", 7),
          ("cycle-On-Off-On", 8),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeRelayArrayPort6ManualRelayAction_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort6ManualRelayAction_Object = MibTableColumn
sensorProbeRelayArrayPort6ManualRelayAction = _SensorProbeRelayArrayPort6ManualRelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 6, 2, 1, 25),
    _SensorProbeRelayArrayPort6ManualRelayAction_Type()
)
sensorProbeRelayArrayPort6ManualRelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort6ManualRelayAction.setStatus("mandatory")
_SensorProbeRelayArrayPort6RelayDescOn_Type = DisplayString
_SensorProbeRelayArrayPort6RelayDescOn_Object = MibTableColumn
sensorProbeRelayArrayPort6RelayDescOn = _SensorProbeRelayArrayPort6RelayDescOn_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 6, 2, 1, 26),
    _SensorProbeRelayArrayPort6RelayDescOn_Type()
)
sensorProbeRelayArrayPort6RelayDescOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort6RelayDescOn.setStatus("mandatory")
_SensorProbeRelayArrayPort6RelayDescOff_Type = DisplayString
_SensorProbeRelayArrayPort6RelayDescOff_Object = MibTableColumn
sensorProbeRelayArrayPort6RelayDescOff = _SensorProbeRelayArrayPort6RelayDescOff_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 6, 2, 1, 27),
    _SensorProbeRelayArrayPort6RelayDescOff_Type()
)
sensorProbeRelayArrayPort6RelayDescOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort6RelayDescOff.setStatus("mandatory")
_SensorProbeRelayArrayPort6URL_Type = DisplayString
_SensorProbeRelayArrayPort6URL_Object = MibTableColumn
sensorProbeRelayArrayPort6URL = _SensorProbeRelayArrayPort6URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 6, 2, 1, 28),
    _SensorProbeRelayArrayPort6URL_Type()
)
sensorProbeRelayArrayPort6URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort6URL.setStatus("mandatory")


class _SensorProbeRelayArrayPort6OpenURL_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort6OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeRelayArrayPort6OpenURL_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort6OpenURL_Object = MibTableColumn
sensorProbeRelayArrayPort6OpenURL = _SensorProbeRelayArrayPort6OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 6, 2, 1, 29),
    _SensorProbeRelayArrayPort6OpenURL_Type()
)
sensorProbeRelayArrayPort6OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort6OpenURL.setStatus("mandatory")


class _SensorProbeRelayArrayPort6ControlMode_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort6ControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("manual-control", 0),
          ("notification-control", 1),
          ("thermostat-control", 3),
          ("time-control", 2))
    )


_SensorProbeRelayArrayPort6ControlMode_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort6ControlMode_Object = MibTableColumn
sensorProbeRelayArrayPort6ControlMode = _SensorProbeRelayArrayPort6ControlMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 6, 2, 1, 30),
    _SensorProbeRelayArrayPort6ControlMode_Type()
)
sensorProbeRelayArrayPort6ControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort6ControlMode.setStatus("mandatory")
_SensorProbeRelayArrayPort7_ObjectIdentity = ObjectIdentity
sensorProbeRelayArrayPort7 = _SensorProbeRelayArrayPort7_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 7)
)
_SensorProbeRelayArrayPort7Number_Type = Integer32
_SensorProbeRelayArrayPort7Number_Object = MibScalar
sensorProbeRelayArrayPort7Number = _SensorProbeRelayArrayPort7Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 7, 1),
    _SensorProbeRelayArrayPort7Number_Type()
)
sensorProbeRelayArrayPort7Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort7Number.setStatus("mandatory")
_SensorProbeRelayArrayPort7Table_Object = MibTable
sensorProbeRelayArrayPort7Table = _SensorProbeRelayArrayPort7Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 7, 2)
)
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort7Table.setStatus("mandatory")
_SensorProbeRelayArrayPort7Entry_Object = MibTableRow
sensorProbeRelayArrayPort7Entry = _SensorProbeRelayArrayPort7Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 7, 2, 1)
)
sensorProbeRelayArrayPort7Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeRelayArrayPort7Index"),
)
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort7Entry.setStatus("mandatory")


class _SensorProbeRelayArrayPort7Index_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort7Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeRelayArrayPort7Index_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort7Index_Object = MibTableColumn
sensorProbeRelayArrayPort7Index = _SensorProbeRelayArrayPort7Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 7, 2, 1, 1),
    _SensorProbeRelayArrayPort7Index_Type()
)
sensorProbeRelayArrayPort7Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort7Index.setStatus("mandatory")
_SensorProbeRelayArrayPort7Description_Type = DisplayString
_SensorProbeRelayArrayPort7Description_Object = MibTableColumn
sensorProbeRelayArrayPort7Description = _SensorProbeRelayArrayPort7Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 7, 2, 1, 2),
    _SensorProbeRelayArrayPort7Description_Type()
)
sensorProbeRelayArrayPort7Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort7Description.setStatus("mandatory")


class _SensorProbeRelayArrayPort7Status_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort7Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorProbeRelayArrayPort7Status_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort7Status_Object = MibTableColumn
sensorProbeRelayArrayPort7Status = _SensorProbeRelayArrayPort7Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 7, 2, 1, 4),
    _SensorProbeRelayArrayPort7Status_Type()
)
sensorProbeRelayArrayPort7Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort7Status.setStatus("mandatory")


class _SensorProbeRelayArrayPort7Online_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort7Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeRelayArrayPort7Online_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort7Online_Object = MibTableColumn
sensorProbeRelayArrayPort7Online = _SensorProbeRelayArrayPort7Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 7, 2, 1, 5),
    _SensorProbeRelayArrayPort7Online_Type()
)
sensorProbeRelayArrayPort7Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort7Online.setStatus("mandatory")


class _SensorProbeRelayArrayPort7GoOnline_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort7GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeRelayArrayPort7GoOnline_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort7GoOnline_Object = MibTableColumn
sensorProbeRelayArrayPort7GoOnline = _SensorProbeRelayArrayPort7GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 7, 2, 1, 6),
    _SensorProbeRelayArrayPort7GoOnline_Type()
)
sensorProbeRelayArrayPort7GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort7GoOnline.setStatus("mandatory")


class _SensorProbeRelayArrayPort7NormalState_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort7NormalState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("closed", 0),
          ("open", 1))
    )


_SensorProbeRelayArrayPort7NormalState_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort7NormalState_Object = MibTableColumn
sensorProbeRelayArrayPort7NormalState = _SensorProbeRelayArrayPort7NormalState_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 7, 2, 1, 7),
    _SensorProbeRelayArrayPort7NormalState_Type()
)
sensorProbeRelayArrayPort7NormalState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort7NormalState.setStatus("mandatory")


class _SensorProbeRelayArrayPort7RelayCycleTime_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort7RelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeRelayArrayPort7RelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort7RelayCycleTime_Object = MibTableColumn
sensorProbeRelayArrayPort7RelayCycleTime = _SensorProbeRelayArrayPort7RelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 7, 2, 1, 18),
    _SensorProbeRelayArrayPort7RelayCycleTime_Type()
)
sensorProbeRelayArrayPort7RelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort7RelayCycleTime.setStatus("mandatory")


class _SensorProbeRelayArrayPort7RelayAction_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort7RelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cycle", 2),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeRelayArrayPort7RelayAction_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort7RelayAction_Object = MibTableColumn
sensorProbeRelayArrayPort7RelayAction = _SensorProbeRelayArrayPort7RelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 7, 2, 1, 21),
    _SensorProbeRelayArrayPort7RelayAction_Type()
)
sensorProbeRelayArrayPort7RelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort7RelayAction.setStatus("mandatory")


class _SensorProbeRelayArrayPort7ManualRelayCycleTime_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort7ManualRelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeRelayArrayPort7ManualRelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort7ManualRelayCycleTime_Object = MibTableColumn
sensorProbeRelayArrayPort7ManualRelayCycleTime = _SensorProbeRelayArrayPort7ManualRelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 7, 2, 1, 24),
    _SensorProbeRelayArrayPort7ManualRelayCycleTime_Type()
)
sensorProbeRelayArrayPort7ManualRelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort7ManualRelayCycleTime.setStatus("mandatory")


class _SensorProbeRelayArrayPort7ManualRelayAction_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort7ManualRelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("allow-sensor-control", 1),
          ("cycle-Off-On-Off", 7),
          ("cycle-On-Off-On", 8),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeRelayArrayPort7ManualRelayAction_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort7ManualRelayAction_Object = MibTableColumn
sensorProbeRelayArrayPort7ManualRelayAction = _SensorProbeRelayArrayPort7ManualRelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 7, 2, 1, 25),
    _SensorProbeRelayArrayPort7ManualRelayAction_Type()
)
sensorProbeRelayArrayPort7ManualRelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort7ManualRelayAction.setStatus("mandatory")
_SensorProbeRelayArrayPort7RelayDescOn_Type = DisplayString
_SensorProbeRelayArrayPort7RelayDescOn_Object = MibTableColumn
sensorProbeRelayArrayPort7RelayDescOn = _SensorProbeRelayArrayPort7RelayDescOn_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 7, 2, 1, 26),
    _SensorProbeRelayArrayPort7RelayDescOn_Type()
)
sensorProbeRelayArrayPort7RelayDescOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort7RelayDescOn.setStatus("mandatory")
_SensorProbeRelayArrayPort7RelayDescOff_Type = DisplayString
_SensorProbeRelayArrayPort7RelayDescOff_Object = MibTableColumn
sensorProbeRelayArrayPort7RelayDescOff = _SensorProbeRelayArrayPort7RelayDescOff_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 7, 2, 1, 27),
    _SensorProbeRelayArrayPort7RelayDescOff_Type()
)
sensorProbeRelayArrayPort7RelayDescOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort7RelayDescOff.setStatus("mandatory")
_SensorProbeRelayArrayPort7URL_Type = DisplayString
_SensorProbeRelayArrayPort7URL_Object = MibTableColumn
sensorProbeRelayArrayPort7URL = _SensorProbeRelayArrayPort7URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 7, 2, 1, 28),
    _SensorProbeRelayArrayPort7URL_Type()
)
sensorProbeRelayArrayPort7URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort7URL.setStatus("mandatory")


class _SensorProbeRelayArrayPort7OpenURL_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort7OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeRelayArrayPort7OpenURL_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort7OpenURL_Object = MibTableColumn
sensorProbeRelayArrayPort7OpenURL = _SensorProbeRelayArrayPort7OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 7, 2, 1, 29),
    _SensorProbeRelayArrayPort7OpenURL_Type()
)
sensorProbeRelayArrayPort7OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort7OpenURL.setStatus("mandatory")


class _SensorProbeRelayArrayPort7ControlMode_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort7ControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("manual-control", 0),
          ("notification-control", 1),
          ("thermostat-control", 3),
          ("time-control", 2))
    )


_SensorProbeRelayArrayPort7ControlMode_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort7ControlMode_Object = MibTableColumn
sensorProbeRelayArrayPort7ControlMode = _SensorProbeRelayArrayPort7ControlMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 7, 2, 1, 30),
    _SensorProbeRelayArrayPort7ControlMode_Type()
)
sensorProbeRelayArrayPort7ControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort7ControlMode.setStatus("mandatory")
_SensorProbeRelayArrayPort8_ObjectIdentity = ObjectIdentity
sensorProbeRelayArrayPort8 = _SensorProbeRelayArrayPort8_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 8)
)
_SensorProbeRelayArrayPort8Number_Type = Integer32
_SensorProbeRelayArrayPort8Number_Object = MibScalar
sensorProbeRelayArrayPort8Number = _SensorProbeRelayArrayPort8Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 8, 1),
    _SensorProbeRelayArrayPort8Number_Type()
)
sensorProbeRelayArrayPort8Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort8Number.setStatus("mandatory")
_SensorProbeRelayArrayPort8Table_Object = MibTable
sensorProbeRelayArrayPort8Table = _SensorProbeRelayArrayPort8Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 8, 2)
)
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort8Table.setStatus("mandatory")
_SensorProbeRelayArrayPort8Entry_Object = MibTableRow
sensorProbeRelayArrayPort8Entry = _SensorProbeRelayArrayPort8Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 8, 2, 1)
)
sensorProbeRelayArrayPort8Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeRelayArrayPort8Index"),
)
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort8Entry.setStatus("mandatory")


class _SensorProbeRelayArrayPort8Index_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort8Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeRelayArrayPort8Index_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort8Index_Object = MibTableColumn
sensorProbeRelayArrayPort8Index = _SensorProbeRelayArrayPort8Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 8, 2, 1, 1),
    _SensorProbeRelayArrayPort8Index_Type()
)
sensorProbeRelayArrayPort8Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort8Index.setStatus("mandatory")
_SensorProbeRelayArrayPort8Description_Type = DisplayString
_SensorProbeRelayArrayPort8Description_Object = MibTableColumn
sensorProbeRelayArrayPort8Description = _SensorProbeRelayArrayPort8Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 8, 2, 1, 2),
    _SensorProbeRelayArrayPort8Description_Type()
)
sensorProbeRelayArrayPort8Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort8Description.setStatus("mandatory")


class _SensorProbeRelayArrayPort8Status_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort8Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorProbeRelayArrayPort8Status_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort8Status_Object = MibTableColumn
sensorProbeRelayArrayPort8Status = _SensorProbeRelayArrayPort8Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 8, 2, 1, 4),
    _SensorProbeRelayArrayPort8Status_Type()
)
sensorProbeRelayArrayPort8Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort8Status.setStatus("mandatory")


class _SensorProbeRelayArrayPort8Online_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort8Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeRelayArrayPort8Online_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort8Online_Object = MibTableColumn
sensorProbeRelayArrayPort8Online = _SensorProbeRelayArrayPort8Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 8, 2, 1, 5),
    _SensorProbeRelayArrayPort8Online_Type()
)
sensorProbeRelayArrayPort8Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort8Online.setStatus("mandatory")


class _SensorProbeRelayArrayPort8GoOnline_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort8GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeRelayArrayPort8GoOnline_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort8GoOnline_Object = MibTableColumn
sensorProbeRelayArrayPort8GoOnline = _SensorProbeRelayArrayPort8GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 8, 2, 1, 6),
    _SensorProbeRelayArrayPort8GoOnline_Type()
)
sensorProbeRelayArrayPort8GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort8GoOnline.setStatus("mandatory")


class _SensorProbeRelayArrayPort8NormalState_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort8NormalState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("closed", 0),
          ("open", 1))
    )


_SensorProbeRelayArrayPort8NormalState_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort8NormalState_Object = MibTableColumn
sensorProbeRelayArrayPort8NormalState = _SensorProbeRelayArrayPort8NormalState_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 8, 2, 1, 7),
    _SensorProbeRelayArrayPort8NormalState_Type()
)
sensorProbeRelayArrayPort8NormalState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort8NormalState.setStatus("mandatory")


class _SensorProbeRelayArrayPort8RelayCycleTime_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort8RelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeRelayArrayPort8RelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort8RelayCycleTime_Object = MibTableColumn
sensorProbeRelayArrayPort8RelayCycleTime = _SensorProbeRelayArrayPort8RelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 8, 2, 1, 18),
    _SensorProbeRelayArrayPort8RelayCycleTime_Type()
)
sensorProbeRelayArrayPort8RelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort8RelayCycleTime.setStatus("mandatory")


class _SensorProbeRelayArrayPort8RelayAction_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort8RelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cycle", 2),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeRelayArrayPort8RelayAction_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort8RelayAction_Object = MibTableColumn
sensorProbeRelayArrayPort8RelayAction = _SensorProbeRelayArrayPort8RelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 8, 2, 1, 21),
    _SensorProbeRelayArrayPort8RelayAction_Type()
)
sensorProbeRelayArrayPort8RelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort8RelayAction.setStatus("mandatory")


class _SensorProbeRelayArrayPort8ManualRelayCycleTime_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort8ManualRelayCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeRelayArrayPort8ManualRelayCycleTime_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort8ManualRelayCycleTime_Object = MibTableColumn
sensorProbeRelayArrayPort8ManualRelayCycleTime = _SensorProbeRelayArrayPort8ManualRelayCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 8, 2, 1, 24),
    _SensorProbeRelayArrayPort8ManualRelayCycleTime_Type()
)
sensorProbeRelayArrayPort8ManualRelayCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort8ManualRelayCycleTime.setStatus("mandatory")


class _SensorProbeRelayArrayPort8ManualRelayAction_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort8ManualRelayAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("allow-sensor-control", 1),
          ("cycle-Off-On-Off", 7),
          ("cycle-On-Off-On", 8),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeRelayArrayPort8ManualRelayAction_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort8ManualRelayAction_Object = MibTableColumn
sensorProbeRelayArrayPort8ManualRelayAction = _SensorProbeRelayArrayPort8ManualRelayAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 8, 2, 1, 25),
    _SensorProbeRelayArrayPort8ManualRelayAction_Type()
)
sensorProbeRelayArrayPort8ManualRelayAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort8ManualRelayAction.setStatus("mandatory")
_SensorProbeRelayArrayPort8RelayDescOn_Type = DisplayString
_SensorProbeRelayArrayPort8RelayDescOn_Object = MibTableColumn
sensorProbeRelayArrayPort8RelayDescOn = _SensorProbeRelayArrayPort8RelayDescOn_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 8, 2, 1, 26),
    _SensorProbeRelayArrayPort8RelayDescOn_Type()
)
sensorProbeRelayArrayPort8RelayDescOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort8RelayDescOn.setStatus("mandatory")
_SensorProbeRelayArrayPort8RelayDescOff_Type = DisplayString
_SensorProbeRelayArrayPort8RelayDescOff_Object = MibTableColumn
sensorProbeRelayArrayPort8RelayDescOff = _SensorProbeRelayArrayPort8RelayDescOff_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 8, 2, 1, 27),
    _SensorProbeRelayArrayPort8RelayDescOff_Type()
)
sensorProbeRelayArrayPort8RelayDescOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort8RelayDescOff.setStatus("mandatory")
_SensorProbeRelayArrayPort8URL_Type = DisplayString
_SensorProbeRelayArrayPort8URL_Object = MibTableColumn
sensorProbeRelayArrayPort8URL = _SensorProbeRelayArrayPort8URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 8, 2, 1, 28),
    _SensorProbeRelayArrayPort8URL_Type()
)
sensorProbeRelayArrayPort8URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort8URL.setStatus("mandatory")


class _SensorProbeRelayArrayPort8OpenURL_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort8OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeRelayArrayPort8OpenURL_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort8OpenURL_Object = MibTableColumn
sensorProbeRelayArrayPort8OpenURL = _SensorProbeRelayArrayPort8OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 8, 2, 1, 29),
    _SensorProbeRelayArrayPort8OpenURL_Type()
)
sensorProbeRelayArrayPort8OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort8OpenURL.setStatus("mandatory")


class _SensorProbeRelayArrayPort8ControlMode_Type(Integer32):
    """Custom type sensorProbeRelayArrayPort8ControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("manual-control", 0),
          ("notification-control", 1),
          ("thermostat-control", 3),
          ("time-control", 2))
    )


_SensorProbeRelayArrayPort8ControlMode_Type.__name__ = "Integer32"
_SensorProbeRelayArrayPort8ControlMode_Object = MibTableColumn
sensorProbeRelayArrayPort8ControlMode = _SensorProbeRelayArrayPort8ControlMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 29, 8, 2, 1, 30),
    _SensorProbeRelayArrayPort8ControlMode_Type()
)
sensorProbeRelayArrayPort8ControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRelayArrayPort8ControlMode.setStatus("mandatory")
_SensorProbeVirtualAnalogSensor_ObjectIdentity = ObjectIdentity
sensorProbeVirtualAnalogSensor = _SensorProbeVirtualAnalogSensor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30)
)
_SensorProbeVirtualAnalogSensorNumber_Type = Integer32
_SensorProbeVirtualAnalogSensorNumber_Object = MibScalar
sensorProbeVirtualAnalogSensorNumber = _SensorProbeVirtualAnalogSensorNumber_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 1),
    _SensorProbeVirtualAnalogSensorNumber_Type()
)
sensorProbeVirtualAnalogSensorNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogSensorNumber.setStatus("mandatory")
_SensorProbeVirtualAnalogSensorTable_Object = MibTable
sensorProbeVirtualAnalogSensorTable = _SensorProbeVirtualAnalogSensorTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2)
)
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogSensorTable.setStatus("mandatory")
_SensorProbeVirtualAnalogSensorEntry_Object = MibTableRow
sensorProbeVirtualAnalogSensorEntry = _SensorProbeVirtualAnalogSensorEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1)
)
sensorProbeVirtualAnalogSensorEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeVirtualAnalogSensorIndex"),
)
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogSensorEntry.setStatus("mandatory")


class _SensorProbeVirtualAnalogSensorIndex_Type(Integer32):
    """Custom type sensorProbeVirtualAnalogSensorIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 67),
    )


_SensorProbeVirtualAnalogSensorIndex_Type.__name__ = "Integer32"
_SensorProbeVirtualAnalogSensorIndex_Object = MibTableColumn
sensorProbeVirtualAnalogSensorIndex = _SensorProbeVirtualAnalogSensorIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 1),
    _SensorProbeVirtualAnalogSensorIndex_Type()
)
sensorProbeVirtualAnalogSensorIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogSensorIndex.setStatus("mandatory")
_SensorProbeVirtualAnalogDescription_Type = DisplayString
_SensorProbeVirtualAnalogDescription_Object = MibTableColumn
sensorProbeVirtualAnalogDescription = _SensorProbeVirtualAnalogDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 2),
    _SensorProbeVirtualAnalogDescription_Type()
)
sensorProbeVirtualAnalogDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogDescription.setStatus("mandatory")


class _SensorProbeVirtualAnalogStatus_Type(Integer32):
    """Custom type sensorProbeVirtualAnalogStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorProbeVirtualAnalogStatus_Type.__name__ = "Integer32"
_SensorProbeVirtualAnalogStatus_Object = MibTableColumn
sensorProbeVirtualAnalogStatus = _SensorProbeVirtualAnalogStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 4),
    _SensorProbeVirtualAnalogStatus_Type()
)
sensorProbeVirtualAnalogStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogStatus.setStatus("mandatory")


class _SensorProbeVirtualAnalogOnline_Type(Integer32):
    """Custom type sensorProbeVirtualAnalogOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeVirtualAnalogOnline_Type.__name__ = "Integer32"
_SensorProbeVirtualAnalogOnline_Object = MibTableColumn
sensorProbeVirtualAnalogOnline = _SensorProbeVirtualAnalogOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 5),
    _SensorProbeVirtualAnalogOnline_Type()
)
sensorProbeVirtualAnalogOnline.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogOnline.setStatus("mandatory")


class _SensorProbeVirtualAnalogGoOnline_Type(Integer32):
    """Custom type sensorProbeVirtualAnalogGoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeVirtualAnalogGoOnline_Type.__name__ = "Integer32"
_SensorProbeVirtualAnalogGoOnline_Object = MibTableColumn
sensorProbeVirtualAnalogGoOnline = _SensorProbeVirtualAnalogGoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 6),
    _SensorProbeVirtualAnalogGoOnline_Type()
)
sensorProbeVirtualAnalogGoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogGoOnline.setStatus("mandatory")
_SensorProbeVirtualAnalogHighWarning_Type = Integer32
_SensorProbeVirtualAnalogHighWarning_Object = MibTableColumn
sensorProbeVirtualAnalogHighWarning = _SensorProbeVirtualAnalogHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 7),
    _SensorProbeVirtualAnalogHighWarning_Type()
)
sensorProbeVirtualAnalogHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogHighWarning.setStatus("mandatory")
_SensorProbeVirtualAnalogHighCritical_Type = Integer32
_SensorProbeVirtualAnalogHighCritical_Object = MibTableColumn
sensorProbeVirtualAnalogHighCritical = _SensorProbeVirtualAnalogHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 8),
    _SensorProbeVirtualAnalogHighCritical_Type()
)
sensorProbeVirtualAnalogHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogHighCritical.setStatus("mandatory")
_SensorProbeVirtualAnalogLowWarning_Type = Integer32
_SensorProbeVirtualAnalogLowWarning_Object = MibTableColumn
sensorProbeVirtualAnalogLowWarning = _SensorProbeVirtualAnalogLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 9),
    _SensorProbeVirtualAnalogLowWarning_Type()
)
sensorProbeVirtualAnalogLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogLowWarning.setStatus("mandatory")
_SensorProbeVirtualAnalogLowCritical_Type = Integer32
_SensorProbeVirtualAnalogLowCritical_Object = MibTableColumn
sensorProbeVirtualAnalogLowCritical = _SensorProbeVirtualAnalogLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 10),
    _SensorProbeVirtualAnalogLowCritical_Type()
)
sensorProbeVirtualAnalogLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogLowCritical.setStatus("mandatory")
_SensorProbeVirtualAnalogRearm_Type = Integer32
_SensorProbeVirtualAnalogRearm_Object = MibTableColumn
sensorProbeVirtualAnalogRearm = _SensorProbeVirtualAnalogRearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 11),
    _SensorProbeVirtualAnalogRearm_Type()
)
sensorProbeVirtualAnalogRearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogRearm.setStatus("mandatory")
_SensorProbeVirtualAnalogRaw_Type = Integer32
_SensorProbeVirtualAnalogRaw_Object = MibTableColumn
sensorProbeVirtualAnalogRaw = _SensorProbeVirtualAnalogRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 13),
    _SensorProbeVirtualAnalogRaw_Type()
)
sensorProbeVirtualAnalogRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogRaw.setStatus("mandatory")


class _SensorProbeVirtualAnalogEmailTrapLimit_Type(Integer32):
    """Custom type sensorProbeVirtualAnalogEmailTrapLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeVirtualAnalogEmailTrapLimit_Type.__name__ = "Integer32"
_SensorProbeVirtualAnalogEmailTrapLimit_Object = MibTableColumn
sensorProbeVirtualAnalogEmailTrapLimit = _SensorProbeVirtualAnalogEmailTrapLimit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 17),
    _SensorProbeVirtualAnalogEmailTrapLimit_Type()
)
sensorProbeVirtualAnalogEmailTrapLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogEmailTrapLimit.setStatus("mandatory")


class _SensorProbeVirtualAnalogDelayError_Type(Integer32):
    """Custom type sensorProbeVirtualAnalogDelayError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeVirtualAnalogDelayError_Type.__name__ = "Integer32"
_SensorProbeVirtualAnalogDelayError_Object = MibTableColumn
sensorProbeVirtualAnalogDelayError = _SensorProbeVirtualAnalogDelayError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 21),
    _SensorProbeVirtualAnalogDelayError_Type()
)
sensorProbeVirtualAnalogDelayError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogDelayError.setStatus("mandatory")


class _SensorProbeVirtualAnalogDelayNormal_Type(Integer32):
    """Custom type sensorProbeVirtualAnalogDelayNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeVirtualAnalogDelayNormal_Type.__name__ = "Integer32"
_SensorProbeVirtualAnalogDelayNormal_Object = MibTableColumn
sensorProbeVirtualAnalogDelayNormal = _SensorProbeVirtualAnalogDelayNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 22),
    _SensorProbeVirtualAnalogDelayNormal_Type()
)
sensorProbeVirtualAnalogDelayNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogDelayNormal.setStatus("mandatory")
_SensorProbeVirtualAnalogUnit_Type = DisplayString
_SensorProbeVirtualAnalogUnit_Object = MibTableColumn
sensorProbeVirtualAnalogUnit = _SensorProbeVirtualAnalogUnit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 27),
    _SensorProbeVirtualAnalogUnit_Type()
)
sensorProbeVirtualAnalogUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogUnit.setStatus("mandatory")


class _SensorProbeVirtualAnalogAcknowledgement_Type(Integer32):
    """Custom type sensorProbeVirtualAnalogAcknowledgement based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("ack", 1)
    )


_SensorProbeVirtualAnalogAcknowledgement_Type.__name__ = "Integer32"
_SensorProbeVirtualAnalogAcknowledgement_Object = MibTableColumn
sensorProbeVirtualAnalogAcknowledgement = _SensorProbeVirtualAnalogAcknowledgement_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 41),
    _SensorProbeVirtualAnalogAcknowledgement_Type()
)
sensorProbeVirtualAnalogAcknowledgement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogAcknowledgement.setStatus("mandatory")
_SensorProbeVirtualAnalogURL_Type = DisplayString
_SensorProbeVirtualAnalogURL_Object = MibTableColumn
sensorProbeVirtualAnalogURL = _SensorProbeVirtualAnalogURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 43),
    _SensorProbeVirtualAnalogURL_Type()
)
sensorProbeVirtualAnalogURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogURL.setStatus("mandatory")


class _SensorProbeVirtualAnalogOpenURL_Type(Integer32):
    """Custom type sensorProbeVirtualAnalogOpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeVirtualAnalogOpenURL_Type.__name__ = "Integer32"
_SensorProbeVirtualAnalogOpenURL_Object = MibTableColumn
sensorProbeVirtualAnalogOpenURL = _SensorProbeVirtualAnalogOpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 44),
    _SensorProbeVirtualAnalogOpenURL_Type()
)
sensorProbeVirtualAnalogOpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogOpenURL.setStatus("mandatory")


class _SensorProbeVirtualAnalogContTimeHighCritical_Type(Integer32):
    """Custom type sensorProbeVirtualAnalogContTimeHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeVirtualAnalogContTimeHighCritical_Type.__name__ = "Integer32"
_SensorProbeVirtualAnalogContTimeHighCritical_Object = MibTableColumn
sensorProbeVirtualAnalogContTimeHighCritical = _SensorProbeVirtualAnalogContTimeHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 45),
    _SensorProbeVirtualAnalogContTimeHighCritical_Type()
)
sensorProbeVirtualAnalogContTimeHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogContTimeHighCritical.setStatus("mandatory")


class _SensorProbeVirtualAnalogContTimeHighWarning_Type(Integer32):
    """Custom type sensorProbeVirtualAnalogContTimeHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeVirtualAnalogContTimeHighWarning_Type.__name__ = "Integer32"
_SensorProbeVirtualAnalogContTimeHighWarning_Object = MibTableColumn
sensorProbeVirtualAnalogContTimeHighWarning = _SensorProbeVirtualAnalogContTimeHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 46),
    _SensorProbeVirtualAnalogContTimeHighWarning_Type()
)
sensorProbeVirtualAnalogContTimeHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogContTimeHighWarning.setStatus("mandatory")


class _SensorProbeVirtualAnalogContTimeNormal_Type(Integer32):
    """Custom type sensorProbeVirtualAnalogContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeVirtualAnalogContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeVirtualAnalogContTimeNormal_Object = MibTableColumn
sensorProbeVirtualAnalogContTimeNormal = _SensorProbeVirtualAnalogContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 47),
    _SensorProbeVirtualAnalogContTimeNormal_Type()
)
sensorProbeVirtualAnalogContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogContTimeNormal.setStatus("mandatory")


class _SensorProbeVirtualAnalogContTimeLowWarning_Type(Integer32):
    """Custom type sensorProbeVirtualAnalogContTimeLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeVirtualAnalogContTimeLowWarning_Type.__name__ = "Integer32"
_SensorProbeVirtualAnalogContTimeLowWarning_Object = MibTableColumn
sensorProbeVirtualAnalogContTimeLowWarning = _SensorProbeVirtualAnalogContTimeLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 48),
    _SensorProbeVirtualAnalogContTimeLowWarning_Type()
)
sensorProbeVirtualAnalogContTimeLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogContTimeLowWarning.setStatus("mandatory")


class _SensorProbeVirtualAnalogContTimeLowCritical_Type(Integer32):
    """Custom type sensorProbeVirtualAnalogContTimeLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeVirtualAnalogContTimeLowCritical_Type.__name__ = "Integer32"
_SensorProbeVirtualAnalogContTimeLowCritical_Object = MibTableColumn
sensorProbeVirtualAnalogContTimeLowCritical = _SensorProbeVirtualAnalogContTimeLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 49),
    _SensorProbeVirtualAnalogContTimeLowCritical_Type()
)
sensorProbeVirtualAnalogContTimeLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogContTimeLowCritical.setStatus("mandatory")


class _SensorProbeVirtualAnalogContTimeSensorError_Type(Integer32):
    """Custom type sensorProbeVirtualAnalogContTimeSensorError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeVirtualAnalogContTimeSensorError_Type.__name__ = "Integer32"
_SensorProbeVirtualAnalogContTimeSensorError_Object = MibTableColumn
sensorProbeVirtualAnalogContTimeSensorError = _SensorProbeVirtualAnalogContTimeSensorError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 50),
    _SensorProbeVirtualAnalogContTimeSensorError_Type()
)
sensorProbeVirtualAnalogContTimeSensorError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogContTimeSensorError.setStatus("mandatory")


class _SensorProbeVirtualAnalogCalendar_Type(Integer32):
    """Custom type sensorProbeVirtualAnalogCalendar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeVirtualAnalogCalendar_Type.__name__ = "Integer32"
_SensorProbeVirtualAnalogCalendar_Object = MibTableColumn
sensorProbeVirtualAnalogCalendar = _SensorProbeVirtualAnalogCalendar_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 51),
    _SensorProbeVirtualAnalogCalendar_Type()
)
sensorProbeVirtualAnalogCalendar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogCalendar.setStatus("mandatory")


class _SensorProbeVirtualAnalogValueFactor_Type(Integer32):
    """Custom type sensorProbeVirtualAnalogValueFactor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              10,
              100,
              1000)
        )
    )
    namedValues = NamedValues(
        *(("x0-001", 1000),
          ("x0-01", 100),
          ("x0-1", 10),
          ("x1", 1))
    )


_SensorProbeVirtualAnalogValueFactor_Type.__name__ = "Integer32"
_SensorProbeVirtualAnalogValueFactor_Object = MibTableColumn
sensorProbeVirtualAnalogValueFactor = _SensorProbeVirtualAnalogValueFactor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 30, 2, 1, 52),
    _SensorProbeVirtualAnalogValueFactor_Type()
)
sensorProbeVirtualAnalogValueFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualAnalogValueFactor.setStatus("mandatory")
_SensorProbeVirtualSwitchSensor_ObjectIdentity = ObjectIdentity
sensorProbeVirtualSwitchSensor = _SensorProbeVirtualSwitchSensor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 31)
)
_SensorProbeVirtualSwitchSensorNumber_Type = Integer32
_SensorProbeVirtualSwitchSensorNumber_Object = MibScalar
sensorProbeVirtualSwitchSensorNumber = _SensorProbeVirtualSwitchSensorNumber_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 31, 1),
    _SensorProbeVirtualSwitchSensorNumber_Type()
)
sensorProbeVirtualSwitchSensorNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeVirtualSwitchSensorNumber.setStatus("mandatory")
_SensorProbeVirtualSwitchSensorTable_Object = MibTable
sensorProbeVirtualSwitchSensorTable = _SensorProbeVirtualSwitchSensorTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 31, 2)
)
if mibBuilder.loadTexts:
    sensorProbeVirtualSwitchSensorTable.setStatus("mandatory")
_SensorProbeVirtualSwitchSensorEntry_Object = MibTableRow
sensorProbeVirtualSwitchSensorEntry = _SensorProbeVirtualSwitchSensorEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 31, 2, 1)
)
sensorProbeVirtualSwitchSensorEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeVirtualSwitchSensorIndex"),
)
if mibBuilder.loadTexts:
    sensorProbeVirtualSwitchSensorEntry.setStatus("mandatory")


class _SensorProbeVirtualSwitchSensorIndex_Type(Integer32):
    """Custom type sensorProbeVirtualSwitchSensorIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 67),
    )


_SensorProbeVirtualSwitchSensorIndex_Type.__name__ = "Integer32"
_SensorProbeVirtualSwitchSensorIndex_Object = MibTableColumn
sensorProbeVirtualSwitchSensorIndex = _SensorProbeVirtualSwitchSensorIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 31, 2, 1, 1),
    _SensorProbeVirtualSwitchSensorIndex_Type()
)
sensorProbeVirtualSwitchSensorIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeVirtualSwitchSensorIndex.setStatus("mandatory")
_SensorProbeVirtualSwitchDescription_Type = DisplayString
_SensorProbeVirtualSwitchDescription_Object = MibTableColumn
sensorProbeVirtualSwitchDescription = _SensorProbeVirtualSwitchDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 31, 2, 1, 2),
    _SensorProbeVirtualSwitchDescription_Type()
)
sensorProbeVirtualSwitchDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualSwitchDescription.setStatus("mandatory")


class _SensorProbeVirtualSwitchStatus_Type(Integer32):
    """Custom type sensorProbeVirtualSwitchStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorProbeVirtualSwitchStatus_Type.__name__ = "Integer32"
_SensorProbeVirtualSwitchStatus_Object = MibTableColumn
sensorProbeVirtualSwitchStatus = _SensorProbeVirtualSwitchStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 31, 2, 1, 4),
    _SensorProbeVirtualSwitchStatus_Type()
)
sensorProbeVirtualSwitchStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeVirtualSwitchStatus.setStatus("mandatory")


class _SensorProbeVirtualSwitchOnline_Type(Integer32):
    """Custom type sensorProbeVirtualSwitchOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeVirtualSwitchOnline_Type.__name__ = "Integer32"
_SensorProbeVirtualSwitchOnline_Object = MibTableColumn
sensorProbeVirtualSwitchOnline = _SensorProbeVirtualSwitchOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 31, 2, 1, 5),
    _SensorProbeVirtualSwitchOnline_Type()
)
sensorProbeVirtualSwitchOnline.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeVirtualSwitchOnline.setStatus("mandatory")


class _SensorProbeVirtualSwitchGoOnline_Type(Integer32):
    """Custom type sensorProbeVirtualSwitchGoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeVirtualSwitchGoOnline_Type.__name__ = "Integer32"
_SensorProbeVirtualSwitchGoOnline_Object = MibTableColumn
sensorProbeVirtualSwitchGoOnline = _SensorProbeVirtualSwitchGoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 31, 2, 1, 6),
    _SensorProbeVirtualSwitchGoOnline_Type()
)
sensorProbeVirtualSwitchGoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualSwitchGoOnline.setStatus("mandatory")


class _SensorProbeVirtualSwitchEmailTrapLimit_Type(Integer32):
    """Custom type sensorProbeVirtualSwitchEmailTrapLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeVirtualSwitchEmailTrapLimit_Type.__name__ = "Integer32"
_SensorProbeVirtualSwitchEmailTrapLimit_Object = MibTableColumn
sensorProbeVirtualSwitchEmailTrapLimit = _SensorProbeVirtualSwitchEmailTrapLimit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 31, 2, 1, 17),
    _SensorProbeVirtualSwitchEmailTrapLimit_Type()
)
sensorProbeVirtualSwitchEmailTrapLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualSwitchEmailTrapLimit.setStatus("mandatory")


class _SensorProbeVirtualSwitchContTimeHighCritical_Type(Integer32):
    """Custom type sensorProbeVirtualSwitchContTimeHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeVirtualSwitchContTimeHighCritical_Type.__name__ = "Integer32"
_SensorProbeVirtualSwitchContTimeHighCritical_Object = MibTableColumn
sensorProbeVirtualSwitchContTimeHighCritical = _SensorProbeVirtualSwitchContTimeHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 31, 2, 1, 21),
    _SensorProbeVirtualSwitchContTimeHighCritical_Type()
)
sensorProbeVirtualSwitchContTimeHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualSwitchContTimeHighCritical.setStatus("mandatory")


class _SensorProbeVirtualSwitchContTimeNormal_Type(Integer32):
    """Custom type sensorProbeVirtualSwitchContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeVirtualSwitchContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeVirtualSwitchContTimeNormal_Object = MibTableColumn
sensorProbeVirtualSwitchContTimeNormal = _SensorProbeVirtualSwitchContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 31, 2, 1, 22),
    _SensorProbeVirtualSwitchContTimeNormal_Type()
)
sensorProbeVirtualSwitchContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualSwitchContTimeNormal.setStatus("mandatory")
_SensorProbeVirtualSwitchDescriptionCritical_Type = DisplayString
_SensorProbeVirtualSwitchDescriptionCritical_Object = MibTableColumn
sensorProbeVirtualSwitchDescriptionCritical = _SensorProbeVirtualSwitchDescriptionCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 31, 2, 1, 26),
    _SensorProbeVirtualSwitchDescriptionCritical_Type()
)
sensorProbeVirtualSwitchDescriptionCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualSwitchDescriptionCritical.setStatus("mandatory")
_SensorProbeVirtualSwitchDescriptionNormal_Type = DisplayString
_SensorProbeVirtualSwitchDescriptionNormal_Object = MibTableColumn
sensorProbeVirtualSwitchDescriptionNormal = _SensorProbeVirtualSwitchDescriptionNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 31, 2, 1, 27),
    _SensorProbeVirtualSwitchDescriptionNormal_Type()
)
sensorProbeVirtualSwitchDescriptionNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualSwitchDescriptionNormal.setStatus("mandatory")


class _SensorProbeVirtualSwitchAcknowledgement_Type(Integer32):
    """Custom type sensorProbeVirtualSwitchAcknowledgement based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("ack", 1)
    )


_SensorProbeVirtualSwitchAcknowledgement_Type.__name__ = "Integer32"
_SensorProbeVirtualSwitchAcknowledgement_Object = MibTableColumn
sensorProbeVirtualSwitchAcknowledgement = _SensorProbeVirtualSwitchAcknowledgement_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 31, 2, 1, 41),
    _SensorProbeVirtualSwitchAcknowledgement_Type()
)
sensorProbeVirtualSwitchAcknowledgement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualSwitchAcknowledgement.setStatus("mandatory")
_SensorProbeVirtualSwitchURL_Type = DisplayString
_SensorProbeVirtualSwitchURL_Object = MibTableColumn
sensorProbeVirtualSwitchURL = _SensorProbeVirtualSwitchURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 31, 2, 1, 43),
    _SensorProbeVirtualSwitchURL_Type()
)
sensorProbeVirtualSwitchURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualSwitchURL.setStatus("mandatory")


class _SensorProbeVirtualSwitchOpenURL_Type(Integer32):
    """Custom type sensorProbeVirtualSwitchOpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeVirtualSwitchOpenURL_Type.__name__ = "Integer32"
_SensorProbeVirtualSwitchOpenURL_Object = MibTableColumn
sensorProbeVirtualSwitchOpenURL = _SensorProbeVirtualSwitchOpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 31, 2, 1, 44),
    _SensorProbeVirtualSwitchOpenURL_Type()
)
sensorProbeVirtualSwitchOpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualSwitchOpenURL.setStatus("mandatory")


class _SensorProbeVirtualSwitchCalendar_Type(Integer32):
    """Custom type sensorProbeVirtualSwitchCalendar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeVirtualSwitchCalendar_Type.__name__ = "Integer32"
_SensorProbeVirtualSwitchCalendar_Object = MibTableColumn
sensorProbeVirtualSwitchCalendar = _SensorProbeVirtualSwitchCalendar_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 31, 2, 1, 45),
    _SensorProbeVirtualSwitchCalendar_Type()
)
sensorProbeVirtualSwitchCalendar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualSwitchCalendar.setStatus("mandatory")
_SensorProbeVirtualSwitchNormalState_Type = Integer32
_SensorProbeVirtualSwitchNormalState_Object = MibTableColumn
sensorProbeVirtualSwitchNormalState = _SensorProbeVirtualSwitchNormalState_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 31, 2, 1, 46),
    _SensorProbeVirtualSwitchNormalState_Type()
)
sensorProbeVirtualSwitchNormalState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeVirtualSwitchNormalState.setStatus("mandatory")
_SensorProbeWattHoursSensor_ObjectIdentity = ObjectIdentity
sensorProbeWattHoursSensor = _SensorProbeWattHoursSensor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 32)
)
_SensorProbeWattHoursSensorNumber_Type = Integer32
_SensorProbeWattHoursSensorNumber_Object = MibScalar
sensorProbeWattHoursSensorNumber = _SensorProbeWattHoursSensorNumber_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 32, 1),
    _SensorProbeWattHoursSensorNumber_Type()
)
sensorProbeWattHoursSensorNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeWattHoursSensorNumber.setStatus("mandatory")
_SensorProbeWattHoursSensorTable_Object = MibTable
sensorProbeWattHoursSensorTable = _SensorProbeWattHoursSensorTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 32, 2)
)
if mibBuilder.loadTexts:
    sensorProbeWattHoursSensorTable.setStatus("mandatory")
_SensorProbeWattHoursSensorEntry_Object = MibTableRow
sensorProbeWattHoursSensorEntry = _SensorProbeWattHoursSensorEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 32, 2, 1)
)
sensorProbeWattHoursSensorEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeWattHoursSensorIndex"),
)
if mibBuilder.loadTexts:
    sensorProbeWattHoursSensorEntry.setStatus("mandatory")


class _SensorProbeWattHoursSensorIndex_Type(Integer32):
    """Custom type sensorProbeWattHoursSensorIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeWattHoursSensorIndex_Type.__name__ = "Integer32"
_SensorProbeWattHoursSensorIndex_Object = MibTableColumn
sensorProbeWattHoursSensorIndex = _SensorProbeWattHoursSensorIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 32, 2, 1, 1),
    _SensorProbeWattHoursSensorIndex_Type()
)
sensorProbeWattHoursSensorIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeWattHoursSensorIndex.setStatus("mandatory")
_SensorProbeWattHoursDescription_Type = DisplayString
_SensorProbeWattHoursDescription_Object = MibTableColumn
sensorProbeWattHoursDescription = _SensorProbeWattHoursDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 32, 2, 1, 2),
    _SensorProbeWattHoursDescription_Type()
)
sensorProbeWattHoursDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeWattHoursDescription.setStatus("mandatory")


class _SensorProbeWattHoursPercent_Type(Integer32):
    """Custom type sensorProbeWattHoursPercent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-32768, 32767),
    )


_SensorProbeWattHoursPercent_Type.__name__ = "Integer32"
_SensorProbeWattHoursPercent_Object = MibTableColumn
sensorProbeWattHoursPercent = _SensorProbeWattHoursPercent_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 32, 2, 1, 3),
    _SensorProbeWattHoursPercent_Type()
)
sensorProbeWattHoursPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeWattHoursPercent.setStatus("mandatory")


class _SensorProbeWattHoursReset_Type(Integer32):
    """Custom type sensorProbeWattHoursReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_SensorProbeWattHoursReset_Type.__name__ = "Integer32"
_SensorProbeWattHoursReset_Object = MibTableColumn
sensorProbeWattHoursReset = _SensorProbeWattHoursReset_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 32, 2, 1, 43),
    _SensorProbeWattHoursReset_Type()
)
sensorProbeWattHoursReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeWattHoursReset.setStatus("mandatory")
_SensorProbeTemperatureArraySensor_ObjectIdentity = ObjectIdentity
sensorProbeTemperatureArraySensor = _SensorProbeTemperatureArraySensor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33)
)
_SensorProbeTemperatureArrayPort1_ObjectIdentity = ObjectIdentity
sensorProbeTemperatureArrayPort1 = _SensorProbeTemperatureArrayPort1_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1)
)
_SensorProbeTemperatureArrayPort1Number_Type = Integer32
_SensorProbeTemperatureArrayPort1Number_Object = MibScalar
sensorProbeTemperatureArrayPort1Number = _SensorProbeTemperatureArrayPort1Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 1),
    _SensorProbeTemperatureArrayPort1Number_Type()
)
sensorProbeTemperatureArrayPort1Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1Number.setStatus("mandatory")
_SensorProbeTemperatureArrayPort1Table_Object = MibTable
sensorProbeTemperatureArrayPort1Table = _SensorProbeTemperatureArrayPort1Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2)
)
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1Table.setStatus("mandatory")
_SensorProbeTemperatureArrayPort1Entry_Object = MibTableRow
sensorProbeTemperatureArrayPort1Entry = _SensorProbeTemperatureArrayPort1Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1)
)
sensorProbeTemperatureArrayPort1Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeTemperatureArrayPort1Index"),
)
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1Entry.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort1Index_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort1Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeTemperatureArrayPort1Index_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort1Index_Object = MibTableColumn
sensorProbeTemperatureArrayPort1Index = _SensorProbeTemperatureArrayPort1Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 1),
    _SensorProbeTemperatureArrayPort1Index_Type()
)
sensorProbeTemperatureArrayPort1Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1Index.setStatus("mandatory")
_SensorProbeTemperatureArrayPort1Description_Type = DisplayString
_SensorProbeTemperatureArrayPort1Description_Object = MibTableColumn
sensorProbeTemperatureArrayPort1Description = _SensorProbeTemperatureArrayPort1Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 2),
    _SensorProbeTemperatureArrayPort1Description_Type()
)
sensorProbeTemperatureArrayPort1Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1Description.setStatus("mandatory")
_SensorProbeTemperatureArrayPort1Value_Type = Integer32
_SensorProbeTemperatureArrayPort1Value_Object = MibTableColumn
sensorProbeTemperatureArrayPort1Value = _SensorProbeTemperatureArrayPort1Value_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 3),
    _SensorProbeTemperatureArrayPort1Value_Type()
)
sensorProbeTemperatureArrayPort1Value.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1Value.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort1Status_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort1Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorProbeTemperatureArrayPort1Status_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort1Status_Object = MibTableColumn
sensorProbeTemperatureArrayPort1Status = _SensorProbeTemperatureArrayPort1Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 4),
    _SensorProbeTemperatureArrayPort1Status_Type()
)
sensorProbeTemperatureArrayPort1Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1Status.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort1Online_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort1Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeTemperatureArrayPort1Online_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort1Online_Object = MibTableColumn
sensorProbeTemperatureArrayPort1Online = _SensorProbeTemperatureArrayPort1Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 5),
    _SensorProbeTemperatureArrayPort1Online_Type()
)
sensorProbeTemperatureArrayPort1Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1Online.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort1GoOnline_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort1GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeTemperatureArrayPort1GoOnline_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort1GoOnline_Object = MibTableColumn
sensorProbeTemperatureArrayPort1GoOnline = _SensorProbeTemperatureArrayPort1GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 6),
    _SensorProbeTemperatureArrayPort1GoOnline_Type()
)
sensorProbeTemperatureArrayPort1GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1GoOnline.setStatus("mandatory")
_SensorProbeTemperatureArrayPort1HighWarning_Type = Integer32
_SensorProbeTemperatureArrayPort1HighWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort1HighWarning = _SensorProbeTemperatureArrayPort1HighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 7),
    _SensorProbeTemperatureArrayPort1HighWarning_Type()
)
sensorProbeTemperatureArrayPort1HighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1HighWarning.setStatus("mandatory")
_SensorProbeTemperatureArrayPort1HighCritical_Type = Integer32
_SensorProbeTemperatureArrayPort1HighCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort1HighCritical = _SensorProbeTemperatureArrayPort1HighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 8),
    _SensorProbeTemperatureArrayPort1HighCritical_Type()
)
sensorProbeTemperatureArrayPort1HighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1HighCritical.setStatus("mandatory")
_SensorProbeTemperatureArrayPort1LowWarning_Type = Integer32
_SensorProbeTemperatureArrayPort1LowWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort1LowWarning = _SensorProbeTemperatureArrayPort1LowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 9),
    _SensorProbeTemperatureArrayPort1LowWarning_Type()
)
sensorProbeTemperatureArrayPort1LowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1LowWarning.setStatus("mandatory")
_SensorProbeTemperatureArrayPort1LowCritical_Type = Integer32
_SensorProbeTemperatureArrayPort1LowCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort1LowCritical = _SensorProbeTemperatureArrayPort1LowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 10),
    _SensorProbeTemperatureArrayPort1LowCritical_Type()
)
sensorProbeTemperatureArrayPort1LowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1LowCritical.setStatus("mandatory")
_SensorProbeTemperatureArrayPort1Rearm_Type = Integer32
_SensorProbeTemperatureArrayPort1Rearm_Object = MibTableColumn
sensorProbeTemperatureArrayPort1Rearm = _SensorProbeTemperatureArrayPort1Rearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 11),
    _SensorProbeTemperatureArrayPort1Rearm_Type()
)
sensorProbeTemperatureArrayPort1Rearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1Rearm.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort1DegreeType_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort1DegreeType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("celsius", 1),
          ("fahr", 0))
    )


_SensorProbeTemperatureArrayPort1DegreeType_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort1DegreeType_Object = MibTableColumn
sensorProbeTemperatureArrayPort1DegreeType = _SensorProbeTemperatureArrayPort1DegreeType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 12),
    _SensorProbeTemperatureArrayPort1DegreeType_Type()
)
sensorProbeTemperatureArrayPort1DegreeType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1DegreeType.setStatus("mandatory")
_SensorProbeTemperatureArrayPort1DegreeRaw_Type = Integer32
_SensorProbeTemperatureArrayPort1DegreeRaw_Object = MibTableColumn
sensorProbeTemperatureArrayPort1DegreeRaw = _SensorProbeTemperatureArrayPort1DegreeRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 14),
    _SensorProbeTemperatureArrayPort1DegreeRaw_Type()
)
sensorProbeTemperatureArrayPort1DegreeRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1DegreeRaw.setStatus("mandatory")
_SensorProbeTemperatureArrayPort1Offset_Type = Integer32
_SensorProbeTemperatureArrayPort1Offset_Object = MibTableColumn
sensorProbeTemperatureArrayPort1Offset = _SensorProbeTemperatureArrayPort1Offset_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 15),
    _SensorProbeTemperatureArrayPort1Offset_Type()
)
sensorProbeTemperatureArrayPort1Offset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1Offset.setStatus("mandatory")
_SensorProbeTemperatureArrayPort1URL_Type = DisplayString
_SensorProbeTemperatureArrayPort1URL_Object = MibTableColumn
sensorProbeTemperatureArrayPort1URL = _SensorProbeTemperatureArrayPort1URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 16),
    _SensorProbeTemperatureArrayPort1URL_Type()
)
sensorProbeTemperatureArrayPort1URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1URL.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort1OpenURL_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort1OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeTemperatureArrayPort1OpenURL_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort1OpenURL_Object = MibTableColumn
sensorProbeTemperatureArrayPort1OpenURL = _SensorProbeTemperatureArrayPort1OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 17),
    _SensorProbeTemperatureArrayPort1OpenURL_Type()
)
sensorProbeTemperatureArrayPort1OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1OpenURL.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort1DatacollectType_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort1DatacollectType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("average", 1),
          ("highest", 2),
          ("lowest", 3))
    )


_SensorProbeTemperatureArrayPort1DatacollectType_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort1DatacollectType_Object = MibTableColumn
sensorProbeTemperatureArrayPort1DatacollectType = _SensorProbeTemperatureArrayPort1DatacollectType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 18),
    _SensorProbeTemperatureArrayPort1DatacollectType_Type()
)
sensorProbeTemperatureArrayPort1DatacollectType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1DatacollectType.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort1ContTimeHighCritical_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort1ContTimeHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort1ContTimeHighCritical_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort1ContTimeHighCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort1ContTimeHighCritical = _SensorProbeTemperatureArrayPort1ContTimeHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 19),
    _SensorProbeTemperatureArrayPort1ContTimeHighCritical_Type()
)
sensorProbeTemperatureArrayPort1ContTimeHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1ContTimeHighCritical.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort1ContTimeHighWarning_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort1ContTimeHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort1ContTimeHighWarning_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort1ContTimeHighWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort1ContTimeHighWarning = _SensorProbeTemperatureArrayPort1ContTimeHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 20),
    _SensorProbeTemperatureArrayPort1ContTimeHighWarning_Type()
)
sensorProbeTemperatureArrayPort1ContTimeHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1ContTimeHighWarning.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort1ContTimeNormal_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort1ContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort1ContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort1ContTimeNormal_Object = MibTableColumn
sensorProbeTemperatureArrayPort1ContTimeNormal = _SensorProbeTemperatureArrayPort1ContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 21),
    _SensorProbeTemperatureArrayPort1ContTimeNormal_Type()
)
sensorProbeTemperatureArrayPort1ContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1ContTimeNormal.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort1ContTimeLowWarning_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort1ContTimeLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort1ContTimeLowWarning_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort1ContTimeLowWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort1ContTimeLowWarning = _SensorProbeTemperatureArrayPort1ContTimeLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 22),
    _SensorProbeTemperatureArrayPort1ContTimeLowWarning_Type()
)
sensorProbeTemperatureArrayPort1ContTimeLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1ContTimeLowWarning.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort1ContTimeLowCritical_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort1ContTimeLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort1ContTimeLowCritical_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort1ContTimeLowCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort1ContTimeLowCritical = _SensorProbeTemperatureArrayPort1ContTimeLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 23),
    _SensorProbeTemperatureArrayPort1ContTimeLowCritical_Type()
)
sensorProbeTemperatureArrayPort1ContTimeLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1ContTimeLowCritical.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort1ContTimeSensorError_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort1ContTimeSensorError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort1ContTimeSensorError_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort1ContTimeSensorError_Object = MibTableColumn
sensorProbeTemperatureArrayPort1ContTimeSensorError = _SensorProbeTemperatureArrayPort1ContTimeSensorError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 24),
    _SensorProbeTemperatureArrayPort1ContTimeSensorError_Type()
)
sensorProbeTemperatureArrayPort1ContTimeSensorError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1ContTimeSensorError.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort1Calendar_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort1Calendar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeTemperatureArrayPort1Calendar_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort1Calendar_Object = MibTableColumn
sensorProbeTemperatureArrayPort1Calendar = _SensorProbeTemperatureArrayPort1Calendar_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 25),
    _SensorProbeTemperatureArrayPort1Calendar_Type()
)
sensorProbeTemperatureArrayPort1Calendar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort1Calendar.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort1Index_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort1Index_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort1Index = _SensorProbeThermostatTemperatureArrayPort1Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 26),
    _SensorProbeThermostatTemperatureArrayPort1Index_Type()
)
sensorProbeThermostatTemperatureArrayPort1Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort1Index.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort1Description_Type = DisplayString
_SensorProbeThermostatTemperatureArrayPort1Description_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort1Description = _SensorProbeThermostatTemperatureArrayPort1Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 27),
    _SensorProbeThermostatTemperatureArrayPort1Description_Type()
)
sensorProbeThermostatTemperatureArrayPort1Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort1Description.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort1Value_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort1Value_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort1Value = _SensorProbeThermostatTemperatureArrayPort1Value_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 28),
    _SensorProbeThermostatTemperatureArrayPort1Value_Type()
)
sensorProbeThermostatTemperatureArrayPort1Value.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort1Value.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort1Online_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort1Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeThermostatTemperatureArrayPort1Online_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort1Online_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort1Online = _SensorProbeThermostatTemperatureArrayPort1Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 29),
    _SensorProbeThermostatTemperatureArrayPort1Online_Type()
)
sensorProbeThermostatTemperatureArrayPort1Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort1Online.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort1GoOnline_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort1GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeThermostatTemperatureArrayPort1GoOnline_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort1GoOnline_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort1GoOnline = _SensorProbeThermostatTemperatureArrayPort1GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 30),
    _SensorProbeThermostatTemperatureArrayPort1GoOnline_Type()
)
sensorProbeThermostatTemperatureArrayPort1GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort1GoOnline.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort1Mode_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort1Mode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("time-bases", 1))
    )


_SensorProbeThermostatTemperatureArrayPort1Mode_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort1Mode_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort1Mode = _SensorProbeThermostatTemperatureArrayPort1Mode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 31),
    _SensorProbeThermostatTemperatureArrayPort1Mode_Type()
)
sensorProbeThermostatTemperatureArrayPort1Mode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort1Mode.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort1RelayControlPort_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort1RelayControlPort_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort1RelayControlPort = _SensorProbeThermostatTemperatureArrayPort1RelayControlPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 32),
    _SensorProbeThermostatTemperatureArrayPort1RelayControlPort_Type()
)
sensorProbeThermostatTemperatureArrayPort1RelayControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort1RelayControlPort.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort1NormalAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort1NormalAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort1NormalAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort1NormalAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort1NormalAction1 = _SensorProbeThermostatTemperatureArrayPort1NormalAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 33),
    _SensorProbeThermostatTemperatureArrayPort1NormalAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort1NormalAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort1NormalAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort1HighLimit1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort1HighLimit1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort1HighLimit1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort1HighLimit1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort1HighLimit1 = _SensorProbeThermostatTemperatureArrayPort1HighLimit1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 34),
    _SensorProbeThermostatTemperatureArrayPort1HighLimit1_Type()
)
sensorProbeThermostatTemperatureArrayPort1HighLimit1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort1HighLimit1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort1HighLimitAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort1HighLimitAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort1HighLimitAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort1HighLimitAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort1HighLimitAction1 = _SensorProbeThermostatTemperatureArrayPort1HighLimitAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 35),
    _SensorProbeThermostatTemperatureArrayPort1HighLimitAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort1HighLimitAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort1HighLimitAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort1LowLimit1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort1LowLimit1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort1LowLimit1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort1LowLimit1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort1LowLimit1 = _SensorProbeThermostatTemperatureArrayPort1LowLimit1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 36),
    _SensorProbeThermostatTemperatureArrayPort1LowLimit1_Type()
)
sensorProbeThermostatTemperatureArrayPort1LowLimit1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort1LowLimit1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort1LowLimitAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort1LowLimitAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort1LowLimitAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort1LowLimitAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort1LowLimitAction1 = _SensorProbeThermostatTemperatureArrayPort1LowLimitAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 37),
    _SensorProbeThermostatTemperatureArrayPort1LowLimitAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort1LowLimitAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort1LowLimitAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort1NormalAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort1NormalAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort1NormalAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort1NormalAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort1NormalAction2 = _SensorProbeThermostatTemperatureArrayPort1NormalAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 38),
    _SensorProbeThermostatTemperatureArrayPort1NormalAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort1NormalAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort1NormalAction2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort1HighLimit2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort1HighLimit2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort1HighLimit2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort1HighLimit2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort1HighLimit2 = _SensorProbeThermostatTemperatureArrayPort1HighLimit2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 39),
    _SensorProbeThermostatTemperatureArrayPort1HighLimit2_Type()
)
sensorProbeThermostatTemperatureArrayPort1HighLimit2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort1HighLimit2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort1HighLimitAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort1HighLimitAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort1HighLimitAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort1HighLimitAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort1HighLimitAction2 = _SensorProbeThermostatTemperatureArrayPort1HighLimitAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 40),
    _SensorProbeThermostatTemperatureArrayPort1HighLimitAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort1HighLimitAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort1HighLimitAction2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort1LowLimit2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort1LowLimit2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort1LowLimit2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort1LowLimit2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort1LowLimit2 = _SensorProbeThermostatTemperatureArrayPort1LowLimit2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 41),
    _SensorProbeThermostatTemperatureArrayPort1LowLimit2_Type()
)
sensorProbeThermostatTemperatureArrayPort1LowLimit2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort1LowLimit2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort1LowLimitAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort1LowLimitAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort1LowLimitAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort1LowLimitAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort1LowLimitAction2 = _SensorProbeThermostatTemperatureArrayPort1LowLimitAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 42),
    _SensorProbeThermostatTemperatureArrayPort1LowLimitAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort1LowLimitAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort1LowLimitAction2.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort1EnableTime_Type = DisplayString
_SensorProbeThermostatTemperatureArrayPort1EnableTime_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort1EnableTime = _SensorProbeThermostatTemperatureArrayPort1EnableTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 1, 2, 1, 43),
    _SensorProbeThermostatTemperatureArrayPort1EnableTime_Type()
)
sensorProbeThermostatTemperatureArrayPort1EnableTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort1EnableTime.setStatus("mandatory")
_SensorProbeTemperatureArrayPort2_ObjectIdentity = ObjectIdentity
sensorProbeTemperatureArrayPort2 = _SensorProbeTemperatureArrayPort2_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2)
)
_SensorProbeTemperatureArrayPort2Number_Type = Integer32
_SensorProbeTemperatureArrayPort2Number_Object = MibScalar
sensorProbeTemperatureArrayPort2Number = _SensorProbeTemperatureArrayPort2Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 1),
    _SensorProbeTemperatureArrayPort2Number_Type()
)
sensorProbeTemperatureArrayPort2Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2Number.setStatus("mandatory")
_SensorProbeTemperatureArrayPort2Table_Object = MibTable
sensorProbeTemperatureArrayPort2Table = _SensorProbeTemperatureArrayPort2Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2)
)
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2Table.setStatus("mandatory")
_SensorProbeTemperatureArrayPort2Entry_Object = MibTableRow
sensorProbeTemperatureArrayPort2Entry = _SensorProbeTemperatureArrayPort2Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1)
)
sensorProbeTemperatureArrayPort2Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeTemperatureArrayPort2Index"),
)
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2Entry.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort2Index_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort2Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeTemperatureArrayPort2Index_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort2Index_Object = MibTableColumn
sensorProbeTemperatureArrayPort2Index = _SensorProbeTemperatureArrayPort2Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 1),
    _SensorProbeTemperatureArrayPort2Index_Type()
)
sensorProbeTemperatureArrayPort2Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2Index.setStatus("mandatory")
_SensorProbeTemperatureArrayPort2Description_Type = DisplayString
_SensorProbeTemperatureArrayPort2Description_Object = MibTableColumn
sensorProbeTemperatureArrayPort2Description = _SensorProbeTemperatureArrayPort2Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 2),
    _SensorProbeTemperatureArrayPort2Description_Type()
)
sensorProbeTemperatureArrayPort2Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2Description.setStatus("mandatory")
_SensorProbeTemperatureArrayPort2Value_Type = Integer32
_SensorProbeTemperatureArrayPort2Value_Object = MibTableColumn
sensorProbeTemperatureArrayPort2Value = _SensorProbeTemperatureArrayPort2Value_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 3),
    _SensorProbeTemperatureArrayPort2Value_Type()
)
sensorProbeTemperatureArrayPort2Value.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2Value.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort2Status_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort2Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorProbeTemperatureArrayPort2Status_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort2Status_Object = MibTableColumn
sensorProbeTemperatureArrayPort2Status = _SensorProbeTemperatureArrayPort2Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 4),
    _SensorProbeTemperatureArrayPort2Status_Type()
)
sensorProbeTemperatureArrayPort2Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2Status.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort2Online_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort2Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeTemperatureArrayPort2Online_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort2Online_Object = MibTableColumn
sensorProbeTemperatureArrayPort2Online = _SensorProbeTemperatureArrayPort2Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 5),
    _SensorProbeTemperatureArrayPort2Online_Type()
)
sensorProbeTemperatureArrayPort2Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2Online.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort2GoOnline_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort2GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeTemperatureArrayPort2GoOnline_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort2GoOnline_Object = MibTableColumn
sensorProbeTemperatureArrayPort2GoOnline = _SensorProbeTemperatureArrayPort2GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 6),
    _SensorProbeTemperatureArrayPort2GoOnline_Type()
)
sensorProbeTemperatureArrayPort2GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2GoOnline.setStatus("mandatory")
_SensorProbeTemperatureArrayPort2HighWarning_Type = Integer32
_SensorProbeTemperatureArrayPort2HighWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort2HighWarning = _SensorProbeTemperatureArrayPort2HighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 7),
    _SensorProbeTemperatureArrayPort2HighWarning_Type()
)
sensorProbeTemperatureArrayPort2HighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2HighWarning.setStatus("mandatory")
_SensorProbeTemperatureArrayPort2HighCritical_Type = Integer32
_SensorProbeTemperatureArrayPort2HighCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort2HighCritical = _SensorProbeTemperatureArrayPort2HighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 8),
    _SensorProbeTemperatureArrayPort2HighCritical_Type()
)
sensorProbeTemperatureArrayPort2HighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2HighCritical.setStatus("mandatory")
_SensorProbeTemperatureArrayPort2LowWarning_Type = Integer32
_SensorProbeTemperatureArrayPort2LowWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort2LowWarning = _SensorProbeTemperatureArrayPort2LowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 9),
    _SensorProbeTemperatureArrayPort2LowWarning_Type()
)
sensorProbeTemperatureArrayPort2LowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2LowWarning.setStatus("mandatory")
_SensorProbeTemperatureArrayPort2LowCritical_Type = Integer32
_SensorProbeTemperatureArrayPort2LowCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort2LowCritical = _SensorProbeTemperatureArrayPort2LowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 10),
    _SensorProbeTemperatureArrayPort2LowCritical_Type()
)
sensorProbeTemperatureArrayPort2LowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2LowCritical.setStatus("mandatory")
_SensorProbeTemperatureArrayPort2Rearm_Type = Integer32
_SensorProbeTemperatureArrayPort2Rearm_Object = MibTableColumn
sensorProbeTemperatureArrayPort2Rearm = _SensorProbeTemperatureArrayPort2Rearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 11),
    _SensorProbeTemperatureArrayPort2Rearm_Type()
)
sensorProbeTemperatureArrayPort2Rearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2Rearm.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort2DegreeType_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort2DegreeType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("celsius", 1),
          ("fahr", 0))
    )


_SensorProbeTemperatureArrayPort2DegreeType_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort2DegreeType_Object = MibTableColumn
sensorProbeTemperatureArrayPort2DegreeType = _SensorProbeTemperatureArrayPort2DegreeType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 12),
    _SensorProbeTemperatureArrayPort2DegreeType_Type()
)
sensorProbeTemperatureArrayPort2DegreeType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2DegreeType.setStatus("mandatory")
_SensorProbeTemperatureArrayPort2DegreeRaw_Type = Integer32
_SensorProbeTemperatureArrayPort2DegreeRaw_Object = MibTableColumn
sensorProbeTemperatureArrayPort2DegreeRaw = _SensorProbeTemperatureArrayPort2DegreeRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 14),
    _SensorProbeTemperatureArrayPort2DegreeRaw_Type()
)
sensorProbeTemperatureArrayPort2DegreeRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2DegreeRaw.setStatus("mandatory")
_SensorProbeTemperatureArrayPort2Offset_Type = Integer32
_SensorProbeTemperatureArrayPort2Offset_Object = MibTableColumn
sensorProbeTemperatureArrayPort2Offset = _SensorProbeTemperatureArrayPort2Offset_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 15),
    _SensorProbeTemperatureArrayPort2Offset_Type()
)
sensorProbeTemperatureArrayPort2Offset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2Offset.setStatus("mandatory")
_SensorProbeTemperatureArrayPort2URL_Type = DisplayString
_SensorProbeTemperatureArrayPort2URL_Object = MibTableColumn
sensorProbeTemperatureArrayPort2URL = _SensorProbeTemperatureArrayPort2URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 16),
    _SensorProbeTemperatureArrayPort2URL_Type()
)
sensorProbeTemperatureArrayPort2URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2URL.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort2OpenURL_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort2OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeTemperatureArrayPort2OpenURL_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort2OpenURL_Object = MibTableColumn
sensorProbeTemperatureArrayPort2OpenURL = _SensorProbeTemperatureArrayPort2OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 17),
    _SensorProbeTemperatureArrayPort2OpenURL_Type()
)
sensorProbeTemperatureArrayPort2OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2OpenURL.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort2DatacollectType_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort2DatacollectType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("average", 1),
          ("highest", 2),
          ("lowest", 3))
    )


_SensorProbeTemperatureArrayPort2DatacollectType_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort2DatacollectType_Object = MibTableColumn
sensorProbeTemperatureArrayPort2DatacollectType = _SensorProbeTemperatureArrayPort2DatacollectType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 18),
    _SensorProbeTemperatureArrayPort2DatacollectType_Type()
)
sensorProbeTemperatureArrayPort2DatacollectType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2DatacollectType.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort2ContTimeHighCritical_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort2ContTimeHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort2ContTimeHighCritical_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort2ContTimeHighCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort2ContTimeHighCritical = _SensorProbeTemperatureArrayPort2ContTimeHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 19),
    _SensorProbeTemperatureArrayPort2ContTimeHighCritical_Type()
)
sensorProbeTemperatureArrayPort2ContTimeHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2ContTimeHighCritical.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort2ContTimeHighWarning_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort2ContTimeHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort2ContTimeHighWarning_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort2ContTimeHighWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort2ContTimeHighWarning = _SensorProbeTemperatureArrayPort2ContTimeHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 20),
    _SensorProbeTemperatureArrayPort2ContTimeHighWarning_Type()
)
sensorProbeTemperatureArrayPort2ContTimeHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2ContTimeHighWarning.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort2ContTimeNormal_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort2ContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort2ContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort2ContTimeNormal_Object = MibTableColumn
sensorProbeTemperatureArrayPort2ContTimeNormal = _SensorProbeTemperatureArrayPort2ContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 21),
    _SensorProbeTemperatureArrayPort2ContTimeNormal_Type()
)
sensorProbeTemperatureArrayPort2ContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2ContTimeNormal.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort2ContTimeLowWarning_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort2ContTimeLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort2ContTimeLowWarning_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort2ContTimeLowWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort2ContTimeLowWarning = _SensorProbeTemperatureArrayPort2ContTimeLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 22),
    _SensorProbeTemperatureArrayPort2ContTimeLowWarning_Type()
)
sensorProbeTemperatureArrayPort2ContTimeLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2ContTimeLowWarning.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort2ContTimeLowCritical_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort2ContTimeLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort2ContTimeLowCritical_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort2ContTimeLowCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort2ContTimeLowCritical = _SensorProbeTemperatureArrayPort2ContTimeLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 23),
    _SensorProbeTemperatureArrayPort2ContTimeLowCritical_Type()
)
sensorProbeTemperatureArrayPort2ContTimeLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2ContTimeLowCritical.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort2ContTimeSensorError_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort2ContTimeSensorError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort2ContTimeSensorError_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort2ContTimeSensorError_Object = MibTableColumn
sensorProbeTemperatureArrayPort2ContTimeSensorError = _SensorProbeTemperatureArrayPort2ContTimeSensorError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 24),
    _SensorProbeTemperatureArrayPort2ContTimeSensorError_Type()
)
sensorProbeTemperatureArrayPort2ContTimeSensorError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2ContTimeSensorError.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort2Calendar_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort2Calendar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeTemperatureArrayPort2Calendar_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort2Calendar_Object = MibTableColumn
sensorProbeTemperatureArrayPort2Calendar = _SensorProbeTemperatureArrayPort2Calendar_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 25),
    _SensorProbeTemperatureArrayPort2Calendar_Type()
)
sensorProbeTemperatureArrayPort2Calendar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort2Calendar.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort2Index_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort2Index_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort2Index = _SensorProbeThermostatTemperatureArrayPort2Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 26),
    _SensorProbeThermostatTemperatureArrayPort2Index_Type()
)
sensorProbeThermostatTemperatureArrayPort2Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort2Index.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort2Description_Type = DisplayString
_SensorProbeThermostatTemperatureArrayPort2Description_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort2Description = _SensorProbeThermostatTemperatureArrayPort2Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 27),
    _SensorProbeThermostatTemperatureArrayPort2Description_Type()
)
sensorProbeThermostatTemperatureArrayPort2Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort2Description.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort2Value_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort2Value_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort2Value = _SensorProbeThermostatTemperatureArrayPort2Value_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 28),
    _SensorProbeThermostatTemperatureArrayPort2Value_Type()
)
sensorProbeThermostatTemperatureArrayPort2Value.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort2Value.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort2Online_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort2Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeThermostatTemperatureArrayPort2Online_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort2Online_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort2Online = _SensorProbeThermostatTemperatureArrayPort2Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 29),
    _SensorProbeThermostatTemperatureArrayPort2Online_Type()
)
sensorProbeThermostatTemperatureArrayPort2Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort2Online.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort2GoOnline_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort2GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeThermostatTemperatureArrayPort2GoOnline_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort2GoOnline_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort2GoOnline = _SensorProbeThermostatTemperatureArrayPort2GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 30),
    _SensorProbeThermostatTemperatureArrayPort2GoOnline_Type()
)
sensorProbeThermostatTemperatureArrayPort2GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort2GoOnline.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort2Mode_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort2Mode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("time-bases", 1))
    )


_SensorProbeThermostatTemperatureArrayPort2Mode_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort2Mode_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort2Mode = _SensorProbeThermostatTemperatureArrayPort2Mode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 31),
    _SensorProbeThermostatTemperatureArrayPort2Mode_Type()
)
sensorProbeThermostatTemperatureArrayPort2Mode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort2Mode.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort2RelayControlPort_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort2RelayControlPort_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort2RelayControlPort = _SensorProbeThermostatTemperatureArrayPort2RelayControlPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 32),
    _SensorProbeThermostatTemperatureArrayPort2RelayControlPort_Type()
)
sensorProbeThermostatTemperatureArrayPort2RelayControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort2RelayControlPort.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort2NormalAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort2NormalAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort2NormalAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort2NormalAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort2NormalAction1 = _SensorProbeThermostatTemperatureArrayPort2NormalAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 33),
    _SensorProbeThermostatTemperatureArrayPort2NormalAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort2NormalAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort2NormalAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort2HighLimit1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort2HighLimit1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort2HighLimit1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort2HighLimit1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort2HighLimit1 = _SensorProbeThermostatTemperatureArrayPort2HighLimit1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 34),
    _SensorProbeThermostatTemperatureArrayPort2HighLimit1_Type()
)
sensorProbeThermostatTemperatureArrayPort2HighLimit1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort2HighLimit1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort2HighLimitAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort2HighLimitAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort2HighLimitAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort2HighLimitAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort2HighLimitAction1 = _SensorProbeThermostatTemperatureArrayPort2HighLimitAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 35),
    _SensorProbeThermostatTemperatureArrayPort2HighLimitAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort2HighLimitAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort2HighLimitAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort2LowLimit1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort2LowLimit1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort2LowLimit1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort2LowLimit1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort2LowLimit1 = _SensorProbeThermostatTemperatureArrayPort2LowLimit1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 36),
    _SensorProbeThermostatTemperatureArrayPort2LowLimit1_Type()
)
sensorProbeThermostatTemperatureArrayPort2LowLimit1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort2LowLimit1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort2LowLimitAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort2LowLimitAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort2LowLimitAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort2LowLimitAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort2LowLimitAction1 = _SensorProbeThermostatTemperatureArrayPort2LowLimitAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 37),
    _SensorProbeThermostatTemperatureArrayPort2LowLimitAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort2LowLimitAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort2LowLimitAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort2NormalAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort2NormalAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort2NormalAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort2NormalAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort2NormalAction2 = _SensorProbeThermostatTemperatureArrayPort2NormalAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 38),
    _SensorProbeThermostatTemperatureArrayPort2NormalAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort2NormalAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort2NormalAction2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort2HighLimit2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort2HighLimit2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort2HighLimit2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort2HighLimit2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort2HighLimit2 = _SensorProbeThermostatTemperatureArrayPort2HighLimit2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 39),
    _SensorProbeThermostatTemperatureArrayPort2HighLimit2_Type()
)
sensorProbeThermostatTemperatureArrayPort2HighLimit2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort2HighLimit2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort2HighLimitAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort2HighLimitAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort2HighLimitAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort2HighLimitAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort2HighLimitAction2 = _SensorProbeThermostatTemperatureArrayPort2HighLimitAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 40),
    _SensorProbeThermostatTemperatureArrayPort2HighLimitAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort2HighLimitAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort2HighLimitAction2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort2LowLimit2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort2LowLimit2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort2LowLimit2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort2LowLimit2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort2LowLimit2 = _SensorProbeThermostatTemperatureArrayPort2LowLimit2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 41),
    _SensorProbeThermostatTemperatureArrayPort2LowLimit2_Type()
)
sensorProbeThermostatTemperatureArrayPort2LowLimit2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort2LowLimit2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort2LowLimitAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort2LowLimitAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort2LowLimitAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort2LowLimitAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort2LowLimitAction2 = _SensorProbeThermostatTemperatureArrayPort2LowLimitAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 42),
    _SensorProbeThermostatTemperatureArrayPort2LowLimitAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort2LowLimitAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort2LowLimitAction2.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort2EnableTime_Type = DisplayString
_SensorProbeThermostatTemperatureArrayPort2EnableTime_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort2EnableTime = _SensorProbeThermostatTemperatureArrayPort2EnableTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 2, 2, 1, 43),
    _SensorProbeThermostatTemperatureArrayPort2EnableTime_Type()
)
sensorProbeThermostatTemperatureArrayPort2EnableTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort2EnableTime.setStatus("mandatory")
_SensorProbeTemperatureArrayPort3_ObjectIdentity = ObjectIdentity
sensorProbeTemperatureArrayPort3 = _SensorProbeTemperatureArrayPort3_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3)
)
_SensorProbeTemperatureArrayPort3Number_Type = Integer32
_SensorProbeTemperatureArrayPort3Number_Object = MibScalar
sensorProbeTemperatureArrayPort3Number = _SensorProbeTemperatureArrayPort3Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 1),
    _SensorProbeTemperatureArrayPort3Number_Type()
)
sensorProbeTemperatureArrayPort3Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3Number.setStatus("mandatory")
_SensorProbeTemperatureArrayPort3Table_Object = MibTable
sensorProbeTemperatureArrayPort3Table = _SensorProbeTemperatureArrayPort3Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2)
)
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3Table.setStatus("mandatory")
_SensorProbeTemperatureArrayPort3Entry_Object = MibTableRow
sensorProbeTemperatureArrayPort3Entry = _SensorProbeTemperatureArrayPort3Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1)
)
sensorProbeTemperatureArrayPort3Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeTemperatureArrayPort3Index"),
)
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3Entry.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort3Index_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort3Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeTemperatureArrayPort3Index_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort3Index_Object = MibTableColumn
sensorProbeTemperatureArrayPort3Index = _SensorProbeTemperatureArrayPort3Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 1),
    _SensorProbeTemperatureArrayPort3Index_Type()
)
sensorProbeTemperatureArrayPort3Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3Index.setStatus("mandatory")
_SensorProbeTemperatureArrayPort3Description_Type = DisplayString
_SensorProbeTemperatureArrayPort3Description_Object = MibTableColumn
sensorProbeTemperatureArrayPort3Description = _SensorProbeTemperatureArrayPort3Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 2),
    _SensorProbeTemperatureArrayPort3Description_Type()
)
sensorProbeTemperatureArrayPort3Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3Description.setStatus("mandatory")
_SensorProbeTemperatureArrayPort3Value_Type = Integer32
_SensorProbeTemperatureArrayPort3Value_Object = MibTableColumn
sensorProbeTemperatureArrayPort3Value = _SensorProbeTemperatureArrayPort3Value_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 3),
    _SensorProbeTemperatureArrayPort3Value_Type()
)
sensorProbeTemperatureArrayPort3Value.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3Value.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort3Status_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort3Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorProbeTemperatureArrayPort3Status_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort3Status_Object = MibTableColumn
sensorProbeTemperatureArrayPort3Status = _SensorProbeTemperatureArrayPort3Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 4),
    _SensorProbeTemperatureArrayPort3Status_Type()
)
sensorProbeTemperatureArrayPort3Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3Status.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort3Online_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort3Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeTemperatureArrayPort3Online_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort3Online_Object = MibTableColumn
sensorProbeTemperatureArrayPort3Online = _SensorProbeTemperatureArrayPort3Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 5),
    _SensorProbeTemperatureArrayPort3Online_Type()
)
sensorProbeTemperatureArrayPort3Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3Online.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort3GoOnline_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort3GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeTemperatureArrayPort3GoOnline_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort3GoOnline_Object = MibTableColumn
sensorProbeTemperatureArrayPort3GoOnline = _SensorProbeTemperatureArrayPort3GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 6),
    _SensorProbeTemperatureArrayPort3GoOnline_Type()
)
sensorProbeTemperatureArrayPort3GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3GoOnline.setStatus("mandatory")
_SensorProbeTemperatureArrayPort3HighWarning_Type = Integer32
_SensorProbeTemperatureArrayPort3HighWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort3HighWarning = _SensorProbeTemperatureArrayPort3HighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 7),
    _SensorProbeTemperatureArrayPort3HighWarning_Type()
)
sensorProbeTemperatureArrayPort3HighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3HighWarning.setStatus("mandatory")
_SensorProbeTemperatureArrayPort3HighCritical_Type = Integer32
_SensorProbeTemperatureArrayPort3HighCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort3HighCritical = _SensorProbeTemperatureArrayPort3HighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 8),
    _SensorProbeTemperatureArrayPort3HighCritical_Type()
)
sensorProbeTemperatureArrayPort3HighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3HighCritical.setStatus("mandatory")
_SensorProbeTemperatureArrayPort3LowWarning_Type = Integer32
_SensorProbeTemperatureArrayPort3LowWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort3LowWarning = _SensorProbeTemperatureArrayPort3LowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 9),
    _SensorProbeTemperatureArrayPort3LowWarning_Type()
)
sensorProbeTemperatureArrayPort3LowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3LowWarning.setStatus("mandatory")
_SensorProbeTemperatureArrayPort3LowCritical_Type = Integer32
_SensorProbeTemperatureArrayPort3LowCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort3LowCritical = _SensorProbeTemperatureArrayPort3LowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 10),
    _SensorProbeTemperatureArrayPort3LowCritical_Type()
)
sensorProbeTemperatureArrayPort3LowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3LowCritical.setStatus("mandatory")
_SensorProbeTemperatureArrayPort3Rearm_Type = Integer32
_SensorProbeTemperatureArrayPort3Rearm_Object = MibTableColumn
sensorProbeTemperatureArrayPort3Rearm = _SensorProbeTemperatureArrayPort3Rearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 11),
    _SensorProbeTemperatureArrayPort3Rearm_Type()
)
sensorProbeTemperatureArrayPort3Rearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3Rearm.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort3DegreeType_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort3DegreeType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("celsius", 1),
          ("fahr", 0))
    )


_SensorProbeTemperatureArrayPort3DegreeType_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort3DegreeType_Object = MibTableColumn
sensorProbeTemperatureArrayPort3DegreeType = _SensorProbeTemperatureArrayPort3DegreeType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 12),
    _SensorProbeTemperatureArrayPort3DegreeType_Type()
)
sensorProbeTemperatureArrayPort3DegreeType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3DegreeType.setStatus("mandatory")
_SensorProbeTemperatureArrayPort3DegreeRaw_Type = Integer32
_SensorProbeTemperatureArrayPort3DegreeRaw_Object = MibTableColumn
sensorProbeTemperatureArrayPort3DegreeRaw = _SensorProbeTemperatureArrayPort3DegreeRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 14),
    _SensorProbeTemperatureArrayPort3DegreeRaw_Type()
)
sensorProbeTemperatureArrayPort3DegreeRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3DegreeRaw.setStatus("mandatory")
_SensorProbeTemperatureArrayPort3Offset_Type = Integer32
_SensorProbeTemperatureArrayPort3Offset_Object = MibTableColumn
sensorProbeTemperatureArrayPort3Offset = _SensorProbeTemperatureArrayPort3Offset_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 15),
    _SensorProbeTemperatureArrayPort3Offset_Type()
)
sensorProbeTemperatureArrayPort3Offset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3Offset.setStatus("mandatory")
_SensorProbeTemperatureArrayPort3URL_Type = DisplayString
_SensorProbeTemperatureArrayPort3URL_Object = MibTableColumn
sensorProbeTemperatureArrayPort3URL = _SensorProbeTemperatureArrayPort3URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 16),
    _SensorProbeTemperatureArrayPort3URL_Type()
)
sensorProbeTemperatureArrayPort3URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3URL.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort3OpenURL_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort3OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeTemperatureArrayPort3OpenURL_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort3OpenURL_Object = MibTableColumn
sensorProbeTemperatureArrayPort3OpenURL = _SensorProbeTemperatureArrayPort3OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 17),
    _SensorProbeTemperatureArrayPort3OpenURL_Type()
)
sensorProbeTemperatureArrayPort3OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3OpenURL.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort3DatacollectType_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort3DatacollectType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("average", 1),
          ("highest", 2),
          ("lowest", 3))
    )


_SensorProbeTemperatureArrayPort3DatacollectType_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort3DatacollectType_Object = MibTableColumn
sensorProbeTemperatureArrayPort3DatacollectType = _SensorProbeTemperatureArrayPort3DatacollectType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 18),
    _SensorProbeTemperatureArrayPort3DatacollectType_Type()
)
sensorProbeTemperatureArrayPort3DatacollectType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3DatacollectType.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort3ContTimeHighCritical_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort3ContTimeHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort3ContTimeHighCritical_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort3ContTimeHighCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort3ContTimeHighCritical = _SensorProbeTemperatureArrayPort3ContTimeHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 19),
    _SensorProbeTemperatureArrayPort3ContTimeHighCritical_Type()
)
sensorProbeTemperatureArrayPort3ContTimeHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3ContTimeHighCritical.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort3ContTimeHighWarning_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort3ContTimeHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort3ContTimeHighWarning_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort3ContTimeHighWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort3ContTimeHighWarning = _SensorProbeTemperatureArrayPort3ContTimeHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 20),
    _SensorProbeTemperatureArrayPort3ContTimeHighWarning_Type()
)
sensorProbeTemperatureArrayPort3ContTimeHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3ContTimeHighWarning.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort3ContTimeNormal_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort3ContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort3ContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort3ContTimeNormal_Object = MibTableColumn
sensorProbeTemperatureArrayPort3ContTimeNormal = _SensorProbeTemperatureArrayPort3ContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 21),
    _SensorProbeTemperatureArrayPort3ContTimeNormal_Type()
)
sensorProbeTemperatureArrayPort3ContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3ContTimeNormal.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort3ContTimeLowWarning_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort3ContTimeLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort3ContTimeLowWarning_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort3ContTimeLowWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort3ContTimeLowWarning = _SensorProbeTemperatureArrayPort3ContTimeLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 22),
    _SensorProbeTemperatureArrayPort3ContTimeLowWarning_Type()
)
sensorProbeTemperatureArrayPort3ContTimeLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3ContTimeLowWarning.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort3ContTimeLowCritical_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort3ContTimeLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort3ContTimeLowCritical_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort3ContTimeLowCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort3ContTimeLowCritical = _SensorProbeTemperatureArrayPort3ContTimeLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 23),
    _SensorProbeTemperatureArrayPort3ContTimeLowCritical_Type()
)
sensorProbeTemperatureArrayPort3ContTimeLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3ContTimeLowCritical.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort3ContTimeSensorError_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort3ContTimeSensorError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort3ContTimeSensorError_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort3ContTimeSensorError_Object = MibTableColumn
sensorProbeTemperatureArrayPort3ContTimeSensorError = _SensorProbeTemperatureArrayPort3ContTimeSensorError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 24),
    _SensorProbeTemperatureArrayPort3ContTimeSensorError_Type()
)
sensorProbeTemperatureArrayPort3ContTimeSensorError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3ContTimeSensorError.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort3Calendar_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort3Calendar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeTemperatureArrayPort3Calendar_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort3Calendar_Object = MibTableColumn
sensorProbeTemperatureArrayPort3Calendar = _SensorProbeTemperatureArrayPort3Calendar_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 25),
    _SensorProbeTemperatureArrayPort3Calendar_Type()
)
sensorProbeTemperatureArrayPort3Calendar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort3Calendar.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort3Index_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort3Index_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort3Index = _SensorProbeThermostatTemperatureArrayPort3Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 26),
    _SensorProbeThermostatTemperatureArrayPort3Index_Type()
)
sensorProbeThermostatTemperatureArrayPort3Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort3Index.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort3Description_Type = DisplayString
_SensorProbeThermostatTemperatureArrayPort3Description_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort3Description = _SensorProbeThermostatTemperatureArrayPort3Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 27),
    _SensorProbeThermostatTemperatureArrayPort3Description_Type()
)
sensorProbeThermostatTemperatureArrayPort3Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort3Description.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort3Value_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort3Value_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort3Value = _SensorProbeThermostatTemperatureArrayPort3Value_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 28),
    _SensorProbeThermostatTemperatureArrayPort3Value_Type()
)
sensorProbeThermostatTemperatureArrayPort3Value.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort3Value.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort3Online_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort3Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeThermostatTemperatureArrayPort3Online_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort3Online_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort3Online = _SensorProbeThermostatTemperatureArrayPort3Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 29),
    _SensorProbeThermostatTemperatureArrayPort3Online_Type()
)
sensorProbeThermostatTemperatureArrayPort3Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort3Online.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort3GoOnline_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort3GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeThermostatTemperatureArrayPort3GoOnline_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort3GoOnline_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort3GoOnline = _SensorProbeThermostatTemperatureArrayPort3GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 30),
    _SensorProbeThermostatTemperatureArrayPort3GoOnline_Type()
)
sensorProbeThermostatTemperatureArrayPort3GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort3GoOnline.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort3Mode_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort3Mode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("time-bases", 1))
    )


_SensorProbeThermostatTemperatureArrayPort3Mode_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort3Mode_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort3Mode = _SensorProbeThermostatTemperatureArrayPort3Mode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 31),
    _SensorProbeThermostatTemperatureArrayPort3Mode_Type()
)
sensorProbeThermostatTemperatureArrayPort3Mode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort3Mode.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort3RelayControlPort_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort3RelayControlPort_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort3RelayControlPort = _SensorProbeThermostatTemperatureArrayPort3RelayControlPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 32),
    _SensorProbeThermostatTemperatureArrayPort3RelayControlPort_Type()
)
sensorProbeThermostatTemperatureArrayPort3RelayControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort3RelayControlPort.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort3NormalAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort3NormalAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort3NormalAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort3NormalAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort3NormalAction1 = _SensorProbeThermostatTemperatureArrayPort3NormalAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 33),
    _SensorProbeThermostatTemperatureArrayPort3NormalAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort3NormalAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort3NormalAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort3HighLimit1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort3HighLimit1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort3HighLimit1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort3HighLimit1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort3HighLimit1 = _SensorProbeThermostatTemperatureArrayPort3HighLimit1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 34),
    _SensorProbeThermostatTemperatureArrayPort3HighLimit1_Type()
)
sensorProbeThermostatTemperatureArrayPort3HighLimit1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort3HighLimit1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort3HighLimitAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort3HighLimitAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort3HighLimitAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort3HighLimitAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort3HighLimitAction1 = _SensorProbeThermostatTemperatureArrayPort3HighLimitAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 35),
    _SensorProbeThermostatTemperatureArrayPort3HighLimitAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort3HighLimitAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort3HighLimitAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort3LowLimit1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort3LowLimit1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort3LowLimit1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort3LowLimit1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort3LowLimit1 = _SensorProbeThermostatTemperatureArrayPort3LowLimit1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 36),
    _SensorProbeThermostatTemperatureArrayPort3LowLimit1_Type()
)
sensorProbeThermostatTemperatureArrayPort3LowLimit1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort3LowLimit1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort3LowLimitAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort3LowLimitAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort3LowLimitAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort3LowLimitAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort3LowLimitAction1 = _SensorProbeThermostatTemperatureArrayPort3LowLimitAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 37),
    _SensorProbeThermostatTemperatureArrayPort3LowLimitAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort3LowLimitAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort3LowLimitAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort3NormalAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort3NormalAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort3NormalAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort3NormalAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort3NormalAction2 = _SensorProbeThermostatTemperatureArrayPort3NormalAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 38),
    _SensorProbeThermostatTemperatureArrayPort3NormalAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort3NormalAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort3NormalAction2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort3HighLimit2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort3HighLimit2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort3HighLimit2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort3HighLimit2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort3HighLimit2 = _SensorProbeThermostatTemperatureArrayPort3HighLimit2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 39),
    _SensorProbeThermostatTemperatureArrayPort3HighLimit2_Type()
)
sensorProbeThermostatTemperatureArrayPort3HighLimit2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort3HighLimit2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort3HighLimitAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort3HighLimitAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort3HighLimitAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort3HighLimitAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort3HighLimitAction2 = _SensorProbeThermostatTemperatureArrayPort3HighLimitAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 40),
    _SensorProbeThermostatTemperatureArrayPort3HighLimitAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort3HighLimitAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort3HighLimitAction2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort3LowLimit2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort3LowLimit2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort3LowLimit2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort3LowLimit2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort3LowLimit2 = _SensorProbeThermostatTemperatureArrayPort3LowLimit2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 41),
    _SensorProbeThermostatTemperatureArrayPort3LowLimit2_Type()
)
sensorProbeThermostatTemperatureArrayPort3LowLimit2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort3LowLimit2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort3LowLimitAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort3LowLimitAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort3LowLimitAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort3LowLimitAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort3LowLimitAction2 = _SensorProbeThermostatTemperatureArrayPort3LowLimitAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 42),
    _SensorProbeThermostatTemperatureArrayPort3LowLimitAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort3LowLimitAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort3LowLimitAction2.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort3EnableTime_Type = DisplayString
_SensorProbeThermostatTemperatureArrayPort3EnableTime_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort3EnableTime = _SensorProbeThermostatTemperatureArrayPort3EnableTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 3, 2, 1, 43),
    _SensorProbeThermostatTemperatureArrayPort3EnableTime_Type()
)
sensorProbeThermostatTemperatureArrayPort3EnableTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort3EnableTime.setStatus("mandatory")
_SensorProbeTemperatureArrayPort4_ObjectIdentity = ObjectIdentity
sensorProbeTemperatureArrayPort4 = _SensorProbeTemperatureArrayPort4_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4)
)
_SensorProbeTemperatureArrayPort4Number_Type = Integer32
_SensorProbeTemperatureArrayPort4Number_Object = MibScalar
sensorProbeTemperatureArrayPort4Number = _SensorProbeTemperatureArrayPort4Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 1),
    _SensorProbeTemperatureArrayPort4Number_Type()
)
sensorProbeTemperatureArrayPort4Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4Number.setStatus("mandatory")
_SensorProbeTemperatureArrayPort4Table_Object = MibTable
sensorProbeTemperatureArrayPort4Table = _SensorProbeTemperatureArrayPort4Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2)
)
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4Table.setStatus("mandatory")
_SensorProbeTemperatureArrayPort4Entry_Object = MibTableRow
sensorProbeTemperatureArrayPort4Entry = _SensorProbeTemperatureArrayPort4Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1)
)
sensorProbeTemperatureArrayPort4Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeTemperatureArrayPort4Index"),
)
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4Entry.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort4Index_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort4Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeTemperatureArrayPort4Index_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort4Index_Object = MibTableColumn
sensorProbeTemperatureArrayPort4Index = _SensorProbeTemperatureArrayPort4Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 1),
    _SensorProbeTemperatureArrayPort4Index_Type()
)
sensorProbeTemperatureArrayPort4Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4Index.setStatus("mandatory")
_SensorProbeTemperatureArrayPort4Description_Type = DisplayString
_SensorProbeTemperatureArrayPort4Description_Object = MibTableColumn
sensorProbeTemperatureArrayPort4Description = _SensorProbeTemperatureArrayPort4Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 2),
    _SensorProbeTemperatureArrayPort4Description_Type()
)
sensorProbeTemperatureArrayPort4Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4Description.setStatus("mandatory")
_SensorProbeTemperatureArrayPort4Value_Type = Integer32
_SensorProbeTemperatureArrayPort4Value_Object = MibTableColumn
sensorProbeTemperatureArrayPort4Value = _SensorProbeTemperatureArrayPort4Value_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 3),
    _SensorProbeTemperatureArrayPort4Value_Type()
)
sensorProbeTemperatureArrayPort4Value.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4Value.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort4Status_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort4Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorProbeTemperatureArrayPort4Status_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort4Status_Object = MibTableColumn
sensorProbeTemperatureArrayPort4Status = _SensorProbeTemperatureArrayPort4Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 4),
    _SensorProbeTemperatureArrayPort4Status_Type()
)
sensorProbeTemperatureArrayPort4Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4Status.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort4Online_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort4Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeTemperatureArrayPort4Online_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort4Online_Object = MibTableColumn
sensorProbeTemperatureArrayPort4Online = _SensorProbeTemperatureArrayPort4Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 5),
    _SensorProbeTemperatureArrayPort4Online_Type()
)
sensorProbeTemperatureArrayPort4Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4Online.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort4GoOnline_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort4GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeTemperatureArrayPort4GoOnline_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort4GoOnline_Object = MibTableColumn
sensorProbeTemperatureArrayPort4GoOnline = _SensorProbeTemperatureArrayPort4GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 6),
    _SensorProbeTemperatureArrayPort4GoOnline_Type()
)
sensorProbeTemperatureArrayPort4GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4GoOnline.setStatus("mandatory")
_SensorProbeTemperatureArrayPort4HighWarning_Type = Integer32
_SensorProbeTemperatureArrayPort4HighWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort4HighWarning = _SensorProbeTemperatureArrayPort4HighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 7),
    _SensorProbeTemperatureArrayPort4HighWarning_Type()
)
sensorProbeTemperatureArrayPort4HighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4HighWarning.setStatus("mandatory")
_SensorProbeTemperatureArrayPort4HighCritical_Type = Integer32
_SensorProbeTemperatureArrayPort4HighCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort4HighCritical = _SensorProbeTemperatureArrayPort4HighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 8),
    _SensorProbeTemperatureArrayPort4HighCritical_Type()
)
sensorProbeTemperatureArrayPort4HighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4HighCritical.setStatus("mandatory")
_SensorProbeTemperatureArrayPort4LowWarning_Type = Integer32
_SensorProbeTemperatureArrayPort4LowWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort4LowWarning = _SensorProbeTemperatureArrayPort4LowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 9),
    _SensorProbeTemperatureArrayPort4LowWarning_Type()
)
sensorProbeTemperatureArrayPort4LowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4LowWarning.setStatus("mandatory")
_SensorProbeTemperatureArrayPort4LowCritical_Type = Integer32
_SensorProbeTemperatureArrayPort4LowCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort4LowCritical = _SensorProbeTemperatureArrayPort4LowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 10),
    _SensorProbeTemperatureArrayPort4LowCritical_Type()
)
sensorProbeTemperatureArrayPort4LowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4LowCritical.setStatus("mandatory")
_SensorProbeTemperatureArrayPort4Rearm_Type = Integer32
_SensorProbeTemperatureArrayPort4Rearm_Object = MibTableColumn
sensorProbeTemperatureArrayPort4Rearm = _SensorProbeTemperatureArrayPort4Rearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 11),
    _SensorProbeTemperatureArrayPort4Rearm_Type()
)
sensorProbeTemperatureArrayPort4Rearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4Rearm.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort4DegreeType_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort4DegreeType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("celsius", 1),
          ("fahr", 0))
    )


_SensorProbeTemperatureArrayPort4DegreeType_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort4DegreeType_Object = MibTableColumn
sensorProbeTemperatureArrayPort4DegreeType = _SensorProbeTemperatureArrayPort4DegreeType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 12),
    _SensorProbeTemperatureArrayPort4DegreeType_Type()
)
sensorProbeTemperatureArrayPort4DegreeType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4DegreeType.setStatus("mandatory")
_SensorProbeTemperatureArrayPort4DegreeRaw_Type = Integer32
_SensorProbeTemperatureArrayPort4DegreeRaw_Object = MibTableColumn
sensorProbeTemperatureArrayPort4DegreeRaw = _SensorProbeTemperatureArrayPort4DegreeRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 14),
    _SensorProbeTemperatureArrayPort4DegreeRaw_Type()
)
sensorProbeTemperatureArrayPort4DegreeRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4DegreeRaw.setStatus("mandatory")
_SensorProbeTemperatureArrayPort4Offset_Type = Integer32
_SensorProbeTemperatureArrayPort4Offset_Object = MibTableColumn
sensorProbeTemperatureArrayPort4Offset = _SensorProbeTemperatureArrayPort4Offset_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 15),
    _SensorProbeTemperatureArrayPort4Offset_Type()
)
sensorProbeTemperatureArrayPort4Offset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4Offset.setStatus("mandatory")
_SensorProbeTemperatureArrayPort4URL_Type = DisplayString
_SensorProbeTemperatureArrayPort4URL_Object = MibTableColumn
sensorProbeTemperatureArrayPort4URL = _SensorProbeTemperatureArrayPort4URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 16),
    _SensorProbeTemperatureArrayPort4URL_Type()
)
sensorProbeTemperatureArrayPort4URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4URL.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort4OpenURL_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort4OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeTemperatureArrayPort4OpenURL_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort4OpenURL_Object = MibTableColumn
sensorProbeTemperatureArrayPort4OpenURL = _SensorProbeTemperatureArrayPort4OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 17),
    _SensorProbeTemperatureArrayPort4OpenURL_Type()
)
sensorProbeTemperatureArrayPort4OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4OpenURL.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort4DatacollectType_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort4DatacollectType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("average", 1),
          ("highest", 2),
          ("lowest", 3))
    )


_SensorProbeTemperatureArrayPort4DatacollectType_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort4DatacollectType_Object = MibTableColumn
sensorProbeTemperatureArrayPort4DatacollectType = _SensorProbeTemperatureArrayPort4DatacollectType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 18),
    _SensorProbeTemperatureArrayPort4DatacollectType_Type()
)
sensorProbeTemperatureArrayPort4DatacollectType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4DatacollectType.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort4ContTimeHighCritical_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort4ContTimeHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort4ContTimeHighCritical_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort4ContTimeHighCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort4ContTimeHighCritical = _SensorProbeTemperatureArrayPort4ContTimeHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 19),
    _SensorProbeTemperatureArrayPort4ContTimeHighCritical_Type()
)
sensorProbeTemperatureArrayPort4ContTimeHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4ContTimeHighCritical.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort4ContTimeHighWarning_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort4ContTimeHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort4ContTimeHighWarning_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort4ContTimeHighWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort4ContTimeHighWarning = _SensorProbeTemperatureArrayPort4ContTimeHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 20),
    _SensorProbeTemperatureArrayPort4ContTimeHighWarning_Type()
)
sensorProbeTemperatureArrayPort4ContTimeHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4ContTimeHighWarning.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort4ContTimeNormal_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort4ContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort4ContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort4ContTimeNormal_Object = MibTableColumn
sensorProbeTemperatureArrayPort4ContTimeNormal = _SensorProbeTemperatureArrayPort4ContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 21),
    _SensorProbeTemperatureArrayPort4ContTimeNormal_Type()
)
sensorProbeTemperatureArrayPort4ContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4ContTimeNormal.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort4ContTimeLowWarning_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort4ContTimeLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort4ContTimeLowWarning_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort4ContTimeLowWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort4ContTimeLowWarning = _SensorProbeTemperatureArrayPort4ContTimeLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 22),
    _SensorProbeTemperatureArrayPort4ContTimeLowWarning_Type()
)
sensorProbeTemperatureArrayPort4ContTimeLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4ContTimeLowWarning.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort4ContTimeLowCritical_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort4ContTimeLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort4ContTimeLowCritical_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort4ContTimeLowCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort4ContTimeLowCritical = _SensorProbeTemperatureArrayPort4ContTimeLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 23),
    _SensorProbeTemperatureArrayPort4ContTimeLowCritical_Type()
)
sensorProbeTemperatureArrayPort4ContTimeLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4ContTimeLowCritical.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort4ContTimeSensorError_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort4ContTimeSensorError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort4ContTimeSensorError_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort4ContTimeSensorError_Object = MibTableColumn
sensorProbeTemperatureArrayPort4ContTimeSensorError = _SensorProbeTemperatureArrayPort4ContTimeSensorError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 24),
    _SensorProbeTemperatureArrayPort4ContTimeSensorError_Type()
)
sensorProbeTemperatureArrayPort4ContTimeSensorError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4ContTimeSensorError.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort4Calendar_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort4Calendar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeTemperatureArrayPort4Calendar_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort4Calendar_Object = MibTableColumn
sensorProbeTemperatureArrayPort4Calendar = _SensorProbeTemperatureArrayPort4Calendar_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 25),
    _SensorProbeTemperatureArrayPort4Calendar_Type()
)
sensorProbeTemperatureArrayPort4Calendar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort4Calendar.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort4Index_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort4Index_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort4Index = _SensorProbeThermostatTemperatureArrayPort4Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 26),
    _SensorProbeThermostatTemperatureArrayPort4Index_Type()
)
sensorProbeThermostatTemperatureArrayPort4Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort4Index.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort4Description_Type = DisplayString
_SensorProbeThermostatTemperatureArrayPort4Description_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort4Description = _SensorProbeThermostatTemperatureArrayPort4Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 27),
    _SensorProbeThermostatTemperatureArrayPort4Description_Type()
)
sensorProbeThermostatTemperatureArrayPort4Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort4Description.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort4Value_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort4Value_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort4Value = _SensorProbeThermostatTemperatureArrayPort4Value_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 28),
    _SensorProbeThermostatTemperatureArrayPort4Value_Type()
)
sensorProbeThermostatTemperatureArrayPort4Value.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort4Value.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort4Online_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort4Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeThermostatTemperatureArrayPort4Online_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort4Online_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort4Online = _SensorProbeThermostatTemperatureArrayPort4Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 29),
    _SensorProbeThermostatTemperatureArrayPort4Online_Type()
)
sensorProbeThermostatTemperatureArrayPort4Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort4Online.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort4GoOnline_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort4GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeThermostatTemperatureArrayPort4GoOnline_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort4GoOnline_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort4GoOnline = _SensorProbeThermostatTemperatureArrayPort4GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 30),
    _SensorProbeThermostatTemperatureArrayPort4GoOnline_Type()
)
sensorProbeThermostatTemperatureArrayPort4GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort4GoOnline.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort4Mode_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort4Mode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("time-bases", 1))
    )


_SensorProbeThermostatTemperatureArrayPort4Mode_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort4Mode_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort4Mode = _SensorProbeThermostatTemperatureArrayPort4Mode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 31),
    _SensorProbeThermostatTemperatureArrayPort4Mode_Type()
)
sensorProbeThermostatTemperatureArrayPort4Mode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort4Mode.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort4RelayControlPort_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort4RelayControlPort_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort4RelayControlPort = _SensorProbeThermostatTemperatureArrayPort4RelayControlPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 32),
    _SensorProbeThermostatTemperatureArrayPort4RelayControlPort_Type()
)
sensorProbeThermostatTemperatureArrayPort4RelayControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort4RelayControlPort.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort4NormalAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort4NormalAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort4NormalAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort4NormalAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort4NormalAction1 = _SensorProbeThermostatTemperatureArrayPort4NormalAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 33),
    _SensorProbeThermostatTemperatureArrayPort4NormalAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort4NormalAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort4NormalAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort4HighLimit1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort4HighLimit1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort4HighLimit1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort4HighLimit1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort4HighLimit1 = _SensorProbeThermostatTemperatureArrayPort4HighLimit1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 34),
    _SensorProbeThermostatTemperatureArrayPort4HighLimit1_Type()
)
sensorProbeThermostatTemperatureArrayPort4HighLimit1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort4HighLimit1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort4HighLimitAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort4HighLimitAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort4HighLimitAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort4HighLimitAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort4HighLimitAction1 = _SensorProbeThermostatTemperatureArrayPort4HighLimitAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 35),
    _SensorProbeThermostatTemperatureArrayPort4HighLimitAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort4HighLimitAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort4HighLimitAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort4LowLimit1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort4LowLimit1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort4LowLimit1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort4LowLimit1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort4LowLimit1 = _SensorProbeThermostatTemperatureArrayPort4LowLimit1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 36),
    _SensorProbeThermostatTemperatureArrayPort4LowLimit1_Type()
)
sensorProbeThermostatTemperatureArrayPort4LowLimit1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort4LowLimit1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort4LowLimitAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort4LowLimitAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort4LowLimitAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort4LowLimitAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort4LowLimitAction1 = _SensorProbeThermostatTemperatureArrayPort4LowLimitAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 37),
    _SensorProbeThermostatTemperatureArrayPort4LowLimitAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort4LowLimitAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort4LowLimitAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort4NormalAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort4NormalAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort4NormalAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort4NormalAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort4NormalAction2 = _SensorProbeThermostatTemperatureArrayPort4NormalAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 38),
    _SensorProbeThermostatTemperatureArrayPort4NormalAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort4NormalAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort4NormalAction2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort4HighLimit2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort4HighLimit2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort4HighLimit2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort4HighLimit2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort4HighLimit2 = _SensorProbeThermostatTemperatureArrayPort4HighLimit2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 39),
    _SensorProbeThermostatTemperatureArrayPort4HighLimit2_Type()
)
sensorProbeThermostatTemperatureArrayPort4HighLimit2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort4HighLimit2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort4HighLimitAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort4HighLimitAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort4HighLimitAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort4HighLimitAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort4HighLimitAction2 = _SensorProbeThermostatTemperatureArrayPort4HighLimitAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 40),
    _SensorProbeThermostatTemperatureArrayPort4HighLimitAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort4HighLimitAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort4HighLimitAction2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort4LowLimit2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort4LowLimit2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort4LowLimit2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort4LowLimit2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort4LowLimit2 = _SensorProbeThermostatTemperatureArrayPort4LowLimit2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 41),
    _SensorProbeThermostatTemperatureArrayPort4LowLimit2_Type()
)
sensorProbeThermostatTemperatureArrayPort4LowLimit2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort4LowLimit2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort4LowLimitAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort4LowLimitAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort4LowLimitAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort4LowLimitAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort4LowLimitAction2 = _SensorProbeThermostatTemperatureArrayPort4LowLimitAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 42),
    _SensorProbeThermostatTemperatureArrayPort4LowLimitAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort4LowLimitAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort4LowLimitAction2.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort4EnableTime_Type = DisplayString
_SensorProbeThermostatTemperatureArrayPort4EnableTime_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort4EnableTime = _SensorProbeThermostatTemperatureArrayPort4EnableTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 4, 2, 1, 43),
    _SensorProbeThermostatTemperatureArrayPort4EnableTime_Type()
)
sensorProbeThermostatTemperatureArrayPort4EnableTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort4EnableTime.setStatus("mandatory")
_SensorProbeTemperatureArrayPort5_ObjectIdentity = ObjectIdentity
sensorProbeTemperatureArrayPort5 = _SensorProbeTemperatureArrayPort5_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5)
)
_SensorProbeTemperatureArrayPort5Number_Type = Integer32
_SensorProbeTemperatureArrayPort5Number_Object = MibScalar
sensorProbeTemperatureArrayPort5Number = _SensorProbeTemperatureArrayPort5Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 1),
    _SensorProbeTemperatureArrayPort5Number_Type()
)
sensorProbeTemperatureArrayPort5Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5Number.setStatus("mandatory")
_SensorProbeTemperatureArrayPort5Table_Object = MibTable
sensorProbeTemperatureArrayPort5Table = _SensorProbeTemperatureArrayPort5Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2)
)
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5Table.setStatus("mandatory")
_SensorProbeTemperatureArrayPort5Entry_Object = MibTableRow
sensorProbeTemperatureArrayPort5Entry = _SensorProbeTemperatureArrayPort5Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1)
)
sensorProbeTemperatureArrayPort5Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeTemperatureArrayPort5Index"),
)
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5Entry.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort5Index_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort5Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeTemperatureArrayPort5Index_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort5Index_Object = MibTableColumn
sensorProbeTemperatureArrayPort5Index = _SensorProbeTemperatureArrayPort5Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 1),
    _SensorProbeTemperatureArrayPort5Index_Type()
)
sensorProbeTemperatureArrayPort5Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5Index.setStatus("mandatory")
_SensorProbeTemperatureArrayPort5Description_Type = DisplayString
_SensorProbeTemperatureArrayPort5Description_Object = MibTableColumn
sensorProbeTemperatureArrayPort5Description = _SensorProbeTemperatureArrayPort5Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 2),
    _SensorProbeTemperatureArrayPort5Description_Type()
)
sensorProbeTemperatureArrayPort5Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5Description.setStatus("mandatory")
_SensorProbeTemperatureArrayPort5Value_Type = Integer32
_SensorProbeTemperatureArrayPort5Value_Object = MibTableColumn
sensorProbeTemperatureArrayPort5Value = _SensorProbeTemperatureArrayPort5Value_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 3),
    _SensorProbeTemperatureArrayPort5Value_Type()
)
sensorProbeTemperatureArrayPort5Value.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5Value.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort5Status_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort5Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorProbeTemperatureArrayPort5Status_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort5Status_Object = MibTableColumn
sensorProbeTemperatureArrayPort5Status = _SensorProbeTemperatureArrayPort5Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 4),
    _SensorProbeTemperatureArrayPort5Status_Type()
)
sensorProbeTemperatureArrayPort5Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5Status.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort5Online_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort5Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeTemperatureArrayPort5Online_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort5Online_Object = MibTableColumn
sensorProbeTemperatureArrayPort5Online = _SensorProbeTemperatureArrayPort5Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 5),
    _SensorProbeTemperatureArrayPort5Online_Type()
)
sensorProbeTemperatureArrayPort5Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5Online.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort5GoOnline_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort5GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeTemperatureArrayPort5GoOnline_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort5GoOnline_Object = MibTableColumn
sensorProbeTemperatureArrayPort5GoOnline = _SensorProbeTemperatureArrayPort5GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 6),
    _SensorProbeTemperatureArrayPort5GoOnline_Type()
)
sensorProbeTemperatureArrayPort5GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5GoOnline.setStatus("mandatory")
_SensorProbeTemperatureArrayPort5HighWarning_Type = Integer32
_SensorProbeTemperatureArrayPort5HighWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort5HighWarning = _SensorProbeTemperatureArrayPort5HighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 7),
    _SensorProbeTemperatureArrayPort5HighWarning_Type()
)
sensorProbeTemperatureArrayPort5HighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5HighWarning.setStatus("mandatory")
_SensorProbeTemperatureArrayPort5HighCritical_Type = Integer32
_SensorProbeTemperatureArrayPort5HighCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort5HighCritical = _SensorProbeTemperatureArrayPort5HighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 8),
    _SensorProbeTemperatureArrayPort5HighCritical_Type()
)
sensorProbeTemperatureArrayPort5HighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5HighCritical.setStatus("mandatory")
_SensorProbeTemperatureArrayPort5LowWarning_Type = Integer32
_SensorProbeTemperatureArrayPort5LowWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort5LowWarning = _SensorProbeTemperatureArrayPort5LowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 9),
    _SensorProbeTemperatureArrayPort5LowWarning_Type()
)
sensorProbeTemperatureArrayPort5LowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5LowWarning.setStatus("mandatory")
_SensorProbeTemperatureArrayPort5LowCritical_Type = Integer32
_SensorProbeTemperatureArrayPort5LowCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort5LowCritical = _SensorProbeTemperatureArrayPort5LowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 10),
    _SensorProbeTemperatureArrayPort5LowCritical_Type()
)
sensorProbeTemperatureArrayPort5LowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5LowCritical.setStatus("mandatory")
_SensorProbeTemperatureArrayPort5Rearm_Type = Integer32
_SensorProbeTemperatureArrayPort5Rearm_Object = MibTableColumn
sensorProbeTemperatureArrayPort5Rearm = _SensorProbeTemperatureArrayPort5Rearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 11),
    _SensorProbeTemperatureArrayPort5Rearm_Type()
)
sensorProbeTemperatureArrayPort5Rearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5Rearm.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort5DegreeType_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort5DegreeType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("celsius", 1),
          ("fahr", 0))
    )


_SensorProbeTemperatureArrayPort5DegreeType_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort5DegreeType_Object = MibTableColumn
sensorProbeTemperatureArrayPort5DegreeType = _SensorProbeTemperatureArrayPort5DegreeType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 12),
    _SensorProbeTemperatureArrayPort5DegreeType_Type()
)
sensorProbeTemperatureArrayPort5DegreeType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5DegreeType.setStatus("mandatory")
_SensorProbeTemperatureArrayPort5DegreeRaw_Type = Integer32
_SensorProbeTemperatureArrayPort5DegreeRaw_Object = MibTableColumn
sensorProbeTemperatureArrayPort5DegreeRaw = _SensorProbeTemperatureArrayPort5DegreeRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 14),
    _SensorProbeTemperatureArrayPort5DegreeRaw_Type()
)
sensorProbeTemperatureArrayPort5DegreeRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5DegreeRaw.setStatus("mandatory")
_SensorProbeTemperatureArrayPort5Offset_Type = Integer32
_SensorProbeTemperatureArrayPort5Offset_Object = MibTableColumn
sensorProbeTemperatureArrayPort5Offset = _SensorProbeTemperatureArrayPort5Offset_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 15),
    _SensorProbeTemperatureArrayPort5Offset_Type()
)
sensorProbeTemperatureArrayPort5Offset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5Offset.setStatus("mandatory")
_SensorProbeTemperatureArrayPort5URL_Type = DisplayString
_SensorProbeTemperatureArrayPort5URL_Object = MibTableColumn
sensorProbeTemperatureArrayPort5URL = _SensorProbeTemperatureArrayPort5URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 16),
    _SensorProbeTemperatureArrayPort5URL_Type()
)
sensorProbeTemperatureArrayPort5URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5URL.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort5OpenURL_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort5OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeTemperatureArrayPort5OpenURL_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort5OpenURL_Object = MibTableColumn
sensorProbeTemperatureArrayPort5OpenURL = _SensorProbeTemperatureArrayPort5OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 17),
    _SensorProbeTemperatureArrayPort5OpenURL_Type()
)
sensorProbeTemperatureArrayPort5OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5OpenURL.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort5DatacollectType_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort5DatacollectType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("average", 1),
          ("highest", 2),
          ("lowest", 3))
    )


_SensorProbeTemperatureArrayPort5DatacollectType_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort5DatacollectType_Object = MibTableColumn
sensorProbeTemperatureArrayPort5DatacollectType = _SensorProbeTemperatureArrayPort5DatacollectType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 18),
    _SensorProbeTemperatureArrayPort5DatacollectType_Type()
)
sensorProbeTemperatureArrayPort5DatacollectType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5DatacollectType.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort5ContTimeHighCritical_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort5ContTimeHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort5ContTimeHighCritical_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort5ContTimeHighCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort5ContTimeHighCritical = _SensorProbeTemperatureArrayPort5ContTimeHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 19),
    _SensorProbeTemperatureArrayPort5ContTimeHighCritical_Type()
)
sensorProbeTemperatureArrayPort5ContTimeHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5ContTimeHighCritical.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort5ContTimeHighWarning_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort5ContTimeHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort5ContTimeHighWarning_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort5ContTimeHighWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort5ContTimeHighWarning = _SensorProbeTemperatureArrayPort5ContTimeHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 20),
    _SensorProbeTemperatureArrayPort5ContTimeHighWarning_Type()
)
sensorProbeTemperatureArrayPort5ContTimeHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5ContTimeHighWarning.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort5ContTimeNormal_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort5ContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort5ContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort5ContTimeNormal_Object = MibTableColumn
sensorProbeTemperatureArrayPort5ContTimeNormal = _SensorProbeTemperatureArrayPort5ContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 21),
    _SensorProbeTemperatureArrayPort5ContTimeNormal_Type()
)
sensorProbeTemperatureArrayPort5ContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5ContTimeNormal.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort5ContTimeLowWarning_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort5ContTimeLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort5ContTimeLowWarning_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort5ContTimeLowWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort5ContTimeLowWarning = _SensorProbeTemperatureArrayPort5ContTimeLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 22),
    _SensorProbeTemperatureArrayPort5ContTimeLowWarning_Type()
)
sensorProbeTemperatureArrayPort5ContTimeLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5ContTimeLowWarning.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort5ContTimeLowCritical_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort5ContTimeLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort5ContTimeLowCritical_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort5ContTimeLowCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort5ContTimeLowCritical = _SensorProbeTemperatureArrayPort5ContTimeLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 23),
    _SensorProbeTemperatureArrayPort5ContTimeLowCritical_Type()
)
sensorProbeTemperatureArrayPort5ContTimeLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5ContTimeLowCritical.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort5ContTimeSensorError_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort5ContTimeSensorError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort5ContTimeSensorError_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort5ContTimeSensorError_Object = MibTableColumn
sensorProbeTemperatureArrayPort5ContTimeSensorError = _SensorProbeTemperatureArrayPort5ContTimeSensorError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 24),
    _SensorProbeTemperatureArrayPort5ContTimeSensorError_Type()
)
sensorProbeTemperatureArrayPort5ContTimeSensorError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5ContTimeSensorError.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort5Calendar_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort5Calendar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeTemperatureArrayPort5Calendar_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort5Calendar_Object = MibTableColumn
sensorProbeTemperatureArrayPort5Calendar = _SensorProbeTemperatureArrayPort5Calendar_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 25),
    _SensorProbeTemperatureArrayPort5Calendar_Type()
)
sensorProbeTemperatureArrayPort5Calendar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort5Calendar.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort5Index_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort5Index_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort5Index = _SensorProbeThermostatTemperatureArrayPort5Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 26),
    _SensorProbeThermostatTemperatureArrayPort5Index_Type()
)
sensorProbeThermostatTemperatureArrayPort5Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort5Index.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort5Description_Type = DisplayString
_SensorProbeThermostatTemperatureArrayPort5Description_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort5Description = _SensorProbeThermostatTemperatureArrayPort5Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 27),
    _SensorProbeThermostatTemperatureArrayPort5Description_Type()
)
sensorProbeThermostatTemperatureArrayPort5Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort5Description.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort5Value_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort5Value_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort5Value = _SensorProbeThermostatTemperatureArrayPort5Value_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 28),
    _SensorProbeThermostatTemperatureArrayPort5Value_Type()
)
sensorProbeThermostatTemperatureArrayPort5Value.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort5Value.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort5Online_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort5Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeThermostatTemperatureArrayPort5Online_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort5Online_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort5Online = _SensorProbeThermostatTemperatureArrayPort5Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 29),
    _SensorProbeThermostatTemperatureArrayPort5Online_Type()
)
sensorProbeThermostatTemperatureArrayPort5Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort5Online.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort5GoOnline_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort5GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeThermostatTemperatureArrayPort5GoOnline_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort5GoOnline_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort5GoOnline = _SensorProbeThermostatTemperatureArrayPort5GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 30),
    _SensorProbeThermostatTemperatureArrayPort5GoOnline_Type()
)
sensorProbeThermostatTemperatureArrayPort5GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort5GoOnline.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort5Mode_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort5Mode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("time-bases", 1))
    )


_SensorProbeThermostatTemperatureArrayPort5Mode_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort5Mode_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort5Mode = _SensorProbeThermostatTemperatureArrayPort5Mode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 31),
    _SensorProbeThermostatTemperatureArrayPort5Mode_Type()
)
sensorProbeThermostatTemperatureArrayPort5Mode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort5Mode.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort5RelayControlPort_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort5RelayControlPort_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort5RelayControlPort = _SensorProbeThermostatTemperatureArrayPort5RelayControlPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 32),
    _SensorProbeThermostatTemperatureArrayPort5RelayControlPort_Type()
)
sensorProbeThermostatTemperatureArrayPort5RelayControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort5RelayControlPort.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort5NormalAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort5NormalAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort5NormalAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort5NormalAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort5NormalAction1 = _SensorProbeThermostatTemperatureArrayPort5NormalAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 33),
    _SensorProbeThermostatTemperatureArrayPort5NormalAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort5NormalAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort5NormalAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort5HighLimit1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort5HighLimit1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort5HighLimit1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort5HighLimit1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort5HighLimit1 = _SensorProbeThermostatTemperatureArrayPort5HighLimit1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 34),
    _SensorProbeThermostatTemperatureArrayPort5HighLimit1_Type()
)
sensorProbeThermostatTemperatureArrayPort5HighLimit1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort5HighLimit1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort5HighLimitAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort5HighLimitAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort5HighLimitAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort5HighLimitAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort5HighLimitAction1 = _SensorProbeThermostatTemperatureArrayPort5HighLimitAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 35),
    _SensorProbeThermostatTemperatureArrayPort5HighLimitAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort5HighLimitAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort5HighLimitAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort5LowLimit1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort5LowLimit1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort5LowLimit1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort5LowLimit1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort5LowLimit1 = _SensorProbeThermostatTemperatureArrayPort5LowLimit1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 36),
    _SensorProbeThermostatTemperatureArrayPort5LowLimit1_Type()
)
sensorProbeThermostatTemperatureArrayPort5LowLimit1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort5LowLimit1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort5LowLimitAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort5LowLimitAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort5LowLimitAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort5LowLimitAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort5LowLimitAction1 = _SensorProbeThermostatTemperatureArrayPort5LowLimitAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 37),
    _SensorProbeThermostatTemperatureArrayPort5LowLimitAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort5LowLimitAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort5LowLimitAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort5NormalAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort5NormalAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort5NormalAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort5NormalAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort5NormalAction2 = _SensorProbeThermostatTemperatureArrayPort5NormalAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 38),
    _SensorProbeThermostatTemperatureArrayPort5NormalAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort5NormalAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort5NormalAction2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort5HighLimit2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort5HighLimit2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort5HighLimit2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort5HighLimit2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort5HighLimit2 = _SensorProbeThermostatTemperatureArrayPort5HighLimit2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 39),
    _SensorProbeThermostatTemperatureArrayPort5HighLimit2_Type()
)
sensorProbeThermostatTemperatureArrayPort5HighLimit2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort5HighLimit2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort5HighLimitAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort5HighLimitAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort5HighLimitAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort5HighLimitAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort5HighLimitAction2 = _SensorProbeThermostatTemperatureArrayPort5HighLimitAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 40),
    _SensorProbeThermostatTemperatureArrayPort5HighLimitAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort5HighLimitAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort5HighLimitAction2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort5LowLimit2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort5LowLimit2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort5LowLimit2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort5LowLimit2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort5LowLimit2 = _SensorProbeThermostatTemperatureArrayPort5LowLimit2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 41),
    _SensorProbeThermostatTemperatureArrayPort5LowLimit2_Type()
)
sensorProbeThermostatTemperatureArrayPort5LowLimit2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort5LowLimit2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort5LowLimitAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort5LowLimitAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort5LowLimitAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort5LowLimitAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort5LowLimitAction2 = _SensorProbeThermostatTemperatureArrayPort5LowLimitAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 42),
    _SensorProbeThermostatTemperatureArrayPort5LowLimitAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort5LowLimitAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort5LowLimitAction2.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort5EnableTime_Type = DisplayString
_SensorProbeThermostatTemperatureArrayPort5EnableTime_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort5EnableTime = _SensorProbeThermostatTemperatureArrayPort5EnableTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 5, 2, 1, 43),
    _SensorProbeThermostatTemperatureArrayPort5EnableTime_Type()
)
sensorProbeThermostatTemperatureArrayPort5EnableTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort5EnableTime.setStatus("mandatory")
_SensorProbeTemperatureArrayPort6_ObjectIdentity = ObjectIdentity
sensorProbeTemperatureArrayPort6 = _SensorProbeTemperatureArrayPort6_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6)
)
_SensorProbeTemperatureArrayPort6Number_Type = Integer32
_SensorProbeTemperatureArrayPort6Number_Object = MibScalar
sensorProbeTemperatureArrayPort6Number = _SensorProbeTemperatureArrayPort6Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 1),
    _SensorProbeTemperatureArrayPort6Number_Type()
)
sensorProbeTemperatureArrayPort6Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6Number.setStatus("mandatory")
_SensorProbeTemperatureArrayPort6Table_Object = MibTable
sensorProbeTemperatureArrayPort6Table = _SensorProbeTemperatureArrayPort6Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2)
)
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6Table.setStatus("mandatory")
_SensorProbeTemperatureArrayPort6Entry_Object = MibTableRow
sensorProbeTemperatureArrayPort6Entry = _SensorProbeTemperatureArrayPort6Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1)
)
sensorProbeTemperatureArrayPort6Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeTemperatureArrayPort6Index"),
)
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6Entry.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort6Index_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort6Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeTemperatureArrayPort6Index_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort6Index_Object = MibTableColumn
sensorProbeTemperatureArrayPort6Index = _SensorProbeTemperatureArrayPort6Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 1),
    _SensorProbeTemperatureArrayPort6Index_Type()
)
sensorProbeTemperatureArrayPort6Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6Index.setStatus("mandatory")
_SensorProbeTemperatureArrayPort6Description_Type = DisplayString
_SensorProbeTemperatureArrayPort6Description_Object = MibTableColumn
sensorProbeTemperatureArrayPort6Description = _SensorProbeTemperatureArrayPort6Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 2),
    _SensorProbeTemperatureArrayPort6Description_Type()
)
sensorProbeTemperatureArrayPort6Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6Description.setStatus("mandatory")
_SensorProbeTemperatureArrayPort6Value_Type = Integer32
_SensorProbeTemperatureArrayPort6Value_Object = MibTableColumn
sensorProbeTemperatureArrayPort6Value = _SensorProbeTemperatureArrayPort6Value_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 3),
    _SensorProbeTemperatureArrayPort6Value_Type()
)
sensorProbeTemperatureArrayPort6Value.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6Value.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort6Status_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort6Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorProbeTemperatureArrayPort6Status_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort6Status_Object = MibTableColumn
sensorProbeTemperatureArrayPort6Status = _SensorProbeTemperatureArrayPort6Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 4),
    _SensorProbeTemperatureArrayPort6Status_Type()
)
sensorProbeTemperatureArrayPort6Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6Status.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort6Online_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort6Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeTemperatureArrayPort6Online_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort6Online_Object = MibTableColumn
sensorProbeTemperatureArrayPort6Online = _SensorProbeTemperatureArrayPort6Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 5),
    _SensorProbeTemperatureArrayPort6Online_Type()
)
sensorProbeTemperatureArrayPort6Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6Online.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort6GoOnline_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort6GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeTemperatureArrayPort6GoOnline_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort6GoOnline_Object = MibTableColumn
sensorProbeTemperatureArrayPort6GoOnline = _SensorProbeTemperatureArrayPort6GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 6),
    _SensorProbeTemperatureArrayPort6GoOnline_Type()
)
sensorProbeTemperatureArrayPort6GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6GoOnline.setStatus("mandatory")
_SensorProbeTemperatureArrayPort6HighWarning_Type = Integer32
_SensorProbeTemperatureArrayPort6HighWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort6HighWarning = _SensorProbeTemperatureArrayPort6HighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 7),
    _SensorProbeTemperatureArrayPort6HighWarning_Type()
)
sensorProbeTemperatureArrayPort6HighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6HighWarning.setStatus("mandatory")
_SensorProbeTemperatureArrayPort6HighCritical_Type = Integer32
_SensorProbeTemperatureArrayPort6HighCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort6HighCritical = _SensorProbeTemperatureArrayPort6HighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 8),
    _SensorProbeTemperatureArrayPort6HighCritical_Type()
)
sensorProbeTemperatureArrayPort6HighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6HighCritical.setStatus("mandatory")
_SensorProbeTemperatureArrayPort6LowWarning_Type = Integer32
_SensorProbeTemperatureArrayPort6LowWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort6LowWarning = _SensorProbeTemperatureArrayPort6LowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 9),
    _SensorProbeTemperatureArrayPort6LowWarning_Type()
)
sensorProbeTemperatureArrayPort6LowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6LowWarning.setStatus("mandatory")
_SensorProbeTemperatureArrayPort6LowCritical_Type = Integer32
_SensorProbeTemperatureArrayPort6LowCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort6LowCritical = _SensorProbeTemperatureArrayPort6LowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 10),
    _SensorProbeTemperatureArrayPort6LowCritical_Type()
)
sensorProbeTemperatureArrayPort6LowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6LowCritical.setStatus("mandatory")
_SensorProbeTemperatureArrayPort6Rearm_Type = Integer32
_SensorProbeTemperatureArrayPort6Rearm_Object = MibTableColumn
sensorProbeTemperatureArrayPort6Rearm = _SensorProbeTemperatureArrayPort6Rearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 11),
    _SensorProbeTemperatureArrayPort6Rearm_Type()
)
sensorProbeTemperatureArrayPort6Rearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6Rearm.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort6DegreeType_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort6DegreeType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("celsius", 1),
          ("fahr", 0))
    )


_SensorProbeTemperatureArrayPort6DegreeType_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort6DegreeType_Object = MibTableColumn
sensorProbeTemperatureArrayPort6DegreeType = _SensorProbeTemperatureArrayPort6DegreeType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 12),
    _SensorProbeTemperatureArrayPort6DegreeType_Type()
)
sensorProbeTemperatureArrayPort6DegreeType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6DegreeType.setStatus("mandatory")
_SensorProbeTemperatureArrayPort6DegreeRaw_Type = Integer32
_SensorProbeTemperatureArrayPort6DegreeRaw_Object = MibTableColumn
sensorProbeTemperatureArrayPort6DegreeRaw = _SensorProbeTemperatureArrayPort6DegreeRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 14),
    _SensorProbeTemperatureArrayPort6DegreeRaw_Type()
)
sensorProbeTemperatureArrayPort6DegreeRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6DegreeRaw.setStatus("mandatory")
_SensorProbeTemperatureArrayPort6Offset_Type = Integer32
_SensorProbeTemperatureArrayPort6Offset_Object = MibTableColumn
sensorProbeTemperatureArrayPort6Offset = _SensorProbeTemperatureArrayPort6Offset_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 15),
    _SensorProbeTemperatureArrayPort6Offset_Type()
)
sensorProbeTemperatureArrayPort6Offset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6Offset.setStatus("mandatory")
_SensorProbeTemperatureArrayPort6URL_Type = DisplayString
_SensorProbeTemperatureArrayPort6URL_Object = MibTableColumn
sensorProbeTemperatureArrayPort6URL = _SensorProbeTemperatureArrayPort6URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 16),
    _SensorProbeTemperatureArrayPort6URL_Type()
)
sensorProbeTemperatureArrayPort6URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6URL.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort6OpenURL_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort6OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeTemperatureArrayPort6OpenURL_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort6OpenURL_Object = MibTableColumn
sensorProbeTemperatureArrayPort6OpenURL = _SensorProbeTemperatureArrayPort6OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 17),
    _SensorProbeTemperatureArrayPort6OpenURL_Type()
)
sensorProbeTemperatureArrayPort6OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6OpenURL.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort6DatacollectType_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort6DatacollectType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("average", 1),
          ("highest", 2),
          ("lowest", 3))
    )


_SensorProbeTemperatureArrayPort6DatacollectType_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort6DatacollectType_Object = MibTableColumn
sensorProbeTemperatureArrayPort6DatacollectType = _SensorProbeTemperatureArrayPort6DatacollectType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 18),
    _SensorProbeTemperatureArrayPort6DatacollectType_Type()
)
sensorProbeTemperatureArrayPort6DatacollectType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6DatacollectType.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort6ContTimeHighCritical_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort6ContTimeHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort6ContTimeHighCritical_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort6ContTimeHighCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort6ContTimeHighCritical = _SensorProbeTemperatureArrayPort6ContTimeHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 19),
    _SensorProbeTemperatureArrayPort6ContTimeHighCritical_Type()
)
sensorProbeTemperatureArrayPort6ContTimeHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6ContTimeHighCritical.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort6ContTimeHighWarning_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort6ContTimeHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort6ContTimeHighWarning_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort6ContTimeHighWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort6ContTimeHighWarning = _SensorProbeTemperatureArrayPort6ContTimeHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 20),
    _SensorProbeTemperatureArrayPort6ContTimeHighWarning_Type()
)
sensorProbeTemperatureArrayPort6ContTimeHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6ContTimeHighWarning.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort6ContTimeNormal_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort6ContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort6ContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort6ContTimeNormal_Object = MibTableColumn
sensorProbeTemperatureArrayPort6ContTimeNormal = _SensorProbeTemperatureArrayPort6ContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 21),
    _SensorProbeTemperatureArrayPort6ContTimeNormal_Type()
)
sensorProbeTemperatureArrayPort6ContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6ContTimeNormal.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort6ContTimeLowWarning_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort6ContTimeLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort6ContTimeLowWarning_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort6ContTimeLowWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort6ContTimeLowWarning = _SensorProbeTemperatureArrayPort6ContTimeLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 22),
    _SensorProbeTemperatureArrayPort6ContTimeLowWarning_Type()
)
sensorProbeTemperatureArrayPort6ContTimeLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6ContTimeLowWarning.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort6ContTimeLowCritical_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort6ContTimeLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort6ContTimeLowCritical_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort6ContTimeLowCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort6ContTimeLowCritical = _SensorProbeTemperatureArrayPort6ContTimeLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 23),
    _SensorProbeTemperatureArrayPort6ContTimeLowCritical_Type()
)
sensorProbeTemperatureArrayPort6ContTimeLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6ContTimeLowCritical.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort6ContTimeSensorError_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort6ContTimeSensorError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort6ContTimeSensorError_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort6ContTimeSensorError_Object = MibTableColumn
sensorProbeTemperatureArrayPort6ContTimeSensorError = _SensorProbeTemperatureArrayPort6ContTimeSensorError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 24),
    _SensorProbeTemperatureArrayPort6ContTimeSensorError_Type()
)
sensorProbeTemperatureArrayPort6ContTimeSensorError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6ContTimeSensorError.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort6Calendar_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort6Calendar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeTemperatureArrayPort6Calendar_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort6Calendar_Object = MibTableColumn
sensorProbeTemperatureArrayPort6Calendar = _SensorProbeTemperatureArrayPort6Calendar_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 25),
    _SensorProbeTemperatureArrayPort6Calendar_Type()
)
sensorProbeTemperatureArrayPort6Calendar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort6Calendar.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort6Index_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort6Index_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort6Index = _SensorProbeThermostatTemperatureArrayPort6Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 26),
    _SensorProbeThermostatTemperatureArrayPort6Index_Type()
)
sensorProbeThermostatTemperatureArrayPort6Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort6Index.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort6Description_Type = DisplayString
_SensorProbeThermostatTemperatureArrayPort6Description_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort6Description = _SensorProbeThermostatTemperatureArrayPort6Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 27),
    _SensorProbeThermostatTemperatureArrayPort6Description_Type()
)
sensorProbeThermostatTemperatureArrayPort6Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort6Description.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort6Value_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort6Value_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort6Value = _SensorProbeThermostatTemperatureArrayPort6Value_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 28),
    _SensorProbeThermostatTemperatureArrayPort6Value_Type()
)
sensorProbeThermostatTemperatureArrayPort6Value.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort6Value.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort6Online_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort6Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeThermostatTemperatureArrayPort6Online_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort6Online_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort6Online = _SensorProbeThermostatTemperatureArrayPort6Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 29),
    _SensorProbeThermostatTemperatureArrayPort6Online_Type()
)
sensorProbeThermostatTemperatureArrayPort6Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort6Online.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort6GoOnline_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort6GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeThermostatTemperatureArrayPort6GoOnline_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort6GoOnline_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort6GoOnline = _SensorProbeThermostatTemperatureArrayPort6GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 30),
    _SensorProbeThermostatTemperatureArrayPort6GoOnline_Type()
)
sensorProbeThermostatTemperatureArrayPort6GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort6GoOnline.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort6Mode_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort6Mode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("time-bases", 1))
    )


_SensorProbeThermostatTemperatureArrayPort6Mode_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort6Mode_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort6Mode = _SensorProbeThermostatTemperatureArrayPort6Mode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 31),
    _SensorProbeThermostatTemperatureArrayPort6Mode_Type()
)
sensorProbeThermostatTemperatureArrayPort6Mode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort6Mode.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort6RelayControlPort_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort6RelayControlPort_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort6RelayControlPort = _SensorProbeThermostatTemperatureArrayPort6RelayControlPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 32),
    _SensorProbeThermostatTemperatureArrayPort6RelayControlPort_Type()
)
sensorProbeThermostatTemperatureArrayPort6RelayControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort6RelayControlPort.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort6NormalAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort6NormalAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort6NormalAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort6NormalAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort6NormalAction1 = _SensorProbeThermostatTemperatureArrayPort6NormalAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 33),
    _SensorProbeThermostatTemperatureArrayPort6NormalAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort6NormalAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort6NormalAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort6HighLimit1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort6HighLimit1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort6HighLimit1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort6HighLimit1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort6HighLimit1 = _SensorProbeThermostatTemperatureArrayPort6HighLimit1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 34),
    _SensorProbeThermostatTemperatureArrayPort6HighLimit1_Type()
)
sensorProbeThermostatTemperatureArrayPort6HighLimit1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort6HighLimit1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort6HighLimitAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort6HighLimitAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort6HighLimitAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort6HighLimitAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort6HighLimitAction1 = _SensorProbeThermostatTemperatureArrayPort6HighLimitAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 35),
    _SensorProbeThermostatTemperatureArrayPort6HighLimitAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort6HighLimitAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort6HighLimitAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort6LowLimit1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort6LowLimit1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort6LowLimit1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort6LowLimit1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort6LowLimit1 = _SensorProbeThermostatTemperatureArrayPort6LowLimit1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 36),
    _SensorProbeThermostatTemperatureArrayPort6LowLimit1_Type()
)
sensorProbeThermostatTemperatureArrayPort6LowLimit1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort6LowLimit1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort6LowLimitAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort6LowLimitAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort6LowLimitAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort6LowLimitAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort6LowLimitAction1 = _SensorProbeThermostatTemperatureArrayPort6LowLimitAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 37),
    _SensorProbeThermostatTemperatureArrayPort6LowLimitAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort6LowLimitAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort6LowLimitAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort6NormalAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort6NormalAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort6NormalAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort6NormalAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort6NormalAction2 = _SensorProbeThermostatTemperatureArrayPort6NormalAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 38),
    _SensorProbeThermostatTemperatureArrayPort6NormalAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort6NormalAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort6NormalAction2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort6HighLimit2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort6HighLimit2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort6HighLimit2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort6HighLimit2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort6HighLimit2 = _SensorProbeThermostatTemperatureArrayPort6HighLimit2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 39),
    _SensorProbeThermostatTemperatureArrayPort6HighLimit2_Type()
)
sensorProbeThermostatTemperatureArrayPort6HighLimit2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort6HighLimit2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort6HighLimitAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort6HighLimitAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort6HighLimitAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort6HighLimitAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort6HighLimitAction2 = _SensorProbeThermostatTemperatureArrayPort6HighLimitAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 40),
    _SensorProbeThermostatTemperatureArrayPort6HighLimitAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort6HighLimitAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort6HighLimitAction2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort6LowLimit2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort6LowLimit2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort6LowLimit2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort6LowLimit2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort6LowLimit2 = _SensorProbeThermostatTemperatureArrayPort6LowLimit2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 41),
    _SensorProbeThermostatTemperatureArrayPort6LowLimit2_Type()
)
sensorProbeThermostatTemperatureArrayPort6LowLimit2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort6LowLimit2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort6LowLimitAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort6LowLimitAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort6LowLimitAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort6LowLimitAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort6LowLimitAction2 = _SensorProbeThermostatTemperatureArrayPort6LowLimitAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 42),
    _SensorProbeThermostatTemperatureArrayPort6LowLimitAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort6LowLimitAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort6LowLimitAction2.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort6EnableTime_Type = DisplayString
_SensorProbeThermostatTemperatureArrayPort6EnableTime_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort6EnableTime = _SensorProbeThermostatTemperatureArrayPort6EnableTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 6, 2, 1, 43),
    _SensorProbeThermostatTemperatureArrayPort6EnableTime_Type()
)
sensorProbeThermostatTemperatureArrayPort6EnableTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort6EnableTime.setStatus("mandatory")
_SensorProbeTemperatureArrayPort7_ObjectIdentity = ObjectIdentity
sensorProbeTemperatureArrayPort7 = _SensorProbeTemperatureArrayPort7_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7)
)
_SensorProbeTemperatureArrayPort7Number_Type = Integer32
_SensorProbeTemperatureArrayPort7Number_Object = MibScalar
sensorProbeTemperatureArrayPort7Number = _SensorProbeTemperatureArrayPort7Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 1),
    _SensorProbeTemperatureArrayPort7Number_Type()
)
sensorProbeTemperatureArrayPort7Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7Number.setStatus("mandatory")
_SensorProbeTemperatureArrayPort7Table_Object = MibTable
sensorProbeTemperatureArrayPort7Table = _SensorProbeTemperatureArrayPort7Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2)
)
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7Table.setStatus("mandatory")
_SensorProbeTemperatureArrayPort7Entry_Object = MibTableRow
sensorProbeTemperatureArrayPort7Entry = _SensorProbeTemperatureArrayPort7Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1)
)
sensorProbeTemperatureArrayPort7Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeTemperatureArrayPort7Index"),
)
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7Entry.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort7Index_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort7Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeTemperatureArrayPort7Index_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort7Index_Object = MibTableColumn
sensorProbeTemperatureArrayPort7Index = _SensorProbeTemperatureArrayPort7Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 1),
    _SensorProbeTemperatureArrayPort7Index_Type()
)
sensorProbeTemperatureArrayPort7Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7Index.setStatus("mandatory")
_SensorProbeTemperatureArrayPort7Description_Type = DisplayString
_SensorProbeTemperatureArrayPort7Description_Object = MibTableColumn
sensorProbeTemperatureArrayPort7Description = _SensorProbeTemperatureArrayPort7Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 2),
    _SensorProbeTemperatureArrayPort7Description_Type()
)
sensorProbeTemperatureArrayPort7Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7Description.setStatus("mandatory")
_SensorProbeTemperatureArrayPort7Value_Type = Integer32
_SensorProbeTemperatureArrayPort7Value_Object = MibTableColumn
sensorProbeTemperatureArrayPort7Value = _SensorProbeTemperatureArrayPort7Value_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 3),
    _SensorProbeTemperatureArrayPort7Value_Type()
)
sensorProbeTemperatureArrayPort7Value.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7Value.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort7Status_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort7Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorProbeTemperatureArrayPort7Status_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort7Status_Object = MibTableColumn
sensorProbeTemperatureArrayPort7Status = _SensorProbeTemperatureArrayPort7Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 4),
    _SensorProbeTemperatureArrayPort7Status_Type()
)
sensorProbeTemperatureArrayPort7Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7Status.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort7Online_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort7Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeTemperatureArrayPort7Online_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort7Online_Object = MibTableColumn
sensorProbeTemperatureArrayPort7Online = _SensorProbeTemperatureArrayPort7Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 5),
    _SensorProbeTemperatureArrayPort7Online_Type()
)
sensorProbeTemperatureArrayPort7Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7Online.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort7GoOnline_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort7GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeTemperatureArrayPort7GoOnline_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort7GoOnline_Object = MibTableColumn
sensorProbeTemperatureArrayPort7GoOnline = _SensorProbeTemperatureArrayPort7GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 6),
    _SensorProbeTemperatureArrayPort7GoOnline_Type()
)
sensorProbeTemperatureArrayPort7GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7GoOnline.setStatus("mandatory")
_SensorProbeTemperatureArrayPort7HighWarning_Type = Integer32
_SensorProbeTemperatureArrayPort7HighWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort7HighWarning = _SensorProbeTemperatureArrayPort7HighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 7),
    _SensorProbeTemperatureArrayPort7HighWarning_Type()
)
sensorProbeTemperatureArrayPort7HighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7HighWarning.setStatus("mandatory")
_SensorProbeTemperatureArrayPort7HighCritical_Type = Integer32
_SensorProbeTemperatureArrayPort7HighCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort7HighCritical = _SensorProbeTemperatureArrayPort7HighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 8),
    _SensorProbeTemperatureArrayPort7HighCritical_Type()
)
sensorProbeTemperatureArrayPort7HighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7HighCritical.setStatus("mandatory")
_SensorProbeTemperatureArrayPort7LowWarning_Type = Integer32
_SensorProbeTemperatureArrayPort7LowWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort7LowWarning = _SensorProbeTemperatureArrayPort7LowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 9),
    _SensorProbeTemperatureArrayPort7LowWarning_Type()
)
sensorProbeTemperatureArrayPort7LowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7LowWarning.setStatus("mandatory")
_SensorProbeTemperatureArrayPort7LowCritical_Type = Integer32
_SensorProbeTemperatureArrayPort7LowCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort7LowCritical = _SensorProbeTemperatureArrayPort7LowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 10),
    _SensorProbeTemperatureArrayPort7LowCritical_Type()
)
sensorProbeTemperatureArrayPort7LowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7LowCritical.setStatus("mandatory")
_SensorProbeTemperatureArrayPort7Rearm_Type = Integer32
_SensorProbeTemperatureArrayPort7Rearm_Object = MibTableColumn
sensorProbeTemperatureArrayPort7Rearm = _SensorProbeTemperatureArrayPort7Rearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 11),
    _SensorProbeTemperatureArrayPort7Rearm_Type()
)
sensorProbeTemperatureArrayPort7Rearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7Rearm.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort7DegreeType_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort7DegreeType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("celsius", 1),
          ("fahr", 0))
    )


_SensorProbeTemperatureArrayPort7DegreeType_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort7DegreeType_Object = MibTableColumn
sensorProbeTemperatureArrayPort7DegreeType = _SensorProbeTemperatureArrayPort7DegreeType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 12),
    _SensorProbeTemperatureArrayPort7DegreeType_Type()
)
sensorProbeTemperatureArrayPort7DegreeType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7DegreeType.setStatus("mandatory")
_SensorProbeTemperatureArrayPort7DegreeRaw_Type = Integer32
_SensorProbeTemperatureArrayPort7DegreeRaw_Object = MibTableColumn
sensorProbeTemperatureArrayPort7DegreeRaw = _SensorProbeTemperatureArrayPort7DegreeRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 14),
    _SensorProbeTemperatureArrayPort7DegreeRaw_Type()
)
sensorProbeTemperatureArrayPort7DegreeRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7DegreeRaw.setStatus("mandatory")
_SensorProbeTemperatureArrayPort7Offset_Type = Integer32
_SensorProbeTemperatureArrayPort7Offset_Object = MibTableColumn
sensorProbeTemperatureArrayPort7Offset = _SensorProbeTemperatureArrayPort7Offset_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 15),
    _SensorProbeTemperatureArrayPort7Offset_Type()
)
sensorProbeTemperatureArrayPort7Offset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7Offset.setStatus("mandatory")
_SensorProbeTemperatureArrayPort7URL_Type = DisplayString
_SensorProbeTemperatureArrayPort7URL_Object = MibTableColumn
sensorProbeTemperatureArrayPort7URL = _SensorProbeTemperatureArrayPort7URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 16),
    _SensorProbeTemperatureArrayPort7URL_Type()
)
sensorProbeTemperatureArrayPort7URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7URL.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort7OpenURL_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort7OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeTemperatureArrayPort7OpenURL_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort7OpenURL_Object = MibTableColumn
sensorProbeTemperatureArrayPort7OpenURL = _SensorProbeTemperatureArrayPort7OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 17),
    _SensorProbeTemperatureArrayPort7OpenURL_Type()
)
sensorProbeTemperatureArrayPort7OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7OpenURL.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort7DatacollectType_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort7DatacollectType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("average", 1),
          ("highest", 2),
          ("lowest", 3))
    )


_SensorProbeTemperatureArrayPort7DatacollectType_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort7DatacollectType_Object = MibTableColumn
sensorProbeTemperatureArrayPort7DatacollectType = _SensorProbeTemperatureArrayPort7DatacollectType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 18),
    _SensorProbeTemperatureArrayPort7DatacollectType_Type()
)
sensorProbeTemperatureArrayPort7DatacollectType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7DatacollectType.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort7ContTimeHighCritical_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort7ContTimeHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort7ContTimeHighCritical_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort7ContTimeHighCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort7ContTimeHighCritical = _SensorProbeTemperatureArrayPort7ContTimeHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 19),
    _SensorProbeTemperatureArrayPort7ContTimeHighCritical_Type()
)
sensorProbeTemperatureArrayPort7ContTimeHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7ContTimeHighCritical.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort7ContTimeHighWarning_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort7ContTimeHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort7ContTimeHighWarning_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort7ContTimeHighWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort7ContTimeHighWarning = _SensorProbeTemperatureArrayPort7ContTimeHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 20),
    _SensorProbeTemperatureArrayPort7ContTimeHighWarning_Type()
)
sensorProbeTemperatureArrayPort7ContTimeHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7ContTimeHighWarning.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort7ContTimeNormal_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort7ContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort7ContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort7ContTimeNormal_Object = MibTableColumn
sensorProbeTemperatureArrayPort7ContTimeNormal = _SensorProbeTemperatureArrayPort7ContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 21),
    _SensorProbeTemperatureArrayPort7ContTimeNormal_Type()
)
sensorProbeTemperatureArrayPort7ContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7ContTimeNormal.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort7ContTimeLowWarning_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort7ContTimeLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort7ContTimeLowWarning_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort7ContTimeLowWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort7ContTimeLowWarning = _SensorProbeTemperatureArrayPort7ContTimeLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 22),
    _SensorProbeTemperatureArrayPort7ContTimeLowWarning_Type()
)
sensorProbeTemperatureArrayPort7ContTimeLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7ContTimeLowWarning.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort7ContTimeLowCritical_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort7ContTimeLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort7ContTimeLowCritical_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort7ContTimeLowCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort7ContTimeLowCritical = _SensorProbeTemperatureArrayPort7ContTimeLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 23),
    _SensorProbeTemperatureArrayPort7ContTimeLowCritical_Type()
)
sensorProbeTemperatureArrayPort7ContTimeLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7ContTimeLowCritical.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort7ContTimeSensorError_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort7ContTimeSensorError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort7ContTimeSensorError_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort7ContTimeSensorError_Object = MibTableColumn
sensorProbeTemperatureArrayPort7ContTimeSensorError = _SensorProbeTemperatureArrayPort7ContTimeSensorError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 24),
    _SensorProbeTemperatureArrayPort7ContTimeSensorError_Type()
)
sensorProbeTemperatureArrayPort7ContTimeSensorError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7ContTimeSensorError.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort7Calendar_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort7Calendar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeTemperatureArrayPort7Calendar_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort7Calendar_Object = MibTableColumn
sensorProbeTemperatureArrayPort7Calendar = _SensorProbeTemperatureArrayPort7Calendar_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 25),
    _SensorProbeTemperatureArrayPort7Calendar_Type()
)
sensorProbeTemperatureArrayPort7Calendar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort7Calendar.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort7Index_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort7Index_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort7Index = _SensorProbeThermostatTemperatureArrayPort7Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 26),
    _SensorProbeThermostatTemperatureArrayPort7Index_Type()
)
sensorProbeThermostatTemperatureArrayPort7Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort7Index.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort7Description_Type = DisplayString
_SensorProbeThermostatTemperatureArrayPort7Description_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort7Description = _SensorProbeThermostatTemperatureArrayPort7Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 27),
    _SensorProbeThermostatTemperatureArrayPort7Description_Type()
)
sensorProbeThermostatTemperatureArrayPort7Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort7Description.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort7Value_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort7Value_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort7Value = _SensorProbeThermostatTemperatureArrayPort7Value_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 28),
    _SensorProbeThermostatTemperatureArrayPort7Value_Type()
)
sensorProbeThermostatTemperatureArrayPort7Value.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort7Value.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort7Online_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort7Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeThermostatTemperatureArrayPort7Online_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort7Online_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort7Online = _SensorProbeThermostatTemperatureArrayPort7Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 29),
    _SensorProbeThermostatTemperatureArrayPort7Online_Type()
)
sensorProbeThermostatTemperatureArrayPort7Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort7Online.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort7GoOnline_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort7GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeThermostatTemperatureArrayPort7GoOnline_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort7GoOnline_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort7GoOnline = _SensorProbeThermostatTemperatureArrayPort7GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 30),
    _SensorProbeThermostatTemperatureArrayPort7GoOnline_Type()
)
sensorProbeThermostatTemperatureArrayPort7GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort7GoOnline.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort7Mode_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort7Mode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("time-bases", 1))
    )


_SensorProbeThermostatTemperatureArrayPort7Mode_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort7Mode_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort7Mode = _SensorProbeThermostatTemperatureArrayPort7Mode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 31),
    _SensorProbeThermostatTemperatureArrayPort7Mode_Type()
)
sensorProbeThermostatTemperatureArrayPort7Mode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort7Mode.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort7RelayControlPort_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort7RelayControlPort_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort7RelayControlPort = _SensorProbeThermostatTemperatureArrayPort7RelayControlPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 32),
    _SensorProbeThermostatTemperatureArrayPort7RelayControlPort_Type()
)
sensorProbeThermostatTemperatureArrayPort7RelayControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort7RelayControlPort.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort7NormalAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort7NormalAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort7NormalAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort7NormalAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort7NormalAction1 = _SensorProbeThermostatTemperatureArrayPort7NormalAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 33),
    _SensorProbeThermostatTemperatureArrayPort7NormalAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort7NormalAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort7NormalAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort7HighLimit1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort7HighLimit1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort7HighLimit1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort7HighLimit1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort7HighLimit1 = _SensorProbeThermostatTemperatureArrayPort7HighLimit1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 34),
    _SensorProbeThermostatTemperatureArrayPort7HighLimit1_Type()
)
sensorProbeThermostatTemperatureArrayPort7HighLimit1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort7HighLimit1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort7HighLimitAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort7HighLimitAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort7HighLimitAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort7HighLimitAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort7HighLimitAction1 = _SensorProbeThermostatTemperatureArrayPort7HighLimitAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 35),
    _SensorProbeThermostatTemperatureArrayPort7HighLimitAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort7HighLimitAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort7HighLimitAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort7LowLimit1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort7LowLimit1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort7LowLimit1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort7LowLimit1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort7LowLimit1 = _SensorProbeThermostatTemperatureArrayPort7LowLimit1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 36),
    _SensorProbeThermostatTemperatureArrayPort7LowLimit1_Type()
)
sensorProbeThermostatTemperatureArrayPort7LowLimit1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort7LowLimit1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort7LowLimitAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort7LowLimitAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort7LowLimitAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort7LowLimitAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort7LowLimitAction1 = _SensorProbeThermostatTemperatureArrayPort7LowLimitAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 37),
    _SensorProbeThermostatTemperatureArrayPort7LowLimitAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort7LowLimitAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort7LowLimitAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort7NormalAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort7NormalAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort7NormalAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort7NormalAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort7NormalAction2 = _SensorProbeThermostatTemperatureArrayPort7NormalAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 38),
    _SensorProbeThermostatTemperatureArrayPort7NormalAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort7NormalAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort7NormalAction2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort7HighLimit2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort7HighLimit2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort7HighLimit2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort7HighLimit2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort7HighLimit2 = _SensorProbeThermostatTemperatureArrayPort7HighLimit2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 39),
    _SensorProbeThermostatTemperatureArrayPort7HighLimit2_Type()
)
sensorProbeThermostatTemperatureArrayPort7HighLimit2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort7HighLimit2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort7HighLimitAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort7HighLimitAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort7HighLimitAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort7HighLimitAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort7HighLimitAction2 = _SensorProbeThermostatTemperatureArrayPort7HighLimitAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 40),
    _SensorProbeThermostatTemperatureArrayPort7HighLimitAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort7HighLimitAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort7HighLimitAction2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort7LowLimit2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort7LowLimit2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort7LowLimit2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort7LowLimit2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort7LowLimit2 = _SensorProbeThermostatTemperatureArrayPort7LowLimit2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 41),
    _SensorProbeThermostatTemperatureArrayPort7LowLimit2_Type()
)
sensorProbeThermostatTemperatureArrayPort7LowLimit2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort7LowLimit2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort7LowLimitAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort7LowLimitAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort7LowLimitAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort7LowLimitAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort7LowLimitAction2 = _SensorProbeThermostatTemperatureArrayPort7LowLimitAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 42),
    _SensorProbeThermostatTemperatureArrayPort7LowLimitAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort7LowLimitAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort7LowLimitAction2.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort7EnableTime_Type = DisplayString
_SensorProbeThermostatTemperatureArrayPort7EnableTime_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort7EnableTime = _SensorProbeThermostatTemperatureArrayPort7EnableTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 7, 2, 1, 43),
    _SensorProbeThermostatTemperatureArrayPort7EnableTime_Type()
)
sensorProbeThermostatTemperatureArrayPort7EnableTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort7EnableTime.setStatus("mandatory")
_SensorProbeTemperatureArrayPort8_ObjectIdentity = ObjectIdentity
sensorProbeTemperatureArrayPort8 = _SensorProbeTemperatureArrayPort8_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8)
)
_SensorProbeTemperatureArrayPort8Number_Type = Integer32
_SensorProbeTemperatureArrayPort8Number_Object = MibScalar
sensorProbeTemperatureArrayPort8Number = _SensorProbeTemperatureArrayPort8Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 1),
    _SensorProbeTemperatureArrayPort8Number_Type()
)
sensorProbeTemperatureArrayPort8Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8Number.setStatus("mandatory")
_SensorProbeTemperatureArrayPort8Table_Object = MibTable
sensorProbeTemperatureArrayPort8Table = _SensorProbeTemperatureArrayPort8Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2)
)
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8Table.setStatus("mandatory")
_SensorProbeTemperatureArrayPort8Entry_Object = MibTableRow
sensorProbeTemperatureArrayPort8Entry = _SensorProbeTemperatureArrayPort8Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1)
)
sensorProbeTemperatureArrayPort8Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeTemperatureArrayPort8Index"),
)
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8Entry.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort8Index_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort8Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeTemperatureArrayPort8Index_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort8Index_Object = MibTableColumn
sensorProbeTemperatureArrayPort8Index = _SensorProbeTemperatureArrayPort8Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 1),
    _SensorProbeTemperatureArrayPort8Index_Type()
)
sensorProbeTemperatureArrayPort8Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8Index.setStatus("mandatory")
_SensorProbeTemperatureArrayPort8Description_Type = DisplayString
_SensorProbeTemperatureArrayPort8Description_Object = MibTableColumn
sensorProbeTemperatureArrayPort8Description = _SensorProbeTemperatureArrayPort8Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 2),
    _SensorProbeTemperatureArrayPort8Description_Type()
)
sensorProbeTemperatureArrayPort8Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8Description.setStatus("mandatory")
_SensorProbeTemperatureArrayPort8Value_Type = Integer32
_SensorProbeTemperatureArrayPort8Value_Object = MibTableColumn
sensorProbeTemperatureArrayPort8Value = _SensorProbeTemperatureArrayPort8Value_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 3),
    _SensorProbeTemperatureArrayPort8Value_Type()
)
sensorProbeTemperatureArrayPort8Value.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8Value.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort8Status_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort8Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorProbeTemperatureArrayPort8Status_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort8Status_Object = MibTableColumn
sensorProbeTemperatureArrayPort8Status = _SensorProbeTemperatureArrayPort8Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 4),
    _SensorProbeTemperatureArrayPort8Status_Type()
)
sensorProbeTemperatureArrayPort8Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8Status.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort8Online_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort8Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeTemperatureArrayPort8Online_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort8Online_Object = MibTableColumn
sensorProbeTemperatureArrayPort8Online = _SensorProbeTemperatureArrayPort8Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 5),
    _SensorProbeTemperatureArrayPort8Online_Type()
)
sensorProbeTemperatureArrayPort8Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8Online.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort8GoOnline_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort8GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeTemperatureArrayPort8GoOnline_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort8GoOnline_Object = MibTableColumn
sensorProbeTemperatureArrayPort8GoOnline = _SensorProbeTemperatureArrayPort8GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 6),
    _SensorProbeTemperatureArrayPort8GoOnline_Type()
)
sensorProbeTemperatureArrayPort8GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8GoOnline.setStatus("mandatory")
_SensorProbeTemperatureArrayPort8HighWarning_Type = Integer32
_SensorProbeTemperatureArrayPort8HighWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort8HighWarning = _SensorProbeTemperatureArrayPort8HighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 7),
    _SensorProbeTemperatureArrayPort8HighWarning_Type()
)
sensorProbeTemperatureArrayPort8HighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8HighWarning.setStatus("mandatory")
_SensorProbeTemperatureArrayPort8HighCritical_Type = Integer32
_SensorProbeTemperatureArrayPort8HighCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort8HighCritical = _SensorProbeTemperatureArrayPort8HighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 8),
    _SensorProbeTemperatureArrayPort8HighCritical_Type()
)
sensorProbeTemperatureArrayPort8HighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8HighCritical.setStatus("mandatory")
_SensorProbeTemperatureArrayPort8LowWarning_Type = Integer32
_SensorProbeTemperatureArrayPort8LowWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort8LowWarning = _SensorProbeTemperatureArrayPort8LowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 9),
    _SensorProbeTemperatureArrayPort8LowWarning_Type()
)
sensorProbeTemperatureArrayPort8LowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8LowWarning.setStatus("mandatory")
_SensorProbeTemperatureArrayPort8LowCritical_Type = Integer32
_SensorProbeTemperatureArrayPort8LowCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort8LowCritical = _SensorProbeTemperatureArrayPort8LowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 10),
    _SensorProbeTemperatureArrayPort8LowCritical_Type()
)
sensorProbeTemperatureArrayPort8LowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8LowCritical.setStatus("mandatory")
_SensorProbeTemperatureArrayPort8Rearm_Type = Integer32
_SensorProbeTemperatureArrayPort8Rearm_Object = MibTableColumn
sensorProbeTemperatureArrayPort8Rearm = _SensorProbeTemperatureArrayPort8Rearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 11),
    _SensorProbeTemperatureArrayPort8Rearm_Type()
)
sensorProbeTemperatureArrayPort8Rearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8Rearm.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort8DegreeType_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort8DegreeType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("celsius", 1),
          ("fahr", 0))
    )


_SensorProbeTemperatureArrayPort8DegreeType_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort8DegreeType_Object = MibTableColumn
sensorProbeTemperatureArrayPort8DegreeType = _SensorProbeTemperatureArrayPort8DegreeType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 12),
    _SensorProbeTemperatureArrayPort8DegreeType_Type()
)
sensorProbeTemperatureArrayPort8DegreeType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8DegreeType.setStatus("mandatory")
_SensorProbeTemperatureArrayPort8DegreeRaw_Type = Integer32
_SensorProbeTemperatureArrayPort8DegreeRaw_Object = MibTableColumn
sensorProbeTemperatureArrayPort8DegreeRaw = _SensorProbeTemperatureArrayPort8DegreeRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 14),
    _SensorProbeTemperatureArrayPort8DegreeRaw_Type()
)
sensorProbeTemperatureArrayPort8DegreeRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8DegreeRaw.setStatus("mandatory")
_SensorProbeTemperatureArrayPort8Offset_Type = Integer32
_SensorProbeTemperatureArrayPort8Offset_Object = MibTableColumn
sensorProbeTemperatureArrayPort8Offset = _SensorProbeTemperatureArrayPort8Offset_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 15),
    _SensorProbeTemperatureArrayPort8Offset_Type()
)
sensorProbeTemperatureArrayPort8Offset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8Offset.setStatus("mandatory")
_SensorProbeTemperatureArrayPort8URL_Type = DisplayString
_SensorProbeTemperatureArrayPort8URL_Object = MibTableColumn
sensorProbeTemperatureArrayPort8URL = _SensorProbeTemperatureArrayPort8URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 16),
    _SensorProbeTemperatureArrayPort8URL_Type()
)
sensorProbeTemperatureArrayPort8URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8URL.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort8OpenURL_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort8OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeTemperatureArrayPort8OpenURL_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort8OpenURL_Object = MibTableColumn
sensorProbeTemperatureArrayPort8OpenURL = _SensorProbeTemperatureArrayPort8OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 17),
    _SensorProbeTemperatureArrayPort8OpenURL_Type()
)
sensorProbeTemperatureArrayPort8OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8OpenURL.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort8DatacollectType_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort8DatacollectType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("average", 1),
          ("highest", 2),
          ("lowest", 3))
    )


_SensorProbeTemperatureArrayPort8DatacollectType_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort8DatacollectType_Object = MibTableColumn
sensorProbeTemperatureArrayPort8DatacollectType = _SensorProbeTemperatureArrayPort8DatacollectType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 18),
    _SensorProbeTemperatureArrayPort8DatacollectType_Type()
)
sensorProbeTemperatureArrayPort8DatacollectType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8DatacollectType.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort8ContTimeHighCritical_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort8ContTimeHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort8ContTimeHighCritical_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort8ContTimeHighCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort8ContTimeHighCritical = _SensorProbeTemperatureArrayPort8ContTimeHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 19),
    _SensorProbeTemperatureArrayPort8ContTimeHighCritical_Type()
)
sensorProbeTemperatureArrayPort8ContTimeHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8ContTimeHighCritical.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort8ContTimeHighWarning_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort8ContTimeHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort8ContTimeHighWarning_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort8ContTimeHighWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort8ContTimeHighWarning = _SensorProbeTemperatureArrayPort8ContTimeHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 20),
    _SensorProbeTemperatureArrayPort8ContTimeHighWarning_Type()
)
sensorProbeTemperatureArrayPort8ContTimeHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8ContTimeHighWarning.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort8ContTimeNormal_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort8ContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort8ContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort8ContTimeNormal_Object = MibTableColumn
sensorProbeTemperatureArrayPort8ContTimeNormal = _SensorProbeTemperatureArrayPort8ContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 21),
    _SensorProbeTemperatureArrayPort8ContTimeNormal_Type()
)
sensorProbeTemperatureArrayPort8ContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8ContTimeNormal.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort8ContTimeLowWarning_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort8ContTimeLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort8ContTimeLowWarning_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort8ContTimeLowWarning_Object = MibTableColumn
sensorProbeTemperatureArrayPort8ContTimeLowWarning = _SensorProbeTemperatureArrayPort8ContTimeLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 22),
    _SensorProbeTemperatureArrayPort8ContTimeLowWarning_Type()
)
sensorProbeTemperatureArrayPort8ContTimeLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8ContTimeLowWarning.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort8ContTimeLowCritical_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort8ContTimeLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort8ContTimeLowCritical_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort8ContTimeLowCritical_Object = MibTableColumn
sensorProbeTemperatureArrayPort8ContTimeLowCritical = _SensorProbeTemperatureArrayPort8ContTimeLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 23),
    _SensorProbeTemperatureArrayPort8ContTimeLowCritical_Type()
)
sensorProbeTemperatureArrayPort8ContTimeLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8ContTimeLowCritical.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort8ContTimeSensorError_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort8ContTimeSensorError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeTemperatureArrayPort8ContTimeSensorError_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort8ContTimeSensorError_Object = MibTableColumn
sensorProbeTemperatureArrayPort8ContTimeSensorError = _SensorProbeTemperatureArrayPort8ContTimeSensorError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 24),
    _SensorProbeTemperatureArrayPort8ContTimeSensorError_Type()
)
sensorProbeTemperatureArrayPort8ContTimeSensorError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8ContTimeSensorError.setStatus("mandatory")


class _SensorProbeTemperatureArrayPort8Calendar_Type(Integer32):
    """Custom type sensorProbeTemperatureArrayPort8Calendar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeTemperatureArrayPort8Calendar_Type.__name__ = "Integer32"
_SensorProbeTemperatureArrayPort8Calendar_Object = MibTableColumn
sensorProbeTemperatureArrayPort8Calendar = _SensorProbeTemperatureArrayPort8Calendar_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 25),
    _SensorProbeTemperatureArrayPort8Calendar_Type()
)
sensorProbeTemperatureArrayPort8Calendar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTemperatureArrayPort8Calendar.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort8Index_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort8Index_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort8Index = _SensorProbeThermostatTemperatureArrayPort8Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 26),
    _SensorProbeThermostatTemperatureArrayPort8Index_Type()
)
sensorProbeThermostatTemperatureArrayPort8Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort8Index.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort8Description_Type = DisplayString
_SensorProbeThermostatTemperatureArrayPort8Description_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort8Description = _SensorProbeThermostatTemperatureArrayPort8Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 27),
    _SensorProbeThermostatTemperatureArrayPort8Description_Type()
)
sensorProbeThermostatTemperatureArrayPort8Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort8Description.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort8Value_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort8Value_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort8Value = _SensorProbeThermostatTemperatureArrayPort8Value_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 28),
    _SensorProbeThermostatTemperatureArrayPort8Value_Type()
)
sensorProbeThermostatTemperatureArrayPort8Value.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort8Value.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort8Online_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort8Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeThermostatTemperatureArrayPort8Online_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort8Online_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort8Online = _SensorProbeThermostatTemperatureArrayPort8Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 29),
    _SensorProbeThermostatTemperatureArrayPort8Online_Type()
)
sensorProbeThermostatTemperatureArrayPort8Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort8Online.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort8GoOnline_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort8GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeThermostatTemperatureArrayPort8GoOnline_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort8GoOnline_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort8GoOnline = _SensorProbeThermostatTemperatureArrayPort8GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 30),
    _SensorProbeThermostatTemperatureArrayPort8GoOnline_Type()
)
sensorProbeThermostatTemperatureArrayPort8GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort8GoOnline.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort8Mode_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort8Mode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("time-bases", 1))
    )


_SensorProbeThermostatTemperatureArrayPort8Mode_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort8Mode_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort8Mode = _SensorProbeThermostatTemperatureArrayPort8Mode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 31),
    _SensorProbeThermostatTemperatureArrayPort8Mode_Type()
)
sensorProbeThermostatTemperatureArrayPort8Mode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort8Mode.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort8RelayControlPort_Type = Integer32
_SensorProbeThermostatTemperatureArrayPort8RelayControlPort_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort8RelayControlPort = _SensorProbeThermostatTemperatureArrayPort8RelayControlPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 32),
    _SensorProbeThermostatTemperatureArrayPort8RelayControlPort_Type()
)
sensorProbeThermostatTemperatureArrayPort8RelayControlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort8RelayControlPort.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort8NormalAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort8NormalAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort8NormalAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort8NormalAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort8NormalAction1 = _SensorProbeThermostatTemperatureArrayPort8NormalAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 33),
    _SensorProbeThermostatTemperatureArrayPort8NormalAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort8NormalAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort8NormalAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort8HighLimit1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort8HighLimit1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort8HighLimit1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort8HighLimit1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort8HighLimit1 = _SensorProbeThermostatTemperatureArrayPort8HighLimit1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 34),
    _SensorProbeThermostatTemperatureArrayPort8HighLimit1_Type()
)
sensorProbeThermostatTemperatureArrayPort8HighLimit1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort8HighLimit1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort8HighLimitAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort8HighLimitAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort8HighLimitAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort8HighLimitAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort8HighLimitAction1 = _SensorProbeThermostatTemperatureArrayPort8HighLimitAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 35),
    _SensorProbeThermostatTemperatureArrayPort8HighLimitAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort8HighLimitAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort8HighLimitAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort8LowLimit1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort8LowLimit1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort8LowLimit1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort8LowLimit1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort8LowLimit1 = _SensorProbeThermostatTemperatureArrayPort8LowLimit1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 36),
    _SensorProbeThermostatTemperatureArrayPort8LowLimit1_Type()
)
sensorProbeThermostatTemperatureArrayPort8LowLimit1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort8LowLimit1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort8LowLimitAction1_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort8LowLimitAction1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort8LowLimitAction1_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort8LowLimitAction1_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort8LowLimitAction1 = _SensorProbeThermostatTemperatureArrayPort8LowLimitAction1_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 37),
    _SensorProbeThermostatTemperatureArrayPort8LowLimitAction1_Type()
)
sensorProbeThermostatTemperatureArrayPort8LowLimitAction1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort8LowLimitAction1.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort8NormalAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort8NormalAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort8NormalAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort8NormalAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort8NormalAction2 = _SensorProbeThermostatTemperatureArrayPort8NormalAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 38),
    _SensorProbeThermostatTemperatureArrayPort8NormalAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort8NormalAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort8NormalAction2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort8HighLimit2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort8HighLimit2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort8HighLimit2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort8HighLimit2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort8HighLimit2 = _SensorProbeThermostatTemperatureArrayPort8HighLimit2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 39),
    _SensorProbeThermostatTemperatureArrayPort8HighLimit2_Type()
)
sensorProbeThermostatTemperatureArrayPort8HighLimit2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort8HighLimit2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort8HighLimitAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort8HighLimitAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort8HighLimitAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort8HighLimitAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort8HighLimitAction2 = _SensorProbeThermostatTemperatureArrayPort8HighLimitAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 40),
    _SensorProbeThermostatTemperatureArrayPort8HighLimitAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort8HighLimitAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort8HighLimitAction2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort8LowLimit2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort8LowLimit2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-40, 167),
    )


_SensorProbeThermostatTemperatureArrayPort8LowLimit2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort8LowLimit2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort8LowLimit2 = _SensorProbeThermostatTemperatureArrayPort8LowLimit2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 41),
    _SensorProbeThermostatTemperatureArrayPort8LowLimit2_Type()
)
sensorProbeThermostatTemperatureArrayPort8LowLimit2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort8LowLimit2.setStatus("mandatory")


class _SensorProbeThermostatTemperatureArrayPort8LowLimitAction2_Type(Integer32):
    """Custom type sensorProbeThermostatTemperatureArrayPort8LowLimitAction2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no-change", 2),
          ("turn-off", 1),
          ("turn-on", 0))
    )


_SensorProbeThermostatTemperatureArrayPort8LowLimitAction2_Type.__name__ = "Integer32"
_SensorProbeThermostatTemperatureArrayPort8LowLimitAction2_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort8LowLimitAction2 = _SensorProbeThermostatTemperatureArrayPort8LowLimitAction2_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 42),
    _SensorProbeThermostatTemperatureArrayPort8LowLimitAction2_Type()
)
sensorProbeThermostatTemperatureArrayPort8LowLimitAction2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort8LowLimitAction2.setStatus("mandatory")
_SensorProbeThermostatTemperatureArrayPort8EnableTime_Type = DisplayString
_SensorProbeThermostatTemperatureArrayPort8EnableTime_Object = MibTableColumn
sensorProbeThermostatTemperatureArrayPort8EnableTime = _SensorProbeThermostatTemperatureArrayPort8EnableTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 33, 8, 2, 1, 43),
    _SensorProbeThermostatTemperatureArrayPort8EnableTime_Type()
)
sensorProbeThermostatTemperatureArrayPort8EnableTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeThermostatTemperatureArrayPort8EnableTime.setStatus("mandatory")
_SensorProbeNoCameraSensor_ObjectIdentity = ObjectIdentity
sensorProbeNoCameraSensor = _SensorProbeNoCameraSensor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 34)
)
_SensorProbeNoCameraSensorNumber_Type = Integer32
_SensorProbeNoCameraSensorNumber_Object = MibScalar
sensorProbeNoCameraSensorNumber = _SensorProbeNoCameraSensorNumber_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 34, 1),
    _SensorProbeNoCameraSensorNumber_Type()
)
sensorProbeNoCameraSensorNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeNoCameraSensorNumber.setStatus("mandatory")
_SensorProbeNoCameraSensorTable_Object = MibTable
sensorProbeNoCameraSensorTable = _SensorProbeNoCameraSensorTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 34, 2)
)
if mibBuilder.loadTexts:
    sensorProbeNoCameraSensorTable.setStatus("mandatory")
_SensorProbeNoCameraSensorEntry_Object = MibTableRow
sensorProbeNoCameraSensorEntry = _SensorProbeNoCameraSensorEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 34, 2, 1)
)
sensorProbeNoCameraSensorEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeNoCameraSensorIndex"),
)
if mibBuilder.loadTexts:
    sensorProbeNoCameraSensorEntry.setStatus("mandatory")


class _SensorProbeNoCameraSensorIndex_Type(Integer32):
    """Custom type sensorProbeNoCameraSensorIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_SensorProbeNoCameraSensorIndex_Type.__name__ = "Integer32"
_SensorProbeNoCameraSensorIndex_Object = MibTableColumn
sensorProbeNoCameraSensorIndex = _SensorProbeNoCameraSensorIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 34, 2, 1, 1),
    _SensorProbeNoCameraSensorIndex_Type()
)
sensorProbeNoCameraSensorIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeNoCameraSensorIndex.setStatus("mandatory")
_SensorProbeNoCameraDescription_Type = DisplayString
_SensorProbeNoCameraDescription_Object = MibTableColumn
sensorProbeNoCameraDescription = _SensorProbeNoCameraDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 34, 2, 1, 2),
    _SensorProbeNoCameraDescription_Type()
)
sensorProbeNoCameraDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeNoCameraDescription.setStatus("mandatory")


class _SensorProbeNoCameraStatus_Type(Integer32):
    """Custom type sensorProbeNoCameraStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorProbeNoCameraStatus_Type.__name__ = "Integer32"
_SensorProbeNoCameraStatus_Object = MibTableColumn
sensorProbeNoCameraStatus = _SensorProbeNoCameraStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 34, 2, 1, 4),
    _SensorProbeNoCameraStatus_Type()
)
sensorProbeNoCameraStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeNoCameraStatus.setStatus("mandatory")


class _SensorProbeNoCameraOnline_Type(Integer32):
    """Custom type sensorProbeNoCameraOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeNoCameraOnline_Type.__name__ = "Integer32"
_SensorProbeNoCameraOnline_Object = MibTableColumn
sensorProbeNoCameraOnline = _SensorProbeNoCameraOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 34, 2, 1, 5),
    _SensorProbeNoCameraOnline_Type()
)
sensorProbeNoCameraOnline.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeNoCameraOnline.setStatus("mandatory")


class _SensorProbeNoCameraGoOnline_Type(Integer32):
    """Custom type sensorProbeNoCameraGoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeNoCameraGoOnline_Type.__name__ = "Integer32"
_SensorProbeNoCameraGoOnline_Object = MibTableColumn
sensorProbeNoCameraGoOnline = _SensorProbeNoCameraGoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 34, 2, 1, 6),
    _SensorProbeNoCameraGoOnline_Type()
)
sensorProbeNoCameraGoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeNoCameraGoOnline.setStatus("mandatory")


class _SensorProbeNoCameraContTimeHighCritical_Type(Integer32):
    """Custom type sensorProbeNoCameraContTimeHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeNoCameraContTimeHighCritical_Type.__name__ = "Integer32"
_SensorProbeNoCameraContTimeHighCritical_Object = MibTableColumn
sensorProbeNoCameraContTimeHighCritical = _SensorProbeNoCameraContTimeHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 34, 2, 1, 7),
    _SensorProbeNoCameraContTimeHighCritical_Type()
)
sensorProbeNoCameraContTimeHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeNoCameraContTimeHighCritical.setStatus("mandatory")


class _SensorProbeNoCameraContTimeNormal_Type(Integer32):
    """Custom type sensorProbeNoCameraContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeNoCameraContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeNoCameraContTimeNormal_Object = MibTableColumn
sensorProbeNoCameraContTimeNormal = _SensorProbeNoCameraContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 34, 2, 1, 8),
    _SensorProbeNoCameraContTimeNormal_Type()
)
sensorProbeNoCameraContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeNoCameraContTimeNormal.setStatus("mandatory")


class _SensorProbeNoCameraCalendar_Type(Integer32):
    """Custom type sensorProbeNoCameraCalendar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeNoCameraCalendar_Type.__name__ = "Integer32"
_SensorProbeNoCameraCalendar_Object = MibTableColumn
sensorProbeNoCameraCalendar = _SensorProbeNoCameraCalendar_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 34, 2, 1, 9),
    _SensorProbeNoCameraCalendar_Type()
)
sensorProbeNoCameraCalendar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeNoCameraCalendar.setStatus("mandatory")
_SensorProbeSoftMotionSensor_ObjectIdentity = ObjectIdentity
sensorProbeSoftMotionSensor = _SensorProbeSoftMotionSensor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 35)
)
_SensorProbeSoftMotionSensorNumber_Type = Integer32
_SensorProbeSoftMotionSensorNumber_Object = MibScalar
sensorProbeSoftMotionSensorNumber = _SensorProbeSoftMotionSensorNumber_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 35, 1),
    _SensorProbeSoftMotionSensorNumber_Type()
)
sensorProbeSoftMotionSensorNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeSoftMotionSensorNumber.setStatus("mandatory")
_SensorProbeSoftMotionSensorTable_Object = MibTable
sensorProbeSoftMotionSensorTable = _SensorProbeSoftMotionSensorTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 35, 2)
)
if mibBuilder.loadTexts:
    sensorProbeSoftMotionSensorTable.setStatus("mandatory")
_SensorProbeSoftMotionSensorEntry_Object = MibTableRow
sensorProbeSoftMotionSensorEntry = _SensorProbeSoftMotionSensorEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 35, 2, 1)
)
sensorProbeSoftMotionSensorEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeSoftMotionSensorIndex"),
)
if mibBuilder.loadTexts:
    sensorProbeSoftMotionSensorEntry.setStatus("mandatory")


class _SensorProbeSoftMotionSensorIndex_Type(Integer32):
    """Custom type sensorProbeSoftMotionSensorIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_SensorProbeSoftMotionSensorIndex_Type.__name__ = "Integer32"
_SensorProbeSoftMotionSensorIndex_Object = MibTableColumn
sensorProbeSoftMotionSensorIndex = _SensorProbeSoftMotionSensorIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 35, 2, 1, 1),
    _SensorProbeSoftMotionSensorIndex_Type()
)
sensorProbeSoftMotionSensorIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeSoftMotionSensorIndex.setStatus("mandatory")
_SensorProbeSoftMotionDescription_Type = DisplayString
_SensorProbeSoftMotionDescription_Object = MibTableColumn
sensorProbeSoftMotionDescription = _SensorProbeSoftMotionDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 35, 2, 1, 2),
    _SensorProbeSoftMotionDescription_Type()
)
sensorProbeSoftMotionDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoftMotionDescription.setStatus("mandatory")


class _SensorProbeSoftMotionStatus_Type(Integer32):
    """Custom type sensorProbeSoftMotionStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorProbeSoftMotionStatus_Type.__name__ = "Integer32"
_SensorProbeSoftMotionStatus_Object = MibTableColumn
sensorProbeSoftMotionStatus = _SensorProbeSoftMotionStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 35, 2, 1, 4),
    _SensorProbeSoftMotionStatus_Type()
)
sensorProbeSoftMotionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeSoftMotionStatus.setStatus("mandatory")


class _SensorProbeSoftMotionOnline_Type(Integer32):
    """Custom type sensorProbeSoftMotionOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeSoftMotionOnline_Type.__name__ = "Integer32"
_SensorProbeSoftMotionOnline_Object = MibTableColumn
sensorProbeSoftMotionOnline = _SensorProbeSoftMotionOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 35, 2, 1, 5),
    _SensorProbeSoftMotionOnline_Type()
)
sensorProbeSoftMotionOnline.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeSoftMotionOnline.setStatus("mandatory")


class _SensorProbeSoftMotionGoOnline_Type(Integer32):
    """Custom type sensorProbeSoftMotionGoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeSoftMotionGoOnline_Type.__name__ = "Integer32"
_SensorProbeSoftMotionGoOnline_Object = MibTableColumn
sensorProbeSoftMotionGoOnline = _SensorProbeSoftMotionGoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 35, 2, 1, 6),
    _SensorProbeSoftMotionGoOnline_Type()
)
sensorProbeSoftMotionGoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoftMotionGoOnline.setStatus("mandatory")


class _SensorProbeSoftMotionPercentSensitivity_Type(Integer32):
    """Custom type sensorProbeSoftMotionPercentSensitivity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_SensorProbeSoftMotionPercentSensitivity_Type.__name__ = "Integer32"
_SensorProbeSoftMotionPercentSensitivity_Object = MibTableColumn
sensorProbeSoftMotionPercentSensitivity = _SensorProbeSoftMotionPercentSensitivity_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 35, 2, 1, 7),
    _SensorProbeSoftMotionPercentSensitivity_Type()
)
sensorProbeSoftMotionPercentSensitivity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoftMotionPercentSensitivity.setStatus("mandatory")
_SensorProbeSoftMotionURL_Type = DisplayString
_SensorProbeSoftMotionURL_Object = MibTableColumn
sensorProbeSoftMotionURL = _SensorProbeSoftMotionURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 35, 2, 1, 8),
    _SensorProbeSoftMotionURL_Type()
)
sensorProbeSoftMotionURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoftMotionURL.setStatus("mandatory")


class _SensorProbeSoftMotionOpenURL_Type(Integer32):
    """Custom type sensorProbeSoftMotionOpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeSoftMotionOpenURL_Type.__name__ = "Integer32"
_SensorProbeSoftMotionOpenURL_Object = MibTableColumn
sensorProbeSoftMotionOpenURL = _SensorProbeSoftMotionOpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 35, 2, 1, 9),
    _SensorProbeSoftMotionOpenURL_Type()
)
sensorProbeSoftMotionOpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoftMotionOpenURL.setStatus("mandatory")


class _SensorProbeSoftMotionContTimeHighCritical_Type(Integer32):
    """Custom type sensorProbeSoftMotionContTimeHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeSoftMotionContTimeHighCritical_Type.__name__ = "Integer32"
_SensorProbeSoftMotionContTimeHighCritical_Object = MibTableColumn
sensorProbeSoftMotionContTimeHighCritical = _SensorProbeSoftMotionContTimeHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 35, 2, 1, 10),
    _SensorProbeSoftMotionContTimeHighCritical_Type()
)
sensorProbeSoftMotionContTimeHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoftMotionContTimeHighCritical.setStatus("mandatory")


class _SensorProbeSoftMotionContTimeNormal_Type(Integer32):
    """Custom type sensorProbeSoftMotionContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeSoftMotionContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeSoftMotionContTimeNormal_Object = MibTableColumn
sensorProbeSoftMotionContTimeNormal = _SensorProbeSoftMotionContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 35, 2, 1, 11),
    _SensorProbeSoftMotionContTimeNormal_Type()
)
sensorProbeSoftMotionContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoftMotionContTimeNormal.setStatus("mandatory")


class _SensorProbeSoftMotionCalendar_Type(Integer32):
    """Custom type sensorProbeSoftMotionCalendar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeSoftMotionCalendar_Type.__name__ = "Integer32"
_SensorProbeSoftMotionCalendar_Object = MibTableColumn
sensorProbeSoftMotionCalendar = _SensorProbeSoftMotionCalendar_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 35, 2, 1, 12),
    _SensorProbeSoftMotionCalendar_Type()
)
sensorProbeSoftMotionCalendar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoftMotionCalendar.setStatus("mandatory")


class _SensorProbeSoftMotionMask_Type(Integer32):
    """Custom type sensorProbeSoftMotionMask based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 33554431),
    )


_SensorProbeSoftMotionMask_Type.__name__ = "Integer32"
_SensorProbeSoftMotionMask_Object = MibTableColumn
sensorProbeSoftMotionMask = _SensorProbeSoftMotionMask_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 35, 2, 1, 13),
    _SensorProbeSoftMotionMask_Type()
)
sensorProbeSoftMotionMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoftMotionMask.setStatus("mandatory")
_SensorProbeSoundDetectorSensor_ObjectIdentity = ObjectIdentity
sensorProbeSoundDetectorSensor = _SensorProbeSoundDetectorSensor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36)
)
_SensorProbeSoundDetectorSensorNumber_Type = Integer32
_SensorProbeSoundDetectorSensorNumber_Object = MibScalar
sensorProbeSoundDetectorSensorNumber = _SensorProbeSoundDetectorSensorNumber_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 1),
    _SensorProbeSoundDetectorSensorNumber_Type()
)
sensorProbeSoundDetectorSensorNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorSensorNumber.setStatus("mandatory")
_SensorProbeSoundDetectorSensorTable_Object = MibTable
sensorProbeSoundDetectorSensorTable = _SensorProbeSoundDetectorSensorTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2)
)
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorSensorTable.setStatus("mandatory")
_SensorProbeSoundDetectorSensorEntry_Object = MibTableRow
sensorProbeSoundDetectorSensorEntry = _SensorProbeSoundDetectorSensorEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1)
)
sensorProbeSoundDetectorSensorEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeSoundDetectorIndex"),
)
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorSensorEntry.setStatus("mandatory")


class _SensorProbeSoundDetectorIndex_Type(Integer32):
    """Custom type sensorProbeSoundDetectorIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
    )


_SensorProbeSoundDetectorIndex_Type.__name__ = "Integer32"
_SensorProbeSoundDetectorIndex_Object = MibTableColumn
sensorProbeSoundDetectorIndex = _SensorProbeSoundDetectorIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 1),
    _SensorProbeSoundDetectorIndex_Type()
)
sensorProbeSoundDetectorIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorIndex.setStatus("mandatory")
_SensorProbeSoundDetectorDescription_Type = DisplayString
_SensorProbeSoundDetectorDescription_Object = MibTableColumn
sensorProbeSoundDetectorDescription = _SensorProbeSoundDetectorDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 2),
    _SensorProbeSoundDetectorDescription_Type()
)
sensorProbeSoundDetectorDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorDescription.setStatus("mandatory")
_SensorProbeSoundDetectorValue_Type = Integer32
_SensorProbeSoundDetectorValue_Object = MibTableColumn
sensorProbeSoundDetectorValue = _SensorProbeSoundDetectorValue_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 3),
    _SensorProbeSoundDetectorValue_Type()
)
sensorProbeSoundDetectorValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorValue.setStatus("mandatory")


class _SensorProbeSoundDetectorStatus_Type(Integer32):
    """Custom type sensorProbeSoundDetectorStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorProbeSoundDetectorStatus_Type.__name__ = "Integer32"
_SensorProbeSoundDetectorStatus_Object = MibTableColumn
sensorProbeSoundDetectorStatus = _SensorProbeSoundDetectorStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 4),
    _SensorProbeSoundDetectorStatus_Type()
)
sensorProbeSoundDetectorStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorStatus.setStatus("mandatory")


class _SensorProbeSoundDetectorOnline_Type(Integer32):
    """Custom type sensorProbeSoundDetectorOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeSoundDetectorOnline_Type.__name__ = "Integer32"
_SensorProbeSoundDetectorOnline_Object = MibTableColumn
sensorProbeSoundDetectorOnline = _SensorProbeSoundDetectorOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 5),
    _SensorProbeSoundDetectorOnline_Type()
)
sensorProbeSoundDetectorOnline.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorOnline.setStatus("mandatory")


class _SensorProbeSoundDetectorGoOnline_Type(Integer32):
    """Custom type sensorProbeSoundDetectorGoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeSoundDetectorGoOnline_Type.__name__ = "Integer32"
_SensorProbeSoundDetectorGoOnline_Object = MibTableColumn
sensorProbeSoundDetectorGoOnline = _SensorProbeSoundDetectorGoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 6),
    _SensorProbeSoundDetectorGoOnline_Type()
)
sensorProbeSoundDetectorGoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorGoOnline.setStatus("mandatory")
_SensorProbeSoundDetectorHighWarning_Type = Integer32
_SensorProbeSoundDetectorHighWarning_Object = MibTableColumn
sensorProbeSoundDetectorHighWarning = _SensorProbeSoundDetectorHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 7),
    _SensorProbeSoundDetectorHighWarning_Type()
)
sensorProbeSoundDetectorHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorHighWarning.setStatus("mandatory")
_SensorProbeSoundDetectorHighCritical_Type = Integer32
_SensorProbeSoundDetectorHighCritical_Object = MibTableColumn
sensorProbeSoundDetectorHighCritical = _SensorProbeSoundDetectorHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 8),
    _SensorProbeSoundDetectorHighCritical_Type()
)
sensorProbeSoundDetectorHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorHighCritical.setStatus("mandatory")
_SensorProbeSoundDetectorLowWarning_Type = Integer32
_SensorProbeSoundDetectorLowWarning_Object = MibTableColumn
sensorProbeSoundDetectorLowWarning = _SensorProbeSoundDetectorLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 9),
    _SensorProbeSoundDetectorLowWarning_Type()
)
sensorProbeSoundDetectorLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorLowWarning.setStatus("mandatory")
_SensorProbeSoundDetectorLowCritical_Type = Integer32
_SensorProbeSoundDetectorLowCritical_Object = MibTableColumn
sensorProbeSoundDetectorLowCritical = _SensorProbeSoundDetectorLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 10),
    _SensorProbeSoundDetectorLowCritical_Type()
)
sensorProbeSoundDetectorLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorLowCritical.setStatus("mandatory")
_SensorProbeSoundDetectorRearm_Type = Integer32
_SensorProbeSoundDetectorRearm_Object = MibTableColumn
sensorProbeSoundDetectorRearm = _SensorProbeSoundDetectorRearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 11),
    _SensorProbeSoundDetectorRearm_Type()
)
sensorProbeSoundDetectorRearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorRearm.setStatus("mandatory")


class _SensorProbeSoundDetectorRecordingSource_Type(Integer32):
    """Custom type sensorProbeSoundDetectorRecordingSource based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("internal-mic", 0),
          ("line-in", 1))
    )


_SensorProbeSoundDetectorRecordingSource_Type.__name__ = "Integer32"
_SensorProbeSoundDetectorRecordingSource_Object = MibTableColumn
sensorProbeSoundDetectorRecordingSource = _SensorProbeSoundDetectorRecordingSource_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 12),
    _SensorProbeSoundDetectorRecordingSource_Type()
)
sensorProbeSoundDetectorRecordingSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorRecordingSource.setStatus("mandatory")


class _SensorProbeSoundDetectorMicBoost_Type(Integer32):
    """Custom type sensorProbeSoundDetectorMicBoost based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_SensorProbeSoundDetectorMicBoost_Type.__name__ = "Integer32"
_SensorProbeSoundDetectorMicBoost_Object = MibTableColumn
sensorProbeSoundDetectorMicBoost = _SensorProbeSoundDetectorMicBoost_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 13),
    _SensorProbeSoundDetectorMicBoost_Type()
)
sensorProbeSoundDetectorMicBoost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorMicBoost.setStatus("mandatory")


class _SensorProbeSoundDetectorMicSensitivity_Type(Integer32):
    """Custom type sensorProbeSoundDetectorMicSensitivity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              20,
              40,
              60,
              80,
              100)
        )
    )
    namedValues = NamedValues(
        *(("i0", 0),
          ("i100", 100),
          ("i20", 20),
          ("i40", 40),
          ("i60", 60),
          ("i80", 80))
    )


_SensorProbeSoundDetectorMicSensitivity_Type.__name__ = "Integer32"
_SensorProbeSoundDetectorMicSensitivity_Object = MibTableColumn
sensorProbeSoundDetectorMicSensitivity = _SensorProbeSoundDetectorMicSensitivity_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 14),
    _SensorProbeSoundDetectorMicSensitivity_Type()
)
sensorProbeSoundDetectorMicSensitivity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorMicSensitivity.setStatus("mandatory")
_SensorProbeSoundDetectorPulseLength_Type = Integer32
_SensorProbeSoundDetectorPulseLength_Object = MibTableColumn
sensorProbeSoundDetectorPulseLength = _SensorProbeSoundDetectorPulseLength_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 15),
    _SensorProbeSoundDetectorPulseLength_Type()
)
sensorProbeSoundDetectorPulseLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorPulseLength.setStatus("mandatory")
_SensorProbeSoundDetectorURL_Type = DisplayString
_SensorProbeSoundDetectorURL_Object = MibTableColumn
sensorProbeSoundDetectorURL = _SensorProbeSoundDetectorURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 16),
    _SensorProbeSoundDetectorURL_Type()
)
sensorProbeSoundDetectorURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorURL.setStatus("mandatory")


class _SensorProbeSoundDetectorOpenURL_Type(Integer32):
    """Custom type sensorProbeSoundDetectorOpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeSoundDetectorOpenURL_Type.__name__ = "Integer32"
_SensorProbeSoundDetectorOpenURL_Object = MibTableColumn
sensorProbeSoundDetectorOpenURL = _SensorProbeSoundDetectorOpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 17),
    _SensorProbeSoundDetectorOpenURL_Type()
)
sensorProbeSoundDetectorOpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorOpenURL.setStatus("mandatory")


class _SensorProbeSoundDetectorDatacollectType_Type(Integer32):
    """Custom type sensorProbeSoundDetectorDatacollectType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("average", 1),
          ("highest", 2),
          ("lowest", 3))
    )


_SensorProbeSoundDetectorDatacollectType_Type.__name__ = "Integer32"
_SensorProbeSoundDetectorDatacollectType_Object = MibTableColumn
sensorProbeSoundDetectorDatacollectType = _SensorProbeSoundDetectorDatacollectType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 18),
    _SensorProbeSoundDetectorDatacollectType_Type()
)
sensorProbeSoundDetectorDatacollectType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorDatacollectType.setStatus("mandatory")


class _SensorProbeSoundDetectorContTimeHighCritical_Type(Integer32):
    """Custom type sensorProbeSoundDetectorContTimeHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeSoundDetectorContTimeHighCritical_Type.__name__ = "Integer32"
_SensorProbeSoundDetectorContTimeHighCritical_Object = MibTableColumn
sensorProbeSoundDetectorContTimeHighCritical = _SensorProbeSoundDetectorContTimeHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 19),
    _SensorProbeSoundDetectorContTimeHighCritical_Type()
)
sensorProbeSoundDetectorContTimeHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorContTimeHighCritical.setStatus("mandatory")


class _SensorProbeSoundDetectorContTimeHighWarning_Type(Integer32):
    """Custom type sensorProbeSoundDetectorContTimeHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeSoundDetectorContTimeHighWarning_Type.__name__ = "Integer32"
_SensorProbeSoundDetectorContTimeHighWarning_Object = MibTableColumn
sensorProbeSoundDetectorContTimeHighWarning = _SensorProbeSoundDetectorContTimeHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 20),
    _SensorProbeSoundDetectorContTimeHighWarning_Type()
)
sensorProbeSoundDetectorContTimeHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorContTimeHighWarning.setStatus("mandatory")


class _SensorProbeSoundDetectorContTimeNormal_Type(Integer32):
    """Custom type sensorProbeSoundDetectorContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeSoundDetectorContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeSoundDetectorContTimeNormal_Object = MibTableColumn
sensorProbeSoundDetectorContTimeNormal = _SensorProbeSoundDetectorContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 21),
    _SensorProbeSoundDetectorContTimeNormal_Type()
)
sensorProbeSoundDetectorContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorContTimeNormal.setStatus("mandatory")


class _SensorProbeSoundDetectorContTimeLowWarning_Type(Integer32):
    """Custom type sensorProbeSoundDetectorContTimeLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeSoundDetectorContTimeLowWarning_Type.__name__ = "Integer32"
_SensorProbeSoundDetectorContTimeLowWarning_Object = MibTableColumn
sensorProbeSoundDetectorContTimeLowWarning = _SensorProbeSoundDetectorContTimeLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 22),
    _SensorProbeSoundDetectorContTimeLowWarning_Type()
)
sensorProbeSoundDetectorContTimeLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorContTimeLowWarning.setStatus("mandatory")


class _SensorProbeSoundDetectorContTimeLowCritical_Type(Integer32):
    """Custom type sensorProbeSoundDetectorContTimeLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeSoundDetectorContTimeLowCritical_Type.__name__ = "Integer32"
_SensorProbeSoundDetectorContTimeLowCritical_Object = MibTableColumn
sensorProbeSoundDetectorContTimeLowCritical = _SensorProbeSoundDetectorContTimeLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 23),
    _SensorProbeSoundDetectorContTimeLowCritical_Type()
)
sensorProbeSoundDetectorContTimeLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorContTimeLowCritical.setStatus("mandatory")


class _SensorProbeSoundDetectorContTimeSensorError_Type(Integer32):
    """Custom type sensorProbeSoundDetectorContTimeSensorError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeSoundDetectorContTimeSensorError_Type.__name__ = "Integer32"
_SensorProbeSoundDetectorContTimeSensorError_Object = MibTableColumn
sensorProbeSoundDetectorContTimeSensorError = _SensorProbeSoundDetectorContTimeSensorError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 24),
    _SensorProbeSoundDetectorContTimeSensorError_Type()
)
sensorProbeSoundDetectorContTimeSensorError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorContTimeSensorError.setStatus("mandatory")


class _SensorProbeSoundDetectorCalendar_Type(Integer32):
    """Custom type sensorProbeSoundDetectorCalendar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeSoundDetectorCalendar_Type.__name__ = "Integer32"
_SensorProbeSoundDetectorCalendar_Object = MibTableColumn
sensorProbeSoundDetectorCalendar = _SensorProbeSoundDetectorCalendar_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 36, 2, 1, 25),
    _SensorProbeSoundDetectorCalendar_Type()
)
sensorProbeSoundDetectorCalendar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSoundDetectorCalendar.setStatus("mandatory")
_SensorProbeDrycontactArraySensor_ObjectIdentity = ObjectIdentity
sensorProbeDrycontactArraySensor = _SensorProbeDrycontactArraySensor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37)
)
_SensorProbeDrycontactArrayPort1_ObjectIdentity = ObjectIdentity
sensorProbeDrycontactArrayPort1 = _SensorProbeDrycontactArrayPort1_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 1)
)
_SensorProbeDrycontactArrayPort1Number_Type = Integer32
_SensorProbeDrycontactArrayPort1Number_Object = MibScalar
sensorProbeDrycontactArrayPort1Number = _SensorProbeDrycontactArrayPort1Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 1, 1),
    _SensorProbeDrycontactArrayPort1Number_Type()
)
sensorProbeDrycontactArrayPort1Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort1Number.setStatus("mandatory")
_SensorProbeDrycontactArrayPort1Table_Object = MibTable
sensorProbeDrycontactArrayPort1Table = _SensorProbeDrycontactArrayPort1Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 1, 2)
)
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort1Table.setStatus("mandatory")
_SensorProbeDrycontactArrayPort1Entry_Object = MibTableRow
sensorProbeDrycontactArrayPort1Entry = _SensorProbeDrycontactArrayPort1Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 1, 2, 1)
)
sensorProbeDrycontactArrayPort1Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeDrycontactArrayPort1Index"),
)
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort1Entry.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort1Index_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort1Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeDrycontactArrayPort1Index_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort1Index_Object = MibTableColumn
sensorProbeDrycontactArrayPort1Index = _SensorProbeDrycontactArrayPort1Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 1, 2, 1, 1),
    _SensorProbeDrycontactArrayPort1Index_Type()
)
sensorProbeDrycontactArrayPort1Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort1Index.setStatus("mandatory")
_SensorProbeDrycontactArrayPort1Description_Type = DisplayString
_SensorProbeDrycontactArrayPort1Description_Object = MibTableColumn
sensorProbeDrycontactArrayPort1Description = _SensorProbeDrycontactArrayPort1Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 1, 2, 1, 2),
    _SensorProbeDrycontactArrayPort1Description_Type()
)
sensorProbeDrycontactArrayPort1Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort1Description.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort1Status_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort1Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorProbeDrycontactArrayPort1Status_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort1Status_Object = MibTableColumn
sensorProbeDrycontactArrayPort1Status = _SensorProbeDrycontactArrayPort1Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 1, 2, 1, 4),
    _SensorProbeDrycontactArrayPort1Status_Type()
)
sensorProbeDrycontactArrayPort1Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort1Status.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort1Online_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort1Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeDrycontactArrayPort1Online_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort1Online_Object = MibTableColumn
sensorProbeDrycontactArrayPort1Online = _SensorProbeDrycontactArrayPort1Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 1, 2, 1, 5),
    _SensorProbeDrycontactArrayPort1Online_Type()
)
sensorProbeDrycontactArrayPort1Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort1Online.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort1GoOnline_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort1GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeDrycontactArrayPort1GoOnline_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort1GoOnline_Object = MibTableColumn
sensorProbeDrycontactArrayPort1GoOnline = _SensorProbeDrycontactArrayPort1GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 1, 2, 1, 6),
    _SensorProbeDrycontactArrayPort1GoOnline_Type()
)
sensorProbeDrycontactArrayPort1GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort1GoOnline.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort1NormalState_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort1NormalState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("closed", 0),
          ("open", 1))
    )


_SensorProbeDrycontactArrayPort1NormalState_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort1NormalState_Object = MibTableColumn
sensorProbeDrycontactArrayPort1NormalState = _SensorProbeDrycontactArrayPort1NormalState_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 1, 2, 1, 7),
    _SensorProbeDrycontactArrayPort1NormalState_Type()
)
sensorProbeDrycontactArrayPort1NormalState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort1NormalState.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort1Direction_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort1Direction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("input", 0),
          ("output", 1))
    )


_SensorProbeDrycontactArrayPort1Direction_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort1Direction_Object = MibTableColumn
sensorProbeDrycontactArrayPort1Direction = _SensorProbeDrycontactArrayPort1Direction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 1, 2, 1, 8),
    _SensorProbeDrycontactArrayPort1Direction_Type()
)
sensorProbeDrycontactArrayPort1Direction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort1Direction.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort1ContTimeCritical_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort1ContTimeCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeDrycontactArrayPort1ContTimeCritical_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort1ContTimeCritical_Object = MibTableColumn
sensorProbeDrycontactArrayPort1ContTimeCritical = _SensorProbeDrycontactArrayPort1ContTimeCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 1, 2, 1, 9),
    _SensorProbeDrycontactArrayPort1ContTimeCritical_Type()
)
sensorProbeDrycontactArrayPort1ContTimeCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort1ContTimeCritical.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort1ContTimeNormal_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort1ContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeDrycontactArrayPort1ContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort1ContTimeNormal_Object = MibTableColumn
sensorProbeDrycontactArrayPort1ContTimeNormal = _SensorProbeDrycontactArrayPort1ContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 1, 2, 1, 10),
    _SensorProbeDrycontactArrayPort1ContTimeNormal_Type()
)
sensorProbeDrycontactArrayPort1ContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort1ContTimeNormal.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort1ManualOutputCycleTime_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort1ManualOutputCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeDrycontactArrayPort1ManualOutputCycleTime_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort1ManualOutputCycleTime_Object = MibTableColumn
sensorProbeDrycontactArrayPort1ManualOutputCycleTime = _SensorProbeDrycontactArrayPort1ManualOutputCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 1, 2, 1, 24),
    _SensorProbeDrycontactArrayPort1ManualOutputCycleTime_Type()
)
sensorProbeDrycontactArrayPort1ManualOutputCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort1ManualOutputCycleTime.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort1ManualOutputAction_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort1ManualOutputAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("allow-sensor-control", 1),
          ("cycle-Off-On-Off", 7),
          ("cycle-On-Off-On", 8),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeDrycontactArrayPort1ManualOutputAction_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort1ManualOutputAction_Object = MibTableColumn
sensorProbeDrycontactArrayPort1ManualOutputAction = _SensorProbeDrycontactArrayPort1ManualOutputAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 1, 2, 1, 25),
    _SensorProbeDrycontactArrayPort1ManualOutputAction_Type()
)
sensorProbeDrycontactArrayPort1ManualOutputAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort1ManualOutputAction.setStatus("mandatory")
_SensorProbeDrycontactArrayPort1OutputDescOn_Type = DisplayString
_SensorProbeDrycontactArrayPort1OutputDescOn_Object = MibTableColumn
sensorProbeDrycontactArrayPort1OutputDescOn = _SensorProbeDrycontactArrayPort1OutputDescOn_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 1, 2, 1, 26),
    _SensorProbeDrycontactArrayPort1OutputDescOn_Type()
)
sensorProbeDrycontactArrayPort1OutputDescOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort1OutputDescOn.setStatus("mandatory")
_SensorProbeDrycontactArrayPort1OutputDescOff_Type = DisplayString
_SensorProbeDrycontactArrayPort1OutputDescOff_Object = MibTableColumn
sensorProbeDrycontactArrayPort1OutputDescOff = _SensorProbeDrycontactArrayPort1OutputDescOff_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 1, 2, 1, 27),
    _SensorProbeDrycontactArrayPort1OutputDescOff_Type()
)
sensorProbeDrycontactArrayPort1OutputDescOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort1OutputDescOff.setStatus("mandatory")
_SensorProbeDrycontactArrayPort1URL_Type = DisplayString
_SensorProbeDrycontactArrayPort1URL_Object = MibTableColumn
sensorProbeDrycontactArrayPort1URL = _SensorProbeDrycontactArrayPort1URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 1, 2, 1, 28),
    _SensorProbeDrycontactArrayPort1URL_Type()
)
sensorProbeDrycontactArrayPort1URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort1URL.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort1OpenURL_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort1OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeDrycontactArrayPort1OpenURL_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort1OpenURL_Object = MibTableColumn
sensorProbeDrycontactArrayPort1OpenURL = _SensorProbeDrycontactArrayPort1OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 1, 2, 1, 29),
    _SensorProbeDrycontactArrayPort1OpenURL_Type()
)
sensorProbeDrycontactArrayPort1OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort1OpenURL.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort1ControlMode_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort1ControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("manual-control", 0),
          ("notification-control", 1),
          ("thermostat-control", 3),
          ("time-control", 2))
    )


_SensorProbeDrycontactArrayPort1ControlMode_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort1ControlMode_Object = MibTableColumn
sensorProbeDrycontactArrayPort1ControlMode = _SensorProbeDrycontactArrayPort1ControlMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 1, 2, 1, 30),
    _SensorProbeDrycontactArrayPort1ControlMode_Type()
)
sensorProbeDrycontactArrayPort1ControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort1ControlMode.setStatus("mandatory")
_SensorProbeDrycontactArrayPort2_ObjectIdentity = ObjectIdentity
sensorProbeDrycontactArrayPort2 = _SensorProbeDrycontactArrayPort2_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 2)
)
_SensorProbeDrycontactArrayPort2Number_Type = Integer32
_SensorProbeDrycontactArrayPort2Number_Object = MibScalar
sensorProbeDrycontactArrayPort2Number = _SensorProbeDrycontactArrayPort2Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 2, 1),
    _SensorProbeDrycontactArrayPort2Number_Type()
)
sensorProbeDrycontactArrayPort2Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort2Number.setStatus("mandatory")
_SensorProbeDrycontactArrayPort2Table_Object = MibTable
sensorProbeDrycontactArrayPort2Table = _SensorProbeDrycontactArrayPort2Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 2, 2)
)
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort2Table.setStatus("mandatory")
_SensorProbeDrycontactArrayPort2Entry_Object = MibTableRow
sensorProbeDrycontactArrayPort2Entry = _SensorProbeDrycontactArrayPort2Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 2, 2, 1)
)
sensorProbeDrycontactArrayPort2Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeDrycontactArrayPort2Index"),
)
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort2Entry.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort2Index_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort2Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeDrycontactArrayPort2Index_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort2Index_Object = MibTableColumn
sensorProbeDrycontactArrayPort2Index = _SensorProbeDrycontactArrayPort2Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 2, 2, 1, 1),
    _SensorProbeDrycontactArrayPort2Index_Type()
)
sensorProbeDrycontactArrayPort2Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort2Index.setStatus("mandatory")
_SensorProbeDrycontactArrayPort2Description_Type = DisplayString
_SensorProbeDrycontactArrayPort2Description_Object = MibTableColumn
sensorProbeDrycontactArrayPort2Description = _SensorProbeDrycontactArrayPort2Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 2, 2, 1, 2),
    _SensorProbeDrycontactArrayPort2Description_Type()
)
sensorProbeDrycontactArrayPort2Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort2Description.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort2Status_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort2Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorProbeDrycontactArrayPort2Status_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort2Status_Object = MibTableColumn
sensorProbeDrycontactArrayPort2Status = _SensorProbeDrycontactArrayPort2Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 2, 2, 1, 4),
    _SensorProbeDrycontactArrayPort2Status_Type()
)
sensorProbeDrycontactArrayPort2Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort2Status.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort2Online_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort2Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeDrycontactArrayPort2Online_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort2Online_Object = MibTableColumn
sensorProbeDrycontactArrayPort2Online = _SensorProbeDrycontactArrayPort2Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 2, 2, 1, 5),
    _SensorProbeDrycontactArrayPort2Online_Type()
)
sensorProbeDrycontactArrayPort2Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort2Online.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort2GoOnline_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort2GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeDrycontactArrayPort2GoOnline_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort2GoOnline_Object = MibTableColumn
sensorProbeDrycontactArrayPort2GoOnline = _SensorProbeDrycontactArrayPort2GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 2, 2, 1, 6),
    _SensorProbeDrycontactArrayPort2GoOnline_Type()
)
sensorProbeDrycontactArrayPort2GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort2GoOnline.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort2NormalState_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort2NormalState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("closed", 0),
          ("open", 1))
    )


_SensorProbeDrycontactArrayPort2NormalState_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort2NormalState_Object = MibTableColumn
sensorProbeDrycontactArrayPort2NormalState = _SensorProbeDrycontactArrayPort2NormalState_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 2, 2, 1, 7),
    _SensorProbeDrycontactArrayPort2NormalState_Type()
)
sensorProbeDrycontactArrayPort2NormalState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort2NormalState.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort2Direction_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort2Direction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("input", 0),
          ("output", 1))
    )


_SensorProbeDrycontactArrayPort2Direction_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort2Direction_Object = MibTableColumn
sensorProbeDrycontactArrayPort2Direction = _SensorProbeDrycontactArrayPort2Direction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 2, 2, 1, 8),
    _SensorProbeDrycontactArrayPort2Direction_Type()
)
sensorProbeDrycontactArrayPort2Direction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort2Direction.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort2ContTimeCritical_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort2ContTimeCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeDrycontactArrayPort2ContTimeCritical_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort2ContTimeCritical_Object = MibTableColumn
sensorProbeDrycontactArrayPort2ContTimeCritical = _SensorProbeDrycontactArrayPort2ContTimeCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 2, 2, 1, 9),
    _SensorProbeDrycontactArrayPort2ContTimeCritical_Type()
)
sensorProbeDrycontactArrayPort2ContTimeCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort2ContTimeCritical.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort2ContTimeNormal_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort2ContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeDrycontactArrayPort2ContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort2ContTimeNormal_Object = MibTableColumn
sensorProbeDrycontactArrayPort2ContTimeNormal = _SensorProbeDrycontactArrayPort2ContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 2, 2, 1, 10),
    _SensorProbeDrycontactArrayPort2ContTimeNormal_Type()
)
sensorProbeDrycontactArrayPort2ContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort2ContTimeNormal.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort2ManualOutputCycleTime_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort2ManualOutputCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeDrycontactArrayPort2ManualOutputCycleTime_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort2ManualOutputCycleTime_Object = MibTableColumn
sensorProbeDrycontactArrayPort2ManualOutputCycleTime = _SensorProbeDrycontactArrayPort2ManualOutputCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 2, 2, 1, 24),
    _SensorProbeDrycontactArrayPort2ManualOutputCycleTime_Type()
)
sensorProbeDrycontactArrayPort2ManualOutputCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort2ManualOutputCycleTime.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort2ManualOutputAction_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort2ManualOutputAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("allow-sensor-control", 1),
          ("cycle-Off-On-Off", 7),
          ("cycle-On-Off-On", 8),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeDrycontactArrayPort2ManualOutputAction_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort2ManualOutputAction_Object = MibTableColumn
sensorProbeDrycontactArrayPort2ManualOutputAction = _SensorProbeDrycontactArrayPort2ManualOutputAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 2, 2, 1, 25),
    _SensorProbeDrycontactArrayPort2ManualOutputAction_Type()
)
sensorProbeDrycontactArrayPort2ManualOutputAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort2ManualOutputAction.setStatus("mandatory")
_SensorProbeDrycontactArrayPort2OutputDescOn_Type = DisplayString
_SensorProbeDrycontactArrayPort2OutputDescOn_Object = MibTableColumn
sensorProbeDrycontactArrayPort2OutputDescOn = _SensorProbeDrycontactArrayPort2OutputDescOn_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 2, 2, 1, 26),
    _SensorProbeDrycontactArrayPort2OutputDescOn_Type()
)
sensorProbeDrycontactArrayPort2OutputDescOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort2OutputDescOn.setStatus("mandatory")
_SensorProbeDrycontactArrayPort2OutputDescOff_Type = DisplayString
_SensorProbeDrycontactArrayPort2OutputDescOff_Object = MibTableColumn
sensorProbeDrycontactArrayPort2OutputDescOff = _SensorProbeDrycontactArrayPort2OutputDescOff_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 2, 2, 1, 27),
    _SensorProbeDrycontactArrayPort2OutputDescOff_Type()
)
sensorProbeDrycontactArrayPort2OutputDescOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort2OutputDescOff.setStatus("mandatory")
_SensorProbeDrycontactArrayPort2URL_Type = DisplayString
_SensorProbeDrycontactArrayPort2URL_Object = MibTableColumn
sensorProbeDrycontactArrayPort2URL = _SensorProbeDrycontactArrayPort2URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 2, 2, 1, 28),
    _SensorProbeDrycontactArrayPort2URL_Type()
)
sensorProbeDrycontactArrayPort2URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort2URL.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort2OpenURL_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort2OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeDrycontactArrayPort2OpenURL_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort2OpenURL_Object = MibTableColumn
sensorProbeDrycontactArrayPort2OpenURL = _SensorProbeDrycontactArrayPort2OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 2, 2, 1, 29),
    _SensorProbeDrycontactArrayPort2OpenURL_Type()
)
sensorProbeDrycontactArrayPort2OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort2OpenURL.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort2ControlMode_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort2ControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("manual-control", 0),
          ("notification-control", 1),
          ("thermostat-control", 3),
          ("time-control", 2))
    )


_SensorProbeDrycontactArrayPort2ControlMode_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort2ControlMode_Object = MibTableColumn
sensorProbeDrycontactArrayPort2ControlMode = _SensorProbeDrycontactArrayPort2ControlMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 2, 2, 1, 30),
    _SensorProbeDrycontactArrayPort2ControlMode_Type()
)
sensorProbeDrycontactArrayPort2ControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort2ControlMode.setStatus("mandatory")
_SensorProbeDrycontactArrayPort3_ObjectIdentity = ObjectIdentity
sensorProbeDrycontactArrayPort3 = _SensorProbeDrycontactArrayPort3_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 3)
)
_SensorProbeDrycontactArrayPort3Number_Type = Integer32
_SensorProbeDrycontactArrayPort3Number_Object = MibScalar
sensorProbeDrycontactArrayPort3Number = _SensorProbeDrycontactArrayPort3Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 3, 1),
    _SensorProbeDrycontactArrayPort3Number_Type()
)
sensorProbeDrycontactArrayPort3Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort3Number.setStatus("mandatory")
_SensorProbeDrycontactArrayPort3Table_Object = MibTable
sensorProbeDrycontactArrayPort3Table = _SensorProbeDrycontactArrayPort3Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 3, 2)
)
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort3Table.setStatus("mandatory")
_SensorProbeDrycontactArrayPort3Entry_Object = MibTableRow
sensorProbeDrycontactArrayPort3Entry = _SensorProbeDrycontactArrayPort3Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 3, 2, 1)
)
sensorProbeDrycontactArrayPort3Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeDrycontactArrayPort3Index"),
)
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort3Entry.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort3Index_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort3Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeDrycontactArrayPort3Index_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort3Index_Object = MibTableColumn
sensorProbeDrycontactArrayPort3Index = _SensorProbeDrycontactArrayPort3Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 3, 2, 1, 1),
    _SensorProbeDrycontactArrayPort3Index_Type()
)
sensorProbeDrycontactArrayPort3Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort3Index.setStatus("mandatory")
_SensorProbeDrycontactArrayPort3Description_Type = DisplayString
_SensorProbeDrycontactArrayPort3Description_Object = MibTableColumn
sensorProbeDrycontactArrayPort3Description = _SensorProbeDrycontactArrayPort3Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 3, 2, 1, 2),
    _SensorProbeDrycontactArrayPort3Description_Type()
)
sensorProbeDrycontactArrayPort3Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort3Description.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort3Status_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort3Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorProbeDrycontactArrayPort3Status_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort3Status_Object = MibTableColumn
sensorProbeDrycontactArrayPort3Status = _SensorProbeDrycontactArrayPort3Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 3, 2, 1, 4),
    _SensorProbeDrycontactArrayPort3Status_Type()
)
sensorProbeDrycontactArrayPort3Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort3Status.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort3Online_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort3Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeDrycontactArrayPort3Online_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort3Online_Object = MibTableColumn
sensorProbeDrycontactArrayPort3Online = _SensorProbeDrycontactArrayPort3Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 3, 2, 1, 5),
    _SensorProbeDrycontactArrayPort3Online_Type()
)
sensorProbeDrycontactArrayPort3Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort3Online.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort3GoOnline_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort3GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeDrycontactArrayPort3GoOnline_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort3GoOnline_Object = MibTableColumn
sensorProbeDrycontactArrayPort3GoOnline = _SensorProbeDrycontactArrayPort3GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 3, 2, 1, 6),
    _SensorProbeDrycontactArrayPort3GoOnline_Type()
)
sensorProbeDrycontactArrayPort3GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort3GoOnline.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort3NormalState_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort3NormalState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("closed", 0),
          ("open", 1))
    )


_SensorProbeDrycontactArrayPort3NormalState_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort3NormalState_Object = MibTableColumn
sensorProbeDrycontactArrayPort3NormalState = _SensorProbeDrycontactArrayPort3NormalState_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 3, 2, 1, 7),
    _SensorProbeDrycontactArrayPort3NormalState_Type()
)
sensorProbeDrycontactArrayPort3NormalState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort3NormalState.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort3Direction_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort3Direction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("input", 0),
          ("output", 1))
    )


_SensorProbeDrycontactArrayPort3Direction_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort3Direction_Object = MibTableColumn
sensorProbeDrycontactArrayPort3Direction = _SensorProbeDrycontactArrayPort3Direction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 3, 2, 1, 8),
    _SensorProbeDrycontactArrayPort3Direction_Type()
)
sensorProbeDrycontactArrayPort3Direction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort3Direction.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort3ContTimeCritical_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort3ContTimeCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeDrycontactArrayPort3ContTimeCritical_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort3ContTimeCritical_Object = MibTableColumn
sensorProbeDrycontactArrayPort3ContTimeCritical = _SensorProbeDrycontactArrayPort3ContTimeCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 3, 2, 1, 9),
    _SensorProbeDrycontactArrayPort3ContTimeCritical_Type()
)
sensorProbeDrycontactArrayPort3ContTimeCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort3ContTimeCritical.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort3ContTimeNormal_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort3ContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeDrycontactArrayPort3ContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort3ContTimeNormal_Object = MibTableColumn
sensorProbeDrycontactArrayPort3ContTimeNormal = _SensorProbeDrycontactArrayPort3ContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 3, 2, 1, 10),
    _SensorProbeDrycontactArrayPort3ContTimeNormal_Type()
)
sensorProbeDrycontactArrayPort3ContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort3ContTimeNormal.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort3ManualOutputCycleTime_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort3ManualOutputCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeDrycontactArrayPort3ManualOutputCycleTime_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort3ManualOutputCycleTime_Object = MibTableColumn
sensorProbeDrycontactArrayPort3ManualOutputCycleTime = _SensorProbeDrycontactArrayPort3ManualOutputCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 3, 2, 1, 24),
    _SensorProbeDrycontactArrayPort3ManualOutputCycleTime_Type()
)
sensorProbeDrycontactArrayPort3ManualOutputCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort3ManualOutputCycleTime.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort3ManualOutputAction_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort3ManualOutputAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("allow-sensor-control", 1),
          ("cycle-Off-On-Off", 7),
          ("cycle-On-Off-On", 8),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeDrycontactArrayPort3ManualOutputAction_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort3ManualOutputAction_Object = MibTableColumn
sensorProbeDrycontactArrayPort3ManualOutputAction = _SensorProbeDrycontactArrayPort3ManualOutputAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 3, 2, 1, 25),
    _SensorProbeDrycontactArrayPort3ManualOutputAction_Type()
)
sensorProbeDrycontactArrayPort3ManualOutputAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort3ManualOutputAction.setStatus("mandatory")
_SensorProbeDrycontactArrayPort3OutputDescOn_Type = DisplayString
_SensorProbeDrycontactArrayPort3OutputDescOn_Object = MibTableColumn
sensorProbeDrycontactArrayPort3OutputDescOn = _SensorProbeDrycontactArrayPort3OutputDescOn_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 3, 2, 1, 26),
    _SensorProbeDrycontactArrayPort3OutputDescOn_Type()
)
sensorProbeDrycontactArrayPort3OutputDescOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort3OutputDescOn.setStatus("mandatory")
_SensorProbeDrycontactArrayPort3OutputDescOff_Type = DisplayString
_SensorProbeDrycontactArrayPort3OutputDescOff_Object = MibTableColumn
sensorProbeDrycontactArrayPort3OutputDescOff = _SensorProbeDrycontactArrayPort3OutputDescOff_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 3, 2, 1, 27),
    _SensorProbeDrycontactArrayPort3OutputDescOff_Type()
)
sensorProbeDrycontactArrayPort3OutputDescOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort3OutputDescOff.setStatus("mandatory")
_SensorProbeDrycontactArrayPort3URL_Type = DisplayString
_SensorProbeDrycontactArrayPort3URL_Object = MibTableColumn
sensorProbeDrycontactArrayPort3URL = _SensorProbeDrycontactArrayPort3URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 3, 2, 1, 28),
    _SensorProbeDrycontactArrayPort3URL_Type()
)
sensorProbeDrycontactArrayPort3URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort3URL.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort3OpenURL_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort3OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeDrycontactArrayPort3OpenURL_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort3OpenURL_Object = MibTableColumn
sensorProbeDrycontactArrayPort3OpenURL = _SensorProbeDrycontactArrayPort3OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 3, 2, 1, 29),
    _SensorProbeDrycontactArrayPort3OpenURL_Type()
)
sensorProbeDrycontactArrayPort3OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort3OpenURL.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort3ControlMode_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort3ControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("manual-control", 0),
          ("notification-control", 1),
          ("thermostat-control", 3),
          ("time-control", 2))
    )


_SensorProbeDrycontactArrayPort3ControlMode_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort3ControlMode_Object = MibTableColumn
sensorProbeDrycontactArrayPort3ControlMode = _SensorProbeDrycontactArrayPort3ControlMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 3, 2, 1, 30),
    _SensorProbeDrycontactArrayPort3ControlMode_Type()
)
sensorProbeDrycontactArrayPort3ControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort3ControlMode.setStatus("mandatory")
_SensorProbeDrycontactArrayPort4_ObjectIdentity = ObjectIdentity
sensorProbeDrycontactArrayPort4 = _SensorProbeDrycontactArrayPort4_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 4)
)
_SensorProbeDrycontactArrayPort4Number_Type = Integer32
_SensorProbeDrycontactArrayPort4Number_Object = MibScalar
sensorProbeDrycontactArrayPort4Number = _SensorProbeDrycontactArrayPort4Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 4, 1),
    _SensorProbeDrycontactArrayPort4Number_Type()
)
sensorProbeDrycontactArrayPort4Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort4Number.setStatus("mandatory")
_SensorProbeDrycontactArrayPort4Table_Object = MibTable
sensorProbeDrycontactArrayPort4Table = _SensorProbeDrycontactArrayPort4Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 4, 2)
)
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort4Table.setStatus("mandatory")
_SensorProbeDrycontactArrayPort4Entry_Object = MibTableRow
sensorProbeDrycontactArrayPort4Entry = _SensorProbeDrycontactArrayPort4Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 4, 2, 1)
)
sensorProbeDrycontactArrayPort4Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeDrycontactArrayPort4Index"),
)
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort4Entry.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort4Index_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort4Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeDrycontactArrayPort4Index_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort4Index_Object = MibTableColumn
sensorProbeDrycontactArrayPort4Index = _SensorProbeDrycontactArrayPort4Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 4, 2, 1, 1),
    _SensorProbeDrycontactArrayPort4Index_Type()
)
sensorProbeDrycontactArrayPort4Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort4Index.setStatus("mandatory")
_SensorProbeDrycontactArrayPort4Description_Type = DisplayString
_SensorProbeDrycontactArrayPort4Description_Object = MibTableColumn
sensorProbeDrycontactArrayPort4Description = _SensorProbeDrycontactArrayPort4Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 4, 2, 1, 2),
    _SensorProbeDrycontactArrayPort4Description_Type()
)
sensorProbeDrycontactArrayPort4Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort4Description.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort4Status_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort4Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorProbeDrycontactArrayPort4Status_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort4Status_Object = MibTableColumn
sensorProbeDrycontactArrayPort4Status = _SensorProbeDrycontactArrayPort4Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 4, 2, 1, 4),
    _SensorProbeDrycontactArrayPort4Status_Type()
)
sensorProbeDrycontactArrayPort4Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort4Status.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort4Online_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort4Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeDrycontactArrayPort4Online_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort4Online_Object = MibTableColumn
sensorProbeDrycontactArrayPort4Online = _SensorProbeDrycontactArrayPort4Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 4, 2, 1, 5),
    _SensorProbeDrycontactArrayPort4Online_Type()
)
sensorProbeDrycontactArrayPort4Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort4Online.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort4GoOnline_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort4GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeDrycontactArrayPort4GoOnline_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort4GoOnline_Object = MibTableColumn
sensorProbeDrycontactArrayPort4GoOnline = _SensorProbeDrycontactArrayPort4GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 4, 2, 1, 6),
    _SensorProbeDrycontactArrayPort4GoOnline_Type()
)
sensorProbeDrycontactArrayPort4GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort4GoOnline.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort4NormalState_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort4NormalState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("closed", 0),
          ("open", 1))
    )


_SensorProbeDrycontactArrayPort4NormalState_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort4NormalState_Object = MibTableColumn
sensorProbeDrycontactArrayPort4NormalState = _SensorProbeDrycontactArrayPort4NormalState_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 4, 2, 1, 7),
    _SensorProbeDrycontactArrayPort4NormalState_Type()
)
sensorProbeDrycontactArrayPort4NormalState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort4NormalState.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort4Direction_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort4Direction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("input", 0),
          ("output", 1))
    )


_SensorProbeDrycontactArrayPort4Direction_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort4Direction_Object = MibTableColumn
sensorProbeDrycontactArrayPort4Direction = _SensorProbeDrycontactArrayPort4Direction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 4, 2, 1, 8),
    _SensorProbeDrycontactArrayPort4Direction_Type()
)
sensorProbeDrycontactArrayPort4Direction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort4Direction.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort4ContTimeCritical_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort4ContTimeCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeDrycontactArrayPort4ContTimeCritical_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort4ContTimeCritical_Object = MibTableColumn
sensorProbeDrycontactArrayPort4ContTimeCritical = _SensorProbeDrycontactArrayPort4ContTimeCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 4, 2, 1, 9),
    _SensorProbeDrycontactArrayPort4ContTimeCritical_Type()
)
sensorProbeDrycontactArrayPort4ContTimeCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort4ContTimeCritical.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort4ContTimeNormal_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort4ContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeDrycontactArrayPort4ContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort4ContTimeNormal_Object = MibTableColumn
sensorProbeDrycontactArrayPort4ContTimeNormal = _SensorProbeDrycontactArrayPort4ContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 4, 2, 1, 10),
    _SensorProbeDrycontactArrayPort4ContTimeNormal_Type()
)
sensorProbeDrycontactArrayPort4ContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort4ContTimeNormal.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort4ManualOutputCycleTime_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort4ManualOutputCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeDrycontactArrayPort4ManualOutputCycleTime_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort4ManualOutputCycleTime_Object = MibTableColumn
sensorProbeDrycontactArrayPort4ManualOutputCycleTime = _SensorProbeDrycontactArrayPort4ManualOutputCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 4, 2, 1, 24),
    _SensorProbeDrycontactArrayPort4ManualOutputCycleTime_Type()
)
sensorProbeDrycontactArrayPort4ManualOutputCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort4ManualOutputCycleTime.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort4ManualOutputAction_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort4ManualOutputAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("allow-sensor-control", 1),
          ("cycle-Off-On-Off", 7),
          ("cycle-On-Off-On", 8),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeDrycontactArrayPort4ManualOutputAction_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort4ManualOutputAction_Object = MibTableColumn
sensorProbeDrycontactArrayPort4ManualOutputAction = _SensorProbeDrycontactArrayPort4ManualOutputAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 4, 2, 1, 25),
    _SensorProbeDrycontactArrayPort4ManualOutputAction_Type()
)
sensorProbeDrycontactArrayPort4ManualOutputAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort4ManualOutputAction.setStatus("mandatory")
_SensorProbeDrycontactArrayPort4OutputDescOn_Type = DisplayString
_SensorProbeDrycontactArrayPort4OutputDescOn_Object = MibTableColumn
sensorProbeDrycontactArrayPort4OutputDescOn = _SensorProbeDrycontactArrayPort4OutputDescOn_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 4, 2, 1, 26),
    _SensorProbeDrycontactArrayPort4OutputDescOn_Type()
)
sensorProbeDrycontactArrayPort4OutputDescOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort4OutputDescOn.setStatus("mandatory")
_SensorProbeDrycontactArrayPort4OutputDescOff_Type = DisplayString
_SensorProbeDrycontactArrayPort4OutputDescOff_Object = MibTableColumn
sensorProbeDrycontactArrayPort4OutputDescOff = _SensorProbeDrycontactArrayPort4OutputDescOff_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 4, 2, 1, 27),
    _SensorProbeDrycontactArrayPort4OutputDescOff_Type()
)
sensorProbeDrycontactArrayPort4OutputDescOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort4OutputDescOff.setStatus("mandatory")
_SensorProbeDrycontactArrayPort4URL_Type = DisplayString
_SensorProbeDrycontactArrayPort4URL_Object = MibTableColumn
sensorProbeDrycontactArrayPort4URL = _SensorProbeDrycontactArrayPort4URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 4, 2, 1, 28),
    _SensorProbeDrycontactArrayPort4URL_Type()
)
sensorProbeDrycontactArrayPort4URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort4URL.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort4OpenURL_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort4OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeDrycontactArrayPort4OpenURL_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort4OpenURL_Object = MibTableColumn
sensorProbeDrycontactArrayPort4OpenURL = _SensorProbeDrycontactArrayPort4OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 4, 2, 1, 29),
    _SensorProbeDrycontactArrayPort4OpenURL_Type()
)
sensorProbeDrycontactArrayPort4OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort4OpenURL.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort4ControlMode_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort4ControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("manual-control", 0),
          ("notification-control", 1),
          ("thermostat-control", 3),
          ("time-control", 2))
    )


_SensorProbeDrycontactArrayPort4ControlMode_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort4ControlMode_Object = MibTableColumn
sensorProbeDrycontactArrayPort4ControlMode = _SensorProbeDrycontactArrayPort4ControlMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 4, 2, 1, 30),
    _SensorProbeDrycontactArrayPort4ControlMode_Type()
)
sensorProbeDrycontactArrayPort4ControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort4ControlMode.setStatus("mandatory")
_SensorProbeDrycontactArrayPort5_ObjectIdentity = ObjectIdentity
sensorProbeDrycontactArrayPort5 = _SensorProbeDrycontactArrayPort5_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 5)
)
_SensorProbeDrycontactArrayPort5Number_Type = Integer32
_SensorProbeDrycontactArrayPort5Number_Object = MibScalar
sensorProbeDrycontactArrayPort5Number = _SensorProbeDrycontactArrayPort5Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 5, 1),
    _SensorProbeDrycontactArrayPort5Number_Type()
)
sensorProbeDrycontactArrayPort5Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort5Number.setStatus("mandatory")
_SensorProbeDrycontactArrayPort5Table_Object = MibTable
sensorProbeDrycontactArrayPort5Table = _SensorProbeDrycontactArrayPort5Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 5, 2)
)
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort5Table.setStatus("mandatory")
_SensorProbeDrycontactArrayPort5Entry_Object = MibTableRow
sensorProbeDrycontactArrayPort5Entry = _SensorProbeDrycontactArrayPort5Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 5, 2, 1)
)
sensorProbeDrycontactArrayPort5Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeDrycontactArrayPort5Index"),
)
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort5Entry.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort5Index_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort5Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeDrycontactArrayPort5Index_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort5Index_Object = MibTableColumn
sensorProbeDrycontactArrayPort5Index = _SensorProbeDrycontactArrayPort5Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 5, 2, 1, 1),
    _SensorProbeDrycontactArrayPort5Index_Type()
)
sensorProbeDrycontactArrayPort5Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort5Index.setStatus("mandatory")
_SensorProbeDrycontactArrayPort5Description_Type = DisplayString
_SensorProbeDrycontactArrayPort5Description_Object = MibTableColumn
sensorProbeDrycontactArrayPort5Description = _SensorProbeDrycontactArrayPort5Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 5, 2, 1, 2),
    _SensorProbeDrycontactArrayPort5Description_Type()
)
sensorProbeDrycontactArrayPort5Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort5Description.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort5Status_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort5Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorProbeDrycontactArrayPort5Status_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort5Status_Object = MibTableColumn
sensorProbeDrycontactArrayPort5Status = _SensorProbeDrycontactArrayPort5Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 5, 2, 1, 4),
    _SensorProbeDrycontactArrayPort5Status_Type()
)
sensorProbeDrycontactArrayPort5Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort5Status.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort5Online_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort5Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeDrycontactArrayPort5Online_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort5Online_Object = MibTableColumn
sensorProbeDrycontactArrayPort5Online = _SensorProbeDrycontactArrayPort5Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 5, 2, 1, 5),
    _SensorProbeDrycontactArrayPort5Online_Type()
)
sensorProbeDrycontactArrayPort5Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort5Online.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort5GoOnline_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort5GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeDrycontactArrayPort5GoOnline_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort5GoOnline_Object = MibTableColumn
sensorProbeDrycontactArrayPort5GoOnline = _SensorProbeDrycontactArrayPort5GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 5, 2, 1, 6),
    _SensorProbeDrycontactArrayPort5GoOnline_Type()
)
sensorProbeDrycontactArrayPort5GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort5GoOnline.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort5NormalState_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort5NormalState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("closed", 0),
          ("open", 1))
    )


_SensorProbeDrycontactArrayPort5NormalState_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort5NormalState_Object = MibTableColumn
sensorProbeDrycontactArrayPort5NormalState = _SensorProbeDrycontactArrayPort5NormalState_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 5, 2, 1, 7),
    _SensorProbeDrycontactArrayPort5NormalState_Type()
)
sensorProbeDrycontactArrayPort5NormalState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort5NormalState.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort5Direction_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort5Direction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("input", 0),
          ("output", 1))
    )


_SensorProbeDrycontactArrayPort5Direction_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort5Direction_Object = MibTableColumn
sensorProbeDrycontactArrayPort5Direction = _SensorProbeDrycontactArrayPort5Direction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 5, 2, 1, 8),
    _SensorProbeDrycontactArrayPort5Direction_Type()
)
sensorProbeDrycontactArrayPort5Direction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort5Direction.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort5ContTimeCritical_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort5ContTimeCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeDrycontactArrayPort5ContTimeCritical_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort5ContTimeCritical_Object = MibTableColumn
sensorProbeDrycontactArrayPort5ContTimeCritical = _SensorProbeDrycontactArrayPort5ContTimeCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 5, 2, 1, 9),
    _SensorProbeDrycontactArrayPort5ContTimeCritical_Type()
)
sensorProbeDrycontactArrayPort5ContTimeCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort5ContTimeCritical.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort5ContTimeNormal_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort5ContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeDrycontactArrayPort5ContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort5ContTimeNormal_Object = MibTableColumn
sensorProbeDrycontactArrayPort5ContTimeNormal = _SensorProbeDrycontactArrayPort5ContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 5, 2, 1, 10),
    _SensorProbeDrycontactArrayPort5ContTimeNormal_Type()
)
sensorProbeDrycontactArrayPort5ContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort5ContTimeNormal.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort5ManualOutputCycleTime_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort5ManualOutputCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeDrycontactArrayPort5ManualOutputCycleTime_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort5ManualOutputCycleTime_Object = MibTableColumn
sensorProbeDrycontactArrayPort5ManualOutputCycleTime = _SensorProbeDrycontactArrayPort5ManualOutputCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 5, 2, 1, 24),
    _SensorProbeDrycontactArrayPort5ManualOutputCycleTime_Type()
)
sensorProbeDrycontactArrayPort5ManualOutputCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort5ManualOutputCycleTime.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort5ManualOutputAction_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort5ManualOutputAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("allow-sensor-control", 1),
          ("cycle-Off-On-Off", 7),
          ("cycle-On-Off-On", 8),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeDrycontactArrayPort5ManualOutputAction_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort5ManualOutputAction_Object = MibTableColumn
sensorProbeDrycontactArrayPort5ManualOutputAction = _SensorProbeDrycontactArrayPort5ManualOutputAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 5, 2, 1, 25),
    _SensorProbeDrycontactArrayPort5ManualOutputAction_Type()
)
sensorProbeDrycontactArrayPort5ManualOutputAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort5ManualOutputAction.setStatus("mandatory")
_SensorProbeDrycontactArrayPort5OutputDescOn_Type = DisplayString
_SensorProbeDrycontactArrayPort5OutputDescOn_Object = MibTableColumn
sensorProbeDrycontactArrayPort5OutputDescOn = _SensorProbeDrycontactArrayPort5OutputDescOn_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 5, 2, 1, 26),
    _SensorProbeDrycontactArrayPort5OutputDescOn_Type()
)
sensorProbeDrycontactArrayPort5OutputDescOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort5OutputDescOn.setStatus("mandatory")
_SensorProbeDrycontactArrayPort5OutputDescOff_Type = DisplayString
_SensorProbeDrycontactArrayPort5OutputDescOff_Object = MibTableColumn
sensorProbeDrycontactArrayPort5OutputDescOff = _SensorProbeDrycontactArrayPort5OutputDescOff_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 5, 2, 1, 27),
    _SensorProbeDrycontactArrayPort5OutputDescOff_Type()
)
sensorProbeDrycontactArrayPort5OutputDescOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort5OutputDescOff.setStatus("mandatory")
_SensorProbeDrycontactArrayPort5URL_Type = DisplayString
_SensorProbeDrycontactArrayPort5URL_Object = MibTableColumn
sensorProbeDrycontactArrayPort5URL = _SensorProbeDrycontactArrayPort5URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 5, 2, 1, 28),
    _SensorProbeDrycontactArrayPort5URL_Type()
)
sensorProbeDrycontactArrayPort5URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort5URL.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort5OpenURL_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort5OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeDrycontactArrayPort5OpenURL_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort5OpenURL_Object = MibTableColumn
sensorProbeDrycontactArrayPort5OpenURL = _SensorProbeDrycontactArrayPort5OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 5, 2, 1, 29),
    _SensorProbeDrycontactArrayPort5OpenURL_Type()
)
sensorProbeDrycontactArrayPort5OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort5OpenURL.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort5ControlMode_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort5ControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("manual-control", 0),
          ("notification-control", 1),
          ("thermostat-control", 3),
          ("time-control", 2))
    )


_SensorProbeDrycontactArrayPort5ControlMode_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort5ControlMode_Object = MibTableColumn
sensorProbeDrycontactArrayPort5ControlMode = _SensorProbeDrycontactArrayPort5ControlMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 5, 2, 1, 30),
    _SensorProbeDrycontactArrayPort5ControlMode_Type()
)
sensorProbeDrycontactArrayPort5ControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort5ControlMode.setStatus("mandatory")
_SensorProbeDrycontactArrayPort6_ObjectIdentity = ObjectIdentity
sensorProbeDrycontactArrayPort6 = _SensorProbeDrycontactArrayPort6_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 6)
)
_SensorProbeDrycontactArrayPort6Number_Type = Integer32
_SensorProbeDrycontactArrayPort6Number_Object = MibScalar
sensorProbeDrycontactArrayPort6Number = _SensorProbeDrycontactArrayPort6Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 6, 1),
    _SensorProbeDrycontactArrayPort6Number_Type()
)
sensorProbeDrycontactArrayPort6Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort6Number.setStatus("mandatory")
_SensorProbeDrycontactArrayPort6Table_Object = MibTable
sensorProbeDrycontactArrayPort6Table = _SensorProbeDrycontactArrayPort6Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 6, 2)
)
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort6Table.setStatus("mandatory")
_SensorProbeDrycontactArrayPort6Entry_Object = MibTableRow
sensorProbeDrycontactArrayPort6Entry = _SensorProbeDrycontactArrayPort6Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 6, 2, 1)
)
sensorProbeDrycontactArrayPort6Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeDrycontactArrayPort6Index"),
)
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort6Entry.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort6Index_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort6Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeDrycontactArrayPort6Index_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort6Index_Object = MibTableColumn
sensorProbeDrycontactArrayPort6Index = _SensorProbeDrycontactArrayPort6Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 6, 2, 1, 1),
    _SensorProbeDrycontactArrayPort6Index_Type()
)
sensorProbeDrycontactArrayPort6Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort6Index.setStatus("mandatory")
_SensorProbeDrycontactArrayPort6Description_Type = DisplayString
_SensorProbeDrycontactArrayPort6Description_Object = MibTableColumn
sensorProbeDrycontactArrayPort6Description = _SensorProbeDrycontactArrayPort6Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 6, 2, 1, 2),
    _SensorProbeDrycontactArrayPort6Description_Type()
)
sensorProbeDrycontactArrayPort6Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort6Description.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort6Status_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort6Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorProbeDrycontactArrayPort6Status_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort6Status_Object = MibTableColumn
sensorProbeDrycontactArrayPort6Status = _SensorProbeDrycontactArrayPort6Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 6, 2, 1, 4),
    _SensorProbeDrycontactArrayPort6Status_Type()
)
sensorProbeDrycontactArrayPort6Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort6Status.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort6Online_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort6Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeDrycontactArrayPort6Online_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort6Online_Object = MibTableColumn
sensorProbeDrycontactArrayPort6Online = _SensorProbeDrycontactArrayPort6Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 6, 2, 1, 5),
    _SensorProbeDrycontactArrayPort6Online_Type()
)
sensorProbeDrycontactArrayPort6Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort6Online.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort6GoOnline_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort6GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeDrycontactArrayPort6GoOnline_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort6GoOnline_Object = MibTableColumn
sensorProbeDrycontactArrayPort6GoOnline = _SensorProbeDrycontactArrayPort6GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 6, 2, 1, 6),
    _SensorProbeDrycontactArrayPort6GoOnline_Type()
)
sensorProbeDrycontactArrayPort6GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort6GoOnline.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort6NormalState_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort6NormalState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("closed", 0),
          ("open", 1))
    )


_SensorProbeDrycontactArrayPort6NormalState_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort6NormalState_Object = MibTableColumn
sensorProbeDrycontactArrayPort6NormalState = _SensorProbeDrycontactArrayPort6NormalState_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 6, 2, 1, 7),
    _SensorProbeDrycontactArrayPort6NormalState_Type()
)
sensorProbeDrycontactArrayPort6NormalState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort6NormalState.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort6Direction_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort6Direction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("input", 0),
          ("output", 1))
    )


_SensorProbeDrycontactArrayPort6Direction_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort6Direction_Object = MibTableColumn
sensorProbeDrycontactArrayPort6Direction = _SensorProbeDrycontactArrayPort6Direction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 6, 2, 1, 8),
    _SensorProbeDrycontactArrayPort6Direction_Type()
)
sensorProbeDrycontactArrayPort6Direction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort6Direction.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort6ContTimeCritical_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort6ContTimeCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeDrycontactArrayPort6ContTimeCritical_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort6ContTimeCritical_Object = MibTableColumn
sensorProbeDrycontactArrayPort6ContTimeCritical = _SensorProbeDrycontactArrayPort6ContTimeCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 6, 2, 1, 9),
    _SensorProbeDrycontactArrayPort6ContTimeCritical_Type()
)
sensorProbeDrycontactArrayPort6ContTimeCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort6ContTimeCritical.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort6ContTimeNormal_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort6ContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeDrycontactArrayPort6ContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort6ContTimeNormal_Object = MibTableColumn
sensorProbeDrycontactArrayPort6ContTimeNormal = _SensorProbeDrycontactArrayPort6ContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 6, 2, 1, 10),
    _SensorProbeDrycontactArrayPort6ContTimeNormal_Type()
)
sensorProbeDrycontactArrayPort6ContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort6ContTimeNormal.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort6ManualOutputCycleTime_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort6ManualOutputCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeDrycontactArrayPort6ManualOutputCycleTime_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort6ManualOutputCycleTime_Object = MibTableColumn
sensorProbeDrycontactArrayPort6ManualOutputCycleTime = _SensorProbeDrycontactArrayPort6ManualOutputCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 6, 2, 1, 24),
    _SensorProbeDrycontactArrayPort6ManualOutputCycleTime_Type()
)
sensorProbeDrycontactArrayPort6ManualOutputCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort6ManualOutputCycleTime.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort6ManualOutputAction_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort6ManualOutputAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("allow-sensor-control", 1),
          ("cycle-Off-On-Off", 7),
          ("cycle-On-Off-On", 8),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeDrycontactArrayPort6ManualOutputAction_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort6ManualOutputAction_Object = MibTableColumn
sensorProbeDrycontactArrayPort6ManualOutputAction = _SensorProbeDrycontactArrayPort6ManualOutputAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 6, 2, 1, 25),
    _SensorProbeDrycontactArrayPort6ManualOutputAction_Type()
)
sensorProbeDrycontactArrayPort6ManualOutputAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort6ManualOutputAction.setStatus("mandatory")
_SensorProbeDrycontactArrayPort6OutputDescOn_Type = DisplayString
_SensorProbeDrycontactArrayPort6OutputDescOn_Object = MibTableColumn
sensorProbeDrycontactArrayPort6OutputDescOn = _SensorProbeDrycontactArrayPort6OutputDescOn_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 6, 2, 1, 26),
    _SensorProbeDrycontactArrayPort6OutputDescOn_Type()
)
sensorProbeDrycontactArrayPort6OutputDescOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort6OutputDescOn.setStatus("mandatory")
_SensorProbeDrycontactArrayPort6OutputDescOff_Type = DisplayString
_SensorProbeDrycontactArrayPort6OutputDescOff_Object = MibTableColumn
sensorProbeDrycontactArrayPort6OutputDescOff = _SensorProbeDrycontactArrayPort6OutputDescOff_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 6, 2, 1, 27),
    _SensorProbeDrycontactArrayPort6OutputDescOff_Type()
)
sensorProbeDrycontactArrayPort6OutputDescOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort6OutputDescOff.setStatus("mandatory")
_SensorProbeDrycontactArrayPort6URL_Type = DisplayString
_SensorProbeDrycontactArrayPort6URL_Object = MibTableColumn
sensorProbeDrycontactArrayPort6URL = _SensorProbeDrycontactArrayPort6URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 6, 2, 1, 28),
    _SensorProbeDrycontactArrayPort6URL_Type()
)
sensorProbeDrycontactArrayPort6URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort6URL.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort6OpenURL_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort6OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeDrycontactArrayPort6OpenURL_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort6OpenURL_Object = MibTableColumn
sensorProbeDrycontactArrayPort6OpenURL = _SensorProbeDrycontactArrayPort6OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 6, 2, 1, 29),
    _SensorProbeDrycontactArrayPort6OpenURL_Type()
)
sensorProbeDrycontactArrayPort6OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort6OpenURL.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort6ControlMode_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort6ControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("manual-control", 0),
          ("notification-control", 1),
          ("thermostat-control", 3),
          ("time-control", 2))
    )


_SensorProbeDrycontactArrayPort6ControlMode_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort6ControlMode_Object = MibTableColumn
sensorProbeDrycontactArrayPort6ControlMode = _SensorProbeDrycontactArrayPort6ControlMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 6, 2, 1, 30),
    _SensorProbeDrycontactArrayPort6ControlMode_Type()
)
sensorProbeDrycontactArrayPort6ControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort6ControlMode.setStatus("mandatory")
_SensorProbeDrycontactArrayPort7_ObjectIdentity = ObjectIdentity
sensorProbeDrycontactArrayPort7 = _SensorProbeDrycontactArrayPort7_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 7)
)
_SensorProbeDrycontactArrayPort7Number_Type = Integer32
_SensorProbeDrycontactArrayPort7Number_Object = MibScalar
sensorProbeDrycontactArrayPort7Number = _SensorProbeDrycontactArrayPort7Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 7, 1),
    _SensorProbeDrycontactArrayPort7Number_Type()
)
sensorProbeDrycontactArrayPort7Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort7Number.setStatus("mandatory")
_SensorProbeDrycontactArrayPort7Table_Object = MibTable
sensorProbeDrycontactArrayPort7Table = _SensorProbeDrycontactArrayPort7Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 7, 2)
)
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort7Table.setStatus("mandatory")
_SensorProbeDrycontactArrayPort7Entry_Object = MibTableRow
sensorProbeDrycontactArrayPort7Entry = _SensorProbeDrycontactArrayPort7Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 7, 2, 1)
)
sensorProbeDrycontactArrayPort7Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeDrycontactArrayPort7Index"),
)
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort7Entry.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort7Index_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort7Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeDrycontactArrayPort7Index_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort7Index_Object = MibTableColumn
sensorProbeDrycontactArrayPort7Index = _SensorProbeDrycontactArrayPort7Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 7, 2, 1, 1),
    _SensorProbeDrycontactArrayPort7Index_Type()
)
sensorProbeDrycontactArrayPort7Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort7Index.setStatus("mandatory")
_SensorProbeDrycontactArrayPort7Description_Type = DisplayString
_SensorProbeDrycontactArrayPort7Description_Object = MibTableColumn
sensorProbeDrycontactArrayPort7Description = _SensorProbeDrycontactArrayPort7Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 7, 2, 1, 2),
    _SensorProbeDrycontactArrayPort7Description_Type()
)
sensorProbeDrycontactArrayPort7Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort7Description.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort7Status_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort7Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorProbeDrycontactArrayPort7Status_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort7Status_Object = MibTableColumn
sensorProbeDrycontactArrayPort7Status = _SensorProbeDrycontactArrayPort7Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 7, 2, 1, 4),
    _SensorProbeDrycontactArrayPort7Status_Type()
)
sensorProbeDrycontactArrayPort7Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort7Status.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort7Online_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort7Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeDrycontactArrayPort7Online_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort7Online_Object = MibTableColumn
sensorProbeDrycontactArrayPort7Online = _SensorProbeDrycontactArrayPort7Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 7, 2, 1, 5),
    _SensorProbeDrycontactArrayPort7Online_Type()
)
sensorProbeDrycontactArrayPort7Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort7Online.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort7GoOnline_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort7GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeDrycontactArrayPort7GoOnline_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort7GoOnline_Object = MibTableColumn
sensorProbeDrycontactArrayPort7GoOnline = _SensorProbeDrycontactArrayPort7GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 7, 2, 1, 6),
    _SensorProbeDrycontactArrayPort7GoOnline_Type()
)
sensorProbeDrycontactArrayPort7GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort7GoOnline.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort7NormalState_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort7NormalState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("closed", 0),
          ("open", 1))
    )


_SensorProbeDrycontactArrayPort7NormalState_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort7NormalState_Object = MibTableColumn
sensorProbeDrycontactArrayPort7NormalState = _SensorProbeDrycontactArrayPort7NormalState_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 7, 2, 1, 7),
    _SensorProbeDrycontactArrayPort7NormalState_Type()
)
sensorProbeDrycontactArrayPort7NormalState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort7NormalState.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort7Direction_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort7Direction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("input", 0),
          ("output", 1))
    )


_SensorProbeDrycontactArrayPort7Direction_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort7Direction_Object = MibTableColumn
sensorProbeDrycontactArrayPort7Direction = _SensorProbeDrycontactArrayPort7Direction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 7, 2, 1, 8),
    _SensorProbeDrycontactArrayPort7Direction_Type()
)
sensorProbeDrycontactArrayPort7Direction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort7Direction.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort7ContTimeCritical_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort7ContTimeCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeDrycontactArrayPort7ContTimeCritical_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort7ContTimeCritical_Object = MibTableColumn
sensorProbeDrycontactArrayPort7ContTimeCritical = _SensorProbeDrycontactArrayPort7ContTimeCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 7, 2, 1, 9),
    _SensorProbeDrycontactArrayPort7ContTimeCritical_Type()
)
sensorProbeDrycontactArrayPort7ContTimeCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort7ContTimeCritical.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort7ContTimeNormal_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort7ContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeDrycontactArrayPort7ContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort7ContTimeNormal_Object = MibTableColumn
sensorProbeDrycontactArrayPort7ContTimeNormal = _SensorProbeDrycontactArrayPort7ContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 7, 2, 1, 10),
    _SensorProbeDrycontactArrayPort7ContTimeNormal_Type()
)
sensorProbeDrycontactArrayPort7ContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort7ContTimeNormal.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort7ManualOutputCycleTime_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort7ManualOutputCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeDrycontactArrayPort7ManualOutputCycleTime_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort7ManualOutputCycleTime_Object = MibTableColumn
sensorProbeDrycontactArrayPort7ManualOutputCycleTime = _SensorProbeDrycontactArrayPort7ManualOutputCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 7, 2, 1, 24),
    _SensorProbeDrycontactArrayPort7ManualOutputCycleTime_Type()
)
sensorProbeDrycontactArrayPort7ManualOutputCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort7ManualOutputCycleTime.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort7ManualOutputAction_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort7ManualOutputAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("allow-sensor-control", 1),
          ("cycle-Off-On-Off", 7),
          ("cycle-On-Off-On", 8),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeDrycontactArrayPort7ManualOutputAction_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort7ManualOutputAction_Object = MibTableColumn
sensorProbeDrycontactArrayPort7ManualOutputAction = _SensorProbeDrycontactArrayPort7ManualOutputAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 7, 2, 1, 25),
    _SensorProbeDrycontactArrayPort7ManualOutputAction_Type()
)
sensorProbeDrycontactArrayPort7ManualOutputAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort7ManualOutputAction.setStatus("mandatory")
_SensorProbeDrycontactArrayPort7OutputDescOn_Type = DisplayString
_SensorProbeDrycontactArrayPort7OutputDescOn_Object = MibTableColumn
sensorProbeDrycontactArrayPort7OutputDescOn = _SensorProbeDrycontactArrayPort7OutputDescOn_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 7, 2, 1, 26),
    _SensorProbeDrycontactArrayPort7OutputDescOn_Type()
)
sensorProbeDrycontactArrayPort7OutputDescOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort7OutputDescOn.setStatus("mandatory")
_SensorProbeDrycontactArrayPort7OutputDescOff_Type = DisplayString
_SensorProbeDrycontactArrayPort7OutputDescOff_Object = MibTableColumn
sensorProbeDrycontactArrayPort7OutputDescOff = _SensorProbeDrycontactArrayPort7OutputDescOff_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 7, 2, 1, 27),
    _SensorProbeDrycontactArrayPort7OutputDescOff_Type()
)
sensorProbeDrycontactArrayPort7OutputDescOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort7OutputDescOff.setStatus("mandatory")
_SensorProbeDrycontactArrayPort7URL_Type = DisplayString
_SensorProbeDrycontactArrayPort7URL_Object = MibTableColumn
sensorProbeDrycontactArrayPort7URL = _SensorProbeDrycontactArrayPort7URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 7, 2, 1, 28),
    _SensorProbeDrycontactArrayPort7URL_Type()
)
sensorProbeDrycontactArrayPort7URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort7URL.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort7OpenURL_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort7OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeDrycontactArrayPort7OpenURL_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort7OpenURL_Object = MibTableColumn
sensorProbeDrycontactArrayPort7OpenURL = _SensorProbeDrycontactArrayPort7OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 7, 2, 1, 29),
    _SensorProbeDrycontactArrayPort7OpenURL_Type()
)
sensorProbeDrycontactArrayPort7OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort7OpenURL.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort7ControlMode_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort7ControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("manual-control", 0),
          ("notification-control", 1),
          ("thermostat-control", 3),
          ("time-control", 2))
    )


_SensorProbeDrycontactArrayPort7ControlMode_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort7ControlMode_Object = MibTableColumn
sensorProbeDrycontactArrayPort7ControlMode = _SensorProbeDrycontactArrayPort7ControlMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 7, 2, 1, 30),
    _SensorProbeDrycontactArrayPort7ControlMode_Type()
)
sensorProbeDrycontactArrayPort7ControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort7ControlMode.setStatus("mandatory")
_SensorProbeDrycontactArrayPort8_ObjectIdentity = ObjectIdentity
sensorProbeDrycontactArrayPort8 = _SensorProbeDrycontactArrayPort8_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 8)
)
_SensorProbeDrycontactArrayPort8Number_Type = Integer32
_SensorProbeDrycontactArrayPort8Number_Object = MibScalar
sensorProbeDrycontactArrayPort8Number = _SensorProbeDrycontactArrayPort8Number_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 8, 1),
    _SensorProbeDrycontactArrayPort8Number_Type()
)
sensorProbeDrycontactArrayPort8Number.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort8Number.setStatus("mandatory")
_SensorProbeDrycontactArrayPort8Table_Object = MibTable
sensorProbeDrycontactArrayPort8Table = _SensorProbeDrycontactArrayPort8Table_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 8, 2)
)
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort8Table.setStatus("mandatory")
_SensorProbeDrycontactArrayPort8Entry_Object = MibTableRow
sensorProbeDrycontactArrayPort8Entry = _SensorProbeDrycontactArrayPort8Entry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 8, 2, 1)
)
sensorProbeDrycontactArrayPort8Entry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeDrycontactArrayPort8Index"),
)
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort8Entry.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort8Index_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort8Index based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_SensorProbeDrycontactArrayPort8Index_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort8Index_Object = MibTableColumn
sensorProbeDrycontactArrayPort8Index = _SensorProbeDrycontactArrayPort8Index_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 8, 2, 1, 1),
    _SensorProbeDrycontactArrayPort8Index_Type()
)
sensorProbeDrycontactArrayPort8Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort8Index.setStatus("mandatory")
_SensorProbeDrycontactArrayPort8Description_Type = DisplayString
_SensorProbeDrycontactArrayPort8Description_Object = MibTableColumn
sensorProbeDrycontactArrayPort8Description = _SensorProbeDrycontactArrayPort8Description_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 8, 2, 1, 2),
    _SensorProbeDrycontactArrayPort8Description_Type()
)
sensorProbeDrycontactArrayPort8Description.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort8Description.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort8Status_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort8Status based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorProbeDrycontactArrayPort8Status_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort8Status_Object = MibTableColumn
sensorProbeDrycontactArrayPort8Status = _SensorProbeDrycontactArrayPort8Status_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 8, 2, 1, 4),
    _SensorProbeDrycontactArrayPort8Status_Type()
)
sensorProbeDrycontactArrayPort8Status.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort8Status.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort8Online_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort8Online based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeDrycontactArrayPort8Online_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort8Online_Object = MibTableColumn
sensorProbeDrycontactArrayPort8Online = _SensorProbeDrycontactArrayPort8Online_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 8, 2, 1, 5),
    _SensorProbeDrycontactArrayPort8Online_Type()
)
sensorProbeDrycontactArrayPort8Online.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort8Online.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort8GoOnline_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort8GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeDrycontactArrayPort8GoOnline_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort8GoOnline_Object = MibTableColumn
sensorProbeDrycontactArrayPort8GoOnline = _SensorProbeDrycontactArrayPort8GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 8, 2, 1, 6),
    _SensorProbeDrycontactArrayPort8GoOnline_Type()
)
sensorProbeDrycontactArrayPort8GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort8GoOnline.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort8NormalState_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort8NormalState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("closed", 0),
          ("open", 1))
    )


_SensorProbeDrycontactArrayPort8NormalState_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort8NormalState_Object = MibTableColumn
sensorProbeDrycontactArrayPort8NormalState = _SensorProbeDrycontactArrayPort8NormalState_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 8, 2, 1, 7),
    _SensorProbeDrycontactArrayPort8NormalState_Type()
)
sensorProbeDrycontactArrayPort8NormalState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort8NormalState.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort8Direction_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort8Direction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("input", 0),
          ("output", 1))
    )


_SensorProbeDrycontactArrayPort8Direction_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort8Direction_Object = MibTableColumn
sensorProbeDrycontactArrayPort8Direction = _SensorProbeDrycontactArrayPort8Direction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 8, 2, 1, 8),
    _SensorProbeDrycontactArrayPort8Direction_Type()
)
sensorProbeDrycontactArrayPort8Direction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort8Direction.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort8ContTimeCritical_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort8ContTimeCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorProbeDrycontactArrayPort8ContTimeCritical_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort8ContTimeCritical_Object = MibTableColumn
sensorProbeDrycontactArrayPort8ContTimeCritical = _SensorProbeDrycontactArrayPort8ContTimeCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 8, 2, 1, 9),
    _SensorProbeDrycontactArrayPort8ContTimeCritical_Type()
)
sensorProbeDrycontactArrayPort8ContTimeCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort8ContTimeCritical.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort8ContTimeNormal_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort8ContTimeNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorProbeDrycontactArrayPort8ContTimeNormal_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort8ContTimeNormal_Object = MibTableColumn
sensorProbeDrycontactArrayPort8ContTimeNormal = _SensorProbeDrycontactArrayPort8ContTimeNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 8, 2, 1, 10),
    _SensorProbeDrycontactArrayPort8ContTimeNormal_Type()
)
sensorProbeDrycontactArrayPort8ContTimeNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort8ContTimeNormal.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort8ManualOutputCycleTime_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort8ManualOutputCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorProbeDrycontactArrayPort8ManualOutputCycleTime_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort8ManualOutputCycleTime_Object = MibTableColumn
sensorProbeDrycontactArrayPort8ManualOutputCycleTime = _SensorProbeDrycontactArrayPort8ManualOutputCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 8, 2, 1, 24),
    _SensorProbeDrycontactArrayPort8ManualOutputCycleTime_Type()
)
sensorProbeDrycontactArrayPort8ManualOutputCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort8ManualOutputCycleTime.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort8ManualOutputAction_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort8ManualOutputAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("allow-sensor-control", 1),
          ("cycle-Off-On-Off", 7),
          ("cycle-On-Off-On", 8),
          ("turn-off", 4),
          ("turn-on", 3))
    )


_SensorProbeDrycontactArrayPort8ManualOutputAction_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort8ManualOutputAction_Object = MibTableColumn
sensorProbeDrycontactArrayPort8ManualOutputAction = _SensorProbeDrycontactArrayPort8ManualOutputAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 8, 2, 1, 25),
    _SensorProbeDrycontactArrayPort8ManualOutputAction_Type()
)
sensorProbeDrycontactArrayPort8ManualOutputAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort8ManualOutputAction.setStatus("mandatory")
_SensorProbeDrycontactArrayPort8OutputDescOn_Type = DisplayString
_SensorProbeDrycontactArrayPort8OutputDescOn_Object = MibTableColumn
sensorProbeDrycontactArrayPort8OutputDescOn = _SensorProbeDrycontactArrayPort8OutputDescOn_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 8, 2, 1, 26),
    _SensorProbeDrycontactArrayPort8OutputDescOn_Type()
)
sensorProbeDrycontactArrayPort8OutputDescOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort8OutputDescOn.setStatus("mandatory")
_SensorProbeDrycontactArrayPort8OutputDescOff_Type = DisplayString
_SensorProbeDrycontactArrayPort8OutputDescOff_Object = MibTableColumn
sensorProbeDrycontactArrayPort8OutputDescOff = _SensorProbeDrycontactArrayPort8OutputDescOff_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 8, 2, 1, 27),
    _SensorProbeDrycontactArrayPort8OutputDescOff_Type()
)
sensorProbeDrycontactArrayPort8OutputDescOff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort8OutputDescOff.setStatus("mandatory")
_SensorProbeDrycontactArrayPort8URL_Type = DisplayString
_SensorProbeDrycontactArrayPort8URL_Object = MibTableColumn
sensorProbeDrycontactArrayPort8URL = _SensorProbeDrycontactArrayPort8URL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 8, 2, 1, 28),
    _SensorProbeDrycontactArrayPort8URL_Type()
)
sensorProbeDrycontactArrayPort8URL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort8URL.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort8OpenURL_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort8OpenURL based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cur-window", 0),
          ("new-window", 2))
    )


_SensorProbeDrycontactArrayPort8OpenURL_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort8OpenURL_Object = MibTableColumn
sensorProbeDrycontactArrayPort8OpenURL = _SensorProbeDrycontactArrayPort8OpenURL_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 8, 2, 1, 29),
    _SensorProbeDrycontactArrayPort8OpenURL_Type()
)
sensorProbeDrycontactArrayPort8OpenURL.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort8OpenURL.setStatus("mandatory")


class _SensorProbeDrycontactArrayPort8ControlMode_Type(Integer32):
    """Custom type sensorProbeDrycontactArrayPort8ControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("manual-control", 0),
          ("notification-control", 1),
          ("thermostat-control", 3),
          ("time-control", 2))
    )


_SensorProbeDrycontactArrayPort8ControlMode_Type.__name__ = "Integer32"
_SensorProbeDrycontactArrayPort8ControlMode_Object = MibTableColumn
sensorProbeDrycontactArrayPort8ControlMode = _SensorProbeDrycontactArrayPort8ControlMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 19, 37, 8, 2, 1, 30),
    _SensorProbeDrycontactArrayPort8ControlMode_Type()
)
sensorProbeDrycontactArrayPort8ControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDrycontactArrayPort8ControlMode.setStatus("mandatory")


class _SensorProbeDebug_Type(Integer32):
    """Custom type sensorProbeDebug based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_SensorProbeDebug_Type.__name__ = "Integer32"
_SensorProbeDebug_Object = MibScalar
sensorProbeDebug = _SensorProbeDebug_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 20),
    _SensorProbeDebug_Type()
)
sensorProbeDebug.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDebug.setStatus("mandatory")


class _SensorProbeTrapResend_Type(Integer32):
    """Custom type sensorProbeTrapResend based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_SensorProbeTrapResend_Type.__name__ = "Integer32"
_SensorProbeTrapResend_Object = MibScalar
sensorProbeTrapResend = _SensorProbeTrapResend_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 22),
    _SensorProbeTrapResend_Type()
)
sensorProbeTrapResend.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTrapResend.setStatus("mandatory")
_SensorProbeTrapResendInterval_Type = Integer32
_SensorProbeTrapResendInterval_Object = MibScalar
sensorProbeTrapResendInterval = _SensorProbeTrapResendInterval_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 23),
    _SensorProbeTrapResendInterval_Type()
)
sensorProbeTrapResendInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTrapResendInterval.setStatus("mandatory")


class _SensorProbeSendTraps_Type(Integer32):
    """Custom type sensorProbeSendTraps based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 2),
          ("on", 1))
    )


_SensorProbeSendTraps_Type.__name__ = "Integer32"
_SensorProbeSendTraps_Object = MibScalar
sensorProbeSendTraps = _SensorProbeSendTraps_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 24),
    _SensorProbeSendTraps_Type()
)
sensorProbeSendTraps.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSendTraps.setStatus("mandatory")
_SensorProbeTrapDestination_Type = IpAddress
_SensorProbeTrapDestination_Object = MibScalar
sensorProbeTrapDestination = _SensorProbeTrapDestination_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 25),
    _SensorProbeTrapDestination_Type()
)
sensorProbeTrapDestination.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTrapDestination.setStatus("mandatory")
_SensorProbeTrapCommunity_Type = DisplayString
_SensorProbeTrapCommunity_Object = MibScalar
sensorProbeTrapCommunity = _SensorProbeTrapCommunity_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 26),
    _SensorProbeTrapCommunity_Type()
)
sensorProbeTrapCommunity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTrapCommunity.setStatus("mandatory")
_SensorProbeDefaultGateway_Type = IpAddress
_SensorProbeDefaultGateway_Object = MibScalar
sensorProbeDefaultGateway = _SensorProbeDefaultGateway_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 27),
    _SensorProbeDefaultGateway_Type()
)
sensorProbeDefaultGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDefaultGateway.setStatus("mandatory")
_SensorProbeSubnetMask_Type = IpAddress
_SensorProbeSubnetMask_Object = MibScalar
sensorProbeSubnetMask = _SensorProbeSubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 28),
    _SensorProbeSubnetMask_Type()
)
sensorProbeSubnetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSubnetMask.setStatus("mandatory")
_SensorProbeRouteAdd_Type = DisplayString
_SensorProbeRouteAdd_Object = MibScalar
sensorProbeRouteAdd = _SensorProbeRouteAdd_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 29),
    _SensorProbeRouteAdd_Type()
)
sensorProbeRouteAdd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRouteAdd.setStatus("mandatory")


class _SensorProbeSendMail_Type(Integer32):
    """Custom type sensorProbeSendMail based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 2),
          ("on", 1))
    )


_SensorProbeSendMail_Type.__name__ = "Integer32"
_SensorProbeSendMail_Object = MibScalar
sensorProbeSendMail = _SensorProbeSendMail_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 30),
    _SensorProbeSendMail_Type()
)
sensorProbeSendMail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSendMail.setStatus("mandatory")
_SensorProbeMailRecpt_Type = DisplayString
_SensorProbeMailRecpt_Object = MibScalar
sensorProbeMailRecpt = _SensorProbeMailRecpt_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 31),
    _SensorProbeMailRecpt_Type()
)
sensorProbeMailRecpt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeMailRecpt.setStatus("mandatory")
_SensorProbeMailFrom_Type = DisplayString
_SensorProbeMailFrom_Object = MibScalar
sensorProbeMailFrom = _SensorProbeMailFrom_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 32),
    _SensorProbeMailFrom_Type()
)
sensorProbeMailFrom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeMailFrom.setStatus("mandatory")
_SensorProbeMailSMTP_Type = DisplayString
_SensorProbeMailSMTP_Object = MibScalar
sensorProbeMailSMTP = _SensorProbeMailSMTP_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 33),
    _SensorProbeMailSMTP_Type()
)
sensorProbeMailSMTP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeMailSMTP.setStatus("mandatory")


class _SensorProbeMailJpgInline_Type(Integer32):
    """Custom type sensorProbeMailJpgInline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inline", 1),
          ("link", 2))
    )


_SensorProbeMailJpgInline_Type.__name__ = "Integer32"
_SensorProbeMailJpgInline_Object = MibScalar
sensorProbeMailJpgInline = _SensorProbeMailJpgInline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 34),
    _SensorProbeMailJpgInline_Type()
)
sensorProbeMailJpgInline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeMailJpgInline.setStatus("mandatory")
_SensorProbeMailResendInterval_Type = Integer32
_SensorProbeMailResendInterval_Object = MibScalar
sensorProbeMailResendInterval = _SensorProbeMailResendInterval_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 36),
    _SensorProbeMailResendInterval_Type()
)
sensorProbeMailResendInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeMailResendInterval.setStatus("mandatory")
_SensorProbeMailMaxResend_Type = Integer32
_SensorProbeMailMaxResend_Object = MibScalar
sensorProbeMailMaxResend = _SensorProbeMailMaxResend_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 37),
    _SensorProbeMailMaxResend_Type()
)
sensorProbeMailMaxResend.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeMailMaxResend.setStatus("mandatory")
_SensorProbeMailLastStatus_Type = DisplayString
_SensorProbeMailLastStatus_Object = MibScalar
sensorProbeMailLastStatus = _SensorProbeMailLastStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 39),
    _SensorProbeMailLastStatus_Type()
)
sensorProbeMailLastStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeMailLastStatus.setStatus("mandatory")
_SensorProbeSupportMailRcpt_Type = DisplayString
_SensorProbeSupportMailRcpt_Object = MibScalar
sensorProbeSupportMailRcpt = _SensorProbeSupportMailRcpt_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 40),
    _SensorProbeSupportMailRcpt_Type()
)
sensorProbeSupportMailRcpt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSupportMailRcpt.setStatus("mandatory")
_SensorProbeCameraServerTable_Object = MibTable
sensorProbeCameraServerTable = _SensorProbeCameraServerTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 42)
)
if mibBuilder.loadTexts:
    sensorProbeCameraServerTable.setStatus("mandatory")
_SensorProbeCameraServerEntry_Object = MibTableRow
sensorProbeCameraServerEntry = _SensorProbeCameraServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 42, 1)
)
sensorProbeCameraServerEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorProbeCameraServerIndex"),
)
if mibBuilder.loadTexts:
    sensorProbeCameraServerEntry.setStatus("mandatory")


class _SensorProbeCameraServerClientOnline_Type(Integer32):
    """Custom type sensorProbeCameraServerClientOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("offline", 2),
          ("online", 1))
    )


_SensorProbeCameraServerClientOnline_Type.__name__ = "Integer32"
_SensorProbeCameraServerClientOnline_Object = MibTableColumn
sensorProbeCameraServerClientOnline = _SensorProbeCameraServerClientOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 42, 1, 1),
    _SensorProbeCameraServerClientOnline_Type()
)
sensorProbeCameraServerClientOnline.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeCameraServerClientOnline.setStatus("mandatory")


class _SensorProbeCameraServerClientGoOnline_Type(Integer32):
    """Custom type sensorProbeCameraServerClientGoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorProbeCameraServerClientGoOnline_Type.__name__ = "Integer32"
_SensorProbeCameraServerClientGoOnline_Object = MibTableColumn
sensorProbeCameraServerClientGoOnline = _SensorProbeCameraServerClientGoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 42, 1, 2),
    _SensorProbeCameraServerClientGoOnline_Type()
)
sensorProbeCameraServerClientGoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeCameraServerClientGoOnline.setStatus("mandatory")
_SensorProbeCameraServerClientIP_Type = IpAddress
_SensorProbeCameraServerClientIP_Object = MibTableColumn
sensorProbeCameraServerClientIP = _SensorProbeCameraServerClientIP_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 42, 1, 3),
    _SensorProbeCameraServerClientIP_Type()
)
sensorProbeCameraServerClientIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeCameraServerClientIP.setStatus("mandatory")
_SensorProbeCameraServerClientSetPassword_Type = DisplayString
_SensorProbeCameraServerClientSetPassword_Object = MibTableColumn
sensorProbeCameraServerClientSetPassword = _SensorProbeCameraServerClientSetPassword_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 42, 1, 4),
    _SensorProbeCameraServerClientSetPassword_Type()
)
sensorProbeCameraServerClientSetPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeCameraServerClientSetPassword.setStatus("mandatory")


class _SensorProbeCameraServerIndex_Type(Integer32):
    """Custom type sensorProbeCameraServerIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9),
    )


_SensorProbeCameraServerIndex_Type.__name__ = "Integer32"
_SensorProbeCameraServerIndex_Object = MibTableColumn
sensorProbeCameraServerIndex = _SensorProbeCameraServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 42, 1, 5),
    _SensorProbeCameraServerIndex_Type()
)
sensorProbeCameraServerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeCameraServerIndex.setStatus("mandatory")
_SensorProbeJavaTimeOut_Type = Integer32
_SensorProbeJavaTimeOut_Object = MibTableColumn
sensorProbeJavaTimeOut = _SensorProbeJavaTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 42, 1, 6),
    _SensorProbeJavaTimeOut_Type()
)
sensorProbeJavaTimeOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeJavaTimeOut.setStatus("mandatory")


class _SensorProbeJpegQualityFactor_Type(Integer32):
    """Custom type sensorProbeJpegQualityFactor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 95),
    )


_SensorProbeJpegQualityFactor_Type.__name__ = "Integer32"
_SensorProbeJpegQualityFactor_Object = MibTableColumn
sensorProbeJpegQualityFactor = _SensorProbeJpegQualityFactor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 42, 1, 7),
    _SensorProbeJpegQualityFactor_Type()
)
sensorProbeJpegQualityFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeJpegQualityFactor.setStatus("mandatory")
_SensorProbeCameraDescription_Type = DisplayString
_SensorProbeCameraDescription_Object = MibTableColumn
sensorProbeCameraDescription = _SensorProbeCameraDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 42, 1, 8),
    _SensorProbeCameraDescription_Type()
)
sensorProbeCameraDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeCameraDescription.setStatus("mandatory")


class _SensorProbeCameraRotate_Type(Integer32):
    """Custom type sensorProbeCameraRotate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("nonRotate", 0),
          ("rotate", 1))
    )


_SensorProbeCameraRotate_Type.__name__ = "Integer32"
_SensorProbeCameraRotate_Object = MibTableColumn
sensorProbeCameraRotate = _SensorProbeCameraRotate_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 42, 1, 9),
    _SensorProbeCameraRotate_Type()
)
sensorProbeCameraRotate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeCameraRotate.setStatus("mandatory")


class _SensorProbeCameraResolution_Type(Integer32):
    """Custom type sensorProbeCameraResolution based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("resolution320x240", 0),
          ("resolution640x480", 1))
    )


_SensorProbeCameraResolution_Type.__name__ = "Integer32"
_SensorProbeCameraResolution_Object = MibTableColumn
sensorProbeCameraResolution = _SensorProbeCameraResolution_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 42, 1, 10),
    _SensorProbeCameraResolution_Type()
)
sensorProbeCameraResolution.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeCameraResolution.setStatus("mandatory")
_SensorProbePTZRotateRelative_Type = DisplayString
_SensorProbePTZRotateRelative_Object = MibTableColumn
sensorProbePTZRotateRelative = _SensorProbePTZRotateRelative_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 42, 1, 11),
    _SensorProbePTZRotateRelative_Type()
)
sensorProbePTZRotateRelative.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbePTZRotateRelative.setStatus("mandatory")
_SensorProbePTZRotateAbsolute_Type = DisplayString
_SensorProbePTZRotateAbsolute_Object = MibTableColumn
sensorProbePTZRotateAbsolute = _SensorProbePTZRotateAbsolute_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 42, 1, 12),
    _SensorProbePTZRotateAbsolute_Type()
)
sensorProbePTZRotateAbsolute.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbePTZRotateAbsolute.setStatus("mandatory")


class _SensorProbeAudioAttachChannel_Type(Integer32):
    """Custom type sensorProbeAudioAttachChannel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("attachAudio", 1),
          ("notAttachAudio", 0))
    )


_SensorProbeAudioAttachChannel_Type.__name__ = "Integer32"
_SensorProbeAudioAttachChannel_Object = MibTableColumn
sensorProbeAudioAttachChannel = _SensorProbeAudioAttachChannel_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 42, 1, 13),
    _SensorProbeAudioAttachChannel_Type()
)
sensorProbeAudioAttachChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeAudioAttachChannel.setStatus("mandatory")


class _SensorProbePTZEnable_Type(Integer32):
    """Custom type sensorProbePTZEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enableExternal", 2),
          ("enableInternal", 1))
    )


_SensorProbePTZEnable_Type.__name__ = "Integer32"
_SensorProbePTZEnable_Object = MibTableColumn
sensorProbePTZEnable = _SensorProbePTZEnable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 42, 1, 14),
    _SensorProbePTZEnable_Type()
)
sensorProbePTZEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbePTZEnable.setStatus("mandatory")


class _SensorProbePTZBrand_Type(Integer32):
    """Custom type sensorProbePTZBrand based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("akcpBrand", 1),
          ("generalBrand", 0))
    )


_SensorProbePTZBrand_Type.__name__ = "Integer32"
_SensorProbePTZBrand_Object = MibTableColumn
sensorProbePTZBrand = _SensorProbePTZBrand_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 42, 1, 15),
    _SensorProbePTZBrand_Type()
)
sensorProbePTZBrand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbePTZBrand.setStatus("mandatory")


class _SensorProbePTZPanTiltUntilEnd_Type(Integer32):
    """Custom type sensorProbePTZPanTiltUntilEnd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("down", 4),
          ("left", 2),
          ("left-down", 8),
          ("left-up", 7),
          ("right", 1),
          ("right-down", 6),
          ("right-up", 5),
          ("stop", 0),
          ("up", 3))
    )


_SensorProbePTZPanTiltUntilEnd_Type.__name__ = "Integer32"
_SensorProbePTZPanTiltUntilEnd_Object = MibTableColumn
sensorProbePTZPanTiltUntilEnd = _SensorProbePTZPanTiltUntilEnd_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 42, 1, 16),
    _SensorProbePTZPanTiltUntilEnd_Type()
)
sensorProbePTZPanTiltUntilEnd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbePTZPanTiltUntilEnd.setStatus("mandatory")
_SensorProbeTrapMailPollInterval_Type = Integer32
_SensorProbeTrapMailPollInterval_Object = MibScalar
sensorProbeTrapMailPollInterval = _SensorProbeTrapMailPollInterval_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 50),
    _SensorProbeTrapMailPollInterval_Type()
)
sensorProbeTrapMailPollInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTrapMailPollInterval.setStatus("mandatory")
_SensorProbeSendTestMail_Type = Integer32
_SensorProbeSendTestMail_Object = MibScalar
sensorProbeSendTestMail = _SensorProbeSendTestMail_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 51),
    _SensorProbeSendTestMail_Type()
)
sensorProbeSendTestMail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSendTestMail.setStatus("mandatory")
_SensorProbeLastSystemError_Type = DisplayString
_SensorProbeLastSystemError_Object = MibScalar
sensorProbeLastSystemError = _SensorProbeLastSystemError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 52),
    _SensorProbeLastSystemError_Type()
)
sensorProbeLastSystemError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeLastSystemError.setStatus("mandatory")
_SensorProbeDataCollectionPeriod_Type = Integer32
_SensorProbeDataCollectionPeriod_Object = MibScalar
sensorProbeDataCollectionPeriod = _SensorProbeDataCollectionPeriod_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 53),
    _SensorProbeDataCollectionPeriod_Type()
)
sensorProbeDataCollectionPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDataCollectionPeriod.setStatus("mandatory")
_SensorProbeMailTimeout_Type = Integer32
_SensorProbeMailTimeout_Object = MibScalar
sensorProbeMailTimeout = _SensorProbeMailTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 54),
    _SensorProbeMailTimeout_Type()
)
sensorProbeMailTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeMailTimeout.setStatus("mandatory")


class _SensorProbeAutoSense_Type(Integer32):
    """Custom type sensorProbeAutoSense based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeAutoSense_Type.__name__ = "Integer32"
_SensorProbeAutoSense_Object = MibScalar
sensorProbeAutoSense = _SensorProbeAutoSense_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 55),
    _SensorProbeAutoSense_Type()
)
sensorProbeAutoSense.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeAutoSense.setStatus("mandatory")
_SensorProbeChecksum_Type = Integer32
_SensorProbeChecksum_Object = MibScalar
sensorProbeChecksum = _SensorProbeChecksum_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 56),
    _SensorProbeChecksum_Type()
)
sensorProbeChecksum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeChecksum.setStatus("mandatory")


class _SensorProbeUsePassword_Type(Integer32):
    """Custom type sensorProbeUsePassword based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("doNotUsePassword", 1),
          ("usePassword", 0))
    )


_SensorProbeUsePassword_Type.__name__ = "Integer32"
_SensorProbeUsePassword_Object = MibScalar
sensorProbeUsePassword = _SensorProbeUsePassword_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 57),
    _SensorProbeUsePassword_Type()
)
sensorProbeUsePassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeUsePassword.setStatus("mandatory")


class _SensorProbeDisplayLogo_Type(Integer32):
    """Custom type sensorProbeDisplayLogo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeDisplayLogo_Type.__name__ = "Integer32"
_SensorProbeDisplayLogo_Object = MibScalar
sensorProbeDisplayLogo = _SensorProbeDisplayLogo_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 59),
    _SensorProbeDisplayLogo_Type()
)
sensorProbeDisplayLogo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDisplayLogo.setStatus("mandatory")


class _SensorProbeTrapType_Type(Integer32):
    """Custom type sensorProbeTrapType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("bothTypeTraps", 3),
          ("generalTypeTrap", 2),
          ("specificTypeTrap", 1),
          ("statusTypeTraps", 4))
    )


_SensorProbeTrapType_Type.__name__ = "Integer32"
_SensorProbeTrapType_Object = MibScalar
sensorProbeTrapType = _SensorProbeTrapType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 60),
    _SensorProbeTrapType_Type()
)
sensorProbeTrapType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTrapType.setStatus("mandatory")
_SensorProbeMailCC_Type = DisplayString
_SensorProbeMailCC_Object = MibScalar
sensorProbeMailCC = _SensorProbeMailCC_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 61),
    _SensorProbeMailCC_Type()
)
sensorProbeMailCC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeMailCC.setStatus("mandatory")


class _SensorProbeAllowIPChange_Type(Integer32):
    """Custom type sensorProbeAllowIPChange based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_SensorProbeAllowIPChange_Type.__name__ = "Integer32"
_SensorProbeAllowIPChange_Object = MibScalar
sensorProbeAllowIPChange = _SensorProbeAllowIPChange_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 62),
    _SensorProbeAllowIPChange_Type()
)
sensorProbeAllowIPChange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeAllowIPChange.setStatus("mandatory")
_SensorProbeTimeOfDay_Type = DisplayString
_SensorProbeTimeOfDay_Object = MibScalar
sensorProbeTimeOfDay = _SensorProbeTimeOfDay_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 65),
    _SensorProbeTimeOfDay_Type()
)
sensorProbeTimeOfDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTimeOfDay.setStatus("mandatory")


class _SensorProbeEnableSysLog_Type(Integer32):
    """Custom type sensorProbeEnableSysLog based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 3),
          ("enableLogToFlash", 1),
          ("enableLogToNetAndFlash", 2))
    )


_SensorProbeEnableSysLog_Type.__name__ = "Integer32"
_SensorProbeEnableSysLog_Object = MibScalar
sensorProbeEnableSysLog = _SensorProbeEnableSysLog_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 66),
    _SensorProbeEnableSysLog_Type()
)
sensorProbeEnableSysLog.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeEnableSysLog.setStatus("mandatory")


class _SensorProbeReadSysLog_Type(Integer32):
    """Custom type sensorProbeReadSysLog based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("allMessages", 2),
          ("lastMessage", 1))
    )


_SensorProbeReadSysLog_Type.__name__ = "Integer32"
_SensorProbeReadSysLog_Object = MibScalar
sensorProbeReadSysLog = _SensorProbeReadSysLog_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 67),
    _SensorProbeReadSysLog_Type()
)
sensorProbeReadSysLog.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeReadSysLog.setStatus("mandatory")


class _SensorProbeClearSysLog_Type(Integer32):
    """Custom type sensorProbeClearSysLog based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            2
        )
    )
    namedValues = NamedValues(
        ("allMessages", 2)
    )


_SensorProbeClearSysLog_Type.__name__ = "Integer32"
_SensorProbeClearSysLog_Object = MibScalar
sensorProbeClearSysLog = _SensorProbeClearSysLog_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 68),
    _SensorProbeClearSysLog_Type()
)
sensorProbeClearSysLog.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeClearSysLog.setStatus("mandatory")
_SensorProbeSyslogDestIP_Type = IpAddress
_SensorProbeSyslogDestIP_Object = MibScalar
sensorProbeSyslogDestIP = _SensorProbeSyslogDestIP_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 69),
    _SensorProbeSyslogDestIP_Type()
)
sensorProbeSyslogDestIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSyslogDestIP.setStatus("mandatory")
_SensorProbeSyslogPort_Type = Gauge32
_SensorProbeSyslogPort_Object = MibScalar
sensorProbeSyslogPort = _SensorProbeSyslogPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 70),
    _SensorProbeSyslogPort_Type()
)
sensorProbeSyslogPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSyslogPort.setStatus("mandatory")
_SensorProbeSetSyslogMsgPrefix_Type = DisplayString
_SensorProbeSetSyslogMsgPrefix_Object = MibScalar
sensorProbeSetSyslogMsgPrefix = _SensorProbeSetSyslogMsgPrefix_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 71),
    _SensorProbeSetSyslogMsgPrefix_Type()
)
sensorProbeSetSyslogMsgPrefix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSetSyslogMsgPrefix.setStatus("mandatory")
_SensorProbeTimeZone_Type = Integer32
_SensorProbeTimeZone_Object = MibScalar
sensorProbeTimeZone = _SensorProbeTimeZone_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 81),
    _SensorProbeTimeZone_Type()
)
sensorProbeTimeZone.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTimeZone.setStatus("mandatory")
_SensorProbeMegaVersion_Type = Integer32
_SensorProbeMegaVersion_Object = MibScalar
sensorProbeMegaVersion = _SensorProbeMegaVersion_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 83),
    _SensorProbeMegaVersion_Type()
)
sensorProbeMegaVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeMegaVersion.setStatus("mandatory")


class _SensorProbeNtpMode_Type(Integer32):
    """Custom type sensorProbeNtpMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("continuous", 7),
          ("notUse", 0),
          ("onSystemStartUp", 2),
          ("onceADay", 5),
          ("onceAMounth", 3),
          ("onceAWeek", 4),
          ("onceAnHour", 6),
          ("oneTime", 1))
    )


_SensorProbeNtpMode_Type.__name__ = "Integer32"
_SensorProbeNtpMode_Object = MibScalar
sensorProbeNtpMode = _SensorProbeNtpMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 84),
    _SensorProbeNtpMode_Type()
)
sensorProbeNtpMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeNtpMode.setStatus("mandatory")
_SensorProbeNtpServer_Type = DisplayString
_SensorProbeNtpServer_Object = MibScalar
sensorProbeNtpServer = _SensorProbeNtpServer_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 85),
    _SensorProbeNtpServer_Type()
)
sensorProbeNtpServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeNtpServer.setStatus("mandatory")


class _SensorProbeSMTPAuth_Type(Integer32):
    """Custom type sensorProbeSMTPAuth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_SensorProbeSMTPAuth_Type.__name__ = "Integer32"
_SensorProbeSMTPAuth_Object = MibScalar
sensorProbeSMTPAuth = _SensorProbeSMTPAuth_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 87),
    _SensorProbeSMTPAuth_Type()
)
sensorProbeSMTPAuth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSMTPAuth.setStatus("mandatory")
_SensorProbeSMTPLogin_Type = DisplayString
_SensorProbeSMTPLogin_Object = MibScalar
sensorProbeSMTPLogin = _SensorProbeSMTPLogin_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 88),
    _SensorProbeSMTPLogin_Type()
)
sensorProbeSMTPLogin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSMTPLogin.setStatus("mandatory")
_SensorProbeSMTPPassword_Type = DisplayString
_SensorProbeSMTPPassword_Object = MibScalar
sensorProbeSMTPPassword = _SensorProbeSMTPPassword_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 89),
    _SensorProbeSMTPPassword_Type()
)
sensorProbeSMTPPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSMTPPassword.setStatus("mandatory")
_SensorProbeDNSServer_Type = IpAddress
_SensorProbeDNSServer_Object = MibScalar
sensorProbeDNSServer = _SensorProbeDNSServer_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 90),
    _SensorProbeDNSServer_Type()
)
sensorProbeDNSServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDNSServer.setStatus("mandatory")
_SensorProbeAltWebPort_Type = Gauge32
_SensorProbeAltWebPort_Object = MibScalar
sensorProbeAltWebPort = _SensorProbeAltWebPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 91),
    _SensorProbeAltWebPort_Type()
)
sensorProbeAltWebPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeAltWebPort.setStatus("mandatory")
_SensorProbeNumberOfSensorPort_Type = Integer32
_SensorProbeNumberOfSensorPort_Object = MibScalar
sensorProbeNumberOfSensorPort = _SensorProbeNumberOfSensorPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 92),
    _SensorProbeNumberOfSensorPort_Type()
)
sensorProbeNumberOfSensorPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeNumberOfSensorPort.setStatus("mandatory")


class _SensorProbeSendTrapsAlive_Type(Integer32):
    """Custom type sensorProbeSendTrapsAlive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 2),
          ("on", 1))
    )


_SensorProbeSendTrapsAlive_Type.__name__ = "Integer32"
_SensorProbeSendTrapsAlive_Object = MibScalar
sensorProbeSendTrapsAlive = _SensorProbeSendTrapsAlive_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 93),
    _SensorProbeSendTrapsAlive_Type()
)
sensorProbeSendTrapsAlive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSendTrapsAlive.setStatus("mandatory")
_SensorProbeTrapReIntervalAlive_Type = Integer32
_SensorProbeTrapReIntervalAlive_Object = MibScalar
sensorProbeTrapReIntervalAlive = _SensorProbeTrapReIntervalAlive_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 94),
    _SensorProbeTrapReIntervalAlive_Type()
)
sensorProbeTrapReIntervalAlive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTrapReIntervalAlive.setStatus("mandatory")


class _SensorProbeUseCamera_Type(Integer32):
    """Custom type sensorProbeUseCamera based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_SensorProbeUseCamera_Type.__name__ = "Integer32"
_SensorProbeUseCamera_Object = MibScalar
sensorProbeUseCamera = _SensorProbeUseCamera_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 95),
    _SensorProbeUseCamera_Type()
)
sensorProbeUseCamera.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeUseCamera.setStatus("mandatory")
_SensorProbeAdcCalibratePort_Type = Integer32
_SensorProbeAdcCalibratePort_Object = MibScalar
sensorProbeAdcCalibratePort = _SensorProbeAdcCalibratePort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 96),
    _SensorProbeAdcCalibratePort_Type()
)
sensorProbeAdcCalibratePort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeAdcCalibratePort.setStatus("mandatory")
_SensorProbeMailSubject_Type = DisplayString
_SensorProbeMailSubject_Object = MibScalar
sensorProbeMailSubject = _SensorProbeMailSubject_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 98),
    _SensorProbeMailSubject_Type()
)
sensorProbeMailSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeMailSubject.setStatus("mandatory")
_SensorProbeSnmpPort_Type = Gauge32
_SensorProbeSnmpPort_Object = MibScalar
sensorProbeSnmpPort = _SensorProbeSnmpPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 99),
    _SensorProbeSnmpPort_Type()
)
sensorProbeSnmpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSnmpPort.setStatus("mandatory")
_SensorProbeSnmpTrapPort_Type = Gauge32
_SensorProbeSnmpTrapPort_Object = MibScalar
sensorProbeSnmpTrapPort = _SensorProbeSnmpTrapPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 100),
    _SensorProbeSnmpTrapPort_Type()
)
sensorProbeSnmpTrapPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSnmpTrapPort.setStatus("mandatory")


class _SensorProbeSnmpIndexingMode_Type(Integer32):
    """Custom type sensorProbeSnmpIndexingMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("index0", 0),
          ("index1", 1))
    )


_SensorProbeSnmpIndexingMode_Type.__name__ = "Integer32"
_SensorProbeSnmpIndexingMode_Object = MibScalar
sensorProbeSnmpIndexingMode = _SensorProbeSnmpIndexingMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 101),
    _SensorProbeSnmpIndexingMode_Type()
)
sensorProbeSnmpIndexingMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSnmpIndexingMode.setStatus("mandatory")
_SensorProbeNotifyBoot_Type = Integer32
_SensorProbeNotifyBoot_Object = MibScalar
sensorProbeNotifyBoot = _SensorProbeNotifyBoot_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 103),
    _SensorProbeNotifyBoot_Type()
)
sensorProbeNotifyBoot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeNotifyBoot.setStatus("mandatory")
_SensorProbeDelayNotifyBoot_Type = Integer32
_SensorProbeDelayNotifyBoot_Object = MibScalar
sensorProbeDelayNotifyBoot = _SensorProbeDelayNotifyBoot_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 104),
    _SensorProbeDelayNotifyBoot_Type()
)
sensorProbeDelayNotifyBoot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeDelayNotifyBoot.setStatus("mandatory")
_SensorProbeSmtpPort_Type = Integer32
_SensorProbeSmtpPort_Object = MibScalar
sensorProbeSmtpPort = _SensorProbeSmtpPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 105),
    _SensorProbeSmtpPort_Type()
)
sensorProbeSmtpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSmtpPort.setStatus("mandatory")
_SensorProbeReboot_Type = Integer32
_SensorProbeReboot_Object = MibScalar
sensorProbeReboot = _SensorProbeReboot_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 106),
    _SensorProbeReboot_Type()
)
sensorProbeReboot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeReboot.setStatus("mandatory")


class _SensorProbeServerEnable_Type(Integer32):
    """Custom type sensorProbeServerEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_SensorProbeServerEnable_Type.__name__ = "Integer32"
_SensorProbeServerEnable_Object = MibScalar
sensorProbeServerEnable = _SensorProbeServerEnable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 107),
    _SensorProbeServerEnable_Type()
)
sensorProbeServerEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeServerEnable.setStatus("mandatory")
_SensorProbeFirmwareVersion_Type = DisplayString
_SensorProbeFirmwareVersion_Object = MibScalar
sensorProbeFirmwareVersion = _SensorProbeFirmwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 108),
    _SensorProbeFirmwareVersion_Type()
)
sensorProbeFirmwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeFirmwareVersion.setStatus("mandatory")


class _SensorProbeProductType_Type(Integer32):
    """Custom type sensorProbeProductType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("securityProbe", 5),
          ("sensorProbe2", 1),
          ("sensorProbe8", 2),
          ("sensorProbeLinuxWithUSB", 4),
          ("sensorProbeLinuxWithoutUSB", 3))
    )


_SensorProbeProductType_Type.__name__ = "Integer32"
_SensorProbeProductType_Object = MibScalar
sensorProbeProductType = _SensorProbeProductType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 109),
    _SensorProbeProductType_Type()
)
sensorProbeProductType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeProductType.setStatus("mandatory")
_SensorProbeRequestResendTrap_Type = Integer32
_SensorProbeRequestResendTrap_Object = MibScalar
sensorProbeRequestResendTrap = _SensorProbeRequestResendTrap_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 110),
    _SensorProbeRequestResendTrap_Type()
)
sensorProbeRequestResendTrap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeRequestResendTrap.setStatus("mandatory")


class _SensorProbeSeparateEmail_Type(Integer32):
    """Custom type sensorProbeSeparateEmail based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("notSeparate", 0),
          ("separate", 1))
    )


_SensorProbeSeparateEmail_Type.__name__ = "Integer32"
_SensorProbeSeparateEmail_Object = MibScalar
sensorProbeSeparateEmail = _SensorProbeSeparateEmail_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 112),
    _SensorProbeSeparateEmail_Type()
)
sensorProbeSeparateEmail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeSeparateEmail.setStatus("mandatory")


class _SensorProbeMailCustom_Type(Integer32):
    """Custom type sensorProbeMailCustom based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("custom", 1),
          ("normal", 0))
    )


_SensorProbeMailCustom_Type.__name__ = "Integer32"
_SensorProbeMailCustom_Object = MibScalar
sensorProbeMailCustom = _SensorProbeMailCustom_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 113),
    _SensorProbeMailCustom_Type()
)
sensorProbeMailCustom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeMailCustom.setStatus("mandatory")


class _SensorProbeUntidePassword_Type(Integer32):
    """Custom type sensorProbeUntidePassword based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("tidePassword", 0),
          ("untidePassword", 1))
    )


_SensorProbeUntidePassword_Type.__name__ = "Integer32"
_SensorProbeUntidePassword_Object = MibScalar
sensorProbeUntidePassword = _SensorProbeUntidePassword_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 114),
    _SensorProbeUntidePassword_Type()
)
sensorProbeUntidePassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeUntidePassword.setStatus("mandatory")
_SensorProbeWebPassword_ObjectIdentity = ObjectIdentity
sensorProbeWebPassword = _SensorProbeWebPassword_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 115)
)
_SensorProbeWebAdminPassword_Type = DisplayString
_SensorProbeWebAdminPassword_Object = MibScalar
sensorProbeWebAdminPassword = _SensorProbeWebAdminPassword_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 115, 1),
    _SensorProbeWebAdminPassword_Type()
)
sensorProbeWebAdminPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeWebAdminPassword.setStatus("mandatory")
_SensorProbeWebUserPassword_Type = DisplayString
_SensorProbeWebUserPassword_Object = MibScalar
sensorProbeWebUserPassword = _SensorProbeWebUserPassword_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 115, 2),
    _SensorProbeWebUserPassword_Type()
)
sensorProbeWebUserPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeWebUserPassword.setStatus("mandatory")


class _SensorProbeReloadNetwork_Type(Integer32):
    """Custom type sensorProbeReloadNetwork based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reload", 1)
    )


_SensorProbeReloadNetwork_Type.__name__ = "Integer32"
_SensorProbeReloadNetwork_Object = MibScalar
sensorProbeReloadNetwork = _SensorProbeReloadNetwork_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 116),
    _SensorProbeReloadNetwork_Type()
)
sensorProbeReloadNetwork.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeReloadNetwork.setStatus("mandatory")
_SensorProbeStatusNumber_ObjectIdentity = ObjectIdentity
sensorProbeStatusNumber = _SensorProbeStatusNumber_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 117)
)
_SensorProbeStatusNumberNotNormal_Type = Integer32
_SensorProbeStatusNumberNotNormal_Object = MibScalar
sensorProbeStatusNumberNotNormal = _SensorProbeStatusNumberNotNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 117, 1),
    _SensorProbeStatusNumberNotNormal_Type()
)
sensorProbeStatusNumberNotNormal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeStatusNumberNotNormal.setStatus("mandatory")
_SensorProbeStatusNumberCriticalAndError_Type = Integer32
_SensorProbeStatusNumberCriticalAndError_Object = MibScalar
sensorProbeStatusNumberCriticalAndError = _SensorProbeStatusNumberCriticalAndError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 117, 2),
    _SensorProbeStatusNumberCriticalAndError_Type()
)
sensorProbeStatusNumberCriticalAndError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeStatusNumberCriticalAndError.setStatus("mandatory")
_SensorProbeStatusNumberError_Type = Integer32
_SensorProbeStatusNumberError_Object = MibScalar
sensorProbeStatusNumberError = _SensorProbeStatusNumberError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 117, 3),
    _SensorProbeStatusNumberError_Type()
)
sensorProbeStatusNumberError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeStatusNumberError.setStatus("mandatory")
_SensorProbeTypeName_ObjectIdentity = ObjectIdentity
sensorProbeTypeName = _SensorProbeTypeName_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118)
)
_SensorProbeTypeTemperatureName_Type = DisplayString
_SensorProbeTypeTemperatureName_Object = MibScalar
sensorProbeTypeTemperatureName = _SensorProbeTypeTemperatureName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 1),
    _SensorProbeTypeTemperatureName_Type()
)
sensorProbeTypeTemperatureName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeTemperatureName.setStatus("mandatory")
_SensorProbeTypeSHT11HumidityName_Type = DisplayString
_SensorProbeTypeSHT11HumidityName_Object = MibScalar
sensorProbeTypeSHT11HumidityName = _SensorProbeTypeSHT11HumidityName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 2),
    _SensorProbeTypeSHT11HumidityName_Type()
)
sensorProbeTypeSHT11HumidityName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeSHT11HumidityName.setStatus("mandatory")
_SensorProbeTypeSHT11TempName_Type = DisplayString
_SensorProbeTypeSHT11TempName_Object = MibScalar
sensorProbeTypeSHT11TempName = _SensorProbeTypeSHT11TempName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 3),
    _SensorProbeTypeSHT11TempName_Type()
)
sensorProbeTypeSHT11TempName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeSHT11TempName.setStatus("mandatory")
_SensorProbeType4to20MAName_Type = DisplayString
_SensorProbeType4to20MAName_Object = MibScalar
sensorProbeType4to20MAName = _SensorProbeType4to20MAName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 4),
    _SensorProbeType4to20MAName_Type()
)
sensorProbeType4to20MAName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeType4to20MAName.setStatus("mandatory")
_SensorProbeTypeDCvoltageName_Type = DisplayString
_SensorProbeTypeDCvoltageName_Object = MibScalar
sensorProbeTypeDCvoltageName = _SensorProbeTypeDCvoltageName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 5),
    _SensorProbeTypeDCvoltageName_Type()
)
sensorProbeTypeDCvoltageName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeDCvoltageName.setStatus("mandatory")
_SensorProbeTypeAirflowName_Type = DisplayString
_SensorProbeTypeAirflowName_Object = MibScalar
sensorProbeTypeAirflowName = _SensorProbeTypeAirflowName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 6),
    _SensorProbeTypeAirflowName_Type()
)
sensorProbeTypeAirflowName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeAirflowName.setStatus("mandatory")
_SensorProbeTypeDrycontactInoutName_Type = DisplayString
_SensorProbeTypeDrycontactInoutName_Object = MibScalar
sensorProbeTypeDrycontactInoutName = _SensorProbeTypeDrycontactInoutName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 7),
    _SensorProbeTypeDrycontactInoutName_Type()
)
sensorProbeTypeDrycontactInoutName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeDrycontactInoutName.setStatus("mandatory")
_SensorProbeTypeDrycontactInputName_Type = DisplayString
_SensorProbeTypeDrycontactInputName_Object = MibScalar
sensorProbeTypeDrycontactInputName = _SensorProbeTypeDrycontactInputName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 8),
    _SensorProbeTypeDrycontactInputName_Type()
)
sensorProbeTypeDrycontactInputName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeDrycontactInputName.setStatus("mandatory")
_SensorProbeTypeMotionName_Type = DisplayString
_SensorProbeTypeMotionName_Object = MibScalar
sensorProbeTypeMotionName = _SensorProbeTypeMotionName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 9),
    _SensorProbeTypeMotionName_Type()
)
sensorProbeTypeMotionName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeMotionName.setStatus("mandatory")
_SensorProbeTypeWaterName_Type = DisplayString
_SensorProbeTypeWaterName_Object = MibScalar
sensorProbeTypeWaterName = _SensorProbeTypeWaterName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 10),
    _SensorProbeTypeWaterName_Type()
)
sensorProbeTypeWaterName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeWaterName.setStatus("mandatory")
_SensorProbeTypeSecurityName_Type = DisplayString
_SensorProbeTypeSecurityName_Object = MibScalar
sensorProbeTypeSecurityName = _SensorProbeTypeSecurityName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 11),
    _SensorProbeTypeSecurityName_Type()
)
sensorProbeTypeSecurityName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeSecurityName.setStatus("mandatory")
_SensorProbeTypeSirenName_Type = DisplayString
_SensorProbeTypeSirenName_Object = MibScalar
sensorProbeTypeSirenName = _SensorProbeTypeSirenName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 12),
    _SensorProbeTypeSirenName_Type()
)
sensorProbeTypeSirenName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeSirenName.setStatus("mandatory")
_SensorProbeTypeRelayName_Type = DisplayString
_SensorProbeTypeRelayName_Object = MibScalar
sensorProbeTypeRelayName = _SensorProbeTypeRelayName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 13),
    _SensorProbeTypeRelayName_Type()
)
sensorProbeTypeRelayName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeRelayName.setStatus("mandatory")
_SensorProbeTypeACvoltageName_Type = DisplayString
_SensorProbeTypeACvoltageName_Object = MibScalar
sensorProbeTypeACvoltageName = _SensorProbeTypeACvoltageName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 14),
    _SensorProbeTypeACvoltageName_Type()
)
sensorProbeTypeACvoltageName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeACvoltageName.setStatus("mandatory")
_SensorProbeTypeADE7763VRMSName_Type = DisplayString
_SensorProbeTypeADE7763VRMSName_Object = MibScalar
sensorProbeTypeADE7763VRMSName = _SensorProbeTypeADE7763VRMSName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 15),
    _SensorProbeTypeADE7763VRMSName_Type()
)
sensorProbeTypeADE7763VRMSName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeADE7763VRMSName.setStatus("mandatory")
_SensorProbeTypeADE7763IRMSName_Type = DisplayString
_SensorProbeTypeADE7763IRMSName_Object = MibScalar
sensorProbeTypeADE7763IRMSName = _SensorProbeTypeADE7763IRMSName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 16),
    _SensorProbeTypeADE7763IRMSName_Type()
)
sensorProbeTypeADE7763IRMSName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeADE7763IRMSName.setStatus("mandatory")
_SensorProbeTypeADE7763WattName_Type = DisplayString
_SensorProbeTypeADE7763WattName_Object = MibScalar
sensorProbeTypeADE7763WattName = _SensorProbeTypeADE7763WattName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 17),
    _SensorProbeTypeADE7763WattName_Type()
)
sensorProbeTypeADE7763WattName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeADE7763WattName.setStatus("mandatory")
_SensorProbeTypeADE7763WatthourName_Type = DisplayString
_SensorProbeTypeADE7763WatthourName_Object = MibScalar
sensorProbeTypeADE7763WatthourName = _SensorProbeTypeADE7763WatthourName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 18),
    _SensorProbeTypeADE7763WatthourName_Type()
)
sensorProbeTypeADE7763WatthourName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeADE7763WatthourName.setStatus("mandatory")
_SensorProbeTypePCF8574XRelayName_Type = DisplayString
_SensorProbeTypePCF8574XRelayName_Object = MibScalar
sensorProbeTypePCF8574XRelayName = _SensorProbeTypePCF8574XRelayName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 19),
    _SensorProbeTypePCF8574XRelayName_Type()
)
sensorProbeTypePCF8574XRelayName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypePCF8574XRelayName.setStatus("mandatory")
_SensorProbeTypeThermocoupleName_Type = DisplayString
_SensorProbeTypeThermocoupleName_Object = MibScalar
sensorProbeTypeThermocoupleName = _SensorProbeTypeThermocoupleName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 20),
    _SensorProbeTypeThermocoupleName_Type()
)
sensorProbeTypeThermocoupleName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeThermocoupleName.setStatus("mandatory")
_SensorProbeTypeSmokeName_Type = DisplayString
_SensorProbeTypeSmokeName_Object = MibScalar
sensorProbeTypeSmokeName = _SensorProbeTypeSmokeName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 21),
    _SensorProbeTypeSmokeName_Type()
)
sensorProbeTypeSmokeName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeSmokeName.setStatus("mandatory")
_SensorProbeTypeXDryName_Type = DisplayString
_SensorProbeTypeXDryName_Object = MibScalar
sensorProbeTypeXDryName = _SensorProbeTypeXDryName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 22),
    _SensorProbeTypeXDryName_Type()
)
sensorProbeTypeXDryName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeXDryName.setStatus("mandatory")
_SensorProbeTypeTemperatureArrayName_Type = DisplayString
_SensorProbeTypeTemperatureArrayName_Object = MibScalar
sensorProbeTypeTemperatureArrayName = _SensorProbeTypeTemperatureArrayName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 23),
    _SensorProbeTypeTemperatureArrayName_Type()
)
sensorProbeTypeTemperatureArrayName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeTemperatureArrayName.setStatus("mandatory")
_SensorProbeTypeWaterRopeName_Type = DisplayString
_SensorProbeTypeWaterRopeName_Object = MibScalar
sensorProbeTypeWaterRopeName = _SensorProbeTypeWaterRopeName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 24),
    _SensorProbeTypeWaterRopeName_Type()
)
sensorProbeTypeWaterRopeName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeWaterRopeName.setStatus("mandatory")
_SensorProbeTypeFuelLevelName_Type = DisplayString
_SensorProbeTypeFuelLevelName_Object = MibScalar
sensorProbeTypeFuelLevelName = _SensorProbeTypeFuelLevelName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 25),
    _SensorProbeTypeFuelLevelName_Type()
)
sensorProbeTypeFuelLevelName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeFuelLevelName.setStatus("mandatory")
_SensorProbeTypeTankSenderName_Type = DisplayString
_SensorProbeTypeTankSenderName_Object = MibScalar
sensorProbeTypeTankSenderName = _SensorProbeTypeTankSenderName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 26),
    _SensorProbeTypeTankSenderName_Type()
)
sensorProbeTypeTankSenderName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeTankSenderName.setStatus("mandatory")
_SensorProbeTypeThurmostatName_Type = DisplayString
_SensorProbeTypeThurmostatName_Object = MibScalar
sensorProbeTypeThurmostatName = _SensorProbeTypeThurmostatName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 128),
    _SensorProbeTypeThurmostatName_Type()
)
sensorProbeTypeThurmostatName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeThurmostatName.setStatus("mandatory")
_SensorProbeTypeVirtualName_Type = DisplayString
_SensorProbeTypeVirtualName_Object = MibScalar
sensorProbeTypeVirtualName = _SensorProbeTypeVirtualName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 129),
    _SensorProbeTypeVirtualName_Type()
)
sensorProbeTypeVirtualName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeVirtualName.setStatus("mandatory")
_SensorProbeTypeSoundName_Type = DisplayString
_SensorProbeTypeSoundName_Object = MibScalar
sensorProbeTypeSoundName = _SensorProbeTypeSoundName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 130),
    _SensorProbeTypeSoundName_Type()
)
sensorProbeTypeSoundName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeSoundName.setStatus("mandatory")
_SensorProbeTypeSoftMotionName_Type = DisplayString
_SensorProbeTypeSoftMotionName_Object = MibScalar
sensorProbeTypeSoftMotionName = _SensorProbeTypeSoftMotionName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 131),
    _SensorProbeTypeSoftMotionName_Type()
)
sensorProbeTypeSoftMotionName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeSoftMotionName.setStatus("mandatory")
_SensorProbeTypeNoSignalName_Type = DisplayString
_SensorProbeTypeNoSignalName_Object = MibScalar
sensorProbeTypeNoSignalName = _SensorProbeTypeNoSignalName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 132),
    _SensorProbeTypeNoSignalName_Type()
)
sensorProbeTypeNoSignalName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeNoSignalName.setStatus("mandatory")
_SensorProbeTypePowerMeterName_Type = DisplayString
_SensorProbeTypePowerMeterName_Object = MibScalar
sensorProbeTypePowerMeterName = _SensorProbeTypePowerMeterName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 134),
    _SensorProbeTypePowerMeterName_Type()
)
sensorProbeTypePowerMeterName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypePowerMeterName.setStatus("mandatory")
_SensorProbeTypeSHT11Name_Type = DisplayString
_SensorProbeTypeSHT11Name_Object = MibScalar
sensorProbeTypeSHT11Name = _SensorProbeTypeSHT11Name_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 135),
    _SensorProbeTypeSHT11Name_Type()
)
sensorProbeTypeSHT11Name.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeSHT11Name.setStatus("mandatory")
_SensorProbeTypeADE7763Name_Type = DisplayString
_SensorProbeTypeADE7763Name_Object = MibScalar
sensorProbeTypeADE7763Name = _SensorProbeTypeADE7763Name_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 118, 136),
    _SensorProbeTypeADE7763Name_Type()
)
sensorProbeTypeADE7763Name.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorProbeTypeADE7763Name.setStatus("mandatory")
_SensorProbeProductRevision_Type = Integer32
_SensorProbeProductRevision_Object = MibScalar
sensorProbeProductRevision = _SensorProbeProductRevision_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 119),
    _SensorProbeProductRevision_Type()
)
sensorProbeProductRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorProbeProductRevision.setStatus("mandatory")
_SensorProbeTraps_ObjectIdentity = ObjectIdentity
sensorProbeTraps = _SensorProbeTraps_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 1, 7)
)


class _SpSensorStatus_Type(Integer32):
    """Custom type spSensorStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7),
          ("turnOff", 9),
          ("turnOn", 8))
    )


_SpSensorStatus_Type.__name__ = "Integer32"
_SpSensorStatus_Object = MibScalar
spSensorStatus = _SpSensorStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 7, 1),
    _SpSensorStatus_Type()
)
spSensorStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spSensorStatus.setStatus("mandatory")
_SpSensorValue_Type = Integer32
_SpSensorValue_Object = MibScalar
spSensorValue = _SpSensorValue_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 7, 2),
    _SpSensorValue_Type()
)
spSensorValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spSensorValue.setStatus("mandatory")
_SpSensorLevelExceeded_Type = Integer32
_SpSensorLevelExceeded_Object = MibScalar
spSensorLevelExceeded = _SpSensorLevelExceeded_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 7, 3),
    _SpSensorLevelExceeded_Type()
)
spSensorLevelExceeded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spSensorLevelExceeded.setStatus("mandatory")
_SpSensorIndex_Type = Integer32
_SpSensorIndex_Object = MibScalar
spSensorIndex = _SpSensorIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 7, 4),
    _SpSensorIndex_Type()
)
spSensorIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spSensorIndex.setStatus("mandatory")
_SpSensorName_Type = DisplayString
_SpSensorName_Object = MibScalar
spSensorName = _SpSensorName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 7, 5),
    _SpSensorName_Type()
)
spSensorName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spSensorName.setStatus("mandatory")
_SpSensorDescription_Type = DisplayString
_SpSensorDescription_Object = MibScalar
spSensorDescription = _SpSensorDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 7, 6),
    _SpSensorDescription_Type()
)
spSensorDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spSensorDescription.setStatus("mandatory")
_SpSensorProbeKeepAlive_Type = Integer32
_SpSensorProbeKeepAlive_Object = MibScalar
spSensorProbeKeepAlive = _SpSensorProbeKeepAlive_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 7, 7),
    _SpSensorProbeKeepAlive_Type()
)
spSensorProbeKeepAlive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spSensorProbeKeepAlive.setStatus("mandatory")


class _SpSensorType_Type(Integer32):
    """Custom type spSensorType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              8,
              9,
              10,
              12,
              13,
              14,
              16,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              32,
              33,
              34,
              35,
              36,
              128,
              129,
              132,
              134)
        )
    )
    namedValues = NamedValues(
        *(("airflow", 8),
          ("atod", 5),
          ("dryContact", 10),
          ("extradrycontact", 16),
          ("fourTo20mA", 2),
          ("fuellevel", 35),
          ("humidity", 3),
          ("irms", 26),
          ("motion", 14),
          ("nosignal", 132),
          ("power", 25),
          ("powermeter", 134),
          ("relay", 13),
          ("relayarray", 29),
          ("security", 6),
          ("siren", 9),
          ("smoke", 24),
          ("softwaremotion", 129),
          ("sound", 128),
          ("tanksender", 36),
          ("temperature", 1),
          ("temperaturearray", 33),
          ("thermostat", 23),
          ("virtual", 30),
          ("voltage", 12),
          ("vrms", 27),
          ("water", 4),
          ("waterrope", 34),
          ("watt", 28),
          ("watthour", 32))
    )


_SpSensorType_Type.__name__ = "Integer32"
_SpSensorType_Object = MibScalar
spSensorType = _SpSensorType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 7, 8),
    _SpSensorType_Type()
)
spSensorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spSensorType.setStatus("mandatory")
_SpSensorStatusName_Type = DisplayString
_SpSensorStatusName_Object = MibScalar
spSensorStatusName = _SpSensorStatusName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 7, 9),
    _SpSensorStatusName_Type()
)
spSensorStatusName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spSensorStatusName.setStatus("mandatory")
_SpSensorSubIndex_Type = Integer32
_SpSensorSubIndex_Object = MibScalar
spSensorSubIndex = _SpSensorSubIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 7, 10),
    _SpSensorSubIndex_Type()
)
spSensorSubIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spSensorSubIndex.setStatus("mandatory")
_SpBoardIndex_Type = Integer32
_SpBoardIndex_Object = MibScalar
spBoardIndex = _SpBoardIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 7, 11),
    _SpBoardIndex_Type()
)
spBoardIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spBoardIndex.setStatus("mandatory")
_SpBoardDescription_Type = DisplayString
_SpBoardDescription_Object = MibScalar
spBoardDescription = _SpBoardDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 7, 12),
    _SpBoardDescription_Type()
)
spBoardDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spBoardDescription.setStatus("mandatory")
_SpEventTimeStamp_Type = DisplayString
_SpEventTimeStamp_Object = MibScalar
spEventTimeStamp = _SpEventTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 7, 13),
    _SpEventTimeStamp_Type()
)
spEventTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spEventTimeStamp.setStatus("mandatory")
_SpEventClassNumber_Type = Integer32
_SpEventClassNumber_Object = MibScalar
spEventClassNumber = _SpEventClassNumber_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 7, 14),
    _SpEventClassNumber_Type()
)
spEventClassNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spEventClassNumber.setStatus("mandatory")
_SpEventClassName_Type = DisplayString
_SpEventClassName_Object = MibScalar
spEventClassName = _SpEventClassName_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 7, 15),
    _SpEventClassName_Type()
)
spEventClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spEventClassName.setStatus("mandatory")
_SpSensorDecimalValue_Type = DisplayString
_SpSensorDecimalValue_Object = MibScalar
spSensorDecimalValue = _SpSensorDecimalValue_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 7, 16),
    _SpSensorDecimalValue_Type()
)
spSensorDecimalValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spSensorDecimalValue.setStatus("mandatory")
_SpSensorAliveHigh_Type = Integer32
_SpSensorAliveHigh_Object = MibScalar
spSensorAliveHigh = _SpSensorAliveHigh_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 7, 17),
    _SpSensorAliveHigh_Type()
)
spSensorAliveHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spSensorAliveHigh.setStatus("mandatory")
_SpSensorAliveLow_Type = Integer32
_SpSensorAliveLow_Object = MibScalar
spSensorAliveLow = _SpSensorAliveLow_Object(
    (1, 3, 6, 1, 4, 1, 3854, 1, 7, 18),
    _SpSensorAliveLow_Type()
)
spSensorAliveLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spSensorAliveLow.setStatus("mandatory")
_SecurityProbe_ObjectIdentity = ObjectIdentity
securityProbe = _SecurityProbe_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 2)
)
_SecSummary_ObjectIdentity = ObjectIdentity
secSummary = _SecSummary_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 2, 1)
)
_SecDevice_ObjectIdentity = ObjectIdentity
secDevice = _SecDevice_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2)
)
_DeviceTable_Object = MibTable
deviceTable = _DeviceTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 1)
)
if mibBuilder.loadTexts:
    deviceTable.setStatus("mandatory")
_DeviceEntry_Object = MibTableRow
deviceEntry = _DeviceEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 1, 1)
)
deviceEntry.setIndexNames(
    (0, "SPAGENT-MIB", "deviceIndex"),
)
if mibBuilder.loadTexts:
    deviceEntry.setStatus("mandatory")


class _DeviceIndex_Type(Integer32):
    """Custom type deviceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 184549375),
    )


_DeviceIndex_Type.__name__ = "Integer32"
_DeviceIndex_Object = MibTableColumn
deviceIndex = _DeviceIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 1, 1, 1),
    _DeviceIndex_Type()
)
deviceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deviceIndex.setStatus("mandatory")
_DeviceDescription_Type = DisplayString
_DeviceDescription_Object = MibTableColumn
deviceDescription = _DeviceDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 1, 1, 2),
    _DeviceDescription_Type()
)
deviceDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deviceDescription.setStatus("mandatory")
_DeviceType_Type = Integer32
_DeviceType_Object = MibTableColumn
deviceType = _DeviceType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 1, 1, 3),
    _DeviceType_Type()
)
deviceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deviceType.setStatus("mandatory")
_DeviceInfo_Type = DisplayString
_DeviceInfo_Object = MibTableColumn
deviceInfo = _DeviceInfo_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 1, 1, 4),
    _DeviceInfo_Type()
)
deviceInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deviceInfo.setStatus("mandatory")
_DeviceStatus_Type = Integer32
_DeviceStatus_Object = MibTableColumn
deviceStatus = _DeviceStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 1, 1, 5),
    _DeviceStatus_Type()
)
deviceStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deviceStatus.setStatus("mandatory")
_DeviceIntelligentTable_Object = MibTable
deviceIntelligentTable = _DeviceIntelligentTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 2)
)
if mibBuilder.loadTexts:
    deviceIntelligentTable.setStatus("mandatory")
_DeviceIntelligentEntry_Object = MibTableRow
deviceIntelligentEntry = _DeviceIntelligentEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 2, 1)
)
deviceIntelligentEntry.setIndexNames(
    (0, "SPAGENT-MIB", "deviceIntelligentIndex"),
)
if mibBuilder.loadTexts:
    deviceIntelligentEntry.setStatus("mandatory")


class _DeviceIntelligentIndex_Type(Integer32):
    """Custom type deviceIntelligentIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_DeviceIntelligentIndex_Type.__name__ = "Integer32"
_DeviceIntelligentIndex_Object = MibTableColumn
deviceIntelligentIndex = _DeviceIntelligentIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 2, 1, 1),
    _DeviceIntelligentIndex_Type()
)
deviceIntelligentIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deviceIntelligentIndex.setStatus("mandatory")
_DeviceIntelligentDescription_Type = DisplayString
_DeviceIntelligentDescription_Object = MibTableColumn
deviceIntelligentDescription = _DeviceIntelligentDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 2, 1, 2),
    _DeviceIntelligentDescription_Type()
)
deviceIntelligentDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deviceIntelligentDescription.setStatus("mandatory")
_DeviceIntelligentInfo_Type = DisplayString
_DeviceIntelligentInfo_Object = MibTableColumn
deviceIntelligentInfo = _DeviceIntelligentInfo_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 2, 1, 4),
    _DeviceIntelligentInfo_Type()
)
deviceIntelligentInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deviceIntelligentInfo.setStatus("mandatory")
_DeviceIntelligentStatus_Type = Integer32
_DeviceIntelligentStatus_Object = MibTableColumn
deviceIntelligentStatus = _DeviceIntelligentStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 2, 1, 5),
    _DeviceIntelligentStatus_Type()
)
deviceIntelligentStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deviceIntelligentStatus.setStatus("mandatory")
_SensorIntelligentTypeSelected_Type = Integer32
_SensorIntelligentTypeSelected_Object = MibTableColumn
sensorIntelligentTypeSelected = _SensorIntelligentTypeSelected_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 2, 1, 6),
    _SensorIntelligentTypeSelected_Type()
)
sensorIntelligentTypeSelected.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorIntelligentTypeSelected.setStatus("mandatory")


class _SensorIntelligentPort1GoOnline_Type(Integer32):
    """Custom type sensorIntelligentPort1GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorIntelligentPort1GoOnline_Type.__name__ = "Integer32"
_SensorIntelligentPort1GoOnline_Object = MibTableColumn
sensorIntelligentPort1GoOnline = _SensorIntelligentPort1GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 2, 1, 100),
    _SensorIntelligentPort1GoOnline_Type()
)
sensorIntelligentPort1GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorIntelligentPort1GoOnline.setStatus("mandatory")


class _SensorIntelligentPort2GoOnline_Type(Integer32):
    """Custom type sensorIntelligentPort2GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorIntelligentPort2GoOnline_Type.__name__ = "Integer32"
_SensorIntelligentPort2GoOnline_Object = MibTableColumn
sensorIntelligentPort2GoOnline = _SensorIntelligentPort2GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 2, 1, 101),
    _SensorIntelligentPort2GoOnline_Type()
)
sensorIntelligentPort2GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorIntelligentPort2GoOnline.setStatus("mandatory")


class _SensorIntelligentPort3GoOnline_Type(Integer32):
    """Custom type sensorIntelligentPort3GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorIntelligentPort3GoOnline_Type.__name__ = "Integer32"
_SensorIntelligentPort3GoOnline_Object = MibTableColumn
sensorIntelligentPort3GoOnline = _SensorIntelligentPort3GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 2, 1, 102),
    _SensorIntelligentPort3GoOnline_Type()
)
sensorIntelligentPort3GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorIntelligentPort3GoOnline.setStatus("mandatory")


class _SensorIntelligentPort4GoOnline_Type(Integer32):
    """Custom type sensorIntelligentPort4GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorIntelligentPort4GoOnline_Type.__name__ = "Integer32"
_SensorIntelligentPort4GoOnline_Object = MibTableColumn
sensorIntelligentPort4GoOnline = _SensorIntelligentPort4GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 2, 1, 103),
    _SensorIntelligentPort4GoOnline_Type()
)
sensorIntelligentPort4GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorIntelligentPort4GoOnline.setStatus("mandatory")


class _SensorIntelligentPort5GoOnline_Type(Integer32):
    """Custom type sensorIntelligentPort5GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorIntelligentPort5GoOnline_Type.__name__ = "Integer32"
_SensorIntelligentPort5GoOnline_Object = MibTableColumn
sensorIntelligentPort5GoOnline = _SensorIntelligentPort5GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 2, 1, 104),
    _SensorIntelligentPort5GoOnline_Type()
)
sensorIntelligentPort5GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorIntelligentPort5GoOnline.setStatus("mandatory")


class _SensorIntelligentPort6GoOnline_Type(Integer32):
    """Custom type sensorIntelligentPort6GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorIntelligentPort6GoOnline_Type.__name__ = "Integer32"
_SensorIntelligentPort6GoOnline_Object = MibTableColumn
sensorIntelligentPort6GoOnline = _SensorIntelligentPort6GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 2, 1, 105),
    _SensorIntelligentPort6GoOnline_Type()
)
sensorIntelligentPort6GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorIntelligentPort6GoOnline.setStatus("mandatory")


class _SensorIntelligentPort7GoOnline_Type(Integer32):
    """Custom type sensorIntelligentPort7GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorIntelligentPort7GoOnline_Type.__name__ = "Integer32"
_SensorIntelligentPort7GoOnline_Object = MibTableColumn
sensorIntelligentPort7GoOnline = _SensorIntelligentPort7GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 2, 1, 106),
    _SensorIntelligentPort7GoOnline_Type()
)
sensorIntelligentPort7GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorIntelligentPort7GoOnline.setStatus("mandatory")


class _SensorIntelligentPort8GoOnline_Type(Integer32):
    """Custom type sensorIntelligentPort8GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorIntelligentPort8GoOnline_Type.__name__ = "Integer32"
_SensorIntelligentPort8GoOnline_Object = MibTableColumn
sensorIntelligentPort8GoOnline = _SensorIntelligentPort8GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 2, 1, 107),
    _SensorIntelligentPort8GoOnline_Type()
)
sensorIntelligentPort8GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorIntelligentPort8GoOnline.setStatus("mandatory")
_DeviceDryContactTable_Object = MibTable
deviceDryContactTable = _DeviceDryContactTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3)
)
if mibBuilder.loadTexts:
    deviceDryContactTable.setStatus("mandatory")
_DeviceDryContactEntry_Object = MibTableRow
deviceDryContactEntry = _DeviceDryContactEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3, 1)
)
deviceDryContactEntry.setIndexNames(
    (0, "SPAGENT-MIB", "deviceDryContactIndex"),
)
if mibBuilder.loadTexts:
    deviceDryContactEntry.setStatus("mandatory")


class _DeviceDryContactIndex_Type(Integer32):
    """Custom type deviceDryContactIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_DeviceDryContactIndex_Type.__name__ = "Integer32"
_DeviceDryContactIndex_Object = MibTableColumn
deviceDryContactIndex = _DeviceDryContactIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3, 1, 1),
    _DeviceDryContactIndex_Type()
)
deviceDryContactIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deviceDryContactIndex.setStatus("mandatory")
_DeviceDryContactDescription_Type = DisplayString
_DeviceDryContactDescription_Object = MibTableColumn
deviceDryContactDescription = _DeviceDryContactDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3, 1, 2),
    _DeviceDryContactDescription_Type()
)
deviceDryContactDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deviceDryContactDescription.setStatus("mandatory")
_DeviceDryContactInfo_Type = DisplayString
_DeviceDryContactInfo_Object = MibTableColumn
deviceDryContactInfo = _DeviceDryContactInfo_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3, 1, 4),
    _DeviceDryContactInfo_Type()
)
deviceDryContactInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deviceDryContactInfo.setStatus("mandatory")
_DeviceDryContactStatus_Type = Integer32
_DeviceDryContactStatus_Object = MibTableColumn
deviceDryContactStatus = _DeviceDryContactStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3, 1, 5),
    _DeviceDryContactStatus_Type()
)
deviceDryContactStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deviceDryContactStatus.setStatus("mandatory")


class _SensorDryContactPort1GoOnline_Type(Integer32):
    """Custom type sensorDryContactPort1GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorDryContactPort1GoOnline_Type.__name__ = "Integer32"
_SensorDryContactPort1GoOnline_Object = MibTableColumn
sensorDryContactPort1GoOnline = _SensorDryContactPort1GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3, 1, 100),
    _SensorDryContactPort1GoOnline_Type()
)
sensorDryContactPort1GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactPort1GoOnline.setStatus("mandatory")


class _SensorDryContactPort2GoOnline_Type(Integer32):
    """Custom type sensorDryContactPort2GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorDryContactPort2GoOnline_Type.__name__ = "Integer32"
_SensorDryContactPort2GoOnline_Object = MibTableColumn
sensorDryContactPort2GoOnline = _SensorDryContactPort2GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3, 1, 101),
    _SensorDryContactPort2GoOnline_Type()
)
sensorDryContactPort2GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactPort2GoOnline.setStatus("mandatory")


class _SensorDryContactPort3GoOnline_Type(Integer32):
    """Custom type sensorDryContactPort3GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorDryContactPort3GoOnline_Type.__name__ = "Integer32"
_SensorDryContactPort3GoOnline_Object = MibTableColumn
sensorDryContactPort3GoOnline = _SensorDryContactPort3GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3, 1, 102),
    _SensorDryContactPort3GoOnline_Type()
)
sensorDryContactPort3GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactPort3GoOnline.setStatus("mandatory")


class _SensorDryContactPort4GoOnline_Type(Integer32):
    """Custom type sensorDryContactPort4GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorDryContactPort4GoOnline_Type.__name__ = "Integer32"
_SensorDryContactPort4GoOnline_Object = MibTableColumn
sensorDryContactPort4GoOnline = _SensorDryContactPort4GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3, 1, 103),
    _SensorDryContactPort4GoOnline_Type()
)
sensorDryContactPort4GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactPort4GoOnline.setStatus("mandatory")


class _SensorDryContactPort5GoOnline_Type(Integer32):
    """Custom type sensorDryContactPort5GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorDryContactPort5GoOnline_Type.__name__ = "Integer32"
_SensorDryContactPort5GoOnline_Object = MibTableColumn
sensorDryContactPort5GoOnline = _SensorDryContactPort5GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3, 1, 104),
    _SensorDryContactPort5GoOnline_Type()
)
sensorDryContactPort5GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactPort5GoOnline.setStatus("mandatory")


class _SensorDryContactPort6GoOnline_Type(Integer32):
    """Custom type sensorDryContactPort6GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorDryContactPort6GoOnline_Type.__name__ = "Integer32"
_SensorDryContactPort6GoOnline_Object = MibTableColumn
sensorDryContactPort6GoOnline = _SensorDryContactPort6GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3, 1, 105),
    _SensorDryContactPort6GoOnline_Type()
)
sensorDryContactPort6GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactPort6GoOnline.setStatus("mandatory")


class _SensorDryContactPort7GoOnline_Type(Integer32):
    """Custom type sensorDryContactPort7GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorDryContactPort7GoOnline_Type.__name__ = "Integer32"
_SensorDryContactPort7GoOnline_Object = MibTableColumn
sensorDryContactPort7GoOnline = _SensorDryContactPort7GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3, 1, 106),
    _SensorDryContactPort7GoOnline_Type()
)
sensorDryContactPort7GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactPort7GoOnline.setStatus("mandatory")


class _SensorDryContactPort8GoOnline_Type(Integer32):
    """Custom type sensorDryContactPort8GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorDryContactPort8GoOnline_Type.__name__ = "Integer32"
_SensorDryContactPort8GoOnline_Object = MibTableColumn
sensorDryContactPort8GoOnline = _SensorDryContactPort8GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3, 1, 107),
    _SensorDryContactPort8GoOnline_Type()
)
sensorDryContactPort8GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactPort8GoOnline.setStatus("mandatory")


class _SensorDryContactPort9GoOnline_Type(Integer32):
    """Custom type sensorDryContactPort9GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorDryContactPort9GoOnline_Type.__name__ = "Integer32"
_SensorDryContactPort9GoOnline_Object = MibTableColumn
sensorDryContactPort9GoOnline = _SensorDryContactPort9GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3, 1, 108),
    _SensorDryContactPort9GoOnline_Type()
)
sensorDryContactPort9GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactPort9GoOnline.setStatus("mandatory")


class _SensorDryContactPort10GoOnline_Type(Integer32):
    """Custom type sensorDryContactPort10GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorDryContactPort10GoOnline_Type.__name__ = "Integer32"
_SensorDryContactPort10GoOnline_Object = MibTableColumn
sensorDryContactPort10GoOnline = _SensorDryContactPort10GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3, 1, 109),
    _SensorDryContactPort10GoOnline_Type()
)
sensorDryContactPort10GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactPort10GoOnline.setStatus("mandatory")


class _SensorDryContactPort11GoOnline_Type(Integer32):
    """Custom type sensorDryContactPort11GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorDryContactPort11GoOnline_Type.__name__ = "Integer32"
_SensorDryContactPort11GoOnline_Object = MibTableColumn
sensorDryContactPort11GoOnline = _SensorDryContactPort11GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3, 1, 110),
    _SensorDryContactPort11GoOnline_Type()
)
sensorDryContactPort11GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactPort11GoOnline.setStatus("mandatory")


class _SensorDryContactPort12GoOnline_Type(Integer32):
    """Custom type sensorDryContactPort12GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorDryContactPort12GoOnline_Type.__name__ = "Integer32"
_SensorDryContactPort12GoOnline_Object = MibTableColumn
sensorDryContactPort12GoOnline = _SensorDryContactPort12GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3, 1, 111),
    _SensorDryContactPort12GoOnline_Type()
)
sensorDryContactPort12GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactPort12GoOnline.setStatus("mandatory")


class _SensorDryContactPort13GoOnline_Type(Integer32):
    """Custom type sensorDryContactPort13GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorDryContactPort13GoOnline_Type.__name__ = "Integer32"
_SensorDryContactPort13GoOnline_Object = MibTableColumn
sensorDryContactPort13GoOnline = _SensorDryContactPort13GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3, 1, 112),
    _SensorDryContactPort13GoOnline_Type()
)
sensorDryContactPort13GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactPort13GoOnline.setStatus("mandatory")


class _SensorDryContactPort14GoOnline_Type(Integer32):
    """Custom type sensorDryContactPort14GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorDryContactPort14GoOnline_Type.__name__ = "Integer32"
_SensorDryContactPort14GoOnline_Object = MibTableColumn
sensorDryContactPort14GoOnline = _SensorDryContactPort14GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3, 1, 113),
    _SensorDryContactPort14GoOnline_Type()
)
sensorDryContactPort14GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactPort14GoOnline.setStatus("mandatory")


class _SensorDryContactPort15GoOnline_Type(Integer32):
    """Custom type sensorDryContactPort15GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorDryContactPort15GoOnline_Type.__name__ = "Integer32"
_SensorDryContactPort15GoOnline_Object = MibTableColumn
sensorDryContactPort15GoOnline = _SensorDryContactPort15GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3, 1, 114),
    _SensorDryContactPort15GoOnline_Type()
)
sensorDryContactPort15GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactPort15GoOnline.setStatus("mandatory")


class _SensorDryContactPort16GoOnline_Type(Integer32):
    """Custom type sensorDryContactPort16GoOnline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("goOnline", 1))
    )


_SensorDryContactPort16GoOnline_Type.__name__ = "Integer32"
_SensorDryContactPort16GoOnline_Object = MibTableColumn
sensorDryContactPort16GoOnline = _SensorDryContactPort16GoOnline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 2, 3, 1, 115),
    _SensorDryContactPort16GoOnline_Type()
)
sensorDryContactPort16GoOnline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactPort16GoOnline.setStatus("mandatory")
_SecSensor_ObjectIdentity = ObjectIdentity
secSensor = _SecSensor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3)
)
_SensorTable_Object = MibTable
sensorTable = _SensorTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1)
)
if mibBuilder.loadTexts:
    sensorTable.setStatus("mandatory")
_SensorEntry_Object = MibTableRow
sensorEntry = _SensorEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1)
)
sensorEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorIndex"),
)
if mibBuilder.loadTexts:
    sensorEntry.setStatus("mandatory")


class _SensorIndex_Type(Integer32):
    """Custom type sensorIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SensorIndex_Type.__name__ = "Integer32"
_SensorIndex_Object = MibTableColumn
sensorIndex = _SensorIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 1),
    _SensorIndex_Type()
)
sensorIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorIndex.setStatus("mandatory")
_SensorDescription_Type = DisplayString
_SensorDescription_Object = MibTableColumn
sensorDescription = _SensorDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 2),
    _SensorDescription_Type()
)
sensorDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDescription.setStatus("mandatory")


class _SensorType_Type(Integer32):
    """Custom type sensorType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              128,
              129,
              130,
              131,
              132,
              133,
              224,
              255)
        )
    )
    namedValues = NamedValues(
        *(("acvoltage", 14),
          ("airflow", 6),
          ("board-state", 133),
          ("camera-dummy", 132),
          ("dcvoltage", 5),
          ("drycontact", 8),
          ("drycontact-array", 22),
          ("four-20mA", 4),
          ("humidity", 2),
          ("io", 7),
          ("irms", 16),
          ("motion", 9),
          ("nosignal", 224),
          ("relay", 13),
          ("security", 11),
          ("siren", 12),
          ("smoke", 21),
          ("softmotion", 131),
          ("sound", 130),
          ("temperature", 1),
          ("temperature-array", 23),
          ("temperature2", 3),
          ("test", 255),
          ("thermocouple", 20),
          ("thermostat", 128),
          ("virtual", 129),
          ("vrms", 15),
          ("water", 10),
          ("watt", 17),
          ("watthour", 18),
          ("xrelay", 19))
    )


_SensorType_Type.__name__ = "Integer32"
_SensorType_Object = MibTableColumn
sensorType = _SensorType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 3),
    _SensorType_Type()
)
sensorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorType.setStatus("mandatory")
_SensorValue_Type = Integer32
_SensorValue_Object = MibTableColumn
sensorValue = _SensorValue_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 4),
    _SensorValue_Type()
)
sensorValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorValue.setStatus("mandatory")
_SensorUnit_Type = DisplayString
_SensorUnit_Object = MibTableColumn
sensorUnit = _SensorUnit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 5),
    _SensorUnit_Type()
)
sensorUnit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorUnit.setStatus("mandatory")


class _SensorStatus_Type(Integer32):
    """Custom type sensorStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorStatus_Type.__name__ = "Integer32"
_SensorStatus_Object = MibTableColumn
sensorStatus = _SensorStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 6),
    _SensorStatus_Type()
)
sensorStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorStatus.setStatus("mandatory")


class _SensorGoOffline_Type(Integer32):
    """Custom type sensorGoOffline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("online", 1))
    )


_SensorGoOffline_Type.__name__ = "Integer32"
_SensorGoOffline_Object = MibTableColumn
sensorGoOffline = _SensorGoOffline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 8),
    _SensorGoOffline_Type()
)
sensorGoOffline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorGoOffline.setStatus("mandatory")


class _SensorPort_Type(Integer32):
    """Custom type sensorPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorPort_Type.__name__ = "Integer32"
_SensorPort_Object = MibTableColumn
sensorPort = _SensorPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 35),
    _SensorPort_Type()
)
sensorPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorPort.setStatus("mandatory")


class _SensorSubPort_Type(Integer32):
    """Custom type sensorSubPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorSubPort_Type.__name__ = "Integer32"
_SensorSubPort_Object = MibTableColumn
sensorSubPort = _SensorSubPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 36),
    _SensorSubPort_Type()
)
sensorSubPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorSubPort.setStatus("mandatory")


class _SensorDeviceIndex_Type(Integer32):
    """Custom type sensorDeviceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorDeviceIndex_Type.__name__ = "Integer32"
_SensorDeviceIndex_Object = MibTableColumn
sensorDeviceIndex = _SensorDeviceIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 37),
    _SensorDeviceIndex_Type()
)
sensorDeviceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorDeviceIndex.setStatus("mandatory")


class _SensorDisplayStyle_Type(Integer32):
    """Custom type sensorDisplayStyle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("basic", 0),
          ("gauge", 1))
    )


_SensorDisplayStyle_Type.__name__ = "Integer32"
_SensorDisplayStyle_Object = MibTableColumn
sensorDisplayStyle = _SensorDisplayStyle_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 45),
    _SensorDisplayStyle_Type()
)
sensorDisplayStyle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDisplayStyle.setStatus("mandatory")
_SensorHighCriticalDescription_Type = DisplayString
_SensorHighCriticalDescription_Object = MibTableColumn
sensorHighCriticalDescription = _SensorHighCriticalDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 46),
    _SensorHighCriticalDescription_Type()
)
sensorHighCriticalDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHighCriticalDescription.setStatus("mandatory")
_SensorLowCriticalDescription_Type = DisplayString
_SensorLowCriticalDescription_Object = MibTableColumn
sensorLowCriticalDescription = _SensorLowCriticalDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 47),
    _SensorLowCriticalDescription_Type()
)
sensorLowCriticalDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorLowCriticalDescription.setStatus("mandatory")
_SensorNormalDescription_Type = DisplayString
_SensorNormalDescription_Object = MibTableColumn
sensorNormalDescription = _SensorNormalDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 48),
    _SensorNormalDescription_Type()
)
sensorNormalDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorNormalDescription.setStatus("mandatory")
_SensorLowWarningDescription_Type = DisplayString
_SensorLowWarningDescription_Object = MibTableColumn
sensorLowWarningDescription = _SensorLowWarningDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 49),
    _SensorLowWarningDescription_Type()
)
sensorLowWarningDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorLowWarningDescription.setStatus("mandatory")
_SensorHighWarningDescription_Type = DisplayString
_SensorHighWarningDescription_Object = MibTableColumn
sensorHighWarningDescription = _SensorHighWarningDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 50),
    _SensorHighWarningDescription_Type()
)
sensorHighWarningDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHighWarningDescription.setStatus("mandatory")
_SensorErrorDescription_Type = DisplayString
_SensorErrorDescription_Object = MibTableColumn
sensorErrorDescription = _SensorErrorDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 51),
    _SensorErrorDescription_Type()
)
sensorErrorDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorErrorDescription.setStatus("mandatory")
_SensorOnDescription_Type = DisplayString
_SensorOnDescription_Object = MibTableColumn
sensorOnDescription = _SensorOnDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 52),
    _SensorOnDescription_Type()
)
sensorOnDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorOnDescription.setStatus("mandatory")
_SensorOffDescription_Type = DisplayString
_SensorOffDescription_Object = MibTableColumn
sensorOffDescription = _SensorOffDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 53),
    _SensorOffDescription_Type()
)
sensorOffDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorOffDescription.setStatus("mandatory")
_SensorHighCriticalColor_Type = Integer32
_SensorHighCriticalColor_Object = MibTableColumn
sensorHighCriticalColor = _SensorHighCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 54),
    _SensorHighCriticalColor_Type()
)
sensorHighCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHighCriticalColor.setStatus("mandatory")
_SensorLowCriticalColor_Type = Integer32
_SensorLowCriticalColor_Object = MibTableColumn
sensorLowCriticalColor = _SensorLowCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 55),
    _SensorLowCriticalColor_Type()
)
sensorLowCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorLowCriticalColor.setStatus("mandatory")
_SensorNormalColor_Type = Integer32
_SensorNormalColor_Object = MibTableColumn
sensorNormalColor = _SensorNormalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 56),
    _SensorNormalColor_Type()
)
sensorNormalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorNormalColor.setStatus("mandatory")
_SensorLowWarningColor_Type = Integer32
_SensorLowWarningColor_Object = MibTableColumn
sensorLowWarningColor = _SensorLowWarningColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 57),
    _SensorLowWarningColor_Type()
)
sensorLowWarningColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorLowWarningColor.setStatus("mandatory")
_SensorHighWarningColor_Type = Integer32
_SensorHighWarningColor_Object = MibTableColumn
sensorHighWarningColor = _SensorHighWarningColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 58),
    _SensorHighWarningColor_Type()
)
sensorHighWarningColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHighWarningColor.setStatus("mandatory")
_SensorErrorColor_Type = Integer32
_SensorErrorColor_Object = MibTableColumn
sensorErrorColor = _SensorErrorColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 59),
    _SensorErrorColor_Type()
)
sensorErrorColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorErrorColor.setStatus("mandatory")
_SensorOnColor_Type = Integer32
_SensorOnColor_Object = MibTableColumn
sensorOnColor = _SensorOnColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 60),
    _SensorOnColor_Type()
)
sensorOnColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorOnColor.setStatus("mandatory")
_SensorOffColor_Type = Integer32
_SensorOffColor_Object = MibTableColumn
sensorOffColor = _SensorOffColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 1, 1, 61),
    _SensorOffColor_Type()
)
sensorOffColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorOffColor.setStatus("mandatory")
_SensorTemperatureTable_Object = MibTable
sensorTemperatureTable = _SensorTemperatureTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2)
)
if mibBuilder.loadTexts:
    sensorTemperatureTable.setStatus("mandatory")
_SensorTemperatureEntry_Object = MibTableRow
sensorTemperatureEntry = _SensorTemperatureEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1)
)
sensorTemperatureEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorTemperatureIndex"),
)
if mibBuilder.loadTexts:
    sensorTemperatureEntry.setStatus("mandatory")


class _SensorTemperatureIndex_Type(Integer32):
    """Custom type sensorTemperatureIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SensorTemperatureIndex_Type.__name__ = "Integer32"
_SensorTemperatureIndex_Object = MibTableColumn
sensorTemperatureIndex = _SensorTemperatureIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 1),
    _SensorTemperatureIndex_Type()
)
sensorTemperatureIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorTemperatureIndex.setStatus("mandatory")
_SensorTemperatureDescription_Type = DisplayString
_SensorTemperatureDescription_Object = MibTableColumn
sensorTemperatureDescription = _SensorTemperatureDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 2),
    _SensorTemperatureDescription_Type()
)
sensorTemperatureDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureDescription.setStatus("mandatory")


class _SensorTemperatureType_Type(Integer32):
    """Custom type sensorTemperatureType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              20)
        )
    )
    namedValues = NamedValues(
        *(("dualsensor", 3),
          ("temperature", 1),
          ("thermocouple", 20))
    )


_SensorTemperatureType_Type.__name__ = "Integer32"
_SensorTemperatureType_Object = MibTableColumn
sensorTemperatureType = _SensorTemperatureType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 3),
    _SensorTemperatureType_Type()
)
sensorTemperatureType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorTemperatureType.setStatus("mandatory")
_SensorTemperatureDegree_Type = Integer32
_SensorTemperatureDegree_Object = MibTableColumn
sensorTemperatureDegree = _SensorTemperatureDegree_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 4),
    _SensorTemperatureDegree_Type()
)
sensorTemperatureDegree.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorTemperatureDegree.setStatus("mandatory")
_SensorTemperatureUnit_Type = DisplayString
_SensorTemperatureUnit_Object = MibTableColumn
sensorTemperatureUnit = _SensorTemperatureUnit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 5),
    _SensorTemperatureUnit_Type()
)
sensorTemperatureUnit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorTemperatureUnit.setStatus("mandatory")


class _SensorTemperatureStatus_Type(Integer32):
    """Custom type sensorTemperatureStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorTemperatureStatus_Type.__name__ = "Integer32"
_SensorTemperatureStatus_Object = MibTableColumn
sensorTemperatureStatus = _SensorTemperatureStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 6),
    _SensorTemperatureStatus_Type()
)
sensorTemperatureStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorTemperatureStatus.setStatus("mandatory")


class _SensorTemperatureGoOffline_Type(Integer32):
    """Custom type sensorTemperatureGoOffline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("online", 1))
    )


_SensorTemperatureGoOffline_Type.__name__ = "Integer32"
_SensorTemperatureGoOffline_Object = MibTableColumn
sensorTemperatureGoOffline = _SensorTemperatureGoOffline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 8),
    _SensorTemperatureGoOffline_Type()
)
sensorTemperatureGoOffline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureGoOffline.setStatus("mandatory")
_SensorTemperatureLowCritical_Type = Integer32
_SensorTemperatureLowCritical_Object = MibTableColumn
sensorTemperatureLowCritical = _SensorTemperatureLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 9),
    _SensorTemperatureLowCritical_Type()
)
sensorTemperatureLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureLowCritical.setStatus("mandatory")
_SensorTemperatureLowWarning_Type = Integer32
_SensorTemperatureLowWarning_Object = MibTableColumn
sensorTemperatureLowWarning = _SensorTemperatureLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 10),
    _SensorTemperatureLowWarning_Type()
)
sensorTemperatureLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureLowWarning.setStatus("mandatory")
_SensorTemperatureHighWarning_Type = Integer32
_SensorTemperatureHighWarning_Object = MibTableColumn
sensorTemperatureHighWarning = _SensorTemperatureHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 11),
    _SensorTemperatureHighWarning_Type()
)
sensorTemperatureHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureHighWarning.setStatus("mandatory")
_SensorTemperatureHighCritical_Type = Integer32
_SensorTemperatureHighCritical_Object = MibTableColumn
sensorTemperatureHighCritical = _SensorTemperatureHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 12),
    _SensorTemperatureHighCritical_Type()
)
sensorTemperatureHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureHighCritical.setStatus("mandatory")
_SensorTemperatureRearm_Type = Integer32
_SensorTemperatureRearm_Object = MibTableColumn
sensorTemperatureRearm = _SensorTemperatureRearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 13),
    _SensorTemperatureRearm_Type()
)
sensorTemperatureRearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureRearm.setStatus("mandatory")


class _SensorTemperatureDelayError_Type(Integer32):
    """Custom type sensorTemperatureDelayError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorTemperatureDelayError_Type.__name__ = "Integer32"
_SensorTemperatureDelayError_Object = MibTableColumn
sensorTemperatureDelayError = _SensorTemperatureDelayError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 14),
    _SensorTemperatureDelayError_Type()
)
sensorTemperatureDelayError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureDelayError.setStatus("mandatory")


class _SensorTemperatureDelayNormal_Type(Integer32):
    """Custom type sensorTemperatureDelayNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorTemperatureDelayNormal_Type.__name__ = "Integer32"
_SensorTemperatureDelayNormal_Object = MibTableColumn
sensorTemperatureDelayNormal = _SensorTemperatureDelayNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 15),
    _SensorTemperatureDelayNormal_Type()
)
sensorTemperatureDelayNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureDelayNormal.setStatus("mandatory")


class _SensorTemperatureDelayLowCritical_Type(Integer32):
    """Custom type sensorTemperatureDelayLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorTemperatureDelayLowCritical_Type.__name__ = "Integer32"
_SensorTemperatureDelayLowCritical_Object = MibTableColumn
sensorTemperatureDelayLowCritical = _SensorTemperatureDelayLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 16),
    _SensorTemperatureDelayLowCritical_Type()
)
sensorTemperatureDelayLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureDelayLowCritical.setStatus("mandatory")


class _SensorTemperatureDelayLowWarning_Type(Integer32):
    """Custom type sensorTemperatureDelayLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorTemperatureDelayLowWarning_Type.__name__ = "Integer32"
_SensorTemperatureDelayLowWarning_Object = MibTableColumn
sensorTemperatureDelayLowWarning = _SensorTemperatureDelayLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 17),
    _SensorTemperatureDelayLowWarning_Type()
)
sensorTemperatureDelayLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureDelayLowWarning.setStatus("mandatory")


class _SensorTemperatureDelayHighWarning_Type(Integer32):
    """Custom type sensorTemperatureDelayHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorTemperatureDelayHighWarning_Type.__name__ = "Integer32"
_SensorTemperatureDelayHighWarning_Object = MibTableColumn
sensorTemperatureDelayHighWarning = _SensorTemperatureDelayHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 18),
    _SensorTemperatureDelayHighWarning_Type()
)
sensorTemperatureDelayHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureDelayHighWarning.setStatus("mandatory")


class _SensorTemperatureDelayHighCritical_Type(Integer32):
    """Custom type sensorTemperatureDelayHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorTemperatureDelayHighCritical_Type.__name__ = "Integer32"
_SensorTemperatureDelayHighCritical_Object = MibTableColumn
sensorTemperatureDelayHighCritical = _SensorTemperatureDelayHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 19),
    _SensorTemperatureDelayHighCritical_Type()
)
sensorTemperatureDelayHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureDelayHighCritical.setStatus("mandatory")
_SensorTemperatureRaw_Type = Integer32
_SensorTemperatureRaw_Object = MibTableColumn
sensorTemperatureRaw = _SensorTemperatureRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 20),
    _SensorTemperatureRaw_Type()
)
sensorTemperatureRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorTemperatureRaw.setStatus("mandatory")
_SensorTemperatureOffset_Type = Integer32
_SensorTemperatureOffset_Object = MibTableColumn
sensorTemperatureOffset = _SensorTemperatureOffset_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 21),
    _SensorTemperatureOffset_Type()
)
sensorTemperatureOffset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureOffset.setStatus("mandatory")


class _SensorTemperaturePort_Type(Integer32):
    """Custom type sensorTemperaturePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorTemperaturePort_Type.__name__ = "Integer32"
_SensorTemperaturePort_Object = MibTableColumn
sensorTemperaturePort = _SensorTemperaturePort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 35),
    _SensorTemperaturePort_Type()
)
sensorTemperaturePort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorTemperaturePort.setStatus("mandatory")


class _SensorTemperatureSubPort_Type(Integer32):
    """Custom type sensorTemperatureSubPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorTemperatureSubPort_Type.__name__ = "Integer32"
_SensorTemperatureSubPort_Object = MibTableColumn
sensorTemperatureSubPort = _SensorTemperatureSubPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 36),
    _SensorTemperatureSubPort_Type()
)
sensorTemperatureSubPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorTemperatureSubPort.setStatus("mandatory")


class _SensorTemperatureDeviceIndex_Type(Integer32):
    """Custom type sensorTemperatureDeviceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorTemperatureDeviceIndex_Type.__name__ = "Integer32"
_SensorTemperatureDeviceIndex_Object = MibTableColumn
sensorTemperatureDeviceIndex = _SensorTemperatureDeviceIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 37),
    _SensorTemperatureDeviceIndex_Type()
)
sensorTemperatureDeviceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorTemperatureDeviceIndex.setStatus("mandatory")


class _SensorTemperatureDisplayStyle_Type(Integer32):
    """Custom type sensorTemperatureDisplayStyle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("basic", 0),
          ("gauge", 1))
    )


_SensorTemperatureDisplayStyle_Type.__name__ = "Integer32"
_SensorTemperatureDisplayStyle_Object = MibTableColumn
sensorTemperatureDisplayStyle = _SensorTemperatureDisplayStyle_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 45),
    _SensorTemperatureDisplayStyle_Type()
)
sensorTemperatureDisplayStyle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureDisplayStyle.setStatus("mandatory")
_SensorTemperatureHighCriticalDesc_Type = DisplayString
_SensorTemperatureHighCriticalDesc_Object = MibTableColumn
sensorTemperatureHighCriticalDesc = _SensorTemperatureHighCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 46),
    _SensorTemperatureHighCriticalDesc_Type()
)
sensorTemperatureHighCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureHighCriticalDesc.setStatus("mandatory")
_SensorTemperatureLowCriticalDesc_Type = DisplayString
_SensorTemperatureLowCriticalDesc_Object = MibTableColumn
sensorTemperatureLowCriticalDesc = _SensorTemperatureLowCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 47),
    _SensorTemperatureLowCriticalDesc_Type()
)
sensorTemperatureLowCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureLowCriticalDesc.setStatus("mandatory")
_SensorTemperatureNormalDesc_Type = DisplayString
_SensorTemperatureNormalDesc_Object = MibTableColumn
sensorTemperatureNormalDesc = _SensorTemperatureNormalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 48),
    _SensorTemperatureNormalDesc_Type()
)
sensorTemperatureNormalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureNormalDesc.setStatus("mandatory")
_SensorTemperatureLowWarningDesc_Type = DisplayString
_SensorTemperatureLowWarningDesc_Object = MibTableColumn
sensorTemperatureLowWarningDesc = _SensorTemperatureLowWarningDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 49),
    _SensorTemperatureLowWarningDesc_Type()
)
sensorTemperatureLowWarningDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureLowWarningDesc.setStatus("mandatory")
_SensorTemperatureHighWarningDesc_Type = DisplayString
_SensorTemperatureHighWarningDesc_Object = MibTableColumn
sensorTemperatureHighWarningDesc = _SensorTemperatureHighWarningDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 50),
    _SensorTemperatureHighWarningDesc_Type()
)
sensorTemperatureHighWarningDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureHighWarningDesc.setStatus("mandatory")
_SensorTemperatureSensorErrorDesc_Type = DisplayString
_SensorTemperatureSensorErrorDesc_Object = MibTableColumn
sensorTemperatureSensorErrorDesc = _SensorTemperatureSensorErrorDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 51),
    _SensorTemperatureSensorErrorDesc_Type()
)
sensorTemperatureSensorErrorDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureSensorErrorDesc.setStatus("mandatory")
_SensorTemperatureHighCriticalColor_Type = Integer32
_SensorTemperatureHighCriticalColor_Object = MibTableColumn
sensorTemperatureHighCriticalColor = _SensorTemperatureHighCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 54),
    _SensorTemperatureHighCriticalColor_Type()
)
sensorTemperatureHighCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureHighCriticalColor.setStatus("mandatory")
_SensorTemperatureLowCriticalColor_Type = Integer32
_SensorTemperatureLowCriticalColor_Object = MibTableColumn
sensorTemperatureLowCriticalColor = _SensorTemperatureLowCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 55),
    _SensorTemperatureLowCriticalColor_Type()
)
sensorTemperatureLowCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureLowCriticalColor.setStatus("mandatory")
_SensorTemperatureNormalColor_Type = Integer32
_SensorTemperatureNormalColor_Object = MibTableColumn
sensorTemperatureNormalColor = _SensorTemperatureNormalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 56),
    _SensorTemperatureNormalColor_Type()
)
sensorTemperatureNormalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureNormalColor.setStatus("mandatory")
_SensorTemperatureLowWarningColor_Type = Integer32
_SensorTemperatureLowWarningColor_Object = MibTableColumn
sensorTemperatureLowWarningColor = _SensorTemperatureLowWarningColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 57),
    _SensorTemperatureLowWarningColor_Type()
)
sensorTemperatureLowWarningColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureLowWarningColor.setStatus("mandatory")
_SensorTemperatureHighWarningColor_Type = Integer32
_SensorTemperatureHighWarningColor_Object = MibTableColumn
sensorTemperatureHighWarningColor = _SensorTemperatureHighWarningColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 58),
    _SensorTemperatureHighWarningColor_Type()
)
sensorTemperatureHighWarningColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureHighWarningColor.setStatus("mandatory")
_SensorTemperatureSensorErrorColor_Type = Integer32
_SensorTemperatureSensorErrorColor_Object = MibTableColumn
sensorTemperatureSensorErrorColor = _SensorTemperatureSensorErrorColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 2, 1, 59),
    _SensorTemperatureSensorErrorColor_Type()
)
sensorTemperatureSensorErrorColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTemperatureSensorErrorColor.setStatus("mandatory")
_SensorHumidityTable_Object = MibTable
sensorHumidityTable = _SensorHumidityTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3)
)
if mibBuilder.loadTexts:
    sensorHumidityTable.setStatus("mandatory")
_SensorHumidityEntry_Object = MibTableRow
sensorHumidityEntry = _SensorHumidityEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1)
)
sensorHumidityEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorHumidityIndex"),
)
if mibBuilder.loadTexts:
    sensorHumidityEntry.setStatus("mandatory")


class _SensorHumidityIndex_Type(Integer32):
    """Custom type sensorHumidityIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SensorHumidityIndex_Type.__name__ = "Integer32"
_SensorHumidityIndex_Object = MibTableColumn
sensorHumidityIndex = _SensorHumidityIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 1),
    _SensorHumidityIndex_Type()
)
sensorHumidityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorHumidityIndex.setStatus("mandatory")
_SensorHumidityDescription_Type = DisplayString
_SensorHumidityDescription_Object = MibTableColumn
sensorHumidityDescription = _SensorHumidityDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 2),
    _SensorHumidityDescription_Type()
)
sensorHumidityDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityDescription.setStatus("mandatory")
_SensorHumidityPercent_Type = Integer32
_SensorHumidityPercent_Object = MibTableColumn
sensorHumidityPercent = _SensorHumidityPercent_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 4),
    _SensorHumidityPercent_Type()
)
sensorHumidityPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorHumidityPercent.setStatus("mandatory")
_SensorHumidityUnit_Type = DisplayString
_SensorHumidityUnit_Object = MibTableColumn
sensorHumidityUnit = _SensorHumidityUnit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 5),
    _SensorHumidityUnit_Type()
)
sensorHumidityUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityUnit.setStatus("mandatory")


class _SensorHumidityStatus_Type(Integer32):
    """Custom type sensorHumidityStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorHumidityStatus_Type.__name__ = "Integer32"
_SensorHumidityStatus_Object = MibTableColumn
sensorHumidityStatus = _SensorHumidityStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 6),
    _SensorHumidityStatus_Type()
)
sensorHumidityStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorHumidityStatus.setStatus("mandatory")


class _SensorHumidityGoOffline_Type(Integer32):
    """Custom type sensorHumidityGoOffline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("online", 1))
    )


_SensorHumidityGoOffline_Type.__name__ = "Integer32"
_SensorHumidityGoOffline_Object = MibTableColumn
sensorHumidityGoOffline = _SensorHumidityGoOffline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 8),
    _SensorHumidityGoOffline_Type()
)
sensorHumidityGoOffline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityGoOffline.setStatus("mandatory")
_SensorHumidityLowCritical_Type = Integer32
_SensorHumidityLowCritical_Object = MibTableColumn
sensorHumidityLowCritical = _SensorHumidityLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 9),
    _SensorHumidityLowCritical_Type()
)
sensorHumidityLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityLowCritical.setStatus("mandatory")
_SensorHumidityLowWarning_Type = Integer32
_SensorHumidityLowWarning_Object = MibTableColumn
sensorHumidityLowWarning = _SensorHumidityLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 10),
    _SensorHumidityLowWarning_Type()
)
sensorHumidityLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityLowWarning.setStatus("mandatory")
_SensorHumidityHighWarning_Type = Integer32
_SensorHumidityHighWarning_Object = MibTableColumn
sensorHumidityHighWarning = _SensorHumidityHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 11),
    _SensorHumidityHighWarning_Type()
)
sensorHumidityHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityHighWarning.setStatus("mandatory")
_SensorHumidityHighCritical_Type = Integer32
_SensorHumidityHighCritical_Object = MibTableColumn
sensorHumidityHighCritical = _SensorHumidityHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 12),
    _SensorHumidityHighCritical_Type()
)
sensorHumidityHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityHighCritical.setStatus("mandatory")
_SensorHumidityRearm_Type = Integer32
_SensorHumidityRearm_Object = MibTableColumn
sensorHumidityRearm = _SensorHumidityRearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 13),
    _SensorHumidityRearm_Type()
)
sensorHumidityRearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityRearm.setStatus("mandatory")


class _SensorHumidityDelayError_Type(Integer32):
    """Custom type sensorHumidityDelayError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorHumidityDelayError_Type.__name__ = "Integer32"
_SensorHumidityDelayError_Object = MibTableColumn
sensorHumidityDelayError = _SensorHumidityDelayError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 14),
    _SensorHumidityDelayError_Type()
)
sensorHumidityDelayError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityDelayError.setStatus("mandatory")


class _SensorHumidityDelayNormal_Type(Integer32):
    """Custom type sensorHumidityDelayNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorHumidityDelayNormal_Type.__name__ = "Integer32"
_SensorHumidityDelayNormal_Object = MibTableColumn
sensorHumidityDelayNormal = _SensorHumidityDelayNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 15),
    _SensorHumidityDelayNormal_Type()
)
sensorHumidityDelayNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityDelayNormal.setStatus("mandatory")


class _SensorHumidityDelayLowCritical_Type(Integer32):
    """Custom type sensorHumidityDelayLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorHumidityDelayLowCritical_Type.__name__ = "Integer32"
_SensorHumidityDelayLowCritical_Object = MibTableColumn
sensorHumidityDelayLowCritical = _SensorHumidityDelayLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 16),
    _SensorHumidityDelayLowCritical_Type()
)
sensorHumidityDelayLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityDelayLowCritical.setStatus("mandatory")


class _SensorHumidityDelayLowWarning_Type(Integer32):
    """Custom type sensorHumidityDelayLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorHumidityDelayLowWarning_Type.__name__ = "Integer32"
_SensorHumidityDelayLowWarning_Object = MibTableColumn
sensorHumidityDelayLowWarning = _SensorHumidityDelayLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 17),
    _SensorHumidityDelayLowWarning_Type()
)
sensorHumidityDelayLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityDelayLowWarning.setStatus("mandatory")


class _SensorHumidityDelayHighWarning_Type(Integer32):
    """Custom type sensorHumidityDelayHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorHumidityDelayHighWarning_Type.__name__ = "Integer32"
_SensorHumidityDelayHighWarning_Object = MibTableColumn
sensorHumidityDelayHighWarning = _SensorHumidityDelayHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 18),
    _SensorHumidityDelayHighWarning_Type()
)
sensorHumidityDelayHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityDelayHighWarning.setStatus("mandatory")


class _SensorHumidityDelayHighCritical_Type(Integer32):
    """Custom type sensorHumidityDelayHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorHumidityDelayHighCritical_Type.__name__ = "Integer32"
_SensorHumidityDelayHighCritical_Object = MibTableColumn
sensorHumidityDelayHighCritical = _SensorHumidityDelayHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 19),
    _SensorHumidityDelayHighCritical_Type()
)
sensorHumidityDelayHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityDelayHighCritical.setStatus("mandatory")
_SensorHumidityRaw_Type = Integer32
_SensorHumidityRaw_Object = MibTableColumn
sensorHumidityRaw = _SensorHumidityRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 20),
    _SensorHumidityRaw_Type()
)
sensorHumidityRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorHumidityRaw.setStatus("mandatory")
_SensorHumidityOffset_Type = Integer32
_SensorHumidityOffset_Object = MibTableColumn
sensorHumidityOffset = _SensorHumidityOffset_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 21),
    _SensorHumidityOffset_Type()
)
sensorHumidityOffset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityOffset.setStatus("mandatory")


class _SensorHumidityPort_Type(Integer32):
    """Custom type sensorHumidityPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorHumidityPort_Type.__name__ = "Integer32"
_SensorHumidityPort_Object = MibTableColumn
sensorHumidityPort = _SensorHumidityPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 35),
    _SensorHumidityPort_Type()
)
sensorHumidityPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorHumidityPort.setStatus("mandatory")


class _SensorHumiditySubPort_Type(Integer32):
    """Custom type sensorHumiditySubPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorHumiditySubPort_Type.__name__ = "Integer32"
_SensorHumiditySubPort_Object = MibTableColumn
sensorHumiditySubPort = _SensorHumiditySubPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 36),
    _SensorHumiditySubPort_Type()
)
sensorHumiditySubPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorHumiditySubPort.setStatus("mandatory")


class _SensorHumidityDeviceIndex_Type(Integer32):
    """Custom type sensorHumidityDeviceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorHumidityDeviceIndex_Type.__name__ = "Integer32"
_SensorHumidityDeviceIndex_Object = MibTableColumn
sensorHumidityDeviceIndex = _SensorHumidityDeviceIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 37),
    _SensorHumidityDeviceIndex_Type()
)
sensorHumidityDeviceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorHumidityDeviceIndex.setStatus("mandatory")


class _SensorHumidityDisplayStyle_Type(Integer32):
    """Custom type sensorHumidityDisplayStyle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("basic", 0),
          ("gauge", 1))
    )


_SensorHumidityDisplayStyle_Type.__name__ = "Integer32"
_SensorHumidityDisplayStyle_Object = MibTableColumn
sensorHumidityDisplayStyle = _SensorHumidityDisplayStyle_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 45),
    _SensorHumidityDisplayStyle_Type()
)
sensorHumidityDisplayStyle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityDisplayStyle.setStatus("mandatory")
_SensorHumidityHighCriticalDesc_Type = DisplayString
_SensorHumidityHighCriticalDesc_Object = MibTableColumn
sensorHumidityHighCriticalDesc = _SensorHumidityHighCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 46),
    _SensorHumidityHighCriticalDesc_Type()
)
sensorHumidityHighCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityHighCriticalDesc.setStatus("mandatory")
_SensorHumidityLowCriticalDesc_Type = DisplayString
_SensorHumidityLowCriticalDesc_Object = MibTableColumn
sensorHumidityLowCriticalDesc = _SensorHumidityLowCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 47),
    _SensorHumidityLowCriticalDesc_Type()
)
sensorHumidityLowCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityLowCriticalDesc.setStatus("mandatory")
_SensorHumidityNormalDesc_Type = DisplayString
_SensorHumidityNormalDesc_Object = MibTableColumn
sensorHumidityNormalDesc = _SensorHumidityNormalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 48),
    _SensorHumidityNormalDesc_Type()
)
sensorHumidityNormalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityNormalDesc.setStatus("mandatory")
_SensorHumidityLowWarningDesc_Type = DisplayString
_SensorHumidityLowWarningDesc_Object = MibTableColumn
sensorHumidityLowWarningDesc = _SensorHumidityLowWarningDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 49),
    _SensorHumidityLowWarningDesc_Type()
)
sensorHumidityLowWarningDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityLowWarningDesc.setStatus("mandatory")
_SensorHumidityHighWarningDesc_Type = DisplayString
_SensorHumidityHighWarningDesc_Object = MibTableColumn
sensorHumidityHighWarningDesc = _SensorHumidityHighWarningDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 50),
    _SensorHumidityHighWarningDesc_Type()
)
sensorHumidityHighWarningDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityHighWarningDesc.setStatus("mandatory")
_SensorHumiditySensorErrorDesc_Type = DisplayString
_SensorHumiditySensorErrorDesc_Object = MibTableColumn
sensorHumiditySensorErrorDesc = _SensorHumiditySensorErrorDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 51),
    _SensorHumiditySensorErrorDesc_Type()
)
sensorHumiditySensorErrorDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumiditySensorErrorDesc.setStatus("mandatory")
_SensorHumidityHighCriticalColor_Type = Integer32
_SensorHumidityHighCriticalColor_Object = MibTableColumn
sensorHumidityHighCriticalColor = _SensorHumidityHighCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 54),
    _SensorHumidityHighCriticalColor_Type()
)
sensorHumidityHighCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityHighCriticalColor.setStatus("mandatory")
_SensorHumidityLowCriticalColor_Type = Integer32
_SensorHumidityLowCriticalColor_Object = MibTableColumn
sensorHumidityLowCriticalColor = _SensorHumidityLowCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 55),
    _SensorHumidityLowCriticalColor_Type()
)
sensorHumidityLowCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityLowCriticalColor.setStatus("mandatory")
_SensorHumidityNormalColor_Type = Integer32
_SensorHumidityNormalColor_Object = MibTableColumn
sensorHumidityNormalColor = _SensorHumidityNormalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 56),
    _SensorHumidityNormalColor_Type()
)
sensorHumidityNormalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityNormalColor.setStatus("mandatory")
_SensorHumidityLowWarningColor_Type = Integer32
_SensorHumidityLowWarningColor_Object = MibTableColumn
sensorHumidityLowWarningColor = _SensorHumidityLowWarningColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 57),
    _SensorHumidityLowWarningColor_Type()
)
sensorHumidityLowWarningColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityLowWarningColor.setStatus("mandatory")
_SensorHumidityHighWarningColor_Type = Integer32
_SensorHumidityHighWarningColor_Object = MibTableColumn
sensorHumidityHighWarningColor = _SensorHumidityHighWarningColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 58),
    _SensorHumidityHighWarningColor_Type()
)
sensorHumidityHighWarningColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumidityHighWarningColor.setStatus("mandatory")
_SensorHumiditySensorErrorColor_Type = Integer32
_SensorHumiditySensorErrorColor_Object = MibTableColumn
sensorHumiditySensorErrorColor = _SensorHumiditySensorErrorColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 3, 1, 59),
    _SensorHumiditySensorErrorColor_Type()
)
sensorHumiditySensorErrorColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorHumiditySensorErrorColor.setStatus("mandatory")
_SensorDryContactTable_Object = MibTable
sensorDryContactTable = _SensorDryContactTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4)
)
if mibBuilder.loadTexts:
    sensorDryContactTable.setStatus("mandatory")
_SensorDryContactEntry_Object = MibTableRow
sensorDryContactEntry = _SensorDryContactEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1)
)
sensorDryContactEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorDryContactIndex"),
)
if mibBuilder.loadTexts:
    sensorDryContactEntry.setStatus("mandatory")


class _SensorDryContactIndex_Type(Integer32):
    """Custom type sensorDryContactIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SensorDryContactIndex_Type.__name__ = "Integer32"
_SensorDryContactIndex_Object = MibTableColumn
sensorDryContactIndex = _SensorDryContactIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1, 1),
    _SensorDryContactIndex_Type()
)
sensorDryContactIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorDryContactIndex.setStatus("mandatory")
_SensorDryContactDescription_Type = DisplayString
_SensorDryContactDescription_Object = MibTableColumn
sensorDryContactDescription = _SensorDryContactDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1, 2),
    _SensorDryContactDescription_Type()
)
sensorDryContactDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactDescription.setStatus("mandatory")


class _SensorDryContactType_Type(Integer32):
    """Custom type sensorDryContactType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(7,
              8,
              22)
        )
    )
    namedValues = NamedValues(
        *(("drycontact-array", 22),
          ("drycontact-inout", 7),
          ("drycontact-input", 8))
    )


_SensorDryContactType_Type.__name__ = "Integer32"
_SensorDryContactType_Object = MibTableColumn
sensorDryContactType = _SensorDryContactType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1, 3),
    _SensorDryContactType_Type()
)
sensorDryContactType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorDryContactType.setStatus("mandatory")


class _SensorDryContactStatus_Type(Integer32):
    """Custom type sensorDryContactStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("outputHigh", 9),
          ("outputLow", 8),
          ("sensorError", 7))
    )


_SensorDryContactStatus_Type.__name__ = "Integer32"
_SensorDryContactStatus_Object = MibTableColumn
sensorDryContactStatus = _SensorDryContactStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1, 6),
    _SensorDryContactStatus_Type()
)
sensorDryContactStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorDryContactStatus.setStatus("mandatory")


class _SensorDryContactGoOffline_Type(Integer32):
    """Custom type sensorDryContactGoOffline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("online", 1))
    )


_SensorDryContactGoOffline_Type.__name__ = "Integer32"
_SensorDryContactGoOffline_Object = MibTableColumn
sensorDryContactGoOffline = _SensorDryContactGoOffline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1, 8),
    _SensorDryContactGoOffline_Type()
)
sensorDryContactGoOffline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactGoOffline.setStatus("mandatory")


class _SensorDryContactDirection_Type(Integer32):
    """Custom type sensorDryContactDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("input", 0),
          ("output", 1))
    )


_SensorDryContactDirection_Type.__name__ = "Integer32"
_SensorDryContactDirection_Object = MibTableColumn
sensorDryContactDirection = _SensorDryContactDirection_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1, 22),
    _SensorDryContactDirection_Type()
)
sensorDryContactDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactDirection.setStatus("mandatory")


class _SensorDryContactNormalState_Type(Integer32):
    """Custom type sensorDryContactNormalState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("closed", 0),
          ("open", 1))
    )


_SensorDryContactNormalState_Type.__name__ = "Integer32"
_SensorDryContactNormalState_Object = MibTableColumn
sensorDryContactNormalState = _SensorDryContactNormalState_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1, 23),
    _SensorDryContactNormalState_Type()
)
sensorDryContactNormalState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactNormalState.setStatus("mandatory")


class _SensorDryContactControlMode_Type(Integer32):
    """Custom type sensorDryContactControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("manual-control", 0),
          ("sensor-control", 1),
          ("thermostat-control", 3),
          ("time-control", 2))
    )


_SensorDryContactControlMode_Type.__name__ = "Integer32"
_SensorDryContactControlMode_Object = MibTableColumn
sensorDryContactControlMode = _SensorDryContactControlMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1, 24),
    _SensorDryContactControlMode_Type()
)
sensorDryContactControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactControlMode.setStatus("mandatory")


class _SensorDryContactOutputManualCycleTime_Type(Integer32):
    """Custom type sensorDryContactOutputManualCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorDryContactOutputManualCycleTime_Type.__name__ = "Integer32"
_SensorDryContactOutputManualCycleTime_Object = MibTableColumn
sensorDryContactOutputManualCycleTime = _SensorDryContactOutputManualCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1, 25),
    _SensorDryContactOutputManualCycleTime_Type()
)
sensorDryContactOutputManualCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactOutputManualCycleTime.setStatus("mandatory")


class _SensorDryContactOutputManualAction_Type(Integer32):
    """Custom type sensorDryContactOutputManualAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("cycle-High-Low-High", 3),
          ("cycle-Low-High-Low", 2),
          ("high", 1),
          ("low", 0))
    )


_SensorDryContactOutputManualAction_Type.__name__ = "Integer32"
_SensorDryContactOutputManualAction_Object = MibTableColumn
sensorDryContactOutputManualAction = _SensorDryContactOutputManualAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1, 26),
    _SensorDryContactOutputManualAction_Type()
)
sensorDryContactOutputManualAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactOutputManualAction.setStatus("mandatory")


class _SensorDryContactPort_Type(Integer32):
    """Custom type sensorDryContactPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorDryContactPort_Type.__name__ = "Integer32"
_SensorDryContactPort_Object = MibTableColumn
sensorDryContactPort = _SensorDryContactPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1, 35),
    _SensorDryContactPort_Type()
)
sensorDryContactPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorDryContactPort.setStatus("mandatory")


class _SensorDryContactSubPort_Type(Integer32):
    """Custom type sensorDryContactSubPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorDryContactSubPort_Type.__name__ = "Integer32"
_SensorDryContactSubPort_Object = MibTableColumn
sensorDryContactSubPort = _SensorDryContactSubPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1, 36),
    _SensorDryContactSubPort_Type()
)
sensorDryContactSubPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorDryContactSubPort.setStatus("mandatory")


class _SensorDryContactDeviceIndex_Type(Integer32):
    """Custom type sensorDryContactDeviceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorDryContactDeviceIndex_Type.__name__ = "Integer32"
_SensorDryContactDeviceIndex_Object = MibTableColumn
sensorDryContactDeviceIndex = _SensorDryContactDeviceIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1, 37),
    _SensorDryContactDeviceIndex_Type()
)
sensorDryContactDeviceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorDryContactDeviceIndex.setStatus("mandatory")
_SensorDryContactCriticalDesc_Type = DisplayString
_SensorDryContactCriticalDesc_Object = MibTableColumn
sensorDryContactCriticalDesc = _SensorDryContactCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1, 46),
    _SensorDryContactCriticalDesc_Type()
)
sensorDryContactCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactCriticalDesc.setStatus("mandatory")
_SensorDryContactNormalDesc_Type = DisplayString
_SensorDryContactNormalDesc_Object = MibTableColumn
sensorDryContactNormalDesc = _SensorDryContactNormalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1, 48),
    _SensorDryContactNormalDesc_Type()
)
sensorDryContactNormalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactNormalDesc.setStatus("mandatory")
_SensorDryContactOnDesc_Type = DisplayString
_SensorDryContactOnDesc_Object = MibTableColumn
sensorDryContactOnDesc = _SensorDryContactOnDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1, 52),
    _SensorDryContactOnDesc_Type()
)
sensorDryContactOnDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactOnDesc.setStatus("mandatory")
_SensorDryContactOffDesc_Type = DisplayString
_SensorDryContactOffDesc_Object = MibTableColumn
sensorDryContactOffDesc = _SensorDryContactOffDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1, 53),
    _SensorDryContactOffDesc_Type()
)
sensorDryContactOffDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactOffDesc.setStatus("mandatory")
_SensorDryContactCriticalColor_Type = Integer32
_SensorDryContactCriticalColor_Object = MibTableColumn
sensorDryContactCriticalColor = _SensorDryContactCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1, 54),
    _SensorDryContactCriticalColor_Type()
)
sensorDryContactCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactCriticalColor.setStatus("mandatory")
_SensorDryContactNormalColor_Type = Integer32
_SensorDryContactNormalColor_Object = MibTableColumn
sensorDryContactNormalColor = _SensorDryContactNormalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1, 56),
    _SensorDryContactNormalColor_Type()
)
sensorDryContactNormalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactNormalColor.setStatus("mandatory")
_SensorDryContactOnColor_Type = Integer32
_SensorDryContactOnColor_Object = MibTableColumn
sensorDryContactOnColor = _SensorDryContactOnColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1, 60),
    _SensorDryContactOnColor_Type()
)
sensorDryContactOnColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactOnColor.setStatus("mandatory")
_SensorDryContactOffColor_Type = Integer32
_SensorDryContactOffColor_Object = MibTableColumn
sensorDryContactOffColor = _SensorDryContactOffColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 4, 1, 61),
    _SensorDryContactOffColor_Type()
)
sensorDryContactOffColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDryContactOffColor.setStatus("mandatory")
_Sensor4to20mATable_Object = MibTable
sensor4to20mATable = _Sensor4to20mATable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5)
)
if mibBuilder.loadTexts:
    sensor4to20mATable.setStatus("mandatory")
_Sensor4to20mAEntry_Object = MibTableRow
sensor4to20mAEntry = _Sensor4to20mAEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1)
)
sensor4to20mAEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensor4to20mAIndex"),
)
if mibBuilder.loadTexts:
    sensor4to20mAEntry.setStatus("mandatory")


class _Sensor4to20mAIndex_Type(Integer32):
    """Custom type sensor4to20mAIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_Sensor4to20mAIndex_Type.__name__ = "Integer32"
_Sensor4to20mAIndex_Object = MibTableColumn
sensor4to20mAIndex = _Sensor4to20mAIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 1),
    _Sensor4to20mAIndex_Type()
)
sensor4to20mAIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensor4to20mAIndex.setStatus("mandatory")
_Sensor4to20mADescription_Type = DisplayString
_Sensor4to20mADescription_Object = MibTableColumn
sensor4to20mADescription = _Sensor4to20mADescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 2),
    _Sensor4to20mADescription_Type()
)
sensor4to20mADescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mADescription.setStatus("mandatory")
_Sensor4to20mAValue_Type = Integer32
_Sensor4to20mAValue_Object = MibTableColumn
sensor4to20mAValue = _Sensor4to20mAValue_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 4),
    _Sensor4to20mAValue_Type()
)
sensor4to20mAValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensor4to20mAValue.setStatus("mandatory")
_Sensor4to20mAUnit_Type = DisplayString
_Sensor4to20mAUnit_Object = MibTableColumn
sensor4to20mAUnit = _Sensor4to20mAUnit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 5),
    _Sensor4to20mAUnit_Type()
)
sensor4to20mAUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mAUnit.setStatus("mandatory")


class _Sensor4to20mAStatus_Type(Integer32):
    """Custom type sensor4to20mAStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_Sensor4to20mAStatus_Type.__name__ = "Integer32"
_Sensor4to20mAStatus_Object = MibTableColumn
sensor4to20mAStatus = _Sensor4to20mAStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 6),
    _Sensor4to20mAStatus_Type()
)
sensor4to20mAStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensor4to20mAStatus.setStatus("mandatory")


class _Sensor4to20mAGoOffline_Type(Integer32):
    """Custom type sensor4to20mAGoOffline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("online", 1))
    )


_Sensor4to20mAGoOffline_Type.__name__ = "Integer32"
_Sensor4to20mAGoOffline_Object = MibTableColumn
sensor4to20mAGoOffline = _Sensor4to20mAGoOffline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 8),
    _Sensor4to20mAGoOffline_Type()
)
sensor4to20mAGoOffline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mAGoOffline.setStatus("mandatory")
_Sensor4to20mALowCritical_Type = Integer32
_Sensor4to20mALowCritical_Object = MibTableColumn
sensor4to20mALowCritical = _Sensor4to20mALowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 9),
    _Sensor4to20mALowCritical_Type()
)
sensor4to20mALowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mALowCritical.setStatus("mandatory")
_Sensor4to20mALowWarning_Type = Integer32
_Sensor4to20mALowWarning_Object = MibTableColumn
sensor4to20mALowWarning = _Sensor4to20mALowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 10),
    _Sensor4to20mALowWarning_Type()
)
sensor4to20mALowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mALowWarning.setStatus("mandatory")
_Sensor4to20mAHighWarning_Type = Integer32
_Sensor4to20mAHighWarning_Object = MibTableColumn
sensor4to20mAHighWarning = _Sensor4to20mAHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 11),
    _Sensor4to20mAHighWarning_Type()
)
sensor4to20mAHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mAHighWarning.setStatus("mandatory")
_Sensor4to20mAHighCritical_Type = Integer32
_Sensor4to20mAHighCritical_Object = MibTableColumn
sensor4to20mAHighCritical = _Sensor4to20mAHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 12),
    _Sensor4to20mAHighCritical_Type()
)
sensor4to20mAHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mAHighCritical.setStatus("mandatory")
_Sensor4to20mARearm_Type = Integer32
_Sensor4to20mARearm_Object = MibTableColumn
sensor4to20mARearm = _Sensor4to20mARearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 13),
    _Sensor4to20mARearm_Type()
)
sensor4to20mARearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mARearm.setStatus("mandatory")


class _Sensor4to20mADelayError_Type(Integer32):
    """Custom type sensor4to20mADelayError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_Sensor4to20mADelayError_Type.__name__ = "Integer32"
_Sensor4to20mADelayError_Object = MibTableColumn
sensor4to20mADelayError = _Sensor4to20mADelayError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 14),
    _Sensor4to20mADelayError_Type()
)
sensor4to20mADelayError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mADelayError.setStatus("mandatory")


class _Sensor4to20mADelayNormal_Type(Integer32):
    """Custom type sensor4to20mADelayNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_Sensor4to20mADelayNormal_Type.__name__ = "Integer32"
_Sensor4to20mADelayNormal_Object = MibTableColumn
sensor4to20mADelayNormal = _Sensor4to20mADelayNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 15),
    _Sensor4to20mADelayNormal_Type()
)
sensor4to20mADelayNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mADelayNormal.setStatus("mandatory")


class _Sensor4to20mADelayLowCritical_Type(Integer32):
    """Custom type sensor4to20mADelayLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Sensor4to20mADelayLowCritical_Type.__name__ = "Integer32"
_Sensor4to20mADelayLowCritical_Object = MibTableColumn
sensor4to20mADelayLowCritical = _Sensor4to20mADelayLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 16),
    _Sensor4to20mADelayLowCritical_Type()
)
sensor4to20mADelayLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mADelayLowCritical.setStatus("mandatory")


class _Sensor4to20mADelayLowWarning_Type(Integer32):
    """Custom type sensor4to20mADelayLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Sensor4to20mADelayLowWarning_Type.__name__ = "Integer32"
_Sensor4to20mADelayLowWarning_Object = MibTableColumn
sensor4to20mADelayLowWarning = _Sensor4to20mADelayLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 17),
    _Sensor4to20mADelayLowWarning_Type()
)
sensor4to20mADelayLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mADelayLowWarning.setStatus("mandatory")


class _Sensor4to20mADelayHighWarning_Type(Integer32):
    """Custom type sensor4to20mADelayHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Sensor4to20mADelayHighWarning_Type.__name__ = "Integer32"
_Sensor4to20mADelayHighWarning_Object = MibTableColumn
sensor4to20mADelayHighWarning = _Sensor4to20mADelayHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 18),
    _Sensor4to20mADelayHighWarning_Type()
)
sensor4to20mADelayHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mADelayHighWarning.setStatus("mandatory")


class _Sensor4to20mADelayHighCritical_Type(Integer32):
    """Custom type sensor4to20mADelayHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Sensor4to20mADelayHighCritical_Type.__name__ = "Integer32"
_Sensor4to20mADelayHighCritical_Object = MibTableColumn
sensor4to20mADelayHighCritical = _Sensor4to20mADelayHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 19),
    _Sensor4to20mADelayHighCritical_Type()
)
sensor4to20mADelayHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mADelayHighCritical.setStatus("mandatory")
_Sensor4to20mARaw_Type = Integer32
_Sensor4to20mARaw_Object = MibTableColumn
sensor4to20mARaw = _Sensor4to20mARaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 20),
    _Sensor4to20mARaw_Type()
)
sensor4to20mARaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensor4to20mARaw.setStatus("mandatory")
_Sensor4to20mAOffset_Type = Integer32
_Sensor4to20mAOffset_Object = MibTableColumn
sensor4to20mAOffset = _Sensor4to20mAOffset_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 21),
    _Sensor4to20mAOffset_Type()
)
sensor4to20mAOffset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mAOffset.setStatus("mandatory")
_Sensor4to20mAAmountMaxVoltage_Type = Integer32
_Sensor4to20mAAmountMaxVoltage_Object = MibTableColumn
sensor4to20mAAmountMaxVoltage = _Sensor4to20mAAmountMaxVoltage_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 33),
    _Sensor4to20mAAmountMaxVoltage_Type()
)
sensor4to20mAAmountMaxVoltage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mAAmountMaxVoltage.setStatus("mandatory")
_Sensor4to20mAAmountBaseVoltage_Type = Integer32
_Sensor4to20mAAmountBaseVoltage_Object = MibTableColumn
sensor4to20mAAmountBaseVoltage = _Sensor4to20mAAmountBaseVoltage_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 34),
    _Sensor4to20mAAmountBaseVoltage_Type()
)
sensor4to20mAAmountBaseVoltage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mAAmountBaseVoltage.setStatus("mandatory")


class _Sensor4to20mAPort_Type(Integer32):
    """Custom type sensor4to20mAPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_Sensor4to20mAPort_Type.__name__ = "Integer32"
_Sensor4to20mAPort_Object = MibTableColumn
sensor4to20mAPort = _Sensor4to20mAPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 35),
    _Sensor4to20mAPort_Type()
)
sensor4to20mAPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensor4to20mAPort.setStatus("mandatory")


class _Sensor4to20mASubPort_Type(Integer32):
    """Custom type sensor4to20mASubPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_Sensor4to20mASubPort_Type.__name__ = "Integer32"
_Sensor4to20mASubPort_Object = MibTableColumn
sensor4to20mASubPort = _Sensor4to20mASubPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 36),
    _Sensor4to20mASubPort_Type()
)
sensor4to20mASubPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensor4to20mASubPort.setStatus("mandatory")


class _Sensor4to20mADeviceIndex_Type(Integer32):
    """Custom type sensor4to20mADeviceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_Sensor4to20mADeviceIndex_Type.__name__ = "Integer32"
_Sensor4to20mADeviceIndex_Object = MibTableColumn
sensor4to20mADeviceIndex = _Sensor4to20mADeviceIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 37),
    _Sensor4to20mADeviceIndex_Type()
)
sensor4to20mADeviceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensor4to20mADeviceIndex.setStatus("mandatory")
_Sensor4to20mAMaxVoltage_Type = Integer32
_Sensor4to20mAMaxVoltage_Object = MibTableColumn
sensor4to20mAMaxVoltage = _Sensor4to20mAMaxVoltage_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 43),
    _Sensor4to20mAMaxVoltage_Type()
)
sensor4to20mAMaxVoltage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mAMaxVoltage.setStatus("mandatory")
_Sensor4to20mABaseVoltage_Type = Integer32
_Sensor4to20mABaseVoltage_Object = MibTableColumn
sensor4to20mABaseVoltage = _Sensor4to20mABaseVoltage_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 44),
    _Sensor4to20mABaseVoltage_Type()
)
sensor4to20mABaseVoltage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mABaseVoltage.setStatus("mandatory")


class _Sensor4to20mADisplayStyle_Type(Integer32):
    """Custom type sensor4to20mADisplayStyle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("basic", 0),
          ("gauge", 1))
    )


_Sensor4to20mADisplayStyle_Type.__name__ = "Integer32"
_Sensor4to20mADisplayStyle_Object = MibTableColumn
sensor4to20mADisplayStyle = _Sensor4to20mADisplayStyle_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 45),
    _Sensor4to20mADisplayStyle_Type()
)
sensor4to20mADisplayStyle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mADisplayStyle.setStatus("mandatory")
_Sensor4to20mAHighCriticalDesc_Type = DisplayString
_Sensor4to20mAHighCriticalDesc_Object = MibTableColumn
sensor4to20mAHighCriticalDesc = _Sensor4to20mAHighCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 46),
    _Sensor4to20mAHighCriticalDesc_Type()
)
sensor4to20mAHighCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mAHighCriticalDesc.setStatus("mandatory")
_Sensor4to20mALowCriticalDesc_Type = DisplayString
_Sensor4to20mALowCriticalDesc_Object = MibTableColumn
sensor4to20mALowCriticalDesc = _Sensor4to20mALowCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 47),
    _Sensor4to20mALowCriticalDesc_Type()
)
sensor4to20mALowCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mALowCriticalDesc.setStatus("mandatory")
_Sensor4to20mANormalDesc_Type = DisplayString
_Sensor4to20mANormalDesc_Object = MibTableColumn
sensor4to20mANormalDesc = _Sensor4to20mANormalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 48),
    _Sensor4to20mANormalDesc_Type()
)
sensor4to20mANormalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mANormalDesc.setStatus("mandatory")
_Sensor4to20mALowWarningDesc_Type = DisplayString
_Sensor4to20mALowWarningDesc_Object = MibTableColumn
sensor4to20mALowWarningDesc = _Sensor4to20mALowWarningDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 49),
    _Sensor4to20mALowWarningDesc_Type()
)
sensor4to20mALowWarningDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mALowWarningDesc.setStatus("mandatory")
_Sensor4to20mAHighWarningDesc_Type = DisplayString
_Sensor4to20mAHighWarningDesc_Object = MibTableColumn
sensor4to20mAHighWarningDesc = _Sensor4to20mAHighWarningDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 50),
    _Sensor4to20mAHighWarningDesc_Type()
)
sensor4to20mAHighWarningDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mAHighWarningDesc.setStatus("mandatory")
_Sensor4to20mASensorErrorDesc_Type = DisplayString
_Sensor4to20mASensorErrorDesc_Object = MibTableColumn
sensor4to20mASensorErrorDesc = _Sensor4to20mASensorErrorDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 51),
    _Sensor4to20mASensorErrorDesc_Type()
)
sensor4to20mASensorErrorDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mASensorErrorDesc.setStatus("mandatory")
_Sensor4to20mAHighCriticalColor_Type = Integer32
_Sensor4to20mAHighCriticalColor_Object = MibTableColumn
sensor4to20mAHighCriticalColor = _Sensor4to20mAHighCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 54),
    _Sensor4to20mAHighCriticalColor_Type()
)
sensor4to20mAHighCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mAHighCriticalColor.setStatus("mandatory")
_Sensor4to20mALowCriticalColor_Type = Integer32
_Sensor4to20mALowCriticalColor_Object = MibTableColumn
sensor4to20mALowCriticalColor = _Sensor4to20mALowCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 55),
    _Sensor4to20mALowCriticalColor_Type()
)
sensor4to20mALowCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mALowCriticalColor.setStatus("mandatory")
_Sensor4to20mANormalColor_Type = Integer32
_Sensor4to20mANormalColor_Object = MibTableColumn
sensor4to20mANormalColor = _Sensor4to20mANormalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 56),
    _Sensor4to20mANormalColor_Type()
)
sensor4to20mANormalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mANormalColor.setStatus("mandatory")
_Sensor4to20mALowWarningColor_Type = Integer32
_Sensor4to20mALowWarningColor_Object = MibTableColumn
sensor4to20mALowWarningColor = _Sensor4to20mALowWarningColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 57),
    _Sensor4to20mALowWarningColor_Type()
)
sensor4to20mALowWarningColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mALowWarningColor.setStatus("mandatory")
_Sensor4to20mAHighWarningColor_Type = Integer32
_Sensor4to20mAHighWarningColor_Object = MibTableColumn
sensor4to20mAHighWarningColor = _Sensor4to20mAHighWarningColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 58),
    _Sensor4to20mAHighWarningColor_Type()
)
sensor4to20mAHighWarningColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mAHighWarningColor.setStatus("mandatory")
_Sensor4to20mASensorErrorColor_Type = Integer32
_Sensor4to20mASensorErrorColor_Object = MibTableColumn
sensor4to20mASensorErrorColor = _Sensor4to20mASensorErrorColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 5, 1, 59),
    _Sensor4to20mASensorErrorColor_Type()
)
sensor4to20mASensorErrorColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensor4to20mASensorErrorColor.setStatus("mandatory")
_SensorDCvoltageTable_Object = MibTable
sensorDCvoltageTable = _SensorDCvoltageTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6)
)
if mibBuilder.loadTexts:
    sensorDCvoltageTable.setStatus("mandatory")
_SensorDCvoltageEntry_Object = MibTableRow
sensorDCvoltageEntry = _SensorDCvoltageEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1)
)
sensorDCvoltageEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorDCvoltageIndex"),
)
if mibBuilder.loadTexts:
    sensorDCvoltageEntry.setStatus("mandatory")


class _SensorDCvoltageIndex_Type(Integer32):
    """Custom type sensorDCvoltageIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SensorDCvoltageIndex_Type.__name__ = "Integer32"
_SensorDCvoltageIndex_Object = MibTableColumn
sensorDCvoltageIndex = _SensorDCvoltageIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 1),
    _SensorDCvoltageIndex_Type()
)
sensorDCvoltageIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorDCvoltageIndex.setStatus("mandatory")
_SensorDCvoltageDescription_Type = DisplayString
_SensorDCvoltageDescription_Object = MibTableColumn
sensorDCvoltageDescription = _SensorDCvoltageDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 2),
    _SensorDCvoltageDescription_Type()
)
sensorDCvoltageDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageDescription.setStatus("mandatory")
_SensorDCvoltageValue_Type = Integer32
_SensorDCvoltageValue_Object = MibTableColumn
sensorDCvoltageValue = _SensorDCvoltageValue_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 4),
    _SensorDCvoltageValue_Type()
)
sensorDCvoltageValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorDCvoltageValue.setStatus("mandatory")
_SensorDCvoltageUnit_Type = DisplayString
_SensorDCvoltageUnit_Object = MibTableColumn
sensorDCvoltageUnit = _SensorDCvoltageUnit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 5),
    _SensorDCvoltageUnit_Type()
)
sensorDCvoltageUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageUnit.setStatus("mandatory")


class _SensorDCvoltageStatus_Type(Integer32):
    """Custom type sensorDCvoltageStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorDCvoltageStatus_Type.__name__ = "Integer32"
_SensorDCvoltageStatus_Object = MibTableColumn
sensorDCvoltageStatus = _SensorDCvoltageStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 6),
    _SensorDCvoltageStatus_Type()
)
sensorDCvoltageStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorDCvoltageStatus.setStatus("mandatory")


class _SensorDCvoltageGoOffline_Type(Integer32):
    """Custom type sensorDCvoltageGoOffline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("online", 1))
    )


_SensorDCvoltageGoOffline_Type.__name__ = "Integer32"
_SensorDCvoltageGoOffline_Object = MibTableColumn
sensorDCvoltageGoOffline = _SensorDCvoltageGoOffline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 8),
    _SensorDCvoltageGoOffline_Type()
)
sensorDCvoltageGoOffline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageGoOffline.setStatus("mandatory")
_SensorDCvoltageLowCritical_Type = Integer32
_SensorDCvoltageLowCritical_Object = MibTableColumn
sensorDCvoltageLowCritical = _SensorDCvoltageLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 9),
    _SensorDCvoltageLowCritical_Type()
)
sensorDCvoltageLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageLowCritical.setStatus("mandatory")
_SensorDCvoltageLowWarning_Type = Integer32
_SensorDCvoltageLowWarning_Object = MibTableColumn
sensorDCvoltageLowWarning = _SensorDCvoltageLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 10),
    _SensorDCvoltageLowWarning_Type()
)
sensorDCvoltageLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageLowWarning.setStatus("mandatory")
_SensorDCvoltageHighWarning_Type = Integer32
_SensorDCvoltageHighWarning_Object = MibTableColumn
sensorDCvoltageHighWarning = _SensorDCvoltageHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 11),
    _SensorDCvoltageHighWarning_Type()
)
sensorDCvoltageHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageHighWarning.setStatus("mandatory")
_SensorDCvoltageHighCritical_Type = Integer32
_SensorDCvoltageHighCritical_Object = MibTableColumn
sensorDCvoltageHighCritical = _SensorDCvoltageHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 12),
    _SensorDCvoltageHighCritical_Type()
)
sensorDCvoltageHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageHighCritical.setStatus("mandatory")
_SensorDCvoltageRearm_Type = Integer32
_SensorDCvoltageRearm_Object = MibTableColumn
sensorDCvoltageRearm = _SensorDCvoltageRearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 13),
    _SensorDCvoltageRearm_Type()
)
sensorDCvoltageRearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageRearm.setStatus("mandatory")


class _SensorDCvoltageDelayError_Type(Integer32):
    """Custom type sensorDCvoltageDelayError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorDCvoltageDelayError_Type.__name__ = "Integer32"
_SensorDCvoltageDelayError_Object = MibTableColumn
sensorDCvoltageDelayError = _SensorDCvoltageDelayError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 14),
    _SensorDCvoltageDelayError_Type()
)
sensorDCvoltageDelayError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageDelayError.setStatus("mandatory")


class _SensorDCvoltageDelayNormal_Type(Integer32):
    """Custom type sensorDCvoltageDelayNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorDCvoltageDelayNormal_Type.__name__ = "Integer32"
_SensorDCvoltageDelayNormal_Object = MibTableColumn
sensorDCvoltageDelayNormal = _SensorDCvoltageDelayNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 15),
    _SensorDCvoltageDelayNormal_Type()
)
sensorDCvoltageDelayNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageDelayNormal.setStatus("mandatory")


class _SensorDCvoltageDelayLowCritical_Type(Integer32):
    """Custom type sensorDCvoltageDelayLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorDCvoltageDelayLowCritical_Type.__name__ = "Integer32"
_SensorDCvoltageDelayLowCritical_Object = MibTableColumn
sensorDCvoltageDelayLowCritical = _SensorDCvoltageDelayLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 16),
    _SensorDCvoltageDelayLowCritical_Type()
)
sensorDCvoltageDelayLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageDelayLowCritical.setStatus("mandatory")


class _SensorDCvoltageDelayLowWarning_Type(Integer32):
    """Custom type sensorDCvoltageDelayLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorDCvoltageDelayLowWarning_Type.__name__ = "Integer32"
_SensorDCvoltageDelayLowWarning_Object = MibTableColumn
sensorDCvoltageDelayLowWarning = _SensorDCvoltageDelayLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 17),
    _SensorDCvoltageDelayLowWarning_Type()
)
sensorDCvoltageDelayLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageDelayLowWarning.setStatus("mandatory")


class _SensorDCvoltageDelayHighWarning_Type(Integer32):
    """Custom type sensorDCvoltageDelayHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorDCvoltageDelayHighWarning_Type.__name__ = "Integer32"
_SensorDCvoltageDelayHighWarning_Object = MibTableColumn
sensorDCvoltageDelayHighWarning = _SensorDCvoltageDelayHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 18),
    _SensorDCvoltageDelayHighWarning_Type()
)
sensorDCvoltageDelayHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageDelayHighWarning.setStatus("mandatory")


class _SensorDCvoltageDelayHighCritical_Type(Integer32):
    """Custom type sensorDCvoltageDelayHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorDCvoltageDelayHighCritical_Type.__name__ = "Integer32"
_SensorDCvoltageDelayHighCritical_Object = MibTableColumn
sensorDCvoltageDelayHighCritical = _SensorDCvoltageDelayHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 19),
    _SensorDCvoltageDelayHighCritical_Type()
)
sensorDCvoltageDelayHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageDelayHighCritical.setStatus("mandatory")
_SensorDCvoltageRaw_Type = Integer32
_SensorDCvoltageRaw_Object = MibTableColumn
sensorDCvoltageRaw = _SensorDCvoltageRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 20),
    _SensorDCvoltageRaw_Type()
)
sensorDCvoltageRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorDCvoltageRaw.setStatus("mandatory")
_SensorDCvoltageOffset_Type = Integer32
_SensorDCvoltageOffset_Object = MibTableColumn
sensorDCvoltageOffset = _SensorDCvoltageOffset_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 21),
    _SensorDCvoltageOffset_Type()
)
sensorDCvoltageOffset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageOffset.setStatus("mandatory")


class _SensorDCvoltageJumper_Type(Integer32):
    """Custom type sensorDCvoltageJumper based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-600,
              -400,
              -300,
              -200,
              -100,
              100,
              200,
              300,
              400,
              600)
        )
    )
    namedValues = NamedValues(
        *(("jumperAt-10", -100),
          ("jumperAt-20", -200),
          ("jumperAt-30", -300),
          ("jumperAt-40", -400),
          ("jumperAt-60", -600),
          ("jumperAt10", 100),
          ("jumperAt20", 200),
          ("jumperAt30", 300),
          ("jumperAt40", 400),
          ("jumperAt60", 600))
    )


_SensorDCvoltageJumper_Type.__name__ = "Integer32"
_SensorDCvoltageJumper_Object = MibTableColumn
sensorDCvoltageJumper = _SensorDCvoltageJumper_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 32),
    _SensorDCvoltageJumper_Type()
)
sensorDCvoltageJumper.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageJumper.setStatus("mandatory")
_SensorDCvoltageAmountMaxVoltage_Type = Integer32
_SensorDCvoltageAmountMaxVoltage_Object = MibTableColumn
sensorDCvoltageAmountMaxVoltage = _SensorDCvoltageAmountMaxVoltage_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 33),
    _SensorDCvoltageAmountMaxVoltage_Type()
)
sensorDCvoltageAmountMaxVoltage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageAmountMaxVoltage.setStatus("mandatory")
_SensorDCvoltageAmountBaseVoltage_Type = Integer32
_SensorDCvoltageAmountBaseVoltage_Object = MibTableColumn
sensorDCvoltageAmountBaseVoltage = _SensorDCvoltageAmountBaseVoltage_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 34),
    _SensorDCvoltageAmountBaseVoltage_Type()
)
sensorDCvoltageAmountBaseVoltage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageAmountBaseVoltage.setStatus("mandatory")


class _SensorDCvoltagePort_Type(Integer32):
    """Custom type sensorDCvoltagePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorDCvoltagePort_Type.__name__ = "Integer32"
_SensorDCvoltagePort_Object = MibTableColumn
sensorDCvoltagePort = _SensorDCvoltagePort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 35),
    _SensorDCvoltagePort_Type()
)
sensorDCvoltagePort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorDCvoltagePort.setStatus("mandatory")


class _SensorDCvoltageSubPort_Type(Integer32):
    """Custom type sensorDCvoltageSubPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorDCvoltageSubPort_Type.__name__ = "Integer32"
_SensorDCvoltageSubPort_Object = MibTableColumn
sensorDCvoltageSubPort = _SensorDCvoltageSubPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 36),
    _SensorDCvoltageSubPort_Type()
)
sensorDCvoltageSubPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorDCvoltageSubPort.setStatus("mandatory")


class _SensorDCvoltageDeviceIndex_Type(Integer32):
    """Custom type sensorDCvoltageDeviceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorDCvoltageDeviceIndex_Type.__name__ = "Integer32"
_SensorDCvoltageDeviceIndex_Object = MibTableColumn
sensorDCvoltageDeviceIndex = _SensorDCvoltageDeviceIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 37),
    _SensorDCvoltageDeviceIndex_Type()
)
sensorDCvoltageDeviceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorDCvoltageDeviceIndex.setStatus("mandatory")
_SensorDCvoltageMaxVoltage_Type = Integer32
_SensorDCvoltageMaxVoltage_Object = MibTableColumn
sensorDCvoltageMaxVoltage = _SensorDCvoltageMaxVoltage_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 43),
    _SensorDCvoltageMaxVoltage_Type()
)
sensorDCvoltageMaxVoltage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageMaxVoltage.setStatus("mandatory")
_SensorDCvoltageBaseVoltage_Type = Integer32
_SensorDCvoltageBaseVoltage_Object = MibTableColumn
sensorDCvoltageBaseVoltage = _SensorDCvoltageBaseVoltage_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 44),
    _SensorDCvoltageBaseVoltage_Type()
)
sensorDCvoltageBaseVoltage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageBaseVoltage.setStatus("mandatory")


class _SensorDCvoltageDisplayStyle_Type(Integer32):
    """Custom type sensorDCvoltageDisplayStyle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("basic", 0),
          ("gauge", 1))
    )


_SensorDCvoltageDisplayStyle_Type.__name__ = "Integer32"
_SensorDCvoltageDisplayStyle_Object = MibTableColumn
sensorDCvoltageDisplayStyle = _SensorDCvoltageDisplayStyle_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 45),
    _SensorDCvoltageDisplayStyle_Type()
)
sensorDCvoltageDisplayStyle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageDisplayStyle.setStatus("mandatory")
_SensorDCvoltageHighCriticalDesc_Type = DisplayString
_SensorDCvoltageHighCriticalDesc_Object = MibTableColumn
sensorDCvoltageHighCriticalDesc = _SensorDCvoltageHighCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 46),
    _SensorDCvoltageHighCriticalDesc_Type()
)
sensorDCvoltageHighCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageHighCriticalDesc.setStatus("mandatory")
_SensorDCvoltageLowCriticalDesc_Type = DisplayString
_SensorDCvoltageLowCriticalDesc_Object = MibTableColumn
sensorDCvoltageLowCriticalDesc = _SensorDCvoltageLowCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 47),
    _SensorDCvoltageLowCriticalDesc_Type()
)
sensorDCvoltageLowCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageLowCriticalDesc.setStatus("mandatory")
_SensorDCvoltageNormalDesc_Type = DisplayString
_SensorDCvoltageNormalDesc_Object = MibTableColumn
sensorDCvoltageNormalDesc = _SensorDCvoltageNormalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 48),
    _SensorDCvoltageNormalDesc_Type()
)
sensorDCvoltageNormalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageNormalDesc.setStatus("mandatory")
_SensorDCvoltageLowWarningDesc_Type = DisplayString
_SensorDCvoltageLowWarningDesc_Object = MibTableColumn
sensorDCvoltageLowWarningDesc = _SensorDCvoltageLowWarningDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 49),
    _SensorDCvoltageLowWarningDesc_Type()
)
sensorDCvoltageLowWarningDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageLowWarningDesc.setStatus("mandatory")
_SensorDCvoltageHighWarningDesc_Type = DisplayString
_SensorDCvoltageHighWarningDesc_Object = MibTableColumn
sensorDCvoltageHighWarningDesc = _SensorDCvoltageHighWarningDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 50),
    _SensorDCvoltageHighWarningDesc_Type()
)
sensorDCvoltageHighWarningDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageHighWarningDesc.setStatus("mandatory")
_SensorDCvoltageSensorErrorDesc_Type = DisplayString
_SensorDCvoltageSensorErrorDesc_Object = MibTableColumn
sensorDCvoltageSensorErrorDesc = _SensorDCvoltageSensorErrorDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 51),
    _SensorDCvoltageSensorErrorDesc_Type()
)
sensorDCvoltageSensorErrorDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageSensorErrorDesc.setStatus("mandatory")
_SensorDCvoltageHighCriticalColor_Type = Integer32
_SensorDCvoltageHighCriticalColor_Object = MibTableColumn
sensorDCvoltageHighCriticalColor = _SensorDCvoltageHighCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 54),
    _SensorDCvoltageHighCriticalColor_Type()
)
sensorDCvoltageHighCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageHighCriticalColor.setStatus("mandatory")
_SensorDCvoltageLowCriticalColor_Type = Integer32
_SensorDCvoltageLowCriticalColor_Object = MibTableColumn
sensorDCvoltageLowCriticalColor = _SensorDCvoltageLowCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 55),
    _SensorDCvoltageLowCriticalColor_Type()
)
sensorDCvoltageLowCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageLowCriticalColor.setStatus("mandatory")
_SensorDCvoltageNormalColor_Type = Integer32
_SensorDCvoltageNormalColor_Object = MibTableColumn
sensorDCvoltageNormalColor = _SensorDCvoltageNormalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 56),
    _SensorDCvoltageNormalColor_Type()
)
sensorDCvoltageNormalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageNormalColor.setStatus("mandatory")
_SensorDCvoltageLowWarningColor_Type = Integer32
_SensorDCvoltageLowWarningColor_Object = MibTableColumn
sensorDCvoltageLowWarningColor = _SensorDCvoltageLowWarningColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 57),
    _SensorDCvoltageLowWarningColor_Type()
)
sensorDCvoltageLowWarningColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageLowWarningColor.setStatus("mandatory")
_SensorDCvoltageHighWarningColor_Type = Integer32
_SensorDCvoltageHighWarningColor_Object = MibTableColumn
sensorDCvoltageHighWarningColor = _SensorDCvoltageHighWarningColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 58),
    _SensorDCvoltageHighWarningColor_Type()
)
sensorDCvoltageHighWarningColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageHighWarningColor.setStatus("mandatory")
_SensorDCvoltageSensorErrorColor_Type = Integer32
_SensorDCvoltageSensorErrorColor_Object = MibTableColumn
sensorDCvoltageSensorErrorColor = _SensorDCvoltageSensorErrorColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 6, 1, 59),
    _SensorDCvoltageSensorErrorColor_Type()
)
sensorDCvoltageSensorErrorColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorDCvoltageSensorErrorColor.setStatus("mandatory")
_SensorAirflowTable_Object = MibTable
sensorAirflowTable = _SensorAirflowTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7)
)
if mibBuilder.loadTexts:
    sensorAirflowTable.setStatus("mandatory")
_SensorAirflowEntry_Object = MibTableRow
sensorAirflowEntry = _SensorAirflowEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1)
)
sensorAirflowEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorAirflowIndex"),
)
if mibBuilder.loadTexts:
    sensorAirflowEntry.setStatus("mandatory")


class _SensorAirflowIndex_Type(Integer32):
    """Custom type sensorAirflowIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SensorAirflowIndex_Type.__name__ = "Integer32"
_SensorAirflowIndex_Object = MibTableColumn
sensorAirflowIndex = _SensorAirflowIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 1),
    _SensorAirflowIndex_Type()
)
sensorAirflowIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorAirflowIndex.setStatus("mandatory")
_SensorAirflowDescription_Type = DisplayString
_SensorAirflowDescription_Object = MibTableColumn
sensorAirflowDescription = _SensorAirflowDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 2),
    _SensorAirflowDescription_Type()
)
sensorAirflowDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowDescription.setStatus("mandatory")
_SensorAirflowValue_Type = Integer32
_SensorAirflowValue_Object = MibTableColumn
sensorAirflowValue = _SensorAirflowValue_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 4),
    _SensorAirflowValue_Type()
)
sensorAirflowValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorAirflowValue.setStatus("mandatory")


class _SensorAirflowStatus_Type(Integer32):
    """Custom type sensorAirflowStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorAirflowStatus_Type.__name__ = "Integer32"
_SensorAirflowStatus_Object = MibTableColumn
sensorAirflowStatus = _SensorAirflowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 6),
    _SensorAirflowStatus_Type()
)
sensorAirflowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorAirflowStatus.setStatus("mandatory")


class _SensorAirflowGoOffline_Type(Integer32):
    """Custom type sensorAirflowGoOffline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("online", 1))
    )


_SensorAirflowGoOffline_Type.__name__ = "Integer32"
_SensorAirflowGoOffline_Object = MibTableColumn
sensorAirflowGoOffline = _SensorAirflowGoOffline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 8),
    _SensorAirflowGoOffline_Type()
)
sensorAirflowGoOffline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowGoOffline.setStatus("mandatory")
_SensorAirflowLowCritical_Type = Integer32
_SensorAirflowLowCritical_Object = MibTableColumn
sensorAirflowLowCritical = _SensorAirflowLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 9),
    _SensorAirflowLowCritical_Type()
)
sensorAirflowLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowLowCritical.setStatus("mandatory")
_SensorAirflowLowWarning_Type = Integer32
_SensorAirflowLowWarning_Object = MibTableColumn
sensorAirflowLowWarning = _SensorAirflowLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 10),
    _SensorAirflowLowWarning_Type()
)
sensorAirflowLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowLowWarning.setStatus("mandatory")
_SensorAirflowHighWarning_Type = Integer32
_SensorAirflowHighWarning_Object = MibTableColumn
sensorAirflowHighWarning = _SensorAirflowHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 11),
    _SensorAirflowHighWarning_Type()
)
sensorAirflowHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowHighWarning.setStatus("mandatory")
_SensorAirflowHighCritical_Type = Integer32
_SensorAirflowHighCritical_Object = MibTableColumn
sensorAirflowHighCritical = _SensorAirflowHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 12),
    _SensorAirflowHighCritical_Type()
)
sensorAirflowHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowHighCritical.setStatus("mandatory")
_SensorAirflowRearm_Type = Integer32
_SensorAirflowRearm_Object = MibTableColumn
sensorAirflowRearm = _SensorAirflowRearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 13),
    _SensorAirflowRearm_Type()
)
sensorAirflowRearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowRearm.setStatus("mandatory")


class _SensorAirflowDelayError_Type(Integer32):
    """Custom type sensorAirflowDelayError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorAirflowDelayError_Type.__name__ = "Integer32"
_SensorAirflowDelayError_Object = MibTableColumn
sensorAirflowDelayError = _SensorAirflowDelayError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 14),
    _SensorAirflowDelayError_Type()
)
sensorAirflowDelayError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowDelayError.setStatus("mandatory")


class _SensorAirflowDelayNormal_Type(Integer32):
    """Custom type sensorAirflowDelayNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorAirflowDelayNormal_Type.__name__ = "Integer32"
_SensorAirflowDelayNormal_Object = MibTableColumn
sensorAirflowDelayNormal = _SensorAirflowDelayNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 15),
    _SensorAirflowDelayNormal_Type()
)
sensorAirflowDelayNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowDelayNormal.setStatus("mandatory")


class _SensorAirflowDelayLowCritical_Type(Integer32):
    """Custom type sensorAirflowDelayLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorAirflowDelayLowCritical_Type.__name__ = "Integer32"
_SensorAirflowDelayLowCritical_Object = MibTableColumn
sensorAirflowDelayLowCritical = _SensorAirflowDelayLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 16),
    _SensorAirflowDelayLowCritical_Type()
)
sensorAirflowDelayLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowDelayLowCritical.setStatus("mandatory")


class _SensorAirflowDelayLowWarning_Type(Integer32):
    """Custom type sensorAirflowDelayLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorAirflowDelayLowWarning_Type.__name__ = "Integer32"
_SensorAirflowDelayLowWarning_Object = MibTableColumn
sensorAirflowDelayLowWarning = _SensorAirflowDelayLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 17),
    _SensorAirflowDelayLowWarning_Type()
)
sensorAirflowDelayLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowDelayLowWarning.setStatus("mandatory")


class _SensorAirflowDelayHighWarning_Type(Integer32):
    """Custom type sensorAirflowDelayHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorAirflowDelayHighWarning_Type.__name__ = "Integer32"
_SensorAirflowDelayHighWarning_Object = MibTableColumn
sensorAirflowDelayHighWarning = _SensorAirflowDelayHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 18),
    _SensorAirflowDelayHighWarning_Type()
)
sensorAirflowDelayHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowDelayHighWarning.setStatus("mandatory")


class _SensorAirflowDelayHighCritical_Type(Integer32):
    """Custom type sensorAirflowDelayHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorAirflowDelayHighCritical_Type.__name__ = "Integer32"
_SensorAirflowDelayHighCritical_Object = MibTableColumn
sensorAirflowDelayHighCritical = _SensorAirflowDelayHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 19),
    _SensorAirflowDelayHighCritical_Type()
)
sensorAirflowDelayHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowDelayHighCritical.setStatus("mandatory")
_SensorAirflowRaw_Type = Integer32
_SensorAirflowRaw_Object = MibTableColumn
sensorAirflowRaw = _SensorAirflowRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 20),
    _SensorAirflowRaw_Type()
)
sensorAirflowRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorAirflowRaw.setStatus("mandatory")


class _SensorAirflowPort_Type(Integer32):
    """Custom type sensorAirflowPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorAirflowPort_Type.__name__ = "Integer32"
_SensorAirflowPort_Object = MibTableColumn
sensorAirflowPort = _SensorAirflowPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 35),
    _SensorAirflowPort_Type()
)
sensorAirflowPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorAirflowPort.setStatus("mandatory")


class _SensorAirflowSubPort_Type(Integer32):
    """Custom type sensorAirflowSubPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorAirflowSubPort_Type.__name__ = "Integer32"
_SensorAirflowSubPort_Object = MibTableColumn
sensorAirflowSubPort = _SensorAirflowSubPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 36),
    _SensorAirflowSubPort_Type()
)
sensorAirflowSubPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorAirflowSubPort.setStatus("mandatory")


class _SensorAirflowDeviceIndex_Type(Integer32):
    """Custom type sensorAirflowDeviceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorAirflowDeviceIndex_Type.__name__ = "Integer32"
_SensorAirflowDeviceIndex_Object = MibTableColumn
sensorAirflowDeviceIndex = _SensorAirflowDeviceIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 37),
    _SensorAirflowDeviceIndex_Type()
)
sensorAirflowDeviceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorAirflowDeviceIndex.setStatus("mandatory")


class _SensorAirflowDisplayStyle_Type(Integer32):
    """Custom type sensorAirflowDisplayStyle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("basic", 0),
          ("gauge", 1))
    )


_SensorAirflowDisplayStyle_Type.__name__ = "Integer32"
_SensorAirflowDisplayStyle_Object = MibTableColumn
sensorAirflowDisplayStyle = _SensorAirflowDisplayStyle_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 45),
    _SensorAirflowDisplayStyle_Type()
)
sensorAirflowDisplayStyle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowDisplayStyle.setStatus("mandatory")
_SensorAirflowHighCriticalDesc_Type = DisplayString
_SensorAirflowHighCriticalDesc_Object = MibTableColumn
sensorAirflowHighCriticalDesc = _SensorAirflowHighCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 46),
    _SensorAirflowHighCriticalDesc_Type()
)
sensorAirflowHighCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowHighCriticalDesc.setStatus("mandatory")
_SensorAirflowLowCriticalDesc_Type = DisplayString
_SensorAirflowLowCriticalDesc_Object = MibTableColumn
sensorAirflowLowCriticalDesc = _SensorAirflowLowCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 47),
    _SensorAirflowLowCriticalDesc_Type()
)
sensorAirflowLowCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowLowCriticalDesc.setStatus("mandatory")
_SensorAirflowNormalDesc_Type = DisplayString
_SensorAirflowNormalDesc_Object = MibTableColumn
sensorAirflowNormalDesc = _SensorAirflowNormalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 48),
    _SensorAirflowNormalDesc_Type()
)
sensorAirflowNormalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowNormalDesc.setStatus("mandatory")
_SensorAirflowLowWarningDesc_Type = DisplayString
_SensorAirflowLowWarningDesc_Object = MibTableColumn
sensorAirflowLowWarningDesc = _SensorAirflowLowWarningDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 49),
    _SensorAirflowLowWarningDesc_Type()
)
sensorAirflowLowWarningDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowLowWarningDesc.setStatus("mandatory")
_SensorAirflowHighWarningDesc_Type = DisplayString
_SensorAirflowHighWarningDesc_Object = MibTableColumn
sensorAirflowHighWarningDesc = _SensorAirflowHighWarningDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 50),
    _SensorAirflowHighWarningDesc_Type()
)
sensorAirflowHighWarningDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowHighWarningDesc.setStatus("mandatory")
_SensorAirflowSensorErrorDesc_Type = DisplayString
_SensorAirflowSensorErrorDesc_Object = MibTableColumn
sensorAirflowSensorErrorDesc = _SensorAirflowSensorErrorDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 51),
    _SensorAirflowSensorErrorDesc_Type()
)
sensorAirflowSensorErrorDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowSensorErrorDesc.setStatus("mandatory")
_SensorAirflowHighCriticalColor_Type = Integer32
_SensorAirflowHighCriticalColor_Object = MibTableColumn
sensorAirflowHighCriticalColor = _SensorAirflowHighCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 54),
    _SensorAirflowHighCriticalColor_Type()
)
sensorAirflowHighCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowHighCriticalColor.setStatus("mandatory")
_SensorAirflowLowCriticalColor_Type = Integer32
_SensorAirflowLowCriticalColor_Object = MibTableColumn
sensorAirflowLowCriticalColor = _SensorAirflowLowCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 55),
    _SensorAirflowLowCriticalColor_Type()
)
sensorAirflowLowCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowLowCriticalColor.setStatus("mandatory")
_SensorAirflowNormalColor_Type = Integer32
_SensorAirflowNormalColor_Object = MibTableColumn
sensorAirflowNormalColor = _SensorAirflowNormalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 56),
    _SensorAirflowNormalColor_Type()
)
sensorAirflowNormalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowNormalColor.setStatus("mandatory")
_SensorAirflowLowWarningColor_Type = Integer32
_SensorAirflowLowWarningColor_Object = MibTableColumn
sensorAirflowLowWarningColor = _SensorAirflowLowWarningColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 57),
    _SensorAirflowLowWarningColor_Type()
)
sensorAirflowLowWarningColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowLowWarningColor.setStatus("mandatory")
_SensorAirflowHighWarningColor_Type = Integer32
_SensorAirflowHighWarningColor_Object = MibTableColumn
sensorAirflowHighWarningColor = _SensorAirflowHighWarningColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 58),
    _SensorAirflowHighWarningColor_Type()
)
sensorAirflowHighWarningColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowHighWarningColor.setStatus("mandatory")
_SensorAirflowSensorErrorColor_Type = Integer32
_SensorAirflowSensorErrorColor_Object = MibTableColumn
sensorAirflowSensorErrorColor = _SensorAirflowSensorErrorColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 7, 1, 59),
    _SensorAirflowSensorErrorColor_Type()
)
sensorAirflowSensorErrorColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorAirflowSensorErrorColor.setStatus("mandatory")
_SensorMotionTable_Object = MibTable
sensorMotionTable = _SensorMotionTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 8)
)
if mibBuilder.loadTexts:
    sensorMotionTable.setStatus("mandatory")
_SensorMotionEntry_Object = MibTableRow
sensorMotionEntry = _SensorMotionEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 8, 1)
)
sensorMotionEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorMotionIndex"),
)
if mibBuilder.loadTexts:
    sensorMotionEntry.setStatus("mandatory")


class _SensorMotionIndex_Type(Integer32):
    """Custom type sensorMotionIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SensorMotionIndex_Type.__name__ = "Integer32"
_SensorMotionIndex_Object = MibTableColumn
sensorMotionIndex = _SensorMotionIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 8, 1, 1),
    _SensorMotionIndex_Type()
)
sensorMotionIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorMotionIndex.setStatus("mandatory")
_SensorMotionDescription_Type = DisplayString
_SensorMotionDescription_Object = MibTableColumn
sensorMotionDescription = _SensorMotionDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 8, 1, 2),
    _SensorMotionDescription_Type()
)
sensorMotionDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorMotionDescription.setStatus("mandatory")


class _SensorMotionStatus_Type(Integer32):
    """Custom type sensorMotionStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorMotionStatus_Type.__name__ = "Integer32"
_SensorMotionStatus_Object = MibTableColumn
sensorMotionStatus = _SensorMotionStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 8, 1, 6),
    _SensorMotionStatus_Type()
)
sensorMotionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorMotionStatus.setStatus("mandatory")


class _SensorMotionGoOffline_Type(Integer32):
    """Custom type sensorMotionGoOffline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("online", 1))
    )


_SensorMotionGoOffline_Type.__name__ = "Integer32"
_SensorMotionGoOffline_Object = MibTableColumn
sensorMotionGoOffline = _SensorMotionGoOffline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 8, 1, 8),
    _SensorMotionGoOffline_Type()
)
sensorMotionGoOffline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorMotionGoOffline.setStatus("mandatory")


class _SensorMotionPort_Type(Integer32):
    """Custom type sensorMotionPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorMotionPort_Type.__name__ = "Integer32"
_SensorMotionPort_Object = MibTableColumn
sensorMotionPort = _SensorMotionPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 8, 1, 35),
    _SensorMotionPort_Type()
)
sensorMotionPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorMotionPort.setStatus("mandatory")


class _SensorMotionSubPort_Type(Integer32):
    """Custom type sensorMotionSubPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorMotionSubPort_Type.__name__ = "Integer32"
_SensorMotionSubPort_Object = MibTableColumn
sensorMotionSubPort = _SensorMotionSubPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 8, 1, 36),
    _SensorMotionSubPort_Type()
)
sensorMotionSubPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorMotionSubPort.setStatus("mandatory")


class _SensorMotionDeviceIndex_Type(Integer32):
    """Custom type sensorMotionDeviceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorMotionDeviceIndex_Type.__name__ = "Integer32"
_SensorMotionDeviceIndex_Object = MibTableColumn
sensorMotionDeviceIndex = _SensorMotionDeviceIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 8, 1, 37),
    _SensorMotionDeviceIndex_Type()
)
sensorMotionDeviceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorMotionDeviceIndex.setStatus("mandatory")
_SensorMotionCriticalDesc_Type = DisplayString
_SensorMotionCriticalDesc_Object = MibTableColumn
sensorMotionCriticalDesc = _SensorMotionCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 8, 1, 46),
    _SensorMotionCriticalDesc_Type()
)
sensorMotionCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorMotionCriticalDesc.setStatus("mandatory")
_SensorMotionNormalDesc_Type = DisplayString
_SensorMotionNormalDesc_Object = MibTableColumn
sensorMotionNormalDesc = _SensorMotionNormalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 8, 1, 48),
    _SensorMotionNormalDesc_Type()
)
sensorMotionNormalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorMotionNormalDesc.setStatus("mandatory")
_SensorMotionCriticalColor_Type = Integer32
_SensorMotionCriticalColor_Object = MibTableColumn
sensorMotionCriticalColor = _SensorMotionCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 8, 1, 54),
    _SensorMotionCriticalColor_Type()
)
sensorMotionCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorMotionCriticalColor.setStatus("mandatory")
_SensorMotionNormalColor_Type = Integer32
_SensorMotionNormalColor_Object = MibTableColumn
sensorMotionNormalColor = _SensorMotionNormalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 8, 1, 56),
    _SensorMotionNormalColor_Type()
)
sensorMotionNormalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorMotionNormalColor.setStatus("mandatory")
_SensorWaterTable_Object = MibTable
sensorWaterTable = _SensorWaterTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 9)
)
if mibBuilder.loadTexts:
    sensorWaterTable.setStatus("mandatory")
_SensorWaterEntry_Object = MibTableRow
sensorWaterEntry = _SensorWaterEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 9, 1)
)
sensorWaterEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorWaterIndex"),
)
if mibBuilder.loadTexts:
    sensorWaterEntry.setStatus("mandatory")


class _SensorWaterIndex_Type(Integer32):
    """Custom type sensorWaterIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SensorWaterIndex_Type.__name__ = "Integer32"
_SensorWaterIndex_Object = MibTableColumn
sensorWaterIndex = _SensorWaterIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 9, 1, 1),
    _SensorWaterIndex_Type()
)
sensorWaterIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorWaterIndex.setStatus("mandatory")
_SensorWaterDescription_Type = DisplayString
_SensorWaterDescription_Object = MibTableColumn
sensorWaterDescription = _SensorWaterDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 9, 1, 2),
    _SensorWaterDescription_Type()
)
sensorWaterDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorWaterDescription.setStatus("mandatory")


class _SensorWaterStatus_Type(Integer32):
    """Custom type sensorWaterStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorWaterStatus_Type.__name__ = "Integer32"
_SensorWaterStatus_Object = MibTableColumn
sensorWaterStatus = _SensorWaterStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 9, 1, 6),
    _SensorWaterStatus_Type()
)
sensorWaterStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorWaterStatus.setStatus("mandatory")


class _SensorWaterGoOffline_Type(Integer32):
    """Custom type sensorWaterGoOffline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("online", 1))
    )


_SensorWaterGoOffline_Type.__name__ = "Integer32"
_SensorWaterGoOffline_Object = MibTableColumn
sensorWaterGoOffline = _SensorWaterGoOffline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 9, 1, 8),
    _SensorWaterGoOffline_Type()
)
sensorWaterGoOffline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorWaterGoOffline.setStatus("mandatory")


class _SensorWaterPort_Type(Integer32):
    """Custom type sensorWaterPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorWaterPort_Type.__name__ = "Integer32"
_SensorWaterPort_Object = MibTableColumn
sensorWaterPort = _SensorWaterPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 9, 1, 35),
    _SensorWaterPort_Type()
)
sensorWaterPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorWaterPort.setStatus("mandatory")


class _SensorWaterSubPort_Type(Integer32):
    """Custom type sensorWaterSubPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorWaterSubPort_Type.__name__ = "Integer32"
_SensorWaterSubPort_Object = MibTableColumn
sensorWaterSubPort = _SensorWaterSubPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 9, 1, 36),
    _SensorWaterSubPort_Type()
)
sensorWaterSubPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorWaterSubPort.setStatus("mandatory")


class _SensorWaterDeviceIndex_Type(Integer32):
    """Custom type sensorWaterDeviceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorWaterDeviceIndex_Type.__name__ = "Integer32"
_SensorWaterDeviceIndex_Object = MibTableColumn
sensorWaterDeviceIndex = _SensorWaterDeviceIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 9, 1, 37),
    _SensorWaterDeviceIndex_Type()
)
sensorWaterDeviceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorWaterDeviceIndex.setStatus("mandatory")
_SensorWaterCriticalDesc_Type = DisplayString
_SensorWaterCriticalDesc_Object = MibTableColumn
sensorWaterCriticalDesc = _SensorWaterCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 9, 1, 46),
    _SensorWaterCriticalDesc_Type()
)
sensorWaterCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorWaterCriticalDesc.setStatus("mandatory")
_SensorWaterNormalDesc_Type = DisplayString
_SensorWaterNormalDesc_Object = MibTableColumn
sensorWaterNormalDesc = _SensorWaterNormalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 9, 1, 48),
    _SensorWaterNormalDesc_Type()
)
sensorWaterNormalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorWaterNormalDesc.setStatus("mandatory")
_SensorWaterCriticalColor_Type = Integer32
_SensorWaterCriticalColor_Object = MibTableColumn
sensorWaterCriticalColor = _SensorWaterCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 9, 1, 54),
    _SensorWaterCriticalColor_Type()
)
sensorWaterCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorWaterCriticalColor.setStatus("mandatory")
_SensorWaterNormalColor_Type = Integer32
_SensorWaterNormalColor_Object = MibTableColumn
sensorWaterNormalColor = _SensorWaterNormalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 9, 1, 56),
    _SensorWaterNormalColor_Type()
)
sensorWaterNormalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorWaterNormalColor.setStatus("mandatory")
_SensorSecurityTable_Object = MibTable
sensorSecurityTable = _SensorSecurityTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 10)
)
if mibBuilder.loadTexts:
    sensorSecurityTable.setStatus("mandatory")
_SensorSecurityEntry_Object = MibTableRow
sensorSecurityEntry = _SensorSecurityEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 10, 1)
)
sensorSecurityEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorSecurityIndex"),
)
if mibBuilder.loadTexts:
    sensorSecurityEntry.setStatus("mandatory")


class _SensorSecurityIndex_Type(Integer32):
    """Custom type sensorSecurityIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SensorSecurityIndex_Type.__name__ = "Integer32"
_SensorSecurityIndex_Object = MibTableColumn
sensorSecurityIndex = _SensorSecurityIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 10, 1, 1),
    _SensorSecurityIndex_Type()
)
sensorSecurityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorSecurityIndex.setStatus("mandatory")
_SensorSecurityDescription_Type = DisplayString
_SensorSecurityDescription_Object = MibTableColumn
sensorSecurityDescription = _SensorSecurityDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 10, 1, 2),
    _SensorSecurityDescription_Type()
)
sensorSecurityDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorSecurityDescription.setStatus("mandatory")


class _SensorSecurityStatus_Type(Integer32):
    """Custom type sensorSecurityStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorSecurityStatus_Type.__name__ = "Integer32"
_SensorSecurityStatus_Object = MibTableColumn
sensorSecurityStatus = _SensorSecurityStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 10, 1, 6),
    _SensorSecurityStatus_Type()
)
sensorSecurityStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorSecurityStatus.setStatus("mandatory")


class _SensorSecurityGoOffline_Type(Integer32):
    """Custom type sensorSecurityGoOffline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("online", 1))
    )


_SensorSecurityGoOffline_Type.__name__ = "Integer32"
_SensorSecurityGoOffline_Object = MibTableColumn
sensorSecurityGoOffline = _SensorSecurityGoOffline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 10, 1, 8),
    _SensorSecurityGoOffline_Type()
)
sensorSecurityGoOffline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorSecurityGoOffline.setStatus("mandatory")


class _SensorSecurityPort_Type(Integer32):
    """Custom type sensorSecurityPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorSecurityPort_Type.__name__ = "Integer32"
_SensorSecurityPort_Object = MibTableColumn
sensorSecurityPort = _SensorSecurityPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 10, 1, 35),
    _SensorSecurityPort_Type()
)
sensorSecurityPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorSecurityPort.setStatus("mandatory")


class _SensorSecuritySubPort_Type(Integer32):
    """Custom type sensorSecuritySubPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorSecuritySubPort_Type.__name__ = "Integer32"
_SensorSecuritySubPort_Object = MibTableColumn
sensorSecuritySubPort = _SensorSecuritySubPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 10, 1, 36),
    _SensorSecuritySubPort_Type()
)
sensorSecuritySubPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorSecuritySubPort.setStatus("mandatory")


class _SensorSecurityDeviceIndex_Type(Integer32):
    """Custom type sensorSecurityDeviceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorSecurityDeviceIndex_Type.__name__ = "Integer32"
_SensorSecurityDeviceIndex_Object = MibTableColumn
sensorSecurityDeviceIndex = _SensorSecurityDeviceIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 10, 1, 37),
    _SensorSecurityDeviceIndex_Type()
)
sensorSecurityDeviceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorSecurityDeviceIndex.setStatus("mandatory")
_SensorSecurityCriticalDesc_Type = DisplayString
_SensorSecurityCriticalDesc_Object = MibTableColumn
sensorSecurityCriticalDesc = _SensorSecurityCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 10, 1, 46),
    _SensorSecurityCriticalDesc_Type()
)
sensorSecurityCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorSecurityCriticalDesc.setStatus("mandatory")
_SensorSecurityNormalDesc_Type = DisplayString
_SensorSecurityNormalDesc_Object = MibTableColumn
sensorSecurityNormalDesc = _SensorSecurityNormalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 10, 1, 48),
    _SensorSecurityNormalDesc_Type()
)
sensorSecurityNormalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorSecurityNormalDesc.setStatus("mandatory")
_SensorSecurityCriticalColor_Type = Integer32
_SensorSecurityCriticalColor_Object = MibTableColumn
sensorSecurityCriticalColor = _SensorSecurityCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 10, 1, 54),
    _SensorSecurityCriticalColor_Type()
)
sensorSecurityCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorSecurityCriticalColor.setStatus("mandatory")
_SensorSecurityNormalColor_Type = Integer32
_SensorSecurityNormalColor_Object = MibTableColumn
sensorSecurityNormalColor = _SensorSecurityNormalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 10, 1, 56),
    _SensorSecurityNormalColor_Type()
)
sensorSecurityNormalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorSecurityNormalColor.setStatus("mandatory")
_SensorSirenTable_Object = MibTable
sensorSirenTable = _SensorSirenTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 11)
)
if mibBuilder.loadTexts:
    sensorSirenTable.setStatus("mandatory")
_SensorSirenEntry_Object = MibTableRow
sensorSirenEntry = _SensorSirenEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 11, 1)
)
sensorSirenEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorSirenIndex"),
)
if mibBuilder.loadTexts:
    sensorSirenEntry.setStatus("mandatory")


class _SensorSirenIndex_Type(Integer32):
    """Custom type sensorSirenIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SensorSirenIndex_Type.__name__ = "Integer32"
_SensorSirenIndex_Object = MibTableColumn
sensorSirenIndex = _SensorSirenIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 11, 1, 1),
    _SensorSirenIndex_Type()
)
sensorSirenIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorSirenIndex.setStatus("mandatory")
_SensorSirenDescription_Type = DisplayString
_SensorSirenDescription_Object = MibTableColumn
sensorSirenDescription = _SensorSirenDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 11, 1, 2),
    _SensorSirenDescription_Type()
)
sensorSirenDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorSirenDescription.setStatus("mandatory")


class _SensorSirenStatus_Type(Integer32):
    """Custom type sensorSirenStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorSirenStatus_Type.__name__ = "Integer32"
_SensorSirenStatus_Object = MibTableColumn
sensorSirenStatus = _SensorSirenStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 11, 1, 6),
    _SensorSirenStatus_Type()
)
sensorSirenStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorSirenStatus.setStatus("mandatory")


class _SensorSirenGoOffline_Type(Integer32):
    """Custom type sensorSirenGoOffline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("online", 1))
    )


_SensorSirenGoOffline_Type.__name__ = "Integer32"
_SensorSirenGoOffline_Object = MibTableColumn
sensorSirenGoOffline = _SensorSirenGoOffline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 11, 1, 8),
    _SensorSirenGoOffline_Type()
)
sensorSirenGoOffline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorSirenGoOffline.setStatus("mandatory")


class _SensorSirenControlMode_Type(Integer32):
    """Custom type sensorSirenControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("manual-control", 0),
          ("sensor-control", 1),
          ("thermostat-control", 3),
          ("time-control", 2))
    )


_SensorSirenControlMode_Type.__name__ = "Integer32"
_SensorSirenControlMode_Object = MibTableColumn
sensorSirenControlMode = _SensorSirenControlMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 11, 1, 24),
    _SensorSirenControlMode_Type()
)
sensorSirenControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorSirenControlMode.setStatus("mandatory")


class _SensorSirenManualCycleTime_Type(Integer32):
    """Custom type sensorSirenManualCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorSirenManualCycleTime_Type.__name__ = "Integer32"
_SensorSirenManualCycleTime_Object = MibTableColumn
sensorSirenManualCycleTime = _SensorSirenManualCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 11, 1, 25),
    _SensorSirenManualCycleTime_Type()
)
sensorSirenManualCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorSirenManualCycleTime.setStatus("mandatory")


class _SensorSirenManualAction_Type(Integer32):
    """Custom type sensorSirenManualAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("cycle-Off-On-Off", 3),
          ("cycle-On-Off-On", 2),
          ("turn-Off", 1),
          ("turn-On", 0))
    )


_SensorSirenManualAction_Type.__name__ = "Integer32"
_SensorSirenManualAction_Object = MibTableColumn
sensorSirenManualAction = _SensorSirenManualAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 11, 1, 26),
    _SensorSirenManualAction_Type()
)
sensorSirenManualAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorSirenManualAction.setStatus("mandatory")


class _SensorSirenPort_Type(Integer32):
    """Custom type sensorSirenPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorSirenPort_Type.__name__ = "Integer32"
_SensorSirenPort_Object = MibTableColumn
sensorSirenPort = _SensorSirenPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 11, 1, 35),
    _SensorSirenPort_Type()
)
sensorSirenPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorSirenPort.setStatus("mandatory")


class _SensorSirenSubPort_Type(Integer32):
    """Custom type sensorSirenSubPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorSirenSubPort_Type.__name__ = "Integer32"
_SensorSirenSubPort_Object = MibTableColumn
sensorSirenSubPort = _SensorSirenSubPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 11, 1, 36),
    _SensorSirenSubPort_Type()
)
sensorSirenSubPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorSirenSubPort.setStatus("mandatory")


class _SensorSirenDeviceIndex_Type(Integer32):
    """Custom type sensorSirenDeviceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorSirenDeviceIndex_Type.__name__ = "Integer32"
_SensorSirenDeviceIndex_Object = MibTableColumn
sensorSirenDeviceIndex = _SensorSirenDeviceIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 11, 1, 37),
    _SensorSirenDeviceIndex_Type()
)
sensorSirenDeviceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorSirenDeviceIndex.setStatus("mandatory")
_SensorSirenOnDesc_Type = DisplayString
_SensorSirenOnDesc_Object = MibTableColumn
sensorSirenOnDesc = _SensorSirenOnDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 11, 1, 52),
    _SensorSirenOnDesc_Type()
)
sensorSirenOnDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorSirenOnDesc.setStatus("mandatory")
_SensorSirenOffDesc_Type = DisplayString
_SensorSirenOffDesc_Object = MibTableColumn
sensorSirenOffDesc = _SensorSirenOffDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 11, 1, 53),
    _SensorSirenOffDesc_Type()
)
sensorSirenOffDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorSirenOffDesc.setStatus("mandatory")
_SensorSirenOnColor_Type = Integer32
_SensorSirenOnColor_Object = MibTableColumn
sensorSirenOnColor = _SensorSirenOnColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 11, 1, 60),
    _SensorSirenOnColor_Type()
)
sensorSirenOnColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorSirenOnColor.setStatus("mandatory")
_SensorSirenOffColor_Type = Integer32
_SensorSirenOffColor_Object = MibTableColumn
sensorSirenOffColor = _SensorSirenOffColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 11, 1, 61),
    _SensorSirenOffColor_Type()
)
sensorSirenOffColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorSirenOffColor.setStatus("mandatory")
_SensorRelayTable_Object = MibTable
sensorRelayTable = _SensorRelayTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 12)
)
if mibBuilder.loadTexts:
    sensorRelayTable.setStatus("mandatory")
_SensorRelayEntry_Object = MibTableRow
sensorRelayEntry = _SensorRelayEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 12, 1)
)
sensorRelayEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorRelayIndex"),
)
if mibBuilder.loadTexts:
    sensorRelayEntry.setStatus("mandatory")


class _SensorRelayIndex_Type(Integer32):
    """Custom type sensorRelayIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SensorRelayIndex_Type.__name__ = "Integer32"
_SensorRelayIndex_Object = MibTableColumn
sensorRelayIndex = _SensorRelayIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 12, 1, 1),
    _SensorRelayIndex_Type()
)
sensorRelayIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorRelayIndex.setStatus("mandatory")
_SensorRelayDescription_Type = DisplayString
_SensorRelayDescription_Object = MibTableColumn
sensorRelayDescription = _SensorRelayDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 12, 1, 2),
    _SensorRelayDescription_Type()
)
sensorRelayDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorRelayDescription.setStatus("mandatory")


class _SensorRelayType_Type(Integer32):
    """Custom type sensorRelayType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(13,
              19)
        )
    )
    namedValues = NamedValues(
        *(("relay", 13),
          ("xrelay", 19))
    )


_SensorRelayType_Type.__name__ = "Integer32"
_SensorRelayType_Object = MibTableColumn
sensorRelayType = _SensorRelayType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 12, 1, 3),
    _SensorRelayType_Type()
)
sensorRelayType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorRelayType.setStatus("mandatory")


class _SensorRelayStatus_Type(Integer32):
    """Custom type sensorRelayStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorRelayStatus_Type.__name__ = "Integer32"
_SensorRelayStatus_Object = MibTableColumn
sensorRelayStatus = _SensorRelayStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 12, 1, 6),
    _SensorRelayStatus_Type()
)
sensorRelayStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorRelayStatus.setStatus("mandatory")


class _SensorRelayGoOffline_Type(Integer32):
    """Custom type sensorRelayGoOffline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("online", 1))
    )


_SensorRelayGoOffline_Type.__name__ = "Integer32"
_SensorRelayGoOffline_Object = MibTableColumn
sensorRelayGoOffline = _SensorRelayGoOffline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 12, 1, 8),
    _SensorRelayGoOffline_Type()
)
sensorRelayGoOffline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorRelayGoOffline.setStatus("mandatory")


class _SensorRelayControlMode_Type(Integer32):
    """Custom type sensorRelayControlMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("manual-control", 0),
          ("sensor-control", 1),
          ("thermostat-control", 3),
          ("time-control", 2))
    )


_SensorRelayControlMode_Type.__name__ = "Integer32"
_SensorRelayControlMode_Object = MibTableColumn
sensorRelayControlMode = _SensorRelayControlMode_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 12, 1, 24),
    _SensorRelayControlMode_Type()
)
sensorRelayControlMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorRelayControlMode.setStatus("mandatory")


class _SensorRelayManualCycleTime_Type(Integer32):
    """Custom type sensorRelayManualCycleTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SensorRelayManualCycleTime_Type.__name__ = "Integer32"
_SensorRelayManualCycleTime_Object = MibTableColumn
sensorRelayManualCycleTime = _SensorRelayManualCycleTime_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 12, 1, 25),
    _SensorRelayManualCycleTime_Type()
)
sensorRelayManualCycleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorRelayManualCycleTime.setStatus("mandatory")


class _SensorRelayManualAction_Type(Integer32):
    """Custom type sensorRelayManualAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("cycle-Off-On-Off", 3),
          ("cycle-On-Off-On", 2),
          ("turn-Off", 1),
          ("turn-On", 0))
    )


_SensorRelayManualAction_Type.__name__ = "Integer32"
_SensorRelayManualAction_Object = MibTableColumn
sensorRelayManualAction = _SensorRelayManualAction_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 12, 1, 26),
    _SensorRelayManualAction_Type()
)
sensorRelayManualAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorRelayManualAction.setStatus("mandatory")


class _SensorRelayPort_Type(Integer32):
    """Custom type sensorRelayPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorRelayPort_Type.__name__ = "Integer32"
_SensorRelayPort_Object = MibTableColumn
sensorRelayPort = _SensorRelayPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 12, 1, 35),
    _SensorRelayPort_Type()
)
sensorRelayPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorRelayPort.setStatus("mandatory")


class _SensorRelaySubPort_Type(Integer32):
    """Custom type sensorRelaySubPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorRelaySubPort_Type.__name__ = "Integer32"
_SensorRelaySubPort_Object = MibTableColumn
sensorRelaySubPort = _SensorRelaySubPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 12, 1, 36),
    _SensorRelaySubPort_Type()
)
sensorRelaySubPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorRelaySubPort.setStatus("mandatory")


class _SensorRelayDeviceIndex_Type(Integer32):
    """Custom type sensorRelayDeviceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorRelayDeviceIndex_Type.__name__ = "Integer32"
_SensorRelayDeviceIndex_Object = MibTableColumn
sensorRelayDeviceIndex = _SensorRelayDeviceIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 12, 1, 37),
    _SensorRelayDeviceIndex_Type()
)
sensorRelayDeviceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorRelayDeviceIndex.setStatus("mandatory")
_SensorRelayOnDesc_Type = DisplayString
_SensorRelayOnDesc_Object = MibTableColumn
sensorRelayOnDesc = _SensorRelayOnDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 12, 1, 52),
    _SensorRelayOnDesc_Type()
)
sensorRelayOnDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorRelayOnDesc.setStatus("mandatory")
_SensorRelayOffDesc_Type = DisplayString
_SensorRelayOffDesc_Object = MibTableColumn
sensorRelayOffDesc = _SensorRelayOffDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 12, 1, 53),
    _SensorRelayOffDesc_Type()
)
sensorRelayOffDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorRelayOffDesc.setStatus("mandatory")
_SensorRelayOnColor_Type = Integer32
_SensorRelayOnColor_Object = MibTableColumn
sensorRelayOnColor = _SensorRelayOnColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 12, 1, 60),
    _SensorRelayOnColor_Type()
)
sensorRelayOnColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorRelayOnColor.setStatus("mandatory")
_SensorRelayOffColor_Type = Integer32
_SensorRelayOffColor_Object = MibTableColumn
sensorRelayOffColor = _SensorRelayOffColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 12, 1, 61),
    _SensorRelayOffColor_Type()
)
sensorRelayOffColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorRelayOffColor.setStatus("mandatory")
_SensorACvoltageTable_Object = MibTable
sensorACvoltageTable = _SensorACvoltageTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 13)
)
if mibBuilder.loadTexts:
    sensorACvoltageTable.setStatus("mandatory")
_SensorACvoltageEntry_Object = MibTableRow
sensorACvoltageEntry = _SensorACvoltageEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 13, 1)
)
sensorACvoltageEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorACvoltageIndex"),
)
if mibBuilder.loadTexts:
    sensorACvoltageEntry.setStatus("mandatory")


class _SensorACvoltageIndex_Type(Integer32):
    """Custom type sensorACvoltageIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SensorACvoltageIndex_Type.__name__ = "Integer32"
_SensorACvoltageIndex_Object = MibTableColumn
sensorACvoltageIndex = _SensorACvoltageIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 13, 1, 1),
    _SensorACvoltageIndex_Type()
)
sensorACvoltageIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorACvoltageIndex.setStatus("mandatory")
_SensorACvoltageDescription_Type = DisplayString
_SensorACvoltageDescription_Object = MibTableColumn
sensorACvoltageDescription = _SensorACvoltageDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 13, 1, 2),
    _SensorACvoltageDescription_Type()
)
sensorACvoltageDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorACvoltageDescription.setStatus("mandatory")


class _SensorACvoltageStatus_Type(Integer32):
    """Custom type sensorACvoltageStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorACvoltageStatus_Type.__name__ = "Integer32"
_SensorACvoltageStatus_Object = MibTableColumn
sensorACvoltageStatus = _SensorACvoltageStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 13, 1, 6),
    _SensorACvoltageStatus_Type()
)
sensorACvoltageStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorACvoltageStatus.setStatus("mandatory")


class _SensorACvoltageGoOffline_Type(Integer32):
    """Custom type sensorACvoltageGoOffline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("online", 1))
    )


_SensorACvoltageGoOffline_Type.__name__ = "Integer32"
_SensorACvoltageGoOffline_Object = MibTableColumn
sensorACvoltageGoOffline = _SensorACvoltageGoOffline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 13, 1, 8),
    _SensorACvoltageGoOffline_Type()
)
sensorACvoltageGoOffline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorACvoltageGoOffline.setStatus("mandatory")


class _SensorACvoltagePort_Type(Integer32):
    """Custom type sensorACvoltagePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorACvoltagePort_Type.__name__ = "Integer32"
_SensorACvoltagePort_Object = MibTableColumn
sensorACvoltagePort = _SensorACvoltagePort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 13, 1, 35),
    _SensorACvoltagePort_Type()
)
sensorACvoltagePort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorACvoltagePort.setStatus("mandatory")


class _SensorACvoltageSubPort_Type(Integer32):
    """Custom type sensorACvoltageSubPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorACvoltageSubPort_Type.__name__ = "Integer32"
_SensorACvoltageSubPort_Object = MibTableColumn
sensorACvoltageSubPort = _SensorACvoltageSubPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 13, 1, 36),
    _SensorACvoltageSubPort_Type()
)
sensorACvoltageSubPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorACvoltageSubPort.setStatus("mandatory")


class _SensorACvoltageDeviceIndex_Type(Integer32):
    """Custom type sensorACvoltageDeviceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorACvoltageDeviceIndex_Type.__name__ = "Integer32"
_SensorACvoltageDeviceIndex_Object = MibTableColumn
sensorACvoltageDeviceIndex = _SensorACvoltageDeviceIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 13, 1, 37),
    _SensorACvoltageDeviceIndex_Type()
)
sensorACvoltageDeviceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorACvoltageDeviceIndex.setStatus("mandatory")
_SensorACvoltageCriticalDesc_Type = DisplayString
_SensorACvoltageCriticalDesc_Object = MibTableColumn
sensorACvoltageCriticalDesc = _SensorACvoltageCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 13, 1, 46),
    _SensorACvoltageCriticalDesc_Type()
)
sensorACvoltageCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorACvoltageCriticalDesc.setStatus("mandatory")
_SensorACvoltageNormalDesc_Type = DisplayString
_SensorACvoltageNormalDesc_Object = MibTableColumn
sensorACvoltageNormalDesc = _SensorACvoltageNormalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 13, 1, 48),
    _SensorACvoltageNormalDesc_Type()
)
sensorACvoltageNormalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorACvoltageNormalDesc.setStatus("mandatory")
_SensorACvoltageCriticalColor_Type = Integer32
_SensorACvoltageCriticalColor_Object = MibTableColumn
sensorACvoltageCriticalColor = _SensorACvoltageCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 13, 1, 54),
    _SensorACvoltageCriticalColor_Type()
)
sensorACvoltageCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorACvoltageCriticalColor.setStatus("mandatory")
_SensorACvoltageNormalColor_Type = Integer32
_SensorACvoltageNormalColor_Object = MibTableColumn
sensorACvoltageNormalColor = _SensorACvoltageNormalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 13, 1, 56),
    _SensorACvoltageNormalColor_Type()
)
sensorACvoltageNormalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorACvoltageNormalColor.setStatus("mandatory")
_SensorSmokeTable_Object = MibTable
sensorSmokeTable = _SensorSmokeTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 14)
)
if mibBuilder.loadTexts:
    sensorSmokeTable.setStatus("mandatory")
_SensorSmokeEntry_Object = MibTableRow
sensorSmokeEntry = _SensorSmokeEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 14, 1)
)
sensorSmokeEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorSmokeIndex"),
)
if mibBuilder.loadTexts:
    sensorSmokeEntry.setStatus("mandatory")


class _SensorSmokeIndex_Type(Integer32):
    """Custom type sensorSmokeIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SensorSmokeIndex_Type.__name__ = "Integer32"
_SensorSmokeIndex_Object = MibTableColumn
sensorSmokeIndex = _SensorSmokeIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 14, 1, 1),
    _SensorSmokeIndex_Type()
)
sensorSmokeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorSmokeIndex.setStatus("mandatory")
_SensorSmokeDescription_Type = DisplayString
_SensorSmokeDescription_Object = MibTableColumn
sensorSmokeDescription = _SensorSmokeDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 14, 1, 2),
    _SensorSmokeDescription_Type()
)
sensorSmokeDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorSmokeDescription.setStatus("mandatory")


class _SensorSmokeStatus_Type(Integer32):
    """Custom type sensorSmokeStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("relayOff", 9),
          ("relayOn", 8),
          ("sensorError", 7))
    )


_SensorSmokeStatus_Type.__name__ = "Integer32"
_SensorSmokeStatus_Object = MibTableColumn
sensorSmokeStatus = _SensorSmokeStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 14, 1, 6),
    _SensorSmokeStatus_Type()
)
sensorSmokeStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorSmokeStatus.setStatus("mandatory")


class _SensorSmokeGoOffline_Type(Integer32):
    """Custom type sensorSmokeGoOffline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("online", 1))
    )


_SensorSmokeGoOffline_Type.__name__ = "Integer32"
_SensorSmokeGoOffline_Object = MibTableColumn
sensorSmokeGoOffline = _SensorSmokeGoOffline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 14, 1, 8),
    _SensorSmokeGoOffline_Type()
)
sensorSmokeGoOffline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorSmokeGoOffline.setStatus("mandatory")


class _SensorSmokePort_Type(Integer32):
    """Custom type sensorSmokePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorSmokePort_Type.__name__ = "Integer32"
_SensorSmokePort_Object = MibTableColumn
sensorSmokePort = _SensorSmokePort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 14, 1, 35),
    _SensorSmokePort_Type()
)
sensorSmokePort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorSmokePort.setStatus("mandatory")


class _SensorSmokeSubPort_Type(Integer32):
    """Custom type sensorSmokeSubPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorSmokeSubPort_Type.__name__ = "Integer32"
_SensorSmokeSubPort_Object = MibTableColumn
sensorSmokeSubPort = _SensorSmokeSubPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 14, 1, 36),
    _SensorSmokeSubPort_Type()
)
sensorSmokeSubPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorSmokeSubPort.setStatus("mandatory")


class _SensorSmokeDeviceIndex_Type(Integer32):
    """Custom type sensorSmokeDeviceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorSmokeDeviceIndex_Type.__name__ = "Integer32"
_SensorSmokeDeviceIndex_Object = MibTableColumn
sensorSmokeDeviceIndex = _SensorSmokeDeviceIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 14, 1, 37),
    _SensorSmokeDeviceIndex_Type()
)
sensorSmokeDeviceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorSmokeDeviceIndex.setStatus("mandatory")
_SensorSmokeCriticalDesc_Type = DisplayString
_SensorSmokeCriticalDesc_Object = MibTableColumn
sensorSmokeCriticalDesc = _SensorSmokeCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 14, 1, 46),
    _SensorSmokeCriticalDesc_Type()
)
sensorSmokeCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorSmokeCriticalDesc.setStatus("mandatory")
_SensorSmokeNormalDesc_Type = DisplayString
_SensorSmokeNormalDesc_Object = MibTableColumn
sensorSmokeNormalDesc = _SensorSmokeNormalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 14, 1, 48),
    _SensorSmokeNormalDesc_Type()
)
sensorSmokeNormalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorSmokeNormalDesc.setStatus("mandatory")
_SensorSmokeCriticalColor_Type = Integer32
_SensorSmokeCriticalColor_Object = MibTableColumn
sensorSmokeCriticalColor = _SensorSmokeCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 14, 1, 54),
    _SensorSmokeCriticalColor_Type()
)
sensorSmokeCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorSmokeCriticalColor.setStatus("mandatory")
_SensorSmokeNormalColor_Type = Integer32
_SensorSmokeNormalColor_Object = MibTableColumn
sensorSmokeNormalColor = _SensorSmokeNormalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 14, 1, 56),
    _SensorSmokeNormalColor_Type()
)
sensorSmokeNormalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorSmokeNormalColor.setStatus("mandatory")
_SensorThermostatTable_Object = MibTable
sensorThermostatTable = _SensorThermostatTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20)
)
if mibBuilder.loadTexts:
    sensorThermostatTable.setStatus("mandatory")
_SensorThermostatEntry_Object = MibTableRow
sensorThermostatEntry = _SensorThermostatEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1)
)
sensorThermostatEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorThermostatIndex"),
)
if mibBuilder.loadTexts:
    sensorThermostatEntry.setStatus("mandatory")


class _SensorThermostatIndex_Type(Integer32):
    """Custom type sensorThermostatIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SensorThermostatIndex_Type.__name__ = "Integer32"
_SensorThermostatIndex_Object = MibTableColumn
sensorThermostatIndex = _SensorThermostatIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 1),
    _SensorThermostatIndex_Type()
)
sensorThermostatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorThermostatIndex.setStatus("mandatory")
_SensorThermostatDescription_Type = DisplayString
_SensorThermostatDescription_Object = MibTableColumn
sensorThermostatDescription = _SensorThermostatDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 2),
    _SensorThermostatDescription_Type()
)
sensorThermostatDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatDescription.setStatus("mandatory")
_SensorThermostatDegree_Type = Integer32
_SensorThermostatDegree_Object = MibTableColumn
sensorThermostatDegree = _SensorThermostatDegree_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 4),
    _SensorThermostatDegree_Type()
)
sensorThermostatDegree.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorThermostatDegree.setStatus("mandatory")


class _SensorThermostatStatus_Type(Integer32):
    """Custom type sensorThermostatStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorThermostatStatus_Type.__name__ = "Integer32"
_SensorThermostatStatus_Object = MibTableColumn
sensorThermostatStatus = _SensorThermostatStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 6),
    _SensorThermostatStatus_Type()
)
sensorThermostatStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorThermostatStatus.setStatus("mandatory")


class _SensorThermostatGoOffline_Type(Integer32):
    """Custom type sensorThermostatGoOffline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("online", 1))
    )


_SensorThermostatGoOffline_Type.__name__ = "Integer32"
_SensorThermostatGoOffline_Object = MibTableColumn
sensorThermostatGoOffline = _SensorThermostatGoOffline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 8),
    _SensorThermostatGoOffline_Type()
)
sensorThermostatGoOffline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatGoOffline.setStatus("mandatory")
_SensorThermostatLowCritical_Type = Integer32
_SensorThermostatLowCritical_Object = MibTableColumn
sensorThermostatLowCritical = _SensorThermostatLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 9),
    _SensorThermostatLowCritical_Type()
)
sensorThermostatLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatLowCritical.setStatus("mandatory")
_SensorThermostatLowWarning_Type = Integer32
_SensorThermostatLowWarning_Object = MibTableColumn
sensorThermostatLowWarning = _SensorThermostatLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 10),
    _SensorThermostatLowWarning_Type()
)
sensorThermostatLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatLowWarning.setStatus("mandatory")
_SensorThermostatHighWarning_Type = Integer32
_SensorThermostatHighWarning_Object = MibTableColumn
sensorThermostatHighWarning = _SensorThermostatHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 11),
    _SensorThermostatHighWarning_Type()
)
sensorThermostatHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatHighWarning.setStatus("mandatory")
_SensorThermostatHighCritical_Type = Integer32
_SensorThermostatHighCritical_Object = MibTableColumn
sensorThermostatHighCritical = _SensorThermostatHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 12),
    _SensorThermostatHighCritical_Type()
)
sensorThermostatHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatHighCritical.setStatus("mandatory")
_SensorThermostatRearm_Type = Integer32
_SensorThermostatRearm_Object = MibTableColumn
sensorThermostatRearm = _SensorThermostatRearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 13),
    _SensorThermostatRearm_Type()
)
sensorThermostatRearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatRearm.setStatus("mandatory")


class _SensorThermostatDelayError_Type(Integer32):
    """Custom type sensorThermostatDelayError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorThermostatDelayError_Type.__name__ = "Integer32"
_SensorThermostatDelayError_Object = MibTableColumn
sensorThermostatDelayError = _SensorThermostatDelayError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 14),
    _SensorThermostatDelayError_Type()
)
sensorThermostatDelayError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatDelayError.setStatus("mandatory")


class _SensorThermostatDelayNormal_Type(Integer32):
    """Custom type sensorThermostatDelayNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorThermostatDelayNormal_Type.__name__ = "Integer32"
_SensorThermostatDelayNormal_Object = MibTableColumn
sensorThermostatDelayNormal = _SensorThermostatDelayNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 15),
    _SensorThermostatDelayNormal_Type()
)
sensorThermostatDelayNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatDelayNormal.setStatus("mandatory")


class _SensorThermostatDelayLowCritical_Type(Integer32):
    """Custom type sensorThermostatDelayLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorThermostatDelayLowCritical_Type.__name__ = "Integer32"
_SensorThermostatDelayLowCritical_Object = MibTableColumn
sensorThermostatDelayLowCritical = _SensorThermostatDelayLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 16),
    _SensorThermostatDelayLowCritical_Type()
)
sensorThermostatDelayLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatDelayLowCritical.setStatus("mandatory")


class _SensorThermostatDelayLowWarning_Type(Integer32):
    """Custom type sensorThermostatDelayLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorThermostatDelayLowWarning_Type.__name__ = "Integer32"
_SensorThermostatDelayLowWarning_Object = MibTableColumn
sensorThermostatDelayLowWarning = _SensorThermostatDelayLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 17),
    _SensorThermostatDelayLowWarning_Type()
)
sensorThermostatDelayLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatDelayLowWarning.setStatus("mandatory")


class _SensorThermostatDelayHighWarning_Type(Integer32):
    """Custom type sensorThermostatDelayHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorThermostatDelayHighWarning_Type.__name__ = "Integer32"
_SensorThermostatDelayHighWarning_Object = MibTableColumn
sensorThermostatDelayHighWarning = _SensorThermostatDelayHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 18),
    _SensorThermostatDelayHighWarning_Type()
)
sensorThermostatDelayHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatDelayHighWarning.setStatus("mandatory")


class _SensorThermostatDelayHighCritical_Type(Integer32):
    """Custom type sensorThermostatDelayHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorThermostatDelayHighCritical_Type.__name__ = "Integer32"
_SensorThermostatDelayHighCritical_Object = MibTableColumn
sensorThermostatDelayHighCritical = _SensorThermostatDelayHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 19),
    _SensorThermostatDelayHighCritical_Type()
)
sensorThermostatDelayHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatDelayHighCritical.setStatus("mandatory")


class _SensorThermostatPort_Type(Integer32):
    """Custom type sensorThermostatPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorThermostatPort_Type.__name__ = "Integer32"
_SensorThermostatPort_Object = MibTableColumn
sensorThermostatPort = _SensorThermostatPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 35),
    _SensorThermostatPort_Type()
)
sensorThermostatPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorThermostatPort.setStatus("mandatory")


class _SensorThermostatSubPort_Type(Integer32):
    """Custom type sensorThermostatSubPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorThermostatSubPort_Type.__name__ = "Integer32"
_SensorThermostatSubPort_Object = MibTableColumn
sensorThermostatSubPort = _SensorThermostatSubPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 36),
    _SensorThermostatSubPort_Type()
)
sensorThermostatSubPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorThermostatSubPort.setStatus("mandatory")


class _SensorThermostatDeviceIndex_Type(Integer32):
    """Custom type sensorThermostatDeviceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorThermostatDeviceIndex_Type.__name__ = "Integer32"
_SensorThermostatDeviceIndex_Object = MibTableColumn
sensorThermostatDeviceIndex = _SensorThermostatDeviceIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 37),
    _SensorThermostatDeviceIndex_Type()
)
sensorThermostatDeviceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorThermostatDeviceIndex.setStatus("mandatory")


class _SensorThermostatDisplayStyle_Type(Integer32):
    """Custom type sensorThermostatDisplayStyle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("basic", 0),
          ("gauge", 1))
    )


_SensorThermostatDisplayStyle_Type.__name__ = "Integer32"
_SensorThermostatDisplayStyle_Object = MibTableColumn
sensorThermostatDisplayStyle = _SensorThermostatDisplayStyle_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 45),
    _SensorThermostatDisplayStyle_Type()
)
sensorThermostatDisplayStyle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatDisplayStyle.setStatus("mandatory")
_SensorThermostatHighCriticalDesc_Type = DisplayString
_SensorThermostatHighCriticalDesc_Object = MibTableColumn
sensorThermostatHighCriticalDesc = _SensorThermostatHighCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 46),
    _SensorThermostatHighCriticalDesc_Type()
)
sensorThermostatHighCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatHighCriticalDesc.setStatus("mandatory")
_SensorThermostatLowCriticalDesc_Type = DisplayString
_SensorThermostatLowCriticalDesc_Object = MibTableColumn
sensorThermostatLowCriticalDesc = _SensorThermostatLowCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 47),
    _SensorThermostatLowCriticalDesc_Type()
)
sensorThermostatLowCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatLowCriticalDesc.setStatus("mandatory")
_SensorThermostatNormalDesc_Type = DisplayString
_SensorThermostatNormalDesc_Object = MibTableColumn
sensorThermostatNormalDesc = _SensorThermostatNormalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 48),
    _SensorThermostatNormalDesc_Type()
)
sensorThermostatNormalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatNormalDesc.setStatus("mandatory")
_SensorThermostatLowWarningDesc_Type = DisplayString
_SensorThermostatLowWarningDesc_Object = MibTableColumn
sensorThermostatLowWarningDesc = _SensorThermostatLowWarningDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 49),
    _SensorThermostatLowWarningDesc_Type()
)
sensorThermostatLowWarningDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatLowWarningDesc.setStatus("mandatory")
_SensorThermostatHighWarningDesc_Type = DisplayString
_SensorThermostatHighWarningDesc_Object = MibTableColumn
sensorThermostatHighWarningDesc = _SensorThermostatHighWarningDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 50),
    _SensorThermostatHighWarningDesc_Type()
)
sensorThermostatHighWarningDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatHighWarningDesc.setStatus("mandatory")
_SensorThermostatSensorErrorDesc_Type = DisplayString
_SensorThermostatSensorErrorDesc_Object = MibTableColumn
sensorThermostatSensorErrorDesc = _SensorThermostatSensorErrorDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 51),
    _SensorThermostatSensorErrorDesc_Type()
)
sensorThermostatSensorErrorDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatSensorErrorDesc.setStatus("mandatory")
_SensorThermostatHighCriticalColor_Type = Integer32
_SensorThermostatHighCriticalColor_Object = MibTableColumn
sensorThermostatHighCriticalColor = _SensorThermostatHighCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 54),
    _SensorThermostatHighCriticalColor_Type()
)
sensorThermostatHighCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatHighCriticalColor.setStatus("mandatory")
_SensorThermostatLowCriticalColor_Type = Integer32
_SensorThermostatLowCriticalColor_Object = MibTableColumn
sensorThermostatLowCriticalColor = _SensorThermostatLowCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 55),
    _SensorThermostatLowCriticalColor_Type()
)
sensorThermostatLowCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatLowCriticalColor.setStatus("mandatory")
_SensorThermostatNormalColor_Type = Integer32
_SensorThermostatNormalColor_Object = MibTableColumn
sensorThermostatNormalColor = _SensorThermostatNormalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 56),
    _SensorThermostatNormalColor_Type()
)
sensorThermostatNormalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatNormalColor.setStatus("mandatory")
_SensorThermostatLowWarningColor_Type = Integer32
_SensorThermostatLowWarningColor_Object = MibTableColumn
sensorThermostatLowWarningColor = _SensorThermostatLowWarningColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 57),
    _SensorThermostatLowWarningColor_Type()
)
sensorThermostatLowWarningColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatLowWarningColor.setStatus("mandatory")
_SensorThermostatHighWarningColor_Type = Integer32
_SensorThermostatHighWarningColor_Object = MibTableColumn
sensorThermostatHighWarningColor = _SensorThermostatHighWarningColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 58),
    _SensorThermostatHighWarningColor_Type()
)
sensorThermostatHighWarningColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatHighWarningColor.setStatus("mandatory")
_SensorThermostatSensorErrorColor_Type = Integer32
_SensorThermostatSensorErrorColor_Object = MibTableColumn
sensorThermostatSensorErrorColor = _SensorThermostatSensorErrorColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 20, 1, 59),
    _SensorThermostatSensorErrorColor_Type()
)
sensorThermostatSensorErrorColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorThermostatSensorErrorColor.setStatus("mandatory")
_SensorWaterRopeTable_Object = MibTable
sensorWaterRopeTable = _SensorWaterRopeTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 21)
)
if mibBuilder.loadTexts:
    sensorWaterRopeTable.setStatus("mandatory")
_SensorWaterRopeEntry_Object = MibTableRow
sensorWaterRopeEntry = _SensorWaterRopeEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 21, 1)
)
sensorWaterRopeEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorWaterRopeIndex"),
)
if mibBuilder.loadTexts:
    sensorWaterRopeEntry.setStatus("mandatory")


class _SensorWaterRopeIndex_Type(Integer32):
    """Custom type sensorWaterRopeIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SensorWaterRopeIndex_Type.__name__ = "Integer32"
_SensorWaterRopeIndex_Object = MibTableColumn
sensorWaterRopeIndex = _SensorWaterRopeIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 21, 1, 1),
    _SensorWaterRopeIndex_Type()
)
sensorWaterRopeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorWaterRopeIndex.setStatus("mandatory")
_SensorWaterRopeDescription_Type = DisplayString
_SensorWaterRopeDescription_Object = MibTableColumn
sensorWaterRopeDescription = _SensorWaterRopeDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 21, 1, 2),
    _SensorWaterRopeDescription_Type()
)
sensorWaterRopeDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorWaterRopeDescription.setStatus("mandatory")
_SensorWaterRopeLeakLocation_Type = Integer32
_SensorWaterRopeLeakLocation_Object = MibTableColumn
sensorWaterRopeLeakLocation = _SensorWaterRopeLeakLocation_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 21, 1, 4),
    _SensorWaterRopeLeakLocation_Type()
)
sensorWaterRopeLeakLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorWaterRopeLeakLocation.setStatus("mandatory")
_SensorWaterRopeUnit_Type = DisplayString
_SensorWaterRopeUnit_Object = MibTableColumn
sensorWaterRopeUnit = _SensorWaterRopeUnit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 21, 1, 5),
    _SensorWaterRopeUnit_Type()
)
sensorWaterRopeUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorWaterRopeUnit.setStatus("mandatory")


class _SensorWaterRopeStatus_Type(Integer32):
    """Custom type sensorWaterRopeStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorWaterRopeStatus_Type.__name__ = "Integer32"
_SensorWaterRopeStatus_Object = MibTableColumn
sensorWaterRopeStatus = _SensorWaterRopeStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 21, 1, 6),
    _SensorWaterRopeStatus_Type()
)
sensorWaterRopeStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorWaterRopeStatus.setStatus("mandatory")


class _SensorWaterRopeGoOffline_Type(Integer32):
    """Custom type sensorWaterRopeGoOffline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("online", 1))
    )


_SensorWaterRopeGoOffline_Type.__name__ = "Integer32"
_SensorWaterRopeGoOffline_Object = MibTableColumn
sensorWaterRopeGoOffline = _SensorWaterRopeGoOffline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 21, 1, 8),
    _SensorWaterRopeGoOffline_Type()
)
sensorWaterRopeGoOffline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorWaterRopeGoOffline.setStatus("mandatory")
_SensorWaterRopeRaw_Type = Integer32
_SensorWaterRopeRaw_Object = MibTableColumn
sensorWaterRopeRaw = _SensorWaterRopeRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 21, 1, 20),
    _SensorWaterRopeRaw_Type()
)
sensorWaterRopeRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorWaterRopeRaw.setStatus("mandatory")


class _SensorWaterRopeDeviceIndex_Type(Integer32):
    """Custom type sensorWaterRopeDeviceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorWaterRopeDeviceIndex_Type.__name__ = "Integer32"
_SensorWaterRopeDeviceIndex_Object = MibTableColumn
sensorWaterRopeDeviceIndex = _SensorWaterRopeDeviceIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 21, 1, 37),
    _SensorWaterRopeDeviceIndex_Type()
)
sensorWaterRopeDeviceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorWaterRopeDeviceIndex.setStatus("mandatory")
_SensorWaterRopeCriticalDesc_Type = DisplayString
_SensorWaterRopeCriticalDesc_Object = MibTableColumn
sensorWaterRopeCriticalDesc = _SensorWaterRopeCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 21, 1, 46),
    _SensorWaterRopeCriticalDesc_Type()
)
sensorWaterRopeCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorWaterRopeCriticalDesc.setStatus("mandatory")
_SensorWaterRopeNormalDesc_Type = DisplayString
_SensorWaterRopeNormalDesc_Object = MibTableColumn
sensorWaterRopeNormalDesc = _SensorWaterRopeNormalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 21, 1, 48),
    _SensorWaterRopeNormalDesc_Type()
)
sensorWaterRopeNormalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorWaterRopeNormalDesc.setStatus("mandatory")
_SensorWaterRopeSensorErrorDesc_Type = DisplayString
_SensorWaterRopeSensorErrorDesc_Object = MibTableColumn
sensorWaterRopeSensorErrorDesc = _SensorWaterRopeSensorErrorDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 21, 1, 51),
    _SensorWaterRopeSensorErrorDesc_Type()
)
sensorWaterRopeSensorErrorDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorWaterRopeSensorErrorDesc.setStatus("mandatory")
_SensorWaterRopeCriticalColor_Type = Integer32
_SensorWaterRopeCriticalColor_Object = MibTableColumn
sensorWaterRopeCriticalColor = _SensorWaterRopeCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 21, 1, 54),
    _SensorWaterRopeCriticalColor_Type()
)
sensorWaterRopeCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorWaterRopeCriticalColor.setStatus("mandatory")
_SensorWaterRopeNormalColor_Type = Integer32
_SensorWaterRopeNormalColor_Object = MibTableColumn
sensorWaterRopeNormalColor = _SensorWaterRopeNormalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 21, 1, 56),
    _SensorWaterRopeNormalColor_Type()
)
sensorWaterRopeNormalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorWaterRopeNormalColor.setStatus("mandatory")
_SensorWaterRopeSensorErrorColor_Type = Integer32
_SensorWaterRopeSensorErrorColor_Object = MibTableColumn
sensorWaterRopeSensorErrorColor = _SensorWaterRopeSensorErrorColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 21, 1, 59),
    _SensorWaterRopeSensorErrorColor_Type()
)
sensorWaterRopeSensorErrorColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorWaterRopeSensorErrorColor.setStatus("mandatory")
_SensorWaterRopeLength_Type = Integer32
_SensorWaterRopeLength_Object = MibTableColumn
sensorWaterRopeLength = _SensorWaterRopeLength_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 21, 1, 100),
    _SensorWaterRopeLength_Type()
)
sensorWaterRopeLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorWaterRopeLength.setStatus("mandatory")


class _SensorWaterRopeImpedance_Type(Integer32):
    """Custom type sensorWaterRopeImpedance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorWaterRopeImpedance_Type.__name__ = "Integer32"
_SensorWaterRopeImpedance_Object = MibTableColumn
sensorWaterRopeImpedance = _SensorWaterRopeImpedance_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 21, 1, 101),
    _SensorWaterRopeImpedance_Type()
)
sensorWaterRopeImpedance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorWaterRopeImpedance.setStatus("mandatory")


class _SensorWaterRopeType_Type(Integer32):
    """Custom type sensorWaterRopeType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("custom", 0),
          ("fuel", 2),
          ("water", 1))
    )


_SensorWaterRopeType_Type.__name__ = "Integer32"
_SensorWaterRopeType_Object = MibTableColumn
sensorWaterRopeType = _SensorWaterRopeType_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 21, 1, 103),
    _SensorWaterRopeType_Type()
)
sensorWaterRopeType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorWaterRopeType.setStatus("mandatory")
_SensorPowerTable_Object = MibTable
sensorPowerTable = _SensorPowerTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22)
)
if mibBuilder.loadTexts:
    sensorPowerTable.setStatus("mandatory")
_SensorPowerEntry_Object = MibTableRow
sensorPowerEntry = _SensorPowerEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1)
)
sensorPowerEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorPowerIndex"),
)
if mibBuilder.loadTexts:
    sensorPowerEntry.setStatus("mandatory")


class _SensorPowerIndex_Type(Integer32):
    """Custom type sensorPowerIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SensorPowerIndex_Type.__name__ = "Integer32"
_SensorPowerIndex_Object = MibTableColumn
sensorPowerIndex = _SensorPowerIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 1),
    _SensorPowerIndex_Type()
)
sensorPowerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorPowerIndex.setStatus("mandatory")
_SensorPowerDescription_Type = DisplayString
_SensorPowerDescription_Object = MibTableColumn
sensorPowerDescription = _SensorPowerDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 2),
    _SensorPowerDescription_Type()
)
sensorPowerDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerDescription.setStatus("mandatory")
_SensorPowerValue_Type = Integer32
_SensorPowerValue_Object = MibTableColumn
sensorPowerValue = _SensorPowerValue_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 4),
    _SensorPowerValue_Type()
)
sensorPowerValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorPowerValue.setStatus("mandatory")
_SensorPowerUnit_Type = DisplayString
_SensorPowerUnit_Object = MibTableColumn
sensorPowerUnit = _SensorPowerUnit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 5),
    _SensorPowerUnit_Type()
)
sensorPowerUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerUnit.setStatus("mandatory")


class _SensorPowerStatus_Type(Integer32):
    """Custom type sensorPowerStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("lowCritical", 6),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorPowerStatus_Type.__name__ = "Integer32"
_SensorPowerStatus_Object = MibTableColumn
sensorPowerStatus = _SensorPowerStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 6),
    _SensorPowerStatus_Type()
)
sensorPowerStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorPowerStatus.setStatus("mandatory")


class _SensorPowerGoOffline_Type(Integer32):
    """Custom type sensorPowerGoOffline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("online", 1))
    )


_SensorPowerGoOffline_Type.__name__ = "Integer32"
_SensorPowerGoOffline_Object = MibTableColumn
sensorPowerGoOffline = _SensorPowerGoOffline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 8),
    _SensorPowerGoOffline_Type()
)
sensorPowerGoOffline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerGoOffline.setStatus("mandatory")
_SensorPowerLowCritical_Type = Integer32
_SensorPowerLowCritical_Object = MibTableColumn
sensorPowerLowCritical = _SensorPowerLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 9),
    _SensorPowerLowCritical_Type()
)
sensorPowerLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerLowCritical.setStatus("mandatory")
_SensorPowerLowWarning_Type = Integer32
_SensorPowerLowWarning_Object = MibTableColumn
sensorPowerLowWarning = _SensorPowerLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 10),
    _SensorPowerLowWarning_Type()
)
sensorPowerLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerLowWarning.setStatus("mandatory")
_SensorPowerHighWarning_Type = Integer32
_SensorPowerHighWarning_Object = MibTableColumn
sensorPowerHighWarning = _SensorPowerHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 11),
    _SensorPowerHighWarning_Type()
)
sensorPowerHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerHighWarning.setStatus("mandatory")
_SensorPowerHighCritical_Type = Integer32
_SensorPowerHighCritical_Object = MibTableColumn
sensorPowerHighCritical = _SensorPowerHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 12),
    _SensorPowerHighCritical_Type()
)
sensorPowerHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerHighCritical.setStatus("mandatory")
_SensorPowerRearm_Type = Integer32
_SensorPowerRearm_Object = MibTableColumn
sensorPowerRearm = _SensorPowerRearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 13),
    _SensorPowerRearm_Type()
)
sensorPowerRearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerRearm.setStatus("mandatory")


class _SensorPowerDelayError_Type(Integer32):
    """Custom type sensorPowerDelayError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorPowerDelayError_Type.__name__ = "Integer32"
_SensorPowerDelayError_Object = MibTableColumn
sensorPowerDelayError = _SensorPowerDelayError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 14),
    _SensorPowerDelayError_Type()
)
sensorPowerDelayError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerDelayError.setStatus("mandatory")


class _SensorPowerDelayNormal_Type(Integer32):
    """Custom type sensorPowerDelayNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorPowerDelayNormal_Type.__name__ = "Integer32"
_SensorPowerDelayNormal_Object = MibTableColumn
sensorPowerDelayNormal = _SensorPowerDelayNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 15),
    _SensorPowerDelayNormal_Type()
)
sensorPowerDelayNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerDelayNormal.setStatus("mandatory")


class _SensorPowerDelayLowCritical_Type(Integer32):
    """Custom type sensorPowerDelayLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorPowerDelayLowCritical_Type.__name__ = "Integer32"
_SensorPowerDelayLowCritical_Object = MibTableColumn
sensorPowerDelayLowCritical = _SensorPowerDelayLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 16),
    _SensorPowerDelayLowCritical_Type()
)
sensorPowerDelayLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerDelayLowCritical.setStatus("mandatory")


class _SensorPowerDelayLowWarning_Type(Integer32):
    """Custom type sensorPowerDelayLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorPowerDelayLowWarning_Type.__name__ = "Integer32"
_SensorPowerDelayLowWarning_Object = MibTableColumn
sensorPowerDelayLowWarning = _SensorPowerDelayLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 17),
    _SensorPowerDelayLowWarning_Type()
)
sensorPowerDelayLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerDelayLowWarning.setStatus("mandatory")


class _SensorPowerDelayHighWarning_Type(Integer32):
    """Custom type sensorPowerDelayHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorPowerDelayHighWarning_Type.__name__ = "Integer32"
_SensorPowerDelayHighWarning_Object = MibTableColumn
sensorPowerDelayHighWarning = _SensorPowerDelayHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 18),
    _SensorPowerDelayHighWarning_Type()
)
sensorPowerDelayHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerDelayHighWarning.setStatus("mandatory")


class _SensorPowerDelayHighCritical_Type(Integer32):
    """Custom type sensorPowerDelayHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorPowerDelayHighCritical_Type.__name__ = "Integer32"
_SensorPowerDelayHighCritical_Object = MibTableColumn
sensorPowerDelayHighCritical = _SensorPowerDelayHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 19),
    _SensorPowerDelayHighCritical_Type()
)
sensorPowerDelayHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerDelayHighCritical.setStatus("mandatory")


class _SensorPowerPort_Type(Integer32):
    """Custom type sensorPowerPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorPowerPort_Type.__name__ = "Integer32"
_SensorPowerPort_Object = MibTableColumn
sensorPowerPort = _SensorPowerPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 35),
    _SensorPowerPort_Type()
)
sensorPowerPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorPowerPort.setStatus("mandatory")


class _SensorPowerSubPort_Type(Integer32):
    """Custom type sensorPowerSubPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorPowerSubPort_Type.__name__ = "Integer32"
_SensorPowerSubPort_Object = MibTableColumn
sensorPowerSubPort = _SensorPowerSubPort_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 36),
    _SensorPowerSubPort_Type()
)
sensorPowerSubPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorPowerSubPort.setStatus("mandatory")


class _SensorPowerDeviceIndex_Type(Integer32):
    """Custom type sensorPowerDeviceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorPowerDeviceIndex_Type.__name__ = "Integer32"
_SensorPowerDeviceIndex_Object = MibTableColumn
sensorPowerDeviceIndex = _SensorPowerDeviceIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 37),
    _SensorPowerDeviceIndex_Type()
)
sensorPowerDeviceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorPowerDeviceIndex.setStatus("mandatory")


class _SensorPowerTimeOut_Type(Integer32):
    """Custom type sensorPowerTimeOut based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 30),
    )


_SensorPowerTimeOut_Type.__name__ = "Integer32"
_SensorPowerTimeOut_Object = MibTableColumn
sensorPowerTimeOut = _SensorPowerTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 38),
    _SensorPowerTimeOut_Type()
)
sensorPowerTimeOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerTimeOut.setStatus("mandatory")


class _SensorPowerInterval_Type(Integer32):
    """Custom type sensorPowerInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 720),
    )


_SensorPowerInterval_Type.__name__ = "Integer32"
_SensorPowerInterval_Object = MibTableColumn
sensorPowerInterval = _SensorPowerInterval_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 39),
    _SensorPowerInterval_Type()
)
sensorPowerInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerInterval.setStatus("mandatory")
_SensorPowerErrorRetryNum_Type = Integer32
_SensorPowerErrorRetryNum_Object = MibTableColumn
sensorPowerErrorRetryNum = _SensorPowerErrorRetryNum_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 40),
    _SensorPowerErrorRetryNum_Type()
)
sensorPowerErrorRetryNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerErrorRetryNum.setStatus("mandatory")
_SensorPowerMaxValue_Type = Integer32
_SensorPowerMaxValue_Object = MibTableColumn
sensorPowerMaxValue = _SensorPowerMaxValue_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 41),
    _SensorPowerMaxValue_Type()
)
sensorPowerMaxValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerMaxValue.setStatus("mandatory")
_SensorPowerMinValue_Type = Integer32
_SensorPowerMinValue_Object = MibTableColumn
sensorPowerMinValue = _SensorPowerMinValue_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 42),
    _SensorPowerMinValue_Type()
)
sensorPowerMinValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerMinValue.setStatus("mandatory")


class _SensorPowerDisplayStyle_Type(Integer32):
    """Custom type sensorPowerDisplayStyle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("basic", 0),
          ("gauge", 1))
    )


_SensorPowerDisplayStyle_Type.__name__ = "Integer32"
_SensorPowerDisplayStyle_Object = MibTableColumn
sensorPowerDisplayStyle = _SensorPowerDisplayStyle_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 45),
    _SensorPowerDisplayStyle_Type()
)
sensorPowerDisplayStyle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerDisplayStyle.setStatus("mandatory")
_SensorPowerHighCriticalDesc_Type = DisplayString
_SensorPowerHighCriticalDesc_Object = MibTableColumn
sensorPowerHighCriticalDesc = _SensorPowerHighCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 46),
    _SensorPowerHighCriticalDesc_Type()
)
sensorPowerHighCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerHighCriticalDesc.setStatus("mandatory")
_SensorPowerLowCriticalDesc_Type = DisplayString
_SensorPowerLowCriticalDesc_Object = MibTableColumn
sensorPowerLowCriticalDesc = _SensorPowerLowCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 47),
    _SensorPowerLowCriticalDesc_Type()
)
sensorPowerLowCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerLowCriticalDesc.setStatus("mandatory")
_SensorPowerNormalDesc_Type = DisplayString
_SensorPowerNormalDesc_Object = MibTableColumn
sensorPowerNormalDesc = _SensorPowerNormalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 48),
    _SensorPowerNormalDesc_Type()
)
sensorPowerNormalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerNormalDesc.setStatus("mandatory")
_SensorPowerLowWarningDesc_Type = DisplayString
_SensorPowerLowWarningDesc_Object = MibTableColumn
sensorPowerLowWarningDesc = _SensorPowerLowWarningDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 49),
    _SensorPowerLowWarningDesc_Type()
)
sensorPowerLowWarningDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerLowWarningDesc.setStatus("mandatory")
_SensorPowerHighWarningDesc_Type = DisplayString
_SensorPowerHighWarningDesc_Object = MibTableColumn
sensorPowerHighWarningDesc = _SensorPowerHighWarningDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 50),
    _SensorPowerHighWarningDesc_Type()
)
sensorPowerHighWarningDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerHighWarningDesc.setStatus("mandatory")
_SensorPowerSensorErrorDesc_Type = DisplayString
_SensorPowerSensorErrorDesc_Object = MibTableColumn
sensorPowerSensorErrorDesc = _SensorPowerSensorErrorDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 51),
    _SensorPowerSensorErrorDesc_Type()
)
sensorPowerSensorErrorDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerSensorErrorDesc.setStatus("mandatory")
_SensorPowerHighCriticalColor_Type = Integer32
_SensorPowerHighCriticalColor_Object = MibTableColumn
sensorPowerHighCriticalColor = _SensorPowerHighCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 54),
    _SensorPowerHighCriticalColor_Type()
)
sensorPowerHighCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerHighCriticalColor.setStatus("mandatory")
_SensorPowerLowCriticalColor_Type = Integer32
_SensorPowerLowCriticalColor_Object = MibTableColumn
sensorPowerLowCriticalColor = _SensorPowerLowCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 55),
    _SensorPowerLowCriticalColor_Type()
)
sensorPowerLowCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerLowCriticalColor.setStatus("mandatory")
_SensorPowerNormalColor_Type = Integer32
_SensorPowerNormalColor_Object = MibTableColumn
sensorPowerNormalColor = _SensorPowerNormalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 56),
    _SensorPowerNormalColor_Type()
)
sensorPowerNormalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerNormalColor.setStatus("mandatory")
_SensorPowerLowWarningColor_Type = Integer32
_SensorPowerLowWarningColor_Object = MibTableColumn
sensorPowerLowWarningColor = _SensorPowerLowWarningColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 57),
    _SensorPowerLowWarningColor_Type()
)
sensorPowerLowWarningColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerLowWarningColor.setStatus("mandatory")
_SensorPowerHighWarningColor_Type = Integer32
_SensorPowerHighWarningColor_Object = MibTableColumn
sensorPowerHighWarningColor = _SensorPowerHighWarningColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 58),
    _SensorPowerHighWarningColor_Type()
)
sensorPowerHighWarningColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerHighWarningColor.setStatus("mandatory")
_SensorPowerSensorErrorColor_Type = Integer32
_SensorPowerSensorErrorColor_Object = MibTableColumn
sensorPowerSensorErrorColor = _SensorPowerSensorErrorColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 22, 1, 59),
    _SensorPowerSensorErrorColor_Type()
)
sensorPowerSensorErrorColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorPowerSensorErrorColor.setStatus("mandatory")
_SensorFuelTable_Object = MibTable
sensorFuelTable = _SensorFuelTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24)
)
if mibBuilder.loadTexts:
    sensorFuelTable.setStatus("mandatory")
_SensorFuelEntry_Object = MibTableRow
sensorFuelEntry = _SensorFuelEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1)
)
sensorFuelEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorFuelIndex"),
)
if mibBuilder.loadTexts:
    sensorFuelEntry.setStatus("mandatory")


class _SensorFuelIndex_Type(Integer32):
    """Custom type sensorFuelIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SensorFuelIndex_Type.__name__ = "Integer32"
_SensorFuelIndex_Object = MibTableColumn
sensorFuelIndex = _SensorFuelIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 1),
    _SensorFuelIndex_Type()
)
sensorFuelIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorFuelIndex.setStatus("mandatory")
_SensorFuelDescription_Type = DisplayString
_SensorFuelDescription_Object = MibTableColumn
sensorFuelDescription = _SensorFuelDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 2),
    _SensorFuelDescription_Type()
)
sensorFuelDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelDescription.setStatus("mandatory")
_SensorFuelValue_Type = Integer32
_SensorFuelValue_Object = MibTableColumn
sensorFuelValue = _SensorFuelValue_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 4),
    _SensorFuelValue_Type()
)
sensorFuelValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorFuelValue.setStatus("mandatory")
_SensorFuelUnit_Type = DisplayString
_SensorFuelUnit_Object = MibTableColumn
sensorFuelUnit = _SensorFuelUnit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 5),
    _SensorFuelUnit_Type()
)
sensorFuelUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelUnit.setStatus("mandatory")


class _SensorFuelStatus_Type(Integer32):
    """Custom type sensorFuelStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorFuelStatus_Type.__name__ = "Integer32"
_SensorFuelStatus_Object = MibTableColumn
sensorFuelStatus = _SensorFuelStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 6),
    _SensorFuelStatus_Type()
)
sensorFuelStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorFuelStatus.setStatus("mandatory")


class _SensorFuelGoOffline_Type(Integer32):
    """Custom type sensorFuelGoOffline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("online", 1))
    )


_SensorFuelGoOffline_Type.__name__ = "Integer32"
_SensorFuelGoOffline_Object = MibTableColumn
sensorFuelGoOffline = _SensorFuelGoOffline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 8),
    _SensorFuelGoOffline_Type()
)
sensorFuelGoOffline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelGoOffline.setStatus("mandatory")
_SensorFuelLowCritical_Type = Integer32
_SensorFuelLowCritical_Object = MibTableColumn
sensorFuelLowCritical = _SensorFuelLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 9),
    _SensorFuelLowCritical_Type()
)
sensorFuelLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelLowCritical.setStatus("mandatory")
_SensorFuelLowWarning_Type = Integer32
_SensorFuelLowWarning_Object = MibTableColumn
sensorFuelLowWarning = _SensorFuelLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 10),
    _SensorFuelLowWarning_Type()
)
sensorFuelLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelLowWarning.setStatus("mandatory")
_SensorFuelHighWarning_Type = Integer32
_SensorFuelHighWarning_Object = MibTableColumn
sensorFuelHighWarning = _SensorFuelHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 11),
    _SensorFuelHighWarning_Type()
)
sensorFuelHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelHighWarning.setStatus("mandatory")
_SensorFuelHighCritical_Type = Integer32
_SensorFuelHighCritical_Object = MibTableColumn
sensorFuelHighCritical = _SensorFuelHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 12),
    _SensorFuelHighCritical_Type()
)
sensorFuelHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelHighCritical.setStatus("mandatory")
_SensorFuelRearm_Type = Integer32
_SensorFuelRearm_Object = MibTableColumn
sensorFuelRearm = _SensorFuelRearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 13),
    _SensorFuelRearm_Type()
)
sensorFuelRearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelRearm.setStatus("mandatory")


class _SensorFuelDelayError_Type(Integer32):
    """Custom type sensorFuelDelayError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorFuelDelayError_Type.__name__ = "Integer32"
_SensorFuelDelayError_Object = MibTableColumn
sensorFuelDelayError = _SensorFuelDelayError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 14),
    _SensorFuelDelayError_Type()
)
sensorFuelDelayError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelDelayError.setStatus("mandatory")


class _SensorFuelDelayNormal_Type(Integer32):
    """Custom type sensorFuelDelayNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorFuelDelayNormal_Type.__name__ = "Integer32"
_SensorFuelDelayNormal_Object = MibTableColumn
sensorFuelDelayNormal = _SensorFuelDelayNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 15),
    _SensorFuelDelayNormal_Type()
)
sensorFuelDelayNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelDelayNormal.setStatus("mandatory")


class _SensorFuelDelayLowCritical_Type(Integer32):
    """Custom type sensorFuelDelayLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorFuelDelayLowCritical_Type.__name__ = "Integer32"
_SensorFuelDelayLowCritical_Object = MibTableColumn
sensorFuelDelayLowCritical = _SensorFuelDelayLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 16),
    _SensorFuelDelayLowCritical_Type()
)
sensorFuelDelayLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelDelayLowCritical.setStatus("mandatory")


class _SensorFuelDelayLowWarning_Type(Integer32):
    """Custom type sensorFuelDelayLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorFuelDelayLowWarning_Type.__name__ = "Integer32"
_SensorFuelDelayLowWarning_Object = MibTableColumn
sensorFuelDelayLowWarning = _SensorFuelDelayLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 17),
    _SensorFuelDelayLowWarning_Type()
)
sensorFuelDelayLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelDelayLowWarning.setStatus("mandatory")


class _SensorFuelDelayHighWarning_Type(Integer32):
    """Custom type sensorFuelDelayHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorFuelDelayHighWarning_Type.__name__ = "Integer32"
_SensorFuelDelayHighWarning_Object = MibTableColumn
sensorFuelDelayHighWarning = _SensorFuelDelayHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 18),
    _SensorFuelDelayHighWarning_Type()
)
sensorFuelDelayHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelDelayHighWarning.setStatus("mandatory")


class _SensorFuelDelayHighCritical_Type(Integer32):
    """Custom type sensorFuelDelayHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorFuelDelayHighCritical_Type.__name__ = "Integer32"
_SensorFuelDelayHighCritical_Object = MibTableColumn
sensorFuelDelayHighCritical = _SensorFuelDelayHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 19),
    _SensorFuelDelayHighCritical_Type()
)
sensorFuelDelayHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelDelayHighCritical.setStatus("mandatory")
_SensorFuelRaw_Type = Integer32
_SensorFuelRaw_Object = MibTableColumn
sensorFuelRaw = _SensorFuelRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 20),
    _SensorFuelRaw_Type()
)
sensorFuelRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorFuelRaw.setStatus("mandatory")
_SensorFuelAmountMaxValue_Type = Integer32
_SensorFuelAmountMaxValue_Object = MibTableColumn
sensorFuelAmountMaxValue = _SensorFuelAmountMaxValue_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 33),
    _SensorFuelAmountMaxValue_Type()
)
sensorFuelAmountMaxValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelAmountMaxValue.setStatus("mandatory")
_SensorFuelAmountBaseValue_Type = Integer32
_SensorFuelAmountBaseValue_Object = MibTableColumn
sensorFuelAmountBaseValue = _SensorFuelAmountBaseValue_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 34),
    _SensorFuelAmountBaseValue_Type()
)
sensorFuelAmountBaseValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelAmountBaseValue.setStatus("mandatory")


class _SensorFuelDeviceIndex_Type(Integer32):
    """Custom type sensorFuelDeviceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorFuelDeviceIndex_Type.__name__ = "Integer32"
_SensorFuelDeviceIndex_Object = MibTableColumn
sensorFuelDeviceIndex = _SensorFuelDeviceIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 37),
    _SensorFuelDeviceIndex_Type()
)
sensorFuelDeviceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorFuelDeviceIndex.setStatus("mandatory")


class _SensorFuelDisplayStyle_Type(Integer32):
    """Custom type sensorFuelDisplayStyle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("basic", 0),
          ("gauge", 1))
    )


_SensorFuelDisplayStyle_Type.__name__ = "Integer32"
_SensorFuelDisplayStyle_Object = MibTableColumn
sensorFuelDisplayStyle = _SensorFuelDisplayStyle_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 45),
    _SensorFuelDisplayStyle_Type()
)
sensorFuelDisplayStyle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelDisplayStyle.setStatus("mandatory")
_SensorFuelHighCriticalDesc_Type = DisplayString
_SensorFuelHighCriticalDesc_Object = MibTableColumn
sensorFuelHighCriticalDesc = _SensorFuelHighCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 46),
    _SensorFuelHighCriticalDesc_Type()
)
sensorFuelHighCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelHighCriticalDesc.setStatus("mandatory")
_SensorFuelLowCriticalDesc_Type = DisplayString
_SensorFuelLowCriticalDesc_Object = MibTableColumn
sensorFuelLowCriticalDesc = _SensorFuelLowCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 47),
    _SensorFuelLowCriticalDesc_Type()
)
sensorFuelLowCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelLowCriticalDesc.setStatus("mandatory")
_SensorFuelNormalDesc_Type = DisplayString
_SensorFuelNormalDesc_Object = MibTableColumn
sensorFuelNormalDesc = _SensorFuelNormalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 48),
    _SensorFuelNormalDesc_Type()
)
sensorFuelNormalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelNormalDesc.setStatus("mandatory")
_SensorFuelLowWarningDesc_Type = DisplayString
_SensorFuelLowWarningDesc_Object = MibTableColumn
sensorFuelLowWarningDesc = _SensorFuelLowWarningDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 49),
    _SensorFuelLowWarningDesc_Type()
)
sensorFuelLowWarningDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelLowWarningDesc.setStatus("mandatory")
_SensorFuelHighWarningDesc_Type = DisplayString
_SensorFuelHighWarningDesc_Object = MibTableColumn
sensorFuelHighWarningDesc = _SensorFuelHighWarningDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 50),
    _SensorFuelHighWarningDesc_Type()
)
sensorFuelHighWarningDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelHighWarningDesc.setStatus("mandatory")
_SensorFuelSensorErrorDesc_Type = DisplayString
_SensorFuelSensorErrorDesc_Object = MibTableColumn
sensorFuelSensorErrorDesc = _SensorFuelSensorErrorDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 51),
    _SensorFuelSensorErrorDesc_Type()
)
sensorFuelSensorErrorDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelSensorErrorDesc.setStatus("mandatory")
_SensorFuelHighCriticalColor_Type = Integer32
_SensorFuelHighCriticalColor_Object = MibTableColumn
sensorFuelHighCriticalColor = _SensorFuelHighCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 54),
    _SensorFuelHighCriticalColor_Type()
)
sensorFuelHighCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelHighCriticalColor.setStatus("mandatory")
_SensorFuelLowCriticalColor_Type = Integer32
_SensorFuelLowCriticalColor_Object = MibTableColumn
sensorFuelLowCriticalColor = _SensorFuelLowCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 55),
    _SensorFuelLowCriticalColor_Type()
)
sensorFuelLowCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelLowCriticalColor.setStatus("mandatory")
_SensorFuelNormalColor_Type = Integer32
_SensorFuelNormalColor_Object = MibTableColumn
sensorFuelNormalColor = _SensorFuelNormalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 56),
    _SensorFuelNormalColor_Type()
)
sensorFuelNormalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelNormalColor.setStatus("mandatory")
_SensorFuelLowWarningColor_Type = Integer32
_SensorFuelLowWarningColor_Object = MibTableColumn
sensorFuelLowWarningColor = _SensorFuelLowWarningColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 57),
    _SensorFuelLowWarningColor_Type()
)
sensorFuelLowWarningColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelLowWarningColor.setStatus("mandatory")
_SensorFuelHighWarningColor_Type = Integer32
_SensorFuelHighWarningColor_Object = MibTableColumn
sensorFuelHighWarningColor = _SensorFuelHighWarningColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 58),
    _SensorFuelHighWarningColor_Type()
)
sensorFuelHighWarningColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelHighWarningColor.setStatus("mandatory")
_SensorFuelSensorErrorColor_Type = Integer32
_SensorFuelSensorErrorColor_Object = MibTableColumn
sensorFuelSensorErrorColor = _SensorFuelSensorErrorColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 24, 1, 59),
    _SensorFuelSensorErrorColor_Type()
)
sensorFuelSensorErrorColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorFuelSensorErrorColor.setStatus("mandatory")
_SensorTankSenderTable_Object = MibTable
sensorTankSenderTable = _SensorTankSenderTable_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26)
)
if mibBuilder.loadTexts:
    sensorTankSenderTable.setStatus("mandatory")
_SensorTankSenderEntry_Object = MibTableRow
sensorTankSenderEntry = _SensorTankSenderEntry_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1)
)
sensorTankSenderEntry.setIndexNames(
    (0, "SPAGENT-MIB", "sensorTankSenderIndex"),
)
if mibBuilder.loadTexts:
    sensorTankSenderEntry.setStatus("mandatory")


class _SensorTankSenderIndex_Type(Integer32):
    """Custom type sensorTankSenderIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SensorTankSenderIndex_Type.__name__ = "Integer32"
_SensorTankSenderIndex_Object = MibTableColumn
sensorTankSenderIndex = _SensorTankSenderIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 1),
    _SensorTankSenderIndex_Type()
)
sensorTankSenderIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorTankSenderIndex.setStatus("mandatory")
_SensorTankSenderDescription_Type = DisplayString
_SensorTankSenderDescription_Object = MibTableColumn
sensorTankSenderDescription = _SensorTankSenderDescription_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 2),
    _SensorTankSenderDescription_Type()
)
sensorTankSenderDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderDescription.setStatus("mandatory")
_SensorTankSenderValue_Type = Integer32
_SensorTankSenderValue_Object = MibTableColumn
sensorTankSenderValue = _SensorTankSenderValue_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 4),
    _SensorTankSenderValue_Type()
)
sensorTankSenderValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorTankSenderValue.setStatus("mandatory")
_SensorTankSenderUnit_Type = DisplayString
_SensorTankSenderUnit_Object = MibTableColumn
sensorTankSenderUnit = _SensorTankSenderUnit_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 5),
    _SensorTankSenderUnit_Type()
)
sensorTankSenderUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderUnit.setStatus("mandatory")


class _SensorTankSenderStatus_Type(Integer32):
    """Custom type sensorTankSenderStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("highCritical", 4),
          ("highWarning", 3),
          ("lowCritical", 6),
          ("lowWarning", 5),
          ("noStatus", 1),
          ("normal", 2),
          ("sensorError", 7))
    )


_SensorTankSenderStatus_Type.__name__ = "Integer32"
_SensorTankSenderStatus_Object = MibTableColumn
sensorTankSenderStatus = _SensorTankSenderStatus_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 6),
    _SensorTankSenderStatus_Type()
)
sensorTankSenderStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorTankSenderStatus.setStatus("mandatory")


class _SensorTankSenderGoOffline_Type(Integer32):
    """Custom type sensorTankSenderGoOffline based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("goOffline", 2),
          ("online", 1))
    )


_SensorTankSenderGoOffline_Type.__name__ = "Integer32"
_SensorTankSenderGoOffline_Object = MibTableColumn
sensorTankSenderGoOffline = _SensorTankSenderGoOffline_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 8),
    _SensorTankSenderGoOffline_Type()
)
sensorTankSenderGoOffline.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderGoOffline.setStatus("mandatory")
_SensorTankSenderLowCritical_Type = Integer32
_SensorTankSenderLowCritical_Object = MibTableColumn
sensorTankSenderLowCritical = _SensorTankSenderLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 9),
    _SensorTankSenderLowCritical_Type()
)
sensorTankSenderLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderLowCritical.setStatus("mandatory")
_SensorTankSenderLowWarning_Type = Integer32
_SensorTankSenderLowWarning_Object = MibTableColumn
sensorTankSenderLowWarning = _SensorTankSenderLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 10),
    _SensorTankSenderLowWarning_Type()
)
sensorTankSenderLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderLowWarning.setStatus("mandatory")
_SensorTankSenderHighWarning_Type = Integer32
_SensorTankSenderHighWarning_Object = MibTableColumn
sensorTankSenderHighWarning = _SensorTankSenderHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 11),
    _SensorTankSenderHighWarning_Type()
)
sensorTankSenderHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderHighWarning.setStatus("mandatory")
_SensorTankSenderHighCritical_Type = Integer32
_SensorTankSenderHighCritical_Object = MibTableColumn
sensorTankSenderHighCritical = _SensorTankSenderHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 12),
    _SensorTankSenderHighCritical_Type()
)
sensorTankSenderHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderHighCritical.setStatus("mandatory")
_SensorTankSenderRearm_Type = Integer32
_SensorTankSenderRearm_Object = MibTableColumn
sensorTankSenderRearm = _SensorTankSenderRearm_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 13),
    _SensorTankSenderRearm_Type()
)
sensorTankSenderRearm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderRearm.setStatus("mandatory")


class _SensorTankSenderDelayError_Type(Integer32):
    """Custom type sensorTankSenderDelayError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorTankSenderDelayError_Type.__name__ = "Integer32"
_SensorTankSenderDelayError_Object = MibTableColumn
sensorTankSenderDelayError = _SensorTankSenderDelayError_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 14),
    _SensorTankSenderDelayError_Type()
)
sensorTankSenderDelayError.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderDelayError.setStatus("mandatory")


class _SensorTankSenderDelayNormal_Type(Integer32):
    """Custom type sensorTankSenderDelayNormal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorTankSenderDelayNormal_Type.__name__ = "Integer32"
_SensorTankSenderDelayNormal_Object = MibTableColumn
sensorTankSenderDelayNormal = _SensorTankSenderDelayNormal_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 15),
    _SensorTankSenderDelayNormal_Type()
)
sensorTankSenderDelayNormal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderDelayNormal.setStatus("mandatory")


class _SensorTankSenderDelayLowCritical_Type(Integer32):
    """Custom type sensorTankSenderDelayLowCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorTankSenderDelayLowCritical_Type.__name__ = "Integer32"
_SensorTankSenderDelayLowCritical_Object = MibTableColumn
sensorTankSenderDelayLowCritical = _SensorTankSenderDelayLowCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 16),
    _SensorTankSenderDelayLowCritical_Type()
)
sensorTankSenderDelayLowCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderDelayLowCritical.setStatus("mandatory")


class _SensorTankSenderDelayLowWarning_Type(Integer32):
    """Custom type sensorTankSenderDelayLowWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorTankSenderDelayLowWarning_Type.__name__ = "Integer32"
_SensorTankSenderDelayLowWarning_Object = MibTableColumn
sensorTankSenderDelayLowWarning = _SensorTankSenderDelayLowWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 17),
    _SensorTankSenderDelayLowWarning_Type()
)
sensorTankSenderDelayLowWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderDelayLowWarning.setStatus("mandatory")


class _SensorTankSenderDelayHighWarning_Type(Integer32):
    """Custom type sensorTankSenderDelayHighWarning based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorTankSenderDelayHighWarning_Type.__name__ = "Integer32"
_SensorTankSenderDelayHighWarning_Object = MibTableColumn
sensorTankSenderDelayHighWarning = _SensorTankSenderDelayHighWarning_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 18),
    _SensorTankSenderDelayHighWarning_Type()
)
sensorTankSenderDelayHighWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderDelayHighWarning.setStatus("mandatory")


class _SensorTankSenderDelayHighCritical_Type(Integer32):
    """Custom type sensorTankSenderDelayHighCritical based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SensorTankSenderDelayHighCritical_Type.__name__ = "Integer32"
_SensorTankSenderDelayHighCritical_Object = MibTableColumn
sensorTankSenderDelayHighCritical = _SensorTankSenderDelayHighCritical_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 19),
    _SensorTankSenderDelayHighCritical_Type()
)
sensorTankSenderDelayHighCritical.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderDelayHighCritical.setStatus("mandatory")
_SensorTankSenderRaw_Type = Integer32
_SensorTankSenderRaw_Object = MibTableColumn
sensorTankSenderRaw = _SensorTankSenderRaw_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 20),
    _SensorTankSenderRaw_Type()
)
sensorTankSenderRaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorTankSenderRaw.setStatus("mandatory")


class _SensorTankSenderDeviceIndex_Type(Integer32):
    """Custom type sensorTankSenderDeviceIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_SensorTankSenderDeviceIndex_Type.__name__ = "Integer32"
_SensorTankSenderDeviceIndex_Object = MibTableColumn
sensorTankSenderDeviceIndex = _SensorTankSenderDeviceIndex_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 37),
    _SensorTankSenderDeviceIndex_Type()
)
sensorTankSenderDeviceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sensorTankSenderDeviceIndex.setStatus("mandatory")


class _SensorTankSenderDisplayStyle_Type(Integer32):
    """Custom type sensorTankSenderDisplayStyle based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("basic", 0),
          ("gauge", 1))
    )


_SensorTankSenderDisplayStyle_Type.__name__ = "Integer32"
_SensorTankSenderDisplayStyle_Object = MibTableColumn
sensorTankSenderDisplayStyle = _SensorTankSenderDisplayStyle_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 45),
    _SensorTankSenderDisplayStyle_Type()
)
sensorTankSenderDisplayStyle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderDisplayStyle.setStatus("mandatory")
_SensorTankSenderHighCriticalDesc_Type = DisplayString
_SensorTankSenderHighCriticalDesc_Object = MibTableColumn
sensorTankSenderHighCriticalDesc = _SensorTankSenderHighCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 46),
    _SensorTankSenderHighCriticalDesc_Type()
)
sensorTankSenderHighCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderHighCriticalDesc.setStatus("mandatory")
_SensorTankSenderLowCriticalDesc_Type = DisplayString
_SensorTankSenderLowCriticalDesc_Object = MibTableColumn
sensorTankSenderLowCriticalDesc = _SensorTankSenderLowCriticalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 47),
    _SensorTankSenderLowCriticalDesc_Type()
)
sensorTankSenderLowCriticalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderLowCriticalDesc.setStatus("mandatory")
_SensorTankSenderNormalDesc_Type = DisplayString
_SensorTankSenderNormalDesc_Object = MibTableColumn
sensorTankSenderNormalDesc = _SensorTankSenderNormalDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 48),
    _SensorTankSenderNormalDesc_Type()
)
sensorTankSenderNormalDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderNormalDesc.setStatus("mandatory")
_SensorTankSenderLowWarningDesc_Type = DisplayString
_SensorTankSenderLowWarningDesc_Object = MibTableColumn
sensorTankSenderLowWarningDesc = _SensorTankSenderLowWarningDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 49),
    _SensorTankSenderLowWarningDesc_Type()
)
sensorTankSenderLowWarningDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderLowWarningDesc.setStatus("mandatory")
_SensorTankSenderHighWarningDesc_Type = DisplayString
_SensorTankSenderHighWarningDesc_Object = MibTableColumn
sensorTankSenderHighWarningDesc = _SensorTankSenderHighWarningDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 50),
    _SensorTankSenderHighWarningDesc_Type()
)
sensorTankSenderHighWarningDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderHighWarningDesc.setStatus("mandatory")
_SensorTankSenderSensorErrorDesc_Type = DisplayString
_SensorTankSenderSensorErrorDesc_Object = MibTableColumn
sensorTankSenderSensorErrorDesc = _SensorTankSenderSensorErrorDesc_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 51),
    _SensorTankSenderSensorErrorDesc_Type()
)
sensorTankSenderSensorErrorDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderSensorErrorDesc.setStatus("mandatory")
_SensorTankSenderHighCriticalColor_Type = Integer32
_SensorTankSenderHighCriticalColor_Object = MibTableColumn
sensorTankSenderHighCriticalColor = _SensorTankSenderHighCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 54),
    _SensorTankSenderHighCriticalColor_Type()
)
sensorTankSenderHighCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderHighCriticalColor.setStatus("mandatory")
_SensorTankSenderLowCriticalColor_Type = Integer32
_SensorTankSenderLowCriticalColor_Object = MibTableColumn
sensorTankSenderLowCriticalColor = _SensorTankSenderLowCriticalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 55),
    _SensorTankSenderLowCriticalColor_Type()
)
sensorTankSenderLowCriticalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderLowCriticalColor.setStatus("mandatory")
_SensorTankSenderNormalColor_Type = Integer32
_SensorTankSenderNormalColor_Object = MibTableColumn
sensorTankSenderNormalColor = _SensorTankSenderNormalColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 56),
    _SensorTankSenderNormalColor_Type()
)
sensorTankSenderNormalColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderNormalColor.setStatus("mandatory")
_SensorTankSenderLowWarningColor_Type = Integer32
_SensorTankSenderLowWarningColor_Object = MibTableColumn
sensorTankSenderLowWarningColor = _SensorTankSenderLowWarningColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 57),
    _SensorTankSenderLowWarningColor_Type()
)
sensorTankSenderLowWarningColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderLowWarningColor.setStatus("mandatory")
_SensorTankSenderHighWarningColor_Type = Integer32
_SensorTankSenderHighWarningColor_Object = MibTableColumn
sensorTankSenderHighWarningColor = _SensorTankSenderHighWarningColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 58),
    _SensorTankSenderHighWarningColor_Type()
)
sensorTankSenderHighWarningColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderHighWarningColor.setStatus("mandatory")
_SensorTankSenderSensorErrorColor_Type = Integer32
_SensorTankSenderSensorErrorColor_Object = MibTableColumn
sensorTankSenderSensorErrorColor = _SensorTankSenderSensorErrorColor_Object(
    (1, 3, 6, 1, 4, 1, 3854, 2, 3, 26, 1, 59),
    _SensorTankSenderSensorErrorColor_Type()
)
sensorTankSenderSensorErrorColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sensorTankSenderSensorErrorColor.setStatus("mandatory")

# Managed Objects groups


# Notification objects

spNormalStatus = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 1)
)
if mibBuilder.loadTexts:
    spNormalStatus.setStatus(
        ""
    )

spWarningStatus = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 2)
)
if mibBuilder.loadTexts:
    spWarningStatus.setStatus(
        ""
    )

spCriticalStatus = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 3)
)
if mibBuilder.loadTexts:
    spCriticalStatus.setStatus(
        ""
    )

spDownStatus = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 4)
)
if mibBuilder.loadTexts:
    spDownStatus.setStatus(
        ""
    )

spKeepAliveTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 5)
)
if mibBuilder.loadTexts:
    spKeepAliveTrap.setStatus(
        ""
    )

spUnknownStatus = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 7)
)
if mibBuilder.loadTexts:
    spUnknownStatus.setStatus(
        ""
    )

spTemperatureStatus = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 10)
)
spTemperatureStatus.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureStatus.setStatus(
        ""
    )

spTemperatureArray1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 11)
)
spTemperatureArray1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray1Status.setStatus(
        ""
    )

spTemperatureArray2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 12)
)
spTemperatureArray2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray2Status.setStatus(
        ""
    )

spTemperatureArray3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 13)
)
spTemperatureArray3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray3Status.setStatus(
        ""
    )

spTemperatureArray4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 14)
)
spTemperatureArray4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray4Status.setStatus(
        ""
    )

spTemperatureArray5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 15)
)
spTemperatureArray5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray5Status.setStatus(
        ""
    )

spTemperatureArray6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 16)
)
spTemperatureArray6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray6Status.setStatus(
        ""
    )

spTemperatureArray7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 17)
)
spTemperatureArray7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray7Status.setStatus(
        ""
    )

spTemperatureArray8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 18)
)
spTemperatureArray8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray8Status.setStatus(
        ""
    )

spAnalogueStatus = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 20)
)
spAnalogueStatus.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spAnalogueStatus.setStatus(
        ""
    )

spSwitchStatus = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 30)
)
spSwitchStatus.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitchStatus.setStatus(
        ""
    )

spIRMSStatus = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 40)
)
spIRMSStatus.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spIRMSStatus.setStatus(
        ""
    )

spVRMSStatus = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 50)
)
spVRMSStatus.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVRMSStatus.setStatus(
        ""
    )

spSenUnknownStatus = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 51)
)
spSenUnknownStatus.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSenUnknownStatus.setStatus(
        ""
    )

spSenNormalStatus = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 52)
)
spSenNormalStatus.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSenNormalStatus.setStatus(
        ""
    )

spSenWarningStatus = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 53)
)
spSenWarningStatus.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSenWarningStatus.setStatus(
        ""
    )

spSenCriticalStatus = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 54)
)
spSenCriticalStatus.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSenCriticalStatus.setStatus(
        ""
    )

spSenDownStatus = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 55)
)
spSenDownStatus.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSenDownStatus.setStatus(
        ""
    )

spWattStatus = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 60)
)
spWattStatus.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spWattStatus.setStatus(
        ""
    )

spRelayArray1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 71)
)
spRelayArray1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray1Status.setStatus(
        ""
    )

spRelayArray2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 72)
)
spRelayArray2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray2Status.setStatus(
        ""
    )

spRelayArray3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 73)
)
spRelayArray3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray3Status.setStatus(
        ""
    )

spRelayArray4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 74)
)
spRelayArray4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray4Status.setStatus(
        ""
    )

spRelayArray5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 75)
)
spRelayArray5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray5Status.setStatus(
        ""
    )

spRelayArray6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 77)
)
spRelayArray6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray6Status.setStatus(
        ""
    )

spRelayArray8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 78)
)
spRelayArray8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray8Status.setStatus(
        ""
    )

spVirtualStatus = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 80)
)
spVirtualStatus.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVirtualStatus.setStatus(
        ""
    )

spTemperature1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 101)
)
spTemperature1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperature1Status.setStatus(
        ""
    )

spTemperature2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 102)
)
spTemperature2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperature2Status.setStatus(
        ""
    )

spTemperature3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 103)
)
spTemperature3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperature3Status.setStatus(
        ""
    )

spTemperature4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 104)
)
spTemperature4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperature4Status.setStatus(
        ""
    )

spTemperature5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 105)
)
spTemperature5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperature5Status.setStatus(
        ""
    )

spTemperature6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 106)
)
spTemperature6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperature6Status.setStatus(
        ""
    )

spTemperature7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 107)
)
spTemperature7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperature7Status.setStatus(
        ""
    )

spTemperature8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 108)
)
spTemperature8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperature8Status.setStatus(
        ""
    )

spTemperatureArray1_1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 111)
)
spTemperatureArray1_1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray1_1Status.setStatus(
        ""
    )

spTemperatureArray1_2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 112)
)
spTemperatureArray1_2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray1_2Status.setStatus(
        ""
    )

spTemperatureArray1_3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 113)
)
spTemperatureArray1_3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray1_3Status.setStatus(
        ""
    )

spTemperatureArray1_4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 114)
)
spTemperatureArray1_4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray1_4Status.setStatus(
        ""
    )

spTemperatureArray1_5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 115)
)
spTemperatureArray1_5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray1_5Status.setStatus(
        ""
    )

spTemperatureArray1_6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 116)
)
spTemperatureArray1_6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray1_6Status.setStatus(
        ""
    )

spTemperatureArray1_7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 117)
)
spTemperatureArray1_7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray1_7Status.setStatus(
        ""
    )

spTemperatureArray1_8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 118)
)
spTemperatureArray1_8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray1_8Status.setStatus(
        ""
    )

spTemperatureArray2_1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 121)
)
spTemperatureArray2_1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray2_1Status.setStatus(
        ""
    )

spTemperatureArray2_2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 122)
)
spTemperatureArray2_2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray2_2Status.setStatus(
        ""
    )

spTemperatureArray2_3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 123)
)
spTemperatureArray2_3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray2_3Status.setStatus(
        ""
    )

spTemperatureArray2_4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 124)
)
spTemperatureArray2_4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray2_4Status.setStatus(
        ""
    )

spTemperatureArray2_5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 125)
)
spTemperatureArray2_5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray2_5Status.setStatus(
        ""
    )

spTemperatureArray2_6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 126)
)
spTemperatureArray2_6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray2_6Status.setStatus(
        ""
    )

spTemperatureArray2_7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 127)
)
spTemperatureArray2_7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray2_7Status.setStatus(
        ""
    )

spTemperatureArray2_8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 128)
)
spTemperatureArray2_8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray2_8Status.setStatus(
        ""
    )

spTemperatureArray3_1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 131)
)
spTemperatureArray3_1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray3_1Status.setStatus(
        ""
    )

spTemperatureArray3_2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 132)
)
spTemperatureArray3_2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray3_2Status.setStatus(
        ""
    )

spTemperatureArray3_3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 133)
)
spTemperatureArray3_3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray3_3Status.setStatus(
        ""
    )

spTemperatureArray3_4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 134)
)
spTemperatureArray3_4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray3_4Status.setStatus(
        ""
    )

spTemperatureArray3_5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 135)
)
spTemperatureArray3_5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray3_5Status.setStatus(
        ""
    )

spTemperatureArray3_6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 136)
)
spTemperatureArray3_6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray3_6Status.setStatus(
        ""
    )

spTemperatureArray3_7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 137)
)
spTemperatureArray3_7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray3_7Status.setStatus(
        ""
    )

spTemperatureArray3_8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 138)
)
spTemperatureArray3_8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray3_8Status.setStatus(
        ""
    )

spTemperatureArray4_1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 141)
)
spTemperatureArray4_1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray4_1Status.setStatus(
        ""
    )

spTemperatureArray4_2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 142)
)
spTemperatureArray4_2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray4_2Status.setStatus(
        ""
    )

spTemperatureArray4_3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 143)
)
spTemperatureArray4_3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray4_3Status.setStatus(
        ""
    )

spTemperatureArray4_4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 144)
)
spTemperatureArray4_4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray4_4Status.setStatus(
        ""
    )

spTemperatureArray4_5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 145)
)
spTemperatureArray4_5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray4_5Status.setStatus(
        ""
    )

spTemperatureArray4_6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 146)
)
spTemperatureArray4_6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray4_6Status.setStatus(
        ""
    )

spTemperatureArray4_7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 147)
)
spTemperatureArray4_7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray4_7Status.setStatus(
        ""
    )

spTemperatureArray4_8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 148)
)
spTemperatureArray4_8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray4_8Status.setStatus(
        ""
    )

spTemperatureArray5_1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 151)
)
spTemperatureArray5_1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray5_1Status.setStatus(
        ""
    )

spTemperatureArray5_2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 152)
)
spTemperatureArray5_2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray5_2Status.setStatus(
        ""
    )

spTemperatureArray5_3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 153)
)
spTemperatureArray5_3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray5_3Status.setStatus(
        ""
    )

spTemperatureArray5_4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 154)
)
spTemperatureArray5_4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray5_4Status.setStatus(
        ""
    )

spTemperatureArray5_5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 155)
)
spTemperatureArray5_5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray5_5Status.setStatus(
        ""
    )

spTemperatureArray5_6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 156)
)
spTemperatureArray5_6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray5_6Status.setStatus(
        ""
    )

spTemperatureArray5_7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 157)
)
spTemperatureArray5_7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray5_7Status.setStatus(
        ""
    )

spTemperatureArray5_8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 158)
)
spTemperatureArray5_8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray5_8Status.setStatus(
        ""
    )

spTemperatureArray6_1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 161)
)
spTemperatureArray6_1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray6_1Status.setStatus(
        ""
    )

spTemperatureArray6_2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 162)
)
spTemperatureArray6_2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray6_2Status.setStatus(
        ""
    )

spTemperatureArray6_3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 163)
)
spTemperatureArray6_3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray6_3Status.setStatus(
        ""
    )

spTemperatureArray6_4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 164)
)
spTemperatureArray6_4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray6_4Status.setStatus(
        ""
    )

spTemperatureArray6_5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 165)
)
spTemperatureArray6_5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray6_5Status.setStatus(
        ""
    )

spTemperatureArray6_6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 166)
)
spTemperatureArray6_6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray6_6Status.setStatus(
        ""
    )

spTemperatureArray6_7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 167)
)
spTemperatureArray6_7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray6_7Status.setStatus(
        ""
    )

spTemperatureArray6_8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 168)
)
spTemperatureArray6_8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray6_8Status.setStatus(
        ""
    )

spTemperatureArray7_1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 171)
)
spTemperatureArray7_1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray7_1Status.setStatus(
        ""
    )

spTemperatureArray7_2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 172)
)
spTemperatureArray7_2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray7_2Status.setStatus(
        ""
    )

spTemperatureArray7_3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 173)
)
spTemperatureArray7_3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray7_3Status.setStatus(
        ""
    )

spTemperatureArray7_4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 174)
)
spTemperatureArray7_4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray7_4Status.setStatus(
        ""
    )

spTemperatureArray7_5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 175)
)
spTemperatureArray7_5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray7_5Status.setStatus(
        ""
    )

spTemperatureArray7_6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 176)
)
spTemperatureArray7_6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray7_6Status.setStatus(
        ""
    )

spTemperatureArray7_7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 177)
)
spTemperatureArray7_7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray7_7Status.setStatus(
        ""
    )

spTemperatureArray7_8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 178)
)
spTemperatureArray7_8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray7_8Status.setStatus(
        ""
    )

spTemperatureArray8_1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 181)
)
spTemperatureArray8_1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray8_1Status.setStatus(
        ""
    )

spTemperatureArray8_2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 182)
)
spTemperatureArray8_2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray8_2Status.setStatus(
        ""
    )

spTemperatureArray8_3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 183)
)
spTemperatureArray8_3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray8_3Status.setStatus(
        ""
    )

spTemperatureArray8_4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 184)
)
spTemperatureArray8_4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray8_4Status.setStatus(
        ""
    )

spTemperatureArray8_5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 185)
)
spTemperatureArray8_5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray8_5Status.setStatus(
        ""
    )

spTemperatureArray8_6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 186)
)
spTemperatureArray8_6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray8_6Status.setStatus(
        ""
    )

spTemperatureArray8_7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 187)
)
spTemperatureArray8_7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray8_7Status.setStatus(
        ""
    )

spTemperatureArray8_8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 188)
)
spTemperatureArray8_8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spTemperatureArray8_8Status.setStatus(
        ""
    )

spAnalogue1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 201)
)
spAnalogue1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spAnalogue1Status.setStatus(
        ""
    )

spAnalogue2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 202)
)
spAnalogue2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spAnalogue2Status.setStatus(
        ""
    )

spAnalogue3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 203)
)
spAnalogue3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spAnalogue3Status.setStatus(
        ""
    )

spAnalogue4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 204)
)
spAnalogue4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spAnalogue4Status.setStatus(
        ""
    )

spAnalogue5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 205)
)
spAnalogue5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spAnalogue5Status.setStatus(
        ""
    )

spAnalogue6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 206)
)
spAnalogue6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spAnalogue6Status.setStatus(
        ""
    )

spAnalogue7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 207)
)
spAnalogue7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spAnalogue7Status.setStatus(
        ""
    )

spAnalogue8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 208)
)
spAnalogue8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spAnalogue8Status.setStatus(
        ""
    )

spSwitch1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 301)
)
spSwitch1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch1Status.setStatus(
        ""
    )

spSwitch2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 302)
)
spSwitch2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch2Status.setStatus(
        ""
    )

spSwitch3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 303)
)
spSwitch3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch3Status.setStatus(
        ""
    )

spSwitch4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 304)
)
spSwitch4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch4Status.setStatus(
        ""
    )

spSwitch5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 305)
)
spSwitch5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch5Status.setStatus(
        ""
    )

spSwitch6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 306)
)
spSwitch6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch6Status.setStatus(
        ""
    )

spSwitch7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 307)
)
spSwitch7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch7Status.setStatus(
        ""
    )

spSwitch8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 308)
)
spSwitch8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch8Status.setStatus(
        ""
    )

spSwitch9Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 309)
)
spSwitch9Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch9Status.setStatus(
        ""
    )

spSwitch10Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 310)
)
spSwitch10Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch10Status.setStatus(
        ""
    )

spSwitch11Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 311)
)
spSwitch11Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch11Status.setStatus(
        ""
    )

spSwitch12Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 312)
)
spSwitch12Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch12Status.setStatus(
        ""
    )

spSwitch13Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 313)
)
spSwitch13Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch13Status.setStatus(
        ""
    )

spSwitch14Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 314)
)
spSwitch14Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch14Status.setStatus(
        ""
    )

spSwitch15Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 315)
)
spSwitch15Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch15Status.setStatus(
        ""
    )

spSwitch16Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 316)
)
spSwitch16Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch16Status.setStatus(
        ""
    )

spSwitch17Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 317)
)
spSwitch17Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch17Status.setStatus(
        ""
    )

spSwitch18Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 318)
)
spSwitch18Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch18Status.setStatus(
        ""
    )

spSwitch19Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 319)
)
spSwitch19Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch19Status.setStatus(
        ""
    )

spSwitch20Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 320)
)
spSwitch20Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch20Status.setStatus(
        ""
    )

spSwitch21Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 321)
)
spSwitch21Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch21Status.setStatus(
        ""
    )

spSwitch22Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 322)
)
spSwitch22Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch22Status.setStatus(
        ""
    )

spSwitch23Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 323)
)
spSwitch23Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch23Status.setStatus(
        ""
    )

spSwitch24Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 324)
)
spSwitch24Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch24Status.setStatus(
        ""
    )

spSwitch25Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 325)
)
spSwitch25Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch25Status.setStatus(
        ""
    )

spSwitch26Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 326)
)
spSwitch26Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch26Status.setStatus(
        ""
    )

spSwitch27Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 327)
)
spSwitch27Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch27Status.setStatus(
        ""
    )

spSwitch28Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 328)
)
spSwitch28Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch28Status.setStatus(
        ""
    )

spSwitch29Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 329)
)
spSwitch29Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch29Status.setStatus(
        ""
    )

spSwitch30Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 330)
)
spSwitch30Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch30Status.setStatus(
        ""
    )

spSwitch31Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 331)
)
spSwitch31Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch31Status.setStatus(
        ""
    )

spSwitch32Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 332)
)
spSwitch32Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch32Status.setStatus(
        ""
    )

spSwitch33Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 333)
)
spSwitch33Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch33Status.setStatus(
        ""
    )

spSwitch34Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 334)
)
spSwitch34Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch34Status.setStatus(
        ""
    )

spSwitch35Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 335)
)
spSwitch35Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch35Status.setStatus(
        ""
    )

spSwitch36Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 336)
)
spSwitch36Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch36Status.setStatus(
        ""
    )

spSwitch37Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 337)
)
spSwitch37Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch37Status.setStatus(
        ""
    )

spSwitch38Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 338)
)
spSwitch38Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch38Status.setStatus(
        ""
    )

spSwitch39Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 339)
)
spSwitch39Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch39Status.setStatus(
        ""
    )

spSwitch40Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 340)
)
spSwitch40Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch40Status.setStatus(
        ""
    )

spSwitch41Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 341)
)
spSwitch41Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch41Status.setStatus(
        ""
    )

spSwitch42Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 342)
)
spSwitch42Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch42Status.setStatus(
        ""
    )

spSwitch43Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 343)
)
spSwitch43Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch43Status.setStatus(
        ""
    )

spSwitch44Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 344)
)
spSwitch44Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch44Status.setStatus(
        ""
    )

spSwitch45Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 345)
)
spSwitch45Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch45Status.setStatus(
        ""
    )

spSwitch46Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 346)
)
spSwitch46Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch46Status.setStatus(
        ""
    )

spSwitch47Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 347)
)
spSwitch47Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch47Status.setStatus(
        ""
    )

spSwitch48Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 348)
)
spSwitch48Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch48Status.setStatus(
        ""
    )

spSwitch49Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 349)
)
spSwitch49Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch49Status.setStatus(
        ""
    )

spSwitch50Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 350)
)
spSwitch50Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch50Status.setStatus(
        ""
    )

spSwitch51Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 351)
)
spSwitch51Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch51Status.setStatus(
        ""
    )

spSwitch52Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 352)
)
spSwitch52Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch52Status.setStatus(
        ""
    )

spSwitch53Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 353)
)
spSwitch53Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch53Status.setStatus(
        ""
    )

spSwitch54Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 354)
)
spSwitch54Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch54Status.setStatus(
        ""
    )

spSwitch55Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 355)
)
spSwitch55Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch55Status.setStatus(
        ""
    )

spSwitch56Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 356)
)
spSwitch56Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch56Status.setStatus(
        ""
    )

spSwitch57Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 357)
)
spSwitch57Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch57Status.setStatus(
        ""
    )

spSwitch58Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 358)
)
spSwitch58Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch58Status.setStatus(
        ""
    )

spSwitch59Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 359)
)
spSwitch59Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch59Status.setStatus(
        ""
    )

spSwitch60Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 360)
)
spSwitch60Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch60Status.setStatus(
        ""
    )

spSwitch61Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 361)
)
spSwitch61Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch61Status.setStatus(
        ""
    )

spSwitch62Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 362)
)
spSwitch62Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch62Status.setStatus(
        ""
    )

spSwitch63Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 363)
)
spSwitch63Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch63Status.setStatus(
        ""
    )

spSwitch64Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 364)
)
spSwitch64Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch64Status.setStatus(
        ""
    )

spSwitch65Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 365)
)
spSwitch65Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch65Status.setStatus(
        ""
    )

spSwitch66Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 366)
)
spSwitch66Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch66Status.setStatus(
        ""
    )

spSwitch67Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 367)
)
spSwitch67Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch67Status.setStatus(
        ""
    )

spSwitch68Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 368)
)
spSwitch68Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spSwitch68Status.setStatus(
        ""
    )

spIRMS1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 401)
)
spIRMS1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spIRMS1Status.setStatus(
        ""
    )

spIRMS2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 402)
)
spIRMS2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spIRMS2Status.setStatus(
        ""
    )

spIRMS3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 403)
)
spIRMS3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spIRMS3Status.setStatus(
        ""
    )

spIRMS4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 404)
)
spIRMS4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spIRMS4Status.setStatus(
        ""
    )

spIRMS5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 405)
)
spIRMS5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spIRMS5Status.setStatus(
        ""
    )

spIRMS6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 406)
)
spIRMS6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spIRMS6Status.setStatus(
        ""
    )

spIRMS7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 407)
)
spIRMS7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spIRMS7Status.setStatus(
        ""
    )

spIRMS8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 408)
)
spIRMS8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spIRMS8Status.setStatus(
        ""
    )

spVRMS1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 501)
)
spVRMS1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVRMS1Status.setStatus(
        ""
    )

spVRMS2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 502)
)
spVRMS2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVRMS2Status.setStatus(
        ""
    )

spVRMS3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 503)
)
spVRMS3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVRMS3Status.setStatus(
        ""
    )

spVRMS4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 504)
)
spVRMS4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVRMS4Status.setStatus(
        ""
    )

spVRMS5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 505)
)
spVRMS5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVRMS5Status.setStatus(
        ""
    )

spVRMS6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 506)
)
spVRMS6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVRMS6Status.setStatus(
        ""
    )

spVRMS7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 507)
)
spVRMS7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVRMS7Status.setStatus(
        ""
    )

spVRMS8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 508)
)
spVRMS8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVRMS8Status.setStatus(
        ""
    )

spEnergy1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 601)
)
spEnergy1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spEnergy1Status.setStatus(
        ""
    )

spEnergy2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 602)
)
spEnergy2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spEnergy2Status.setStatus(
        ""
    )

spEnergy3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 603)
)
spEnergy3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spEnergy3Status.setStatus(
        ""
    )

spEnergy4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 604)
)
spEnergy4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spEnergy4Status.setStatus(
        ""
    )

spEnergy5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 605)
)
spEnergy5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spEnergy5Status.setStatus(
        ""
    )

spEnergy6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 606)
)
spEnergy6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spEnergy6Status.setStatus(
        ""
    )

spEnergy7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 607)
)
spEnergy7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spEnergy7Status.setStatus(
        ""
    )

spEnergy8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 608)
)
spEnergy8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spEnergy8Status.setStatus(
        ""
    )

spRelayArray1_1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 711)
)
spRelayArray1_1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray1_1Status.setStatus(
        ""
    )

spRelayArray1_2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 712)
)
spRelayArray1_2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray1_2Status.setStatus(
        ""
    )

spRelayArray1_3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 713)
)
spRelayArray1_3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray1_3Status.setStatus(
        ""
    )

spRelayArray1_4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 714)
)
spRelayArray1_4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray1_4Status.setStatus(
        ""
    )

spRelayArray1_5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 715)
)
spRelayArray1_5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray1_5Status.setStatus(
        ""
    )

spRelayArray1_6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 716)
)
spRelayArray1_6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray1_6Status.setStatus(
        ""
    )

spRelayArray1_7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 717)
)
spRelayArray1_7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray1_7Status.setStatus(
        ""
    )

spRelayArray1_8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 718)
)
spRelayArray1_8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray1_8Status.setStatus(
        ""
    )

spRelayArray2_1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 721)
)
spRelayArray2_1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray2_1Status.setStatus(
        ""
    )

spRelayArray2_2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 722)
)
spRelayArray2_2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray2_2Status.setStatus(
        ""
    )

spRelayArray2_3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 723)
)
spRelayArray2_3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray2_3Status.setStatus(
        ""
    )

spRelayArray2_4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 724)
)
spRelayArray2_4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray2_4Status.setStatus(
        ""
    )

spRelayArray2_5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 725)
)
spRelayArray2_5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray2_5Status.setStatus(
        ""
    )

spRelayArray2_6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 726)
)
spRelayArray2_6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray2_6Status.setStatus(
        ""
    )

spRelayArray2_7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 727)
)
spRelayArray2_7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray2_7Status.setStatus(
        ""
    )

spRelayArray2_8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 728)
)
spRelayArray2_8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray2_8Status.setStatus(
        ""
    )

spRelayArray3_1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 731)
)
spRelayArray3_1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray3_1Status.setStatus(
        ""
    )

spRelayArray3_2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 732)
)
spRelayArray3_2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray3_2Status.setStatus(
        ""
    )

spRelayArray3_3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 733)
)
spRelayArray3_3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray3_3Status.setStatus(
        ""
    )

spRelayArray3_4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 734)
)
spRelayArray3_4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray3_4Status.setStatus(
        ""
    )

spRelayArray3_5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 735)
)
spRelayArray3_5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray3_5Status.setStatus(
        ""
    )

spRelayArray3_6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 736)
)
spRelayArray3_6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray3_6Status.setStatus(
        ""
    )

spRelayArray3_7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 737)
)
spRelayArray3_7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray3_7Status.setStatus(
        ""
    )

spRelayArray3_8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 738)
)
spRelayArray3_8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray3_8Status.setStatus(
        ""
    )

spRelayArray4_1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 741)
)
spRelayArray4_1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray4_1Status.setStatus(
        ""
    )

spRelayArray4_2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 742)
)
spRelayArray4_2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray4_2Status.setStatus(
        ""
    )

spRelayArray4_3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 743)
)
spRelayArray4_3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray4_3Status.setStatus(
        ""
    )

spRelayArray4_4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 744)
)
spRelayArray4_4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray4_4Status.setStatus(
        ""
    )

spRelayArray4_5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 745)
)
spRelayArray4_5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray4_5Status.setStatus(
        ""
    )

spRelayArray4_6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 746)
)
spRelayArray4_6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray4_6Status.setStatus(
        ""
    )

spRelayArray4_7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 747)
)
spRelayArray4_7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray4_7Status.setStatus(
        ""
    )

spRelayArray4_8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 748)
)
spRelayArray4_8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray4_8Status.setStatus(
        ""
    )

spRelayArray5_1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 751)
)
spRelayArray5_1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray5_1Status.setStatus(
        ""
    )

spRelayArray5_2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 752)
)
spRelayArray5_2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray5_2Status.setStatus(
        ""
    )

spRelayArray5_3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 753)
)
spRelayArray5_3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray5_3Status.setStatus(
        ""
    )

spRelayArray5_4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 754)
)
spRelayArray5_4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray5_4Status.setStatus(
        ""
    )

spRelayArray5_5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 755)
)
spRelayArray5_5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray5_5Status.setStatus(
        ""
    )

spRelayArray5_6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 756)
)
spRelayArray5_6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray5_6Status.setStatus(
        ""
    )

spRelayArray5_7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 757)
)
spRelayArray5_7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray5_7Status.setStatus(
        ""
    )

spRelayArray5_8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 758)
)
spRelayArray5_8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray5_8Status.setStatus(
        ""
    )

spRelayArray6_1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 761)
)
spRelayArray6_1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray6_1Status.setStatus(
        ""
    )

spRelayArray6_2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 762)
)
spRelayArray6_2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray6_2Status.setStatus(
        ""
    )

spRelayArray6_3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 763)
)
spRelayArray6_3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray6_3Status.setStatus(
        ""
    )

spRelayArray6_4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 764)
)
spRelayArray6_4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray6_4Status.setStatus(
        ""
    )

spRelayArray6_5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 765)
)
spRelayArray6_5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray6_5Status.setStatus(
        ""
    )

spRelayArray6_6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 766)
)
spRelayArray6_6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray6_6Status.setStatus(
        ""
    )

spRelayArray6_7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 767)
)
spRelayArray6_7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray6_7Status.setStatus(
        ""
    )

spRelayArray6_8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 768)
)
spRelayArray6_8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray6_8Status.setStatus(
        ""
    )

spRelayArray7_1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 771)
)
spRelayArray7_1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray7_1Status.setStatus(
        ""
    )

spRelayArray7_2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 772)
)
spRelayArray7_2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray7_2Status.setStatus(
        ""
    )

spRelayArray7_3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 773)
)
spRelayArray7_3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray7_3Status.setStatus(
        ""
    )

spRelayArray7_4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 774)
)
spRelayArray7_4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray7_4Status.setStatus(
        ""
    )

spRelayArray7_5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 775)
)
spRelayArray7_5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray7_5Status.setStatus(
        ""
    )

spRelayArray7_6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 776)
)
spRelayArray7_6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray7_6Status.setStatus(
        ""
    )

spRelayArray7_7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 777)
)
spRelayArray7_7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray7_7Status.setStatus(
        ""
    )

spRelayArray7_8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 778)
)
spRelayArray7_8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray7_8Status.setStatus(
        ""
    )

spRelayArray8_1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 781)
)
spRelayArray8_1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray8_1Status.setStatus(
        ""
    )

spRelayArray8_2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 782)
)
spRelayArray8_2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray8_2Status.setStatus(
        ""
    )

spRelayArray8_3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 783)
)
spRelayArray8_3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray8_3Status.setStatus(
        ""
    )

spRelayArray8_4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 784)
)
spRelayArray8_4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray8_4Status.setStatus(
        ""
    )

spRelayArray8_5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 785)
)
spRelayArray8_5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray8_5Status.setStatus(
        ""
    )

spRelayArray8_6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 786)
)
spRelayArray8_6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray8_6Status.setStatus(
        ""
    )

spRelayArray8_7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 787)
)
spRelayArray8_7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray8_7Status.setStatus(
        ""
    )

spRelayArray8_8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 788)
)
spRelayArray8_8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spRelayArray8_8Status.setStatus(
        ""
    )

spVirtual1Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 801)
)
spVirtual1Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVirtual1Status.setStatus(
        ""
    )

spVirtual2Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 802)
)
spVirtual2Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVirtual2Status.setStatus(
        ""
    )

spVirtual3Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 803)
)
spVirtual3Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVirtual3Status.setStatus(
        ""
    )

spVirtual4Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 804)
)
spVirtual4Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVirtual4Status.setStatus(
        ""
    )

spVirtual5Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 805)
)
spVirtual5Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVirtual5Status.setStatus(
        ""
    )

spVirtual6Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 806)
)
spVirtual6Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVirtual6Status.setStatus(
        ""
    )

spVirtual7Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 807)
)
spVirtual7Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVirtual7Status.setStatus(
        ""
    )

spVirtual8Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 808)
)
spVirtual8Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVirtual8Status.setStatus(
        ""
    )

spVirtual9Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 809)
)
spVirtual9Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVirtual9Status.setStatus(
        ""
    )

spVirtual10Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 810)
)
spVirtual10Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVirtual10Status.setStatus(
        ""
    )

spVirtual11Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 811)
)
spVirtual11Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVirtual11Status.setStatus(
        ""
    )

spVirtual12Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 812)
)
spVirtual12Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVirtual12Status.setStatus(
        ""
    )

spVirtual13Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 813)
)
spVirtual13Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVirtual13Status.setStatus(
        ""
    )

spVirtual14Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 814)
)
spVirtual14Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVirtual14Status.setStatus(
        ""
    )

spVirtual15Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 815)
)
spVirtual15Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVirtual15Status.setStatus(
        ""
    )

spVirtual16Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 816)
)
spVirtual16Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVirtual16Status.setStatus(
        ""
    )

spVirtual17Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 817)
)
spVirtual17Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVirtual17Status.setStatus(
        ""
    )

spVirtual18Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 818)
)
spVirtual18Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVirtual18Status.setStatus(
        ""
    )

spVirtual19Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 819)
)
spVirtual19Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVirtual19Status.setStatus(
        ""
    )

spVirtual20Status = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 820)
)
spVirtual20Status.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"))
)
if mibBuilder.loadTexts:
    spVirtual20Status.setStatus(
        ""
    )

spCustomStatus = NotificationType(
    (1, 3, 6, 1, 4, 1, 3854, 1, 0, 1000)
)
spCustomStatus.setObjects(
      *(("SPAGENT-MIB", "spSensorStatus"),
        ("SPAGENT-MIB", "spSensorValue"),
        ("SPAGENT-MIB", "spSensorLevelExceeded"),
        ("SPAGENT-MIB", "spSensorIndex"),
        ("SPAGENT-MIB", "spSensorName"),
        ("SPAGENT-MIB", "spSensorDescription"),
        ("SPAGENT-MIB", "spSensorType"),
        ("SPAGENT-MIB", "spSensorStatusName"),
        ("SPAGENT-MIB", "spSensorSubIndex"),
        ("SPAGENT-MIB", "spBoardIndex"),
        ("SPAGENT-MIB", "spBoardDescription"),
        ("SPAGENT-MIB", "spEventTimeStamp"),
        ("SPAGENT-MIB", "spEventClassNumber"),
        ("SPAGENT-MIB", "spEventClassName"))
)
if mibBuilder.loadTexts:
    spCustomStatus.setStatus(
        ""
    )


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "SPAGENT-MIB",
    **{"akcp": akcp,
       "sensorProbe": sensorProbe,
       "spNormalStatus": spNormalStatus,
       "spWarningStatus": spWarningStatus,
       "spCriticalStatus": spCriticalStatus,
       "spDownStatus": spDownStatus,
       "spKeepAliveTrap": spKeepAliveTrap,
       "spUnknownStatus": spUnknownStatus,
       "spTemperatureStatus": spTemperatureStatus,
       "spTemperatureArray1Status": spTemperatureArray1Status,
       "spTemperatureArray2Status": spTemperatureArray2Status,
       "spTemperatureArray3Status": spTemperatureArray3Status,
       "spTemperatureArray4Status": spTemperatureArray4Status,
       "spTemperatureArray5Status": spTemperatureArray5Status,
       "spTemperatureArray6Status": spTemperatureArray6Status,
       "spTemperatureArray7Status": spTemperatureArray7Status,
       "spTemperatureArray8Status": spTemperatureArray8Status,
       "spAnalogueStatus": spAnalogueStatus,
       "spSwitchStatus": spSwitchStatus,
       "spIRMSStatus": spIRMSStatus,
       "spVRMSStatus": spVRMSStatus,
       "spSenUnknownStatus": spSenUnknownStatus,
       "spSenNormalStatus": spSenNormalStatus,
       "spSenWarningStatus": spSenWarningStatus,
       "spSenCriticalStatus": spSenCriticalStatus,
       "spSenDownStatus": spSenDownStatus,
       "spWattStatus": spWattStatus,
       "spRelayArray1Status": spRelayArray1Status,
       "spRelayArray2Status": spRelayArray2Status,
       "spRelayArray3Status": spRelayArray3Status,
       "spRelayArray4Status": spRelayArray4Status,
       "spRelayArray5Status": spRelayArray5Status,
       "spRelayArray6Status": spRelayArray6Status,
       "spRelayArray8Status": spRelayArray8Status,
       "spVirtualStatus": spVirtualStatus,
       "spTemperature1Status": spTemperature1Status,
       "spTemperature2Status": spTemperature2Status,
       "spTemperature3Status": spTemperature3Status,
       "spTemperature4Status": spTemperature4Status,
       "spTemperature5Status": spTemperature5Status,
       "spTemperature6Status": spTemperature6Status,
       "spTemperature7Status": spTemperature7Status,
       "spTemperature8Status": spTemperature8Status,
       "spTemperatureArray1-1Status": spTemperatureArray1_1Status,
       "spTemperatureArray1-2Status": spTemperatureArray1_2Status,
       "spTemperatureArray1-3Status": spTemperatureArray1_3Status,
       "spTemperatureArray1-4Status": spTemperatureArray1_4Status,
       "spTemperatureArray1-5Status": spTemperatureArray1_5Status,
       "spTemperatureArray1-6Status": spTemperatureArray1_6Status,
       "spTemperatureArray1-7Status": spTemperatureArray1_7Status,
       "spTemperatureArray1-8Status": spTemperatureArray1_8Status,
       "spTemperatureArray2-1Status": spTemperatureArray2_1Status,
       "spTemperatureArray2-2Status": spTemperatureArray2_2Status,
       "spTemperatureArray2-3Status": spTemperatureArray2_3Status,
       "spTemperatureArray2-4Status": spTemperatureArray2_4Status,
       "spTemperatureArray2-5Status": spTemperatureArray2_5Status,
       "spTemperatureArray2-6Status": spTemperatureArray2_6Status,
       "spTemperatureArray2-7Status": spTemperatureArray2_7Status,
       "spTemperatureArray2-8Status": spTemperatureArray2_8Status,
       "spTemperatureArray3-1Status": spTemperatureArray3_1Status,
       "spTemperatureArray3-2Status": spTemperatureArray3_2Status,
       "spTemperatureArray3-3Status": spTemperatureArray3_3Status,
       "spTemperatureArray3-4Status": spTemperatureArray3_4Status,
       "spTemperatureArray3-5Status": spTemperatureArray3_5Status,
       "spTemperatureArray3-6Status": spTemperatureArray3_6Status,
       "spTemperatureArray3-7Status": spTemperatureArray3_7Status,
       "spTemperatureArray3-8Status": spTemperatureArray3_8Status,
       "spTemperatureArray4-1Status": spTemperatureArray4_1Status,
       "spTemperatureArray4-2Status": spTemperatureArray4_2Status,
       "spTemperatureArray4-3Status": spTemperatureArray4_3Status,
       "spTemperatureArray4-4Status": spTemperatureArray4_4Status,
       "spTemperatureArray4-5Status": spTemperatureArray4_5Status,
       "spTemperatureArray4-6Status": spTemperatureArray4_6Status,
       "spTemperatureArray4-7Status": spTemperatureArray4_7Status,
       "spTemperatureArray4-8Status": spTemperatureArray4_8Status,
       "spTemperatureArray5-1Status": spTemperatureArray5_1Status,
       "spTemperatureArray5-2Status": spTemperatureArray5_2Status,
       "spTemperatureArray5-3Status": spTemperatureArray5_3Status,
       "spTemperatureArray5-4Status": spTemperatureArray5_4Status,
       "spTemperatureArray5-5Status": spTemperatureArray5_5Status,
       "spTemperatureArray5-6Status": spTemperatureArray5_6Status,
       "spTemperatureArray5-7Status": spTemperatureArray5_7Status,
       "spTemperatureArray5-8Status": spTemperatureArray5_8Status,
       "spTemperatureArray6-1Status": spTemperatureArray6_1Status,
       "spTemperatureArray6-2Status": spTemperatureArray6_2Status,
       "spTemperatureArray6-3Status": spTemperatureArray6_3Status,
       "spTemperatureArray6-4Status": spTemperatureArray6_4Status,
       "spTemperatureArray6-5Status": spTemperatureArray6_5Status,
       "spTemperatureArray6-6Status": spTemperatureArray6_6Status,
       "spTemperatureArray6-7Status": spTemperatureArray6_7Status,
       "spTemperatureArray6-8Status": spTemperatureArray6_8Status,
       "spTemperatureArray7-1Status": spTemperatureArray7_1Status,
       "spTemperatureArray7-2Status": spTemperatureArray7_2Status,
       "spTemperatureArray7-3Status": spTemperatureArray7_3Status,
       "spTemperatureArray7-4Status": spTemperatureArray7_4Status,
       "spTemperatureArray7-5Status": spTemperatureArray7_5Status,
       "spTemperatureArray7-6Status": spTemperatureArray7_6Status,
       "spTemperatureArray7-7Status": spTemperatureArray7_7Status,
       "spTemperatureArray7-8Status": spTemperatureArray7_8Status,
       "spTemperatureArray8-1Status": spTemperatureArray8_1Status,
       "spTemperatureArray8-2Status": spTemperatureArray8_2Status,
       "spTemperatureArray8-3Status": spTemperatureArray8_3Status,
       "spTemperatureArray8-4Status": spTemperatureArray8_4Status,
       "spTemperatureArray8-5Status": spTemperatureArray8_5Status,
       "spTemperatureArray8-6Status": spTemperatureArray8_6Status,
       "spTemperatureArray8-7Status": spTemperatureArray8_7Status,
       "spTemperatureArray8-8Status": spTemperatureArray8_8Status,
       "spAnalogue1Status": spAnalogue1Status,
       "spAnalogue2Status": spAnalogue2Status,
       "spAnalogue3Status": spAnalogue3Status,
       "spAnalogue4Status": spAnalogue4Status,
       "spAnalogue5Status": spAnalogue5Status,
       "spAnalogue6Status": spAnalogue6Status,
       "spAnalogue7Status": spAnalogue7Status,
       "spAnalogue8Status": spAnalogue8Status,
       "spSwitch1Status": spSwitch1Status,
       "spSwitch2Status": spSwitch2Status,
       "spSwitch3Status": spSwitch3Status,
       "spSwitch4Status": spSwitch4Status,
       "spSwitch5Status": spSwitch5Status,
       "spSwitch6Status": spSwitch6Status,
       "spSwitch7Status": spSwitch7Status,
       "spSwitch8Status": spSwitch8Status,
       "spSwitch9Status": spSwitch9Status,
       "spSwitch10Status": spSwitch10Status,
       "spSwitch11Status": spSwitch11Status,
       "spSwitch12Status": spSwitch12Status,
       "spSwitch13Status": spSwitch13Status,
       "spSwitch14Status": spSwitch14Status,
       "spSwitch15Status": spSwitch15Status,
       "spSwitch16Status": spSwitch16Status,
       "spSwitch17Status": spSwitch17Status,
       "spSwitch18Status": spSwitch18Status,
       "spSwitch19Status": spSwitch19Status,
       "spSwitch20Status": spSwitch20Status,
       "spSwitch21Status": spSwitch21Status,
       "spSwitch22Status": spSwitch22Status,
       "spSwitch23Status": spSwitch23Status,
       "spSwitch24Status": spSwitch24Status,
       "spSwitch25Status": spSwitch25Status,
       "spSwitch26Status": spSwitch26Status,
       "spSwitch27Status": spSwitch27Status,
       "spSwitch28Status": spSwitch28Status,
       "spSwitch29Status": spSwitch29Status,
       "spSwitch30Status": spSwitch30Status,
       "spSwitch31Status": spSwitch31Status,
       "spSwitch32Status": spSwitch32Status,
       "spSwitch33Status": spSwitch33Status,
       "spSwitch34Status": spSwitch34Status,
       "spSwitch35Status": spSwitch35Status,
       "spSwitch36Status": spSwitch36Status,
       "spSwitch37Status": spSwitch37Status,
       "spSwitch38Status": spSwitch38Status,
       "spSwitch39Status": spSwitch39Status,
       "spSwitch40Status": spSwitch40Status,
       "spSwitch41Status": spSwitch41Status,
       "spSwitch42Status": spSwitch42Status,
       "spSwitch43Status": spSwitch43Status,
       "spSwitch44Status": spSwitch44Status,
       "spSwitch45Status": spSwitch45Status,
       "spSwitch46Status": spSwitch46Status,
       "spSwitch47Status": spSwitch47Status,
       "spSwitch48Status": spSwitch48Status,
       "spSwitch49Status": spSwitch49Status,
       "spSwitch50Status": spSwitch50Status,
       "spSwitch51Status": spSwitch51Status,
       "spSwitch52Status": spSwitch52Status,
       "spSwitch53Status": spSwitch53Status,
       "spSwitch54Status": spSwitch54Status,
       "spSwitch55Status": spSwitch55Status,
       "spSwitch56Status": spSwitch56Status,
       "spSwitch57Status": spSwitch57Status,
       "spSwitch58Status": spSwitch58Status,
       "spSwitch59Status": spSwitch59Status,
       "spSwitch60Status": spSwitch60Status,
       "spSwitch61Status": spSwitch61Status,
       "spSwitch62Status": spSwitch62Status,
       "spSwitch63Status": spSwitch63Status,
       "spSwitch64Status": spSwitch64Status,
       "spSwitch65Status": spSwitch65Status,
       "spSwitch66Status": spSwitch66Status,
       "spSwitch67Status": spSwitch67Status,
       "spSwitch68Status": spSwitch68Status,
       "spIRMS1Status": spIRMS1Status,
       "spIRMS2Status": spIRMS2Status,
       "spIRMS3Status": spIRMS3Status,
       "spIRMS4Status": spIRMS4Status,
       "spIRMS5Status": spIRMS5Status,
       "spIRMS6Status": spIRMS6Status,
       "spIRMS7Status": spIRMS7Status,
       "spIRMS8Status": spIRMS8Status,
       "spVRMS1Status": spVRMS1Status,
       "spVRMS2Status": spVRMS2Status,
       "spVRMS3Status": spVRMS3Status,
       "spVRMS4Status": spVRMS4Status,
       "spVRMS5Status": spVRMS5Status,
       "spVRMS6Status": spVRMS6Status,
       "spVRMS7Status": spVRMS7Status,
       "spVRMS8Status": spVRMS8Status,
       "spEnergy1Status": spEnergy1Status,
       "spEnergy2Status": spEnergy2Status,
       "spEnergy3Status": spEnergy3Status,
       "spEnergy4Status": spEnergy4Status,
       "spEnergy5Status": spEnergy5Status,
       "spEnergy6Status": spEnergy6Status,
       "spEnergy7Status": spEnergy7Status,
       "spEnergy8Status": spEnergy8Status,
       "spRelayArray1-1Status": spRelayArray1_1Status,
       "spRelayArray1-2Status": spRelayArray1_2Status,
       "spRelayArray1-3Status": spRelayArray1_3Status,
       "spRelayArray1-4Status": spRelayArray1_4Status,
       "spRelayArray1-5Status": spRelayArray1_5Status,
       "spRelayArray1-6Status": spRelayArray1_6Status,
       "spRelayArray1-7Status": spRelayArray1_7Status,
       "spRelayArray1-8Status": spRelayArray1_8Status,
       "spRelayArray2-1Status": spRelayArray2_1Status,
       "spRelayArray2-2Status": spRelayArray2_2Status,
       "spRelayArray2-3Status": spRelayArray2_3Status,
       "spRelayArray2-4Status": spRelayArray2_4Status,
       "spRelayArray2-5Status": spRelayArray2_5Status,
       "spRelayArray2-6Status": spRelayArray2_6Status,
       "spRelayArray2-7Status": spRelayArray2_7Status,
       "spRelayArray2-8Status": spRelayArray2_8Status,
       "spRelayArray3-1Status": spRelayArray3_1Status,
       "spRelayArray3-2Status": spRelayArray3_2Status,
       "spRelayArray3-3Status": spRelayArray3_3Status,
       "spRelayArray3-4Status": spRelayArray3_4Status,
       "spRelayArray3-5Status": spRelayArray3_5Status,
       "spRelayArray3-6Status": spRelayArray3_6Status,
       "spRelayArray3-7Status": spRelayArray3_7Status,
       "spRelayArray3-8Status": spRelayArray3_8Status,
       "spRelayArray4-1Status": spRelayArray4_1Status,
       "spRelayArray4-2Status": spRelayArray4_2Status,
       "spRelayArray4-3Status": spRelayArray4_3Status,
       "spRelayArray4-4Status": spRelayArray4_4Status,
       "spRelayArray4-5Status": spRelayArray4_5Status,
       "spRelayArray4-6Status": spRelayArray4_6Status,
       "spRelayArray4-7Status": spRelayArray4_7Status,
       "spRelayArray4-8Status": spRelayArray4_8Status,
       "spRelayArray5-1Status": spRelayArray5_1Status,
       "spRelayArray5-2Status": spRelayArray5_2Status,
       "spRelayArray5-3Status": spRelayArray5_3Status,
       "spRelayArray5-4Status": spRelayArray5_4Status,
       "spRelayArray5-5Status": spRelayArray5_5Status,
       "spRelayArray5-6Status": spRelayArray5_6Status,
       "spRelayArray5-7Status": spRelayArray5_7Status,
       "spRelayArray5-8Status": spRelayArray5_8Status,
       "spRelayArray6-1Status": spRelayArray6_1Status,
       "spRelayArray6-2Status": spRelayArray6_2Status,
       "spRelayArray6-3Status": spRelayArray6_3Status,
       "spRelayArray6-4Status": spRelayArray6_4Status,
       "spRelayArray6-5Status": spRelayArray6_5Status,
       "spRelayArray6-6Status": spRelayArray6_6Status,
       "spRelayArray6-7Status": spRelayArray6_7Status,
       "spRelayArray6-8Status": spRelayArray6_8Status,
       "spRelayArray7-1Status": spRelayArray7_1Status,
       "spRelayArray7-2Status": spRelayArray7_2Status,
       "spRelayArray7-3Status": spRelayArray7_3Status,
       "spRelayArray7-4Status": spRelayArray7_4Status,
       "spRelayArray7-5Status": spRelayArray7_5Status,
       "spRelayArray7-6Status": spRelayArray7_6Status,
       "spRelayArray7-7Status": spRelayArray7_7Status,
       "spRelayArray7-8Status": spRelayArray7_8Status,
       "spRelayArray8-1Status": spRelayArray8_1Status,
       "spRelayArray8-2Status": spRelayArray8_2Status,
       "spRelayArray8-3Status": spRelayArray8_3Status,
       "spRelayArray8-4Status": spRelayArray8_4Status,
       "spRelayArray8-5Status": spRelayArray8_5Status,
       "spRelayArray8-6Status": spRelayArray8_6Status,
       "spRelayArray8-7Status": spRelayArray8_7Status,
       "spRelayArray8-8Status": spRelayArray8_8Status,
       "spVirtual1Status": spVirtual1Status,
       "spVirtual2Status": spVirtual2Status,
       "spVirtual3Status": spVirtual3Status,
       "spVirtual4Status": spVirtual4Status,
       "spVirtual5Status": spVirtual5Status,
       "spVirtual6Status": spVirtual6Status,
       "spVirtual7Status": spVirtual7Status,
       "spVirtual8Status": spVirtual8Status,
       "spVirtual9Status": spVirtual9Status,
       "spVirtual10Status": spVirtual10Status,
       "spVirtual11Status": spVirtual11Status,
       "spVirtual12Status": spVirtual12Status,
       "spVirtual13Status": spVirtual13Status,
       "spVirtual14Status": spVirtual14Status,
       "spVirtual15Status": spVirtual15Status,
       "spVirtual16Status": spVirtual16Status,
       "spVirtual17Status": spVirtual17Status,
       "spVirtual18Status": spVirtual18Status,
       "spVirtual19Status": spVirtual19Status,
       "spVirtual20Status": spVirtual20Status,
       "spCustomStatus": spCustomStatus,
       "spSummary": spSummary,
       "spStatus": spStatus,
       "spManufName": spManufName,
       "spHelpUrl": spHelpUrl,
       "spProductName": spProductName,
       "spHostName": spHostName,
       "spSensor": spSensor,
       "sensorProbeDetail": sensorProbeDetail,
       "sensorProbeEntry": sensorProbeEntry,
       "sensorProbeHost": sensorProbeHost,
       "sensorProbeUseDHCP": sensorProbeUseDHCP,
       "sensorProbeMAC": sensorProbeMAC,
       "sensorProbeSetCommunity": sensorProbeSetCommunity,
       "sensorProbeGetCommunity": sensorProbeGetCommunity,
       "sensorProbeTempTable": sensorProbeTempTable,
       "sensorProbeTempEntry": sensorProbeTempEntry,
       "sensorProbeTempDescription": sensorProbeTempDescription,
       "sensorProbeTempLocation": sensorProbeTempLocation,
       "sensorProbeTempDegree": sensorProbeTempDegree,
       "sensorProbeTempStatus": sensorProbeTempStatus,
       "sensorProbeTempOnline": sensorProbeTempOnline,
       "sensorProbeTempGoOnline": sensorProbeTempGoOnline,
       "sensorProbeTempHighWarning": sensorProbeTempHighWarning,
       "sensorProbeTempHighCritical": sensorProbeTempHighCritical,
       "sensorProbeTempLowWarning": sensorProbeTempLowWarning,
       "sensorProbeTempLowCritical": sensorProbeTempLowCritical,
       "sensorProbeTempRearm": sensorProbeTempRearm,
       "sensorProbeTempDegreeType": sensorProbeTempDegreeType,
       "sensorProbeTempSensorType": sensorProbeTempSensorType,
       "sensorProbeTempDegreeRaw": sensorProbeTempDegreeRaw,
       "sensorProbeTempEmailTrapLimit": sensorProbeTempEmailTrapLimit,
       "sensorProbeTempEmailTrapSchedule": sensorProbeTempEmailTrapSchedule,
       "sensorProbeTempEmailTrapInterval": sensorProbeTempEmailTrapInterval,
       "sensorProbeTempSendNormalTrap": sensorProbeTempSendNormalTrap,
       "sensorProbeTempDelayError": sensorProbeTempDelayError,
       "sensorProbeTempDelayNormal": sensorProbeTempDelayNormal,
       "sensorProbeTempIndex": sensorProbeTempIndex,
       "sensorProbeTempRelayCycleTime": sensorProbeTempRelayCycleTime,
       "sensorProbeTempRelayOnPort": sensorProbeTempRelayOnPort,
       "sensorProbeTempRelayActiveStatus": sensorProbeTempRelayActiveStatus,
       "sensorProbeTempRelayAction": sensorProbeTempRelayAction,
       "sensorProbeTempEmailInterval": sensorProbeTempEmailInterval,
       "sensorProbeTempIndexCount": sensorProbeTempIndexCount,
       "sensorProbeTempOffset": sensorProbeTempOffset,
       "sensorProbeTempSirenCycleTime": sensorProbeTempSirenCycleTime,
       "sensorProbeTempSirenOnPort": sensorProbeTempSirenOnPort,
       "sensorProbeTempSirenActiveStatus": sensorProbeTempSirenActiveStatus,
       "sensorProbeTempSirenAction": sensorProbeTempSirenAction,
       "sensorProbeTempAcknowledgement": sensorProbeTempAcknowledgement,
       "sensorProbeTempSirenDelayAlarm": sensorProbeTempSirenDelayAlarm,
       "sensorProbeTempURL": sensorProbeTempURL,
       "sensorProbeTempOpenURL": sensorProbeTempOpenURL,
       "sensorProbeTempDatacollectType": sensorProbeTempDatacollectType,
       "sensorProbeTempContTimeHighCritical": sensorProbeTempContTimeHighCritical,
       "sensorProbeTempContTimeHighWarning": sensorProbeTempContTimeHighWarning,
       "sensorProbeTempContTimeNormal": sensorProbeTempContTimeNormal,
       "sensorProbeTempContTimeLowWarning": sensorProbeTempContTimeLowWarning,
       "sensorProbeTempContTimeLowCritical": sensorProbeTempContTimeLowCritical,
       "sensorProbeTempContTimeSensorError": sensorProbeTempContTimeSensorError,
       "sensorProbeTempCalendar": sensorProbeTempCalendar,
       "sensorProbeThermostatIndex": sensorProbeThermostatIndex,
       "sensorProbeThermostatDescription": sensorProbeThermostatDescription,
       "sensorProbeThermostatValue": sensorProbeThermostatValue,
       "sensorProbeThermostatOnline": sensorProbeThermostatOnline,
       "sensorProbeThermostatGoOnline": sensorProbeThermostatGoOnline,
       "sensorProbeThermostatMode": sensorProbeThermostatMode,
       "sensorProbeThermostatRelayControlPort": sensorProbeThermostatRelayControlPort,
       "sensorProbeThermostatNormalAction1": sensorProbeThermostatNormalAction1,
       "sensorProbeThermostatHighLimit1": sensorProbeThermostatHighLimit1,
       "sensorProbeThermostatHighLimitAction1": sensorProbeThermostatHighLimitAction1,
       "sensorProbeThermostatLowLimit1": sensorProbeThermostatLowLimit1,
       "sensorProbeThermostatLowLimitAction1": sensorProbeThermostatLowLimitAction1,
       "sensorProbeThermostatNormalAction2": sensorProbeThermostatNormalAction2,
       "sensorProbeThermostatHighLimit2": sensorProbeThermostatHighLimit2,
       "sensorProbeThermostatHighLimitAction2": sensorProbeThermostatHighLimitAction2,
       "sensorProbeThermostatLowLimit2": sensorProbeThermostatLowLimit2,
       "sensorProbeThermostatLowLimitAction2": sensorProbeThermostatLowLimitAction2,
       "sensorProbeThermostatEnableTime": sensorProbeThermostatEnableTime,
       "sensorProbeTempSendNormalMail": sensorProbeTempSendNormalMail,
       "sensorProbeTempSendTrap": sensorProbeTempSendTrap,
       "sensorProbeTempSendMail": sensorProbeTempSendMail,
       "sensorProbeHumidityTable": sensorProbeHumidityTable,
       "sensorProbeHumidityEntry": sensorProbeHumidityEntry,
       "sensorProbeHumidityDescription": sensorProbeHumidityDescription,
       "sensorProbeHumidityLocation": sensorProbeHumidityLocation,
       "sensorProbeHumidityPercent": sensorProbeHumidityPercent,
       "sensorProbeHumidityStatus": sensorProbeHumidityStatus,
       "sensorProbeHumidityOnline": sensorProbeHumidityOnline,
       "sensorProbeHumidityGoOnline": sensorProbeHumidityGoOnline,
       "sensorProbeHumidityHighWarning": sensorProbeHumidityHighWarning,
       "sensorProbeHumidityHighCritical": sensorProbeHumidityHighCritical,
       "sensorProbeHumidityLowWarning": sensorProbeHumidityLowWarning,
       "sensorProbeHumidityLowCritical": sensorProbeHumidityLowCritical,
       "sensorProbeHumidityRearm": sensorProbeHumidityRearm,
       "sensorProbeHumidityRaw": sensorProbeHumidityRaw,
       "sensorProbeHumidityLowVoltage": sensorProbeHumidityLowVoltage,
       "sensorProbeHumidityHighVoltage": sensorProbeHumidityHighVoltage,
       "sensorProbeHumidityEmailTrapLimit": sensorProbeHumidityEmailTrapLimit,
       "sensorProbeHumidityEmailTrapSchedule": sensorProbeHumidityEmailTrapSchedule,
       "sensorProbeHumidityEmailTrapInterval": sensorProbeHumidityEmailTrapInterval,
       "sensorProbeHumiditySendNormalTrap": sensorProbeHumiditySendNormalTrap,
       "sensorProbeHumidityDelayError": sensorProbeHumidityDelayError,
       "sensorProbeHumidityDelayNormal": sensorProbeHumidityDelayNormal,
       "sensorProbeHumidityIndex": sensorProbeHumidityIndex,
       "sensorProbeHumidityAtoDAmountMaxVoltage": sensorProbeHumidityAtoDAmountMaxVoltage,
       "sensorProbeHumidityAtoDAmountBaseVoltage": sensorProbeHumidityAtoDAmountBaseVoltage,
       "sensorProbeHumidityAtoDTypeUnit": sensorProbeHumidityAtoDTypeUnit,
       "sensorProbeHumidityDcUnit": sensorProbeHumidityDcUnit,
       "sensorProbeHumidityAtoDJumper": sensorProbeHumidityAtoDJumper,
       "sensorProbeHumidityRelayCycleTime": sensorProbeHumidityRelayCycleTime,
       "sensorProbeHumidityRelayOnPort": sensorProbeHumidityRelayOnPort,
       "sensorProbeHumidityRelayActiveStatus": sensorProbeHumidityRelayActiveStatus,
       "sensorProbeHumidityRelayAction": sensorProbeHumidityRelayAction,
       "sensorProbeHumidityEmailInterval": sensorProbeHumidityEmailInterval,
       "sensorProbeHumidity4to20mAUnit": sensorProbeHumidity4to20mAUnit,
       "sensorProbeHumidityIndexCount": sensorProbeHumidityIndexCount,
       "sensorProbeHumidityOffset": sensorProbeHumidityOffset,
       "sensorProbeHumiditySirenCycleTime": sensorProbeHumiditySirenCycleTime,
       "sensorProbeHumiditySirenOnPort": sensorProbeHumiditySirenOnPort,
       "sensorProbeHumiditySirenActiveStatus": sensorProbeHumiditySirenActiveStatus,
       "sensorProbeHumiditySirenAction": sensorProbeHumiditySirenAction,
       "sensorProbeHumidityAcknowledgement": sensorProbeHumidityAcknowledgement,
       "sensorProbeHumiditySirenDelayAlarm": sensorProbeHumiditySirenDelayAlarm,
       "sensorProbeHumidityURL": sensorProbeHumidityURL,
       "sensorProbeHumidityOpenURL": sensorProbeHumidityOpenURL,
       "sensorProbeHumidityDatacollectType": sensorProbeHumidityDatacollectType,
       "sensorProbeHumidityContTimeHighCritical": sensorProbeHumidityContTimeHighCritical,
       "sensorProbeHumidityContTimeHighWarning": sensorProbeHumidityContTimeHighWarning,
       "sensorProbeHumidityContTimeNormal": sensorProbeHumidityContTimeNormal,
       "sensorProbeHumidityContTimeLowWarning": sensorProbeHumidityContTimeLowWarning,
       "sensorProbeHumidityContTimeLowCritical": sensorProbeHumidityContTimeLowCritical,
       "sensorProbeHumidityContTimeSensorError": sensorProbeHumidityContTimeSensorError,
       "sensorProbeHumidityCalendar": sensorProbeHumidityCalendar,
       "sensorProbeHumiditySendNormalMail": sensorProbeHumiditySendNormalMail,
       "sensorProbeHumiditySendTrap": sensorProbeHumiditySendTrap,
       "sensorProbeHumiditySendMail": sensorProbeHumiditySendMail,
       "sensorProbeSwitchTable": sensorProbeSwitchTable,
       "sensorProbeSwitchEntry": sensorProbeSwitchEntry,
       "sensorProbeSwitchDescription": sensorProbeSwitchDescription,
       "sensorProbeSwitchLocation": sensorProbeSwitchLocation,
       "sensorProbeSwitchStatus": sensorProbeSwitchStatus,
       "sensorProbeSwitchOnline": sensorProbeSwitchOnline,
       "sensorProbeSwitchGoOnline": sensorProbeSwitchGoOnline,
       "sensorProbeSwitchDirection": sensorProbeSwitchDirection,
       "sensorProbeSwitchNormalState": sensorProbeSwitchNormalState,
       "sensorProbeSwitchOutputLevel": sensorProbeSwitchOutputLevel,
       "sensorProbeSensorType": sensorProbeSensorType,
       "sensorProbeSwitchEmailTrapLimit": sensorProbeSwitchEmailTrapLimit,
       "sensorProbeSwitchEmailTrapSchedule": sensorProbeSwitchEmailTrapSchedule,
       "sensorProbeSwitchEmailTrapInterval": sensorProbeSwitchEmailTrapInterval,
       "sensorProbeSwitchSendNormalTrap": sensorProbeSwitchSendNormalTrap,
       "sensorProbeSwitchDelayError": sensorProbeSwitchDelayError,
       "sensorProbeSwitchDelayNormal": sensorProbeSwitchDelayNormal,
       "sensorProbeSwitchIndex": sensorProbeSwitchIndex,
       "sensorProbeSwitchRelayCycleTime": sensorProbeSwitchRelayCycleTime,
       "sensorProbeSwitchRelayOnPort": sensorProbeSwitchRelayOnPort,
       "sensorProbeSwitchRelayActiveStatus": sensorProbeSwitchRelayActiveStatus,
       "sensorProbeSwitchRelayAction": sensorProbeSwitchRelayAction,
       "sensorProbeSwitchEmailInterval": sensorProbeSwitchEmailInterval,
       "sensorProbeSwitchRelayOutputVoltStatus": sensorProbeSwitchRelayOutputVoltStatus,
       "sensorProbeSwitchManualRelayCycleTime": sensorProbeSwitchManualRelayCycleTime,
       "sensorProbeSwitchManualRelayAction": sensorProbeSwitchManualRelayAction,
       "sensorProbeSwitchRelayDescOn": sensorProbeSwitchRelayDescOn,
       "sensorProbeSwitchRelayDescOff": sensorProbeSwitchRelayDescOff,
       "sensorProbeSwitchIndexCount": sensorProbeSwitchIndexCount,
       "sensorProbeSwitchSirenCycleTime": sensorProbeSwitchSirenCycleTime,
       "sensorProbeSwitchSirenOnPort": sensorProbeSwitchSirenOnPort,
       "sensorProbeSwitchSirenActiveStatus": sensorProbeSwitchSirenActiveStatus,
       "sensorProbeSwitchSirenAction": sensorProbeSwitchSirenAction,
       "sensorProbeSwitchAcknowledgement": sensorProbeSwitchAcknowledgement,
       "sensorProbeSwitchSirenDelayAlarm": sensorProbeSwitchSirenDelayAlarm,
       "sensorProbeSwitchURL": sensorProbeSwitchURL,
       "sensorProbeSwitchOpenURL": sensorProbeSwitchOpenURL,
       "sensorProbeSwitchContTimeHighCritical": sensorProbeSwitchContTimeHighCritical,
       "sensorProbeSwitchContTimeNormal": sensorProbeSwitchContTimeNormal,
       "sensorProbeSwitchCalendar": sensorProbeSwitchCalendar,
       "sensorProbeSwitchRelayControlMode": sensorProbeSwitchRelayControlMode,
       "sensorProbeSwitchSirenControlMode": sensorProbeSwitchSirenControlMode,
       "sensorProbeSwitchSendNormalMail": sensorProbeSwitchSendNormalMail,
       "sensorProbeSwitchSendTrap": sensorProbeSwitchSendTrap,
       "sensorProbeSwitchSendMail": sensorProbeSwitchSendMail,
       "sensorProbeSwitchWaterRopeLeakLocation": sensorProbeSwitchWaterRopeLeakLocation,
       "sensorProbeSwitchWaterRopeLength": sensorProbeSwitchWaterRopeLength,
       "sensorProbeSwitchWaterRopeUnit": sensorProbeSwitchWaterRopeUnit,
       "sensorProbeSwitchWaterRopeImpedance": sensorProbeSwitchWaterRopeImpedance,
       "sensorProbeSwitchWaterRopeRaw": sensorProbeSwitchWaterRopeRaw,
       "sensorProbeSwitchWaterRopeType": sensorProbeSwitchWaterRopeType,
       "sensorProbeOtherSensor": sensorProbeOtherSensor,
       "sensorProbeIRMSSensor": sensorProbeIRMSSensor,
       "sensorProbeIRMSSensorNumber": sensorProbeIRMSSensorNumber,
       "sensorProbeIRMSSensorTable": sensorProbeIRMSSensorTable,
       "sensorProbeIRMSSensorEntry": sensorProbeIRMSSensorEntry,
       "sensorProbeIRMSSensorIndex": sensorProbeIRMSSensorIndex,
       "sensorProbeIRMSDescription": sensorProbeIRMSDescription,
       "sensorProbeIRMSPercent": sensorProbeIRMSPercent,
       "sensorProbeIRMSStatus": sensorProbeIRMSStatus,
       "sensorProbeIRMSOnline": sensorProbeIRMSOnline,
       "sensorProbeIRMSGoOnline": sensorProbeIRMSGoOnline,
       "sensorProbeIRMSHighWarning": sensorProbeIRMSHighWarning,
       "sensorProbeIRMSHighCritical": sensorProbeIRMSHighCritical,
       "sensorProbeIRMSLowWarning": sensorProbeIRMSLowWarning,
       "sensorProbeIRMSLowCritical": sensorProbeIRMSLowCritical,
       "sensorProbeIRMSRearm": sensorProbeIRMSRearm,
       "sensorProbeIRMSRaw": sensorProbeIRMSRaw,
       "sensorProbeIRMSEmailTrapLimit": sensorProbeIRMSEmailTrapLimit,
       "sensorProbeIRMSDelayError": sensorProbeIRMSDelayError,
       "sensorProbeIRMSDelayNormal": sensorProbeIRMSDelayNormal,
       "sensorProbeIRMSRelayCycleTime": sensorProbeIRMSRelayCycleTime,
       "sensorProbeIRMSRelayOnPort": sensorProbeIRMSRelayOnPort,
       "sensorProbeIRMSRelayActiveStatus": sensorProbeIRMSRelayActiveStatus,
       "sensorProbeIRMSRelayAction": sensorProbeIRMSRelayAction,
       "sensorProbeIRMSSirenCycleTime": sensorProbeIRMSSirenCycleTime,
       "sensorProbeIRMSSirenOnPort": sensorProbeIRMSSirenOnPort,
       "sensorProbeIRMSSirenActiveStatus": sensorProbeIRMSSirenActiveStatus,
       "sensorProbeIRMSSirenAction": sensorProbeIRMSSirenAction,
       "sensorProbeIRMSAcknowledgement": sensorProbeIRMSAcknowledgement,
       "sensorProbeIRMSSirenDelayAlarm": sensorProbeIRMSSirenDelayAlarm,
       "sensorProbeIRMSURL": sensorProbeIRMSURL,
       "sensorProbeIRMSOpenURL": sensorProbeIRMSOpenURL,
       "sensorProbeIRMSDatacollectType": sensorProbeIRMSDatacollectType,
       "sensorProbeIRMSContTimeHighCritical": sensorProbeIRMSContTimeHighCritical,
       "sensorProbeIRMSContTimeHighWarning": sensorProbeIRMSContTimeHighWarning,
       "sensorProbeIRMSContTimeNormal": sensorProbeIRMSContTimeNormal,
       "sensorProbeIRMSContTimeLowWarning": sensorProbeIRMSContTimeLowWarning,
       "sensorProbeIRMSContTimeLowCritical": sensorProbeIRMSContTimeLowCritical,
       "sensorProbeIRMSContTimeSensorError": sensorProbeIRMSContTimeSensorError,
       "sensorProbeIRMSCalendar": sensorProbeIRMSCalendar,
       "sensorProbeVRMSSensor": sensorProbeVRMSSensor,
       "sensorProbeVRMSSensorNumber": sensorProbeVRMSSensorNumber,
       "sensorProbeVRMSSensorTable": sensorProbeVRMSSensorTable,
       "sensorProbeVRMSSensorEntry": sensorProbeVRMSSensorEntry,
       "sensorProbeVRMSSensorIndex": sensorProbeVRMSSensorIndex,
       "sensorProbeVRMSDescription": sensorProbeVRMSDescription,
       "sensorProbeVRMSPercent": sensorProbeVRMSPercent,
       "sensorProbeVRMSStatus": sensorProbeVRMSStatus,
       "sensorProbeVRMSOnline": sensorProbeVRMSOnline,
       "sensorProbeVRMSGoOnline": sensorProbeVRMSGoOnline,
       "sensorProbeVRMSHighWarning": sensorProbeVRMSHighWarning,
       "sensorProbeVRMSHighCritical": sensorProbeVRMSHighCritical,
       "sensorProbeVRMSLowWarning": sensorProbeVRMSLowWarning,
       "sensorProbeVRMSLowCritical": sensorProbeVRMSLowCritical,
       "sensorProbeVRMSRearm": sensorProbeVRMSRearm,
       "sensorProbeVRMSRaw": sensorProbeVRMSRaw,
       "sensorProbeVRMSEmailTrapLimit": sensorProbeVRMSEmailTrapLimit,
       "sensorProbeVRMSDelayError": sensorProbeVRMSDelayError,
       "sensorProbeVRMSDelayNormal": sensorProbeVRMSDelayNormal,
       "sensorProbeVRMSRelayCycleTime": sensorProbeVRMSRelayCycleTime,
       "sensorProbeVRMSRelayOnPort": sensorProbeVRMSRelayOnPort,
       "sensorProbeVRMSRelayActiveStatus": sensorProbeVRMSRelayActiveStatus,
       "sensorProbeVRMSRelayAction": sensorProbeVRMSRelayAction,
       "sensorProbeVRMSSirenCycleTime": sensorProbeVRMSSirenCycleTime,
       "sensorProbeVRMSSirenOnPort": sensorProbeVRMSSirenOnPort,
       "sensorProbeVRMSSirenActiveStatus": sensorProbeVRMSSirenActiveStatus,
       "sensorProbeVRMSSirenAction": sensorProbeVRMSSirenAction,
       "sensorProbeVRMSAcknowledgement": sensorProbeVRMSAcknowledgement,
       "sensorProbeVRMSSirenDelayAlarm": sensorProbeVRMSSirenDelayAlarm,
       "sensorProbeVRMSvoltageMode": sensorProbeVRMSvoltageMode,
       "sensorProbeVRMSURL": sensorProbeVRMSURL,
       "sensorProbeVRMSOpenURL": sensorProbeVRMSOpenURL,
       "sensorProbeVRMSDatacollectType": sensorProbeVRMSDatacollectType,
       "sensorProbeVRMSContTimeHighCritical": sensorProbeVRMSContTimeHighCritical,
       "sensorProbeVRMSContTimeHighWarning": sensorProbeVRMSContTimeHighWarning,
       "sensorProbeVRMSContTimeNormal": sensorProbeVRMSContTimeNormal,
       "sensorProbeVRMSContTimeLowWarning": sensorProbeVRMSContTimeLowWarning,
       "sensorProbeVRMSContTimeLowCritical": sensorProbeVRMSContTimeLowCritical,
       "sensorProbeVRMSContTimeSensorError": sensorProbeVRMSContTimeSensorError,
       "sensorProbeVRMSCalendar": sensorProbeVRMSCalendar,
       "sensorProbeEnergySensor": sensorProbeEnergySensor,
       "sensorProbeEnergySensorNumber": sensorProbeEnergySensorNumber,
       "sensorProbeEnergySensorTable": sensorProbeEnergySensorTable,
       "sensorProbeEnergySensorEntry": sensorProbeEnergySensorEntry,
       "sensorProbeEnergySensorIndex": sensorProbeEnergySensorIndex,
       "sensorProbeEnergyDescription": sensorProbeEnergyDescription,
       "sensorProbeEnergyPercent": sensorProbeEnergyPercent,
       "sensorProbeEnergyStatus": sensorProbeEnergyStatus,
       "sensorProbeEnergyOnline": sensorProbeEnergyOnline,
       "sensorProbeEnergyGoOnline": sensorProbeEnergyGoOnline,
       "sensorProbeEnergyHighWarning": sensorProbeEnergyHighWarning,
       "sensorProbeEnergyHighCritical": sensorProbeEnergyHighCritical,
       "sensorProbeEnergyLowWarning": sensorProbeEnergyLowWarning,
       "sensorProbeEnergyLowCritical": sensorProbeEnergyLowCritical,
       "sensorProbeEnergyRearm": sensorProbeEnergyRearm,
       "sensorProbeEnergyRaw": sensorProbeEnergyRaw,
       "sensorProbeEnergyEmailTrapLimit": sensorProbeEnergyEmailTrapLimit,
       "sensorProbeEnergyDelayError": sensorProbeEnergyDelayError,
       "sensorProbeEnergyDelayNormal": sensorProbeEnergyDelayNormal,
       "sensorProbeEnergyRelayCycleTime": sensorProbeEnergyRelayCycleTime,
       "sensorProbeEnergyRelayOnPort": sensorProbeEnergyRelayOnPort,
       "sensorProbeEnergyRelayActiveStatus": sensorProbeEnergyRelayActiveStatus,
       "sensorProbeEnergyRelayAction": sensorProbeEnergyRelayAction,
       "sensorProbeEnergySirenCycleTime": sensorProbeEnergySirenCycleTime,
       "sensorProbeEnergySirenOnPort": sensorProbeEnergySirenOnPort,
       "sensorProbeEnergySirenActiveStatus": sensorProbeEnergySirenActiveStatus,
       "sensorProbeEnergySirenAction": sensorProbeEnergySirenAction,
       "sensorProbeEnergyAcknowledgement": sensorProbeEnergyAcknowledgement,
       "sensorProbeEnergySirenDelayAlarm": sensorProbeEnergySirenDelayAlarm,
       "sensorProbeEnergyReadingMode": sensorProbeEnergyReadingMode,
       "sensorProbeEnergyURL": sensorProbeEnergyURL,
       "sensorProbeEnergyOpenURL": sensorProbeEnergyOpenURL,
       "sensorProbeEnergyDatacollectType": sensorProbeEnergyDatacollectType,
       "sensorProbeEnergyContTimeHighCritical": sensorProbeEnergyContTimeHighCritical,
       "sensorProbeEnergyContTimeHighWarning": sensorProbeEnergyContTimeHighWarning,
       "sensorProbeEnergyContTimeNormal": sensorProbeEnergyContTimeNormal,
       "sensorProbeEnergyContTimeLowWarning": sensorProbeEnergyContTimeLowWarning,
       "sensorProbeEnergyContTimeLowCritical": sensorProbeEnergyContTimeLowCritical,
       "sensorProbeEnergyContTimeSensorError": sensorProbeEnergyContTimeSensorError,
       "sensorProbeEnergyCalendar": sensorProbeEnergyCalendar,
       "sensorProbeRelayArraySensor": sensorProbeRelayArraySensor,
       "sensorProbeRelayArrayPort1": sensorProbeRelayArrayPort1,
       "sensorProbeRelayArrayPort1Number": sensorProbeRelayArrayPort1Number,
       "sensorProbeRelayArrayPort1Table": sensorProbeRelayArrayPort1Table,
       "sensorProbeRelayArrayPort1Entry": sensorProbeRelayArrayPort1Entry,
       "sensorProbeRelayArrayPort1Index": sensorProbeRelayArrayPort1Index,
       "sensorProbeRelayArrayPort1Description": sensorProbeRelayArrayPort1Description,
       "sensorProbeRelayArrayPort1Status": sensorProbeRelayArrayPort1Status,
       "sensorProbeRelayArrayPort1Online": sensorProbeRelayArrayPort1Online,
       "sensorProbeRelayArrayPort1GoOnline": sensorProbeRelayArrayPort1GoOnline,
       "sensorProbeRelayArrayPort1NormalState": sensorProbeRelayArrayPort1NormalState,
       "sensorProbeRelayArrayPort1RelayCycleTime": sensorProbeRelayArrayPort1RelayCycleTime,
       "sensorProbeRelayArrayPort1RelayAction": sensorProbeRelayArrayPort1RelayAction,
       "sensorProbeRelayArrayPort1ManualRelayCycleTime": sensorProbeRelayArrayPort1ManualRelayCycleTime,
       "sensorProbeRelayArrayPort1ManualRelayAction": sensorProbeRelayArrayPort1ManualRelayAction,
       "sensorProbeRelayArrayPort1RelayDescOn": sensorProbeRelayArrayPort1RelayDescOn,
       "sensorProbeRelayArrayPort1RelayDescOff": sensorProbeRelayArrayPort1RelayDescOff,
       "sensorProbeRelayArrayPort1URL": sensorProbeRelayArrayPort1URL,
       "sensorProbeRelayArrayPort1OpenURL": sensorProbeRelayArrayPort1OpenURL,
       "sensorProbeRelayArrayPort1ControlMode": sensorProbeRelayArrayPort1ControlMode,
       "sensorProbeRelayArrayPort2": sensorProbeRelayArrayPort2,
       "sensorProbeRelayArrayPort2Number": sensorProbeRelayArrayPort2Number,
       "sensorProbeRelayArrayPort2Table": sensorProbeRelayArrayPort2Table,
       "sensorProbeRelayArrayPort2Entry": sensorProbeRelayArrayPort2Entry,
       "sensorProbeRelayArrayPort2Index": sensorProbeRelayArrayPort2Index,
       "sensorProbeRelayArrayPort2Description": sensorProbeRelayArrayPort2Description,
       "sensorProbeRelayArrayPort2Status": sensorProbeRelayArrayPort2Status,
       "sensorProbeRelayArrayPort2Online": sensorProbeRelayArrayPort2Online,
       "sensorProbeRelayArrayPort2GoOnline": sensorProbeRelayArrayPort2GoOnline,
       "sensorProbeRelayArrayPort2NormalState": sensorProbeRelayArrayPort2NormalState,
       "sensorProbeRelayArrayPort2RelayCycleTime": sensorProbeRelayArrayPort2RelayCycleTime,
       "sensorProbeRelayArrayPort2RelayAction": sensorProbeRelayArrayPort2RelayAction,
       "sensorProbeRelayArrayPort2ManualRelayCycleTime": sensorProbeRelayArrayPort2ManualRelayCycleTime,
       "sensorProbeRelayArrayPort2ManualRelayAction": sensorProbeRelayArrayPort2ManualRelayAction,
       "sensorProbeRelayArrayPort2RelayDescOn": sensorProbeRelayArrayPort2RelayDescOn,
       "sensorProbeRelayArrayPort2RelayDescOff": sensorProbeRelayArrayPort2RelayDescOff,
       "sensorProbeRelayArrayPort2URL": sensorProbeRelayArrayPort2URL,
       "sensorProbeRelayArrayPort2OpenURL": sensorProbeRelayArrayPort2OpenURL,
       "sensorProbeRelayArrayPort2ControlMode": sensorProbeRelayArrayPort2ControlMode,
       "sensorProbeRelayArrayPort3": sensorProbeRelayArrayPort3,
       "sensorProbeRelayArrayPort3Number": sensorProbeRelayArrayPort3Number,
       "sensorProbeRelayArrayPort3Table": sensorProbeRelayArrayPort3Table,
       "sensorProbeRelayArrayPort3Entry": sensorProbeRelayArrayPort3Entry,
       "sensorProbeRelayArrayPort3Index": sensorProbeRelayArrayPort3Index,
       "sensorProbeRelayArrayPort3Description": sensorProbeRelayArrayPort3Description,
       "sensorProbeRelayArrayPort3Status": sensorProbeRelayArrayPort3Status,
       "sensorProbeRelayArrayPort3Online": sensorProbeRelayArrayPort3Online,
       "sensorProbeRelayArrayPort3GoOnline": sensorProbeRelayArrayPort3GoOnline,
       "sensorProbeRelayArrayPort3NormalState": sensorProbeRelayArrayPort3NormalState,
       "sensorProbeRelayArrayPort3RelayCycleTime": sensorProbeRelayArrayPort3RelayCycleTime,
       "sensorProbeRelayArrayPort3RelayAction": sensorProbeRelayArrayPort3RelayAction,
       "sensorProbeRelayArrayPort3ManualRelayCycleTime": sensorProbeRelayArrayPort3ManualRelayCycleTime,
       "sensorProbeRelayArrayPort3ManualRelayAction": sensorProbeRelayArrayPort3ManualRelayAction,
       "sensorProbeRelayArrayPort3RelayDescOn": sensorProbeRelayArrayPort3RelayDescOn,
       "sensorProbeRelayArrayPort3RelayDescOff": sensorProbeRelayArrayPort3RelayDescOff,
       "sensorProbeRelayArrayPort3URL": sensorProbeRelayArrayPort3URL,
       "sensorProbeRelayArrayPort3OpenURL": sensorProbeRelayArrayPort3OpenURL,
       "sensorProbeRelayArrayPort3ControlMode": sensorProbeRelayArrayPort3ControlMode,
       "sensorProbeRelayArrayPort4": sensorProbeRelayArrayPort4,
       "sensorProbeRelayArrayPort4Number": sensorProbeRelayArrayPort4Number,
       "sensorProbeRelayArrayPort4Table": sensorProbeRelayArrayPort4Table,
       "sensorProbeRelayArrayPort4Entry": sensorProbeRelayArrayPort4Entry,
       "sensorProbeRelayArrayPort4Index": sensorProbeRelayArrayPort4Index,
       "sensorProbeRelayArrayPort4Description": sensorProbeRelayArrayPort4Description,
       "sensorProbeRelayArrayPort4Status": sensorProbeRelayArrayPort4Status,
       "sensorProbeRelayArrayPort4Online": sensorProbeRelayArrayPort4Online,
       "sensorProbeRelayArrayPort4GoOnline": sensorProbeRelayArrayPort4GoOnline,
       "sensorProbeRelayArrayPort4NormalState": sensorProbeRelayArrayPort4NormalState,
       "sensorProbeRelayArrayPort4RelayCycleTime": sensorProbeRelayArrayPort4RelayCycleTime,
       "sensorProbeRelayArrayPort4RelayAction": sensorProbeRelayArrayPort4RelayAction,
       "sensorProbeRelayArrayPort4ManualRelayCycleTime": sensorProbeRelayArrayPort4ManualRelayCycleTime,
       "sensorProbeRelayArrayPort4ManualRelayAction": sensorProbeRelayArrayPort4ManualRelayAction,
       "sensorProbeRelayArrayPort4RelayDescOn": sensorProbeRelayArrayPort4RelayDescOn,
       "sensorProbeRelayArrayPort4RelayDescOff": sensorProbeRelayArrayPort4RelayDescOff,
       "sensorProbeRelayArrayPort4URL": sensorProbeRelayArrayPort4URL,
       "sensorProbeRelayArrayPort4OpenURL": sensorProbeRelayArrayPort4OpenURL,
       "sensorProbeRelayArrayPort4ControlMode": sensorProbeRelayArrayPort4ControlMode,
       "sensorProbeRelayArrayPort5": sensorProbeRelayArrayPort5,
       "sensorProbeRelayArrayPort5Number": sensorProbeRelayArrayPort5Number,
       "sensorProbeRelayArrayPort5Table": sensorProbeRelayArrayPort5Table,
       "sensorProbeRelayArrayPort5Entry": sensorProbeRelayArrayPort5Entry,
       "sensorProbeRelayArrayPort5Index": sensorProbeRelayArrayPort5Index,
       "sensorProbeRelayArrayPort5Description": sensorProbeRelayArrayPort5Description,
       "sensorProbeRelayArrayPort5Status": sensorProbeRelayArrayPort5Status,
       "sensorProbeRelayArrayPort5Online": sensorProbeRelayArrayPort5Online,
       "sensorProbeRelayArrayPort5GoOnline": sensorProbeRelayArrayPort5GoOnline,
       "sensorProbeRelayArrayPort5NormalState": sensorProbeRelayArrayPort5NormalState,
       "sensorProbeRelayArrayPort5RelayCycleTime": sensorProbeRelayArrayPort5RelayCycleTime,
       "sensorProbeRelayArrayPort5RelayAction": sensorProbeRelayArrayPort5RelayAction,
       "sensorProbeRelayArrayPort5ManualRelayCycleTime": sensorProbeRelayArrayPort5ManualRelayCycleTime,
       "sensorProbeRelayArrayPort5ManualRelayAction": sensorProbeRelayArrayPort5ManualRelayAction,
       "sensorProbeRelayArrayPort5RelayDescOn": sensorProbeRelayArrayPort5RelayDescOn,
       "sensorProbeRelayArrayPort5RelayDescOff": sensorProbeRelayArrayPort5RelayDescOff,
       "sensorProbeRelayArrayPort5URL": sensorProbeRelayArrayPort5URL,
       "sensorProbeRelayArrayPort5OpenURL": sensorProbeRelayArrayPort5OpenURL,
       "sensorProbeRelayArrayPort5ControlMode": sensorProbeRelayArrayPort5ControlMode,
       "sensorProbeRelayArrayPort6": sensorProbeRelayArrayPort6,
       "sensorProbeRelayArrayPort6Number": sensorProbeRelayArrayPort6Number,
       "sensorProbeRelayArrayPort6Table": sensorProbeRelayArrayPort6Table,
       "sensorProbeRelayArrayPort6Entry": sensorProbeRelayArrayPort6Entry,
       "sensorProbeRelayArrayPort6Index": sensorProbeRelayArrayPort6Index,
       "sensorProbeRelayArrayPort6Description": sensorProbeRelayArrayPort6Description,
       "sensorProbeRelayArrayPort6Status": sensorProbeRelayArrayPort6Status,
       "sensorProbeRelayArrayPort6Online": sensorProbeRelayArrayPort6Online,
       "sensorProbeRelayArrayPort6GoOnline": sensorProbeRelayArrayPort6GoOnline,
       "sensorProbeRelayArrayPort6NormalState": sensorProbeRelayArrayPort6NormalState,
       "sensorProbeRelayArrayPort6RelayCycleTime": sensorProbeRelayArrayPort6RelayCycleTime,
       "sensorProbeRelayArrayPort6RelayAction": sensorProbeRelayArrayPort6RelayAction,
       "sensorProbeRelayArrayPort6ManualRelayCycleTime": sensorProbeRelayArrayPort6ManualRelayCycleTime,
       "sensorProbeRelayArrayPort6ManualRelayAction": sensorProbeRelayArrayPort6ManualRelayAction,
       "sensorProbeRelayArrayPort6RelayDescOn": sensorProbeRelayArrayPort6RelayDescOn,
       "sensorProbeRelayArrayPort6RelayDescOff": sensorProbeRelayArrayPort6RelayDescOff,
       "sensorProbeRelayArrayPort6URL": sensorProbeRelayArrayPort6URL,
       "sensorProbeRelayArrayPort6OpenURL": sensorProbeRelayArrayPort6OpenURL,
       "sensorProbeRelayArrayPort6ControlMode": sensorProbeRelayArrayPort6ControlMode,
       "sensorProbeRelayArrayPort7": sensorProbeRelayArrayPort7,
       "sensorProbeRelayArrayPort7Number": sensorProbeRelayArrayPort7Number,
       "sensorProbeRelayArrayPort7Table": sensorProbeRelayArrayPort7Table,
       "sensorProbeRelayArrayPort7Entry": sensorProbeRelayArrayPort7Entry,
       "sensorProbeRelayArrayPort7Index": sensorProbeRelayArrayPort7Index,
       "sensorProbeRelayArrayPort7Description": sensorProbeRelayArrayPort7Description,
       "sensorProbeRelayArrayPort7Status": sensorProbeRelayArrayPort7Status,
       "sensorProbeRelayArrayPort7Online": sensorProbeRelayArrayPort7Online,
       "sensorProbeRelayArrayPort7GoOnline": sensorProbeRelayArrayPort7GoOnline,
       "sensorProbeRelayArrayPort7NormalState": sensorProbeRelayArrayPort7NormalState,
       "sensorProbeRelayArrayPort7RelayCycleTime": sensorProbeRelayArrayPort7RelayCycleTime,
       "sensorProbeRelayArrayPort7RelayAction": sensorProbeRelayArrayPort7RelayAction,
       "sensorProbeRelayArrayPort7ManualRelayCycleTime": sensorProbeRelayArrayPort7ManualRelayCycleTime,
       "sensorProbeRelayArrayPort7ManualRelayAction": sensorProbeRelayArrayPort7ManualRelayAction,
       "sensorProbeRelayArrayPort7RelayDescOn": sensorProbeRelayArrayPort7RelayDescOn,
       "sensorProbeRelayArrayPort7RelayDescOff": sensorProbeRelayArrayPort7RelayDescOff,
       "sensorProbeRelayArrayPort7URL": sensorProbeRelayArrayPort7URL,
       "sensorProbeRelayArrayPort7OpenURL": sensorProbeRelayArrayPort7OpenURL,
       "sensorProbeRelayArrayPort7ControlMode": sensorProbeRelayArrayPort7ControlMode,
       "sensorProbeRelayArrayPort8": sensorProbeRelayArrayPort8,
       "sensorProbeRelayArrayPort8Number": sensorProbeRelayArrayPort8Number,
       "sensorProbeRelayArrayPort8Table": sensorProbeRelayArrayPort8Table,
       "sensorProbeRelayArrayPort8Entry": sensorProbeRelayArrayPort8Entry,
       "sensorProbeRelayArrayPort8Index": sensorProbeRelayArrayPort8Index,
       "sensorProbeRelayArrayPort8Description": sensorProbeRelayArrayPort8Description,
       "sensorProbeRelayArrayPort8Status": sensorProbeRelayArrayPort8Status,
       "sensorProbeRelayArrayPort8Online": sensorProbeRelayArrayPort8Online,
       "sensorProbeRelayArrayPort8GoOnline": sensorProbeRelayArrayPort8GoOnline,
       "sensorProbeRelayArrayPort8NormalState": sensorProbeRelayArrayPort8NormalState,
       "sensorProbeRelayArrayPort8RelayCycleTime": sensorProbeRelayArrayPort8RelayCycleTime,
       "sensorProbeRelayArrayPort8RelayAction": sensorProbeRelayArrayPort8RelayAction,
       "sensorProbeRelayArrayPort8ManualRelayCycleTime": sensorProbeRelayArrayPort8ManualRelayCycleTime,
       "sensorProbeRelayArrayPort8ManualRelayAction": sensorProbeRelayArrayPort8ManualRelayAction,
       "sensorProbeRelayArrayPort8RelayDescOn": sensorProbeRelayArrayPort8RelayDescOn,
       "sensorProbeRelayArrayPort8RelayDescOff": sensorProbeRelayArrayPort8RelayDescOff,
       "sensorProbeRelayArrayPort8URL": sensorProbeRelayArrayPort8URL,
       "sensorProbeRelayArrayPort8OpenURL": sensorProbeRelayArrayPort8OpenURL,
       "sensorProbeRelayArrayPort8ControlMode": sensorProbeRelayArrayPort8ControlMode,
       "sensorProbeVirtualAnalogSensor": sensorProbeVirtualAnalogSensor,
       "sensorProbeVirtualAnalogSensorNumber": sensorProbeVirtualAnalogSensorNumber,
       "sensorProbeVirtualAnalogSensorTable": sensorProbeVirtualAnalogSensorTable,
       "sensorProbeVirtualAnalogSensorEntry": sensorProbeVirtualAnalogSensorEntry,
       "sensorProbeVirtualAnalogSensorIndex": sensorProbeVirtualAnalogSensorIndex,
       "sensorProbeVirtualAnalogDescription": sensorProbeVirtualAnalogDescription,
       "sensorProbeVirtualAnalogStatus": sensorProbeVirtualAnalogStatus,
       "sensorProbeVirtualAnalogOnline": sensorProbeVirtualAnalogOnline,
       "sensorProbeVirtualAnalogGoOnline": sensorProbeVirtualAnalogGoOnline,
       "sensorProbeVirtualAnalogHighWarning": sensorProbeVirtualAnalogHighWarning,
       "sensorProbeVirtualAnalogHighCritical": sensorProbeVirtualAnalogHighCritical,
       "sensorProbeVirtualAnalogLowWarning": sensorProbeVirtualAnalogLowWarning,
       "sensorProbeVirtualAnalogLowCritical": sensorProbeVirtualAnalogLowCritical,
       "sensorProbeVirtualAnalogRearm": sensorProbeVirtualAnalogRearm,
       "sensorProbeVirtualAnalogRaw": sensorProbeVirtualAnalogRaw,
       "sensorProbeVirtualAnalogEmailTrapLimit": sensorProbeVirtualAnalogEmailTrapLimit,
       "sensorProbeVirtualAnalogDelayError": sensorProbeVirtualAnalogDelayError,
       "sensorProbeVirtualAnalogDelayNormal": sensorProbeVirtualAnalogDelayNormal,
       "sensorProbeVirtualAnalogUnit": sensorProbeVirtualAnalogUnit,
       "sensorProbeVirtualAnalogAcknowledgement": sensorProbeVirtualAnalogAcknowledgement,
       "sensorProbeVirtualAnalogURL": sensorProbeVirtualAnalogURL,
       "sensorProbeVirtualAnalogOpenURL": sensorProbeVirtualAnalogOpenURL,
       "sensorProbeVirtualAnalogContTimeHighCritical": sensorProbeVirtualAnalogContTimeHighCritical,
       "sensorProbeVirtualAnalogContTimeHighWarning": sensorProbeVirtualAnalogContTimeHighWarning,
       "sensorProbeVirtualAnalogContTimeNormal": sensorProbeVirtualAnalogContTimeNormal,
       "sensorProbeVirtualAnalogContTimeLowWarning": sensorProbeVirtualAnalogContTimeLowWarning,
       "sensorProbeVirtualAnalogContTimeLowCritical": sensorProbeVirtualAnalogContTimeLowCritical,
       "sensorProbeVirtualAnalogContTimeSensorError": sensorProbeVirtualAnalogContTimeSensorError,
       "sensorProbeVirtualAnalogCalendar": sensorProbeVirtualAnalogCalendar,
       "sensorProbeVirtualAnalogValueFactor": sensorProbeVirtualAnalogValueFactor,
       "sensorProbeVirtualSwitchSensor": sensorProbeVirtualSwitchSensor,
       "sensorProbeVirtualSwitchSensorNumber": sensorProbeVirtualSwitchSensorNumber,
       "sensorProbeVirtualSwitchSensorTable": sensorProbeVirtualSwitchSensorTable,
       "sensorProbeVirtualSwitchSensorEntry": sensorProbeVirtualSwitchSensorEntry,
       "sensorProbeVirtualSwitchSensorIndex": sensorProbeVirtualSwitchSensorIndex,
       "sensorProbeVirtualSwitchDescription": sensorProbeVirtualSwitchDescription,
       "sensorProbeVirtualSwitchStatus": sensorProbeVirtualSwitchStatus,
       "sensorProbeVirtualSwitchOnline": sensorProbeVirtualSwitchOnline,
       "sensorProbeVirtualSwitchGoOnline": sensorProbeVirtualSwitchGoOnline,
       "sensorProbeVirtualSwitchEmailTrapLimit": sensorProbeVirtualSwitchEmailTrapLimit,
       "sensorProbeVirtualSwitchContTimeHighCritical": sensorProbeVirtualSwitchContTimeHighCritical,
       "sensorProbeVirtualSwitchContTimeNormal": sensorProbeVirtualSwitchContTimeNormal,
       "sensorProbeVirtualSwitchDescriptionCritical": sensorProbeVirtualSwitchDescriptionCritical,
       "sensorProbeVirtualSwitchDescriptionNormal": sensorProbeVirtualSwitchDescriptionNormal,
       "sensorProbeVirtualSwitchAcknowledgement": sensorProbeVirtualSwitchAcknowledgement,
       "sensorProbeVirtualSwitchURL": sensorProbeVirtualSwitchURL,
       "sensorProbeVirtualSwitchOpenURL": sensorProbeVirtualSwitchOpenURL,
       "sensorProbeVirtualSwitchCalendar": sensorProbeVirtualSwitchCalendar,
       "sensorProbeVirtualSwitchNormalState": sensorProbeVirtualSwitchNormalState,
       "sensorProbeWattHoursSensor": sensorProbeWattHoursSensor,
       "sensorProbeWattHoursSensorNumber": sensorProbeWattHoursSensorNumber,
       "sensorProbeWattHoursSensorTable": sensorProbeWattHoursSensorTable,
       "sensorProbeWattHoursSensorEntry": sensorProbeWattHoursSensorEntry,
       "sensorProbeWattHoursSensorIndex": sensorProbeWattHoursSensorIndex,
       "sensorProbeWattHoursDescription": sensorProbeWattHoursDescription,
       "sensorProbeWattHoursPercent": sensorProbeWattHoursPercent,
       "sensorProbeWattHoursReset": sensorProbeWattHoursReset,
       "sensorProbeTemperatureArraySensor": sensorProbeTemperatureArraySensor,
       "sensorProbeTemperatureArrayPort1": sensorProbeTemperatureArrayPort1,
       "sensorProbeTemperatureArrayPort1Number": sensorProbeTemperatureArrayPort1Number,
       "sensorProbeTemperatureArrayPort1Table": sensorProbeTemperatureArrayPort1Table,
       "sensorProbeTemperatureArrayPort1Entry": sensorProbeTemperatureArrayPort1Entry,
       "sensorProbeTemperatureArrayPort1Index": sensorProbeTemperatureArrayPort1Index,
       "sensorProbeTemperatureArrayPort1Description": sensorProbeTemperatureArrayPort1Description,
       "sensorProbeTemperatureArrayPort1Value": sensorProbeTemperatureArrayPort1Value,
       "sensorProbeTemperatureArrayPort1Status": sensorProbeTemperatureArrayPort1Status,
       "sensorProbeTemperatureArrayPort1Online": sensorProbeTemperatureArrayPort1Online,
       "sensorProbeTemperatureArrayPort1GoOnline": sensorProbeTemperatureArrayPort1GoOnline,
       "sensorProbeTemperatureArrayPort1HighWarning": sensorProbeTemperatureArrayPort1HighWarning,
       "sensorProbeTemperatureArrayPort1HighCritical": sensorProbeTemperatureArrayPort1HighCritical,
       "sensorProbeTemperatureArrayPort1LowWarning": sensorProbeTemperatureArrayPort1LowWarning,
       "sensorProbeTemperatureArrayPort1LowCritical": sensorProbeTemperatureArrayPort1LowCritical,
       "sensorProbeTemperatureArrayPort1Rearm": sensorProbeTemperatureArrayPort1Rearm,
       "sensorProbeTemperatureArrayPort1DegreeType": sensorProbeTemperatureArrayPort1DegreeType,
       "sensorProbeTemperatureArrayPort1DegreeRaw": sensorProbeTemperatureArrayPort1DegreeRaw,
       "sensorProbeTemperatureArrayPort1Offset": sensorProbeTemperatureArrayPort1Offset,
       "sensorProbeTemperatureArrayPort1URL": sensorProbeTemperatureArrayPort1URL,
       "sensorProbeTemperatureArrayPort1OpenURL": sensorProbeTemperatureArrayPort1OpenURL,
       "sensorProbeTemperatureArrayPort1DatacollectType": sensorProbeTemperatureArrayPort1DatacollectType,
       "sensorProbeTemperatureArrayPort1ContTimeHighCritical": sensorProbeTemperatureArrayPort1ContTimeHighCritical,
       "sensorProbeTemperatureArrayPort1ContTimeHighWarning": sensorProbeTemperatureArrayPort1ContTimeHighWarning,
       "sensorProbeTemperatureArrayPort1ContTimeNormal": sensorProbeTemperatureArrayPort1ContTimeNormal,
       "sensorProbeTemperatureArrayPort1ContTimeLowWarning": sensorProbeTemperatureArrayPort1ContTimeLowWarning,
       "sensorProbeTemperatureArrayPort1ContTimeLowCritical": sensorProbeTemperatureArrayPort1ContTimeLowCritical,
       "sensorProbeTemperatureArrayPort1ContTimeSensorError": sensorProbeTemperatureArrayPort1ContTimeSensorError,
       "sensorProbeTemperatureArrayPort1Calendar": sensorProbeTemperatureArrayPort1Calendar,
       "sensorProbeThermostatTemperatureArrayPort1Index": sensorProbeThermostatTemperatureArrayPort1Index,
       "sensorProbeThermostatTemperatureArrayPort1Description": sensorProbeThermostatTemperatureArrayPort1Description,
       "sensorProbeThermostatTemperatureArrayPort1Value": sensorProbeThermostatTemperatureArrayPort1Value,
       "sensorProbeThermostatTemperatureArrayPort1Online": sensorProbeThermostatTemperatureArrayPort1Online,
       "sensorProbeThermostatTemperatureArrayPort1GoOnline": sensorProbeThermostatTemperatureArrayPort1GoOnline,
       "sensorProbeThermostatTemperatureArrayPort1Mode": sensorProbeThermostatTemperatureArrayPort1Mode,
       "sensorProbeThermostatTemperatureArrayPort1RelayControlPort": sensorProbeThermostatTemperatureArrayPort1RelayControlPort,
       "sensorProbeThermostatTemperatureArrayPort1NormalAction1": sensorProbeThermostatTemperatureArrayPort1NormalAction1,
       "sensorProbeThermostatTemperatureArrayPort1HighLimit1": sensorProbeThermostatTemperatureArrayPort1HighLimit1,
       "sensorProbeThermostatTemperatureArrayPort1HighLimitAction1": sensorProbeThermostatTemperatureArrayPort1HighLimitAction1,
       "sensorProbeThermostatTemperatureArrayPort1LowLimit1": sensorProbeThermostatTemperatureArrayPort1LowLimit1,
       "sensorProbeThermostatTemperatureArrayPort1LowLimitAction1": sensorProbeThermostatTemperatureArrayPort1LowLimitAction1,
       "sensorProbeThermostatTemperatureArrayPort1NormalAction2": sensorProbeThermostatTemperatureArrayPort1NormalAction2,
       "sensorProbeThermostatTemperatureArrayPort1HighLimit2": sensorProbeThermostatTemperatureArrayPort1HighLimit2,
       "sensorProbeThermostatTemperatureArrayPort1HighLimitAction2": sensorProbeThermostatTemperatureArrayPort1HighLimitAction2,
       "sensorProbeThermostatTemperatureArrayPort1LowLimit2": sensorProbeThermostatTemperatureArrayPort1LowLimit2,
       "sensorProbeThermostatTemperatureArrayPort1LowLimitAction2": sensorProbeThermostatTemperatureArrayPort1LowLimitAction2,
       "sensorProbeThermostatTemperatureArrayPort1EnableTime": sensorProbeThermostatTemperatureArrayPort1EnableTime,
       "sensorProbeTemperatureArrayPort2": sensorProbeTemperatureArrayPort2,
       "sensorProbeTemperatureArrayPort2Number": sensorProbeTemperatureArrayPort2Number,
       "sensorProbeTemperatureArrayPort2Table": sensorProbeTemperatureArrayPort2Table,
       "sensorProbeTemperatureArrayPort2Entry": sensorProbeTemperatureArrayPort2Entry,
       "sensorProbeTemperatureArrayPort2Index": sensorProbeTemperatureArrayPort2Index,
       "sensorProbeTemperatureArrayPort2Description": sensorProbeTemperatureArrayPort2Description,
       "sensorProbeTemperatureArrayPort2Value": sensorProbeTemperatureArrayPort2Value,
       "sensorProbeTemperatureArrayPort2Status": sensorProbeTemperatureArrayPort2Status,
       "sensorProbeTemperatureArrayPort2Online": sensorProbeTemperatureArrayPort2Online,
       "sensorProbeTemperatureArrayPort2GoOnline": sensorProbeTemperatureArrayPort2GoOnline,
       "sensorProbeTemperatureArrayPort2HighWarning": sensorProbeTemperatureArrayPort2HighWarning,
       "sensorProbeTemperatureArrayPort2HighCritical": sensorProbeTemperatureArrayPort2HighCritical,
       "sensorProbeTemperatureArrayPort2LowWarning": sensorProbeTemperatureArrayPort2LowWarning,
       "sensorProbeTemperatureArrayPort2LowCritical": sensorProbeTemperatureArrayPort2LowCritical,
       "sensorProbeTemperatureArrayPort2Rearm": sensorProbeTemperatureArrayPort2Rearm,
       "sensorProbeTemperatureArrayPort2DegreeType": sensorProbeTemperatureArrayPort2DegreeType,
       "sensorProbeTemperatureArrayPort2DegreeRaw": sensorProbeTemperatureArrayPort2DegreeRaw,
       "sensorProbeTemperatureArrayPort2Offset": sensorProbeTemperatureArrayPort2Offset,
       "sensorProbeTemperatureArrayPort2URL": sensorProbeTemperatureArrayPort2URL,
       "sensorProbeTemperatureArrayPort2OpenURL": sensorProbeTemperatureArrayPort2OpenURL,
       "sensorProbeTemperatureArrayPort2DatacollectType": sensorProbeTemperatureArrayPort2DatacollectType,
       "sensorProbeTemperatureArrayPort2ContTimeHighCritical": sensorProbeTemperatureArrayPort2ContTimeHighCritical,
       "sensorProbeTemperatureArrayPort2ContTimeHighWarning": sensorProbeTemperatureArrayPort2ContTimeHighWarning,
       "sensorProbeTemperatureArrayPort2ContTimeNormal": sensorProbeTemperatureArrayPort2ContTimeNormal,
       "sensorProbeTemperatureArrayPort2ContTimeLowWarning": sensorProbeTemperatureArrayPort2ContTimeLowWarning,
       "sensorProbeTemperatureArrayPort2ContTimeLowCritical": sensorProbeTemperatureArrayPort2ContTimeLowCritical,
       "sensorProbeTemperatureArrayPort2ContTimeSensorError": sensorProbeTemperatureArrayPort2ContTimeSensorError,
       "sensorProbeTemperatureArrayPort2Calendar": sensorProbeTemperatureArrayPort2Calendar,
       "sensorProbeThermostatTemperatureArrayPort2Index": sensorProbeThermostatTemperatureArrayPort2Index,
       "sensorProbeThermostatTemperatureArrayPort2Description": sensorProbeThermostatTemperatureArrayPort2Description,
       "sensorProbeThermostatTemperatureArrayPort2Value": sensorProbeThermostatTemperatureArrayPort2Value,
       "sensorProbeThermostatTemperatureArrayPort2Online": sensorProbeThermostatTemperatureArrayPort2Online,
       "sensorProbeThermostatTemperatureArrayPort2GoOnline": sensorProbeThermostatTemperatureArrayPort2GoOnline,
       "sensorProbeThermostatTemperatureArrayPort2Mode": sensorProbeThermostatTemperatureArrayPort2Mode,
       "sensorProbeThermostatTemperatureArrayPort2RelayControlPort": sensorProbeThermostatTemperatureArrayPort2RelayControlPort,
       "sensorProbeThermostatTemperatureArrayPort2NormalAction1": sensorProbeThermostatTemperatureArrayPort2NormalAction1,
       "sensorProbeThermostatTemperatureArrayPort2HighLimit1": sensorProbeThermostatTemperatureArrayPort2HighLimit1,
       "sensorProbeThermostatTemperatureArrayPort2HighLimitAction1": sensorProbeThermostatTemperatureArrayPort2HighLimitAction1,
       "sensorProbeThermostatTemperatureArrayPort2LowLimit1": sensorProbeThermostatTemperatureArrayPort2LowLimit1,
       "sensorProbeThermostatTemperatureArrayPort2LowLimitAction1": sensorProbeThermostatTemperatureArrayPort2LowLimitAction1,
       "sensorProbeThermostatTemperatureArrayPort2NormalAction2": sensorProbeThermostatTemperatureArrayPort2NormalAction2,
       "sensorProbeThermostatTemperatureArrayPort2HighLimit2": sensorProbeThermostatTemperatureArrayPort2HighLimit2,
       "sensorProbeThermostatTemperatureArrayPort2HighLimitAction2": sensorProbeThermostatTemperatureArrayPort2HighLimitAction2,
       "sensorProbeThermostatTemperatureArrayPort2LowLimit2": sensorProbeThermostatTemperatureArrayPort2LowLimit2,
       "sensorProbeThermostatTemperatureArrayPort2LowLimitAction2": sensorProbeThermostatTemperatureArrayPort2LowLimitAction2,
       "sensorProbeThermostatTemperatureArrayPort2EnableTime": sensorProbeThermostatTemperatureArrayPort2EnableTime,
       "sensorProbeTemperatureArrayPort3": sensorProbeTemperatureArrayPort3,
       "sensorProbeTemperatureArrayPort3Number": sensorProbeTemperatureArrayPort3Number,
       "sensorProbeTemperatureArrayPort3Table": sensorProbeTemperatureArrayPort3Table,
       "sensorProbeTemperatureArrayPort3Entry": sensorProbeTemperatureArrayPort3Entry,
       "sensorProbeTemperatureArrayPort3Index": sensorProbeTemperatureArrayPort3Index,
       "sensorProbeTemperatureArrayPort3Description": sensorProbeTemperatureArrayPort3Description,
       "sensorProbeTemperatureArrayPort3Value": sensorProbeTemperatureArrayPort3Value,
       "sensorProbeTemperatureArrayPort3Status": sensorProbeTemperatureArrayPort3Status,
       "sensorProbeTemperatureArrayPort3Online": sensorProbeTemperatureArrayPort3Online,
       "sensorProbeTemperatureArrayPort3GoOnline": sensorProbeTemperatureArrayPort3GoOnline,
       "sensorProbeTemperatureArrayPort3HighWarning": sensorProbeTemperatureArrayPort3HighWarning,
       "sensorProbeTemperatureArrayPort3HighCritical": sensorProbeTemperatureArrayPort3HighCritical,
       "sensorProbeTemperatureArrayPort3LowWarning": sensorProbeTemperatureArrayPort3LowWarning,
       "sensorProbeTemperatureArrayPort3LowCritical": sensorProbeTemperatureArrayPort3LowCritical,
       "sensorProbeTemperatureArrayPort3Rearm": sensorProbeTemperatureArrayPort3Rearm,
       "sensorProbeTemperatureArrayPort3DegreeType": sensorProbeTemperatureArrayPort3DegreeType,
       "sensorProbeTemperatureArrayPort3DegreeRaw": sensorProbeTemperatureArrayPort3DegreeRaw,
       "sensorProbeTemperatureArrayPort3Offset": sensorProbeTemperatureArrayPort3Offset,
       "sensorProbeTemperatureArrayPort3URL": sensorProbeTemperatureArrayPort3URL,
       "sensorProbeTemperatureArrayPort3OpenURL": sensorProbeTemperatureArrayPort3OpenURL,
       "sensorProbeTemperatureArrayPort3DatacollectType": sensorProbeTemperatureArrayPort3DatacollectType,
       "sensorProbeTemperatureArrayPort3ContTimeHighCritical": sensorProbeTemperatureArrayPort3ContTimeHighCritical,
       "sensorProbeTemperatureArrayPort3ContTimeHighWarning": sensorProbeTemperatureArrayPort3ContTimeHighWarning,
       "sensorProbeTemperatureArrayPort3ContTimeNormal": sensorProbeTemperatureArrayPort3ContTimeNormal,
       "sensorProbeTemperatureArrayPort3ContTimeLowWarning": sensorProbeTemperatureArrayPort3ContTimeLowWarning,
       "sensorProbeTemperatureArrayPort3ContTimeLowCritical": sensorProbeTemperatureArrayPort3ContTimeLowCritical,
       "sensorProbeTemperatureArrayPort3ContTimeSensorError": sensorProbeTemperatureArrayPort3ContTimeSensorError,
       "sensorProbeTemperatureArrayPort3Calendar": sensorProbeTemperatureArrayPort3Calendar,
       "sensorProbeThermostatTemperatureArrayPort3Index": sensorProbeThermostatTemperatureArrayPort3Index,
       "sensorProbeThermostatTemperatureArrayPort3Description": sensorProbeThermostatTemperatureArrayPort3Description,
       "sensorProbeThermostatTemperatureArrayPort3Value": sensorProbeThermostatTemperatureArrayPort3Value,
       "sensorProbeThermostatTemperatureArrayPort3Online": sensorProbeThermostatTemperatureArrayPort3Online,
       "sensorProbeThermostatTemperatureArrayPort3GoOnline": sensorProbeThermostatTemperatureArrayPort3GoOnline,
       "sensorProbeThermostatTemperatureArrayPort3Mode": sensorProbeThermostatTemperatureArrayPort3Mode,
       "sensorProbeThermostatTemperatureArrayPort3RelayControlPort": sensorProbeThermostatTemperatureArrayPort3RelayControlPort,
       "sensorProbeThermostatTemperatureArrayPort3NormalAction1": sensorProbeThermostatTemperatureArrayPort3NormalAction1,
       "sensorProbeThermostatTemperatureArrayPort3HighLimit1": sensorProbeThermostatTemperatureArrayPort3HighLimit1,
       "sensorProbeThermostatTemperatureArrayPort3HighLimitAction1": sensorProbeThermostatTemperatureArrayPort3HighLimitAction1,
       "sensorProbeThermostatTemperatureArrayPort3LowLimit1": sensorProbeThermostatTemperatureArrayPort3LowLimit1,
       "sensorProbeThermostatTemperatureArrayPort3LowLimitAction1": sensorProbeThermostatTemperatureArrayPort3LowLimitAction1,
       "sensorProbeThermostatTemperatureArrayPort3NormalAction2": sensorProbeThermostatTemperatureArrayPort3NormalAction2,
       "sensorProbeThermostatTemperatureArrayPort3HighLimit2": sensorProbeThermostatTemperatureArrayPort3HighLimit2,
       "sensorProbeThermostatTemperatureArrayPort3HighLimitAction2": sensorProbeThermostatTemperatureArrayPort3HighLimitAction2,
       "sensorProbeThermostatTemperatureArrayPort3LowLimit2": sensorProbeThermostatTemperatureArrayPort3LowLimit2,
       "sensorProbeThermostatTemperatureArrayPort3LowLimitAction2": sensorProbeThermostatTemperatureArrayPort3LowLimitAction2,
       "sensorProbeThermostatTemperatureArrayPort3EnableTime": sensorProbeThermostatTemperatureArrayPort3EnableTime,
       "sensorProbeTemperatureArrayPort4": sensorProbeTemperatureArrayPort4,
       "sensorProbeTemperatureArrayPort4Number": sensorProbeTemperatureArrayPort4Number,
       "sensorProbeTemperatureArrayPort4Table": sensorProbeTemperatureArrayPort4Table,
       "sensorProbeTemperatureArrayPort4Entry": sensorProbeTemperatureArrayPort4Entry,
       "sensorProbeTemperatureArrayPort4Index": sensorProbeTemperatureArrayPort4Index,
       "sensorProbeTemperatureArrayPort4Description": sensorProbeTemperatureArrayPort4Description,
       "sensorProbeTemperatureArrayPort4Value": sensorProbeTemperatureArrayPort4Value,
       "sensorProbeTemperatureArrayPort4Status": sensorProbeTemperatureArrayPort4Status,
       "sensorProbeTemperatureArrayPort4Online": sensorProbeTemperatureArrayPort4Online,
       "sensorProbeTemperatureArrayPort4GoOnline": sensorProbeTemperatureArrayPort4GoOnline,
       "sensorProbeTemperatureArrayPort4HighWarning": sensorProbeTemperatureArrayPort4HighWarning,
       "sensorProbeTemperatureArrayPort4HighCritical": sensorProbeTemperatureArrayPort4HighCritical,
       "sensorProbeTemperatureArrayPort4LowWarning": sensorProbeTemperatureArrayPort4LowWarning,
       "sensorProbeTemperatureArrayPort4LowCritical": sensorProbeTemperatureArrayPort4LowCritical,
       "sensorProbeTemperatureArrayPort4Rearm": sensorProbeTemperatureArrayPort4Rearm,
       "sensorProbeTemperatureArrayPort4DegreeType": sensorProbeTemperatureArrayPort4DegreeType,
       "sensorProbeTemperatureArrayPort4DegreeRaw": sensorProbeTemperatureArrayPort4DegreeRaw,
       "sensorProbeTemperatureArrayPort4Offset": sensorProbeTemperatureArrayPort4Offset,
       "sensorProbeTemperatureArrayPort4URL": sensorProbeTemperatureArrayPort4URL,
       "sensorProbeTemperatureArrayPort4OpenURL": sensorProbeTemperatureArrayPort4OpenURL,
       "sensorProbeTemperatureArrayPort4DatacollectType": sensorProbeTemperatureArrayPort4DatacollectType,
       "sensorProbeTemperatureArrayPort4ContTimeHighCritical": sensorProbeTemperatureArrayPort4ContTimeHighCritical,
       "sensorProbeTemperatureArrayPort4ContTimeHighWarning": sensorProbeTemperatureArrayPort4ContTimeHighWarning,
       "sensorProbeTemperatureArrayPort4ContTimeNormal": sensorProbeTemperatureArrayPort4ContTimeNormal,
       "sensorProbeTemperatureArrayPort4ContTimeLowWarning": sensorProbeTemperatureArrayPort4ContTimeLowWarning,
       "sensorProbeTemperatureArrayPort4ContTimeLowCritical": sensorProbeTemperatureArrayPort4ContTimeLowCritical,
       "sensorProbeTemperatureArrayPort4ContTimeSensorError": sensorProbeTemperatureArrayPort4ContTimeSensorError,
       "sensorProbeTemperatureArrayPort4Calendar": sensorProbeTemperatureArrayPort4Calendar,
       "sensorProbeThermostatTemperatureArrayPort4Index": sensorProbeThermostatTemperatureArrayPort4Index,
       "sensorProbeThermostatTemperatureArrayPort4Description": sensorProbeThermostatTemperatureArrayPort4Description,
       "sensorProbeThermostatTemperatureArrayPort4Value": sensorProbeThermostatTemperatureArrayPort4Value,
       "sensorProbeThermostatTemperatureArrayPort4Online": sensorProbeThermostatTemperatureArrayPort4Online,
       "sensorProbeThermostatTemperatureArrayPort4GoOnline": sensorProbeThermostatTemperatureArrayPort4GoOnline,
       "sensorProbeThermostatTemperatureArrayPort4Mode": sensorProbeThermostatTemperatureArrayPort4Mode,
       "sensorProbeThermostatTemperatureArrayPort4RelayControlPort": sensorProbeThermostatTemperatureArrayPort4RelayControlPort,
       "sensorProbeThermostatTemperatureArrayPort4NormalAction1": sensorProbeThermostatTemperatureArrayPort4NormalAction1,
       "sensorProbeThermostatTemperatureArrayPort4HighLimit1": sensorProbeThermostatTemperatureArrayPort4HighLimit1,
       "sensorProbeThermostatTemperatureArrayPort4HighLimitAction1": sensorProbeThermostatTemperatureArrayPort4HighLimitAction1,
       "sensorProbeThermostatTemperatureArrayPort4LowLimit1": sensorProbeThermostatTemperatureArrayPort4LowLimit1,
       "sensorProbeThermostatTemperatureArrayPort4LowLimitAction1": sensorProbeThermostatTemperatureArrayPort4LowLimitAction1,
       "sensorProbeThermostatTemperatureArrayPort4NormalAction2": sensorProbeThermostatTemperatureArrayPort4NormalAction2,
       "sensorProbeThermostatTemperatureArrayPort4HighLimit2": sensorProbeThermostatTemperatureArrayPort4HighLimit2,
       "sensorProbeThermostatTemperatureArrayPort4HighLimitAction2": sensorProbeThermostatTemperatureArrayPort4HighLimitAction2,
       "sensorProbeThermostatTemperatureArrayPort4LowLimit2": sensorProbeThermostatTemperatureArrayPort4LowLimit2,
       "sensorProbeThermostatTemperatureArrayPort4LowLimitAction2": sensorProbeThermostatTemperatureArrayPort4LowLimitAction2,
       "sensorProbeThermostatTemperatureArrayPort4EnableTime": sensorProbeThermostatTemperatureArrayPort4EnableTime,
       "sensorProbeTemperatureArrayPort5": sensorProbeTemperatureArrayPort5,
       "sensorProbeTemperatureArrayPort5Number": sensorProbeTemperatureArrayPort5Number,
       "sensorProbeTemperatureArrayPort5Table": sensorProbeTemperatureArrayPort5Table,
       "sensorProbeTemperatureArrayPort5Entry": sensorProbeTemperatureArrayPort5Entry,
       "sensorProbeTemperatureArrayPort5Index": sensorProbeTemperatureArrayPort5Index,
       "sensorProbeTemperatureArrayPort5Description": sensorProbeTemperatureArrayPort5Description,
       "sensorProbeTemperatureArrayPort5Value": sensorProbeTemperatureArrayPort5Value,
       "sensorProbeTemperatureArrayPort5Status": sensorProbeTemperatureArrayPort5Status,
       "sensorProbeTemperatureArrayPort5Online": sensorProbeTemperatureArrayPort5Online,
       "sensorProbeTemperatureArrayPort5GoOnline": sensorProbeTemperatureArrayPort5GoOnline,
       "sensorProbeTemperatureArrayPort5HighWarning": sensorProbeTemperatureArrayPort5HighWarning,
       "sensorProbeTemperatureArrayPort5HighCritical": sensorProbeTemperatureArrayPort5HighCritical,
       "sensorProbeTemperatureArrayPort5LowWarning": sensorProbeTemperatureArrayPort5LowWarning,
       "sensorProbeTemperatureArrayPort5LowCritical": sensorProbeTemperatureArrayPort5LowCritical,
       "sensorProbeTemperatureArrayPort5Rearm": sensorProbeTemperatureArrayPort5Rearm,
       "sensorProbeTemperatureArrayPort5DegreeType": sensorProbeTemperatureArrayPort5DegreeType,
       "sensorProbeTemperatureArrayPort5DegreeRaw": sensorProbeTemperatureArrayPort5DegreeRaw,
       "sensorProbeTemperatureArrayPort5Offset": sensorProbeTemperatureArrayPort5Offset,
       "sensorProbeTemperatureArrayPort5URL": sensorProbeTemperatureArrayPort5URL,
       "sensorProbeTemperatureArrayPort5OpenURL": sensorProbeTemperatureArrayPort5OpenURL,
       "sensorProbeTemperatureArrayPort5DatacollectType": sensorProbeTemperatureArrayPort5DatacollectType,
       "sensorProbeTemperatureArrayPort5ContTimeHighCritical": sensorProbeTemperatureArrayPort5ContTimeHighCritical,
       "sensorProbeTemperatureArrayPort5ContTimeHighWarning": sensorProbeTemperatureArrayPort5ContTimeHighWarning,
       "sensorProbeTemperatureArrayPort5ContTimeNormal": sensorProbeTemperatureArrayPort5ContTimeNormal,
       "sensorProbeTemperatureArrayPort5ContTimeLowWarning": sensorProbeTemperatureArrayPort5ContTimeLowWarning,
       "sensorProbeTemperatureArrayPort5ContTimeLowCritical": sensorProbeTemperatureArrayPort5ContTimeLowCritical,
       "sensorProbeTemperatureArrayPort5ContTimeSensorError": sensorProbeTemperatureArrayPort5ContTimeSensorError,
       "sensorProbeTemperatureArrayPort5Calendar": sensorProbeTemperatureArrayPort5Calendar,
       "sensorProbeThermostatTemperatureArrayPort5Index": sensorProbeThermostatTemperatureArrayPort5Index,
       "sensorProbeThermostatTemperatureArrayPort5Description": sensorProbeThermostatTemperatureArrayPort5Description,
       "sensorProbeThermostatTemperatureArrayPort5Value": sensorProbeThermostatTemperatureArrayPort5Value,
       "sensorProbeThermostatTemperatureArrayPort5Online": sensorProbeThermostatTemperatureArrayPort5Online,
       "sensorProbeThermostatTemperatureArrayPort5GoOnline": sensorProbeThermostatTemperatureArrayPort5GoOnline,
       "sensorProbeThermostatTemperatureArrayPort5Mode": sensorProbeThermostatTemperatureArrayPort5Mode,
       "sensorProbeThermostatTemperatureArrayPort5RelayControlPort": sensorProbeThermostatTemperatureArrayPort5RelayControlPort,
       "sensorProbeThermostatTemperatureArrayPort5NormalAction1": sensorProbeThermostatTemperatureArrayPort5NormalAction1,
       "sensorProbeThermostatTemperatureArrayPort5HighLimit1": sensorProbeThermostatTemperatureArrayPort5HighLimit1,
       "sensorProbeThermostatTemperatureArrayPort5HighLimitAction1": sensorProbeThermostatTemperatureArrayPort5HighLimitAction1,
       "sensorProbeThermostatTemperatureArrayPort5LowLimit1": sensorProbeThermostatTemperatureArrayPort5LowLimit1,
       "sensorProbeThermostatTemperatureArrayPort5LowLimitAction1": sensorProbeThermostatTemperatureArrayPort5LowLimitAction1,
       "sensorProbeThermostatTemperatureArrayPort5NormalAction2": sensorProbeThermostatTemperatureArrayPort5NormalAction2,
       "sensorProbeThermostatTemperatureArrayPort5HighLimit2": sensorProbeThermostatTemperatureArrayPort5HighLimit2,
       "sensorProbeThermostatTemperatureArrayPort5HighLimitAction2": sensorProbeThermostatTemperatureArrayPort5HighLimitAction2,
       "sensorProbeThermostatTemperatureArrayPort5LowLimit2": sensorProbeThermostatTemperatureArrayPort5LowLimit2,
       "sensorProbeThermostatTemperatureArrayPort5LowLimitAction2": sensorProbeThermostatTemperatureArrayPort5LowLimitAction2,
       "sensorProbeThermostatTemperatureArrayPort5EnableTime": sensorProbeThermostatTemperatureArrayPort5EnableTime,
       "sensorProbeTemperatureArrayPort6": sensorProbeTemperatureArrayPort6,
       "sensorProbeTemperatureArrayPort6Number": sensorProbeTemperatureArrayPort6Number,
       "sensorProbeTemperatureArrayPort6Table": sensorProbeTemperatureArrayPort6Table,
       "sensorProbeTemperatureArrayPort6Entry": sensorProbeTemperatureArrayPort6Entry,
       "sensorProbeTemperatureArrayPort6Index": sensorProbeTemperatureArrayPort6Index,
       "sensorProbeTemperatureArrayPort6Description": sensorProbeTemperatureArrayPort6Description,
       "sensorProbeTemperatureArrayPort6Value": sensorProbeTemperatureArrayPort6Value,
       "sensorProbeTemperatureArrayPort6Status": sensorProbeTemperatureArrayPort6Status,
       "sensorProbeTemperatureArrayPort6Online": sensorProbeTemperatureArrayPort6Online,
       "sensorProbeTemperatureArrayPort6GoOnline": sensorProbeTemperatureArrayPort6GoOnline,
       "sensorProbeTemperatureArrayPort6HighWarning": sensorProbeTemperatureArrayPort6HighWarning,
       "sensorProbeTemperatureArrayPort6HighCritical": sensorProbeTemperatureArrayPort6HighCritical,
       "sensorProbeTemperatureArrayPort6LowWarning": sensorProbeTemperatureArrayPort6LowWarning,
       "sensorProbeTemperatureArrayPort6LowCritical": sensorProbeTemperatureArrayPort6LowCritical,
       "sensorProbeTemperatureArrayPort6Rearm": sensorProbeTemperatureArrayPort6Rearm,
       "sensorProbeTemperatureArrayPort6DegreeType": sensorProbeTemperatureArrayPort6DegreeType,
       "sensorProbeTemperatureArrayPort6DegreeRaw": sensorProbeTemperatureArrayPort6DegreeRaw,
       "sensorProbeTemperatureArrayPort6Offset": sensorProbeTemperatureArrayPort6Offset,
       "sensorProbeTemperatureArrayPort6URL": sensorProbeTemperatureArrayPort6URL,
       "sensorProbeTemperatureArrayPort6OpenURL": sensorProbeTemperatureArrayPort6OpenURL,
       "sensorProbeTemperatureArrayPort6DatacollectType": sensorProbeTemperatureArrayPort6DatacollectType,
       "sensorProbeTemperatureArrayPort6ContTimeHighCritical": sensorProbeTemperatureArrayPort6ContTimeHighCritical,
       "sensorProbeTemperatureArrayPort6ContTimeHighWarning": sensorProbeTemperatureArrayPort6ContTimeHighWarning,
       "sensorProbeTemperatureArrayPort6ContTimeNormal": sensorProbeTemperatureArrayPort6ContTimeNormal,
       "sensorProbeTemperatureArrayPort6ContTimeLowWarning": sensorProbeTemperatureArrayPort6ContTimeLowWarning,
       "sensorProbeTemperatureArrayPort6ContTimeLowCritical": sensorProbeTemperatureArrayPort6ContTimeLowCritical,
       "sensorProbeTemperatureArrayPort6ContTimeSensorError": sensorProbeTemperatureArrayPort6ContTimeSensorError,
       "sensorProbeTemperatureArrayPort6Calendar": sensorProbeTemperatureArrayPort6Calendar,
       "sensorProbeThermostatTemperatureArrayPort6Index": sensorProbeThermostatTemperatureArrayPort6Index,
       "sensorProbeThermostatTemperatureArrayPort6Description": sensorProbeThermostatTemperatureArrayPort6Description,
       "sensorProbeThermostatTemperatureArrayPort6Value": sensorProbeThermostatTemperatureArrayPort6Value,
       "sensorProbeThermostatTemperatureArrayPort6Online": sensorProbeThermostatTemperatureArrayPort6Online,
       "sensorProbeThermostatTemperatureArrayPort6GoOnline": sensorProbeThermostatTemperatureArrayPort6GoOnline,
       "sensorProbeThermostatTemperatureArrayPort6Mode": sensorProbeThermostatTemperatureArrayPort6Mode,
       "sensorProbeThermostatTemperatureArrayPort6RelayControlPort": sensorProbeThermostatTemperatureArrayPort6RelayControlPort,
       "sensorProbeThermostatTemperatureArrayPort6NormalAction1": sensorProbeThermostatTemperatureArrayPort6NormalAction1,
       "sensorProbeThermostatTemperatureArrayPort6HighLimit1": sensorProbeThermostatTemperatureArrayPort6HighLimit1,
       "sensorProbeThermostatTemperatureArrayPort6HighLimitAction1": sensorProbeThermostatTemperatureArrayPort6HighLimitAction1,
       "sensorProbeThermostatTemperatureArrayPort6LowLimit1": sensorProbeThermostatTemperatureArrayPort6LowLimit1,
       "sensorProbeThermostatTemperatureArrayPort6LowLimitAction1": sensorProbeThermostatTemperatureArrayPort6LowLimitAction1,
       "sensorProbeThermostatTemperatureArrayPort6NormalAction2": sensorProbeThermostatTemperatureArrayPort6NormalAction2,
       "sensorProbeThermostatTemperatureArrayPort6HighLimit2": sensorProbeThermostatTemperatureArrayPort6HighLimit2,
       "sensorProbeThermostatTemperatureArrayPort6HighLimitAction2": sensorProbeThermostatTemperatureArrayPort6HighLimitAction2,
       "sensorProbeThermostatTemperatureArrayPort6LowLimit2": sensorProbeThermostatTemperatureArrayPort6LowLimit2,
       "sensorProbeThermostatTemperatureArrayPort6LowLimitAction2": sensorProbeThermostatTemperatureArrayPort6LowLimitAction2,
       "sensorProbeThermostatTemperatureArrayPort6EnableTime": sensorProbeThermostatTemperatureArrayPort6EnableTime,
       "sensorProbeTemperatureArrayPort7": sensorProbeTemperatureArrayPort7,
       "sensorProbeTemperatureArrayPort7Number": sensorProbeTemperatureArrayPort7Number,
       "sensorProbeTemperatureArrayPort7Table": sensorProbeTemperatureArrayPort7Table,
       "sensorProbeTemperatureArrayPort7Entry": sensorProbeTemperatureArrayPort7Entry,
       "sensorProbeTemperatureArrayPort7Index": sensorProbeTemperatureArrayPort7Index,
       "sensorProbeTemperatureArrayPort7Description": sensorProbeTemperatureArrayPort7Description,
       "sensorProbeTemperatureArrayPort7Value": sensorProbeTemperatureArrayPort7Value,
       "sensorProbeTemperatureArrayPort7Status": sensorProbeTemperatureArrayPort7Status,
       "sensorProbeTemperatureArrayPort7Online": sensorProbeTemperatureArrayPort7Online,
       "sensorProbeTemperatureArrayPort7GoOnline": sensorProbeTemperatureArrayPort7GoOnline,
       "sensorProbeTemperatureArrayPort7HighWarning": sensorProbeTemperatureArrayPort7HighWarning,
       "sensorProbeTemperatureArrayPort7HighCritical": sensorProbeTemperatureArrayPort7HighCritical,
       "sensorProbeTemperatureArrayPort7LowWarning": sensorProbeTemperatureArrayPort7LowWarning,
       "sensorProbeTemperatureArrayPort7LowCritical": sensorProbeTemperatureArrayPort7LowCritical,
       "sensorProbeTemperatureArrayPort7Rearm": sensorProbeTemperatureArrayPort7Rearm,
       "sensorProbeTemperatureArrayPort7DegreeType": sensorProbeTemperatureArrayPort7DegreeType,
       "sensorProbeTemperatureArrayPort7DegreeRaw": sensorProbeTemperatureArrayPort7DegreeRaw,
       "sensorProbeTemperatureArrayPort7Offset": sensorProbeTemperatureArrayPort7Offset,
       "sensorProbeTemperatureArrayPort7URL": sensorProbeTemperatureArrayPort7URL,
       "sensorProbeTemperatureArrayPort7OpenURL": sensorProbeTemperatureArrayPort7OpenURL,
       "sensorProbeTemperatureArrayPort7DatacollectType": sensorProbeTemperatureArrayPort7DatacollectType,
       "sensorProbeTemperatureArrayPort7ContTimeHighCritical": sensorProbeTemperatureArrayPort7ContTimeHighCritical,
       "sensorProbeTemperatureArrayPort7ContTimeHighWarning": sensorProbeTemperatureArrayPort7ContTimeHighWarning,
       "sensorProbeTemperatureArrayPort7ContTimeNormal": sensorProbeTemperatureArrayPort7ContTimeNormal,
       "sensorProbeTemperatureArrayPort7ContTimeLowWarning": sensorProbeTemperatureArrayPort7ContTimeLowWarning,
       "sensorProbeTemperatureArrayPort7ContTimeLowCritical": sensorProbeTemperatureArrayPort7ContTimeLowCritical,
       "sensorProbeTemperatureArrayPort7ContTimeSensorError": sensorProbeTemperatureArrayPort7ContTimeSensorError,
       "sensorProbeTemperatureArrayPort7Calendar": sensorProbeTemperatureArrayPort7Calendar,
       "sensorProbeThermostatTemperatureArrayPort7Index": sensorProbeThermostatTemperatureArrayPort7Index,
       "sensorProbeThermostatTemperatureArrayPort7Description": sensorProbeThermostatTemperatureArrayPort7Description,
       "sensorProbeThermostatTemperatureArrayPort7Value": sensorProbeThermostatTemperatureArrayPort7Value,
       "sensorProbeThermostatTemperatureArrayPort7Online": sensorProbeThermostatTemperatureArrayPort7Online,
       "sensorProbeThermostatTemperatureArrayPort7GoOnline": sensorProbeThermostatTemperatureArrayPort7GoOnline,
       "sensorProbeThermostatTemperatureArrayPort7Mode": sensorProbeThermostatTemperatureArrayPort7Mode,
       "sensorProbeThermostatTemperatureArrayPort7RelayControlPort": sensorProbeThermostatTemperatureArrayPort7RelayControlPort,
       "sensorProbeThermostatTemperatureArrayPort7NormalAction1": sensorProbeThermostatTemperatureArrayPort7NormalAction1,
       "sensorProbeThermostatTemperatureArrayPort7HighLimit1": sensorProbeThermostatTemperatureArrayPort7HighLimit1,
       "sensorProbeThermostatTemperatureArrayPort7HighLimitAction1": sensorProbeThermostatTemperatureArrayPort7HighLimitAction1,
       "sensorProbeThermostatTemperatureArrayPort7LowLimit1": sensorProbeThermostatTemperatureArrayPort7LowLimit1,
       "sensorProbeThermostatTemperatureArrayPort7LowLimitAction1": sensorProbeThermostatTemperatureArrayPort7LowLimitAction1,
       "sensorProbeThermostatTemperatureArrayPort7NormalAction2": sensorProbeThermostatTemperatureArrayPort7NormalAction2,
       "sensorProbeThermostatTemperatureArrayPort7HighLimit2": sensorProbeThermostatTemperatureArrayPort7HighLimit2,
       "sensorProbeThermostatTemperatureArrayPort7HighLimitAction2": sensorProbeThermostatTemperatureArrayPort7HighLimitAction2,
       "sensorProbeThermostatTemperatureArrayPort7LowLimit2": sensorProbeThermostatTemperatureArrayPort7LowLimit2,
       "sensorProbeThermostatTemperatureArrayPort7LowLimitAction2": sensorProbeThermostatTemperatureArrayPort7LowLimitAction2,
       "sensorProbeThermostatTemperatureArrayPort7EnableTime": sensorProbeThermostatTemperatureArrayPort7EnableTime,
       "sensorProbeTemperatureArrayPort8": sensorProbeTemperatureArrayPort8,
       "sensorProbeTemperatureArrayPort8Number": sensorProbeTemperatureArrayPort8Number,
       "sensorProbeTemperatureArrayPort8Table": sensorProbeTemperatureArrayPort8Table,
       "sensorProbeTemperatureArrayPort8Entry": sensorProbeTemperatureArrayPort8Entry,
       "sensorProbeTemperatureArrayPort8Index": sensorProbeTemperatureArrayPort8Index,
       "sensorProbeTemperatureArrayPort8Description": sensorProbeTemperatureArrayPort8Description,
       "sensorProbeTemperatureArrayPort8Value": sensorProbeTemperatureArrayPort8Value,
       "sensorProbeTemperatureArrayPort8Status": sensorProbeTemperatureArrayPort8Status,
       "sensorProbeTemperatureArrayPort8Online": sensorProbeTemperatureArrayPort8Online,
       "sensorProbeTemperatureArrayPort8GoOnline": sensorProbeTemperatureArrayPort8GoOnline,
       "sensorProbeTemperatureArrayPort8HighWarning": sensorProbeTemperatureArrayPort8HighWarning,
       "sensorProbeTemperatureArrayPort8HighCritical": sensorProbeTemperatureArrayPort8HighCritical,
       "sensorProbeTemperatureArrayPort8LowWarning": sensorProbeTemperatureArrayPort8LowWarning,
       "sensorProbeTemperatureArrayPort8LowCritical": sensorProbeTemperatureArrayPort8LowCritical,
       "sensorProbeTemperatureArrayPort8Rearm": sensorProbeTemperatureArrayPort8Rearm,
       "sensorProbeTemperatureArrayPort8DegreeType": sensorProbeTemperatureArrayPort8DegreeType,
       "sensorProbeTemperatureArrayPort8DegreeRaw": sensorProbeTemperatureArrayPort8DegreeRaw,
       "sensorProbeTemperatureArrayPort8Offset": sensorProbeTemperatureArrayPort8Offset,
       "sensorProbeTemperatureArrayPort8URL": sensorProbeTemperatureArrayPort8URL,
       "sensorProbeTemperatureArrayPort8OpenURL": sensorProbeTemperatureArrayPort8OpenURL,
       "sensorProbeTemperatureArrayPort8DatacollectType": sensorProbeTemperatureArrayPort8DatacollectType,
       "sensorProbeTemperatureArrayPort8ContTimeHighCritical": sensorProbeTemperatureArrayPort8ContTimeHighCritical,
       "sensorProbeTemperatureArrayPort8ContTimeHighWarning": sensorProbeTemperatureArrayPort8ContTimeHighWarning,
       "sensorProbeTemperatureArrayPort8ContTimeNormal": sensorProbeTemperatureArrayPort8ContTimeNormal,
       "sensorProbeTemperatureArrayPort8ContTimeLowWarning": sensorProbeTemperatureArrayPort8ContTimeLowWarning,
       "sensorProbeTemperatureArrayPort8ContTimeLowCritical": sensorProbeTemperatureArrayPort8ContTimeLowCritical,
       "sensorProbeTemperatureArrayPort8ContTimeSensorError": sensorProbeTemperatureArrayPort8ContTimeSensorError,
       "sensorProbeTemperatureArrayPort8Calendar": sensorProbeTemperatureArrayPort8Calendar,
       "sensorProbeThermostatTemperatureArrayPort8Index": sensorProbeThermostatTemperatureArrayPort8Index,
       "sensorProbeThermostatTemperatureArrayPort8Description": sensorProbeThermostatTemperatureArrayPort8Description,
       "sensorProbeThermostatTemperatureArrayPort8Value": sensorProbeThermostatTemperatureArrayPort8Value,
       "sensorProbeThermostatTemperatureArrayPort8Online": sensorProbeThermostatTemperatureArrayPort8Online,
       "sensorProbeThermostatTemperatureArrayPort8GoOnline": sensorProbeThermostatTemperatureArrayPort8GoOnline,
       "sensorProbeThermostatTemperatureArrayPort8Mode": sensorProbeThermostatTemperatureArrayPort8Mode,
       "sensorProbeThermostatTemperatureArrayPort8RelayControlPort": sensorProbeThermostatTemperatureArrayPort8RelayControlPort,
       "sensorProbeThermostatTemperatureArrayPort8NormalAction1": sensorProbeThermostatTemperatureArrayPort8NormalAction1,
       "sensorProbeThermostatTemperatureArrayPort8HighLimit1": sensorProbeThermostatTemperatureArrayPort8HighLimit1,
       "sensorProbeThermostatTemperatureArrayPort8HighLimitAction1": sensorProbeThermostatTemperatureArrayPort8HighLimitAction1,
       "sensorProbeThermostatTemperatureArrayPort8LowLimit1": sensorProbeThermostatTemperatureArrayPort8LowLimit1,
       "sensorProbeThermostatTemperatureArrayPort8LowLimitAction1": sensorProbeThermostatTemperatureArrayPort8LowLimitAction1,
       "sensorProbeThermostatTemperatureArrayPort8NormalAction2": sensorProbeThermostatTemperatureArrayPort8NormalAction2,
       "sensorProbeThermostatTemperatureArrayPort8HighLimit2": sensorProbeThermostatTemperatureArrayPort8HighLimit2,
       "sensorProbeThermostatTemperatureArrayPort8HighLimitAction2": sensorProbeThermostatTemperatureArrayPort8HighLimitAction2,
       "sensorProbeThermostatTemperatureArrayPort8LowLimit2": sensorProbeThermostatTemperatureArrayPort8LowLimit2,
       "sensorProbeThermostatTemperatureArrayPort8LowLimitAction2": sensorProbeThermostatTemperatureArrayPort8LowLimitAction2,
       "sensorProbeThermostatTemperatureArrayPort8EnableTime": sensorProbeThermostatTemperatureArrayPort8EnableTime,
       "sensorProbeNoCameraSensor": sensorProbeNoCameraSensor,
       "sensorProbeNoCameraSensorNumber": sensorProbeNoCameraSensorNumber,
       "sensorProbeNoCameraSensorTable": sensorProbeNoCameraSensorTable,
       "sensorProbeNoCameraSensorEntry": sensorProbeNoCameraSensorEntry,
       "sensorProbeNoCameraSensorIndex": sensorProbeNoCameraSensorIndex,
       "sensorProbeNoCameraDescription": sensorProbeNoCameraDescription,
       "sensorProbeNoCameraStatus": sensorProbeNoCameraStatus,
       "sensorProbeNoCameraOnline": sensorProbeNoCameraOnline,
       "sensorProbeNoCameraGoOnline": sensorProbeNoCameraGoOnline,
       "sensorProbeNoCameraContTimeHighCritical": sensorProbeNoCameraContTimeHighCritical,
       "sensorProbeNoCameraContTimeNormal": sensorProbeNoCameraContTimeNormal,
       "sensorProbeNoCameraCalendar": sensorProbeNoCameraCalendar,
       "sensorProbeSoftMotionSensor": sensorProbeSoftMotionSensor,
       "sensorProbeSoftMotionSensorNumber": sensorProbeSoftMotionSensorNumber,
       "sensorProbeSoftMotionSensorTable": sensorProbeSoftMotionSensorTable,
       "sensorProbeSoftMotionSensorEntry": sensorProbeSoftMotionSensorEntry,
       "sensorProbeSoftMotionSensorIndex": sensorProbeSoftMotionSensorIndex,
       "sensorProbeSoftMotionDescription": sensorProbeSoftMotionDescription,
       "sensorProbeSoftMotionStatus": sensorProbeSoftMotionStatus,
       "sensorProbeSoftMotionOnline": sensorProbeSoftMotionOnline,
       "sensorProbeSoftMotionGoOnline": sensorProbeSoftMotionGoOnline,
       "sensorProbeSoftMotionPercentSensitivity": sensorProbeSoftMotionPercentSensitivity,
       "sensorProbeSoftMotionURL": sensorProbeSoftMotionURL,
       "sensorProbeSoftMotionOpenURL": sensorProbeSoftMotionOpenURL,
       "sensorProbeSoftMotionContTimeHighCritical": sensorProbeSoftMotionContTimeHighCritical,
       "sensorProbeSoftMotionContTimeNormal": sensorProbeSoftMotionContTimeNormal,
       "sensorProbeSoftMotionCalendar": sensorProbeSoftMotionCalendar,
       "sensorProbeSoftMotionMask": sensorProbeSoftMotionMask,
       "sensorProbeSoundDetectorSensor": sensorProbeSoundDetectorSensor,
       "sensorProbeSoundDetectorSensorNumber": sensorProbeSoundDetectorSensorNumber,
       "sensorProbeSoundDetectorSensorTable": sensorProbeSoundDetectorSensorTable,
       "sensorProbeSoundDetectorSensorEntry": sensorProbeSoundDetectorSensorEntry,
       "sensorProbeSoundDetectorIndex": sensorProbeSoundDetectorIndex,
       "sensorProbeSoundDetectorDescription": sensorProbeSoundDetectorDescription,
       "sensorProbeSoundDetectorValue": sensorProbeSoundDetectorValue,
       "sensorProbeSoundDetectorStatus": sensorProbeSoundDetectorStatus,
       "sensorProbeSoundDetectorOnline": sensorProbeSoundDetectorOnline,
       "sensorProbeSoundDetectorGoOnline": sensorProbeSoundDetectorGoOnline,
       "sensorProbeSoundDetectorHighWarning": sensorProbeSoundDetectorHighWarning,
       "sensorProbeSoundDetectorHighCritical": sensorProbeSoundDetectorHighCritical,
       "sensorProbeSoundDetectorLowWarning": sensorProbeSoundDetectorLowWarning,
       "sensorProbeSoundDetectorLowCritical": sensorProbeSoundDetectorLowCritical,
       "sensorProbeSoundDetectorRearm": sensorProbeSoundDetectorRearm,
       "sensorProbeSoundDetectorRecordingSource": sensorProbeSoundDetectorRecordingSource,
       "sensorProbeSoundDetectorMicBoost": sensorProbeSoundDetectorMicBoost,
       "sensorProbeSoundDetectorMicSensitivity": sensorProbeSoundDetectorMicSensitivity,
       "sensorProbeSoundDetectorPulseLength": sensorProbeSoundDetectorPulseLength,
       "sensorProbeSoundDetectorURL": sensorProbeSoundDetectorURL,
       "sensorProbeSoundDetectorOpenURL": sensorProbeSoundDetectorOpenURL,
       "sensorProbeSoundDetectorDatacollectType": sensorProbeSoundDetectorDatacollectType,
       "sensorProbeSoundDetectorContTimeHighCritical": sensorProbeSoundDetectorContTimeHighCritical,
       "sensorProbeSoundDetectorContTimeHighWarning": sensorProbeSoundDetectorContTimeHighWarning,
       "sensorProbeSoundDetectorContTimeNormal": sensorProbeSoundDetectorContTimeNormal,
       "sensorProbeSoundDetectorContTimeLowWarning": sensorProbeSoundDetectorContTimeLowWarning,
       "sensorProbeSoundDetectorContTimeLowCritical": sensorProbeSoundDetectorContTimeLowCritical,
       "sensorProbeSoundDetectorContTimeSensorError": sensorProbeSoundDetectorContTimeSensorError,
       "sensorProbeSoundDetectorCalendar": sensorProbeSoundDetectorCalendar,
       "sensorProbeDrycontactArraySensor": sensorProbeDrycontactArraySensor,
       "sensorProbeDrycontactArrayPort1": sensorProbeDrycontactArrayPort1,
       "sensorProbeDrycontactArrayPort1Number": sensorProbeDrycontactArrayPort1Number,
       "sensorProbeDrycontactArrayPort1Table": sensorProbeDrycontactArrayPort1Table,
       "sensorProbeDrycontactArrayPort1Entry": sensorProbeDrycontactArrayPort1Entry,
       "sensorProbeDrycontactArrayPort1Index": sensorProbeDrycontactArrayPort1Index,
       "sensorProbeDrycontactArrayPort1Description": sensorProbeDrycontactArrayPort1Description,
       "sensorProbeDrycontactArrayPort1Status": sensorProbeDrycontactArrayPort1Status,
       "sensorProbeDrycontactArrayPort1Online": sensorProbeDrycontactArrayPort1Online,
       "sensorProbeDrycontactArrayPort1GoOnline": sensorProbeDrycontactArrayPort1GoOnline,
       "sensorProbeDrycontactArrayPort1NormalState": sensorProbeDrycontactArrayPort1NormalState,
       "sensorProbeDrycontactArrayPort1Direction": sensorProbeDrycontactArrayPort1Direction,
       "sensorProbeDrycontactArrayPort1ContTimeCritical": sensorProbeDrycontactArrayPort1ContTimeCritical,
       "sensorProbeDrycontactArrayPort1ContTimeNormal": sensorProbeDrycontactArrayPort1ContTimeNormal,
       "sensorProbeDrycontactArrayPort1ManualOutputCycleTime": sensorProbeDrycontactArrayPort1ManualOutputCycleTime,
       "sensorProbeDrycontactArrayPort1ManualOutputAction": sensorProbeDrycontactArrayPort1ManualOutputAction,
       "sensorProbeDrycontactArrayPort1OutputDescOn": sensorProbeDrycontactArrayPort1OutputDescOn,
       "sensorProbeDrycontactArrayPort1OutputDescOff": sensorProbeDrycontactArrayPort1OutputDescOff,
       "sensorProbeDrycontactArrayPort1URL": sensorProbeDrycontactArrayPort1URL,
       "sensorProbeDrycontactArrayPort1OpenURL": sensorProbeDrycontactArrayPort1OpenURL,
       "sensorProbeDrycontactArrayPort1ControlMode": sensorProbeDrycontactArrayPort1ControlMode,
       "sensorProbeDrycontactArrayPort2": sensorProbeDrycontactArrayPort2,
       "sensorProbeDrycontactArrayPort2Number": sensorProbeDrycontactArrayPort2Number,
       "sensorProbeDrycontactArrayPort2Table": sensorProbeDrycontactArrayPort2Table,
       "sensorProbeDrycontactArrayPort2Entry": sensorProbeDrycontactArrayPort2Entry,
       "sensorProbeDrycontactArrayPort2Index": sensorProbeDrycontactArrayPort2Index,
       "sensorProbeDrycontactArrayPort2Description": sensorProbeDrycontactArrayPort2Description,
       "sensorProbeDrycontactArrayPort2Status": sensorProbeDrycontactArrayPort2Status,
       "sensorProbeDrycontactArrayPort2Online": sensorProbeDrycontactArrayPort2Online,
       "sensorProbeDrycontactArrayPort2GoOnline": sensorProbeDrycontactArrayPort2GoOnline,
       "sensorProbeDrycontactArrayPort2NormalState": sensorProbeDrycontactArrayPort2NormalState,
       "sensorProbeDrycontactArrayPort2Direction": sensorProbeDrycontactArrayPort2Direction,
       "sensorProbeDrycontactArrayPort2ContTimeCritical": sensorProbeDrycontactArrayPort2ContTimeCritical,
       "sensorProbeDrycontactArrayPort2ContTimeNormal": sensorProbeDrycontactArrayPort2ContTimeNormal,
       "sensorProbeDrycontactArrayPort2ManualOutputCycleTime": sensorProbeDrycontactArrayPort2ManualOutputCycleTime,
       "sensorProbeDrycontactArrayPort2ManualOutputAction": sensorProbeDrycontactArrayPort2ManualOutputAction,
       "sensorProbeDrycontactArrayPort2OutputDescOn": sensorProbeDrycontactArrayPort2OutputDescOn,
       "sensorProbeDrycontactArrayPort2OutputDescOff": sensorProbeDrycontactArrayPort2OutputDescOff,
       "sensorProbeDrycontactArrayPort2URL": sensorProbeDrycontactArrayPort2URL,
       "sensorProbeDrycontactArrayPort2OpenURL": sensorProbeDrycontactArrayPort2OpenURL,
       "sensorProbeDrycontactArrayPort2ControlMode": sensorProbeDrycontactArrayPort2ControlMode,
       "sensorProbeDrycontactArrayPort3": sensorProbeDrycontactArrayPort3,
       "sensorProbeDrycontactArrayPort3Number": sensorProbeDrycontactArrayPort3Number,
       "sensorProbeDrycontactArrayPort3Table": sensorProbeDrycontactArrayPort3Table,
       "sensorProbeDrycontactArrayPort3Entry": sensorProbeDrycontactArrayPort3Entry,
       "sensorProbeDrycontactArrayPort3Index": sensorProbeDrycontactArrayPort3Index,
       "sensorProbeDrycontactArrayPort3Description": sensorProbeDrycontactArrayPort3Description,
       "sensorProbeDrycontactArrayPort3Status": sensorProbeDrycontactArrayPort3Status,
       "sensorProbeDrycontactArrayPort3Online": sensorProbeDrycontactArrayPort3Online,
       "sensorProbeDrycontactArrayPort3GoOnline": sensorProbeDrycontactArrayPort3GoOnline,
       "sensorProbeDrycontactArrayPort3NormalState": sensorProbeDrycontactArrayPort3NormalState,
       "sensorProbeDrycontactArrayPort3Direction": sensorProbeDrycontactArrayPort3Direction,
       "sensorProbeDrycontactArrayPort3ContTimeCritical": sensorProbeDrycontactArrayPort3ContTimeCritical,
       "sensorProbeDrycontactArrayPort3ContTimeNormal": sensorProbeDrycontactArrayPort3ContTimeNormal,
       "sensorProbeDrycontactArrayPort3ManualOutputCycleTime": sensorProbeDrycontactArrayPort3ManualOutputCycleTime,
       "sensorProbeDrycontactArrayPort3ManualOutputAction": sensorProbeDrycontactArrayPort3ManualOutputAction,
       "sensorProbeDrycontactArrayPort3OutputDescOn": sensorProbeDrycontactArrayPort3OutputDescOn,
       "sensorProbeDrycontactArrayPort3OutputDescOff": sensorProbeDrycontactArrayPort3OutputDescOff,
       "sensorProbeDrycontactArrayPort3URL": sensorProbeDrycontactArrayPort3URL,
       "sensorProbeDrycontactArrayPort3OpenURL": sensorProbeDrycontactArrayPort3OpenURL,
       "sensorProbeDrycontactArrayPort3ControlMode": sensorProbeDrycontactArrayPort3ControlMode,
       "sensorProbeDrycontactArrayPort4": sensorProbeDrycontactArrayPort4,
       "sensorProbeDrycontactArrayPort4Number": sensorProbeDrycontactArrayPort4Number,
       "sensorProbeDrycontactArrayPort4Table": sensorProbeDrycontactArrayPort4Table,
       "sensorProbeDrycontactArrayPort4Entry": sensorProbeDrycontactArrayPort4Entry,
       "sensorProbeDrycontactArrayPort4Index": sensorProbeDrycontactArrayPort4Index,
       "sensorProbeDrycontactArrayPort4Description": sensorProbeDrycontactArrayPort4Description,
       "sensorProbeDrycontactArrayPort4Status": sensorProbeDrycontactArrayPort4Status,
       "sensorProbeDrycontactArrayPort4Online": sensorProbeDrycontactArrayPort4Online,
       "sensorProbeDrycontactArrayPort4GoOnline": sensorProbeDrycontactArrayPort4GoOnline,
       "sensorProbeDrycontactArrayPort4NormalState": sensorProbeDrycontactArrayPort4NormalState,
       "sensorProbeDrycontactArrayPort4Direction": sensorProbeDrycontactArrayPort4Direction,
       "sensorProbeDrycontactArrayPort4ContTimeCritical": sensorProbeDrycontactArrayPort4ContTimeCritical,
       "sensorProbeDrycontactArrayPort4ContTimeNormal": sensorProbeDrycontactArrayPort4ContTimeNormal,
       "sensorProbeDrycontactArrayPort4ManualOutputCycleTime": sensorProbeDrycontactArrayPort4ManualOutputCycleTime,
       "sensorProbeDrycontactArrayPort4ManualOutputAction": sensorProbeDrycontactArrayPort4ManualOutputAction,
       "sensorProbeDrycontactArrayPort4OutputDescOn": sensorProbeDrycontactArrayPort4OutputDescOn,
       "sensorProbeDrycontactArrayPort4OutputDescOff": sensorProbeDrycontactArrayPort4OutputDescOff,
       "sensorProbeDrycontactArrayPort4URL": sensorProbeDrycontactArrayPort4URL,
       "sensorProbeDrycontactArrayPort4OpenURL": sensorProbeDrycontactArrayPort4OpenURL,
       "sensorProbeDrycontactArrayPort4ControlMode": sensorProbeDrycontactArrayPort4ControlMode,
       "sensorProbeDrycontactArrayPort5": sensorProbeDrycontactArrayPort5,
       "sensorProbeDrycontactArrayPort5Number": sensorProbeDrycontactArrayPort5Number,
       "sensorProbeDrycontactArrayPort5Table": sensorProbeDrycontactArrayPort5Table,
       "sensorProbeDrycontactArrayPort5Entry": sensorProbeDrycontactArrayPort5Entry,
       "sensorProbeDrycontactArrayPort5Index": sensorProbeDrycontactArrayPort5Index,
       "sensorProbeDrycontactArrayPort5Description": sensorProbeDrycontactArrayPort5Description,
       "sensorProbeDrycontactArrayPort5Status": sensorProbeDrycontactArrayPort5Status,
       "sensorProbeDrycontactArrayPort5Online": sensorProbeDrycontactArrayPort5Online,
       "sensorProbeDrycontactArrayPort5GoOnline": sensorProbeDrycontactArrayPort5GoOnline,
       "sensorProbeDrycontactArrayPort5NormalState": sensorProbeDrycontactArrayPort5NormalState,
       "sensorProbeDrycontactArrayPort5Direction": sensorProbeDrycontactArrayPort5Direction,
       "sensorProbeDrycontactArrayPort5ContTimeCritical": sensorProbeDrycontactArrayPort5ContTimeCritical,
       "sensorProbeDrycontactArrayPort5ContTimeNormal": sensorProbeDrycontactArrayPort5ContTimeNormal,
       "sensorProbeDrycontactArrayPort5ManualOutputCycleTime": sensorProbeDrycontactArrayPort5ManualOutputCycleTime,
       "sensorProbeDrycontactArrayPort5ManualOutputAction": sensorProbeDrycontactArrayPort5ManualOutputAction,
       "sensorProbeDrycontactArrayPort5OutputDescOn": sensorProbeDrycontactArrayPort5OutputDescOn,
       "sensorProbeDrycontactArrayPort5OutputDescOff": sensorProbeDrycontactArrayPort5OutputDescOff,
       "sensorProbeDrycontactArrayPort5URL": sensorProbeDrycontactArrayPort5URL,
       "sensorProbeDrycontactArrayPort5OpenURL": sensorProbeDrycontactArrayPort5OpenURL,
       "sensorProbeDrycontactArrayPort5ControlMode": sensorProbeDrycontactArrayPort5ControlMode,
       "sensorProbeDrycontactArrayPort6": sensorProbeDrycontactArrayPort6,
       "sensorProbeDrycontactArrayPort6Number": sensorProbeDrycontactArrayPort6Number,
       "sensorProbeDrycontactArrayPort6Table": sensorProbeDrycontactArrayPort6Table,
       "sensorProbeDrycontactArrayPort6Entry": sensorProbeDrycontactArrayPort6Entry,
       "sensorProbeDrycontactArrayPort6Index": sensorProbeDrycontactArrayPort6Index,
       "sensorProbeDrycontactArrayPort6Description": sensorProbeDrycontactArrayPort6Description,
       "sensorProbeDrycontactArrayPort6Status": sensorProbeDrycontactArrayPort6Status,
       "sensorProbeDrycontactArrayPort6Online": sensorProbeDrycontactArrayPort6Online,
       "sensorProbeDrycontactArrayPort6GoOnline": sensorProbeDrycontactArrayPort6GoOnline,
       "sensorProbeDrycontactArrayPort6NormalState": sensorProbeDrycontactArrayPort6NormalState,
       "sensorProbeDrycontactArrayPort6Direction": sensorProbeDrycontactArrayPort6Direction,
       "sensorProbeDrycontactArrayPort6ContTimeCritical": sensorProbeDrycontactArrayPort6ContTimeCritical,
       "sensorProbeDrycontactArrayPort6ContTimeNormal": sensorProbeDrycontactArrayPort6ContTimeNormal,
       "sensorProbeDrycontactArrayPort6ManualOutputCycleTime": sensorProbeDrycontactArrayPort6ManualOutputCycleTime,
       "sensorProbeDrycontactArrayPort6ManualOutputAction": sensorProbeDrycontactArrayPort6ManualOutputAction,
       "sensorProbeDrycontactArrayPort6OutputDescOn": sensorProbeDrycontactArrayPort6OutputDescOn,
       "sensorProbeDrycontactArrayPort6OutputDescOff": sensorProbeDrycontactArrayPort6OutputDescOff,
       "sensorProbeDrycontactArrayPort6URL": sensorProbeDrycontactArrayPort6URL,
       "sensorProbeDrycontactArrayPort6OpenURL": sensorProbeDrycontactArrayPort6OpenURL,
       "sensorProbeDrycontactArrayPort6ControlMode": sensorProbeDrycontactArrayPort6ControlMode,
       "sensorProbeDrycontactArrayPort7": sensorProbeDrycontactArrayPort7,
       "sensorProbeDrycontactArrayPort7Number": sensorProbeDrycontactArrayPort7Number,
       "sensorProbeDrycontactArrayPort7Table": sensorProbeDrycontactArrayPort7Table,
       "sensorProbeDrycontactArrayPort7Entry": sensorProbeDrycontactArrayPort7Entry,
       "sensorProbeDrycontactArrayPort7Index": sensorProbeDrycontactArrayPort7Index,
       "sensorProbeDrycontactArrayPort7Description": sensorProbeDrycontactArrayPort7Description,
       "sensorProbeDrycontactArrayPort7Status": sensorProbeDrycontactArrayPort7Status,
       "sensorProbeDrycontactArrayPort7Online": sensorProbeDrycontactArrayPort7Online,
       "sensorProbeDrycontactArrayPort7GoOnline": sensorProbeDrycontactArrayPort7GoOnline,
       "sensorProbeDrycontactArrayPort7NormalState": sensorProbeDrycontactArrayPort7NormalState,
       "sensorProbeDrycontactArrayPort7Direction": sensorProbeDrycontactArrayPort7Direction,
       "sensorProbeDrycontactArrayPort7ContTimeCritical": sensorProbeDrycontactArrayPort7ContTimeCritical,
       "sensorProbeDrycontactArrayPort7ContTimeNormal": sensorProbeDrycontactArrayPort7ContTimeNormal,
       "sensorProbeDrycontactArrayPort7ManualOutputCycleTime": sensorProbeDrycontactArrayPort7ManualOutputCycleTime,
       "sensorProbeDrycontactArrayPort7ManualOutputAction": sensorProbeDrycontactArrayPort7ManualOutputAction,
       "sensorProbeDrycontactArrayPort7OutputDescOn": sensorProbeDrycontactArrayPort7OutputDescOn,
       "sensorProbeDrycontactArrayPort7OutputDescOff": sensorProbeDrycontactArrayPort7OutputDescOff,
       "sensorProbeDrycontactArrayPort7URL": sensorProbeDrycontactArrayPort7URL,
       "sensorProbeDrycontactArrayPort7OpenURL": sensorProbeDrycontactArrayPort7OpenURL,
       "sensorProbeDrycontactArrayPort7ControlMode": sensorProbeDrycontactArrayPort7ControlMode,
       "sensorProbeDrycontactArrayPort8": sensorProbeDrycontactArrayPort8,
       "sensorProbeDrycontactArrayPort8Number": sensorProbeDrycontactArrayPort8Number,
       "sensorProbeDrycontactArrayPort8Table": sensorProbeDrycontactArrayPort8Table,
       "sensorProbeDrycontactArrayPort8Entry": sensorProbeDrycontactArrayPort8Entry,
       "sensorProbeDrycontactArrayPort8Index": sensorProbeDrycontactArrayPort8Index,
       "sensorProbeDrycontactArrayPort8Description": sensorProbeDrycontactArrayPort8Description,
       "sensorProbeDrycontactArrayPort8Status": sensorProbeDrycontactArrayPort8Status,
       "sensorProbeDrycontactArrayPort8Online": sensorProbeDrycontactArrayPort8Online,
       "sensorProbeDrycontactArrayPort8GoOnline": sensorProbeDrycontactArrayPort8GoOnline,
       "sensorProbeDrycontactArrayPort8NormalState": sensorProbeDrycontactArrayPort8NormalState,
       "sensorProbeDrycontactArrayPort8Direction": sensorProbeDrycontactArrayPort8Direction,
       "sensorProbeDrycontactArrayPort8ContTimeCritical": sensorProbeDrycontactArrayPort8ContTimeCritical,
       "sensorProbeDrycontactArrayPort8ContTimeNormal": sensorProbeDrycontactArrayPort8ContTimeNormal,
       "sensorProbeDrycontactArrayPort8ManualOutputCycleTime": sensorProbeDrycontactArrayPort8ManualOutputCycleTime,
       "sensorProbeDrycontactArrayPort8ManualOutputAction": sensorProbeDrycontactArrayPort8ManualOutputAction,
       "sensorProbeDrycontactArrayPort8OutputDescOn": sensorProbeDrycontactArrayPort8OutputDescOn,
       "sensorProbeDrycontactArrayPort8OutputDescOff": sensorProbeDrycontactArrayPort8OutputDescOff,
       "sensorProbeDrycontactArrayPort8URL": sensorProbeDrycontactArrayPort8URL,
       "sensorProbeDrycontactArrayPort8OpenURL": sensorProbeDrycontactArrayPort8OpenURL,
       "sensorProbeDrycontactArrayPort8ControlMode": sensorProbeDrycontactArrayPort8ControlMode,
       "sensorProbeDebug": sensorProbeDebug,
       "sensorProbeTrapResend": sensorProbeTrapResend,
       "sensorProbeTrapResendInterval": sensorProbeTrapResendInterval,
       "sensorProbeSendTraps": sensorProbeSendTraps,
       "sensorProbeTrapDestination": sensorProbeTrapDestination,
       "sensorProbeTrapCommunity": sensorProbeTrapCommunity,
       "sensorProbeDefaultGateway": sensorProbeDefaultGateway,
       "sensorProbeSubnetMask": sensorProbeSubnetMask,
       "sensorProbeRouteAdd": sensorProbeRouteAdd,
       "sensorProbeSendMail": sensorProbeSendMail,
       "sensorProbeMailRecpt": sensorProbeMailRecpt,
       "sensorProbeMailFrom": sensorProbeMailFrom,
       "sensorProbeMailSMTP": sensorProbeMailSMTP,
       "sensorProbeMailJpgInline": sensorProbeMailJpgInline,
       "sensorProbeMailResendInterval": sensorProbeMailResendInterval,
       "sensorProbeMailMaxResend": sensorProbeMailMaxResend,
       "sensorProbeMailLastStatus": sensorProbeMailLastStatus,
       "sensorProbeSupportMailRcpt": sensorProbeSupportMailRcpt,
       "sensorProbeCameraServerTable": sensorProbeCameraServerTable,
       "sensorProbeCameraServerEntry": sensorProbeCameraServerEntry,
       "sensorProbeCameraServerClientOnline": sensorProbeCameraServerClientOnline,
       "sensorProbeCameraServerClientGoOnline": sensorProbeCameraServerClientGoOnline,
       "sensorProbeCameraServerClientIP": sensorProbeCameraServerClientIP,
       "sensorProbeCameraServerClientSetPassword": sensorProbeCameraServerClientSetPassword,
       "sensorProbeCameraServerIndex": sensorProbeCameraServerIndex,
       "sensorProbeJavaTimeOut": sensorProbeJavaTimeOut,
       "sensorProbeJpegQualityFactor": sensorProbeJpegQualityFactor,
       "sensorProbeCameraDescription": sensorProbeCameraDescription,
       "sensorProbeCameraRotate": sensorProbeCameraRotate,
       "sensorProbeCameraResolution": sensorProbeCameraResolution,
       "sensorProbePTZRotateRelative": sensorProbePTZRotateRelative,
       "sensorProbePTZRotateAbsolute": sensorProbePTZRotateAbsolute,
       "sensorProbeAudioAttachChannel": sensorProbeAudioAttachChannel,
       "sensorProbePTZEnable": sensorProbePTZEnable,
       "sensorProbePTZBrand": sensorProbePTZBrand,
       "sensorProbePTZPanTiltUntilEnd": sensorProbePTZPanTiltUntilEnd,
       "sensorProbeTrapMailPollInterval": sensorProbeTrapMailPollInterval,
       "sensorProbeSendTestMail": sensorProbeSendTestMail,
       "sensorProbeLastSystemError": sensorProbeLastSystemError,
       "sensorProbeDataCollectionPeriod": sensorProbeDataCollectionPeriod,
       "sensorProbeMailTimeout": sensorProbeMailTimeout,
       "sensorProbeAutoSense": sensorProbeAutoSense,
       "sensorProbeChecksum": sensorProbeChecksum,
       "sensorProbeUsePassword": sensorProbeUsePassword,
       "sensorProbeDisplayLogo": sensorProbeDisplayLogo,
       "sensorProbeTrapType": sensorProbeTrapType,
       "sensorProbeMailCC": sensorProbeMailCC,
       "sensorProbeAllowIPChange": sensorProbeAllowIPChange,
       "sensorProbeTimeOfDay": sensorProbeTimeOfDay,
       "sensorProbeEnableSysLog": sensorProbeEnableSysLog,
       "sensorProbeReadSysLog": sensorProbeReadSysLog,
       "sensorProbeClearSysLog": sensorProbeClearSysLog,
       "sensorProbeSyslogDestIP": sensorProbeSyslogDestIP,
       "sensorProbeSyslogPort": sensorProbeSyslogPort,
       "sensorProbeSetSyslogMsgPrefix": sensorProbeSetSyslogMsgPrefix,
       "sensorProbeTimeZone": sensorProbeTimeZone,
       "sensorProbeMegaVersion": sensorProbeMegaVersion,
       "sensorProbeNtpMode": sensorProbeNtpMode,
       "sensorProbeNtpServer": sensorProbeNtpServer,
       "sensorProbeSMTPAuth": sensorProbeSMTPAuth,
       "sensorProbeSMTPLogin": sensorProbeSMTPLogin,
       "sensorProbeSMTPPassword": sensorProbeSMTPPassword,
       "sensorProbeDNSServer": sensorProbeDNSServer,
       "sensorProbeAltWebPort": sensorProbeAltWebPort,
       "sensorProbeNumberOfSensorPort": sensorProbeNumberOfSensorPort,
       "sensorProbeSendTrapsAlive": sensorProbeSendTrapsAlive,
       "sensorProbeTrapReIntervalAlive": sensorProbeTrapReIntervalAlive,
       "sensorProbeUseCamera": sensorProbeUseCamera,
       "sensorProbeAdcCalibratePort": sensorProbeAdcCalibratePort,
       "sensorProbeMailSubject": sensorProbeMailSubject,
       "sensorProbeSnmpPort": sensorProbeSnmpPort,
       "sensorProbeSnmpTrapPort": sensorProbeSnmpTrapPort,
       "sensorProbeSnmpIndexingMode": sensorProbeSnmpIndexingMode,
       "sensorProbeNotifyBoot": sensorProbeNotifyBoot,
       "sensorProbeDelayNotifyBoot": sensorProbeDelayNotifyBoot,
       "sensorProbeSmtpPort": sensorProbeSmtpPort,
       "sensorProbeReboot": sensorProbeReboot,
       "sensorProbeServerEnable": sensorProbeServerEnable,
       "sensorProbeFirmwareVersion": sensorProbeFirmwareVersion,
       "sensorProbeProductType": sensorProbeProductType,
       "sensorProbeRequestResendTrap": sensorProbeRequestResendTrap,
       "sensorProbeSeparateEmail": sensorProbeSeparateEmail,
       "sensorProbeMailCustom": sensorProbeMailCustom,
       "sensorProbeUntidePassword": sensorProbeUntidePassword,
       "sensorProbeWebPassword": sensorProbeWebPassword,
       "sensorProbeWebAdminPassword": sensorProbeWebAdminPassword,
       "sensorProbeWebUserPassword": sensorProbeWebUserPassword,
       "sensorProbeReloadNetwork": sensorProbeReloadNetwork,
       "sensorProbeStatusNumber": sensorProbeStatusNumber,
       "sensorProbeStatusNumberNotNormal": sensorProbeStatusNumberNotNormal,
       "sensorProbeStatusNumberCriticalAndError": sensorProbeStatusNumberCriticalAndError,
       "sensorProbeStatusNumberError": sensorProbeStatusNumberError,
       "sensorProbeTypeName": sensorProbeTypeName,
       "sensorProbeTypeTemperatureName": sensorProbeTypeTemperatureName,
       "sensorProbeTypeSHT11HumidityName": sensorProbeTypeSHT11HumidityName,
       "sensorProbeTypeSHT11TempName": sensorProbeTypeSHT11TempName,
       "sensorProbeType4to20MAName": sensorProbeType4to20MAName,
       "sensorProbeTypeDCvoltageName": sensorProbeTypeDCvoltageName,
       "sensorProbeTypeAirflowName": sensorProbeTypeAirflowName,
       "sensorProbeTypeDrycontactInoutName": sensorProbeTypeDrycontactInoutName,
       "sensorProbeTypeDrycontactInputName": sensorProbeTypeDrycontactInputName,
       "sensorProbeTypeMotionName": sensorProbeTypeMotionName,
       "sensorProbeTypeWaterName": sensorProbeTypeWaterName,
       "sensorProbeTypeSecurityName": sensorProbeTypeSecurityName,
       "sensorProbeTypeSirenName": sensorProbeTypeSirenName,
       "sensorProbeTypeRelayName": sensorProbeTypeRelayName,
       "sensorProbeTypeACvoltageName": sensorProbeTypeACvoltageName,
       "sensorProbeTypeADE7763VRMSName": sensorProbeTypeADE7763VRMSName,
       "sensorProbeTypeADE7763IRMSName": sensorProbeTypeADE7763IRMSName,
       "sensorProbeTypeADE7763WattName": sensorProbeTypeADE7763WattName,
       "sensorProbeTypeADE7763WatthourName": sensorProbeTypeADE7763WatthourName,
       "sensorProbeTypePCF8574XRelayName": sensorProbeTypePCF8574XRelayName,
       "sensorProbeTypeThermocoupleName": sensorProbeTypeThermocoupleName,
       "sensorProbeTypeSmokeName": sensorProbeTypeSmokeName,
       "sensorProbeTypeXDryName": sensorProbeTypeXDryName,
       "sensorProbeTypeTemperatureArrayName": sensorProbeTypeTemperatureArrayName,
       "sensorProbeTypeWaterRopeName": sensorProbeTypeWaterRopeName,
       "sensorProbeTypeFuelLevelName": sensorProbeTypeFuelLevelName,
       "sensorProbeTypeTankSenderName": sensorProbeTypeTankSenderName,
       "sensorProbeTypeThurmostatName": sensorProbeTypeThurmostatName,
       "sensorProbeTypeVirtualName": sensorProbeTypeVirtualName,
       "sensorProbeTypeSoundName": sensorProbeTypeSoundName,
       "sensorProbeTypeSoftMotionName": sensorProbeTypeSoftMotionName,
       "sensorProbeTypeNoSignalName": sensorProbeTypeNoSignalName,
       "sensorProbeTypePowerMeterName": sensorProbeTypePowerMeterName,
       "sensorProbeTypeSHT11Name": sensorProbeTypeSHT11Name,
       "sensorProbeTypeADE7763Name": sensorProbeTypeADE7763Name,
       "sensorProbeProductRevision": sensorProbeProductRevision,
       "sensorProbeTraps": sensorProbeTraps,
       "spSensorStatus": spSensorStatus,
       "spSensorValue": spSensorValue,
       "spSensorLevelExceeded": spSensorLevelExceeded,
       "spSensorIndex": spSensorIndex,
       "spSensorName": spSensorName,
       "spSensorDescription": spSensorDescription,
       "spSensorProbeKeepAlive": spSensorProbeKeepAlive,
       "spSensorType": spSensorType,
       "spSensorStatusName": spSensorStatusName,
       "spSensorSubIndex": spSensorSubIndex,
       "spBoardIndex": spBoardIndex,
       "spBoardDescription": spBoardDescription,
       "spEventTimeStamp": spEventTimeStamp,
       "spEventClassNumber": spEventClassNumber,
       "spEventClassName": spEventClassName,
       "spSensorDecimalValue": spSensorDecimalValue,
       "spSensorAliveHigh": spSensorAliveHigh,
       "spSensorAliveLow": spSensorAliveLow,
       "securityProbe": securityProbe,
       "secSummary": secSummary,
       "secDevice": secDevice,
       "deviceTable": deviceTable,
       "deviceEntry": deviceEntry,
       "deviceIndex": deviceIndex,
       "deviceDescription": deviceDescription,
       "deviceType": deviceType,
       "deviceInfo": deviceInfo,
       "deviceStatus": deviceStatus,
       "deviceIntelligentTable": deviceIntelligentTable,
       "deviceIntelligentEntry": deviceIntelligentEntry,
       "deviceIntelligentIndex": deviceIntelligentIndex,
       "deviceIntelligentDescription": deviceIntelligentDescription,
       "deviceIntelligentInfo": deviceIntelligentInfo,
       "deviceIntelligentStatus": deviceIntelligentStatus,
       "sensorIntelligentTypeSelected": sensorIntelligentTypeSelected,
       "sensorIntelligentPort1GoOnline": sensorIntelligentPort1GoOnline,
       "sensorIntelligentPort2GoOnline": sensorIntelligentPort2GoOnline,
       "sensorIntelligentPort3GoOnline": sensorIntelligentPort3GoOnline,
       "sensorIntelligentPort4GoOnline": sensorIntelligentPort4GoOnline,
       "sensorIntelligentPort5GoOnline": sensorIntelligentPort5GoOnline,
       "sensorIntelligentPort6GoOnline": sensorIntelligentPort6GoOnline,
       "sensorIntelligentPort7GoOnline": sensorIntelligentPort7GoOnline,
       "sensorIntelligentPort8GoOnline": sensorIntelligentPort8GoOnline,
       "deviceDryContactTable": deviceDryContactTable,
       "deviceDryContactEntry": deviceDryContactEntry,
       "deviceDryContactIndex": deviceDryContactIndex,
       "deviceDryContactDescription": deviceDryContactDescription,
       "deviceDryContactInfo": deviceDryContactInfo,
       "deviceDryContactStatus": deviceDryContactStatus,
       "sensorDryContactPort1GoOnline": sensorDryContactPort1GoOnline,
       "sensorDryContactPort2GoOnline": sensorDryContactPort2GoOnline,
       "sensorDryContactPort3GoOnline": sensorDryContactPort3GoOnline,
       "sensorDryContactPort4GoOnline": sensorDryContactPort4GoOnline,
       "sensorDryContactPort5GoOnline": sensorDryContactPort5GoOnline,
       "sensorDryContactPort6GoOnline": sensorDryContactPort6GoOnline,
       "sensorDryContactPort7GoOnline": sensorDryContactPort7GoOnline,
       "sensorDryContactPort8GoOnline": sensorDryContactPort8GoOnline,
       "sensorDryContactPort9GoOnline": sensorDryContactPort9GoOnline,
       "sensorDryContactPort10GoOnline": sensorDryContactPort10GoOnline,
       "sensorDryContactPort11GoOnline": sensorDryContactPort11GoOnline,
       "sensorDryContactPort12GoOnline": sensorDryContactPort12GoOnline,
       "sensorDryContactPort13GoOnline": sensorDryContactPort13GoOnline,
       "sensorDryContactPort14GoOnline": sensorDryContactPort14GoOnline,
       "sensorDryContactPort15GoOnline": sensorDryContactPort15GoOnline,
       "sensorDryContactPort16GoOnline": sensorDryContactPort16GoOnline,
       "secSensor": secSensor,
       "sensorTable": sensorTable,
       "sensorEntry": sensorEntry,
       "sensorIndex": sensorIndex,
       "sensorDescription": sensorDescription,
       "sensorType": sensorType,
       "sensorValue": sensorValue,
       "sensorUnit": sensorUnit,
       "sensorStatus": sensorStatus,
       "sensorGoOffline": sensorGoOffline,
       "sensorPort": sensorPort,
       "sensorSubPort": sensorSubPort,
       "sensorDeviceIndex": sensorDeviceIndex,
       "sensorDisplayStyle": sensorDisplayStyle,
       "sensorHighCriticalDescription": sensorHighCriticalDescription,
       "sensorLowCriticalDescription": sensorLowCriticalDescription,
       "sensorNormalDescription": sensorNormalDescription,
       "sensorLowWarningDescription": sensorLowWarningDescription,
       "sensorHighWarningDescription": sensorHighWarningDescription,
       "sensorErrorDescription": sensorErrorDescription,
       "sensorOnDescription": sensorOnDescription,
       "sensorOffDescription": sensorOffDescription,
       "sensorHighCriticalColor": sensorHighCriticalColor,
       "sensorLowCriticalColor": sensorLowCriticalColor,
       "sensorNormalColor": sensorNormalColor,
       "sensorLowWarningColor": sensorLowWarningColor,
       "sensorHighWarningColor": sensorHighWarningColor,
       "sensorErrorColor": sensorErrorColor,
       "sensorOnColor": sensorOnColor,
       "sensorOffColor": sensorOffColor,
       "sensorTemperatureTable": sensorTemperatureTable,
       "sensorTemperatureEntry": sensorTemperatureEntry,
       "sensorTemperatureIndex": sensorTemperatureIndex,
       "sensorTemperatureDescription": sensorTemperatureDescription,
       "sensorTemperatureType": sensorTemperatureType,
       "sensorTemperatureDegree": sensorTemperatureDegree,
       "sensorTemperatureUnit": sensorTemperatureUnit,
       "sensorTemperatureStatus": sensorTemperatureStatus,
       "sensorTemperatureGoOffline": sensorTemperatureGoOffline,
       "sensorTemperatureLowCritical": sensorTemperatureLowCritical,
       "sensorTemperatureLowWarning": sensorTemperatureLowWarning,
       "sensorTemperatureHighWarning": sensorTemperatureHighWarning,
       "sensorTemperatureHighCritical": sensorTemperatureHighCritical,
       "sensorTemperatureRearm": sensorTemperatureRearm,
       "sensorTemperatureDelayError": sensorTemperatureDelayError,
       "sensorTemperatureDelayNormal": sensorTemperatureDelayNormal,
       "sensorTemperatureDelayLowCritical": sensorTemperatureDelayLowCritical,
       "sensorTemperatureDelayLowWarning": sensorTemperatureDelayLowWarning,
       "sensorTemperatureDelayHighWarning": sensorTemperatureDelayHighWarning,
       "sensorTemperatureDelayHighCritical": sensorTemperatureDelayHighCritical,
       "sensorTemperatureRaw": sensorTemperatureRaw,
       "sensorTemperatureOffset": sensorTemperatureOffset,
       "sensorTemperaturePort": sensorTemperaturePort,
       "sensorTemperatureSubPort": sensorTemperatureSubPort,
       "sensorTemperatureDeviceIndex": sensorTemperatureDeviceIndex,
       "sensorTemperatureDisplayStyle": sensorTemperatureDisplayStyle,
       "sensorTemperatureHighCriticalDesc": sensorTemperatureHighCriticalDesc,
       "sensorTemperatureLowCriticalDesc": sensorTemperatureLowCriticalDesc,
       "sensorTemperatureNormalDesc": sensorTemperatureNormalDesc,
       "sensorTemperatureLowWarningDesc": sensorTemperatureLowWarningDesc,
       "sensorTemperatureHighWarningDesc": sensorTemperatureHighWarningDesc,
       "sensorTemperatureSensorErrorDesc": sensorTemperatureSensorErrorDesc,
       "sensorTemperatureHighCriticalColor": sensorTemperatureHighCriticalColor,
       "sensorTemperatureLowCriticalColor": sensorTemperatureLowCriticalColor,
       "sensorTemperatureNormalColor": sensorTemperatureNormalColor,
       "sensorTemperatureLowWarningColor": sensorTemperatureLowWarningColor,
       "sensorTemperatureHighWarningColor": sensorTemperatureHighWarningColor,
       "sensorTemperatureSensorErrorColor": sensorTemperatureSensorErrorColor,
       "sensorHumidityTable": sensorHumidityTable,
       "sensorHumidityEntry": sensorHumidityEntry,
       "sensorHumidityIndex": sensorHumidityIndex,
       "sensorHumidityDescription": sensorHumidityDescription,
       "sensorHumidityPercent": sensorHumidityPercent,
       "sensorHumidityUnit": sensorHumidityUnit,
       "sensorHumidityStatus": sensorHumidityStatus,
       "sensorHumidityGoOffline": sensorHumidityGoOffline,
       "sensorHumidityLowCritical": sensorHumidityLowCritical,
       "sensorHumidityLowWarning": sensorHumidityLowWarning,
       "sensorHumidityHighWarning": sensorHumidityHighWarning,
       "sensorHumidityHighCritical": sensorHumidityHighCritical,
       "sensorHumidityRearm": sensorHumidityRearm,
       "sensorHumidityDelayError": sensorHumidityDelayError,
       "sensorHumidityDelayNormal": sensorHumidityDelayNormal,
       "sensorHumidityDelayLowCritical": sensorHumidityDelayLowCritical,
       "sensorHumidityDelayLowWarning": sensorHumidityDelayLowWarning,
       "sensorHumidityDelayHighWarning": sensorHumidityDelayHighWarning,
       "sensorHumidityDelayHighCritical": sensorHumidityDelayHighCritical,
       "sensorHumidityRaw": sensorHumidityRaw,
       "sensorHumidityOffset": sensorHumidityOffset,
       "sensorHumidityPort": sensorHumidityPort,
       "sensorHumiditySubPort": sensorHumiditySubPort,
       "sensorHumidityDeviceIndex": sensorHumidityDeviceIndex,
       "sensorHumidityDisplayStyle": sensorHumidityDisplayStyle,
       "sensorHumidityHighCriticalDesc": sensorHumidityHighCriticalDesc,
       "sensorHumidityLowCriticalDesc": sensorHumidityLowCriticalDesc,
       "sensorHumidityNormalDesc": sensorHumidityNormalDesc,
       "sensorHumidityLowWarningDesc": sensorHumidityLowWarningDesc,
       "sensorHumidityHighWarningDesc": sensorHumidityHighWarningDesc,
       "sensorHumiditySensorErrorDesc": sensorHumiditySensorErrorDesc,
       "sensorHumidityHighCriticalColor": sensorHumidityHighCriticalColor,
       "sensorHumidityLowCriticalColor": sensorHumidityLowCriticalColor,
       "sensorHumidityNormalColor": sensorHumidityNormalColor,
       "sensorHumidityLowWarningColor": sensorHumidityLowWarningColor,
       "sensorHumidityHighWarningColor": sensorHumidityHighWarningColor,
       "sensorHumiditySensorErrorColor": sensorHumiditySensorErrorColor,
       "sensorDryContactTable": sensorDryContactTable,
       "sensorDryContactEntry": sensorDryContactEntry,
       "sensorDryContactIndex": sensorDryContactIndex,
       "sensorDryContactDescription": sensorDryContactDescription,
       "sensorDryContactType": sensorDryContactType,
       "sensorDryContactStatus": sensorDryContactStatus,
       "sensorDryContactGoOffline": sensorDryContactGoOffline,
       "sensorDryContactDirection": sensorDryContactDirection,
       "sensorDryContactNormalState": sensorDryContactNormalState,
       "sensorDryContactControlMode": sensorDryContactControlMode,
       "sensorDryContactOutputManualCycleTime": sensorDryContactOutputManualCycleTime,
       "sensorDryContactOutputManualAction": sensorDryContactOutputManualAction,
       "sensorDryContactPort": sensorDryContactPort,
       "sensorDryContactSubPort": sensorDryContactSubPort,
       "sensorDryContactDeviceIndex": sensorDryContactDeviceIndex,
       "sensorDryContactCriticalDesc": sensorDryContactCriticalDesc,
       "sensorDryContactNormalDesc": sensorDryContactNormalDesc,
       "sensorDryContactOnDesc": sensorDryContactOnDesc,
       "sensorDryContactOffDesc": sensorDryContactOffDesc,
       "sensorDryContactCriticalColor": sensorDryContactCriticalColor,
       "sensorDryContactNormalColor": sensorDryContactNormalColor,
       "sensorDryContactOnColor": sensorDryContactOnColor,
       "sensorDryContactOffColor": sensorDryContactOffColor,
       "sensor4to20mATable": sensor4to20mATable,
       "sensor4to20mAEntry": sensor4to20mAEntry,
       "sensor4to20mAIndex": sensor4to20mAIndex,
       "sensor4to20mADescription": sensor4to20mADescription,
       "sensor4to20mAValue": sensor4to20mAValue,
       "sensor4to20mAUnit": sensor4to20mAUnit,
       "sensor4to20mAStatus": sensor4to20mAStatus,
       "sensor4to20mAGoOffline": sensor4to20mAGoOffline,
       "sensor4to20mALowCritical": sensor4to20mALowCritical,
       "sensor4to20mALowWarning": sensor4to20mALowWarning,
       "sensor4to20mAHighWarning": sensor4to20mAHighWarning,
       "sensor4to20mAHighCritical": sensor4to20mAHighCritical,
       "sensor4to20mARearm": sensor4to20mARearm,
       "sensor4to20mADelayError": sensor4to20mADelayError,
       "sensor4to20mADelayNormal": sensor4to20mADelayNormal,
       "sensor4to20mADelayLowCritical": sensor4to20mADelayLowCritical,
       "sensor4to20mADelayLowWarning": sensor4to20mADelayLowWarning,
       "sensor4to20mADelayHighWarning": sensor4to20mADelayHighWarning,
       "sensor4to20mADelayHighCritical": sensor4to20mADelayHighCritical,
       "sensor4to20mARaw": sensor4to20mARaw,
       "sensor4to20mAOffset": sensor4to20mAOffset,
       "sensor4to20mAAmountMaxVoltage": sensor4to20mAAmountMaxVoltage,
       "sensor4to20mAAmountBaseVoltage": sensor4to20mAAmountBaseVoltage,
       "sensor4to20mAPort": sensor4to20mAPort,
       "sensor4to20mASubPort": sensor4to20mASubPort,
       "sensor4to20mADeviceIndex": sensor4to20mADeviceIndex,
       "sensor4to20mAMaxVoltage": sensor4to20mAMaxVoltage,
       "sensor4to20mABaseVoltage": sensor4to20mABaseVoltage,
       "sensor4to20mADisplayStyle": sensor4to20mADisplayStyle,
       "sensor4to20mAHighCriticalDesc": sensor4to20mAHighCriticalDesc,
       "sensor4to20mALowCriticalDesc": sensor4to20mALowCriticalDesc,
       "sensor4to20mANormalDesc": sensor4to20mANormalDesc,
       "sensor4to20mALowWarningDesc": sensor4to20mALowWarningDesc,
       "sensor4to20mAHighWarningDesc": sensor4to20mAHighWarningDesc,
       "sensor4to20mASensorErrorDesc": sensor4to20mASensorErrorDesc,
       "sensor4to20mAHighCriticalColor": sensor4to20mAHighCriticalColor,
       "sensor4to20mALowCriticalColor": sensor4to20mALowCriticalColor,
       "sensor4to20mANormalColor": sensor4to20mANormalColor,
       "sensor4to20mALowWarningColor": sensor4to20mALowWarningColor,
       "sensor4to20mAHighWarningColor": sensor4to20mAHighWarningColor,
       "sensor4to20mASensorErrorColor": sensor4to20mASensorErrorColor,
       "sensorDCvoltageTable": sensorDCvoltageTable,
       "sensorDCvoltageEntry": sensorDCvoltageEntry,
       "sensorDCvoltageIndex": sensorDCvoltageIndex,
       "sensorDCvoltageDescription": sensorDCvoltageDescription,
       "sensorDCvoltageValue": sensorDCvoltageValue,
       "sensorDCvoltageUnit": sensorDCvoltageUnit,
       "sensorDCvoltageStatus": sensorDCvoltageStatus,
       "sensorDCvoltageGoOffline": sensorDCvoltageGoOffline,
       "sensorDCvoltageLowCritical": sensorDCvoltageLowCritical,
       "sensorDCvoltageLowWarning": sensorDCvoltageLowWarning,
       "sensorDCvoltageHighWarning": sensorDCvoltageHighWarning,
       "sensorDCvoltageHighCritical": sensorDCvoltageHighCritical,
       "sensorDCvoltageRearm": sensorDCvoltageRearm,
       "sensorDCvoltageDelayError": sensorDCvoltageDelayError,
       "sensorDCvoltageDelayNormal": sensorDCvoltageDelayNormal,
       "sensorDCvoltageDelayLowCritical": sensorDCvoltageDelayLowCritical,
       "sensorDCvoltageDelayLowWarning": sensorDCvoltageDelayLowWarning,
       "sensorDCvoltageDelayHighWarning": sensorDCvoltageDelayHighWarning,
       "sensorDCvoltageDelayHighCritical": sensorDCvoltageDelayHighCritical,
       "sensorDCvoltageRaw": sensorDCvoltageRaw,
       "sensorDCvoltageOffset": sensorDCvoltageOffset,
       "sensorDCvoltageJumper": sensorDCvoltageJumper,
       "sensorDCvoltageAmountMaxVoltage": sensorDCvoltageAmountMaxVoltage,
       "sensorDCvoltageAmountBaseVoltage": sensorDCvoltageAmountBaseVoltage,
       "sensorDCvoltagePort": sensorDCvoltagePort,
       "sensorDCvoltageSubPort": sensorDCvoltageSubPort,
       "sensorDCvoltageDeviceIndex": sensorDCvoltageDeviceIndex,
       "sensorDCvoltageMaxVoltage": sensorDCvoltageMaxVoltage,
       "sensorDCvoltageBaseVoltage": sensorDCvoltageBaseVoltage,
       "sensorDCvoltageDisplayStyle": sensorDCvoltageDisplayStyle,
       "sensorDCvoltageHighCriticalDesc": sensorDCvoltageHighCriticalDesc,
       "sensorDCvoltageLowCriticalDesc": sensorDCvoltageLowCriticalDesc,
       "sensorDCvoltageNormalDesc": sensorDCvoltageNormalDesc,
       "sensorDCvoltageLowWarningDesc": sensorDCvoltageLowWarningDesc,
       "sensorDCvoltageHighWarningDesc": sensorDCvoltageHighWarningDesc,
       "sensorDCvoltageSensorErrorDesc": sensorDCvoltageSensorErrorDesc,
       "sensorDCvoltageHighCriticalColor": sensorDCvoltageHighCriticalColor,
       "sensorDCvoltageLowCriticalColor": sensorDCvoltageLowCriticalColor,
       "sensorDCvoltageNormalColor": sensorDCvoltageNormalColor,
       "sensorDCvoltageLowWarningColor": sensorDCvoltageLowWarningColor,
       "sensorDCvoltageHighWarningColor": sensorDCvoltageHighWarningColor,
       "sensorDCvoltageSensorErrorColor": sensorDCvoltageSensorErrorColor,
       "sensorAirflowTable": sensorAirflowTable,
       "sensorAirflowEntry": sensorAirflowEntry,
       "sensorAirflowIndex": sensorAirflowIndex,
       "sensorAirflowDescription": sensorAirflowDescription,
       "sensorAirflowValue": sensorAirflowValue,
       "sensorAirflowStatus": sensorAirflowStatus,
       "sensorAirflowGoOffline": sensorAirflowGoOffline,
       "sensorAirflowLowCritical": sensorAirflowLowCritical,
       "sensorAirflowLowWarning": sensorAirflowLowWarning,
       "sensorAirflowHighWarning": sensorAirflowHighWarning,
       "sensorAirflowHighCritical": sensorAirflowHighCritical,
       "sensorAirflowRearm": sensorAirflowRearm,
       "sensorAirflowDelayError": sensorAirflowDelayError,
       "sensorAirflowDelayNormal": sensorAirflowDelayNormal,
       "sensorAirflowDelayLowCritical": sensorAirflowDelayLowCritical,
       "sensorAirflowDelayLowWarning": sensorAirflowDelayLowWarning,
       "sensorAirflowDelayHighWarning": sensorAirflowDelayHighWarning,
       "sensorAirflowDelayHighCritical": sensorAirflowDelayHighCritical,
       "sensorAirflowRaw": sensorAirflowRaw,
       "sensorAirflowPort": sensorAirflowPort,
       "sensorAirflowSubPort": sensorAirflowSubPort,
       "sensorAirflowDeviceIndex": sensorAirflowDeviceIndex,
       "sensorAirflowDisplayStyle": sensorAirflowDisplayStyle,
       "sensorAirflowHighCriticalDesc": sensorAirflowHighCriticalDesc,
       "sensorAirflowLowCriticalDesc": sensorAirflowLowCriticalDesc,
       "sensorAirflowNormalDesc": sensorAirflowNormalDesc,
       "sensorAirflowLowWarningDesc": sensorAirflowLowWarningDesc,
       "sensorAirflowHighWarningDesc": sensorAirflowHighWarningDesc,
       "sensorAirflowSensorErrorDesc": sensorAirflowSensorErrorDesc,
       "sensorAirflowHighCriticalColor": sensorAirflowHighCriticalColor,
       "sensorAirflowLowCriticalColor": sensorAirflowLowCriticalColor,
       "sensorAirflowNormalColor": sensorAirflowNormalColor,
       "sensorAirflowLowWarningColor": sensorAirflowLowWarningColor,
       "sensorAirflowHighWarningColor": sensorAirflowHighWarningColor,
       "sensorAirflowSensorErrorColor": sensorAirflowSensorErrorColor,
       "sensorMotionTable": sensorMotionTable,
       "sensorMotionEntry": sensorMotionEntry,
       "sensorMotionIndex": sensorMotionIndex,
       "sensorMotionDescription": sensorMotionDescription,
       "sensorMotionStatus": sensorMotionStatus,
       "sensorMotionGoOffline": sensorMotionGoOffline,
       "sensorMotionPort": sensorMotionPort,
       "sensorMotionSubPort": sensorMotionSubPort,
       "sensorMotionDeviceIndex": sensorMotionDeviceIndex,
       "sensorMotionCriticalDesc": sensorMotionCriticalDesc,
       "sensorMotionNormalDesc": sensorMotionNormalDesc,
       "sensorMotionCriticalColor": sensorMotionCriticalColor,
       "sensorMotionNormalColor": sensorMotionNormalColor,
       "sensorWaterTable": sensorWaterTable,
       "sensorWaterEntry": sensorWaterEntry,
       "sensorWaterIndex": sensorWaterIndex,
       "sensorWaterDescription": sensorWaterDescription,
       "sensorWaterStatus": sensorWaterStatus,
       "sensorWaterGoOffline": sensorWaterGoOffline,
       "sensorWaterPort": sensorWaterPort,
       "sensorWaterSubPort": sensorWaterSubPort,
       "sensorWaterDeviceIndex": sensorWaterDeviceIndex,
       "sensorWaterCriticalDesc": sensorWaterCriticalDesc,
       "sensorWaterNormalDesc": sensorWaterNormalDesc,
       "sensorWaterCriticalColor": sensorWaterCriticalColor,
       "sensorWaterNormalColor": sensorWaterNormalColor,
       "sensorSecurityTable": sensorSecurityTable,
       "sensorSecurityEntry": sensorSecurityEntry,
       "sensorSecurityIndex": sensorSecurityIndex,
       "sensorSecurityDescription": sensorSecurityDescription,
       "sensorSecurityStatus": sensorSecurityStatus,
       "sensorSecurityGoOffline": sensorSecurityGoOffline,
       "sensorSecurityPort": sensorSecurityPort,
       "sensorSecuritySubPort": sensorSecuritySubPort,
       "sensorSecurityDeviceIndex": sensorSecurityDeviceIndex,
       "sensorSecurityCriticalDesc": sensorSecurityCriticalDesc,
       "sensorSecurityNormalDesc": sensorSecurityNormalDesc,
       "sensorSecurityCriticalColor": sensorSecurityCriticalColor,
       "sensorSecurityNormalColor": sensorSecurityNormalColor,
       "sensorSirenTable": sensorSirenTable,
       "sensorSirenEntry": sensorSirenEntry,
       "sensorSirenIndex": sensorSirenIndex,
       "sensorSirenDescription": sensorSirenDescription,
       "sensorSirenStatus": sensorSirenStatus,
       "sensorSirenGoOffline": sensorSirenGoOffline,
       "sensorSirenControlMode": sensorSirenControlMode,
       "sensorSirenManualCycleTime": sensorSirenManualCycleTime,
       "sensorSirenManualAction": sensorSirenManualAction,
       "sensorSirenPort": sensorSirenPort,
       "sensorSirenSubPort": sensorSirenSubPort,
       "sensorSirenDeviceIndex": sensorSirenDeviceIndex,
       "sensorSirenOnDesc": sensorSirenOnDesc,
       "sensorSirenOffDesc": sensorSirenOffDesc,
       "sensorSirenOnColor": sensorSirenOnColor,
       "sensorSirenOffColor": sensorSirenOffColor,
       "sensorRelayTable": sensorRelayTable,
       "sensorRelayEntry": sensorRelayEntry,
       "sensorRelayIndex": sensorRelayIndex,
       "sensorRelayDescription": sensorRelayDescription,
       "sensorRelayType": sensorRelayType,
       "sensorRelayStatus": sensorRelayStatus,
       "sensorRelayGoOffline": sensorRelayGoOffline,
       "sensorRelayControlMode": sensorRelayControlMode,
       "sensorRelayManualCycleTime": sensorRelayManualCycleTime,
       "sensorRelayManualAction": sensorRelayManualAction,
       "sensorRelayPort": sensorRelayPort,
       "sensorRelaySubPort": sensorRelaySubPort,
       "sensorRelayDeviceIndex": sensorRelayDeviceIndex,
       "sensorRelayOnDesc": sensorRelayOnDesc,
       "sensorRelayOffDesc": sensorRelayOffDesc,
       "sensorRelayOnColor": sensorRelayOnColor,
       "sensorRelayOffColor": sensorRelayOffColor,
       "sensorACvoltageTable": sensorACvoltageTable,
       "sensorACvoltageEntry": sensorACvoltageEntry,
       "sensorACvoltageIndex": sensorACvoltageIndex,
       "sensorACvoltageDescription": sensorACvoltageDescription,
       "sensorACvoltageStatus": sensorACvoltageStatus,
       "sensorACvoltageGoOffline": sensorACvoltageGoOffline,
       "sensorACvoltagePort": sensorACvoltagePort,
       "sensorACvoltageSubPort": sensorACvoltageSubPort,
       "sensorACvoltageDeviceIndex": sensorACvoltageDeviceIndex,
       "sensorACvoltageCriticalDesc": sensorACvoltageCriticalDesc,
       "sensorACvoltageNormalDesc": sensorACvoltageNormalDesc,
       "sensorACvoltageCriticalColor": sensorACvoltageCriticalColor,
       "sensorACvoltageNormalColor": sensorACvoltageNormalColor,
       "sensorSmokeTable": sensorSmokeTable,
       "sensorSmokeEntry": sensorSmokeEntry,
       "sensorSmokeIndex": sensorSmokeIndex,
       "sensorSmokeDescription": sensorSmokeDescription,
       "sensorSmokeStatus": sensorSmokeStatus,
       "sensorSmokeGoOffline": sensorSmokeGoOffline,
       "sensorSmokePort": sensorSmokePort,
       "sensorSmokeSubPort": sensorSmokeSubPort,
       "sensorSmokeDeviceIndex": sensorSmokeDeviceIndex,
       "sensorSmokeCriticalDesc": sensorSmokeCriticalDesc,
       "sensorSmokeNormalDesc": sensorSmokeNormalDesc,
       "sensorSmokeCriticalColor": sensorSmokeCriticalColor,
       "sensorSmokeNormalColor": sensorSmokeNormalColor,
       "sensorThermostatTable": sensorThermostatTable,
       "sensorThermostatEntry": sensorThermostatEntry,
       "sensorThermostatIndex": sensorThermostatIndex,
       "sensorThermostatDescription": sensorThermostatDescription,
       "sensorThermostatDegree": sensorThermostatDegree,
       "sensorThermostatStatus": sensorThermostatStatus,
       "sensorThermostatGoOffline": sensorThermostatGoOffline,
       "sensorThermostatLowCritical": sensorThermostatLowCritical,
       "sensorThermostatLowWarning": sensorThermostatLowWarning,
       "sensorThermostatHighWarning": sensorThermostatHighWarning,
       "sensorThermostatHighCritical": sensorThermostatHighCritical,
       "sensorThermostatRearm": sensorThermostatRearm,
       "sensorThermostatDelayError": sensorThermostatDelayError,
       "sensorThermostatDelayNormal": sensorThermostatDelayNormal,
       "sensorThermostatDelayLowCritical": sensorThermostatDelayLowCritical,
       "sensorThermostatDelayLowWarning": sensorThermostatDelayLowWarning,
       "sensorThermostatDelayHighWarning": sensorThermostatDelayHighWarning,
       "sensorThermostatDelayHighCritical": sensorThermostatDelayHighCritical,
       "sensorThermostatPort": sensorThermostatPort,
       "sensorThermostatSubPort": sensorThermostatSubPort,
       "sensorThermostatDeviceIndex": sensorThermostatDeviceIndex,
       "sensorThermostatDisplayStyle": sensorThermostatDisplayStyle,
       "sensorThermostatHighCriticalDesc": sensorThermostatHighCriticalDesc,
       "sensorThermostatLowCriticalDesc": sensorThermostatLowCriticalDesc,
       "sensorThermostatNormalDesc": sensorThermostatNormalDesc,
       "sensorThermostatLowWarningDesc": sensorThermostatLowWarningDesc,
       "sensorThermostatHighWarningDesc": sensorThermostatHighWarningDesc,
       "sensorThermostatSensorErrorDesc": sensorThermostatSensorErrorDesc,
       "sensorThermostatHighCriticalColor": sensorThermostatHighCriticalColor,
       "sensorThermostatLowCriticalColor": sensorThermostatLowCriticalColor,
       "sensorThermostatNormalColor": sensorThermostatNormalColor,
       "sensorThermostatLowWarningColor": sensorThermostatLowWarningColor,
       "sensorThermostatHighWarningColor": sensorThermostatHighWarningColor,
       "sensorThermostatSensorErrorColor": sensorThermostatSensorErrorColor,
       "sensorWaterRopeTable": sensorWaterRopeTable,
       "sensorWaterRopeEntry": sensorWaterRopeEntry,
       "sensorWaterRopeIndex": sensorWaterRopeIndex,
       "sensorWaterRopeDescription": sensorWaterRopeDescription,
       "sensorWaterRopeLeakLocation": sensorWaterRopeLeakLocation,
       "sensorWaterRopeUnit": sensorWaterRopeUnit,
       "sensorWaterRopeStatus": sensorWaterRopeStatus,
       "sensorWaterRopeGoOffline": sensorWaterRopeGoOffline,
       "sensorWaterRopeRaw": sensorWaterRopeRaw,
       "sensorWaterRopeDeviceIndex": sensorWaterRopeDeviceIndex,
       "sensorWaterRopeCriticalDesc": sensorWaterRopeCriticalDesc,
       "sensorWaterRopeNormalDesc": sensorWaterRopeNormalDesc,
       "sensorWaterRopeSensorErrorDesc": sensorWaterRopeSensorErrorDesc,
       "sensorWaterRopeCriticalColor": sensorWaterRopeCriticalColor,
       "sensorWaterRopeNormalColor": sensorWaterRopeNormalColor,
       "sensorWaterRopeSensorErrorColor": sensorWaterRopeSensorErrorColor,
       "sensorWaterRopeLength": sensorWaterRopeLength,
       "sensorWaterRopeImpedance": sensorWaterRopeImpedance,
       "sensorWaterRopeType": sensorWaterRopeType,
       "sensorPowerTable": sensorPowerTable,
       "sensorPowerEntry": sensorPowerEntry,
       "sensorPowerIndex": sensorPowerIndex,
       "sensorPowerDescription": sensorPowerDescription,
       "sensorPowerValue": sensorPowerValue,
       "sensorPowerUnit": sensorPowerUnit,
       "sensorPowerStatus": sensorPowerStatus,
       "sensorPowerGoOffline": sensorPowerGoOffline,
       "sensorPowerLowCritical": sensorPowerLowCritical,
       "sensorPowerLowWarning": sensorPowerLowWarning,
       "sensorPowerHighWarning": sensorPowerHighWarning,
       "sensorPowerHighCritical": sensorPowerHighCritical,
       "sensorPowerRearm": sensorPowerRearm,
       "sensorPowerDelayError": sensorPowerDelayError,
       "sensorPowerDelayNormal": sensorPowerDelayNormal,
       "sensorPowerDelayLowCritical": sensorPowerDelayLowCritical,
       "sensorPowerDelayLowWarning": sensorPowerDelayLowWarning,
       "sensorPowerDelayHighWarning": sensorPowerDelayHighWarning,
       "sensorPowerDelayHighCritical": sensorPowerDelayHighCritical,
       "sensorPowerPort": sensorPowerPort,
       "sensorPowerSubPort": sensorPowerSubPort,
       "sensorPowerDeviceIndex": sensorPowerDeviceIndex,
       "sensorPowerTimeOut": sensorPowerTimeOut,
       "sensorPowerInterval": sensorPowerInterval,
       "sensorPowerErrorRetryNum": sensorPowerErrorRetryNum,
       "sensorPowerMaxValue": sensorPowerMaxValue,
       "sensorPowerMinValue": sensorPowerMinValue,
       "sensorPowerDisplayStyle": sensorPowerDisplayStyle,
       "sensorPowerHighCriticalDesc": sensorPowerHighCriticalDesc,
       "sensorPowerLowCriticalDesc": sensorPowerLowCriticalDesc,
       "sensorPowerNormalDesc": sensorPowerNormalDesc,
       "sensorPowerLowWarningDesc": sensorPowerLowWarningDesc,
       "sensorPowerHighWarningDesc": sensorPowerHighWarningDesc,
       "sensorPowerSensorErrorDesc": sensorPowerSensorErrorDesc,
       "sensorPowerHighCriticalColor": sensorPowerHighCriticalColor,
       "sensorPowerLowCriticalColor": sensorPowerLowCriticalColor,
       "sensorPowerNormalColor": sensorPowerNormalColor,
       "sensorPowerLowWarningColor": sensorPowerLowWarningColor,
       "sensorPowerHighWarningColor": sensorPowerHighWarningColor,
       "sensorPowerSensorErrorColor": sensorPowerSensorErrorColor,
       "sensorFuelTable": sensorFuelTable,
       "sensorFuelEntry": sensorFuelEntry,
       "sensorFuelIndex": sensorFuelIndex,
       "sensorFuelDescription": sensorFuelDescription,
       "sensorFuelValue": sensorFuelValue,
       "sensorFuelUnit": sensorFuelUnit,
       "sensorFuelStatus": sensorFuelStatus,
       "sensorFuelGoOffline": sensorFuelGoOffline,
       "sensorFuelLowCritical": sensorFuelLowCritical,
       "sensorFuelLowWarning": sensorFuelLowWarning,
       "sensorFuelHighWarning": sensorFuelHighWarning,
       "sensorFuelHighCritical": sensorFuelHighCritical,
       "sensorFuelRearm": sensorFuelRearm,
       "sensorFuelDelayError": sensorFuelDelayError,
       "sensorFuelDelayNormal": sensorFuelDelayNormal,
       "sensorFuelDelayLowCritical": sensorFuelDelayLowCritical,
       "sensorFuelDelayLowWarning": sensorFuelDelayLowWarning,
       "sensorFuelDelayHighWarning": sensorFuelDelayHighWarning,
       "sensorFuelDelayHighCritical": sensorFuelDelayHighCritical,
       "sensorFuelRaw": sensorFuelRaw,
       "sensorFuelAmountMaxValue": sensorFuelAmountMaxValue,
       "sensorFuelAmountBaseValue": sensorFuelAmountBaseValue,
       "sensorFuelDeviceIndex": sensorFuelDeviceIndex,
       "sensorFuelDisplayStyle": sensorFuelDisplayStyle,
       "sensorFuelHighCriticalDesc": sensorFuelHighCriticalDesc,
       "sensorFuelLowCriticalDesc": sensorFuelLowCriticalDesc,
       "sensorFuelNormalDesc": sensorFuelNormalDesc,
       "sensorFuelLowWarningDesc": sensorFuelLowWarningDesc,
       "sensorFuelHighWarningDesc": sensorFuelHighWarningDesc,
       "sensorFuelSensorErrorDesc": sensorFuelSensorErrorDesc,
       "sensorFuelHighCriticalColor": sensorFuelHighCriticalColor,
       "sensorFuelLowCriticalColor": sensorFuelLowCriticalColor,
       "sensorFuelNormalColor": sensorFuelNormalColor,
       "sensorFuelLowWarningColor": sensorFuelLowWarningColor,
       "sensorFuelHighWarningColor": sensorFuelHighWarningColor,
       "sensorFuelSensorErrorColor": sensorFuelSensorErrorColor,
       "sensorTankSenderTable": sensorTankSenderTable,
       "sensorTankSenderEntry": sensorTankSenderEntry,
       "sensorTankSenderIndex": sensorTankSenderIndex,
       "sensorTankSenderDescription": sensorTankSenderDescription,
       "sensorTankSenderValue": sensorTankSenderValue,
       "sensorTankSenderUnit": sensorTankSenderUnit,
       "sensorTankSenderStatus": sensorTankSenderStatus,
       "sensorTankSenderGoOffline": sensorTankSenderGoOffline,
       "sensorTankSenderLowCritical": sensorTankSenderLowCritical,
       "sensorTankSenderLowWarning": sensorTankSenderLowWarning,
       "sensorTankSenderHighWarning": sensorTankSenderHighWarning,
       "sensorTankSenderHighCritical": sensorTankSenderHighCritical,
       "sensorTankSenderRearm": sensorTankSenderRearm,
       "sensorTankSenderDelayError": sensorTankSenderDelayError,
       "sensorTankSenderDelayNormal": sensorTankSenderDelayNormal,
       "sensorTankSenderDelayLowCritical": sensorTankSenderDelayLowCritical,
       "sensorTankSenderDelayLowWarning": sensorTankSenderDelayLowWarning,
       "sensorTankSenderDelayHighWarning": sensorTankSenderDelayHighWarning,
       "sensorTankSenderDelayHighCritical": sensorTankSenderDelayHighCritical,
       "sensorTankSenderRaw": sensorTankSenderRaw,
       "sensorTankSenderDeviceIndex": sensorTankSenderDeviceIndex,
       "sensorTankSenderDisplayStyle": sensorTankSenderDisplayStyle,
       "sensorTankSenderHighCriticalDesc": sensorTankSenderHighCriticalDesc,
       "sensorTankSenderLowCriticalDesc": sensorTankSenderLowCriticalDesc,
       "sensorTankSenderNormalDesc": sensorTankSenderNormalDesc,
       "sensorTankSenderLowWarningDesc": sensorTankSenderLowWarningDesc,
       "sensorTankSenderHighWarningDesc": sensorTankSenderHighWarningDesc,
       "sensorTankSenderSensorErrorDesc": sensorTankSenderSensorErrorDesc,
       "sensorTankSenderHighCriticalColor": sensorTankSenderHighCriticalColor,
       "sensorTankSenderLowCriticalColor": sensorTankSenderLowCriticalColor,
       "sensorTankSenderNormalColor": sensorTankSenderNormalColor,
       "sensorTankSenderLowWarningColor": sensorTankSenderLowWarningColor,
       "sensorTankSenderHighWarningColor": sensorTankSenderHighWarningColor,
       "sensorTankSenderSensorErrorColor": sensorTankSenderSensorErrorColor}
)
