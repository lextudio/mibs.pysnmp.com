#
# PySNMP MIB module ETHERLIKE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/tin/Dev/mibs.snmplabs.com/asn1/ETHERLIKE-MIB
# Produced by pysmi-0.3.4 at Fri Jan 31 21:31:03 2020
# On host bier platform Linux version 5.4.0-3-amd64 by user tin
# Using Python version 3.7.6 (default, Jan 19 2020, 22:34:52) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Counter64, transmission, Integer32, ObjectIdentity, Gauge32, Bits, NotificationType, MibIdentifier, mib_2, TimeTicks, Unsigned32, IpAddress, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter64", "transmission", "Integer32", "ObjectIdentity", "Gauge32", "Bits", "NotificationType", "MibIdentifier", "mib-2", "TimeTicks", "Unsigned32", "IpAddress", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
etherMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 35))
etherMIB.setRevisions(('1999-08-24 04:00', '1998-06-03 21:50', '1994-02-03 04:00',))
if mibBuilder.loadTexts: etherMIB.setLastUpdated('9908240400Z')
if mibBuilder.loadTexts: etherMIB.setOrganization('IETF Ethernet Interfaces and Hub MIB Working Group')
etherMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 35, 1))
dot3 = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7))
dot3StatsTable = MibTable((1, 3, 6, 1, 2, 1, 10, 7, 2), )
if mibBuilder.loadTexts: dot3StatsTable.setStatus('current')
dot3StatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 7, 2, 1), ).setIndexNames((0, "ETHERLIKE-MIB", "dot3StatsIndex"))
if mibBuilder.loadTexts: dot3StatsEntry.setStatus('current')
dot3StatsIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsIndex.setStatus('current')
dot3StatsAlignmentErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsAlignmentErrors.setStatus('current')
dot3StatsFCSErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsFCSErrors.setStatus('current')
dot3StatsSingleCollisionFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsSingleCollisionFrames.setStatus('current')
dot3StatsMultipleCollisionFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsMultipleCollisionFrames.setStatus('current')
dot3StatsSQETestErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsSQETestErrors.setStatus('current')
dot3StatsDeferredTransmissions = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsDeferredTransmissions.setStatus('current')
dot3StatsLateCollisions = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsLateCollisions.setStatus('current')
dot3StatsExcessiveCollisions = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsExcessiveCollisions.setStatus('current')
dot3StatsInternalMacTransmitErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsInternalMacTransmitErrors.setStatus('current')
dot3StatsCarrierSenseErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsCarrierSenseErrors.setStatus('current')
dot3StatsFrameTooLongs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsFrameTooLongs.setStatus('current')
dot3StatsInternalMacReceiveErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsInternalMacReceiveErrors.setStatus('current')
dot3StatsEtherChipSet = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 17), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsEtherChipSet.setStatus('deprecated')
dot3StatsSymbolErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsSymbolErrors.setStatus('current')
dot3StatsDuplexStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("halfDuplex", 2), ("fullDuplex", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3StatsDuplexStatus.setStatus('current')
dot3CollTable = MibTable((1, 3, 6, 1, 2, 1, 10, 7, 5), )
if mibBuilder.loadTexts: dot3CollTable.setStatus('current')
dot3CollEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 7, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ETHERLIKE-MIB", "dot3CollCount"))
if mibBuilder.loadTexts: dot3CollEntry.setStatus('current')
dot3CollCount = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: dot3CollCount.setStatus('current')
dot3CollFrequencies = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3CollFrequencies.setStatus('current')
dot3ControlTable = MibTable((1, 3, 6, 1, 2, 1, 10, 7, 9), )
if mibBuilder.loadTexts: dot3ControlTable.setStatus('current')
dot3ControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 7, 9, 1), ).setIndexNames((0, "ETHERLIKE-MIB", "dot3StatsIndex"))
if mibBuilder.loadTexts: dot3ControlEntry.setStatus('current')
dot3ControlFunctionsSupported = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 9, 1, 1), Bits().clone(namedValues=NamedValues(("pause", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3ControlFunctionsSupported.setStatus('current')
dot3ControlInUnknownOpcodes = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 9, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3ControlInUnknownOpcodes.setStatus('current')
dot3PauseTable = MibTable((1, 3, 6, 1, 2, 1, 10, 7, 10), )
if mibBuilder.loadTexts: dot3PauseTable.setStatus('current')
dot3PauseEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 7, 10, 1), ).setIndexNames((0, "ETHERLIKE-MIB", "dot3StatsIndex"))
if mibBuilder.loadTexts: dot3PauseEntry.setStatus('current')
dot3PauseAdminMode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("enabledXmit", 2), ("enabledRcv", 3), ("enabledXmitAndRcv", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3PauseAdminMode.setStatus('current')
dot3PauseOperMode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("enabledXmit", 2), ("enabledRcv", 3), ("enabledXmitAndRcv", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3PauseOperMode.setStatus('current')
dot3InPauseFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 10, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3InPauseFrames.setStatus('current')
dot3OutPauseFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 7, 10, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OutPauseFrames.setStatus('current')
dot3Tests = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 6))
dot3Errors = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 7, 7))
dot3TestTdr = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 6, 1))
if mibBuilder.loadTexts: dot3TestTdr.setStatus('current')
dot3TestLoopBack = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 6, 2))
if mibBuilder.loadTexts: dot3TestLoopBack.setStatus('current')
dot3ErrorInitError = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 7, 1))
if mibBuilder.loadTexts: dot3ErrorInitError.setStatus('current')
dot3ErrorLoopbackError = ObjectIdentity((1, 3, 6, 1, 2, 1, 10, 7, 7, 2))
if mibBuilder.loadTexts: dot3ErrorLoopbackError.setStatus('current')
etherConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 35, 2))
etherGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 35, 2, 1))
etherCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 35, 2, 2))
etherCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 35, 2, 2, 1)).setObjects(("ETHERLIKE-MIB", "etherStatsGroup"), ("ETHERLIKE-MIB", "etherCollisionTableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etherCompliance = etherCompliance.setStatus('deprecated')
ether100MbsCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 35, 2, 2, 2)).setObjects(("ETHERLIKE-MIB", "etherStats100MbsGroup"), ("ETHERLIKE-MIB", "etherCollisionTableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ether100MbsCompliance = ether100MbsCompliance.setStatus('deprecated')
dot3Compliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 35, 2, 2, 3)).setObjects(("ETHERLIKE-MIB", "etherStatsBaseGroup"), ("ETHERLIKE-MIB", "etherDuplexGroup"), ("ETHERLIKE-MIB", "etherStatsLowSpeedGroup"), ("ETHERLIKE-MIB", "etherStatsHighSpeedGroup"), ("ETHERLIKE-MIB", "etherControlGroup"), ("ETHERLIKE-MIB", "etherControlPauseGroup"), ("ETHERLIKE-MIB", "etherCollisionTableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3Compliance = dot3Compliance.setStatus('current')
etherStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 35, 2, 1, 1)).setObjects(("ETHERLIKE-MIB", "dot3StatsIndex"), ("ETHERLIKE-MIB", "dot3StatsAlignmentErrors"), ("ETHERLIKE-MIB", "dot3StatsFCSErrors"), ("ETHERLIKE-MIB", "dot3StatsSingleCollisionFrames"), ("ETHERLIKE-MIB", "dot3StatsMultipleCollisionFrames"), ("ETHERLIKE-MIB", "dot3StatsSQETestErrors"), ("ETHERLIKE-MIB", "dot3StatsDeferredTransmissions"), ("ETHERLIKE-MIB", "dot3StatsLateCollisions"), ("ETHERLIKE-MIB", "dot3StatsExcessiveCollisions"), ("ETHERLIKE-MIB", "dot3StatsInternalMacTransmitErrors"), ("ETHERLIKE-MIB", "dot3StatsCarrierSenseErrors"), ("ETHERLIKE-MIB", "dot3StatsFrameTooLongs"), ("ETHERLIKE-MIB", "dot3StatsInternalMacReceiveErrors"), ("ETHERLIKE-MIB", "dot3StatsEtherChipSet"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etherStatsGroup = etherStatsGroup.setStatus('deprecated')
etherCollisionTableGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 35, 2, 1, 2)).setObjects(("ETHERLIKE-MIB", "dot3CollFrequencies"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etherCollisionTableGroup = etherCollisionTableGroup.setStatus('current')
etherStats100MbsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 35, 2, 1, 3)).setObjects(("ETHERLIKE-MIB", "dot3StatsIndex"), ("ETHERLIKE-MIB", "dot3StatsAlignmentErrors"), ("ETHERLIKE-MIB", "dot3StatsFCSErrors"), ("ETHERLIKE-MIB", "dot3StatsSingleCollisionFrames"), ("ETHERLIKE-MIB", "dot3StatsMultipleCollisionFrames"), ("ETHERLIKE-MIB", "dot3StatsDeferredTransmissions"), ("ETHERLIKE-MIB", "dot3StatsLateCollisions"), ("ETHERLIKE-MIB", "dot3StatsExcessiveCollisions"), ("ETHERLIKE-MIB", "dot3StatsInternalMacTransmitErrors"), ("ETHERLIKE-MIB", "dot3StatsCarrierSenseErrors"), ("ETHERLIKE-MIB", "dot3StatsFrameTooLongs"), ("ETHERLIKE-MIB", "dot3StatsInternalMacReceiveErrors"), ("ETHERLIKE-MIB", "dot3StatsEtherChipSet"), ("ETHERLIKE-MIB", "dot3StatsSymbolErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etherStats100MbsGroup = etherStats100MbsGroup.setStatus('deprecated')
etherStatsBaseGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 35, 2, 1, 4)).setObjects(("ETHERLIKE-MIB", "dot3StatsIndex"), ("ETHERLIKE-MIB", "dot3StatsAlignmentErrors"), ("ETHERLIKE-MIB", "dot3StatsFCSErrors"), ("ETHERLIKE-MIB", "dot3StatsSingleCollisionFrames"), ("ETHERLIKE-MIB", "dot3StatsMultipleCollisionFrames"), ("ETHERLIKE-MIB", "dot3StatsDeferredTransmissions"), ("ETHERLIKE-MIB", "dot3StatsLateCollisions"), ("ETHERLIKE-MIB", "dot3StatsExcessiveCollisions"), ("ETHERLIKE-MIB", "dot3StatsInternalMacTransmitErrors"), ("ETHERLIKE-MIB", "dot3StatsCarrierSenseErrors"), ("ETHERLIKE-MIB", "dot3StatsFrameTooLongs"), ("ETHERLIKE-MIB", "dot3StatsInternalMacReceiveErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etherStatsBaseGroup = etherStatsBaseGroup.setStatus('current')
etherStatsLowSpeedGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 35, 2, 1, 5)).setObjects(("ETHERLIKE-MIB", "dot3StatsSQETestErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etherStatsLowSpeedGroup = etherStatsLowSpeedGroup.setStatus('current')
etherStatsHighSpeedGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 35, 2, 1, 6)).setObjects(("ETHERLIKE-MIB", "dot3StatsSymbolErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etherStatsHighSpeedGroup = etherStatsHighSpeedGroup.setStatus('current')
etherDuplexGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 35, 2, 1, 7)).setObjects(("ETHERLIKE-MIB", "dot3StatsDuplexStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etherDuplexGroup = etherDuplexGroup.setStatus('current')
etherControlGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 35, 2, 1, 8)).setObjects(("ETHERLIKE-MIB", "dot3ControlFunctionsSupported"), ("ETHERLIKE-MIB", "dot3ControlInUnknownOpcodes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etherControlGroup = etherControlGroup.setStatus('current')
etherControlPauseGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 35, 2, 1, 9)).setObjects(("ETHERLIKE-MIB", "dot3PauseAdminMode"), ("ETHERLIKE-MIB", "dot3PauseOperMode"), ("ETHERLIKE-MIB", "dot3InPauseFrames"), ("ETHERLIKE-MIB", "dot3OutPauseFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etherControlPauseGroup = etherControlPauseGroup.setStatus('current')
mibBuilder.exportSymbols("ETHERLIKE-MIB", dot3StatsSingleCollisionFrames=dot3StatsSingleCollisionFrames, dot3StatsTable=dot3StatsTable, etherMIBObjects=etherMIBObjects, dot3StatsEntry=dot3StatsEntry, dot3ControlFunctionsSupported=dot3ControlFunctionsSupported, etherStatsLowSpeedGroup=etherStatsLowSpeedGroup, etherMIB=etherMIB, etherGroups=etherGroups, ether100MbsCompliance=ether100MbsCompliance, dot3StatsCarrierSenseErrors=dot3StatsCarrierSenseErrors, dot3StatsInternalMacReceiveErrors=dot3StatsInternalMacReceiveErrors, dot3CollCount=dot3CollCount, etherStatsBaseGroup=etherStatsBaseGroup, etherConformance=etherConformance, dot3ErrorLoopbackError=dot3ErrorLoopbackError, dot3StatsDeferredTransmissions=dot3StatsDeferredTransmissions, etherStatsHighSpeedGroup=etherStatsHighSpeedGroup, dot3StatsDuplexStatus=dot3StatsDuplexStatus, dot3StatsMultipleCollisionFrames=dot3StatsMultipleCollisionFrames, dot3StatsFCSErrors=dot3StatsFCSErrors, dot3TestTdr=dot3TestTdr, dot3StatsSQETestErrors=dot3StatsSQETestErrors, dot3StatsEtherChipSet=dot3StatsEtherChipSet, dot3StatsAlignmentErrors=dot3StatsAlignmentErrors, dot3PauseEntry=dot3PauseEntry, dot3ControlTable=dot3ControlTable, dot3PauseAdminMode=dot3PauseAdminMode, dot3=dot3, dot3StatsExcessiveCollisions=dot3StatsExcessiveCollisions, dot3Errors=dot3Errors, dot3PauseOperMode=dot3PauseOperMode, etherCompliances=etherCompliances, etherCompliance=etherCompliance, dot3Compliance=dot3Compliance, dot3InPauseFrames=dot3InPauseFrames, etherStats100MbsGroup=etherStats100MbsGroup, dot3PauseTable=dot3PauseTable, dot3StatsSymbolErrors=dot3StatsSymbolErrors, dot3CollFrequencies=dot3CollFrequencies, dot3StatsInternalMacTransmitErrors=dot3StatsInternalMacTransmitErrors, dot3ControlInUnknownOpcodes=dot3ControlInUnknownOpcodes, etherCollisionTableGroup=etherCollisionTableGroup, dot3StatsLateCollisions=dot3StatsLateCollisions, etherControlPauseGroup=etherControlPauseGroup, dot3Tests=dot3Tests, dot3ErrorInitError=dot3ErrorInitError, dot3CollEntry=dot3CollEntry, dot3OutPauseFrames=dot3OutPauseFrames, dot3StatsIndex=dot3StatsIndex, dot3ControlEntry=dot3ControlEntry, dot3CollTable=dot3CollTable, etherStatsGroup=etherStatsGroup, PYSNMP_MODULE_ID=etherMIB, etherDuplexGroup=etherDuplexGroup, dot3TestLoopBack=dot3TestLoopBack, dot3StatsFrameTooLongs=dot3StatsFrameTooLongs, etherControlGroup=etherControlGroup)
