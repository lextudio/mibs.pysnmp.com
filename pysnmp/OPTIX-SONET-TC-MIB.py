# SNMP MIB module (OPTIX-SONET-TC-MIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/lextm/pysnmp.com/mibs.pysnmp.com/asn1/OPTIX-SONET-TC-MIB
# Produced by pysmi-1.5.4 at Mon Oct 14 22:35:28 2024
# On host MacBook-Pro.local platform Darwin version 24.0.0 by user lextm
# Using Python version 3.12.0 (main, Nov 14 2023, 23:52:11) [Clang 15.0.0 (clang-1500.0.40.1)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint,
 ConstraintsUnion) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint",
    "ConstraintsUnion")

# Import SMI symbols from the MIBs this MIB depends on

(optixCommon,) = mibBuilder.importSymbols(
    "OPTIX-OID-MIB",
    "optixCommon")

(ModuleCompliance,
 NotificationGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "iso")

(DisplayString,
 TextualConvention) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "TextualConvention")


# MODULE-IDENTITY

optixsonetTCMIB = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 99)
)
optixsonetTCMIB.setRevisions(
        ("2006-02-25 00:00",)
)


# Types definitions


# TEXTUAL-CONVENTIONS



class AlarmEventType(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              6,
              37,
              69,
              87,
              100,
              101,
              111,
              120,
              185,
              186,
              187,
              188,
              189,
              192,
              193,
              198,
              200,
              212,
              213,
              223,
              232,
              240,
              270,
              272,
              273,
              274,
              275,
              276,
              277,
              278,
              279,
              280,
              282,
              283,
              284,
              285,
              286,
              287,
              288,
              289,
              323,
              324,
              325,
              326,
              327,
              335,
              433,
              439,
              440,
              502,
              503,
              504,
              505,
              506,
              507,
              508,
              509,
              510,
              511,
              512,
              513,
              514,
              515,
              516,
              517,
              518,
              519,
              520,
              521,
              522,
              523,
              524,
              525,
              526,
              527,
              528,
              529,
              530,
              531,
              532,
              536,
              537,
              538,
              539,
              540,
              541,
              542,
              543,
              544,
              545,
              546,
              547,
              548,
              549,
              550,
              570,
              573,
              574,
              575,
              591,
              604,
              606,
              12288,
              12291,
              12292,
              12293,
              12294,
              12298,
              12299,
              12300,
              12767,
              12769,
              12823,
              12824,
              12825,
              12826,
              32768,
              32769,
              32774,
              32776,
              32777,
              32778,
              32779,
              32791,
              32792,
              32794,
              32798,
              32802,
              32803,
              32804,
              32807,
              32808,
              32814,
              32815,
              32816,
              32817,
              32818,
              32819,
              32820,
              32821,
              32822,
              32823,
              32824,
              32825,
              32826,
              32827,
              32828,
              32829,
              32830,
              32831,
              32832,
              32833,
              32834,
              32835,
              32836,
              32837,
              32838,
              32839,
              32840,
              32841,
              32842,
              32843,
              32844,
              32845,
              32846,
              32847,
              32848,
              32849,
              32876,
              32877,
              32878,
              32879,
              32880,
              32881,
              32882,
              32883,
              32884,
              32886,
              32887,
              32889,
              32890,
              32891,
              32892,
              32899,
              32900,
              32901,
              32903,
              32904,
              32905,
              32906,
              32907,
              32908,
              32909,
              32910,
              32911,
              32912,
              32913,
              32915,
              32916,
              32917,
              32918,
              32919,
              32920,
              32921,
              32922,
              32923,
              32924,
              32925,
              32926,
              32927,
              32928,
              33156,
              33161,
              33170,
              33171,
              33172,
              33174,
              33175,
              33176,
              33177,
              33280,
              33281,
              33282,
              33283,
              33284,
              33286,
              33287,
              33289,
              33298,
              33301,
              33304,
              33305,
              33312,
              33314,
              33315,
              33316,
              33330,
              33331,
              33332,
              33333,
              33335,
              33336,
              33337,
              33345,
              33347,
              33348,
              33349,
              33350,
              33351,
              33361,
              33363,
              33364,
              33365,
              33368,
              33370,
              33372,
              33373,
              33374,
              33375,
              33377,
              36923,
              36924,
              36925,
              36926,
              36927,
              36928,
              36930,
              36936,
              36937,
              36938,
              36939,
              36940,
              36941,
              36942,
              36943,
              36944,
              36945,
              36946,
              36947,
              36948,
              36949,
              36950,
              36951,
              36952,
              36953,
              36954,
              36955,
              36956,
              36957,
              36958,
              36959,
              36960,
              36961,
              36966,
              36967,
              36968,
              36969,
              36970,
              36971,
              36972,
              36973,
              36974,
              36975,
              36976,
              36977,
              36978,
              36979,
              36980,
              36981,
              36985,
              36986,
              40960,
              40961,
              40970,
              40971,
              40972,
              40973,
              40974,
              40979,
              40980,
              40981,
              40982,
              40983,
              40984,
              40985,
              40986,
              63604,
              63605,
              63607,
              63629,
              63630,
              65409,
              65410,
              65411)
        )
    )
    namedValues = NamedValues(
        *(("almAic", 32901),
          ("almAis", 33316),
          ("almAisL", 32824),
          ("almAisP", 32826),
          ("almAisV", 32843),
          ("almAls", 32833),
          ("almApsb", 32774),
          ("almApscm", 32777),
          ("almApsmm", 32778),
          ("almApstm", 32779),
          ("almAteRmv", 33368),
          ("almAutosw", 36977),
          ("almBcmPumHigh", 69),
          ("almBeffecExc", 335),
          ("almBitsAis", 36966),
          ("almBitsCvover", 36969),
          ("almBitsLof", 36967),
          ("almBitsLos", 36968),
          ("almBlsrSdR", 36972),
          ("almBlsrSdS", 36973),
          ("almBlsrSfR", 36970),
          ("almBlsrSfS", 36971),
          ("almCcLoss", 12298),
          ("almCfgbdFail", 232),
          ("almChanAdd", 188),
          ("almChanFail", 32890),
          ("almChassisMea", 33377),
          ("almClcModHigh", 270),
          ("almClcPumHigh", 192),
          ("almClientMm", 604),
          ("almCommitTimeout", 573),
          ("almDataLost", 63630),
          ("almDbmsCfgBackupFailed", 33156),
          ("almDbmsCfgDamage", 32903),
          ("almDbmsError", 185),
          ("almDbsyncFail", 591),
          ("almDccFail", 36936),
          ("almDefkbyte", 32904),
          ("almDgeAdjFail", 433),
          ("almDlagProtFail", 12288),
          ("almEqptNsa", 32768),
          ("almEqptSa", 32769),
          ("almErfiPConn", 32839),
          ("almErfiPPld", 32837),
          ("almErfiPSer", 32838),
          ("almErfiVConn", 32848),
          ("almErfiVPld", 32849),
          ("almErfiVSer", 32847),
          ("almEsconCderr", 570),
          ("almEthCfmLoc", 12825),
          ("almEthCfmMismerge", 12823),
          ("almEthCfmRdi", 12826),
          ("almEthCfmUnexperi", 12824),
          ("almEtsql", 32907),
          ("almExer", 32883),
          ("almExerFail", 33374),
          ("almExerR", 32922),
          ("almExerS", 32923),
          ("almExerSuccess", 33373),
          ("almFanClose", 36927),
          ("almFanFail", 33161),
          ("almFanMea", 40986),
          ("almFanOpen", 36926),
          ("almFanRmv", 32802),
          ("almFcsErr", 65411),
          ("almFecLof", 212),
          ("almFecOof", 213),
          ("almFeprlf", 32776),
          ("almFileLost", 6),
          ("almFrcd", 32881),
          ("almFrcdR", 32918),
          ("almFrcdS", 32919),
          ("almFreerunSync", 32792),
          ("almFstsync", 32794),
          ("almGainLow", 327),
          ("almGfpCsf", 40961),
          ("almGfpLof", 36925),
          ("almHldoverSync", 32791),
          ("almHscUnavail", 440),
          ("almImaps", 32906),
          ("almInPwrHigh", 32816),
          ("almInPwrLow", 32817),
          ("almIncnaps", 32905),
          ("almIncorrectFiberConnection", 40972),
          ("almInhlpbk", 33330),
          ("almIntfFail", 32900),
          ("almIntfMea", 32899),
          ("almIntfRmv", 32876),
          ("almInvalidEqpt", 33170),
          ("almIsolateNode", 36974),
          ("almLagPortFail", 12769),
          ("almLanLoc", 36937),
          ("almLapdbvHigh", 33171),
          ("almLapdbvLow", 33172),
          ("almLaserModuleMismatch", 606),
          ("almLaserNotExist", 36923),
          ("almLaserShut", 33332),
          ("almLbcHigh", 33174),
          ("almLbcLow", 33175),
          ("almLcasBwReduced", 36924),
          ("almLcasFopr", 36986),
          ("almLcasFopt", 36985),
          ("almLcasPlcr", 36979),
          ("almLcasPlct", 36978),
          ("almLcasTlcr", 36981),
          ("almLcasTlct", 36980),
          ("almLccHigh", 33176),
          ("almLccLow", 33177),
          ("almLevelMea", 36928),
          ("almLinkErr", 33280),
          ("almLoa", 33281),
          ("almLoc", 3),
          ("almLockout", 33331),
          ("almLof", 33282),
          ("almLomP", 33283),
          ("almLomV", 65410),
          ("almLoopback", 240),
          ("almLopP", 32827),
          ("almLopV", 32842),
          ("almLos", 33284),
          ("almLosChan", 187),
          ("almLosMut", 186),
          ("almLow", 32879),
          ("almLowR", 32916),
          ("almLowS", 32917),
          ("almLp", 32880),
          ("almLpAllS", 32924),
          ("almLpS", 32915),
          ("almLpbk", 40981),
          ("almLpbkallds1feac", 33333),
          ("almLpbkcrs", 33335),
          ("almLpbkds1feac", 33336),
          ("almLpbkds3feac", 33337),
          ("almLpbkfac2ni", 40960),
          ("almLpbkfacility", 32834),
          ("almLpbkfacilityP", 33345),
          ("almLpbkterm", 32835),
          ("almLpbktermP", 33347),
          ("almLptRfi", 12300),
          ("almLsql", 32928),
          ("almLsrEol", 32820),
          ("almLtempHigh", 33286),
          ("almLtempLow", 33287),
          ("almMan", 32882),
          ("almManR", 32920),
          ("almManS", 32921),
          ("almManualSsmSet", 32798),
          ("almMea", 32807),
          ("almMpConflict", 12299),
          ("almMtMode", 40974),
          ("almMultiFanFail", 32804),
          ("almNebdDataMea", 33289),
          ("almNoLsrPara", 33298),
          ("almNodeidMm", 32910),
          ("almNormal", 33363),
          ("almOamFail", 12294),
          ("almOamRemoteLoop", 12291),
          ("almOamRemoteSD", 12292),
          ("almOamRemoteSF", 12293),
          ("almOamSelfLoop", 12767),
          ("almOduAis", 287),
          ("almOduLck", 289),
          ("almOduOci", 288),
          ("almOof", 33372),
          ("almOtuAis", 286),
          ("almOtuLof", 272),
          ("almOtuOom", 273),
          ("almOutPwrHigh", 32821),
          ("almOutPwrLow", 32822),
          ("almPartialUnprotected", 40985),
          ("almPdiP", 32840),
          ("almPlmP", 32836),
          ("almPlmV", 32844),
          ("almPmBdi", 277),
          ("almPmBei", 279),
          ("almPmBipExc", 283),
          ("almPmBipSd", 285),
          ("almPmTim", 275),
          ("almPortOffline", 63629),
          ("almPowerExceed", 40984),
          ("almPowerRmv", 33370),
          ("almPowerSwitch", 63607),
          ("almPrimarychnChange", 33348),
          ("almProtectMode", 198),
          ("almPs", 120),
          ("almPwrFail", 32841),
          ("almPwraFail", 32891),
          ("almPwrbFail", 32892),
          ("almRai", 33349),
          ("almRateOver", 223),
          ("almReffail", 33301),
          ("almReiL", 37),
          ("almRemcSD", 63605),
          ("almRemcSf", 63604),
          ("almRevertiveModeMismatch", 40970),
          ("almRfiL", 32825),
          ("almRfiP", 32832),
          ("almRfiV", 32846),
          ("almRingIDMismatch", 40971),
          ("almRingmMm", 32912),
          ("almRingswitch", 32925),
          ("almRlsLpbk", 40982),
          ("almRmv", 32808),
          ("almRmvToMt", 40979),
          ("almRstFromMt", 40980),
          ("almS1SynChange", 193),
          ("almSd", 36976),
          ("almSdL", 32819),
          ("almSdP", 32831),
          ("almSdS", 32823),
          ("almSdV", 33304),
          ("almSecuAlm", 200),
          ("almSf", 36975),
          ("almSfL", 32818),
          ("almSfP", 32830),
          ("almSfS", 32815),
          ("almSfV", 33305),
          ("almSingleFanFail", 32803),
          ("almSmBdi", 276),
          ("almSmBei", 278),
          ("almSmBipExc", 282),
          ("almSmBipSd", 284),
          ("almSmIae", 280),
          ("almSmTim", 274),
          ("almSpanswtich", 32926),
          ("almSqlalm", 32909),
          ("almSqlmMm", 32913),
          ("almSqmP", 33312),
          ("almSqmV", 65409),
          ("almSsmDql", 33350),
          ("almSsmLos", 33351),
          ("almStateChange", 40973),
          ("almSumInpwrHigh", 323),
          ("almSumInpwrLow", 324),
          ("almSumOutpwrHigh", 325),
          ("almSumOutpwrLow", 326),
          ("almSvMea", 33314),
          ("almSwFail", 32887),
          ("almSwdlChgmngMismatch", 575),
          ("almSwdlNepkgcheck", 574),
          ("almSwtoidle", 32886),
          ("almSwtopassthru", 32927),
          ("almSyncAllLos", 100),
          ("almSyncBad", 101),
          ("almSyncLos", 111),
          ("almSyncNotSyncnronized", 40983),
          ("almSyncSsmChange", 32877),
          ("almSyncSw", 32889),
          ("almTCvL", 36930),
          ("almTCvP", 36939),
          ("almTCvS", 36941),
          ("almTCvV", 36942),
          ("almTCvcpP", 36938),
          ("almTCvpP", 36940),
          ("almTEsL", 36944),
          ("almTEsP", 36945),
          ("almTEsS", 36947),
          ("almTEsV", 36948),
          ("almTEscpP", 36943),
          ("almTEspP", 36946),
          ("almTPjcsPdet", 36949),
          ("almTPjcsVdet", 36950),
          ("almTSesL", 36952),
          ("almTSesP", 36953),
          ("almTSesS", 36955),
          ("almTSesV", 36956),
          ("almTSescpP", 36951),
          ("almTSespP", 36954),
          ("almTUasL", 36958),
          ("almTUasP", 36959),
          ("almTUasV", 36961),
          ("almTUascpP", 36957),
          ("almTUaspP", 36960),
          ("almTd", 189),
          ("almTempHi", 33315),
          ("almTf", 32814),
          ("almTimP", 32828),
          ("almTimS", 87),
          ("almTimingModeChange", 32878),
          ("almTplalm", 32908),
          ("almTsa", 33361),
          ("almUneqP", 32829),
          ("almUneqV", 32845),
          ("almUpgradeIp", 33375),
          ("almWavelenLockFail", 439),
          ("almWkswbk", 33364),
          ("almWkswpr", 33365),
          ("almWtr", 32884),
          ("almXconMm", 32911),
          ("envContAircond", 543),
          ("envContEngine", 544),
          ("envContFan", 545),
          ("envContGen", 546),
          ("envContHeat", 547),
          ("envContLight", 548),
          ("envContMisc", 549),
          ("envContSpklr", 550),
          ("envEnvAircompr", 502),
          ("envEnvAircond", 503),
          ("envEnvAirdryr", 504),
          ("envEnvBatdschrg", 505),
          ("envEnvBattery", 506),
          ("envEnvClfan", 507),
          ("envEnvCpmajor", 508),
          ("envEnvCpminor", 509),
          ("envEnvEngine", 510),
          ("envEnvEngoprg", 511),
          ("envEnvExplgs", 512),
          ("envEnvFirdetr", 513),
          ("envEnvFire", 514),
          ("envEnvFlood", 515),
          ("envEnvFuse", 516),
          ("envEnvGen", 517),
          ("envEnvHiair", 518),
          ("envEnvHihum", 519),
          ("envEnvHitemp", 520),
          ("envEnvHiwtr", 521),
          ("envEnvIntruder", 522),
          ("envEnvLwbatvg", 523),
          ("envEnvLwfuel", 524),
          ("envEnvLwhum", 525),
          ("envEnvLwpres", 526),
          ("envEnvLwtemp", 527),
          ("envEnvLwwtr", 528),
          ("envEnvMisc", 529),
          ("envEnvOpendr", 530),
          ("envEnvPower", 531),
          ("envEnvPump", 532),
          ("envEnvPwr48", 536),
          ("envEnvRect", 537),
          ("envEnvRecthi", 538),
          ("envEnvRectlo", 539),
          ("envEnvSmoke", 540),
          ("envEnvToxicgas", 541),
          ("envEnvVentn", 542))
    )



class AlmDataNtfcnCdeType(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("cr", 1),
          ("mj", 2),
          ("mn", 3),
          ("na", 4),
          ("nr", 5))
    )



class AlmDataSrvEffType(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("nsa", 1),
          ("sa", 2))
    )



class DirectionType(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("all", 0),
          ("rcv", 1),
          ("trmt", 2))
    )



class LocationType(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("all", 0),
          ("fend", 2),
          ("nend", 1))
    )



class MOD2Type(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65)
        )
    )
    namedValues = NamedValues(
        *(("mod2All", 0),
          ("mod2Bits", 25),
          ("mod2Butt", 65),
          ("mod2Client", 55),
          ("mod2Cont", 45),
          ("mod2Dcc", 62),
          ("mod2Ds1", 1),
          ("mod2Ds3", 27),
          ("mod2E1", 37),
          ("mod2E100", 2),
          ("mod2E1000", 3),
          ("mod2E1t1", 39),
          ("mod2E3", 38),
          ("mod2E3t3", 40),
          ("mod2EQPT", 64),
          ("mod2Ec1", 4),
          ("mod2Env", 23),
          ("mod2Eqpt", 26),
          ("mod2Eth", 56),
          ("mod2Fc", 61),
          ("mod2Fe", 50),
          ("mod2Feth", 48),
          ("mod2Ge", 51),
          ("mod2Geth", 49),
          ("mod2Hardware", 41),
          ("mod2Lan", 63),
          ("mod2M13", 20),
          ("mod2Mca", 58),
          ("mod2Oc12", 6),
          ("mod2Oc192", 8),
          ("mod2Oc3", 5),
          ("mod2Oc48", 7),
          ("mod2Och", 53),
          ("mod2Ochl", 46),
          ("mod2Osc", 57),
          ("mod2Pg", 47),
          ("mod2Stm1", 28),
          ("mod2Stm16", 30),
          ("mod2Stm4", 29),
          ("mod2Stm64", 31),
          ("mod2Sts1", 9),
          ("mod2Sts12c", 13),
          ("mod2Sts15c", 14),
          ("mod2Sts192c", 17),
          ("mod2Sts24c", 15),
          ("mod2Sts3c", 10),
          ("mod2Sts48c", 16),
          ("mod2Sts6c", 11),
          ("mod2Sts9c", 12),
          ("mod2Sync", 24),
          ("mod2Syncall", 42),
          ("mod2Syncfac", 44),
          ("mod2Syncne", 43),
          ("mod2T1", 18),
          ("mod2T3", 19),
          ("mod2Variable", 59),
          ("mod2Vc12", 34),
          ("mod2Vc16c", 35),
          ("mod2Vc3", 32),
          ("mod2Vc4", 33),
          ("mod2Vc4c", 36),
          ("mod2Vctrunk", 52),
          ("mod2Vt1", 21),
          ("mod2Vt2", 22),
          ("mod2Wdm", 54),
          ("mod2Xgeth", 60))
    )



class PerformanceEventType(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(32770,
              32784,
              32785,
              32786,
              32789,
              32799,
              32800,
              32801,
              32852,
              32992,
              32993,
              32994,
              33000,
              33001,
              33002,
              33008,
              33009,
              33010,
              33011,
              33012,
              33013,
              33014,
              33015,
              33016,
              33056,
              33057,
              33058,
              33059,
              33060,
              33061,
              33064,
              33065,
              33088,
              33089,
              33090,
              33091,
              33092,
              33093,
              33094,
              33095,
              36864,
              36865,
              36866,
              36867,
              36868,
              36869,
              36870,
              36871,
              36872,
              36873,
              36874,
              36875,
              36876,
              36877,
              36878,
              36879,
              36880,
              36881,
              36882,
              36883,
              36884,
              36885,
              36886,
              36887,
              45065)
        )
    )
    namedValues = NamedValues(
        *(("pmBdtempcur", 32992),
          ("pmBdtempmax", 32993),
          ("pmBdtempmin", 32994),
          ("pmCvL", 32784),
          ("pmCvP", 32800),
          ("pmCvS", 36879),
          ("pmCvV", 36883),
          ("pmCvcpP", 33057),
          ("pmCvpP", 33056),
          ("pmEsL", 32785),
          ("pmEsP", 32801),
          ("pmEsS", 36880),
          ("pmEsV", 36884),
          ("pmEscpP", 33059),
          ("pmEspP", 33058),
          ("pmLapdbvcur", 36870),
          ("pmLapdbvmax", 36871),
          ("pmLapdbvmin", 36872),
          ("pmLbccur", 33008),
          ("pmLbcmax", 33009),
          ("pmLbcmin", 33010),
          ("pmLcccur", 36864),
          ("pmLccmax", 36865),
          ("pmLccmin", 36866),
          ("pmLtempcur", 36867),
          ("pmLtempmax", 36868),
          ("pmLtempmin", 36869),
          ("pmOprcur", 33014),
          ("pmOprmax", 33015),
          ("pmOprmin", 33016),
          ("pmOptcur", 33011),
          ("pmOptmax", 33012),
          ("pmOptmin", 33013),
          ("pmPjcsPDet", 45065),
          ("pmPjcsVDet", 32852),
          ("pmPlbccur", 36873),
          ("pmPlbcmax", 36874),
          ("pmPlbcmin", 36875),
          ("pmPlwccur", 36876),
          ("pmPlwcmax", 36877),
          ("pmPlwcmin", 36878),
          ("pmPmutempcur", 33000),
          ("pmPmutempmax", 33001),
          ("pmPmutempmin", 33002),
          ("pmPsc", 36887),
          ("pmPscProtect", 33088),
          ("pmPscRing", 33092),
          ("pmPscSpan", 33090),
          ("pmPscWork", 33094),
          ("pmPsd", 32799),
          ("pmPsdProtect", 33089),
          ("pmPsdRing", 33093),
          ("pmPsdSpan", 33091),
          ("pmPsdWork", 33095),
          ("pmSesL", 32786),
          ("pmSesP", 36881),
          ("pmSesS", 32770),
          ("pmSesV", 36885),
          ("pmSescpP", 33061),
          ("pmSespP", 33060),
          ("pmUasL", 32789),
          ("pmUasP", 36882),
          ("pmUasV", 36886),
          ("pmUascpP", 33065),
          ("pmUaspP", 33064))
    )



class ValidflagType(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("valid", 1))
    )



# MIB Managed Objects in the order of their OIDs


# Managed Objects groups


# Notification objects


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "OPTIX-SONET-TC-MIB",
    **{"AlarmEventType": AlarmEventType,
       "AlmDataNtfcnCdeType": AlmDataNtfcnCdeType,
       "AlmDataSrvEffType": AlmDataSrvEffType,
       "DirectionType": DirectionType,
       "LocationType": LocationType,
       "MOD2Type": MOD2Type,
       "PerformanceEventType": PerformanceEventType,
       "ValidflagType": ValidflagType,
       "optixsonetTCMIB": optixsonetTCMIB}
)
