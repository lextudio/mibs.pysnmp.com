# SNMP MIB module (BEA-WEBLOGIC-MIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/lextm/pysnmp.com/mibs.pysnmp.com/asn1/BEA-WEBLOGIC-MIB
# Produced by pysmi-1.5.4 at Mon Oct 14 20:46:40 2024
# On host MacBook-Pro.local platform Darwin version 24.0.0 by user lextm
# Using Python version 3.12.0 (main, Nov 14 2023, 23:52:11) [Clang 15.0.0 (clang-1500.0.40.1)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint,
 ConstraintsUnion) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint",
    "ConstraintsUnion")

# Import SMI symbols from the MIBs this MIB depends on

(ModuleCompliance,
 NotificationGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 enterprises,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "enterprises",
    "iso")

(DisplayString,
 TextualConvention) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "TextualConvention")


# MODULE-IDENTITY

wls = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 140, 625)
)


# Types definitions


# TEXTUAL-CONVENTIONS



# MIB Managed Objects in the order of their OIDs

_Bea_ObjectIdentity = ObjectIdentity
bea = _Bea_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 140)
)
_Experimental_ObjectIdentity = ObjectIdentity
experimental = _Experimental_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 140, 625, 10)
)


class _MibObjectName_Type(DisplayString):
    """Custom type mibObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 512),
    )


_MibObjectName_Type.__name__ = "DisplayString"
_MibObjectName_Object = MibScalar
mibObjectName = _MibObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 10, 1),
    _MibObjectName_Type()
)
mibObjectName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mibObjectName.setStatus("current")
_MibObjectOid_Type = ObjectIdentifier
_MibObjectOid_Object = MibScalar
mibObjectOid = _MibObjectOid_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 10, 2),
    _MibObjectOid_Type()
)
mibObjectOid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mibObjectOid.setStatus("current")
_TrapVars_ObjectIdentity = ObjectIdentity
trapVars = _TrapVars_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 140, 625, 100)
)


class _TrapTime_Type(DisplayString):
    """Custom type trapTime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_TrapTime_Type.__name__ = "DisplayString"
_TrapTime_Object = MibScalar
trapTime = _TrapTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 5),
    _TrapTime_Type()
)
trapTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapTime.setStatus("current")


class _TrapServerName_Type(DisplayString):
    """Custom type trapServerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_TrapServerName_Type.__name__ = "DisplayString"
_TrapServerName_Object = MibScalar
trapServerName = _TrapServerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 10),
    _TrapServerName_Type()
)
trapServerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapServerName.setStatus("current")


class _TrapMachineName_Type(DisplayString):
    """Custom type trapMachineName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_TrapMachineName_Type.__name__ = "DisplayString"
_TrapMachineName_Object = MibScalar
trapMachineName = _TrapMachineName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 15),
    _TrapMachineName_Type()
)
trapMachineName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapMachineName.setStatus("current")


class _TrapLogThreadId_Type(DisplayString):
    """Custom type trapLogThreadId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_TrapLogThreadId_Type.__name__ = "DisplayString"
_TrapLogThreadId_Object = MibScalar
trapLogThreadId = _TrapLogThreadId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 20),
    _TrapLogThreadId_Type()
)
trapLogThreadId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapLogThreadId.setStatus("current")


class _TrapLogTransactionId_Type(DisplayString):
    """Custom type trapLogTransactionId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_TrapLogTransactionId_Type.__name__ = "DisplayString"
_TrapLogTransactionId_Object = MibScalar
trapLogTransactionId = _TrapLogTransactionId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 25),
    _TrapLogTransactionId_Type()
)
trapLogTransactionId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapLogTransactionId.setStatus("current")


class _TrapLogUserId_Type(DisplayString):
    """Custom type trapLogUserId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_TrapLogUserId_Type.__name__ = "DisplayString"
_TrapLogUserId_Object = MibScalar
trapLogUserId = _TrapLogUserId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 30),
    _TrapLogUserId_Type()
)
trapLogUserId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapLogUserId.setStatus("current")


class _TrapLogSubsystem_Type(DisplayString):
    """Custom type trapLogSubsystem based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_TrapLogSubsystem_Type.__name__ = "DisplayString"
_TrapLogSubsystem_Object = MibScalar
trapLogSubsystem = _TrapLogSubsystem_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 35),
    _TrapLogSubsystem_Type()
)
trapLogSubsystem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapLogSubsystem.setStatus("current")


class _TrapLogMsgId_Type(DisplayString):
    """Custom type trapLogMsgId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_TrapLogMsgId_Type.__name__ = "DisplayString"
_TrapLogMsgId_Object = MibScalar
trapLogMsgId = _TrapLogMsgId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 40),
    _TrapLogMsgId_Type()
)
trapLogMsgId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapLogMsgId.setStatus("current")


class _TrapLogSeverity_Type(DisplayString):
    """Custom type trapLogSeverity based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_TrapLogSeverity_Type.__name__ = "DisplayString"
_TrapLogSeverity_Object = MibScalar
trapLogSeverity = _TrapLogSeverity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 45),
    _TrapLogSeverity_Type()
)
trapLogSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapLogSeverity.setStatus("current")


class _TrapLogMessage_Type(DisplayString):
    """Custom type trapLogMessage based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1024),
    )


_TrapLogMessage_Type.__name__ = "DisplayString"
_TrapLogMessage_Object = MibScalar
trapLogMessage = _TrapLogMessage_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 50),
    _TrapLogMessage_Type()
)
trapLogMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapLogMessage.setStatus("current")


class _TrapMonitorType_Type(DisplayString):
    """Custom type trapMonitorType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_TrapMonitorType_Type.__name__ = "DisplayString"
_TrapMonitorType_Object = MibScalar
trapMonitorType = _TrapMonitorType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 55),
    _TrapMonitorType_Type()
)
trapMonitorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapMonitorType.setStatus("current")


class _TrapMonitorThreshold_Type(DisplayString):
    """Custom type trapMonitorThreshold based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_TrapMonitorThreshold_Type.__name__ = "DisplayString"
_TrapMonitorThreshold_Object = MibScalar
trapMonitorThreshold = _TrapMonitorThreshold_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 60),
    _TrapMonitorThreshold_Type()
)
trapMonitorThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapMonitorThreshold.setStatus("current")


class _TrapMonitorValue_Type(DisplayString):
    """Custom type trapMonitorValue based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_TrapMonitorValue_Type.__name__ = "DisplayString"
_TrapMonitorValue_Object = MibScalar
trapMonitorValue = _TrapMonitorValue_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 65),
    _TrapMonitorValue_Type()
)
trapMonitorValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapMonitorValue.setStatus("current")


class _TrapMBeanName_Type(DisplayString):
    """Custom type trapMBeanName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_TrapMBeanName_Type.__name__ = "DisplayString"
_TrapMBeanName_Object = MibScalar
trapMBeanName = _TrapMBeanName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 70),
    _TrapMBeanName_Type()
)
trapMBeanName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapMBeanName.setStatus("current")


class _TrapMBeanType_Type(DisplayString):
    """Custom type trapMBeanType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_TrapMBeanType_Type.__name__ = "DisplayString"
_TrapMBeanType_Object = MibScalar
trapMBeanType = _TrapMBeanType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 75),
    _TrapMBeanType_Type()
)
trapMBeanType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapMBeanType.setStatus("current")


class _TrapAttributeName_Type(DisplayString):
    """Custom type trapAttributeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_TrapAttributeName_Type.__name__ = "DisplayString"
_TrapAttributeName_Object = MibScalar
trapAttributeName = _TrapAttributeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 80),
    _TrapAttributeName_Type()
)
trapAttributeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapAttributeName.setStatus("current")


class _TrapAttributeType_Type(DisplayString):
    """Custom type trapAttributeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_TrapAttributeType_Type.__name__ = "DisplayString"
_TrapAttributeType_Object = MibScalar
trapAttributeType = _TrapAttributeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 85),
    _TrapAttributeType_Type()
)
trapAttributeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapAttributeType.setStatus("current")


class _TrapAttributeChangeType_Type(DisplayString):
    """Custom type trapAttributeChangeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_TrapAttributeChangeType_Type.__name__ = "DisplayString"
_TrapAttributeChangeType_Object = MibScalar
trapAttributeChangeType = _TrapAttributeChangeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 90),
    _TrapAttributeChangeType_Type()
)
trapAttributeChangeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapAttributeChangeType.setStatus("current")


class _TrapAttributeOldVal_Type(DisplayString):
    """Custom type trapAttributeOldVal based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 512),
    )


_TrapAttributeOldVal_Type.__name__ = "DisplayString"
_TrapAttributeOldVal_Object = MibScalar
trapAttributeOldVal = _TrapAttributeOldVal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 95),
    _TrapAttributeOldVal_Type()
)
trapAttributeOldVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapAttributeOldVal.setStatus("current")


class _TrapAttributeNewVal_Type(DisplayString):
    """Custom type trapAttributeNewVal based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 512),
    )


_TrapAttributeNewVal_Type.__name__ = "DisplayString"
_TrapAttributeNewVal_Object = MibScalar
trapAttributeNewVal = _TrapAttributeNewVal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 100),
    _TrapAttributeNewVal_Type()
)
trapAttributeNewVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapAttributeNewVal.setStatus("current")


class _TrapWatchName_Type(DisplayString):
    """Custom type trapWatchName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 512),
    )


_TrapWatchName_Type.__name__ = "DisplayString"
_TrapWatchName_Object = MibScalar
trapWatchName = _TrapWatchName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 105),
    _TrapWatchName_Type()
)
trapWatchName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapWatchName.setStatus("current")


class _TrapWatchRuleType_Type(DisplayString):
    """Custom type trapWatchRuleType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_TrapWatchRuleType_Type.__name__ = "DisplayString"
_TrapWatchRuleType_Object = MibScalar
trapWatchRuleType = _TrapWatchRuleType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 110),
    _TrapWatchRuleType_Type()
)
trapWatchRuleType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapWatchRuleType.setStatus("current")


class _TrapWatchRule_Type(DisplayString):
    """Custom type trapWatchRule based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_TrapWatchRule_Type.__name__ = "DisplayString"
_TrapWatchRule_Object = MibScalar
trapWatchRule = _TrapWatchRule_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 115),
    _TrapWatchRule_Type()
)
trapWatchRule.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapWatchRule.setStatus("current")


class _TrapWatchSeverity_Type(DisplayString):
    """Custom type trapWatchSeverity based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_TrapWatchSeverity_Type.__name__ = "DisplayString"
_TrapWatchSeverity_Object = MibScalar
trapWatchSeverity = _TrapWatchSeverity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 120),
    _TrapWatchSeverity_Type()
)
trapWatchSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapWatchSeverity.setStatus("current")


class _TrapWatchData_Type(DisplayString):
    """Custom type trapWatchData based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_TrapWatchData_Type.__name__ = "DisplayString"
_TrapWatchData_Object = MibScalar
trapWatchData = _TrapWatchData_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 125),
    _TrapWatchData_Type()
)
trapWatchData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapWatchData.setStatus("current")


class _TrapWatchAlarmType_Type(DisplayString):
    """Custom type trapWatchAlarmType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_TrapWatchAlarmType_Type.__name__ = "DisplayString"
_TrapWatchAlarmType_Object = MibScalar
trapWatchAlarmType = _TrapWatchAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 130),
    _TrapWatchAlarmType_Type()
)
trapWatchAlarmType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapWatchAlarmType.setStatus("current")


class _TrapWatchAlarmResetPeriod_Type(DisplayString):
    """Custom type trapWatchAlarmResetPeriod based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_TrapWatchAlarmResetPeriod_Type.__name__ = "DisplayString"
_TrapWatchAlarmResetPeriod_Object = MibScalar
trapWatchAlarmResetPeriod = _TrapWatchAlarmResetPeriod_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 135),
    _TrapWatchAlarmResetPeriod_Type()
)
trapWatchAlarmResetPeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapWatchAlarmResetPeriod.setStatus("current")


class _TrapWatchSNMPNotificationName_Type(DisplayString):
    """Custom type trapWatchSNMPNotificationName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_TrapWatchSNMPNotificationName_Type.__name__ = "DisplayString"
_TrapWatchSNMPNotificationName_Object = MibScalar
trapWatchSNMPNotificationName = _TrapWatchSNMPNotificationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 140),
    _TrapWatchSNMPNotificationName_Type()
)
trapWatchSNMPNotificationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapWatchSNMPNotificationName.setStatus("current")


class _TrapDomainName_Type(DisplayString):
    """Custom type trapDomainName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_TrapDomainName_Type.__name__ = "DisplayString"
_TrapDomainName_Object = MibScalar
trapDomainName = _TrapDomainName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 100, 145),
    _TrapDomainName_Type()
)
trapDomainName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapDomainName.setStatus("current")
_ApplicationRuntimeTable_Object = MibTable
applicationRuntimeTable = _ApplicationRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 105)
)
if mibBuilder.loadTexts:
    applicationRuntimeTable.setStatus("current")
_ApplicationRuntimeEntry_Object = MibTableRow
applicationRuntimeEntry = _ApplicationRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 105, 1)
)
applicationRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "applicationRuntimeIndex"),
)
if mibBuilder.loadTexts:
    applicationRuntimeEntry.setStatus("current")


class _ApplicationRuntimeIndex_Type(DisplayString):
    """Custom type applicationRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ApplicationRuntimeIndex_Type.__name__ = "DisplayString"
_ApplicationRuntimeIndex_Object = MibTableColumn
applicationRuntimeIndex = _ApplicationRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 105, 1, 1),
    _ApplicationRuntimeIndex_Type()
)
applicationRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationRuntimeIndex.setStatus("current")


class _ApplicationRuntimeObjectName_Type(DisplayString):
    """Custom type applicationRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ApplicationRuntimeObjectName_Type.__name__ = "DisplayString"
_ApplicationRuntimeObjectName_Object = MibTableColumn
applicationRuntimeObjectName = _ApplicationRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 105, 1, 5),
    _ApplicationRuntimeObjectName_Type()
)
applicationRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationRuntimeObjectName.setStatus("current")


class _ApplicationRuntimeType_Type(DisplayString):
    """Custom type applicationRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ApplicationRuntimeType_Type.__name__ = "DisplayString"
_ApplicationRuntimeType_Object = MibTableColumn
applicationRuntimeType = _ApplicationRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 105, 1, 10),
    _ApplicationRuntimeType_Type()
)
applicationRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationRuntimeType.setStatus("current")


class _ApplicationRuntimeName_Type(DisplayString):
    """Custom type applicationRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ApplicationRuntimeName_Type.__name__ = "DisplayString"
_ApplicationRuntimeName_Object = MibTableColumn
applicationRuntimeName = _ApplicationRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 105, 1, 15),
    _ApplicationRuntimeName_Type()
)
applicationRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationRuntimeName.setStatus("current")


class _ApplicationRuntimeParent_Type(DisplayString):
    """Custom type applicationRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ApplicationRuntimeParent_Type.__name__ = "DisplayString"
_ApplicationRuntimeParent_Object = MibTableColumn
applicationRuntimeParent = _ApplicationRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 105, 1, 20),
    _ApplicationRuntimeParent_Type()
)
applicationRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationRuntimeParent.setStatus("current")


class _ApplicationRuntimeApplicationName_Type(DisplayString):
    """Custom type applicationRuntimeApplicationName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_ApplicationRuntimeApplicationName_Type.__name__ = "DisplayString"
_ApplicationRuntimeApplicationName_Object = MibTableColumn
applicationRuntimeApplicationName = _ApplicationRuntimeApplicationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 105, 1, 25),
    _ApplicationRuntimeApplicationName_Type()
)
applicationRuntimeApplicationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationRuntimeApplicationName.setStatus("current")
_ApplicationRuntimeApplicationVersion_Type = OctetString
_ApplicationRuntimeApplicationVersion_Object = MibTableColumn
applicationRuntimeApplicationVersion = _ApplicationRuntimeApplicationVersion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 105, 1, 26),
    _ApplicationRuntimeApplicationVersion_Type()
)
applicationRuntimeApplicationVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationRuntimeApplicationVersion.setStatus("current")
_ClusterRuntimeTable_Object = MibTable
clusterRuntimeTable = _ClusterRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 110)
)
if mibBuilder.loadTexts:
    clusterRuntimeTable.setStatus("current")
_ClusterRuntimeEntry_Object = MibTableRow
clusterRuntimeEntry = _ClusterRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 110, 1)
)
clusterRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "clusterRuntimeIndex"),
)
if mibBuilder.loadTexts:
    clusterRuntimeEntry.setStatus("current")


class _ClusterRuntimeIndex_Type(DisplayString):
    """Custom type clusterRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ClusterRuntimeIndex_Type.__name__ = "DisplayString"
_ClusterRuntimeIndex_Object = MibTableColumn
clusterRuntimeIndex = _ClusterRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 110, 1, 1),
    _ClusterRuntimeIndex_Type()
)
clusterRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterRuntimeIndex.setStatus("current")


class _ClusterRuntimeObjectName_Type(DisplayString):
    """Custom type clusterRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ClusterRuntimeObjectName_Type.__name__ = "DisplayString"
_ClusterRuntimeObjectName_Object = MibTableColumn
clusterRuntimeObjectName = _ClusterRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 110, 1, 5),
    _ClusterRuntimeObjectName_Type()
)
clusterRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterRuntimeObjectName.setStatus("current")


class _ClusterRuntimeType_Type(DisplayString):
    """Custom type clusterRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ClusterRuntimeType_Type.__name__ = "DisplayString"
_ClusterRuntimeType_Object = MibTableColumn
clusterRuntimeType = _ClusterRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 110, 1, 10),
    _ClusterRuntimeType_Type()
)
clusterRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterRuntimeType.setStatus("current")


class _ClusterRuntimeName_Type(DisplayString):
    """Custom type clusterRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ClusterRuntimeName_Type.__name__ = "DisplayString"
_ClusterRuntimeName_Object = MibTableColumn
clusterRuntimeName = _ClusterRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 110, 1, 15),
    _ClusterRuntimeName_Type()
)
clusterRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterRuntimeName.setStatus("current")


class _ClusterRuntimeParent_Type(DisplayString):
    """Custom type clusterRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ClusterRuntimeParent_Type.__name__ = "DisplayString"
_ClusterRuntimeParent_Object = MibTableColumn
clusterRuntimeParent = _ClusterRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 110, 1, 20),
    _ClusterRuntimeParent_Type()
)
clusterRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterRuntimeParent.setStatus("current")
_ClusterRuntimeAliveServerCount_Type = Integer32
_ClusterRuntimeAliveServerCount_Object = MibTableColumn
clusterRuntimeAliveServerCount = _ClusterRuntimeAliveServerCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 110, 1, 25),
    _ClusterRuntimeAliveServerCount_Type()
)
clusterRuntimeAliveServerCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterRuntimeAliveServerCount.setStatus("current")
_ClusterRuntimeResendRequestsCount_Type = Counter64
_ClusterRuntimeResendRequestsCount_Object = MibTableColumn
clusterRuntimeResendRequestsCount = _ClusterRuntimeResendRequestsCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 110, 1, 30),
    _ClusterRuntimeResendRequestsCount_Type()
)
clusterRuntimeResendRequestsCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterRuntimeResendRequestsCount.setStatus("current")
_ClusterRuntimeFragmentsSentCount_Type = Counter64
_ClusterRuntimeFragmentsSentCount_Object = MibTableColumn
clusterRuntimeFragmentsSentCount = _ClusterRuntimeFragmentsSentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 110, 1, 35),
    _ClusterRuntimeFragmentsSentCount_Type()
)
clusterRuntimeFragmentsSentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterRuntimeFragmentsSentCount.setStatus("current")
_ClusterRuntimeFragmentsReceivedCount_Type = Counter64
_ClusterRuntimeFragmentsReceivedCount_Object = MibTableColumn
clusterRuntimeFragmentsReceivedCount = _ClusterRuntimeFragmentsReceivedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 110, 1, 40),
    _ClusterRuntimeFragmentsReceivedCount_Type()
)
clusterRuntimeFragmentsReceivedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterRuntimeFragmentsReceivedCount.setStatus("current")
_ClusterRuntimeMulticastMessagesLostCount_Type = Counter64
_ClusterRuntimeMulticastMessagesLostCount_Object = MibTableColumn
clusterRuntimeMulticastMessagesLostCount = _ClusterRuntimeMulticastMessagesLostCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 110, 1, 45),
    _ClusterRuntimeMulticastMessagesLostCount_Type()
)
clusterRuntimeMulticastMessagesLostCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterRuntimeMulticastMessagesLostCount.setStatus("current")


class _ClusterRuntimeServerNames_Type(DisplayString):
    """Custom type clusterRuntimeServerNames based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_ClusterRuntimeServerNames_Type.__name__ = "DisplayString"
_ClusterRuntimeServerNames_Object = MibTableColumn
clusterRuntimeServerNames = _ClusterRuntimeServerNames_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 110, 1, 50),
    _ClusterRuntimeServerNames_Type()
)
clusterRuntimeServerNames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterRuntimeServerNames.setStatus("current")


class _ClusterRuntimeSecondaryDistributionNames_Type(DisplayString):
    """Custom type clusterRuntimeSecondaryDistributionNames based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_ClusterRuntimeSecondaryDistributionNames_Type.__name__ = "DisplayString"
_ClusterRuntimeSecondaryDistributionNames_Object = MibTableColumn
clusterRuntimeSecondaryDistributionNames = _ClusterRuntimeSecondaryDistributionNames_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 110, 1, 55),
    _ClusterRuntimeSecondaryDistributionNames_Type()
)
clusterRuntimeSecondaryDistributionNames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterRuntimeSecondaryDistributionNames.setStatus("current")
_ClusterRuntimePrimaryCount_Type = Counter64
_ClusterRuntimePrimaryCount_Object = MibTableColumn
clusterRuntimePrimaryCount = _ClusterRuntimePrimaryCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 110, 1, 60),
    _ClusterRuntimePrimaryCount_Type()
)
clusterRuntimePrimaryCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterRuntimePrimaryCount.setStatus("current")
_ClusterRuntimeCurrentSecondaryServer_Type = OctetString
_ClusterRuntimeCurrentSecondaryServer_Object = MibTableColumn
clusterRuntimeCurrentSecondaryServer = _ClusterRuntimeCurrentSecondaryServer_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 110, 1, 61),
    _ClusterRuntimeCurrentSecondaryServer_Type()
)
clusterRuntimeCurrentSecondaryServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterRuntimeCurrentSecondaryServer.setStatus("current")
_ClusterRuntimeForeignFragmentsDroppedCount_Type = Counter64
_ClusterRuntimeForeignFragmentsDroppedCount_Object = MibTableColumn
clusterRuntimeForeignFragmentsDroppedCount = _ClusterRuntimeForeignFragmentsDroppedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 110, 1, 62),
    _ClusterRuntimeForeignFragmentsDroppedCount_Type()
)
clusterRuntimeForeignFragmentsDroppedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterRuntimeForeignFragmentsDroppedCount.setStatus("current")
_ClusterRuntimeCurrentAsyncSecondaryServer_Type = OctetString
_ClusterRuntimeCurrentAsyncSecondaryServer_Object = MibTableColumn
clusterRuntimeCurrentAsyncSecondaryServer = _ClusterRuntimeCurrentAsyncSecondaryServer_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 110, 1, 63),
    _ClusterRuntimeCurrentAsyncSecondaryServer_Type()
)
clusterRuntimeCurrentAsyncSecondaryServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterRuntimeCurrentAsyncSecondaryServer.setStatus("current")
_ClusterRuntimeAsyncPrimaryCount_Type = Counter64
_ClusterRuntimeAsyncPrimaryCount_Object = MibTableColumn
clusterRuntimeAsyncPrimaryCount = _ClusterRuntimeAsyncPrimaryCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 110, 1, 64),
    _ClusterRuntimeAsyncPrimaryCount_Type()
)
clusterRuntimeAsyncPrimaryCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterRuntimeAsyncPrimaryCount.setStatus("current")
_WanreplicationRuntimeTable_Object = MibTable
wanreplicationRuntimeTable = _WanreplicationRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 111)
)
if mibBuilder.loadTexts:
    wanreplicationRuntimeTable.setStatus("current")
_WanreplicationRuntimeEntry_Object = MibTableRow
wanreplicationRuntimeEntry = _WanreplicationRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 111, 1)
)
wanreplicationRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wanreplicationRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wanreplicationRuntimeEntry.setStatus("current")


class _WanreplicationRuntimeIndex_Type(DisplayString):
    """Custom type wanreplicationRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WanreplicationRuntimeIndex_Type.__name__ = "DisplayString"
_WanreplicationRuntimeIndex_Object = MibTableColumn
wanreplicationRuntimeIndex = _WanreplicationRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 111, 1, 1),
    _WanreplicationRuntimeIndex_Type()
)
wanreplicationRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wanreplicationRuntimeIndex.setStatus("current")


class _WanreplicationRuntimeObjectName_Type(DisplayString):
    """Custom type wanreplicationRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WanreplicationRuntimeObjectName_Type.__name__ = "DisplayString"
_WanreplicationRuntimeObjectName_Object = MibTableColumn
wanreplicationRuntimeObjectName = _WanreplicationRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 111, 1, 5),
    _WanreplicationRuntimeObjectName_Type()
)
wanreplicationRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wanreplicationRuntimeObjectName.setStatus("current")


class _WanreplicationRuntimeType_Type(DisplayString):
    """Custom type wanreplicationRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WanreplicationRuntimeType_Type.__name__ = "DisplayString"
_WanreplicationRuntimeType_Object = MibTableColumn
wanreplicationRuntimeType = _WanreplicationRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 111, 1, 10),
    _WanreplicationRuntimeType_Type()
)
wanreplicationRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wanreplicationRuntimeType.setStatus("current")


class _WanreplicationRuntimeName_Type(DisplayString):
    """Custom type wanreplicationRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WanreplicationRuntimeName_Type.__name__ = "DisplayString"
_WanreplicationRuntimeName_Object = MibTableColumn
wanreplicationRuntimeName = _WanreplicationRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 111, 1, 15),
    _WanreplicationRuntimeName_Type()
)
wanreplicationRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wanreplicationRuntimeName.setStatus("current")


class _WanreplicationRuntimeParent_Type(DisplayString):
    """Custom type wanreplicationRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WanreplicationRuntimeParent_Type.__name__ = "DisplayString"
_WanreplicationRuntimeParent_Object = MibTableColumn
wanreplicationRuntimeParent = _WanreplicationRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 111, 1, 20),
    _WanreplicationRuntimeParent_Type()
)
wanreplicationRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wanreplicationRuntimeParent.setStatus("current")
_WanreplicationRuntimeNumberOfSessionsFlushedToTheDatabase_Type = Counter64
_WanreplicationRuntimeNumberOfSessionsFlushedToTheDatabase_Object = MibTableColumn
wanreplicationRuntimeNumberOfSessionsFlushedToTheDatabase = _WanreplicationRuntimeNumberOfSessionsFlushedToTheDatabase_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 111, 1, 25),
    _WanreplicationRuntimeNumberOfSessionsFlushedToTheDatabase_Type()
)
wanreplicationRuntimeNumberOfSessionsFlushedToTheDatabase.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wanreplicationRuntimeNumberOfSessionsFlushedToTheDatabase.setStatus("current")
_WanreplicationRuntimeNumberOfSessionsRetrievedFromTheDatabase_Type = Counter64
_WanreplicationRuntimeNumberOfSessionsRetrievedFromTheDatabase_Object = MibTableColumn
wanreplicationRuntimeNumberOfSessionsRetrievedFromTheDatabase = _WanreplicationRuntimeNumberOfSessionsRetrievedFromTheDatabase_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 111, 1, 30),
    _WanreplicationRuntimeNumberOfSessionsRetrievedFromTheDatabase_Type()
)
wanreplicationRuntimeNumberOfSessionsRetrievedFromTheDatabase.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wanreplicationRuntimeNumberOfSessionsRetrievedFromTheDatabase.setStatus("current")


class _WanreplicationRuntimeSecondaryServerName_Type(DisplayString):
    """Custom type wanreplicationRuntimeSecondaryServerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_WanreplicationRuntimeSecondaryServerName_Type.__name__ = "DisplayString"
_WanreplicationRuntimeSecondaryServerName_Object = MibTableColumn
wanreplicationRuntimeSecondaryServerName = _WanreplicationRuntimeSecondaryServerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 111, 1, 35),
    _WanreplicationRuntimeSecondaryServerName_Type()
)
wanreplicationRuntimeSecondaryServerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wanreplicationRuntimeSecondaryServerName.setStatus("current")
_WanreplicationRuntimePrimaryCount_Type = Counter64
_WanreplicationRuntimePrimaryCount_Object = MibTableColumn
wanreplicationRuntimePrimaryCount = _WanreplicationRuntimePrimaryCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 111, 1, 40),
    _WanreplicationRuntimePrimaryCount_Type()
)
wanreplicationRuntimePrimaryCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wanreplicationRuntimePrimaryCount.setStatus("current")
_WanreplicationRuntimeSecondaryCount_Type = Counter64
_WanreplicationRuntimeSecondaryCount_Object = MibTableColumn
wanreplicationRuntimeSecondaryCount = _WanreplicationRuntimeSecondaryCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 111, 1, 45),
    _WanreplicationRuntimeSecondaryCount_Type()
)
wanreplicationRuntimeSecondaryCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wanreplicationRuntimeSecondaryCount.setStatus("current")
_WanreplicationRuntimeRemoteClusterReachable_Type = Integer32
_WanreplicationRuntimeRemoteClusterReachable_Object = MibTableColumn
wanreplicationRuntimeRemoteClusterReachable = _WanreplicationRuntimeRemoteClusterReachable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 111, 1, 50),
    _WanreplicationRuntimeRemoteClusterReachable_Type()
)
wanreplicationRuntimeRemoteClusterReachable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wanreplicationRuntimeRemoteClusterReachable.setStatus("current")
_DeploymentTaskRuntimeTable_Object = MibTable
deploymentTaskRuntimeTable = _DeploymentTaskRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 121)
)
if mibBuilder.loadTexts:
    deploymentTaskRuntimeTable.setStatus("current")
_DeploymentTaskRuntimeEntry_Object = MibTableRow
deploymentTaskRuntimeEntry = _DeploymentTaskRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 121, 1)
)
deploymentTaskRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "deploymentTaskRuntimeIndex"),
)
if mibBuilder.loadTexts:
    deploymentTaskRuntimeEntry.setStatus("current")


class _DeploymentTaskRuntimeIndex_Type(DisplayString):
    """Custom type deploymentTaskRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_DeploymentTaskRuntimeIndex_Type.__name__ = "DisplayString"
_DeploymentTaskRuntimeIndex_Object = MibTableColumn
deploymentTaskRuntimeIndex = _DeploymentTaskRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 121, 1, 1),
    _DeploymentTaskRuntimeIndex_Type()
)
deploymentTaskRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentTaskRuntimeIndex.setStatus("current")


class _DeploymentTaskRuntimeObjectName_Type(DisplayString):
    """Custom type deploymentTaskRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_DeploymentTaskRuntimeObjectName_Type.__name__ = "DisplayString"
_DeploymentTaskRuntimeObjectName_Object = MibTableColumn
deploymentTaskRuntimeObjectName = _DeploymentTaskRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 121, 1, 5),
    _DeploymentTaskRuntimeObjectName_Type()
)
deploymentTaskRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentTaskRuntimeObjectName.setStatus("current")


class _DeploymentTaskRuntimeType_Type(DisplayString):
    """Custom type deploymentTaskRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_DeploymentTaskRuntimeType_Type.__name__ = "DisplayString"
_DeploymentTaskRuntimeType_Object = MibTableColumn
deploymentTaskRuntimeType = _DeploymentTaskRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 121, 1, 10),
    _DeploymentTaskRuntimeType_Type()
)
deploymentTaskRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentTaskRuntimeType.setStatus("current")


class _DeploymentTaskRuntimeName_Type(DisplayString):
    """Custom type deploymentTaskRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_DeploymentTaskRuntimeName_Type.__name__ = "DisplayString"
_DeploymentTaskRuntimeName_Object = MibTableColumn
deploymentTaskRuntimeName = _DeploymentTaskRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 121, 1, 15),
    _DeploymentTaskRuntimeName_Type()
)
deploymentTaskRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentTaskRuntimeName.setStatus("current")


class _DeploymentTaskRuntimeParent_Type(DisplayString):
    """Custom type deploymentTaskRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_DeploymentTaskRuntimeParent_Type.__name__ = "DisplayString"
_DeploymentTaskRuntimeParent_Object = MibTableColumn
deploymentTaskRuntimeParent = _DeploymentTaskRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 121, 1, 20),
    _DeploymentTaskRuntimeParent_Type()
)
deploymentTaskRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentTaskRuntimeParent.setStatus("current")


class _DeploymentTaskRuntimeApplicationName_Type(DisplayString):
    """Custom type deploymentTaskRuntimeApplicationName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_DeploymentTaskRuntimeApplicationName_Type.__name__ = "DisplayString"
_DeploymentTaskRuntimeApplicationName_Object = MibTableColumn
deploymentTaskRuntimeApplicationName = _DeploymentTaskRuntimeApplicationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 121, 1, 25),
    _DeploymentTaskRuntimeApplicationName_Type()
)
deploymentTaskRuntimeApplicationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentTaskRuntimeApplicationName.setStatus("current")


class _DeploymentTaskRuntimeId_Type(DisplayString):
    """Custom type deploymentTaskRuntimeId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_DeploymentTaskRuntimeId_Type.__name__ = "DisplayString"
_DeploymentTaskRuntimeId_Object = MibTableColumn
deploymentTaskRuntimeId = _DeploymentTaskRuntimeId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 121, 1, 30),
    _DeploymentTaskRuntimeId_Type()
)
deploymentTaskRuntimeId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentTaskRuntimeId.setStatus("current")


class _DeploymentTaskRuntimeSource_Type(DisplayString):
    """Custom type deploymentTaskRuntimeSource based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_DeploymentTaskRuntimeSource_Type.__name__ = "DisplayString"
_DeploymentTaskRuntimeSource_Object = MibTableColumn
deploymentTaskRuntimeSource = _DeploymentTaskRuntimeSource_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 121, 1, 35),
    _DeploymentTaskRuntimeSource_Type()
)
deploymentTaskRuntimeSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentTaskRuntimeSource.setStatus("current")


class _DeploymentTaskRuntimeState_Type(DisplayString):
    """Custom type deploymentTaskRuntimeState based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_DeploymentTaskRuntimeState_Type.__name__ = "DisplayString"
_DeploymentTaskRuntimeState_Object = MibTableColumn
deploymentTaskRuntimeState = _DeploymentTaskRuntimeState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 121, 1, 40),
    _DeploymentTaskRuntimeState_Type()
)
deploymentTaskRuntimeState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentTaskRuntimeState.setStatus("current")
_DeploymentTaskRuntimeInUse_Type = Integer32
_DeploymentTaskRuntimeInUse_Object = MibTableColumn
deploymentTaskRuntimeInUse = _DeploymentTaskRuntimeInUse_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 121, 1, 45),
    _DeploymentTaskRuntimeInUse_Type()
)
deploymentTaskRuntimeInUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentTaskRuntimeInUse.setStatus("current")


class _DeploymentTaskRuntimeNewSource_Type(DisplayString):
    """Custom type deploymentTaskRuntimeNewSource based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_DeploymentTaskRuntimeNewSource_Type.__name__ = "DisplayString"
_DeploymentTaskRuntimeNewSource_Object = MibTableColumn
deploymentTaskRuntimeNewSource = _DeploymentTaskRuntimeNewSource_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 121, 1, 46),
    _DeploymentTaskRuntimeNewSource_Type()
)
deploymentTaskRuntimeNewSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentTaskRuntimeNewSource.setStatus("current")
_DomainRuntimeTable_Object = MibTable
domainRuntimeTable = _DomainRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 130)
)
if mibBuilder.loadTexts:
    domainRuntimeTable.setStatus("current")
_DomainRuntimeEntry_Object = MibTableRow
domainRuntimeEntry = _DomainRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 130, 1)
)
domainRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "domainRuntimeIndex"),
)
if mibBuilder.loadTexts:
    domainRuntimeEntry.setStatus("current")


class _DomainRuntimeIndex_Type(DisplayString):
    """Custom type domainRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_DomainRuntimeIndex_Type.__name__ = "DisplayString"
_DomainRuntimeIndex_Object = MibTableColumn
domainRuntimeIndex = _DomainRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 130, 1, 1),
    _DomainRuntimeIndex_Type()
)
domainRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainRuntimeIndex.setStatus("current")


class _DomainRuntimeObjectName_Type(DisplayString):
    """Custom type domainRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_DomainRuntimeObjectName_Type.__name__ = "DisplayString"
_DomainRuntimeObjectName_Object = MibTableColumn
domainRuntimeObjectName = _DomainRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 130, 1, 5),
    _DomainRuntimeObjectName_Type()
)
domainRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainRuntimeObjectName.setStatus("current")


class _DomainRuntimeType_Type(DisplayString):
    """Custom type domainRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_DomainRuntimeType_Type.__name__ = "DisplayString"
_DomainRuntimeType_Object = MibTableColumn
domainRuntimeType = _DomainRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 130, 1, 10),
    _DomainRuntimeType_Type()
)
domainRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainRuntimeType.setStatus("current")


class _DomainRuntimeName_Type(DisplayString):
    """Custom type domainRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_DomainRuntimeName_Type.__name__ = "DisplayString"
_DomainRuntimeName_Object = MibTableColumn
domainRuntimeName = _DomainRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 130, 1, 15),
    _DomainRuntimeName_Type()
)
domainRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainRuntimeName.setStatus("current")


class _DomainRuntimeParent_Type(DisplayString):
    """Custom type domainRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_DomainRuntimeParent_Type.__name__ = "DisplayString"
_DomainRuntimeParent_Object = MibTableColumn
domainRuntimeParent = _DomainRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 130, 1, 20),
    _DomainRuntimeParent_Type()
)
domainRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainRuntimeParent.setStatus("current")


class _DomainRuntimeActivationTime_Type(DisplayString):
    """Custom type domainRuntimeActivationTime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_DomainRuntimeActivationTime_Type.__name__ = "DisplayString"
_DomainRuntimeActivationTime_Object = MibTableColumn
domainRuntimeActivationTime = _DomainRuntimeActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 130, 1, 25),
    _DomainRuntimeActivationTime_Type()
)
domainRuntimeActivationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainRuntimeActivationTime.setStatus("current")
_QueryCacheRuntimeTable_Object = MibTable
queryCacheRuntimeTable = _QueryCacheRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 135)
)
if mibBuilder.loadTexts:
    queryCacheRuntimeTable.setStatus("current")
_QueryCacheRuntimeEntry_Object = MibTableRow
queryCacheRuntimeEntry = _QueryCacheRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 135, 1)
)
queryCacheRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "queryCacheRuntimeIndex"),
)
if mibBuilder.loadTexts:
    queryCacheRuntimeEntry.setStatus("current")


class _QueryCacheRuntimeIndex_Type(DisplayString):
    """Custom type queryCacheRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_QueryCacheRuntimeIndex_Type.__name__ = "DisplayString"
_QueryCacheRuntimeIndex_Object = MibTableColumn
queryCacheRuntimeIndex = _QueryCacheRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 135, 1, 1),
    _QueryCacheRuntimeIndex_Type()
)
queryCacheRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    queryCacheRuntimeIndex.setStatus("current")


class _QueryCacheRuntimeObjectName_Type(DisplayString):
    """Custom type queryCacheRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_QueryCacheRuntimeObjectName_Type.__name__ = "DisplayString"
_QueryCacheRuntimeObjectName_Object = MibTableColumn
queryCacheRuntimeObjectName = _QueryCacheRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 135, 1, 5),
    _QueryCacheRuntimeObjectName_Type()
)
queryCacheRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    queryCacheRuntimeObjectName.setStatus("current")


class _QueryCacheRuntimeType_Type(DisplayString):
    """Custom type queryCacheRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_QueryCacheRuntimeType_Type.__name__ = "DisplayString"
_QueryCacheRuntimeType_Object = MibTableColumn
queryCacheRuntimeType = _QueryCacheRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 135, 1, 10),
    _QueryCacheRuntimeType_Type()
)
queryCacheRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    queryCacheRuntimeType.setStatus("current")


class _QueryCacheRuntimeName_Type(DisplayString):
    """Custom type queryCacheRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_QueryCacheRuntimeName_Type.__name__ = "DisplayString"
_QueryCacheRuntimeName_Object = MibTableColumn
queryCacheRuntimeName = _QueryCacheRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 135, 1, 15),
    _QueryCacheRuntimeName_Type()
)
queryCacheRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    queryCacheRuntimeName.setStatus("current")


class _QueryCacheRuntimeParent_Type(DisplayString):
    """Custom type queryCacheRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_QueryCacheRuntimeParent_Type.__name__ = "DisplayString"
_QueryCacheRuntimeParent_Object = MibTableColumn
queryCacheRuntimeParent = _QueryCacheRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 135, 1, 20),
    _QueryCacheRuntimeParent_Type()
)
queryCacheRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    queryCacheRuntimeParent.setStatus("current")
_QueryCacheRuntimeTotalCachedQueriesCount_Type = Integer32
_QueryCacheRuntimeTotalCachedQueriesCount_Object = MibTableColumn
queryCacheRuntimeTotalCachedQueriesCount = _QueryCacheRuntimeTotalCachedQueriesCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 135, 1, 25),
    _QueryCacheRuntimeTotalCachedQueriesCount_Type()
)
queryCacheRuntimeTotalCachedQueriesCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    queryCacheRuntimeTotalCachedQueriesCount.setStatus("current")
_QueryCacheRuntimeCacheAccessCount_Type = Counter64
_QueryCacheRuntimeCacheAccessCount_Object = MibTableColumn
queryCacheRuntimeCacheAccessCount = _QueryCacheRuntimeCacheAccessCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 135, 1, 30),
    _QueryCacheRuntimeCacheAccessCount_Type()
)
queryCacheRuntimeCacheAccessCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    queryCacheRuntimeCacheAccessCount.setStatus("current")
_QueryCacheRuntimeCacheHitCount_Type = Counter64
_QueryCacheRuntimeCacheHitCount_Object = MibTableColumn
queryCacheRuntimeCacheHitCount = _QueryCacheRuntimeCacheHitCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 135, 1, 35),
    _QueryCacheRuntimeCacheHitCount_Type()
)
queryCacheRuntimeCacheHitCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    queryCacheRuntimeCacheHitCount.setStatus("current")
_QueryCacheRuntimeTotalCacheMissCount_Type = Counter64
_QueryCacheRuntimeTotalCacheMissCount_Object = MibTableColumn
queryCacheRuntimeTotalCacheMissCount = _QueryCacheRuntimeTotalCacheMissCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 135, 1, 40),
    _QueryCacheRuntimeTotalCacheMissCount_Type()
)
queryCacheRuntimeTotalCacheMissCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    queryCacheRuntimeTotalCacheMissCount.setStatus("current")
_QueryCacheRuntimeCacheMissByTimeoutCount_Type = Counter64
_QueryCacheRuntimeCacheMissByTimeoutCount_Object = MibTableColumn
queryCacheRuntimeCacheMissByTimeoutCount = _QueryCacheRuntimeCacheMissByTimeoutCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 135, 1, 45),
    _QueryCacheRuntimeCacheMissByTimeoutCount_Type()
)
queryCacheRuntimeCacheMissByTimeoutCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    queryCacheRuntimeCacheMissByTimeoutCount.setStatus("current")
_QueryCacheRuntimeCacheMissByBeanEvictionCount_Type = Counter64
_QueryCacheRuntimeCacheMissByBeanEvictionCount_Object = MibTableColumn
queryCacheRuntimeCacheMissByBeanEvictionCount = _QueryCacheRuntimeCacheMissByBeanEvictionCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 135, 1, 50),
    _QueryCacheRuntimeCacheMissByBeanEvictionCount_Type()
)
queryCacheRuntimeCacheMissByBeanEvictionCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    queryCacheRuntimeCacheMissByBeanEvictionCount.setStatus("current")
_QueryCacheRuntimeCacheMissByRelatedQueryMissCount_Type = Counter64
_QueryCacheRuntimeCacheMissByRelatedQueryMissCount_Object = MibTableColumn
queryCacheRuntimeCacheMissByRelatedQueryMissCount = _QueryCacheRuntimeCacheMissByRelatedQueryMissCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 135, 1, 55),
    _QueryCacheRuntimeCacheMissByRelatedQueryMissCount_Type()
)
queryCacheRuntimeCacheMissByRelatedQueryMissCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    queryCacheRuntimeCacheMissByRelatedQueryMissCount.setStatus("current")
_QueryCacheRuntimeCacheMissByDependentQueryMissCount_Type = Counter64
_QueryCacheRuntimeCacheMissByDependentQueryMissCount_Object = MibTableColumn
queryCacheRuntimeCacheMissByDependentQueryMissCount = _QueryCacheRuntimeCacheMissByDependentQueryMissCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 135, 1, 60),
    _QueryCacheRuntimeCacheMissByDependentQueryMissCount_Type()
)
queryCacheRuntimeCacheMissByDependentQueryMissCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    queryCacheRuntimeCacheMissByDependentQueryMissCount.setStatus("current")
_EjbCacheRuntimeTable_Object = MibTable
ejbCacheRuntimeTable = _EjbCacheRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 137)
)
if mibBuilder.loadTexts:
    ejbCacheRuntimeTable.setStatus("current")
_EjbCacheRuntimeEntry_Object = MibTableRow
ejbCacheRuntimeEntry = _EjbCacheRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 137, 1)
)
ejbCacheRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "ejbCacheRuntimeIndex"),
)
if mibBuilder.loadTexts:
    ejbCacheRuntimeEntry.setStatus("current")


class _EjbCacheRuntimeIndex_Type(DisplayString):
    """Custom type ejbCacheRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_EjbCacheRuntimeIndex_Type.__name__ = "DisplayString"
_EjbCacheRuntimeIndex_Object = MibTableColumn
ejbCacheRuntimeIndex = _EjbCacheRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 137, 1, 1),
    _EjbCacheRuntimeIndex_Type()
)
ejbCacheRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbCacheRuntimeIndex.setStatus("current")


class _EjbCacheRuntimeObjectName_Type(DisplayString):
    """Custom type ejbCacheRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbCacheRuntimeObjectName_Type.__name__ = "DisplayString"
_EjbCacheRuntimeObjectName_Object = MibTableColumn
ejbCacheRuntimeObjectName = _EjbCacheRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 137, 1, 5),
    _EjbCacheRuntimeObjectName_Type()
)
ejbCacheRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbCacheRuntimeObjectName.setStatus("current")


class _EjbCacheRuntimeType_Type(DisplayString):
    """Custom type ejbCacheRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EjbCacheRuntimeType_Type.__name__ = "DisplayString"
_EjbCacheRuntimeType_Object = MibTableColumn
ejbCacheRuntimeType = _EjbCacheRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 137, 1, 10),
    _EjbCacheRuntimeType_Type()
)
ejbCacheRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbCacheRuntimeType.setStatus("current")


class _EjbCacheRuntimeName_Type(DisplayString):
    """Custom type ejbCacheRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EjbCacheRuntimeName_Type.__name__ = "DisplayString"
_EjbCacheRuntimeName_Object = MibTableColumn
ejbCacheRuntimeName = _EjbCacheRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 137, 1, 15),
    _EjbCacheRuntimeName_Type()
)
ejbCacheRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbCacheRuntimeName.setStatus("current")


class _EjbCacheRuntimeParent_Type(DisplayString):
    """Custom type ejbCacheRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbCacheRuntimeParent_Type.__name__ = "DisplayString"
_EjbCacheRuntimeParent_Object = MibTableColumn
ejbCacheRuntimeParent = _EjbCacheRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 137, 1, 20),
    _EjbCacheRuntimeParent_Type()
)
ejbCacheRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbCacheRuntimeParent.setStatus("current")


class _EjbCacheRuntimeActivationCount_Type(DisplayString):
    """Custom type ejbCacheRuntimeActivationCount based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_EjbCacheRuntimeActivationCount_Type.__name__ = "DisplayString"
_EjbCacheRuntimeActivationCount_Object = MibTableColumn
ejbCacheRuntimeActivationCount = _EjbCacheRuntimeActivationCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 137, 1, 25),
    _EjbCacheRuntimeActivationCount_Type()
)
ejbCacheRuntimeActivationCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbCacheRuntimeActivationCount.setStatus("current")
_EjbCacheRuntimeCacheAccessCount_Type = Counter64
_EjbCacheRuntimeCacheAccessCount_Object = MibTableColumn
ejbCacheRuntimeCacheAccessCount = _EjbCacheRuntimeCacheAccessCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 137, 1, 30),
    _EjbCacheRuntimeCacheAccessCount_Type()
)
ejbCacheRuntimeCacheAccessCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbCacheRuntimeCacheAccessCount.setStatus("current")
_EjbCacheRuntimeCachedBeansCurrentCount_Type = Counter64
_EjbCacheRuntimeCachedBeansCurrentCount_Object = MibTableColumn
ejbCacheRuntimeCachedBeansCurrentCount = _EjbCacheRuntimeCachedBeansCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 137, 1, 35),
    _EjbCacheRuntimeCachedBeansCurrentCount_Type()
)
ejbCacheRuntimeCachedBeansCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbCacheRuntimeCachedBeansCurrentCount.setStatus("current")
_EjbCacheRuntimeCacheHitCount_Type = Counter64
_EjbCacheRuntimeCacheHitCount_Object = MibTableColumn
ejbCacheRuntimeCacheHitCount = _EjbCacheRuntimeCacheHitCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 137, 1, 40),
    _EjbCacheRuntimeCacheHitCount_Type()
)
ejbCacheRuntimeCacheHitCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbCacheRuntimeCacheHitCount.setStatus("current")
_EjbCacheRuntimePassivationCount_Type = Counter64
_EjbCacheRuntimePassivationCount_Object = MibTableColumn
ejbCacheRuntimePassivationCount = _EjbCacheRuntimePassivationCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 137, 1, 45),
    _EjbCacheRuntimePassivationCount_Type()
)
ejbCacheRuntimePassivationCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbCacheRuntimePassivationCount.setStatus("current")
_EjbCacheRuntimeCacheMissCount_Type = Counter64
_EjbCacheRuntimeCacheMissCount_Object = MibTableColumn
ejbCacheRuntimeCacheMissCount = _EjbCacheRuntimeCacheMissCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 137, 1, 46),
    _EjbCacheRuntimeCacheMissCount_Type()
)
ejbCacheRuntimeCacheMissCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbCacheRuntimeCacheMissCount.setStatus("current")
_EjbRuntimeTable_Object = MibTable
ejbRuntimeTable = _EjbRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 138)
)
if mibBuilder.loadTexts:
    ejbRuntimeTable.setStatus("current")
_EjbRuntimeEntry_Object = MibTableRow
ejbRuntimeEntry = _EjbRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 138, 1)
)
ejbRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "ejbRuntimeIndex"),
)
if mibBuilder.loadTexts:
    ejbRuntimeEntry.setStatus("current")


class _EjbRuntimeIndex_Type(DisplayString):
    """Custom type ejbRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_EjbRuntimeIndex_Type.__name__ = "DisplayString"
_EjbRuntimeIndex_Object = MibTableColumn
ejbRuntimeIndex = _EjbRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 138, 1, 1),
    _EjbRuntimeIndex_Type()
)
ejbRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbRuntimeIndex.setStatus("current")


class _EjbRuntimeObjectName_Type(DisplayString):
    """Custom type ejbRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbRuntimeObjectName_Type.__name__ = "DisplayString"
_EjbRuntimeObjectName_Object = MibTableColumn
ejbRuntimeObjectName = _EjbRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 138, 1, 5),
    _EjbRuntimeObjectName_Type()
)
ejbRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbRuntimeObjectName.setStatus("current")


class _EjbRuntimeType_Type(DisplayString):
    """Custom type ejbRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EjbRuntimeType_Type.__name__ = "DisplayString"
_EjbRuntimeType_Object = MibTableColumn
ejbRuntimeType = _EjbRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 138, 1, 10),
    _EjbRuntimeType_Type()
)
ejbRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbRuntimeType.setStatus("current")


class _EjbRuntimeName_Type(DisplayString):
    """Custom type ejbRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EjbRuntimeName_Type.__name__ = "DisplayString"
_EjbRuntimeName_Object = MibTableColumn
ejbRuntimeName = _EjbRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 138, 1, 15),
    _EjbRuntimeName_Type()
)
ejbRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbRuntimeName.setStatus("current")


class _EjbRuntimeParent_Type(DisplayString):
    """Custom type ejbRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbRuntimeParent_Type.__name__ = "DisplayString"
_EjbRuntimeParent_Object = MibTableColumn
ejbRuntimeParent = _EjbRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 138, 1, 20),
    _EjbRuntimeParent_Type()
)
ejbRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbRuntimeParent.setStatus("current")


class _EjbRuntimeEJBName_Type(DisplayString):
    """Custom type ejbRuntimeEJBName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_EjbRuntimeEJBName_Type.__name__ = "DisplayString"
_EjbRuntimeEJBName_Object = MibTableColumn
ejbRuntimeEJBName = _EjbRuntimeEJBName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 138, 1, 25),
    _EjbRuntimeEJBName_Type()
)
ejbRuntimeEJBName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbRuntimeEJBName.setStatus("current")
_EjbComponentRuntimeTable_Object = MibTable
ejbComponentRuntimeTable = _EjbComponentRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 140)
)
if mibBuilder.loadTexts:
    ejbComponentRuntimeTable.setStatus("current")
_EjbComponentRuntimeEntry_Object = MibTableRow
ejbComponentRuntimeEntry = _EjbComponentRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 140, 1)
)
ejbComponentRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "ejbComponentRuntimeIndex"),
)
if mibBuilder.loadTexts:
    ejbComponentRuntimeEntry.setStatus("current")


class _EjbComponentRuntimeIndex_Type(DisplayString):
    """Custom type ejbComponentRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_EjbComponentRuntimeIndex_Type.__name__ = "DisplayString"
_EjbComponentRuntimeIndex_Object = MibTableColumn
ejbComponentRuntimeIndex = _EjbComponentRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 140, 1, 1),
    _EjbComponentRuntimeIndex_Type()
)
ejbComponentRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbComponentRuntimeIndex.setStatus("current")


class _EjbComponentRuntimeObjectName_Type(DisplayString):
    """Custom type ejbComponentRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbComponentRuntimeObjectName_Type.__name__ = "DisplayString"
_EjbComponentRuntimeObjectName_Object = MibTableColumn
ejbComponentRuntimeObjectName = _EjbComponentRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 140, 1, 5),
    _EjbComponentRuntimeObjectName_Type()
)
ejbComponentRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbComponentRuntimeObjectName.setStatus("current")


class _EjbComponentRuntimeType_Type(DisplayString):
    """Custom type ejbComponentRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EjbComponentRuntimeType_Type.__name__ = "DisplayString"
_EjbComponentRuntimeType_Object = MibTableColumn
ejbComponentRuntimeType = _EjbComponentRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 140, 1, 10),
    _EjbComponentRuntimeType_Type()
)
ejbComponentRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbComponentRuntimeType.setStatus("current")


class _EjbComponentRuntimeName_Type(DisplayString):
    """Custom type ejbComponentRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EjbComponentRuntimeName_Type.__name__ = "DisplayString"
_EjbComponentRuntimeName_Object = MibTableColumn
ejbComponentRuntimeName = _EjbComponentRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 140, 1, 15),
    _EjbComponentRuntimeName_Type()
)
ejbComponentRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbComponentRuntimeName.setStatus("current")


class _EjbComponentRuntimeParent_Type(DisplayString):
    """Custom type ejbComponentRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbComponentRuntimeParent_Type.__name__ = "DisplayString"
_EjbComponentRuntimeParent_Object = MibTableColumn
ejbComponentRuntimeParent = _EjbComponentRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 140, 1, 20),
    _EjbComponentRuntimeParent_Type()
)
ejbComponentRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbComponentRuntimeParent.setStatus("current")
_EjbComponentRuntimeModuleId_Type = OctetString
_EjbComponentRuntimeModuleId_Object = MibTableColumn
ejbComponentRuntimeModuleId = _EjbComponentRuntimeModuleId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 140, 1, 21),
    _EjbComponentRuntimeModuleId_Type()
)
ejbComponentRuntimeModuleId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbComponentRuntimeModuleId.setStatus("current")
_EjbComponentRuntimeDeploymentState_Type = Integer32
_EjbComponentRuntimeDeploymentState_Object = MibTableColumn
ejbComponentRuntimeDeploymentState = _EjbComponentRuntimeDeploymentState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 140, 1, 22),
    _EjbComponentRuntimeDeploymentState_Type()
)
ejbComponentRuntimeDeploymentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbComponentRuntimeDeploymentState.setStatus("current")
_EjbLockingRuntimeTable_Object = MibTable
ejbLockingRuntimeTable = _EjbLockingRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 151)
)
if mibBuilder.loadTexts:
    ejbLockingRuntimeTable.setStatus("current")
_EjbLockingRuntimeEntry_Object = MibTableRow
ejbLockingRuntimeEntry = _EjbLockingRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 151, 1)
)
ejbLockingRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "ejbLockingRuntimeIndex"),
)
if mibBuilder.loadTexts:
    ejbLockingRuntimeEntry.setStatus("current")


class _EjbLockingRuntimeIndex_Type(DisplayString):
    """Custom type ejbLockingRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_EjbLockingRuntimeIndex_Type.__name__ = "DisplayString"
_EjbLockingRuntimeIndex_Object = MibTableColumn
ejbLockingRuntimeIndex = _EjbLockingRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 151, 1, 1),
    _EjbLockingRuntimeIndex_Type()
)
ejbLockingRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbLockingRuntimeIndex.setStatus("current")


class _EjbLockingRuntimeObjectName_Type(DisplayString):
    """Custom type ejbLockingRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbLockingRuntimeObjectName_Type.__name__ = "DisplayString"
_EjbLockingRuntimeObjectName_Object = MibTableColumn
ejbLockingRuntimeObjectName = _EjbLockingRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 151, 1, 5),
    _EjbLockingRuntimeObjectName_Type()
)
ejbLockingRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbLockingRuntimeObjectName.setStatus("current")


class _EjbLockingRuntimeType_Type(DisplayString):
    """Custom type ejbLockingRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EjbLockingRuntimeType_Type.__name__ = "DisplayString"
_EjbLockingRuntimeType_Object = MibTableColumn
ejbLockingRuntimeType = _EjbLockingRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 151, 1, 10),
    _EjbLockingRuntimeType_Type()
)
ejbLockingRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbLockingRuntimeType.setStatus("current")


class _EjbLockingRuntimeName_Type(DisplayString):
    """Custom type ejbLockingRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EjbLockingRuntimeName_Type.__name__ = "DisplayString"
_EjbLockingRuntimeName_Object = MibTableColumn
ejbLockingRuntimeName = _EjbLockingRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 151, 1, 15),
    _EjbLockingRuntimeName_Type()
)
ejbLockingRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbLockingRuntimeName.setStatus("current")


class _EjbLockingRuntimeParent_Type(DisplayString):
    """Custom type ejbLockingRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbLockingRuntimeParent_Type.__name__ = "DisplayString"
_EjbLockingRuntimeParent_Object = MibTableColumn
ejbLockingRuntimeParent = _EjbLockingRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 151, 1, 20),
    _EjbLockingRuntimeParent_Type()
)
ejbLockingRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbLockingRuntimeParent.setStatus("current")


class _EjbLockingRuntimeLockEntriesCurrentCount_Type(DisplayString):
    """Custom type ejbLockingRuntimeLockEntriesCurrentCount based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_EjbLockingRuntimeLockEntriesCurrentCount_Type.__name__ = "DisplayString"
_EjbLockingRuntimeLockEntriesCurrentCount_Object = MibTableColumn
ejbLockingRuntimeLockEntriesCurrentCount = _EjbLockingRuntimeLockEntriesCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 151, 1, 25),
    _EjbLockingRuntimeLockEntriesCurrentCount_Type()
)
ejbLockingRuntimeLockEntriesCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbLockingRuntimeLockEntriesCurrentCount.setStatus("current")
_EjbLockingRuntimeLockManagerAccessCount_Type = Counter64
_EjbLockingRuntimeLockManagerAccessCount_Object = MibTableColumn
ejbLockingRuntimeLockManagerAccessCount = _EjbLockingRuntimeLockManagerAccessCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 151, 1, 30),
    _EjbLockingRuntimeLockManagerAccessCount_Type()
)
ejbLockingRuntimeLockManagerAccessCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbLockingRuntimeLockManagerAccessCount.setStatus("current")
_EjbLockingRuntimeWaiterTotalCount_Type = Counter64
_EjbLockingRuntimeWaiterTotalCount_Object = MibTableColumn
ejbLockingRuntimeWaiterTotalCount = _EjbLockingRuntimeWaiterTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 151, 1, 35),
    _EjbLockingRuntimeWaiterTotalCount_Type()
)
ejbLockingRuntimeWaiterTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbLockingRuntimeWaiterTotalCount.setStatus("current")
_EjbLockingRuntimeWaiterCurrentCount_Type = Integer32
_EjbLockingRuntimeWaiterCurrentCount_Object = MibTableColumn
ejbLockingRuntimeWaiterCurrentCount = _EjbLockingRuntimeWaiterCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 151, 1, 40),
    _EjbLockingRuntimeWaiterCurrentCount_Type()
)
ejbLockingRuntimeWaiterCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbLockingRuntimeWaiterCurrentCount.setStatus("current")
_EjbLockingRuntimeTimeoutTotalCount_Type = Counter64
_EjbLockingRuntimeTimeoutTotalCount_Object = MibTableColumn
ejbLockingRuntimeTimeoutTotalCount = _EjbLockingRuntimeTimeoutTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 151, 1, 45),
    _EjbLockingRuntimeTimeoutTotalCount_Type()
)
ejbLockingRuntimeTimeoutTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbLockingRuntimeTimeoutTotalCount.setStatus("current")
_EjbPoolRuntimeTable_Object = MibTable
ejbPoolRuntimeTable = _EjbPoolRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 161)
)
if mibBuilder.loadTexts:
    ejbPoolRuntimeTable.setStatus("current")
_EjbPoolRuntimeEntry_Object = MibTableRow
ejbPoolRuntimeEntry = _EjbPoolRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 161, 1)
)
ejbPoolRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "ejbPoolRuntimeIndex"),
)
if mibBuilder.loadTexts:
    ejbPoolRuntimeEntry.setStatus("current")


class _EjbPoolRuntimeIndex_Type(DisplayString):
    """Custom type ejbPoolRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_EjbPoolRuntimeIndex_Type.__name__ = "DisplayString"
_EjbPoolRuntimeIndex_Object = MibTableColumn
ejbPoolRuntimeIndex = _EjbPoolRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 161, 1, 1),
    _EjbPoolRuntimeIndex_Type()
)
ejbPoolRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbPoolRuntimeIndex.setStatus("current")


class _EjbPoolRuntimeObjectName_Type(DisplayString):
    """Custom type ejbPoolRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbPoolRuntimeObjectName_Type.__name__ = "DisplayString"
_EjbPoolRuntimeObjectName_Object = MibTableColumn
ejbPoolRuntimeObjectName = _EjbPoolRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 161, 1, 5),
    _EjbPoolRuntimeObjectName_Type()
)
ejbPoolRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbPoolRuntimeObjectName.setStatus("current")


class _EjbPoolRuntimeType_Type(DisplayString):
    """Custom type ejbPoolRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EjbPoolRuntimeType_Type.__name__ = "DisplayString"
_EjbPoolRuntimeType_Object = MibTableColumn
ejbPoolRuntimeType = _EjbPoolRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 161, 1, 10),
    _EjbPoolRuntimeType_Type()
)
ejbPoolRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbPoolRuntimeType.setStatus("current")


class _EjbPoolRuntimeName_Type(DisplayString):
    """Custom type ejbPoolRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EjbPoolRuntimeName_Type.__name__ = "DisplayString"
_EjbPoolRuntimeName_Object = MibTableColumn
ejbPoolRuntimeName = _EjbPoolRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 161, 1, 15),
    _EjbPoolRuntimeName_Type()
)
ejbPoolRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbPoolRuntimeName.setStatus("current")


class _EjbPoolRuntimeParent_Type(DisplayString):
    """Custom type ejbPoolRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbPoolRuntimeParent_Type.__name__ = "DisplayString"
_EjbPoolRuntimeParent_Object = MibTableColumn
ejbPoolRuntimeParent = _EjbPoolRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 161, 1, 20),
    _EjbPoolRuntimeParent_Type()
)
ejbPoolRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbPoolRuntimeParent.setStatus("current")
_EjbPoolRuntimeBeansInUseCount_Type = Integer32
_EjbPoolRuntimeBeansInUseCount_Object = MibTableColumn
ejbPoolRuntimeBeansInUseCount = _EjbPoolRuntimeBeansInUseCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 161, 1, 25),
    _EjbPoolRuntimeBeansInUseCount_Type()
)
ejbPoolRuntimeBeansInUseCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbPoolRuntimeBeansInUseCount.setStatus("current")
_EjbPoolRuntimeIdleBeansCount_Type = Integer32
_EjbPoolRuntimeIdleBeansCount_Object = MibTableColumn
ejbPoolRuntimeIdleBeansCount = _EjbPoolRuntimeIdleBeansCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 161, 1, 30),
    _EjbPoolRuntimeIdleBeansCount_Type()
)
ejbPoolRuntimeIdleBeansCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbPoolRuntimeIdleBeansCount.setStatus("current")
_EjbPoolRuntimeTimeoutTotalCount_Type = Counter64
_EjbPoolRuntimeTimeoutTotalCount_Object = MibTableColumn
ejbPoolRuntimeTimeoutTotalCount = _EjbPoolRuntimeTimeoutTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 161, 1, 35),
    _EjbPoolRuntimeTimeoutTotalCount_Type()
)
ejbPoolRuntimeTimeoutTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbPoolRuntimeTimeoutTotalCount.setStatus("current")
_EjbPoolRuntimeWaiterTotalCount_Type = Counter64
_EjbPoolRuntimeWaiterTotalCount_Object = MibTableColumn
ejbPoolRuntimeWaiterTotalCount = _EjbPoolRuntimeWaiterTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 161, 1, 40),
    _EjbPoolRuntimeWaiterTotalCount_Type()
)
ejbPoolRuntimeWaiterTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbPoolRuntimeWaiterTotalCount.setStatus("current")
_EjbPoolRuntimeAccessTotalCount_Type = Counter64
_EjbPoolRuntimeAccessTotalCount_Object = MibTableColumn
ejbPoolRuntimeAccessTotalCount = _EjbPoolRuntimeAccessTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 161, 1, 41),
    _EjbPoolRuntimeAccessTotalCount_Type()
)
ejbPoolRuntimeAccessTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbPoolRuntimeAccessTotalCount.setStatus("current")
_EjbPoolRuntimeBeansInUseCurrentCount_Type = Integer32
_EjbPoolRuntimeBeansInUseCurrentCount_Object = MibTableColumn
ejbPoolRuntimeBeansInUseCurrentCount = _EjbPoolRuntimeBeansInUseCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 161, 1, 42),
    _EjbPoolRuntimeBeansInUseCurrentCount_Type()
)
ejbPoolRuntimeBeansInUseCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbPoolRuntimeBeansInUseCurrentCount.setStatus("current")
_EjbPoolRuntimeDestroyedTotalCount_Type = Counter64
_EjbPoolRuntimeDestroyedTotalCount_Object = MibTableColumn
ejbPoolRuntimeDestroyedTotalCount = _EjbPoolRuntimeDestroyedTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 161, 1, 43),
    _EjbPoolRuntimeDestroyedTotalCount_Type()
)
ejbPoolRuntimeDestroyedTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbPoolRuntimeDestroyedTotalCount.setStatus("current")
_EjbPoolRuntimeMissTotalCount_Type = Counter64
_EjbPoolRuntimeMissTotalCount_Object = MibTableColumn
ejbPoolRuntimeMissTotalCount = _EjbPoolRuntimeMissTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 161, 1, 44),
    _EjbPoolRuntimeMissTotalCount_Type()
)
ejbPoolRuntimeMissTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbPoolRuntimeMissTotalCount.setStatus("current")
_EjbPoolRuntimeWaiterCurrentCount_Type = Integer32
_EjbPoolRuntimeWaiterCurrentCount_Object = MibTableColumn
ejbPoolRuntimeWaiterCurrentCount = _EjbPoolRuntimeWaiterCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 161, 1, 45),
    _EjbPoolRuntimeWaiterCurrentCount_Type()
)
ejbPoolRuntimeWaiterCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbPoolRuntimeWaiterCurrentCount.setStatus("current")
_EjbPoolRuntimePooledBeansCurrentCount_Type = Integer32
_EjbPoolRuntimePooledBeansCurrentCount_Object = MibTableColumn
ejbPoolRuntimePooledBeansCurrentCount = _EjbPoolRuntimePooledBeansCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 161, 1, 46),
    _EjbPoolRuntimePooledBeansCurrentCount_Type()
)
ejbPoolRuntimePooledBeansCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbPoolRuntimePooledBeansCurrentCount.setStatus("current")
_EjbTimerRuntimeTable_Object = MibTable
ejbTimerRuntimeTable = _EjbTimerRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 162)
)
if mibBuilder.loadTexts:
    ejbTimerRuntimeTable.setStatus("current")
_EjbTimerRuntimeEntry_Object = MibTableRow
ejbTimerRuntimeEntry = _EjbTimerRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 162, 1)
)
ejbTimerRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "ejbTimerRuntimeIndex"),
)
if mibBuilder.loadTexts:
    ejbTimerRuntimeEntry.setStatus("current")


class _EjbTimerRuntimeIndex_Type(DisplayString):
    """Custom type ejbTimerRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_EjbTimerRuntimeIndex_Type.__name__ = "DisplayString"
_EjbTimerRuntimeIndex_Object = MibTableColumn
ejbTimerRuntimeIndex = _EjbTimerRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 162, 1, 1),
    _EjbTimerRuntimeIndex_Type()
)
ejbTimerRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbTimerRuntimeIndex.setStatus("current")


class _EjbTimerRuntimeObjectName_Type(DisplayString):
    """Custom type ejbTimerRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbTimerRuntimeObjectName_Type.__name__ = "DisplayString"
_EjbTimerRuntimeObjectName_Object = MibTableColumn
ejbTimerRuntimeObjectName = _EjbTimerRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 162, 1, 5),
    _EjbTimerRuntimeObjectName_Type()
)
ejbTimerRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbTimerRuntimeObjectName.setStatus("current")


class _EjbTimerRuntimeType_Type(DisplayString):
    """Custom type ejbTimerRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EjbTimerRuntimeType_Type.__name__ = "DisplayString"
_EjbTimerRuntimeType_Object = MibTableColumn
ejbTimerRuntimeType = _EjbTimerRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 162, 1, 10),
    _EjbTimerRuntimeType_Type()
)
ejbTimerRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbTimerRuntimeType.setStatus("current")


class _EjbTimerRuntimeName_Type(DisplayString):
    """Custom type ejbTimerRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EjbTimerRuntimeName_Type.__name__ = "DisplayString"
_EjbTimerRuntimeName_Object = MibTableColumn
ejbTimerRuntimeName = _EjbTimerRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 162, 1, 15),
    _EjbTimerRuntimeName_Type()
)
ejbTimerRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbTimerRuntimeName.setStatus("current")


class _EjbTimerRuntimeParent_Type(DisplayString):
    """Custom type ejbTimerRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbTimerRuntimeParent_Type.__name__ = "DisplayString"
_EjbTimerRuntimeParent_Object = MibTableColumn
ejbTimerRuntimeParent = _EjbTimerRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 162, 1, 20),
    _EjbTimerRuntimeParent_Type()
)
ejbTimerRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbTimerRuntimeParent.setStatus("current")
_EjbTimerRuntimeDisabledTimerCount_Type = Integer32
_EjbTimerRuntimeDisabledTimerCount_Object = MibTableColumn
ejbTimerRuntimeDisabledTimerCount = _EjbTimerRuntimeDisabledTimerCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 162, 1, 25),
    _EjbTimerRuntimeDisabledTimerCount_Type()
)
ejbTimerRuntimeDisabledTimerCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbTimerRuntimeDisabledTimerCount.setStatus("current")
_EjbTimerRuntimeCancelledTimerCount_Type = Counter64
_EjbTimerRuntimeCancelledTimerCount_Object = MibTableColumn
ejbTimerRuntimeCancelledTimerCount = _EjbTimerRuntimeCancelledTimerCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 162, 1, 30),
    _EjbTimerRuntimeCancelledTimerCount_Type()
)
ejbTimerRuntimeCancelledTimerCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbTimerRuntimeCancelledTimerCount.setStatus("current")
_EjbTimerRuntimeTimeoutCount_Type = Counter64
_EjbTimerRuntimeTimeoutCount_Object = MibTableColumn
ejbTimerRuntimeTimeoutCount = _EjbTimerRuntimeTimeoutCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 162, 1, 35),
    _EjbTimerRuntimeTimeoutCount_Type()
)
ejbTimerRuntimeTimeoutCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbTimerRuntimeTimeoutCount.setStatus("current")
_EjbTimerRuntimeActiveTimerCount_Type = Integer32
_EjbTimerRuntimeActiveTimerCount_Object = MibTableColumn
ejbTimerRuntimeActiveTimerCount = _EjbTimerRuntimeActiveTimerCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 162, 1, 40),
    _EjbTimerRuntimeActiveTimerCount_Type()
)
ejbTimerRuntimeActiveTimerCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbTimerRuntimeActiveTimerCount.setStatus("current")
_EjbTransactionRuntimeTable_Object = MibTable
ejbTransactionRuntimeTable = _EjbTransactionRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 171)
)
if mibBuilder.loadTexts:
    ejbTransactionRuntimeTable.setStatus("current")
_EjbTransactionRuntimeEntry_Object = MibTableRow
ejbTransactionRuntimeEntry = _EjbTransactionRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 171, 1)
)
ejbTransactionRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "ejbTransactionRuntimeIndex"),
)
if mibBuilder.loadTexts:
    ejbTransactionRuntimeEntry.setStatus("current")


class _EjbTransactionRuntimeIndex_Type(DisplayString):
    """Custom type ejbTransactionRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_EjbTransactionRuntimeIndex_Type.__name__ = "DisplayString"
_EjbTransactionRuntimeIndex_Object = MibTableColumn
ejbTransactionRuntimeIndex = _EjbTransactionRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 171, 1, 1),
    _EjbTransactionRuntimeIndex_Type()
)
ejbTransactionRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbTransactionRuntimeIndex.setStatus("current")


class _EjbTransactionRuntimeObjectName_Type(DisplayString):
    """Custom type ejbTransactionRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbTransactionRuntimeObjectName_Type.__name__ = "DisplayString"
_EjbTransactionRuntimeObjectName_Object = MibTableColumn
ejbTransactionRuntimeObjectName = _EjbTransactionRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 171, 1, 5),
    _EjbTransactionRuntimeObjectName_Type()
)
ejbTransactionRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbTransactionRuntimeObjectName.setStatus("current")


class _EjbTransactionRuntimeType_Type(DisplayString):
    """Custom type ejbTransactionRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EjbTransactionRuntimeType_Type.__name__ = "DisplayString"
_EjbTransactionRuntimeType_Object = MibTableColumn
ejbTransactionRuntimeType = _EjbTransactionRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 171, 1, 10),
    _EjbTransactionRuntimeType_Type()
)
ejbTransactionRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbTransactionRuntimeType.setStatus("current")


class _EjbTransactionRuntimeName_Type(DisplayString):
    """Custom type ejbTransactionRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EjbTransactionRuntimeName_Type.__name__ = "DisplayString"
_EjbTransactionRuntimeName_Object = MibTableColumn
ejbTransactionRuntimeName = _EjbTransactionRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 171, 1, 15),
    _EjbTransactionRuntimeName_Type()
)
ejbTransactionRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbTransactionRuntimeName.setStatus("current")


class _EjbTransactionRuntimeParent_Type(DisplayString):
    """Custom type ejbTransactionRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbTransactionRuntimeParent_Type.__name__ = "DisplayString"
_EjbTransactionRuntimeParent_Object = MibTableColumn
ejbTransactionRuntimeParent = _EjbTransactionRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 171, 1, 20),
    _EjbTransactionRuntimeParent_Type()
)
ejbTransactionRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbTransactionRuntimeParent.setStatus("current")
_EjbTransactionRuntimeTransactionsCommittedTotalCount_Type = Counter64
_EjbTransactionRuntimeTransactionsCommittedTotalCount_Object = MibTableColumn
ejbTransactionRuntimeTransactionsCommittedTotalCount = _EjbTransactionRuntimeTransactionsCommittedTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 171, 1, 25),
    _EjbTransactionRuntimeTransactionsCommittedTotalCount_Type()
)
ejbTransactionRuntimeTransactionsCommittedTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbTransactionRuntimeTransactionsCommittedTotalCount.setStatus("current")
_EjbTransactionRuntimeTransactionsRolledBackTotalCount_Type = Counter64
_EjbTransactionRuntimeTransactionsRolledBackTotalCount_Object = MibTableColumn
ejbTransactionRuntimeTransactionsRolledBackTotalCount = _EjbTransactionRuntimeTransactionsRolledBackTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 171, 1, 30),
    _EjbTransactionRuntimeTransactionsRolledBackTotalCount_Type()
)
ejbTransactionRuntimeTransactionsRolledBackTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbTransactionRuntimeTransactionsRolledBackTotalCount.setStatus("current")
_EjbTransactionRuntimeTransactionsTimedOutTotalCount_Type = Counter64
_EjbTransactionRuntimeTransactionsTimedOutTotalCount_Object = MibTableColumn
ejbTransactionRuntimeTransactionsTimedOutTotalCount = _EjbTransactionRuntimeTransactionsTimedOutTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 171, 1, 35),
    _EjbTransactionRuntimeTransactionsTimedOutTotalCount_Type()
)
ejbTransactionRuntimeTransactionsTimedOutTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbTransactionRuntimeTransactionsTimedOutTotalCount.setStatus("current")
_EntityCacheCumulativeRuntimeTable_Object = MibTable
entityCacheCumulativeRuntimeTable = _EntityCacheCumulativeRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172)
)
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeTable.setStatus("current")
_EntityCacheCumulativeRuntimeEntry_Object = MibTableRow
entityCacheCumulativeRuntimeEntry = _EntityCacheCumulativeRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1)
)
entityCacheCumulativeRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "entityCacheCumulativeRuntimeIndex"),
)
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeEntry.setStatus("current")


class _EntityCacheCumulativeRuntimeIndex_Type(DisplayString):
    """Custom type entityCacheCumulativeRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_EntityCacheCumulativeRuntimeIndex_Type.__name__ = "DisplayString"
_EntityCacheCumulativeRuntimeIndex_Object = MibTableColumn
entityCacheCumulativeRuntimeIndex = _EntityCacheCumulativeRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 1),
    _EntityCacheCumulativeRuntimeIndex_Type()
)
entityCacheCumulativeRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeIndex.setStatus("current")


class _EntityCacheCumulativeRuntimeObjectName_Type(DisplayString):
    """Custom type entityCacheCumulativeRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EntityCacheCumulativeRuntimeObjectName_Type.__name__ = "DisplayString"
_EntityCacheCumulativeRuntimeObjectName_Object = MibTableColumn
entityCacheCumulativeRuntimeObjectName = _EntityCacheCumulativeRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 5),
    _EntityCacheCumulativeRuntimeObjectName_Type()
)
entityCacheCumulativeRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeObjectName.setStatus("current")


class _EntityCacheCumulativeRuntimeType_Type(DisplayString):
    """Custom type entityCacheCumulativeRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EntityCacheCumulativeRuntimeType_Type.__name__ = "DisplayString"
_EntityCacheCumulativeRuntimeType_Object = MibTableColumn
entityCacheCumulativeRuntimeType = _EntityCacheCumulativeRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 10),
    _EntityCacheCumulativeRuntimeType_Type()
)
entityCacheCumulativeRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeType.setStatus("current")


class _EntityCacheCumulativeRuntimeName_Type(DisplayString):
    """Custom type entityCacheCumulativeRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EntityCacheCumulativeRuntimeName_Type.__name__ = "DisplayString"
_EntityCacheCumulativeRuntimeName_Object = MibTableColumn
entityCacheCumulativeRuntimeName = _EntityCacheCumulativeRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 15),
    _EntityCacheCumulativeRuntimeName_Type()
)
entityCacheCumulativeRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeName.setStatus("current")


class _EntityCacheCumulativeRuntimeParent_Type(DisplayString):
    """Custom type entityCacheCumulativeRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EntityCacheCumulativeRuntimeParent_Type.__name__ = "DisplayString"
_EntityCacheCumulativeRuntimeParent_Object = MibTableColumn
entityCacheCumulativeRuntimeParent = _EntityCacheCumulativeRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 20),
    _EntityCacheCumulativeRuntimeParent_Type()
)
entityCacheCumulativeRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeParent.setStatus("current")
_EntityCacheCumulativeRuntimeAvgEntrySizeDiskPurged_Type = Integer32
_EntityCacheCumulativeRuntimeAvgEntrySizeDiskPurged_Object = MibTableColumn
entityCacheCumulativeRuntimeAvgEntrySizeDiskPurged = _EntityCacheCumulativeRuntimeAvgEntrySizeDiskPurged_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 25),
    _EntityCacheCumulativeRuntimeAvgEntrySizeDiskPurged_Type()
)
entityCacheCumulativeRuntimeAvgEntrySizeDiskPurged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeAvgEntrySizeDiskPurged.setStatus("current")
_EntityCacheCumulativeRuntimeAvgEntrySizeMemoryPurged_Type = Integer32
_EntityCacheCumulativeRuntimeAvgEntrySizeMemoryPurged_Object = MibTableColumn
entityCacheCumulativeRuntimeAvgEntrySizeMemoryPurged = _EntityCacheCumulativeRuntimeAvgEntrySizeMemoryPurged_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 26),
    _EntityCacheCumulativeRuntimeAvgEntrySizeMemoryPurged_Type()
)
entityCacheCumulativeRuntimeAvgEntrySizeMemoryPurged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeAvgEntrySizeMemoryPurged.setStatus("current")
_EntityCacheCumulativeRuntimeDiskPurgesPerHour_Type = Integer32
_EntityCacheCumulativeRuntimeDiskPurgesPerHour_Object = MibTableColumn
entityCacheCumulativeRuntimeDiskPurgesPerHour = _EntityCacheCumulativeRuntimeDiskPurgesPerHour_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 27),
    _EntityCacheCumulativeRuntimeDiskPurgesPerHour_Type()
)
entityCacheCumulativeRuntimeDiskPurgesPerHour.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeDiskPurgesPerHour.setStatus("current")
_EntityCacheCumulativeRuntimeMostRecentDiskPurge_Type = Integer32
_EntityCacheCumulativeRuntimeMostRecentDiskPurge_Object = MibTableColumn
entityCacheCumulativeRuntimeMostRecentDiskPurge = _EntityCacheCumulativeRuntimeMostRecentDiskPurge_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 28),
    _EntityCacheCumulativeRuntimeMostRecentDiskPurge_Type()
)
entityCacheCumulativeRuntimeMostRecentDiskPurge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeMostRecentDiskPurge.setStatus("current")
_EntityCacheCumulativeRuntimeMostRecentMemoryPurge_Type = Integer32
_EntityCacheCumulativeRuntimeMostRecentMemoryPurge_Object = MibTableColumn
entityCacheCumulativeRuntimeMostRecentMemoryPurge = _EntityCacheCumulativeRuntimeMostRecentMemoryPurge_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 29),
    _EntityCacheCumulativeRuntimeMostRecentMemoryPurge_Type()
)
entityCacheCumulativeRuntimeMostRecentMemoryPurge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeMostRecentMemoryPurge.setStatus("current")
_EntityCacheCumulativeRuntimePercentRejected_Type = Integer32
_EntityCacheCumulativeRuntimePercentRejected_Object = MibTableColumn
entityCacheCumulativeRuntimePercentRejected = _EntityCacheCumulativeRuntimePercentRejected_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 30),
    _EntityCacheCumulativeRuntimePercentRejected_Type()
)
entityCacheCumulativeRuntimePercentRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimePercentRejected.setStatus("current")
_EntityCacheCumulativeRuntimeTotalItemsDiskPurged_Type = Counter64
_EntityCacheCumulativeRuntimeTotalItemsDiskPurged_Object = MibTableColumn
entityCacheCumulativeRuntimeTotalItemsDiskPurged = _EntityCacheCumulativeRuntimeTotalItemsDiskPurged_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 31),
    _EntityCacheCumulativeRuntimeTotalItemsDiskPurged_Type()
)
entityCacheCumulativeRuntimeTotalItemsDiskPurged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeTotalItemsDiskPurged.setStatus("current")
_EntityCacheCumulativeRuntimeTotalItemsMemoryPurged_Type = Counter64
_EntityCacheCumulativeRuntimeTotalItemsMemoryPurged_Object = MibTableColumn
entityCacheCumulativeRuntimeTotalItemsMemoryPurged = _EntityCacheCumulativeRuntimeTotalItemsMemoryPurged_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 32),
    _EntityCacheCumulativeRuntimeTotalItemsMemoryPurged_Type()
)
entityCacheCumulativeRuntimeTotalItemsMemoryPurged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeTotalItemsMemoryPurged.setStatus("current")
_EntityCacheCumulativeRuntimeTotalNumberDiskPurges_Type = Counter64
_EntityCacheCumulativeRuntimeTotalNumberDiskPurges_Object = MibTableColumn
entityCacheCumulativeRuntimeTotalNumberDiskPurges = _EntityCacheCumulativeRuntimeTotalNumberDiskPurges_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 33),
    _EntityCacheCumulativeRuntimeTotalNumberDiskPurges_Type()
)
entityCacheCumulativeRuntimeTotalNumberDiskPurges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeTotalNumberDiskPurges.setStatus("current")
_EntityCacheCumulativeRuntimeTotalNumberMemoryPurges_Type = Counter64
_EntityCacheCumulativeRuntimeTotalNumberMemoryPurges_Object = MibTableColumn
entityCacheCumulativeRuntimeTotalNumberMemoryPurges = _EntityCacheCumulativeRuntimeTotalNumberMemoryPurges_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 34),
    _EntityCacheCumulativeRuntimeTotalNumberMemoryPurges_Type()
)
entityCacheCumulativeRuntimeTotalNumberMemoryPurges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeTotalNumberMemoryPurges.setStatus("current")
_EntityCacheCumulativeRuntimeTotalNumberOfRejections_Type = Counter64
_EntityCacheCumulativeRuntimeTotalNumberOfRejections_Object = MibTableColumn
entityCacheCumulativeRuntimeTotalNumberOfRejections = _EntityCacheCumulativeRuntimeTotalNumberOfRejections_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 35),
    _EntityCacheCumulativeRuntimeTotalNumberOfRejections_Type()
)
entityCacheCumulativeRuntimeTotalNumberOfRejections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeTotalNumberOfRejections.setStatus("current")
_EntityCacheCumulativeRuntimeTotalNumberOfRenewals_Type = Counter64
_EntityCacheCumulativeRuntimeTotalNumberOfRenewals_Object = MibTableColumn
entityCacheCumulativeRuntimeTotalNumberOfRenewals = _EntityCacheCumulativeRuntimeTotalNumberOfRenewals_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 36),
    _EntityCacheCumulativeRuntimeTotalNumberOfRenewals_Type()
)
entityCacheCumulativeRuntimeTotalNumberOfRenewals.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeTotalNumberOfRenewals.setStatus("current")
_EntityCacheCumulativeRuntimeTotalSizeOfRejections_Type = Counter64
_EntityCacheCumulativeRuntimeTotalSizeOfRejections_Object = MibTableColumn
entityCacheCumulativeRuntimeTotalSizeOfRejections = _EntityCacheCumulativeRuntimeTotalSizeOfRejections_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 37),
    _EntityCacheCumulativeRuntimeTotalSizeOfRejections_Type()
)
entityCacheCumulativeRuntimeTotalSizeOfRejections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeTotalSizeOfRejections.setStatus("current")
_EntityCacheCumulativeRuntimeTotalCurrentEntries_Type = Counter64
_EntityCacheCumulativeRuntimeTotalCurrentEntries_Object = MibTableColumn
entityCacheCumulativeRuntimeTotalCurrentEntries = _EntityCacheCumulativeRuntimeTotalCurrentEntries_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 38),
    _EntityCacheCumulativeRuntimeTotalCurrentEntries_Type()
)
entityCacheCumulativeRuntimeTotalCurrentEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeTotalCurrentEntries.setStatus("current")
_EntityCacheCumulativeRuntimeAvgPerEntryDiskSize_Type = OctetString
_EntityCacheCumulativeRuntimeAvgPerEntryDiskSize_Object = MibTableColumn
entityCacheCumulativeRuntimeAvgPerEntryDiskSize = _EntityCacheCumulativeRuntimeAvgPerEntryDiskSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 39),
    _EntityCacheCumulativeRuntimeAvgPerEntryDiskSize_Type()
)
entityCacheCumulativeRuntimeAvgPerEntryDiskSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeAvgPerEntryDiskSize.setStatus("current")
_EntityCacheCumulativeRuntimeTotalPersistentCurrentEntries_Type = Counter64
_EntityCacheCumulativeRuntimeTotalPersistentCurrentEntries_Object = MibTableColumn
entityCacheCumulativeRuntimeTotalPersistentCurrentEntries = _EntityCacheCumulativeRuntimeTotalPersistentCurrentEntries_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 40),
    _EntityCacheCumulativeRuntimeTotalPersistentCurrentEntries_Type()
)
entityCacheCumulativeRuntimeTotalPersistentCurrentEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeTotalPersistentCurrentEntries.setStatus("current")
_EntityCacheCumulativeRuntimeMaxEntryTimeout_Type = OctetString
_EntityCacheCumulativeRuntimeMaxEntryTimeout_Object = MibTableColumn
entityCacheCumulativeRuntimeMaxEntryTimeout = _EntityCacheCumulativeRuntimeMaxEntryTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 41),
    _EntityCacheCumulativeRuntimeMaxEntryTimeout_Type()
)
entityCacheCumulativeRuntimeMaxEntryTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeMaxEntryTimeout.setStatus("current")
_EntityCacheCumulativeRuntimeMaxEntryMemorySize_Type = Counter64
_EntityCacheCumulativeRuntimeMaxEntryMemorySize_Object = MibTableColumn
entityCacheCumulativeRuntimeMaxEntryMemorySize = _EntityCacheCumulativeRuntimeMaxEntryMemorySize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 42),
    _EntityCacheCumulativeRuntimeMaxEntryMemorySize_Type()
)
entityCacheCumulativeRuntimeMaxEntryMemorySize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeMaxEntryMemorySize.setStatus("current")
_EntityCacheCumulativeRuntimeTotalTransientCurrentEntries_Type = Counter64
_EntityCacheCumulativeRuntimeTotalTransientCurrentEntries_Object = MibTableColumn
entityCacheCumulativeRuntimeTotalTransientCurrentEntries = _EntityCacheCumulativeRuntimeTotalTransientCurrentEntries_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 43),
    _EntityCacheCumulativeRuntimeTotalTransientCurrentEntries_Type()
)
entityCacheCumulativeRuntimeTotalTransientCurrentEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeTotalTransientCurrentEntries.setStatus("current")
_EntityCacheCumulativeRuntimeAvgPerEntryMemorySize_Type = OctetString
_EntityCacheCumulativeRuntimeAvgPerEntryMemorySize_Object = MibTableColumn
entityCacheCumulativeRuntimeAvgPerEntryMemorySize = _EntityCacheCumulativeRuntimeAvgPerEntryMemorySize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 44),
    _EntityCacheCumulativeRuntimeAvgPerEntryMemorySize_Type()
)
entityCacheCumulativeRuntimeAvgPerEntryMemorySize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeAvgPerEntryMemorySize.setStatus("current")
_EntityCacheCumulativeRuntimeAvgPercentPersistent_Type = OctetString
_EntityCacheCumulativeRuntimeAvgPercentPersistent_Object = MibTableColumn
entityCacheCumulativeRuntimeAvgPercentPersistent = _EntityCacheCumulativeRuntimeAvgPercentPersistent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 45),
    _EntityCacheCumulativeRuntimeAvgPercentPersistent_Type()
)
entityCacheCumulativeRuntimeAvgPercentPersistent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeAvgPercentPersistent.setStatus("current")
_EntityCacheCumulativeRuntimeMinEntryMemorySize_Type = Counter64
_EntityCacheCumulativeRuntimeMinEntryMemorySize_Object = MibTableColumn
entityCacheCumulativeRuntimeMinEntryMemorySize = _EntityCacheCumulativeRuntimeMinEntryMemorySize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 46),
    _EntityCacheCumulativeRuntimeMinEntryMemorySize_Type()
)
entityCacheCumulativeRuntimeMinEntryMemorySize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeMinEntryMemorySize.setStatus("current")
_EntityCacheCumulativeRuntimeAvgTimeout_Type = OctetString
_EntityCacheCumulativeRuntimeAvgTimeout_Object = MibTableColumn
entityCacheCumulativeRuntimeAvgTimeout = _EntityCacheCumulativeRuntimeAvgTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 47),
    _EntityCacheCumulativeRuntimeAvgTimeout_Type()
)
entityCacheCumulativeRuntimeAvgTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeAvgTimeout.setStatus("current")
_EntityCacheCumulativeRuntimeMemoryPurgesPerHour_Type = OctetString
_EntityCacheCumulativeRuntimeMemoryPurgesPerHour_Object = MibTableColumn
entityCacheCumulativeRuntimeMemoryPurgesPerHour = _EntityCacheCumulativeRuntimeMemoryPurgesPerHour_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 48),
    _EntityCacheCumulativeRuntimeMemoryPurgesPerHour_Type()
)
entityCacheCumulativeRuntimeMemoryPurgesPerHour.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeMemoryPurgesPerHour.setStatus("current")
_EntityCacheCumulativeRuntimeMinEntryTimeout_Type = OctetString
_EntityCacheCumulativeRuntimeMinEntryTimeout_Object = MibTableColumn
entityCacheCumulativeRuntimeMinEntryTimeout = _EntityCacheCumulativeRuntimeMinEntryTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 49),
    _EntityCacheCumulativeRuntimeMinEntryTimeout_Type()
)
entityCacheCumulativeRuntimeMinEntryTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeMinEntryTimeout.setStatus("current")
_EntityCacheCumulativeRuntimeAvgPercentTransient_Type = OctetString
_EntityCacheCumulativeRuntimeAvgPercentTransient_Object = MibTableColumn
entityCacheCumulativeRuntimeAvgPercentTransient = _EntityCacheCumulativeRuntimeAvgPercentTransient_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 172, 1, 50),
    _EntityCacheCumulativeRuntimeAvgPercentTransient_Type()
)
entityCacheCumulativeRuntimeAvgPercentTransient.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCumulativeRuntimeAvgPercentTransient.setStatus("current")
_EntityCacheCurrentStateRuntimeTable_Object = MibTable
entityCacheCurrentStateRuntimeTable = _EntityCacheCurrentStateRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 173)
)
if mibBuilder.loadTexts:
    entityCacheCurrentStateRuntimeTable.setStatus("current")
_EntityCacheCurrentStateRuntimeEntry_Object = MibTableRow
entityCacheCurrentStateRuntimeEntry = _EntityCacheCurrentStateRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 173, 1)
)
entityCacheCurrentStateRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "entityCacheCurrentStateRuntimeIndex"),
)
if mibBuilder.loadTexts:
    entityCacheCurrentStateRuntimeEntry.setStatus("current")


class _EntityCacheCurrentStateRuntimeIndex_Type(DisplayString):
    """Custom type entityCacheCurrentStateRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_EntityCacheCurrentStateRuntimeIndex_Type.__name__ = "DisplayString"
_EntityCacheCurrentStateRuntimeIndex_Object = MibTableColumn
entityCacheCurrentStateRuntimeIndex = _EntityCacheCurrentStateRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 173, 1, 1),
    _EntityCacheCurrentStateRuntimeIndex_Type()
)
entityCacheCurrentStateRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCurrentStateRuntimeIndex.setStatus("current")


class _EntityCacheCurrentStateRuntimeObjectName_Type(DisplayString):
    """Custom type entityCacheCurrentStateRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EntityCacheCurrentStateRuntimeObjectName_Type.__name__ = "DisplayString"
_EntityCacheCurrentStateRuntimeObjectName_Object = MibTableColumn
entityCacheCurrentStateRuntimeObjectName = _EntityCacheCurrentStateRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 173, 1, 5),
    _EntityCacheCurrentStateRuntimeObjectName_Type()
)
entityCacheCurrentStateRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCurrentStateRuntimeObjectName.setStatus("current")


class _EntityCacheCurrentStateRuntimeType_Type(DisplayString):
    """Custom type entityCacheCurrentStateRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EntityCacheCurrentStateRuntimeType_Type.__name__ = "DisplayString"
_EntityCacheCurrentStateRuntimeType_Object = MibTableColumn
entityCacheCurrentStateRuntimeType = _EntityCacheCurrentStateRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 173, 1, 10),
    _EntityCacheCurrentStateRuntimeType_Type()
)
entityCacheCurrentStateRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCurrentStateRuntimeType.setStatus("current")


class _EntityCacheCurrentStateRuntimeName_Type(DisplayString):
    """Custom type entityCacheCurrentStateRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EntityCacheCurrentStateRuntimeName_Type.__name__ = "DisplayString"
_EntityCacheCurrentStateRuntimeName_Object = MibTableColumn
entityCacheCurrentStateRuntimeName = _EntityCacheCurrentStateRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 173, 1, 15),
    _EntityCacheCurrentStateRuntimeName_Type()
)
entityCacheCurrentStateRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCurrentStateRuntimeName.setStatus("current")


class _EntityCacheCurrentStateRuntimeParent_Type(DisplayString):
    """Custom type entityCacheCurrentStateRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EntityCacheCurrentStateRuntimeParent_Type.__name__ = "DisplayString"
_EntityCacheCurrentStateRuntimeParent_Object = MibTableColumn
entityCacheCurrentStateRuntimeParent = _EntityCacheCurrentStateRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 173, 1, 20),
    _EntityCacheCurrentStateRuntimeParent_Type()
)
entityCacheCurrentStateRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCurrentStateRuntimeParent.setStatus("current")
_EntityCacheCurrentStateRuntimeDiskUsage_Type = Counter64
_EntityCacheCurrentStateRuntimeDiskUsage_Object = MibTableColumn
entityCacheCurrentStateRuntimeDiskUsage = _EntityCacheCurrentStateRuntimeDiskUsage_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 173, 1, 25),
    _EntityCacheCurrentStateRuntimeDiskUsage_Type()
)
entityCacheCurrentStateRuntimeDiskUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCurrentStateRuntimeDiskUsage.setStatus("current")
_EntityCacheCurrentStateRuntimeMemoryUsage_Type = Counter64
_EntityCacheCurrentStateRuntimeMemoryUsage_Object = MibTableColumn
entityCacheCurrentStateRuntimeMemoryUsage = _EntityCacheCurrentStateRuntimeMemoryUsage_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 173, 1, 30),
    _EntityCacheCurrentStateRuntimeMemoryUsage_Type()
)
entityCacheCurrentStateRuntimeMemoryUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCurrentStateRuntimeMemoryUsage.setStatus("current")
_EntityCacheCurrentStateRuntimeTotalCurrentEntries_Type = Counter64
_EntityCacheCurrentStateRuntimeTotalCurrentEntries_Object = MibTableColumn
entityCacheCurrentStateRuntimeTotalCurrentEntries = _EntityCacheCurrentStateRuntimeTotalCurrentEntries_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 173, 1, 31),
    _EntityCacheCurrentStateRuntimeTotalCurrentEntries_Type()
)
entityCacheCurrentStateRuntimeTotalCurrentEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCurrentStateRuntimeTotalCurrentEntries.setStatus("current")
_EntityCacheCurrentStateRuntimeMinEntryMemorySize_Type = Counter64
_EntityCacheCurrentStateRuntimeMinEntryMemorySize_Object = MibTableColumn
entityCacheCurrentStateRuntimeMinEntryMemorySize = _EntityCacheCurrentStateRuntimeMinEntryMemorySize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 173, 1, 32),
    _EntityCacheCurrentStateRuntimeMinEntryMemorySize_Type()
)
entityCacheCurrentStateRuntimeMinEntryMemorySize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCurrentStateRuntimeMinEntryMemorySize.setStatus("current")
_EntityCacheCurrentStateRuntimeAvgPercentPersistent_Type = OctetString
_EntityCacheCurrentStateRuntimeAvgPercentPersistent_Object = MibTableColumn
entityCacheCurrentStateRuntimeAvgPercentPersistent = _EntityCacheCurrentStateRuntimeAvgPercentPersistent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 173, 1, 33),
    _EntityCacheCurrentStateRuntimeAvgPercentPersistent_Type()
)
entityCacheCurrentStateRuntimeAvgPercentPersistent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCurrentStateRuntimeAvgPercentPersistent.setStatus("current")
_EntityCacheCurrentStateRuntimeAvgTimeout_Type = OctetString
_EntityCacheCurrentStateRuntimeAvgTimeout_Object = MibTableColumn
entityCacheCurrentStateRuntimeAvgTimeout = _EntityCacheCurrentStateRuntimeAvgTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 173, 1, 34),
    _EntityCacheCurrentStateRuntimeAvgTimeout_Type()
)
entityCacheCurrentStateRuntimeAvgTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCurrentStateRuntimeAvgTimeout.setStatus("current")
_EntityCacheCurrentStateRuntimeAvgPerEntryDiskSize_Type = OctetString
_EntityCacheCurrentStateRuntimeAvgPerEntryDiskSize_Object = MibTableColumn
entityCacheCurrentStateRuntimeAvgPerEntryDiskSize = _EntityCacheCurrentStateRuntimeAvgPerEntryDiskSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 173, 1, 35),
    _EntityCacheCurrentStateRuntimeAvgPerEntryDiskSize_Type()
)
entityCacheCurrentStateRuntimeAvgPerEntryDiskSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCurrentStateRuntimeAvgPerEntryDiskSize.setStatus("current")
_EntityCacheCurrentStateRuntimeTotalPersistentCurrentEntries_Type = Counter64
_EntityCacheCurrentStateRuntimeTotalPersistentCurrentEntries_Object = MibTableColumn
entityCacheCurrentStateRuntimeTotalPersistentCurrentEntries = _EntityCacheCurrentStateRuntimeTotalPersistentCurrentEntries_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 173, 1, 36),
    _EntityCacheCurrentStateRuntimeTotalPersistentCurrentEntries_Type()
)
entityCacheCurrentStateRuntimeTotalPersistentCurrentEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCurrentStateRuntimeTotalPersistentCurrentEntries.setStatus("current")
_EntityCacheCurrentStateRuntimeMaxEntryTimeout_Type = OctetString
_EntityCacheCurrentStateRuntimeMaxEntryTimeout_Object = MibTableColumn
entityCacheCurrentStateRuntimeMaxEntryTimeout = _EntityCacheCurrentStateRuntimeMaxEntryTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 173, 1, 37),
    _EntityCacheCurrentStateRuntimeMaxEntryTimeout_Type()
)
entityCacheCurrentStateRuntimeMaxEntryTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCurrentStateRuntimeMaxEntryTimeout.setStatus("current")
_EntityCacheCurrentStateRuntimeMaxEntryMemorySize_Type = Counter64
_EntityCacheCurrentStateRuntimeMaxEntryMemorySize_Object = MibTableColumn
entityCacheCurrentStateRuntimeMaxEntryMemorySize = _EntityCacheCurrentStateRuntimeMaxEntryMemorySize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 173, 1, 38),
    _EntityCacheCurrentStateRuntimeMaxEntryMemorySize_Type()
)
entityCacheCurrentStateRuntimeMaxEntryMemorySize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCurrentStateRuntimeMaxEntryMemorySize.setStatus("current")
_EntityCacheCurrentStateRuntimeTotalTransientCurrentEntries_Type = Counter64
_EntityCacheCurrentStateRuntimeTotalTransientCurrentEntries_Object = MibTableColumn
entityCacheCurrentStateRuntimeTotalTransientCurrentEntries = _EntityCacheCurrentStateRuntimeTotalTransientCurrentEntries_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 173, 1, 39),
    _EntityCacheCurrentStateRuntimeTotalTransientCurrentEntries_Type()
)
entityCacheCurrentStateRuntimeTotalTransientCurrentEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCurrentStateRuntimeTotalTransientCurrentEntries.setStatus("current")
_EntityCacheCurrentStateRuntimeAvgPerEntryMemorySize_Type = OctetString
_EntityCacheCurrentStateRuntimeAvgPerEntryMemorySize_Object = MibTableColumn
entityCacheCurrentStateRuntimeAvgPerEntryMemorySize = _EntityCacheCurrentStateRuntimeAvgPerEntryMemorySize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 173, 1, 40),
    _EntityCacheCurrentStateRuntimeAvgPerEntryMemorySize_Type()
)
entityCacheCurrentStateRuntimeAvgPerEntryMemorySize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCurrentStateRuntimeAvgPerEntryMemorySize.setStatus("current")
_EntityCacheCurrentStateRuntimeMinEntryTimeout_Type = OctetString
_EntityCacheCurrentStateRuntimeMinEntryTimeout_Object = MibTableColumn
entityCacheCurrentStateRuntimeMinEntryTimeout = _EntityCacheCurrentStateRuntimeMinEntryTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 173, 1, 41),
    _EntityCacheCurrentStateRuntimeMinEntryTimeout_Type()
)
entityCacheCurrentStateRuntimeMinEntryTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCurrentStateRuntimeMinEntryTimeout.setStatus("current")
_EntityCacheCurrentStateRuntimeAvgPercentTransient_Type = OctetString
_EntityCacheCurrentStateRuntimeAvgPercentTransient_Object = MibTableColumn
entityCacheCurrentStateRuntimeAvgPercentTransient = _EntityCacheCurrentStateRuntimeAvgPercentTransient_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 173, 1, 42),
    _EntityCacheCurrentStateRuntimeAvgPercentTransient_Type()
)
entityCacheCurrentStateRuntimeAvgPercentTransient.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheCurrentStateRuntimeAvgPercentTransient.setStatus("current")
_EntityCacheRuntimeTable_Object = MibTable
entityCacheRuntimeTable = _EntityCacheRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 174)
)
if mibBuilder.loadTexts:
    entityCacheRuntimeTable.setStatus("current")
_EntityCacheRuntimeEntry_Object = MibTableRow
entityCacheRuntimeEntry = _EntityCacheRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 174, 1)
)
entityCacheRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "entityCacheRuntimeIndex"),
)
if mibBuilder.loadTexts:
    entityCacheRuntimeEntry.setStatus("current")


class _EntityCacheRuntimeIndex_Type(DisplayString):
    """Custom type entityCacheRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_EntityCacheRuntimeIndex_Type.__name__ = "DisplayString"
_EntityCacheRuntimeIndex_Object = MibTableColumn
entityCacheRuntimeIndex = _EntityCacheRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 174, 1, 1),
    _EntityCacheRuntimeIndex_Type()
)
entityCacheRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheRuntimeIndex.setStatus("current")


class _EntityCacheRuntimeObjectName_Type(DisplayString):
    """Custom type entityCacheRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EntityCacheRuntimeObjectName_Type.__name__ = "DisplayString"
_EntityCacheRuntimeObjectName_Object = MibTableColumn
entityCacheRuntimeObjectName = _EntityCacheRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 174, 1, 5),
    _EntityCacheRuntimeObjectName_Type()
)
entityCacheRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheRuntimeObjectName.setStatus("current")


class _EntityCacheRuntimeType_Type(DisplayString):
    """Custom type entityCacheRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EntityCacheRuntimeType_Type.__name__ = "DisplayString"
_EntityCacheRuntimeType_Object = MibTableColumn
entityCacheRuntimeType = _EntityCacheRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 174, 1, 10),
    _EntityCacheRuntimeType_Type()
)
entityCacheRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheRuntimeType.setStatus("current")


class _EntityCacheRuntimeName_Type(DisplayString):
    """Custom type entityCacheRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EntityCacheRuntimeName_Type.__name__ = "DisplayString"
_EntityCacheRuntimeName_Object = MibTableColumn
entityCacheRuntimeName = _EntityCacheRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 174, 1, 15),
    _EntityCacheRuntimeName_Type()
)
entityCacheRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheRuntimeName.setStatus("current")


class _EntityCacheRuntimeParent_Type(DisplayString):
    """Custom type entityCacheRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EntityCacheRuntimeParent_Type.__name__ = "DisplayString"
_EntityCacheRuntimeParent_Object = MibTableColumn
entityCacheRuntimeParent = _EntityCacheRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 174, 1, 20),
    _EntityCacheRuntimeParent_Type()
)
entityCacheRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheRuntimeParent.setStatus("current")
_EntityCacheRuntimeAvgPercentTransient_Type = Integer32
_EntityCacheRuntimeAvgPercentTransient_Object = MibTableColumn
entityCacheRuntimeAvgPercentTransient = _EntityCacheRuntimeAvgPercentTransient_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 174, 1, 25),
    _EntityCacheRuntimeAvgPercentTransient_Type()
)
entityCacheRuntimeAvgPercentTransient.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheRuntimeAvgPercentTransient.setStatus("current")
_EntityCacheRuntimeAvgPerEntryDiskSize_Type = Integer32
_EntityCacheRuntimeAvgPerEntryDiskSize_Object = MibTableColumn
entityCacheRuntimeAvgPerEntryDiskSize = _EntityCacheRuntimeAvgPerEntryDiskSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 174, 1, 30),
    _EntityCacheRuntimeAvgPerEntryDiskSize_Type()
)
entityCacheRuntimeAvgPerEntryDiskSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheRuntimeAvgPerEntryDiskSize.setStatus("current")
_EntityCacheRuntimeAvgPercentPersistent_Type = Integer32
_EntityCacheRuntimeAvgPercentPersistent_Object = MibTableColumn
entityCacheRuntimeAvgPercentPersistent = _EntityCacheRuntimeAvgPercentPersistent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 174, 1, 31),
    _EntityCacheRuntimeAvgPercentPersistent_Type()
)
entityCacheRuntimeAvgPercentPersistent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheRuntimeAvgPercentPersistent.setStatus("current")
_EntityCacheRuntimeAvgPerEntryMemorySize_Type = Integer32
_EntityCacheRuntimeAvgPerEntryMemorySize_Object = MibTableColumn
entityCacheRuntimeAvgPerEntryMemorySize = _EntityCacheRuntimeAvgPerEntryMemorySize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 174, 1, 32),
    _EntityCacheRuntimeAvgPerEntryMemorySize_Type()
)
entityCacheRuntimeAvgPerEntryMemorySize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheRuntimeAvgPerEntryMemorySize.setStatus("current")
_EntityCacheRuntimeAvgTimeout_Type = Integer32
_EntityCacheRuntimeAvgTimeout_Object = MibTableColumn
entityCacheRuntimeAvgTimeout = _EntityCacheRuntimeAvgTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 174, 1, 33),
    _EntityCacheRuntimeAvgTimeout_Type()
)
entityCacheRuntimeAvgTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheRuntimeAvgTimeout.setStatus("current")
_EntityCacheRuntimeMaxEntryMemorySize_Type = Counter64
_EntityCacheRuntimeMaxEntryMemorySize_Object = MibTableColumn
entityCacheRuntimeMaxEntryMemorySize = _EntityCacheRuntimeMaxEntryMemorySize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 174, 1, 34),
    _EntityCacheRuntimeMaxEntryMemorySize_Type()
)
entityCacheRuntimeMaxEntryMemorySize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheRuntimeMaxEntryMemorySize.setStatus("current")
_EntityCacheRuntimeMaxEntryTimeout_Type = Integer32
_EntityCacheRuntimeMaxEntryTimeout_Object = MibTableColumn
entityCacheRuntimeMaxEntryTimeout = _EntityCacheRuntimeMaxEntryTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 174, 1, 35),
    _EntityCacheRuntimeMaxEntryTimeout_Type()
)
entityCacheRuntimeMaxEntryTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheRuntimeMaxEntryTimeout.setStatus("current")
_EntityCacheRuntimeMinEntryMemorySize_Type = Counter64
_EntityCacheRuntimeMinEntryMemorySize_Object = MibTableColumn
entityCacheRuntimeMinEntryMemorySize = _EntityCacheRuntimeMinEntryMemorySize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 174, 1, 36),
    _EntityCacheRuntimeMinEntryMemorySize_Type()
)
entityCacheRuntimeMinEntryMemorySize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheRuntimeMinEntryMemorySize.setStatus("current")
_EntityCacheRuntimeMinEntryTimeout_Type = Integer32
_EntityCacheRuntimeMinEntryTimeout_Object = MibTableColumn
entityCacheRuntimeMinEntryTimeout = _EntityCacheRuntimeMinEntryTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 174, 1, 37),
    _EntityCacheRuntimeMinEntryTimeout_Type()
)
entityCacheRuntimeMinEntryTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheRuntimeMinEntryTimeout.setStatus("current")
_EntityCacheRuntimeTotalCurrentEntries_Type = Counter64
_EntityCacheRuntimeTotalCurrentEntries_Object = MibTableColumn
entityCacheRuntimeTotalCurrentEntries = _EntityCacheRuntimeTotalCurrentEntries_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 174, 1, 38),
    _EntityCacheRuntimeTotalCurrentEntries_Type()
)
entityCacheRuntimeTotalCurrentEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheRuntimeTotalCurrentEntries.setStatus("current")
_EntityCacheRuntimeTotalPersistentCurrentEntries_Type = Counter64
_EntityCacheRuntimeTotalPersistentCurrentEntries_Object = MibTableColumn
entityCacheRuntimeTotalPersistentCurrentEntries = _EntityCacheRuntimeTotalPersistentCurrentEntries_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 174, 1, 39),
    _EntityCacheRuntimeTotalPersistentCurrentEntries_Type()
)
entityCacheRuntimeTotalPersistentCurrentEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheRuntimeTotalPersistentCurrentEntries.setStatus("current")
_EntityCacheRuntimeTotalTransientCurrentEntries_Type = Counter64
_EntityCacheRuntimeTotalTransientCurrentEntries_Object = MibTableColumn
entityCacheRuntimeTotalTransientCurrentEntries = _EntityCacheRuntimeTotalTransientCurrentEntries_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 174, 1, 40),
    _EntityCacheRuntimeTotalTransientCurrentEntries_Type()
)
entityCacheRuntimeTotalTransientCurrentEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityCacheRuntimeTotalTransientCurrentEntries.setStatus("current")
_ExecuteQueueRuntimeTable_Object = MibTable
executeQueueRuntimeTable = _ExecuteQueueRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 180)
)
if mibBuilder.loadTexts:
    executeQueueRuntimeTable.setStatus("current")
_ExecuteQueueRuntimeEntry_Object = MibTableRow
executeQueueRuntimeEntry = _ExecuteQueueRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 180, 1)
)
executeQueueRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "executeQueueRuntimeIndex"),
)
if mibBuilder.loadTexts:
    executeQueueRuntimeEntry.setStatus("current")


class _ExecuteQueueRuntimeIndex_Type(DisplayString):
    """Custom type executeQueueRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ExecuteQueueRuntimeIndex_Type.__name__ = "DisplayString"
_ExecuteQueueRuntimeIndex_Object = MibTableColumn
executeQueueRuntimeIndex = _ExecuteQueueRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 180, 1, 1),
    _ExecuteQueueRuntimeIndex_Type()
)
executeQueueRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueRuntimeIndex.setStatus("current")


class _ExecuteQueueRuntimeObjectName_Type(DisplayString):
    """Custom type executeQueueRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ExecuteQueueRuntimeObjectName_Type.__name__ = "DisplayString"
_ExecuteQueueRuntimeObjectName_Object = MibTableColumn
executeQueueRuntimeObjectName = _ExecuteQueueRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 180, 1, 5),
    _ExecuteQueueRuntimeObjectName_Type()
)
executeQueueRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueRuntimeObjectName.setStatus("current")


class _ExecuteQueueRuntimeType_Type(DisplayString):
    """Custom type executeQueueRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ExecuteQueueRuntimeType_Type.__name__ = "DisplayString"
_ExecuteQueueRuntimeType_Object = MibTableColumn
executeQueueRuntimeType = _ExecuteQueueRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 180, 1, 10),
    _ExecuteQueueRuntimeType_Type()
)
executeQueueRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueRuntimeType.setStatus("current")


class _ExecuteQueueRuntimeName_Type(DisplayString):
    """Custom type executeQueueRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ExecuteQueueRuntimeName_Type.__name__ = "DisplayString"
_ExecuteQueueRuntimeName_Object = MibTableColumn
executeQueueRuntimeName = _ExecuteQueueRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 180, 1, 15),
    _ExecuteQueueRuntimeName_Type()
)
executeQueueRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueRuntimeName.setStatus("current")


class _ExecuteQueueRuntimeParent_Type(DisplayString):
    """Custom type executeQueueRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ExecuteQueueRuntimeParent_Type.__name__ = "DisplayString"
_ExecuteQueueRuntimeParent_Object = MibTableColumn
executeQueueRuntimeParent = _ExecuteQueueRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 180, 1, 20),
    _ExecuteQueueRuntimeParent_Type()
)
executeQueueRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueRuntimeParent.setStatus("current")
_ExecuteQueueRuntimeExecuteThreadCurrentIdleCount_Type = Integer32
_ExecuteQueueRuntimeExecuteThreadCurrentIdleCount_Object = MibTableColumn
executeQueueRuntimeExecuteThreadCurrentIdleCount = _ExecuteQueueRuntimeExecuteThreadCurrentIdleCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 180, 1, 25),
    _ExecuteQueueRuntimeExecuteThreadCurrentIdleCount_Type()
)
executeQueueRuntimeExecuteThreadCurrentIdleCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueRuntimeExecuteThreadCurrentIdleCount.setStatus("current")
_ExecuteQueueRuntimePendingRequestOldestTime_Type = Counter64
_ExecuteQueueRuntimePendingRequestOldestTime_Object = MibTableColumn
executeQueueRuntimePendingRequestOldestTime = _ExecuteQueueRuntimePendingRequestOldestTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 180, 1, 30),
    _ExecuteQueueRuntimePendingRequestOldestTime_Type()
)
executeQueueRuntimePendingRequestOldestTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueRuntimePendingRequestOldestTime.setStatus("current")
_ExecuteQueueRuntimePendingRequestCurrentCount_Type = Integer32
_ExecuteQueueRuntimePendingRequestCurrentCount_Object = MibTableColumn
executeQueueRuntimePendingRequestCurrentCount = _ExecuteQueueRuntimePendingRequestCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 180, 1, 35),
    _ExecuteQueueRuntimePendingRequestCurrentCount_Type()
)
executeQueueRuntimePendingRequestCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueRuntimePendingRequestCurrentCount.setStatus("current")
_ExecuteQueueRuntimeServicedRequestTotalCount_Type = Integer32
_ExecuteQueueRuntimeServicedRequestTotalCount_Object = MibTableColumn
executeQueueRuntimeServicedRequestTotalCount = _ExecuteQueueRuntimeServicedRequestTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 180, 1, 40),
    _ExecuteQueueRuntimeServicedRequestTotalCount_Type()
)
executeQueueRuntimeServicedRequestTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueRuntimeServicedRequestTotalCount.setStatus("current")


class _ExecuteQueueRuntimeExecuteThreads_Type(DisplayString):
    """Custom type executeQueueRuntimeExecuteThreads based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_ExecuteQueueRuntimeExecuteThreads_Type.__name__ = "DisplayString"
_ExecuteQueueRuntimeExecuteThreads_Object = MibTableColumn
executeQueueRuntimeExecuteThreads = _ExecuteQueueRuntimeExecuteThreads_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 180, 1, 45),
    _ExecuteQueueRuntimeExecuteThreads_Type()
)
executeQueueRuntimeExecuteThreads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueRuntimeExecuteThreads.setStatus("current")
_ExecuteQueueRuntimeExecuteThreadTotalCount_Type = Integer32
_ExecuteQueueRuntimeExecuteThreadTotalCount_Object = MibTableColumn
executeQueueRuntimeExecuteThreadTotalCount = _ExecuteQueueRuntimeExecuteThreadTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 180, 1, 46),
    _ExecuteQueueRuntimeExecuteThreadTotalCount_Type()
)
executeQueueRuntimeExecuteThreadTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueRuntimeExecuteThreadTotalCount.setStatus("current")
_InterceptionComponentRuntimeTable_Object = MibTable
interceptionComponentRuntimeTable = _InterceptionComponentRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 181)
)
if mibBuilder.loadTexts:
    interceptionComponentRuntimeTable.setStatus("current")
_InterceptionComponentRuntimeEntry_Object = MibTableRow
interceptionComponentRuntimeEntry = _InterceptionComponentRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 181, 1)
)
interceptionComponentRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "interceptionComponentRuntimeIndex"),
)
if mibBuilder.loadTexts:
    interceptionComponentRuntimeEntry.setStatus("current")


class _InterceptionComponentRuntimeIndex_Type(DisplayString):
    """Custom type interceptionComponentRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_InterceptionComponentRuntimeIndex_Type.__name__ = "DisplayString"
_InterceptionComponentRuntimeIndex_Object = MibTableColumn
interceptionComponentRuntimeIndex = _InterceptionComponentRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 181, 1, 1),
    _InterceptionComponentRuntimeIndex_Type()
)
interceptionComponentRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interceptionComponentRuntimeIndex.setStatus("current")


class _InterceptionComponentRuntimeObjectName_Type(DisplayString):
    """Custom type interceptionComponentRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_InterceptionComponentRuntimeObjectName_Type.__name__ = "DisplayString"
_InterceptionComponentRuntimeObjectName_Object = MibTableColumn
interceptionComponentRuntimeObjectName = _InterceptionComponentRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 181, 1, 5),
    _InterceptionComponentRuntimeObjectName_Type()
)
interceptionComponentRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interceptionComponentRuntimeObjectName.setStatus("current")


class _InterceptionComponentRuntimeType_Type(DisplayString):
    """Custom type interceptionComponentRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_InterceptionComponentRuntimeType_Type.__name__ = "DisplayString"
_InterceptionComponentRuntimeType_Object = MibTableColumn
interceptionComponentRuntimeType = _InterceptionComponentRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 181, 1, 10),
    _InterceptionComponentRuntimeType_Type()
)
interceptionComponentRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interceptionComponentRuntimeType.setStatus("current")


class _InterceptionComponentRuntimeName_Type(DisplayString):
    """Custom type interceptionComponentRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_InterceptionComponentRuntimeName_Type.__name__ = "DisplayString"
_InterceptionComponentRuntimeName_Object = MibTableColumn
interceptionComponentRuntimeName = _InterceptionComponentRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 181, 1, 15),
    _InterceptionComponentRuntimeName_Type()
)
interceptionComponentRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interceptionComponentRuntimeName.setStatus("current")


class _InterceptionComponentRuntimeParent_Type(DisplayString):
    """Custom type interceptionComponentRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_InterceptionComponentRuntimeParent_Type.__name__ = "DisplayString"
_InterceptionComponentRuntimeParent_Object = MibTableColumn
interceptionComponentRuntimeParent = _InterceptionComponentRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 181, 1, 20),
    _InterceptionComponentRuntimeParent_Type()
)
interceptionComponentRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interceptionComponentRuntimeParent.setStatus("current")


class _InterceptionComponentRuntimeModuleId_Type(DisplayString):
    """Custom type interceptionComponentRuntimeModuleId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_InterceptionComponentRuntimeModuleId_Type.__name__ = "DisplayString"
_InterceptionComponentRuntimeModuleId_Object = MibTableColumn
interceptionComponentRuntimeModuleId = _InterceptionComponentRuntimeModuleId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 181, 1, 25),
    _InterceptionComponentRuntimeModuleId_Type()
)
interceptionComponentRuntimeModuleId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interceptionComponentRuntimeModuleId.setStatus("current")
_InterceptionComponentRuntimeDeploymentState_Type = Integer32
_InterceptionComponentRuntimeDeploymentState_Object = MibTableColumn
interceptionComponentRuntimeDeploymentState = _InterceptionComponentRuntimeDeploymentState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 181, 1, 30),
    _InterceptionComponentRuntimeDeploymentState_Type()
)
interceptionComponentRuntimeDeploymentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interceptionComponentRuntimeDeploymentState.setStatus("current")
_JdbcConnectionPoolRuntimeTable_Object = MibTable
jdbcConnectionPoolRuntimeTable = _JdbcConnectionPoolRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190)
)
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeTable.setStatus("current")
_JdbcConnectionPoolRuntimeEntry_Object = MibTableRow
jdbcConnectionPoolRuntimeEntry = _JdbcConnectionPoolRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1)
)
jdbcConnectionPoolRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jdbcConnectionPoolRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeEntry.setStatus("current")


class _JdbcConnectionPoolRuntimeIndex_Type(DisplayString):
    """Custom type jdbcConnectionPoolRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JdbcConnectionPoolRuntimeIndex_Type.__name__ = "DisplayString"
_JdbcConnectionPoolRuntimeIndex_Object = MibTableColumn
jdbcConnectionPoolRuntimeIndex = _JdbcConnectionPoolRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 1),
    _JdbcConnectionPoolRuntimeIndex_Type()
)
jdbcConnectionPoolRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeIndex.setStatus("current")


class _JdbcConnectionPoolRuntimeObjectName_Type(DisplayString):
    """Custom type jdbcConnectionPoolRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcConnectionPoolRuntimeObjectName_Type.__name__ = "DisplayString"
_JdbcConnectionPoolRuntimeObjectName_Object = MibTableColumn
jdbcConnectionPoolRuntimeObjectName = _JdbcConnectionPoolRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 5),
    _JdbcConnectionPoolRuntimeObjectName_Type()
)
jdbcConnectionPoolRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeObjectName.setStatus("current")


class _JdbcConnectionPoolRuntimeType_Type(DisplayString):
    """Custom type jdbcConnectionPoolRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JdbcConnectionPoolRuntimeType_Type.__name__ = "DisplayString"
_JdbcConnectionPoolRuntimeType_Object = MibTableColumn
jdbcConnectionPoolRuntimeType = _JdbcConnectionPoolRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 10),
    _JdbcConnectionPoolRuntimeType_Type()
)
jdbcConnectionPoolRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeType.setStatus("current")


class _JdbcConnectionPoolRuntimeName_Type(DisplayString):
    """Custom type jdbcConnectionPoolRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JdbcConnectionPoolRuntimeName_Type.__name__ = "DisplayString"
_JdbcConnectionPoolRuntimeName_Object = MibTableColumn
jdbcConnectionPoolRuntimeName = _JdbcConnectionPoolRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 15),
    _JdbcConnectionPoolRuntimeName_Type()
)
jdbcConnectionPoolRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeName.setStatus("current")


class _JdbcConnectionPoolRuntimeParent_Type(DisplayString):
    """Custom type jdbcConnectionPoolRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcConnectionPoolRuntimeParent_Type.__name__ = "DisplayString"
_JdbcConnectionPoolRuntimeParent_Object = MibTableColumn
jdbcConnectionPoolRuntimeParent = _JdbcConnectionPoolRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 20),
    _JdbcConnectionPoolRuntimeParent_Type()
)
jdbcConnectionPoolRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeParent.setStatus("current")
_JdbcConnectionPoolRuntimeActiveConnectionsCurrentCount_Type = Integer32
_JdbcConnectionPoolRuntimeActiveConnectionsCurrentCount_Object = MibTableColumn
jdbcConnectionPoolRuntimeActiveConnectionsCurrentCount = _JdbcConnectionPoolRuntimeActiveConnectionsCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 25),
    _JdbcConnectionPoolRuntimeActiveConnectionsCurrentCount_Type()
)
jdbcConnectionPoolRuntimeActiveConnectionsCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeActiveConnectionsCurrentCount.setStatus("current")
_JdbcConnectionPoolRuntimeWaitingForConnectionCurrentCount_Type = Integer32
_JdbcConnectionPoolRuntimeWaitingForConnectionCurrentCount_Object = MibTableColumn
jdbcConnectionPoolRuntimeWaitingForConnectionCurrentCount = _JdbcConnectionPoolRuntimeWaitingForConnectionCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 30),
    _JdbcConnectionPoolRuntimeWaitingForConnectionCurrentCount_Type()
)
jdbcConnectionPoolRuntimeWaitingForConnectionCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeWaitingForConnectionCurrentCount.setStatus("current")


class _JdbcConnectionPoolRuntimeVersionJDBCDriver_Type(DisplayString):
    """Custom type jdbcConnectionPoolRuntimeVersionJDBCDriver based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_JdbcConnectionPoolRuntimeVersionJDBCDriver_Type.__name__ = "DisplayString"
_JdbcConnectionPoolRuntimeVersionJDBCDriver_Object = MibTableColumn
jdbcConnectionPoolRuntimeVersionJDBCDriver = _JdbcConnectionPoolRuntimeVersionJDBCDriver_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 35),
    _JdbcConnectionPoolRuntimeVersionJDBCDriver_Type()
)
jdbcConnectionPoolRuntimeVersionJDBCDriver.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeVersionJDBCDriver.setStatus("current")
_JdbcConnectionPoolRuntimeActiveConnectionsHighCount_Type = Integer32
_JdbcConnectionPoolRuntimeActiveConnectionsHighCount_Object = MibTableColumn
jdbcConnectionPoolRuntimeActiveConnectionsHighCount = _JdbcConnectionPoolRuntimeActiveConnectionsHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 40),
    _JdbcConnectionPoolRuntimeActiveConnectionsHighCount_Type()
)
jdbcConnectionPoolRuntimeActiveConnectionsHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeActiveConnectionsHighCount.setStatus("current")
_JdbcConnectionPoolRuntimeWaitingForConnectionHighCount_Type = Integer32
_JdbcConnectionPoolRuntimeWaitingForConnectionHighCount_Object = MibTableColumn
jdbcConnectionPoolRuntimeWaitingForConnectionHighCount = _JdbcConnectionPoolRuntimeWaitingForConnectionHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 45),
    _JdbcConnectionPoolRuntimeWaitingForConnectionHighCount_Type()
)
jdbcConnectionPoolRuntimeWaitingForConnectionHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeWaitingForConnectionHighCount.setStatus("current")
_JdbcConnectionPoolRuntimeWaitSecondsHighCount_Type = Integer32
_JdbcConnectionPoolRuntimeWaitSecondsHighCount_Object = MibTableColumn
jdbcConnectionPoolRuntimeWaitSecondsHighCount = _JdbcConnectionPoolRuntimeWaitSecondsHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 50),
    _JdbcConnectionPoolRuntimeWaitSecondsHighCount_Type()
)
jdbcConnectionPoolRuntimeWaitSecondsHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeWaitSecondsHighCount.setStatus("current")
_JdbcConnectionPoolRuntimeConnectionsTotalCount_Type = Integer32
_JdbcConnectionPoolRuntimeConnectionsTotalCount_Object = MibTableColumn
jdbcConnectionPoolRuntimeConnectionsTotalCount = _JdbcConnectionPoolRuntimeConnectionsTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 55),
    _JdbcConnectionPoolRuntimeConnectionsTotalCount_Type()
)
jdbcConnectionPoolRuntimeConnectionsTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeConnectionsTotalCount.setStatus("current")
_JdbcConnectionPoolRuntimeMaxCapacity_Type = Integer32
_JdbcConnectionPoolRuntimeMaxCapacity_Object = MibTableColumn
jdbcConnectionPoolRuntimeMaxCapacity = _JdbcConnectionPoolRuntimeMaxCapacity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 60),
    _JdbcConnectionPoolRuntimeMaxCapacity_Type()
)
jdbcConnectionPoolRuntimeMaxCapacity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeMaxCapacity.setStatus("current")
_JdbcConnectionPoolRuntimeActiveConnectionsAverageCount_Type = Integer32
_JdbcConnectionPoolRuntimeActiveConnectionsAverageCount_Object = MibTableColumn
jdbcConnectionPoolRuntimeActiveConnectionsAverageCount = _JdbcConnectionPoolRuntimeActiveConnectionsAverageCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 61),
    _JdbcConnectionPoolRuntimeActiveConnectionsAverageCount_Type()
)
jdbcConnectionPoolRuntimeActiveConnectionsAverageCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeActiveConnectionsAverageCount.setStatus("current")
_JdbcConnectionPoolRuntimeConnectionDelayTime_Type = Integer32
_JdbcConnectionPoolRuntimeConnectionDelayTime_Object = MibTableColumn
jdbcConnectionPoolRuntimeConnectionDelayTime = _JdbcConnectionPoolRuntimeConnectionDelayTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 62),
    _JdbcConnectionPoolRuntimeConnectionDelayTime_Type()
)
jdbcConnectionPoolRuntimeConnectionDelayTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeConnectionDelayTime.setStatus("current")
_JdbcConnectionPoolRuntimeConnectionLeakProfileCount_Type = Counter32
_JdbcConnectionPoolRuntimeConnectionLeakProfileCount_Object = MibTableColumn
jdbcConnectionPoolRuntimeConnectionLeakProfileCount = _JdbcConnectionPoolRuntimeConnectionLeakProfileCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 63),
    _JdbcConnectionPoolRuntimeConnectionLeakProfileCount_Type()
)
jdbcConnectionPoolRuntimeConnectionLeakProfileCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeConnectionLeakProfileCount.setStatus("current")
_JdbcConnectionPoolRuntimeCurrCapacity_Type = Integer32
_JdbcConnectionPoolRuntimeCurrCapacity_Object = MibTableColumn
jdbcConnectionPoolRuntimeCurrCapacity = _JdbcConnectionPoolRuntimeCurrCapacity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 64),
    _JdbcConnectionPoolRuntimeCurrCapacity_Type()
)
jdbcConnectionPoolRuntimeCurrCapacity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeCurrCapacity.setStatus("current")
_JdbcConnectionPoolRuntimeFailuresToReconnectCount_Type = Integer32
_JdbcConnectionPoolRuntimeFailuresToReconnectCount_Object = MibTableColumn
jdbcConnectionPoolRuntimeFailuresToReconnectCount = _JdbcConnectionPoolRuntimeFailuresToReconnectCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 65),
    _JdbcConnectionPoolRuntimeFailuresToReconnectCount_Type()
)
jdbcConnectionPoolRuntimeFailuresToReconnectCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeFailuresToReconnectCount.setStatus("current")
_JdbcConnectionPoolRuntimeHighestNumAvailable_Type = Integer32
_JdbcConnectionPoolRuntimeHighestNumAvailable_Object = MibTableColumn
jdbcConnectionPoolRuntimeHighestNumAvailable = _JdbcConnectionPoolRuntimeHighestNumAvailable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 66),
    _JdbcConnectionPoolRuntimeHighestNumAvailable_Type()
)
jdbcConnectionPoolRuntimeHighestNumAvailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeHighestNumAvailable.setStatus("current")
_JdbcConnectionPoolRuntimeHighestNumUnavailable_Type = Integer32
_JdbcConnectionPoolRuntimeHighestNumUnavailable_Object = MibTableColumn
jdbcConnectionPoolRuntimeHighestNumUnavailable = _JdbcConnectionPoolRuntimeHighestNumUnavailable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 67),
    _JdbcConnectionPoolRuntimeHighestNumUnavailable_Type()
)
jdbcConnectionPoolRuntimeHighestNumUnavailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeHighestNumUnavailable.setStatus("current")
_JdbcConnectionPoolRuntimeLeakedConnectionCount_Type = Integer32
_JdbcConnectionPoolRuntimeLeakedConnectionCount_Object = MibTableColumn
jdbcConnectionPoolRuntimeLeakedConnectionCount = _JdbcConnectionPoolRuntimeLeakedConnectionCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 68),
    _JdbcConnectionPoolRuntimeLeakedConnectionCount_Type()
)
jdbcConnectionPoolRuntimeLeakedConnectionCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeLeakedConnectionCount.setStatus("current")
_JdbcConnectionPoolRuntimeNumAvailable_Type = Integer32
_JdbcConnectionPoolRuntimeNumAvailable_Object = MibTableColumn
jdbcConnectionPoolRuntimeNumAvailable = _JdbcConnectionPoolRuntimeNumAvailable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 69),
    _JdbcConnectionPoolRuntimeNumAvailable_Type()
)
jdbcConnectionPoolRuntimeNumAvailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeNumAvailable.setStatus("current")
_JdbcConnectionPoolRuntimeNumUnavailable_Type = Integer32
_JdbcConnectionPoolRuntimeNumUnavailable_Object = MibTableColumn
jdbcConnectionPoolRuntimeNumUnavailable = _JdbcConnectionPoolRuntimeNumUnavailable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 70),
    _JdbcConnectionPoolRuntimeNumUnavailable_Type()
)
jdbcConnectionPoolRuntimeNumUnavailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeNumUnavailable.setStatus("current")
_JdbcConnectionPoolRuntimeStatementProfileCount_Type = Integer32
_JdbcConnectionPoolRuntimeStatementProfileCount_Object = MibTableColumn
jdbcConnectionPoolRuntimeStatementProfileCount = _JdbcConnectionPoolRuntimeStatementProfileCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 190, 1, 71),
    _JdbcConnectionPoolRuntimeStatementProfileCount_Type()
)
jdbcConnectionPoolRuntimeStatementProfileCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRuntimeStatementProfileCount.setStatus("current")
_JdbcDataSourceRuntimeTable_Object = MibTable
jdbcDataSourceRuntimeTable = _JdbcDataSourceRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191)
)
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeTable.setStatus("current")
_JdbcDataSourceRuntimeEntry_Object = MibTableRow
jdbcDataSourceRuntimeEntry = _JdbcDataSourceRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1)
)
jdbcDataSourceRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jdbcDataSourceRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeEntry.setStatus("current")


class _JdbcDataSourceRuntimeIndex_Type(DisplayString):
    """Custom type jdbcDataSourceRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JdbcDataSourceRuntimeIndex_Type.__name__ = "DisplayString"
_JdbcDataSourceRuntimeIndex_Object = MibTableColumn
jdbcDataSourceRuntimeIndex = _JdbcDataSourceRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 1),
    _JdbcDataSourceRuntimeIndex_Type()
)
jdbcDataSourceRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeIndex.setStatus("current")


class _JdbcDataSourceRuntimeObjectName_Type(DisplayString):
    """Custom type jdbcDataSourceRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcDataSourceRuntimeObjectName_Type.__name__ = "DisplayString"
_JdbcDataSourceRuntimeObjectName_Object = MibTableColumn
jdbcDataSourceRuntimeObjectName = _JdbcDataSourceRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 5),
    _JdbcDataSourceRuntimeObjectName_Type()
)
jdbcDataSourceRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeObjectName.setStatus("current")


class _JdbcDataSourceRuntimeType_Type(DisplayString):
    """Custom type jdbcDataSourceRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JdbcDataSourceRuntimeType_Type.__name__ = "DisplayString"
_JdbcDataSourceRuntimeType_Object = MibTableColumn
jdbcDataSourceRuntimeType = _JdbcDataSourceRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 10),
    _JdbcDataSourceRuntimeType_Type()
)
jdbcDataSourceRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeType.setStatus("current")


class _JdbcDataSourceRuntimeName_Type(DisplayString):
    """Custom type jdbcDataSourceRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JdbcDataSourceRuntimeName_Type.__name__ = "DisplayString"
_JdbcDataSourceRuntimeName_Object = MibTableColumn
jdbcDataSourceRuntimeName = _JdbcDataSourceRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 15),
    _JdbcDataSourceRuntimeName_Type()
)
jdbcDataSourceRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeName.setStatus("current")


class _JdbcDataSourceRuntimeParent_Type(DisplayString):
    """Custom type jdbcDataSourceRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcDataSourceRuntimeParent_Type.__name__ = "DisplayString"
_JdbcDataSourceRuntimeParent_Object = MibTableColumn
jdbcDataSourceRuntimeParent = _JdbcDataSourceRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 20),
    _JdbcDataSourceRuntimeParent_Type()
)
jdbcDataSourceRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeParent.setStatus("current")
_JdbcDataSourceRuntimeLeakedConnectionCount_Type = Integer32
_JdbcDataSourceRuntimeLeakedConnectionCount_Object = MibTableColumn
jdbcDataSourceRuntimeLeakedConnectionCount = _JdbcDataSourceRuntimeLeakedConnectionCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 25),
    _JdbcDataSourceRuntimeLeakedConnectionCount_Type()
)
jdbcDataSourceRuntimeLeakedConnectionCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeLeakedConnectionCount.setStatus("current")


class _JdbcDataSourceRuntimeEnabled_Type(Integer32):
    """Custom type jdbcDataSourceRuntimeEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_JdbcDataSourceRuntimeEnabled_Type.__name__ = "Integer32"
_JdbcDataSourceRuntimeEnabled_Object = MibTableColumn
jdbcDataSourceRuntimeEnabled = _JdbcDataSourceRuntimeEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 30),
    _JdbcDataSourceRuntimeEnabled_Type()
)
jdbcDataSourceRuntimeEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeEnabled.setStatus("current")


class _JdbcDataSourceRuntimeState_Type(DisplayString):
    """Custom type jdbcDataSourceRuntimeState based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JdbcDataSourceRuntimeState_Type.__name__ = "DisplayString"
_JdbcDataSourceRuntimeState_Object = MibTableColumn
jdbcDataSourceRuntimeState = _JdbcDataSourceRuntimeState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 35),
    _JdbcDataSourceRuntimeState_Type()
)
jdbcDataSourceRuntimeState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeState.setStatus("current")
_JdbcDataSourceRuntimeFailuresToReconnectCount_Type = Integer32
_JdbcDataSourceRuntimeFailuresToReconnectCount_Object = MibTableColumn
jdbcDataSourceRuntimeFailuresToReconnectCount = _JdbcDataSourceRuntimeFailuresToReconnectCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 40),
    _JdbcDataSourceRuntimeFailuresToReconnectCount_Type()
)
jdbcDataSourceRuntimeFailuresToReconnectCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeFailuresToReconnectCount.setStatus("current")


class _JdbcDataSourceRuntimeConnectionDelayTime_Type(DisplayString):
    """Custom type jdbcDataSourceRuntimeConnectionDelayTime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_JdbcDataSourceRuntimeConnectionDelayTime_Type.__name__ = "DisplayString"
_JdbcDataSourceRuntimeConnectionDelayTime_Object = MibTableColumn
jdbcDataSourceRuntimeConnectionDelayTime = _JdbcDataSourceRuntimeConnectionDelayTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 45),
    _JdbcDataSourceRuntimeConnectionDelayTime_Type()
)
jdbcDataSourceRuntimeConnectionDelayTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeConnectionDelayTime.setStatus("current")
_JdbcDataSourceRuntimePrepStmtCacheAccessCount_Type = Counter64
_JdbcDataSourceRuntimePrepStmtCacheAccessCount_Object = MibTableColumn
jdbcDataSourceRuntimePrepStmtCacheAccessCount = _JdbcDataSourceRuntimePrepStmtCacheAccessCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 50),
    _JdbcDataSourceRuntimePrepStmtCacheAccessCount_Type()
)
jdbcDataSourceRuntimePrepStmtCacheAccessCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimePrepStmtCacheAccessCount.setStatus("current")
_JdbcDataSourceRuntimePrepStmtCacheAddCount_Type = Counter64
_JdbcDataSourceRuntimePrepStmtCacheAddCount_Object = MibTableColumn
jdbcDataSourceRuntimePrepStmtCacheAddCount = _JdbcDataSourceRuntimePrepStmtCacheAddCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 55),
    _JdbcDataSourceRuntimePrepStmtCacheAddCount_Type()
)
jdbcDataSourceRuntimePrepStmtCacheAddCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimePrepStmtCacheAddCount.setStatus("current")
_JdbcDataSourceRuntimePrepStmtCacheDeleteCount_Type = Counter64
_JdbcDataSourceRuntimePrepStmtCacheDeleteCount_Object = MibTableColumn
jdbcDataSourceRuntimePrepStmtCacheDeleteCount = _JdbcDataSourceRuntimePrepStmtCacheDeleteCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 60),
    _JdbcDataSourceRuntimePrepStmtCacheDeleteCount_Type()
)
jdbcDataSourceRuntimePrepStmtCacheDeleteCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimePrepStmtCacheDeleteCount.setStatus("current")
_JdbcDataSourceRuntimePrepStmtCacheCurrentSize_Type = Integer32
_JdbcDataSourceRuntimePrepStmtCacheCurrentSize_Object = MibTableColumn
jdbcDataSourceRuntimePrepStmtCacheCurrentSize = _JdbcDataSourceRuntimePrepStmtCacheCurrentSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 65),
    _JdbcDataSourceRuntimePrepStmtCacheCurrentSize_Type()
)
jdbcDataSourceRuntimePrepStmtCacheCurrentSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimePrepStmtCacheCurrentSize.setStatus("current")
_JdbcDataSourceRuntimePrepStmtCacheHitCount_Type = Integer32
_JdbcDataSourceRuntimePrepStmtCacheHitCount_Object = MibTableColumn
jdbcDataSourceRuntimePrepStmtCacheHitCount = _JdbcDataSourceRuntimePrepStmtCacheHitCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 70),
    _JdbcDataSourceRuntimePrepStmtCacheHitCount_Type()
)
jdbcDataSourceRuntimePrepStmtCacheHitCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimePrepStmtCacheHitCount.setStatus("current")
_JdbcDataSourceRuntimePrepStmtCacheMissCount_Type = Integer32
_JdbcDataSourceRuntimePrepStmtCacheMissCount_Object = MibTableColumn
jdbcDataSourceRuntimePrepStmtCacheMissCount = _JdbcDataSourceRuntimePrepStmtCacheMissCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 75),
    _JdbcDataSourceRuntimePrepStmtCacheMissCount_Type()
)
jdbcDataSourceRuntimePrepStmtCacheMissCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimePrepStmtCacheMissCount.setStatus("current")
_JdbcDataSourceRuntimeActiveConnectionsCurrentCount_Type = Integer32
_JdbcDataSourceRuntimeActiveConnectionsCurrentCount_Object = MibTableColumn
jdbcDataSourceRuntimeActiveConnectionsCurrentCount = _JdbcDataSourceRuntimeActiveConnectionsCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 80),
    _JdbcDataSourceRuntimeActiveConnectionsCurrentCount_Type()
)
jdbcDataSourceRuntimeActiveConnectionsCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeActiveConnectionsCurrentCount.setStatus("current")
_JdbcDataSourceRuntimeWaitingForConnectionCurrentCount_Type = Integer32
_JdbcDataSourceRuntimeWaitingForConnectionCurrentCount_Object = MibTableColumn
jdbcDataSourceRuntimeWaitingForConnectionCurrentCount = _JdbcDataSourceRuntimeWaitingForConnectionCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 85),
    _JdbcDataSourceRuntimeWaitingForConnectionCurrentCount_Type()
)
jdbcDataSourceRuntimeWaitingForConnectionCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeWaitingForConnectionCurrentCount.setStatus("current")


class _JdbcDataSourceRuntimeVersionJDBCDriver_Type(DisplayString):
    """Custom type jdbcDataSourceRuntimeVersionJDBCDriver based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JdbcDataSourceRuntimeVersionJDBCDriver_Type.__name__ = "DisplayString"
_JdbcDataSourceRuntimeVersionJDBCDriver_Object = MibTableColumn
jdbcDataSourceRuntimeVersionJDBCDriver = _JdbcDataSourceRuntimeVersionJDBCDriver_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 90),
    _JdbcDataSourceRuntimeVersionJDBCDriver_Type()
)
jdbcDataSourceRuntimeVersionJDBCDriver.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeVersionJDBCDriver.setStatus("current")
_JdbcDataSourceRuntimeActiveConnectionsHighCount_Type = Integer32
_JdbcDataSourceRuntimeActiveConnectionsHighCount_Object = MibTableColumn
jdbcDataSourceRuntimeActiveConnectionsHighCount = _JdbcDataSourceRuntimeActiveConnectionsHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 95),
    _JdbcDataSourceRuntimeActiveConnectionsHighCount_Type()
)
jdbcDataSourceRuntimeActiveConnectionsHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeActiveConnectionsHighCount.setStatus("current")
_JdbcDataSourceRuntimeActiveConnectionsAverageCount_Type = Integer32
_JdbcDataSourceRuntimeActiveConnectionsAverageCount_Object = MibTableColumn
jdbcDataSourceRuntimeActiveConnectionsAverageCount = _JdbcDataSourceRuntimeActiveConnectionsAverageCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 100),
    _JdbcDataSourceRuntimeActiveConnectionsAverageCount_Type()
)
jdbcDataSourceRuntimeActiveConnectionsAverageCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeActiveConnectionsAverageCount.setStatus("current")
_JdbcDataSourceRuntimeReserveRequestCount_Type = Counter64
_JdbcDataSourceRuntimeReserveRequestCount_Object = MibTableColumn
jdbcDataSourceRuntimeReserveRequestCount = _JdbcDataSourceRuntimeReserveRequestCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 105),
    _JdbcDataSourceRuntimeReserveRequestCount_Type()
)
jdbcDataSourceRuntimeReserveRequestCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeReserveRequestCount.setStatus("current")
_JdbcDataSourceRuntimeFailedReserveRequestCount_Type = Counter64
_JdbcDataSourceRuntimeFailedReserveRequestCount_Object = MibTableColumn
jdbcDataSourceRuntimeFailedReserveRequestCount = _JdbcDataSourceRuntimeFailedReserveRequestCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 110),
    _JdbcDataSourceRuntimeFailedReserveRequestCount_Type()
)
jdbcDataSourceRuntimeFailedReserveRequestCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeFailedReserveRequestCount.setStatus("current")
_JdbcDataSourceRuntimeWaitingForConnectionHighCount_Type = Integer32
_JdbcDataSourceRuntimeWaitingForConnectionHighCount_Object = MibTableColumn
jdbcDataSourceRuntimeWaitingForConnectionHighCount = _JdbcDataSourceRuntimeWaitingForConnectionHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 115),
    _JdbcDataSourceRuntimeWaitingForConnectionHighCount_Type()
)
jdbcDataSourceRuntimeWaitingForConnectionHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeWaitingForConnectionHighCount.setStatus("current")
_JdbcDataSourceRuntimeWaitingForConnectionTotal_Type = Counter64
_JdbcDataSourceRuntimeWaitingForConnectionTotal_Object = MibTableColumn
jdbcDataSourceRuntimeWaitingForConnectionTotal = _JdbcDataSourceRuntimeWaitingForConnectionTotal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 120),
    _JdbcDataSourceRuntimeWaitingForConnectionTotal_Type()
)
jdbcDataSourceRuntimeWaitingForConnectionTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeWaitingForConnectionTotal.setStatus("current")
_JdbcDataSourceRuntimeWaitingForConnectionSuccessTotal_Type = Counter64
_JdbcDataSourceRuntimeWaitingForConnectionSuccessTotal_Object = MibTableColumn
jdbcDataSourceRuntimeWaitingForConnectionSuccessTotal = _JdbcDataSourceRuntimeWaitingForConnectionSuccessTotal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 125),
    _JdbcDataSourceRuntimeWaitingForConnectionSuccessTotal_Type()
)
jdbcDataSourceRuntimeWaitingForConnectionSuccessTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeWaitingForConnectionSuccessTotal.setStatus("current")
_JdbcDataSourceRuntimeWaitingForConnectionFailureTotal_Type = Counter64
_JdbcDataSourceRuntimeWaitingForConnectionFailureTotal_Object = MibTableColumn
jdbcDataSourceRuntimeWaitingForConnectionFailureTotal = _JdbcDataSourceRuntimeWaitingForConnectionFailureTotal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 130),
    _JdbcDataSourceRuntimeWaitingForConnectionFailureTotal_Type()
)
jdbcDataSourceRuntimeWaitingForConnectionFailureTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeWaitingForConnectionFailureTotal.setStatus("current")
_JdbcDataSourceRuntimeWaitSecondsHighCount_Type = Integer32
_JdbcDataSourceRuntimeWaitSecondsHighCount_Object = MibTableColumn
jdbcDataSourceRuntimeWaitSecondsHighCount = _JdbcDataSourceRuntimeWaitSecondsHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 135),
    _JdbcDataSourceRuntimeWaitSecondsHighCount_Type()
)
jdbcDataSourceRuntimeWaitSecondsHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeWaitSecondsHighCount.setStatus("current")
_JdbcDataSourceRuntimeConnectionsTotalCount_Type = Integer32
_JdbcDataSourceRuntimeConnectionsTotalCount_Object = MibTableColumn
jdbcDataSourceRuntimeConnectionsTotalCount = _JdbcDataSourceRuntimeConnectionsTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 140),
    _JdbcDataSourceRuntimeConnectionsTotalCount_Type()
)
jdbcDataSourceRuntimeConnectionsTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeConnectionsTotalCount.setStatus("current")
_JdbcDataSourceRuntimeCurrCapacity_Type = Integer32
_JdbcDataSourceRuntimeCurrCapacity_Object = MibTableColumn
jdbcDataSourceRuntimeCurrCapacity = _JdbcDataSourceRuntimeCurrCapacity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 145),
    _JdbcDataSourceRuntimeCurrCapacity_Type()
)
jdbcDataSourceRuntimeCurrCapacity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeCurrCapacity.setStatus("current")
_JdbcDataSourceRuntimeCurrCapacityHighCount_Type = Integer32
_JdbcDataSourceRuntimeCurrCapacityHighCount_Object = MibTableColumn
jdbcDataSourceRuntimeCurrCapacityHighCount = _JdbcDataSourceRuntimeCurrCapacityHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 150),
    _JdbcDataSourceRuntimeCurrCapacityHighCount_Type()
)
jdbcDataSourceRuntimeCurrCapacityHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeCurrCapacityHighCount.setStatus("current")
_JdbcDataSourceRuntimeNumAvailable_Type = Integer32
_JdbcDataSourceRuntimeNumAvailable_Object = MibTableColumn
jdbcDataSourceRuntimeNumAvailable = _JdbcDataSourceRuntimeNumAvailable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 155),
    _JdbcDataSourceRuntimeNumAvailable_Type()
)
jdbcDataSourceRuntimeNumAvailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeNumAvailable.setStatus("current")
_JdbcDataSourceRuntimeHighestNumAvailable_Type = Integer32
_JdbcDataSourceRuntimeHighestNumAvailable_Object = MibTableColumn
jdbcDataSourceRuntimeHighestNumAvailable = _JdbcDataSourceRuntimeHighestNumAvailable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 160),
    _JdbcDataSourceRuntimeHighestNumAvailable_Type()
)
jdbcDataSourceRuntimeHighestNumAvailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeHighestNumAvailable.setStatus("current")
_JdbcDataSourceRuntimeNumUnavailable_Type = Integer32
_JdbcDataSourceRuntimeNumUnavailable_Object = MibTableColumn
jdbcDataSourceRuntimeNumUnavailable = _JdbcDataSourceRuntimeNumUnavailable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 165),
    _JdbcDataSourceRuntimeNumUnavailable_Type()
)
jdbcDataSourceRuntimeNumUnavailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeNumUnavailable.setStatus("current")
_JdbcDataSourceRuntimeHighestNumUnavailable_Type = Integer32
_JdbcDataSourceRuntimeHighestNumUnavailable_Object = MibTableColumn
jdbcDataSourceRuntimeHighestNumUnavailable = _JdbcDataSourceRuntimeHighestNumUnavailable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 170),
    _JdbcDataSourceRuntimeHighestNumUnavailable_Type()
)
jdbcDataSourceRuntimeHighestNumUnavailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeHighestNumUnavailable.setStatus("current")
_JdbcDataSourceRuntimeModuleId_Type = OctetString
_JdbcDataSourceRuntimeModuleId_Object = MibTableColumn
jdbcDataSourceRuntimeModuleId = _JdbcDataSourceRuntimeModuleId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 171),
    _JdbcDataSourceRuntimeModuleId_Type()
)
jdbcDataSourceRuntimeModuleId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeModuleId.setStatus("current")
_JdbcDataSourceRuntimeDeploymentState_Type = Integer32
_JdbcDataSourceRuntimeDeploymentState_Object = MibTableColumn
jdbcDataSourceRuntimeDeploymentState = _JdbcDataSourceRuntimeDeploymentState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 191, 1, 172),
    _JdbcDataSourceRuntimeDeploymentState_Type()
)
jdbcDataSourceRuntimeDeploymentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRuntimeDeploymentState.setStatus("current")
_JmsConnectionRuntimeTable_Object = MibTable
jmsConnectionRuntimeTable = _JmsConnectionRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 200)
)
if mibBuilder.loadTexts:
    jmsConnectionRuntimeTable.setStatus("current")
_JmsConnectionRuntimeEntry_Object = MibTableRow
jmsConnectionRuntimeEntry = _JmsConnectionRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 200, 1)
)
jmsConnectionRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsConnectionRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jmsConnectionRuntimeEntry.setStatus("current")


class _JmsConnectionRuntimeIndex_Type(DisplayString):
    """Custom type jmsConnectionRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsConnectionRuntimeIndex_Type.__name__ = "DisplayString"
_JmsConnectionRuntimeIndex_Object = MibTableColumn
jmsConnectionRuntimeIndex = _JmsConnectionRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 200, 1, 1),
    _JmsConnectionRuntimeIndex_Type()
)
jmsConnectionRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionRuntimeIndex.setStatus("current")


class _JmsConnectionRuntimeObjectName_Type(DisplayString):
    """Custom type jmsConnectionRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsConnectionRuntimeObjectName_Type.__name__ = "DisplayString"
_JmsConnectionRuntimeObjectName_Object = MibTableColumn
jmsConnectionRuntimeObjectName = _JmsConnectionRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 200, 1, 5),
    _JmsConnectionRuntimeObjectName_Type()
)
jmsConnectionRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionRuntimeObjectName.setStatus("current")


class _JmsConnectionRuntimeType_Type(DisplayString):
    """Custom type jmsConnectionRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsConnectionRuntimeType_Type.__name__ = "DisplayString"
_JmsConnectionRuntimeType_Object = MibTableColumn
jmsConnectionRuntimeType = _JmsConnectionRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 200, 1, 10),
    _JmsConnectionRuntimeType_Type()
)
jmsConnectionRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionRuntimeType.setStatus("current")


class _JmsConnectionRuntimeName_Type(DisplayString):
    """Custom type jmsConnectionRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsConnectionRuntimeName_Type.__name__ = "DisplayString"
_JmsConnectionRuntimeName_Object = MibTableColumn
jmsConnectionRuntimeName = _JmsConnectionRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 200, 1, 15),
    _JmsConnectionRuntimeName_Type()
)
jmsConnectionRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionRuntimeName.setStatus("current")


class _JmsConnectionRuntimeParent_Type(DisplayString):
    """Custom type jmsConnectionRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsConnectionRuntimeParent_Type.__name__ = "DisplayString"
_JmsConnectionRuntimeParent_Object = MibTableColumn
jmsConnectionRuntimeParent = _JmsConnectionRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 200, 1, 20),
    _JmsConnectionRuntimeParent_Type()
)
jmsConnectionRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionRuntimeParent.setStatus("current")


class _JmsConnectionRuntimeClientID_Type(DisplayString):
    """Custom type jmsConnectionRuntimeClientID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsConnectionRuntimeClientID_Type.__name__ = "DisplayString"
_JmsConnectionRuntimeClientID_Object = MibTableColumn
jmsConnectionRuntimeClientID = _JmsConnectionRuntimeClientID_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 200, 1, 25),
    _JmsConnectionRuntimeClientID_Type()
)
jmsConnectionRuntimeClientID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionRuntimeClientID.setStatus("current")


class _JmsConnectionRuntimeSessions_Type(DisplayString):
    """Custom type jmsConnectionRuntimeSessions based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JmsConnectionRuntimeSessions_Type.__name__ = "DisplayString"
_JmsConnectionRuntimeSessions_Object = MibTableColumn
jmsConnectionRuntimeSessions = _JmsConnectionRuntimeSessions_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 200, 1, 30),
    _JmsConnectionRuntimeSessions_Type()
)
jmsConnectionRuntimeSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionRuntimeSessions.setStatus("current")
_JmsConnectionRuntimeSessionsCurrentCount_Type = Counter64
_JmsConnectionRuntimeSessionsCurrentCount_Object = MibTableColumn
jmsConnectionRuntimeSessionsCurrentCount = _JmsConnectionRuntimeSessionsCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 200, 1, 35),
    _JmsConnectionRuntimeSessionsCurrentCount_Type()
)
jmsConnectionRuntimeSessionsCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionRuntimeSessionsCurrentCount.setStatus("current")
_JmsConnectionRuntimeSessionsHighCount_Type = Counter64
_JmsConnectionRuntimeSessionsHighCount_Object = MibTableColumn
jmsConnectionRuntimeSessionsHighCount = _JmsConnectionRuntimeSessionsHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 200, 1, 40),
    _JmsConnectionRuntimeSessionsHighCount_Type()
)
jmsConnectionRuntimeSessionsHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionRuntimeSessionsHighCount.setStatus("current")
_JmsConnectionRuntimeSessionsTotalCount_Type = Counter64
_JmsConnectionRuntimeSessionsTotalCount_Object = MibTableColumn
jmsConnectionRuntimeSessionsTotalCount = _JmsConnectionRuntimeSessionsTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 200, 1, 45),
    _JmsConnectionRuntimeSessionsTotalCount_Type()
)
jmsConnectionRuntimeSessionsTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionRuntimeSessionsTotalCount.setStatus("current")
_JmsConnectionRuntimeHostAddress_Type = OctetString
_JmsConnectionRuntimeHostAddress_Object = MibTableColumn
jmsConnectionRuntimeHostAddress = _JmsConnectionRuntimeHostAddress_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 200, 1, 46),
    _JmsConnectionRuntimeHostAddress_Type()
)
jmsConnectionRuntimeHostAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionRuntimeHostAddress.setStatus("current")
_JmsConsumerRuntimeTable_Object = MibTable
jmsConsumerRuntimeTable = _JmsConsumerRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 210)
)
if mibBuilder.loadTexts:
    jmsConsumerRuntimeTable.setStatus("current")
_JmsConsumerRuntimeEntry_Object = MibTableRow
jmsConsumerRuntimeEntry = _JmsConsumerRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 210, 1)
)
jmsConsumerRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsConsumerRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jmsConsumerRuntimeEntry.setStatus("current")


class _JmsConsumerRuntimeIndex_Type(DisplayString):
    """Custom type jmsConsumerRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsConsumerRuntimeIndex_Type.__name__ = "DisplayString"
_JmsConsumerRuntimeIndex_Object = MibTableColumn
jmsConsumerRuntimeIndex = _JmsConsumerRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 210, 1, 1),
    _JmsConsumerRuntimeIndex_Type()
)
jmsConsumerRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConsumerRuntimeIndex.setStatus("current")


class _JmsConsumerRuntimeObjectName_Type(DisplayString):
    """Custom type jmsConsumerRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsConsumerRuntimeObjectName_Type.__name__ = "DisplayString"
_JmsConsumerRuntimeObjectName_Object = MibTableColumn
jmsConsumerRuntimeObjectName = _JmsConsumerRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 210, 1, 5),
    _JmsConsumerRuntimeObjectName_Type()
)
jmsConsumerRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConsumerRuntimeObjectName.setStatus("current")


class _JmsConsumerRuntimeType_Type(DisplayString):
    """Custom type jmsConsumerRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsConsumerRuntimeType_Type.__name__ = "DisplayString"
_JmsConsumerRuntimeType_Object = MibTableColumn
jmsConsumerRuntimeType = _JmsConsumerRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 210, 1, 10),
    _JmsConsumerRuntimeType_Type()
)
jmsConsumerRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConsumerRuntimeType.setStatus("current")


class _JmsConsumerRuntimeName_Type(DisplayString):
    """Custom type jmsConsumerRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsConsumerRuntimeName_Type.__name__ = "DisplayString"
_JmsConsumerRuntimeName_Object = MibTableColumn
jmsConsumerRuntimeName = _JmsConsumerRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 210, 1, 15),
    _JmsConsumerRuntimeName_Type()
)
jmsConsumerRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConsumerRuntimeName.setStatus("current")


class _JmsConsumerRuntimeParent_Type(DisplayString):
    """Custom type jmsConsumerRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsConsumerRuntimeParent_Type.__name__ = "DisplayString"
_JmsConsumerRuntimeParent_Object = MibTableColumn
jmsConsumerRuntimeParent = _JmsConsumerRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 210, 1, 20),
    _JmsConsumerRuntimeParent_Type()
)
jmsConsumerRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConsumerRuntimeParent.setStatus("current")
_JmsConsumerRuntimeMessagesPendingCount_Type = Counter64
_JmsConsumerRuntimeMessagesPendingCount_Object = MibTableColumn
jmsConsumerRuntimeMessagesPendingCount = _JmsConsumerRuntimeMessagesPendingCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 210, 1, 25),
    _JmsConsumerRuntimeMessagesPendingCount_Type()
)
jmsConsumerRuntimeMessagesPendingCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConsumerRuntimeMessagesPendingCount.setStatus("current")
_JmsConsumerRuntimeMessagesReceivedCount_Type = Counter64
_JmsConsumerRuntimeMessagesReceivedCount_Object = MibTableColumn
jmsConsumerRuntimeMessagesReceivedCount = _JmsConsumerRuntimeMessagesReceivedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 210, 1, 30),
    _JmsConsumerRuntimeMessagesReceivedCount_Type()
)
jmsConsumerRuntimeMessagesReceivedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConsumerRuntimeMessagesReceivedCount.setStatus("current")
_JmsConsumerRuntimeBytesPendingCount_Type = Counter64
_JmsConsumerRuntimeBytesPendingCount_Object = MibTableColumn
jmsConsumerRuntimeBytesPendingCount = _JmsConsumerRuntimeBytesPendingCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 210, 1, 35),
    _JmsConsumerRuntimeBytesPendingCount_Type()
)
jmsConsumerRuntimeBytesPendingCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConsumerRuntimeBytesPendingCount.setStatus("current")
_JmsConsumerRuntimeBytesReceivedCount_Type = Counter64
_JmsConsumerRuntimeBytesReceivedCount_Object = MibTableColumn
jmsConsumerRuntimeBytesReceivedCount = _JmsConsumerRuntimeBytesReceivedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 210, 1, 40),
    _JmsConsumerRuntimeBytesReceivedCount_Type()
)
jmsConsumerRuntimeBytesReceivedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConsumerRuntimeBytesReceivedCount.setStatus("current")


class _JmsConsumerRuntimeDestinationName_Type(DisplayString):
    """Custom type jmsConsumerRuntimeDestinationName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsConsumerRuntimeDestinationName_Type.__name__ = "DisplayString"
_JmsConsumerRuntimeDestinationName_Object = MibTableColumn
jmsConsumerRuntimeDestinationName = _JmsConsumerRuntimeDestinationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 210, 1, 45),
    _JmsConsumerRuntimeDestinationName_Type()
)
jmsConsumerRuntimeDestinationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConsumerRuntimeDestinationName.setStatus("current")


class _JmsConsumerRuntimeSelector_Type(DisplayString):
    """Custom type jmsConsumerRuntimeSelector based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsConsumerRuntimeSelector_Type.__name__ = "DisplayString"
_JmsConsumerRuntimeSelector_Object = MibTableColumn
jmsConsumerRuntimeSelector = _JmsConsumerRuntimeSelector_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 210, 1, 50),
    _JmsConsumerRuntimeSelector_Type()
)
jmsConsumerRuntimeSelector.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConsumerRuntimeSelector.setStatus("current")


class _JmsConsumerRuntimeDurable_Type(Integer32):
    """Custom type jmsConsumerRuntimeDurable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_JmsConsumerRuntimeDurable_Type.__name__ = "Integer32"
_JmsConsumerRuntimeDurable_Object = MibTableColumn
jmsConsumerRuntimeDurable = _JmsConsumerRuntimeDurable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 210, 1, 55),
    _JmsConsumerRuntimeDurable_Type()
)
jmsConsumerRuntimeDurable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConsumerRuntimeDurable.setStatus("current")
_JmsConsumerRuntimeActive_Type = Integer32
_JmsConsumerRuntimeActive_Object = MibTableColumn
jmsConsumerRuntimeActive = _JmsConsumerRuntimeActive_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 210, 1, 56),
    _JmsConsumerRuntimeActive_Type()
)
jmsConsumerRuntimeActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConsumerRuntimeActive.setStatus("current")
_JmsConsumerRuntimeMemberDestinationName_Type = OctetString
_JmsConsumerRuntimeMemberDestinationName_Object = MibTableColumn
jmsConsumerRuntimeMemberDestinationName = _JmsConsumerRuntimeMemberDestinationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 210, 1, 57),
    _JmsConsumerRuntimeMemberDestinationName_Type()
)
jmsConsumerRuntimeMemberDestinationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConsumerRuntimeMemberDestinationName.setStatus("current")
_JmsDestinationRuntimeTable_Object = MibTable
jmsDestinationRuntimeTable = _JmsDestinationRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220)
)
if mibBuilder.loadTexts:
    jmsDestinationRuntimeTable.setStatus("current")
_JmsDestinationRuntimeEntry_Object = MibTableRow
jmsDestinationRuntimeEntry = _JmsDestinationRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1)
)
jmsDestinationRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsDestinationRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jmsDestinationRuntimeEntry.setStatus("current")


class _JmsDestinationRuntimeIndex_Type(DisplayString):
    """Custom type jmsDestinationRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsDestinationRuntimeIndex_Type.__name__ = "DisplayString"
_JmsDestinationRuntimeIndex_Object = MibTableColumn
jmsDestinationRuntimeIndex = _JmsDestinationRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 1),
    _JmsDestinationRuntimeIndex_Type()
)
jmsDestinationRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeIndex.setStatus("current")


class _JmsDestinationRuntimeObjectName_Type(DisplayString):
    """Custom type jmsDestinationRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsDestinationRuntimeObjectName_Type.__name__ = "DisplayString"
_JmsDestinationRuntimeObjectName_Object = MibTableColumn
jmsDestinationRuntimeObjectName = _JmsDestinationRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 5),
    _JmsDestinationRuntimeObjectName_Type()
)
jmsDestinationRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeObjectName.setStatus("current")


class _JmsDestinationRuntimeType_Type(DisplayString):
    """Custom type jmsDestinationRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsDestinationRuntimeType_Type.__name__ = "DisplayString"
_JmsDestinationRuntimeType_Object = MibTableColumn
jmsDestinationRuntimeType = _JmsDestinationRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 10),
    _JmsDestinationRuntimeType_Type()
)
jmsDestinationRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeType.setStatus("current")


class _JmsDestinationRuntimeName_Type(DisplayString):
    """Custom type jmsDestinationRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsDestinationRuntimeName_Type.__name__ = "DisplayString"
_JmsDestinationRuntimeName_Object = MibTableColumn
jmsDestinationRuntimeName = _JmsDestinationRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 15),
    _JmsDestinationRuntimeName_Type()
)
jmsDestinationRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeName.setStatus("current")


class _JmsDestinationRuntimeParent_Type(DisplayString):
    """Custom type jmsDestinationRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsDestinationRuntimeParent_Type.__name__ = "DisplayString"
_JmsDestinationRuntimeParent_Object = MibTableColumn
jmsDestinationRuntimeParent = _JmsDestinationRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 20),
    _JmsDestinationRuntimeParent_Type()
)
jmsDestinationRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeParent.setStatus("current")
_JmsDestinationRuntimeConsumersCurrentCount_Type = Counter64
_JmsDestinationRuntimeConsumersCurrentCount_Object = MibTableColumn
jmsDestinationRuntimeConsumersCurrentCount = _JmsDestinationRuntimeConsumersCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 25),
    _JmsDestinationRuntimeConsumersCurrentCount_Type()
)
jmsDestinationRuntimeConsumersCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeConsumersCurrentCount.setStatus("current")
_JmsDestinationRuntimeConsumersHighCount_Type = Counter64
_JmsDestinationRuntimeConsumersHighCount_Object = MibTableColumn
jmsDestinationRuntimeConsumersHighCount = _JmsDestinationRuntimeConsumersHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 30),
    _JmsDestinationRuntimeConsumersHighCount_Type()
)
jmsDestinationRuntimeConsumersHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeConsumersHighCount.setStatus("current")
_JmsDestinationRuntimeConsumersTotalCount_Type = Counter64
_JmsDestinationRuntimeConsumersTotalCount_Object = MibTableColumn
jmsDestinationRuntimeConsumersTotalCount = _JmsDestinationRuntimeConsumersTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 35),
    _JmsDestinationRuntimeConsumersTotalCount_Type()
)
jmsDestinationRuntimeConsumersTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeConsumersTotalCount.setStatus("current")
_JmsDestinationRuntimeMessagesCurrentCount_Type = Counter64
_JmsDestinationRuntimeMessagesCurrentCount_Object = MibTableColumn
jmsDestinationRuntimeMessagesCurrentCount = _JmsDestinationRuntimeMessagesCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 40),
    _JmsDestinationRuntimeMessagesCurrentCount_Type()
)
jmsDestinationRuntimeMessagesCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeMessagesCurrentCount.setStatus("current")
_JmsDestinationRuntimeMessagesPendingCount_Type = Counter64
_JmsDestinationRuntimeMessagesPendingCount_Object = MibTableColumn
jmsDestinationRuntimeMessagesPendingCount = _JmsDestinationRuntimeMessagesPendingCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 45),
    _JmsDestinationRuntimeMessagesPendingCount_Type()
)
jmsDestinationRuntimeMessagesPendingCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeMessagesPendingCount.setStatus("current")
_JmsDestinationRuntimeMessagesHighCount_Type = Counter64
_JmsDestinationRuntimeMessagesHighCount_Object = MibTableColumn
jmsDestinationRuntimeMessagesHighCount = _JmsDestinationRuntimeMessagesHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 50),
    _JmsDestinationRuntimeMessagesHighCount_Type()
)
jmsDestinationRuntimeMessagesHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeMessagesHighCount.setStatus("current")
_JmsDestinationRuntimeMessagesReceivedCount_Type = Counter64
_JmsDestinationRuntimeMessagesReceivedCount_Object = MibTableColumn
jmsDestinationRuntimeMessagesReceivedCount = _JmsDestinationRuntimeMessagesReceivedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 55),
    _JmsDestinationRuntimeMessagesReceivedCount_Type()
)
jmsDestinationRuntimeMessagesReceivedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeMessagesReceivedCount.setStatus("current")
_JmsDestinationRuntimeMessagesThresholdTime_Type = Counter64
_JmsDestinationRuntimeMessagesThresholdTime_Object = MibTableColumn
jmsDestinationRuntimeMessagesThresholdTime = _JmsDestinationRuntimeMessagesThresholdTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 60),
    _JmsDestinationRuntimeMessagesThresholdTime_Type()
)
jmsDestinationRuntimeMessagesThresholdTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeMessagesThresholdTime.setStatus("current")
_JmsDestinationRuntimeBytesCurrentCount_Type = Counter64
_JmsDestinationRuntimeBytesCurrentCount_Object = MibTableColumn
jmsDestinationRuntimeBytesCurrentCount = _JmsDestinationRuntimeBytesCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 65),
    _JmsDestinationRuntimeBytesCurrentCount_Type()
)
jmsDestinationRuntimeBytesCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeBytesCurrentCount.setStatus("current")
_JmsDestinationRuntimeBytesPendingCount_Type = Counter64
_JmsDestinationRuntimeBytesPendingCount_Object = MibTableColumn
jmsDestinationRuntimeBytesPendingCount = _JmsDestinationRuntimeBytesPendingCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 70),
    _JmsDestinationRuntimeBytesPendingCount_Type()
)
jmsDestinationRuntimeBytesPendingCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeBytesPendingCount.setStatus("current")
_JmsDestinationRuntimeBytesHighCount_Type = Counter64
_JmsDestinationRuntimeBytesHighCount_Object = MibTableColumn
jmsDestinationRuntimeBytesHighCount = _JmsDestinationRuntimeBytesHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 75),
    _JmsDestinationRuntimeBytesHighCount_Type()
)
jmsDestinationRuntimeBytesHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeBytesHighCount.setStatus("current")
_JmsDestinationRuntimeBytesReceivedCount_Type = Counter64
_JmsDestinationRuntimeBytesReceivedCount_Object = MibTableColumn
jmsDestinationRuntimeBytesReceivedCount = _JmsDestinationRuntimeBytesReceivedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 80),
    _JmsDestinationRuntimeBytesReceivedCount_Type()
)
jmsDestinationRuntimeBytesReceivedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeBytesReceivedCount.setStatus("current")
_JmsDestinationRuntimeBytesThresholdTime_Type = Counter64
_JmsDestinationRuntimeBytesThresholdTime_Object = MibTableColumn
jmsDestinationRuntimeBytesThresholdTime = _JmsDestinationRuntimeBytesThresholdTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 85),
    _JmsDestinationRuntimeBytesThresholdTime_Type()
)
jmsDestinationRuntimeBytesThresholdTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeBytesThresholdTime.setStatus("current")


class _JmsDestinationRuntimeDurableSubscribers_Type(DisplayString):
    """Custom type jmsDestinationRuntimeDurableSubscribers based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JmsDestinationRuntimeDurableSubscribers_Type.__name__ = "DisplayString"
_JmsDestinationRuntimeDurableSubscribers_Object = MibTableColumn
jmsDestinationRuntimeDurableSubscribers = _JmsDestinationRuntimeDurableSubscribers_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 90),
    _JmsDestinationRuntimeDurableSubscribers_Type()
)
jmsDestinationRuntimeDurableSubscribers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeDurableSubscribers.setStatus("current")
_JmsDestinationRuntimeProductionPaused_Type = OctetString
_JmsDestinationRuntimeProductionPaused_Object = MibTableColumn
jmsDestinationRuntimeProductionPaused = _JmsDestinationRuntimeProductionPaused_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 91),
    _JmsDestinationRuntimeProductionPaused_Type()
)
jmsDestinationRuntimeProductionPaused.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeProductionPaused.setStatus("current")
_JmsDestinationRuntimeInsertionPaused_Type = OctetString
_JmsDestinationRuntimeInsertionPaused_Object = MibTableColumn
jmsDestinationRuntimeInsertionPaused = _JmsDestinationRuntimeInsertionPaused_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 92),
    _JmsDestinationRuntimeInsertionPaused_Type()
)
jmsDestinationRuntimeInsertionPaused.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeInsertionPaused.setStatus("current")
_JmsDestinationRuntimeConsumptionPausedState_Type = OctetString
_JmsDestinationRuntimeConsumptionPausedState_Object = MibTableColumn
jmsDestinationRuntimeConsumptionPausedState = _JmsDestinationRuntimeConsumptionPausedState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 93),
    _JmsDestinationRuntimeConsumptionPausedState_Type()
)
jmsDestinationRuntimeConsumptionPausedState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeConsumptionPausedState.setStatus("current")
_JmsDestinationRuntimeConsumptionPaused_Type = OctetString
_JmsDestinationRuntimeConsumptionPaused_Object = MibTableColumn
jmsDestinationRuntimeConsumptionPaused = _JmsDestinationRuntimeConsumptionPaused_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 94),
    _JmsDestinationRuntimeConsumptionPaused_Type()
)
jmsDestinationRuntimeConsumptionPaused.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeConsumptionPaused.setStatus("current")
_JmsDestinationRuntimeState_Type = OctetString
_JmsDestinationRuntimeState_Object = MibTableColumn
jmsDestinationRuntimeState = _JmsDestinationRuntimeState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 95),
    _JmsDestinationRuntimeState_Type()
)
jmsDestinationRuntimeState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeState.setStatus("current")
_JmsDestinationRuntimeInsertionPausedState_Type = OctetString
_JmsDestinationRuntimeInsertionPausedState_Object = MibTableColumn
jmsDestinationRuntimeInsertionPausedState = _JmsDestinationRuntimeInsertionPausedState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 96),
    _JmsDestinationRuntimeInsertionPausedState_Type()
)
jmsDestinationRuntimeInsertionPausedState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeInsertionPausedState.setStatus("current")
_JmsDestinationRuntimeDestinationType_Type = OctetString
_JmsDestinationRuntimeDestinationType_Object = MibTableColumn
jmsDestinationRuntimeDestinationType = _JmsDestinationRuntimeDestinationType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 97),
    _JmsDestinationRuntimeDestinationType_Type()
)
jmsDestinationRuntimeDestinationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeDestinationType.setStatus("current")
_JmsDestinationRuntimeProductionPausedState_Type = OctetString
_JmsDestinationRuntimeProductionPausedState_Object = MibTableColumn
jmsDestinationRuntimeProductionPausedState = _JmsDestinationRuntimeProductionPausedState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 220, 1, 98),
    _JmsDestinationRuntimeProductionPausedState_Type()
)
jmsDestinationRuntimeProductionPausedState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationRuntimeProductionPausedState.setStatus("current")
_JmsProducerRuntimeTable_Object = MibTable
jmsProducerRuntimeTable = _JmsProducerRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 230)
)
if mibBuilder.loadTexts:
    jmsProducerRuntimeTable.setStatus("current")
_JmsProducerRuntimeEntry_Object = MibTableRow
jmsProducerRuntimeEntry = _JmsProducerRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 230, 1)
)
jmsProducerRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsProducerRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jmsProducerRuntimeEntry.setStatus("current")


class _JmsProducerRuntimeIndex_Type(DisplayString):
    """Custom type jmsProducerRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsProducerRuntimeIndex_Type.__name__ = "DisplayString"
_JmsProducerRuntimeIndex_Object = MibTableColumn
jmsProducerRuntimeIndex = _JmsProducerRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 230, 1, 1),
    _JmsProducerRuntimeIndex_Type()
)
jmsProducerRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsProducerRuntimeIndex.setStatus("current")


class _JmsProducerRuntimeObjectName_Type(DisplayString):
    """Custom type jmsProducerRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsProducerRuntimeObjectName_Type.__name__ = "DisplayString"
_JmsProducerRuntimeObjectName_Object = MibTableColumn
jmsProducerRuntimeObjectName = _JmsProducerRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 230, 1, 5),
    _JmsProducerRuntimeObjectName_Type()
)
jmsProducerRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsProducerRuntimeObjectName.setStatus("current")


class _JmsProducerRuntimeType_Type(DisplayString):
    """Custom type jmsProducerRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsProducerRuntimeType_Type.__name__ = "DisplayString"
_JmsProducerRuntimeType_Object = MibTableColumn
jmsProducerRuntimeType = _JmsProducerRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 230, 1, 10),
    _JmsProducerRuntimeType_Type()
)
jmsProducerRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsProducerRuntimeType.setStatus("current")


class _JmsProducerRuntimeName_Type(DisplayString):
    """Custom type jmsProducerRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsProducerRuntimeName_Type.__name__ = "DisplayString"
_JmsProducerRuntimeName_Object = MibTableColumn
jmsProducerRuntimeName = _JmsProducerRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 230, 1, 15),
    _JmsProducerRuntimeName_Type()
)
jmsProducerRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsProducerRuntimeName.setStatus("current")


class _JmsProducerRuntimeParent_Type(DisplayString):
    """Custom type jmsProducerRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsProducerRuntimeParent_Type.__name__ = "DisplayString"
_JmsProducerRuntimeParent_Object = MibTableColumn
jmsProducerRuntimeParent = _JmsProducerRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 230, 1, 20),
    _JmsProducerRuntimeParent_Type()
)
jmsProducerRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsProducerRuntimeParent.setStatus("current")
_JmsProducerRuntimeMessagesPendingCount_Type = Counter64
_JmsProducerRuntimeMessagesPendingCount_Object = MibTableColumn
jmsProducerRuntimeMessagesPendingCount = _JmsProducerRuntimeMessagesPendingCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 230, 1, 25),
    _JmsProducerRuntimeMessagesPendingCount_Type()
)
jmsProducerRuntimeMessagesPendingCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsProducerRuntimeMessagesPendingCount.setStatus("current")
_JmsProducerRuntimeMessagesSentCount_Type = Counter64
_JmsProducerRuntimeMessagesSentCount_Object = MibTableColumn
jmsProducerRuntimeMessagesSentCount = _JmsProducerRuntimeMessagesSentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 230, 1, 30),
    _JmsProducerRuntimeMessagesSentCount_Type()
)
jmsProducerRuntimeMessagesSentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsProducerRuntimeMessagesSentCount.setStatus("current")
_JmsProducerRuntimeBytesPendingCount_Type = Counter64
_JmsProducerRuntimeBytesPendingCount_Object = MibTableColumn
jmsProducerRuntimeBytesPendingCount = _JmsProducerRuntimeBytesPendingCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 230, 1, 35),
    _JmsProducerRuntimeBytesPendingCount_Type()
)
jmsProducerRuntimeBytesPendingCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsProducerRuntimeBytesPendingCount.setStatus("current")
_JmsProducerRuntimeBytesSentCount_Type = Counter64
_JmsProducerRuntimeBytesSentCount_Object = MibTableColumn
jmsProducerRuntimeBytesSentCount = _JmsProducerRuntimeBytesSentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 230, 1, 40),
    _JmsProducerRuntimeBytesSentCount_Type()
)
jmsProducerRuntimeBytesSentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsProducerRuntimeBytesSentCount.setStatus("current")
_JmsPooledConnectionRuntimeTable_Object = MibTable
jmsPooledConnectionRuntimeTable = _JmsPooledConnectionRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231)
)
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeTable.setStatus("current")
_JmsPooledConnectionRuntimeEntry_Object = MibTableRow
jmsPooledConnectionRuntimeEntry = _JmsPooledConnectionRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1)
)
jmsPooledConnectionRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsPooledConnectionRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeEntry.setStatus("current")


class _JmsPooledConnectionRuntimeIndex_Type(DisplayString):
    """Custom type jmsPooledConnectionRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsPooledConnectionRuntimeIndex_Type.__name__ = "DisplayString"
_JmsPooledConnectionRuntimeIndex_Object = MibTableColumn
jmsPooledConnectionRuntimeIndex = _JmsPooledConnectionRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 1),
    _JmsPooledConnectionRuntimeIndex_Type()
)
jmsPooledConnectionRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeIndex.setStatus("current")


class _JmsPooledConnectionRuntimeObjectName_Type(DisplayString):
    """Custom type jmsPooledConnectionRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsPooledConnectionRuntimeObjectName_Type.__name__ = "DisplayString"
_JmsPooledConnectionRuntimeObjectName_Object = MibTableColumn
jmsPooledConnectionRuntimeObjectName = _JmsPooledConnectionRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 5),
    _JmsPooledConnectionRuntimeObjectName_Type()
)
jmsPooledConnectionRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeObjectName.setStatus("current")


class _JmsPooledConnectionRuntimeType_Type(DisplayString):
    """Custom type jmsPooledConnectionRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsPooledConnectionRuntimeType_Type.__name__ = "DisplayString"
_JmsPooledConnectionRuntimeType_Object = MibTableColumn
jmsPooledConnectionRuntimeType = _JmsPooledConnectionRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 10),
    _JmsPooledConnectionRuntimeType_Type()
)
jmsPooledConnectionRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeType.setStatus("current")


class _JmsPooledConnectionRuntimeName_Type(DisplayString):
    """Custom type jmsPooledConnectionRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsPooledConnectionRuntimeName_Type.__name__ = "DisplayString"
_JmsPooledConnectionRuntimeName_Object = MibTableColumn
jmsPooledConnectionRuntimeName = _JmsPooledConnectionRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 15),
    _JmsPooledConnectionRuntimeName_Type()
)
jmsPooledConnectionRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeName.setStatus("current")


class _JmsPooledConnectionRuntimeParent_Type(DisplayString):
    """Custom type jmsPooledConnectionRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsPooledConnectionRuntimeParent_Type.__name__ = "DisplayString"
_JmsPooledConnectionRuntimeParent_Object = MibTableColumn
jmsPooledConnectionRuntimeParent = _JmsPooledConnectionRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 20),
    _JmsPooledConnectionRuntimeParent_Type()
)
jmsPooledConnectionRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeParent.setStatus("current")
_JmsPooledConnectionRuntimeAverageReserved_Type = Integer32
_JmsPooledConnectionRuntimeAverageReserved_Object = MibTableColumn
jmsPooledConnectionRuntimeAverageReserved = _JmsPooledConnectionRuntimeAverageReserved_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 21),
    _JmsPooledConnectionRuntimeAverageReserved_Type()
)
jmsPooledConnectionRuntimeAverageReserved.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeAverageReserved.setStatus("current")
_JmsPooledConnectionRuntimeCreationDelayTime_Type = Integer32
_JmsPooledConnectionRuntimeCreationDelayTime_Object = MibTableColumn
jmsPooledConnectionRuntimeCreationDelayTime = _JmsPooledConnectionRuntimeCreationDelayTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 22),
    _JmsPooledConnectionRuntimeCreationDelayTime_Type()
)
jmsPooledConnectionRuntimeCreationDelayTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeCreationDelayTime.setStatus("current")
_JmsPooledConnectionRuntimeCurrCapacity_Type = Integer32
_JmsPooledConnectionRuntimeCurrCapacity_Object = MibTableColumn
jmsPooledConnectionRuntimeCurrCapacity = _JmsPooledConnectionRuntimeCurrCapacity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 23),
    _JmsPooledConnectionRuntimeCurrCapacity_Type()
)
jmsPooledConnectionRuntimeCurrCapacity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeCurrCapacity.setStatus("current")
_JmsPooledConnectionRuntimeHighestNumAvailable_Type = Integer32
_JmsPooledConnectionRuntimeHighestNumAvailable_Object = MibTableColumn
jmsPooledConnectionRuntimeHighestNumAvailable = _JmsPooledConnectionRuntimeHighestNumAvailable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 24),
    _JmsPooledConnectionRuntimeHighestNumAvailable_Type()
)
jmsPooledConnectionRuntimeHighestNumAvailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeHighestNumAvailable.setStatus("current")
_JmsPooledConnectionRuntimeHighestNumReserved_Type = Integer32
_JmsPooledConnectionRuntimeHighestNumReserved_Object = MibTableColumn
jmsPooledConnectionRuntimeHighestNumReserved = _JmsPooledConnectionRuntimeHighestNumReserved_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 25),
    _JmsPooledConnectionRuntimeHighestNumReserved_Type()
)
jmsPooledConnectionRuntimeHighestNumReserved.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeHighestNumReserved.setStatus("current")
_JmsPooledConnectionRuntimeNumAvailable_Type = Integer32
_JmsPooledConnectionRuntimeNumAvailable_Object = MibTableColumn
jmsPooledConnectionRuntimeNumAvailable = _JmsPooledConnectionRuntimeNumAvailable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 26),
    _JmsPooledConnectionRuntimeNumAvailable_Type()
)
jmsPooledConnectionRuntimeNumAvailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeNumAvailable.setStatus("current")
_JmsPooledConnectionRuntimeHighestNumWaiters_Type = Counter32
_JmsPooledConnectionRuntimeHighestNumWaiters_Object = MibTableColumn
jmsPooledConnectionRuntimeHighestNumWaiters = _JmsPooledConnectionRuntimeHighestNumWaiters_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 27),
    _JmsPooledConnectionRuntimeHighestNumWaiters_Type()
)
jmsPooledConnectionRuntimeHighestNumWaiters.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeHighestNumWaiters.setStatus("current")
_JmsPooledConnectionRuntimeHighestWaitSeconds_Type = Integer32
_JmsPooledConnectionRuntimeHighestWaitSeconds_Object = MibTableColumn
jmsPooledConnectionRuntimeHighestWaitSeconds = _JmsPooledConnectionRuntimeHighestWaitSeconds_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 28),
    _JmsPooledConnectionRuntimeHighestWaitSeconds_Type()
)
jmsPooledConnectionRuntimeHighestWaitSeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeHighestWaitSeconds.setStatus("current")
_JmsPooledConnectionRuntimeMaxCapacity_Type = Integer32
_JmsPooledConnectionRuntimeMaxCapacity_Object = MibTableColumn
jmsPooledConnectionRuntimeMaxCapacity = _JmsPooledConnectionRuntimeMaxCapacity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 29),
    _JmsPooledConnectionRuntimeMaxCapacity_Type()
)
jmsPooledConnectionRuntimeMaxCapacity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeMaxCapacity.setStatus("current")
_JmsPooledConnectionRuntimeNumConnectionObjects_Type = Integer32
_JmsPooledConnectionRuntimeNumConnectionObjects_Object = MibTableColumn
jmsPooledConnectionRuntimeNumConnectionObjects = _JmsPooledConnectionRuntimeNumConnectionObjects_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 30),
    _JmsPooledConnectionRuntimeNumConnectionObjects_Type()
)
jmsPooledConnectionRuntimeNumConnectionObjects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeNumConnectionObjects.setStatus("current")
_JmsPooledConnectionRuntimeNumFailuresToRefresh_Type = Integer32
_JmsPooledConnectionRuntimeNumFailuresToRefresh_Object = MibTableColumn
jmsPooledConnectionRuntimeNumFailuresToRefresh = _JmsPooledConnectionRuntimeNumFailuresToRefresh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 31),
    _JmsPooledConnectionRuntimeNumFailuresToRefresh_Type()
)
jmsPooledConnectionRuntimeNumFailuresToRefresh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeNumFailuresToRefresh.setStatus("current")
_JmsPooledConnectionRuntimeNumLeaked_Type = Integer32
_JmsPooledConnectionRuntimeNumLeaked_Object = MibTableColumn
jmsPooledConnectionRuntimeNumLeaked = _JmsPooledConnectionRuntimeNumLeaked_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 32),
    _JmsPooledConnectionRuntimeNumLeaked_Type()
)
jmsPooledConnectionRuntimeNumLeaked.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeNumLeaked.setStatus("current")
_JmsPooledConnectionRuntimeNumReserved_Type = Integer32
_JmsPooledConnectionRuntimeNumReserved_Object = MibTableColumn
jmsPooledConnectionRuntimeNumReserved = _JmsPooledConnectionRuntimeNumReserved_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 33),
    _JmsPooledConnectionRuntimeNumReserved_Type()
)
jmsPooledConnectionRuntimeNumReserved.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeNumReserved.setStatus("current")
_JmsPooledConnectionRuntimeNumUnavailable_Type = Integer32
_JmsPooledConnectionRuntimeNumUnavailable_Object = MibTableColumn
jmsPooledConnectionRuntimeNumUnavailable = _JmsPooledConnectionRuntimeNumUnavailable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 34),
    _JmsPooledConnectionRuntimeNumUnavailable_Type()
)
jmsPooledConnectionRuntimeNumUnavailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeNumUnavailable.setStatus("current")
_JmsPooledConnectionRuntimeNumWaiters_Type = Integer32
_JmsPooledConnectionRuntimeNumWaiters_Object = MibTableColumn
jmsPooledConnectionRuntimeNumWaiters = _JmsPooledConnectionRuntimeNumWaiters_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 35),
    _JmsPooledConnectionRuntimeNumWaiters_Type()
)
jmsPooledConnectionRuntimeNumWaiters.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeNumWaiters.setStatus("current")
_JmsPooledConnectionRuntimeTotalNumAllocated_Type = Integer32
_JmsPooledConnectionRuntimeTotalNumAllocated_Object = MibTableColumn
jmsPooledConnectionRuntimeTotalNumAllocated = _JmsPooledConnectionRuntimeTotalNumAllocated_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 36),
    _JmsPooledConnectionRuntimeTotalNumAllocated_Type()
)
jmsPooledConnectionRuntimeTotalNumAllocated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeTotalNumAllocated.setStatus("current")
_JmsPooledConnectionRuntimeTotalNumDestroyed_Type = Integer32
_JmsPooledConnectionRuntimeTotalNumDestroyed_Object = MibTableColumn
jmsPooledConnectionRuntimeTotalNumDestroyed = _JmsPooledConnectionRuntimeTotalNumDestroyed_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 37),
    _JmsPooledConnectionRuntimeTotalNumDestroyed_Type()
)
jmsPooledConnectionRuntimeTotalNumDestroyed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeTotalNumDestroyed.setStatus("current")
_JmsPooledConnectionRuntimeHighestNumUnavailable_Type = Integer32
_JmsPooledConnectionRuntimeHighestNumUnavailable_Object = MibTableColumn
jmsPooledConnectionRuntimeHighestNumUnavailable = _JmsPooledConnectionRuntimeHighestNumUnavailable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 231, 1, 38),
    _JmsPooledConnectionRuntimeHighestNumUnavailable_Type()
)
jmsPooledConnectionRuntimeHighestNumUnavailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsPooledConnectionRuntimeHighestNumUnavailable.setStatus("current")
_JmsRuntimeTable_Object = MibTable
jmsRuntimeTable = _JmsRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 240)
)
if mibBuilder.loadTexts:
    jmsRuntimeTable.setStatus("current")
_JmsRuntimeEntry_Object = MibTableRow
jmsRuntimeEntry = _JmsRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 240, 1)
)
jmsRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jmsRuntimeEntry.setStatus("current")


class _JmsRuntimeIndex_Type(DisplayString):
    """Custom type jmsRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsRuntimeIndex_Type.__name__ = "DisplayString"
_JmsRuntimeIndex_Object = MibTableColumn
jmsRuntimeIndex = _JmsRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 240, 1, 1),
    _JmsRuntimeIndex_Type()
)
jmsRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRuntimeIndex.setStatus("current")


class _JmsRuntimeObjectName_Type(DisplayString):
    """Custom type jmsRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsRuntimeObjectName_Type.__name__ = "DisplayString"
_JmsRuntimeObjectName_Object = MibTableColumn
jmsRuntimeObjectName = _JmsRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 240, 1, 5),
    _JmsRuntimeObjectName_Type()
)
jmsRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRuntimeObjectName.setStatus("current")


class _JmsRuntimeType_Type(DisplayString):
    """Custom type jmsRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsRuntimeType_Type.__name__ = "DisplayString"
_JmsRuntimeType_Object = MibTableColumn
jmsRuntimeType = _JmsRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 240, 1, 10),
    _JmsRuntimeType_Type()
)
jmsRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRuntimeType.setStatus("current")


class _JmsRuntimeName_Type(DisplayString):
    """Custom type jmsRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsRuntimeName_Type.__name__ = "DisplayString"
_JmsRuntimeName_Object = MibTableColumn
jmsRuntimeName = _JmsRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 240, 1, 15),
    _JmsRuntimeName_Type()
)
jmsRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRuntimeName.setStatus("current")


class _JmsRuntimeParent_Type(DisplayString):
    """Custom type jmsRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsRuntimeParent_Type.__name__ = "DisplayString"
_JmsRuntimeParent_Object = MibTableColumn
jmsRuntimeParent = _JmsRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 240, 1, 20),
    _JmsRuntimeParent_Type()
)
jmsRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRuntimeParent.setStatus("current")


class _JmsRuntimeConnections_Type(DisplayString):
    """Custom type jmsRuntimeConnections based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JmsRuntimeConnections_Type.__name__ = "DisplayString"
_JmsRuntimeConnections_Object = MibTableColumn
jmsRuntimeConnections = _JmsRuntimeConnections_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 240, 1, 25),
    _JmsRuntimeConnections_Type()
)
jmsRuntimeConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRuntimeConnections.setStatus("current")
_JmsRuntimeConnectionsCurrentCount_Type = Counter64
_JmsRuntimeConnectionsCurrentCount_Object = MibTableColumn
jmsRuntimeConnectionsCurrentCount = _JmsRuntimeConnectionsCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 240, 1, 30),
    _JmsRuntimeConnectionsCurrentCount_Type()
)
jmsRuntimeConnectionsCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRuntimeConnectionsCurrentCount.setStatus("current")
_JmsRuntimeConnectionsHighCount_Type = Counter64
_JmsRuntimeConnectionsHighCount_Object = MibTableColumn
jmsRuntimeConnectionsHighCount = _JmsRuntimeConnectionsHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 240, 1, 35),
    _JmsRuntimeConnectionsHighCount_Type()
)
jmsRuntimeConnectionsHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRuntimeConnectionsHighCount.setStatus("current")
_JmsRuntimeConnectionsTotalCount_Type = Counter64
_JmsRuntimeConnectionsTotalCount_Object = MibTableColumn
jmsRuntimeConnectionsTotalCount = _JmsRuntimeConnectionsTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 240, 1, 40),
    _JmsRuntimeConnectionsTotalCount_Type()
)
jmsRuntimeConnectionsTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRuntimeConnectionsTotalCount.setStatus("current")


class _JmsRuntimeJMSServers_Type(DisplayString):
    """Custom type jmsRuntimeJMSServers based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JmsRuntimeJMSServers_Type.__name__ = "DisplayString"
_JmsRuntimeJMSServers_Object = MibTableColumn
jmsRuntimeJMSServers = _JmsRuntimeJMSServers_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 240, 1, 45),
    _JmsRuntimeJMSServers_Type()
)
jmsRuntimeJMSServers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRuntimeJMSServers.setStatus("current")
_JmsRuntimeJMSServersCurrentCount_Type = Counter64
_JmsRuntimeJMSServersCurrentCount_Object = MibTableColumn
jmsRuntimeJMSServersCurrentCount = _JmsRuntimeJMSServersCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 240, 1, 50),
    _JmsRuntimeJMSServersCurrentCount_Type()
)
jmsRuntimeJMSServersCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRuntimeJMSServersCurrentCount.setStatus("current")
_JmsRuntimeJMSServersHighCount_Type = Counter64
_JmsRuntimeJMSServersHighCount_Object = MibTableColumn
jmsRuntimeJMSServersHighCount = _JmsRuntimeJMSServersHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 240, 1, 55),
    _JmsRuntimeJMSServersHighCount_Type()
)
jmsRuntimeJMSServersHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRuntimeJMSServersHighCount.setStatus("current")
_JmsRuntimeJMSServersTotalCount_Type = Counter64
_JmsRuntimeJMSServersTotalCount_Object = MibTableColumn
jmsRuntimeJMSServersTotalCount = _JmsRuntimeJMSServersTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 240, 1, 60),
    _JmsRuntimeJMSServersTotalCount_Type()
)
jmsRuntimeJMSServersTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRuntimeJMSServersTotalCount.setStatus("current")
_JmsServerRuntimeTable_Object = MibTable
jmsServerRuntimeTable = _JmsServerRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250)
)
if mibBuilder.loadTexts:
    jmsServerRuntimeTable.setStatus("current")
_JmsServerRuntimeEntry_Object = MibTableRow
jmsServerRuntimeEntry = _JmsServerRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1)
)
jmsServerRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsServerRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jmsServerRuntimeEntry.setStatus("current")


class _JmsServerRuntimeIndex_Type(DisplayString):
    """Custom type jmsServerRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsServerRuntimeIndex_Type.__name__ = "DisplayString"
_JmsServerRuntimeIndex_Object = MibTableColumn
jmsServerRuntimeIndex = _JmsServerRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 1),
    _JmsServerRuntimeIndex_Type()
)
jmsServerRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeIndex.setStatus("current")


class _JmsServerRuntimeObjectName_Type(DisplayString):
    """Custom type jmsServerRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsServerRuntimeObjectName_Type.__name__ = "DisplayString"
_JmsServerRuntimeObjectName_Object = MibTableColumn
jmsServerRuntimeObjectName = _JmsServerRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 5),
    _JmsServerRuntimeObjectName_Type()
)
jmsServerRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeObjectName.setStatus("current")


class _JmsServerRuntimeType_Type(DisplayString):
    """Custom type jmsServerRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsServerRuntimeType_Type.__name__ = "DisplayString"
_JmsServerRuntimeType_Object = MibTableColumn
jmsServerRuntimeType = _JmsServerRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 10),
    _JmsServerRuntimeType_Type()
)
jmsServerRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeType.setStatus("current")


class _JmsServerRuntimeName_Type(DisplayString):
    """Custom type jmsServerRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsServerRuntimeName_Type.__name__ = "DisplayString"
_JmsServerRuntimeName_Object = MibTableColumn
jmsServerRuntimeName = _JmsServerRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 15),
    _JmsServerRuntimeName_Type()
)
jmsServerRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeName.setStatus("current")


class _JmsServerRuntimeParent_Type(DisplayString):
    """Custom type jmsServerRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsServerRuntimeParent_Type.__name__ = "DisplayString"
_JmsServerRuntimeParent_Object = MibTableColumn
jmsServerRuntimeParent = _JmsServerRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 20),
    _JmsServerRuntimeParent_Type()
)
jmsServerRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeParent.setStatus("current")


class _JmsServerRuntimeSessionPoolRuntimes_Type(DisplayString):
    """Custom type jmsServerRuntimeSessionPoolRuntimes based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JmsServerRuntimeSessionPoolRuntimes_Type.__name__ = "DisplayString"
_JmsServerRuntimeSessionPoolRuntimes_Object = MibTableColumn
jmsServerRuntimeSessionPoolRuntimes = _JmsServerRuntimeSessionPoolRuntimes_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 25),
    _JmsServerRuntimeSessionPoolRuntimes_Type()
)
jmsServerRuntimeSessionPoolRuntimes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeSessionPoolRuntimes.setStatus("current")
_JmsServerRuntimeSessionPoolsCurrentCount_Type = Counter64
_JmsServerRuntimeSessionPoolsCurrentCount_Object = MibTableColumn
jmsServerRuntimeSessionPoolsCurrentCount = _JmsServerRuntimeSessionPoolsCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 30),
    _JmsServerRuntimeSessionPoolsCurrentCount_Type()
)
jmsServerRuntimeSessionPoolsCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeSessionPoolsCurrentCount.setStatus("current")
_JmsServerRuntimeSessionPoolsHighCount_Type = Counter64
_JmsServerRuntimeSessionPoolsHighCount_Object = MibTableColumn
jmsServerRuntimeSessionPoolsHighCount = _JmsServerRuntimeSessionPoolsHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 35),
    _JmsServerRuntimeSessionPoolsHighCount_Type()
)
jmsServerRuntimeSessionPoolsHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeSessionPoolsHighCount.setStatus("current")
_JmsServerRuntimeSessionPoolsTotalCount_Type = Counter64
_JmsServerRuntimeSessionPoolsTotalCount_Object = MibTableColumn
jmsServerRuntimeSessionPoolsTotalCount = _JmsServerRuntimeSessionPoolsTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 40),
    _JmsServerRuntimeSessionPoolsTotalCount_Type()
)
jmsServerRuntimeSessionPoolsTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeSessionPoolsTotalCount.setStatus("current")


class _JmsServerRuntimeDestinations_Type(DisplayString):
    """Custom type jmsServerRuntimeDestinations based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JmsServerRuntimeDestinations_Type.__name__ = "DisplayString"
_JmsServerRuntimeDestinations_Object = MibTableColumn
jmsServerRuntimeDestinations = _JmsServerRuntimeDestinations_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 45),
    _JmsServerRuntimeDestinations_Type()
)
jmsServerRuntimeDestinations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeDestinations.setStatus("current")
_JmsServerRuntimeDestinationsCurrentCount_Type = Counter64
_JmsServerRuntimeDestinationsCurrentCount_Object = MibTableColumn
jmsServerRuntimeDestinationsCurrentCount = _JmsServerRuntimeDestinationsCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 50),
    _JmsServerRuntimeDestinationsCurrentCount_Type()
)
jmsServerRuntimeDestinationsCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeDestinationsCurrentCount.setStatus("current")
_JmsServerRuntimeDestinationsHighCount_Type = Counter64
_JmsServerRuntimeDestinationsHighCount_Object = MibTableColumn
jmsServerRuntimeDestinationsHighCount = _JmsServerRuntimeDestinationsHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 55),
    _JmsServerRuntimeDestinationsHighCount_Type()
)
jmsServerRuntimeDestinationsHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeDestinationsHighCount.setStatus("current")
_JmsServerRuntimeDestinationsTotalCount_Type = Counter64
_JmsServerRuntimeDestinationsTotalCount_Object = MibTableColumn
jmsServerRuntimeDestinationsTotalCount = _JmsServerRuntimeDestinationsTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 60),
    _JmsServerRuntimeDestinationsTotalCount_Type()
)
jmsServerRuntimeDestinationsTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeDestinationsTotalCount.setStatus("current")
_JmsServerRuntimeMessagesCurrentCount_Type = Counter64
_JmsServerRuntimeMessagesCurrentCount_Object = MibTableColumn
jmsServerRuntimeMessagesCurrentCount = _JmsServerRuntimeMessagesCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 65),
    _JmsServerRuntimeMessagesCurrentCount_Type()
)
jmsServerRuntimeMessagesCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeMessagesCurrentCount.setStatus("current")
_JmsServerRuntimeMessagesPendingCount_Type = Counter64
_JmsServerRuntimeMessagesPendingCount_Object = MibTableColumn
jmsServerRuntimeMessagesPendingCount = _JmsServerRuntimeMessagesPendingCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 70),
    _JmsServerRuntimeMessagesPendingCount_Type()
)
jmsServerRuntimeMessagesPendingCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeMessagesPendingCount.setStatus("current")
_JmsServerRuntimeMessagesHighCount_Type = Counter64
_JmsServerRuntimeMessagesHighCount_Object = MibTableColumn
jmsServerRuntimeMessagesHighCount = _JmsServerRuntimeMessagesHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 75),
    _JmsServerRuntimeMessagesHighCount_Type()
)
jmsServerRuntimeMessagesHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeMessagesHighCount.setStatus("current")
_JmsServerRuntimeMessagesReceivedCount_Type = Counter64
_JmsServerRuntimeMessagesReceivedCount_Object = MibTableColumn
jmsServerRuntimeMessagesReceivedCount = _JmsServerRuntimeMessagesReceivedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 80),
    _JmsServerRuntimeMessagesReceivedCount_Type()
)
jmsServerRuntimeMessagesReceivedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeMessagesReceivedCount.setStatus("current")
_JmsServerRuntimeMessagesThresholdTime_Type = Counter64
_JmsServerRuntimeMessagesThresholdTime_Object = MibTableColumn
jmsServerRuntimeMessagesThresholdTime = _JmsServerRuntimeMessagesThresholdTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 85),
    _JmsServerRuntimeMessagesThresholdTime_Type()
)
jmsServerRuntimeMessagesThresholdTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeMessagesThresholdTime.setStatus("current")
_JmsServerRuntimeBytesCurrentCount_Type = Counter64
_JmsServerRuntimeBytesCurrentCount_Object = MibTableColumn
jmsServerRuntimeBytesCurrentCount = _JmsServerRuntimeBytesCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 90),
    _JmsServerRuntimeBytesCurrentCount_Type()
)
jmsServerRuntimeBytesCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeBytesCurrentCount.setStatus("current")
_JmsServerRuntimeBytesPendingCount_Type = Counter64
_JmsServerRuntimeBytesPendingCount_Object = MibTableColumn
jmsServerRuntimeBytesPendingCount = _JmsServerRuntimeBytesPendingCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 95),
    _JmsServerRuntimeBytesPendingCount_Type()
)
jmsServerRuntimeBytesPendingCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeBytesPendingCount.setStatus("current")
_JmsServerRuntimeBytesHighCount_Type = Counter64
_JmsServerRuntimeBytesHighCount_Object = MibTableColumn
jmsServerRuntimeBytesHighCount = _JmsServerRuntimeBytesHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 100),
    _JmsServerRuntimeBytesHighCount_Type()
)
jmsServerRuntimeBytesHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeBytesHighCount.setStatus("current")
_JmsServerRuntimeBytesReceivedCount_Type = Counter64
_JmsServerRuntimeBytesReceivedCount_Object = MibTableColumn
jmsServerRuntimeBytesReceivedCount = _JmsServerRuntimeBytesReceivedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 105),
    _JmsServerRuntimeBytesReceivedCount_Type()
)
jmsServerRuntimeBytesReceivedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeBytesReceivedCount.setStatus("current")
_JmsServerRuntimeBytesThresholdTime_Type = Counter64
_JmsServerRuntimeBytesThresholdTime_Object = MibTableColumn
jmsServerRuntimeBytesThresholdTime = _JmsServerRuntimeBytesThresholdTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 110),
    _JmsServerRuntimeBytesThresholdTime_Type()
)
jmsServerRuntimeBytesThresholdTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeBytesThresholdTime.setStatus("current")
_JmsServerRuntimeMessagesPagedInTotalCount_Type = Integer32
_JmsServerRuntimeMessagesPagedInTotalCount_Object = MibTableColumn
jmsServerRuntimeMessagesPagedInTotalCount = _JmsServerRuntimeMessagesPagedInTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 111),
    _JmsServerRuntimeMessagesPagedInTotalCount_Type()
)
jmsServerRuntimeMessagesPagedInTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeMessagesPagedInTotalCount.setStatus("current")
_JmsServerRuntimeProductionPaused_Type = OctetString
_JmsServerRuntimeProductionPaused_Object = MibTableColumn
jmsServerRuntimeProductionPaused = _JmsServerRuntimeProductionPaused_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 112),
    _JmsServerRuntimeProductionPaused_Type()
)
jmsServerRuntimeProductionPaused.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeProductionPaused.setStatus("current")
_JmsServerRuntimeInsertionPaused_Type = OctetString
_JmsServerRuntimeInsertionPaused_Object = MibTableColumn
jmsServerRuntimeInsertionPaused = _JmsServerRuntimeInsertionPaused_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 113),
    _JmsServerRuntimeInsertionPaused_Type()
)
jmsServerRuntimeInsertionPaused.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeInsertionPaused.setStatus("current")
_JmsServerRuntimeConsumptionPausedState_Type = OctetString
_JmsServerRuntimeConsumptionPausedState_Object = MibTableColumn
jmsServerRuntimeConsumptionPausedState = _JmsServerRuntimeConsumptionPausedState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 114),
    _JmsServerRuntimeConsumptionPausedState_Type()
)
jmsServerRuntimeConsumptionPausedState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeConsumptionPausedState.setStatus("current")
_JmsServerRuntimeConsumptionPaused_Type = OctetString
_JmsServerRuntimeConsumptionPaused_Object = MibTableColumn
jmsServerRuntimeConsumptionPaused = _JmsServerRuntimeConsumptionPaused_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 115),
    _JmsServerRuntimeConsumptionPaused_Type()
)
jmsServerRuntimeConsumptionPaused.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeConsumptionPaused.setStatus("current")
_JmsServerRuntimeBytesPageableCurrentCount_Type = Counter64
_JmsServerRuntimeBytesPageableCurrentCount_Object = MibTableColumn
jmsServerRuntimeBytesPageableCurrentCount = _JmsServerRuntimeBytesPageableCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 116),
    _JmsServerRuntimeBytesPageableCurrentCount_Type()
)
jmsServerRuntimeBytesPageableCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeBytesPageableCurrentCount.setStatus("current")
_JmsServerRuntimeMessagesPagedOutTotalCount_Type = Integer32
_JmsServerRuntimeMessagesPagedOutTotalCount_Object = MibTableColumn
jmsServerRuntimeMessagesPagedOutTotalCount = _JmsServerRuntimeMessagesPagedOutTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 117),
    _JmsServerRuntimeMessagesPagedOutTotalCount_Type()
)
jmsServerRuntimeMessagesPagedOutTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeMessagesPagedOutTotalCount.setStatus("current")
_JmsServerRuntimeInsertionPausedState_Type = OctetString
_JmsServerRuntimeInsertionPausedState_Object = MibTableColumn
jmsServerRuntimeInsertionPausedState = _JmsServerRuntimeInsertionPausedState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 118),
    _JmsServerRuntimeInsertionPausedState_Type()
)
jmsServerRuntimeInsertionPausedState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeInsertionPausedState.setStatus("current")
_JmsServerRuntimeMessagesPageableCurrentCount_Type = Integer32
_JmsServerRuntimeMessagesPageableCurrentCount_Object = MibTableColumn
jmsServerRuntimeMessagesPageableCurrentCount = _JmsServerRuntimeMessagesPageableCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 119),
    _JmsServerRuntimeMessagesPageableCurrentCount_Type()
)
jmsServerRuntimeMessagesPageableCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeMessagesPageableCurrentCount.setStatus("current")
_JmsServerRuntimeProductionPausedState_Type = OctetString
_JmsServerRuntimeProductionPausedState_Object = MibTableColumn
jmsServerRuntimeProductionPausedState = _JmsServerRuntimeProductionPausedState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 120),
    _JmsServerRuntimeProductionPausedState_Type()
)
jmsServerRuntimeProductionPausedState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeProductionPausedState.setStatus("current")
_JmsServerRuntimeBytesPagedOutTotalCount_Type = Counter64
_JmsServerRuntimeBytesPagedOutTotalCount_Object = MibTableColumn
jmsServerRuntimeBytesPagedOutTotalCount = _JmsServerRuntimeBytesPagedOutTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 121),
    _JmsServerRuntimeBytesPagedOutTotalCount_Type()
)
jmsServerRuntimeBytesPagedOutTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeBytesPagedOutTotalCount.setStatus("current")
_JmsServerRuntimeBytesPagedInTotalCount_Type = Counter64
_JmsServerRuntimeBytesPagedInTotalCount_Object = MibTableColumn
jmsServerRuntimeBytesPagedInTotalCount = _JmsServerRuntimeBytesPagedInTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 250, 1, 122),
    _JmsServerRuntimeBytesPagedInTotalCount_Type()
)
jmsServerRuntimeBytesPagedInTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerRuntimeBytesPagedInTotalCount.setStatus("current")
_JmsSessionPoolRuntimeTable_Object = MibTable
jmsSessionPoolRuntimeTable = _JmsSessionPoolRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 260)
)
if mibBuilder.loadTexts:
    jmsSessionPoolRuntimeTable.setStatus("current")
_JmsSessionPoolRuntimeEntry_Object = MibTableRow
jmsSessionPoolRuntimeEntry = _JmsSessionPoolRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 260, 1)
)
jmsSessionPoolRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsSessionPoolRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jmsSessionPoolRuntimeEntry.setStatus("current")


class _JmsSessionPoolRuntimeIndex_Type(DisplayString):
    """Custom type jmsSessionPoolRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsSessionPoolRuntimeIndex_Type.__name__ = "DisplayString"
_JmsSessionPoolRuntimeIndex_Object = MibTableColumn
jmsSessionPoolRuntimeIndex = _JmsSessionPoolRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 260, 1, 1),
    _JmsSessionPoolRuntimeIndex_Type()
)
jmsSessionPoolRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionPoolRuntimeIndex.setStatus("current")


class _JmsSessionPoolRuntimeObjectName_Type(DisplayString):
    """Custom type jmsSessionPoolRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsSessionPoolRuntimeObjectName_Type.__name__ = "DisplayString"
_JmsSessionPoolRuntimeObjectName_Object = MibTableColumn
jmsSessionPoolRuntimeObjectName = _JmsSessionPoolRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 260, 1, 5),
    _JmsSessionPoolRuntimeObjectName_Type()
)
jmsSessionPoolRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionPoolRuntimeObjectName.setStatus("current")


class _JmsSessionPoolRuntimeType_Type(DisplayString):
    """Custom type jmsSessionPoolRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsSessionPoolRuntimeType_Type.__name__ = "DisplayString"
_JmsSessionPoolRuntimeType_Object = MibTableColumn
jmsSessionPoolRuntimeType = _JmsSessionPoolRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 260, 1, 10),
    _JmsSessionPoolRuntimeType_Type()
)
jmsSessionPoolRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionPoolRuntimeType.setStatus("current")


class _JmsSessionPoolRuntimeName_Type(DisplayString):
    """Custom type jmsSessionPoolRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsSessionPoolRuntimeName_Type.__name__ = "DisplayString"
_JmsSessionPoolRuntimeName_Object = MibTableColumn
jmsSessionPoolRuntimeName = _JmsSessionPoolRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 260, 1, 15),
    _JmsSessionPoolRuntimeName_Type()
)
jmsSessionPoolRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionPoolRuntimeName.setStatus("current")


class _JmsSessionPoolRuntimeParent_Type(DisplayString):
    """Custom type jmsSessionPoolRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsSessionPoolRuntimeParent_Type.__name__ = "DisplayString"
_JmsSessionPoolRuntimeParent_Object = MibTableColumn
jmsSessionPoolRuntimeParent = _JmsSessionPoolRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 260, 1, 20),
    _JmsSessionPoolRuntimeParent_Type()
)
jmsSessionPoolRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionPoolRuntimeParent.setStatus("current")


class _JmsSessionPoolRuntimeJMSServer_Type(DisplayString):
    """Custom type jmsSessionPoolRuntimeJMSServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsSessionPoolRuntimeJMSServer_Type.__name__ = "DisplayString"
_JmsSessionPoolRuntimeJMSServer_Object = MibTableColumn
jmsSessionPoolRuntimeJMSServer = _JmsSessionPoolRuntimeJMSServer_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 260, 1, 25),
    _JmsSessionPoolRuntimeJMSServer_Type()
)
jmsSessionPoolRuntimeJMSServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionPoolRuntimeJMSServer.setStatus("current")


class _JmsSessionPoolRuntimeConnectionConsumers_Type(DisplayString):
    """Custom type jmsSessionPoolRuntimeConnectionConsumers based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JmsSessionPoolRuntimeConnectionConsumers_Type.__name__ = "DisplayString"
_JmsSessionPoolRuntimeConnectionConsumers_Object = MibTableColumn
jmsSessionPoolRuntimeConnectionConsumers = _JmsSessionPoolRuntimeConnectionConsumers_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 260, 1, 30),
    _JmsSessionPoolRuntimeConnectionConsumers_Type()
)
jmsSessionPoolRuntimeConnectionConsumers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionPoolRuntimeConnectionConsumers.setStatus("current")
_JmsSessionPoolRuntimeConnectionConsumersCurrentCount_Type = Counter64
_JmsSessionPoolRuntimeConnectionConsumersCurrentCount_Object = MibTableColumn
jmsSessionPoolRuntimeConnectionConsumersCurrentCount = _JmsSessionPoolRuntimeConnectionConsumersCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 260, 1, 35),
    _JmsSessionPoolRuntimeConnectionConsumersCurrentCount_Type()
)
jmsSessionPoolRuntimeConnectionConsumersCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionPoolRuntimeConnectionConsumersCurrentCount.setStatus("current")
_JmsSessionPoolRuntimeConnectionConsumersHighCount_Type = Counter64
_JmsSessionPoolRuntimeConnectionConsumersHighCount_Object = MibTableColumn
jmsSessionPoolRuntimeConnectionConsumersHighCount = _JmsSessionPoolRuntimeConnectionConsumersHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 260, 1, 40),
    _JmsSessionPoolRuntimeConnectionConsumersHighCount_Type()
)
jmsSessionPoolRuntimeConnectionConsumersHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionPoolRuntimeConnectionConsumersHighCount.setStatus("current")
_JmsSessionPoolRuntimeConnectionConsumersTotalCount_Type = Counter64
_JmsSessionPoolRuntimeConnectionConsumersTotalCount_Object = MibTableColumn
jmsSessionPoolRuntimeConnectionConsumersTotalCount = _JmsSessionPoolRuntimeConnectionConsumersTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 260, 1, 45),
    _JmsSessionPoolRuntimeConnectionConsumersTotalCount_Type()
)
jmsSessionPoolRuntimeConnectionConsumersTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionPoolRuntimeConnectionConsumersTotalCount.setStatus("current")
_JmsSessionRuntimeTable_Object = MibTable
jmsSessionRuntimeTable = _JmsSessionRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270)
)
if mibBuilder.loadTexts:
    jmsSessionRuntimeTable.setStatus("current")
_JmsSessionRuntimeEntry_Object = MibTableRow
jmsSessionRuntimeEntry = _JmsSessionRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1)
)
jmsSessionRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsSessionRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jmsSessionRuntimeEntry.setStatus("current")


class _JmsSessionRuntimeIndex_Type(DisplayString):
    """Custom type jmsSessionRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsSessionRuntimeIndex_Type.__name__ = "DisplayString"
_JmsSessionRuntimeIndex_Object = MibTableColumn
jmsSessionRuntimeIndex = _JmsSessionRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1, 1),
    _JmsSessionRuntimeIndex_Type()
)
jmsSessionRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionRuntimeIndex.setStatus("current")


class _JmsSessionRuntimeObjectName_Type(DisplayString):
    """Custom type jmsSessionRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsSessionRuntimeObjectName_Type.__name__ = "DisplayString"
_JmsSessionRuntimeObjectName_Object = MibTableColumn
jmsSessionRuntimeObjectName = _JmsSessionRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1, 5),
    _JmsSessionRuntimeObjectName_Type()
)
jmsSessionRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionRuntimeObjectName.setStatus("current")


class _JmsSessionRuntimeType_Type(DisplayString):
    """Custom type jmsSessionRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsSessionRuntimeType_Type.__name__ = "DisplayString"
_JmsSessionRuntimeType_Object = MibTableColumn
jmsSessionRuntimeType = _JmsSessionRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1, 10),
    _JmsSessionRuntimeType_Type()
)
jmsSessionRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionRuntimeType.setStatus("current")


class _JmsSessionRuntimeName_Type(DisplayString):
    """Custom type jmsSessionRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsSessionRuntimeName_Type.__name__ = "DisplayString"
_JmsSessionRuntimeName_Object = MibTableColumn
jmsSessionRuntimeName = _JmsSessionRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1, 15),
    _JmsSessionRuntimeName_Type()
)
jmsSessionRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionRuntimeName.setStatus("current")


class _JmsSessionRuntimeParent_Type(DisplayString):
    """Custom type jmsSessionRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsSessionRuntimeParent_Type.__name__ = "DisplayString"
_JmsSessionRuntimeParent_Object = MibTableColumn
jmsSessionRuntimeParent = _JmsSessionRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1, 20),
    _JmsSessionRuntimeParent_Type()
)
jmsSessionRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionRuntimeParent.setStatus("current")


class _JmsSessionRuntimeConsumers_Type(DisplayString):
    """Custom type jmsSessionRuntimeConsumers based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JmsSessionRuntimeConsumers_Type.__name__ = "DisplayString"
_JmsSessionRuntimeConsumers_Object = MibTableColumn
jmsSessionRuntimeConsumers = _JmsSessionRuntimeConsumers_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1, 25),
    _JmsSessionRuntimeConsumers_Type()
)
jmsSessionRuntimeConsumers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionRuntimeConsumers.setStatus("current")
_JmsSessionRuntimeConsumersCurrentCount_Type = Counter64
_JmsSessionRuntimeConsumersCurrentCount_Object = MibTableColumn
jmsSessionRuntimeConsumersCurrentCount = _JmsSessionRuntimeConsumersCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1, 30),
    _JmsSessionRuntimeConsumersCurrentCount_Type()
)
jmsSessionRuntimeConsumersCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionRuntimeConsumersCurrentCount.setStatus("current")
_JmsSessionRuntimeConsumersHighCount_Type = Counter64
_JmsSessionRuntimeConsumersHighCount_Object = MibTableColumn
jmsSessionRuntimeConsumersHighCount = _JmsSessionRuntimeConsumersHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1, 35),
    _JmsSessionRuntimeConsumersHighCount_Type()
)
jmsSessionRuntimeConsumersHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionRuntimeConsumersHighCount.setStatus("current")
_JmsSessionRuntimeConsumersTotalCount_Type = Counter64
_JmsSessionRuntimeConsumersTotalCount_Object = MibTableColumn
jmsSessionRuntimeConsumersTotalCount = _JmsSessionRuntimeConsumersTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1, 40),
    _JmsSessionRuntimeConsumersTotalCount_Type()
)
jmsSessionRuntimeConsumersTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionRuntimeConsumersTotalCount.setStatus("current")


class _JmsSessionRuntimeProducers_Type(DisplayString):
    """Custom type jmsSessionRuntimeProducers based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JmsSessionRuntimeProducers_Type.__name__ = "DisplayString"
_JmsSessionRuntimeProducers_Object = MibTableColumn
jmsSessionRuntimeProducers = _JmsSessionRuntimeProducers_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1, 45),
    _JmsSessionRuntimeProducers_Type()
)
jmsSessionRuntimeProducers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionRuntimeProducers.setStatus("current")
_JmsSessionRuntimeProducersCurrentCount_Type = Counter64
_JmsSessionRuntimeProducersCurrentCount_Object = MibTableColumn
jmsSessionRuntimeProducersCurrentCount = _JmsSessionRuntimeProducersCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1, 50),
    _JmsSessionRuntimeProducersCurrentCount_Type()
)
jmsSessionRuntimeProducersCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionRuntimeProducersCurrentCount.setStatus("current")
_JmsSessionRuntimeProducersHighCount_Type = Counter64
_JmsSessionRuntimeProducersHighCount_Object = MibTableColumn
jmsSessionRuntimeProducersHighCount = _JmsSessionRuntimeProducersHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1, 55),
    _JmsSessionRuntimeProducersHighCount_Type()
)
jmsSessionRuntimeProducersHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionRuntimeProducersHighCount.setStatus("current")
_JmsSessionRuntimeProducersTotalCount_Type = Counter64
_JmsSessionRuntimeProducersTotalCount_Object = MibTableColumn
jmsSessionRuntimeProducersTotalCount = _JmsSessionRuntimeProducersTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1, 60),
    _JmsSessionRuntimeProducersTotalCount_Type()
)
jmsSessionRuntimeProducersTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionRuntimeProducersTotalCount.setStatus("current")


class _JmsSessionRuntimeTransacted_Type(Integer32):
    """Custom type jmsSessionRuntimeTransacted based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_JmsSessionRuntimeTransacted_Type.__name__ = "Integer32"
_JmsSessionRuntimeTransacted_Object = MibTableColumn
jmsSessionRuntimeTransacted = _JmsSessionRuntimeTransacted_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1, 65),
    _JmsSessionRuntimeTransacted_Type()
)
jmsSessionRuntimeTransacted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionRuntimeTransacted.setStatus("current")


class _JmsSessionRuntimeAcknowledgeMode_Type(DisplayString):
    """Custom type jmsSessionRuntimeAcknowledgeMode based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_JmsSessionRuntimeAcknowledgeMode_Type.__name__ = "DisplayString"
_JmsSessionRuntimeAcknowledgeMode_Object = MibTableColumn
jmsSessionRuntimeAcknowledgeMode = _JmsSessionRuntimeAcknowledgeMode_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1, 70),
    _JmsSessionRuntimeAcknowledgeMode_Type()
)
jmsSessionRuntimeAcknowledgeMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionRuntimeAcknowledgeMode.setStatus("current")
_JmsSessionRuntimeMessagesPendingCount_Type = Counter64
_JmsSessionRuntimeMessagesPendingCount_Object = MibTableColumn
jmsSessionRuntimeMessagesPendingCount = _JmsSessionRuntimeMessagesPendingCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1, 75),
    _JmsSessionRuntimeMessagesPendingCount_Type()
)
jmsSessionRuntimeMessagesPendingCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionRuntimeMessagesPendingCount.setStatus("current")
_JmsSessionRuntimeMessagesSentCount_Type = Counter64
_JmsSessionRuntimeMessagesSentCount_Object = MibTableColumn
jmsSessionRuntimeMessagesSentCount = _JmsSessionRuntimeMessagesSentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1, 80),
    _JmsSessionRuntimeMessagesSentCount_Type()
)
jmsSessionRuntimeMessagesSentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionRuntimeMessagesSentCount.setStatus("current")
_JmsSessionRuntimeMessagesReceivedCount_Type = Counter64
_JmsSessionRuntimeMessagesReceivedCount_Object = MibTableColumn
jmsSessionRuntimeMessagesReceivedCount = _JmsSessionRuntimeMessagesReceivedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1, 85),
    _JmsSessionRuntimeMessagesReceivedCount_Type()
)
jmsSessionRuntimeMessagesReceivedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionRuntimeMessagesReceivedCount.setStatus("current")
_JmsSessionRuntimeBytesPendingCount_Type = Counter64
_JmsSessionRuntimeBytesPendingCount_Object = MibTableColumn
jmsSessionRuntimeBytesPendingCount = _JmsSessionRuntimeBytesPendingCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1, 90),
    _JmsSessionRuntimeBytesPendingCount_Type()
)
jmsSessionRuntimeBytesPendingCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionRuntimeBytesPendingCount.setStatus("current")
_JmsSessionRuntimeBytesSentCount_Type = Counter64
_JmsSessionRuntimeBytesSentCount_Object = MibTableColumn
jmsSessionRuntimeBytesSentCount = _JmsSessionRuntimeBytesSentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1, 95),
    _JmsSessionRuntimeBytesSentCount_Type()
)
jmsSessionRuntimeBytesSentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionRuntimeBytesSentCount.setStatus("current")
_JmsSessionRuntimeBytesReceivedCount_Type = Counter64
_JmsSessionRuntimeBytesReceivedCount_Object = MibTableColumn
jmsSessionRuntimeBytesReceivedCount = _JmsSessionRuntimeBytesReceivedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 270, 1, 100),
    _JmsSessionRuntimeBytesReceivedCount_Type()
)
jmsSessionRuntimeBytesReceivedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionRuntimeBytesReceivedCount.setStatus("current")
_JmsComponentRuntimeTable_Object = MibTable
jmsComponentRuntimeTable = _JmsComponentRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 271)
)
if mibBuilder.loadTexts:
    jmsComponentRuntimeTable.setStatus("current")
_JmsComponentRuntimeEntry_Object = MibTableRow
jmsComponentRuntimeEntry = _JmsComponentRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 271, 1)
)
jmsComponentRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsComponentRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jmsComponentRuntimeEntry.setStatus("current")


class _JmsComponentRuntimeIndex_Type(DisplayString):
    """Custom type jmsComponentRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsComponentRuntimeIndex_Type.__name__ = "DisplayString"
_JmsComponentRuntimeIndex_Object = MibTableColumn
jmsComponentRuntimeIndex = _JmsComponentRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 271, 1, 1),
    _JmsComponentRuntimeIndex_Type()
)
jmsComponentRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsComponentRuntimeIndex.setStatus("current")


class _JmsComponentRuntimeObjectName_Type(DisplayString):
    """Custom type jmsComponentRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsComponentRuntimeObjectName_Type.__name__ = "DisplayString"
_JmsComponentRuntimeObjectName_Object = MibTableColumn
jmsComponentRuntimeObjectName = _JmsComponentRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 271, 1, 5),
    _JmsComponentRuntimeObjectName_Type()
)
jmsComponentRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsComponentRuntimeObjectName.setStatus("current")


class _JmsComponentRuntimeType_Type(DisplayString):
    """Custom type jmsComponentRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsComponentRuntimeType_Type.__name__ = "DisplayString"
_JmsComponentRuntimeType_Object = MibTableColumn
jmsComponentRuntimeType = _JmsComponentRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 271, 1, 10),
    _JmsComponentRuntimeType_Type()
)
jmsComponentRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsComponentRuntimeType.setStatus("current")


class _JmsComponentRuntimeName_Type(DisplayString):
    """Custom type jmsComponentRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsComponentRuntimeName_Type.__name__ = "DisplayString"
_JmsComponentRuntimeName_Object = MibTableColumn
jmsComponentRuntimeName = _JmsComponentRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 271, 1, 15),
    _JmsComponentRuntimeName_Type()
)
jmsComponentRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsComponentRuntimeName.setStatus("current")


class _JmsComponentRuntimeParent_Type(DisplayString):
    """Custom type jmsComponentRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsComponentRuntimeParent_Type.__name__ = "DisplayString"
_JmsComponentRuntimeParent_Object = MibTableColumn
jmsComponentRuntimeParent = _JmsComponentRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 271, 1, 20),
    _JmsComponentRuntimeParent_Type()
)
jmsComponentRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsComponentRuntimeParent.setStatus("current")


class _JmsComponentRuntimeModuleId_Type(DisplayString):
    """Custom type jmsComponentRuntimeModuleId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsComponentRuntimeModuleId_Type.__name__ = "DisplayString"
_JmsComponentRuntimeModuleId_Object = MibTableColumn
jmsComponentRuntimeModuleId = _JmsComponentRuntimeModuleId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 271, 1, 25),
    _JmsComponentRuntimeModuleId_Type()
)
jmsComponentRuntimeModuleId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsComponentRuntimeModuleId.setStatus("current")
_JmsComponentRuntimeDeploymentState_Type = Integer32
_JmsComponentRuntimeDeploymentState_Object = MibTableColumn
jmsComponentRuntimeDeploymentState = _JmsComponentRuntimeDeploymentState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 271, 1, 30),
    _JmsComponentRuntimeDeploymentState_Type()
)
jmsComponentRuntimeDeploymentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsComponentRuntimeDeploymentState.setStatus("current")
_JoltConnectionPoolRuntimeTable_Object = MibTable
joltConnectionPoolRuntimeTable = _JoltConnectionPoolRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 280)
)
if mibBuilder.loadTexts:
    joltConnectionPoolRuntimeTable.setStatus("current")
_JoltConnectionPoolRuntimeEntry_Object = MibTableRow
joltConnectionPoolRuntimeEntry = _JoltConnectionPoolRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 280, 1)
)
joltConnectionPoolRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "joltConnectionPoolRuntimeIndex"),
)
if mibBuilder.loadTexts:
    joltConnectionPoolRuntimeEntry.setStatus("current")


class _JoltConnectionPoolRuntimeIndex_Type(DisplayString):
    """Custom type joltConnectionPoolRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JoltConnectionPoolRuntimeIndex_Type.__name__ = "DisplayString"
_JoltConnectionPoolRuntimeIndex_Object = MibTableColumn
joltConnectionPoolRuntimeIndex = _JoltConnectionPoolRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 280, 1, 1),
    _JoltConnectionPoolRuntimeIndex_Type()
)
joltConnectionPoolRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolRuntimeIndex.setStatus("current")


class _JoltConnectionPoolRuntimeObjectName_Type(DisplayString):
    """Custom type joltConnectionPoolRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JoltConnectionPoolRuntimeObjectName_Type.__name__ = "DisplayString"
_JoltConnectionPoolRuntimeObjectName_Object = MibTableColumn
joltConnectionPoolRuntimeObjectName = _JoltConnectionPoolRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 280, 1, 5),
    _JoltConnectionPoolRuntimeObjectName_Type()
)
joltConnectionPoolRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolRuntimeObjectName.setStatus("current")


class _JoltConnectionPoolRuntimeType_Type(DisplayString):
    """Custom type joltConnectionPoolRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JoltConnectionPoolRuntimeType_Type.__name__ = "DisplayString"
_JoltConnectionPoolRuntimeType_Object = MibTableColumn
joltConnectionPoolRuntimeType = _JoltConnectionPoolRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 280, 1, 10),
    _JoltConnectionPoolRuntimeType_Type()
)
joltConnectionPoolRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolRuntimeType.setStatus("current")


class _JoltConnectionPoolRuntimeName_Type(DisplayString):
    """Custom type joltConnectionPoolRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JoltConnectionPoolRuntimeName_Type.__name__ = "DisplayString"
_JoltConnectionPoolRuntimeName_Object = MibTableColumn
joltConnectionPoolRuntimeName = _JoltConnectionPoolRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 280, 1, 15),
    _JoltConnectionPoolRuntimeName_Type()
)
joltConnectionPoolRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolRuntimeName.setStatus("current")


class _JoltConnectionPoolRuntimeParent_Type(DisplayString):
    """Custom type joltConnectionPoolRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JoltConnectionPoolRuntimeParent_Type.__name__ = "DisplayString"
_JoltConnectionPoolRuntimeParent_Object = MibTableColumn
joltConnectionPoolRuntimeParent = _JoltConnectionPoolRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 280, 1, 20),
    _JoltConnectionPoolRuntimeParent_Type()
)
joltConnectionPoolRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolRuntimeParent.setStatus("current")


class _JoltConnectionPoolRuntimePoolName_Type(DisplayString):
    """Custom type joltConnectionPoolRuntimePoolName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JoltConnectionPoolRuntimePoolName_Type.__name__ = "DisplayString"
_JoltConnectionPoolRuntimePoolName_Object = MibTableColumn
joltConnectionPoolRuntimePoolName = _JoltConnectionPoolRuntimePoolName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 280, 1, 25),
    _JoltConnectionPoolRuntimePoolName_Type()
)
joltConnectionPoolRuntimePoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolRuntimePoolName.setStatus("current")
_JoltConnectionPoolRuntimeMaxCapacity_Type = Integer32
_JoltConnectionPoolRuntimeMaxCapacity_Object = MibTableColumn
joltConnectionPoolRuntimeMaxCapacity = _JoltConnectionPoolRuntimeMaxCapacity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 280, 1, 30),
    _JoltConnectionPoolRuntimeMaxCapacity_Type()
)
joltConnectionPoolRuntimeMaxCapacity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolRuntimeMaxCapacity.setStatus("current")


class _JoltConnectionPoolRuntimePoolState_Type(DisplayString):
    """Custom type joltConnectionPoolRuntimePoolState based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JoltConnectionPoolRuntimePoolState_Type.__name__ = "DisplayString"
_JoltConnectionPoolRuntimePoolState_Object = MibTableColumn
joltConnectionPoolRuntimePoolState = _JoltConnectionPoolRuntimePoolState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 280, 1, 35),
    _JoltConnectionPoolRuntimePoolState_Type()
)
joltConnectionPoolRuntimePoolState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolRuntimePoolState.setStatus("current")


class _JoltConnectionPoolRuntimeSecurityContextPropagation_Type(Integer32):
    """Custom type joltConnectionPoolRuntimeSecurityContextPropagation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_JoltConnectionPoolRuntimeSecurityContextPropagation_Type.__name__ = "Integer32"
_JoltConnectionPoolRuntimeSecurityContextPropagation_Object = MibTableColumn
joltConnectionPoolRuntimeSecurityContextPropagation = _JoltConnectionPoolRuntimeSecurityContextPropagation_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 280, 1, 40),
    _JoltConnectionPoolRuntimeSecurityContextPropagation_Type()
)
joltConnectionPoolRuntimeSecurityContextPropagation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolRuntimeSecurityContextPropagation.setStatus("current")


class _JoltConnectionPoolRuntimeConnections_Type(DisplayString):
    """Custom type joltConnectionPoolRuntimeConnections based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JoltConnectionPoolRuntimeConnections_Type.__name__ = "DisplayString"
_JoltConnectionPoolRuntimeConnections_Object = MibTableColumn
joltConnectionPoolRuntimeConnections = _JoltConnectionPoolRuntimeConnections_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 280, 1, 45),
    _JoltConnectionPoolRuntimeConnections_Type()
)
joltConnectionPoolRuntimeConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolRuntimeConnections.setStatus("current")
_JoltConnectionRuntimeTable_Object = MibTable
joltConnectionRuntimeTable = _JoltConnectionRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 290)
)
if mibBuilder.loadTexts:
    joltConnectionRuntimeTable.setStatus("current")
_JoltConnectionRuntimeEntry_Object = MibTableRow
joltConnectionRuntimeEntry = _JoltConnectionRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 290, 1)
)
joltConnectionRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "joltConnectionRuntimeIndex"),
)
if mibBuilder.loadTexts:
    joltConnectionRuntimeEntry.setStatus("current")


class _JoltConnectionRuntimeIndex_Type(DisplayString):
    """Custom type joltConnectionRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JoltConnectionRuntimeIndex_Type.__name__ = "DisplayString"
_JoltConnectionRuntimeIndex_Object = MibTableColumn
joltConnectionRuntimeIndex = _JoltConnectionRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 290, 1, 1),
    _JoltConnectionRuntimeIndex_Type()
)
joltConnectionRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionRuntimeIndex.setStatus("current")


class _JoltConnectionRuntimeObjectName_Type(DisplayString):
    """Custom type joltConnectionRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JoltConnectionRuntimeObjectName_Type.__name__ = "DisplayString"
_JoltConnectionRuntimeObjectName_Object = MibTableColumn
joltConnectionRuntimeObjectName = _JoltConnectionRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 290, 1, 5),
    _JoltConnectionRuntimeObjectName_Type()
)
joltConnectionRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionRuntimeObjectName.setStatus("current")


class _JoltConnectionRuntimeType_Type(DisplayString):
    """Custom type joltConnectionRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JoltConnectionRuntimeType_Type.__name__ = "DisplayString"
_JoltConnectionRuntimeType_Object = MibTableColumn
joltConnectionRuntimeType = _JoltConnectionRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 290, 1, 10),
    _JoltConnectionRuntimeType_Type()
)
joltConnectionRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionRuntimeType.setStatus("current")


class _JoltConnectionRuntimeName_Type(DisplayString):
    """Custom type joltConnectionRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JoltConnectionRuntimeName_Type.__name__ = "DisplayString"
_JoltConnectionRuntimeName_Object = MibTableColumn
joltConnectionRuntimeName = _JoltConnectionRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 290, 1, 15),
    _JoltConnectionRuntimeName_Type()
)
joltConnectionRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionRuntimeName.setStatus("current")


class _JoltConnectionRuntimeParent_Type(DisplayString):
    """Custom type joltConnectionRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JoltConnectionRuntimeParent_Type.__name__ = "DisplayString"
_JoltConnectionRuntimeParent_Object = MibTableColumn
joltConnectionRuntimeParent = _JoltConnectionRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 290, 1, 20),
    _JoltConnectionRuntimeParent_Type()
)
joltConnectionRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionRuntimeParent.setStatus("current")


class _JoltConnectionRuntimeAddress_Type(DisplayString):
    """Custom type joltConnectionRuntimeAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JoltConnectionRuntimeAddress_Type.__name__ = "DisplayString"
_JoltConnectionRuntimeAddress_Object = MibTableColumn
joltConnectionRuntimeAddress = _JoltConnectionRuntimeAddress_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 290, 1, 25),
    _JoltConnectionRuntimeAddress_Type()
)
joltConnectionRuntimeAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionRuntimeAddress.setStatus("current")


class _JoltConnectionRuntimeLastAccessTime_Type(DisplayString):
    """Custom type joltConnectionRuntimeLastAccessTime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_JoltConnectionRuntimeLastAccessTime_Type.__name__ = "DisplayString"
_JoltConnectionRuntimeLastAccessTime_Object = MibTableColumn
joltConnectionRuntimeLastAccessTime = _JoltConnectionRuntimeLastAccessTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 290, 1, 30),
    _JoltConnectionRuntimeLastAccessTime_Type()
)
joltConnectionRuntimeLastAccessTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionRuntimeLastAccessTime.setStatus("current")


class _JoltConnectionRuntimeAlive_Type(Integer32):
    """Custom type joltConnectionRuntimeAlive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_JoltConnectionRuntimeAlive_Type.__name__ = "Integer32"
_JoltConnectionRuntimeAlive_Object = MibTableColumn
joltConnectionRuntimeAlive = _JoltConnectionRuntimeAlive_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 290, 1, 35),
    _JoltConnectionRuntimeAlive_Type()
)
joltConnectionRuntimeAlive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionRuntimeAlive.setStatus("current")
_JoltConnectionRuntimeRequestCount_Type = Integer32
_JoltConnectionRuntimeRequestCount_Object = MibTableColumn
joltConnectionRuntimeRequestCount = _JoltConnectionRuntimeRequestCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 290, 1, 40),
    _JoltConnectionRuntimeRequestCount_Type()
)
joltConnectionRuntimeRequestCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionRuntimeRequestCount.setStatus("current")
_JoltConnectionRuntimePendingRequestCount_Type = Integer32
_JoltConnectionRuntimePendingRequestCount_Object = MibTableColumn
joltConnectionRuntimePendingRequestCount = _JoltConnectionRuntimePendingRequestCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 290, 1, 45),
    _JoltConnectionRuntimePendingRequestCount_Type()
)
joltConnectionRuntimePendingRequestCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionRuntimePendingRequestCount.setStatus("current")
_JoltConnectionRuntimeErrorCount_Type = Integer32
_JoltConnectionRuntimeErrorCount_Object = MibTableColumn
joltConnectionRuntimeErrorCount = _JoltConnectionRuntimeErrorCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 290, 1, 50),
    _JoltConnectionRuntimeErrorCount_Type()
)
joltConnectionRuntimeErrorCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionRuntimeErrorCount.setStatus("current")


class _JoltConnectionRuntimeInTransaction_Type(Integer32):
    """Custom type joltConnectionRuntimeInTransaction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_JoltConnectionRuntimeInTransaction_Type.__name__ = "Integer32"
_JoltConnectionRuntimeInTransaction_Object = MibTableColumn
joltConnectionRuntimeInTransaction = _JoltConnectionRuntimeInTransaction_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 290, 1, 55),
    _JoltConnectionRuntimeInTransaction_Type()
)
joltConnectionRuntimeInTransaction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionRuntimeInTransaction.setStatus("current")
_JoltConnectionServiceRuntimeTable_Object = MibTable
joltConnectionServiceRuntimeTable = _JoltConnectionServiceRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 300)
)
if mibBuilder.loadTexts:
    joltConnectionServiceRuntimeTable.setStatus("current")
_JoltConnectionServiceRuntimeEntry_Object = MibTableRow
joltConnectionServiceRuntimeEntry = _JoltConnectionServiceRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 300, 1)
)
joltConnectionServiceRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "joltConnectionServiceRuntimeIndex"),
)
if mibBuilder.loadTexts:
    joltConnectionServiceRuntimeEntry.setStatus("current")


class _JoltConnectionServiceRuntimeIndex_Type(DisplayString):
    """Custom type joltConnectionServiceRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JoltConnectionServiceRuntimeIndex_Type.__name__ = "DisplayString"
_JoltConnectionServiceRuntimeIndex_Object = MibTableColumn
joltConnectionServiceRuntimeIndex = _JoltConnectionServiceRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 300, 1, 1),
    _JoltConnectionServiceRuntimeIndex_Type()
)
joltConnectionServiceRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionServiceRuntimeIndex.setStatus("current")


class _JoltConnectionServiceRuntimeObjectName_Type(DisplayString):
    """Custom type joltConnectionServiceRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JoltConnectionServiceRuntimeObjectName_Type.__name__ = "DisplayString"
_JoltConnectionServiceRuntimeObjectName_Object = MibTableColumn
joltConnectionServiceRuntimeObjectName = _JoltConnectionServiceRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 300, 1, 5),
    _JoltConnectionServiceRuntimeObjectName_Type()
)
joltConnectionServiceRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionServiceRuntimeObjectName.setStatus("current")


class _JoltConnectionServiceRuntimeType_Type(DisplayString):
    """Custom type joltConnectionServiceRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JoltConnectionServiceRuntimeType_Type.__name__ = "DisplayString"
_JoltConnectionServiceRuntimeType_Object = MibTableColumn
joltConnectionServiceRuntimeType = _JoltConnectionServiceRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 300, 1, 10),
    _JoltConnectionServiceRuntimeType_Type()
)
joltConnectionServiceRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionServiceRuntimeType.setStatus("current")


class _JoltConnectionServiceRuntimeName_Type(DisplayString):
    """Custom type joltConnectionServiceRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JoltConnectionServiceRuntimeName_Type.__name__ = "DisplayString"
_JoltConnectionServiceRuntimeName_Object = MibTableColumn
joltConnectionServiceRuntimeName = _JoltConnectionServiceRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 300, 1, 15),
    _JoltConnectionServiceRuntimeName_Type()
)
joltConnectionServiceRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionServiceRuntimeName.setStatus("current")


class _JoltConnectionServiceRuntimeParent_Type(DisplayString):
    """Custom type joltConnectionServiceRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JoltConnectionServiceRuntimeParent_Type.__name__ = "DisplayString"
_JoltConnectionServiceRuntimeParent_Object = MibTableColumn
joltConnectionServiceRuntimeParent = _JoltConnectionServiceRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 300, 1, 20),
    _JoltConnectionServiceRuntimeParent_Type()
)
joltConnectionServiceRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionServiceRuntimeParent.setStatus("current")
_JoltConnectionServiceRuntimeConnectionPoolCount_Type = Integer32
_JoltConnectionServiceRuntimeConnectionPoolCount_Object = MibTableColumn
joltConnectionServiceRuntimeConnectionPoolCount = _JoltConnectionServiceRuntimeConnectionPoolCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 300, 1, 25),
    _JoltConnectionServiceRuntimeConnectionPoolCount_Type()
)
joltConnectionServiceRuntimeConnectionPoolCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionServiceRuntimeConnectionPoolCount.setStatus("current")


class _JoltConnectionServiceRuntimeConnectionPools_Type(DisplayString):
    """Custom type joltConnectionServiceRuntimeConnectionPools based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JoltConnectionServiceRuntimeConnectionPools_Type.__name__ = "DisplayString"
_JoltConnectionServiceRuntimeConnectionPools_Object = MibTableColumn
joltConnectionServiceRuntimeConnectionPools = _JoltConnectionServiceRuntimeConnectionPools_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 300, 1, 30),
    _JoltConnectionServiceRuntimeConnectionPools_Type()
)
joltConnectionServiceRuntimeConnectionPools.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionServiceRuntimeConnectionPools.setStatus("current")
_JrockitRuntimeTable_Object = MibTable
jrockitRuntimeTable = _JrockitRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302)
)
if mibBuilder.loadTexts:
    jrockitRuntimeTable.setStatus("current")
_JrockitRuntimeEntry_Object = MibTableRow
jrockitRuntimeEntry = _JrockitRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1)
)
jrockitRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jrockitRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jrockitRuntimeEntry.setStatus("current")


class _JrockitRuntimeIndex_Type(DisplayString):
    """Custom type jrockitRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JrockitRuntimeIndex_Type.__name__ = "DisplayString"
_JrockitRuntimeIndex_Object = MibTableColumn
jrockitRuntimeIndex = _JrockitRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 1),
    _JrockitRuntimeIndex_Type()
)
jrockitRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeIndex.setStatus("current")


class _JrockitRuntimeObjectName_Type(DisplayString):
    """Custom type jrockitRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JrockitRuntimeObjectName_Type.__name__ = "DisplayString"
_JrockitRuntimeObjectName_Object = MibTableColumn
jrockitRuntimeObjectName = _JrockitRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 5),
    _JrockitRuntimeObjectName_Type()
)
jrockitRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeObjectName.setStatus("current")


class _JrockitRuntimeType_Type(DisplayString):
    """Custom type jrockitRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JrockitRuntimeType_Type.__name__ = "DisplayString"
_JrockitRuntimeType_Object = MibTableColumn
jrockitRuntimeType = _JrockitRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 10),
    _JrockitRuntimeType_Type()
)
jrockitRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeType.setStatus("current")


class _JrockitRuntimeName_Type(DisplayString):
    """Custom type jrockitRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JrockitRuntimeName_Type.__name__ = "DisplayString"
_JrockitRuntimeName_Object = MibTableColumn
jrockitRuntimeName = _JrockitRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 15),
    _JrockitRuntimeName_Type()
)
jrockitRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeName.setStatus("current")


class _JrockitRuntimeParent_Type(DisplayString):
    """Custom type jrockitRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JrockitRuntimeParent_Type.__name__ = "DisplayString"
_JrockitRuntimeParent_Object = MibTableColumn
jrockitRuntimeParent = _JrockitRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 20),
    _JrockitRuntimeParent_Type()
)
jrockitRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeParent.setStatus("current")
_JrockitRuntimeAllProcessorsAverageLoad_Type = Integer32
_JrockitRuntimeAllProcessorsAverageLoad_Object = MibTableColumn
jrockitRuntimeAllProcessorsAverageLoad = _JrockitRuntimeAllProcessorsAverageLoad_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 21),
    _JrockitRuntimeAllProcessorsAverageLoad_Type()
)
jrockitRuntimeAllProcessorsAverageLoad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeAllProcessorsAverageLoad.setStatus("current")
_JrockitRuntimeFreeHeap_Type = Counter64
_JrockitRuntimeFreeHeap_Object = MibTableColumn
jrockitRuntimeFreeHeap = _JrockitRuntimeFreeHeap_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 22),
    _JrockitRuntimeFreeHeap_Type()
)
jrockitRuntimeFreeHeap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeFreeHeap.setStatus("current")
_JrockitRuntimeFreePhysicalMemory_Type = Counter64
_JrockitRuntimeFreePhysicalMemory_Object = MibTableColumn
jrockitRuntimeFreePhysicalMemory = _JrockitRuntimeFreePhysicalMemory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 23),
    _JrockitRuntimeFreePhysicalMemory_Type()
)
jrockitRuntimeFreePhysicalMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeFreePhysicalMemory.setStatus("current")
_JrockitRuntimeGcAlgorithm_Type = DisplayString
_JrockitRuntimeGcAlgorithm_Object = MibTableColumn
jrockitRuntimeGcAlgorithm = _JrockitRuntimeGcAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 24),
    _JrockitRuntimeGcAlgorithm_Type()
)
jrockitRuntimeGcAlgorithm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeGcAlgorithm.setStatus("current")
_JrockitRuntimeJVMDescription_Type = DisplayString
_JrockitRuntimeJVMDescription_Object = MibTableColumn
jrockitRuntimeJVMDescription = _JrockitRuntimeJVMDescription_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 25),
    _JrockitRuntimeJVMDescription_Type()
)
jrockitRuntimeJVMDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeJVMDescription.setStatus("current")
_JrockitRuntimeJvmProcessorLoad_Type = Integer32
_JrockitRuntimeJvmProcessorLoad_Object = MibTableColumn
jrockitRuntimeJvmProcessorLoad = _JrockitRuntimeJvmProcessorLoad_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 26),
    _JrockitRuntimeJvmProcessorLoad_Type()
)
jrockitRuntimeJvmProcessorLoad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeJvmProcessorLoad.setStatus("current")
_JrockitRuntimeLastGCEnd_Type = Counter64
_JrockitRuntimeLastGCEnd_Object = MibTableColumn
jrockitRuntimeLastGCEnd = _JrockitRuntimeLastGCEnd_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 27),
    _JrockitRuntimeLastGCEnd_Type()
)
jrockitRuntimeLastGCEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeLastGCEnd.setStatus("current")
_JrockitRuntimeLastGCStart_Type = Counter64
_JrockitRuntimeLastGCStart_Object = MibTableColumn
jrockitRuntimeLastGCStart = _JrockitRuntimeLastGCStart_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 28),
    _JrockitRuntimeLastGCStart_Type()
)
jrockitRuntimeLastGCStart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeLastGCStart.setStatus("current")
_JrockitRuntimeNumberOfDaemonThreads_Type = Integer32
_JrockitRuntimeNumberOfDaemonThreads_Object = MibTableColumn
jrockitRuntimeNumberOfDaemonThreads = _JrockitRuntimeNumberOfDaemonThreads_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 29),
    _JrockitRuntimeNumberOfDaemonThreads_Type()
)
jrockitRuntimeNumberOfDaemonThreads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeNumberOfDaemonThreads.setStatus("current")
_JrockitRuntimeNumberOfProcessors_Type = Integer32
_JrockitRuntimeNumberOfProcessors_Object = MibTableColumn
jrockitRuntimeNumberOfProcessors = _JrockitRuntimeNumberOfProcessors_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 30),
    _JrockitRuntimeNumberOfProcessors_Type()
)
jrockitRuntimeNumberOfProcessors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeNumberOfProcessors.setStatus("current")
_JrockitRuntimeThreadStackDump_Type = DisplayString
_JrockitRuntimeThreadStackDump_Object = MibTableColumn
jrockitRuntimeThreadStackDump = _JrockitRuntimeThreadStackDump_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 31),
    _JrockitRuntimeThreadStackDump_Type()
)
jrockitRuntimeThreadStackDump.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeThreadStackDump.setStatus("current")
_JrockitRuntimeTotalGarbageCollectionCount_Type = Counter64
_JrockitRuntimeTotalGarbageCollectionCount_Object = MibTableColumn
jrockitRuntimeTotalGarbageCollectionCount = _JrockitRuntimeTotalGarbageCollectionCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 32),
    _JrockitRuntimeTotalGarbageCollectionCount_Type()
)
jrockitRuntimeTotalGarbageCollectionCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeTotalGarbageCollectionCount.setStatus("current")
_JrockitRuntimeTotalGarbageCollectionTime_Type = Counter64
_JrockitRuntimeTotalGarbageCollectionTime_Object = MibTableColumn
jrockitRuntimeTotalGarbageCollectionTime = _JrockitRuntimeTotalGarbageCollectionTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 33),
    _JrockitRuntimeTotalGarbageCollectionTime_Type()
)
jrockitRuntimeTotalGarbageCollectionTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeTotalGarbageCollectionTime.setStatus("current")
_JrockitRuntimeTotalHeap_Type = Counter64
_JrockitRuntimeTotalHeap_Object = MibTableColumn
jrockitRuntimeTotalHeap = _JrockitRuntimeTotalHeap_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 34),
    _JrockitRuntimeTotalHeap_Type()
)
jrockitRuntimeTotalHeap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeTotalHeap.setStatus("current")
_JrockitRuntimeTotalNumberOfThreads_Type = Integer32
_JrockitRuntimeTotalNumberOfThreads_Object = MibTableColumn
jrockitRuntimeTotalNumberOfThreads = _JrockitRuntimeTotalNumberOfThreads_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 35),
    _JrockitRuntimeTotalNumberOfThreads_Type()
)
jrockitRuntimeTotalNumberOfThreads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeTotalNumberOfThreads.setStatus("current")
_JrockitRuntimeTotalNurserySize_Type = Counter64
_JrockitRuntimeTotalNurserySize_Object = MibTableColumn
jrockitRuntimeTotalNurserySize = _JrockitRuntimeTotalNurserySize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 36),
    _JrockitRuntimeTotalNurserySize_Type()
)
jrockitRuntimeTotalNurserySize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeTotalNurserySize.setStatus("current")
_JrockitRuntimeTotalPhysicalMemory_Type = Counter64
_JrockitRuntimeTotalPhysicalMemory_Object = MibTableColumn
jrockitRuntimeTotalPhysicalMemory = _JrockitRuntimeTotalPhysicalMemory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 37),
    _JrockitRuntimeTotalPhysicalMemory_Type()
)
jrockitRuntimeTotalPhysicalMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeTotalPhysicalMemory.setStatus("current")
_JrockitRuntimeUptime_Type = Counter64
_JrockitRuntimeUptime_Object = MibTableColumn
jrockitRuntimeUptime = _JrockitRuntimeUptime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 38),
    _JrockitRuntimeUptime_Type()
)
jrockitRuntimeUptime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeUptime.setStatus("current")
_JrockitRuntimeUsedHeap_Type = Counter64
_JrockitRuntimeUsedHeap_Object = MibTableColumn
jrockitRuntimeUsedHeap = _JrockitRuntimeUsedHeap_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 39),
    _JrockitRuntimeUsedHeap_Type()
)
jrockitRuntimeUsedHeap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeUsedHeap.setStatus("current")
_JrockitRuntimeUsedPhysicalMemory_Type = Counter64
_JrockitRuntimeUsedPhysicalMemory_Object = MibTableColumn
jrockitRuntimeUsedPhysicalMemory = _JrockitRuntimeUsedPhysicalMemory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 40),
    _JrockitRuntimeUsedPhysicalMemory_Type()
)
jrockitRuntimeUsedPhysicalMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeUsedPhysicalMemory.setStatus("current")
_JrockitRuntimeVendor_Type = DisplayString
_JrockitRuntimeVendor_Object = MibTableColumn
jrockitRuntimeVendor = _JrockitRuntimeVendor_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 41),
    _JrockitRuntimeVendor_Type()
)
jrockitRuntimeVendor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeVendor.setStatus("current")
_JrockitRuntimeVersion_Type = DisplayString
_JrockitRuntimeVersion_Object = MibTableColumn
jrockitRuntimeVersion = _JrockitRuntimeVersion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 42),
    _JrockitRuntimeVersion_Type()
)
jrockitRuntimeVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeVersion.setStatus("current")
_JrockitRuntimeConcurrent_Type = Integer32
_JrockitRuntimeConcurrent_Object = MibTableColumn
jrockitRuntimeConcurrent = _JrockitRuntimeConcurrent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 43),
    _JrockitRuntimeConcurrent_Type()
)
jrockitRuntimeConcurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeConcurrent.setStatus("current")
_JrockitRuntimeGCHandlesCompaction_Type = Integer32
_JrockitRuntimeGCHandlesCompaction_Object = MibTableColumn
jrockitRuntimeGCHandlesCompaction = _JrockitRuntimeGCHandlesCompaction_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 44),
    _JrockitRuntimeGCHandlesCompaction_Type()
)
jrockitRuntimeGCHandlesCompaction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeGCHandlesCompaction.setStatus("current")
_JrockitRuntimeGenerational_Type = Integer32
_JrockitRuntimeGenerational_Object = MibTableColumn
jrockitRuntimeGenerational = _JrockitRuntimeGenerational_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 45),
    _JrockitRuntimeGenerational_Type()
)
jrockitRuntimeGenerational.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeGenerational.setStatus("current")
_JrockitRuntimeIncremental_Type = Integer32
_JrockitRuntimeIncremental_Object = MibTableColumn
jrockitRuntimeIncremental = _JrockitRuntimeIncremental_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 46),
    _JrockitRuntimeIncremental_Type()
)
jrockitRuntimeIncremental.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeIncremental.setStatus("current")
_JrockitRuntimeParallel_Type = Integer32
_JrockitRuntimeParallel_Object = MibTableColumn
jrockitRuntimeParallel = _JrockitRuntimeParallel_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 47),
    _JrockitRuntimeParallel_Type()
)
jrockitRuntimeParallel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeParallel.setStatus("current")
_JrockitRuntimeJavaVendor_Type = OctetString
_JrockitRuntimeJavaVendor_Object = MibTableColumn
jrockitRuntimeJavaVendor = _JrockitRuntimeJavaVendor_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 48),
    _JrockitRuntimeJavaVendor_Type()
)
jrockitRuntimeJavaVendor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeJavaVendor.setStatus("current")
_JrockitRuntimeHeapSizeCurrent_Type = Counter64
_JrockitRuntimeHeapSizeCurrent_Object = MibTableColumn
jrockitRuntimeHeapSizeCurrent = _JrockitRuntimeHeapSizeCurrent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 49),
    _JrockitRuntimeHeapSizeCurrent_Type()
)
jrockitRuntimeHeapSizeCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeHeapSizeCurrent.setStatus("current")
_JrockitRuntimeHeapFreePercent_Type = Integer32
_JrockitRuntimeHeapFreePercent_Object = MibTableColumn
jrockitRuntimeHeapFreePercent = _JrockitRuntimeHeapFreePercent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 50),
    _JrockitRuntimeHeapFreePercent_Type()
)
jrockitRuntimeHeapFreePercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeHeapFreePercent.setStatus("current")
_JrockitRuntimeHeapSizeMax_Type = Counter64
_JrockitRuntimeHeapSizeMax_Object = MibTableColumn
jrockitRuntimeHeapSizeMax = _JrockitRuntimeHeapSizeMax_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 51),
    _JrockitRuntimeHeapSizeMax_Type()
)
jrockitRuntimeHeapSizeMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeHeapSizeMax.setStatus("current")
_JrockitRuntimeOSName_Type = OctetString
_JrockitRuntimeOSName_Object = MibTableColumn
jrockitRuntimeOSName = _JrockitRuntimeOSName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 52),
    _JrockitRuntimeOSName_Type()
)
jrockitRuntimeOSName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeOSName.setStatus("current")
_JrockitRuntimeJavaVersion_Type = OctetString
_JrockitRuntimeJavaVersion_Object = MibTableColumn
jrockitRuntimeJavaVersion = _JrockitRuntimeJavaVersion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 53),
    _JrockitRuntimeJavaVersion_Type()
)
jrockitRuntimeJavaVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeJavaVersion.setStatus("current")
_JrockitRuntimeOSVersion_Type = OctetString
_JrockitRuntimeOSVersion_Object = MibTableColumn
jrockitRuntimeOSVersion = _JrockitRuntimeOSVersion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 54),
    _JrockitRuntimeOSVersion_Type()
)
jrockitRuntimeOSVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeOSVersion.setStatus("current")
_JrockitRuntimeHeapFreeCurrent_Type = Counter64
_JrockitRuntimeHeapFreeCurrent_Object = MibTableColumn
jrockitRuntimeHeapFreeCurrent = _JrockitRuntimeHeapFreeCurrent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 55),
    _JrockitRuntimeHeapFreeCurrent_Type()
)
jrockitRuntimeHeapFreeCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeHeapFreeCurrent.setStatus("current")
_JrockitRuntimeJavaVMVendor_Type = OctetString
_JrockitRuntimeJavaVMVendor_Object = MibTableColumn
jrockitRuntimeJavaVMVendor = _JrockitRuntimeJavaVMVendor_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 302, 1, 56),
    _JrockitRuntimeJavaVMVendor_Type()
)
jrockitRuntimeJavaVMVendor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jrockitRuntimeJavaVMVendor.setStatus("current")
_JtaRuntimeTable_Object = MibTable
jtaRuntimeTable = _JtaRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 310)
)
if mibBuilder.loadTexts:
    jtaRuntimeTable.setStatus("current")
_JtaRuntimeEntry_Object = MibTableRow
jtaRuntimeEntry = _JtaRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 310, 1)
)
jtaRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jtaRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jtaRuntimeEntry.setStatus("current")


class _JtaRuntimeIndex_Type(DisplayString):
    """Custom type jtaRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JtaRuntimeIndex_Type.__name__ = "DisplayString"
_JtaRuntimeIndex_Object = MibTableColumn
jtaRuntimeIndex = _JtaRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 310, 1, 1),
    _JtaRuntimeIndex_Type()
)
jtaRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRuntimeIndex.setStatus("current")


class _JtaRuntimeObjectName_Type(DisplayString):
    """Custom type jtaRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JtaRuntimeObjectName_Type.__name__ = "DisplayString"
_JtaRuntimeObjectName_Object = MibTableColumn
jtaRuntimeObjectName = _JtaRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 310, 1, 5),
    _JtaRuntimeObjectName_Type()
)
jtaRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRuntimeObjectName.setStatus("current")


class _JtaRuntimeType_Type(DisplayString):
    """Custom type jtaRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JtaRuntimeType_Type.__name__ = "DisplayString"
_JtaRuntimeType_Object = MibTableColumn
jtaRuntimeType = _JtaRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 310, 1, 10),
    _JtaRuntimeType_Type()
)
jtaRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRuntimeType.setStatus("current")


class _JtaRuntimeName_Type(DisplayString):
    """Custom type jtaRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JtaRuntimeName_Type.__name__ = "DisplayString"
_JtaRuntimeName_Object = MibTableColumn
jtaRuntimeName = _JtaRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 310, 1, 15),
    _JtaRuntimeName_Type()
)
jtaRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRuntimeName.setStatus("current")


class _JtaRuntimeParent_Type(DisplayString):
    """Custom type jtaRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JtaRuntimeParent_Type.__name__ = "DisplayString"
_JtaRuntimeParent_Object = MibTableColumn
jtaRuntimeParent = _JtaRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 310, 1, 20),
    _JtaRuntimeParent_Type()
)
jtaRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRuntimeParent.setStatus("current")
_JtaRuntimeTransactionTotalCount_Type = Counter64
_JtaRuntimeTransactionTotalCount_Object = MibTableColumn
jtaRuntimeTransactionTotalCount = _JtaRuntimeTransactionTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 310, 1, 25),
    _JtaRuntimeTransactionTotalCount_Type()
)
jtaRuntimeTransactionTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRuntimeTransactionTotalCount.setStatus("current")
_JtaRuntimeTransactionCommittedTotalCount_Type = Counter64
_JtaRuntimeTransactionCommittedTotalCount_Object = MibTableColumn
jtaRuntimeTransactionCommittedTotalCount = _JtaRuntimeTransactionCommittedTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 310, 1, 30),
    _JtaRuntimeTransactionCommittedTotalCount_Type()
)
jtaRuntimeTransactionCommittedTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRuntimeTransactionCommittedTotalCount.setStatus("current")
_JtaRuntimeTransactionRolledBackTotalCount_Type = Counter64
_JtaRuntimeTransactionRolledBackTotalCount_Object = MibTableColumn
jtaRuntimeTransactionRolledBackTotalCount = _JtaRuntimeTransactionRolledBackTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 310, 1, 35),
    _JtaRuntimeTransactionRolledBackTotalCount_Type()
)
jtaRuntimeTransactionRolledBackTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRuntimeTransactionRolledBackTotalCount.setStatus("current")
_JtaRuntimeTransactionHeuristicsTotalCount_Type = Counter64
_JtaRuntimeTransactionHeuristicsTotalCount_Object = MibTableColumn
jtaRuntimeTransactionHeuristicsTotalCount = _JtaRuntimeTransactionHeuristicsTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 310, 1, 40),
    _JtaRuntimeTransactionHeuristicsTotalCount_Type()
)
jtaRuntimeTransactionHeuristicsTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRuntimeTransactionHeuristicsTotalCount.setStatus("current")
_JtaRuntimeTransactionRolledBackResourceTotalCount_Type = Counter64
_JtaRuntimeTransactionRolledBackResourceTotalCount_Object = MibTableColumn
jtaRuntimeTransactionRolledBackResourceTotalCount = _JtaRuntimeTransactionRolledBackResourceTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 310, 1, 45),
    _JtaRuntimeTransactionRolledBackResourceTotalCount_Type()
)
jtaRuntimeTransactionRolledBackResourceTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRuntimeTransactionRolledBackResourceTotalCount.setStatus("current")
_JtaRuntimeTransactionRolledBackAppTotalCount_Type = Counter64
_JtaRuntimeTransactionRolledBackAppTotalCount_Object = MibTableColumn
jtaRuntimeTransactionRolledBackAppTotalCount = _JtaRuntimeTransactionRolledBackAppTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 310, 1, 50),
    _JtaRuntimeTransactionRolledBackAppTotalCount_Type()
)
jtaRuntimeTransactionRolledBackAppTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRuntimeTransactionRolledBackAppTotalCount.setStatus("current")
_JtaRuntimeTransactionRolledBackSystemTotalCount_Type = Counter64
_JtaRuntimeTransactionRolledBackSystemTotalCount_Object = MibTableColumn
jtaRuntimeTransactionRolledBackSystemTotalCount = _JtaRuntimeTransactionRolledBackSystemTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 310, 1, 55),
    _JtaRuntimeTransactionRolledBackSystemTotalCount_Type()
)
jtaRuntimeTransactionRolledBackSystemTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRuntimeTransactionRolledBackSystemTotalCount.setStatus("current")
_JtaRuntimeSecondsActiveTotalCount_Type = Counter64
_JtaRuntimeSecondsActiveTotalCount_Object = MibTableColumn
jtaRuntimeSecondsActiveTotalCount = _JtaRuntimeSecondsActiveTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 310, 1, 60),
    _JtaRuntimeSecondsActiveTotalCount_Type()
)
jtaRuntimeSecondsActiveTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRuntimeSecondsActiveTotalCount.setStatus("current")
_JtaRuntimeTransactionRolledBackTimeoutTotalCount_Type = Counter64
_JtaRuntimeTransactionRolledBackTimeoutTotalCount_Object = MibTableColumn
jtaRuntimeTransactionRolledBackTimeoutTotalCount = _JtaRuntimeTransactionRolledBackTimeoutTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 310, 1, 65),
    _JtaRuntimeTransactionRolledBackTimeoutTotalCount_Type()
)
jtaRuntimeTransactionRolledBackTimeoutTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRuntimeTransactionRolledBackTimeoutTotalCount.setStatus("current")


class _JtaRuntimeTransactionNameRuntimeMBeans_Type(DisplayString):
    """Custom type jtaRuntimeTransactionNameRuntimeMBeans based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JtaRuntimeTransactionNameRuntimeMBeans_Type.__name__ = "DisplayString"
_JtaRuntimeTransactionNameRuntimeMBeans_Object = MibTableColumn
jtaRuntimeTransactionNameRuntimeMBeans = _JtaRuntimeTransactionNameRuntimeMBeans_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 310, 1, 70),
    _JtaRuntimeTransactionNameRuntimeMBeans_Type()
)
jtaRuntimeTransactionNameRuntimeMBeans.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRuntimeTransactionNameRuntimeMBeans.setStatus("current")


class _JtaRuntimeTransactionResourceRuntimeMBeans_Type(DisplayString):
    """Custom type jtaRuntimeTransactionResourceRuntimeMBeans based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JtaRuntimeTransactionResourceRuntimeMBeans_Type.__name__ = "DisplayString"
_JtaRuntimeTransactionResourceRuntimeMBeans_Object = MibTableColumn
jtaRuntimeTransactionResourceRuntimeMBeans = _JtaRuntimeTransactionResourceRuntimeMBeans_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 310, 1, 75),
    _JtaRuntimeTransactionResourceRuntimeMBeans_Type()
)
jtaRuntimeTransactionResourceRuntimeMBeans.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRuntimeTransactionResourceRuntimeMBeans.setStatus("current")
_JtaRuntimeActiveTransactionsTotalCount_Type = Integer32
_JtaRuntimeActiveTransactionsTotalCount_Object = MibTableColumn
jtaRuntimeActiveTransactionsTotalCount = _JtaRuntimeActiveTransactionsTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 310, 1, 76),
    _JtaRuntimeActiveTransactionsTotalCount_Type()
)
jtaRuntimeActiveTransactionsTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRuntimeActiveTransactionsTotalCount.setStatus("current")
_JtaRuntimeTransactionAbandonedTotalCount_Type = Counter64
_JtaRuntimeTransactionAbandonedTotalCount_Object = MibTableColumn
jtaRuntimeTransactionAbandonedTotalCount = _JtaRuntimeTransactionAbandonedTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 310, 1, 77),
    _JtaRuntimeTransactionAbandonedTotalCount_Type()
)
jtaRuntimeTransactionAbandonedTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRuntimeTransactionAbandonedTotalCount.setStatus("current")
_JtaRecoveryRuntimeTable_Object = MibTable
jtaRecoveryRuntimeTable = _JtaRecoveryRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 311)
)
if mibBuilder.loadTexts:
    jtaRecoveryRuntimeTable.setStatus("current")
_JtaRecoveryRuntimeEntry_Object = MibTableRow
jtaRecoveryRuntimeEntry = _JtaRecoveryRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 311, 1)
)
jtaRecoveryRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jtaRecoveryRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jtaRecoveryRuntimeEntry.setStatus("current")


class _JtaRecoveryRuntimeIndex_Type(DisplayString):
    """Custom type jtaRecoveryRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JtaRecoveryRuntimeIndex_Type.__name__ = "DisplayString"
_JtaRecoveryRuntimeIndex_Object = MibTableColumn
jtaRecoveryRuntimeIndex = _JtaRecoveryRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 311, 1, 1),
    _JtaRecoveryRuntimeIndex_Type()
)
jtaRecoveryRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRecoveryRuntimeIndex.setStatus("current")


class _JtaRecoveryRuntimeObjectName_Type(DisplayString):
    """Custom type jtaRecoveryRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JtaRecoveryRuntimeObjectName_Type.__name__ = "DisplayString"
_JtaRecoveryRuntimeObjectName_Object = MibTableColumn
jtaRecoveryRuntimeObjectName = _JtaRecoveryRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 311, 1, 5),
    _JtaRecoveryRuntimeObjectName_Type()
)
jtaRecoveryRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRecoveryRuntimeObjectName.setStatus("current")


class _JtaRecoveryRuntimeType_Type(DisplayString):
    """Custom type jtaRecoveryRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JtaRecoveryRuntimeType_Type.__name__ = "DisplayString"
_JtaRecoveryRuntimeType_Object = MibTableColumn
jtaRecoveryRuntimeType = _JtaRecoveryRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 311, 1, 10),
    _JtaRecoveryRuntimeType_Type()
)
jtaRecoveryRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRecoveryRuntimeType.setStatus("current")


class _JtaRecoveryRuntimeName_Type(DisplayString):
    """Custom type jtaRecoveryRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JtaRecoveryRuntimeName_Type.__name__ = "DisplayString"
_JtaRecoveryRuntimeName_Object = MibTableColumn
jtaRecoveryRuntimeName = _JtaRecoveryRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 311, 1, 15),
    _JtaRecoveryRuntimeName_Type()
)
jtaRecoveryRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRecoveryRuntimeName.setStatus("current")


class _JtaRecoveryRuntimeParent_Type(DisplayString):
    """Custom type jtaRecoveryRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JtaRecoveryRuntimeParent_Type.__name__ = "DisplayString"
_JtaRecoveryRuntimeParent_Object = MibTableColumn
jtaRecoveryRuntimeParent = _JtaRecoveryRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 311, 1, 20),
    _JtaRecoveryRuntimeParent_Type()
)
jtaRecoveryRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRecoveryRuntimeParent.setStatus("current")
_JtaRecoveryRuntimeInitialRecoveredTransactionTotalCount_Type = Integer32
_JtaRecoveryRuntimeInitialRecoveredTransactionTotalCount_Object = MibTableColumn
jtaRecoveryRuntimeInitialRecoveredTransactionTotalCount = _JtaRecoveryRuntimeInitialRecoveredTransactionTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 311, 1, 25),
    _JtaRecoveryRuntimeInitialRecoveredTransactionTotalCount_Type()
)
jtaRecoveryRuntimeInitialRecoveredTransactionTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRecoveryRuntimeInitialRecoveredTransactionTotalCount.setStatus("current")
_JtaRecoveryRuntimeRecoveredTransactionCompletionPercent_Type = Integer32
_JtaRecoveryRuntimeRecoveredTransactionCompletionPercent_Object = MibTableColumn
jtaRecoveryRuntimeRecoveredTransactionCompletionPercent = _JtaRecoveryRuntimeRecoveredTransactionCompletionPercent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 311, 1, 30),
    _JtaRecoveryRuntimeRecoveredTransactionCompletionPercent_Type()
)
jtaRecoveryRuntimeRecoveredTransactionCompletionPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRecoveryRuntimeRecoveredTransactionCompletionPercent.setStatus("current")
_JtaRecoveryRuntimeActive_Type = Integer32
_JtaRecoveryRuntimeActive_Object = MibTableColumn
jtaRecoveryRuntimeActive = _JtaRecoveryRuntimeActive_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 311, 1, 35),
    _JtaRecoveryRuntimeActive_Type()
)
jtaRecoveryRuntimeActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaRecoveryRuntimeActive.setStatus("current")
_LibraryRuntimeTable_Object = MibTable
libraryRuntimeTable = _LibraryRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 320)
)
if mibBuilder.loadTexts:
    libraryRuntimeTable.setStatus("current")
_LibraryRuntimeEntry_Object = MibTableRow
libraryRuntimeEntry = _LibraryRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 320, 1)
)
libraryRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "libraryRuntimeIndex"),
)
if mibBuilder.loadTexts:
    libraryRuntimeEntry.setStatus("current")


class _LibraryRuntimeIndex_Type(DisplayString):
    """Custom type libraryRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_LibraryRuntimeIndex_Type.__name__ = "DisplayString"
_LibraryRuntimeIndex_Object = MibTableColumn
libraryRuntimeIndex = _LibraryRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 320, 1, 1),
    _LibraryRuntimeIndex_Type()
)
libraryRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    libraryRuntimeIndex.setStatus("current")


class _LibraryRuntimeObjectName_Type(DisplayString):
    """Custom type libraryRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_LibraryRuntimeObjectName_Type.__name__ = "DisplayString"
_LibraryRuntimeObjectName_Object = MibTableColumn
libraryRuntimeObjectName = _LibraryRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 320, 1, 5),
    _LibraryRuntimeObjectName_Type()
)
libraryRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    libraryRuntimeObjectName.setStatus("current")


class _LibraryRuntimeType_Type(DisplayString):
    """Custom type libraryRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_LibraryRuntimeType_Type.__name__ = "DisplayString"
_LibraryRuntimeType_Object = MibTableColumn
libraryRuntimeType = _LibraryRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 320, 1, 10),
    _LibraryRuntimeType_Type()
)
libraryRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    libraryRuntimeType.setStatus("current")


class _LibraryRuntimeName_Type(DisplayString):
    """Custom type libraryRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_LibraryRuntimeName_Type.__name__ = "DisplayString"
_LibraryRuntimeName_Object = MibTableColumn
libraryRuntimeName = _LibraryRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 320, 1, 15),
    _LibraryRuntimeName_Type()
)
libraryRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    libraryRuntimeName.setStatus("current")


class _LibraryRuntimeParent_Type(DisplayString):
    """Custom type libraryRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_LibraryRuntimeParent_Type.__name__ = "DisplayString"
_LibraryRuntimeParent_Object = MibTableColumn
libraryRuntimeParent = _LibraryRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 320, 1, 20),
    _LibraryRuntimeParent_Type()
)
libraryRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    libraryRuntimeParent.setStatus("current")


class _LibraryRuntimeLibraryName_Type(DisplayString):
    """Custom type libraryRuntimeLibraryName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_LibraryRuntimeLibraryName_Type.__name__ = "DisplayString"
_LibraryRuntimeLibraryName_Object = MibTableColumn
libraryRuntimeLibraryName = _LibraryRuntimeLibraryName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 320, 1, 25),
    _LibraryRuntimeLibraryName_Type()
)
libraryRuntimeLibraryName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    libraryRuntimeLibraryName.setStatus("current")


class _LibraryRuntimeSpecificationVersion_Type(DisplayString):
    """Custom type libraryRuntimeSpecificationVersion based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_LibraryRuntimeSpecificationVersion_Type.__name__ = "DisplayString"
_LibraryRuntimeSpecificationVersion_Object = MibTableColumn
libraryRuntimeSpecificationVersion = _LibraryRuntimeSpecificationVersion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 320, 1, 30),
    _LibraryRuntimeSpecificationVersion_Type()
)
libraryRuntimeSpecificationVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    libraryRuntimeSpecificationVersion.setStatus("current")


class _LibraryRuntimeImplementationVersion_Type(DisplayString):
    """Custom type libraryRuntimeImplementationVersion based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_LibraryRuntimeImplementationVersion_Type.__name__ = "DisplayString"
_LibraryRuntimeImplementationVersion_Object = MibTableColumn
libraryRuntimeImplementationVersion = _LibraryRuntimeImplementationVersion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 320, 1, 35),
    _LibraryRuntimeImplementationVersion_Type()
)
libraryRuntimeImplementationVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    libraryRuntimeImplementationVersion.setStatus("current")


class _LibraryRuntimeReferenced_Type(Integer32):
    """Custom type libraryRuntimeReferenced based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_LibraryRuntimeReferenced_Type.__name__ = "Integer32"
_LibraryRuntimeReferenced_Object = MibTableColumn
libraryRuntimeReferenced = _LibraryRuntimeReferenced_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 320, 1, 40),
    _LibraryRuntimeReferenced_Type()
)
libraryRuntimeReferenced.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    libraryRuntimeReferenced.setStatus("current")
_LibraryRuntimeLibraryIdentifier_Type = OctetString
_LibraryRuntimeLibraryIdentifier_Object = MibTableColumn
libraryRuntimeLibraryIdentifier = _LibraryRuntimeLibraryIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 320, 1, 41),
    _LibraryRuntimeLibraryIdentifier_Type()
)
libraryRuntimeLibraryIdentifier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    libraryRuntimeLibraryIdentifier.setStatus("current")
_PersistentStoreRuntimeTable_Object = MibTable
persistentStoreRuntimeTable = _PersistentStoreRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 330)
)
if mibBuilder.loadTexts:
    persistentStoreRuntimeTable.setStatus("current")
_PersistentStoreRuntimeEntry_Object = MibTableRow
persistentStoreRuntimeEntry = _PersistentStoreRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 330, 1)
)
persistentStoreRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "persistentStoreRuntimeIndex"),
)
if mibBuilder.loadTexts:
    persistentStoreRuntimeEntry.setStatus("current")


class _PersistentStoreRuntimeIndex_Type(DisplayString):
    """Custom type persistentStoreRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_PersistentStoreRuntimeIndex_Type.__name__ = "DisplayString"
_PersistentStoreRuntimeIndex_Object = MibTableColumn
persistentStoreRuntimeIndex = _PersistentStoreRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 330, 1, 1),
    _PersistentStoreRuntimeIndex_Type()
)
persistentStoreRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    persistentStoreRuntimeIndex.setStatus("current")


class _PersistentStoreRuntimeObjectName_Type(DisplayString):
    """Custom type persistentStoreRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_PersistentStoreRuntimeObjectName_Type.__name__ = "DisplayString"
_PersistentStoreRuntimeObjectName_Object = MibTableColumn
persistentStoreRuntimeObjectName = _PersistentStoreRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 330, 1, 5),
    _PersistentStoreRuntimeObjectName_Type()
)
persistentStoreRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    persistentStoreRuntimeObjectName.setStatus("current")


class _PersistentStoreRuntimeType_Type(DisplayString):
    """Custom type persistentStoreRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_PersistentStoreRuntimeType_Type.__name__ = "DisplayString"
_PersistentStoreRuntimeType_Object = MibTableColumn
persistentStoreRuntimeType = _PersistentStoreRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 330, 1, 10),
    _PersistentStoreRuntimeType_Type()
)
persistentStoreRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    persistentStoreRuntimeType.setStatus("current")


class _PersistentStoreRuntimeName_Type(DisplayString):
    """Custom type persistentStoreRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_PersistentStoreRuntimeName_Type.__name__ = "DisplayString"
_PersistentStoreRuntimeName_Object = MibTableColumn
persistentStoreRuntimeName = _PersistentStoreRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 330, 1, 15),
    _PersistentStoreRuntimeName_Type()
)
persistentStoreRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    persistentStoreRuntimeName.setStatus("current")


class _PersistentStoreRuntimeParent_Type(DisplayString):
    """Custom type persistentStoreRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_PersistentStoreRuntimeParent_Type.__name__ = "DisplayString"
_PersistentStoreRuntimeParent_Object = MibTableColumn
persistentStoreRuntimeParent = _PersistentStoreRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 330, 1, 20),
    _PersistentStoreRuntimeParent_Type()
)
persistentStoreRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    persistentStoreRuntimeParent.setStatus("current")
_PersistentStoreRuntimeCreateCount_Type = Counter64
_PersistentStoreRuntimeCreateCount_Object = MibTableColumn
persistentStoreRuntimeCreateCount = _PersistentStoreRuntimeCreateCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 330, 1, 25),
    _PersistentStoreRuntimeCreateCount_Type()
)
persistentStoreRuntimeCreateCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    persistentStoreRuntimeCreateCount.setStatus("current")
_PersistentStoreRuntimeReadCount_Type = Counter64
_PersistentStoreRuntimeReadCount_Object = MibTableColumn
persistentStoreRuntimeReadCount = _PersistentStoreRuntimeReadCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 330, 1, 30),
    _PersistentStoreRuntimeReadCount_Type()
)
persistentStoreRuntimeReadCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    persistentStoreRuntimeReadCount.setStatus("current")
_PersistentStoreRuntimeUpdateCount_Type = Counter64
_PersistentStoreRuntimeUpdateCount_Object = MibTableColumn
persistentStoreRuntimeUpdateCount = _PersistentStoreRuntimeUpdateCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 330, 1, 35),
    _PersistentStoreRuntimeUpdateCount_Type()
)
persistentStoreRuntimeUpdateCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    persistentStoreRuntimeUpdateCount.setStatus("current")
_PersistentStoreRuntimeDeleteCount_Type = Counter64
_PersistentStoreRuntimeDeleteCount_Object = MibTableColumn
persistentStoreRuntimeDeleteCount = _PersistentStoreRuntimeDeleteCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 330, 1, 40),
    _PersistentStoreRuntimeDeleteCount_Type()
)
persistentStoreRuntimeDeleteCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    persistentStoreRuntimeDeleteCount.setStatus("current")
_PersistentStoreRuntimeObjectCount_Type = Counter64
_PersistentStoreRuntimeObjectCount_Object = MibTableColumn
persistentStoreRuntimeObjectCount = _PersistentStoreRuntimeObjectCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 330, 1, 45),
    _PersistentStoreRuntimeObjectCount_Type()
)
persistentStoreRuntimeObjectCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    persistentStoreRuntimeObjectCount.setStatus("current")
_PersistentStoreRuntimePhysicalWriteCount_Type = Counter64
_PersistentStoreRuntimePhysicalWriteCount_Object = MibTableColumn
persistentStoreRuntimePhysicalWriteCount = _PersistentStoreRuntimePhysicalWriteCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 330, 1, 50),
    _PersistentStoreRuntimePhysicalWriteCount_Type()
)
persistentStoreRuntimePhysicalWriteCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    persistentStoreRuntimePhysicalWriteCount.setStatus("current")
_PersistentStoreConnectionRuntimeTable_Object = MibTable
persistentStoreConnectionRuntimeTable = _PersistentStoreConnectionRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 331)
)
if mibBuilder.loadTexts:
    persistentStoreConnectionRuntimeTable.setStatus("current")
_PersistentStoreConnectionRuntimeEntry_Object = MibTableRow
persistentStoreConnectionRuntimeEntry = _PersistentStoreConnectionRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 331, 1)
)
persistentStoreConnectionRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "persistentStoreConnectionRuntimeIndex"),
)
if mibBuilder.loadTexts:
    persistentStoreConnectionRuntimeEntry.setStatus("current")


class _PersistentStoreConnectionRuntimeIndex_Type(DisplayString):
    """Custom type persistentStoreConnectionRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_PersistentStoreConnectionRuntimeIndex_Type.__name__ = "DisplayString"
_PersistentStoreConnectionRuntimeIndex_Object = MibTableColumn
persistentStoreConnectionRuntimeIndex = _PersistentStoreConnectionRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 331, 1, 1),
    _PersistentStoreConnectionRuntimeIndex_Type()
)
persistentStoreConnectionRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    persistentStoreConnectionRuntimeIndex.setStatus("current")


class _PersistentStoreConnectionRuntimeObjectName_Type(DisplayString):
    """Custom type persistentStoreConnectionRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_PersistentStoreConnectionRuntimeObjectName_Type.__name__ = "DisplayString"
_PersistentStoreConnectionRuntimeObjectName_Object = MibTableColumn
persistentStoreConnectionRuntimeObjectName = _PersistentStoreConnectionRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 331, 1, 5),
    _PersistentStoreConnectionRuntimeObjectName_Type()
)
persistentStoreConnectionRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    persistentStoreConnectionRuntimeObjectName.setStatus("current")


class _PersistentStoreConnectionRuntimeType_Type(DisplayString):
    """Custom type persistentStoreConnectionRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_PersistentStoreConnectionRuntimeType_Type.__name__ = "DisplayString"
_PersistentStoreConnectionRuntimeType_Object = MibTableColumn
persistentStoreConnectionRuntimeType = _PersistentStoreConnectionRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 331, 1, 10),
    _PersistentStoreConnectionRuntimeType_Type()
)
persistentStoreConnectionRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    persistentStoreConnectionRuntimeType.setStatus("current")


class _PersistentStoreConnectionRuntimeName_Type(DisplayString):
    """Custom type persistentStoreConnectionRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_PersistentStoreConnectionRuntimeName_Type.__name__ = "DisplayString"
_PersistentStoreConnectionRuntimeName_Object = MibTableColumn
persistentStoreConnectionRuntimeName = _PersistentStoreConnectionRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 331, 1, 15),
    _PersistentStoreConnectionRuntimeName_Type()
)
persistentStoreConnectionRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    persistentStoreConnectionRuntimeName.setStatus("current")


class _PersistentStoreConnectionRuntimeParent_Type(DisplayString):
    """Custom type persistentStoreConnectionRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_PersistentStoreConnectionRuntimeParent_Type.__name__ = "DisplayString"
_PersistentStoreConnectionRuntimeParent_Object = MibTableColumn
persistentStoreConnectionRuntimeParent = _PersistentStoreConnectionRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 331, 1, 20),
    _PersistentStoreConnectionRuntimeParent_Type()
)
persistentStoreConnectionRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    persistentStoreConnectionRuntimeParent.setStatus("current")
_PersistentStoreConnectionRuntimeCreateCount_Type = Counter64
_PersistentStoreConnectionRuntimeCreateCount_Object = MibTableColumn
persistentStoreConnectionRuntimeCreateCount = _PersistentStoreConnectionRuntimeCreateCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 331, 1, 25),
    _PersistentStoreConnectionRuntimeCreateCount_Type()
)
persistentStoreConnectionRuntimeCreateCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    persistentStoreConnectionRuntimeCreateCount.setStatus("current")
_PersistentStoreConnectionRuntimeReadCount_Type = Counter64
_PersistentStoreConnectionRuntimeReadCount_Object = MibTableColumn
persistentStoreConnectionRuntimeReadCount = _PersistentStoreConnectionRuntimeReadCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 331, 1, 30),
    _PersistentStoreConnectionRuntimeReadCount_Type()
)
persistentStoreConnectionRuntimeReadCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    persistentStoreConnectionRuntimeReadCount.setStatus("current")
_PersistentStoreConnectionRuntimeUpdateCount_Type = Counter64
_PersistentStoreConnectionRuntimeUpdateCount_Object = MibTableColumn
persistentStoreConnectionRuntimeUpdateCount = _PersistentStoreConnectionRuntimeUpdateCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 331, 1, 35),
    _PersistentStoreConnectionRuntimeUpdateCount_Type()
)
persistentStoreConnectionRuntimeUpdateCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    persistentStoreConnectionRuntimeUpdateCount.setStatus("current")
_PersistentStoreConnectionRuntimeDeleteCount_Type = Counter64
_PersistentStoreConnectionRuntimeDeleteCount_Object = MibTableColumn
persistentStoreConnectionRuntimeDeleteCount = _PersistentStoreConnectionRuntimeDeleteCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 331, 1, 40),
    _PersistentStoreConnectionRuntimeDeleteCount_Type()
)
persistentStoreConnectionRuntimeDeleteCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    persistentStoreConnectionRuntimeDeleteCount.setStatus("current")
_PersistentStoreConnectionRuntimeObjectCount_Type = Counter64
_PersistentStoreConnectionRuntimeObjectCount_Object = MibTableColumn
persistentStoreConnectionRuntimeObjectCount = _PersistentStoreConnectionRuntimeObjectCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 331, 1, 45),
    _PersistentStoreConnectionRuntimeObjectCount_Type()
)
persistentStoreConnectionRuntimeObjectCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    persistentStoreConnectionRuntimeObjectCount.setStatus("current")
_JvmRuntimeTable_Object = MibTable
jvmRuntimeTable = _JvmRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 340)
)
if mibBuilder.loadTexts:
    jvmRuntimeTable.setStatus("current")
_JvmRuntimeEntry_Object = MibTableRow
jvmRuntimeEntry = _JvmRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 340, 1)
)
jvmRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jvmRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jvmRuntimeEntry.setStatus("current")


class _JvmRuntimeIndex_Type(DisplayString):
    """Custom type jvmRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JvmRuntimeIndex_Type.__name__ = "DisplayString"
_JvmRuntimeIndex_Object = MibTableColumn
jvmRuntimeIndex = _JvmRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 340, 1, 1),
    _JvmRuntimeIndex_Type()
)
jvmRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jvmRuntimeIndex.setStatus("current")


class _JvmRuntimeObjectName_Type(DisplayString):
    """Custom type jvmRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JvmRuntimeObjectName_Type.__name__ = "DisplayString"
_JvmRuntimeObjectName_Object = MibTableColumn
jvmRuntimeObjectName = _JvmRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 340, 1, 5),
    _JvmRuntimeObjectName_Type()
)
jvmRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jvmRuntimeObjectName.setStatus("current")


class _JvmRuntimeType_Type(DisplayString):
    """Custom type jvmRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JvmRuntimeType_Type.__name__ = "DisplayString"
_JvmRuntimeType_Object = MibTableColumn
jvmRuntimeType = _JvmRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 340, 1, 10),
    _JvmRuntimeType_Type()
)
jvmRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jvmRuntimeType.setStatus("current")


class _JvmRuntimeName_Type(DisplayString):
    """Custom type jvmRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JvmRuntimeName_Type.__name__ = "DisplayString"
_JvmRuntimeName_Object = MibTableColumn
jvmRuntimeName = _JvmRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 340, 1, 15),
    _JvmRuntimeName_Type()
)
jvmRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jvmRuntimeName.setStatus("current")


class _JvmRuntimeParent_Type(DisplayString):
    """Custom type jvmRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JvmRuntimeParent_Type.__name__ = "DisplayString"
_JvmRuntimeParent_Object = MibTableColumn
jvmRuntimeParent = _JvmRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 340, 1, 20),
    _JvmRuntimeParent_Type()
)
jvmRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jvmRuntimeParent.setStatus("current")
_JvmRuntimeHeapFreeCurrent_Type = Counter64
_JvmRuntimeHeapFreeCurrent_Object = MibTableColumn
jvmRuntimeHeapFreeCurrent = _JvmRuntimeHeapFreeCurrent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 340, 1, 25),
    _JvmRuntimeHeapFreeCurrent_Type()
)
jvmRuntimeHeapFreeCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jvmRuntimeHeapFreeCurrent.setStatus("current")
_JvmRuntimeHeapSizeCurrent_Type = Counter64
_JvmRuntimeHeapSizeCurrent_Object = MibTableColumn
jvmRuntimeHeapSizeCurrent = _JvmRuntimeHeapSizeCurrent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 340, 1, 30),
    _JvmRuntimeHeapSizeCurrent_Type()
)
jvmRuntimeHeapSizeCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jvmRuntimeHeapSizeCurrent.setStatus("current")


class _JvmRuntimeJavaVersion_Type(DisplayString):
    """Custom type jvmRuntimeJavaVersion based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_JvmRuntimeJavaVersion_Type.__name__ = "DisplayString"
_JvmRuntimeJavaVersion_Object = MibTableColumn
jvmRuntimeJavaVersion = _JvmRuntimeJavaVersion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 340, 1, 35),
    _JvmRuntimeJavaVersion_Type()
)
jvmRuntimeJavaVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jvmRuntimeJavaVersion.setStatus("current")


class _JvmRuntimeJavaVendor_Type(DisplayString):
    """Custom type jvmRuntimeJavaVendor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_JvmRuntimeJavaVendor_Type.__name__ = "DisplayString"
_JvmRuntimeJavaVendor_Object = MibTableColumn
jvmRuntimeJavaVendor = _JvmRuntimeJavaVendor_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 340, 1, 40),
    _JvmRuntimeJavaVendor_Type()
)
jvmRuntimeJavaVendor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jvmRuntimeJavaVendor.setStatus("current")


class _JvmRuntimeOSName_Type(DisplayString):
    """Custom type jvmRuntimeOSName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_JvmRuntimeOSName_Type.__name__ = "DisplayString"
_JvmRuntimeOSName_Object = MibTableColumn
jvmRuntimeOSName = _JvmRuntimeOSName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 340, 1, 45),
    _JvmRuntimeOSName_Type()
)
jvmRuntimeOSName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jvmRuntimeOSName.setStatus("current")


class _JvmRuntimeOSVersion_Type(DisplayString):
    """Custom type jvmRuntimeOSVersion based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_JvmRuntimeOSVersion_Type.__name__ = "DisplayString"
_JvmRuntimeOSVersion_Object = MibTableColumn
jvmRuntimeOSVersion = _JvmRuntimeOSVersion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 340, 1, 50),
    _JvmRuntimeOSVersion_Type()
)
jvmRuntimeOSVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jvmRuntimeOSVersion.setStatus("current")
_LogBroadcasterRuntimeTable_Object = MibTable
logBroadcasterRuntimeTable = _LogBroadcasterRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 350)
)
if mibBuilder.loadTexts:
    logBroadcasterRuntimeTable.setStatus("current")
_LogBroadcasterRuntimeEntry_Object = MibTableRow
logBroadcasterRuntimeEntry = _LogBroadcasterRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 350, 1)
)
logBroadcasterRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "logBroadcasterRuntimeIndex"),
)
if mibBuilder.loadTexts:
    logBroadcasterRuntimeEntry.setStatus("current")


class _LogBroadcasterRuntimeIndex_Type(DisplayString):
    """Custom type logBroadcasterRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_LogBroadcasterRuntimeIndex_Type.__name__ = "DisplayString"
_LogBroadcasterRuntimeIndex_Object = MibTableColumn
logBroadcasterRuntimeIndex = _LogBroadcasterRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 350, 1, 1),
    _LogBroadcasterRuntimeIndex_Type()
)
logBroadcasterRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logBroadcasterRuntimeIndex.setStatus("current")


class _LogBroadcasterRuntimeObjectName_Type(DisplayString):
    """Custom type logBroadcasterRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_LogBroadcasterRuntimeObjectName_Type.__name__ = "DisplayString"
_LogBroadcasterRuntimeObjectName_Object = MibTableColumn
logBroadcasterRuntimeObjectName = _LogBroadcasterRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 350, 1, 5),
    _LogBroadcasterRuntimeObjectName_Type()
)
logBroadcasterRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logBroadcasterRuntimeObjectName.setStatus("current")


class _LogBroadcasterRuntimeType_Type(DisplayString):
    """Custom type logBroadcasterRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_LogBroadcasterRuntimeType_Type.__name__ = "DisplayString"
_LogBroadcasterRuntimeType_Object = MibTableColumn
logBroadcasterRuntimeType = _LogBroadcasterRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 350, 1, 10),
    _LogBroadcasterRuntimeType_Type()
)
logBroadcasterRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logBroadcasterRuntimeType.setStatus("current")


class _LogBroadcasterRuntimeName_Type(DisplayString):
    """Custom type logBroadcasterRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_LogBroadcasterRuntimeName_Type.__name__ = "DisplayString"
_LogBroadcasterRuntimeName_Object = MibTableColumn
logBroadcasterRuntimeName = _LogBroadcasterRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 350, 1, 15),
    _LogBroadcasterRuntimeName_Type()
)
logBroadcasterRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logBroadcasterRuntimeName.setStatus("current")


class _LogBroadcasterRuntimeParent_Type(DisplayString):
    """Custom type logBroadcasterRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_LogBroadcasterRuntimeParent_Type.__name__ = "DisplayString"
_LogBroadcasterRuntimeParent_Object = MibTableColumn
logBroadcasterRuntimeParent = _LogBroadcasterRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 350, 1, 20),
    _LogBroadcasterRuntimeParent_Type()
)
logBroadcasterRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logBroadcasterRuntimeParent.setStatus("current")
_LogBroadcasterRuntimeMessagesLogged_Type = Counter64
_LogBroadcasterRuntimeMessagesLogged_Object = MibTableColumn
logBroadcasterRuntimeMessagesLogged = _LogBroadcasterRuntimeMessagesLogged_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 350, 1, 25),
    _LogBroadcasterRuntimeMessagesLogged_Type()
)
logBroadcasterRuntimeMessagesLogged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logBroadcasterRuntimeMessagesLogged.setStatus("current")
_MessageDrivenEJBRuntimeTable_Object = MibTable
messageDrivenEJBRuntimeTable = _MessageDrivenEJBRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 351)
)
if mibBuilder.loadTexts:
    messageDrivenEJBRuntimeTable.setStatus("current")
_MessageDrivenEJBRuntimeEntry_Object = MibTableRow
messageDrivenEJBRuntimeEntry = _MessageDrivenEJBRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 351, 1)
)
messageDrivenEJBRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "messageDrivenEJBRuntimeIndex"),
)
if mibBuilder.loadTexts:
    messageDrivenEJBRuntimeEntry.setStatus("current")


class _MessageDrivenEJBRuntimeIndex_Type(DisplayString):
    """Custom type messageDrivenEJBRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_MessageDrivenEJBRuntimeIndex_Type.__name__ = "DisplayString"
_MessageDrivenEJBRuntimeIndex_Object = MibTableColumn
messageDrivenEJBRuntimeIndex = _MessageDrivenEJBRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 351, 1, 1),
    _MessageDrivenEJBRuntimeIndex_Type()
)
messageDrivenEJBRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messageDrivenEJBRuntimeIndex.setStatus("current")


class _MessageDrivenEJBRuntimeObjectName_Type(DisplayString):
    """Custom type messageDrivenEJBRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_MessageDrivenEJBRuntimeObjectName_Type.__name__ = "DisplayString"
_MessageDrivenEJBRuntimeObjectName_Object = MibTableColumn
messageDrivenEJBRuntimeObjectName = _MessageDrivenEJBRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 351, 1, 5),
    _MessageDrivenEJBRuntimeObjectName_Type()
)
messageDrivenEJBRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messageDrivenEJBRuntimeObjectName.setStatus("current")


class _MessageDrivenEJBRuntimeType_Type(DisplayString):
    """Custom type messageDrivenEJBRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_MessageDrivenEJBRuntimeType_Type.__name__ = "DisplayString"
_MessageDrivenEJBRuntimeType_Object = MibTableColumn
messageDrivenEJBRuntimeType = _MessageDrivenEJBRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 351, 1, 10),
    _MessageDrivenEJBRuntimeType_Type()
)
messageDrivenEJBRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messageDrivenEJBRuntimeType.setStatus("current")


class _MessageDrivenEJBRuntimeName_Type(DisplayString):
    """Custom type messageDrivenEJBRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_MessageDrivenEJBRuntimeName_Type.__name__ = "DisplayString"
_MessageDrivenEJBRuntimeName_Object = MibTableColumn
messageDrivenEJBRuntimeName = _MessageDrivenEJBRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 351, 1, 15),
    _MessageDrivenEJBRuntimeName_Type()
)
messageDrivenEJBRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messageDrivenEJBRuntimeName.setStatus("current")


class _MessageDrivenEJBRuntimeParent_Type(DisplayString):
    """Custom type messageDrivenEJBRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_MessageDrivenEJBRuntimeParent_Type.__name__ = "DisplayString"
_MessageDrivenEJBRuntimeParent_Object = MibTableColumn
messageDrivenEJBRuntimeParent = _MessageDrivenEJBRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 351, 1, 20),
    _MessageDrivenEJBRuntimeParent_Type()
)
messageDrivenEJBRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messageDrivenEJBRuntimeParent.setStatus("current")
_MessageDrivenEJBRuntimeJMSConnectionAlive_Type = Integer32
_MessageDrivenEJBRuntimeJMSConnectionAlive_Object = MibTableColumn
messageDrivenEJBRuntimeJMSConnectionAlive = _MessageDrivenEJBRuntimeJMSConnectionAlive_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 351, 1, 25),
    _MessageDrivenEJBRuntimeJMSConnectionAlive_Type()
)
messageDrivenEJBRuntimeJMSConnectionAlive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messageDrivenEJBRuntimeJMSConnectionAlive.setStatus("current")
_MessageDrivenEJBRuntimeLastExceptionAsString_Type = OctetString
_MessageDrivenEJBRuntimeLastExceptionAsString_Object = MibTableColumn
messageDrivenEJBRuntimeLastExceptionAsString = _MessageDrivenEJBRuntimeLastExceptionAsString_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 351, 1, 26),
    _MessageDrivenEJBRuntimeLastExceptionAsString_Type()
)
messageDrivenEJBRuntimeLastExceptionAsString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messageDrivenEJBRuntimeLastExceptionAsString.setStatus("current")
_MessageDrivenEJBRuntimeDestination_Type = OctetString
_MessageDrivenEJBRuntimeDestination_Object = MibTableColumn
messageDrivenEJBRuntimeDestination = _MessageDrivenEJBRuntimeDestination_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 351, 1, 27),
    _MessageDrivenEJBRuntimeDestination_Type()
)
messageDrivenEJBRuntimeDestination.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messageDrivenEJBRuntimeDestination.setStatus("current")
_MessageDrivenEJBRuntimeMDBStatus_Type = OctetString
_MessageDrivenEJBRuntimeMDBStatus_Object = MibTableColumn
messageDrivenEJBRuntimeMDBStatus = _MessageDrivenEJBRuntimeMDBStatus_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 351, 1, 28),
    _MessageDrivenEJBRuntimeMDBStatus_Type()
)
messageDrivenEJBRuntimeMDBStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messageDrivenEJBRuntimeMDBStatus.setStatus("current")
_MessageDrivenEJBRuntimeEJBName_Type = OctetString
_MessageDrivenEJBRuntimeEJBName_Object = MibTableColumn
messageDrivenEJBRuntimeEJBName = _MessageDrivenEJBRuntimeEJBName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 351, 1, 29),
    _MessageDrivenEJBRuntimeEJBName_Type()
)
messageDrivenEJBRuntimeEJBName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messageDrivenEJBRuntimeEJBName.setStatus("current")
_MessageDrivenEJBRuntimeConnectionStatus_Type = OctetString
_MessageDrivenEJBRuntimeConnectionStatus_Object = MibTableColumn
messageDrivenEJBRuntimeConnectionStatus = _MessageDrivenEJBRuntimeConnectionStatus_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 351, 1, 30),
    _MessageDrivenEJBRuntimeConnectionStatus_Type()
)
messageDrivenEJBRuntimeConnectionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messageDrivenEJBRuntimeConnectionStatus.setStatus("current")
_MessageDrivenEJBRuntimeSuspendCount_Type = Integer32
_MessageDrivenEJBRuntimeSuspendCount_Object = MibTableColumn
messageDrivenEJBRuntimeSuspendCount = _MessageDrivenEJBRuntimeSuspendCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 351, 1, 31),
    _MessageDrivenEJBRuntimeSuspendCount_Type()
)
messageDrivenEJBRuntimeSuspendCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messageDrivenEJBRuntimeSuspendCount.setStatus("current")
_MessageDrivenEJBRuntimeProcessedMessageCount_Type = Counter64
_MessageDrivenEJBRuntimeProcessedMessageCount_Object = MibTableColumn
messageDrivenEJBRuntimeProcessedMessageCount = _MessageDrivenEJBRuntimeProcessedMessageCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 351, 1, 32),
    _MessageDrivenEJBRuntimeProcessedMessageCount_Type()
)
messageDrivenEJBRuntimeProcessedMessageCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messageDrivenEJBRuntimeProcessedMessageCount.setStatus("current")
_MessageDrivenEJBRuntimeJmsClientID_Type = OctetString
_MessageDrivenEJBRuntimeJmsClientID_Object = MibTableColumn
messageDrivenEJBRuntimeJmsClientID = _MessageDrivenEJBRuntimeJmsClientID_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 351, 1, 33),
    _MessageDrivenEJBRuntimeJmsClientID_Type()
)
messageDrivenEJBRuntimeJmsClientID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messageDrivenEJBRuntimeJmsClientID.setStatus("current")
_MessagingBridgeRuntimeTable_Object = MibTable
messagingBridgeRuntimeTable = _MessagingBridgeRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 354)
)
if mibBuilder.loadTexts:
    messagingBridgeRuntimeTable.setStatus("current")
_MessagingBridgeRuntimeEntry_Object = MibTableRow
messagingBridgeRuntimeEntry = _MessagingBridgeRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 354, 1)
)
messagingBridgeRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "messagingBridgeRuntimeIndex"),
)
if mibBuilder.loadTexts:
    messagingBridgeRuntimeEntry.setStatus("current")


class _MessagingBridgeRuntimeIndex_Type(DisplayString):
    """Custom type messagingBridgeRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_MessagingBridgeRuntimeIndex_Type.__name__ = "DisplayString"
_MessagingBridgeRuntimeIndex_Object = MibTableColumn
messagingBridgeRuntimeIndex = _MessagingBridgeRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 354, 1, 1),
    _MessagingBridgeRuntimeIndex_Type()
)
messagingBridgeRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeRuntimeIndex.setStatus("current")


class _MessagingBridgeRuntimeObjectName_Type(DisplayString):
    """Custom type messagingBridgeRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_MessagingBridgeRuntimeObjectName_Type.__name__ = "DisplayString"
_MessagingBridgeRuntimeObjectName_Object = MibTableColumn
messagingBridgeRuntimeObjectName = _MessagingBridgeRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 354, 1, 5),
    _MessagingBridgeRuntimeObjectName_Type()
)
messagingBridgeRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeRuntimeObjectName.setStatus("current")


class _MessagingBridgeRuntimeType_Type(DisplayString):
    """Custom type messagingBridgeRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_MessagingBridgeRuntimeType_Type.__name__ = "DisplayString"
_MessagingBridgeRuntimeType_Object = MibTableColumn
messagingBridgeRuntimeType = _MessagingBridgeRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 354, 1, 10),
    _MessagingBridgeRuntimeType_Type()
)
messagingBridgeRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeRuntimeType.setStatus("current")


class _MessagingBridgeRuntimeName_Type(DisplayString):
    """Custom type messagingBridgeRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_MessagingBridgeRuntimeName_Type.__name__ = "DisplayString"
_MessagingBridgeRuntimeName_Object = MibTableColumn
messagingBridgeRuntimeName = _MessagingBridgeRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 354, 1, 15),
    _MessagingBridgeRuntimeName_Type()
)
messagingBridgeRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeRuntimeName.setStatus("current")


class _MessagingBridgeRuntimeParent_Type(DisplayString):
    """Custom type messagingBridgeRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_MessagingBridgeRuntimeParent_Type.__name__ = "DisplayString"
_MessagingBridgeRuntimeParent_Object = MibTableColumn
messagingBridgeRuntimeParent = _MessagingBridgeRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 354, 1, 20),
    _MessagingBridgeRuntimeParent_Type()
)
messagingBridgeRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeRuntimeParent.setStatus("current")
_MessagingBridgeRuntimeState_Type = DisplayString
_MessagingBridgeRuntimeState_Object = MibTableColumn
messagingBridgeRuntimeState = _MessagingBridgeRuntimeState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 354, 1, 21),
    _MessagingBridgeRuntimeState_Type()
)
messagingBridgeRuntimeState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeRuntimeState.setStatus("current")
_MessagingBridgeRuntimeDescription_Type = DisplayString
_MessagingBridgeRuntimeDescription_Object = MibTableColumn
messagingBridgeRuntimeDescription = _MessagingBridgeRuntimeDescription_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 354, 1, 22),
    _MessagingBridgeRuntimeDescription_Type()
)
messagingBridgeRuntimeDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeRuntimeDescription.setStatus("current")
_NonXAResourceRuntimeTable_Object = MibTable
nonXAResourceRuntimeTable = _NonXAResourceRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 356)
)
if mibBuilder.loadTexts:
    nonXAResourceRuntimeTable.setStatus("current")
_NonXAResourceRuntimeEntry_Object = MibTableRow
nonXAResourceRuntimeEntry = _NonXAResourceRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 356, 1)
)
nonXAResourceRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "nonXAResourceRuntimeIndex"),
)
if mibBuilder.loadTexts:
    nonXAResourceRuntimeEntry.setStatus("current")


class _NonXAResourceRuntimeIndex_Type(DisplayString):
    """Custom type nonXAResourceRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_NonXAResourceRuntimeIndex_Type.__name__ = "DisplayString"
_NonXAResourceRuntimeIndex_Object = MibTableColumn
nonXAResourceRuntimeIndex = _NonXAResourceRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 356, 1, 1),
    _NonXAResourceRuntimeIndex_Type()
)
nonXAResourceRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nonXAResourceRuntimeIndex.setStatus("current")


class _NonXAResourceRuntimeObjectName_Type(DisplayString):
    """Custom type nonXAResourceRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_NonXAResourceRuntimeObjectName_Type.__name__ = "DisplayString"
_NonXAResourceRuntimeObjectName_Object = MibTableColumn
nonXAResourceRuntimeObjectName = _NonXAResourceRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 356, 1, 5),
    _NonXAResourceRuntimeObjectName_Type()
)
nonXAResourceRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nonXAResourceRuntimeObjectName.setStatus("current")


class _NonXAResourceRuntimeType_Type(DisplayString):
    """Custom type nonXAResourceRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_NonXAResourceRuntimeType_Type.__name__ = "DisplayString"
_NonXAResourceRuntimeType_Object = MibTableColumn
nonXAResourceRuntimeType = _NonXAResourceRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 356, 1, 10),
    _NonXAResourceRuntimeType_Type()
)
nonXAResourceRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nonXAResourceRuntimeType.setStatus("current")


class _NonXAResourceRuntimeName_Type(DisplayString):
    """Custom type nonXAResourceRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_NonXAResourceRuntimeName_Type.__name__ = "DisplayString"
_NonXAResourceRuntimeName_Object = MibTableColumn
nonXAResourceRuntimeName = _NonXAResourceRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 356, 1, 15),
    _NonXAResourceRuntimeName_Type()
)
nonXAResourceRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nonXAResourceRuntimeName.setStatus("current")


class _NonXAResourceRuntimeParent_Type(DisplayString):
    """Custom type nonXAResourceRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_NonXAResourceRuntimeParent_Type.__name__ = "DisplayString"
_NonXAResourceRuntimeParent_Object = MibTableColumn
nonXAResourceRuntimeParent = _NonXAResourceRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 356, 1, 20),
    _NonXAResourceRuntimeParent_Type()
)
nonXAResourceRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nonXAResourceRuntimeParent.setStatus("current")
_NonXAResourceRuntimeTransactionTotalCount_Type = Counter64
_NonXAResourceRuntimeTransactionTotalCount_Object = MibTableColumn
nonXAResourceRuntimeTransactionTotalCount = _NonXAResourceRuntimeTransactionTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 356, 1, 25),
    _NonXAResourceRuntimeTransactionTotalCount_Type()
)
nonXAResourceRuntimeTransactionTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nonXAResourceRuntimeTransactionTotalCount.setStatus("current")
_NonXAResourceRuntimeTransactionCommittedTotalCount_Type = Counter64
_NonXAResourceRuntimeTransactionCommittedTotalCount_Object = MibTableColumn
nonXAResourceRuntimeTransactionCommittedTotalCount = _NonXAResourceRuntimeTransactionCommittedTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 356, 1, 30),
    _NonXAResourceRuntimeTransactionCommittedTotalCount_Type()
)
nonXAResourceRuntimeTransactionCommittedTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nonXAResourceRuntimeTransactionCommittedTotalCount.setStatus("current")
_NonXAResourceRuntimeTransactionRolledBackTotalCount_Type = Counter64
_NonXAResourceRuntimeTransactionRolledBackTotalCount_Object = MibTableColumn
nonXAResourceRuntimeTransactionRolledBackTotalCount = _NonXAResourceRuntimeTransactionRolledBackTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 356, 1, 35),
    _NonXAResourceRuntimeTransactionRolledBackTotalCount_Type()
)
nonXAResourceRuntimeTransactionRolledBackTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nonXAResourceRuntimeTransactionRolledBackTotalCount.setStatus("current")
_NonXAResourceRuntimeTransactionHeuristicsTotalCount_Type = Counter64
_NonXAResourceRuntimeTransactionHeuristicsTotalCount_Object = MibTableColumn
nonXAResourceRuntimeTransactionHeuristicsTotalCount = _NonXAResourceRuntimeTransactionHeuristicsTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 356, 1, 40),
    _NonXAResourceRuntimeTransactionHeuristicsTotalCount_Type()
)
nonXAResourceRuntimeTransactionHeuristicsTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nonXAResourceRuntimeTransactionHeuristicsTotalCount.setStatus("current")


class _NonXAResourceRuntimeNonXAResourceName_Type(DisplayString):
    """Custom type nonXAResourceRuntimeNonXAResourceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_NonXAResourceRuntimeNonXAResourceName_Type.__name__ = "DisplayString"
_NonXAResourceRuntimeNonXAResourceName_Object = MibTableColumn
nonXAResourceRuntimeNonXAResourceName = _NonXAResourceRuntimeNonXAResourceName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 356, 1, 45),
    _NonXAResourceRuntimeNonXAResourceName_Type()
)
nonXAResourceRuntimeNonXAResourceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nonXAResourceRuntimeNonXAResourceName.setStatus("current")
_ServerRuntimeTable_Object = MibTable
serverRuntimeTable = _ServerRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360)
)
if mibBuilder.loadTexts:
    serverRuntimeTable.setStatus("current")
_ServerRuntimeEntry_Object = MibTableRow
serverRuntimeEntry = _ServerRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1)
)
serverRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "serverRuntimeIndex"),
)
if mibBuilder.loadTexts:
    serverRuntimeEntry.setStatus("current")


class _ServerRuntimeIndex_Type(DisplayString):
    """Custom type serverRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ServerRuntimeIndex_Type.__name__ = "DisplayString"
_ServerRuntimeIndex_Object = MibTableColumn
serverRuntimeIndex = _ServerRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 1),
    _ServerRuntimeIndex_Type()
)
serverRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeIndex.setStatus("current")


class _ServerRuntimeObjectName_Type(DisplayString):
    """Custom type serverRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerRuntimeObjectName_Type.__name__ = "DisplayString"
_ServerRuntimeObjectName_Object = MibTableColumn
serverRuntimeObjectName = _ServerRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 5),
    _ServerRuntimeObjectName_Type()
)
serverRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeObjectName.setStatus("current")


class _ServerRuntimeType_Type(DisplayString):
    """Custom type serverRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServerRuntimeType_Type.__name__ = "DisplayString"
_ServerRuntimeType_Object = MibTableColumn
serverRuntimeType = _ServerRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 10),
    _ServerRuntimeType_Type()
)
serverRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeType.setStatus("current")


class _ServerRuntimeName_Type(DisplayString):
    """Custom type serverRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServerRuntimeName_Type.__name__ = "DisplayString"
_ServerRuntimeName_Object = MibTableColumn
serverRuntimeName = _ServerRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 15),
    _ServerRuntimeName_Type()
)
serverRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeName.setStatus("current")


class _ServerRuntimeParent_Type(DisplayString):
    """Custom type serverRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerRuntimeParent_Type.__name__ = "DisplayString"
_ServerRuntimeParent_Object = MibTableColumn
serverRuntimeParent = _ServerRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 20),
    _ServerRuntimeParent_Type()
)
serverRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeParent.setStatus("current")
_ServerRuntimeActivationTime_Type = Counter64
_ServerRuntimeActivationTime_Object = MibTableColumn
serverRuntimeActivationTime = _ServerRuntimeActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 25),
    _ServerRuntimeActivationTime_Type()
)
serverRuntimeActivationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeActivationTime.setStatus("current")


class _ServerRuntimeListenAddress_Type(DisplayString):
    """Custom type serverRuntimeListenAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerRuntimeListenAddress_Type.__name__ = "DisplayString"
_ServerRuntimeListenAddress_Object = MibTableColumn
serverRuntimeListenAddress = _ServerRuntimeListenAddress_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 30),
    _ServerRuntimeListenAddress_Type()
)
serverRuntimeListenAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeListenAddress.setStatus("current")
_ServerRuntimeListenPort_Type = Integer32
_ServerRuntimeListenPort_Object = MibTableColumn
serverRuntimeListenPort = _ServerRuntimeListenPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 35),
    _ServerRuntimeListenPort_Type()
)
serverRuntimeListenPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeListenPort.setStatus("current")


class _ServerRuntimeSSLListenAddress_Type(DisplayString):
    """Custom type serverRuntimeSSLListenAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerRuntimeSSLListenAddress_Type.__name__ = "DisplayString"
_ServerRuntimeSSLListenAddress_Object = MibTableColumn
serverRuntimeSSLListenAddress = _ServerRuntimeSSLListenAddress_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 40),
    _ServerRuntimeSSLListenAddress_Type()
)
serverRuntimeSSLListenAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeSSLListenAddress.setStatus("current")


class _ServerRuntimeJVMID_Type(DisplayString):
    """Custom type serverRuntimeJVMID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServerRuntimeJVMID_Type.__name__ = "DisplayString"
_ServerRuntimeJVMID_Object = MibTableColumn
serverRuntimeJVMID = _ServerRuntimeJVMID_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 45),
    _ServerRuntimeJVMID_Type()
)
serverRuntimeJVMID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeJVMID.setStatus("current")
_ServerRuntimeOpenSocketsCurrentCount_Type = Integer32
_ServerRuntimeOpenSocketsCurrentCount_Object = MibTableColumn
serverRuntimeOpenSocketsCurrentCount = _ServerRuntimeOpenSocketsCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 50),
    _ServerRuntimeOpenSocketsCurrentCount_Type()
)
serverRuntimeOpenSocketsCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeOpenSocketsCurrentCount.setStatus("current")
_ServerRuntimeRestartsTotalCount_Type = Integer32
_ServerRuntimeRestartsTotalCount_Object = MibTableColumn
serverRuntimeRestartsTotalCount = _ServerRuntimeRestartsTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 55),
    _ServerRuntimeRestartsTotalCount_Type()
)
serverRuntimeRestartsTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeRestartsTotalCount.setStatus("current")


class _ServerRuntimeState_Type(DisplayString):
    """Custom type serverRuntimeState based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ServerRuntimeState_Type.__name__ = "DisplayString"
_ServerRuntimeState_Object = MibTableColumn
serverRuntimeState = _ServerRuntimeState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 60),
    _ServerRuntimeState_Type()
)
serverRuntimeState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeState.setStatus("current")


class _ServerRuntimeWeblogicVersion_Type(DisplayString):
    """Custom type serverRuntimeWeblogicVersion based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ServerRuntimeWeblogicVersion_Type.__name__ = "DisplayString"
_ServerRuntimeWeblogicVersion_Object = MibTableColumn
serverRuntimeWeblogicVersion = _ServerRuntimeWeblogicVersion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 65),
    _ServerRuntimeWeblogicVersion_Type()
)
serverRuntimeWeblogicVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeWeblogicVersion.setStatus("current")


class _ServerRuntimeAdminServerHost_Type(DisplayString):
    """Custom type serverRuntimeAdminServerHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerRuntimeAdminServerHost_Type.__name__ = "DisplayString"
_ServerRuntimeAdminServerHost_Object = MibTableColumn
serverRuntimeAdminServerHost = _ServerRuntimeAdminServerHost_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 70),
    _ServerRuntimeAdminServerHost_Type()
)
serverRuntimeAdminServerHost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeAdminServerHost.setStatus("current")
_ServerRuntimeAdminServerListenPort_Type = Integer32
_ServerRuntimeAdminServerListenPort_Object = MibTableColumn
serverRuntimeAdminServerListenPort = _ServerRuntimeAdminServerListenPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 75),
    _ServerRuntimeAdminServerListenPort_Type()
)
serverRuntimeAdminServerListenPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeAdminServerListenPort.setStatus("current")


class _ServerRuntimeClusterRuntime_Type(DisplayString):
    """Custom type serverRuntimeClusterRuntime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerRuntimeClusterRuntime_Type.__name__ = "DisplayString"
_ServerRuntimeClusterRuntime_Object = MibTableColumn
serverRuntimeClusterRuntime = _ServerRuntimeClusterRuntime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 80),
    _ServerRuntimeClusterRuntime_Type()
)
serverRuntimeClusterRuntime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeClusterRuntime.setStatus("current")
_ServerRuntimeAdministrationPort_Type = Integer32
_ServerRuntimeAdministrationPort_Object = MibTableColumn
serverRuntimeAdministrationPort = _ServerRuntimeAdministrationPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 81),
    _ServerRuntimeAdministrationPort_Type()
)
serverRuntimeAdministrationPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeAdministrationPort.setStatus("current")
_ServerRuntimeSocketsOpenedTotalCount_Type = Counter64
_ServerRuntimeSocketsOpenedTotalCount_Object = MibTableColumn
serverRuntimeSocketsOpenedTotalCount = _ServerRuntimeSocketsOpenedTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 82),
    _ServerRuntimeSocketsOpenedTotalCount_Type()
)
serverRuntimeSocketsOpenedTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeSocketsOpenedTotalCount.setStatus("current")
_ServerRuntimeSSLListenPort_Type = Integer32
_ServerRuntimeSSLListenPort_Object = MibTableColumn
serverRuntimeSSLListenPort = _ServerRuntimeSSLListenPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 83),
    _ServerRuntimeSSLListenPort_Type()
)
serverRuntimeSSLListenPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeSSLListenPort.setStatus("current")
_ServerRuntimeAdministrationPortEnabled_Type = Integer32
_ServerRuntimeAdministrationPortEnabled_Object = MibTableColumn
serverRuntimeAdministrationPortEnabled = _ServerRuntimeAdministrationPortEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 84),
    _ServerRuntimeAdministrationPortEnabled_Type()
)
serverRuntimeAdministrationPortEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeAdministrationPortEnabled.setStatus("current")
_ServerRuntimeAdminServer_Type = Integer32
_ServerRuntimeAdminServer_Object = MibTableColumn
serverRuntimeAdminServer = _ServerRuntimeAdminServer_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 85),
    _ServerRuntimeAdminServer_Type()
)
serverRuntimeAdminServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeAdminServer.setStatus("current")
_ServerRuntimeAdminServerListenPortSecure_Type = Integer32
_ServerRuntimeAdminServerListenPortSecure_Object = MibTableColumn
serverRuntimeAdminServerListenPortSecure = _ServerRuntimeAdminServerListenPortSecure_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 86),
    _ServerRuntimeAdminServerListenPortSecure_Type()
)
serverRuntimeAdminServerListenPortSecure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeAdminServerListenPortSecure.setStatus("current")
_ServerRuntimeListenPortEnabled_Type = Integer32
_ServerRuntimeListenPortEnabled_Object = MibTableColumn
serverRuntimeListenPortEnabled = _ServerRuntimeListenPortEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 87),
    _ServerRuntimeListenPortEnabled_Type()
)
serverRuntimeListenPortEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeListenPortEnabled.setStatus("current")
_ServerRuntimeSSLListenPortEnabled_Type = Integer32
_ServerRuntimeSSLListenPortEnabled_Object = MibTableColumn
serverRuntimeSSLListenPortEnabled = _ServerRuntimeSSLListenPortEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 88),
    _ServerRuntimeSSLListenPortEnabled_Type()
)
serverRuntimeSSLListenPortEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeSSLListenPortEnabled.setStatus("current")
_ServerRuntimeRestartRequired_Type = OctetString
_ServerRuntimeRestartRequired_Object = MibTableColumn
serverRuntimeRestartRequired = _ServerRuntimeRestartRequired_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 89),
    _ServerRuntimeRestartRequired_Type()
)
serverRuntimeRestartRequired.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeRestartRequired.setStatus("current")
_ServerRuntimeServerClasspath_Type = OctetString
_ServerRuntimeServerClasspath_Object = MibTableColumn
serverRuntimeServerClasspath = _ServerRuntimeServerClasspath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 90),
    _ServerRuntimeServerClasspath_Type()
)
serverRuntimeServerClasspath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeServerClasspath.setStatus("current")
_ServerRuntimeCurrentMachine_Type = OctetString
_ServerRuntimeCurrentMachine_Object = MibTableColumn
serverRuntimeCurrentMachine = _ServerRuntimeCurrentMachine_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 91),
    _ServerRuntimeCurrentMachine_Type()
)
serverRuntimeCurrentMachine.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeCurrentMachine.setStatus("current")
_ServerRuntimeAdministrationURL_Type = OctetString
_ServerRuntimeAdministrationURL_Object = MibTableColumn
serverRuntimeAdministrationURL = _ServerRuntimeAdministrationURL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 92),
    _ServerRuntimeAdministrationURL_Type()
)
serverRuntimeAdministrationURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeAdministrationURL.setStatus("current")
_ServerRuntimeDefaultURL_Type = OctetString
_ServerRuntimeDefaultURL_Object = MibTableColumn
serverRuntimeDefaultURL = _ServerRuntimeDefaultURL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 93),
    _ServerRuntimeDefaultURL_Type()
)
serverRuntimeDefaultURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeDefaultURL.setStatus("current")
_ServerRuntimeStateVal_Type = Integer32
_ServerRuntimeStateVal_Object = MibTableColumn
serverRuntimeStateVal = _ServerRuntimeStateVal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 94),
    _ServerRuntimeStateVal_Type()
)
serverRuntimeStateVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeStateVal.setStatus("current")
_ServerRuntimeCurrentDirectory_Type = OctetString
_ServerRuntimeCurrentDirectory_Object = MibTableColumn
serverRuntimeCurrentDirectory = _ServerRuntimeCurrentDirectory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 360, 1, 95),
    _ServerRuntimeCurrentDirectory_Type()
)
serverRuntimeCurrentDirectory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRuntimeCurrentDirectory.setStatus("current")
_ServerLifeCycleRuntimeTable_Object = MibTable
serverLifeCycleRuntimeTable = _ServerLifeCycleRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 361)
)
if mibBuilder.loadTexts:
    serverLifeCycleRuntimeTable.setStatus("current")
_ServerLifeCycleRuntimeEntry_Object = MibTableRow
serverLifeCycleRuntimeEntry = _ServerLifeCycleRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 361, 1)
)
serverLifeCycleRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "serverLifeCycleRuntimeIndex"),
)
if mibBuilder.loadTexts:
    serverLifeCycleRuntimeEntry.setStatus("current")


class _ServerLifeCycleRuntimeIndex_Type(DisplayString):
    """Custom type serverLifeCycleRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ServerLifeCycleRuntimeIndex_Type.__name__ = "DisplayString"
_ServerLifeCycleRuntimeIndex_Object = MibTableColumn
serverLifeCycleRuntimeIndex = _ServerLifeCycleRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 361, 1, 1),
    _ServerLifeCycleRuntimeIndex_Type()
)
serverLifeCycleRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLifeCycleRuntimeIndex.setStatus("current")


class _ServerLifeCycleRuntimeObjectName_Type(DisplayString):
    """Custom type serverLifeCycleRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerLifeCycleRuntimeObjectName_Type.__name__ = "DisplayString"
_ServerLifeCycleRuntimeObjectName_Object = MibTableColumn
serverLifeCycleRuntimeObjectName = _ServerLifeCycleRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 361, 1, 5),
    _ServerLifeCycleRuntimeObjectName_Type()
)
serverLifeCycleRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLifeCycleRuntimeObjectName.setStatus("current")


class _ServerLifeCycleRuntimeType_Type(DisplayString):
    """Custom type serverLifeCycleRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServerLifeCycleRuntimeType_Type.__name__ = "DisplayString"
_ServerLifeCycleRuntimeType_Object = MibTableColumn
serverLifeCycleRuntimeType = _ServerLifeCycleRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 361, 1, 10),
    _ServerLifeCycleRuntimeType_Type()
)
serverLifeCycleRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLifeCycleRuntimeType.setStatus("current")


class _ServerLifeCycleRuntimeName_Type(DisplayString):
    """Custom type serverLifeCycleRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServerLifeCycleRuntimeName_Type.__name__ = "DisplayString"
_ServerLifeCycleRuntimeName_Object = MibTableColumn
serverLifeCycleRuntimeName = _ServerLifeCycleRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 361, 1, 15),
    _ServerLifeCycleRuntimeName_Type()
)
serverLifeCycleRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLifeCycleRuntimeName.setStatus("current")


class _ServerLifeCycleRuntimeParent_Type(DisplayString):
    """Custom type serverLifeCycleRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerLifeCycleRuntimeParent_Type.__name__ = "DisplayString"
_ServerLifeCycleRuntimeParent_Object = MibTableColumn
serverLifeCycleRuntimeParent = _ServerLifeCycleRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 361, 1, 20),
    _ServerLifeCycleRuntimeParent_Type()
)
serverLifeCycleRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLifeCycleRuntimeParent.setStatus("current")
_ServerLifeCycleRuntimeState_Type = DisplayString
_ServerLifeCycleRuntimeState_Object = MibTableColumn
serverLifeCycleRuntimeState = _ServerLifeCycleRuntimeState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 361, 1, 25),
    _ServerLifeCycleRuntimeState_Type()
)
serverLifeCycleRuntimeState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLifeCycleRuntimeState.setStatus("current")
_ServerLifeCycleRuntimeStateVal_Type = Integer32
_ServerLifeCycleRuntimeStateVal_Object = MibTableColumn
serverLifeCycleRuntimeStateVal = _ServerLifeCycleRuntimeStateVal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 361, 1, 30),
    _ServerLifeCycleRuntimeStateVal_Type()
)
serverLifeCycleRuntimeStateVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLifeCycleRuntimeStateVal.setStatus("current")
_ServerLifeCycleRuntimeNodeManagerRestartCount_Type = Integer32
_ServerLifeCycleRuntimeNodeManagerRestartCount_Object = MibTableColumn
serverLifeCycleRuntimeNodeManagerRestartCount = _ServerLifeCycleRuntimeNodeManagerRestartCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 361, 1, 31),
    _ServerLifeCycleRuntimeNodeManagerRestartCount_Type()
)
serverLifeCycleRuntimeNodeManagerRestartCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLifeCycleRuntimeNodeManagerRestartCount.setStatus("current")
_ManReplicationRuntimeTable_Object = MibTable
manReplicationRuntimeTable = _ManReplicationRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 362)
)
if mibBuilder.loadTexts:
    manReplicationRuntimeTable.setStatus("current")
_ManReplicationRuntimeEntry_Object = MibTableRow
manReplicationRuntimeEntry = _ManReplicationRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 362, 1)
)
manReplicationRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "manReplicationRuntimeIndex"),
)
if mibBuilder.loadTexts:
    manReplicationRuntimeEntry.setStatus("current")


class _ManReplicationRuntimeIndex_Type(DisplayString):
    """Custom type manReplicationRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ManReplicationRuntimeIndex_Type.__name__ = "DisplayString"
_ManReplicationRuntimeIndex_Object = MibTableColumn
manReplicationRuntimeIndex = _ManReplicationRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 362, 1, 1),
    _ManReplicationRuntimeIndex_Type()
)
manReplicationRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    manReplicationRuntimeIndex.setStatus("current")


class _ManReplicationRuntimeObjectName_Type(DisplayString):
    """Custom type manReplicationRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ManReplicationRuntimeObjectName_Type.__name__ = "DisplayString"
_ManReplicationRuntimeObjectName_Object = MibTableColumn
manReplicationRuntimeObjectName = _ManReplicationRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 362, 1, 5),
    _ManReplicationRuntimeObjectName_Type()
)
manReplicationRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    manReplicationRuntimeObjectName.setStatus("current")


class _ManReplicationRuntimeType_Type(DisplayString):
    """Custom type manReplicationRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ManReplicationRuntimeType_Type.__name__ = "DisplayString"
_ManReplicationRuntimeType_Object = MibTableColumn
manReplicationRuntimeType = _ManReplicationRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 362, 1, 10),
    _ManReplicationRuntimeType_Type()
)
manReplicationRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    manReplicationRuntimeType.setStatus("current")


class _ManReplicationRuntimeName_Type(DisplayString):
    """Custom type manReplicationRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ManReplicationRuntimeName_Type.__name__ = "DisplayString"
_ManReplicationRuntimeName_Object = MibTableColumn
manReplicationRuntimeName = _ManReplicationRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 362, 1, 15),
    _ManReplicationRuntimeName_Type()
)
manReplicationRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    manReplicationRuntimeName.setStatus("current")


class _ManReplicationRuntimeParent_Type(DisplayString):
    """Custom type manReplicationRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ManReplicationRuntimeParent_Type.__name__ = "DisplayString"
_ManReplicationRuntimeParent_Object = MibTableColumn
manReplicationRuntimeParent = _ManReplicationRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 362, 1, 20),
    _ManReplicationRuntimeParent_Type()
)
manReplicationRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    manReplicationRuntimeParent.setStatus("current")


class _ManReplicationRuntimeSecondaryServerName_Type(DisplayString):
    """Custom type manReplicationRuntimeSecondaryServerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_ManReplicationRuntimeSecondaryServerName_Type.__name__ = "DisplayString"
_ManReplicationRuntimeSecondaryServerName_Object = MibTableColumn
manReplicationRuntimeSecondaryServerName = _ManReplicationRuntimeSecondaryServerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 362, 1, 25),
    _ManReplicationRuntimeSecondaryServerName_Type()
)
manReplicationRuntimeSecondaryServerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    manReplicationRuntimeSecondaryServerName.setStatus("current")


class _ManReplicationRuntimeSecondaryServerDetails_Type(DisplayString):
    """Custom type manReplicationRuntimeSecondaryServerDetails based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ManReplicationRuntimeSecondaryServerDetails_Type.__name__ = "DisplayString"
_ManReplicationRuntimeSecondaryServerDetails_Object = MibTableColumn
manReplicationRuntimeSecondaryServerDetails = _ManReplicationRuntimeSecondaryServerDetails_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 362, 1, 30),
    _ManReplicationRuntimeSecondaryServerDetails_Type()
)
manReplicationRuntimeSecondaryServerDetails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    manReplicationRuntimeSecondaryServerDetails.setStatus("current")
_ManReplicationRuntimePrimaryCount_Type = Counter64
_ManReplicationRuntimePrimaryCount_Object = MibTableColumn
manReplicationRuntimePrimaryCount = _ManReplicationRuntimePrimaryCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 362, 1, 35),
    _ManReplicationRuntimePrimaryCount_Type()
)
manReplicationRuntimePrimaryCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    manReplicationRuntimePrimaryCount.setStatus("current")
_ManReplicationRuntimeSecondaryCount_Type = Counter64
_ManReplicationRuntimeSecondaryCount_Object = MibTableColumn
manReplicationRuntimeSecondaryCount = _ManReplicationRuntimeSecondaryCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 362, 1, 40),
    _ManReplicationRuntimeSecondaryCount_Type()
)
manReplicationRuntimeSecondaryCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    manReplicationRuntimeSecondaryCount.setStatus("current")


class _ManReplicationRuntimeRemoteClusterReachable_Type(Integer32):
    """Custom type manReplicationRuntimeRemoteClusterReachable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ManReplicationRuntimeRemoteClusterReachable_Type.__name__ = "Integer32"
_ManReplicationRuntimeRemoteClusterReachable_Object = MibTableColumn
manReplicationRuntimeRemoteClusterReachable = _ManReplicationRuntimeRemoteClusterReachable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 362, 1, 45),
    _ManReplicationRuntimeRemoteClusterReachable_Type()
)
manReplicationRuntimeRemoteClusterReachable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    manReplicationRuntimeRemoteClusterReachable.setStatus("current")
_MaxThreadsConstraintRuntimeTable_Object = MibTable
maxThreadsConstraintRuntimeTable = _MaxThreadsConstraintRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 363)
)
if mibBuilder.loadTexts:
    maxThreadsConstraintRuntimeTable.setStatus("current")
_MaxThreadsConstraintRuntimeEntry_Object = MibTableRow
maxThreadsConstraintRuntimeEntry = _MaxThreadsConstraintRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 363, 1)
)
maxThreadsConstraintRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "maxThreadsConstraintRuntimeIndex"),
)
if mibBuilder.loadTexts:
    maxThreadsConstraintRuntimeEntry.setStatus("current")


class _MaxThreadsConstraintRuntimeIndex_Type(DisplayString):
    """Custom type maxThreadsConstraintRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_MaxThreadsConstraintRuntimeIndex_Type.__name__ = "DisplayString"
_MaxThreadsConstraintRuntimeIndex_Object = MibTableColumn
maxThreadsConstraintRuntimeIndex = _MaxThreadsConstraintRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 363, 1, 1),
    _MaxThreadsConstraintRuntimeIndex_Type()
)
maxThreadsConstraintRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    maxThreadsConstraintRuntimeIndex.setStatus("current")


class _MaxThreadsConstraintRuntimeObjectName_Type(DisplayString):
    """Custom type maxThreadsConstraintRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_MaxThreadsConstraintRuntimeObjectName_Type.__name__ = "DisplayString"
_MaxThreadsConstraintRuntimeObjectName_Object = MibTableColumn
maxThreadsConstraintRuntimeObjectName = _MaxThreadsConstraintRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 363, 1, 5),
    _MaxThreadsConstraintRuntimeObjectName_Type()
)
maxThreadsConstraintRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    maxThreadsConstraintRuntimeObjectName.setStatus("current")


class _MaxThreadsConstraintRuntimeType_Type(DisplayString):
    """Custom type maxThreadsConstraintRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_MaxThreadsConstraintRuntimeType_Type.__name__ = "DisplayString"
_MaxThreadsConstraintRuntimeType_Object = MibTableColumn
maxThreadsConstraintRuntimeType = _MaxThreadsConstraintRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 363, 1, 10),
    _MaxThreadsConstraintRuntimeType_Type()
)
maxThreadsConstraintRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    maxThreadsConstraintRuntimeType.setStatus("current")


class _MaxThreadsConstraintRuntimeName_Type(DisplayString):
    """Custom type maxThreadsConstraintRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_MaxThreadsConstraintRuntimeName_Type.__name__ = "DisplayString"
_MaxThreadsConstraintRuntimeName_Object = MibTableColumn
maxThreadsConstraintRuntimeName = _MaxThreadsConstraintRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 363, 1, 15),
    _MaxThreadsConstraintRuntimeName_Type()
)
maxThreadsConstraintRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    maxThreadsConstraintRuntimeName.setStatus("current")


class _MaxThreadsConstraintRuntimeParent_Type(DisplayString):
    """Custom type maxThreadsConstraintRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_MaxThreadsConstraintRuntimeParent_Type.__name__ = "DisplayString"
_MaxThreadsConstraintRuntimeParent_Object = MibTableColumn
maxThreadsConstraintRuntimeParent = _MaxThreadsConstraintRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 363, 1, 20),
    _MaxThreadsConstraintRuntimeParent_Type()
)
maxThreadsConstraintRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    maxThreadsConstraintRuntimeParent.setStatus("current")
_MaxThreadsConstraintRuntimeExecutingRequests_Type = Integer32
_MaxThreadsConstraintRuntimeExecutingRequests_Object = MibTableColumn
maxThreadsConstraintRuntimeExecutingRequests = _MaxThreadsConstraintRuntimeExecutingRequests_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 363, 1, 25),
    _MaxThreadsConstraintRuntimeExecutingRequests_Type()
)
maxThreadsConstraintRuntimeExecutingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    maxThreadsConstraintRuntimeExecutingRequests.setStatus("current")
_MaxThreadsConstraintRuntimeDeferredRequests_Type = Integer32
_MaxThreadsConstraintRuntimeDeferredRequests_Object = MibTableColumn
maxThreadsConstraintRuntimeDeferredRequests = _MaxThreadsConstraintRuntimeDeferredRequests_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 363, 1, 30),
    _MaxThreadsConstraintRuntimeDeferredRequests_Type()
)
maxThreadsConstraintRuntimeDeferredRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    maxThreadsConstraintRuntimeDeferredRequests.setStatus("current")
_MinThreadsConstraintRuntimeTable_Object = MibTable
minThreadsConstraintRuntimeTable = _MinThreadsConstraintRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 364)
)
if mibBuilder.loadTexts:
    minThreadsConstraintRuntimeTable.setStatus("current")
_MinThreadsConstraintRuntimeEntry_Object = MibTableRow
minThreadsConstraintRuntimeEntry = _MinThreadsConstraintRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 364, 1)
)
minThreadsConstraintRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "minThreadsConstraintRuntimeIndex"),
)
if mibBuilder.loadTexts:
    minThreadsConstraintRuntimeEntry.setStatus("current")


class _MinThreadsConstraintRuntimeIndex_Type(DisplayString):
    """Custom type minThreadsConstraintRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_MinThreadsConstraintRuntimeIndex_Type.__name__ = "DisplayString"
_MinThreadsConstraintRuntimeIndex_Object = MibTableColumn
minThreadsConstraintRuntimeIndex = _MinThreadsConstraintRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 364, 1, 1),
    _MinThreadsConstraintRuntimeIndex_Type()
)
minThreadsConstraintRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    minThreadsConstraintRuntimeIndex.setStatus("current")


class _MinThreadsConstraintRuntimeObjectName_Type(DisplayString):
    """Custom type minThreadsConstraintRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_MinThreadsConstraintRuntimeObjectName_Type.__name__ = "DisplayString"
_MinThreadsConstraintRuntimeObjectName_Object = MibTableColumn
minThreadsConstraintRuntimeObjectName = _MinThreadsConstraintRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 364, 1, 5),
    _MinThreadsConstraintRuntimeObjectName_Type()
)
minThreadsConstraintRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    minThreadsConstraintRuntimeObjectName.setStatus("current")


class _MinThreadsConstraintRuntimeType_Type(DisplayString):
    """Custom type minThreadsConstraintRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_MinThreadsConstraintRuntimeType_Type.__name__ = "DisplayString"
_MinThreadsConstraintRuntimeType_Object = MibTableColumn
minThreadsConstraintRuntimeType = _MinThreadsConstraintRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 364, 1, 10),
    _MinThreadsConstraintRuntimeType_Type()
)
minThreadsConstraintRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    minThreadsConstraintRuntimeType.setStatus("current")


class _MinThreadsConstraintRuntimeName_Type(DisplayString):
    """Custom type minThreadsConstraintRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_MinThreadsConstraintRuntimeName_Type.__name__ = "DisplayString"
_MinThreadsConstraintRuntimeName_Object = MibTableColumn
minThreadsConstraintRuntimeName = _MinThreadsConstraintRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 364, 1, 15),
    _MinThreadsConstraintRuntimeName_Type()
)
minThreadsConstraintRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    minThreadsConstraintRuntimeName.setStatus("current")


class _MinThreadsConstraintRuntimeParent_Type(DisplayString):
    """Custom type minThreadsConstraintRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_MinThreadsConstraintRuntimeParent_Type.__name__ = "DisplayString"
_MinThreadsConstraintRuntimeParent_Object = MibTableColumn
minThreadsConstraintRuntimeParent = _MinThreadsConstraintRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 364, 1, 20),
    _MinThreadsConstraintRuntimeParent_Type()
)
minThreadsConstraintRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    minThreadsConstraintRuntimeParent.setStatus("current")
_MinThreadsConstraintRuntimeCompletedRequests_Type = Counter64
_MinThreadsConstraintRuntimeCompletedRequests_Object = MibTableColumn
minThreadsConstraintRuntimeCompletedRequests = _MinThreadsConstraintRuntimeCompletedRequests_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 364, 1, 25),
    _MinThreadsConstraintRuntimeCompletedRequests_Type()
)
minThreadsConstraintRuntimeCompletedRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    minThreadsConstraintRuntimeCompletedRequests.setStatus("current")
_MinThreadsConstraintRuntimePendingRequests_Type = Integer32
_MinThreadsConstraintRuntimePendingRequests_Object = MibTableColumn
minThreadsConstraintRuntimePendingRequests = _MinThreadsConstraintRuntimePendingRequests_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 364, 1, 30),
    _MinThreadsConstraintRuntimePendingRequests_Type()
)
minThreadsConstraintRuntimePendingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    minThreadsConstraintRuntimePendingRequests.setStatus("current")
_MinThreadsConstraintRuntimeExecutingRequests_Type = Integer32
_MinThreadsConstraintRuntimeExecutingRequests_Object = MibTableColumn
minThreadsConstraintRuntimeExecutingRequests = _MinThreadsConstraintRuntimeExecutingRequests_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 364, 1, 35),
    _MinThreadsConstraintRuntimeExecutingRequests_Type()
)
minThreadsConstraintRuntimeExecutingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    minThreadsConstraintRuntimeExecutingRequests.setStatus("current")
_MinThreadsConstraintRuntimeOutOfOrderExecutionCount_Type = Counter64
_MinThreadsConstraintRuntimeOutOfOrderExecutionCount_Object = MibTableColumn
minThreadsConstraintRuntimeOutOfOrderExecutionCount = _MinThreadsConstraintRuntimeOutOfOrderExecutionCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 364, 1, 40),
    _MinThreadsConstraintRuntimeOutOfOrderExecutionCount_Type()
)
minThreadsConstraintRuntimeOutOfOrderExecutionCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    minThreadsConstraintRuntimeOutOfOrderExecutionCount.setStatus("current")
_MinThreadsConstraintRuntimeMustRunCount_Type = Integer32
_MinThreadsConstraintRuntimeMustRunCount_Object = MibTableColumn
minThreadsConstraintRuntimeMustRunCount = _MinThreadsConstraintRuntimeMustRunCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 364, 1, 45),
    _MinThreadsConstraintRuntimeMustRunCount_Type()
)
minThreadsConstraintRuntimeMustRunCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    minThreadsConstraintRuntimeMustRunCount.setStatus("current")
_MinThreadsConstraintRuntimeMaxWaitTime_Type = Counter64
_MinThreadsConstraintRuntimeMaxWaitTime_Object = MibTableColumn
minThreadsConstraintRuntimeMaxWaitTime = _MinThreadsConstraintRuntimeMaxWaitTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 364, 1, 50),
    _MinThreadsConstraintRuntimeMaxWaitTime_Type()
)
minThreadsConstraintRuntimeMaxWaitTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    minThreadsConstraintRuntimeMaxWaitTime.setStatus("current")
_MinThreadsConstraintRuntimeCurrentWaitTime_Type = Counter64
_MinThreadsConstraintRuntimeCurrentWaitTime_Object = MibTableColumn
minThreadsConstraintRuntimeCurrentWaitTime = _MinThreadsConstraintRuntimeCurrentWaitTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 364, 1, 55),
    _MinThreadsConstraintRuntimeCurrentWaitTime_Type()
)
minThreadsConstraintRuntimeCurrentWaitTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    minThreadsConstraintRuntimeCurrentWaitTime.setStatus("current")
_RequestClassRuntimeTable_Object = MibTable
requestClassRuntimeTable = _RequestClassRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 365)
)
if mibBuilder.loadTexts:
    requestClassRuntimeTable.setStatus("current")
_RequestClassRuntimeEntry_Object = MibTableRow
requestClassRuntimeEntry = _RequestClassRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 365, 1)
)
requestClassRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "requestClassRuntimeIndex"),
)
if mibBuilder.loadTexts:
    requestClassRuntimeEntry.setStatus("current")


class _RequestClassRuntimeIndex_Type(DisplayString):
    """Custom type requestClassRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_RequestClassRuntimeIndex_Type.__name__ = "DisplayString"
_RequestClassRuntimeIndex_Object = MibTableColumn
requestClassRuntimeIndex = _RequestClassRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 365, 1, 1),
    _RequestClassRuntimeIndex_Type()
)
requestClassRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    requestClassRuntimeIndex.setStatus("current")


class _RequestClassRuntimeObjectName_Type(DisplayString):
    """Custom type requestClassRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_RequestClassRuntimeObjectName_Type.__name__ = "DisplayString"
_RequestClassRuntimeObjectName_Object = MibTableColumn
requestClassRuntimeObjectName = _RequestClassRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 365, 1, 5),
    _RequestClassRuntimeObjectName_Type()
)
requestClassRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    requestClassRuntimeObjectName.setStatus("current")


class _RequestClassRuntimeType_Type(DisplayString):
    """Custom type requestClassRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_RequestClassRuntimeType_Type.__name__ = "DisplayString"
_RequestClassRuntimeType_Object = MibTableColumn
requestClassRuntimeType = _RequestClassRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 365, 1, 10),
    _RequestClassRuntimeType_Type()
)
requestClassRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    requestClassRuntimeType.setStatus("current")


class _RequestClassRuntimeName_Type(DisplayString):
    """Custom type requestClassRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_RequestClassRuntimeName_Type.__name__ = "DisplayString"
_RequestClassRuntimeName_Object = MibTableColumn
requestClassRuntimeName = _RequestClassRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 365, 1, 15),
    _RequestClassRuntimeName_Type()
)
requestClassRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    requestClassRuntimeName.setStatus("current")


class _RequestClassRuntimeParent_Type(DisplayString):
    """Custom type requestClassRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_RequestClassRuntimeParent_Type.__name__ = "DisplayString"
_RequestClassRuntimeParent_Object = MibTableColumn
requestClassRuntimeParent = _RequestClassRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 365, 1, 20),
    _RequestClassRuntimeParent_Type()
)
requestClassRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    requestClassRuntimeParent.setStatus("current")
_RequestClassRuntimeCompletedCount_Type = Counter64
_RequestClassRuntimeCompletedCount_Object = MibTableColumn
requestClassRuntimeCompletedCount = _RequestClassRuntimeCompletedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 365, 1, 25),
    _RequestClassRuntimeCompletedCount_Type()
)
requestClassRuntimeCompletedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    requestClassRuntimeCompletedCount.setStatus("current")
_RequestClassRuntimeTotalThreadUse_Type = Counter64
_RequestClassRuntimeTotalThreadUse_Object = MibTableColumn
requestClassRuntimeTotalThreadUse = _RequestClassRuntimeTotalThreadUse_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 365, 1, 30),
    _RequestClassRuntimeTotalThreadUse_Type()
)
requestClassRuntimeTotalThreadUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    requestClassRuntimeTotalThreadUse.setStatus("current")
_RequestClassRuntimePendingRequestCount_Type = Integer32
_RequestClassRuntimePendingRequestCount_Object = MibTableColumn
requestClassRuntimePendingRequestCount = _RequestClassRuntimePendingRequestCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 365, 1, 35),
    _RequestClassRuntimePendingRequestCount_Type()
)
requestClassRuntimePendingRequestCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    requestClassRuntimePendingRequestCount.setStatus("current")
_RequestClassRuntimeVirtualTimeIncrement_Type = Counter64
_RequestClassRuntimeVirtualTimeIncrement_Object = MibTableColumn
requestClassRuntimeVirtualTimeIncrement = _RequestClassRuntimeVirtualTimeIncrement_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 365, 1, 40),
    _RequestClassRuntimeVirtualTimeIncrement_Type()
)
requestClassRuntimeVirtualTimeIncrement.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    requestClassRuntimeVirtualTimeIncrement.setStatus("current")


class _RequestClassRuntimeRequestClassType_Type(DisplayString):
    """Custom type requestClassRuntimeRequestClassType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_RequestClassRuntimeRequestClassType_Type.__name__ = "DisplayString"
_RequestClassRuntimeRequestClassType_Object = MibTableColumn
requestClassRuntimeRequestClassType = _RequestClassRuntimeRequestClassType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 365, 1, 45),
    _RequestClassRuntimeRequestClassType_Type()
)
requestClassRuntimeRequestClassType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    requestClassRuntimeRequestClassType.setStatus("current")
_RequestClassRuntimeDeltaRepeat_Type = Counter64
_RequestClassRuntimeDeltaRepeat_Object = MibTableColumn
requestClassRuntimeDeltaRepeat = _RequestClassRuntimeDeltaRepeat_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 365, 1, 46),
    _RequestClassRuntimeDeltaRepeat_Type()
)
requestClassRuntimeDeltaRepeat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    requestClassRuntimeDeltaRepeat.setStatus("current")
_RequestClassRuntimeDeltaFirst_Type = Counter64
_RequestClassRuntimeDeltaFirst_Object = MibTableColumn
requestClassRuntimeDeltaFirst = _RequestClassRuntimeDeltaFirst_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 365, 1, 47),
    _RequestClassRuntimeDeltaFirst_Type()
)
requestClassRuntimeDeltaFirst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    requestClassRuntimeDeltaFirst.setStatus("current")
_RequestClassRuntimeThreadUseSquares_Type = Counter64
_RequestClassRuntimeThreadUseSquares_Object = MibTableColumn
requestClassRuntimeThreadUseSquares = _RequestClassRuntimeThreadUseSquares_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 365, 1, 48),
    _RequestClassRuntimeThreadUseSquares_Type()
)
requestClassRuntimeThreadUseSquares.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    requestClassRuntimeThreadUseSquares.setStatus("current")
_RequestClassRuntimeMyLast_Type = Counter64
_RequestClassRuntimeMyLast_Object = MibTableColumn
requestClassRuntimeMyLast = _RequestClassRuntimeMyLast_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 365, 1, 49),
    _RequestClassRuntimeMyLast_Type()
)
requestClassRuntimeMyLast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    requestClassRuntimeMyLast.setStatus("current")
_RequestClassRuntimeInterval_Type = OctetString
_RequestClassRuntimeInterval_Object = MibTableColumn
requestClassRuntimeInterval = _RequestClassRuntimeInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 365, 1, 50),
    _RequestClassRuntimeInterval_Type()
)
requestClassRuntimeInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    requestClassRuntimeInterval.setStatus("current")
_ServerChannelRuntimeTable_Object = MibTable
serverChannelRuntimeTable = _ServerChannelRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 366)
)
if mibBuilder.loadTexts:
    serverChannelRuntimeTable.setStatus("current")
_ServerChannelRuntimeEntry_Object = MibTableRow
serverChannelRuntimeEntry = _ServerChannelRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 366, 1)
)
serverChannelRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "serverChannelRuntimeIndex"),
)
if mibBuilder.loadTexts:
    serverChannelRuntimeEntry.setStatus("current")


class _ServerChannelRuntimeIndex_Type(DisplayString):
    """Custom type serverChannelRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ServerChannelRuntimeIndex_Type.__name__ = "DisplayString"
_ServerChannelRuntimeIndex_Object = MibTableColumn
serverChannelRuntimeIndex = _ServerChannelRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 366, 1, 1),
    _ServerChannelRuntimeIndex_Type()
)
serverChannelRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverChannelRuntimeIndex.setStatus("current")


class _ServerChannelRuntimeObjectName_Type(DisplayString):
    """Custom type serverChannelRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerChannelRuntimeObjectName_Type.__name__ = "DisplayString"
_ServerChannelRuntimeObjectName_Object = MibTableColumn
serverChannelRuntimeObjectName = _ServerChannelRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 366, 1, 5),
    _ServerChannelRuntimeObjectName_Type()
)
serverChannelRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverChannelRuntimeObjectName.setStatus("current")


class _ServerChannelRuntimeType_Type(DisplayString):
    """Custom type serverChannelRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServerChannelRuntimeType_Type.__name__ = "DisplayString"
_ServerChannelRuntimeType_Object = MibTableColumn
serverChannelRuntimeType = _ServerChannelRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 366, 1, 10),
    _ServerChannelRuntimeType_Type()
)
serverChannelRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverChannelRuntimeType.setStatus("current")


class _ServerChannelRuntimeName_Type(DisplayString):
    """Custom type serverChannelRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServerChannelRuntimeName_Type.__name__ = "DisplayString"
_ServerChannelRuntimeName_Object = MibTableColumn
serverChannelRuntimeName = _ServerChannelRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 366, 1, 15),
    _ServerChannelRuntimeName_Type()
)
serverChannelRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverChannelRuntimeName.setStatus("current")


class _ServerChannelRuntimeParent_Type(DisplayString):
    """Custom type serverChannelRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerChannelRuntimeParent_Type.__name__ = "DisplayString"
_ServerChannelRuntimeParent_Object = MibTableColumn
serverChannelRuntimeParent = _ServerChannelRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 366, 1, 20),
    _ServerChannelRuntimeParent_Type()
)
serverChannelRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverChannelRuntimeParent.setStatus("current")
_ServerChannelRuntimeBytesReceivedCount_Type = Counter64
_ServerChannelRuntimeBytesReceivedCount_Object = MibTableColumn
serverChannelRuntimeBytesReceivedCount = _ServerChannelRuntimeBytesReceivedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 366, 1, 25),
    _ServerChannelRuntimeBytesReceivedCount_Type()
)
serverChannelRuntimeBytesReceivedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverChannelRuntimeBytesReceivedCount.setStatus("current")
_ServerChannelRuntimeBytesSentCount_Type = Counter64
_ServerChannelRuntimeBytesSentCount_Object = MibTableColumn
serverChannelRuntimeBytesSentCount = _ServerChannelRuntimeBytesSentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 366, 1, 30),
    _ServerChannelRuntimeBytesSentCount_Type()
)
serverChannelRuntimeBytesSentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverChannelRuntimeBytesSentCount.setStatus("current")


class _ServerChannelRuntimeChannelName_Type(DisplayString):
    """Custom type serverChannelRuntimeChannelName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServerChannelRuntimeChannelName_Type.__name__ = "DisplayString"
_ServerChannelRuntimeChannelName_Object = MibTableColumn
serverChannelRuntimeChannelName = _ServerChannelRuntimeChannelName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 366, 1, 35),
    _ServerChannelRuntimeChannelName_Type()
)
serverChannelRuntimeChannelName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverChannelRuntimeChannelName.setStatus("current")
_ServerChannelRuntimeConnectionsCount_Type = Counter64
_ServerChannelRuntimeConnectionsCount_Object = MibTableColumn
serverChannelRuntimeConnectionsCount = _ServerChannelRuntimeConnectionsCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 366, 1, 40),
    _ServerChannelRuntimeConnectionsCount_Type()
)
serverChannelRuntimeConnectionsCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverChannelRuntimeConnectionsCount.setStatus("current")
_ServerChannelRuntimeAcceptCount_Type = Counter64
_ServerChannelRuntimeAcceptCount_Object = MibTableColumn
serverChannelRuntimeAcceptCount = _ServerChannelRuntimeAcceptCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 366, 1, 45),
    _ServerChannelRuntimeAcceptCount_Type()
)
serverChannelRuntimeAcceptCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverChannelRuntimeAcceptCount.setStatus("current")
_ServerChannelRuntimeMessagesReceivedCount_Type = Counter64
_ServerChannelRuntimeMessagesReceivedCount_Object = MibTableColumn
serverChannelRuntimeMessagesReceivedCount = _ServerChannelRuntimeMessagesReceivedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 366, 1, 50),
    _ServerChannelRuntimeMessagesReceivedCount_Type()
)
serverChannelRuntimeMessagesReceivedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverChannelRuntimeMessagesReceivedCount.setStatus("current")
_ServerChannelRuntimeMessagesSentCount_Type = Counter64
_ServerChannelRuntimeMessagesSentCount_Object = MibTableColumn
serverChannelRuntimeMessagesSentCount = _ServerChannelRuntimeMessagesSentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 366, 1, 55),
    _ServerChannelRuntimeMessagesSentCount_Type()
)
serverChannelRuntimeMessagesSentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverChannelRuntimeMessagesSentCount.setStatus("current")


class _ServerChannelRuntimePublicURL_Type(DisplayString):
    """Custom type serverChannelRuntimePublicURL based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_ServerChannelRuntimePublicURL_Type.__name__ = "DisplayString"
_ServerChannelRuntimePublicURL_Object = MibTableColumn
serverChannelRuntimePublicURL = _ServerChannelRuntimePublicURL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 366, 1, 60),
    _ServerChannelRuntimePublicURL_Type()
)
serverChannelRuntimePublicURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverChannelRuntimePublicURL.setStatus("current")
_ThreadPoolRuntimeTable_Object = MibTable
threadPoolRuntimeTable = _ThreadPoolRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 367)
)
if mibBuilder.loadTexts:
    threadPoolRuntimeTable.setStatus("current")
_ThreadPoolRuntimeEntry_Object = MibTableRow
threadPoolRuntimeEntry = _ThreadPoolRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 367, 1)
)
threadPoolRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "threadPoolRuntimeIndex"),
)
if mibBuilder.loadTexts:
    threadPoolRuntimeEntry.setStatus("current")


class _ThreadPoolRuntimeIndex_Type(DisplayString):
    """Custom type threadPoolRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ThreadPoolRuntimeIndex_Type.__name__ = "DisplayString"
_ThreadPoolRuntimeIndex_Object = MibTableColumn
threadPoolRuntimeIndex = _ThreadPoolRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 367, 1, 1),
    _ThreadPoolRuntimeIndex_Type()
)
threadPoolRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPoolRuntimeIndex.setStatus("current")


class _ThreadPoolRuntimeObjectName_Type(DisplayString):
    """Custom type threadPoolRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ThreadPoolRuntimeObjectName_Type.__name__ = "DisplayString"
_ThreadPoolRuntimeObjectName_Object = MibTableColumn
threadPoolRuntimeObjectName = _ThreadPoolRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 367, 1, 5),
    _ThreadPoolRuntimeObjectName_Type()
)
threadPoolRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPoolRuntimeObjectName.setStatus("current")


class _ThreadPoolRuntimeType_Type(DisplayString):
    """Custom type threadPoolRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ThreadPoolRuntimeType_Type.__name__ = "DisplayString"
_ThreadPoolRuntimeType_Object = MibTableColumn
threadPoolRuntimeType = _ThreadPoolRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 367, 1, 10),
    _ThreadPoolRuntimeType_Type()
)
threadPoolRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPoolRuntimeType.setStatus("current")


class _ThreadPoolRuntimeName_Type(DisplayString):
    """Custom type threadPoolRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ThreadPoolRuntimeName_Type.__name__ = "DisplayString"
_ThreadPoolRuntimeName_Object = MibTableColumn
threadPoolRuntimeName = _ThreadPoolRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 367, 1, 15),
    _ThreadPoolRuntimeName_Type()
)
threadPoolRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPoolRuntimeName.setStatus("current")


class _ThreadPoolRuntimeParent_Type(DisplayString):
    """Custom type threadPoolRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ThreadPoolRuntimeParent_Type.__name__ = "DisplayString"
_ThreadPoolRuntimeParent_Object = MibTableColumn
threadPoolRuntimeParent = _ThreadPoolRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 367, 1, 20),
    _ThreadPoolRuntimeParent_Type()
)
threadPoolRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPoolRuntimeParent.setStatus("current")
_ThreadPoolRuntimeExecuteThreadTotalCount_Type = Integer32
_ThreadPoolRuntimeExecuteThreadTotalCount_Object = MibTableColumn
threadPoolRuntimeExecuteThreadTotalCount = _ThreadPoolRuntimeExecuteThreadTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 367, 1, 25),
    _ThreadPoolRuntimeExecuteThreadTotalCount_Type()
)
threadPoolRuntimeExecuteThreadTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPoolRuntimeExecuteThreadTotalCount.setStatus("current")
_ThreadPoolRuntimeExecuteThreadIdleCount_Type = Integer32
_ThreadPoolRuntimeExecuteThreadIdleCount_Object = MibTableColumn
threadPoolRuntimeExecuteThreadIdleCount = _ThreadPoolRuntimeExecuteThreadIdleCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 367, 1, 30),
    _ThreadPoolRuntimeExecuteThreadIdleCount_Type()
)
threadPoolRuntimeExecuteThreadIdleCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPoolRuntimeExecuteThreadIdleCount.setStatus("current")
_ThreadPoolRuntimeQueueLength_Type = Integer32
_ThreadPoolRuntimeQueueLength_Object = MibTableColumn
threadPoolRuntimeQueueLength = _ThreadPoolRuntimeQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 367, 1, 35),
    _ThreadPoolRuntimeQueueLength_Type()
)
threadPoolRuntimeQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPoolRuntimeQueueLength.setStatus("current")
_ThreadPoolRuntimePendingUserRequestCount_Type = Integer32
_ThreadPoolRuntimePendingUserRequestCount_Object = MibTableColumn
threadPoolRuntimePendingUserRequestCount = _ThreadPoolRuntimePendingUserRequestCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 367, 1, 40),
    _ThreadPoolRuntimePendingUserRequestCount_Type()
)
threadPoolRuntimePendingUserRequestCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPoolRuntimePendingUserRequestCount.setStatus("current")
_ThreadPoolRuntimeSharedCapacityForWorkManagers_Type = Integer32
_ThreadPoolRuntimeSharedCapacityForWorkManagers_Object = MibTableColumn
threadPoolRuntimeSharedCapacityForWorkManagers = _ThreadPoolRuntimeSharedCapacityForWorkManagers_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 367, 1, 45),
    _ThreadPoolRuntimeSharedCapacityForWorkManagers_Type()
)
threadPoolRuntimeSharedCapacityForWorkManagers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPoolRuntimeSharedCapacityForWorkManagers.setStatus("current")
_ThreadPoolRuntimeCompletedRequestCount_Type = Counter64
_ThreadPoolRuntimeCompletedRequestCount_Object = MibTableColumn
threadPoolRuntimeCompletedRequestCount = _ThreadPoolRuntimeCompletedRequestCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 367, 1, 50),
    _ThreadPoolRuntimeCompletedRequestCount_Type()
)
threadPoolRuntimeCompletedRequestCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPoolRuntimeCompletedRequestCount.setStatus("current")
_ThreadPoolRuntimeHoggingThreadCount_Type = Integer32
_ThreadPoolRuntimeHoggingThreadCount_Object = MibTableColumn
threadPoolRuntimeHoggingThreadCount = _ThreadPoolRuntimeHoggingThreadCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 367, 1, 55),
    _ThreadPoolRuntimeHoggingThreadCount_Type()
)
threadPoolRuntimeHoggingThreadCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPoolRuntimeHoggingThreadCount.setStatus("current")
_ThreadPoolRuntimeStandbyThreadCount_Type = Integer32
_ThreadPoolRuntimeStandbyThreadCount_Object = MibTableColumn
threadPoolRuntimeStandbyThreadCount = _ThreadPoolRuntimeStandbyThreadCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 367, 1, 60),
    _ThreadPoolRuntimeStandbyThreadCount_Type()
)
threadPoolRuntimeStandbyThreadCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPoolRuntimeStandbyThreadCount.setStatus("current")
_ThreadPoolRuntimeThroughput_Type = Integer32
_ThreadPoolRuntimeThroughput_Object = MibTableColumn
threadPoolRuntimeThroughput = _ThreadPoolRuntimeThroughput_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 367, 1, 65),
    _ThreadPoolRuntimeThroughput_Type()
)
threadPoolRuntimeThroughput.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPoolRuntimeThroughput.setStatus("current")
_ThreadPoolRuntimeMinThreadsConstraintsPending_Type = Integer32
_ThreadPoolRuntimeMinThreadsConstraintsPending_Object = MibTableColumn
threadPoolRuntimeMinThreadsConstraintsPending = _ThreadPoolRuntimeMinThreadsConstraintsPending_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 367, 1, 70),
    _ThreadPoolRuntimeMinThreadsConstraintsPending_Type()
)
threadPoolRuntimeMinThreadsConstraintsPending.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPoolRuntimeMinThreadsConstraintsPending.setStatus("current")
_ThreadPoolRuntimeMinThreadsConstraintsCompleted_Type = Counter64
_ThreadPoolRuntimeMinThreadsConstraintsCompleted_Object = MibTableColumn
threadPoolRuntimeMinThreadsConstraintsCompleted = _ThreadPoolRuntimeMinThreadsConstraintsCompleted_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 367, 1, 75),
    _ThreadPoolRuntimeMinThreadsConstraintsCompleted_Type()
)
threadPoolRuntimeMinThreadsConstraintsCompleted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPoolRuntimeMinThreadsConstraintsCompleted.setStatus("current")


class _ThreadPoolRuntimeSuspended_Type(Integer32):
    """Custom type threadPoolRuntimeSuspended based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ThreadPoolRuntimeSuspended_Type.__name__ = "Integer32"
_ThreadPoolRuntimeSuspended_Object = MibTableColumn
threadPoolRuntimeSuspended = _ThreadPoolRuntimeSuspended_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 367, 1, 80),
    _ThreadPoolRuntimeSuspended_Type()
)
threadPoolRuntimeSuspended.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    threadPoolRuntimeSuspended.setStatus("current")
_WorkManagerRuntimeTable_Object = MibTable
workManagerRuntimeTable = _WorkManagerRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 368)
)
if mibBuilder.loadTexts:
    workManagerRuntimeTable.setStatus("current")
_WorkManagerRuntimeEntry_Object = MibTableRow
workManagerRuntimeEntry = _WorkManagerRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 368, 1)
)
workManagerRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "workManagerRuntimeIndex"),
)
if mibBuilder.loadTexts:
    workManagerRuntimeEntry.setStatus("current")


class _WorkManagerRuntimeIndex_Type(DisplayString):
    """Custom type workManagerRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WorkManagerRuntimeIndex_Type.__name__ = "DisplayString"
_WorkManagerRuntimeIndex_Object = MibTableColumn
workManagerRuntimeIndex = _WorkManagerRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 368, 1, 1),
    _WorkManagerRuntimeIndex_Type()
)
workManagerRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workManagerRuntimeIndex.setStatus("current")


class _WorkManagerRuntimeObjectName_Type(DisplayString):
    """Custom type workManagerRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WorkManagerRuntimeObjectName_Type.__name__ = "DisplayString"
_WorkManagerRuntimeObjectName_Object = MibTableColumn
workManagerRuntimeObjectName = _WorkManagerRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 368, 1, 5),
    _WorkManagerRuntimeObjectName_Type()
)
workManagerRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workManagerRuntimeObjectName.setStatus("current")


class _WorkManagerRuntimeType_Type(DisplayString):
    """Custom type workManagerRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WorkManagerRuntimeType_Type.__name__ = "DisplayString"
_WorkManagerRuntimeType_Object = MibTableColumn
workManagerRuntimeType = _WorkManagerRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 368, 1, 10),
    _WorkManagerRuntimeType_Type()
)
workManagerRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workManagerRuntimeType.setStatus("current")


class _WorkManagerRuntimeName_Type(DisplayString):
    """Custom type workManagerRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WorkManagerRuntimeName_Type.__name__ = "DisplayString"
_WorkManagerRuntimeName_Object = MibTableColumn
workManagerRuntimeName = _WorkManagerRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 368, 1, 15),
    _WorkManagerRuntimeName_Type()
)
workManagerRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workManagerRuntimeName.setStatus("current")


class _WorkManagerRuntimeParent_Type(DisplayString):
    """Custom type workManagerRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WorkManagerRuntimeParent_Type.__name__ = "DisplayString"
_WorkManagerRuntimeParent_Object = MibTableColumn
workManagerRuntimeParent = _WorkManagerRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 368, 1, 20),
    _WorkManagerRuntimeParent_Type()
)
workManagerRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workManagerRuntimeParent.setStatus("current")


class _WorkManagerRuntimeApplicationName_Type(DisplayString):
    """Custom type workManagerRuntimeApplicationName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_WorkManagerRuntimeApplicationName_Type.__name__ = "DisplayString"
_WorkManagerRuntimeApplicationName_Object = MibTableColumn
workManagerRuntimeApplicationName = _WorkManagerRuntimeApplicationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 368, 1, 25),
    _WorkManagerRuntimeApplicationName_Type()
)
workManagerRuntimeApplicationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workManagerRuntimeApplicationName.setStatus("current")


class _WorkManagerRuntimeModuleName_Type(DisplayString):
    """Custom type workManagerRuntimeModuleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_WorkManagerRuntimeModuleName_Type.__name__ = "DisplayString"
_WorkManagerRuntimeModuleName_Object = MibTableColumn
workManagerRuntimeModuleName = _WorkManagerRuntimeModuleName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 368, 1, 30),
    _WorkManagerRuntimeModuleName_Type()
)
workManagerRuntimeModuleName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workManagerRuntimeModuleName.setStatus("current")
_WorkManagerRuntimePendingRequests_Type = Integer32
_WorkManagerRuntimePendingRequests_Object = MibTableColumn
workManagerRuntimePendingRequests = _WorkManagerRuntimePendingRequests_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 368, 1, 35),
    _WorkManagerRuntimePendingRequests_Type()
)
workManagerRuntimePendingRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workManagerRuntimePendingRequests.setStatus("current")
_WorkManagerRuntimeCompletedRequests_Type = Counter64
_WorkManagerRuntimeCompletedRequests_Object = MibTableColumn
workManagerRuntimeCompletedRequests = _WorkManagerRuntimeCompletedRequests_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 368, 1, 40),
    _WorkManagerRuntimeCompletedRequests_Type()
)
workManagerRuntimeCompletedRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workManagerRuntimeCompletedRequests.setStatus("current")
_WorkManagerRuntimeStuckThreadCount_Type = Integer32
_WorkManagerRuntimeStuckThreadCount_Object = MibTableColumn
workManagerRuntimeStuckThreadCount = _WorkManagerRuntimeStuckThreadCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 368, 1, 41),
    _WorkManagerRuntimeStuckThreadCount_Type()
)
workManagerRuntimeStuckThreadCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workManagerRuntimeStuckThreadCount.setStatus("current")
_ServerSecurityRuntimeTable_Object = MibTable
serverSecurityRuntimeTable = _ServerSecurityRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 370)
)
if mibBuilder.loadTexts:
    serverSecurityRuntimeTable.setStatus("current")
_ServerSecurityRuntimeEntry_Object = MibTableRow
serverSecurityRuntimeEntry = _ServerSecurityRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 370, 1)
)
serverSecurityRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "serverSecurityRuntimeIndex"),
)
if mibBuilder.loadTexts:
    serverSecurityRuntimeEntry.setStatus("current")


class _ServerSecurityRuntimeIndex_Type(DisplayString):
    """Custom type serverSecurityRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ServerSecurityRuntimeIndex_Type.__name__ = "DisplayString"
_ServerSecurityRuntimeIndex_Object = MibTableColumn
serverSecurityRuntimeIndex = _ServerSecurityRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 370, 1, 1),
    _ServerSecurityRuntimeIndex_Type()
)
serverSecurityRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverSecurityRuntimeIndex.setStatus("current")


class _ServerSecurityRuntimeObjectName_Type(DisplayString):
    """Custom type serverSecurityRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerSecurityRuntimeObjectName_Type.__name__ = "DisplayString"
_ServerSecurityRuntimeObjectName_Object = MibTableColumn
serverSecurityRuntimeObjectName = _ServerSecurityRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 370, 1, 5),
    _ServerSecurityRuntimeObjectName_Type()
)
serverSecurityRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverSecurityRuntimeObjectName.setStatus("current")


class _ServerSecurityRuntimeType_Type(DisplayString):
    """Custom type serverSecurityRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServerSecurityRuntimeType_Type.__name__ = "DisplayString"
_ServerSecurityRuntimeType_Object = MibTableColumn
serverSecurityRuntimeType = _ServerSecurityRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 370, 1, 10),
    _ServerSecurityRuntimeType_Type()
)
serverSecurityRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverSecurityRuntimeType.setStatus("current")


class _ServerSecurityRuntimeName_Type(DisplayString):
    """Custom type serverSecurityRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServerSecurityRuntimeName_Type.__name__ = "DisplayString"
_ServerSecurityRuntimeName_Object = MibTableColumn
serverSecurityRuntimeName = _ServerSecurityRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 370, 1, 15),
    _ServerSecurityRuntimeName_Type()
)
serverSecurityRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverSecurityRuntimeName.setStatus("current")


class _ServerSecurityRuntimeParent_Type(DisplayString):
    """Custom type serverSecurityRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerSecurityRuntimeParent_Type.__name__ = "DisplayString"
_ServerSecurityRuntimeParent_Object = MibTableColumn
serverSecurityRuntimeParent = _ServerSecurityRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 370, 1, 20),
    _ServerSecurityRuntimeParent_Type()
)
serverSecurityRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverSecurityRuntimeParent.setStatus("current")


class _ServerSecurityRuntimeJACCEnabled_Type(Integer32):
    """Custom type serverSecurityRuntimeJACCEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ServerSecurityRuntimeJACCEnabled_Type.__name__ = "Integer32"
_ServerSecurityRuntimeJACCEnabled_Object = MibTableColumn
serverSecurityRuntimeJACCEnabled = _ServerSecurityRuntimeJACCEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 370, 1, 30),
    _ServerSecurityRuntimeJACCEnabled_Type()
)
serverSecurityRuntimeJACCEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverSecurityRuntimeJACCEnabled.setStatus("current")
_UserLockoutManagerRuntimeTable_Object = MibTable
userLockoutManagerRuntimeTable = _UserLockoutManagerRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 371)
)
if mibBuilder.loadTexts:
    userLockoutManagerRuntimeTable.setStatus("current")
_UserLockoutManagerRuntimeEntry_Object = MibTableRow
userLockoutManagerRuntimeEntry = _UserLockoutManagerRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 371, 1)
)
userLockoutManagerRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "userLockoutManagerRuntimeIndex"),
)
if mibBuilder.loadTexts:
    userLockoutManagerRuntimeEntry.setStatus("current")


class _UserLockoutManagerRuntimeIndex_Type(DisplayString):
    """Custom type userLockoutManagerRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_UserLockoutManagerRuntimeIndex_Type.__name__ = "DisplayString"
_UserLockoutManagerRuntimeIndex_Object = MibTableColumn
userLockoutManagerRuntimeIndex = _UserLockoutManagerRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 371, 1, 1),
    _UserLockoutManagerRuntimeIndex_Type()
)
userLockoutManagerRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userLockoutManagerRuntimeIndex.setStatus("current")


class _UserLockoutManagerRuntimeObjectName_Type(DisplayString):
    """Custom type userLockoutManagerRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_UserLockoutManagerRuntimeObjectName_Type.__name__ = "DisplayString"
_UserLockoutManagerRuntimeObjectName_Object = MibTableColumn
userLockoutManagerRuntimeObjectName = _UserLockoutManagerRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 371, 1, 5),
    _UserLockoutManagerRuntimeObjectName_Type()
)
userLockoutManagerRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userLockoutManagerRuntimeObjectName.setStatus("current")


class _UserLockoutManagerRuntimeType_Type(DisplayString):
    """Custom type userLockoutManagerRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_UserLockoutManagerRuntimeType_Type.__name__ = "DisplayString"
_UserLockoutManagerRuntimeType_Object = MibTableColumn
userLockoutManagerRuntimeType = _UserLockoutManagerRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 371, 1, 10),
    _UserLockoutManagerRuntimeType_Type()
)
userLockoutManagerRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userLockoutManagerRuntimeType.setStatus("current")


class _UserLockoutManagerRuntimeName_Type(DisplayString):
    """Custom type userLockoutManagerRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_UserLockoutManagerRuntimeName_Type.__name__ = "DisplayString"
_UserLockoutManagerRuntimeName_Object = MibTableColumn
userLockoutManagerRuntimeName = _UserLockoutManagerRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 371, 1, 15),
    _UserLockoutManagerRuntimeName_Type()
)
userLockoutManagerRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userLockoutManagerRuntimeName.setStatus("current")


class _UserLockoutManagerRuntimeParent_Type(DisplayString):
    """Custom type userLockoutManagerRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_UserLockoutManagerRuntimeParent_Type.__name__ = "DisplayString"
_UserLockoutManagerRuntimeParent_Object = MibTableColumn
userLockoutManagerRuntimeParent = _UserLockoutManagerRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 371, 1, 20),
    _UserLockoutManagerRuntimeParent_Type()
)
userLockoutManagerRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userLockoutManagerRuntimeParent.setStatus("current")
_UserLockoutManagerRuntimeUserLockoutTotalCount_Type = Counter64
_UserLockoutManagerRuntimeUserLockoutTotalCount_Object = MibTableColumn
userLockoutManagerRuntimeUserLockoutTotalCount = _UserLockoutManagerRuntimeUserLockoutTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 371, 1, 25),
    _UserLockoutManagerRuntimeUserLockoutTotalCount_Type()
)
userLockoutManagerRuntimeUserLockoutTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userLockoutManagerRuntimeUserLockoutTotalCount.setStatus("current")
_UserLockoutManagerRuntimeInvalidLoginAttemptsTotalCount_Type = Counter64
_UserLockoutManagerRuntimeInvalidLoginAttemptsTotalCount_Object = MibTableColumn
userLockoutManagerRuntimeInvalidLoginAttemptsTotalCount = _UserLockoutManagerRuntimeInvalidLoginAttemptsTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 371, 1, 30),
    _UserLockoutManagerRuntimeInvalidLoginAttemptsTotalCount_Type()
)
userLockoutManagerRuntimeInvalidLoginAttemptsTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userLockoutManagerRuntimeInvalidLoginAttemptsTotalCount.setStatus("current")
_UserLockoutManagerRuntimeLoginAttemptsWhileLockedTotalCount_Type = Counter64
_UserLockoutManagerRuntimeLoginAttemptsWhileLockedTotalCount_Object = MibTableColumn
userLockoutManagerRuntimeLoginAttemptsWhileLockedTotalCount = _UserLockoutManagerRuntimeLoginAttemptsWhileLockedTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 371, 1, 35),
    _UserLockoutManagerRuntimeLoginAttemptsWhileLockedTotalCount_Type()
)
userLockoutManagerRuntimeLoginAttemptsWhileLockedTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userLockoutManagerRuntimeLoginAttemptsWhileLockedTotalCount.setStatus("current")
_UserLockoutManagerRuntimeInvalidLoginUsersHighCount_Type = Counter64
_UserLockoutManagerRuntimeInvalidLoginUsersHighCount_Object = MibTableColumn
userLockoutManagerRuntimeInvalidLoginUsersHighCount = _UserLockoutManagerRuntimeInvalidLoginUsersHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 371, 1, 40),
    _UserLockoutManagerRuntimeInvalidLoginUsersHighCount_Type()
)
userLockoutManagerRuntimeInvalidLoginUsersHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userLockoutManagerRuntimeInvalidLoginUsersHighCount.setStatus("current")
_UserLockoutManagerRuntimeUnlockedUsersTotalCount_Type = Counter64
_UserLockoutManagerRuntimeUnlockedUsersTotalCount_Object = MibTableColumn
userLockoutManagerRuntimeUnlockedUsersTotalCount = _UserLockoutManagerRuntimeUnlockedUsersTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 371, 1, 45),
    _UserLockoutManagerRuntimeUnlockedUsersTotalCount_Type()
)
userLockoutManagerRuntimeUnlockedUsersTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userLockoutManagerRuntimeUnlockedUsersTotalCount.setStatus("current")
_UserLockoutManagerRuntimeLockedUsersCurrentCount_Type = Counter64
_UserLockoutManagerRuntimeLockedUsersCurrentCount_Object = MibTableColumn
userLockoutManagerRuntimeLockedUsersCurrentCount = _UserLockoutManagerRuntimeLockedUsersCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 371, 1, 50),
    _UserLockoutManagerRuntimeLockedUsersCurrentCount_Type()
)
userLockoutManagerRuntimeLockedUsersCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userLockoutManagerRuntimeLockedUsersCurrentCount.setStatus("current")
_ServletRuntimeTable_Object = MibTable
servletRuntimeTable = _ServletRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 380)
)
if mibBuilder.loadTexts:
    servletRuntimeTable.setStatus("current")
_ServletRuntimeEntry_Object = MibTableRow
servletRuntimeEntry = _ServletRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 380, 1)
)
servletRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "servletRuntimeIndex"),
)
if mibBuilder.loadTexts:
    servletRuntimeEntry.setStatus("current")


class _ServletRuntimeIndex_Type(DisplayString):
    """Custom type servletRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ServletRuntimeIndex_Type.__name__ = "DisplayString"
_ServletRuntimeIndex_Object = MibTableColumn
servletRuntimeIndex = _ServletRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 380, 1, 1),
    _ServletRuntimeIndex_Type()
)
servletRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletRuntimeIndex.setStatus("current")


class _ServletRuntimeObjectName_Type(DisplayString):
    """Custom type servletRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServletRuntimeObjectName_Type.__name__ = "DisplayString"
_ServletRuntimeObjectName_Object = MibTableColumn
servletRuntimeObjectName = _ServletRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 380, 1, 5),
    _ServletRuntimeObjectName_Type()
)
servletRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletRuntimeObjectName.setStatus("current")


class _ServletRuntimeType_Type(DisplayString):
    """Custom type servletRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServletRuntimeType_Type.__name__ = "DisplayString"
_ServletRuntimeType_Object = MibTableColumn
servletRuntimeType = _ServletRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 380, 1, 10),
    _ServletRuntimeType_Type()
)
servletRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletRuntimeType.setStatus("current")


class _ServletRuntimeName_Type(DisplayString):
    """Custom type servletRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServletRuntimeName_Type.__name__ = "DisplayString"
_ServletRuntimeName_Object = MibTableColumn
servletRuntimeName = _ServletRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 380, 1, 15),
    _ServletRuntimeName_Type()
)
servletRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletRuntimeName.setStatus("current")


class _ServletRuntimeParent_Type(DisplayString):
    """Custom type servletRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServletRuntimeParent_Type.__name__ = "DisplayString"
_ServletRuntimeParent_Object = MibTableColumn
servletRuntimeParent = _ServletRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 380, 1, 20),
    _ServletRuntimeParent_Type()
)
servletRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletRuntimeParent.setStatus("current")


class _ServletRuntimeServletName_Type(DisplayString):
    """Custom type servletRuntimeServletName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServletRuntimeServletName_Type.__name__ = "DisplayString"
_ServletRuntimeServletName_Object = MibTableColumn
servletRuntimeServletName = _ServletRuntimeServletName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 380, 1, 25),
    _ServletRuntimeServletName_Type()
)
servletRuntimeServletName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletRuntimeServletName.setStatus("current")
_ServletRuntimeReloadTotalCount_Type = Integer32
_ServletRuntimeReloadTotalCount_Object = MibTableColumn
servletRuntimeReloadTotalCount = _ServletRuntimeReloadTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 380, 1, 30),
    _ServletRuntimeReloadTotalCount_Type()
)
servletRuntimeReloadTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletRuntimeReloadTotalCount.setStatus("current")
_ServletRuntimeInvocationTotalCount_Type = Integer32
_ServletRuntimeInvocationTotalCount_Object = MibTableColumn
servletRuntimeInvocationTotalCount = _ServletRuntimeInvocationTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 380, 1, 35),
    _ServletRuntimeInvocationTotalCount_Type()
)
servletRuntimeInvocationTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletRuntimeInvocationTotalCount.setStatus("current")
_ServletRuntimePoolMaxCapacity_Type = Integer32
_ServletRuntimePoolMaxCapacity_Object = MibTableColumn
servletRuntimePoolMaxCapacity = _ServletRuntimePoolMaxCapacity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 380, 1, 40),
    _ServletRuntimePoolMaxCapacity_Type()
)
servletRuntimePoolMaxCapacity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletRuntimePoolMaxCapacity.setStatus("current")
_ServletRuntimeExecutionTimeTotal_Type = Integer32
_ServletRuntimeExecutionTimeTotal_Object = MibTableColumn
servletRuntimeExecutionTimeTotal = _ServletRuntimeExecutionTimeTotal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 380, 1, 45),
    _ServletRuntimeExecutionTimeTotal_Type()
)
servletRuntimeExecutionTimeTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletRuntimeExecutionTimeTotal.setStatus("current")
_ServletRuntimeExecutionTimeHigh_Type = Integer32
_ServletRuntimeExecutionTimeHigh_Object = MibTableColumn
servletRuntimeExecutionTimeHigh = _ServletRuntimeExecutionTimeHigh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 380, 1, 50),
    _ServletRuntimeExecutionTimeHigh_Type()
)
servletRuntimeExecutionTimeHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletRuntimeExecutionTimeHigh.setStatus("current")
_ServletRuntimeExecutionTimeLow_Type = Integer32
_ServletRuntimeExecutionTimeLow_Object = MibTableColumn
servletRuntimeExecutionTimeLow = _ServletRuntimeExecutionTimeLow_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 380, 1, 55),
    _ServletRuntimeExecutionTimeLow_Type()
)
servletRuntimeExecutionTimeLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletRuntimeExecutionTimeLow.setStatus("current")
_ServletRuntimeExecutionTimeAverage_Type = Integer32
_ServletRuntimeExecutionTimeAverage_Object = MibTableColumn
servletRuntimeExecutionTimeAverage = _ServletRuntimeExecutionTimeAverage_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 380, 1, 60),
    _ServletRuntimeExecutionTimeAverage_Type()
)
servletRuntimeExecutionTimeAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletRuntimeExecutionTimeAverage.setStatus("current")


class _ServletRuntimeServletPath_Type(DisplayString):
    """Custom type servletRuntimeServletPath based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServletRuntimeServletPath_Type.__name__ = "DisplayString"
_ServletRuntimeServletPath_Object = MibTableColumn
servletRuntimeServletPath = _ServletRuntimeServletPath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 380, 1, 65),
    _ServletRuntimeServletPath_Type()
)
servletRuntimeServletPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletRuntimeServletPath.setStatus("current")


class _ServletRuntimeContextPath_Type(DisplayString):
    """Custom type servletRuntimeContextPath based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServletRuntimeContextPath_Type.__name__ = "DisplayString"
_ServletRuntimeContextPath_Object = MibTableColumn
servletRuntimeContextPath = _ServletRuntimeContextPath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 380, 1, 70),
    _ServletRuntimeContextPath_Type()
)
servletRuntimeContextPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletRuntimeContextPath.setStatus("current")


class _ServletRuntimeURL_Type(DisplayString):
    """Custom type servletRuntimeURL based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServletRuntimeURL_Type.__name__ = "DisplayString"
_ServletRuntimeURL_Object = MibTableColumn
servletRuntimeURL = _ServletRuntimeURL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 380, 1, 75),
    _ServletRuntimeURL_Type()
)
servletRuntimeURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletRuntimeURL.setStatus("current")
_ServletRuntimeServletClassName_Type = OctetString
_ServletRuntimeServletClassName_Object = MibTableColumn
servletRuntimeServletClassName = _ServletRuntimeServletClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 380, 1, 76),
    _ServletRuntimeServletClassName_Type()
)
servletRuntimeServletClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletRuntimeServletClassName.setStatus("current")
_ServletSessionRuntimeTable_Object = MibTable
servletSessionRuntimeTable = _ServletSessionRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 390)
)
if mibBuilder.loadTexts:
    servletSessionRuntimeTable.setStatus("current")
_ServletSessionRuntimeEntry_Object = MibTableRow
servletSessionRuntimeEntry = _ServletSessionRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 390, 1)
)
servletSessionRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "servletSessionRuntimeIndex"),
)
if mibBuilder.loadTexts:
    servletSessionRuntimeEntry.setStatus("current")


class _ServletSessionRuntimeIndex_Type(DisplayString):
    """Custom type servletSessionRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ServletSessionRuntimeIndex_Type.__name__ = "DisplayString"
_ServletSessionRuntimeIndex_Object = MibTableColumn
servletSessionRuntimeIndex = _ServletSessionRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 390, 1, 1),
    _ServletSessionRuntimeIndex_Type()
)
servletSessionRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletSessionRuntimeIndex.setStatus("current")


class _ServletSessionRuntimeObjectName_Type(DisplayString):
    """Custom type servletSessionRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServletSessionRuntimeObjectName_Type.__name__ = "DisplayString"
_ServletSessionRuntimeObjectName_Object = MibTableColumn
servletSessionRuntimeObjectName = _ServletSessionRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 390, 1, 5),
    _ServletSessionRuntimeObjectName_Type()
)
servletSessionRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletSessionRuntimeObjectName.setStatus("current")


class _ServletSessionRuntimeType_Type(DisplayString):
    """Custom type servletSessionRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServletSessionRuntimeType_Type.__name__ = "DisplayString"
_ServletSessionRuntimeType_Object = MibTableColumn
servletSessionRuntimeType = _ServletSessionRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 390, 1, 10),
    _ServletSessionRuntimeType_Type()
)
servletSessionRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletSessionRuntimeType.setStatus("current")


class _ServletSessionRuntimeName_Type(DisplayString):
    """Custom type servletSessionRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServletSessionRuntimeName_Type.__name__ = "DisplayString"
_ServletSessionRuntimeName_Object = MibTableColumn
servletSessionRuntimeName = _ServletSessionRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 390, 1, 15),
    _ServletSessionRuntimeName_Type()
)
servletSessionRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletSessionRuntimeName.setStatus("current")


class _ServletSessionRuntimeParent_Type(DisplayString):
    """Custom type servletSessionRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServletSessionRuntimeParent_Type.__name__ = "DisplayString"
_ServletSessionRuntimeParent_Object = MibTableColumn
servletSessionRuntimeParent = _ServletSessionRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 390, 1, 20),
    _ServletSessionRuntimeParent_Type()
)
servletSessionRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletSessionRuntimeParent.setStatus("current")
_ServletSessionRuntimeTimeLastAccessed_Type = Counter64
_ServletSessionRuntimeTimeLastAccessed_Object = MibTableColumn
servletSessionRuntimeTimeLastAccessed = _ServletSessionRuntimeTimeLastAccessed_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 390, 1, 25),
    _ServletSessionRuntimeTimeLastAccessed_Type()
)
servletSessionRuntimeTimeLastAccessed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletSessionRuntimeTimeLastAccessed.setStatus("current")


class _ServletSessionRuntimeMainAttribute_Type(DisplayString):
    """Custom type servletSessionRuntimeMainAttribute based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServletSessionRuntimeMainAttribute_Type.__name__ = "DisplayString"
_ServletSessionRuntimeMainAttribute_Object = MibTableColumn
servletSessionRuntimeMainAttribute = _ServletSessionRuntimeMainAttribute_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 390, 1, 30),
    _ServletSessionRuntimeMainAttribute_Type()
)
servletSessionRuntimeMainAttribute.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    servletSessionRuntimeMainAttribute.setStatus("current")
_TaskRuntimeTable_Object = MibTable
taskRuntimeTable = _TaskRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 391)
)
if mibBuilder.loadTexts:
    taskRuntimeTable.setStatus("current")
_TaskRuntimeEntry_Object = MibTableRow
taskRuntimeEntry = _TaskRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 391, 1)
)
taskRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "taskRuntimeIndex"),
)
if mibBuilder.loadTexts:
    taskRuntimeEntry.setStatus("current")


class _TaskRuntimeIndex_Type(DisplayString):
    """Custom type taskRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_TaskRuntimeIndex_Type.__name__ = "DisplayString"
_TaskRuntimeIndex_Object = MibTableColumn
taskRuntimeIndex = _TaskRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 391, 1, 1),
    _TaskRuntimeIndex_Type()
)
taskRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    taskRuntimeIndex.setStatus("current")


class _TaskRuntimeObjectName_Type(DisplayString):
    """Custom type taskRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_TaskRuntimeObjectName_Type.__name__ = "DisplayString"
_TaskRuntimeObjectName_Object = MibTableColumn
taskRuntimeObjectName = _TaskRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 391, 1, 5),
    _TaskRuntimeObjectName_Type()
)
taskRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    taskRuntimeObjectName.setStatus("current")


class _TaskRuntimeType_Type(DisplayString):
    """Custom type taskRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_TaskRuntimeType_Type.__name__ = "DisplayString"
_TaskRuntimeType_Object = MibTableColumn
taskRuntimeType = _TaskRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 391, 1, 10),
    _TaskRuntimeType_Type()
)
taskRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    taskRuntimeType.setStatus("current")


class _TaskRuntimeName_Type(DisplayString):
    """Custom type taskRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_TaskRuntimeName_Type.__name__ = "DisplayString"
_TaskRuntimeName_Object = MibTableColumn
taskRuntimeName = _TaskRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 391, 1, 15),
    _TaskRuntimeName_Type()
)
taskRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    taskRuntimeName.setStatus("current")


class _TaskRuntimeParent_Type(DisplayString):
    """Custom type taskRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_TaskRuntimeParent_Type.__name__ = "DisplayString"
_TaskRuntimeParent_Object = MibTableColumn
taskRuntimeParent = _TaskRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 391, 1, 20),
    _TaskRuntimeParent_Type()
)
taskRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    taskRuntimeParent.setStatus("current")
_TaskRuntimeBeginTime_Type = Counter64
_TaskRuntimeBeginTime_Object = MibTableColumn
taskRuntimeBeginTime = _TaskRuntimeBeginTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 391, 1, 25),
    _TaskRuntimeBeginTime_Type()
)
taskRuntimeBeginTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    taskRuntimeBeginTime.setStatus("current")


class _TaskRuntimeDescription_Type(DisplayString):
    """Custom type taskRuntimeDescription based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_TaskRuntimeDescription_Type.__name__ = "DisplayString"
_TaskRuntimeDescription_Object = MibTableColumn
taskRuntimeDescription = _TaskRuntimeDescription_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 391, 1, 30),
    _TaskRuntimeDescription_Type()
)
taskRuntimeDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    taskRuntimeDescription.setStatus("current")
_TaskRuntimeEndTime_Type = Counter64
_TaskRuntimeEndTime_Object = MibTableColumn
taskRuntimeEndTime = _TaskRuntimeEndTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 391, 1, 35),
    _TaskRuntimeEndTime_Type()
)
taskRuntimeEndTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    taskRuntimeEndTime.setStatus("current")


class _TaskRuntimeStatus_Type(DisplayString):
    """Custom type taskRuntimeStatus based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_TaskRuntimeStatus_Type.__name__ = "DisplayString"
_TaskRuntimeStatus_Object = MibTableColumn
taskRuntimeStatus = _TaskRuntimeStatus_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 391, 1, 40),
    _TaskRuntimeStatus_Type()
)
taskRuntimeStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    taskRuntimeStatus.setStatus("current")
_TaskRuntimeRunning_Type = Integer32
_TaskRuntimeRunning_Object = MibTableColumn
taskRuntimeRunning = _TaskRuntimeRunning_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 391, 1, 45),
    _TaskRuntimeRunning_Type()
)
taskRuntimeRunning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    taskRuntimeRunning.setStatus("current")
_TaskRuntimeSystemTask_Type = Integer32
_TaskRuntimeSystemTask_Object = MibTableColumn
taskRuntimeSystemTask = _TaskRuntimeSystemTask_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 391, 1, 50),
    _TaskRuntimeSystemTask_Type()
)
taskRuntimeSystemTask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    taskRuntimeSystemTask.setStatus("current")
_TransactionNameRuntimeTable_Object = MibTable
transactionNameRuntimeTable = _TransactionNameRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 410)
)
if mibBuilder.loadTexts:
    transactionNameRuntimeTable.setStatus("current")
_TransactionNameRuntimeEntry_Object = MibTableRow
transactionNameRuntimeEntry = _TransactionNameRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 410, 1)
)
transactionNameRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "transactionNameRuntimeIndex"),
)
if mibBuilder.loadTexts:
    transactionNameRuntimeEntry.setStatus("current")


class _TransactionNameRuntimeIndex_Type(DisplayString):
    """Custom type transactionNameRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_TransactionNameRuntimeIndex_Type.__name__ = "DisplayString"
_TransactionNameRuntimeIndex_Object = MibTableColumn
transactionNameRuntimeIndex = _TransactionNameRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 410, 1, 1),
    _TransactionNameRuntimeIndex_Type()
)
transactionNameRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionNameRuntimeIndex.setStatus("current")


class _TransactionNameRuntimeObjectName_Type(DisplayString):
    """Custom type transactionNameRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_TransactionNameRuntimeObjectName_Type.__name__ = "DisplayString"
_TransactionNameRuntimeObjectName_Object = MibTableColumn
transactionNameRuntimeObjectName = _TransactionNameRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 410, 1, 5),
    _TransactionNameRuntimeObjectName_Type()
)
transactionNameRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionNameRuntimeObjectName.setStatus("current")


class _TransactionNameRuntimeType_Type(DisplayString):
    """Custom type transactionNameRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_TransactionNameRuntimeType_Type.__name__ = "DisplayString"
_TransactionNameRuntimeType_Object = MibTableColumn
transactionNameRuntimeType = _TransactionNameRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 410, 1, 10),
    _TransactionNameRuntimeType_Type()
)
transactionNameRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionNameRuntimeType.setStatus("current")


class _TransactionNameRuntimeName_Type(DisplayString):
    """Custom type transactionNameRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_TransactionNameRuntimeName_Type.__name__ = "DisplayString"
_TransactionNameRuntimeName_Object = MibTableColumn
transactionNameRuntimeName = _TransactionNameRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 410, 1, 15),
    _TransactionNameRuntimeName_Type()
)
transactionNameRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionNameRuntimeName.setStatus("current")


class _TransactionNameRuntimeParent_Type(DisplayString):
    """Custom type transactionNameRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_TransactionNameRuntimeParent_Type.__name__ = "DisplayString"
_TransactionNameRuntimeParent_Object = MibTableColumn
transactionNameRuntimeParent = _TransactionNameRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 410, 1, 20),
    _TransactionNameRuntimeParent_Type()
)
transactionNameRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionNameRuntimeParent.setStatus("current")
_TransactionNameRuntimeTransactionTotalCount_Type = Integer32
_TransactionNameRuntimeTransactionTotalCount_Object = MibTableColumn
transactionNameRuntimeTransactionTotalCount = _TransactionNameRuntimeTransactionTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 410, 1, 25),
    _TransactionNameRuntimeTransactionTotalCount_Type()
)
transactionNameRuntimeTransactionTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionNameRuntimeTransactionTotalCount.setStatus("current")
_TransactionNameRuntimeTransactionCommittedTotalCount_Type = Integer32
_TransactionNameRuntimeTransactionCommittedTotalCount_Object = MibTableColumn
transactionNameRuntimeTransactionCommittedTotalCount = _TransactionNameRuntimeTransactionCommittedTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 410, 1, 30),
    _TransactionNameRuntimeTransactionCommittedTotalCount_Type()
)
transactionNameRuntimeTransactionCommittedTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionNameRuntimeTransactionCommittedTotalCount.setStatus("current")
_TransactionNameRuntimeTransactionRolledBackTotalCount_Type = Integer32
_TransactionNameRuntimeTransactionRolledBackTotalCount_Object = MibTableColumn
transactionNameRuntimeTransactionRolledBackTotalCount = _TransactionNameRuntimeTransactionRolledBackTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 410, 1, 35),
    _TransactionNameRuntimeTransactionRolledBackTotalCount_Type()
)
transactionNameRuntimeTransactionRolledBackTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionNameRuntimeTransactionRolledBackTotalCount.setStatus("current")
_TransactionNameRuntimeTransactionHeuristicsTotalCount_Type = Integer32
_TransactionNameRuntimeTransactionHeuristicsTotalCount_Object = MibTableColumn
transactionNameRuntimeTransactionHeuristicsTotalCount = _TransactionNameRuntimeTransactionHeuristicsTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 410, 1, 40),
    _TransactionNameRuntimeTransactionHeuristicsTotalCount_Type()
)
transactionNameRuntimeTransactionHeuristicsTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionNameRuntimeTransactionHeuristicsTotalCount.setStatus("current")
_TransactionNameRuntimeTransactionRolledBackResourceTotalCount_Type = Integer32
_TransactionNameRuntimeTransactionRolledBackResourceTotalCount_Object = MibTableColumn
transactionNameRuntimeTransactionRolledBackResourceTotalCount = _TransactionNameRuntimeTransactionRolledBackResourceTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 410, 1, 45),
    _TransactionNameRuntimeTransactionRolledBackResourceTotalCount_Type()
)
transactionNameRuntimeTransactionRolledBackResourceTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionNameRuntimeTransactionRolledBackResourceTotalCount.setStatus("current")
_TransactionNameRuntimeTransactionRolledBackAppTotalCount_Type = Integer32
_TransactionNameRuntimeTransactionRolledBackAppTotalCount_Object = MibTableColumn
transactionNameRuntimeTransactionRolledBackAppTotalCount = _TransactionNameRuntimeTransactionRolledBackAppTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 410, 1, 50),
    _TransactionNameRuntimeTransactionRolledBackAppTotalCount_Type()
)
transactionNameRuntimeTransactionRolledBackAppTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionNameRuntimeTransactionRolledBackAppTotalCount.setStatus("current")
_TransactionNameRuntimeTransactionRolledBackSystemTotalCount_Type = Integer32
_TransactionNameRuntimeTransactionRolledBackSystemTotalCount_Object = MibTableColumn
transactionNameRuntimeTransactionRolledBackSystemTotalCount = _TransactionNameRuntimeTransactionRolledBackSystemTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 410, 1, 55),
    _TransactionNameRuntimeTransactionRolledBackSystemTotalCount_Type()
)
transactionNameRuntimeTransactionRolledBackSystemTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionNameRuntimeTransactionRolledBackSystemTotalCount.setStatus("current")
_TransactionNameRuntimeSecondsActiveTotalCount_Type = Integer32
_TransactionNameRuntimeSecondsActiveTotalCount_Object = MibTableColumn
transactionNameRuntimeSecondsActiveTotalCount = _TransactionNameRuntimeSecondsActiveTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 410, 1, 60),
    _TransactionNameRuntimeSecondsActiveTotalCount_Type()
)
transactionNameRuntimeSecondsActiveTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionNameRuntimeSecondsActiveTotalCount.setStatus("current")
_TransactionNameRuntimeTransactionRolledBackTimeoutTotalCount_Type = Integer32
_TransactionNameRuntimeTransactionRolledBackTimeoutTotalCount_Object = MibTableColumn
transactionNameRuntimeTransactionRolledBackTimeoutTotalCount = _TransactionNameRuntimeTransactionRolledBackTimeoutTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 410, 1, 65),
    _TransactionNameRuntimeTransactionRolledBackTimeoutTotalCount_Type()
)
transactionNameRuntimeTransactionRolledBackTimeoutTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionNameRuntimeTransactionRolledBackTimeoutTotalCount.setStatus("current")


class _TransactionNameRuntimeTransactionName_Type(DisplayString):
    """Custom type transactionNameRuntimeTransactionName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_TransactionNameRuntimeTransactionName_Type.__name__ = "DisplayString"
_TransactionNameRuntimeTransactionName_Object = MibTableColumn
transactionNameRuntimeTransactionName = _TransactionNameRuntimeTransactionName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 410, 1, 70),
    _TransactionNameRuntimeTransactionName_Type()
)
transactionNameRuntimeTransactionName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionNameRuntimeTransactionName.setStatus("current")
_TransactionNameRuntimeTransactionAbandonedTotalCount_Type = Counter64
_TransactionNameRuntimeTransactionAbandonedTotalCount_Object = MibTableColumn
transactionNameRuntimeTransactionAbandonedTotalCount = _TransactionNameRuntimeTransactionAbandonedTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 410, 1, 71),
    _TransactionNameRuntimeTransactionAbandonedTotalCount_Type()
)
transactionNameRuntimeTransactionAbandonedTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionNameRuntimeTransactionAbandonedTotalCount.setStatus("current")
_TransactionResourceRuntimeTable_Object = MibTable
transactionResourceRuntimeTable = _TransactionResourceRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 420)
)
if mibBuilder.loadTexts:
    transactionResourceRuntimeTable.setStatus("current")
_TransactionResourceRuntimeEntry_Object = MibTableRow
transactionResourceRuntimeEntry = _TransactionResourceRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 420, 1)
)
transactionResourceRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "transactionResourceRuntimeIndex"),
)
if mibBuilder.loadTexts:
    transactionResourceRuntimeEntry.setStatus("current")


class _TransactionResourceRuntimeIndex_Type(DisplayString):
    """Custom type transactionResourceRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_TransactionResourceRuntimeIndex_Type.__name__ = "DisplayString"
_TransactionResourceRuntimeIndex_Object = MibTableColumn
transactionResourceRuntimeIndex = _TransactionResourceRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 420, 1, 1),
    _TransactionResourceRuntimeIndex_Type()
)
transactionResourceRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionResourceRuntimeIndex.setStatus("current")


class _TransactionResourceRuntimeObjectName_Type(DisplayString):
    """Custom type transactionResourceRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_TransactionResourceRuntimeObjectName_Type.__name__ = "DisplayString"
_TransactionResourceRuntimeObjectName_Object = MibTableColumn
transactionResourceRuntimeObjectName = _TransactionResourceRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 420, 1, 5),
    _TransactionResourceRuntimeObjectName_Type()
)
transactionResourceRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionResourceRuntimeObjectName.setStatus("current")


class _TransactionResourceRuntimeType_Type(DisplayString):
    """Custom type transactionResourceRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_TransactionResourceRuntimeType_Type.__name__ = "DisplayString"
_TransactionResourceRuntimeType_Object = MibTableColumn
transactionResourceRuntimeType = _TransactionResourceRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 420, 1, 10),
    _TransactionResourceRuntimeType_Type()
)
transactionResourceRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionResourceRuntimeType.setStatus("current")


class _TransactionResourceRuntimeName_Type(DisplayString):
    """Custom type transactionResourceRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_TransactionResourceRuntimeName_Type.__name__ = "DisplayString"
_TransactionResourceRuntimeName_Object = MibTableColumn
transactionResourceRuntimeName = _TransactionResourceRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 420, 1, 15),
    _TransactionResourceRuntimeName_Type()
)
transactionResourceRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionResourceRuntimeName.setStatus("current")


class _TransactionResourceRuntimeParent_Type(DisplayString):
    """Custom type transactionResourceRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_TransactionResourceRuntimeParent_Type.__name__ = "DisplayString"
_TransactionResourceRuntimeParent_Object = MibTableColumn
transactionResourceRuntimeParent = _TransactionResourceRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 420, 1, 20),
    _TransactionResourceRuntimeParent_Type()
)
transactionResourceRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionResourceRuntimeParent.setStatus("current")
_TransactionResourceRuntimeTransactionTotalCount_Type = Counter64
_TransactionResourceRuntimeTransactionTotalCount_Object = MibTableColumn
transactionResourceRuntimeTransactionTotalCount = _TransactionResourceRuntimeTransactionTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 420, 1, 25),
    _TransactionResourceRuntimeTransactionTotalCount_Type()
)
transactionResourceRuntimeTransactionTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionResourceRuntimeTransactionTotalCount.setStatus("current")
_TransactionResourceRuntimeTransactionCommittedTotalCount_Type = Counter64
_TransactionResourceRuntimeTransactionCommittedTotalCount_Object = MibTableColumn
transactionResourceRuntimeTransactionCommittedTotalCount = _TransactionResourceRuntimeTransactionCommittedTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 420, 1, 30),
    _TransactionResourceRuntimeTransactionCommittedTotalCount_Type()
)
transactionResourceRuntimeTransactionCommittedTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionResourceRuntimeTransactionCommittedTotalCount.setStatus("current")
_TransactionResourceRuntimeTransactionRolledBackTotalCount_Type = Counter64
_TransactionResourceRuntimeTransactionRolledBackTotalCount_Object = MibTableColumn
transactionResourceRuntimeTransactionRolledBackTotalCount = _TransactionResourceRuntimeTransactionRolledBackTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 420, 1, 35),
    _TransactionResourceRuntimeTransactionRolledBackTotalCount_Type()
)
transactionResourceRuntimeTransactionRolledBackTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionResourceRuntimeTransactionRolledBackTotalCount.setStatus("current")
_TransactionResourceRuntimeTransactionHeuristicsTotalCount_Type = Counter64
_TransactionResourceRuntimeTransactionHeuristicsTotalCount_Object = MibTableColumn
transactionResourceRuntimeTransactionHeuristicsTotalCount = _TransactionResourceRuntimeTransactionHeuristicsTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 420, 1, 40),
    _TransactionResourceRuntimeTransactionHeuristicsTotalCount_Type()
)
transactionResourceRuntimeTransactionHeuristicsTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionResourceRuntimeTransactionHeuristicsTotalCount.setStatus("current")


class _TransactionResourceRuntimeResourceName_Type(DisplayString):
    """Custom type transactionResourceRuntimeResourceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_TransactionResourceRuntimeResourceName_Type.__name__ = "DisplayString"
_TransactionResourceRuntimeResourceName_Object = MibTableColumn
transactionResourceRuntimeResourceName = _TransactionResourceRuntimeResourceName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 420, 1, 45),
    _TransactionResourceRuntimeResourceName_Type()
)
transactionResourceRuntimeResourceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionResourceRuntimeResourceName.setStatus("current")
_TransactionResourceRuntimeTransactionHeuristicCommitTotalCount_Type = Counter64
_TransactionResourceRuntimeTransactionHeuristicCommitTotalCount_Object = MibTableColumn
transactionResourceRuntimeTransactionHeuristicCommitTotalCount = _TransactionResourceRuntimeTransactionHeuristicCommitTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 420, 1, 50),
    _TransactionResourceRuntimeTransactionHeuristicCommitTotalCount_Type()
)
transactionResourceRuntimeTransactionHeuristicCommitTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionResourceRuntimeTransactionHeuristicCommitTotalCount.setStatus("current")
_TransactionResourceRuntimeTransactionHeuristicRollbackTotalCount_Type = Counter64
_TransactionResourceRuntimeTransactionHeuristicRollbackTotalCount_Object = MibTableColumn
transactionResourceRuntimeTransactionHeuristicRollbackTotalCount = _TransactionResourceRuntimeTransactionHeuristicRollbackTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 420, 1, 55),
    _TransactionResourceRuntimeTransactionHeuristicRollbackTotalCount_Type()
)
transactionResourceRuntimeTransactionHeuristicRollbackTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionResourceRuntimeTransactionHeuristicRollbackTotalCount.setStatus("current")
_TransactionResourceRuntimeTransactionHeuristicMixedTotalCount_Type = Counter64
_TransactionResourceRuntimeTransactionHeuristicMixedTotalCount_Object = MibTableColumn
transactionResourceRuntimeTransactionHeuristicMixedTotalCount = _TransactionResourceRuntimeTransactionHeuristicMixedTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 420, 1, 60),
    _TransactionResourceRuntimeTransactionHeuristicMixedTotalCount_Type()
)
transactionResourceRuntimeTransactionHeuristicMixedTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionResourceRuntimeTransactionHeuristicMixedTotalCount.setStatus("current")
_TransactionResourceRuntimeTransactionHeuristicHazardTotalCount_Type = Counter64
_TransactionResourceRuntimeTransactionHeuristicHazardTotalCount_Object = MibTableColumn
transactionResourceRuntimeTransactionHeuristicHazardTotalCount = _TransactionResourceRuntimeTransactionHeuristicHazardTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 420, 1, 65),
    _TransactionResourceRuntimeTransactionHeuristicHazardTotalCount_Type()
)
transactionResourceRuntimeTransactionHeuristicHazardTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    transactionResourceRuntimeTransactionHeuristicHazardTotalCount.setStatus("current")
_WebAppComponentRuntimeTable_Object = MibTable
webAppComponentRuntimeTable = _WebAppComponentRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430)
)
if mibBuilder.loadTexts:
    webAppComponentRuntimeTable.setStatus("current")
_WebAppComponentRuntimeEntry_Object = MibTableRow
webAppComponentRuntimeEntry = _WebAppComponentRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1)
)
webAppComponentRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "webAppComponentRuntimeIndex"),
)
if mibBuilder.loadTexts:
    webAppComponentRuntimeEntry.setStatus("current")


class _WebAppComponentRuntimeIndex_Type(DisplayString):
    """Custom type webAppComponentRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WebAppComponentRuntimeIndex_Type.__name__ = "DisplayString"
_WebAppComponentRuntimeIndex_Object = MibTableColumn
webAppComponentRuntimeIndex = _WebAppComponentRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 1),
    _WebAppComponentRuntimeIndex_Type()
)
webAppComponentRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeIndex.setStatus("current")


class _WebAppComponentRuntimeObjectName_Type(DisplayString):
    """Custom type webAppComponentRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WebAppComponentRuntimeObjectName_Type.__name__ = "DisplayString"
_WebAppComponentRuntimeObjectName_Object = MibTableColumn
webAppComponentRuntimeObjectName = _WebAppComponentRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 5),
    _WebAppComponentRuntimeObjectName_Type()
)
webAppComponentRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeObjectName.setStatus("current")


class _WebAppComponentRuntimeType_Type(DisplayString):
    """Custom type webAppComponentRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WebAppComponentRuntimeType_Type.__name__ = "DisplayString"
_WebAppComponentRuntimeType_Object = MibTableColumn
webAppComponentRuntimeType = _WebAppComponentRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 10),
    _WebAppComponentRuntimeType_Type()
)
webAppComponentRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeType.setStatus("current")


class _WebAppComponentRuntimeName_Type(DisplayString):
    """Custom type webAppComponentRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WebAppComponentRuntimeName_Type.__name__ = "DisplayString"
_WebAppComponentRuntimeName_Object = MibTableColumn
webAppComponentRuntimeName = _WebAppComponentRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 15),
    _WebAppComponentRuntimeName_Type()
)
webAppComponentRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeName.setStatus("current")


class _WebAppComponentRuntimeParent_Type(DisplayString):
    """Custom type webAppComponentRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WebAppComponentRuntimeParent_Type.__name__ = "DisplayString"
_WebAppComponentRuntimeParent_Object = MibTableColumn
webAppComponentRuntimeParent = _WebAppComponentRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 20),
    _WebAppComponentRuntimeParent_Type()
)
webAppComponentRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeParent.setStatus("current")


class _WebAppComponentRuntimeComponentName_Type(DisplayString):
    """Custom type webAppComponentRuntimeComponentName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WebAppComponentRuntimeComponentName_Type.__name__ = "DisplayString"
_WebAppComponentRuntimeComponentName_Object = MibTableColumn
webAppComponentRuntimeComponentName = _WebAppComponentRuntimeComponentName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 25),
    _WebAppComponentRuntimeComponentName_Type()
)
webAppComponentRuntimeComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeComponentName.setStatus("current")


class _WebAppComponentRuntimeStatus_Type(DisplayString):
    """Custom type webAppComponentRuntimeStatus based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WebAppComponentRuntimeStatus_Type.__name__ = "DisplayString"
_WebAppComponentRuntimeStatus_Object = MibTableColumn
webAppComponentRuntimeStatus = _WebAppComponentRuntimeStatus_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 30),
    _WebAppComponentRuntimeStatus_Type()
)
webAppComponentRuntimeStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeStatus.setStatus("current")


class _WebAppComponentRuntimeSourceInfo_Type(DisplayString):
    """Custom type webAppComponentRuntimeSourceInfo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WebAppComponentRuntimeSourceInfo_Type.__name__ = "DisplayString"
_WebAppComponentRuntimeSourceInfo_Object = MibTableColumn
webAppComponentRuntimeSourceInfo = _WebAppComponentRuntimeSourceInfo_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 35),
    _WebAppComponentRuntimeSourceInfo_Type()
)
webAppComponentRuntimeSourceInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeSourceInfo.setStatus("current")


class _WebAppComponentRuntimeServletSessions_Type(DisplayString):
    """Custom type webAppComponentRuntimeServletSessions based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_WebAppComponentRuntimeServletSessions_Type.__name__ = "DisplayString"
_WebAppComponentRuntimeServletSessions_Object = MibTableColumn
webAppComponentRuntimeServletSessions = _WebAppComponentRuntimeServletSessions_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 40),
    _WebAppComponentRuntimeServletSessions_Type()
)
webAppComponentRuntimeServletSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeServletSessions.setStatus("current")


class _WebAppComponentRuntimeServlets_Type(DisplayString):
    """Custom type webAppComponentRuntimeServlets based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_WebAppComponentRuntimeServlets_Type.__name__ = "DisplayString"
_WebAppComponentRuntimeServlets_Object = MibTableColumn
webAppComponentRuntimeServlets = _WebAppComponentRuntimeServlets_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 45),
    _WebAppComponentRuntimeServlets_Type()
)
webAppComponentRuntimeServlets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeServlets.setStatus("current")
_WebAppComponentRuntimeOpenSessionsCurrentCount_Type = Integer32
_WebAppComponentRuntimeOpenSessionsCurrentCount_Object = MibTableColumn
webAppComponentRuntimeOpenSessionsCurrentCount = _WebAppComponentRuntimeOpenSessionsCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 50),
    _WebAppComponentRuntimeOpenSessionsCurrentCount_Type()
)
webAppComponentRuntimeOpenSessionsCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeOpenSessionsCurrentCount.setStatus("current")
_WebAppComponentRuntimeOpenSessionsHighCount_Type = Integer32
_WebAppComponentRuntimeOpenSessionsHighCount_Object = MibTableColumn
webAppComponentRuntimeOpenSessionsHighCount = _WebAppComponentRuntimeOpenSessionsHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 55),
    _WebAppComponentRuntimeOpenSessionsHighCount_Type()
)
webAppComponentRuntimeOpenSessionsHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeOpenSessionsHighCount.setStatus("current")
_WebAppComponentRuntimeSessionsOpenedTotalCount_Type = Integer32
_WebAppComponentRuntimeSessionsOpenedTotalCount_Object = MibTableColumn
webAppComponentRuntimeSessionsOpenedTotalCount = _WebAppComponentRuntimeSessionsOpenedTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 60),
    _WebAppComponentRuntimeSessionsOpenedTotalCount_Type()
)
webAppComponentRuntimeSessionsOpenedTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeSessionsOpenedTotalCount.setStatus("current")
_WebAppComponentRuntimeSingleThreadedServletPoolSize_Type = Integer32
_WebAppComponentRuntimeSingleThreadedServletPoolSize_Object = MibTableColumn
webAppComponentRuntimeSingleThreadedServletPoolSize = _WebAppComponentRuntimeSingleThreadedServletPoolSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 61),
    _WebAppComponentRuntimeSingleThreadedServletPoolSize_Type()
)
webAppComponentRuntimeSingleThreadedServletPoolSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeSingleThreadedServletPoolSize.setStatus("current")
_WebAppComponentRuntimeJSPVerbose_Type = OctetString
_WebAppComponentRuntimeJSPVerbose_Object = MibTableColumn
webAppComponentRuntimeJSPVerbose = _WebAppComponentRuntimeJSPVerbose_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 62),
    _WebAppComponentRuntimeJSPVerbose_Type()
)
webAppComponentRuntimeJSPVerbose.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeJSPVerbose.setStatus("current")
_WebAppComponentRuntimeIndexDirectoryEnabled_Type = OctetString
_WebAppComponentRuntimeIndexDirectoryEnabled_Object = MibTableColumn
webAppComponentRuntimeIndexDirectoryEnabled = _WebAppComponentRuntimeIndexDirectoryEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 63),
    _WebAppComponentRuntimeIndexDirectoryEnabled_Type()
)
webAppComponentRuntimeIndexDirectoryEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeIndexDirectoryEnabled.setStatus("current")
_WebAppComponentRuntimeModuleId_Type = OctetString
_WebAppComponentRuntimeModuleId_Object = MibTableColumn
webAppComponentRuntimeModuleId = _WebAppComponentRuntimeModuleId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 64),
    _WebAppComponentRuntimeModuleId_Type()
)
webAppComponentRuntimeModuleId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeModuleId.setStatus("current")
_WebAppComponentRuntimeJSPDebug_Type = OctetString
_WebAppComponentRuntimeJSPDebug_Object = MibTableColumn
webAppComponentRuntimeJSPDebug = _WebAppComponentRuntimeJSPDebug_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 65),
    _WebAppComponentRuntimeJSPDebug_Type()
)
webAppComponentRuntimeJSPDebug.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeJSPDebug.setStatus("current")
_WebAppComponentRuntimeSessionCookieName_Type = OctetString
_WebAppComponentRuntimeSessionCookieName_Object = MibTableColumn
webAppComponentRuntimeSessionCookieName = _WebAppComponentRuntimeSessionCookieName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 66),
    _WebAppComponentRuntimeSessionCookieName_Type()
)
webAppComponentRuntimeSessionCookieName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeSessionCookieName.setStatus("current")
_WebAppComponentRuntimeSessionCookieDomain_Type = OctetString
_WebAppComponentRuntimeSessionCookieDomain_Object = MibTableColumn
webAppComponentRuntimeSessionCookieDomain = _WebAppComponentRuntimeSessionCookieDomain_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 67),
    _WebAppComponentRuntimeSessionCookieDomain_Type()
)
webAppComponentRuntimeSessionCookieDomain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeSessionCookieDomain.setStatus("current")
_WebAppComponentRuntimeFilterDispatchedRequestsEnabled_Type = OctetString
_WebAppComponentRuntimeFilterDispatchedRequestsEnabled_Object = MibTableColumn
webAppComponentRuntimeFilterDispatchedRequestsEnabled = _WebAppComponentRuntimeFilterDispatchedRequestsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 68),
    _WebAppComponentRuntimeFilterDispatchedRequestsEnabled_Type()
)
webAppComponentRuntimeFilterDispatchedRequestsEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeFilterDispatchedRequestsEnabled.setStatus("current")
_WebAppComponentRuntimeLogFilename_Type = OctetString
_WebAppComponentRuntimeLogFilename_Object = MibTableColumn
webAppComponentRuntimeLogFilename = _WebAppComponentRuntimeLogFilename_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 69),
    _WebAppComponentRuntimeLogFilename_Type()
)
webAppComponentRuntimeLogFilename.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeLogFilename.setStatus("current")
_WebAppComponentRuntimeSessionCookiePath_Type = OctetString
_WebAppComponentRuntimeSessionCookiePath_Object = MibTableColumn
webAppComponentRuntimeSessionCookiePath = _WebAppComponentRuntimeSessionCookiePath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 70),
    _WebAppComponentRuntimeSessionCookiePath_Type()
)
webAppComponentRuntimeSessionCookiePath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeSessionCookiePath.setStatus("current")
_WebAppComponentRuntimeJSPKeepGenerated_Type = OctetString
_WebAppComponentRuntimeJSPKeepGenerated_Object = MibTableColumn
webAppComponentRuntimeJSPKeepGenerated = _WebAppComponentRuntimeJSPKeepGenerated_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 71),
    _WebAppComponentRuntimeJSPKeepGenerated_Type()
)
webAppComponentRuntimeJSPKeepGenerated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeJSPKeepGenerated.setStatus("current")
_WebAppComponentRuntimeSessionCookieComment_Type = OctetString
_WebAppComponentRuntimeSessionCookieComment_Object = MibTableColumn
webAppComponentRuntimeSessionCookieComment = _WebAppComponentRuntimeSessionCookieComment_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 72),
    _WebAppComponentRuntimeSessionCookieComment_Type()
)
webAppComponentRuntimeSessionCookieComment.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeSessionCookieComment.setStatus("current")
_WebAppComponentRuntimeJSPCompileCommand_Type = OctetString
_WebAppComponentRuntimeJSPCompileCommand_Object = MibTableColumn
webAppComponentRuntimeJSPCompileCommand = _WebAppComponentRuntimeJSPCompileCommand_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 73),
    _WebAppComponentRuntimeJSPCompileCommand_Type()
)
webAppComponentRuntimeJSPCompileCommand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeJSPCompileCommand.setStatus("current")
_WebAppComponentRuntimeJSPPageCheckSecs_Type = Counter64
_WebAppComponentRuntimeJSPPageCheckSecs_Object = MibTableColumn
webAppComponentRuntimeJSPPageCheckSecs = _WebAppComponentRuntimeJSPPageCheckSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 74),
    _WebAppComponentRuntimeJSPPageCheckSecs_Type()
)
webAppComponentRuntimeJSPPageCheckSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeJSPPageCheckSecs.setStatus("current")
_WebAppComponentRuntimeContextRoot_Type = OctetString
_WebAppComponentRuntimeContextRoot_Object = MibTableColumn
webAppComponentRuntimeContextRoot = _WebAppComponentRuntimeContextRoot_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 75),
    _WebAppComponentRuntimeContextRoot_Type()
)
webAppComponentRuntimeContextRoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeContextRoot.setStatus("current")
_WebAppComponentRuntimeModuleURI_Type = OctetString
_WebAppComponentRuntimeModuleURI_Object = MibTableColumn
webAppComponentRuntimeModuleURI = _WebAppComponentRuntimeModuleURI_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 76),
    _WebAppComponentRuntimeModuleURI_Type()
)
webAppComponentRuntimeModuleURI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeModuleURI.setStatus("current")
_WebAppComponentRuntimeSessionInvalidationIntervalSecs_Type = Integer32
_WebAppComponentRuntimeSessionInvalidationIntervalSecs_Object = MibTableColumn
webAppComponentRuntimeSessionInvalidationIntervalSecs = _WebAppComponentRuntimeSessionInvalidationIntervalSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 77),
    _WebAppComponentRuntimeSessionInvalidationIntervalSecs_Type()
)
webAppComponentRuntimeSessionInvalidationIntervalSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeSessionInvalidationIntervalSecs.setStatus("current")
_WebAppComponentRuntimeServletReloadCheckSecs_Type = Integer32
_WebAppComponentRuntimeServletReloadCheckSecs_Object = MibTableColumn
webAppComponentRuntimeServletReloadCheckSecs = _WebAppComponentRuntimeServletReloadCheckSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 78),
    _WebAppComponentRuntimeServletReloadCheckSecs_Type()
)
webAppComponentRuntimeServletReloadCheckSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeServletReloadCheckSecs.setStatus("current")
_WebAppComponentRuntimeSessionCookieMaxAgeSecs_Type = Integer32
_WebAppComponentRuntimeSessionCookieMaxAgeSecs_Object = MibTableColumn
webAppComponentRuntimeSessionCookieMaxAgeSecs = _WebAppComponentRuntimeSessionCookieMaxAgeSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 79),
    _WebAppComponentRuntimeSessionCookieMaxAgeSecs_Type()
)
webAppComponentRuntimeSessionCookieMaxAgeSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeSessionCookieMaxAgeSecs.setStatus("current")
_WebAppComponentRuntimeSessionTimeoutSecs_Type = Integer32
_WebAppComponentRuntimeSessionTimeoutSecs_Object = MibTableColumn
webAppComponentRuntimeSessionTimeoutSecs = _WebAppComponentRuntimeSessionTimeoutSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 80),
    _WebAppComponentRuntimeSessionTimeoutSecs_Type()
)
webAppComponentRuntimeSessionTimeoutSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeSessionTimeoutSecs.setStatus("current")
_WebAppComponentRuntimeSessionIDLength_Type = Integer32
_WebAppComponentRuntimeSessionIDLength_Object = MibTableColumn
webAppComponentRuntimeSessionIDLength = _WebAppComponentRuntimeSessionIDLength_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 81),
    _WebAppComponentRuntimeSessionIDLength_Type()
)
webAppComponentRuntimeSessionIDLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeSessionIDLength.setStatus("current")
_WebAppComponentRuntimeDeploymentState_Type = Integer32
_WebAppComponentRuntimeDeploymentState_Object = MibTableColumn
webAppComponentRuntimeDeploymentState = _WebAppComponentRuntimeDeploymentState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 82),
    _WebAppComponentRuntimeDeploymentState_Type()
)
webAppComponentRuntimeDeploymentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeDeploymentState.setStatus("current")
_WebAppComponentRuntimeSessionMonitoringEnabled_Type = OctetString
_WebAppComponentRuntimeSessionMonitoringEnabled_Object = MibTableColumn
webAppComponentRuntimeSessionMonitoringEnabled = _WebAppComponentRuntimeSessionMonitoringEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 430, 1, 83),
    _WebAppComponentRuntimeSessionMonitoringEnabled_Type()
)
webAppComponentRuntimeSessionMonitoringEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentRuntimeSessionMonitoringEnabled.setStatus("current")
_WebServerRuntimeTable_Object = MibTable
webServerRuntimeTable = _WebServerRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 431)
)
if mibBuilder.loadTexts:
    webServerRuntimeTable.setStatus("current")
_WebServerRuntimeEntry_Object = MibTableRow
webServerRuntimeEntry = _WebServerRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 431, 1)
)
webServerRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "webServerRuntimeIndex"),
)
if mibBuilder.loadTexts:
    webServerRuntimeEntry.setStatus("current")


class _WebServerRuntimeIndex_Type(DisplayString):
    """Custom type webServerRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WebServerRuntimeIndex_Type.__name__ = "DisplayString"
_WebServerRuntimeIndex_Object = MibTableColumn
webServerRuntimeIndex = _WebServerRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 431, 1, 1),
    _WebServerRuntimeIndex_Type()
)
webServerRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerRuntimeIndex.setStatus("current")


class _WebServerRuntimeObjectName_Type(DisplayString):
    """Custom type webServerRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WebServerRuntimeObjectName_Type.__name__ = "DisplayString"
_WebServerRuntimeObjectName_Object = MibTableColumn
webServerRuntimeObjectName = _WebServerRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 431, 1, 5),
    _WebServerRuntimeObjectName_Type()
)
webServerRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerRuntimeObjectName.setStatus("current")


class _WebServerRuntimeType_Type(DisplayString):
    """Custom type webServerRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WebServerRuntimeType_Type.__name__ = "DisplayString"
_WebServerRuntimeType_Object = MibTableColumn
webServerRuntimeType = _WebServerRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 431, 1, 10),
    _WebServerRuntimeType_Type()
)
webServerRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerRuntimeType.setStatus("current")


class _WebServerRuntimeName_Type(DisplayString):
    """Custom type webServerRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WebServerRuntimeName_Type.__name__ = "DisplayString"
_WebServerRuntimeName_Object = MibTableColumn
webServerRuntimeName = _WebServerRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 431, 1, 15),
    _WebServerRuntimeName_Type()
)
webServerRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerRuntimeName.setStatus("current")


class _WebServerRuntimeParent_Type(DisplayString):
    """Custom type webServerRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WebServerRuntimeParent_Type.__name__ = "DisplayString"
_WebServerRuntimeParent_Object = MibTableColumn
webServerRuntimeParent = _WebServerRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 431, 1, 20),
    _WebServerRuntimeParent_Type()
)
webServerRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerRuntimeParent.setStatus("current")


class _WebServerRuntimeWebServerName_Type(DisplayString):
    """Custom type webServerRuntimeWebServerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WebServerRuntimeWebServerName_Type.__name__ = "DisplayString"
_WebServerRuntimeWebServerName_Object = MibTableColumn
webServerRuntimeWebServerName = _WebServerRuntimeWebServerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 431, 1, 25),
    _WebServerRuntimeWebServerName_Type()
)
webServerRuntimeWebServerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerRuntimeWebServerName.setStatus("current")
_WebServerRuntimeDefaultWebServer_Type = OctetString
_WebServerRuntimeDefaultWebServer_Object = MibTableColumn
webServerRuntimeDefaultWebServer = _WebServerRuntimeDefaultWebServer_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 431, 1, 26),
    _WebServerRuntimeDefaultWebServer_Type()
)
webServerRuntimeDefaultWebServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerRuntimeDefaultWebServer.setStatus("current")
_WlecConnectionPoolRuntimeTable_Object = MibTable
wlecConnectionPoolRuntimeTable = _WlecConnectionPoolRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 440)
)
if mibBuilder.loadTexts:
    wlecConnectionPoolRuntimeTable.setStatus("current")
_WlecConnectionPoolRuntimeEntry_Object = MibTableRow
wlecConnectionPoolRuntimeEntry = _WlecConnectionPoolRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 440, 1)
)
wlecConnectionPoolRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wlecConnectionPoolRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wlecConnectionPoolRuntimeEntry.setStatus("current")


class _WlecConnectionPoolRuntimeIndex_Type(DisplayString):
    """Custom type wlecConnectionPoolRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WlecConnectionPoolRuntimeIndex_Type.__name__ = "DisplayString"
_WlecConnectionPoolRuntimeIndex_Object = MibTableColumn
wlecConnectionPoolRuntimeIndex = _WlecConnectionPoolRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 440, 1, 1),
    _WlecConnectionPoolRuntimeIndex_Type()
)
wlecConnectionPoolRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolRuntimeIndex.setStatus("current")


class _WlecConnectionPoolRuntimeObjectName_Type(DisplayString):
    """Custom type wlecConnectionPoolRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WlecConnectionPoolRuntimeObjectName_Type.__name__ = "DisplayString"
_WlecConnectionPoolRuntimeObjectName_Object = MibTableColumn
wlecConnectionPoolRuntimeObjectName = _WlecConnectionPoolRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 440, 1, 5),
    _WlecConnectionPoolRuntimeObjectName_Type()
)
wlecConnectionPoolRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolRuntimeObjectName.setStatus("current")


class _WlecConnectionPoolRuntimeType_Type(DisplayString):
    """Custom type wlecConnectionPoolRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WlecConnectionPoolRuntimeType_Type.__name__ = "DisplayString"
_WlecConnectionPoolRuntimeType_Object = MibTableColumn
wlecConnectionPoolRuntimeType = _WlecConnectionPoolRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 440, 1, 10),
    _WlecConnectionPoolRuntimeType_Type()
)
wlecConnectionPoolRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolRuntimeType.setStatus("current")


class _WlecConnectionPoolRuntimeName_Type(DisplayString):
    """Custom type wlecConnectionPoolRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WlecConnectionPoolRuntimeName_Type.__name__ = "DisplayString"
_WlecConnectionPoolRuntimeName_Object = MibTableColumn
wlecConnectionPoolRuntimeName = _WlecConnectionPoolRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 440, 1, 15),
    _WlecConnectionPoolRuntimeName_Type()
)
wlecConnectionPoolRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolRuntimeName.setStatus("current")


class _WlecConnectionPoolRuntimeParent_Type(DisplayString):
    """Custom type wlecConnectionPoolRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WlecConnectionPoolRuntimeParent_Type.__name__ = "DisplayString"
_WlecConnectionPoolRuntimeParent_Object = MibTableColumn
wlecConnectionPoolRuntimeParent = _WlecConnectionPoolRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 440, 1, 20),
    _WlecConnectionPoolRuntimeParent_Type()
)
wlecConnectionPoolRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolRuntimeParent.setStatus("current")


class _WlecConnectionPoolRuntimePoolName_Type(DisplayString):
    """Custom type wlecConnectionPoolRuntimePoolName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WlecConnectionPoolRuntimePoolName_Type.__name__ = "DisplayString"
_WlecConnectionPoolRuntimePoolName_Object = MibTableColumn
wlecConnectionPoolRuntimePoolName = _WlecConnectionPoolRuntimePoolName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 440, 1, 25),
    _WlecConnectionPoolRuntimePoolName_Type()
)
wlecConnectionPoolRuntimePoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolRuntimePoolName.setStatus("current")


class _WlecConnectionPoolRuntimeWLEDomainName_Type(DisplayString):
    """Custom type wlecConnectionPoolRuntimeWLEDomainName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WlecConnectionPoolRuntimeWLEDomainName_Type.__name__ = "DisplayString"
_WlecConnectionPoolRuntimeWLEDomainName_Object = MibTableColumn
wlecConnectionPoolRuntimeWLEDomainName = _WlecConnectionPoolRuntimeWLEDomainName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 440, 1, 30),
    _WlecConnectionPoolRuntimeWLEDomainName_Type()
)
wlecConnectionPoolRuntimeWLEDomainName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolRuntimeWLEDomainName.setStatus("current")
_WlecConnectionPoolRuntimeMaxCapacity_Type = Integer32
_WlecConnectionPoolRuntimeMaxCapacity_Object = MibTableColumn
wlecConnectionPoolRuntimeMaxCapacity = _WlecConnectionPoolRuntimeMaxCapacity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 440, 1, 35),
    _WlecConnectionPoolRuntimeMaxCapacity_Type()
)
wlecConnectionPoolRuntimeMaxCapacity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolRuntimeMaxCapacity.setStatus("current")


class _WlecConnectionPoolRuntimePoolState_Type(DisplayString):
    """Custom type wlecConnectionPoolRuntimePoolState based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WlecConnectionPoolRuntimePoolState_Type.__name__ = "DisplayString"
_WlecConnectionPoolRuntimePoolState_Object = MibTableColumn
wlecConnectionPoolRuntimePoolState = _WlecConnectionPoolRuntimePoolState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 440, 1, 40),
    _WlecConnectionPoolRuntimePoolState_Type()
)
wlecConnectionPoolRuntimePoolState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolRuntimePoolState.setStatus("current")


class _WlecConnectionPoolRuntimeSecurityContextPropagation_Type(Integer32):
    """Custom type wlecConnectionPoolRuntimeSecurityContextPropagation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_WlecConnectionPoolRuntimeSecurityContextPropagation_Type.__name__ = "Integer32"
_WlecConnectionPoolRuntimeSecurityContextPropagation_Object = MibTableColumn
wlecConnectionPoolRuntimeSecurityContextPropagation = _WlecConnectionPoolRuntimeSecurityContextPropagation_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 440, 1, 45),
    _WlecConnectionPoolRuntimeSecurityContextPropagation_Type()
)
wlecConnectionPoolRuntimeSecurityContextPropagation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolRuntimeSecurityContextPropagation.setStatus("current")


class _WlecConnectionPoolRuntimeCertificateBasedAuthentication_Type(Integer32):
    """Custom type wlecConnectionPoolRuntimeCertificateBasedAuthentication based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_WlecConnectionPoolRuntimeCertificateBasedAuthentication_Type.__name__ = "Integer32"
_WlecConnectionPoolRuntimeCertificateBasedAuthentication_Object = MibTableColumn
wlecConnectionPoolRuntimeCertificateBasedAuthentication = _WlecConnectionPoolRuntimeCertificateBasedAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 440, 1, 50),
    _WlecConnectionPoolRuntimeCertificateBasedAuthentication_Type()
)
wlecConnectionPoolRuntimeCertificateBasedAuthentication.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolRuntimeCertificateBasedAuthentication.setStatus("current")


class _WlecConnectionPoolRuntimeConnections_Type(DisplayString):
    """Custom type wlecConnectionPoolRuntimeConnections based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_WlecConnectionPoolRuntimeConnections_Type.__name__ = "DisplayString"
_WlecConnectionPoolRuntimeConnections_Object = MibTableColumn
wlecConnectionPoolRuntimeConnections = _WlecConnectionPoolRuntimeConnections_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 440, 1, 55),
    _WlecConnectionPoolRuntimeConnections_Type()
)
wlecConnectionPoolRuntimeConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolRuntimeConnections.setStatus("current")
_WlecConnectionRuntimeTable_Object = MibTable
wlecConnectionRuntimeTable = _WlecConnectionRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 450)
)
if mibBuilder.loadTexts:
    wlecConnectionRuntimeTable.setStatus("current")
_WlecConnectionRuntimeEntry_Object = MibTableRow
wlecConnectionRuntimeEntry = _WlecConnectionRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 450, 1)
)
wlecConnectionRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wlecConnectionRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wlecConnectionRuntimeEntry.setStatus("current")


class _WlecConnectionRuntimeIndex_Type(DisplayString):
    """Custom type wlecConnectionRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WlecConnectionRuntimeIndex_Type.__name__ = "DisplayString"
_WlecConnectionRuntimeIndex_Object = MibTableColumn
wlecConnectionRuntimeIndex = _WlecConnectionRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 450, 1, 1),
    _WlecConnectionRuntimeIndex_Type()
)
wlecConnectionRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionRuntimeIndex.setStatus("current")


class _WlecConnectionRuntimeObjectName_Type(DisplayString):
    """Custom type wlecConnectionRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WlecConnectionRuntimeObjectName_Type.__name__ = "DisplayString"
_WlecConnectionRuntimeObjectName_Object = MibTableColumn
wlecConnectionRuntimeObjectName = _WlecConnectionRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 450, 1, 5),
    _WlecConnectionRuntimeObjectName_Type()
)
wlecConnectionRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionRuntimeObjectName.setStatus("current")


class _WlecConnectionRuntimeType_Type(DisplayString):
    """Custom type wlecConnectionRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WlecConnectionRuntimeType_Type.__name__ = "DisplayString"
_WlecConnectionRuntimeType_Object = MibTableColumn
wlecConnectionRuntimeType = _WlecConnectionRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 450, 1, 10),
    _WlecConnectionRuntimeType_Type()
)
wlecConnectionRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionRuntimeType.setStatus("current")


class _WlecConnectionRuntimeName_Type(DisplayString):
    """Custom type wlecConnectionRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WlecConnectionRuntimeName_Type.__name__ = "DisplayString"
_WlecConnectionRuntimeName_Object = MibTableColumn
wlecConnectionRuntimeName = _WlecConnectionRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 450, 1, 15),
    _WlecConnectionRuntimeName_Type()
)
wlecConnectionRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionRuntimeName.setStatus("current")


class _WlecConnectionRuntimeParent_Type(DisplayString):
    """Custom type wlecConnectionRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WlecConnectionRuntimeParent_Type.__name__ = "DisplayString"
_WlecConnectionRuntimeParent_Object = MibTableColumn
wlecConnectionRuntimeParent = _WlecConnectionRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 450, 1, 20),
    _WlecConnectionRuntimeParent_Type()
)
wlecConnectionRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionRuntimeParent.setStatus("current")


class _WlecConnectionRuntimeAddress_Type(DisplayString):
    """Custom type wlecConnectionRuntimeAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WlecConnectionRuntimeAddress_Type.__name__ = "DisplayString"
_WlecConnectionRuntimeAddress_Object = MibTableColumn
wlecConnectionRuntimeAddress = _WlecConnectionRuntimeAddress_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 450, 1, 25),
    _WlecConnectionRuntimeAddress_Type()
)
wlecConnectionRuntimeAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionRuntimeAddress.setStatus("current")


class _WlecConnectionRuntimeLastAccessTime_Type(DisplayString):
    """Custom type wlecConnectionRuntimeLastAccessTime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WlecConnectionRuntimeLastAccessTime_Type.__name__ = "DisplayString"
_WlecConnectionRuntimeLastAccessTime_Object = MibTableColumn
wlecConnectionRuntimeLastAccessTime = _WlecConnectionRuntimeLastAccessTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 450, 1, 30),
    _WlecConnectionRuntimeLastAccessTime_Type()
)
wlecConnectionRuntimeLastAccessTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionRuntimeLastAccessTime.setStatus("current")


class _WlecConnectionRuntimeAlive_Type(Integer32):
    """Custom type wlecConnectionRuntimeAlive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_WlecConnectionRuntimeAlive_Type.__name__ = "Integer32"
_WlecConnectionRuntimeAlive_Object = MibTableColumn
wlecConnectionRuntimeAlive = _WlecConnectionRuntimeAlive_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 450, 1, 35),
    _WlecConnectionRuntimeAlive_Type()
)
wlecConnectionRuntimeAlive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionRuntimeAlive.setStatus("current")
_WlecConnectionRuntimeRequestCount_Type = Integer32
_WlecConnectionRuntimeRequestCount_Object = MibTableColumn
wlecConnectionRuntimeRequestCount = _WlecConnectionRuntimeRequestCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 450, 1, 40),
    _WlecConnectionRuntimeRequestCount_Type()
)
wlecConnectionRuntimeRequestCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionRuntimeRequestCount.setStatus("current")
_WlecConnectionRuntimePendingRequestCount_Type = Integer32
_WlecConnectionRuntimePendingRequestCount_Object = MibTableColumn
wlecConnectionRuntimePendingRequestCount = _WlecConnectionRuntimePendingRequestCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 450, 1, 45),
    _WlecConnectionRuntimePendingRequestCount_Type()
)
wlecConnectionRuntimePendingRequestCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionRuntimePendingRequestCount.setStatus("current")
_WlecConnectionRuntimeErrorCount_Type = Integer32
_WlecConnectionRuntimeErrorCount_Object = MibTableColumn
wlecConnectionRuntimeErrorCount = _WlecConnectionRuntimeErrorCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 450, 1, 50),
    _WlecConnectionRuntimeErrorCount_Type()
)
wlecConnectionRuntimeErrorCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionRuntimeErrorCount.setStatus("current")


class _WlecConnectionRuntimeInTransaction_Type(Integer32):
    """Custom type wlecConnectionRuntimeInTransaction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_WlecConnectionRuntimeInTransaction_Type.__name__ = "Integer32"
_WlecConnectionRuntimeInTransaction_Object = MibTableColumn
wlecConnectionRuntimeInTransaction = _WlecConnectionRuntimeInTransaction_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 450, 1, 55),
    _WlecConnectionRuntimeInTransaction_Type()
)
wlecConnectionRuntimeInTransaction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionRuntimeInTransaction.setStatus("current")
_WlecConnectionServiceRuntimeTable_Object = MibTable
wlecConnectionServiceRuntimeTable = _WlecConnectionServiceRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 451)
)
if mibBuilder.loadTexts:
    wlecConnectionServiceRuntimeTable.setStatus("current")
_WlecConnectionServiceRuntimeEntry_Object = MibTableRow
wlecConnectionServiceRuntimeEntry = _WlecConnectionServiceRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 451, 1)
)
wlecConnectionServiceRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wlecConnectionServiceRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wlecConnectionServiceRuntimeEntry.setStatus("current")


class _WlecConnectionServiceRuntimeIndex_Type(DisplayString):
    """Custom type wlecConnectionServiceRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WlecConnectionServiceRuntimeIndex_Type.__name__ = "DisplayString"
_WlecConnectionServiceRuntimeIndex_Object = MibTableColumn
wlecConnectionServiceRuntimeIndex = _WlecConnectionServiceRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 451, 1, 1),
    _WlecConnectionServiceRuntimeIndex_Type()
)
wlecConnectionServiceRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionServiceRuntimeIndex.setStatus("current")


class _WlecConnectionServiceRuntimeObjectName_Type(DisplayString):
    """Custom type wlecConnectionServiceRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WlecConnectionServiceRuntimeObjectName_Type.__name__ = "DisplayString"
_WlecConnectionServiceRuntimeObjectName_Object = MibTableColumn
wlecConnectionServiceRuntimeObjectName = _WlecConnectionServiceRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 451, 1, 5),
    _WlecConnectionServiceRuntimeObjectName_Type()
)
wlecConnectionServiceRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionServiceRuntimeObjectName.setStatus("current")


class _WlecConnectionServiceRuntimeType_Type(DisplayString):
    """Custom type wlecConnectionServiceRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WlecConnectionServiceRuntimeType_Type.__name__ = "DisplayString"
_WlecConnectionServiceRuntimeType_Object = MibTableColumn
wlecConnectionServiceRuntimeType = _WlecConnectionServiceRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 451, 1, 10),
    _WlecConnectionServiceRuntimeType_Type()
)
wlecConnectionServiceRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionServiceRuntimeType.setStatus("current")


class _WlecConnectionServiceRuntimeName_Type(DisplayString):
    """Custom type wlecConnectionServiceRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WlecConnectionServiceRuntimeName_Type.__name__ = "DisplayString"
_WlecConnectionServiceRuntimeName_Object = MibTableColumn
wlecConnectionServiceRuntimeName = _WlecConnectionServiceRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 451, 1, 15),
    _WlecConnectionServiceRuntimeName_Type()
)
wlecConnectionServiceRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionServiceRuntimeName.setStatus("current")


class _WlecConnectionServiceRuntimeParent_Type(DisplayString):
    """Custom type wlecConnectionServiceRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WlecConnectionServiceRuntimeParent_Type.__name__ = "DisplayString"
_WlecConnectionServiceRuntimeParent_Object = MibTableColumn
wlecConnectionServiceRuntimeParent = _WlecConnectionServiceRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 451, 1, 20),
    _WlecConnectionServiceRuntimeParent_Type()
)
wlecConnectionServiceRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionServiceRuntimeParent.setStatus("current")
_WlecConnectionServiceRuntimeConnectionPoolCount_Type = Integer32
_WlecConnectionServiceRuntimeConnectionPoolCount_Object = MibTableColumn
wlecConnectionServiceRuntimeConnectionPoolCount = _WlecConnectionServiceRuntimeConnectionPoolCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 451, 1, 25),
    _WlecConnectionServiceRuntimeConnectionPoolCount_Type()
)
wlecConnectionServiceRuntimeConnectionPoolCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionServiceRuntimeConnectionPoolCount.setStatus("current")
_ConnectorConnectionRuntimeTable_Object = MibTable
connectorConnectionRuntimeTable = _ConnectorConnectionRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454)
)
if mibBuilder.loadTexts:
    connectorConnectionRuntimeTable.setStatus("current")
_ConnectorConnectionRuntimeEntry_Object = MibTableRow
connectorConnectionRuntimeEntry = _ConnectorConnectionRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1)
)
connectorConnectionRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "connectorConnectionRuntimeIndex"),
)
if mibBuilder.loadTexts:
    connectorConnectionRuntimeEntry.setStatus("current")


class _ConnectorConnectionRuntimeIndex_Type(DisplayString):
    """Custom type connectorConnectionRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ConnectorConnectionRuntimeIndex_Type.__name__ = "DisplayString"
_ConnectorConnectionRuntimeIndex_Object = MibTableColumn
connectorConnectionRuntimeIndex = _ConnectorConnectionRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 1),
    _ConnectorConnectionRuntimeIndex_Type()
)
connectorConnectionRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeIndex.setStatus("current")


class _ConnectorConnectionRuntimeObjectName_Type(DisplayString):
    """Custom type connectorConnectionRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ConnectorConnectionRuntimeObjectName_Type.__name__ = "DisplayString"
_ConnectorConnectionRuntimeObjectName_Object = MibTableColumn
connectorConnectionRuntimeObjectName = _ConnectorConnectionRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 5),
    _ConnectorConnectionRuntimeObjectName_Type()
)
connectorConnectionRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeObjectName.setStatus("current")


class _ConnectorConnectionRuntimeType_Type(DisplayString):
    """Custom type connectorConnectionRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorConnectionRuntimeType_Type.__name__ = "DisplayString"
_ConnectorConnectionRuntimeType_Object = MibTableColumn
connectorConnectionRuntimeType = _ConnectorConnectionRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 10),
    _ConnectorConnectionRuntimeType_Type()
)
connectorConnectionRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeType.setStatus("current")


class _ConnectorConnectionRuntimeName_Type(DisplayString):
    """Custom type connectorConnectionRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorConnectionRuntimeName_Type.__name__ = "DisplayString"
_ConnectorConnectionRuntimeName_Object = MibTableColumn
connectorConnectionRuntimeName = _ConnectorConnectionRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 15),
    _ConnectorConnectionRuntimeName_Type()
)
connectorConnectionRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeName.setStatus("current")


class _ConnectorConnectionRuntimeParent_Type(DisplayString):
    """Custom type connectorConnectionRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ConnectorConnectionRuntimeParent_Type.__name__ = "DisplayString"
_ConnectorConnectionRuntimeParent_Object = MibTableColumn
connectorConnectionRuntimeParent = _ConnectorConnectionRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 20),
    _ConnectorConnectionRuntimeParent_Type()
)
connectorConnectionRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeParent.setStatus("current")
_ConnectorConnectionRuntimeActiveHandlesCurrentCount_Type = Integer32
_ConnectorConnectionRuntimeActiveHandlesCurrentCount_Object = MibTableColumn
connectorConnectionRuntimeActiveHandlesCurrentCount = _ConnectorConnectionRuntimeActiveHandlesCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 25),
    _ConnectorConnectionRuntimeActiveHandlesCurrentCount_Type()
)
connectorConnectionRuntimeActiveHandlesCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeActiveHandlesCurrentCount.setStatus("current")
_ConnectorConnectionRuntimeActiveHandlesHighCount_Type = Integer32
_ConnectorConnectionRuntimeActiveHandlesHighCount_Object = MibTableColumn
connectorConnectionRuntimeActiveHandlesHighCount = _ConnectorConnectionRuntimeActiveHandlesHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 30),
    _ConnectorConnectionRuntimeActiveHandlesHighCount_Type()
)
connectorConnectionRuntimeActiveHandlesHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeActiveHandlesHighCount.setStatus("current")
_ConnectorConnectionRuntimeHandlesCreatedTotalCount_Type = Integer32
_ConnectorConnectionRuntimeHandlesCreatedTotalCount_Object = MibTableColumn
connectorConnectionRuntimeHandlesCreatedTotalCount = _ConnectorConnectionRuntimeHandlesCreatedTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 35),
    _ConnectorConnectionRuntimeHandlesCreatedTotalCount_Type()
)
connectorConnectionRuntimeHandlesCreatedTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeHandlesCreatedTotalCount.setStatus("current")


class _ConnectorConnectionRuntimeCurrentlyInUse_Type(Integer32):
    """Custom type connectorConnectionRuntimeCurrentlyInUse based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ConnectorConnectionRuntimeCurrentlyInUse_Type.__name__ = "Integer32"
_ConnectorConnectionRuntimeCurrentlyInUse_Object = MibTableColumn
connectorConnectionRuntimeCurrentlyInUse = _ConnectorConnectionRuntimeCurrentlyInUse_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 40),
    _ConnectorConnectionRuntimeCurrentlyInUse_Type()
)
connectorConnectionRuntimeCurrentlyInUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeCurrentlyInUse.setStatus("current")


class _ConnectorConnectionRuntimeInTransaction_Type(Integer32):
    """Custom type connectorConnectionRuntimeInTransaction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ConnectorConnectionRuntimeInTransaction_Type.__name__ = "Integer32"
_ConnectorConnectionRuntimeInTransaction_Object = MibTableColumn
connectorConnectionRuntimeInTransaction = _ConnectorConnectionRuntimeInTransaction_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 45),
    _ConnectorConnectionRuntimeInTransaction_Type()
)
connectorConnectionRuntimeInTransaction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeInTransaction.setStatus("current")
_ConnectorConnectionRuntimeShared_Type = Integer32
_ConnectorConnectionRuntimeShared_Object = MibTableColumn
connectorConnectionRuntimeShared = _ConnectorConnectionRuntimeShared_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 50),
    _ConnectorConnectionRuntimeShared_Type()
)
connectorConnectionRuntimeShared.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeShared.setStatus("current")
_ConnectorConnectionRuntimeEISProductVersion_Type = OctetString
_ConnectorConnectionRuntimeEISProductVersion_Object = MibTableColumn
connectorConnectionRuntimeEISProductVersion = _ConnectorConnectionRuntimeEISProductVersion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 51),
    _ConnectorConnectionRuntimeEISProductVersion_Type()
)
connectorConnectionRuntimeEISProductVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeEISProductVersion.setStatus("current")
_ConnectorConnectionRuntimeDeletable_Type = OctetString
_ConnectorConnectionRuntimeDeletable_Object = MibTableColumn
connectorConnectionRuntimeDeletable = _ConnectorConnectionRuntimeDeletable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 52),
    _ConnectorConnectionRuntimeDeletable_Type()
)
connectorConnectionRuntimeDeletable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeDeletable.setStatus("current")
_ConnectorConnectionRuntimeReserveDurationTime_Type = Counter64
_ConnectorConnectionRuntimeReserveDurationTime_Object = MibTableColumn
connectorConnectionRuntimeReserveDurationTime = _ConnectorConnectionRuntimeReserveDurationTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 53),
    _ConnectorConnectionRuntimeReserveDurationTime_Type()
)
connectorConnectionRuntimeReserveDurationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeReserveDurationTime.setStatus("current")
_ConnectorConnectionRuntimeTransactionId_Type = OctetString
_ConnectorConnectionRuntimeTransactionId_Object = MibTableColumn
connectorConnectionRuntimeTransactionId = _ConnectorConnectionRuntimeTransactionId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 54),
    _ConnectorConnectionRuntimeTransactionId_Type()
)
connectorConnectionRuntimeTransactionId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeTransactionId.setStatus("current")
_ConnectorConnectionRuntimeConnectionFactoryClassName_Type = OctetString
_ConnectorConnectionRuntimeConnectionFactoryClassName_Object = MibTableColumn
connectorConnectionRuntimeConnectionFactoryClassName = _ConnectorConnectionRuntimeConnectionFactoryClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 55),
    _ConnectorConnectionRuntimeConnectionFactoryClassName_Type()
)
connectorConnectionRuntimeConnectionFactoryClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeConnectionFactoryClassName.setStatus("current")
_ConnectorConnectionRuntimeEISProductName_Type = OctetString
_ConnectorConnectionRuntimeEISProductName_Object = MibTableColumn
connectorConnectionRuntimeEISProductName = _ConnectorConnectionRuntimeEISProductName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 56),
    _ConnectorConnectionRuntimeEISProductName_Type()
)
connectorConnectionRuntimeEISProductName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeEISProductName.setStatus("current")
_ConnectorConnectionRuntimeUserName_Type = OctetString
_ConnectorConnectionRuntimeUserName_Object = MibTableColumn
connectorConnectionRuntimeUserName = _ConnectorConnectionRuntimeUserName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 57),
    _ConnectorConnectionRuntimeUserName_Type()
)
connectorConnectionRuntimeUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeUserName.setStatus("current")
_ConnectorConnectionRuntimeReserveTime_Type = Counter64
_ConnectorConnectionRuntimeReserveTime_Object = MibTableColumn
connectorConnectionRuntimeReserveTime = _ConnectorConnectionRuntimeReserveTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 58),
    _ConnectorConnectionRuntimeReserveTime_Type()
)
connectorConnectionRuntimeReserveTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeReserveTime.setStatus("current")
_ConnectorConnectionRuntimeCreationDurationTime_Type = Counter64
_ConnectorConnectionRuntimeCreationDurationTime_Object = MibTableColumn
connectorConnectionRuntimeCreationDurationTime = _ConnectorConnectionRuntimeCreationDurationTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 59),
    _ConnectorConnectionRuntimeCreationDurationTime_Type()
)
connectorConnectionRuntimeCreationDurationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeCreationDurationTime.setStatus("current")
_ConnectorConnectionRuntimeManagedConnectionFactoryClassName_Type = OctetString
_ConnectorConnectionRuntimeManagedConnectionFactoryClassName_Object = MibTableColumn
connectorConnectionRuntimeManagedConnectionFactoryClassName = _ConnectorConnectionRuntimeManagedConnectionFactoryClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 60),
    _ConnectorConnectionRuntimeManagedConnectionFactoryClassName_Type()
)
connectorConnectionRuntimeManagedConnectionFactoryClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeManagedConnectionFactoryClassName.setStatus("current")
_ConnectorConnectionRuntimeMaxConnections_Type = OctetString
_ConnectorConnectionRuntimeMaxConnections_Object = MibTableColumn
connectorConnectionRuntimeMaxConnections = _ConnectorConnectionRuntimeMaxConnections_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 454, 1, 61),
    _ConnectorConnectionRuntimeMaxConnections_Type()
)
connectorConnectionRuntimeMaxConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionRuntimeMaxConnections.setStatus("current")
_ConnectorConnectionPoolRuntimeTable_Object = MibTable
connectorConnectionPoolRuntimeTable = _ConnectorConnectionPoolRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455)
)
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeTable.setStatus("current")
_ConnectorConnectionPoolRuntimeEntry_Object = MibTableRow
connectorConnectionPoolRuntimeEntry = _ConnectorConnectionPoolRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1)
)
connectorConnectionPoolRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "connectorConnectionPoolRuntimeIndex"),
)
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeEntry.setStatus("current")


class _ConnectorConnectionPoolRuntimeIndex_Type(DisplayString):
    """Custom type connectorConnectionPoolRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ConnectorConnectionPoolRuntimeIndex_Type.__name__ = "DisplayString"
_ConnectorConnectionPoolRuntimeIndex_Object = MibTableColumn
connectorConnectionPoolRuntimeIndex = _ConnectorConnectionPoolRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 1),
    _ConnectorConnectionPoolRuntimeIndex_Type()
)
connectorConnectionPoolRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeIndex.setStatus("current")


class _ConnectorConnectionPoolRuntimeObjectName_Type(DisplayString):
    """Custom type connectorConnectionPoolRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ConnectorConnectionPoolRuntimeObjectName_Type.__name__ = "DisplayString"
_ConnectorConnectionPoolRuntimeObjectName_Object = MibTableColumn
connectorConnectionPoolRuntimeObjectName = _ConnectorConnectionPoolRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 5),
    _ConnectorConnectionPoolRuntimeObjectName_Type()
)
connectorConnectionPoolRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeObjectName.setStatus("current")


class _ConnectorConnectionPoolRuntimeType_Type(DisplayString):
    """Custom type connectorConnectionPoolRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorConnectionPoolRuntimeType_Type.__name__ = "DisplayString"
_ConnectorConnectionPoolRuntimeType_Object = MibTableColumn
connectorConnectionPoolRuntimeType = _ConnectorConnectionPoolRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 10),
    _ConnectorConnectionPoolRuntimeType_Type()
)
connectorConnectionPoolRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeType.setStatus("current")


class _ConnectorConnectionPoolRuntimeName_Type(DisplayString):
    """Custom type connectorConnectionPoolRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorConnectionPoolRuntimeName_Type.__name__ = "DisplayString"
_ConnectorConnectionPoolRuntimeName_Object = MibTableColumn
connectorConnectionPoolRuntimeName = _ConnectorConnectionPoolRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 15),
    _ConnectorConnectionPoolRuntimeName_Type()
)
connectorConnectionPoolRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeName.setStatus("current")


class _ConnectorConnectionPoolRuntimeParent_Type(DisplayString):
    """Custom type connectorConnectionPoolRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ConnectorConnectionPoolRuntimeParent_Type.__name__ = "DisplayString"
_ConnectorConnectionPoolRuntimeParent_Object = MibTableColumn
connectorConnectionPoolRuntimeParent = _ConnectorConnectionPoolRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 20),
    _ConnectorConnectionPoolRuntimeParent_Type()
)
connectorConnectionPoolRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeParent.setStatus("current")


class _ConnectorConnectionPoolRuntimePoolName_Type(DisplayString):
    """Custom type connectorConnectionPoolRuntimePoolName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ConnectorConnectionPoolRuntimePoolName_Type.__name__ = "DisplayString"
_ConnectorConnectionPoolRuntimePoolName_Object = MibTableColumn
connectorConnectionPoolRuntimePoolName = _ConnectorConnectionPoolRuntimePoolName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 25),
    _ConnectorConnectionPoolRuntimePoolName_Type()
)
connectorConnectionPoolRuntimePoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimePoolName.setStatus("current")


class _ConnectorConnectionPoolRuntimeJNDIName_Type(DisplayString):
    """Custom type connectorConnectionPoolRuntimeJNDIName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorConnectionPoolRuntimeJNDIName_Type.__name__ = "DisplayString"
_ConnectorConnectionPoolRuntimeJNDIName_Object = MibTableColumn
connectorConnectionPoolRuntimeJNDIName = _ConnectorConnectionPoolRuntimeJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 30),
    _ConnectorConnectionPoolRuntimeJNDIName_Type()
)
connectorConnectionPoolRuntimeJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeJNDIName.setStatus("current")


class _ConnectorConnectionPoolRuntimeConnectionFactoryName_Type(DisplayString):
    """Custom type connectorConnectionPoolRuntimeConnectionFactoryName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ConnectorConnectionPoolRuntimeConnectionFactoryName_Type.__name__ = "DisplayString"
_ConnectorConnectionPoolRuntimeConnectionFactoryName_Object = MibTableColumn
connectorConnectionPoolRuntimeConnectionFactoryName = _ConnectorConnectionPoolRuntimeConnectionFactoryName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 35),
    _ConnectorConnectionPoolRuntimeConnectionFactoryName_Type()
)
connectorConnectionPoolRuntimeConnectionFactoryName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeConnectionFactoryName.setStatus("current")


class _ConnectorConnectionPoolRuntimeResourceAdapterLinkRefName_Type(DisplayString):
    """Custom type connectorConnectionPoolRuntimeResourceAdapterLinkRefName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ConnectorConnectionPoolRuntimeResourceAdapterLinkRefName_Type.__name__ = "DisplayString"
_ConnectorConnectionPoolRuntimeResourceAdapterLinkRefName_Object = MibTableColumn
connectorConnectionPoolRuntimeResourceAdapterLinkRefName = _ConnectorConnectionPoolRuntimeResourceAdapterLinkRefName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 40),
    _ConnectorConnectionPoolRuntimeResourceAdapterLinkRefName_Type()
)
connectorConnectionPoolRuntimeResourceAdapterLinkRefName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeResourceAdapterLinkRefName.setStatus("current")


class _ConnectorConnectionPoolRuntimeLogFileName_Type(DisplayString):
    """Custom type connectorConnectionPoolRuntimeLogFileName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ConnectorConnectionPoolRuntimeLogFileName_Type.__name__ = "DisplayString"
_ConnectorConnectionPoolRuntimeLogFileName_Object = MibTableColumn
connectorConnectionPoolRuntimeLogFileName = _ConnectorConnectionPoolRuntimeLogFileName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 45),
    _ConnectorConnectionPoolRuntimeLogFileName_Type()
)
connectorConnectionPoolRuntimeLogFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeLogFileName.setStatus("current")


class _ConnectorConnectionPoolRuntimeTransactionSupport_Type(DisplayString):
    """Custom type connectorConnectionPoolRuntimeTransactionSupport based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ConnectorConnectionPoolRuntimeTransactionSupport_Type.__name__ = "DisplayString"
_ConnectorConnectionPoolRuntimeTransactionSupport_Object = MibTableColumn
connectorConnectionPoolRuntimeTransactionSupport = _ConnectorConnectionPoolRuntimeTransactionSupport_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 50),
    _ConnectorConnectionPoolRuntimeTransactionSupport_Type()
)
connectorConnectionPoolRuntimeTransactionSupport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeTransactionSupport.setStatus("current")


class _ConnectorConnectionPoolRuntimeConnections_Type(DisplayString):
    """Custom type connectorConnectionPoolRuntimeConnections based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ConnectorConnectionPoolRuntimeConnections_Type.__name__ = "DisplayString"
_ConnectorConnectionPoolRuntimeConnections_Object = MibTableColumn
connectorConnectionPoolRuntimeConnections = _ConnectorConnectionPoolRuntimeConnections_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 55),
    _ConnectorConnectionPoolRuntimeConnections_Type()
)
connectorConnectionPoolRuntimeConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeConnections.setStatus("current")


class _ConnectorConnectionPoolRuntimeLoggingEnabled_Type(Integer32):
    """Custom type connectorConnectionPoolRuntimeLoggingEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ConnectorConnectionPoolRuntimeLoggingEnabled_Type.__name__ = "Integer32"
_ConnectorConnectionPoolRuntimeLoggingEnabled_Object = MibTableColumn
connectorConnectionPoolRuntimeLoggingEnabled = _ConnectorConnectionPoolRuntimeLoggingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 60),
    _ConnectorConnectionPoolRuntimeLoggingEnabled_Type()
)
connectorConnectionPoolRuntimeLoggingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeLoggingEnabled.setStatus("current")
_ConnectorConnectionPoolRuntimeMaxCapacity_Type = Integer32
_ConnectorConnectionPoolRuntimeMaxCapacity_Object = MibTableColumn
connectorConnectionPoolRuntimeMaxCapacity = _ConnectorConnectionPoolRuntimeMaxCapacity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 65),
    _ConnectorConnectionPoolRuntimeMaxCapacity_Type()
)
connectorConnectionPoolRuntimeMaxCapacity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeMaxCapacity.setStatus("current")
_ConnectorConnectionPoolRuntimeInitialCapacity_Type = Integer32
_ConnectorConnectionPoolRuntimeInitialCapacity_Object = MibTableColumn
connectorConnectionPoolRuntimeInitialCapacity = _ConnectorConnectionPoolRuntimeInitialCapacity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 70),
    _ConnectorConnectionPoolRuntimeInitialCapacity_Type()
)
connectorConnectionPoolRuntimeInitialCapacity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeInitialCapacity.setStatus("current")
_ConnectorConnectionPoolRuntimeCapacityIncrement_Type = Integer32
_ConnectorConnectionPoolRuntimeCapacityIncrement_Object = MibTableColumn
connectorConnectionPoolRuntimeCapacityIncrement = _ConnectorConnectionPoolRuntimeCapacityIncrement_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 75),
    _ConnectorConnectionPoolRuntimeCapacityIncrement_Type()
)
connectorConnectionPoolRuntimeCapacityIncrement.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeCapacityIncrement.setStatus("current")


class _ConnectorConnectionPoolRuntimeShrinkingEnabled_Type(Integer32):
    """Custom type connectorConnectionPoolRuntimeShrinkingEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ConnectorConnectionPoolRuntimeShrinkingEnabled_Type.__name__ = "Integer32"
_ConnectorConnectionPoolRuntimeShrinkingEnabled_Object = MibTableColumn
connectorConnectionPoolRuntimeShrinkingEnabled = _ConnectorConnectionPoolRuntimeShrinkingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 80),
    _ConnectorConnectionPoolRuntimeShrinkingEnabled_Type()
)
connectorConnectionPoolRuntimeShrinkingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeShrinkingEnabled.setStatus("current")
_ConnectorConnectionPoolRuntimeShrinkPeriodMinutes_Type = Integer32
_ConnectorConnectionPoolRuntimeShrinkPeriodMinutes_Object = MibTableColumn
connectorConnectionPoolRuntimeShrinkPeriodMinutes = _ConnectorConnectionPoolRuntimeShrinkPeriodMinutes_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 85),
    _ConnectorConnectionPoolRuntimeShrinkPeriodMinutes_Type()
)
connectorConnectionPoolRuntimeShrinkPeriodMinutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeShrinkPeriodMinutes.setStatus("current")
_ConnectorConnectionPoolRuntimeActiveConnectionsCurrentCount_Type = Integer32
_ConnectorConnectionPoolRuntimeActiveConnectionsCurrentCount_Object = MibTableColumn
connectorConnectionPoolRuntimeActiveConnectionsCurrentCount = _ConnectorConnectionPoolRuntimeActiveConnectionsCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 90),
    _ConnectorConnectionPoolRuntimeActiveConnectionsCurrentCount_Type()
)
connectorConnectionPoolRuntimeActiveConnectionsCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeActiveConnectionsCurrentCount.setStatus("current")
_ConnectorConnectionPoolRuntimeActiveConnectionsHighCount_Type = Integer32
_ConnectorConnectionPoolRuntimeActiveConnectionsHighCount_Object = MibTableColumn
connectorConnectionPoolRuntimeActiveConnectionsHighCount = _ConnectorConnectionPoolRuntimeActiveConnectionsHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 95),
    _ConnectorConnectionPoolRuntimeActiveConnectionsHighCount_Type()
)
connectorConnectionPoolRuntimeActiveConnectionsHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeActiveConnectionsHighCount.setStatus("current")
_ConnectorConnectionPoolRuntimeFreeConnectionsCurrentCount_Type = Integer32
_ConnectorConnectionPoolRuntimeFreeConnectionsCurrentCount_Object = MibTableColumn
connectorConnectionPoolRuntimeFreeConnectionsCurrentCount = _ConnectorConnectionPoolRuntimeFreeConnectionsCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 100),
    _ConnectorConnectionPoolRuntimeFreeConnectionsCurrentCount_Type()
)
connectorConnectionPoolRuntimeFreeConnectionsCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeFreeConnectionsCurrentCount.setStatus("current")
_ConnectorConnectionPoolRuntimeFreeConnectionsHighCount_Type = Integer32
_ConnectorConnectionPoolRuntimeFreeConnectionsHighCount_Object = MibTableColumn
connectorConnectionPoolRuntimeFreeConnectionsHighCount = _ConnectorConnectionPoolRuntimeFreeConnectionsHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 105),
    _ConnectorConnectionPoolRuntimeFreeConnectionsHighCount_Type()
)
connectorConnectionPoolRuntimeFreeConnectionsHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeFreeConnectionsHighCount.setStatus("current")
_ConnectorConnectionPoolRuntimeAverageActiveUsage_Type = Integer32
_ConnectorConnectionPoolRuntimeAverageActiveUsage_Object = MibTableColumn
connectorConnectionPoolRuntimeAverageActiveUsage = _ConnectorConnectionPoolRuntimeAverageActiveUsage_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 110),
    _ConnectorConnectionPoolRuntimeAverageActiveUsage_Type()
)
connectorConnectionPoolRuntimeAverageActiveUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeAverageActiveUsage.setStatus("current")
_ConnectorConnectionPoolRuntimeShrinkCountDownTime_Type = Integer32
_ConnectorConnectionPoolRuntimeShrinkCountDownTime_Object = MibTableColumn
connectorConnectionPoolRuntimeShrinkCountDownTime = _ConnectorConnectionPoolRuntimeShrinkCountDownTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 115),
    _ConnectorConnectionPoolRuntimeShrinkCountDownTime_Type()
)
connectorConnectionPoolRuntimeShrinkCountDownTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeShrinkCountDownTime.setStatus("current")
_ConnectorConnectionPoolRuntimeRecycledTotal_Type = Integer32
_ConnectorConnectionPoolRuntimeRecycledTotal_Object = MibTableColumn
connectorConnectionPoolRuntimeRecycledTotal = _ConnectorConnectionPoolRuntimeRecycledTotal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 120),
    _ConnectorConnectionPoolRuntimeRecycledTotal_Type()
)
connectorConnectionPoolRuntimeRecycledTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeRecycledTotal.setStatus("current")
_ConnectorConnectionPoolRuntimeConnectionsCreatedTotalCount_Type = Integer32
_ConnectorConnectionPoolRuntimeConnectionsCreatedTotalCount_Object = MibTableColumn
connectorConnectionPoolRuntimeConnectionsCreatedTotalCount = _ConnectorConnectionPoolRuntimeConnectionsCreatedTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 125),
    _ConnectorConnectionPoolRuntimeConnectionsCreatedTotalCount_Type()
)
connectorConnectionPoolRuntimeConnectionsCreatedTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeConnectionsCreatedTotalCount.setStatus("current")
_ConnectorConnectionPoolRuntimeConnectionsMatchedTotalCount_Type = Integer32
_ConnectorConnectionPoolRuntimeConnectionsMatchedTotalCount_Object = MibTableColumn
connectorConnectionPoolRuntimeConnectionsMatchedTotalCount = _ConnectorConnectionPoolRuntimeConnectionsMatchedTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 130),
    _ConnectorConnectionPoolRuntimeConnectionsMatchedTotalCount_Type()
)
connectorConnectionPoolRuntimeConnectionsMatchedTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeConnectionsMatchedTotalCount.setStatus("current")
_ConnectorConnectionPoolRuntimeConnectionsDestroyedTotalCount_Type = Integer32
_ConnectorConnectionPoolRuntimeConnectionsDestroyedTotalCount_Object = MibTableColumn
connectorConnectionPoolRuntimeConnectionsDestroyedTotalCount = _ConnectorConnectionPoolRuntimeConnectionsDestroyedTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 135),
    _ConnectorConnectionPoolRuntimeConnectionsDestroyedTotalCount_Type()
)
connectorConnectionPoolRuntimeConnectionsDestroyedTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeConnectionsDestroyedTotalCount.setStatus("current")
_ConnectorConnectionPoolRuntimeConnectionsRejectedTotalCount_Type = Integer32
_ConnectorConnectionPoolRuntimeConnectionsRejectedTotalCount_Object = MibTableColumn
connectorConnectionPoolRuntimeConnectionsRejectedTotalCount = _ConnectorConnectionPoolRuntimeConnectionsRejectedTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 140),
    _ConnectorConnectionPoolRuntimeConnectionsRejectedTotalCount_Type()
)
connectorConnectionPoolRuntimeConnectionsRejectedTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeConnectionsRejectedTotalCount.setStatus("current")
_ConnectorConnectionPoolRuntimeConnectionLeakProfileCount_Type = Integer32
_ConnectorConnectionPoolRuntimeConnectionLeakProfileCount_Object = MibTableColumn
connectorConnectionPoolRuntimeConnectionLeakProfileCount = _ConnectorConnectionPoolRuntimeConnectionLeakProfileCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 141),
    _ConnectorConnectionPoolRuntimeConnectionLeakProfileCount_Type()
)
connectorConnectionPoolRuntimeConnectionLeakProfileCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeConnectionLeakProfileCount.setStatus("current")
_ConnectorConnectionPoolRuntimeNumberDetectedIdle_Type = Integer32
_ConnectorConnectionPoolRuntimeNumberDetectedIdle_Object = MibTableColumn
connectorConnectionPoolRuntimeNumberDetectedIdle = _ConnectorConnectionPoolRuntimeNumberDetectedIdle_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 143),
    _ConnectorConnectionPoolRuntimeNumberDetectedIdle_Type()
)
connectorConnectionPoolRuntimeNumberDetectedIdle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeNumberDetectedIdle.setStatus("current")
_ConnectorConnectionPoolRuntimeNumberDetectedLeaks_Type = Integer32
_ConnectorConnectionPoolRuntimeNumberDetectedLeaks_Object = MibTableColumn
connectorConnectionPoolRuntimeNumberDetectedLeaks = _ConnectorConnectionPoolRuntimeNumberDetectedLeaks_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 144),
    _ConnectorConnectionPoolRuntimeNumberDetectedLeaks_Type()
)
connectorConnectionPoolRuntimeNumberDetectedLeaks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeNumberDetectedLeaks.setStatus("current")
_ConnectorConnectionPoolRuntimeFreePoolSizeHighWaterMark_Type = Counter64
_ConnectorConnectionPoolRuntimeFreePoolSizeHighWaterMark_Object = MibTableColumn
connectorConnectionPoolRuntimeFreePoolSizeHighWaterMark = _ConnectorConnectionPoolRuntimeFreePoolSizeHighWaterMark_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 145),
    _ConnectorConnectionPoolRuntimeFreePoolSizeHighWaterMark_Type()
)
connectorConnectionPoolRuntimeFreePoolSizeHighWaterMark.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeFreePoolSizeHighWaterMark.setStatus("current")
_ConnectorConnectionPoolRuntimeKey_Type = OctetString
_ConnectorConnectionPoolRuntimeKey_Object = MibTableColumn
connectorConnectionPoolRuntimeKey = _ConnectorConnectionPoolRuntimeKey_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 146),
    _ConnectorConnectionPoolRuntimeKey_Type()
)
connectorConnectionPoolRuntimeKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeKey.setStatus("current")
_ConnectorConnectionPoolRuntimeCurrentCapacity_Type = Counter64
_ConnectorConnectionPoolRuntimeCurrentCapacity_Object = MibTableColumn
connectorConnectionPoolRuntimeCurrentCapacity = _ConnectorConnectionPoolRuntimeCurrentCapacity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 147),
    _ConnectorConnectionPoolRuntimeCurrentCapacity_Type()
)
connectorConnectionPoolRuntimeCurrentCapacity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeCurrentCapacity.setStatus("current")
_ConnectorConnectionPoolRuntimeMCFClassName_Type = OctetString
_ConnectorConnectionPoolRuntimeMCFClassName_Object = MibTableColumn
connectorConnectionPoolRuntimeMCFClassName = _ConnectorConnectionPoolRuntimeMCFClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 148),
    _ConnectorConnectionPoolRuntimeMCFClassName_Type()
)
connectorConnectionPoolRuntimeMCFClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeMCFClassName.setStatus("current")
_ConnectorConnectionPoolRuntimeTestable_Type = OctetString
_ConnectorConnectionPoolRuntimeTestable_Object = MibTableColumn
connectorConnectionPoolRuntimeTestable = _ConnectorConnectionPoolRuntimeTestable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 149),
    _ConnectorConnectionPoolRuntimeTestable_Type()
)
connectorConnectionPoolRuntimeTestable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeTestable.setStatus("current")
_ConnectorConnectionPoolRuntimeNumUnavailableHighCount_Type = Integer32
_ConnectorConnectionPoolRuntimeNumUnavailableHighCount_Object = MibTableColumn
connectorConnectionPoolRuntimeNumUnavailableHighCount = _ConnectorConnectionPoolRuntimeNumUnavailableHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 150),
    _ConnectorConnectionPoolRuntimeNumUnavailableHighCount_Type()
)
connectorConnectionPoolRuntimeNumUnavailableHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeNumUnavailableHighCount.setStatus("current")
_ConnectorConnectionPoolRuntimeConnectionsDestroyedByErrorTotalCount_Type = Integer32
_ConnectorConnectionPoolRuntimeConnectionsDestroyedByErrorTotalCount_Object = MibTableColumn
connectorConnectionPoolRuntimeConnectionsDestroyedByErrorTotalCount = _ConnectorConnectionPoolRuntimeConnectionsDestroyedByErrorTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 151),
    _ConnectorConnectionPoolRuntimeConnectionsDestroyedByErrorTotalCount_Type()
)
connectorConnectionPoolRuntimeConnectionsDestroyedByErrorTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeConnectionsDestroyedByErrorTotalCount.setStatus("current")
_ConnectorConnectionPoolRuntimeNumWaiters_Type = Counter64
_ConnectorConnectionPoolRuntimeNumWaiters_Object = MibTableColumn
connectorConnectionPoolRuntimeNumWaiters = _ConnectorConnectionPoolRuntimeNumWaiters_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 152),
    _ConnectorConnectionPoolRuntimeNumWaiters_Type()
)
connectorConnectionPoolRuntimeNumWaiters.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeNumWaiters.setStatus("current")
_ConnectorConnectionPoolRuntimeConnectorEisType_Type = OctetString
_ConnectorConnectionPoolRuntimeConnectorEisType_Object = MibTableColumn
connectorConnectionPoolRuntimeConnectorEisType = _ConnectorConnectionPoolRuntimeConnectorEisType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 153),
    _ConnectorConnectionPoolRuntimeConnectorEisType_Type()
)
connectorConnectionPoolRuntimeConnectorEisType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeConnectorEisType.setStatus("current")
_ConnectorConnectionPoolRuntimeNumWaitersCurrentCount_Type = Integer32
_ConnectorConnectionPoolRuntimeNumWaitersCurrentCount_Object = MibTableColumn
connectorConnectionPoolRuntimeNumWaitersCurrentCount = _ConnectorConnectionPoolRuntimeNumWaitersCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 154),
    _ConnectorConnectionPoolRuntimeNumWaitersCurrentCount_Type()
)
connectorConnectionPoolRuntimeNumWaitersCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeNumWaitersCurrentCount.setStatus("current")
_ConnectorConnectionPoolRuntimeMaxIdleTime_Type = Integer32
_ConnectorConnectionPoolRuntimeMaxIdleTime_Object = MibTableColumn
connectorConnectionPoolRuntimeMaxIdleTime = _ConnectorConnectionPoolRuntimeMaxIdleTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 155),
    _ConnectorConnectionPoolRuntimeMaxIdleTime_Type()
)
connectorConnectionPoolRuntimeMaxIdleTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeMaxIdleTime.setStatus("current")
_ConnectorConnectionPoolRuntimeLastShrinkTime_Type = Counter64
_ConnectorConnectionPoolRuntimeLastShrinkTime_Object = MibTableColumn
connectorConnectionPoolRuntimeLastShrinkTime = _ConnectorConnectionPoolRuntimeLastShrinkTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 156),
    _ConnectorConnectionPoolRuntimeLastShrinkTime_Type()
)
connectorConnectionPoolRuntimeLastShrinkTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeLastShrinkTime.setStatus("current")
_ConnectorConnectionPoolRuntimeState_Type = OctetString
_ConnectorConnectionPoolRuntimeState_Object = MibTableColumn
connectorConnectionPoolRuntimeState = _ConnectorConnectionPoolRuntimeState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 157),
    _ConnectorConnectionPoolRuntimeState_Type()
)
connectorConnectionPoolRuntimeState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeState.setStatus("current")
_ConnectorConnectionPoolRuntimeResourceLink_Type = OctetString
_ConnectorConnectionPoolRuntimeResourceLink_Object = MibTableColumn
connectorConnectionPoolRuntimeResourceLink = _ConnectorConnectionPoolRuntimeResourceLink_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 158),
    _ConnectorConnectionPoolRuntimeResourceLink_Type()
)
connectorConnectionPoolRuntimeResourceLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeResourceLink.setStatus("current")
_ConnectorConnectionPoolRuntimeCloseCount_Type = Counter64
_ConnectorConnectionPoolRuntimeCloseCount_Object = MibTableColumn
connectorConnectionPoolRuntimeCloseCount = _ConnectorConnectionPoolRuntimeCloseCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 159),
    _ConnectorConnectionPoolRuntimeCloseCount_Type()
)
connectorConnectionPoolRuntimeCloseCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeCloseCount.setStatus("current")
_ConnectorConnectionPoolRuntimeManagedConnectionFactoryClassName_Type = OctetString
_ConnectorConnectionPoolRuntimeManagedConnectionFactoryClassName_Object = MibTableColumn
connectorConnectionPoolRuntimeManagedConnectionFactoryClassName = _ConnectorConnectionPoolRuntimeManagedConnectionFactoryClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 160),
    _ConnectorConnectionPoolRuntimeManagedConnectionFactoryClassName_Type()
)
connectorConnectionPoolRuntimeManagedConnectionFactoryClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeManagedConnectionFactoryClassName.setStatus("current")
_ConnectorConnectionPoolRuntimeHighestNumWaiters_Type = Counter64
_ConnectorConnectionPoolRuntimeHighestNumWaiters_Object = MibTableColumn
connectorConnectionPoolRuntimeHighestNumWaiters = _ConnectorConnectionPoolRuntimeHighestNumWaiters_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 161),
    _ConnectorConnectionPoolRuntimeHighestNumWaiters_Type()
)
connectorConnectionPoolRuntimeHighestNumWaiters.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeHighestNumWaiters.setStatus("current")
_ConnectorConnectionPoolRuntimePoolSizeHighWaterMark_Type = Counter64
_ConnectorConnectionPoolRuntimePoolSizeHighWaterMark_Object = MibTableColumn
connectorConnectionPoolRuntimePoolSizeHighWaterMark = _ConnectorConnectionPoolRuntimePoolSizeHighWaterMark_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 162),
    _ConnectorConnectionPoolRuntimePoolSizeHighWaterMark_Type()
)
connectorConnectionPoolRuntimePoolSizeHighWaterMark.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimePoolSizeHighWaterMark.setStatus("current")
_ConnectorConnectionPoolRuntimeConnectionFactoryClassName_Type = OctetString
_ConnectorConnectionPoolRuntimeConnectionFactoryClassName_Object = MibTableColumn
connectorConnectionPoolRuntimeConnectionFactoryClassName = _ConnectorConnectionPoolRuntimeConnectionFactoryClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 163),
    _ConnectorConnectionPoolRuntimeConnectionFactoryClassName_Type()
)
connectorConnectionPoolRuntimeConnectionFactoryClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeConnectionFactoryClassName.setStatus("current")
_ConnectorConnectionPoolRuntimeEISResourceId_Type = OctetString
_ConnectorConnectionPoolRuntimeEISResourceId_Object = MibTableColumn
connectorConnectionPoolRuntimeEISResourceId = _ConnectorConnectionPoolRuntimeEISResourceId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 164),
    _ConnectorConnectionPoolRuntimeEISResourceId_Type()
)
connectorConnectionPoolRuntimeEISResourceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeEISResourceId.setStatus("current")
_ConnectorConnectionPoolRuntimeFreePoolSizeLowWaterMark_Type = Counter64
_ConnectorConnectionPoolRuntimeFreePoolSizeLowWaterMark_Object = MibTableColumn
connectorConnectionPoolRuntimeFreePoolSizeLowWaterMark = _ConnectorConnectionPoolRuntimeFreePoolSizeLowWaterMark_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 165),
    _ConnectorConnectionPoolRuntimeFreePoolSizeLowWaterMark_Type()
)
connectorConnectionPoolRuntimeFreePoolSizeLowWaterMark.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeFreePoolSizeLowWaterMark.setStatus("current")
_ConnectorConnectionPoolRuntimePoolSizeLowWaterMark_Type = Counter64
_ConnectorConnectionPoolRuntimePoolSizeLowWaterMark_Object = MibTableColumn
connectorConnectionPoolRuntimePoolSizeLowWaterMark = _ConnectorConnectionPoolRuntimePoolSizeLowWaterMark_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 166),
    _ConnectorConnectionPoolRuntimePoolSizeLowWaterMark_Type()
)
connectorConnectionPoolRuntimePoolSizeLowWaterMark.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimePoolSizeLowWaterMark.setStatus("current")
_ConnectorConnectionPoolRuntimeConnectionsDestroyedByShrinkingTotalCount_Type = Integer32
_ConnectorConnectionPoolRuntimeConnectionsDestroyedByShrinkingTotalCount_Object = MibTableColumn
connectorConnectionPoolRuntimeConnectionsDestroyedByShrinkingTotalCount = _ConnectorConnectionPoolRuntimeConnectionsDestroyedByShrinkingTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 167),
    _ConnectorConnectionPoolRuntimeConnectionsDestroyedByShrinkingTotalCount_Type()
)
connectorConnectionPoolRuntimeConnectionsDestroyedByShrinkingTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeConnectionsDestroyedByShrinkingTotalCount.setStatus("current")
_ConnectorConnectionPoolRuntimeNumUnavailableCurrentCount_Type = Integer32
_ConnectorConnectionPoolRuntimeNumUnavailableCurrentCount_Object = MibTableColumn
connectorConnectionPoolRuntimeNumUnavailableCurrentCount = _ConnectorConnectionPoolRuntimeNumUnavailableCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 168),
    _ConnectorConnectionPoolRuntimeNumUnavailableCurrentCount_Type()
)
connectorConnectionPoolRuntimeNumUnavailableCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeNumUnavailableCurrentCount.setStatus("current")
_ConnectorConnectionPoolRuntimeProxyOn_Type = OctetString
_ConnectorConnectionPoolRuntimeProxyOn_Object = MibTableColumn
connectorConnectionPoolRuntimeProxyOn = _ConnectorConnectionPoolRuntimeProxyOn_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 455, 1, 169),
    _ConnectorConnectionPoolRuntimeProxyOn_Type()
)
connectorConnectionPoolRuntimeProxyOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorConnectionPoolRuntimeProxyOn.setStatus("current")
_ConnectorServiceRuntimeTable_Object = MibTable
connectorServiceRuntimeTable = _ConnectorServiceRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 456)
)
if mibBuilder.loadTexts:
    connectorServiceRuntimeTable.setStatus("current")
_ConnectorServiceRuntimeEntry_Object = MibTableRow
connectorServiceRuntimeEntry = _ConnectorServiceRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 456, 1)
)
connectorServiceRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "connectorServiceRuntimeIndex"),
)
if mibBuilder.loadTexts:
    connectorServiceRuntimeEntry.setStatus("current")


class _ConnectorServiceRuntimeIndex_Type(DisplayString):
    """Custom type connectorServiceRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ConnectorServiceRuntimeIndex_Type.__name__ = "DisplayString"
_ConnectorServiceRuntimeIndex_Object = MibTableColumn
connectorServiceRuntimeIndex = _ConnectorServiceRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 456, 1, 1),
    _ConnectorServiceRuntimeIndex_Type()
)
connectorServiceRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorServiceRuntimeIndex.setStatus("current")


class _ConnectorServiceRuntimeObjectName_Type(DisplayString):
    """Custom type connectorServiceRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ConnectorServiceRuntimeObjectName_Type.__name__ = "DisplayString"
_ConnectorServiceRuntimeObjectName_Object = MibTableColumn
connectorServiceRuntimeObjectName = _ConnectorServiceRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 456, 1, 5),
    _ConnectorServiceRuntimeObjectName_Type()
)
connectorServiceRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorServiceRuntimeObjectName.setStatus("current")


class _ConnectorServiceRuntimeType_Type(DisplayString):
    """Custom type connectorServiceRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorServiceRuntimeType_Type.__name__ = "DisplayString"
_ConnectorServiceRuntimeType_Object = MibTableColumn
connectorServiceRuntimeType = _ConnectorServiceRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 456, 1, 10),
    _ConnectorServiceRuntimeType_Type()
)
connectorServiceRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorServiceRuntimeType.setStatus("current")


class _ConnectorServiceRuntimeName_Type(DisplayString):
    """Custom type connectorServiceRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorServiceRuntimeName_Type.__name__ = "DisplayString"
_ConnectorServiceRuntimeName_Object = MibTableColumn
connectorServiceRuntimeName = _ConnectorServiceRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 456, 1, 15),
    _ConnectorServiceRuntimeName_Type()
)
connectorServiceRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorServiceRuntimeName.setStatus("current")


class _ConnectorServiceRuntimeParent_Type(DisplayString):
    """Custom type connectorServiceRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ConnectorServiceRuntimeParent_Type.__name__ = "DisplayString"
_ConnectorServiceRuntimeParent_Object = MibTableColumn
connectorServiceRuntimeParent = _ConnectorServiceRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 456, 1, 20),
    _ConnectorServiceRuntimeParent_Type()
)
connectorServiceRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorServiceRuntimeParent.setStatus("current")
_ConnectorServiceRuntimeConnectionPoolCurrentCount_Type = Integer32
_ConnectorServiceRuntimeConnectionPoolCurrentCount_Object = MibTableColumn
connectorServiceRuntimeConnectionPoolCurrentCount = _ConnectorServiceRuntimeConnectionPoolCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 456, 1, 25),
    _ConnectorServiceRuntimeConnectionPoolCurrentCount_Type()
)
connectorServiceRuntimeConnectionPoolCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorServiceRuntimeConnectionPoolCurrentCount.setStatus("current")
_ConnectorServiceRuntimeConnectionPoolsTotalCount_Type = Integer32
_ConnectorServiceRuntimeConnectionPoolsTotalCount_Object = MibTableColumn
connectorServiceRuntimeConnectionPoolsTotalCount = _ConnectorServiceRuntimeConnectionPoolsTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 456, 1, 30),
    _ConnectorServiceRuntimeConnectionPoolsTotalCount_Type()
)
connectorServiceRuntimeConnectionPoolsTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorServiceRuntimeConnectionPoolsTotalCount.setStatus("current")
_ConnectorServiceRuntimeRACount_Type = Integer32
_ConnectorServiceRuntimeRACount_Object = MibTableColumn
connectorServiceRuntimeRACount = _ConnectorServiceRuntimeRACount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 456, 1, 31),
    _ConnectorServiceRuntimeRACount_Type()
)
connectorServiceRuntimeRACount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorServiceRuntimeRACount.setStatus("current")
_ConnectorServiceRuntimeActiveRACount_Type = Integer32
_ConnectorServiceRuntimeActiveRACount_Object = MibTableColumn
connectorServiceRuntimeActiveRACount = _ConnectorServiceRuntimeActiveRACount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 456, 1, 32),
    _ConnectorServiceRuntimeActiveRACount_Type()
)
connectorServiceRuntimeActiveRACount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorServiceRuntimeActiveRACount.setStatus("current")
_ConnectorComponentRuntimeTable_Object = MibTable
connectorComponentRuntimeTable = _ConnectorComponentRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457)
)
if mibBuilder.loadTexts:
    connectorComponentRuntimeTable.setStatus("current")
_ConnectorComponentRuntimeEntry_Object = MibTableRow
connectorComponentRuntimeEntry = _ConnectorComponentRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1)
)
connectorComponentRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "connectorComponentRuntimeIndex"),
)
if mibBuilder.loadTexts:
    connectorComponentRuntimeEntry.setStatus("current")


class _ConnectorComponentRuntimeIndex_Type(DisplayString):
    """Custom type connectorComponentRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ConnectorComponentRuntimeIndex_Type.__name__ = "DisplayString"
_ConnectorComponentRuntimeIndex_Object = MibTableColumn
connectorComponentRuntimeIndex = _ConnectorComponentRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 1),
    _ConnectorComponentRuntimeIndex_Type()
)
connectorComponentRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeIndex.setStatus("current")


class _ConnectorComponentRuntimeObjectName_Type(DisplayString):
    """Custom type connectorComponentRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ConnectorComponentRuntimeObjectName_Type.__name__ = "DisplayString"
_ConnectorComponentRuntimeObjectName_Object = MibTableColumn
connectorComponentRuntimeObjectName = _ConnectorComponentRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 5),
    _ConnectorComponentRuntimeObjectName_Type()
)
connectorComponentRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeObjectName.setStatus("current")


class _ConnectorComponentRuntimeType_Type(DisplayString):
    """Custom type connectorComponentRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorComponentRuntimeType_Type.__name__ = "DisplayString"
_ConnectorComponentRuntimeType_Object = MibTableColumn
connectorComponentRuntimeType = _ConnectorComponentRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 10),
    _ConnectorComponentRuntimeType_Type()
)
connectorComponentRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeType.setStatus("current")


class _ConnectorComponentRuntimeName_Type(DisplayString):
    """Custom type connectorComponentRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorComponentRuntimeName_Type.__name__ = "DisplayString"
_ConnectorComponentRuntimeName_Object = MibTableColumn
connectorComponentRuntimeName = _ConnectorComponentRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 15),
    _ConnectorComponentRuntimeName_Type()
)
connectorComponentRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeName.setStatus("current")


class _ConnectorComponentRuntimeParent_Type(DisplayString):
    """Custom type connectorComponentRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ConnectorComponentRuntimeParent_Type.__name__ = "DisplayString"
_ConnectorComponentRuntimeParent_Object = MibTableColumn
connectorComponentRuntimeParent = _ConnectorComponentRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 20),
    _ConnectorComponentRuntimeParent_Type()
)
connectorComponentRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeParent.setStatus("current")
_ConnectorComponentRuntimeConnectionPoolCount_Type = Integer32
_ConnectorComponentRuntimeConnectionPoolCount_Object = MibTableColumn
connectorComponentRuntimeConnectionPoolCount = _ConnectorComponentRuntimeConnectionPoolCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 25),
    _ConnectorComponentRuntimeConnectionPoolCount_Type()
)
connectorComponentRuntimeConnectionPoolCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeConnectionPoolCount.setStatus("current")
_ConnectorComponentRuntimeInboundConnectionsCount_Type = Integer32
_ConnectorComponentRuntimeInboundConnectionsCount_Object = MibTableColumn
connectorComponentRuntimeInboundConnectionsCount = _ConnectorComponentRuntimeInboundConnectionsCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 30),
    _ConnectorComponentRuntimeInboundConnectionsCount_Type()
)
connectorComponentRuntimeInboundConnectionsCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeInboundConnectionsCount.setStatus("current")


class _ConnectorComponentRuntimeEISResourceId_Type(DisplayString):
    """Custom type connectorComponentRuntimeEISResourceId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorComponentRuntimeEISResourceId_Type.__name__ = "DisplayString"
_ConnectorComponentRuntimeEISResourceId_Object = MibTableColumn
connectorComponentRuntimeEISResourceId = _ConnectorComponentRuntimeEISResourceId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 35),
    _ConnectorComponentRuntimeEISResourceId_Type()
)
connectorComponentRuntimeEISResourceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeEISResourceId.setStatus("current")


class _ConnectorComponentRuntimeVersionId_Type(DisplayString):
    """Custom type connectorComponentRuntimeVersionId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorComponentRuntimeVersionId_Type.__name__ = "DisplayString"
_ConnectorComponentRuntimeVersionId_Object = MibTableColumn
connectorComponentRuntimeVersionId = _ConnectorComponentRuntimeVersionId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 40),
    _ConnectorComponentRuntimeVersionId_Type()
)
connectorComponentRuntimeVersionId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeVersionId.setStatus("current")


class _ConnectorComponentRuntimeActiveVersionId_Type(DisplayString):
    """Custom type connectorComponentRuntimeActiveVersionId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorComponentRuntimeActiveVersionId_Type.__name__ = "DisplayString"
_ConnectorComponentRuntimeActiveVersionId_Object = MibTableColumn
connectorComponentRuntimeActiveVersionId = _ConnectorComponentRuntimeActiveVersionId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 45),
    _ConnectorComponentRuntimeActiveVersionId_Type()
)
connectorComponentRuntimeActiveVersionId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeActiveVersionId.setStatus("current")


class _ConnectorComponentRuntimeVersioned_Type(Integer32):
    """Custom type connectorComponentRuntimeVersioned based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ConnectorComponentRuntimeVersioned_Type.__name__ = "Integer32"
_ConnectorComponentRuntimeVersioned_Object = MibTableColumn
connectorComponentRuntimeVersioned = _ConnectorComponentRuntimeVersioned_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 50),
    _ConnectorComponentRuntimeVersioned_Type()
)
connectorComponentRuntimeVersioned.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeVersioned.setStatus("current")
_ConnectorComponentRuntimeActiveVersion_Type = Integer32
_ConnectorComponentRuntimeActiveVersion_Object = MibTableColumn
connectorComponentRuntimeActiveVersion = _ConnectorComponentRuntimeActiveVersion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 55),
    _ConnectorComponentRuntimeActiveVersion_Type()
)
connectorComponentRuntimeActiveVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeActiveVersion.setStatus("current")


class _ConnectorComponentRuntimeJndiName_Type(DisplayString):
    """Custom type connectorComponentRuntimeJndiName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorComponentRuntimeJndiName_Type.__name__ = "DisplayString"
_ConnectorComponentRuntimeJndiName_Object = MibTableColumn
connectorComponentRuntimeJndiName = _ConnectorComponentRuntimeJndiName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 60),
    _ConnectorComponentRuntimeJndiName_Type()
)
connectorComponentRuntimeJndiName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeJndiName.setStatus("current")


class _ConnectorComponentRuntimeState_Type(DisplayString):
    """Custom type connectorComponentRuntimeState based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorComponentRuntimeState_Type.__name__ = "DisplayString"
_ConnectorComponentRuntimeState_Object = MibTableColumn
connectorComponentRuntimeState = _ConnectorComponentRuntimeState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 65),
    _ConnectorComponentRuntimeState_Type()
)
connectorComponentRuntimeState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeState.setStatus("current")
_ConnectorComponentRuntimeSuspendedState_Type = Integer32
_ConnectorComponentRuntimeSuspendedState_Object = MibTableColumn
connectorComponentRuntimeSuspendedState = _ConnectorComponentRuntimeSuspendedState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 70),
    _ConnectorComponentRuntimeSuspendedState_Type()
)
connectorComponentRuntimeSuspendedState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeSuspendedState.setStatus("current")


class _ConnectorComponentRuntimeDescription_Type(DisplayString):
    """Custom type connectorComponentRuntimeDescription based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorComponentRuntimeDescription_Type.__name__ = "DisplayString"
_ConnectorComponentRuntimeDescription_Object = MibTableColumn
connectorComponentRuntimeDescription = _ConnectorComponentRuntimeDescription_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 75),
    _ConnectorComponentRuntimeDescription_Type()
)
connectorComponentRuntimeDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeDescription.setStatus("current")


class _ConnectorComponentRuntimeEISType_Type(DisplayString):
    """Custom type connectorComponentRuntimeEISType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorComponentRuntimeEISType_Type.__name__ = "DisplayString"
_ConnectorComponentRuntimeEISType_Object = MibTableColumn
connectorComponentRuntimeEISType = _ConnectorComponentRuntimeEISType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 80),
    _ConnectorComponentRuntimeEISType_Type()
)
connectorComponentRuntimeEISType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeEISType.setStatus("current")


class _ConnectorComponentRuntimeSpecVersion_Type(DisplayString):
    """Custom type connectorComponentRuntimeSpecVersion based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorComponentRuntimeSpecVersion_Type.__name__ = "DisplayString"
_ConnectorComponentRuntimeSpecVersion_Object = MibTableColumn
connectorComponentRuntimeSpecVersion = _ConnectorComponentRuntimeSpecVersion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 85),
    _ConnectorComponentRuntimeSpecVersion_Type()
)
connectorComponentRuntimeSpecVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeSpecVersion.setStatus("current")


class _ConnectorComponentRuntimeVendorName_Type(DisplayString):
    """Custom type connectorComponentRuntimeVendorName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorComponentRuntimeVendorName_Type.__name__ = "DisplayString"
_ConnectorComponentRuntimeVendorName_Object = MibTableColumn
connectorComponentRuntimeVendorName = _ConnectorComponentRuntimeVendorName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 90),
    _ConnectorComponentRuntimeVendorName_Type()
)
connectorComponentRuntimeVendorName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeVendorName.setStatus("current")


class _ConnectorComponentRuntimeVersion_Type(DisplayString):
    """Custom type connectorComponentRuntimeVersion based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_ConnectorComponentRuntimeVersion_Type.__name__ = "DisplayString"
_ConnectorComponentRuntimeVersion_Object = MibTableColumn
connectorComponentRuntimeVersion = _ConnectorComponentRuntimeVersion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 95),
    _ConnectorComponentRuntimeVersion_Type()
)
connectorComponentRuntimeVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeVersion.setStatus("current")
_ConnectorComponentRuntimeComponentName_Type = OctetString
_ConnectorComponentRuntimeComponentName_Object = MibTableColumn
connectorComponentRuntimeComponentName = _ConnectorComponentRuntimeComponentName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 96),
    _ConnectorComponentRuntimeComponentName_Type()
)
connectorComponentRuntimeComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeComponentName.setStatus("current")
_ConnectorComponentRuntimeModuleId_Type = OctetString
_ConnectorComponentRuntimeModuleId_Object = MibTableColumn
connectorComponentRuntimeModuleId = _ConnectorComponentRuntimeModuleId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 97),
    _ConnectorComponentRuntimeModuleId_Type()
)
connectorComponentRuntimeModuleId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeModuleId.setStatus("current")
_ConnectorComponentRuntimeConfiguration_Type = OctetString
_ConnectorComponentRuntimeConfiguration_Object = MibTableColumn
connectorComponentRuntimeConfiguration = _ConnectorComponentRuntimeConfiguration_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 98),
    _ConnectorComponentRuntimeConfiguration_Type()
)
connectorComponentRuntimeConfiguration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeConfiguration.setStatus("current")
_ConnectorComponentRuntimeSchema_Type = OctetString
_ConnectorComponentRuntimeSchema_Object = MibTableColumn
connectorComponentRuntimeSchema = _ConnectorComponentRuntimeSchema_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 99),
    _ConnectorComponentRuntimeSchema_Type()
)
connectorComponentRuntimeSchema.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeSchema.setStatus("current")
_ConnectorComponentRuntimeLinkref_Type = OctetString
_ConnectorComponentRuntimeLinkref_Object = MibTableColumn
connectorComponentRuntimeLinkref = _ConnectorComponentRuntimeLinkref_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 100),
    _ConnectorComponentRuntimeLinkref_Type()
)
connectorComponentRuntimeLinkref.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeLinkref.setStatus("current")
_ConnectorComponentRuntimeDeploymentState_Type = Integer32
_ConnectorComponentRuntimeDeploymentState_Object = MibTableColumn
connectorComponentRuntimeDeploymentState = _ConnectorComponentRuntimeDeploymentState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 101),
    _ConnectorComponentRuntimeDeploymentState_Type()
)
connectorComponentRuntimeDeploymentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeDeploymentState.setStatus("current")
_ConnectorComponentRuntimeConfigurationVersion_Type = OctetString
_ConnectorComponentRuntimeConfigurationVersion_Object = MibTableColumn
connectorComponentRuntimeConfigurationVersion = _ConnectorComponentRuntimeConfigurationVersion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 457, 1, 102),
    _ConnectorComponentRuntimeConfigurationVersion_Type()
)
connectorComponentRuntimeConfigurationVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorComponentRuntimeConfigurationVersion.setStatus("current")
_ConnectorInboundRuntimeTable_Object = MibTable
connectorInboundRuntimeTable = _ConnectorInboundRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 459)
)
if mibBuilder.loadTexts:
    connectorInboundRuntimeTable.setStatus("current")
_ConnectorInboundRuntimeEntry_Object = MibTableRow
connectorInboundRuntimeEntry = _ConnectorInboundRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 459, 1)
)
connectorInboundRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "connectorInboundRuntimeIndex"),
)
if mibBuilder.loadTexts:
    connectorInboundRuntimeEntry.setStatus("current")


class _ConnectorInboundRuntimeIndex_Type(DisplayString):
    """Custom type connectorInboundRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ConnectorInboundRuntimeIndex_Type.__name__ = "DisplayString"
_ConnectorInboundRuntimeIndex_Object = MibTableColumn
connectorInboundRuntimeIndex = _ConnectorInboundRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 459, 1, 1),
    _ConnectorInboundRuntimeIndex_Type()
)
connectorInboundRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorInboundRuntimeIndex.setStatus("current")


class _ConnectorInboundRuntimeObjectName_Type(DisplayString):
    """Custom type connectorInboundRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ConnectorInboundRuntimeObjectName_Type.__name__ = "DisplayString"
_ConnectorInboundRuntimeObjectName_Object = MibTableColumn
connectorInboundRuntimeObjectName = _ConnectorInboundRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 459, 1, 5),
    _ConnectorInboundRuntimeObjectName_Type()
)
connectorInboundRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorInboundRuntimeObjectName.setStatus("current")


class _ConnectorInboundRuntimeType_Type(DisplayString):
    """Custom type connectorInboundRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorInboundRuntimeType_Type.__name__ = "DisplayString"
_ConnectorInboundRuntimeType_Object = MibTableColumn
connectorInboundRuntimeType = _ConnectorInboundRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 459, 1, 10),
    _ConnectorInboundRuntimeType_Type()
)
connectorInboundRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorInboundRuntimeType.setStatus("current")


class _ConnectorInboundRuntimeName_Type(DisplayString):
    """Custom type connectorInboundRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorInboundRuntimeName_Type.__name__ = "DisplayString"
_ConnectorInboundRuntimeName_Object = MibTableColumn
connectorInboundRuntimeName = _ConnectorInboundRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 459, 1, 15),
    _ConnectorInboundRuntimeName_Type()
)
connectorInboundRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorInboundRuntimeName.setStatus("current")


class _ConnectorInboundRuntimeParent_Type(DisplayString):
    """Custom type connectorInboundRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ConnectorInboundRuntimeParent_Type.__name__ = "DisplayString"
_ConnectorInboundRuntimeParent_Object = MibTableColumn
connectorInboundRuntimeParent = _ConnectorInboundRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 459, 1, 20),
    _ConnectorInboundRuntimeParent_Type()
)
connectorInboundRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorInboundRuntimeParent.setStatus("current")


class _ConnectorInboundRuntimeMsgListenerType_Type(DisplayString):
    """Custom type connectorInboundRuntimeMsgListenerType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorInboundRuntimeMsgListenerType_Type.__name__ = "DisplayString"
_ConnectorInboundRuntimeMsgListenerType_Object = MibTableColumn
connectorInboundRuntimeMsgListenerType = _ConnectorInboundRuntimeMsgListenerType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 459, 1, 25),
    _ConnectorInboundRuntimeMsgListenerType_Type()
)
connectorInboundRuntimeMsgListenerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorInboundRuntimeMsgListenerType.setStatus("current")


class _ConnectorInboundRuntimeActivationSpecClass_Type(DisplayString):
    """Custom type connectorInboundRuntimeActivationSpecClass based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorInboundRuntimeActivationSpecClass_Type.__name__ = "DisplayString"
_ConnectorInboundRuntimeActivationSpecClass_Object = MibTableColumn
connectorInboundRuntimeActivationSpecClass = _ConnectorInboundRuntimeActivationSpecClass_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 459, 1, 30),
    _ConnectorInboundRuntimeActivationSpecClass_Type()
)
connectorInboundRuntimeActivationSpecClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorInboundRuntimeActivationSpecClass.setStatus("current")


class _ConnectorInboundRuntimeState_Type(DisplayString):
    """Custom type connectorInboundRuntimeState based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ConnectorInboundRuntimeState_Type.__name__ = "DisplayString"
_ConnectorInboundRuntimeState_Object = MibTableColumn
connectorInboundRuntimeState = _ConnectorInboundRuntimeState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 459, 1, 35),
    _ConnectorInboundRuntimeState_Type()
)
connectorInboundRuntimeState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectorInboundRuntimeState.setStatus("current")
_JMSDurableSubscriberRuntimeTable_Object = MibTable
jMSDurableSubscriberRuntimeTable = _JMSDurableSubscriberRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 460)
)
if mibBuilder.loadTexts:
    jMSDurableSubscriberRuntimeTable.setStatus("current")
_JMSDurableSubscriberRuntimeEntry_Object = MibTableRow
jMSDurableSubscriberRuntimeEntry = _JMSDurableSubscriberRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 460, 1)
)
jMSDurableSubscriberRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jMSDurableSubscriberRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jMSDurableSubscriberRuntimeEntry.setStatus("current")


class _JMSDurableSubscriberRuntimeIndex_Type(DisplayString):
    """Custom type jMSDurableSubscriberRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JMSDurableSubscriberRuntimeIndex_Type.__name__ = "DisplayString"
_JMSDurableSubscriberRuntimeIndex_Object = MibTableColumn
jMSDurableSubscriberRuntimeIndex = _JMSDurableSubscriberRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 460, 1, 1),
    _JMSDurableSubscriberRuntimeIndex_Type()
)
jMSDurableSubscriberRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jMSDurableSubscriberRuntimeIndex.setStatus("current")


class _JMSDurableSubscriberRuntimeObjectName_Type(DisplayString):
    """Custom type jMSDurableSubscriberRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JMSDurableSubscriberRuntimeObjectName_Type.__name__ = "DisplayString"
_JMSDurableSubscriberRuntimeObjectName_Object = MibTableColumn
jMSDurableSubscriberRuntimeObjectName = _JMSDurableSubscriberRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 460, 1, 5),
    _JMSDurableSubscriberRuntimeObjectName_Type()
)
jMSDurableSubscriberRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jMSDurableSubscriberRuntimeObjectName.setStatus("current")


class _JMSDurableSubscriberRuntimeType_Type(DisplayString):
    """Custom type jMSDurableSubscriberRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JMSDurableSubscriberRuntimeType_Type.__name__ = "DisplayString"
_JMSDurableSubscriberRuntimeType_Object = MibTableColumn
jMSDurableSubscriberRuntimeType = _JMSDurableSubscriberRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 460, 1, 10),
    _JMSDurableSubscriberRuntimeType_Type()
)
jMSDurableSubscriberRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jMSDurableSubscriberRuntimeType.setStatus("current")


class _JMSDurableSubscriberRuntimeName_Type(DisplayString):
    """Custom type jMSDurableSubscriberRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JMSDurableSubscriberRuntimeName_Type.__name__ = "DisplayString"
_JMSDurableSubscriberRuntimeName_Object = MibTableColumn
jMSDurableSubscriberRuntimeName = _JMSDurableSubscriberRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 460, 1, 15),
    _JMSDurableSubscriberRuntimeName_Type()
)
jMSDurableSubscriberRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jMSDurableSubscriberRuntimeName.setStatus("current")


class _JMSDurableSubscriberRuntimeParent_Type(DisplayString):
    """Custom type jMSDurableSubscriberRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JMSDurableSubscriberRuntimeParent_Type.__name__ = "DisplayString"
_JMSDurableSubscriberRuntimeParent_Object = MibTableColumn
jMSDurableSubscriberRuntimeParent = _JMSDurableSubscriberRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 460, 1, 20),
    _JMSDurableSubscriberRuntimeParent_Type()
)
jMSDurableSubscriberRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jMSDurableSubscriberRuntimeParent.setStatus("current")


class _JMSDurableSubscriberRuntimeClientID_Type(DisplayString):
    """Custom type jMSDurableSubscriberRuntimeClientID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JMSDurableSubscriberRuntimeClientID_Type.__name__ = "DisplayString"
_JMSDurableSubscriberRuntimeClientID_Object = MibTableColumn
jMSDurableSubscriberRuntimeClientID = _JMSDurableSubscriberRuntimeClientID_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 460, 1, 25),
    _JMSDurableSubscriberRuntimeClientID_Type()
)
jMSDurableSubscriberRuntimeClientID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jMSDurableSubscriberRuntimeClientID.setStatus("current")


class _JMSDurableSubscriberRuntimeSubscriptionName_Type(DisplayString):
    """Custom type jMSDurableSubscriberRuntimeSubscriptionName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JMSDurableSubscriberRuntimeSubscriptionName_Type.__name__ = "DisplayString"
_JMSDurableSubscriberRuntimeSubscriptionName_Object = MibTableColumn
jMSDurableSubscriberRuntimeSubscriptionName = _JMSDurableSubscriberRuntimeSubscriptionName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 460, 1, 30),
    _JMSDurableSubscriberRuntimeSubscriptionName_Type()
)
jMSDurableSubscriberRuntimeSubscriptionName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jMSDurableSubscriberRuntimeSubscriptionName.setStatus("current")


class _JMSDurableSubscriberRuntimeSelector_Type(DisplayString):
    """Custom type jMSDurableSubscriberRuntimeSelector based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JMSDurableSubscriberRuntimeSelector_Type.__name__ = "DisplayString"
_JMSDurableSubscriberRuntimeSelector_Object = MibTableColumn
jMSDurableSubscriberRuntimeSelector = _JMSDurableSubscriberRuntimeSelector_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 460, 1, 35),
    _JMSDurableSubscriberRuntimeSelector_Type()
)
jMSDurableSubscriberRuntimeSelector.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jMSDurableSubscriberRuntimeSelector.setStatus("current")


class _JMSDurableSubscriberRuntimeNoLocal_Type(Integer32):
    """Custom type jMSDurableSubscriberRuntimeNoLocal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_JMSDurableSubscriberRuntimeNoLocal_Type.__name__ = "Integer32"
_JMSDurableSubscriberRuntimeNoLocal_Object = MibTableColumn
jMSDurableSubscriberRuntimeNoLocal = _JMSDurableSubscriberRuntimeNoLocal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 460, 1, 40),
    _JMSDurableSubscriberRuntimeNoLocal_Type()
)
jMSDurableSubscriberRuntimeNoLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jMSDurableSubscriberRuntimeNoLocal.setStatus("current")


class _JMSDurableSubscriberRuntimeActive_Type(Integer32):
    """Custom type jMSDurableSubscriberRuntimeActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_JMSDurableSubscriberRuntimeActive_Type.__name__ = "Integer32"
_JMSDurableSubscriberRuntimeActive_Object = MibTableColumn
jMSDurableSubscriberRuntimeActive = _JMSDurableSubscriberRuntimeActive_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 460, 1, 45),
    _JMSDurableSubscriberRuntimeActive_Type()
)
jMSDurableSubscriberRuntimeActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jMSDurableSubscriberRuntimeActive.setStatus("current")
_JMSDurableSubscriberRuntimeMessagesPendingCount_Type = Counter64
_JMSDurableSubscriberRuntimeMessagesPendingCount_Object = MibTableColumn
jMSDurableSubscriberRuntimeMessagesPendingCount = _JMSDurableSubscriberRuntimeMessagesPendingCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 460, 1, 50),
    _JMSDurableSubscriberRuntimeMessagesPendingCount_Type()
)
jMSDurableSubscriberRuntimeMessagesPendingCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jMSDurableSubscriberRuntimeMessagesPendingCount.setStatus("current")
_JMSDurableSubscriberRuntimeMessagesCurrentCount_Type = Counter64
_JMSDurableSubscriberRuntimeMessagesCurrentCount_Object = MibTableColumn
jMSDurableSubscriberRuntimeMessagesCurrentCount = _JMSDurableSubscriberRuntimeMessagesCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 460, 1, 55),
    _JMSDurableSubscriberRuntimeMessagesCurrentCount_Type()
)
jMSDurableSubscriberRuntimeMessagesCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jMSDurableSubscriberRuntimeMessagesCurrentCount.setStatus("current")
_JMSDurableSubscriberRuntimeBytesPendingCount_Type = Counter64
_JMSDurableSubscriberRuntimeBytesPendingCount_Object = MibTableColumn
jMSDurableSubscriberRuntimeBytesPendingCount = _JMSDurableSubscriberRuntimeBytesPendingCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 460, 1, 60),
    _JMSDurableSubscriberRuntimeBytesPendingCount_Type()
)
jMSDurableSubscriberRuntimeBytesPendingCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jMSDurableSubscriberRuntimeBytesPendingCount.setStatus("current")
_JMSDurableSubscriberRuntimeBytesCurrentCount_Type = Counter64
_JMSDurableSubscriberRuntimeBytesCurrentCount_Object = MibTableColumn
jMSDurableSubscriberRuntimeBytesCurrentCount = _JMSDurableSubscriberRuntimeBytesCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 460, 1, 65),
    _JMSDurableSubscriberRuntimeBytesCurrentCount_Type()
)
jMSDurableSubscriberRuntimeBytesCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jMSDurableSubscriberRuntimeBytesCurrentCount.setStatus("current")
_JMSDurableSubscriberRuntimeMessagesReceivedCount_Type = Counter64
_JMSDurableSubscriberRuntimeMessagesReceivedCount_Object = MibTableColumn
jMSDurableSubscriberRuntimeMessagesReceivedCount = _JMSDurableSubscriberRuntimeMessagesReceivedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 460, 1, 66),
    _JMSDurableSubscriberRuntimeMessagesReceivedCount_Type()
)
jMSDurableSubscriberRuntimeMessagesReceivedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jMSDurableSubscriberRuntimeMessagesReceivedCount.setStatus("current")
_JMSDurableSubscriberRuntimeMessagesHighCount_Type = Counter64
_JMSDurableSubscriberRuntimeMessagesHighCount_Object = MibTableColumn
jMSDurableSubscriberRuntimeMessagesHighCount = _JMSDurableSubscriberRuntimeMessagesHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 460, 1, 67),
    _JMSDurableSubscriberRuntimeMessagesHighCount_Type()
)
jMSDurableSubscriberRuntimeMessagesHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jMSDurableSubscriberRuntimeMessagesHighCount.setStatus("current")
_SafAgentRuntimeTable_Object = MibTable
safAgentRuntimeTable = _SafAgentRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470)
)
if mibBuilder.loadTexts:
    safAgentRuntimeTable.setStatus("current")
_SafAgentRuntimeEntry_Object = MibTableRow
safAgentRuntimeEntry = _SafAgentRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1)
)
safAgentRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "safAgentRuntimeIndex"),
)
if mibBuilder.loadTexts:
    safAgentRuntimeEntry.setStatus("current")


class _SafAgentRuntimeIndex_Type(DisplayString):
    """Custom type safAgentRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_SafAgentRuntimeIndex_Type.__name__ = "DisplayString"
_SafAgentRuntimeIndex_Object = MibTableColumn
safAgentRuntimeIndex = _SafAgentRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 1),
    _SafAgentRuntimeIndex_Type()
)
safAgentRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeIndex.setStatus("current")


class _SafAgentRuntimeObjectName_Type(DisplayString):
    """Custom type safAgentRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_SafAgentRuntimeObjectName_Type.__name__ = "DisplayString"
_SafAgentRuntimeObjectName_Object = MibTableColumn
safAgentRuntimeObjectName = _SafAgentRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 5),
    _SafAgentRuntimeObjectName_Type()
)
safAgentRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeObjectName.setStatus("current")


class _SafAgentRuntimeType_Type(DisplayString):
    """Custom type safAgentRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_SafAgentRuntimeType_Type.__name__ = "DisplayString"
_SafAgentRuntimeType_Object = MibTableColumn
safAgentRuntimeType = _SafAgentRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 10),
    _SafAgentRuntimeType_Type()
)
safAgentRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeType.setStatus("current")


class _SafAgentRuntimeName_Type(DisplayString):
    """Custom type safAgentRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_SafAgentRuntimeName_Type.__name__ = "DisplayString"
_SafAgentRuntimeName_Object = MibTableColumn
safAgentRuntimeName = _SafAgentRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 15),
    _SafAgentRuntimeName_Type()
)
safAgentRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeName.setStatus("current")


class _SafAgentRuntimeParent_Type(DisplayString):
    """Custom type safAgentRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_SafAgentRuntimeParent_Type.__name__ = "DisplayString"
_SafAgentRuntimeParent_Object = MibTableColumn
safAgentRuntimeParent = _SafAgentRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 20),
    _SafAgentRuntimeParent_Type()
)
safAgentRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeParent.setStatus("current")
_SafAgentRuntimeRemoteEndpointsCurrentCount_Type = Counter64
_SafAgentRuntimeRemoteEndpointsCurrentCount_Object = MibTableColumn
safAgentRuntimeRemoteEndpointsCurrentCount = _SafAgentRuntimeRemoteEndpointsCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 25),
    _SafAgentRuntimeRemoteEndpointsCurrentCount_Type()
)
safAgentRuntimeRemoteEndpointsCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeRemoteEndpointsCurrentCount.setStatus("current")
_SafAgentRuntimeRemoteEndpointsHighCount_Type = Counter64
_SafAgentRuntimeRemoteEndpointsHighCount_Object = MibTableColumn
safAgentRuntimeRemoteEndpointsHighCount = _SafAgentRuntimeRemoteEndpointsHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 30),
    _SafAgentRuntimeRemoteEndpointsHighCount_Type()
)
safAgentRuntimeRemoteEndpointsHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeRemoteEndpointsHighCount.setStatus("current")
_SafAgentRuntimeRemoteEndpointsTotalCount_Type = Counter64
_SafAgentRuntimeRemoteEndpointsTotalCount_Object = MibTableColumn
safAgentRuntimeRemoteEndpointsTotalCount = _SafAgentRuntimeRemoteEndpointsTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 35),
    _SafAgentRuntimeRemoteEndpointsTotalCount_Type()
)
safAgentRuntimeRemoteEndpointsTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeRemoteEndpointsTotalCount.setStatus("current")


class _SafAgentRuntimePausedForIncoming_Type(Integer32):
    """Custom type safAgentRuntimePausedForIncoming based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_SafAgentRuntimePausedForIncoming_Type.__name__ = "Integer32"
_SafAgentRuntimePausedForIncoming_Object = MibTableColumn
safAgentRuntimePausedForIncoming = _SafAgentRuntimePausedForIncoming_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 40),
    _SafAgentRuntimePausedForIncoming_Type()
)
safAgentRuntimePausedForIncoming.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimePausedForIncoming.setStatus("current")


class _SafAgentRuntimePausedForForwarding_Type(Integer32):
    """Custom type safAgentRuntimePausedForForwarding based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_SafAgentRuntimePausedForForwarding_Type.__name__ = "Integer32"
_SafAgentRuntimePausedForForwarding_Object = MibTableColumn
safAgentRuntimePausedForForwarding = _SafAgentRuntimePausedForForwarding_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 45),
    _SafAgentRuntimePausedForForwarding_Type()
)
safAgentRuntimePausedForForwarding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimePausedForForwarding.setStatus("current")
_SafAgentRuntimeConversationsCurrentCount_Type = Counter64
_SafAgentRuntimeConversationsCurrentCount_Object = MibTableColumn
safAgentRuntimeConversationsCurrentCount = _SafAgentRuntimeConversationsCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 55),
    _SafAgentRuntimeConversationsCurrentCount_Type()
)
safAgentRuntimeConversationsCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeConversationsCurrentCount.setStatus("current")
_SafAgentRuntimeConversationsHighCount_Type = Counter64
_SafAgentRuntimeConversationsHighCount_Object = MibTableColumn
safAgentRuntimeConversationsHighCount = _SafAgentRuntimeConversationsHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 60),
    _SafAgentRuntimeConversationsHighCount_Type()
)
safAgentRuntimeConversationsHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeConversationsHighCount.setStatus("current")
_SafAgentRuntimeConversationsTotalCount_Type = Counter64
_SafAgentRuntimeConversationsTotalCount_Object = MibTableColumn
safAgentRuntimeConversationsTotalCount = _SafAgentRuntimeConversationsTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 65),
    _SafAgentRuntimeConversationsTotalCount_Type()
)
safAgentRuntimeConversationsTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeConversationsTotalCount.setStatus("current")
_SafAgentRuntimeMessagesCurrentCount_Type = Counter64
_SafAgentRuntimeMessagesCurrentCount_Object = MibTableColumn
safAgentRuntimeMessagesCurrentCount = _SafAgentRuntimeMessagesCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 70),
    _SafAgentRuntimeMessagesCurrentCount_Type()
)
safAgentRuntimeMessagesCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeMessagesCurrentCount.setStatus("current")
_SafAgentRuntimeMessagesPendingCount_Type = Counter64
_SafAgentRuntimeMessagesPendingCount_Object = MibTableColumn
safAgentRuntimeMessagesPendingCount = _SafAgentRuntimeMessagesPendingCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 75),
    _SafAgentRuntimeMessagesPendingCount_Type()
)
safAgentRuntimeMessagesPendingCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeMessagesPendingCount.setStatus("current")
_SafAgentRuntimeMessagesHighCount_Type = Counter64
_SafAgentRuntimeMessagesHighCount_Object = MibTableColumn
safAgentRuntimeMessagesHighCount = _SafAgentRuntimeMessagesHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 80),
    _SafAgentRuntimeMessagesHighCount_Type()
)
safAgentRuntimeMessagesHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeMessagesHighCount.setStatus("current")
_SafAgentRuntimeMessagesReceivedCount_Type = Counter64
_SafAgentRuntimeMessagesReceivedCount_Object = MibTableColumn
safAgentRuntimeMessagesReceivedCount = _SafAgentRuntimeMessagesReceivedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 85),
    _SafAgentRuntimeMessagesReceivedCount_Type()
)
safAgentRuntimeMessagesReceivedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeMessagesReceivedCount.setStatus("current")
_SafAgentRuntimeMessagesThresholdTime_Type = Counter64
_SafAgentRuntimeMessagesThresholdTime_Object = MibTableColumn
safAgentRuntimeMessagesThresholdTime = _SafAgentRuntimeMessagesThresholdTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 90),
    _SafAgentRuntimeMessagesThresholdTime_Type()
)
safAgentRuntimeMessagesThresholdTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeMessagesThresholdTime.setStatus("current")
_SafAgentRuntimeBytesPendingCount_Type = Counter64
_SafAgentRuntimeBytesPendingCount_Object = MibTableColumn
safAgentRuntimeBytesPendingCount = _SafAgentRuntimeBytesPendingCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 95),
    _SafAgentRuntimeBytesPendingCount_Type()
)
safAgentRuntimeBytesPendingCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeBytesPendingCount.setStatus("current")
_SafAgentRuntimeBytesCurrentCount_Type = Counter64
_SafAgentRuntimeBytesCurrentCount_Object = MibTableColumn
safAgentRuntimeBytesCurrentCount = _SafAgentRuntimeBytesCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 100),
    _SafAgentRuntimeBytesCurrentCount_Type()
)
safAgentRuntimeBytesCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeBytesCurrentCount.setStatus("current")
_SafAgentRuntimeBytesHighCount_Type = Counter64
_SafAgentRuntimeBytesHighCount_Object = MibTableColumn
safAgentRuntimeBytesHighCount = _SafAgentRuntimeBytesHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 105),
    _SafAgentRuntimeBytesHighCount_Type()
)
safAgentRuntimeBytesHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeBytesHighCount.setStatus("current")
_SafAgentRuntimeBytesReceivedCount_Type = Counter64
_SafAgentRuntimeBytesReceivedCount_Object = MibTableColumn
safAgentRuntimeBytesReceivedCount = _SafAgentRuntimeBytesReceivedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 110),
    _SafAgentRuntimeBytesReceivedCount_Type()
)
safAgentRuntimeBytesReceivedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeBytesReceivedCount.setStatus("current")
_SafAgentRuntimeBytesThresholdTime_Type = Counter64
_SafAgentRuntimeBytesThresholdTime_Object = MibTableColumn
safAgentRuntimeBytesThresholdTime = _SafAgentRuntimeBytesThresholdTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 115),
    _SafAgentRuntimeBytesThresholdTime_Type()
)
safAgentRuntimeBytesThresholdTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeBytesThresholdTime.setStatus("current")
_SafAgentRuntimeFailedMessagesTotal_Type = Counter64
_SafAgentRuntimeFailedMessagesTotal_Object = MibTableColumn
safAgentRuntimeFailedMessagesTotal = _SafAgentRuntimeFailedMessagesTotal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 120),
    _SafAgentRuntimeFailedMessagesTotal_Type()
)
safAgentRuntimeFailedMessagesTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimeFailedMessagesTotal.setStatus("current")
_SafAgentRuntimePausedForReceiving_Type = OctetString
_SafAgentRuntimePausedForReceiving_Object = MibTableColumn
safAgentRuntimePausedForReceiving = _SafAgentRuntimePausedForReceiving_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 470, 1, 121),
    _SafAgentRuntimePausedForReceiving_Type()
)
safAgentRuntimePausedForReceiving.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentRuntimePausedForReceiving.setStatus("current")
_SafConversationRuntimeTable_Object = MibTable
safConversationRuntimeTable = _SafConversationRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 471)
)
if mibBuilder.loadTexts:
    safConversationRuntimeTable.setStatus("current")
_SafConversationRuntimeEntry_Object = MibTableRow
safConversationRuntimeEntry = _SafConversationRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 471, 1)
)
safConversationRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "safConversationRuntimeIndex"),
)
if mibBuilder.loadTexts:
    safConversationRuntimeEntry.setStatus("current")


class _SafConversationRuntimeIndex_Type(DisplayString):
    """Custom type safConversationRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_SafConversationRuntimeIndex_Type.__name__ = "DisplayString"
_SafConversationRuntimeIndex_Object = MibTableColumn
safConversationRuntimeIndex = _SafConversationRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 471, 1, 1),
    _SafConversationRuntimeIndex_Type()
)
safConversationRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safConversationRuntimeIndex.setStatus("current")


class _SafConversationRuntimeObjectName_Type(DisplayString):
    """Custom type safConversationRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_SafConversationRuntimeObjectName_Type.__name__ = "DisplayString"
_SafConversationRuntimeObjectName_Object = MibTableColumn
safConversationRuntimeObjectName = _SafConversationRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 471, 1, 5),
    _SafConversationRuntimeObjectName_Type()
)
safConversationRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safConversationRuntimeObjectName.setStatus("current")


class _SafConversationRuntimeType_Type(DisplayString):
    """Custom type safConversationRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_SafConversationRuntimeType_Type.__name__ = "DisplayString"
_SafConversationRuntimeType_Object = MibTableColumn
safConversationRuntimeType = _SafConversationRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 471, 1, 10),
    _SafConversationRuntimeType_Type()
)
safConversationRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safConversationRuntimeType.setStatus("current")


class _SafConversationRuntimeName_Type(DisplayString):
    """Custom type safConversationRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_SafConversationRuntimeName_Type.__name__ = "DisplayString"
_SafConversationRuntimeName_Object = MibTableColumn
safConversationRuntimeName = _SafConversationRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 471, 1, 15),
    _SafConversationRuntimeName_Type()
)
safConversationRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safConversationRuntimeName.setStatus("current")


class _SafConversationRuntimeParent_Type(DisplayString):
    """Custom type safConversationRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_SafConversationRuntimeParent_Type.__name__ = "DisplayString"
_SafConversationRuntimeParent_Object = MibTableColumn
safConversationRuntimeParent = _SafConversationRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 471, 1, 20),
    _SafConversationRuntimeParent_Type()
)
safConversationRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safConversationRuntimeParent.setStatus("current")


class _SafConversationRuntimeConversationName_Type(DisplayString):
    """Custom type safConversationRuntimeConversationName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_SafConversationRuntimeConversationName_Type.__name__ = "DisplayString"
_SafConversationRuntimeConversationName_Object = MibTableColumn
safConversationRuntimeConversationName = _SafConversationRuntimeConversationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 471, 1, 25),
    _SafConversationRuntimeConversationName_Type()
)
safConversationRuntimeConversationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safConversationRuntimeConversationName.setStatus("current")


class _SafConversationRuntimeDestinationURL_Type(DisplayString):
    """Custom type safConversationRuntimeDestinationURL based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_SafConversationRuntimeDestinationURL_Type.__name__ = "DisplayString"
_SafConversationRuntimeDestinationURL_Object = MibTableColumn
safConversationRuntimeDestinationURL = _SafConversationRuntimeDestinationURL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 471, 1, 30),
    _SafConversationRuntimeDestinationURL_Type()
)
safConversationRuntimeDestinationURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safConversationRuntimeDestinationURL.setStatus("current")


class _SafConversationRuntimeQOS_Type(DisplayString):
    """Custom type safConversationRuntimeQOS based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_SafConversationRuntimeQOS_Type.__name__ = "DisplayString"
_SafConversationRuntimeQOS_Object = MibTableColumn
safConversationRuntimeQOS = _SafConversationRuntimeQOS_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 471, 1, 35),
    _SafConversationRuntimeQOS_Type()
)
safConversationRuntimeQOS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safConversationRuntimeQOS.setStatus("current")
_SafRemoteEndpointRuntimeTable_Object = MibTable
safRemoteEndpointRuntimeTable = _SafRemoteEndpointRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472)
)
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeTable.setStatus("current")
_SafRemoteEndpointRuntimeEntry_Object = MibTableRow
safRemoteEndpointRuntimeEntry = _SafRemoteEndpointRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1)
)
safRemoteEndpointRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "safRemoteEndpointRuntimeIndex"),
)
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeEntry.setStatus("current")


class _SafRemoteEndpointRuntimeIndex_Type(DisplayString):
    """Custom type safRemoteEndpointRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_SafRemoteEndpointRuntimeIndex_Type.__name__ = "DisplayString"
_SafRemoteEndpointRuntimeIndex_Object = MibTableColumn
safRemoteEndpointRuntimeIndex = _SafRemoteEndpointRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 1),
    _SafRemoteEndpointRuntimeIndex_Type()
)
safRemoteEndpointRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeIndex.setStatus("current")


class _SafRemoteEndpointRuntimeObjectName_Type(DisplayString):
    """Custom type safRemoteEndpointRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_SafRemoteEndpointRuntimeObjectName_Type.__name__ = "DisplayString"
_SafRemoteEndpointRuntimeObjectName_Object = MibTableColumn
safRemoteEndpointRuntimeObjectName = _SafRemoteEndpointRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 5),
    _SafRemoteEndpointRuntimeObjectName_Type()
)
safRemoteEndpointRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeObjectName.setStatus("current")


class _SafRemoteEndpointRuntimeType_Type(DisplayString):
    """Custom type safRemoteEndpointRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_SafRemoteEndpointRuntimeType_Type.__name__ = "DisplayString"
_SafRemoteEndpointRuntimeType_Object = MibTableColumn
safRemoteEndpointRuntimeType = _SafRemoteEndpointRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 10),
    _SafRemoteEndpointRuntimeType_Type()
)
safRemoteEndpointRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeType.setStatus("current")


class _SafRemoteEndpointRuntimeName_Type(DisplayString):
    """Custom type safRemoteEndpointRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_SafRemoteEndpointRuntimeName_Type.__name__ = "DisplayString"
_SafRemoteEndpointRuntimeName_Object = MibTableColumn
safRemoteEndpointRuntimeName = _SafRemoteEndpointRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 15),
    _SafRemoteEndpointRuntimeName_Type()
)
safRemoteEndpointRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeName.setStatus("current")


class _SafRemoteEndpointRuntimeParent_Type(DisplayString):
    """Custom type safRemoteEndpointRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_SafRemoteEndpointRuntimeParent_Type.__name__ = "DisplayString"
_SafRemoteEndpointRuntimeParent_Object = MibTableColumn
safRemoteEndpointRuntimeParent = _SafRemoteEndpointRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 20),
    _SafRemoteEndpointRuntimeParent_Type()
)
safRemoteEndpointRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeParent.setStatus("current")


class _SafRemoteEndpointRuntimeURL_Type(DisplayString):
    """Custom type safRemoteEndpointRuntimeURL based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_SafRemoteEndpointRuntimeURL_Type.__name__ = "DisplayString"
_SafRemoteEndpointRuntimeURL_Object = MibTableColumn
safRemoteEndpointRuntimeURL = _SafRemoteEndpointRuntimeURL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 25),
    _SafRemoteEndpointRuntimeURL_Type()
)
safRemoteEndpointRuntimeURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeURL.setStatus("current")


class _SafRemoteEndpointRuntimeEndpointType_Type(DisplayString):
    """Custom type safRemoteEndpointRuntimeEndpointType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_SafRemoteEndpointRuntimeEndpointType_Type.__name__ = "DisplayString"
_SafRemoteEndpointRuntimeEndpointType_Object = MibTableColumn
safRemoteEndpointRuntimeEndpointType = _SafRemoteEndpointRuntimeEndpointType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 30),
    _SafRemoteEndpointRuntimeEndpointType_Type()
)
safRemoteEndpointRuntimeEndpointType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeEndpointType.setStatus("current")


class _SafRemoteEndpointRuntimePausedForIncoming_Type(Integer32):
    """Custom type safRemoteEndpointRuntimePausedForIncoming based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_SafRemoteEndpointRuntimePausedForIncoming_Type.__name__ = "Integer32"
_SafRemoteEndpointRuntimePausedForIncoming_Object = MibTableColumn
safRemoteEndpointRuntimePausedForIncoming = _SafRemoteEndpointRuntimePausedForIncoming_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 35),
    _SafRemoteEndpointRuntimePausedForIncoming_Type()
)
safRemoteEndpointRuntimePausedForIncoming.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimePausedForIncoming.setStatus("current")


class _SafRemoteEndpointRuntimePausedForForwarding_Type(Integer32):
    """Custom type safRemoteEndpointRuntimePausedForForwarding based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_SafRemoteEndpointRuntimePausedForForwarding_Type.__name__ = "Integer32"
_SafRemoteEndpointRuntimePausedForForwarding_Object = MibTableColumn
safRemoteEndpointRuntimePausedForForwarding = _SafRemoteEndpointRuntimePausedForForwarding_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 40),
    _SafRemoteEndpointRuntimePausedForForwarding_Type()
)
safRemoteEndpointRuntimePausedForForwarding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimePausedForForwarding.setStatus("current")
_SafRemoteEndpointRuntimeDowntimeHigh_Type = Counter64
_SafRemoteEndpointRuntimeDowntimeHigh_Object = MibTableColumn
safRemoteEndpointRuntimeDowntimeHigh = _SafRemoteEndpointRuntimeDowntimeHigh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 50),
    _SafRemoteEndpointRuntimeDowntimeHigh_Type()
)
safRemoteEndpointRuntimeDowntimeHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeDowntimeHigh.setStatus("current")
_SafRemoteEndpointRuntimeDowntimeTotal_Type = Counter64
_SafRemoteEndpointRuntimeDowntimeTotal_Object = MibTableColumn
safRemoteEndpointRuntimeDowntimeTotal = _SafRemoteEndpointRuntimeDowntimeTotal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 55),
    _SafRemoteEndpointRuntimeDowntimeTotal_Type()
)
safRemoteEndpointRuntimeDowntimeTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeDowntimeTotal.setStatus("current")
_SafRemoteEndpointRuntimeUptimeHigh_Type = Counter64
_SafRemoteEndpointRuntimeUptimeHigh_Object = MibTableColumn
safRemoteEndpointRuntimeUptimeHigh = _SafRemoteEndpointRuntimeUptimeHigh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 60),
    _SafRemoteEndpointRuntimeUptimeHigh_Type()
)
safRemoteEndpointRuntimeUptimeHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeUptimeHigh.setStatus("current")
_SafRemoteEndpointRuntimeUptimeTotal_Type = Counter64
_SafRemoteEndpointRuntimeUptimeTotal_Object = MibTableColumn
safRemoteEndpointRuntimeUptimeTotal = _SafRemoteEndpointRuntimeUptimeTotal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 65),
    _SafRemoteEndpointRuntimeUptimeTotal_Type()
)
safRemoteEndpointRuntimeUptimeTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeUptimeTotal.setStatus("current")
_SafRemoteEndpointRuntimeMessagesCurrentCount_Type = Counter64
_SafRemoteEndpointRuntimeMessagesCurrentCount_Object = MibTableColumn
safRemoteEndpointRuntimeMessagesCurrentCount = _SafRemoteEndpointRuntimeMessagesCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 85),
    _SafRemoteEndpointRuntimeMessagesCurrentCount_Type()
)
safRemoteEndpointRuntimeMessagesCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeMessagesCurrentCount.setStatus("current")
_SafRemoteEndpointRuntimeMessagesPendingCount_Type = Counter64
_SafRemoteEndpointRuntimeMessagesPendingCount_Object = MibTableColumn
safRemoteEndpointRuntimeMessagesPendingCount = _SafRemoteEndpointRuntimeMessagesPendingCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 90),
    _SafRemoteEndpointRuntimeMessagesPendingCount_Type()
)
safRemoteEndpointRuntimeMessagesPendingCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeMessagesPendingCount.setStatus("current")
_SafRemoteEndpointRuntimeMessagesHighCount_Type = Counter64
_SafRemoteEndpointRuntimeMessagesHighCount_Object = MibTableColumn
safRemoteEndpointRuntimeMessagesHighCount = _SafRemoteEndpointRuntimeMessagesHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 95),
    _SafRemoteEndpointRuntimeMessagesHighCount_Type()
)
safRemoteEndpointRuntimeMessagesHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeMessagesHighCount.setStatus("current")
_SafRemoteEndpointRuntimeMessagesReceivedCount_Type = Counter64
_SafRemoteEndpointRuntimeMessagesReceivedCount_Object = MibTableColumn
safRemoteEndpointRuntimeMessagesReceivedCount = _SafRemoteEndpointRuntimeMessagesReceivedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 100),
    _SafRemoteEndpointRuntimeMessagesReceivedCount_Type()
)
safRemoteEndpointRuntimeMessagesReceivedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeMessagesReceivedCount.setStatus("current")
_SafRemoteEndpointRuntimeMessagesThresholdTime_Type = Counter64
_SafRemoteEndpointRuntimeMessagesThresholdTime_Object = MibTableColumn
safRemoteEndpointRuntimeMessagesThresholdTime = _SafRemoteEndpointRuntimeMessagesThresholdTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 105),
    _SafRemoteEndpointRuntimeMessagesThresholdTime_Type()
)
safRemoteEndpointRuntimeMessagesThresholdTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeMessagesThresholdTime.setStatus("current")
_SafRemoteEndpointRuntimeBytesPendingCount_Type = Counter64
_SafRemoteEndpointRuntimeBytesPendingCount_Object = MibTableColumn
safRemoteEndpointRuntimeBytesPendingCount = _SafRemoteEndpointRuntimeBytesPendingCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 110),
    _SafRemoteEndpointRuntimeBytesPendingCount_Type()
)
safRemoteEndpointRuntimeBytesPendingCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeBytesPendingCount.setStatus("current")
_SafRemoteEndpointRuntimeBytesCurrentCount_Type = Counter64
_SafRemoteEndpointRuntimeBytesCurrentCount_Object = MibTableColumn
safRemoteEndpointRuntimeBytesCurrentCount = _SafRemoteEndpointRuntimeBytesCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 115),
    _SafRemoteEndpointRuntimeBytesCurrentCount_Type()
)
safRemoteEndpointRuntimeBytesCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeBytesCurrentCount.setStatus("current")
_SafRemoteEndpointRuntimeBytesHighCount_Type = Counter64
_SafRemoteEndpointRuntimeBytesHighCount_Object = MibTableColumn
safRemoteEndpointRuntimeBytesHighCount = _SafRemoteEndpointRuntimeBytesHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 120),
    _SafRemoteEndpointRuntimeBytesHighCount_Type()
)
safRemoteEndpointRuntimeBytesHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeBytesHighCount.setStatus("current")
_SafRemoteEndpointRuntimeBytesReceivedCount_Type = Counter64
_SafRemoteEndpointRuntimeBytesReceivedCount_Object = MibTableColumn
safRemoteEndpointRuntimeBytesReceivedCount = _SafRemoteEndpointRuntimeBytesReceivedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 125),
    _SafRemoteEndpointRuntimeBytesReceivedCount_Type()
)
safRemoteEndpointRuntimeBytesReceivedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeBytesReceivedCount.setStatus("current")
_SafRemoteEndpointRuntimeBytesThresholdTime_Type = Counter64
_SafRemoteEndpointRuntimeBytesThresholdTime_Object = MibTableColumn
safRemoteEndpointRuntimeBytesThresholdTime = _SafRemoteEndpointRuntimeBytesThresholdTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 130),
    _SafRemoteEndpointRuntimeBytesThresholdTime_Type()
)
safRemoteEndpointRuntimeBytesThresholdTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeBytesThresholdTime.setStatus("current")
_SafRemoteEndpointRuntimeFailedMessagesTotal_Type = Counter64
_SafRemoteEndpointRuntimeFailedMessagesTotal_Object = MibTableColumn
safRemoteEndpointRuntimeFailedMessagesTotal = _SafRemoteEndpointRuntimeFailedMessagesTotal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 472, 1, 135),
    _SafRemoteEndpointRuntimeFailedMessagesTotal_Type()
)
safRemoteEndpointRuntimeFailedMessagesTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRemoteEndpointRuntimeFailedMessagesTotal.setStatus("current")
_WldfDbstoreArchiveRuntimeTable_Object = MibTable
wldfDbstoreArchiveRuntimeTable = _WldfDbstoreArchiveRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 480)
)
if mibBuilder.loadTexts:
    wldfDbstoreArchiveRuntimeTable.setStatus("current")
_WldfDbstoreArchiveRuntimeEntry_Object = MibTableRow
wldfDbstoreArchiveRuntimeEntry = _WldfDbstoreArchiveRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 480, 1)
)
wldfDbstoreArchiveRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wldfDbstoreArchiveRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wldfDbstoreArchiveRuntimeEntry.setStatus("current")


class _WldfDbstoreArchiveRuntimeIndex_Type(DisplayString):
    """Custom type wldfDbstoreArchiveRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WldfDbstoreArchiveRuntimeIndex_Type.__name__ = "DisplayString"
_WldfDbstoreArchiveRuntimeIndex_Object = MibTableColumn
wldfDbstoreArchiveRuntimeIndex = _WldfDbstoreArchiveRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 480, 1, 1),
    _WldfDbstoreArchiveRuntimeIndex_Type()
)
wldfDbstoreArchiveRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDbstoreArchiveRuntimeIndex.setStatus("current")


class _WldfDbstoreArchiveRuntimeObjectName_Type(DisplayString):
    """Custom type wldfDbstoreArchiveRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WldfDbstoreArchiveRuntimeObjectName_Type.__name__ = "DisplayString"
_WldfDbstoreArchiveRuntimeObjectName_Object = MibTableColumn
wldfDbstoreArchiveRuntimeObjectName = _WldfDbstoreArchiveRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 480, 1, 5),
    _WldfDbstoreArchiveRuntimeObjectName_Type()
)
wldfDbstoreArchiveRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDbstoreArchiveRuntimeObjectName.setStatus("current")


class _WldfDbstoreArchiveRuntimeType_Type(DisplayString):
    """Custom type wldfDbstoreArchiveRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WldfDbstoreArchiveRuntimeType_Type.__name__ = "DisplayString"
_WldfDbstoreArchiveRuntimeType_Object = MibTableColumn
wldfDbstoreArchiveRuntimeType = _WldfDbstoreArchiveRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 480, 1, 10),
    _WldfDbstoreArchiveRuntimeType_Type()
)
wldfDbstoreArchiveRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDbstoreArchiveRuntimeType.setStatus("current")


class _WldfDbstoreArchiveRuntimeName_Type(DisplayString):
    """Custom type wldfDbstoreArchiveRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WldfDbstoreArchiveRuntimeName_Type.__name__ = "DisplayString"
_WldfDbstoreArchiveRuntimeName_Object = MibTableColumn
wldfDbstoreArchiveRuntimeName = _WldfDbstoreArchiveRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 480, 1, 15),
    _WldfDbstoreArchiveRuntimeName_Type()
)
wldfDbstoreArchiveRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDbstoreArchiveRuntimeName.setStatus("current")


class _WldfDbstoreArchiveRuntimeParent_Type(DisplayString):
    """Custom type wldfDbstoreArchiveRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WldfDbstoreArchiveRuntimeParent_Type.__name__ = "DisplayString"
_WldfDbstoreArchiveRuntimeParent_Object = MibTableColumn
wldfDbstoreArchiveRuntimeParent = _WldfDbstoreArchiveRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 480, 1, 20),
    _WldfDbstoreArchiveRuntimeParent_Type()
)
wldfDbstoreArchiveRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDbstoreArchiveRuntimeParent.setStatus("current")
_WldfDbstoreArchiveRuntimeRecordSeekCount_Type = Counter64
_WldfDbstoreArchiveRuntimeRecordSeekCount_Object = MibTableColumn
wldfDbstoreArchiveRuntimeRecordSeekCount = _WldfDbstoreArchiveRuntimeRecordSeekCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 480, 1, 25),
    _WldfDbstoreArchiveRuntimeRecordSeekCount_Type()
)
wldfDbstoreArchiveRuntimeRecordSeekCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDbstoreArchiveRuntimeRecordSeekCount.setStatus("current")
_WldfDbstoreArchiveRuntimeRecordSeekTime_Type = Counter64
_WldfDbstoreArchiveRuntimeRecordSeekTime_Object = MibTableColumn
wldfDbstoreArchiveRuntimeRecordSeekTime = _WldfDbstoreArchiveRuntimeRecordSeekTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 480, 1, 30),
    _WldfDbstoreArchiveRuntimeRecordSeekTime_Type()
)
wldfDbstoreArchiveRuntimeRecordSeekTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDbstoreArchiveRuntimeRecordSeekTime.setStatus("current")
_WldfDbstoreArchiveRuntimeRetrievedRecordCount_Type = Counter64
_WldfDbstoreArchiveRuntimeRetrievedRecordCount_Object = MibTableColumn
wldfDbstoreArchiveRuntimeRetrievedRecordCount = _WldfDbstoreArchiveRuntimeRetrievedRecordCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 480, 1, 35),
    _WldfDbstoreArchiveRuntimeRetrievedRecordCount_Type()
)
wldfDbstoreArchiveRuntimeRetrievedRecordCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDbstoreArchiveRuntimeRetrievedRecordCount.setStatus("current")
_WldfDbstoreArchiveRuntimeRecordRetrievalTime_Type = Counter64
_WldfDbstoreArchiveRuntimeRecordRetrievalTime_Object = MibTableColumn
wldfDbstoreArchiveRuntimeRecordRetrievalTime = _WldfDbstoreArchiveRuntimeRecordRetrievalTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 480, 1, 40),
    _WldfDbstoreArchiveRuntimeRecordRetrievalTime_Type()
)
wldfDbstoreArchiveRuntimeRecordRetrievalTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDbstoreArchiveRuntimeRecordRetrievalTime.setStatus("current")
_WldfDbstoreArchiveRuntimeInsertionCount_Type = Counter64
_WldfDbstoreArchiveRuntimeInsertionCount_Object = MibTableColumn
wldfDbstoreArchiveRuntimeInsertionCount = _WldfDbstoreArchiveRuntimeInsertionCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 480, 1, 45),
    _WldfDbstoreArchiveRuntimeInsertionCount_Type()
)
wldfDbstoreArchiveRuntimeInsertionCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDbstoreArchiveRuntimeInsertionCount.setStatus("current")
_WldfDbstoreArchiveRuntimeInsertionTime_Type = Counter64
_WldfDbstoreArchiveRuntimeInsertionTime_Object = MibTableColumn
wldfDbstoreArchiveRuntimeInsertionTime = _WldfDbstoreArchiveRuntimeInsertionTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 480, 1, 50),
    _WldfDbstoreArchiveRuntimeInsertionTime_Type()
)
wldfDbstoreArchiveRuntimeInsertionTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDbstoreArchiveRuntimeInsertionTime.setStatus("current")
_WldfDbstoreArchiveRuntimeDeletionCount_Type = Counter64
_WldfDbstoreArchiveRuntimeDeletionCount_Object = MibTableColumn
wldfDbstoreArchiveRuntimeDeletionCount = _WldfDbstoreArchiveRuntimeDeletionCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 480, 1, 55),
    _WldfDbstoreArchiveRuntimeDeletionCount_Type()
)
wldfDbstoreArchiveRuntimeDeletionCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDbstoreArchiveRuntimeDeletionCount.setStatus("current")
_WldfDbstoreArchiveRuntimeDeletionTime_Type = Counter64
_WldfDbstoreArchiveRuntimeDeletionTime_Object = MibTableColumn
wldfDbstoreArchiveRuntimeDeletionTime = _WldfDbstoreArchiveRuntimeDeletionTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 480, 1, 60),
    _WldfDbstoreArchiveRuntimeDeletionTime_Type()
)
wldfDbstoreArchiveRuntimeDeletionTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDbstoreArchiveRuntimeDeletionTime.setStatus("current")
_WldfDbstoreArchiveRuntimeLastDataRetirementStartTime_Type = Counter64
_WldfDbstoreArchiveRuntimeLastDataRetirementStartTime_Object = MibTableColumn
wldfDbstoreArchiveRuntimeLastDataRetirementStartTime = _WldfDbstoreArchiveRuntimeLastDataRetirementStartTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 480, 1, 61),
    _WldfDbstoreArchiveRuntimeLastDataRetirementStartTime_Type()
)
wldfDbstoreArchiveRuntimeLastDataRetirementStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDbstoreArchiveRuntimeLastDataRetirementStartTime.setStatus("current")
_WldfDbstoreArchiveRuntimeDataRetirementCycles_Type = Integer32
_WldfDbstoreArchiveRuntimeDataRetirementCycles_Object = MibTableColumn
wldfDbstoreArchiveRuntimeDataRetirementCycles = _WldfDbstoreArchiveRuntimeDataRetirementCycles_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 480, 1, 62),
    _WldfDbstoreArchiveRuntimeDataRetirementCycles_Type()
)
wldfDbstoreArchiveRuntimeDataRetirementCycles.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDbstoreArchiveRuntimeDataRetirementCycles.setStatus("current")
_WldfDbstoreArchiveRuntimeDataRetirementTotalTime_Type = Counter64
_WldfDbstoreArchiveRuntimeDataRetirementTotalTime_Object = MibTableColumn
wldfDbstoreArchiveRuntimeDataRetirementTotalTime = _WldfDbstoreArchiveRuntimeDataRetirementTotalTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 480, 1, 63),
    _WldfDbstoreArchiveRuntimeDataRetirementTotalTime_Type()
)
wldfDbstoreArchiveRuntimeDataRetirementTotalTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDbstoreArchiveRuntimeDataRetirementTotalTime.setStatus("current")
_WldfDbstoreArchiveRuntimeRetiredRecordCount_Type = Counter64
_WldfDbstoreArchiveRuntimeRetiredRecordCount_Object = MibTableColumn
wldfDbstoreArchiveRuntimeRetiredRecordCount = _WldfDbstoreArchiveRuntimeRetiredRecordCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 480, 1, 64),
    _WldfDbstoreArchiveRuntimeRetiredRecordCount_Type()
)
wldfDbstoreArchiveRuntimeRetiredRecordCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDbstoreArchiveRuntimeRetiredRecordCount.setStatus("current")
_WldfDbstoreArchiveRuntimeLastDataRetirementTime_Type = Counter64
_WldfDbstoreArchiveRuntimeLastDataRetirementTime_Object = MibTableColumn
wldfDbstoreArchiveRuntimeLastDataRetirementTime = _WldfDbstoreArchiveRuntimeLastDataRetirementTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 480, 1, 65),
    _WldfDbstoreArchiveRuntimeLastDataRetirementTime_Type()
)
wldfDbstoreArchiveRuntimeLastDataRetirementTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDbstoreArchiveRuntimeLastDataRetirementTime.setStatus("current")
_WldfFileArchiveRuntimeTable_Object = MibTable
wldfFileArchiveRuntimeTable = _WldfFileArchiveRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 481)
)
if mibBuilder.loadTexts:
    wldfFileArchiveRuntimeTable.setStatus("current")
_WldfFileArchiveRuntimeEntry_Object = MibTableRow
wldfFileArchiveRuntimeEntry = _WldfFileArchiveRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 481, 1)
)
wldfFileArchiveRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wldfFileArchiveRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wldfFileArchiveRuntimeEntry.setStatus("current")


class _WldfFileArchiveRuntimeIndex_Type(DisplayString):
    """Custom type wldfFileArchiveRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WldfFileArchiveRuntimeIndex_Type.__name__ = "DisplayString"
_WldfFileArchiveRuntimeIndex_Object = MibTableColumn
wldfFileArchiveRuntimeIndex = _WldfFileArchiveRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 481, 1, 1),
    _WldfFileArchiveRuntimeIndex_Type()
)
wldfFileArchiveRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfFileArchiveRuntimeIndex.setStatus("current")


class _WldfFileArchiveRuntimeObjectName_Type(DisplayString):
    """Custom type wldfFileArchiveRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WldfFileArchiveRuntimeObjectName_Type.__name__ = "DisplayString"
_WldfFileArchiveRuntimeObjectName_Object = MibTableColumn
wldfFileArchiveRuntimeObjectName = _WldfFileArchiveRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 481, 1, 5),
    _WldfFileArchiveRuntimeObjectName_Type()
)
wldfFileArchiveRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfFileArchiveRuntimeObjectName.setStatus("current")


class _WldfFileArchiveRuntimeType_Type(DisplayString):
    """Custom type wldfFileArchiveRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WldfFileArchiveRuntimeType_Type.__name__ = "DisplayString"
_WldfFileArchiveRuntimeType_Object = MibTableColumn
wldfFileArchiveRuntimeType = _WldfFileArchiveRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 481, 1, 10),
    _WldfFileArchiveRuntimeType_Type()
)
wldfFileArchiveRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfFileArchiveRuntimeType.setStatus("current")


class _WldfFileArchiveRuntimeName_Type(DisplayString):
    """Custom type wldfFileArchiveRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WldfFileArchiveRuntimeName_Type.__name__ = "DisplayString"
_WldfFileArchiveRuntimeName_Object = MibTableColumn
wldfFileArchiveRuntimeName = _WldfFileArchiveRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 481, 1, 15),
    _WldfFileArchiveRuntimeName_Type()
)
wldfFileArchiveRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfFileArchiveRuntimeName.setStatus("current")


class _WldfFileArchiveRuntimeParent_Type(DisplayString):
    """Custom type wldfFileArchiveRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WldfFileArchiveRuntimeParent_Type.__name__ = "DisplayString"
_WldfFileArchiveRuntimeParent_Object = MibTableColumn
wldfFileArchiveRuntimeParent = _WldfFileArchiveRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 481, 1, 20),
    _WldfFileArchiveRuntimeParent_Type()
)
wldfFileArchiveRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfFileArchiveRuntimeParent.setStatus("current")
_WldfFileArchiveRuntimeRecordSeekCount_Type = Counter64
_WldfFileArchiveRuntimeRecordSeekCount_Object = MibTableColumn
wldfFileArchiveRuntimeRecordSeekCount = _WldfFileArchiveRuntimeRecordSeekCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 481, 1, 25),
    _WldfFileArchiveRuntimeRecordSeekCount_Type()
)
wldfFileArchiveRuntimeRecordSeekCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfFileArchiveRuntimeRecordSeekCount.setStatus("current")
_WldfFileArchiveRuntimeRecordSeekTime_Type = Counter64
_WldfFileArchiveRuntimeRecordSeekTime_Object = MibTableColumn
wldfFileArchiveRuntimeRecordSeekTime = _WldfFileArchiveRuntimeRecordSeekTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 481, 1, 30),
    _WldfFileArchiveRuntimeRecordSeekTime_Type()
)
wldfFileArchiveRuntimeRecordSeekTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfFileArchiveRuntimeRecordSeekTime.setStatus("current")
_WldfFileArchiveRuntimeRetrievedRecordCount_Type = Counter64
_WldfFileArchiveRuntimeRetrievedRecordCount_Object = MibTableColumn
wldfFileArchiveRuntimeRetrievedRecordCount = _WldfFileArchiveRuntimeRetrievedRecordCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 481, 1, 35),
    _WldfFileArchiveRuntimeRetrievedRecordCount_Type()
)
wldfFileArchiveRuntimeRetrievedRecordCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfFileArchiveRuntimeRetrievedRecordCount.setStatus("current")
_WldfFileArchiveRuntimeRecordRetrievalTime_Type = Counter64
_WldfFileArchiveRuntimeRecordRetrievalTime_Object = MibTableColumn
wldfFileArchiveRuntimeRecordRetrievalTime = _WldfFileArchiveRuntimeRecordRetrievalTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 481, 1, 40),
    _WldfFileArchiveRuntimeRecordRetrievalTime_Type()
)
wldfFileArchiveRuntimeRecordRetrievalTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfFileArchiveRuntimeRecordRetrievalTime.setStatus("current")
_WldfFileArchiveRuntimeRotatedFilesCount_Type = Integer32
_WldfFileArchiveRuntimeRotatedFilesCount_Object = MibTableColumn
wldfFileArchiveRuntimeRotatedFilesCount = _WldfFileArchiveRuntimeRotatedFilesCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 481, 1, 45),
    _WldfFileArchiveRuntimeRotatedFilesCount_Type()
)
wldfFileArchiveRuntimeRotatedFilesCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfFileArchiveRuntimeRotatedFilesCount.setStatus("current")
_WldfFileArchiveRuntimeIndexCycleCount_Type = Integer32
_WldfFileArchiveRuntimeIndexCycleCount_Object = MibTableColumn
wldfFileArchiveRuntimeIndexCycleCount = _WldfFileArchiveRuntimeIndexCycleCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 481, 1, 50),
    _WldfFileArchiveRuntimeIndexCycleCount_Type()
)
wldfFileArchiveRuntimeIndexCycleCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfFileArchiveRuntimeIndexCycleCount.setStatus("current")
_WldfFileArchiveRuntimeIndexTime_Type = Counter64
_WldfFileArchiveRuntimeIndexTime_Object = MibTableColumn
wldfFileArchiveRuntimeIndexTime = _WldfFileArchiveRuntimeIndexTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 481, 1, 55),
    _WldfFileArchiveRuntimeIndexTime_Type()
)
wldfFileArchiveRuntimeIndexTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfFileArchiveRuntimeIndexTime.setStatus("current")
_WldfFileArchiveRuntimeIncrementalIndexCycleCount_Type = Integer32
_WldfFileArchiveRuntimeIncrementalIndexCycleCount_Object = MibTableColumn
wldfFileArchiveRuntimeIncrementalIndexCycleCount = _WldfFileArchiveRuntimeIncrementalIndexCycleCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 481, 1, 60),
    _WldfFileArchiveRuntimeIncrementalIndexCycleCount_Type()
)
wldfFileArchiveRuntimeIncrementalIndexCycleCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfFileArchiveRuntimeIncrementalIndexCycleCount.setStatus("current")
_WldfFileArchiveRuntimeIncrementalIndexTime_Type = Counter64
_WldfFileArchiveRuntimeIncrementalIndexTime_Object = MibTableColumn
wldfFileArchiveRuntimeIncrementalIndexTime = _WldfFileArchiveRuntimeIncrementalIndexTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 481, 1, 65),
    _WldfFileArchiveRuntimeIncrementalIndexTime_Type()
)
wldfFileArchiveRuntimeIncrementalIndexTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfFileArchiveRuntimeIncrementalIndexTime.setStatus("current")
_WldfWlstoreArchiveRuntimeTable_Object = MibTable
wldfWlstoreArchiveRuntimeTable = _WldfWlstoreArchiveRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482)
)
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeTable.setStatus("current")
_WldfWlstoreArchiveRuntimeEntry_Object = MibTableRow
wldfWlstoreArchiveRuntimeEntry = _WldfWlstoreArchiveRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482, 1)
)
wldfWlstoreArchiveRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wldfWlstoreArchiveRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeEntry.setStatus("current")


class _WldfWlstoreArchiveRuntimeIndex_Type(DisplayString):
    """Custom type wldfWlstoreArchiveRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WldfWlstoreArchiveRuntimeIndex_Type.__name__ = "DisplayString"
_WldfWlstoreArchiveRuntimeIndex_Object = MibTableColumn
wldfWlstoreArchiveRuntimeIndex = _WldfWlstoreArchiveRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482, 1, 1),
    _WldfWlstoreArchiveRuntimeIndex_Type()
)
wldfWlstoreArchiveRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeIndex.setStatus("current")


class _WldfWlstoreArchiveRuntimeObjectName_Type(DisplayString):
    """Custom type wldfWlstoreArchiveRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WldfWlstoreArchiveRuntimeObjectName_Type.__name__ = "DisplayString"
_WldfWlstoreArchiveRuntimeObjectName_Object = MibTableColumn
wldfWlstoreArchiveRuntimeObjectName = _WldfWlstoreArchiveRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482, 1, 5),
    _WldfWlstoreArchiveRuntimeObjectName_Type()
)
wldfWlstoreArchiveRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeObjectName.setStatus("current")


class _WldfWlstoreArchiveRuntimeType_Type(DisplayString):
    """Custom type wldfWlstoreArchiveRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WldfWlstoreArchiveRuntimeType_Type.__name__ = "DisplayString"
_WldfWlstoreArchiveRuntimeType_Object = MibTableColumn
wldfWlstoreArchiveRuntimeType = _WldfWlstoreArchiveRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482, 1, 10),
    _WldfWlstoreArchiveRuntimeType_Type()
)
wldfWlstoreArchiveRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeType.setStatus("current")


class _WldfWlstoreArchiveRuntimeName_Type(DisplayString):
    """Custom type wldfWlstoreArchiveRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WldfWlstoreArchiveRuntimeName_Type.__name__ = "DisplayString"
_WldfWlstoreArchiveRuntimeName_Object = MibTableColumn
wldfWlstoreArchiveRuntimeName = _WldfWlstoreArchiveRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482, 1, 15),
    _WldfWlstoreArchiveRuntimeName_Type()
)
wldfWlstoreArchiveRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeName.setStatus("current")


class _WldfWlstoreArchiveRuntimeParent_Type(DisplayString):
    """Custom type wldfWlstoreArchiveRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WldfWlstoreArchiveRuntimeParent_Type.__name__ = "DisplayString"
_WldfWlstoreArchiveRuntimeParent_Object = MibTableColumn
wldfWlstoreArchiveRuntimeParent = _WldfWlstoreArchiveRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482, 1, 20),
    _WldfWlstoreArchiveRuntimeParent_Type()
)
wldfWlstoreArchiveRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeParent.setStatus("current")
_WldfWlstoreArchiveRuntimeRecordSeekCount_Type = Counter64
_WldfWlstoreArchiveRuntimeRecordSeekCount_Object = MibTableColumn
wldfWlstoreArchiveRuntimeRecordSeekCount = _WldfWlstoreArchiveRuntimeRecordSeekCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482, 1, 25),
    _WldfWlstoreArchiveRuntimeRecordSeekCount_Type()
)
wldfWlstoreArchiveRuntimeRecordSeekCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeRecordSeekCount.setStatus("current")
_WldfWlstoreArchiveRuntimeRecordSeekTime_Type = Counter64
_WldfWlstoreArchiveRuntimeRecordSeekTime_Object = MibTableColumn
wldfWlstoreArchiveRuntimeRecordSeekTime = _WldfWlstoreArchiveRuntimeRecordSeekTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482, 1, 30),
    _WldfWlstoreArchiveRuntimeRecordSeekTime_Type()
)
wldfWlstoreArchiveRuntimeRecordSeekTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeRecordSeekTime.setStatus("current")
_WldfWlstoreArchiveRuntimeRetrievedRecordCount_Type = Counter64
_WldfWlstoreArchiveRuntimeRetrievedRecordCount_Object = MibTableColumn
wldfWlstoreArchiveRuntimeRetrievedRecordCount = _WldfWlstoreArchiveRuntimeRetrievedRecordCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482, 1, 35),
    _WldfWlstoreArchiveRuntimeRetrievedRecordCount_Type()
)
wldfWlstoreArchiveRuntimeRetrievedRecordCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeRetrievedRecordCount.setStatus("current")
_WldfWlstoreArchiveRuntimeRecordRetrievalTime_Type = Counter64
_WldfWlstoreArchiveRuntimeRecordRetrievalTime_Object = MibTableColumn
wldfWlstoreArchiveRuntimeRecordRetrievalTime = _WldfWlstoreArchiveRuntimeRecordRetrievalTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482, 1, 40),
    _WldfWlstoreArchiveRuntimeRecordRetrievalTime_Type()
)
wldfWlstoreArchiveRuntimeRecordRetrievalTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeRecordRetrievalTime.setStatus("current")
_WldfWlstoreArchiveRuntimeIndexPageCount_Type = Integer32
_WldfWlstoreArchiveRuntimeIndexPageCount_Object = MibTableColumn
wldfWlstoreArchiveRuntimeIndexPageCount = _WldfWlstoreArchiveRuntimeIndexPageCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482, 1, 45),
    _WldfWlstoreArchiveRuntimeIndexPageCount_Type()
)
wldfWlstoreArchiveRuntimeIndexPageCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeIndexPageCount.setStatus("current")
_WldfWlstoreArchiveRuntimeInsertionCount_Type = Counter64
_WldfWlstoreArchiveRuntimeInsertionCount_Object = MibTableColumn
wldfWlstoreArchiveRuntimeInsertionCount = _WldfWlstoreArchiveRuntimeInsertionCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482, 1, 50),
    _WldfWlstoreArchiveRuntimeInsertionCount_Type()
)
wldfWlstoreArchiveRuntimeInsertionCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeInsertionCount.setStatus("current")
_WldfWlstoreArchiveRuntimeInsertionTime_Type = Counter64
_WldfWlstoreArchiveRuntimeInsertionTime_Object = MibTableColumn
wldfWlstoreArchiveRuntimeInsertionTime = _WldfWlstoreArchiveRuntimeInsertionTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482, 1, 55),
    _WldfWlstoreArchiveRuntimeInsertionTime_Type()
)
wldfWlstoreArchiveRuntimeInsertionTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeInsertionTime.setStatus("current")
_WldfWlstoreArchiveRuntimeDeletionCount_Type = Counter64
_WldfWlstoreArchiveRuntimeDeletionCount_Object = MibTableColumn
wldfWlstoreArchiveRuntimeDeletionCount = _WldfWlstoreArchiveRuntimeDeletionCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482, 1, 60),
    _WldfWlstoreArchiveRuntimeDeletionCount_Type()
)
wldfWlstoreArchiveRuntimeDeletionCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeDeletionCount.setStatus("current")
_WldfWlstoreArchiveRuntimeDeletionTime_Type = Counter64
_WldfWlstoreArchiveRuntimeDeletionTime_Object = MibTableColumn
wldfWlstoreArchiveRuntimeDeletionTime = _WldfWlstoreArchiveRuntimeDeletionTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482, 1, 65),
    _WldfWlstoreArchiveRuntimeDeletionTime_Type()
)
wldfWlstoreArchiveRuntimeDeletionTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeDeletionTime.setStatus("current")
_WldfWlstoreArchiveRuntimeLastDataRetirementStartTime_Type = Counter64
_WldfWlstoreArchiveRuntimeLastDataRetirementStartTime_Object = MibTableColumn
wldfWlstoreArchiveRuntimeLastDataRetirementStartTime = _WldfWlstoreArchiveRuntimeLastDataRetirementStartTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482, 1, 66),
    _WldfWlstoreArchiveRuntimeLastDataRetirementStartTime_Type()
)
wldfWlstoreArchiveRuntimeLastDataRetirementStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeLastDataRetirementStartTime.setStatus("current")
_WldfWlstoreArchiveRuntimeRecordCount_Type = Counter64
_WldfWlstoreArchiveRuntimeRecordCount_Object = MibTableColumn
wldfWlstoreArchiveRuntimeRecordCount = _WldfWlstoreArchiveRuntimeRecordCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482, 1, 67),
    _WldfWlstoreArchiveRuntimeRecordCount_Type()
)
wldfWlstoreArchiveRuntimeRecordCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeRecordCount.setStatus("current")
_WldfWlstoreArchiveRuntimeDataRetirementCycles_Type = Integer32
_WldfWlstoreArchiveRuntimeDataRetirementCycles_Object = MibTableColumn
wldfWlstoreArchiveRuntimeDataRetirementCycles = _WldfWlstoreArchiveRuntimeDataRetirementCycles_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482, 1, 68),
    _WldfWlstoreArchiveRuntimeDataRetirementCycles_Type()
)
wldfWlstoreArchiveRuntimeDataRetirementCycles.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeDataRetirementCycles.setStatus("current")
_WldfWlstoreArchiveRuntimeDataRetirementTotalTime_Type = Counter64
_WldfWlstoreArchiveRuntimeDataRetirementTotalTime_Object = MibTableColumn
wldfWlstoreArchiveRuntimeDataRetirementTotalTime = _WldfWlstoreArchiveRuntimeDataRetirementTotalTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482, 1, 69),
    _WldfWlstoreArchiveRuntimeDataRetirementTotalTime_Type()
)
wldfWlstoreArchiveRuntimeDataRetirementTotalTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeDataRetirementTotalTime.setStatus("current")
_WldfWlstoreArchiveRuntimeRetiredRecordCount_Type = Counter64
_WldfWlstoreArchiveRuntimeRetiredRecordCount_Object = MibTableColumn
wldfWlstoreArchiveRuntimeRetiredRecordCount = _WldfWlstoreArchiveRuntimeRetiredRecordCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482, 1, 70),
    _WldfWlstoreArchiveRuntimeRetiredRecordCount_Type()
)
wldfWlstoreArchiveRuntimeRetiredRecordCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeRetiredRecordCount.setStatus("current")
_WldfWlstoreArchiveRuntimeLastDataRetirementTime_Type = Counter64
_WldfWlstoreArchiveRuntimeLastDataRetirementTime_Object = MibTableColumn
wldfWlstoreArchiveRuntimeLastDataRetirementTime = _WldfWlstoreArchiveRuntimeLastDataRetirementTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 482, 1, 71),
    _WldfWlstoreArchiveRuntimeLastDataRetirementTime_Type()
)
wldfWlstoreArchiveRuntimeLastDataRetirementTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWlstoreArchiveRuntimeLastDataRetirementTime.setStatus("current")
_WldfHarvesterRuntimeTable_Object = MibTable
wldfHarvesterRuntimeTable = _WldfHarvesterRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 483)
)
if mibBuilder.loadTexts:
    wldfHarvesterRuntimeTable.setStatus("current")
_WldfHarvesterRuntimeEntry_Object = MibTableRow
wldfHarvesterRuntimeEntry = _WldfHarvesterRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 483, 1)
)
wldfHarvesterRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wldfHarvesterRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wldfHarvesterRuntimeEntry.setStatus("current")


class _WldfHarvesterRuntimeIndex_Type(DisplayString):
    """Custom type wldfHarvesterRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WldfHarvesterRuntimeIndex_Type.__name__ = "DisplayString"
_WldfHarvesterRuntimeIndex_Object = MibTableColumn
wldfHarvesterRuntimeIndex = _WldfHarvesterRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 483, 1, 1),
    _WldfHarvesterRuntimeIndex_Type()
)
wldfHarvesterRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfHarvesterRuntimeIndex.setStatus("current")


class _WldfHarvesterRuntimeObjectName_Type(DisplayString):
    """Custom type wldfHarvesterRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WldfHarvesterRuntimeObjectName_Type.__name__ = "DisplayString"
_WldfHarvesterRuntimeObjectName_Object = MibTableColumn
wldfHarvesterRuntimeObjectName = _WldfHarvesterRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 483, 1, 5),
    _WldfHarvesterRuntimeObjectName_Type()
)
wldfHarvesterRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfHarvesterRuntimeObjectName.setStatus("current")


class _WldfHarvesterRuntimeType_Type(DisplayString):
    """Custom type wldfHarvesterRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WldfHarvesterRuntimeType_Type.__name__ = "DisplayString"
_WldfHarvesterRuntimeType_Object = MibTableColumn
wldfHarvesterRuntimeType = _WldfHarvesterRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 483, 1, 10),
    _WldfHarvesterRuntimeType_Type()
)
wldfHarvesterRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfHarvesterRuntimeType.setStatus("current")


class _WldfHarvesterRuntimeName_Type(DisplayString):
    """Custom type wldfHarvesterRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WldfHarvesterRuntimeName_Type.__name__ = "DisplayString"
_WldfHarvesterRuntimeName_Object = MibTableColumn
wldfHarvesterRuntimeName = _WldfHarvesterRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 483, 1, 15),
    _WldfHarvesterRuntimeName_Type()
)
wldfHarvesterRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfHarvesterRuntimeName.setStatus("current")


class _WldfHarvesterRuntimeParent_Type(DisplayString):
    """Custom type wldfHarvesterRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WldfHarvesterRuntimeParent_Type.__name__ = "DisplayString"
_WldfHarvesterRuntimeParent_Object = MibTableColumn
wldfHarvesterRuntimeParent = _WldfHarvesterRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 483, 1, 20),
    _WldfHarvesterRuntimeParent_Type()
)
wldfHarvesterRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfHarvesterRuntimeParent.setStatus("current")
_WldfHarvesterRuntimeSamplePeriod_Type = Counter64
_WldfHarvesterRuntimeSamplePeriod_Object = MibTableColumn
wldfHarvesterRuntimeSamplePeriod = _WldfHarvesterRuntimeSamplePeriod_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 483, 1, 25),
    _WldfHarvesterRuntimeSamplePeriod_Type()
)
wldfHarvesterRuntimeSamplePeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfHarvesterRuntimeSamplePeriod.setStatus("current")
_WldfHarvesterRuntimeTotalSamplingCycles_Type = Counter64
_WldfHarvesterRuntimeTotalSamplingCycles_Object = MibTableColumn
wldfHarvesterRuntimeTotalSamplingCycles = _WldfHarvesterRuntimeTotalSamplingCycles_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 483, 1, 30),
    _WldfHarvesterRuntimeTotalSamplingCycles_Type()
)
wldfHarvesterRuntimeTotalSamplingCycles.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfHarvesterRuntimeTotalSamplingCycles.setStatus("current")
_WldfHarvesterRuntimeMinimumSamplingTime_Type = Counter64
_WldfHarvesterRuntimeMinimumSamplingTime_Object = MibTableColumn
wldfHarvesterRuntimeMinimumSamplingTime = _WldfHarvesterRuntimeMinimumSamplingTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 483, 1, 35),
    _WldfHarvesterRuntimeMinimumSamplingTime_Type()
)
wldfHarvesterRuntimeMinimumSamplingTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfHarvesterRuntimeMinimumSamplingTime.setStatus("current")
_WldfHarvesterRuntimeMaximumSamplingTime_Type = Counter64
_WldfHarvesterRuntimeMaximumSamplingTime_Object = MibTableColumn
wldfHarvesterRuntimeMaximumSamplingTime = _WldfHarvesterRuntimeMaximumSamplingTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 483, 1, 40),
    _WldfHarvesterRuntimeMaximumSamplingTime_Type()
)
wldfHarvesterRuntimeMaximumSamplingTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfHarvesterRuntimeMaximumSamplingTime.setStatus("current")
_WldfHarvesterRuntimeTotalSamplingTime_Type = Counter64
_WldfHarvesterRuntimeTotalSamplingTime_Object = MibTableColumn
wldfHarvesterRuntimeTotalSamplingTime = _WldfHarvesterRuntimeTotalSamplingTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 483, 1, 45),
    _WldfHarvesterRuntimeTotalSamplingTime_Type()
)
wldfHarvesterRuntimeTotalSamplingTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfHarvesterRuntimeTotalSamplingTime.setStatus("current")
_WldfHarvesterRuntimeAverageSamplingTime_Type = Counter64
_WldfHarvesterRuntimeAverageSamplingTime_Object = MibTableColumn
wldfHarvesterRuntimeAverageSamplingTime = _WldfHarvesterRuntimeAverageSamplingTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 483, 1, 50),
    _WldfHarvesterRuntimeAverageSamplingTime_Type()
)
wldfHarvesterRuntimeAverageSamplingTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfHarvesterRuntimeAverageSamplingTime.setStatus("current")
_WldfHarvesterRuntimeCurrentDataSampleCount_Type = Counter64
_WldfHarvesterRuntimeCurrentDataSampleCount_Object = MibTableColumn
wldfHarvesterRuntimeCurrentDataSampleCount = _WldfHarvesterRuntimeCurrentDataSampleCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 483, 1, 55),
    _WldfHarvesterRuntimeCurrentDataSampleCount_Type()
)
wldfHarvesterRuntimeCurrentDataSampleCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfHarvesterRuntimeCurrentDataSampleCount.setStatus("current")
_WldfHarvesterRuntimeCurrentSnapshotStartTime_Type = Counter64
_WldfHarvesterRuntimeCurrentSnapshotStartTime_Object = MibTableColumn
wldfHarvesterRuntimeCurrentSnapshotStartTime = _WldfHarvesterRuntimeCurrentSnapshotStartTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 483, 1, 60),
    _WldfHarvesterRuntimeCurrentSnapshotStartTime_Type()
)
wldfHarvesterRuntimeCurrentSnapshotStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfHarvesterRuntimeCurrentSnapshotStartTime.setStatus("current")
_WldfHarvesterRuntimeCurrentSnapshotElapsedTime_Type = Counter64
_WldfHarvesterRuntimeCurrentSnapshotElapsedTime_Object = MibTableColumn
wldfHarvesterRuntimeCurrentSnapshotElapsedTime = _WldfHarvesterRuntimeCurrentSnapshotElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 483, 1, 65),
    _WldfHarvesterRuntimeCurrentSnapshotElapsedTime_Type()
)
wldfHarvesterRuntimeCurrentSnapshotElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfHarvesterRuntimeCurrentSnapshotElapsedTime.setStatus("current")
_WldfHarvesterRuntimeTotalSamplingTimeOutlierCount_Type = Counter64
_WldfHarvesterRuntimeTotalSamplingTimeOutlierCount_Object = MibTableColumn
wldfHarvesterRuntimeTotalSamplingTimeOutlierCount = _WldfHarvesterRuntimeTotalSamplingTimeOutlierCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 483, 1, 66),
    _WldfHarvesterRuntimeTotalSamplingTimeOutlierCount_Type()
)
wldfHarvesterRuntimeTotalSamplingTimeOutlierCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfHarvesterRuntimeTotalSamplingTimeOutlierCount.setStatus("current")
_WldfHarvesterRuntimeOutlierDetectionFactor_Type = OctetString
_WldfHarvesterRuntimeOutlierDetectionFactor_Object = MibTableColumn
wldfHarvesterRuntimeOutlierDetectionFactor = _WldfHarvesterRuntimeOutlierDetectionFactor_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 483, 1, 67),
    _WldfHarvesterRuntimeOutlierDetectionFactor_Type()
)
wldfHarvesterRuntimeOutlierDetectionFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfHarvesterRuntimeOutlierDetectionFactor.setStatus("current")
_WldfHarvesterRuntimeTotalDataSampleCount_Type = Counter64
_WldfHarvesterRuntimeTotalDataSampleCount_Object = MibTableColumn
wldfHarvesterRuntimeTotalDataSampleCount = _WldfHarvesterRuntimeTotalDataSampleCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 483, 1, 68),
    _WldfHarvesterRuntimeTotalDataSampleCount_Type()
)
wldfHarvesterRuntimeTotalDataSampleCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfHarvesterRuntimeTotalDataSampleCount.setStatus("current")
_WldfHarvesterRuntimeCurrentSampleTimeAnOutlier_Type = OctetString
_WldfHarvesterRuntimeCurrentSampleTimeAnOutlier_Object = MibTableColumn
wldfHarvesterRuntimeCurrentSampleTimeAnOutlier = _WldfHarvesterRuntimeCurrentSampleTimeAnOutlier_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 483, 1, 69),
    _WldfHarvesterRuntimeCurrentSampleTimeAnOutlier_Type()
)
wldfHarvesterRuntimeCurrentSampleTimeAnOutlier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfHarvesterRuntimeCurrentSampleTimeAnOutlier.setStatus("current")
_WldfInstrumentationRuntimeTable_Object = MibTable
wldfInstrumentationRuntimeTable = _WldfInstrumentationRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 484)
)
if mibBuilder.loadTexts:
    wldfInstrumentationRuntimeTable.setStatus("current")
_WldfInstrumentationRuntimeEntry_Object = MibTableRow
wldfInstrumentationRuntimeEntry = _WldfInstrumentationRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 484, 1)
)
wldfInstrumentationRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wldfInstrumentationRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wldfInstrumentationRuntimeEntry.setStatus("current")


class _WldfInstrumentationRuntimeIndex_Type(DisplayString):
    """Custom type wldfInstrumentationRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WldfInstrumentationRuntimeIndex_Type.__name__ = "DisplayString"
_WldfInstrumentationRuntimeIndex_Object = MibTableColumn
wldfInstrumentationRuntimeIndex = _WldfInstrumentationRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 484, 1, 1),
    _WldfInstrumentationRuntimeIndex_Type()
)
wldfInstrumentationRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfInstrumentationRuntimeIndex.setStatus("current")


class _WldfInstrumentationRuntimeObjectName_Type(DisplayString):
    """Custom type wldfInstrumentationRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WldfInstrumentationRuntimeObjectName_Type.__name__ = "DisplayString"
_WldfInstrumentationRuntimeObjectName_Object = MibTableColumn
wldfInstrumentationRuntimeObjectName = _WldfInstrumentationRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 484, 1, 5),
    _WldfInstrumentationRuntimeObjectName_Type()
)
wldfInstrumentationRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfInstrumentationRuntimeObjectName.setStatus("current")


class _WldfInstrumentationRuntimeType_Type(DisplayString):
    """Custom type wldfInstrumentationRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WldfInstrumentationRuntimeType_Type.__name__ = "DisplayString"
_WldfInstrumentationRuntimeType_Object = MibTableColumn
wldfInstrumentationRuntimeType = _WldfInstrumentationRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 484, 1, 10),
    _WldfInstrumentationRuntimeType_Type()
)
wldfInstrumentationRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfInstrumentationRuntimeType.setStatus("current")


class _WldfInstrumentationRuntimeName_Type(DisplayString):
    """Custom type wldfInstrumentationRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WldfInstrumentationRuntimeName_Type.__name__ = "DisplayString"
_WldfInstrumentationRuntimeName_Object = MibTableColumn
wldfInstrumentationRuntimeName = _WldfInstrumentationRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 484, 1, 15),
    _WldfInstrumentationRuntimeName_Type()
)
wldfInstrumentationRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfInstrumentationRuntimeName.setStatus("current")


class _WldfInstrumentationRuntimeParent_Type(DisplayString):
    """Custom type wldfInstrumentationRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WldfInstrumentationRuntimeParent_Type.__name__ = "DisplayString"
_WldfInstrumentationRuntimeParent_Object = MibTableColumn
wldfInstrumentationRuntimeParent = _WldfInstrumentationRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 484, 1, 20),
    _WldfInstrumentationRuntimeParent_Type()
)
wldfInstrumentationRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfInstrumentationRuntimeParent.setStatus("current")
_WldfInstrumentationRuntimeInspectedClassesCount_Type = Integer32
_WldfInstrumentationRuntimeInspectedClassesCount_Object = MibTableColumn
wldfInstrumentationRuntimeInspectedClassesCount = _WldfInstrumentationRuntimeInspectedClassesCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 484, 1, 25),
    _WldfInstrumentationRuntimeInspectedClassesCount_Type()
)
wldfInstrumentationRuntimeInspectedClassesCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfInstrumentationRuntimeInspectedClassesCount.setStatus("current")
_WldfInstrumentationRuntimeModifiedClassesCount_Type = Integer32
_WldfInstrumentationRuntimeModifiedClassesCount_Object = MibTableColumn
wldfInstrumentationRuntimeModifiedClassesCount = _WldfInstrumentationRuntimeModifiedClassesCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 484, 1, 30),
    _WldfInstrumentationRuntimeModifiedClassesCount_Type()
)
wldfInstrumentationRuntimeModifiedClassesCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfInstrumentationRuntimeModifiedClassesCount.setStatus("current")
_WldfInstrumentationRuntimeMinWeavingTime_Type = Counter64
_WldfInstrumentationRuntimeMinWeavingTime_Object = MibTableColumn
wldfInstrumentationRuntimeMinWeavingTime = _WldfInstrumentationRuntimeMinWeavingTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 484, 1, 35),
    _WldfInstrumentationRuntimeMinWeavingTime_Type()
)
wldfInstrumentationRuntimeMinWeavingTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfInstrumentationRuntimeMinWeavingTime.setStatus("current")
_WldfInstrumentationRuntimeMaxWeavingTime_Type = Counter64
_WldfInstrumentationRuntimeMaxWeavingTime_Object = MibTableColumn
wldfInstrumentationRuntimeMaxWeavingTime = _WldfInstrumentationRuntimeMaxWeavingTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 484, 1, 40),
    _WldfInstrumentationRuntimeMaxWeavingTime_Type()
)
wldfInstrumentationRuntimeMaxWeavingTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfInstrumentationRuntimeMaxWeavingTime.setStatus("current")
_WldfInstrumentationRuntimeTotalWeavingTime_Type = Counter64
_WldfInstrumentationRuntimeTotalWeavingTime_Object = MibTableColumn
wldfInstrumentationRuntimeTotalWeavingTime = _WldfInstrumentationRuntimeTotalWeavingTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 484, 1, 45),
    _WldfInstrumentationRuntimeTotalWeavingTime_Type()
)
wldfInstrumentationRuntimeTotalWeavingTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfInstrumentationRuntimeTotalWeavingTime.setStatus("current")
_WldfInstrumentationRuntimeExecutionJoinpointCount_Type = Integer32
_WldfInstrumentationRuntimeExecutionJoinpointCount_Object = MibTableColumn
wldfInstrumentationRuntimeExecutionJoinpointCount = _WldfInstrumentationRuntimeExecutionJoinpointCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 484, 1, 50),
    _WldfInstrumentationRuntimeExecutionJoinpointCount_Type()
)
wldfInstrumentationRuntimeExecutionJoinpointCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfInstrumentationRuntimeExecutionJoinpointCount.setStatus("current")
_WldfInstrumentationRuntimeCallJoinpointCount_Type = Integer32
_WldfInstrumentationRuntimeCallJoinpointCount_Object = MibTableColumn
wldfInstrumentationRuntimeCallJoinpointCount = _WldfInstrumentationRuntimeCallJoinpointCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 484, 1, 55),
    _WldfInstrumentationRuntimeCallJoinpointCount_Type()
)
wldfInstrumentationRuntimeCallJoinpointCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfInstrumentationRuntimeCallJoinpointCount.setStatus("current")
_WldfInstrumentationRuntimeClassweaveAbortCount_Type = Integer32
_WldfInstrumentationRuntimeClassweaveAbortCount_Object = MibTableColumn
wldfInstrumentationRuntimeClassweaveAbortCount = _WldfInstrumentationRuntimeClassweaveAbortCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 484, 1, 56),
    _WldfInstrumentationRuntimeClassweaveAbortCount_Type()
)
wldfInstrumentationRuntimeClassweaveAbortCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfInstrumentationRuntimeClassweaveAbortCount.setStatus("current")
_WldfWatchNotificationRuntimeTable_Object = MibTable
wldfWatchNotificationRuntimeTable = _WldfWatchNotificationRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485)
)
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTable.setStatus("current")
_WldfWatchNotificationRuntimeEntry_Object = MibTableRow
wldfWatchNotificationRuntimeEntry = _WldfWatchNotificationRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1)
)
wldfWatchNotificationRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wldfWatchNotificationRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeEntry.setStatus("current")


class _WldfWatchNotificationRuntimeIndex_Type(DisplayString):
    """Custom type wldfWatchNotificationRuntimeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WldfWatchNotificationRuntimeIndex_Type.__name__ = "DisplayString"
_WldfWatchNotificationRuntimeIndex_Object = MibTableColumn
wldfWatchNotificationRuntimeIndex = _WldfWatchNotificationRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 1),
    _WldfWatchNotificationRuntimeIndex_Type()
)
wldfWatchNotificationRuntimeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeIndex.setStatus("current")


class _WldfWatchNotificationRuntimeObjectName_Type(DisplayString):
    """Custom type wldfWatchNotificationRuntimeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WldfWatchNotificationRuntimeObjectName_Type.__name__ = "DisplayString"
_WldfWatchNotificationRuntimeObjectName_Object = MibTableColumn
wldfWatchNotificationRuntimeObjectName = _WldfWatchNotificationRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 5),
    _WldfWatchNotificationRuntimeObjectName_Type()
)
wldfWatchNotificationRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeObjectName.setStatus("current")


class _WldfWatchNotificationRuntimeType_Type(DisplayString):
    """Custom type wldfWatchNotificationRuntimeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WldfWatchNotificationRuntimeType_Type.__name__ = "DisplayString"
_WldfWatchNotificationRuntimeType_Object = MibTableColumn
wldfWatchNotificationRuntimeType = _WldfWatchNotificationRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 10),
    _WldfWatchNotificationRuntimeType_Type()
)
wldfWatchNotificationRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeType.setStatus("current")


class _WldfWatchNotificationRuntimeName_Type(DisplayString):
    """Custom type wldfWatchNotificationRuntimeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WldfWatchNotificationRuntimeName_Type.__name__ = "DisplayString"
_WldfWatchNotificationRuntimeName_Object = MibTableColumn
wldfWatchNotificationRuntimeName = _WldfWatchNotificationRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 15),
    _WldfWatchNotificationRuntimeName_Type()
)
wldfWatchNotificationRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeName.setStatus("current")


class _WldfWatchNotificationRuntimeParent_Type(DisplayString):
    """Custom type wldfWatchNotificationRuntimeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WldfWatchNotificationRuntimeParent_Type.__name__ = "DisplayString"
_WldfWatchNotificationRuntimeParent_Object = MibTableColumn
wldfWatchNotificationRuntimeParent = _WldfWatchNotificationRuntimeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 20),
    _WldfWatchNotificationRuntimeParent_Type()
)
wldfWatchNotificationRuntimeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeParent.setStatus("current")
_WldfWatchNotificationRuntimeTotalHarvesterEvaluationCycles_Type = Counter64
_WldfWatchNotificationRuntimeTotalHarvesterEvaluationCycles_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalHarvesterEvaluationCycles = _WldfWatchNotificationRuntimeTotalHarvesterEvaluationCycles_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 25),
    _WldfWatchNotificationRuntimeTotalHarvesterEvaluationCycles_Type()
)
wldfWatchNotificationRuntimeTotalHarvesterEvaluationCycles.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalHarvesterEvaluationCycles.setStatus("current")
_WldfWatchNotificationRuntimeTotalHarvesterWatchEvaluations_Type = Counter64
_WldfWatchNotificationRuntimeTotalHarvesterWatchEvaluations_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalHarvesterWatchEvaluations = _WldfWatchNotificationRuntimeTotalHarvesterWatchEvaluations_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 30),
    _WldfWatchNotificationRuntimeTotalHarvesterWatchEvaluations_Type()
)
wldfWatchNotificationRuntimeTotalHarvesterWatchEvaluations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalHarvesterWatchEvaluations.setStatus("current")
_WldfWatchNotificationRuntimeTotalHarvesterWatchesTriggered_Type = Counter64
_WldfWatchNotificationRuntimeTotalHarvesterWatchesTriggered_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalHarvesterWatchesTriggered = _WldfWatchNotificationRuntimeTotalHarvesterWatchesTriggered_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 35),
    _WldfWatchNotificationRuntimeTotalHarvesterWatchesTriggered_Type()
)
wldfWatchNotificationRuntimeTotalHarvesterWatchesTriggered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalHarvesterWatchesTriggered.setStatus("current")
_WldfWatchNotificationRuntimeAverageHarvesterWatchEvaluationTime_Type = Counter64
_WldfWatchNotificationRuntimeAverageHarvesterWatchEvaluationTime_Object = MibTableColumn
wldfWatchNotificationRuntimeAverageHarvesterWatchEvaluationTime = _WldfWatchNotificationRuntimeAverageHarvesterWatchEvaluationTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 40),
    _WldfWatchNotificationRuntimeAverageHarvesterWatchEvaluationTime_Type()
)
wldfWatchNotificationRuntimeAverageHarvesterWatchEvaluationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeAverageHarvesterWatchEvaluationTime.setStatus("current")
_WldfWatchNotificationRuntimeTotalLogEvaluationCycles_Type = Counter64
_WldfWatchNotificationRuntimeTotalLogEvaluationCycles_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalLogEvaluationCycles = _WldfWatchNotificationRuntimeTotalLogEvaluationCycles_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 45),
    _WldfWatchNotificationRuntimeTotalLogEvaluationCycles_Type()
)
wldfWatchNotificationRuntimeTotalLogEvaluationCycles.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalLogEvaluationCycles.setStatus("current")
_WldfWatchNotificationRuntimeTotalLogWatchEvaluations_Type = Counter64
_WldfWatchNotificationRuntimeTotalLogWatchEvaluations_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalLogWatchEvaluations = _WldfWatchNotificationRuntimeTotalLogWatchEvaluations_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 50),
    _WldfWatchNotificationRuntimeTotalLogWatchEvaluations_Type()
)
wldfWatchNotificationRuntimeTotalLogWatchEvaluations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalLogWatchEvaluations.setStatus("current")
_WldfWatchNotificationRuntimeTotalLogWatchesTriggered_Type = Counter64
_WldfWatchNotificationRuntimeTotalLogWatchesTriggered_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalLogWatchesTriggered = _WldfWatchNotificationRuntimeTotalLogWatchesTriggered_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 55),
    _WldfWatchNotificationRuntimeTotalLogWatchesTriggered_Type()
)
wldfWatchNotificationRuntimeTotalLogWatchesTriggered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalLogWatchesTriggered.setStatus("current")
_WldfWatchNotificationRuntimeAverageLogWatchEvaluationTime_Type = Counter64
_WldfWatchNotificationRuntimeAverageLogWatchEvaluationTime_Object = MibTableColumn
wldfWatchNotificationRuntimeAverageLogWatchEvaluationTime = _WldfWatchNotificationRuntimeAverageLogWatchEvaluationTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 60),
    _WldfWatchNotificationRuntimeAverageLogWatchEvaluationTime_Type()
)
wldfWatchNotificationRuntimeAverageLogWatchEvaluationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeAverageLogWatchEvaluationTime.setStatus("current")
_WldfWatchNotificationRuntimeTotalEventDataEvaluationCycles_Type = Counter64
_WldfWatchNotificationRuntimeTotalEventDataEvaluationCycles_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalEventDataEvaluationCycles = _WldfWatchNotificationRuntimeTotalEventDataEvaluationCycles_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 65),
    _WldfWatchNotificationRuntimeTotalEventDataEvaluationCycles_Type()
)
wldfWatchNotificationRuntimeTotalEventDataEvaluationCycles.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalEventDataEvaluationCycles.setStatus("current")
_WldfWatchNotificationRuntimeTotalEventDataWatchEvaluations_Type = Counter64
_WldfWatchNotificationRuntimeTotalEventDataWatchEvaluations_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalEventDataWatchEvaluations = _WldfWatchNotificationRuntimeTotalEventDataWatchEvaluations_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 70),
    _WldfWatchNotificationRuntimeTotalEventDataWatchEvaluations_Type()
)
wldfWatchNotificationRuntimeTotalEventDataWatchEvaluations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalEventDataWatchEvaluations.setStatus("current")
_WldfWatchNotificationRuntimeTotalEventDataWatchesTriggered_Type = Counter64
_WldfWatchNotificationRuntimeTotalEventDataWatchesTriggered_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalEventDataWatchesTriggered = _WldfWatchNotificationRuntimeTotalEventDataWatchesTriggered_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 75),
    _WldfWatchNotificationRuntimeTotalEventDataWatchesTriggered_Type()
)
wldfWatchNotificationRuntimeTotalEventDataWatchesTriggered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalEventDataWatchesTriggered.setStatus("current")
_WldfWatchNotificationRuntimeAverageEventDataWatchEvaluationTime_Type = Counter64
_WldfWatchNotificationRuntimeAverageEventDataWatchEvaluationTime_Object = MibTableColumn
wldfWatchNotificationRuntimeAverageEventDataWatchEvaluationTime = _WldfWatchNotificationRuntimeAverageEventDataWatchEvaluationTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 80),
    _WldfWatchNotificationRuntimeAverageEventDataWatchEvaluationTime_Type()
)
wldfWatchNotificationRuntimeAverageEventDataWatchEvaluationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeAverageEventDataWatchEvaluationTime.setStatus("current")
_WldfWatchNotificationRuntimeCurrentActiveAlarmsCount_Type = Integer32
_WldfWatchNotificationRuntimeCurrentActiveAlarmsCount_Object = MibTableColumn
wldfWatchNotificationRuntimeCurrentActiveAlarmsCount = _WldfWatchNotificationRuntimeCurrentActiveAlarmsCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 85),
    _WldfWatchNotificationRuntimeCurrentActiveAlarmsCount_Type()
)
wldfWatchNotificationRuntimeCurrentActiveAlarmsCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeCurrentActiveAlarmsCount.setStatus("current")
_WldfWatchNotificationRuntimeMaximumActiveAlarmsCount_Type = Integer32
_WldfWatchNotificationRuntimeMaximumActiveAlarmsCount_Object = MibTableColumn
wldfWatchNotificationRuntimeMaximumActiveAlarmsCount = _WldfWatchNotificationRuntimeMaximumActiveAlarmsCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 90),
    _WldfWatchNotificationRuntimeMaximumActiveAlarmsCount_Type()
)
wldfWatchNotificationRuntimeMaximumActiveAlarmsCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeMaximumActiveAlarmsCount.setStatus("current")
_WldfWatchNotificationRuntimeTotalActiveManualResetAlarms_Type = Counter64
_WldfWatchNotificationRuntimeTotalActiveManualResetAlarms_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalActiveManualResetAlarms = _WldfWatchNotificationRuntimeTotalActiveManualResetAlarms_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 95),
    _WldfWatchNotificationRuntimeTotalActiveManualResetAlarms_Type()
)
wldfWatchNotificationRuntimeTotalActiveManualResetAlarms.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalActiveManualResetAlarms.setStatus("current")
_WldfWatchNotificationRuntimeTotalActiveAutomaticResetAlarms_Type = Counter64
_WldfWatchNotificationRuntimeTotalActiveAutomaticResetAlarms_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalActiveAutomaticResetAlarms = _WldfWatchNotificationRuntimeTotalActiveAutomaticResetAlarms_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 100),
    _WldfWatchNotificationRuntimeTotalActiveAutomaticResetAlarms_Type()
)
wldfWatchNotificationRuntimeTotalActiveAutomaticResetAlarms.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalActiveAutomaticResetAlarms.setStatus("current")
_WldfWatchNotificationRuntimeTotalNotificationsPerformed_Type = Counter64
_WldfWatchNotificationRuntimeTotalNotificationsPerformed_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalNotificationsPerformed = _WldfWatchNotificationRuntimeTotalNotificationsPerformed_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 105),
    _WldfWatchNotificationRuntimeTotalNotificationsPerformed_Type()
)
wldfWatchNotificationRuntimeTotalNotificationsPerformed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalNotificationsPerformed.setStatus("current")
_WldfWatchNotificationRuntimeTotalDIMGNotificationsPerformed_Type = Counter64
_WldfWatchNotificationRuntimeTotalDIMGNotificationsPerformed_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalDIMGNotificationsPerformed = _WldfWatchNotificationRuntimeTotalDIMGNotificationsPerformed_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 106),
    _WldfWatchNotificationRuntimeTotalDIMGNotificationsPerformed_Type()
)
wldfWatchNotificationRuntimeTotalDIMGNotificationsPerformed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalDIMGNotificationsPerformed.setStatus("current")
_WldfWatchNotificationRuntimeTotalSNMPNotificationsPerformed_Type = Counter64
_WldfWatchNotificationRuntimeTotalSNMPNotificationsPerformed_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalSNMPNotificationsPerformed = _WldfWatchNotificationRuntimeTotalSNMPNotificationsPerformed_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 107),
    _WldfWatchNotificationRuntimeTotalSNMPNotificationsPerformed_Type()
)
wldfWatchNotificationRuntimeTotalSNMPNotificationsPerformed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalSNMPNotificationsPerformed.setStatus("current")
_WldfWatchNotificationRuntimeMinimumEventDataWatchEvaluationTime_Type = Counter64
_WldfWatchNotificationRuntimeMinimumEventDataWatchEvaluationTime_Object = MibTableColumn
wldfWatchNotificationRuntimeMinimumEventDataWatchEvaluationTime = _WldfWatchNotificationRuntimeMinimumEventDataWatchEvaluationTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 108),
    _WldfWatchNotificationRuntimeMinimumEventDataWatchEvaluationTime_Type()
)
wldfWatchNotificationRuntimeMinimumEventDataWatchEvaluationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeMinimumEventDataWatchEvaluationTime.setStatus("current")
_WldfWatchNotificationRuntimeMinimumHarvesterWatchEvaluationTime_Type = Counter64
_WldfWatchNotificationRuntimeMinimumHarvesterWatchEvaluationTime_Object = MibTableColumn
wldfWatchNotificationRuntimeMinimumHarvesterWatchEvaluationTime = _WldfWatchNotificationRuntimeMinimumHarvesterWatchEvaluationTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 109),
    _WldfWatchNotificationRuntimeMinimumHarvesterWatchEvaluationTime_Type()
)
wldfWatchNotificationRuntimeMinimumHarvesterWatchEvaluationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeMinimumHarvesterWatchEvaluationTime.setStatus("current")
_WldfWatchNotificationRuntimeTotalFailedJMXNotifications_Type = Counter64
_WldfWatchNotificationRuntimeTotalFailedJMXNotifications_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalFailedJMXNotifications = _WldfWatchNotificationRuntimeTotalFailedJMXNotifications_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 110),
    _WldfWatchNotificationRuntimeTotalFailedJMXNotifications_Type()
)
wldfWatchNotificationRuntimeTotalFailedJMXNotifications.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalFailedJMXNotifications.setStatus("current")
_WldfWatchNotificationRuntimeTotalJMXNotificationsPerformed_Type = Counter64
_WldfWatchNotificationRuntimeTotalJMXNotificationsPerformed_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalJMXNotificationsPerformed = _WldfWatchNotificationRuntimeTotalJMXNotificationsPerformed_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 111),
    _WldfWatchNotificationRuntimeTotalJMXNotificationsPerformed_Type()
)
wldfWatchNotificationRuntimeTotalJMXNotificationsPerformed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalJMXNotificationsPerformed.setStatus("current")
_WldfWatchNotificationRuntimeTotalSMTPNotificationsPerformed_Type = Counter64
_WldfWatchNotificationRuntimeTotalSMTPNotificationsPerformed_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalSMTPNotificationsPerformed = _WldfWatchNotificationRuntimeTotalSMTPNotificationsPerformed_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 112),
    _WldfWatchNotificationRuntimeTotalSMTPNotificationsPerformed_Type()
)
wldfWatchNotificationRuntimeTotalSMTPNotificationsPerformed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalSMTPNotificationsPerformed.setStatus("current")
_WldfWatchNotificationRuntimeTotalJMSNotificationsPerformed_Type = Counter64
_WldfWatchNotificationRuntimeTotalJMSNotificationsPerformed_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalJMSNotificationsPerformed = _WldfWatchNotificationRuntimeTotalJMSNotificationsPerformed_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 113),
    _WldfWatchNotificationRuntimeTotalJMSNotificationsPerformed_Type()
)
wldfWatchNotificationRuntimeTotalJMSNotificationsPerformed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalJMSNotificationsPerformed.setStatus("current")
_WldfWatchNotificationRuntimeMaximumLogWatchEvaluationTime_Type = Counter64
_WldfWatchNotificationRuntimeMaximumLogWatchEvaluationTime_Object = MibTableColumn
wldfWatchNotificationRuntimeMaximumLogWatchEvaluationTime = _WldfWatchNotificationRuntimeMaximumLogWatchEvaluationTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 114),
    _WldfWatchNotificationRuntimeMaximumLogWatchEvaluationTime_Type()
)
wldfWatchNotificationRuntimeMaximumLogWatchEvaluationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeMaximumLogWatchEvaluationTime.setStatus("current")
_WldfWatchNotificationRuntimeTotalFailedJMSNotifications_Type = Counter64
_WldfWatchNotificationRuntimeTotalFailedJMSNotifications_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalFailedJMSNotifications = _WldfWatchNotificationRuntimeTotalFailedJMSNotifications_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 115),
    _WldfWatchNotificationRuntimeTotalFailedJMSNotifications_Type()
)
wldfWatchNotificationRuntimeTotalFailedJMSNotifications.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalFailedJMSNotifications.setStatus("current")
_WldfWatchNotificationRuntimeMinimumLogWatchEvaluationTime_Type = Counter64
_WldfWatchNotificationRuntimeMinimumLogWatchEvaluationTime_Object = MibTableColumn
wldfWatchNotificationRuntimeMinimumLogWatchEvaluationTime = _WldfWatchNotificationRuntimeMinimumLogWatchEvaluationTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 116),
    _WldfWatchNotificationRuntimeMinimumLogWatchEvaluationTime_Type()
)
wldfWatchNotificationRuntimeMinimumLogWatchEvaluationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeMinimumLogWatchEvaluationTime.setStatus("current")
_WldfWatchNotificationRuntimeMaximumHarvesterWatchEvaluationTime_Type = Counter64
_WldfWatchNotificationRuntimeMaximumHarvesterWatchEvaluationTime_Object = MibTableColumn
wldfWatchNotificationRuntimeMaximumHarvesterWatchEvaluationTime = _WldfWatchNotificationRuntimeMaximumHarvesterWatchEvaluationTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 117),
    _WldfWatchNotificationRuntimeMaximumHarvesterWatchEvaluationTime_Type()
)
wldfWatchNotificationRuntimeMaximumHarvesterWatchEvaluationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeMaximumHarvesterWatchEvaluationTime.setStatus("current")
_WldfWatchNotificationRuntimeTotalFailedDIMGNotifications_Type = Counter64
_WldfWatchNotificationRuntimeTotalFailedDIMGNotifications_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalFailedDIMGNotifications = _WldfWatchNotificationRuntimeTotalFailedDIMGNotifications_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 118),
    _WldfWatchNotificationRuntimeTotalFailedDIMGNotifications_Type()
)
wldfWatchNotificationRuntimeTotalFailedDIMGNotifications.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalFailedDIMGNotifications.setStatus("current")
_WldfWatchNotificationRuntimeMaximumEventDataWatchEvaluationTime_Type = Counter64
_WldfWatchNotificationRuntimeMaximumEventDataWatchEvaluationTime_Object = MibTableColumn
wldfWatchNotificationRuntimeMaximumEventDataWatchEvaluationTime = _WldfWatchNotificationRuntimeMaximumEventDataWatchEvaluationTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 119),
    _WldfWatchNotificationRuntimeMaximumEventDataWatchEvaluationTime_Type()
)
wldfWatchNotificationRuntimeMaximumEventDataWatchEvaluationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeMaximumEventDataWatchEvaluationTime.setStatus("current")
_WldfWatchNotificationRuntimeTotalFailedNotifications_Type = Counter64
_WldfWatchNotificationRuntimeTotalFailedNotifications_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalFailedNotifications = _WldfWatchNotificationRuntimeTotalFailedNotifications_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 120),
    _WldfWatchNotificationRuntimeTotalFailedNotifications_Type()
)
wldfWatchNotificationRuntimeTotalFailedNotifications.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalFailedNotifications.setStatus("current")
_WldfWatchNotificationRuntimeTotalFailedSMTPNotifications_Type = Counter64
_WldfWatchNotificationRuntimeTotalFailedSMTPNotifications_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalFailedSMTPNotifications = _WldfWatchNotificationRuntimeTotalFailedSMTPNotifications_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 121),
    _WldfWatchNotificationRuntimeTotalFailedSMTPNotifications_Type()
)
wldfWatchNotificationRuntimeTotalFailedSMTPNotifications.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalFailedSMTPNotifications.setStatus("current")
_WldfWatchNotificationRuntimeTotalFailedSNMPNotifications_Type = Counter64
_WldfWatchNotificationRuntimeTotalFailedSNMPNotifications_Object = MibTableColumn
wldfWatchNotificationRuntimeTotalFailedSNMPNotifications = _WldfWatchNotificationRuntimeTotalFailedSNMPNotifications_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 485, 1, 122),
    _WldfWatchNotificationRuntimeTotalFailedSNMPNotifications_Type()
)
wldfWatchNotificationRuntimeTotalFailedSNMPNotifications.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchNotificationRuntimeTotalFailedSNMPNotifications.setStatus("current")
_ApplicationTable_Object = MibTable
applicationTable = _ApplicationTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 500)
)
if mibBuilder.loadTexts:
    applicationTable.setStatus("current")
_ApplicationEntry_Object = MibTableRow
applicationEntry = _ApplicationEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 500, 1)
)
applicationEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "applicationIndex"),
)
if mibBuilder.loadTexts:
    applicationEntry.setStatus("current")


class _ApplicationIndex_Type(DisplayString):
    """Custom type applicationIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ApplicationIndex_Type.__name__ = "DisplayString"
_ApplicationIndex_Object = MibTableColumn
applicationIndex = _ApplicationIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 500, 1, 1),
    _ApplicationIndex_Type()
)
applicationIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationIndex.setStatus("current")


class _ApplicationObjectName_Type(DisplayString):
    """Custom type applicationObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ApplicationObjectName_Type.__name__ = "DisplayString"
_ApplicationObjectName_Object = MibTableColumn
applicationObjectName = _ApplicationObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 500, 1, 5),
    _ApplicationObjectName_Type()
)
applicationObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationObjectName.setStatus("current")


class _ApplicationType_Type(DisplayString):
    """Custom type applicationType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ApplicationType_Type.__name__ = "DisplayString"
_ApplicationType_Object = MibTableColumn
applicationType = _ApplicationType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 500, 1, 10),
    _ApplicationType_Type()
)
applicationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationType.setStatus("current")


class _ApplicationName_Type(DisplayString):
    """Custom type applicationName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ApplicationName_Type.__name__ = "DisplayString"
_ApplicationName_Object = MibTableColumn
applicationName = _ApplicationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 500, 1, 15),
    _ApplicationName_Type()
)
applicationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationName.setStatus("current")


class _ApplicationParent_Type(DisplayString):
    """Custom type applicationParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ApplicationParent_Type.__name__ = "DisplayString"
_ApplicationParent_Object = MibTableColumn
applicationParent = _ApplicationParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 500, 1, 20),
    _ApplicationParent_Type()
)
applicationParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationParent.setStatus("current")


class _ApplicationDeployed_Type(Integer32):
    """Custom type applicationDeployed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ApplicationDeployed_Type.__name__ = "Integer32"
_ApplicationDeployed_Object = MibTableColumn
applicationDeployed = _ApplicationDeployed_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 500, 1, 30),
    _ApplicationDeployed_Type()
)
applicationDeployed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationDeployed.setStatus("current")


class _ApplicationComponents_Type(DisplayString):
    """Custom type applicationComponents based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 25),
    )


_ApplicationComponents_Type.__name__ = "DisplayString"
_ApplicationComponents_Object = MibTableColumn
applicationComponents = _ApplicationComponents_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 500, 1, 35),
    _ApplicationComponents_Type()
)
applicationComponents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationComponents.setStatus("current")


class _ApplicationApplicationDescriptor_Type(DisplayString):
    """Custom type applicationApplicationDescriptor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ApplicationApplicationDescriptor_Type.__name__ = "DisplayString"
_ApplicationApplicationDescriptor_Object = MibTableColumn
applicationApplicationDescriptor = _ApplicationApplicationDescriptor_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 500, 1, 40),
    _ApplicationApplicationDescriptor_Type()
)
applicationApplicationDescriptor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationApplicationDescriptor.setStatus("current")


class _ApplicationPath_Type(DisplayString):
    """Custom type applicationPath based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1024),
    )


_ApplicationPath_Type.__name__ = "DisplayString"
_ApplicationPath_Object = MibTableColumn
applicationPath = _ApplicationPath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 500, 1, 45),
    _ApplicationPath_Type()
)
applicationPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationPath.setStatus("current")
_ApplicationAltDescriptorPath_Type = DisplayString
_ApplicationAltDescriptorPath_Object = MibTableColumn
applicationAltDescriptorPath = _ApplicationAltDescriptorPath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 500, 1, 46),
    _ApplicationAltDescriptorPath_Type()
)
applicationAltDescriptorPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationAltDescriptorPath.setStatus("current")
_ApplicationAltWLSDescriptorPath_Type = DisplayString
_ApplicationAltWLSDescriptorPath_Object = MibTableColumn
applicationAltWLSDescriptorPath = _ApplicationAltWLSDescriptorPath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 500, 1, 47),
    _ApplicationAltWLSDescriptorPath_Type()
)
applicationAltWLSDescriptorPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationAltWLSDescriptorPath.setStatus("current")
_ApplicationDeploymentTimeout_Type = Integer32
_ApplicationDeploymentTimeout_Object = MibTableColumn
applicationDeploymentTimeout = _ApplicationDeploymentTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 500, 1, 48),
    _ApplicationDeploymentTimeout_Type()
)
applicationDeploymentTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationDeploymentTimeout.setStatus("current")
_ApplicationDeploymentType_Type = DisplayString
_ApplicationDeploymentType_Object = MibTableColumn
applicationDeploymentType = _ApplicationDeploymentType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 500, 1, 49),
    _ApplicationDeploymentType_Type()
)
applicationDeploymentType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationDeploymentType.setStatus("current")
_ApplicationLoadOrder_Type = Integer32
_ApplicationLoadOrder_Object = MibTableColumn
applicationLoadOrder = _ApplicationLoadOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 500, 1, 50),
    _ApplicationLoadOrder_Type()
)
applicationLoadOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationLoadOrder.setStatus("current")
_ApplicationStagingMode_Type = DisplayString
_ApplicationStagingMode_Object = MibTableColumn
applicationStagingMode = _ApplicationStagingMode_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 500, 1, 51),
    _ApplicationStagingMode_Type()
)
applicationStagingMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationStagingMode.setStatus("current")
_ApplicationStagingPath_Type = DisplayString
_ApplicationStagingPath_Object = MibTableColumn
applicationStagingPath = _ApplicationStagingPath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 500, 1, 52),
    _ApplicationStagingPath_Type()
)
applicationStagingPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationStagingPath.setStatus("current")
_ApplicationTwoPhase_Type = Integer32
_ApplicationTwoPhase_Object = MibTableColumn
applicationTwoPhase = _ApplicationTwoPhase_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 500, 1, 53),
    _ApplicationTwoPhase_Type()
)
applicationTwoPhase.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    applicationTwoPhase.setStatus("current")
_BridgeDestinationCommonTable_Object = MibTable
bridgeDestinationCommonTable = _BridgeDestinationCommonTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 505)
)
if mibBuilder.loadTexts:
    bridgeDestinationCommonTable.setStatus("current")
_BridgeDestinationCommonEntry_Object = MibTableRow
bridgeDestinationCommonEntry = _BridgeDestinationCommonEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 505, 1)
)
bridgeDestinationCommonEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "bridgeDestinationCommonIndex"),
)
if mibBuilder.loadTexts:
    bridgeDestinationCommonEntry.setStatus("current")


class _BridgeDestinationCommonIndex_Type(DisplayString):
    """Custom type bridgeDestinationCommonIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_BridgeDestinationCommonIndex_Type.__name__ = "DisplayString"
_BridgeDestinationCommonIndex_Object = MibTableColumn
bridgeDestinationCommonIndex = _BridgeDestinationCommonIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 505, 1, 1),
    _BridgeDestinationCommonIndex_Type()
)
bridgeDestinationCommonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDestinationCommonIndex.setStatus("current")


class _BridgeDestinationCommonObjectName_Type(DisplayString):
    """Custom type bridgeDestinationCommonObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_BridgeDestinationCommonObjectName_Type.__name__ = "DisplayString"
_BridgeDestinationCommonObjectName_Object = MibTableColumn
bridgeDestinationCommonObjectName = _BridgeDestinationCommonObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 505, 1, 5),
    _BridgeDestinationCommonObjectName_Type()
)
bridgeDestinationCommonObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDestinationCommonObjectName.setStatus("current")


class _BridgeDestinationCommonType_Type(DisplayString):
    """Custom type bridgeDestinationCommonType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_BridgeDestinationCommonType_Type.__name__ = "DisplayString"
_BridgeDestinationCommonType_Object = MibTableColumn
bridgeDestinationCommonType = _BridgeDestinationCommonType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 505, 1, 10),
    _BridgeDestinationCommonType_Type()
)
bridgeDestinationCommonType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDestinationCommonType.setStatus("current")


class _BridgeDestinationCommonName_Type(DisplayString):
    """Custom type bridgeDestinationCommonName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_BridgeDestinationCommonName_Type.__name__ = "DisplayString"
_BridgeDestinationCommonName_Object = MibTableColumn
bridgeDestinationCommonName = _BridgeDestinationCommonName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 505, 1, 15),
    _BridgeDestinationCommonName_Type()
)
bridgeDestinationCommonName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDestinationCommonName.setStatus("current")


class _BridgeDestinationCommonParent_Type(DisplayString):
    """Custom type bridgeDestinationCommonParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_BridgeDestinationCommonParent_Type.__name__ = "DisplayString"
_BridgeDestinationCommonParent_Object = MibTableColumn
bridgeDestinationCommonParent = _BridgeDestinationCommonParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 505, 1, 20),
    _BridgeDestinationCommonParent_Type()
)
bridgeDestinationCommonParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDestinationCommonParent.setStatus("current")
_BridgeDestinationCommonAdapterJNDIName_Type = DisplayString
_BridgeDestinationCommonAdapterJNDIName_Object = MibTableColumn
bridgeDestinationCommonAdapterJNDIName = _BridgeDestinationCommonAdapterJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 505, 1, 21),
    _BridgeDestinationCommonAdapterJNDIName_Type()
)
bridgeDestinationCommonAdapterJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDestinationCommonAdapterJNDIName.setStatus("current")
_BridgeDestinationCommonClasspath_Type = DisplayString
_BridgeDestinationCommonClasspath_Object = MibTableColumn
bridgeDestinationCommonClasspath = _BridgeDestinationCommonClasspath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 505, 1, 22),
    _BridgeDestinationCommonClasspath_Type()
)
bridgeDestinationCommonClasspath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDestinationCommonClasspath.setStatus("current")
_BridgeDestinationCommonUserName_Type = DisplayString
_BridgeDestinationCommonUserName_Object = MibTableColumn
bridgeDestinationCommonUserName = _BridgeDestinationCommonUserName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 505, 1, 23),
    _BridgeDestinationCommonUserName_Type()
)
bridgeDestinationCommonUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDestinationCommonUserName.setStatus("current")
_ClusterTable_Object = MibTable
clusterTable = _ClusterTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510)
)
if mibBuilder.loadTexts:
    clusterTable.setStatus("current")
_ClusterEntry_Object = MibTableRow
clusterEntry = _ClusterEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1)
)
clusterEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "clusterIndex"),
)
if mibBuilder.loadTexts:
    clusterEntry.setStatus("current")


class _ClusterIndex_Type(DisplayString):
    """Custom type clusterIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ClusterIndex_Type.__name__ = "DisplayString"
_ClusterIndex_Object = MibTableColumn
clusterIndex = _ClusterIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 1),
    _ClusterIndex_Type()
)
clusterIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterIndex.setStatus("current")


class _ClusterObjectName_Type(DisplayString):
    """Custom type clusterObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ClusterObjectName_Type.__name__ = "DisplayString"
_ClusterObjectName_Object = MibTableColumn
clusterObjectName = _ClusterObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 5),
    _ClusterObjectName_Type()
)
clusterObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterObjectName.setStatus("current")


class _ClusterType_Type(DisplayString):
    """Custom type clusterType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ClusterType_Type.__name__ = "DisplayString"
_ClusterType_Object = MibTableColumn
clusterType = _ClusterType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 10),
    _ClusterType_Type()
)
clusterType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterType.setStatus("current")


class _ClusterName_Type(DisplayString):
    """Custom type clusterName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ClusterName_Type.__name__ = "DisplayString"
_ClusterName_Object = MibTableColumn
clusterName = _ClusterName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 15),
    _ClusterName_Type()
)
clusterName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterName.setStatus("current")


class _ClusterParent_Type(DisplayString):
    """Custom type clusterParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ClusterParent_Type.__name__ = "DisplayString"
_ClusterParent_Object = MibTableColumn
clusterParent = _ClusterParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 20),
    _ClusterParent_Type()
)
clusterParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterParent.setStatus("current")


class _ClusterServers_Type(DisplayString):
    """Custom type clusterServers based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_ClusterServers_Type.__name__ = "DisplayString"
_ClusterServers_Object = MibTableColumn
clusterServers = _ClusterServers_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 25),
    _ClusterServers_Type()
)
clusterServers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterServers.setStatus("current")


class _ClusterClusterAddress_Type(DisplayString):
    """Custom type clusterClusterAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ClusterClusterAddress_Type.__name__ = "DisplayString"
_ClusterClusterAddress_Object = MibTableColumn
clusterClusterAddress = _ClusterClusterAddress_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 30),
    _ClusterClusterAddress_Type()
)
clusterClusterAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterClusterAddress.setStatus("current")


class _ClusterMulticastAddress_Type(DisplayString):
    """Custom type clusterMulticastAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ClusterMulticastAddress_Type.__name__ = "DisplayString"
_ClusterMulticastAddress_Object = MibTableColumn
clusterMulticastAddress = _ClusterMulticastAddress_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 35),
    _ClusterMulticastAddress_Type()
)
clusterMulticastAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterMulticastAddress.setStatus("current")
_ClusterMulticastTTL_Type = Integer32
_ClusterMulticastTTL_Object = MibTableColumn
clusterMulticastTTL = _ClusterMulticastTTL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 40),
    _ClusterMulticastTTL_Type()
)
clusterMulticastTTL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterMulticastTTL.setStatus("current")
_ClusterMulticastSendDelay_Type = Integer32
_ClusterMulticastSendDelay_Object = MibTableColumn
clusterMulticastSendDelay = _ClusterMulticastSendDelay_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 45),
    _ClusterMulticastSendDelay_Type()
)
clusterMulticastSendDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterMulticastSendDelay.setStatus("current")


class _ClusterDefaultLoadAlgorithm_Type(DisplayString):
    """Custom type clusterDefaultLoadAlgorithm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_ClusterDefaultLoadAlgorithm_Type.__name__ = "DisplayString"
_ClusterDefaultLoadAlgorithm_Object = MibTableColumn
clusterDefaultLoadAlgorithm = _ClusterDefaultLoadAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 50),
    _ClusterDefaultLoadAlgorithm_Type()
)
clusterDefaultLoadAlgorithm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterDefaultLoadAlgorithm.setStatus("current")
_ClusterServiceAgeThresholdSeconds_Type = Integer32
_ClusterServiceAgeThresholdSeconds_Object = MibTableColumn
clusterServiceAgeThresholdSeconds = _ClusterServiceAgeThresholdSeconds_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 55),
    _ClusterServiceAgeThresholdSeconds_Type()
)
clusterServiceAgeThresholdSeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterServiceAgeThresholdSeconds.setStatus("current")
_ClusterMulticastBufferSize_Type = Integer32
_ClusterMulticastBufferSize_Object = MibTableColumn
clusterMulticastBufferSize = _ClusterMulticastBufferSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 56),
    _ClusterMulticastBufferSize_Type()
)
clusterMulticastBufferSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterMulticastBufferSize.setStatus("current")
_ClusterMulticastPort_Type = Integer32
_ClusterMulticastPort_Object = MibTableColumn
clusterMulticastPort = _ClusterMulticastPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 57),
    _ClusterMulticastPort_Type()
)
clusterMulticastPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterMulticastPort.setStatus("current")
_ClusterClientCertProxyEnabled_Type = Integer32
_ClusterClientCertProxyEnabled_Object = MibTableColumn
clusterClientCertProxyEnabled = _ClusterClientCertProxyEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 58),
    _ClusterClientCertProxyEnabled_Type()
)
clusterClientCertProxyEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterClientCertProxyEnabled.setStatus("current")
_ClusterWeblogicPluginEnabled_Type = Integer32
_ClusterWeblogicPluginEnabled_Object = MibTableColumn
clusterWeblogicPluginEnabled = _ClusterWeblogicPluginEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 59),
    _ClusterWeblogicPluginEnabled_Type()
)
clusterWeblogicPluginEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterWeblogicPluginEnabled.setStatus("current")
_ClusterHealthCheckIntervalMillis_Type = Integer32
_ClusterHealthCheckIntervalMillis_Object = MibTableColumn
clusterHealthCheckIntervalMillis = _ClusterHealthCheckIntervalMillis_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 60),
    _ClusterHealthCheckIntervalMillis_Type()
)
clusterHealthCheckIntervalMillis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterHealthCheckIntervalMillis.setStatus("current")
_ClusterHealthCheckPeriodsUntilFencing_Type = Integer32
_ClusterHealthCheckPeriodsUntilFencing_Object = MibTableColumn
clusterHealthCheckPeriodsUntilFencing = _ClusterHealthCheckPeriodsUntilFencing_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 61),
    _ClusterHealthCheckPeriodsUntilFencing_Type()
)
clusterHealthCheckPeriodsUntilFencing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterHealthCheckPeriodsUntilFencing.setStatus("current")
_ClusterSessionFlushInterval_Type = Integer32
_ClusterSessionFlushInterval_Object = MibTableColumn
clusterSessionFlushInterval = _ClusterSessionFlushInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 62),
    _ClusterSessionFlushInterval_Type()
)
clusterSessionFlushInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterSessionFlushInterval.setStatus("current")
_ClusterAdditionalAutoMigrationAttempts_Type = Integer32
_ClusterAdditionalAutoMigrationAttempts_Object = MibTableColumn
clusterAdditionalAutoMigrationAttempts = _ClusterAdditionalAutoMigrationAttempts_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 63),
    _ClusterAdditionalAutoMigrationAttempts_Type()
)
clusterAdditionalAutoMigrationAttempts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterAdditionalAutoMigrationAttempts.setStatus("current")
_ClusterRemoteClusterAddress_Type = OctetString
_ClusterRemoteClusterAddress_Object = MibTableColumn
clusterRemoteClusterAddress = _ClusterRemoteClusterAddress_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 64),
    _ClusterRemoteClusterAddress_Type()
)
clusterRemoteClusterAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterRemoteClusterAddress.setStatus("current")
_ClusterFrontendHTTPPort_Type = Integer32
_ClusterFrontendHTTPPort_Object = MibTableColumn
clusterFrontendHTTPPort = _ClusterFrontendHTTPPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 65),
    _ClusterFrontendHTTPPort_Type()
)
clusterFrontendHTTPPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterFrontendHTTPPort.setStatus("current")
_ClusterMulticastDataEncryption_Type = OctetString
_ClusterMulticastDataEncryption_Object = MibTableColumn
clusterMulticastDataEncryption = _ClusterMulticastDataEncryption_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 66),
    _ClusterMulticastDataEncryption_Type()
)
clusterMulticastDataEncryption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterMulticastDataEncryption.setStatus("current")
_ClusterSecureReplicationEnabled_Type = OctetString
_ClusterSecureReplicationEnabled_Object = MibTableColumn
clusterSecureReplicationEnabled = _ClusterSecureReplicationEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 67),
    _ClusterSecureReplicationEnabled_Type()
)
clusterSecureReplicationEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterSecureReplicationEnabled.setStatus("current")
_ClusterJobSchedulerTableName_Type = OctetString
_ClusterJobSchedulerTableName_Object = MibTableColumn
clusterJobSchedulerTableName = _ClusterJobSchedulerTableName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 68),
    _ClusterJobSchedulerTableName_Type()
)
clusterJobSchedulerTableName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterJobSchedulerTableName.setStatus("current")
_ClusterReplicationTimeoutEnabled_Type = OctetString
_ClusterReplicationTimeoutEnabled_Object = MibTableColumn
clusterReplicationTimeoutEnabled = _ClusterReplicationTimeoutEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 69),
    _ClusterReplicationTimeoutEnabled_Type()
)
clusterReplicationTimeoutEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterReplicationTimeoutEnabled.setStatus("current")
_ClusterAsyncSessionQueueTimeout_Type = Integer32
_ClusterAsyncSessionQueueTimeout_Object = MibTableColumn
clusterAsyncSessionQueueTimeout = _ClusterAsyncSessionQueueTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 70),
    _ClusterAsyncSessionQueueTimeout_Type()
)
clusterAsyncSessionQueueTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterAsyncSessionQueueTimeout.setStatus("current")
_ClusterInterClusterCommLinkHealthCheckInterval_Type = Integer32
_ClusterInterClusterCommLinkHealthCheckInterval_Object = MibTableColumn
clusterInterClusterCommLinkHealthCheckInterval = _ClusterInterClusterCommLinkHealthCheckInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 71),
    _ClusterInterClusterCommLinkHealthCheckInterval_Type()
)
clusterInterClusterCommLinkHealthCheckInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterInterClusterCommLinkHealthCheckInterval.setStatus("current")
_ClusterSessionFlushThreshold_Type = Integer32
_ClusterSessionFlushThreshold_Object = MibTableColumn
clusterSessionFlushThreshold = _ClusterSessionFlushThreshold_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 72),
    _ClusterSessionFlushThreshold_Type()
)
clusterSessionFlushThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterSessionFlushThreshold.setStatus("current")
_ClusterClusterType_Type = OctetString
_ClusterClusterType_Object = MibTableColumn
clusterClusterType = _ClusterClusterType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 73),
    _ClusterClusterType_Type()
)
clusterClusterType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterClusterType.setStatus("current")
_ClusterGreedySessionFlushInterval_Type = Integer32
_ClusterGreedySessionFlushInterval_Object = MibTableColumn
clusterGreedySessionFlushInterval = _ClusterGreedySessionFlushInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 74),
    _ClusterGreedySessionFlushInterval_Type()
)
clusterGreedySessionFlushInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterGreedySessionFlushInterval.setStatus("current")
_ClusterPersistSessionsOnShutdown_Type = OctetString
_ClusterPersistSessionsOnShutdown_Object = MibTableColumn
clusterPersistSessionsOnShutdown = _ClusterPersistSessionsOnShutdown_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 75),
    _ClusterPersistSessionsOnShutdown_Type()
)
clusterPersistSessionsOnShutdown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterPersistSessionsOnShutdown.setStatus("current")
_ClusterMigrationBasis_Type = OctetString
_ClusterMigrationBasis_Object = MibTableColumn
clusterMigrationBasis = _ClusterMigrationBasis_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 76),
    _ClusterMigrationBasis_Type()
)
clusterMigrationBasis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterMigrationBasis.setStatus("current")
_ClusterHttpTraceSupportEnabled_Type = OctetString
_ClusterHttpTraceSupportEnabled_Object = MibTableColumn
clusterHttpTraceSupportEnabled = _ClusterHttpTraceSupportEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 77),
    _ClusterHttpTraceSupportEnabled_Type()
)
clusterHttpTraceSupportEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterHttpTraceSupportEnabled.setStatus("current")
_ClusterReplicationChannel_Type = OctetString
_ClusterReplicationChannel_Object = MibTableColumn
clusterReplicationChannel = _ClusterReplicationChannel_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 78),
    _ClusterReplicationChannel_Type()
)
clusterReplicationChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterReplicationChannel.setStatus("current")
_ClusterFencingGracePeriodMillis_Type = Integer32
_ClusterFencingGracePeriodMillis_Object = MibTableColumn
clusterFencingGracePeriodMillis = _ClusterFencingGracePeriodMillis_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 79),
    _ClusterFencingGracePeriodMillis_Type()
)
clusterFencingGracePeriodMillis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterFencingGracePeriodMillis.setStatus("current")
_ClusterFrontendHost_Type = OctetString
_ClusterFrontendHost_Object = MibTableColumn
clusterFrontendHost = _ClusterFrontendHost_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 80),
    _ClusterFrontendHost_Type()
)
clusterFrontendHost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterFrontendHost.setStatus("current")
_ClusterMemberWarmupTimeoutSeconds_Type = Integer32
_ClusterMemberWarmupTimeoutSeconds_Object = MibTableColumn
clusterMemberWarmupTimeoutSeconds = _ClusterMemberWarmupTimeoutSeconds_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 81),
    _ClusterMemberWarmupTimeoutSeconds_Type()
)
clusterMemberWarmupTimeoutSeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterMemberWarmupTimeoutSeconds.setStatus("current")
_ClusterFrontendHTTPSPort_Type = Integer32
_ClusterFrontendHTTPSPort_Object = MibTableColumn
clusterFrontendHTTPSPort = _ClusterFrontendHTTPSPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 82),
    _ClusterFrontendHTTPSPort_Type()
)
clusterFrontendHTTPSPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterFrontendHTTPSPort.setStatus("current")
_ClusterClusterBroadcastChannel_Type = OctetString
_ClusterClusterBroadcastChannel_Object = MibTableColumn
clusterClusterBroadcastChannel = _ClusterClusterBroadcastChannel_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 83),
    _ClusterClusterBroadcastChannel_Type()
)
clusterClusterBroadcastChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterClusterBroadcastChannel.setStatus("current")
_ClusterIdlePeriodsUntilTimeout_Type = Integer32
_ClusterIdlePeriodsUntilTimeout_Object = MibTableColumn
clusterIdlePeriodsUntilTimeout = _ClusterIdlePeriodsUntilTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 84),
    _ClusterIdlePeriodsUntilTimeout_Type()
)
clusterIdlePeriodsUntilTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterIdlePeriodsUntilTimeout.setStatus("current")
_ClusterNumberOfServersInClusterAddress_Type = Integer32
_ClusterNumberOfServersInClusterAddress_Object = MibTableColumn
clusterNumberOfServersInClusterAddress = _ClusterNumberOfServersInClusterAddress_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 85),
    _ClusterNumberOfServersInClusterAddress_Type()
)
clusterNumberOfServersInClusterAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterNumberOfServersInClusterAddress.setStatus("current")
_ClusterClusterMessagingMode_Type = OctetString
_ClusterClusterMessagingMode_Object = MibTableColumn
clusterClusterMessagingMode = _ClusterClusterMessagingMode_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 86),
    _ClusterClusterMessagingMode_Type()
)
clusterClusterMessagingMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterClusterMessagingMode.setStatus("current")
_ClusterMillisToSleepBetweenAutoMigrationAttempts_Type = Counter64
_ClusterMillisToSleepBetweenAutoMigrationAttempts_Object = MibTableColumn
clusterMillisToSleepBetweenAutoMigrationAttempts = _ClusterMillisToSleepBetweenAutoMigrationAttempts_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 87),
    _ClusterMillisToSleepBetweenAutoMigrationAttempts_Type()
)
clusterMillisToSleepBetweenAutoMigrationAttempts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterMillisToSleepBetweenAutoMigrationAttempts.setStatus("current")
_ClusterAutoMigrationTableName_Type = OctetString
_ClusterAutoMigrationTableName_Object = MibTableColumn
clusterAutoMigrationTableName = _ClusterAutoMigrationTableName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 88),
    _ClusterAutoMigrationTableName_Type()
)
clusterAutoMigrationTableName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterAutoMigrationTableName.setStatus("current")
_ClusterWANSessionPersistenceTableName_Type = OctetString
_ClusterWANSessionPersistenceTableName_Object = MibTableColumn
clusterWANSessionPersistenceTableName = _ClusterWANSessionPersistenceTableName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 510, 1, 89),
    _ClusterWANSessionPersistenceTableName_Type()
)
clusterWANSessionPersistenceTableName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    clusterWANSessionPersistenceTableName.setStatus("current")
_ComTable_Object = MibTable
comTable = _ComTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 512)
)
if mibBuilder.loadTexts:
    comTable.setStatus("current")
_ComEntry_Object = MibTableRow
comEntry = _ComEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 512, 1)
)
comEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "comIndex"),
)
if mibBuilder.loadTexts:
    comEntry.setStatus("current")


class _ComIndex_Type(DisplayString):
    """Custom type comIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ComIndex_Type.__name__ = "DisplayString"
_ComIndex_Object = MibTableColumn
comIndex = _ComIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 512, 1, 1),
    _ComIndex_Type()
)
comIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    comIndex.setStatus("current")


class _ComObjectName_Type(DisplayString):
    """Custom type comObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ComObjectName_Type.__name__ = "DisplayString"
_ComObjectName_Object = MibTableColumn
comObjectName = _ComObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 512, 1, 5),
    _ComObjectName_Type()
)
comObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    comObjectName.setStatus("current")


class _ComType_Type(DisplayString):
    """Custom type comType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ComType_Type.__name__ = "DisplayString"
_ComType_Object = MibTableColumn
comType = _ComType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 512, 1, 10),
    _ComType_Type()
)
comType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    comType.setStatus("current")


class _ComName_Type(DisplayString):
    """Custom type comName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ComName_Type.__name__ = "DisplayString"
_ComName_Object = MibTableColumn
comName = _ComName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 512, 1, 15),
    _ComName_Type()
)
comName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    comName.setStatus("current")


class _ComParent_Type(DisplayString):
    """Custom type comParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ComParent_Type.__name__ = "DisplayString"
_ComParent_Object = MibTableColumn
comParent = _ComParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 512, 1, 20),
    _ComParent_Type()
)
comParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    comParent.setStatus("current")


class _ComNTAuthHost_Type(DisplayString):
    """Custom type comNTAuthHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ComNTAuthHost_Type.__name__ = "DisplayString"
_ComNTAuthHost_Object = MibTableColumn
comNTAuthHost = _ComNTAuthHost_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 512, 1, 25),
    _ComNTAuthHost_Type()
)
comNTAuthHost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    comNTAuthHost.setStatus("current")
_ComApartmentThreaded_Type = Integer32
_ComApartmentThreaded_Object = MibTableColumn
comApartmentThreaded = _ComApartmentThreaded_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 512, 1, 30),
    _ComApartmentThreaded_Type()
)
comApartmentThreaded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    comApartmentThreaded.setStatus("current")
_ComMemoryLoggingEnabled_Type = Integer32
_ComMemoryLoggingEnabled_Object = MibTableColumn
comMemoryLoggingEnabled = _ComMemoryLoggingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 512, 1, 35),
    _ComMemoryLoggingEnabled_Type()
)
comMemoryLoggingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    comMemoryLoggingEnabled.setStatus("current")
_ComNativeModeEnabled_Type = Integer32
_ComNativeModeEnabled_Object = MibTableColumn
comNativeModeEnabled = _ComNativeModeEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 512, 1, 45),
    _ComNativeModeEnabled_Type()
)
comNativeModeEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    comNativeModeEnabled.setStatus("current")
_ComPrefetchEnums_Type = Integer32
_ComPrefetchEnums_Object = MibTableColumn
comPrefetchEnums = _ComPrefetchEnums_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 512, 1, 50),
    _ComPrefetchEnums_Type()
)
comPrefetchEnums.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    comPrefetchEnums.setStatus("current")
_ComVerboseLoggingEnabled_Type = Integer32
_ComVerboseLoggingEnabled_Object = MibTableColumn
comVerboseLoggingEnabled = _ComVerboseLoggingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 512, 1, 55),
    _ComVerboseLoggingEnabled_Type()
)
comVerboseLoggingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    comVerboseLoggingEnabled.setStatus("current")
_DomainTable_Object = MibTable
domainTable = _DomainTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530)
)
if mibBuilder.loadTexts:
    domainTable.setStatus("current")
_DomainEntry_Object = MibTableRow
domainEntry = _DomainEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1)
)
domainEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "domainIndex"),
)
if mibBuilder.loadTexts:
    domainEntry.setStatus("current")


class _DomainIndex_Type(DisplayString):
    """Custom type domainIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_DomainIndex_Type.__name__ = "DisplayString"
_DomainIndex_Object = MibTableColumn
domainIndex = _DomainIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 1),
    _DomainIndex_Type()
)
domainIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainIndex.setStatus("current")


class _DomainObjectName_Type(DisplayString):
    """Custom type domainObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_DomainObjectName_Type.__name__ = "DisplayString"
_DomainObjectName_Object = MibTableColumn
domainObjectName = _DomainObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 5),
    _DomainObjectName_Type()
)
domainObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainObjectName.setStatus("current")


class _DomainType_Type(DisplayString):
    """Custom type domainType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_DomainType_Type.__name__ = "DisplayString"
_DomainType_Object = MibTableColumn
domainType = _DomainType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 10),
    _DomainType_Type()
)
domainType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainType.setStatus("current")


class _DomainName_Type(DisplayString):
    """Custom type domainName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_DomainName_Type.__name__ = "DisplayString"
_DomainName_Object = MibTableColumn
domainName = _DomainName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 15),
    _DomainName_Type()
)
domainName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainName.setStatus("current")


class _DomainParent_Type(DisplayString):
    """Custom type domainParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_DomainParent_Type.__name__ = "DisplayString"
_DomainParent_Object = MibTableColumn
domainParent = _DomainParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 20),
    _DomainParent_Type()
)
domainParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainParent.setStatus("current")
_DomainLastModificationTime_Type = Counter64
_DomainLastModificationTime_Object = MibTableColumn
domainLastModificationTime = _DomainLastModificationTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 25),
    _DomainLastModificationTime_Type()
)
domainLastModificationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLastModificationTime.setStatus("current")


class _DomainActive_Type(Integer32):
    """Custom type domainActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_DomainActive_Type.__name__ = "Integer32"
_DomainActive_Object = MibTableColumn
domainActive = _DomainActive_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 30),
    _DomainActive_Type()
)
domainActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainActive.setStatus("current")


class _DomainRootDirectory_Type(DisplayString):
    """Custom type domainRootDirectory based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_DomainRootDirectory_Type.__name__ = "DisplayString"
_DomainRootDirectory_Object = MibTableColumn
domainRootDirectory = _DomainRootDirectory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 35),
    _DomainRootDirectory_Type()
)
domainRootDirectory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainRootDirectory.setStatus("current")


class _DomainJTA_Type(DisplayString):
    """Custom type domainJTA based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_DomainJTA_Type.__name__ = "DisplayString"
_DomainJTA_Object = MibTableColumn
domainJTA = _DomainJTA_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 40),
    _DomainJTA_Type()
)
domainJTA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainJTA.setStatus("current")


class _DomainLog_Type(DisplayString):
    """Custom type domainLog based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_DomainLog_Type.__name__ = "DisplayString"
_DomainLog_Object = MibTableColumn
domainLog = _DomainLog_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 45),
    _DomainLog_Type()
)
domainLog.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLog.setStatus("current")


class _DomainSNMPAgent_Type(DisplayString):
    """Custom type domainSNMPAgent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_DomainSNMPAgent_Type.__name__ = "DisplayString"
_DomainSNMPAgent_Object = MibTableColumn
domainSNMPAgent = _DomainSNMPAgent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 50),
    _DomainSNMPAgent_Type()
)
domainSNMPAgent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainSNMPAgent.setStatus("current")
_DomainAdministrationPort_Type = Integer32
_DomainAdministrationPort_Object = MibTableColumn
domainAdministrationPort = _DomainAdministrationPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 51),
    _DomainAdministrationPort_Type()
)
domainAdministrationPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainAdministrationPort.setStatus("current")
_DomainArchiveConfigurationCount_Type = Integer32
_DomainArchiveConfigurationCount_Object = MibTableColumn
domainArchiveConfigurationCount = _DomainArchiveConfigurationCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 52),
    _DomainArchiveConfigurationCount_Type()
)
domainArchiveConfigurationCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainArchiveConfigurationCount.setStatus("current")
_DomainConfigurationVersion_Type = DisplayString
_DomainConfigurationVersion_Object = MibTableColumn
domainConfigurationVersion = _DomainConfigurationVersion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 53),
    _DomainConfigurationVersion_Type()
)
domainConfigurationVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainConfigurationVersion.setStatus("current")
_DomainConsoleContextPath_Type = DisplayString
_DomainConsoleContextPath_Object = MibTableColumn
domainConsoleContextPath = _DomainConsoleContextPath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 54),
    _DomainConsoleContextPath_Type()
)
domainConsoleContextPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainConsoleContextPath.setStatus("current")
_DomainAdministrationPortEnabled_Type = Integer32
_DomainAdministrationPortEnabled_Object = MibTableColumn
domainAdministrationPortEnabled = _DomainAdministrationPortEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 55),
    _DomainAdministrationPortEnabled_Type()
)
domainAdministrationPortEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainAdministrationPortEnabled.setStatus("current")
_DomainClusterConstraintsEnabled_Type = Integer32
_DomainClusterConstraintsEnabled_Object = MibTableColumn
domainClusterConstraintsEnabled = _DomainClusterConstraintsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 56),
    _DomainClusterConstraintsEnabled_Type()
)
domainClusterConstraintsEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainClusterConstraintsEnabled.setStatus("current")
_DomainConsoleEnabled_Type = Integer32
_DomainConsoleEnabled_Object = MibTableColumn
domainConsoleEnabled = _DomainConsoleEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 57),
    _DomainConsoleEnabled_Type()
)
domainConsoleEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainConsoleEnabled.setStatus("current")
_DomainInternalAppsDeployOnDemandEnabled_Type = OctetString
_DomainInternalAppsDeployOnDemandEnabled_Object = MibTableColumn
domainInternalAppsDeployOnDemandEnabled = _DomainInternalAppsDeployOnDemandEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 58),
    _DomainInternalAppsDeployOnDemandEnabled_Type()
)
domainInternalAppsDeployOnDemandEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainInternalAppsDeployOnDemandEnabled.setStatus("current")
_DomainDomainVersion_Type = OctetString
_DomainDomainVersion_Object = MibTableColumn
domainDomainVersion = _DomainDomainVersion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 59),
    _DomainDomainVersion_Type()
)
domainDomainVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainDomainVersion.setStatus("current")
_DomainConfigBackupEnabled_Type = OctetString
_DomainConfigBackupEnabled_Object = MibTableColumn
domainConfigBackupEnabled = _DomainConfigBackupEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 60),
    _DomainConfigBackupEnabled_Type()
)
domainConfigBackupEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainConfigBackupEnabled.setStatus("current")
_DomainConsoleExtensionDirectory_Type = OctetString
_DomainConsoleExtensionDirectory_Object = MibTableColumn
domainConsoleExtensionDirectory = _DomainConsoleExtensionDirectory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 61),
    _DomainConsoleExtensionDirectory_Type()
)
domainConsoleExtensionDirectory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainConsoleExtensionDirectory.setStatus("current")
_DomainConfigurationAuditType_Type = OctetString
_DomainConfigurationAuditType_Object = MibTableColumn
domainConfigurationAuditType = _DomainConfigurationAuditType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 62),
    _DomainConfigurationAuditType_Type()
)
domainConfigurationAuditType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainConfigurationAuditType.setStatus("current")
_DomainAdminServerName_Type = OctetString
_DomainAdminServerName_Object = MibTableColumn
domainAdminServerName = _DomainAdminServerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 63),
    _DomainAdminServerName_Type()
)
domainAdminServerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainAdminServerName.setStatus("current")
_DomainAdministrationProtocol_Type = OctetString
_DomainAdministrationProtocol_Object = MibTableColumn
domainAdministrationProtocol = _DomainAdministrationProtocol_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 64),
    _DomainAdministrationProtocol_Type()
)
domainAdministrationProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainAdministrationProtocol.setStatus("current")
_DomainProductionModeEnabled_Type = OctetString
_DomainProductionModeEnabled_Object = MibTableColumn
domainProductionModeEnabled = _DomainProductionModeEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 530, 1, 65),
    _DomainProductionModeEnabled_Type()
)
domainProductionModeEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainProductionModeEnabled.setStatus("current")
_EjbComponentTable_Object = MibTable
ejbComponentTable = _EjbComponentTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 540)
)
if mibBuilder.loadTexts:
    ejbComponentTable.setStatus("current")
_EjbComponentEntry_Object = MibTableRow
ejbComponentEntry = _EjbComponentEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 540, 1)
)
ejbComponentEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "ejbComponentIndex"),
)
if mibBuilder.loadTexts:
    ejbComponentEntry.setStatus("current")


class _EjbComponentIndex_Type(DisplayString):
    """Custom type ejbComponentIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_EjbComponentIndex_Type.__name__ = "DisplayString"
_EjbComponentIndex_Object = MibTableColumn
ejbComponentIndex = _EjbComponentIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 540, 1, 1),
    _EjbComponentIndex_Type()
)
ejbComponentIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbComponentIndex.setStatus("current")


class _EjbComponentObjectName_Type(DisplayString):
    """Custom type ejbComponentObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbComponentObjectName_Type.__name__ = "DisplayString"
_EjbComponentObjectName_Object = MibTableColumn
ejbComponentObjectName = _EjbComponentObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 540, 1, 5),
    _EjbComponentObjectName_Type()
)
ejbComponentObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbComponentObjectName.setStatus("current")


class _EjbComponentType_Type(DisplayString):
    """Custom type ejbComponentType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EjbComponentType_Type.__name__ = "DisplayString"
_EjbComponentType_Object = MibTableColumn
ejbComponentType = _EjbComponentType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 540, 1, 10),
    _EjbComponentType_Type()
)
ejbComponentType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbComponentType.setStatus("current")


class _EjbComponentName_Type(DisplayString):
    """Custom type ejbComponentName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EjbComponentName_Type.__name__ = "DisplayString"
_EjbComponentName_Object = MibTableColumn
ejbComponentName = _EjbComponentName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 540, 1, 15),
    _EjbComponentName_Type()
)
ejbComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbComponentName.setStatus("current")


class _EjbComponentParent_Type(DisplayString):
    """Custom type ejbComponentParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbComponentParent_Type.__name__ = "DisplayString"
_EjbComponentParent_Object = MibTableColumn
ejbComponentParent = _EjbComponentParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 540, 1, 20),
    _EjbComponentParent_Type()
)
ejbComponentParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbComponentParent.setStatus("current")


class _EjbComponentJavaCompiler_Type(DisplayString):
    """Custom type ejbComponentJavaCompiler based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_EjbComponentJavaCompiler_Type.__name__ = "DisplayString"
_EjbComponentJavaCompiler_Object = MibTableColumn
ejbComponentJavaCompiler = _EjbComponentJavaCompiler_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 540, 1, 25),
    _EjbComponentJavaCompiler_Type()
)
ejbComponentJavaCompiler.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbComponentJavaCompiler.setStatus("current")


class _EjbComponentJavaCompilerPreClassPath_Type(DisplayString):
    """Custom type ejbComponentJavaCompilerPreClassPath based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbComponentJavaCompilerPreClassPath_Type.__name__ = "DisplayString"
_EjbComponentJavaCompilerPreClassPath_Object = MibTableColumn
ejbComponentJavaCompilerPreClassPath = _EjbComponentJavaCompilerPreClassPath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 540, 1, 30),
    _EjbComponentJavaCompilerPreClassPath_Type()
)
ejbComponentJavaCompilerPreClassPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbComponentJavaCompilerPreClassPath.setStatus("current")


class _EjbComponentJavaCompilerPostClassPath_Type(DisplayString):
    """Custom type ejbComponentJavaCompilerPostClassPath based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbComponentJavaCompilerPostClassPath_Type.__name__ = "DisplayString"
_EjbComponentJavaCompilerPostClassPath_Object = MibTableColumn
ejbComponentJavaCompilerPostClassPath = _EjbComponentJavaCompilerPostClassPath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 540, 1, 35),
    _EjbComponentJavaCompilerPostClassPath_Type()
)
ejbComponentJavaCompilerPostClassPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbComponentJavaCompilerPostClassPath.setStatus("current")


class _EjbComponentExtraRmicOptions_Type(DisplayString):
    """Custom type ejbComponentExtraRmicOptions based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbComponentExtraRmicOptions_Type.__name__ = "DisplayString"
_EjbComponentExtraRmicOptions_Object = MibTableColumn
ejbComponentExtraRmicOptions = _EjbComponentExtraRmicOptions_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 540, 1, 40),
    _EjbComponentExtraRmicOptions_Type()
)
ejbComponentExtraRmicOptions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbComponentExtraRmicOptions.setStatus("current")


class _EjbComponentKeepGenerated_Type(Integer32):
    """Custom type ejbComponentKeepGenerated based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_EjbComponentKeepGenerated_Type.__name__ = "Integer32"
_EjbComponentKeepGenerated_Object = MibTableColumn
ejbComponentKeepGenerated = _EjbComponentKeepGenerated_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 540, 1, 45),
    _EjbComponentKeepGenerated_Type()
)
ejbComponentKeepGenerated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbComponentKeepGenerated.setStatus("current")


class _EjbComponentTmpPath_Type(DisplayString):
    """Custom type ejbComponentTmpPath based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1024),
    )


_EjbComponentTmpPath_Type.__name__ = "DisplayString"
_EjbComponentTmpPath_Object = MibTableColumn
ejbComponentTmpPath = _EjbComponentTmpPath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 540, 1, 50),
    _EjbComponentTmpPath_Type()
)
ejbComponentTmpPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbComponentTmpPath.setStatus("current")


class _EjbComponentApplication_Type(DisplayString):
    """Custom type ejbComponentApplication based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbComponentApplication_Type.__name__ = "DisplayString"
_EjbComponentApplication_Object = MibTableColumn
ejbComponentApplication = _EjbComponentApplication_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 540, 1, 60),
    _EjbComponentApplication_Type()
)
ejbComponentApplication.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbComponentApplication.setStatus("current")


class _EjbComponentURI_Type(DisplayString):
    """Custom type ejbComponentURI based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbComponentURI_Type.__name__ = "DisplayString"
_EjbComponentURI_Object = MibTableColumn
ejbComponentURI = _EjbComponentURI_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 540, 1, 65),
    _EjbComponentURI_Type()
)
ejbComponentURI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbComponentURI.setStatus("current")
_EjbContainerTable_Object = MibTable
ejbContainerTable = _EjbContainerTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 545)
)
if mibBuilder.loadTexts:
    ejbContainerTable.setStatus("current")
_EjbContainerEntry_Object = MibTableRow
ejbContainerEntry = _EjbContainerEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 545, 1)
)
ejbContainerEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "ejbContainerIndex"),
)
if mibBuilder.loadTexts:
    ejbContainerEntry.setStatus("current")


class _EjbContainerIndex_Type(DisplayString):
    """Custom type ejbContainerIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_EjbContainerIndex_Type.__name__ = "DisplayString"
_EjbContainerIndex_Object = MibTableColumn
ejbContainerIndex = _EjbContainerIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 545, 1, 1),
    _EjbContainerIndex_Type()
)
ejbContainerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbContainerIndex.setStatus("current")


class _EjbContainerObjectName_Type(DisplayString):
    """Custom type ejbContainerObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbContainerObjectName_Type.__name__ = "DisplayString"
_EjbContainerObjectName_Object = MibTableColumn
ejbContainerObjectName = _EjbContainerObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 545, 1, 5),
    _EjbContainerObjectName_Type()
)
ejbContainerObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbContainerObjectName.setStatus("current")


class _EjbContainerType_Type(DisplayString):
    """Custom type ejbContainerType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EjbContainerType_Type.__name__ = "DisplayString"
_EjbContainerType_Object = MibTableColumn
ejbContainerType = _EjbContainerType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 545, 1, 10),
    _EjbContainerType_Type()
)
ejbContainerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbContainerType.setStatus("current")


class _EjbContainerName_Type(DisplayString):
    """Custom type ejbContainerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_EjbContainerName_Type.__name__ = "DisplayString"
_EjbContainerName_Object = MibTableColumn
ejbContainerName = _EjbContainerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 545, 1, 15),
    _EjbContainerName_Type()
)
ejbContainerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbContainerName.setStatus("current")


class _EjbContainerParent_Type(DisplayString):
    """Custom type ejbContainerParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbContainerParent_Type.__name__ = "DisplayString"
_EjbContainerParent_Object = MibTableColumn
ejbContainerParent = _EjbContainerParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 545, 1, 20),
    _EjbContainerParent_Type()
)
ejbContainerParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbContainerParent.setStatus("current")


class _EjbContainerVerboseEJBDeploymentEnabled_Type(DisplayString):
    """Custom type ejbContainerVerboseEJBDeploymentEnabled based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbContainerVerboseEJBDeploymentEnabled_Type.__name__ = "DisplayString"
_EjbContainerVerboseEJBDeploymentEnabled_Object = MibTableColumn
ejbContainerVerboseEJBDeploymentEnabled = _EjbContainerVerboseEJBDeploymentEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 545, 1, 25),
    _EjbContainerVerboseEJBDeploymentEnabled_Type()
)
ejbContainerVerboseEJBDeploymentEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbContainerVerboseEJBDeploymentEnabled.setStatus("current")


class _EjbContainerExtraRmicOptions_Type(DisplayString):
    """Custom type ejbContainerExtraRmicOptions based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbContainerExtraRmicOptions_Type.__name__ = "DisplayString"
_EjbContainerExtraRmicOptions_Object = MibTableColumn
ejbContainerExtraRmicOptions = _EjbContainerExtraRmicOptions_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 545, 1, 30),
    _EjbContainerExtraRmicOptions_Type()
)
ejbContainerExtraRmicOptions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbContainerExtraRmicOptions.setStatus("current")


class _EjbContainerForceGeneration_Type(DisplayString):
    """Custom type ejbContainerForceGeneration based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbContainerForceGeneration_Type.__name__ = "DisplayString"
_EjbContainerForceGeneration_Object = MibTableColumn
ejbContainerForceGeneration = _EjbContainerForceGeneration_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 545, 1, 35),
    _EjbContainerForceGeneration_Type()
)
ejbContainerForceGeneration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbContainerForceGeneration.setStatus("current")


class _EjbContainerJavaCompiler_Type(DisplayString):
    """Custom type ejbContainerJavaCompiler based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbContainerJavaCompiler_Type.__name__ = "DisplayString"
_EjbContainerJavaCompiler_Object = MibTableColumn
ejbContainerJavaCompiler = _EjbContainerJavaCompiler_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 545, 1, 40),
    _EjbContainerJavaCompiler_Type()
)
ejbContainerJavaCompiler.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbContainerJavaCompiler.setStatus("current")


class _EjbContainerJavaCompilerPostClassPath_Type(DisplayString):
    """Custom type ejbContainerJavaCompilerPostClassPath based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbContainerJavaCompilerPostClassPath_Type.__name__ = "DisplayString"
_EjbContainerJavaCompilerPostClassPath_Object = MibTableColumn
ejbContainerJavaCompilerPostClassPath = _EjbContainerJavaCompilerPostClassPath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 545, 1, 45),
    _EjbContainerJavaCompilerPostClassPath_Type()
)
ejbContainerJavaCompilerPostClassPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbContainerJavaCompilerPostClassPath.setStatus("current")


class _EjbContainerJavaCompilerPreClassPath_Type(DisplayString):
    """Custom type ejbContainerJavaCompilerPreClassPath based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbContainerJavaCompilerPreClassPath_Type.__name__ = "DisplayString"
_EjbContainerJavaCompilerPreClassPath_Object = MibTableColumn
ejbContainerJavaCompilerPreClassPath = _EjbContainerJavaCompilerPreClassPath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 545, 1, 50),
    _EjbContainerJavaCompilerPreClassPath_Type()
)
ejbContainerJavaCompilerPreClassPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbContainerJavaCompilerPreClassPath.setStatus("current")


class _EjbContainerKeepGenerated_Type(DisplayString):
    """Custom type ejbContainerKeepGenerated based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbContainerKeepGenerated_Type.__name__ = "DisplayString"
_EjbContainerKeepGenerated_Object = MibTableColumn
ejbContainerKeepGenerated = _EjbContainerKeepGenerated_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 545, 1, 55),
    _EjbContainerKeepGenerated_Type()
)
ejbContainerKeepGenerated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbContainerKeepGenerated.setStatus("current")


class _EjbContainerTmpPath_Type(DisplayString):
    """Custom type ejbContainerTmpPath based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_EjbContainerTmpPath_Type.__name__ = "DisplayString"
_EjbContainerTmpPath_Object = MibTableColumn
ejbContainerTmpPath = _EjbContainerTmpPath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 545, 1, 60),
    _EjbContainerTmpPath_Type()
)
ejbContainerTmpPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbContainerTmpPath.setStatus("current")
_EjbContainerExtraEjbcOptions_Type = DisplayString
_EjbContainerExtraEjbcOptions_Object = MibTableColumn
ejbContainerExtraEjbcOptions = _EjbContainerExtraEjbcOptions_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 545, 1, 61),
    _EjbContainerExtraEjbcOptions_Type()
)
ejbContainerExtraEjbcOptions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ejbContainerExtraEjbcOptions.setStatus("current")
_ExecuteQueueTable_Object = MibTable
executeQueueTable = _ExecuteQueueTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 550)
)
if mibBuilder.loadTexts:
    executeQueueTable.setStatus("current")
_ExecuteQueueEntry_Object = MibTableRow
executeQueueEntry = _ExecuteQueueEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 550, 1)
)
executeQueueEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "executeQueueIndex"),
)
if mibBuilder.loadTexts:
    executeQueueEntry.setStatus("current")


class _ExecuteQueueIndex_Type(DisplayString):
    """Custom type executeQueueIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ExecuteQueueIndex_Type.__name__ = "DisplayString"
_ExecuteQueueIndex_Object = MibTableColumn
executeQueueIndex = _ExecuteQueueIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 550, 1, 1),
    _ExecuteQueueIndex_Type()
)
executeQueueIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueIndex.setStatus("current")


class _ExecuteQueueObjectName_Type(DisplayString):
    """Custom type executeQueueObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ExecuteQueueObjectName_Type.__name__ = "DisplayString"
_ExecuteQueueObjectName_Object = MibTableColumn
executeQueueObjectName = _ExecuteQueueObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 550, 1, 5),
    _ExecuteQueueObjectName_Type()
)
executeQueueObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueObjectName.setStatus("current")


class _ExecuteQueueType_Type(DisplayString):
    """Custom type executeQueueType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ExecuteQueueType_Type.__name__ = "DisplayString"
_ExecuteQueueType_Object = MibTableColumn
executeQueueType = _ExecuteQueueType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 550, 1, 10),
    _ExecuteQueueType_Type()
)
executeQueueType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueType.setStatus("current")


class _ExecuteQueueName_Type(DisplayString):
    """Custom type executeQueueName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ExecuteQueueName_Type.__name__ = "DisplayString"
_ExecuteQueueName_Object = MibTableColumn
executeQueueName = _ExecuteQueueName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 550, 1, 15),
    _ExecuteQueueName_Type()
)
executeQueueName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueName.setStatus("current")


class _ExecuteQueueParent_Type(DisplayString):
    """Custom type executeQueueParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ExecuteQueueParent_Type.__name__ = "DisplayString"
_ExecuteQueueParent_Object = MibTableColumn
executeQueueParent = _ExecuteQueueParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 550, 1, 20),
    _ExecuteQueueParent_Type()
)
executeQueueParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueParent.setStatus("current")
_ExecuteQueueThreadCount_Type = Integer32
_ExecuteQueueThreadCount_Object = MibTableColumn
executeQueueThreadCount = _ExecuteQueueThreadCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 550, 1, 25),
    _ExecuteQueueThreadCount_Type()
)
executeQueueThreadCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueThreadCount.setStatus("current")
_ExecuteQueueThreadsMaximum_Type = Integer32
_ExecuteQueueThreadsMaximum_Object = MibTableColumn
executeQueueThreadsMaximum = _ExecuteQueueThreadsMaximum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 550, 1, 26),
    _ExecuteQueueThreadsMaximum_Type()
)
executeQueueThreadsMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueThreadsMaximum.setStatus("current")
_ExecuteQueueQueueLengthThresholdPercent_Type = Integer32
_ExecuteQueueQueueLengthThresholdPercent_Object = MibTableColumn
executeQueueQueueLengthThresholdPercent = _ExecuteQueueQueueLengthThresholdPercent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 550, 1, 27),
    _ExecuteQueueQueueLengthThresholdPercent_Type()
)
executeQueueQueueLengthThresholdPercent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueQueueLengthThresholdPercent.setStatus("current")
_ExecuteQueueThreadsIncrease_Type = Integer32
_ExecuteQueueThreadsIncrease_Object = MibTableColumn
executeQueueThreadsIncrease = _ExecuteQueueThreadsIncrease_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 550, 1, 28),
    _ExecuteQueueThreadsIncrease_Type()
)
executeQueueThreadsIncrease.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueThreadsIncrease.setStatus("current")
_ExecuteQueueThreadsMinimum_Type = Integer32
_ExecuteQueueThreadsMinimum_Object = MibTableColumn
executeQueueThreadsMinimum = _ExecuteQueueThreadsMinimum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 550, 1, 29),
    _ExecuteQueueThreadsMinimum_Type()
)
executeQueueThreadsMinimum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueThreadsMinimum.setStatus("current")
_ExecuteQueueQueueLength_Type = Integer32
_ExecuteQueueQueueLength_Object = MibTableColumn
executeQueueQueueLength = _ExecuteQueueQueueLength_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 550, 1, 30),
    _ExecuteQueueQueueLength_Type()
)
executeQueueQueueLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    executeQueueQueueLength.setStatus("current")
_ForeignJMSConnectionFactoryTable_Object = MibTable
foreignJMSConnectionFactoryTable = _ForeignJMSConnectionFactoryTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 551)
)
if mibBuilder.loadTexts:
    foreignJMSConnectionFactoryTable.setStatus("current")
_ForeignJMSConnectionFactoryEntry_Object = MibTableRow
foreignJMSConnectionFactoryEntry = _ForeignJMSConnectionFactoryEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 551, 1)
)
foreignJMSConnectionFactoryEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "foreignJMSConnectionFactoryIndex"),
)
if mibBuilder.loadTexts:
    foreignJMSConnectionFactoryEntry.setStatus("current")


class _ForeignJMSConnectionFactoryIndex_Type(DisplayString):
    """Custom type foreignJMSConnectionFactoryIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ForeignJMSConnectionFactoryIndex_Type.__name__ = "DisplayString"
_ForeignJMSConnectionFactoryIndex_Object = MibTableColumn
foreignJMSConnectionFactoryIndex = _ForeignJMSConnectionFactoryIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 551, 1, 1),
    _ForeignJMSConnectionFactoryIndex_Type()
)
foreignJMSConnectionFactoryIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMSConnectionFactoryIndex.setStatus("current")


class _ForeignJMSConnectionFactoryObjectName_Type(DisplayString):
    """Custom type foreignJMSConnectionFactoryObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ForeignJMSConnectionFactoryObjectName_Type.__name__ = "DisplayString"
_ForeignJMSConnectionFactoryObjectName_Object = MibTableColumn
foreignJMSConnectionFactoryObjectName = _ForeignJMSConnectionFactoryObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 551, 1, 5),
    _ForeignJMSConnectionFactoryObjectName_Type()
)
foreignJMSConnectionFactoryObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMSConnectionFactoryObjectName.setStatus("current")


class _ForeignJMSConnectionFactoryType_Type(DisplayString):
    """Custom type foreignJMSConnectionFactoryType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ForeignJMSConnectionFactoryType_Type.__name__ = "DisplayString"
_ForeignJMSConnectionFactoryType_Object = MibTableColumn
foreignJMSConnectionFactoryType = _ForeignJMSConnectionFactoryType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 551, 1, 10),
    _ForeignJMSConnectionFactoryType_Type()
)
foreignJMSConnectionFactoryType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMSConnectionFactoryType.setStatus("current")


class _ForeignJMSConnectionFactoryName_Type(DisplayString):
    """Custom type foreignJMSConnectionFactoryName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ForeignJMSConnectionFactoryName_Type.__name__ = "DisplayString"
_ForeignJMSConnectionFactoryName_Object = MibTableColumn
foreignJMSConnectionFactoryName = _ForeignJMSConnectionFactoryName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 551, 1, 15),
    _ForeignJMSConnectionFactoryName_Type()
)
foreignJMSConnectionFactoryName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMSConnectionFactoryName.setStatus("current")


class _ForeignJMSConnectionFactoryParent_Type(DisplayString):
    """Custom type foreignJMSConnectionFactoryParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ForeignJMSConnectionFactoryParent_Type.__name__ = "DisplayString"
_ForeignJMSConnectionFactoryParent_Object = MibTableColumn
foreignJMSConnectionFactoryParent = _ForeignJMSConnectionFactoryParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 551, 1, 20),
    _ForeignJMSConnectionFactoryParent_Type()
)
foreignJMSConnectionFactoryParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMSConnectionFactoryParent.setStatus("current")
_ForeignJMSConnectionFactoryLocalJNDIName_Type = DisplayString
_ForeignJMSConnectionFactoryLocalJNDIName_Object = MibTableColumn
foreignJMSConnectionFactoryLocalJNDIName = _ForeignJMSConnectionFactoryLocalJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 551, 1, 21),
    _ForeignJMSConnectionFactoryLocalJNDIName_Type()
)
foreignJMSConnectionFactoryLocalJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMSConnectionFactoryLocalJNDIName.setStatus("current")
_ForeignJMCConnectionFactoryRemoteJNDIName_Type = DisplayString
_ForeignJMCConnectionFactoryRemoteJNDIName_Object = MibTableColumn
foreignJMCConnectionFactoryRemoteJNDIName = _ForeignJMCConnectionFactoryRemoteJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 551, 1, 22),
    _ForeignJMCConnectionFactoryRemoteJNDIName_Type()
)
foreignJMCConnectionFactoryRemoteJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMCConnectionFactoryRemoteJNDIName.setStatus("current")
_ForeignJMSConnectionFactoryUsername_Type = DisplayString
_ForeignJMSConnectionFactoryUsername_Object = MibTableColumn
foreignJMSConnectionFactoryUsername = _ForeignJMSConnectionFactoryUsername_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 551, 1, 23),
    _ForeignJMSConnectionFactoryUsername_Type()
)
foreignJMSConnectionFactoryUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMSConnectionFactoryUsername.setStatus("current")
_ForeignJMSDestinationTable_Object = MibTable
foreignJMSDestinationTable = _ForeignJMSDestinationTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 552)
)
if mibBuilder.loadTexts:
    foreignJMSDestinationTable.setStatus("current")
_ForeignJMSDestinationEntry_Object = MibTableRow
foreignJMSDestinationEntry = _ForeignJMSDestinationEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 552, 1)
)
foreignJMSDestinationEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "foreignJMSDestinationIndex"),
)
if mibBuilder.loadTexts:
    foreignJMSDestinationEntry.setStatus("current")


class _ForeignJMSDestinationIndex_Type(DisplayString):
    """Custom type foreignJMSDestinationIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ForeignJMSDestinationIndex_Type.__name__ = "DisplayString"
_ForeignJMSDestinationIndex_Object = MibTableColumn
foreignJMSDestinationIndex = _ForeignJMSDestinationIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 552, 1, 1),
    _ForeignJMSDestinationIndex_Type()
)
foreignJMSDestinationIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMSDestinationIndex.setStatus("current")


class _ForeignJMSDestinationObjectName_Type(DisplayString):
    """Custom type foreignJMSDestinationObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ForeignJMSDestinationObjectName_Type.__name__ = "DisplayString"
_ForeignJMSDestinationObjectName_Object = MibTableColumn
foreignJMSDestinationObjectName = _ForeignJMSDestinationObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 552, 1, 5),
    _ForeignJMSDestinationObjectName_Type()
)
foreignJMSDestinationObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMSDestinationObjectName.setStatus("current")


class _ForeignJMSDestinationType_Type(DisplayString):
    """Custom type foreignJMSDestinationType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ForeignJMSDestinationType_Type.__name__ = "DisplayString"
_ForeignJMSDestinationType_Object = MibTableColumn
foreignJMSDestinationType = _ForeignJMSDestinationType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 552, 1, 10),
    _ForeignJMSDestinationType_Type()
)
foreignJMSDestinationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMSDestinationType.setStatus("current")


class _ForeignJMSDestinationName_Type(DisplayString):
    """Custom type foreignJMSDestinationName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ForeignJMSDestinationName_Type.__name__ = "DisplayString"
_ForeignJMSDestinationName_Object = MibTableColumn
foreignJMSDestinationName = _ForeignJMSDestinationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 552, 1, 15),
    _ForeignJMSDestinationName_Type()
)
foreignJMSDestinationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMSDestinationName.setStatus("current")


class _ForeignJMSDestinationParent_Type(DisplayString):
    """Custom type foreignJMSDestinationParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ForeignJMSDestinationParent_Type.__name__ = "DisplayString"
_ForeignJMSDestinationParent_Object = MibTableColumn
foreignJMSDestinationParent = _ForeignJMSDestinationParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 552, 1, 20),
    _ForeignJMSDestinationParent_Type()
)
foreignJMSDestinationParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMSDestinationParent.setStatus("current")
_ForeignJMSDestinationLocalJNDIName_Type = DisplayString
_ForeignJMSDestinationLocalJNDIName_Object = MibTableColumn
foreignJMSDestinationLocalJNDIName = _ForeignJMSDestinationLocalJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 552, 1, 21),
    _ForeignJMSDestinationLocalJNDIName_Type()
)
foreignJMSDestinationLocalJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMSDestinationLocalJNDIName.setStatus("current")
_ForeignJMSDestinationRemoteJNDIName_Type = DisplayString
_ForeignJMSDestinationRemoteJNDIName_Object = MibTableColumn
foreignJMSDestinationRemoteJNDIName = _ForeignJMSDestinationRemoteJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 552, 1, 22),
    _ForeignJMSDestinationRemoteJNDIName_Type()
)
foreignJMSDestinationRemoteJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMSDestinationRemoteJNDIName.setStatus("current")
_ForeignJMSServerTable_Object = MibTable
foreignJMSServerTable = _ForeignJMSServerTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 553)
)
if mibBuilder.loadTexts:
    foreignJMSServerTable.setStatus("current")
_ForeignJMSServerEntry_Object = MibTableRow
foreignJMSServerEntry = _ForeignJMSServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 553, 1)
)
foreignJMSServerEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "foreignJMSServerIndex"),
)
if mibBuilder.loadTexts:
    foreignJMSServerEntry.setStatus("current")


class _ForeignJMSServerIndex_Type(DisplayString):
    """Custom type foreignJMSServerIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ForeignJMSServerIndex_Type.__name__ = "DisplayString"
_ForeignJMSServerIndex_Object = MibTableColumn
foreignJMSServerIndex = _ForeignJMSServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 553, 1, 1),
    _ForeignJMSServerIndex_Type()
)
foreignJMSServerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMSServerIndex.setStatus("current")


class _ForeignJMSServerObjectName_Type(DisplayString):
    """Custom type foreignJMSServerObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ForeignJMSServerObjectName_Type.__name__ = "DisplayString"
_ForeignJMSServerObjectName_Object = MibTableColumn
foreignJMSServerObjectName = _ForeignJMSServerObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 553, 1, 5),
    _ForeignJMSServerObjectName_Type()
)
foreignJMSServerObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMSServerObjectName.setStatus("current")


class _ForeignJMSServerType_Type(DisplayString):
    """Custom type foreignJMSServerType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ForeignJMSServerType_Type.__name__ = "DisplayString"
_ForeignJMSServerType_Object = MibTableColumn
foreignJMSServerType = _ForeignJMSServerType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 553, 1, 10),
    _ForeignJMSServerType_Type()
)
foreignJMSServerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMSServerType.setStatus("current")


class _ForeignJMSServerName_Type(DisplayString):
    """Custom type foreignJMSServerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ForeignJMSServerName_Type.__name__ = "DisplayString"
_ForeignJMSServerName_Object = MibTableColumn
foreignJMSServerName = _ForeignJMSServerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 553, 1, 15),
    _ForeignJMSServerName_Type()
)
foreignJMSServerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMSServerName.setStatus("current")


class _ForeignJMSServerParent_Type(DisplayString):
    """Custom type foreignJMSServerParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ForeignJMSServerParent_Type.__name__ = "DisplayString"
_ForeignJMSServerParent_Object = MibTableColumn
foreignJMSServerParent = _ForeignJMSServerParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 553, 1, 20),
    _ForeignJMSServerParent_Type()
)
foreignJMSServerParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMSServerParent.setStatus("current")
_ForeignJMSServerConnectionURL_Type = DisplayString
_ForeignJMSServerConnectionURL_Object = MibTableColumn
foreignJMSServerConnectionURL = _ForeignJMSServerConnectionURL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 553, 1, 21),
    _ForeignJMSServerConnectionURL_Type()
)
foreignJMSServerConnectionURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMSServerConnectionURL.setStatus("current")
_ForeignJMSServerInitialContextFactory_Type = DisplayString
_ForeignJMSServerInitialContextFactory_Object = MibTableColumn
foreignJMSServerInitialContextFactory = _ForeignJMSServerInitialContextFactory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 553, 1, 22),
    _ForeignJMSServerInitialContextFactory_Type()
)
foreignJMSServerInitialContextFactory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJMSServerInitialContextFactory.setStatus("current")
_IiopTable_Object = MibTable
iiopTable = _IiopTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 555)
)
if mibBuilder.loadTexts:
    iiopTable.setStatus("current")
_IiopEntry_Object = MibTableRow
iiopEntry = _IiopEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 555, 1)
)
iiopEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "iiopIndex"),
)
if mibBuilder.loadTexts:
    iiopEntry.setStatus("current")


class _IiopIndex_Type(DisplayString):
    """Custom type iiopIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_IiopIndex_Type.__name__ = "DisplayString"
_IiopIndex_Object = MibTableColumn
iiopIndex = _IiopIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 555, 1, 1),
    _IiopIndex_Type()
)
iiopIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iiopIndex.setStatus("current")


class _IiopObjectName_Type(DisplayString):
    """Custom type iiopObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_IiopObjectName_Type.__name__ = "DisplayString"
_IiopObjectName_Object = MibTableColumn
iiopObjectName = _IiopObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 555, 1, 5),
    _IiopObjectName_Type()
)
iiopObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iiopObjectName.setStatus("current")


class _IiopType_Type(DisplayString):
    """Custom type iiopType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_IiopType_Type.__name__ = "DisplayString"
_IiopType_Object = MibTableColumn
iiopType = _IiopType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 555, 1, 10),
    _IiopType_Type()
)
iiopType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iiopType.setStatus("current")


class _IiopName_Type(DisplayString):
    """Custom type iiopName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_IiopName_Type.__name__ = "DisplayString"
_IiopName_Object = MibTableColumn
iiopName = _IiopName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 555, 1, 15),
    _IiopName_Type()
)
iiopName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iiopName.setStatus("current")


class _IiopParent_Type(DisplayString):
    """Custom type iiopParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_IiopParent_Type.__name__ = "DisplayString"
_IiopParent_Object = MibTableColumn
iiopParent = _IiopParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 555, 1, 20),
    _IiopParent_Type()
)
iiopParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iiopParent.setStatus("current")
_IiopCompleteMessageTimeout_Type = Integer32
_IiopCompleteMessageTimeout_Object = MibTableColumn
iiopCompleteMessageTimeout = _IiopCompleteMessageTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 555, 1, 25),
    _IiopCompleteMessageTimeout_Type()
)
iiopCompleteMessageTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iiopCompleteMessageTimeout.setStatus("current")
_IiopIdleConnectionTimeout_Type = Integer32
_IiopIdleConnectionTimeout_Object = MibTableColumn
iiopIdleConnectionTimeout = _IiopIdleConnectionTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 555, 1, 30),
    _IiopIdleConnectionTimeout_Type()
)
iiopIdleConnectionTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iiopIdleConnectionTimeout.setStatus("current")
_IiopMaxMessageSize_Type = Integer32
_IiopMaxMessageSize_Object = MibTableColumn
iiopMaxMessageSize = _IiopMaxMessageSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 555, 1, 35),
    _IiopMaxMessageSize_Type()
)
iiopMaxMessageSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iiopMaxMessageSize.setStatus("current")
_IiopDefaultCharCodeset_Type = DisplayString
_IiopDefaultCharCodeset_Object = MibTableColumn
iiopDefaultCharCodeset = _IiopDefaultCharCodeset_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 555, 1, 36),
    _IiopDefaultCharCodeset_Type()
)
iiopDefaultCharCodeset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iiopDefaultCharCodeset.setStatus("current")
_IiopDefaultMinorVersion_Type = Integer32
_IiopDefaultMinorVersion_Object = MibTableColumn
iiopDefaultMinorVersion = _IiopDefaultMinorVersion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 555, 1, 37),
    _IiopDefaultMinorVersion_Type()
)
iiopDefaultMinorVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iiopDefaultMinorVersion.setStatus("current")
_IiopDefaultWideCharCodeset_Type = DisplayString
_IiopDefaultWideCharCodeset_Object = MibTableColumn
iiopDefaultWideCharCodeset = _IiopDefaultWideCharCodeset_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 555, 1, 38),
    _IiopDefaultWideCharCodeset_Type()
)
iiopDefaultWideCharCodeset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iiopDefaultWideCharCodeset.setStatus("current")
_IiopTxMechanism_Type = DisplayString
_IiopTxMechanism_Object = MibTableColumn
iiopTxMechanism = _IiopTxMechanism_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 555, 1, 39),
    _IiopTxMechanism_Type()
)
iiopTxMechanism.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iiopTxMechanism.setStatus("current")
_IiopUseStatefulAuthentication_Type = OctetString
_IiopUseStatefulAuthentication_Object = MibTableColumn
iiopUseStatefulAuthentication = _IiopUseStatefulAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 555, 1, 40),
    _IiopUseStatefulAuthentication_Type()
)
iiopUseStatefulAuthentication.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iiopUseStatefulAuthentication.setStatus("current")
_IiopUseJavaSerialization_Type = OctetString
_IiopUseJavaSerialization_Object = MibTableColumn
iiopUseJavaSerialization = _IiopUseJavaSerialization_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 555, 1, 41),
    _IiopUseJavaSerialization_Type()
)
iiopUseJavaSerialization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iiopUseJavaSerialization.setStatus("current")
_IiopUseFullRepositoryIdList_Type = OctetString
_IiopUseFullRepositoryIdList_Object = MibTableColumn
iiopUseFullRepositoryIdList = _IiopUseFullRepositoryIdList_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 555, 1, 42),
    _IiopUseFullRepositoryIdList_Type()
)
iiopUseFullRepositoryIdList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iiopUseFullRepositoryIdList.setStatus("current")
_IiopEnableIORServlet_Type = OctetString
_IiopEnableIORServlet_Object = MibTableColumn
iiopEnableIORServlet = _IiopEnableIORServlet_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 555, 1, 43),
    _IiopEnableIORServlet_Type()
)
iiopEnableIORServlet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iiopEnableIORServlet.setStatus("current")
_IiopSystemSecurity_Type = OctetString
_IiopSystemSecurity_Object = MibTableColumn
iiopSystemSecurity = _IiopSystemSecurity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 555, 1, 44),
    _IiopSystemSecurity_Type()
)
iiopSystemSecurity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iiopSystemSecurity.setStatus("current")
_IiopUseSerialFormatVersion2_Type = OctetString
_IiopUseSerialFormatVersion2_Object = MibTableColumn
iiopUseSerialFormatVersion2 = _IiopUseSerialFormatVersion2_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 555, 1, 45),
    _IiopUseSerialFormatVersion2_Type()
)
iiopUseSerialFormatVersion2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iiopUseSerialFormatVersion2.setStatus("current")
_JdbcConnectionPoolTable_Object = MibTable
jdbcConnectionPoolTable = _JdbcConnectionPoolTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560)
)
if mibBuilder.loadTexts:
    jdbcConnectionPoolTable.setStatus("current")
_JdbcConnectionPoolEntry_Object = MibTableRow
jdbcConnectionPoolEntry = _JdbcConnectionPoolEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1)
)
jdbcConnectionPoolEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jdbcConnectionPoolIndex"),
)
if mibBuilder.loadTexts:
    jdbcConnectionPoolEntry.setStatus("current")


class _JdbcConnectionPoolIndex_Type(DisplayString):
    """Custom type jdbcConnectionPoolIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JdbcConnectionPoolIndex_Type.__name__ = "DisplayString"
_JdbcConnectionPoolIndex_Object = MibTableColumn
jdbcConnectionPoolIndex = _JdbcConnectionPoolIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 1),
    _JdbcConnectionPoolIndex_Type()
)
jdbcConnectionPoolIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolIndex.setStatus("current")


class _JdbcConnectionPoolObjectName_Type(DisplayString):
    """Custom type jdbcConnectionPoolObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcConnectionPoolObjectName_Type.__name__ = "DisplayString"
_JdbcConnectionPoolObjectName_Object = MibTableColumn
jdbcConnectionPoolObjectName = _JdbcConnectionPoolObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 5),
    _JdbcConnectionPoolObjectName_Type()
)
jdbcConnectionPoolObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolObjectName.setStatus("current")


class _JdbcConnectionPoolType_Type(DisplayString):
    """Custom type jdbcConnectionPoolType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JdbcConnectionPoolType_Type.__name__ = "DisplayString"
_JdbcConnectionPoolType_Object = MibTableColumn
jdbcConnectionPoolType = _JdbcConnectionPoolType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 10),
    _JdbcConnectionPoolType_Type()
)
jdbcConnectionPoolType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolType.setStatus("current")


class _JdbcConnectionPoolName_Type(DisplayString):
    """Custom type jdbcConnectionPoolName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JdbcConnectionPoolName_Type.__name__ = "DisplayString"
_JdbcConnectionPoolName_Object = MibTableColumn
jdbcConnectionPoolName = _JdbcConnectionPoolName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 15),
    _JdbcConnectionPoolName_Type()
)
jdbcConnectionPoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolName.setStatus("current")


class _JdbcConnectionPoolParent_Type(DisplayString):
    """Custom type jdbcConnectionPoolParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcConnectionPoolParent_Type.__name__ = "DisplayString"
_JdbcConnectionPoolParent_Object = MibTableColumn
jdbcConnectionPoolParent = _JdbcConnectionPoolParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 20),
    _JdbcConnectionPoolParent_Type()
)
jdbcConnectionPoolParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolParent.setStatus("current")


class _JdbcConnectionPoolACLName_Type(DisplayString):
    """Custom type jdbcConnectionPoolACLName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_JdbcConnectionPoolACLName_Type.__name__ = "DisplayString"
_JdbcConnectionPoolACLName_Object = MibTableColumn
jdbcConnectionPoolACLName = _JdbcConnectionPoolACLName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 25),
    _JdbcConnectionPoolACLName_Type()
)
jdbcConnectionPoolACLName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolACLName.setStatus("current")


class _JdbcConnectionPoolURL_Type(DisplayString):
    """Custom type jdbcConnectionPoolURL based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcConnectionPoolURL_Type.__name__ = "DisplayString"
_JdbcConnectionPoolURL_Object = MibTableColumn
jdbcConnectionPoolURL = _JdbcConnectionPoolURL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 30),
    _JdbcConnectionPoolURL_Type()
)
jdbcConnectionPoolURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolURL.setStatus("current")


class _JdbcConnectionPoolDriverName_Type(DisplayString):
    """Custom type jdbcConnectionPoolDriverName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcConnectionPoolDriverName_Type.__name__ = "DisplayString"
_JdbcConnectionPoolDriverName_Object = MibTableColumn
jdbcConnectionPoolDriverName = _JdbcConnectionPoolDriverName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 35),
    _JdbcConnectionPoolDriverName_Type()
)
jdbcConnectionPoolDriverName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolDriverName.setStatus("current")


class _JdbcConnectionPoolProperties_Type(DisplayString):
    """Custom type jdbcConnectionPoolProperties based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JdbcConnectionPoolProperties_Type.__name__ = "DisplayString"
_JdbcConnectionPoolProperties_Object = MibTableColumn
jdbcConnectionPoolProperties = _JdbcConnectionPoolProperties_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 40),
    _JdbcConnectionPoolProperties_Type()
)
jdbcConnectionPoolProperties.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolProperties.setStatus("current")
_JdbcConnectionPoolLoginDelaySeconds_Type = Integer32
_JdbcConnectionPoolLoginDelaySeconds_Object = MibTableColumn
jdbcConnectionPoolLoginDelaySeconds = _JdbcConnectionPoolLoginDelaySeconds_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 45),
    _JdbcConnectionPoolLoginDelaySeconds_Type()
)
jdbcConnectionPoolLoginDelaySeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolLoginDelaySeconds.setStatus("current")
_JdbcConnectionPoolInitialCapacity_Type = Integer32
_JdbcConnectionPoolInitialCapacity_Object = MibTableColumn
jdbcConnectionPoolInitialCapacity = _JdbcConnectionPoolInitialCapacity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 50),
    _JdbcConnectionPoolInitialCapacity_Type()
)
jdbcConnectionPoolInitialCapacity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolInitialCapacity.setStatus("current")
_JdbcConnectionPoolMaxCapacity_Type = Integer32
_JdbcConnectionPoolMaxCapacity_Object = MibTableColumn
jdbcConnectionPoolMaxCapacity = _JdbcConnectionPoolMaxCapacity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 55),
    _JdbcConnectionPoolMaxCapacity_Type()
)
jdbcConnectionPoolMaxCapacity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolMaxCapacity.setStatus("current")
_JdbcConnectionPoolCapacityIncrement_Type = Integer32
_JdbcConnectionPoolCapacityIncrement_Object = MibTableColumn
jdbcConnectionPoolCapacityIncrement = _JdbcConnectionPoolCapacityIncrement_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 60),
    _JdbcConnectionPoolCapacityIncrement_Type()
)
jdbcConnectionPoolCapacityIncrement.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolCapacityIncrement.setStatus("current")


class _JdbcConnectionPoolShrinkingEnabled_Type(Integer32):
    """Custom type jdbcConnectionPoolShrinkingEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_JdbcConnectionPoolShrinkingEnabled_Type.__name__ = "Integer32"
_JdbcConnectionPoolShrinkingEnabled_Object = MibTableColumn
jdbcConnectionPoolShrinkingEnabled = _JdbcConnectionPoolShrinkingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 65),
    _JdbcConnectionPoolShrinkingEnabled_Type()
)
jdbcConnectionPoolShrinkingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolShrinkingEnabled.setStatus("current")
_JdbcConnectionPoolShrinkPeriodMinutes_Type = Integer32
_JdbcConnectionPoolShrinkPeriodMinutes_Object = MibTableColumn
jdbcConnectionPoolShrinkPeriodMinutes = _JdbcConnectionPoolShrinkPeriodMinutes_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 70),
    _JdbcConnectionPoolShrinkPeriodMinutes_Type()
)
jdbcConnectionPoolShrinkPeriodMinutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolShrinkPeriodMinutes.setStatus("current")


class _JdbcConnectionPoolTestConnectionsOnReserve_Type(Integer32):
    """Custom type jdbcConnectionPoolTestConnectionsOnReserve based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_JdbcConnectionPoolTestConnectionsOnReserve_Type.__name__ = "Integer32"
_JdbcConnectionPoolTestConnectionsOnReserve_Object = MibTableColumn
jdbcConnectionPoolTestConnectionsOnReserve = _JdbcConnectionPoolTestConnectionsOnReserve_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 80),
    _JdbcConnectionPoolTestConnectionsOnReserve_Type()
)
jdbcConnectionPoolTestConnectionsOnReserve.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolTestConnectionsOnReserve.setStatus("current")


class _JdbcConnectionPoolTestConnectionsOnRelease_Type(Integer32):
    """Custom type jdbcConnectionPoolTestConnectionsOnRelease based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_JdbcConnectionPoolTestConnectionsOnRelease_Type.__name__ = "Integer32"
_JdbcConnectionPoolTestConnectionsOnRelease_Object = MibTableColumn
jdbcConnectionPoolTestConnectionsOnRelease = _JdbcConnectionPoolTestConnectionsOnRelease_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 85),
    _JdbcConnectionPoolTestConnectionsOnRelease_Type()
)
jdbcConnectionPoolTestConnectionsOnRelease.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolTestConnectionsOnRelease.setStatus("current")


class _JdbcConnectionPoolSupportsLocalTransaction_Type(Integer32):
    """Custom type jdbcConnectionPoolSupportsLocalTransaction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_JdbcConnectionPoolSupportsLocalTransaction_Type.__name__ = "Integer32"
_JdbcConnectionPoolSupportsLocalTransaction_Object = MibTableColumn
jdbcConnectionPoolSupportsLocalTransaction = _JdbcConnectionPoolSupportsLocalTransaction_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 90),
    _JdbcConnectionPoolSupportsLocalTransaction_Type()
)
jdbcConnectionPoolSupportsLocalTransaction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolSupportsLocalTransaction.setStatus("current")
_JdbcConnectionPoolRefreshMinutes_Type = Integer32
_JdbcConnectionPoolRefreshMinutes_Object = MibTableColumn
jdbcConnectionPoolRefreshMinutes = _JdbcConnectionPoolRefreshMinutes_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 95),
    _JdbcConnectionPoolRefreshMinutes_Type()
)
jdbcConnectionPoolRefreshMinutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolRefreshMinutes.setStatus("current")


class _JdbcConnectionPoolTargets_Type(DisplayString):
    """Custom type jdbcConnectionPoolTargets based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JdbcConnectionPoolTargets_Type.__name__ = "DisplayString"
_JdbcConnectionPoolTargets_Object = MibTableColumn
jdbcConnectionPoolTargets = _JdbcConnectionPoolTargets_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 100),
    _JdbcConnectionPoolTargets_Type()
)
jdbcConnectionPoolTargets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolTargets.setStatus("current")
_JdbcConnectionPoolConnectionCreationRetryFrequencySeconds_Type = Integer32
_JdbcConnectionPoolConnectionCreationRetryFrequencySeconds_Object = MibTableColumn
jdbcConnectionPoolConnectionCreationRetryFrequencySeconds = _JdbcConnectionPoolConnectionCreationRetryFrequencySeconds_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 101),
    _JdbcConnectionPoolConnectionCreationRetryFrequencySeconds_Type()
)
jdbcConnectionPoolConnectionCreationRetryFrequencySeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolConnectionCreationRetryFrequencySeconds.setStatus("current")
_JdbcConnectionPoolConnectionReserveTimeoutSeconds_Type = Integer32
_JdbcConnectionPoolConnectionReserveTimeoutSeconds_Object = MibTableColumn
jdbcConnectionPoolConnectionReserveTimeoutSeconds = _JdbcConnectionPoolConnectionReserveTimeoutSeconds_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 102),
    _JdbcConnectionPoolConnectionReserveTimeoutSeconds_Type()
)
jdbcConnectionPoolConnectionReserveTimeoutSeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolConnectionReserveTimeoutSeconds.setStatus("current")
_JdbcConnectionPoolHighestNumUnavailable_Type = Integer32
_JdbcConnectionPoolHighestNumUnavailable_Object = MibTableColumn
jdbcConnectionPoolHighestNumUnavailable = _JdbcConnectionPoolHighestNumUnavailable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 103),
    _JdbcConnectionPoolHighestNumUnavailable_Type()
)
jdbcConnectionPoolHighestNumUnavailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolHighestNumUnavailable.setStatus("current")
_JdbcConnectionPoolHighestNumWaiters_Type = Integer32
_JdbcConnectionPoolHighestNumWaiters_Object = MibTableColumn
jdbcConnectionPoolHighestNumWaiters = _JdbcConnectionPoolHighestNumWaiters_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 104),
    _JdbcConnectionPoolHighestNumWaiters_Type()
)
jdbcConnectionPoolHighestNumWaiters.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolHighestNumWaiters.setStatus("current")
_JdbcConnectionPoolInactiveConnectionTimeoutSeconds_Type = Integer32
_JdbcConnectionPoolInactiveConnectionTimeoutSeconds_Object = MibTableColumn
jdbcConnectionPoolInactiveConnectionTimeoutSeconds = _JdbcConnectionPoolInactiveConnectionTimeoutSeconds_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 105),
    _JdbcConnectionPoolInactiveConnectionTimeoutSeconds_Type()
)
jdbcConnectionPoolInactiveConnectionTimeoutSeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolInactiveConnectionTimeoutSeconds.setStatus("current")
_JdbcConnectionPoolTestTableName_Type = DisplayString
_JdbcConnectionPoolTestTableName_Object = MibTableColumn
jdbcConnectionPoolTestTableName = _JdbcConnectionPoolTestTableName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 106),
    _JdbcConnectionPoolTestTableName_Type()
)
jdbcConnectionPoolTestTableName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolTestTableName.setStatus("current")
_JdbcConnectionPoolKeepLogicalConnOpenOnRelease_Type = Integer32
_JdbcConnectionPoolKeepLogicalConnOpenOnRelease_Object = MibTableColumn
jdbcConnectionPoolKeepLogicalConnOpenOnRelease = _JdbcConnectionPoolKeepLogicalConnOpenOnRelease_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 107),
    _JdbcConnectionPoolKeepLogicalConnOpenOnRelease_Type()
)
jdbcConnectionPoolKeepLogicalConnOpenOnRelease.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolKeepLogicalConnOpenOnRelease.setStatus("current")
_JdbcConnectionPoolKeepXAConnTillTxComplete_Type = Integer32
_JdbcConnectionPoolKeepXAConnTillTxComplete_Object = MibTableColumn
jdbcConnectionPoolKeepXAConnTillTxComplete = _JdbcConnectionPoolKeepXAConnTillTxComplete_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 108),
    _JdbcConnectionPoolKeepXAConnTillTxComplete_Type()
)
jdbcConnectionPoolKeepXAConnTillTxComplete.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolKeepXAConnTillTxComplete.setStatus("current")
_JdbcConnectionPoolNewXAConnForCommit_Type = Integer32
_JdbcConnectionPoolNewXAConnForCommit_Object = MibTableColumn
jdbcConnectionPoolNewXAConnForCommit = _JdbcConnectionPoolNewXAConnForCommit_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 109),
    _JdbcConnectionPoolNewXAConnForCommit_Type()
)
jdbcConnectionPoolNewXAConnForCommit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolNewXAConnForCommit.setStatus("current")
_JdbcConnectionPoolShrinkFrequencySeconds_Type = Integer32
_JdbcConnectionPoolShrinkFrequencySeconds_Object = MibTableColumn
jdbcConnectionPoolShrinkFrequencySeconds = _JdbcConnectionPoolShrinkFrequencySeconds_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 110),
    _JdbcConnectionPoolShrinkFrequencySeconds_Type()
)
jdbcConnectionPoolShrinkFrequencySeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolShrinkFrequencySeconds.setStatus("current")
_JdbcConnectionPoolStatementCacheSize_Type = Integer32
_JdbcConnectionPoolStatementCacheSize_Object = MibTableColumn
jdbcConnectionPoolStatementCacheSize = _JdbcConnectionPoolStatementCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 111),
    _JdbcConnectionPoolStatementCacheSize_Type()
)
jdbcConnectionPoolStatementCacheSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolStatementCacheSize.setStatus("current")
_JdbcConnectionPoolStatementCacheType_Type = DisplayString
_JdbcConnectionPoolStatementCacheType_Object = MibTableColumn
jdbcConnectionPoolStatementCacheType = _JdbcConnectionPoolStatementCacheType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 112),
    _JdbcConnectionPoolStatementCacheType_Type()
)
jdbcConnectionPoolStatementCacheType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolStatementCacheType.setStatus("current")
_JdbcConnectionPoolTestConnectionsOnCreate_Type = Integer32
_JdbcConnectionPoolTestConnectionsOnCreate_Object = MibTableColumn
jdbcConnectionPoolTestConnectionsOnCreate = _JdbcConnectionPoolTestConnectionsOnCreate_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 113),
    _JdbcConnectionPoolTestConnectionsOnCreate_Type()
)
jdbcConnectionPoolTestConnectionsOnCreate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolTestConnectionsOnCreate.setStatus("current")
_JdbcConnectionPoolTestFrequencySeconds_Type = Integer32
_JdbcConnectionPoolTestFrequencySeconds_Object = MibTableColumn
jdbcConnectionPoolTestFrequencySeconds = _JdbcConnectionPoolTestFrequencySeconds_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 114),
    _JdbcConnectionPoolTestFrequencySeconds_Type()
)
jdbcConnectionPoolTestFrequencySeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolTestFrequencySeconds.setStatus("current")
_JdbcConnectionPoolXAEndOnlyOnce_Type = Integer32
_JdbcConnectionPoolXAEndOnlyOnce_Object = MibTableColumn
jdbcConnectionPoolXAEndOnlyOnce = _JdbcConnectionPoolXAEndOnlyOnce_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 115),
    _JdbcConnectionPoolXAEndOnlyOnce_Type()
)
jdbcConnectionPoolXAEndOnlyOnce.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolXAEndOnlyOnce.setStatus("current")
_JdbcConnectionPoolConnLeakProfilingEnabled_Type = Integer32
_JdbcConnectionPoolConnLeakProfilingEnabled_Object = MibTableColumn
jdbcConnectionPoolConnLeakProfilingEnabled = _JdbcConnectionPoolConnLeakProfilingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 560, 1, 116),
    _JdbcConnectionPoolConnLeakProfilingEnabled_Type()
)
jdbcConnectionPoolConnLeakProfilingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcConnectionPoolConnLeakProfilingEnabled.setStatus("current")
_JdbcDataSourceTable_Object = MibTable
jdbcDataSourceTable = _JdbcDataSourceTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 570)
)
if mibBuilder.loadTexts:
    jdbcDataSourceTable.setStatus("current")
_JdbcDataSourceEntry_Object = MibTableRow
jdbcDataSourceEntry = _JdbcDataSourceEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 570, 1)
)
jdbcDataSourceEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jdbcDataSourceIndex"),
)
if mibBuilder.loadTexts:
    jdbcDataSourceEntry.setStatus("current")


class _JdbcDataSourceIndex_Type(DisplayString):
    """Custom type jdbcDataSourceIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JdbcDataSourceIndex_Type.__name__ = "DisplayString"
_JdbcDataSourceIndex_Object = MibTableColumn
jdbcDataSourceIndex = _JdbcDataSourceIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 570, 1, 1),
    _JdbcDataSourceIndex_Type()
)
jdbcDataSourceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceIndex.setStatus("current")


class _JdbcDataSourceObjectName_Type(DisplayString):
    """Custom type jdbcDataSourceObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcDataSourceObjectName_Type.__name__ = "DisplayString"
_JdbcDataSourceObjectName_Object = MibTableColumn
jdbcDataSourceObjectName = _JdbcDataSourceObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 570, 1, 5),
    _JdbcDataSourceObjectName_Type()
)
jdbcDataSourceObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceObjectName.setStatus("current")


class _JdbcDataSourceType_Type(DisplayString):
    """Custom type jdbcDataSourceType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JdbcDataSourceType_Type.__name__ = "DisplayString"
_JdbcDataSourceType_Object = MibTableColumn
jdbcDataSourceType = _JdbcDataSourceType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 570, 1, 10),
    _JdbcDataSourceType_Type()
)
jdbcDataSourceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceType.setStatus("current")


class _JdbcDataSourceName_Type(DisplayString):
    """Custom type jdbcDataSourceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JdbcDataSourceName_Type.__name__ = "DisplayString"
_JdbcDataSourceName_Object = MibTableColumn
jdbcDataSourceName = _JdbcDataSourceName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 570, 1, 15),
    _JdbcDataSourceName_Type()
)
jdbcDataSourceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceName.setStatus("current")


class _JdbcDataSourceParent_Type(DisplayString):
    """Custom type jdbcDataSourceParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcDataSourceParent_Type.__name__ = "DisplayString"
_JdbcDataSourceParent_Object = MibTableColumn
jdbcDataSourceParent = _JdbcDataSourceParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 570, 1, 20),
    _JdbcDataSourceParent_Type()
)
jdbcDataSourceParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceParent.setStatus("current")


class _JdbcDataSourceJNDIName_Type(DisplayString):
    """Custom type jdbcDataSourceJNDIName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcDataSourceJNDIName_Type.__name__ = "DisplayString"
_JdbcDataSourceJNDIName_Object = MibTableColumn
jdbcDataSourceJNDIName = _JdbcDataSourceJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 570, 1, 25),
    _JdbcDataSourceJNDIName_Type()
)
jdbcDataSourceJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceJNDIName.setStatus("current")


class _JdbcDataSourcePoolName_Type(DisplayString):
    """Custom type jdbcDataSourcePoolName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JdbcDataSourcePoolName_Type.__name__ = "DisplayString"
_JdbcDataSourcePoolName_Object = MibTableColumn
jdbcDataSourcePoolName = _JdbcDataSourcePoolName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 570, 1, 30),
    _JdbcDataSourcePoolName_Type()
)
jdbcDataSourcePoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourcePoolName.setStatus("current")


class _JdbcDataSourceTargets_Type(DisplayString):
    """Custom type jdbcDataSourceTargets based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JdbcDataSourceTargets_Type.__name__ = "DisplayString"
_JdbcDataSourceTargets_Object = MibTableColumn
jdbcDataSourceTargets = _JdbcDataSourceTargets_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 570, 1, 35),
    _JdbcDataSourceTargets_Type()
)
jdbcDataSourceTargets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceTargets.setStatus("current")


class _JdbcDataSourceRowPrefetchEnabled_Type(Integer32):
    """Custom type jdbcDataSourceRowPrefetchEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_JdbcDataSourceRowPrefetchEnabled_Type.__name__ = "Integer32"
_JdbcDataSourceRowPrefetchEnabled_Object = MibTableColumn
jdbcDataSourceRowPrefetchEnabled = _JdbcDataSourceRowPrefetchEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 570, 1, 40),
    _JdbcDataSourceRowPrefetchEnabled_Type()
)
jdbcDataSourceRowPrefetchEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRowPrefetchEnabled.setStatus("current")
_JdbcDataSourceRowPrefetchSize_Type = Integer32
_JdbcDataSourceRowPrefetchSize_Object = MibTableColumn
jdbcDataSourceRowPrefetchSize = _JdbcDataSourceRowPrefetchSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 570, 1, 45),
    _JdbcDataSourceRowPrefetchSize_Type()
)
jdbcDataSourceRowPrefetchSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceRowPrefetchSize.setStatus("current")
_JdbcDataSourceStreamChunkSize_Type = Integer32
_JdbcDataSourceStreamChunkSize_Object = MibTableColumn
jdbcDataSourceStreamChunkSize = _JdbcDataSourceStreamChunkSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 570, 1, 50),
    _JdbcDataSourceStreamChunkSize_Type()
)
jdbcDataSourceStreamChunkSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceStreamChunkSize.setStatus("current")
_JdbcDataSourceFactoryTable_Object = MibTable
jdbcDataSourceFactoryTable = _JdbcDataSourceFactoryTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 575)
)
if mibBuilder.loadTexts:
    jdbcDataSourceFactoryTable.setStatus("current")
_JdbcDataSourceFactoryEntry_Object = MibTableRow
jdbcDataSourceFactoryEntry = _JdbcDataSourceFactoryEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 575, 1)
)
jdbcDataSourceFactoryEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jdbcDataSourceFactoryIndex"),
)
if mibBuilder.loadTexts:
    jdbcDataSourceFactoryEntry.setStatus("current")


class _JdbcDataSourceFactoryIndex_Type(DisplayString):
    """Custom type jdbcDataSourceFactoryIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JdbcDataSourceFactoryIndex_Type.__name__ = "DisplayString"
_JdbcDataSourceFactoryIndex_Object = MibTableColumn
jdbcDataSourceFactoryIndex = _JdbcDataSourceFactoryIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 575, 1, 1),
    _JdbcDataSourceFactoryIndex_Type()
)
jdbcDataSourceFactoryIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceFactoryIndex.setStatus("current")


class _JdbcDataSourceFactoryObjectName_Type(DisplayString):
    """Custom type jdbcDataSourceFactoryObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcDataSourceFactoryObjectName_Type.__name__ = "DisplayString"
_JdbcDataSourceFactoryObjectName_Object = MibTableColumn
jdbcDataSourceFactoryObjectName = _JdbcDataSourceFactoryObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 575, 1, 5),
    _JdbcDataSourceFactoryObjectName_Type()
)
jdbcDataSourceFactoryObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceFactoryObjectName.setStatus("current")


class _JdbcDataSourceFactoryType_Type(DisplayString):
    """Custom type jdbcDataSourceFactoryType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JdbcDataSourceFactoryType_Type.__name__ = "DisplayString"
_JdbcDataSourceFactoryType_Object = MibTableColumn
jdbcDataSourceFactoryType = _JdbcDataSourceFactoryType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 575, 1, 10),
    _JdbcDataSourceFactoryType_Type()
)
jdbcDataSourceFactoryType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceFactoryType.setStatus("current")


class _JdbcDataSourceFactoryName_Type(DisplayString):
    """Custom type jdbcDataSourceFactoryName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JdbcDataSourceFactoryName_Type.__name__ = "DisplayString"
_JdbcDataSourceFactoryName_Object = MibTableColumn
jdbcDataSourceFactoryName = _JdbcDataSourceFactoryName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 575, 1, 15),
    _JdbcDataSourceFactoryName_Type()
)
jdbcDataSourceFactoryName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceFactoryName.setStatus("current")


class _JdbcDataSourceFactoryParent_Type(DisplayString):
    """Custom type jdbcDataSourceFactoryParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcDataSourceFactoryParent_Type.__name__ = "DisplayString"
_JdbcDataSourceFactoryParent_Object = MibTableColumn
jdbcDataSourceFactoryParent = _JdbcDataSourceFactoryParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 575, 1, 20),
    _JdbcDataSourceFactoryParent_Type()
)
jdbcDataSourceFactoryParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceFactoryParent.setStatus("current")


class _JdbcDataSourceFactoryDriverClassName_Type(DisplayString):
    """Custom type jdbcDataSourceFactoryDriverClassName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcDataSourceFactoryDriverClassName_Type.__name__ = "DisplayString"
_JdbcDataSourceFactoryDriverClassName_Object = MibTableColumn
jdbcDataSourceFactoryDriverClassName = _JdbcDataSourceFactoryDriverClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 575, 1, 25),
    _JdbcDataSourceFactoryDriverClassName_Type()
)
jdbcDataSourceFactoryDriverClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceFactoryDriverClassName.setStatus("current")


class _JdbcDataSourceFactoryFactoryName_Type(DisplayString):
    """Custom type jdbcDataSourceFactoryFactoryName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcDataSourceFactoryFactoryName_Type.__name__ = "DisplayString"
_JdbcDataSourceFactoryFactoryName_Object = MibTableColumn
jdbcDataSourceFactoryFactoryName = _JdbcDataSourceFactoryFactoryName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 575, 1, 30),
    _JdbcDataSourceFactoryFactoryName_Type()
)
jdbcDataSourceFactoryFactoryName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceFactoryFactoryName.setStatus("current")


class _JdbcDataSourceFactoryURL_Type(DisplayString):
    """Custom type jdbcDataSourceFactoryURL based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcDataSourceFactoryURL_Type.__name__ = "DisplayString"
_JdbcDataSourceFactoryURL_Object = MibTableColumn
jdbcDataSourceFactoryURL = _JdbcDataSourceFactoryURL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 575, 1, 35),
    _JdbcDataSourceFactoryURL_Type()
)
jdbcDataSourceFactoryURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceFactoryURL.setStatus("current")


class _JdbcDataSourceFactoryUserName_Type(DisplayString):
    """Custom type jdbcDataSourceFactoryUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcDataSourceFactoryUserName_Type.__name__ = "DisplayString"
_JdbcDataSourceFactoryUserName_Object = MibTableColumn
jdbcDataSourceFactoryUserName = _JdbcDataSourceFactoryUserName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 575, 1, 40),
    _JdbcDataSourceFactoryUserName_Type()
)
jdbcDataSourceFactoryUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceFactoryUserName.setStatus("current")
_JdbcMultiPoolTable_Object = MibTable
jdbcMultiPoolTable = _JdbcMultiPoolTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 580)
)
if mibBuilder.loadTexts:
    jdbcMultiPoolTable.setStatus("current")
_JdbcMultiPoolEntry_Object = MibTableRow
jdbcMultiPoolEntry = _JdbcMultiPoolEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 580, 1)
)
jdbcMultiPoolEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jdbcMultiPoolIndex"),
)
if mibBuilder.loadTexts:
    jdbcMultiPoolEntry.setStatus("current")


class _JdbcMultiPoolIndex_Type(DisplayString):
    """Custom type jdbcMultiPoolIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JdbcMultiPoolIndex_Type.__name__ = "DisplayString"
_JdbcMultiPoolIndex_Object = MibTableColumn
jdbcMultiPoolIndex = _JdbcMultiPoolIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 580, 1, 1),
    _JdbcMultiPoolIndex_Type()
)
jdbcMultiPoolIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcMultiPoolIndex.setStatus("current")


class _JdbcMultiPoolObjectName_Type(DisplayString):
    """Custom type jdbcMultiPoolObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcMultiPoolObjectName_Type.__name__ = "DisplayString"
_JdbcMultiPoolObjectName_Object = MibTableColumn
jdbcMultiPoolObjectName = _JdbcMultiPoolObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 580, 1, 5),
    _JdbcMultiPoolObjectName_Type()
)
jdbcMultiPoolObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcMultiPoolObjectName.setStatus("current")


class _JdbcMultiPoolType_Type(DisplayString):
    """Custom type jdbcMultiPoolType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JdbcMultiPoolType_Type.__name__ = "DisplayString"
_JdbcMultiPoolType_Object = MibTableColumn
jdbcMultiPoolType = _JdbcMultiPoolType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 580, 1, 10),
    _JdbcMultiPoolType_Type()
)
jdbcMultiPoolType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcMultiPoolType.setStatus("current")


class _JdbcMultiPoolName_Type(DisplayString):
    """Custom type jdbcMultiPoolName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JdbcMultiPoolName_Type.__name__ = "DisplayString"
_JdbcMultiPoolName_Object = MibTableColumn
jdbcMultiPoolName = _JdbcMultiPoolName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 580, 1, 15),
    _JdbcMultiPoolName_Type()
)
jdbcMultiPoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcMultiPoolName.setStatus("current")


class _JdbcMultiPoolParent_Type(DisplayString):
    """Custom type jdbcMultiPoolParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcMultiPoolParent_Type.__name__ = "DisplayString"
_JdbcMultiPoolParent_Object = MibTableColumn
jdbcMultiPoolParent = _JdbcMultiPoolParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 580, 1, 20),
    _JdbcMultiPoolParent_Type()
)
jdbcMultiPoolParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcMultiPoolParent.setStatus("current")


class _JdbcMultiPoolACLName_Type(DisplayString):
    """Custom type jdbcMultiPoolACLName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_JdbcMultiPoolACLName_Type.__name__ = "DisplayString"
_JdbcMultiPoolACLName_Object = MibTableColumn
jdbcMultiPoolACLName = _JdbcMultiPoolACLName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 580, 1, 25),
    _JdbcMultiPoolACLName_Type()
)
jdbcMultiPoolACLName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcMultiPoolACLName.setStatus("current")


class _JdbcMultiPoolPoolList_Type(DisplayString):
    """Custom type jdbcMultiPoolPoolList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JdbcMultiPoolPoolList_Type.__name__ = "DisplayString"
_JdbcMultiPoolPoolList_Object = MibTableColumn
jdbcMultiPoolPoolList = _JdbcMultiPoolPoolList_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 580, 1, 30),
    _JdbcMultiPoolPoolList_Type()
)
jdbcMultiPoolPoolList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcMultiPoolPoolList.setStatus("current")


class _JdbcMultiPoolLoadBalance_Type(Integer32):
    """Custom type jdbcMultiPoolLoadBalance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_JdbcMultiPoolLoadBalance_Type.__name__ = "Integer32"
_JdbcMultiPoolLoadBalance_Object = MibTableColumn
jdbcMultiPoolLoadBalance = _JdbcMultiPoolLoadBalance_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 580, 1, 35),
    _JdbcMultiPoolLoadBalance_Type()
)
jdbcMultiPoolLoadBalance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcMultiPoolLoadBalance.setStatus("current")


class _JdbcMultiPoolHighAvail_Type(Integer32):
    """Custom type jdbcMultiPoolHighAvail based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_JdbcMultiPoolHighAvail_Type.__name__ = "Integer32"
_JdbcMultiPoolHighAvail_Object = MibTableColumn
jdbcMultiPoolHighAvail = _JdbcMultiPoolHighAvail_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 580, 1, 40),
    _JdbcMultiPoolHighAvail_Type()
)
jdbcMultiPoolHighAvail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcMultiPoolHighAvail.setStatus("current")


class _JdbcMultiPoolTargets_Type(DisplayString):
    """Custom type jdbcMultiPoolTargets based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JdbcMultiPoolTargets_Type.__name__ = "DisplayString"
_JdbcMultiPoolTargets_Object = MibTableColumn
jdbcMultiPoolTargets = _JdbcMultiPoolTargets_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 580, 1, 45),
    _JdbcMultiPoolTargets_Type()
)
jdbcMultiPoolTargets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcMultiPoolTargets.setStatus("current")
_JdbcTxDataSourceTable_Object = MibTable
jdbcTxDataSourceTable = _JdbcTxDataSourceTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 590)
)
if mibBuilder.loadTexts:
    jdbcTxDataSourceTable.setStatus("current")
_JdbcTxDataSourceEntry_Object = MibTableRow
jdbcTxDataSourceEntry = _JdbcTxDataSourceEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 590, 1)
)
jdbcTxDataSourceEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jdbcTxDataSourceIndex"),
)
if mibBuilder.loadTexts:
    jdbcTxDataSourceEntry.setStatus("current")


class _JdbcTxDataSourceIndex_Type(DisplayString):
    """Custom type jdbcTxDataSourceIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JdbcTxDataSourceIndex_Type.__name__ = "DisplayString"
_JdbcTxDataSourceIndex_Object = MibTableColumn
jdbcTxDataSourceIndex = _JdbcTxDataSourceIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 590, 1, 1),
    _JdbcTxDataSourceIndex_Type()
)
jdbcTxDataSourceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcTxDataSourceIndex.setStatus("current")


class _JdbcTxDataSourceObjectName_Type(DisplayString):
    """Custom type jdbcTxDataSourceObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcTxDataSourceObjectName_Type.__name__ = "DisplayString"
_JdbcTxDataSourceObjectName_Object = MibTableColumn
jdbcTxDataSourceObjectName = _JdbcTxDataSourceObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 590, 1, 5),
    _JdbcTxDataSourceObjectName_Type()
)
jdbcTxDataSourceObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcTxDataSourceObjectName.setStatus("current")


class _JdbcTxDataSourceType_Type(DisplayString):
    """Custom type jdbcTxDataSourceType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JdbcTxDataSourceType_Type.__name__ = "DisplayString"
_JdbcTxDataSourceType_Object = MibTableColumn
jdbcTxDataSourceType = _JdbcTxDataSourceType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 590, 1, 10),
    _JdbcTxDataSourceType_Type()
)
jdbcTxDataSourceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcTxDataSourceType.setStatus("current")


class _JdbcTxDataSourceName_Type(DisplayString):
    """Custom type jdbcTxDataSourceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JdbcTxDataSourceName_Type.__name__ = "DisplayString"
_JdbcTxDataSourceName_Object = MibTableColumn
jdbcTxDataSourceName = _JdbcTxDataSourceName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 590, 1, 15),
    _JdbcTxDataSourceName_Type()
)
jdbcTxDataSourceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcTxDataSourceName.setStatus("current")


class _JdbcTxDataSourceParent_Type(DisplayString):
    """Custom type jdbcTxDataSourceParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcTxDataSourceParent_Type.__name__ = "DisplayString"
_JdbcTxDataSourceParent_Object = MibTableColumn
jdbcTxDataSourceParent = _JdbcTxDataSourceParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 590, 1, 20),
    _JdbcTxDataSourceParent_Type()
)
jdbcTxDataSourceParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcTxDataSourceParent.setStatus("current")


class _JdbcTxDataSourceJNDIName_Type(DisplayString):
    """Custom type jdbcTxDataSourceJNDIName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JdbcTxDataSourceJNDIName_Type.__name__ = "DisplayString"
_JdbcTxDataSourceJNDIName_Object = MibTableColumn
jdbcTxDataSourceJNDIName = _JdbcTxDataSourceJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 590, 1, 25),
    _JdbcTxDataSourceJNDIName_Type()
)
jdbcTxDataSourceJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcTxDataSourceJNDIName.setStatus("current")


class _JdbcTxDataSourcePoolName_Type(DisplayString):
    """Custom type jdbcTxDataSourcePoolName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JdbcTxDataSourcePoolName_Type.__name__ = "DisplayString"
_JdbcTxDataSourcePoolName_Object = MibTableColumn
jdbcTxDataSourcePoolName = _JdbcTxDataSourcePoolName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 590, 1, 30),
    _JdbcTxDataSourcePoolName_Type()
)
jdbcTxDataSourcePoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcTxDataSourcePoolName.setStatus("current")


class _JdbcTxDataSourceEnableTwoPhaseCommit_Type(Integer32):
    """Custom type jdbcTxDataSourceEnableTwoPhaseCommit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_JdbcTxDataSourceEnableTwoPhaseCommit_Type.__name__ = "Integer32"
_JdbcTxDataSourceEnableTwoPhaseCommit_Object = MibTableColumn
jdbcTxDataSourceEnableTwoPhaseCommit = _JdbcTxDataSourceEnableTwoPhaseCommit_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 590, 1, 35),
    _JdbcTxDataSourceEnableTwoPhaseCommit_Type()
)
jdbcTxDataSourceEnableTwoPhaseCommit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcTxDataSourceEnableTwoPhaseCommit.setStatus("current")


class _JdbcTxDataSourceTargets_Type(DisplayString):
    """Custom type jdbcTxDataSourceTargets based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JdbcTxDataSourceTargets_Type.__name__ = "DisplayString"
_JdbcTxDataSourceTargets_Object = MibTableColumn
jdbcTxDataSourceTargets = _JdbcTxDataSourceTargets_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 590, 1, 40),
    _JdbcTxDataSourceTargets_Type()
)
jdbcTxDataSourceTargets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcTxDataSourceTargets.setStatus("current")


class _JdbcTxDataSourceRowPrefetchEnabled_Type(Integer32):
    """Custom type jdbcTxDataSourceRowPrefetchEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_JdbcTxDataSourceRowPrefetchEnabled_Type.__name__ = "Integer32"
_JdbcTxDataSourceRowPrefetchEnabled_Object = MibTableColumn
jdbcTxDataSourceRowPrefetchEnabled = _JdbcTxDataSourceRowPrefetchEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 590, 1, 45),
    _JdbcTxDataSourceRowPrefetchEnabled_Type()
)
jdbcTxDataSourceRowPrefetchEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcTxDataSourceRowPrefetchEnabled.setStatus("current")
_JdbcTxDataSourceRowPrefetchSize_Type = Integer32
_JdbcTxDataSourceRowPrefetchSize_Object = MibTableColumn
jdbcTxDataSourceRowPrefetchSize = _JdbcTxDataSourceRowPrefetchSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 590, 1, 50),
    _JdbcTxDataSourceRowPrefetchSize_Type()
)
jdbcTxDataSourceRowPrefetchSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcTxDataSourceRowPrefetchSize.setStatus("current")
_JdbcTxDataSourceStreamChunkSize_Type = Integer32
_JdbcTxDataSourceStreamChunkSize_Object = MibTableColumn
jdbcTxDataSourceStreamChunkSize = _JdbcTxDataSourceStreamChunkSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 590, 1, 55),
    _JdbcTxDataSourceStreamChunkSize_Type()
)
jdbcTxDataSourceStreamChunkSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcTxDataSourceStreamChunkSize.setStatus("current")
_JmsBridgeDestinationTable_Object = MibTable
jmsBridgeDestinationTable = _JmsBridgeDestinationTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 595)
)
if mibBuilder.loadTexts:
    jmsBridgeDestinationTable.setStatus("current")
_JmsBridgeDestinationEntry_Object = MibTableRow
jmsBridgeDestinationEntry = _JmsBridgeDestinationEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 595, 1)
)
jmsBridgeDestinationEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsBridgeDestinationIndex"),
)
if mibBuilder.loadTexts:
    jmsBridgeDestinationEntry.setStatus("current")


class _JmsBridgeDestinationIndex_Type(DisplayString):
    """Custom type jmsBridgeDestinationIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsBridgeDestinationIndex_Type.__name__ = "DisplayString"
_JmsBridgeDestinationIndex_Object = MibTableColumn
jmsBridgeDestinationIndex = _JmsBridgeDestinationIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 595, 1, 1),
    _JmsBridgeDestinationIndex_Type()
)
jmsBridgeDestinationIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsBridgeDestinationIndex.setStatus("current")


class _JmsBridgeDestinationObjectName_Type(DisplayString):
    """Custom type jmsBridgeDestinationObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsBridgeDestinationObjectName_Type.__name__ = "DisplayString"
_JmsBridgeDestinationObjectName_Object = MibTableColumn
jmsBridgeDestinationObjectName = _JmsBridgeDestinationObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 595, 1, 5),
    _JmsBridgeDestinationObjectName_Type()
)
jmsBridgeDestinationObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsBridgeDestinationObjectName.setStatus("current")


class _JmsBridgeDestinationType_Type(DisplayString):
    """Custom type jmsBridgeDestinationType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsBridgeDestinationType_Type.__name__ = "DisplayString"
_JmsBridgeDestinationType_Object = MibTableColumn
jmsBridgeDestinationType = _JmsBridgeDestinationType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 595, 1, 10),
    _JmsBridgeDestinationType_Type()
)
jmsBridgeDestinationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsBridgeDestinationType.setStatus("current")


class _JmsBridgeDestinationName_Type(DisplayString):
    """Custom type jmsBridgeDestinationName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsBridgeDestinationName_Type.__name__ = "DisplayString"
_JmsBridgeDestinationName_Object = MibTableColumn
jmsBridgeDestinationName = _JmsBridgeDestinationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 595, 1, 15),
    _JmsBridgeDestinationName_Type()
)
jmsBridgeDestinationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsBridgeDestinationName.setStatus("current")


class _JmsBridgeDestinationParent_Type(DisplayString):
    """Custom type jmsBridgeDestinationParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsBridgeDestinationParent_Type.__name__ = "DisplayString"
_JmsBridgeDestinationParent_Object = MibTableColumn
jmsBridgeDestinationParent = _JmsBridgeDestinationParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 595, 1, 20),
    _JmsBridgeDestinationParent_Type()
)
jmsBridgeDestinationParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsBridgeDestinationParent.setStatus("current")


class _JmsBridgeDestinationConnectionFactoryJNDIName_Type(DisplayString):
    """Custom type jmsBridgeDestinationConnectionFactoryJNDIName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_JmsBridgeDestinationConnectionFactoryJNDIName_Type.__name__ = "DisplayString"
_JmsBridgeDestinationConnectionFactoryJNDIName_Object = MibTableColumn
jmsBridgeDestinationConnectionFactoryJNDIName = _JmsBridgeDestinationConnectionFactoryJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 595, 1, 25),
    _JmsBridgeDestinationConnectionFactoryJNDIName_Type()
)
jmsBridgeDestinationConnectionFactoryJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsBridgeDestinationConnectionFactoryJNDIName.setStatus("current")


class _JmsBridgeDestinationConnectionURL_Type(DisplayString):
    """Custom type jmsBridgeDestinationConnectionURL based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JmsBridgeDestinationConnectionURL_Type.__name__ = "DisplayString"
_JmsBridgeDestinationConnectionURL_Object = MibTableColumn
jmsBridgeDestinationConnectionURL = _JmsBridgeDestinationConnectionURL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 595, 1, 30),
    _JmsBridgeDestinationConnectionURL_Type()
)
jmsBridgeDestinationConnectionURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsBridgeDestinationConnectionURL.setStatus("current")


class _JmsBridgeDestinationDestinationJNDIName_Type(DisplayString):
    """Custom type jmsBridgeDestinationDestinationJNDIName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JmsBridgeDestinationDestinationJNDIName_Type.__name__ = "DisplayString"
_JmsBridgeDestinationDestinationJNDIName_Object = MibTableColumn
jmsBridgeDestinationDestinationJNDIName = _JmsBridgeDestinationDestinationJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 595, 1, 35),
    _JmsBridgeDestinationDestinationJNDIName_Type()
)
jmsBridgeDestinationDestinationJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsBridgeDestinationDestinationJNDIName.setStatus("current")


class _JmsBridgeDestinationDestinationType_Type(DisplayString):
    """Custom type jmsBridgeDestinationDestinationType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JmsBridgeDestinationDestinationType_Type.__name__ = "DisplayString"
_JmsBridgeDestinationDestinationType_Object = MibTableColumn
jmsBridgeDestinationDestinationType = _JmsBridgeDestinationDestinationType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 595, 1, 40),
    _JmsBridgeDestinationDestinationType_Type()
)
jmsBridgeDestinationDestinationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsBridgeDestinationDestinationType.setStatus("current")


class _JmsBridgeDestinationInitialContextFactory_Type(DisplayString):
    """Custom type jmsBridgeDestinationInitialContextFactory based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JmsBridgeDestinationInitialContextFactory_Type.__name__ = "DisplayString"
_JmsBridgeDestinationInitialContextFactory_Object = MibTableColumn
jmsBridgeDestinationInitialContextFactory = _JmsBridgeDestinationInitialContextFactory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 595, 1, 45),
    _JmsBridgeDestinationInitialContextFactory_Type()
)
jmsBridgeDestinationInitialContextFactory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsBridgeDestinationInitialContextFactory.setStatus("current")
_JmsBridgeDestinationAdapterJNDIName_Type = OctetString
_JmsBridgeDestinationAdapterJNDIName_Object = MibTableColumn
jmsBridgeDestinationAdapterJNDIName = _JmsBridgeDestinationAdapterJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 595, 1, 46),
    _JmsBridgeDestinationAdapterJNDIName_Type()
)
jmsBridgeDestinationAdapterJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsBridgeDestinationAdapterJNDIName.setStatus("current")
_JmsBridgeDestinationClasspath_Type = OctetString
_JmsBridgeDestinationClasspath_Object = MibTableColumn
jmsBridgeDestinationClasspath = _JmsBridgeDestinationClasspath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 595, 1, 47),
    _JmsBridgeDestinationClasspath_Type()
)
jmsBridgeDestinationClasspath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsBridgeDestinationClasspath.setStatus("current")
_JmsBridgeDestinationUserName_Type = OctetString
_JmsBridgeDestinationUserName_Object = MibTableColumn
jmsBridgeDestinationUserName = _JmsBridgeDestinationUserName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 595, 1, 48),
    _JmsBridgeDestinationUserName_Type()
)
jmsBridgeDestinationUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsBridgeDestinationUserName.setStatus("current")
_JmsConnectionConsumerTable_Object = MibTable
jmsConnectionConsumerTable = _JmsConnectionConsumerTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 600)
)
if mibBuilder.loadTexts:
    jmsConnectionConsumerTable.setStatus("current")
_JmsConnectionConsumerEntry_Object = MibTableRow
jmsConnectionConsumerEntry = _JmsConnectionConsumerEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 600, 1)
)
jmsConnectionConsumerEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsConnectionConsumerIndex"),
)
if mibBuilder.loadTexts:
    jmsConnectionConsumerEntry.setStatus("current")


class _JmsConnectionConsumerIndex_Type(DisplayString):
    """Custom type jmsConnectionConsumerIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsConnectionConsumerIndex_Type.__name__ = "DisplayString"
_JmsConnectionConsumerIndex_Object = MibTableColumn
jmsConnectionConsumerIndex = _JmsConnectionConsumerIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 600, 1, 1),
    _JmsConnectionConsumerIndex_Type()
)
jmsConnectionConsumerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionConsumerIndex.setStatus("current")


class _JmsConnectionConsumerObjectName_Type(DisplayString):
    """Custom type jmsConnectionConsumerObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsConnectionConsumerObjectName_Type.__name__ = "DisplayString"
_JmsConnectionConsumerObjectName_Object = MibTableColumn
jmsConnectionConsumerObjectName = _JmsConnectionConsumerObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 600, 1, 5),
    _JmsConnectionConsumerObjectName_Type()
)
jmsConnectionConsumerObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionConsumerObjectName.setStatus("current")


class _JmsConnectionConsumerType_Type(DisplayString):
    """Custom type jmsConnectionConsumerType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsConnectionConsumerType_Type.__name__ = "DisplayString"
_JmsConnectionConsumerType_Object = MibTableColumn
jmsConnectionConsumerType = _JmsConnectionConsumerType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 600, 1, 10),
    _JmsConnectionConsumerType_Type()
)
jmsConnectionConsumerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionConsumerType.setStatus("current")


class _JmsConnectionConsumerName_Type(DisplayString):
    """Custom type jmsConnectionConsumerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsConnectionConsumerName_Type.__name__ = "DisplayString"
_JmsConnectionConsumerName_Object = MibTableColumn
jmsConnectionConsumerName = _JmsConnectionConsumerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 600, 1, 15),
    _JmsConnectionConsumerName_Type()
)
jmsConnectionConsumerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionConsumerName.setStatus("current")


class _JmsConnectionConsumerParent_Type(DisplayString):
    """Custom type jmsConnectionConsumerParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsConnectionConsumerParent_Type.__name__ = "DisplayString"
_JmsConnectionConsumerParent_Object = MibTableColumn
jmsConnectionConsumerParent = _JmsConnectionConsumerParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 600, 1, 20),
    _JmsConnectionConsumerParent_Type()
)
jmsConnectionConsumerParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionConsumerParent.setStatus("current")
_JmsConnectionConsumerMessagesMaximum_Type = Integer32
_JmsConnectionConsumerMessagesMaximum_Object = MibTableColumn
jmsConnectionConsumerMessagesMaximum = _JmsConnectionConsumerMessagesMaximum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 600, 1, 25),
    _JmsConnectionConsumerMessagesMaximum_Type()
)
jmsConnectionConsumerMessagesMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionConsumerMessagesMaximum.setStatus("current")


class _JmsConnectionConsumerSelector_Type(DisplayString):
    """Custom type jmsConnectionConsumerSelector based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsConnectionConsumerSelector_Type.__name__ = "DisplayString"
_JmsConnectionConsumerSelector_Object = MibTableColumn
jmsConnectionConsumerSelector = _JmsConnectionConsumerSelector_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 600, 1, 30),
    _JmsConnectionConsumerSelector_Type()
)
jmsConnectionConsumerSelector.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionConsumerSelector.setStatus("current")


class _JmsConnectionConsumerDestination_Type(DisplayString):
    """Custom type jmsConnectionConsumerDestination based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsConnectionConsumerDestination_Type.__name__ = "DisplayString"
_JmsConnectionConsumerDestination_Object = MibTableColumn
jmsConnectionConsumerDestination = _JmsConnectionConsumerDestination_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 600, 1, 35),
    _JmsConnectionConsumerDestination_Type()
)
jmsConnectionConsumerDestination.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionConsumerDestination.setStatus("current")
_JmsConnectionFactoryTable_Object = MibTable
jmsConnectionFactoryTable = _JmsConnectionFactoryTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 610)
)
if mibBuilder.loadTexts:
    jmsConnectionFactoryTable.setStatus("current")
_JmsConnectionFactoryEntry_Object = MibTableRow
jmsConnectionFactoryEntry = _JmsConnectionFactoryEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 610, 1)
)
jmsConnectionFactoryEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsConnectionFactoryIndex"),
)
if mibBuilder.loadTexts:
    jmsConnectionFactoryEntry.setStatus("current")


class _JmsConnectionFactoryIndex_Type(DisplayString):
    """Custom type jmsConnectionFactoryIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsConnectionFactoryIndex_Type.__name__ = "DisplayString"
_JmsConnectionFactoryIndex_Object = MibTableColumn
jmsConnectionFactoryIndex = _JmsConnectionFactoryIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 610, 1, 1),
    _JmsConnectionFactoryIndex_Type()
)
jmsConnectionFactoryIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionFactoryIndex.setStatus("current")


class _JmsConnectionFactoryObjectName_Type(DisplayString):
    """Custom type jmsConnectionFactoryObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsConnectionFactoryObjectName_Type.__name__ = "DisplayString"
_JmsConnectionFactoryObjectName_Object = MibTableColumn
jmsConnectionFactoryObjectName = _JmsConnectionFactoryObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 610, 1, 5),
    _JmsConnectionFactoryObjectName_Type()
)
jmsConnectionFactoryObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionFactoryObjectName.setStatus("current")


class _JmsConnectionFactoryType_Type(DisplayString):
    """Custom type jmsConnectionFactoryType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsConnectionFactoryType_Type.__name__ = "DisplayString"
_JmsConnectionFactoryType_Object = MibTableColumn
jmsConnectionFactoryType = _JmsConnectionFactoryType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 610, 1, 10),
    _JmsConnectionFactoryType_Type()
)
jmsConnectionFactoryType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionFactoryType.setStatus("current")


class _JmsConnectionFactoryName_Type(DisplayString):
    """Custom type jmsConnectionFactoryName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsConnectionFactoryName_Type.__name__ = "DisplayString"
_JmsConnectionFactoryName_Object = MibTableColumn
jmsConnectionFactoryName = _JmsConnectionFactoryName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 610, 1, 15),
    _JmsConnectionFactoryName_Type()
)
jmsConnectionFactoryName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionFactoryName.setStatus("current")


class _JmsConnectionFactoryParent_Type(DisplayString):
    """Custom type jmsConnectionFactoryParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsConnectionFactoryParent_Type.__name__ = "DisplayString"
_JmsConnectionFactoryParent_Object = MibTableColumn
jmsConnectionFactoryParent = _JmsConnectionFactoryParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 610, 1, 20),
    _JmsConnectionFactoryParent_Type()
)
jmsConnectionFactoryParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionFactoryParent.setStatus("current")


class _JmsConnectionFactoryJNDIName_Type(DisplayString):
    """Custom type jmsConnectionFactoryJNDIName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsConnectionFactoryJNDIName_Type.__name__ = "DisplayString"
_JmsConnectionFactoryJNDIName_Object = MibTableColumn
jmsConnectionFactoryJNDIName = _JmsConnectionFactoryJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 610, 1, 25),
    _JmsConnectionFactoryJNDIName_Type()
)
jmsConnectionFactoryJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionFactoryJNDIName.setStatus("current")


class _JmsConnectionFactoryClientId_Type(DisplayString):
    """Custom type jmsConnectionFactoryClientId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsConnectionFactoryClientId_Type.__name__ = "DisplayString"
_JmsConnectionFactoryClientId_Object = MibTableColumn
jmsConnectionFactoryClientId = _JmsConnectionFactoryClientId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 610, 1, 30),
    _JmsConnectionFactoryClientId_Type()
)
jmsConnectionFactoryClientId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionFactoryClientId.setStatus("current")
_JmsConnectionFactoryDefaultPriority_Type = Integer32
_JmsConnectionFactoryDefaultPriority_Object = MibTableColumn
jmsConnectionFactoryDefaultPriority = _JmsConnectionFactoryDefaultPriority_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 610, 1, 35),
    _JmsConnectionFactoryDefaultPriority_Type()
)
jmsConnectionFactoryDefaultPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionFactoryDefaultPriority.setStatus("current")
_JmsConnectionFactoryDefaultTimeToLive_Type = Counter64
_JmsConnectionFactoryDefaultTimeToLive_Object = MibTableColumn
jmsConnectionFactoryDefaultTimeToLive = _JmsConnectionFactoryDefaultTimeToLive_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 610, 1, 40),
    _JmsConnectionFactoryDefaultTimeToLive_Type()
)
jmsConnectionFactoryDefaultTimeToLive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionFactoryDefaultTimeToLive.setStatus("current")


class _JmsConnectionFactoryDefaultDeliveryMode_Type(DisplayString):
    """Custom type jmsConnectionFactoryDefaultDeliveryMode based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsConnectionFactoryDefaultDeliveryMode_Type.__name__ = "DisplayString"
_JmsConnectionFactoryDefaultDeliveryMode_Object = MibTableColumn
jmsConnectionFactoryDefaultDeliveryMode = _JmsConnectionFactoryDefaultDeliveryMode_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 610, 1, 45),
    _JmsConnectionFactoryDefaultDeliveryMode_Type()
)
jmsConnectionFactoryDefaultDeliveryMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionFactoryDefaultDeliveryMode.setStatus("current")
_JmsConnectionFactoryTransactionTimeout_Type = Counter64
_JmsConnectionFactoryTransactionTimeout_Object = MibTableColumn
jmsConnectionFactoryTransactionTimeout = _JmsConnectionFactoryTransactionTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 610, 1, 50),
    _JmsConnectionFactoryTransactionTimeout_Type()
)
jmsConnectionFactoryTransactionTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionFactoryTransactionTimeout.setStatus("current")


class _JmsConnectionFactoryUserTransactionsEnabled_Type(Integer32):
    """Custom type jmsConnectionFactoryUserTransactionsEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_JmsConnectionFactoryUserTransactionsEnabled_Type.__name__ = "Integer32"
_JmsConnectionFactoryUserTransactionsEnabled_Object = MibTableColumn
jmsConnectionFactoryUserTransactionsEnabled = _JmsConnectionFactoryUserTransactionsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 610, 1, 55),
    _JmsConnectionFactoryUserTransactionsEnabled_Type()
)
jmsConnectionFactoryUserTransactionsEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionFactoryUserTransactionsEnabled.setStatus("current")


class _JmsConnectionFactoryAllowCloseInOnMessage_Type(Integer32):
    """Custom type jmsConnectionFactoryAllowCloseInOnMessage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_JmsConnectionFactoryAllowCloseInOnMessage_Type.__name__ = "Integer32"
_JmsConnectionFactoryAllowCloseInOnMessage_Object = MibTableColumn
jmsConnectionFactoryAllowCloseInOnMessage = _JmsConnectionFactoryAllowCloseInOnMessage_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 610, 1, 60),
    _JmsConnectionFactoryAllowCloseInOnMessage_Type()
)
jmsConnectionFactoryAllowCloseInOnMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionFactoryAllowCloseInOnMessage.setStatus("current")
_JmsConnectionFactoryMessagesMaximum_Type = Integer32
_JmsConnectionFactoryMessagesMaximum_Object = MibTableColumn
jmsConnectionFactoryMessagesMaximum = _JmsConnectionFactoryMessagesMaximum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 610, 1, 65),
    _JmsConnectionFactoryMessagesMaximum_Type()
)
jmsConnectionFactoryMessagesMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionFactoryMessagesMaximum.setStatus("current")


class _JmsConnectionFactoryOverrunPolicy_Type(DisplayString):
    """Custom type jmsConnectionFactoryOverrunPolicy based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsConnectionFactoryOverrunPolicy_Type.__name__ = "DisplayString"
_JmsConnectionFactoryOverrunPolicy_Object = MibTableColumn
jmsConnectionFactoryOverrunPolicy = _JmsConnectionFactoryOverrunPolicy_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 610, 1, 70),
    _JmsConnectionFactoryOverrunPolicy_Type()
)
jmsConnectionFactoryOverrunPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionFactoryOverrunPolicy.setStatus("current")


class _JmsConnectionFactoryTargets_Type(DisplayString):
    """Custom type jmsConnectionFactoryTargets based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JmsConnectionFactoryTargets_Type.__name__ = "DisplayString"
_JmsConnectionFactoryTargets_Object = MibTableColumn
jmsConnectionFactoryTargets = _JmsConnectionFactoryTargets_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 610, 1, 75),
    _JmsConnectionFactoryTargets_Type()
)
jmsConnectionFactoryTargets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsConnectionFactoryTargets.setStatus("current")
_JmsDestCommonTable_Object = MibTable
jmsDestCommonTable = _JmsDestCommonTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 612)
)
if mibBuilder.loadTexts:
    jmsDestCommonTable.setStatus("current")
_JmsDestCommonEntry_Object = MibTableRow
jmsDestCommonEntry = _JmsDestCommonEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 612, 1)
)
jmsDestCommonEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsDestCommonIndex"),
)
if mibBuilder.loadTexts:
    jmsDestCommonEntry.setStatus("current")


class _JmsDestCommonIndex_Type(DisplayString):
    """Custom type jmsDestCommonIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsDestCommonIndex_Type.__name__ = "DisplayString"
_JmsDestCommonIndex_Object = MibTableColumn
jmsDestCommonIndex = _JmsDestCommonIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 612, 1, 1),
    _JmsDestCommonIndex_Type()
)
jmsDestCommonIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestCommonIndex.setStatus("current")


class _JmsDestCommonObjectName_Type(DisplayString):
    """Custom type jmsDestCommonObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsDestCommonObjectName_Type.__name__ = "DisplayString"
_JmsDestCommonObjectName_Object = MibTableColumn
jmsDestCommonObjectName = _JmsDestCommonObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 612, 1, 5),
    _JmsDestCommonObjectName_Type()
)
jmsDestCommonObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestCommonObjectName.setStatus("current")


class _JmsDestCommonType_Type(DisplayString):
    """Custom type jmsDestCommonType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsDestCommonType_Type.__name__ = "DisplayString"
_JmsDestCommonType_Object = MibTableColumn
jmsDestCommonType = _JmsDestCommonType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 612, 1, 10),
    _JmsDestCommonType_Type()
)
jmsDestCommonType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestCommonType.setStatus("current")


class _JmsDestCommonName_Type(DisplayString):
    """Custom type jmsDestCommonName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsDestCommonName_Type.__name__ = "DisplayString"
_JmsDestCommonName_Object = MibTableColumn
jmsDestCommonName = _JmsDestCommonName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 612, 1, 15),
    _JmsDestCommonName_Type()
)
jmsDestCommonName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestCommonName.setStatus("current")


class _JmsDestCommonParent_Type(DisplayString):
    """Custom type jmsDestCommonParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsDestCommonParent_Type.__name__ = "DisplayString"
_JmsDestCommonParent_Object = MibTableColumn
jmsDestCommonParent = _JmsDestCommonParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 612, 1, 20),
    _JmsDestCommonParent_Type()
)
jmsDestCommonParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestCommonParent.setStatus("current")
_JmsDestCommonBytesMaximum_Type = Integer32
_JmsDestCommonBytesMaximum_Object = MibTableColumn
jmsDestCommonBytesMaximum = _JmsDestCommonBytesMaximum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 612, 1, 25),
    _JmsDestCommonBytesMaximum_Type()
)
jmsDestCommonBytesMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestCommonBytesMaximum.setStatus("current")
_JmsDestCommonBytesThresholdHigh_Type = Integer32
_JmsDestCommonBytesThresholdHigh_Object = MibTableColumn
jmsDestCommonBytesThresholdHigh = _JmsDestCommonBytesThresholdHigh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 612, 1, 30),
    _JmsDestCommonBytesThresholdHigh_Type()
)
jmsDestCommonBytesThresholdHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestCommonBytesThresholdHigh.setStatus("current")
_JmsDestCommonBytesThresholdLow_Type = Integer32
_JmsDestCommonBytesThresholdLow_Object = MibTableColumn
jmsDestCommonBytesThresholdLow = _JmsDestCommonBytesThresholdLow_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 612, 1, 35),
    _JmsDestCommonBytesThresholdLow_Type()
)
jmsDestCommonBytesThresholdLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestCommonBytesThresholdLow.setStatus("current")


class _JmsDestCommonDeliveryModeOverride_Type(DisplayString):
    """Custom type jmsDestCommonDeliveryModeOverride based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsDestCommonDeliveryModeOverride_Type.__name__ = "DisplayString"
_JmsDestCommonDeliveryModeOverride_Object = MibTableColumn
jmsDestCommonDeliveryModeOverride = _JmsDestCommonDeliveryModeOverride_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 612, 1, 40),
    _JmsDestCommonDeliveryModeOverride_Type()
)
jmsDestCommonDeliveryModeOverride.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestCommonDeliveryModeOverride.setStatus("current")
_JmsDestCommonMessagesMaximum_Type = Integer32
_JmsDestCommonMessagesMaximum_Object = MibTableColumn
jmsDestCommonMessagesMaximum = _JmsDestCommonMessagesMaximum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 612, 1, 45),
    _JmsDestCommonMessagesMaximum_Type()
)
jmsDestCommonMessagesMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestCommonMessagesMaximum.setStatus("current")
_JmsDestCommonMessagesThresholdHigh_Type = Integer32
_JmsDestCommonMessagesThresholdHigh_Object = MibTableColumn
jmsDestCommonMessagesThresholdHigh = _JmsDestCommonMessagesThresholdHigh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 612, 1, 50),
    _JmsDestCommonMessagesThresholdHigh_Type()
)
jmsDestCommonMessagesThresholdHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestCommonMessagesThresholdHigh.setStatus("current")
_JmsDestCommonMessagesThresholdLow_Type = Integer32
_JmsDestCommonMessagesThresholdLow_Object = MibTableColumn
jmsDestCommonMessagesThresholdLow = _JmsDestCommonMessagesThresholdLow_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 612, 1, 55),
    _JmsDestCommonMessagesThresholdLow_Type()
)
jmsDestCommonMessagesThresholdLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestCommonMessagesThresholdLow.setStatus("current")
_JmsDestCommonPriorityOverride_Type = Integer32
_JmsDestCommonPriorityOverride_Object = MibTableColumn
jmsDestCommonPriorityOverride = _JmsDestCommonPriorityOverride_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 612, 1, 65),
    _JmsDestCommonPriorityOverride_Type()
)
jmsDestCommonPriorityOverride.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestCommonPriorityOverride.setStatus("current")
_JmsDestCommonRedeliveryDelayOverride_Type = Integer32
_JmsDestCommonRedeliveryDelayOverride_Object = MibTableColumn
jmsDestCommonRedeliveryDelayOverride = _JmsDestCommonRedeliveryDelayOverride_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 612, 1, 70),
    _JmsDestCommonRedeliveryDelayOverride_Type()
)
jmsDestCommonRedeliveryDelayOverride.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestCommonRedeliveryDelayOverride.setStatus("current")
_JmsDestCommonRedeliveryLimit_Type = Integer32
_JmsDestCommonRedeliveryLimit_Object = MibTableColumn
jmsDestCommonRedeliveryLimit = _JmsDestCommonRedeliveryLimit_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 612, 1, 75),
    _JmsDestCommonRedeliveryLimit_Type()
)
jmsDestCommonRedeliveryLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestCommonRedeliveryLimit.setStatus("current")


class _JmsDestCommonTimeToDeliverOverride_Type(DisplayString):
    """Custom type jmsDestCommonTimeToDeliverOverride based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsDestCommonTimeToDeliverOverride_Type.__name__ = "DisplayString"
_JmsDestCommonTimeToDeliverOverride_Object = MibTableColumn
jmsDestCommonTimeToDeliverOverride = _JmsDestCommonTimeToDeliverOverride_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 612, 1, 80),
    _JmsDestCommonTimeToDeliverOverride_Type()
)
jmsDestCommonTimeToDeliverOverride.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestCommonTimeToDeliverOverride.setStatus("current")
_JmsDestCommonTimeToLiveOverride_Type = Integer32
_JmsDestCommonTimeToLiveOverride_Object = MibTableColumn
jmsDestCommonTimeToLiveOverride = _JmsDestCommonTimeToLiveOverride_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 612, 1, 85),
    _JmsDestCommonTimeToLiveOverride_Type()
)
jmsDestCommonTimeToLiveOverride.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestCommonTimeToLiveOverride.setStatus("current")
_JmsDestinationTable_Object = MibTable
jmsDestinationTable = _JmsDestinationTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 615)
)
if mibBuilder.loadTexts:
    jmsDestinationTable.setStatus("current")
_JmsDestinationEntry_Object = MibTableRow
jmsDestinationEntry = _JmsDestinationEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 615, 1)
)
jmsDestinationEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsDestinationIndex"),
)
if mibBuilder.loadTexts:
    jmsDestinationEntry.setStatus("current")


class _JmsDestinationIndex_Type(DisplayString):
    """Custom type jmsDestinationIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsDestinationIndex_Type.__name__ = "DisplayString"
_JmsDestinationIndex_Object = MibTableColumn
jmsDestinationIndex = _JmsDestinationIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 615, 1, 1),
    _JmsDestinationIndex_Type()
)
jmsDestinationIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationIndex.setStatus("current")


class _JmsDestinationObjectName_Type(DisplayString):
    """Custom type jmsDestinationObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsDestinationObjectName_Type.__name__ = "DisplayString"
_JmsDestinationObjectName_Object = MibTableColumn
jmsDestinationObjectName = _JmsDestinationObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 615, 1, 5),
    _JmsDestinationObjectName_Type()
)
jmsDestinationObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationObjectName.setStatus("current")


class _JmsDestinationType_Type(DisplayString):
    """Custom type jmsDestinationType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsDestinationType_Type.__name__ = "DisplayString"
_JmsDestinationType_Object = MibTableColumn
jmsDestinationType = _JmsDestinationType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 615, 1, 10),
    _JmsDestinationType_Type()
)
jmsDestinationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationType.setStatus("current")


class _JmsDestinationName_Type(DisplayString):
    """Custom type jmsDestinationName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsDestinationName_Type.__name__ = "DisplayString"
_JmsDestinationName_Object = MibTableColumn
jmsDestinationName = _JmsDestinationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 615, 1, 15),
    _JmsDestinationName_Type()
)
jmsDestinationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationName.setStatus("current")


class _JmsDestinationParent_Type(DisplayString):
    """Custom type jmsDestinationParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsDestinationParent_Type.__name__ = "DisplayString"
_JmsDestinationParent_Object = MibTableColumn
jmsDestinationParent = _JmsDestinationParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 615, 1, 20),
    _JmsDestinationParent_Type()
)
jmsDestinationParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationParent.setStatus("current")


class _JmsDestinationBytesPagingEnabled_Type(DisplayString):
    """Custom type jmsDestinationBytesPagingEnabled based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsDestinationBytesPagingEnabled_Type.__name__ = "DisplayString"
_JmsDestinationBytesPagingEnabled_Object = MibTableColumn
jmsDestinationBytesPagingEnabled = _JmsDestinationBytesPagingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 615, 1, 25),
    _JmsDestinationBytesPagingEnabled_Type()
)
jmsDestinationBytesPagingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationBytesPagingEnabled.setStatus("current")


class _JmsDestinationJNDIName_Type(DisplayString):
    """Custom type jmsDestinationJNDIName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsDestinationJNDIName_Type.__name__ = "DisplayString"
_JmsDestinationJNDIName_Object = MibTableColumn
jmsDestinationJNDIName = _JmsDestinationJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 615, 1, 30),
    _JmsDestinationJNDIName_Type()
)
jmsDestinationJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationJNDIName.setStatus("current")


class _JmsDestinationMessagesPagingEnabled_Type(DisplayString):
    """Custom type jmsDestinationMessagesPagingEnabled based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsDestinationMessagesPagingEnabled_Type.__name__ = "DisplayString"
_JmsDestinationMessagesPagingEnabled_Object = MibTableColumn
jmsDestinationMessagesPagingEnabled = _JmsDestinationMessagesPagingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 615, 1, 35),
    _JmsDestinationMessagesPagingEnabled_Type()
)
jmsDestinationMessagesPagingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationMessagesPagingEnabled.setStatus("current")


class _JmsDestinationStoreEnabled_Type(DisplayString):
    """Custom type jmsDestinationStoreEnabled based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsDestinationStoreEnabled_Type.__name__ = "DisplayString"
_JmsDestinationStoreEnabled_Object = MibTableColumn
jmsDestinationStoreEnabled = _JmsDestinationStoreEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 615, 1, 40),
    _JmsDestinationStoreEnabled_Type()
)
jmsDestinationStoreEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationStoreEnabled.setStatus("current")


class _JmsDestinationJNDINameReplicated_Type(DisplayString):
    """Custom type jmsDestinationJNDINameReplicated based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsDestinationJNDINameReplicated_Type.__name__ = "DisplayString"
_JmsDestinationJNDINameReplicated_Object = MibTableColumn
jmsDestinationJNDINameReplicated = _JmsDestinationJNDINameReplicated_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 615, 1, 45),
    _JmsDestinationJNDINameReplicated_Type()
)
jmsDestinationJNDINameReplicated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationJNDINameReplicated.setStatus("current")
_JmsDestinationKeyTable_Object = MibTable
jmsDestinationKeyTable = _JmsDestinationKeyTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 620)
)
if mibBuilder.loadTexts:
    jmsDestinationKeyTable.setStatus("current")
_JmsDestinationKeyEntry_Object = MibTableRow
jmsDestinationKeyEntry = _JmsDestinationKeyEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 620, 1)
)
jmsDestinationKeyEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsDestinationKeyIndex"),
)
if mibBuilder.loadTexts:
    jmsDestinationKeyEntry.setStatus("current")


class _JmsDestinationKeyIndex_Type(DisplayString):
    """Custom type jmsDestinationKeyIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsDestinationKeyIndex_Type.__name__ = "DisplayString"
_JmsDestinationKeyIndex_Object = MibTableColumn
jmsDestinationKeyIndex = _JmsDestinationKeyIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 620, 1, 1),
    _JmsDestinationKeyIndex_Type()
)
jmsDestinationKeyIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationKeyIndex.setStatus("current")


class _JmsDestinationKeyObjectName_Type(DisplayString):
    """Custom type jmsDestinationKeyObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsDestinationKeyObjectName_Type.__name__ = "DisplayString"
_JmsDestinationKeyObjectName_Object = MibTableColumn
jmsDestinationKeyObjectName = _JmsDestinationKeyObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 620, 1, 5),
    _JmsDestinationKeyObjectName_Type()
)
jmsDestinationKeyObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationKeyObjectName.setStatus("current")


class _JmsDestinationKeyType_Type(DisplayString):
    """Custom type jmsDestinationKeyType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsDestinationKeyType_Type.__name__ = "DisplayString"
_JmsDestinationKeyType_Object = MibTableColumn
jmsDestinationKeyType = _JmsDestinationKeyType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 620, 1, 10),
    _JmsDestinationKeyType_Type()
)
jmsDestinationKeyType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationKeyType.setStatus("current")


class _JmsDestinationKeyName_Type(DisplayString):
    """Custom type jmsDestinationKeyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsDestinationKeyName_Type.__name__ = "DisplayString"
_JmsDestinationKeyName_Object = MibTableColumn
jmsDestinationKeyName = _JmsDestinationKeyName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 620, 1, 15),
    _JmsDestinationKeyName_Type()
)
jmsDestinationKeyName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationKeyName.setStatus("current")


class _JmsDestinationKeyParent_Type(DisplayString):
    """Custom type jmsDestinationKeyParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsDestinationKeyParent_Type.__name__ = "DisplayString"
_JmsDestinationKeyParent_Object = MibTableColumn
jmsDestinationKeyParent = _JmsDestinationKeyParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 620, 1, 20),
    _JmsDestinationKeyParent_Type()
)
jmsDestinationKeyParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationKeyParent.setStatus("current")


class _JmsDestinationKeyProperty_Type(DisplayString):
    """Custom type jmsDestinationKeyProperty based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsDestinationKeyProperty_Type.__name__ = "DisplayString"
_JmsDestinationKeyProperty_Object = MibTableColumn
jmsDestinationKeyProperty = _JmsDestinationKeyProperty_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 620, 1, 25),
    _JmsDestinationKeyProperty_Type()
)
jmsDestinationKeyProperty.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationKeyProperty.setStatus("current")


class _JmsDestinationKeyKeyType_Type(DisplayString):
    """Custom type jmsDestinationKeyKeyType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_JmsDestinationKeyKeyType_Type.__name__ = "DisplayString"
_JmsDestinationKeyKeyType_Object = MibTableColumn
jmsDestinationKeyKeyType = _JmsDestinationKeyKeyType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 620, 1, 30),
    _JmsDestinationKeyKeyType_Type()
)
jmsDestinationKeyKeyType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationKeyKeyType.setStatus("current")


class _JmsDestinationKeyDirection_Type(DisplayString):
    """Custom type jmsDestinationKeyDirection based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_JmsDestinationKeyDirection_Type.__name__ = "DisplayString"
_JmsDestinationKeyDirection_Object = MibTableColumn
jmsDestinationKeyDirection = _JmsDestinationKeyDirection_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 620, 1, 35),
    _JmsDestinationKeyDirection_Type()
)
jmsDestinationKeyDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDestinationKeyDirection.setStatus("current")
_JmsDistributedQueueTable_Object = MibTable
jmsDistributedQueueTable = _JmsDistributedQueueTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 622)
)
if mibBuilder.loadTexts:
    jmsDistributedQueueTable.setStatus("current")
_JmsDistributedQueueEntry_Object = MibTableRow
jmsDistributedQueueEntry = _JmsDistributedQueueEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 622, 1)
)
jmsDistributedQueueEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsDistributedQueueIndex"),
)
if mibBuilder.loadTexts:
    jmsDistributedQueueEntry.setStatus("current")


class _JmsDistributedQueueIndex_Type(DisplayString):
    """Custom type jmsDistributedQueueIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsDistributedQueueIndex_Type.__name__ = "DisplayString"
_JmsDistributedQueueIndex_Object = MibTableColumn
jmsDistributedQueueIndex = _JmsDistributedQueueIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 622, 1, 1),
    _JmsDistributedQueueIndex_Type()
)
jmsDistributedQueueIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDistributedQueueIndex.setStatus("current")


class _JmsDistributedQueueObjectName_Type(DisplayString):
    """Custom type jmsDistributedQueueObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsDistributedQueueObjectName_Type.__name__ = "DisplayString"
_JmsDistributedQueueObjectName_Object = MibTableColumn
jmsDistributedQueueObjectName = _JmsDistributedQueueObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 622, 1, 5),
    _JmsDistributedQueueObjectName_Type()
)
jmsDistributedQueueObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDistributedQueueObjectName.setStatus("current")


class _JmsDistributedQueueType_Type(DisplayString):
    """Custom type jmsDistributedQueueType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsDistributedQueueType_Type.__name__ = "DisplayString"
_JmsDistributedQueueType_Object = MibTableColumn
jmsDistributedQueueType = _JmsDistributedQueueType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 622, 1, 10),
    _JmsDistributedQueueType_Type()
)
jmsDistributedQueueType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDistributedQueueType.setStatus("current")


class _JmsDistributedQueueName_Type(DisplayString):
    """Custom type jmsDistributedQueueName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsDistributedQueueName_Type.__name__ = "DisplayString"
_JmsDistributedQueueName_Object = MibTableColumn
jmsDistributedQueueName = _JmsDistributedQueueName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 622, 1, 15),
    _JmsDistributedQueueName_Type()
)
jmsDistributedQueueName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDistributedQueueName.setStatus("current")


class _JmsDistributedQueueParent_Type(DisplayString):
    """Custom type jmsDistributedQueueParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsDistributedQueueParent_Type.__name__ = "DisplayString"
_JmsDistributedQueueParent_Object = MibTableColumn
jmsDistributedQueueParent = _JmsDistributedQueueParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 622, 1, 20),
    _JmsDistributedQueueParent_Type()
)
jmsDistributedQueueParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDistributedQueueParent.setStatus("current")
_JmsDistributedQueueForwardDelay_Type = Integer32
_JmsDistributedQueueForwardDelay_Object = MibTableColumn
jmsDistributedQueueForwardDelay = _JmsDistributedQueueForwardDelay_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 622, 1, 25),
    _JmsDistributedQueueForwardDelay_Type()
)
jmsDistributedQueueForwardDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDistributedQueueForwardDelay.setStatus("current")
_JmsDistributedDestinationTable_Object = MibTable
jmsDistributedDestinationTable = _JmsDistributedDestinationTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 623)
)
if mibBuilder.loadTexts:
    jmsDistributedDestinationTable.setStatus("current")
_JmsDistributedDestinationEntry_Object = MibTableRow
jmsDistributedDestinationEntry = _JmsDistributedDestinationEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 623, 1)
)
jmsDistributedDestinationEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsDistributedDestinationIndex"),
)
if mibBuilder.loadTexts:
    jmsDistributedDestinationEntry.setStatus("current")


class _JmsDistributedDestinationIndex_Type(DisplayString):
    """Custom type jmsDistributedDestinationIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsDistributedDestinationIndex_Type.__name__ = "DisplayString"
_JmsDistributedDestinationIndex_Object = MibTableColumn
jmsDistributedDestinationIndex = _JmsDistributedDestinationIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 623, 1, 1),
    _JmsDistributedDestinationIndex_Type()
)
jmsDistributedDestinationIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDistributedDestinationIndex.setStatus("current")


class _JmsDistributedDestinationObjectName_Type(DisplayString):
    """Custom type jmsDistributedDestinationObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsDistributedDestinationObjectName_Type.__name__ = "DisplayString"
_JmsDistributedDestinationObjectName_Object = MibTableColumn
jmsDistributedDestinationObjectName = _JmsDistributedDestinationObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 623, 1, 5),
    _JmsDistributedDestinationObjectName_Type()
)
jmsDistributedDestinationObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDistributedDestinationObjectName.setStatus("current")


class _JmsDistributedDestinationType_Type(DisplayString):
    """Custom type jmsDistributedDestinationType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsDistributedDestinationType_Type.__name__ = "DisplayString"
_JmsDistributedDestinationType_Object = MibTableColumn
jmsDistributedDestinationType = _JmsDistributedDestinationType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 623, 1, 10),
    _JmsDistributedDestinationType_Type()
)
jmsDistributedDestinationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDistributedDestinationType.setStatus("current")


class _JmsDistributedDestinationName_Type(DisplayString):
    """Custom type jmsDistributedDestinationName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsDistributedDestinationName_Type.__name__ = "DisplayString"
_JmsDistributedDestinationName_Object = MibTableColumn
jmsDistributedDestinationName = _JmsDistributedDestinationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 623, 1, 15),
    _JmsDistributedDestinationName_Type()
)
jmsDistributedDestinationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDistributedDestinationName.setStatus("current")


class _JmsDistributedDestinationParent_Type(DisplayString):
    """Custom type jmsDistributedDestinationParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsDistributedDestinationParent_Type.__name__ = "DisplayString"
_JmsDistributedDestinationParent_Object = MibTableColumn
jmsDistributedDestinationParent = _JmsDistributedDestinationParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 623, 1, 20),
    _JmsDistributedDestinationParent_Type()
)
jmsDistributedDestinationParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDistributedDestinationParent.setStatus("current")
_JmsDistributedDestinationLoadBalancingPolicy_Type = DisplayString
_JmsDistributedDestinationLoadBalancingPolicy_Object = MibTableColumn
jmsDistributedDestinationLoadBalancingPolicy = _JmsDistributedDestinationLoadBalancingPolicy_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 623, 1, 21),
    _JmsDistributedDestinationLoadBalancingPolicy_Type()
)
jmsDistributedDestinationLoadBalancingPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDistributedDestinationLoadBalancingPolicy.setStatus("current")
_JmsDistributedDestinationMemberTable_Object = MibTable
jmsDistributedDestinationMemberTable = _JmsDistributedDestinationMemberTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 624)
)
if mibBuilder.loadTexts:
    jmsDistributedDestinationMemberTable.setStatus("current")
_JmsDistributedDestinationMemberEntry_Object = MibTableRow
jmsDistributedDestinationMemberEntry = _JmsDistributedDestinationMemberEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 624, 1)
)
jmsDistributedDestinationMemberEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsDistributedDestinationMemberIndex"),
)
if mibBuilder.loadTexts:
    jmsDistributedDestinationMemberEntry.setStatus("current")


class _JmsDistributedDestinationMemberIndex_Type(DisplayString):
    """Custom type jmsDistributedDestinationMemberIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsDistributedDestinationMemberIndex_Type.__name__ = "DisplayString"
_JmsDistributedDestinationMemberIndex_Object = MibTableColumn
jmsDistributedDestinationMemberIndex = _JmsDistributedDestinationMemberIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 624, 1, 1),
    _JmsDistributedDestinationMemberIndex_Type()
)
jmsDistributedDestinationMemberIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDistributedDestinationMemberIndex.setStatus("current")


class _JmsDistributedDestinationMemberObjectName_Type(DisplayString):
    """Custom type jmsDistributedDestinationMemberObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsDistributedDestinationMemberObjectName_Type.__name__ = "DisplayString"
_JmsDistributedDestinationMemberObjectName_Object = MibTableColumn
jmsDistributedDestinationMemberObjectName = _JmsDistributedDestinationMemberObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 624, 1, 5),
    _JmsDistributedDestinationMemberObjectName_Type()
)
jmsDistributedDestinationMemberObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDistributedDestinationMemberObjectName.setStatus("current")


class _JmsDistributedDestinationMemberType_Type(DisplayString):
    """Custom type jmsDistributedDestinationMemberType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsDistributedDestinationMemberType_Type.__name__ = "DisplayString"
_JmsDistributedDestinationMemberType_Object = MibTableColumn
jmsDistributedDestinationMemberType = _JmsDistributedDestinationMemberType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 624, 1, 10),
    _JmsDistributedDestinationMemberType_Type()
)
jmsDistributedDestinationMemberType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDistributedDestinationMemberType.setStatus("current")


class _JmsDistributedDestinationMemberName_Type(DisplayString):
    """Custom type jmsDistributedDestinationMemberName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsDistributedDestinationMemberName_Type.__name__ = "DisplayString"
_JmsDistributedDestinationMemberName_Object = MibTableColumn
jmsDistributedDestinationMemberName = _JmsDistributedDestinationMemberName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 624, 1, 15),
    _JmsDistributedDestinationMemberName_Type()
)
jmsDistributedDestinationMemberName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDistributedDestinationMemberName.setStatus("current")


class _JmsDistributedDestinationMemberParent_Type(DisplayString):
    """Custom type jmsDistributedDestinationMemberParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsDistributedDestinationMemberParent_Type.__name__ = "DisplayString"
_JmsDistributedDestinationMemberParent_Object = MibTableColumn
jmsDistributedDestinationMemberParent = _JmsDistributedDestinationMemberParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 624, 1, 20),
    _JmsDistributedDestinationMemberParent_Type()
)
jmsDistributedDestinationMemberParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDistributedDestinationMemberParent.setStatus("current")
_JmsDistributedDestinationMemberWeight_Type = Integer32
_JmsDistributedDestinationMemberWeight_Object = MibTableColumn
jmsDistributedDestinationMemberWeight = _JmsDistributedDestinationMemberWeight_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 624, 1, 21),
    _JmsDistributedDestinationMemberWeight_Type()
)
jmsDistributedDestinationMemberWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsDistributedDestinationMemberWeight.setStatus("current")
_JmsTemplateTable_Object = MibTable
jmsTemplateTable = _JmsTemplateTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 626)
)
if mibBuilder.loadTexts:
    jmsTemplateTable.setStatus("current")
_JmsTemplateEntry_Object = MibTableRow
jmsTemplateEntry = _JmsTemplateEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 626, 1)
)
jmsTemplateEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsTemplateIndex"),
)
if mibBuilder.loadTexts:
    jmsTemplateEntry.setStatus("current")


class _JmsTemplateIndex_Type(DisplayString):
    """Custom type jmsTemplateIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsTemplateIndex_Type.__name__ = "DisplayString"
_JmsTemplateIndex_Object = MibTableColumn
jmsTemplateIndex = _JmsTemplateIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 626, 1, 1),
    _JmsTemplateIndex_Type()
)
jmsTemplateIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTemplateIndex.setStatus("current")


class _JmsTemplateObjectName_Type(DisplayString):
    """Custom type jmsTemplateObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsTemplateObjectName_Type.__name__ = "DisplayString"
_JmsTemplateObjectName_Object = MibTableColumn
jmsTemplateObjectName = _JmsTemplateObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 626, 1, 5),
    _JmsTemplateObjectName_Type()
)
jmsTemplateObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTemplateObjectName.setStatus("current")


class _JmsTemplateType_Type(DisplayString):
    """Custom type jmsTemplateType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsTemplateType_Type.__name__ = "DisplayString"
_JmsTemplateType_Object = MibTableColumn
jmsTemplateType = _JmsTemplateType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 626, 1, 10),
    _JmsTemplateType_Type()
)
jmsTemplateType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTemplateType.setStatus("current")


class _JmsTemplateName_Type(DisplayString):
    """Custom type jmsTemplateName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsTemplateName_Type.__name__ = "DisplayString"
_JmsTemplateName_Object = MibTableColumn
jmsTemplateName = _JmsTemplateName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 626, 1, 15),
    _JmsTemplateName_Type()
)
jmsTemplateName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTemplateName.setStatus("current")


class _JmsTemplateParent_Type(DisplayString):
    """Custom type jmsTemplateParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsTemplateParent_Type.__name__ = "DisplayString"
_JmsTemplateParent_Object = MibTableColumn
jmsTemplateParent = _JmsTemplateParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 626, 1, 20),
    _JmsTemplateParent_Type()
)
jmsTemplateParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTemplateParent.setStatus("current")
_JmsTemplateBytesPagingEnabled_Type = Integer32
_JmsTemplateBytesPagingEnabled_Object = MibTableColumn
jmsTemplateBytesPagingEnabled = _JmsTemplateBytesPagingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 626, 1, 21),
    _JmsTemplateBytesPagingEnabled_Type()
)
jmsTemplateBytesPagingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTemplateBytesPagingEnabled.setStatus("current")
_JmsTemplateMessagesPagingEnabled_Type = Integer32
_JmsTemplateMessagesPagingEnabled_Object = MibTableColumn
jmsTemplateMessagesPagingEnabled = _JmsTemplateMessagesPagingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 626, 1, 22),
    _JmsTemplateMessagesPagingEnabled_Type()
)
jmsTemplateMessagesPagingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTemplateMessagesPagingEnabled.setStatus("current")
_JmsFileStoreTable_Object = MibTable
jmsFileStoreTable = _JmsFileStoreTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 630)
)
if mibBuilder.loadTexts:
    jmsFileStoreTable.setStatus("current")
_JmsFileStoreEntry_Object = MibTableRow
jmsFileStoreEntry = _JmsFileStoreEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 630, 1)
)
jmsFileStoreEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsFileStoreIndex"),
)
if mibBuilder.loadTexts:
    jmsFileStoreEntry.setStatus("current")


class _JmsFileStoreIndex_Type(DisplayString):
    """Custom type jmsFileStoreIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsFileStoreIndex_Type.__name__ = "DisplayString"
_JmsFileStoreIndex_Object = MibTableColumn
jmsFileStoreIndex = _JmsFileStoreIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 630, 1, 1),
    _JmsFileStoreIndex_Type()
)
jmsFileStoreIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsFileStoreIndex.setStatus("current")


class _JmsFileStoreObjectName_Type(DisplayString):
    """Custom type jmsFileStoreObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsFileStoreObjectName_Type.__name__ = "DisplayString"
_JmsFileStoreObjectName_Object = MibTableColumn
jmsFileStoreObjectName = _JmsFileStoreObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 630, 1, 5),
    _JmsFileStoreObjectName_Type()
)
jmsFileStoreObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsFileStoreObjectName.setStatus("current")


class _JmsFileStoreType_Type(DisplayString):
    """Custom type jmsFileStoreType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsFileStoreType_Type.__name__ = "DisplayString"
_JmsFileStoreType_Object = MibTableColumn
jmsFileStoreType = _JmsFileStoreType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 630, 1, 10),
    _JmsFileStoreType_Type()
)
jmsFileStoreType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsFileStoreType.setStatus("current")


class _JmsFileStoreName_Type(DisplayString):
    """Custom type jmsFileStoreName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsFileStoreName_Type.__name__ = "DisplayString"
_JmsFileStoreName_Object = MibTableColumn
jmsFileStoreName = _JmsFileStoreName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 630, 1, 15),
    _JmsFileStoreName_Type()
)
jmsFileStoreName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsFileStoreName.setStatus("current")


class _JmsFileStoreParent_Type(DisplayString):
    """Custom type jmsFileStoreParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsFileStoreParent_Type.__name__ = "DisplayString"
_JmsFileStoreParent_Object = MibTableColumn
jmsFileStoreParent = _JmsFileStoreParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 630, 1, 20),
    _JmsFileStoreParent_Type()
)
jmsFileStoreParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsFileStoreParent.setStatus("current")


class _JmsFileStoreJMSServer_Type(DisplayString):
    """Custom type jmsFileStoreJMSServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsFileStoreJMSServer_Type.__name__ = "DisplayString"
_JmsFileStoreJMSServer_Object = MibTableColumn
jmsFileStoreJMSServer = _JmsFileStoreJMSServer_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 630, 1, 25),
    _JmsFileStoreJMSServer_Type()
)
jmsFileStoreJMSServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsFileStoreJMSServer.setStatus("current")


class _JmsFileStoreDirectory_Type(DisplayString):
    """Custom type jmsFileStoreDirectory based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsFileStoreDirectory_Type.__name__ = "DisplayString"
_JmsFileStoreDirectory_Object = MibTableColumn
jmsFileStoreDirectory = _JmsFileStoreDirectory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 630, 1, 30),
    _JmsFileStoreDirectory_Type()
)
jmsFileStoreDirectory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsFileStoreDirectory.setStatus("current")
_JmsJDBCStoreTable_Object = MibTable
jmsJDBCStoreTable = _JmsJDBCStoreTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 640)
)
if mibBuilder.loadTexts:
    jmsJDBCStoreTable.setStatus("current")
_JmsJDBCStoreEntry_Object = MibTableRow
jmsJDBCStoreEntry = _JmsJDBCStoreEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 640, 1)
)
jmsJDBCStoreEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsJDBCStoreIndex"),
)
if mibBuilder.loadTexts:
    jmsJDBCStoreEntry.setStatus("current")


class _JmsJDBCStoreIndex_Type(DisplayString):
    """Custom type jmsJDBCStoreIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsJDBCStoreIndex_Type.__name__ = "DisplayString"
_JmsJDBCStoreIndex_Object = MibTableColumn
jmsJDBCStoreIndex = _JmsJDBCStoreIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 640, 1, 1),
    _JmsJDBCStoreIndex_Type()
)
jmsJDBCStoreIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsJDBCStoreIndex.setStatus("current")


class _JmsJDBCStoreObjectName_Type(DisplayString):
    """Custom type jmsJDBCStoreObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsJDBCStoreObjectName_Type.__name__ = "DisplayString"
_JmsJDBCStoreObjectName_Object = MibTableColumn
jmsJDBCStoreObjectName = _JmsJDBCStoreObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 640, 1, 5),
    _JmsJDBCStoreObjectName_Type()
)
jmsJDBCStoreObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsJDBCStoreObjectName.setStatus("current")


class _JmsJDBCStoreType_Type(DisplayString):
    """Custom type jmsJDBCStoreType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsJDBCStoreType_Type.__name__ = "DisplayString"
_JmsJDBCStoreType_Object = MibTableColumn
jmsJDBCStoreType = _JmsJDBCStoreType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 640, 1, 10),
    _JmsJDBCStoreType_Type()
)
jmsJDBCStoreType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsJDBCStoreType.setStatus("current")


class _JmsJDBCStoreName_Type(DisplayString):
    """Custom type jmsJDBCStoreName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsJDBCStoreName_Type.__name__ = "DisplayString"
_JmsJDBCStoreName_Object = MibTableColumn
jmsJDBCStoreName = _JmsJDBCStoreName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 640, 1, 15),
    _JmsJDBCStoreName_Type()
)
jmsJDBCStoreName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsJDBCStoreName.setStatus("current")


class _JmsJDBCStoreParent_Type(DisplayString):
    """Custom type jmsJDBCStoreParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsJDBCStoreParent_Type.__name__ = "DisplayString"
_JmsJDBCStoreParent_Object = MibTableColumn
jmsJDBCStoreParent = _JmsJDBCStoreParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 640, 1, 20),
    _JmsJDBCStoreParent_Type()
)
jmsJDBCStoreParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsJDBCStoreParent.setStatus("current")


class _JmsJDBCStoreJMSServer_Type(DisplayString):
    """Custom type jmsJDBCStoreJMSServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsJDBCStoreJMSServer_Type.__name__ = "DisplayString"
_JmsJDBCStoreJMSServer_Object = MibTableColumn
jmsJDBCStoreJMSServer = _JmsJDBCStoreJMSServer_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 640, 1, 25),
    _JmsJDBCStoreJMSServer_Type()
)
jmsJDBCStoreJMSServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsJDBCStoreJMSServer.setStatus("current")


class _JmsJDBCStoreConnectionPool_Type(DisplayString):
    """Custom type jmsJDBCStoreConnectionPool based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsJDBCStoreConnectionPool_Type.__name__ = "DisplayString"
_JmsJDBCStoreConnectionPool_Object = MibTableColumn
jmsJDBCStoreConnectionPool = _JmsJDBCStoreConnectionPool_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 640, 1, 30),
    _JmsJDBCStoreConnectionPool_Type()
)
jmsJDBCStoreConnectionPool.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsJDBCStoreConnectionPool.setStatus("current")


class _JmsJDBCStorePrefixName_Type(DisplayString):
    """Custom type jmsJDBCStorePrefixName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_JmsJDBCStorePrefixName_Type.__name__ = "DisplayString"
_JmsJDBCStorePrefixName_Object = MibTableColumn
jmsJDBCStorePrefixName = _JmsJDBCStorePrefixName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 640, 1, 35),
    _JmsJDBCStorePrefixName_Type()
)
jmsJDBCStorePrefixName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsJDBCStorePrefixName.setStatus("current")
_JmsQueueTable_Object = MibTable
jmsQueueTable = _JmsQueueTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650)
)
if mibBuilder.loadTexts:
    jmsQueueTable.setStatus("current")
_JmsQueueEntry_Object = MibTableRow
jmsQueueEntry = _JmsQueueEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1)
)
jmsQueueEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsQueueIndex"),
)
if mibBuilder.loadTexts:
    jmsQueueEntry.setStatus("current")


class _JmsQueueIndex_Type(DisplayString):
    """Custom type jmsQueueIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsQueueIndex_Type.__name__ = "DisplayString"
_JmsQueueIndex_Object = MibTableColumn
jmsQueueIndex = _JmsQueueIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1, 1),
    _JmsQueueIndex_Type()
)
jmsQueueIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsQueueIndex.setStatus("current")


class _JmsQueueObjectName_Type(DisplayString):
    """Custom type jmsQueueObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsQueueObjectName_Type.__name__ = "DisplayString"
_JmsQueueObjectName_Object = MibTableColumn
jmsQueueObjectName = _JmsQueueObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1, 5),
    _JmsQueueObjectName_Type()
)
jmsQueueObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsQueueObjectName.setStatus("current")


class _JmsQueueType_Type(DisplayString):
    """Custom type jmsQueueType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsQueueType_Type.__name__ = "DisplayString"
_JmsQueueType_Object = MibTableColumn
jmsQueueType = _JmsQueueType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1, 10),
    _JmsQueueType_Type()
)
jmsQueueType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsQueueType.setStatus("current")


class _JmsQueueName_Type(DisplayString):
    """Custom type jmsQueueName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsQueueName_Type.__name__ = "DisplayString"
_JmsQueueName_Object = MibTableColumn
jmsQueueName = _JmsQueueName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1, 15),
    _JmsQueueName_Type()
)
jmsQueueName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsQueueName.setStatus("current")


class _JmsQueueParent_Type(DisplayString):
    """Custom type jmsQueueParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsQueueParent_Type.__name__ = "DisplayString"
_JmsQueueParent_Object = MibTableColumn
jmsQueueParent = _JmsQueueParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1, 20),
    _JmsQueueParent_Type()
)
jmsQueueParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsQueueParent.setStatus("current")


class _JmsQueueDestinationKeys_Type(DisplayString):
    """Custom type jmsQueueDestinationKeys based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JmsQueueDestinationKeys_Type.__name__ = "DisplayString"
_JmsQueueDestinationKeys_Object = MibTableColumn
jmsQueueDestinationKeys = _JmsQueueDestinationKeys_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1, 25),
    _JmsQueueDestinationKeys_Type()
)
jmsQueueDestinationKeys.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsQueueDestinationKeys.setStatus("current")
_JmsQueueBytesMaximum_Type = Integer32
_JmsQueueBytesMaximum_Object = MibTableColumn
jmsQueueBytesMaximum = _JmsQueueBytesMaximum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1, 35),
    _JmsQueueBytesMaximum_Type()
)
jmsQueueBytesMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsQueueBytesMaximum.setStatus("current")
_JmsQueueBytesThresholdHigh_Type = Integer32
_JmsQueueBytesThresholdHigh_Object = MibTableColumn
jmsQueueBytesThresholdHigh = _JmsQueueBytesThresholdHigh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1, 40),
    _JmsQueueBytesThresholdHigh_Type()
)
jmsQueueBytesThresholdHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsQueueBytesThresholdHigh.setStatus("current")
_JmsQueueBytesThresholdLow_Type = Integer32
_JmsQueueBytesThresholdLow_Object = MibTableColumn
jmsQueueBytesThresholdLow = _JmsQueueBytesThresholdLow_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1, 45),
    _JmsQueueBytesThresholdLow_Type()
)
jmsQueueBytesThresholdLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsQueueBytesThresholdLow.setStatus("current")
_JmsQueueMessagesMaximum_Type = Integer32
_JmsQueueMessagesMaximum_Object = MibTableColumn
jmsQueueMessagesMaximum = _JmsQueueMessagesMaximum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1, 50),
    _JmsQueueMessagesMaximum_Type()
)
jmsQueueMessagesMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsQueueMessagesMaximum.setStatus("current")
_JmsQueueMessagesThresholdHigh_Type = Integer32
_JmsQueueMessagesThresholdHigh_Object = MibTableColumn
jmsQueueMessagesThresholdHigh = _JmsQueueMessagesThresholdHigh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1, 55),
    _JmsQueueMessagesThresholdHigh_Type()
)
jmsQueueMessagesThresholdHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsQueueMessagesThresholdHigh.setStatus("current")
_JmsQueueMessagesThresholdLow_Type = Integer32
_JmsQueueMessagesThresholdLow_Object = MibTableColumn
jmsQueueMessagesThresholdLow = _JmsQueueMessagesThresholdLow_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1, 60),
    _JmsQueueMessagesThresholdLow_Type()
)
jmsQueueMessagesThresholdLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsQueueMessagesThresholdLow.setStatus("current")
_JmsQueuePriorityOverride_Type = Integer32
_JmsQueuePriorityOverride_Object = MibTableColumn
jmsQueuePriorityOverride = _JmsQueuePriorityOverride_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1, 65),
    _JmsQueuePriorityOverride_Type()
)
jmsQueuePriorityOverride.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsQueuePriorityOverride.setStatus("current")
_JmsQueueTimeToDeliverOverride_Type = Integer32
_JmsQueueTimeToDeliverOverride_Object = MibTableColumn
jmsQueueTimeToDeliverOverride = _JmsQueueTimeToDeliverOverride_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1, 70),
    _JmsQueueTimeToDeliverOverride_Type()
)
jmsQueueTimeToDeliverOverride.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsQueueTimeToDeliverOverride.setStatus("current")
_JmsQueueRedeliveryDelayOverride_Type = Integer32
_JmsQueueRedeliveryDelayOverride_Object = MibTableColumn
jmsQueueRedeliveryDelayOverride = _JmsQueueRedeliveryDelayOverride_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1, 75),
    _JmsQueueRedeliveryDelayOverride_Type()
)
jmsQueueRedeliveryDelayOverride.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsQueueRedeliveryDelayOverride.setStatus("current")
_JmsQueueRedeliveryLimit_Type = Integer32
_JmsQueueRedeliveryLimit_Object = MibTableColumn
jmsQueueRedeliveryLimit = _JmsQueueRedeliveryLimit_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1, 80),
    _JmsQueueRedeliveryLimit_Type()
)
jmsQueueRedeliveryLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsQueueRedeliveryLimit.setStatus("current")


class _JmsQueueErrorDestination_Type(DisplayString):
    """Custom type jmsQueueErrorDestination based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsQueueErrorDestination_Type.__name__ = "DisplayString"
_JmsQueueErrorDestination_Object = MibTableColumn
jmsQueueErrorDestination = _JmsQueueErrorDestination_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1, 85),
    _JmsQueueErrorDestination_Type()
)
jmsQueueErrorDestination.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsQueueErrorDestination.setStatus("current")
_JmsQueueTimeToLiveOverride_Type = Integer32
_JmsQueueTimeToLiveOverride_Object = MibTableColumn
jmsQueueTimeToLiveOverride = _JmsQueueTimeToLiveOverride_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1, 90),
    _JmsQueueTimeToLiveOverride_Type()
)
jmsQueueTimeToLiveOverride.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsQueueTimeToLiveOverride.setStatus("current")


class _JmsQueueDeliveryModeOverride_Type(DisplayString):
    """Custom type jmsQueueDeliveryModeOverride based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsQueueDeliveryModeOverride_Type.__name__ = "DisplayString"
_JmsQueueDeliveryModeOverride_Object = MibTableColumn
jmsQueueDeliveryModeOverride = _JmsQueueDeliveryModeOverride_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1, 95),
    _JmsQueueDeliveryModeOverride_Type()
)
jmsQueueDeliveryModeOverride.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsQueueDeliveryModeOverride.setStatus("current")


class _JmsQueueJNDIName_Type(DisplayString):
    """Custom type jmsQueueJNDIName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsQueueJNDIName_Type.__name__ = "DisplayString"
_JmsQueueJNDIName_Object = MibTableColumn
jmsQueueJNDIName = _JmsQueueJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1, 100),
    _JmsQueueJNDIName_Type()
)
jmsQueueJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsQueueJNDIName.setStatus("current")


class _JmsQueueStoreEnabled_Type(DisplayString):
    """Custom type jmsQueueStoreEnabled based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsQueueStoreEnabled_Type.__name__ = "DisplayString"
_JmsQueueStoreEnabled_Object = MibTableColumn
jmsQueueStoreEnabled = _JmsQueueStoreEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 650, 1, 105),
    _JmsQueueStoreEnabled_Type()
)
jmsQueueStoreEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsQueueStoreEnabled.setStatus("current")
_JmsServerTable_Object = MibTable
jmsServerTable = _JmsServerTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660)
)
if mibBuilder.loadTexts:
    jmsServerTable.setStatus("current")
_JmsServerEntry_Object = MibTableRow
jmsServerEntry = _JmsServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1)
)
jmsServerEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsServerIndex"),
)
if mibBuilder.loadTexts:
    jmsServerEntry.setStatus("current")


class _JmsServerIndex_Type(DisplayString):
    """Custom type jmsServerIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsServerIndex_Type.__name__ = "DisplayString"
_JmsServerIndex_Object = MibTableColumn
jmsServerIndex = _JmsServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 1),
    _JmsServerIndex_Type()
)
jmsServerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerIndex.setStatus("current")


class _JmsServerObjectName_Type(DisplayString):
    """Custom type jmsServerObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsServerObjectName_Type.__name__ = "DisplayString"
_JmsServerObjectName_Object = MibTableColumn
jmsServerObjectName = _JmsServerObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 5),
    _JmsServerObjectName_Type()
)
jmsServerObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerObjectName.setStatus("current")


class _JmsServerType_Type(DisplayString):
    """Custom type jmsServerType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsServerType_Type.__name__ = "DisplayString"
_JmsServerType_Object = MibTableColumn
jmsServerType = _JmsServerType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 10),
    _JmsServerType_Type()
)
jmsServerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerType.setStatus("current")


class _JmsServerName_Type(DisplayString):
    """Custom type jmsServerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsServerName_Type.__name__ = "DisplayString"
_JmsServerName_Object = MibTableColumn
jmsServerName = _JmsServerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 15),
    _JmsServerName_Type()
)
jmsServerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerName.setStatus("current")


class _JmsServerParent_Type(DisplayString):
    """Custom type jmsServerParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsServerParent_Type.__name__ = "DisplayString"
_JmsServerParent_Object = MibTableColumn
jmsServerParent = _JmsServerParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 20),
    _JmsServerParent_Type()
)
jmsServerParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerParent.setStatus("current")


class _JmsServerTargets_Type(DisplayString):
    """Custom type jmsServerTargets based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JmsServerTargets_Type.__name__ = "DisplayString"
_JmsServerTargets_Object = MibTableColumn
jmsServerTargets = _JmsServerTargets_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 25),
    _JmsServerTargets_Type()
)
jmsServerTargets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerTargets.setStatus("current")


class _JmsServerSessionPools_Type(DisplayString):
    """Custom type jmsServerSessionPools based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JmsServerSessionPools_Type.__name__ = "DisplayString"
_JmsServerSessionPools_Object = MibTableColumn
jmsServerSessionPools = _JmsServerSessionPools_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 30),
    _JmsServerSessionPools_Type()
)
jmsServerSessionPools.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerSessionPools.setStatus("current")


class _JmsServerDestinations_Type(DisplayString):
    """Custom type jmsServerDestinations based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JmsServerDestinations_Type.__name__ = "DisplayString"
_JmsServerDestinations_Object = MibTableColumn
jmsServerDestinations = _JmsServerDestinations_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 35),
    _JmsServerDestinations_Type()
)
jmsServerDestinations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerDestinations.setStatus("current")


class _JmsServerStore_Type(DisplayString):
    """Custom type jmsServerStore based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsServerStore_Type.__name__ = "DisplayString"
_JmsServerStore_Object = MibTableColumn
jmsServerStore = _JmsServerStore_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 40),
    _JmsServerStore_Type()
)
jmsServerStore.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerStore.setStatus("current")
_JmsServerBytesMaximum_Type = Integer32
_JmsServerBytesMaximum_Object = MibTableColumn
jmsServerBytesMaximum = _JmsServerBytesMaximum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 45),
    _JmsServerBytesMaximum_Type()
)
jmsServerBytesMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerBytesMaximum.setStatus("current")
_JmsServerBytesThresholdHigh_Type = Integer32
_JmsServerBytesThresholdHigh_Object = MibTableColumn
jmsServerBytesThresholdHigh = _JmsServerBytesThresholdHigh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 50),
    _JmsServerBytesThresholdHigh_Type()
)
jmsServerBytesThresholdHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerBytesThresholdHigh.setStatus("current")
_JmsServerBytesThresholdLow_Type = Integer32
_JmsServerBytesThresholdLow_Object = MibTableColumn
jmsServerBytesThresholdLow = _JmsServerBytesThresholdLow_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 55),
    _JmsServerBytesThresholdLow_Type()
)
jmsServerBytesThresholdLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerBytesThresholdLow.setStatus("current")
_JmsServerMessagesMaximum_Type = Integer32
_JmsServerMessagesMaximum_Object = MibTableColumn
jmsServerMessagesMaximum = _JmsServerMessagesMaximum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 60),
    _JmsServerMessagesMaximum_Type()
)
jmsServerMessagesMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerMessagesMaximum.setStatus("current")
_JmsServerMessagesThresholdHigh_Type = Integer32
_JmsServerMessagesThresholdHigh_Object = MibTableColumn
jmsServerMessagesThresholdHigh = _JmsServerMessagesThresholdHigh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 65),
    _JmsServerMessagesThresholdHigh_Type()
)
jmsServerMessagesThresholdHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerMessagesThresholdHigh.setStatus("current")
_JmsServerMessagesThresholdLow_Type = Integer32
_JmsServerMessagesThresholdLow_Object = MibTableColumn
jmsServerMessagesThresholdLow = _JmsServerMessagesThresholdLow_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 70),
    _JmsServerMessagesThresholdLow_Type()
)
jmsServerMessagesThresholdLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerMessagesThresholdLow.setStatus("current")
_JmsServerInsertionPausedAtStartup_Type = OctetString
_JmsServerInsertionPausedAtStartup_Object = MibTableColumn
jmsServerInsertionPausedAtStartup = _JmsServerInsertionPausedAtStartup_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 71),
    _JmsServerInsertionPausedAtStartup_Type()
)
jmsServerInsertionPausedAtStartup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerInsertionPausedAtStartup.setStatus("current")
_JmsServerStoreEnabled_Type = OctetString
_JmsServerStoreEnabled_Object = MibTableColumn
jmsServerStoreEnabled = _JmsServerStoreEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 72),
    _JmsServerStoreEnabled_Type()
)
jmsServerStoreEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerStoreEnabled.setStatus("current")
_JmsServerAllowsPersistentDowngrade_Type = OctetString
_JmsServerAllowsPersistentDowngrade_Object = MibTableColumn
jmsServerAllowsPersistentDowngrade = _JmsServerAllowsPersistentDowngrade_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 73),
    _JmsServerAllowsPersistentDowngrade_Type()
)
jmsServerAllowsPersistentDowngrade.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerAllowsPersistentDowngrade.setStatus("current")
_JmsServerExpirationScanInterval_Type = Integer32
_JmsServerExpirationScanInterval_Object = MibTableColumn
jmsServerExpirationScanInterval = _JmsServerExpirationScanInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 74),
    _JmsServerExpirationScanInterval_Type()
)
jmsServerExpirationScanInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerExpirationScanInterval.setStatus("current")
_JmsServerProductionPausedAtStartup_Type = OctetString
_JmsServerProductionPausedAtStartup_Object = MibTableColumn
jmsServerProductionPausedAtStartup = _JmsServerProductionPausedAtStartup_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 75),
    _JmsServerProductionPausedAtStartup_Type()
)
jmsServerProductionPausedAtStartup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerProductionPausedAtStartup.setStatus("current")
_JmsServerTemporaryTemplateName_Type = OctetString
_JmsServerTemporaryTemplateName_Object = MibTableColumn
jmsServerTemporaryTemplateName = _JmsServerTemporaryTemplateName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 76),
    _JmsServerTemporaryTemplateName_Type()
)
jmsServerTemporaryTemplateName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerTemporaryTemplateName.setStatus("current")
_JmsServerMaximumMessageSize_Type = Integer32
_JmsServerMaximumMessageSize_Object = MibTableColumn
jmsServerMaximumMessageSize = _JmsServerMaximumMessageSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 77),
    _JmsServerMaximumMessageSize_Type()
)
jmsServerMaximumMessageSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerMaximumMessageSize.setStatus("current")
_JmsServerDeploymentOrder_Type = Integer32
_JmsServerDeploymentOrder_Object = MibTableColumn
jmsServerDeploymentOrder = _JmsServerDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 78),
    _JmsServerDeploymentOrder_Type()
)
jmsServerDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerDeploymentOrder.setStatus("current")
_JmsServerMessageBufferSize_Type = Counter64
_JmsServerMessageBufferSize_Object = MibTableColumn
jmsServerMessageBufferSize = _JmsServerMessageBufferSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 79),
    _JmsServerMessageBufferSize_Type()
)
jmsServerMessageBufferSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerMessageBufferSize.setStatus("current")
_JmsServerBlockingSendPolicy_Type = OctetString
_JmsServerBlockingSendPolicy_Object = MibTableColumn
jmsServerBlockingSendPolicy = _JmsServerBlockingSendPolicy_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 80),
    _JmsServerBlockingSendPolicy_Type()
)
jmsServerBlockingSendPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerBlockingSendPolicy.setStatus("current")
_JmsServerHostingTemporaryDestinations_Type = OctetString
_JmsServerHostingTemporaryDestinations_Object = MibTableColumn
jmsServerHostingTemporaryDestinations = _JmsServerHostingTemporaryDestinations_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 81),
    _JmsServerHostingTemporaryDestinations_Type()
)
jmsServerHostingTemporaryDestinations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerHostingTemporaryDestinations.setStatus("current")
_JmsServerPagingDirectory_Type = OctetString
_JmsServerPagingDirectory_Object = MibTableColumn
jmsServerPagingDirectory = _JmsServerPagingDirectory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 82),
    _JmsServerPagingDirectory_Type()
)
jmsServerPagingDirectory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerPagingDirectory.setStatus("current")
_JmsServerTemporaryTemplateResource_Type = OctetString
_JmsServerTemporaryTemplateResource_Object = MibTableColumn
jmsServerTemporaryTemplateResource = _JmsServerTemporaryTemplateResource_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 83),
    _JmsServerTemporaryTemplateResource_Type()
)
jmsServerTemporaryTemplateResource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerTemporaryTemplateResource.setStatus("current")
_JmsServerConsumptionPausedAtStartup_Type = OctetString
_JmsServerConsumptionPausedAtStartup_Object = MibTableColumn
jmsServerConsumptionPausedAtStartup = _JmsServerConsumptionPausedAtStartup_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 660, 1, 84),
    _JmsServerConsumptionPausedAtStartup_Type()
)
jmsServerConsumptionPausedAtStartup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsServerConsumptionPausedAtStartup.setStatus("current")
_JmsSessionPoolTable_Object = MibTable
jmsSessionPoolTable = _JmsSessionPoolTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 670)
)
if mibBuilder.loadTexts:
    jmsSessionPoolTable.setStatus("current")
_JmsSessionPoolEntry_Object = MibTableRow
jmsSessionPoolEntry = _JmsSessionPoolEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 670, 1)
)
jmsSessionPoolEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsSessionPoolIndex"),
)
if mibBuilder.loadTexts:
    jmsSessionPoolEntry.setStatus("current")


class _JmsSessionPoolIndex_Type(DisplayString):
    """Custom type jmsSessionPoolIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsSessionPoolIndex_Type.__name__ = "DisplayString"
_JmsSessionPoolIndex_Object = MibTableColumn
jmsSessionPoolIndex = _JmsSessionPoolIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 670, 1, 1),
    _JmsSessionPoolIndex_Type()
)
jmsSessionPoolIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionPoolIndex.setStatus("current")


class _JmsSessionPoolObjectName_Type(DisplayString):
    """Custom type jmsSessionPoolObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsSessionPoolObjectName_Type.__name__ = "DisplayString"
_JmsSessionPoolObjectName_Object = MibTableColumn
jmsSessionPoolObjectName = _JmsSessionPoolObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 670, 1, 5),
    _JmsSessionPoolObjectName_Type()
)
jmsSessionPoolObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionPoolObjectName.setStatus("current")


class _JmsSessionPoolType_Type(DisplayString):
    """Custom type jmsSessionPoolType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsSessionPoolType_Type.__name__ = "DisplayString"
_JmsSessionPoolType_Object = MibTableColumn
jmsSessionPoolType = _JmsSessionPoolType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 670, 1, 10),
    _JmsSessionPoolType_Type()
)
jmsSessionPoolType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionPoolType.setStatus("current")


class _JmsSessionPoolName_Type(DisplayString):
    """Custom type jmsSessionPoolName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsSessionPoolName_Type.__name__ = "DisplayString"
_JmsSessionPoolName_Object = MibTableColumn
jmsSessionPoolName = _JmsSessionPoolName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 670, 1, 15),
    _JmsSessionPoolName_Type()
)
jmsSessionPoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionPoolName.setStatus("current")


class _JmsSessionPoolParent_Type(DisplayString):
    """Custom type jmsSessionPoolParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsSessionPoolParent_Type.__name__ = "DisplayString"
_JmsSessionPoolParent_Object = MibTableColumn
jmsSessionPoolParent = _JmsSessionPoolParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 670, 1, 20),
    _JmsSessionPoolParent_Type()
)
jmsSessionPoolParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionPoolParent.setStatus("current")


class _JmsSessionPoolConnectionConsumers_Type(DisplayString):
    """Custom type jmsSessionPoolConnectionConsumers based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JmsSessionPoolConnectionConsumers_Type.__name__ = "DisplayString"
_JmsSessionPoolConnectionConsumers_Object = MibTableColumn
jmsSessionPoolConnectionConsumers = _JmsSessionPoolConnectionConsumers_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 670, 1, 25),
    _JmsSessionPoolConnectionConsumers_Type()
)
jmsSessionPoolConnectionConsumers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionPoolConnectionConsumers.setStatus("current")


class _JmsSessionPoolConnectionFactory_Type(DisplayString):
    """Custom type jmsSessionPoolConnectionFactory based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsSessionPoolConnectionFactory_Type.__name__ = "DisplayString"
_JmsSessionPoolConnectionFactory_Object = MibTableColumn
jmsSessionPoolConnectionFactory = _JmsSessionPoolConnectionFactory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 670, 1, 30),
    _JmsSessionPoolConnectionFactory_Type()
)
jmsSessionPoolConnectionFactory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionPoolConnectionFactory.setStatus("current")


class _JmsSessionPoolListenerClass_Type(DisplayString):
    """Custom type jmsSessionPoolListenerClass based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsSessionPoolListenerClass_Type.__name__ = "DisplayString"
_JmsSessionPoolListenerClass_Object = MibTableColumn
jmsSessionPoolListenerClass = _JmsSessionPoolListenerClass_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 670, 1, 35),
    _JmsSessionPoolListenerClass_Type()
)
jmsSessionPoolListenerClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionPoolListenerClass.setStatus("current")


class _JmsSessionPoolAcknowledgeMode_Type(DisplayString):
    """Custom type jmsSessionPoolAcknowledgeMode based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_JmsSessionPoolAcknowledgeMode_Type.__name__ = "DisplayString"
_JmsSessionPoolAcknowledgeMode_Object = MibTableColumn
jmsSessionPoolAcknowledgeMode = _JmsSessionPoolAcknowledgeMode_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 670, 1, 40),
    _JmsSessionPoolAcknowledgeMode_Type()
)
jmsSessionPoolAcknowledgeMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionPoolAcknowledgeMode.setStatus("current")
_JmsSessionPoolSessionsMaximum_Type = Integer32
_JmsSessionPoolSessionsMaximum_Object = MibTableColumn
jmsSessionPoolSessionsMaximum = _JmsSessionPoolSessionsMaximum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 670, 1, 45),
    _JmsSessionPoolSessionsMaximum_Type()
)
jmsSessionPoolSessionsMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionPoolSessionsMaximum.setStatus("current")


class _JmsSessionPoolTransacted_Type(Integer32):
    """Custom type jmsSessionPoolTransacted based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_JmsSessionPoolTransacted_Type.__name__ = "Integer32"
_JmsSessionPoolTransacted_Object = MibTableColumn
jmsSessionPoolTransacted = _JmsSessionPoolTransacted_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 670, 1, 50),
    _JmsSessionPoolTransacted_Type()
)
jmsSessionPoolTransacted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSessionPoolTransacted.setStatus("current")
_JmsTopicTable_Object = MibTable
jmsTopicTable = _JmsTopicTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680)
)
if mibBuilder.loadTexts:
    jmsTopicTable.setStatus("current")
_JmsTopicEntry_Object = MibTableRow
jmsTopicEntry = _JmsTopicEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1)
)
jmsTopicEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsTopicIndex"),
)
if mibBuilder.loadTexts:
    jmsTopicEntry.setStatus("current")


class _JmsTopicIndex_Type(DisplayString):
    """Custom type jmsTopicIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsTopicIndex_Type.__name__ = "DisplayString"
_JmsTopicIndex_Object = MibTableColumn
jmsTopicIndex = _JmsTopicIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 1),
    _JmsTopicIndex_Type()
)
jmsTopicIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicIndex.setStatus("current")


class _JmsTopicObjectName_Type(DisplayString):
    """Custom type jmsTopicObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsTopicObjectName_Type.__name__ = "DisplayString"
_JmsTopicObjectName_Object = MibTableColumn
jmsTopicObjectName = _JmsTopicObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 5),
    _JmsTopicObjectName_Type()
)
jmsTopicObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicObjectName.setStatus("current")


class _JmsTopicType_Type(DisplayString):
    """Custom type jmsTopicType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsTopicType_Type.__name__ = "DisplayString"
_JmsTopicType_Object = MibTableColumn
jmsTopicType = _JmsTopicType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 10),
    _JmsTopicType_Type()
)
jmsTopicType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicType.setStatus("current")


class _JmsTopicName_Type(DisplayString):
    """Custom type jmsTopicName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsTopicName_Type.__name__ = "DisplayString"
_JmsTopicName_Object = MibTableColumn
jmsTopicName = _JmsTopicName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 15),
    _JmsTopicName_Type()
)
jmsTopicName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicName.setStatus("current")


class _JmsTopicParent_Type(DisplayString):
    """Custom type jmsTopicParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsTopicParent_Type.__name__ = "DisplayString"
_JmsTopicParent_Object = MibTableColumn
jmsTopicParent = _JmsTopicParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 20),
    _JmsTopicParent_Type()
)
jmsTopicParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicParent.setStatus("current")


class _JmsTopicDestinationKeys_Type(DisplayString):
    """Custom type jmsTopicDestinationKeys based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_JmsTopicDestinationKeys_Type.__name__ = "DisplayString"
_JmsTopicDestinationKeys_Object = MibTableColumn
jmsTopicDestinationKeys = _JmsTopicDestinationKeys_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 25),
    _JmsTopicDestinationKeys_Type()
)
jmsTopicDestinationKeys.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicDestinationKeys.setStatus("current")
_JmsTopicBytesMaximum_Type = Integer32
_JmsTopicBytesMaximum_Object = MibTableColumn
jmsTopicBytesMaximum = _JmsTopicBytesMaximum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 35),
    _JmsTopicBytesMaximum_Type()
)
jmsTopicBytesMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicBytesMaximum.setStatus("current")
_JmsTopicBytesThresholdHigh_Type = Integer32
_JmsTopicBytesThresholdHigh_Object = MibTableColumn
jmsTopicBytesThresholdHigh = _JmsTopicBytesThresholdHigh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 40),
    _JmsTopicBytesThresholdHigh_Type()
)
jmsTopicBytesThresholdHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicBytesThresholdHigh.setStatus("current")
_JmsTopicBytesThresholdLow_Type = Integer32
_JmsTopicBytesThresholdLow_Object = MibTableColumn
jmsTopicBytesThresholdLow = _JmsTopicBytesThresholdLow_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 45),
    _JmsTopicBytesThresholdLow_Type()
)
jmsTopicBytesThresholdLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicBytesThresholdLow.setStatus("current")
_JmsTopicMessagesMaximum_Type = Integer32
_JmsTopicMessagesMaximum_Object = MibTableColumn
jmsTopicMessagesMaximum = _JmsTopicMessagesMaximum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 50),
    _JmsTopicMessagesMaximum_Type()
)
jmsTopicMessagesMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicMessagesMaximum.setStatus("current")
_JmsTopicMessagesThresholdHigh_Type = Integer32
_JmsTopicMessagesThresholdHigh_Object = MibTableColumn
jmsTopicMessagesThresholdHigh = _JmsTopicMessagesThresholdHigh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 55),
    _JmsTopicMessagesThresholdHigh_Type()
)
jmsTopicMessagesThresholdHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicMessagesThresholdHigh.setStatus("current")
_JmsTopicMessagesThresholdLow_Type = Integer32
_JmsTopicMessagesThresholdLow_Object = MibTableColumn
jmsTopicMessagesThresholdLow = _JmsTopicMessagesThresholdLow_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 60),
    _JmsTopicMessagesThresholdLow_Type()
)
jmsTopicMessagesThresholdLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicMessagesThresholdLow.setStatus("current")
_JmsTopicPriorityOverride_Type = Integer32
_JmsTopicPriorityOverride_Object = MibTableColumn
jmsTopicPriorityOverride = _JmsTopicPriorityOverride_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 65),
    _JmsTopicPriorityOverride_Type()
)
jmsTopicPriorityOverride.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicPriorityOverride.setStatus("current")
_JmsTopicTimeToDeliverOverride_Type = Integer32
_JmsTopicTimeToDeliverOverride_Object = MibTableColumn
jmsTopicTimeToDeliverOverride = _JmsTopicTimeToDeliverOverride_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 70),
    _JmsTopicTimeToDeliverOverride_Type()
)
jmsTopicTimeToDeliverOverride.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicTimeToDeliverOverride.setStatus("current")
_JmsTopicRedeliveryDelayOverride_Type = Integer32
_JmsTopicRedeliveryDelayOverride_Object = MibTableColumn
jmsTopicRedeliveryDelayOverride = _JmsTopicRedeliveryDelayOverride_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 75),
    _JmsTopicRedeliveryDelayOverride_Type()
)
jmsTopicRedeliveryDelayOverride.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicRedeliveryDelayOverride.setStatus("current")
_JmsTopicRedeliveryLimit_Type = Integer32
_JmsTopicRedeliveryLimit_Object = MibTableColumn
jmsTopicRedeliveryLimit = _JmsTopicRedeliveryLimit_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 80),
    _JmsTopicRedeliveryLimit_Type()
)
jmsTopicRedeliveryLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicRedeliveryLimit.setStatus("current")


class _JmsTopicErrorDestination_Type(DisplayString):
    """Custom type jmsTopicErrorDestination based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsTopicErrorDestination_Type.__name__ = "DisplayString"
_JmsTopicErrorDestination_Object = MibTableColumn
jmsTopicErrorDestination = _JmsTopicErrorDestination_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 85),
    _JmsTopicErrorDestination_Type()
)
jmsTopicErrorDestination.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicErrorDestination.setStatus("current")
_JmsTopicTimeToLiveOverride_Type = Integer32
_JmsTopicTimeToLiveOverride_Object = MibTableColumn
jmsTopicTimeToLiveOverride = _JmsTopicTimeToLiveOverride_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 90),
    _JmsTopicTimeToLiveOverride_Type()
)
jmsTopicTimeToLiveOverride.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicTimeToLiveOverride.setStatus("current")


class _JmsTopicDeliveryModeOverride_Type(DisplayString):
    """Custom type jmsTopicDeliveryModeOverride based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsTopicDeliveryModeOverride_Type.__name__ = "DisplayString"
_JmsTopicDeliveryModeOverride_Object = MibTableColumn
jmsTopicDeliveryModeOverride = _JmsTopicDeliveryModeOverride_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 95),
    _JmsTopicDeliveryModeOverride_Type()
)
jmsTopicDeliveryModeOverride.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicDeliveryModeOverride.setStatus("current")


class _JmsTopicJNDIName_Type(DisplayString):
    """Custom type jmsTopicJNDIName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsTopicJNDIName_Type.__name__ = "DisplayString"
_JmsTopicJNDIName_Object = MibTableColumn
jmsTopicJNDIName = _JmsTopicJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 100),
    _JmsTopicJNDIName_Type()
)
jmsTopicJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicJNDIName.setStatus("current")


class _JmsTopicStoreEnabled_Type(DisplayString):
    """Custom type jmsTopicStoreEnabled based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsTopicStoreEnabled_Type.__name__ = "DisplayString"
_JmsTopicStoreEnabled_Object = MibTableColumn
jmsTopicStoreEnabled = _JmsTopicStoreEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 105),
    _JmsTopicStoreEnabled_Type()
)
jmsTopicStoreEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicStoreEnabled.setStatus("current")


class _JmsTopicMulticastAddress_Type(DisplayString):
    """Custom type jmsTopicMulticastAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsTopicMulticastAddress_Type.__name__ = "DisplayString"
_JmsTopicMulticastAddress_Object = MibTableColumn
jmsTopicMulticastAddress = _JmsTopicMulticastAddress_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 110),
    _JmsTopicMulticastAddress_Type()
)
jmsTopicMulticastAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicMulticastAddress.setStatus("current")
_JmsTopicMulticastTTL_Type = Integer32
_JmsTopicMulticastTTL_Object = MibTableColumn
jmsTopicMulticastTTL = _JmsTopicMulticastTTL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 115),
    _JmsTopicMulticastTTL_Type()
)
jmsTopicMulticastTTL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicMulticastTTL.setStatus("current")
_JmsTopicMulticastPort_Type = Integer32
_JmsTopicMulticastPort_Object = MibTableColumn
jmsTopicMulticastPort = _JmsTopicMulticastPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 680, 1, 120),
    _JmsTopicMulticastPort_Type()
)
jmsTopicMulticastPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsTopicMulticastPort.setStatus("current")
_JmsVirtualDestinationTable_Object = MibTable
jmsVirtualDestinationTable = _JmsVirtualDestinationTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 682)
)
if mibBuilder.loadTexts:
    jmsVirtualDestinationTable.setStatus("current")
_JmsVirtualDestinationEntry_Object = MibTableRow
jmsVirtualDestinationEntry = _JmsVirtualDestinationEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 682, 1)
)
jmsVirtualDestinationEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsVirtualDestinationIndex"),
)
if mibBuilder.loadTexts:
    jmsVirtualDestinationEntry.setStatus("current")


class _JmsVirtualDestinationIndex_Type(DisplayString):
    """Custom type jmsVirtualDestinationIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JmsVirtualDestinationIndex_Type.__name__ = "DisplayString"
_JmsVirtualDestinationIndex_Object = MibTableColumn
jmsVirtualDestinationIndex = _JmsVirtualDestinationIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 682, 1, 1),
    _JmsVirtualDestinationIndex_Type()
)
jmsVirtualDestinationIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsVirtualDestinationIndex.setStatus("current")


class _JmsVirtualDestinationObjectName_Type(DisplayString):
    """Custom type jmsVirtualDestinationObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsVirtualDestinationObjectName_Type.__name__ = "DisplayString"
_JmsVirtualDestinationObjectName_Object = MibTableColumn
jmsVirtualDestinationObjectName = _JmsVirtualDestinationObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 682, 1, 5),
    _JmsVirtualDestinationObjectName_Type()
)
jmsVirtualDestinationObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsVirtualDestinationObjectName.setStatus("current")


class _JmsVirtualDestinationType_Type(DisplayString):
    """Custom type jmsVirtualDestinationType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsVirtualDestinationType_Type.__name__ = "DisplayString"
_JmsVirtualDestinationType_Object = MibTableColumn
jmsVirtualDestinationType = _JmsVirtualDestinationType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 682, 1, 10),
    _JmsVirtualDestinationType_Type()
)
jmsVirtualDestinationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsVirtualDestinationType.setStatus("current")


class _JmsVirtualDestinationName_Type(DisplayString):
    """Custom type jmsVirtualDestinationName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JmsVirtualDestinationName_Type.__name__ = "DisplayString"
_JmsVirtualDestinationName_Object = MibTableColumn
jmsVirtualDestinationName = _JmsVirtualDestinationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 682, 1, 15),
    _JmsVirtualDestinationName_Type()
)
jmsVirtualDestinationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsVirtualDestinationName.setStatus("current")


class _JmsVirtualDestinationParent_Type(DisplayString):
    """Custom type jmsVirtualDestinationParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JmsVirtualDestinationParent_Type.__name__ = "DisplayString"
_JmsVirtualDestinationParent_Object = MibTableColumn
jmsVirtualDestinationParent = _JmsVirtualDestinationParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 682, 1, 20),
    _JmsVirtualDestinationParent_Type()
)
jmsVirtualDestinationParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsVirtualDestinationParent.setStatus("current")
_JmsVirtualDestinationJNDIName_Type = Integer32
_JmsVirtualDestinationJNDIName_Object = MibTableColumn
jmsVirtualDestinationJNDIName = _JmsVirtualDestinationJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 682, 1, 25),
    _JmsVirtualDestinationJNDIName_Type()
)
jmsVirtualDestinationJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsVirtualDestinationJNDIName.setStatus("current")
_JtaTable_Object = MibTable
jtaTable = _JtaTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 690)
)
if mibBuilder.loadTexts:
    jtaTable.setStatus("current")
_JtaEntry_Object = MibTableRow
jtaEntry = _JtaEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 690, 1)
)
jtaEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jtaIndex"),
)
if mibBuilder.loadTexts:
    jtaEntry.setStatus("current")


class _JtaIndex_Type(DisplayString):
    """Custom type jtaIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_JtaIndex_Type.__name__ = "DisplayString"
_JtaIndex_Object = MibTableColumn
jtaIndex = _JtaIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 690, 1, 1),
    _JtaIndex_Type()
)
jtaIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaIndex.setStatus("current")


class _JtaObjectName_Type(DisplayString):
    """Custom type jtaObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JtaObjectName_Type.__name__ = "DisplayString"
_JtaObjectName_Object = MibTableColumn
jtaObjectName = _JtaObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 690, 1, 5),
    _JtaObjectName_Type()
)
jtaObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaObjectName.setStatus("current")


class _JtaType_Type(DisplayString):
    """Custom type jtaType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JtaType_Type.__name__ = "DisplayString"
_JtaType_Object = MibTableColumn
jtaType = _JtaType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 690, 1, 10),
    _JtaType_Type()
)
jtaType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaType.setStatus("current")


class _JtaName_Type(DisplayString):
    """Custom type jtaName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_JtaName_Type.__name__ = "DisplayString"
_JtaName_Object = MibTableColumn
jtaName = _JtaName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 690, 1, 15),
    _JtaName_Type()
)
jtaName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaName.setStatus("current")


class _JtaParent_Type(DisplayString):
    """Custom type jtaParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_JtaParent_Type.__name__ = "DisplayString"
_JtaParent_Object = MibTableColumn
jtaParent = _JtaParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 690, 1, 20),
    _JtaParent_Type()
)
jtaParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaParent.setStatus("current")
_JtaTimeoutSeconds_Type = Integer32
_JtaTimeoutSeconds_Object = MibTableColumn
jtaTimeoutSeconds = _JtaTimeoutSeconds_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 690, 1, 25),
    _JtaTimeoutSeconds_Type()
)
jtaTimeoutSeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaTimeoutSeconds.setStatus("current")
_JtaAbandonTimeoutSeconds_Type = Integer32
_JtaAbandonTimeoutSeconds_Object = MibTableColumn
jtaAbandonTimeoutSeconds = _JtaAbandonTimeoutSeconds_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 690, 1, 30),
    _JtaAbandonTimeoutSeconds_Type()
)
jtaAbandonTimeoutSeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaAbandonTimeoutSeconds.setStatus("current")


class _JtaForgetHeuristics_Type(Integer32):
    """Custom type jtaForgetHeuristics based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_JtaForgetHeuristics_Type.__name__ = "Integer32"
_JtaForgetHeuristics_Object = MibTableColumn
jtaForgetHeuristics = _JtaForgetHeuristics_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 690, 1, 35),
    _JtaForgetHeuristics_Type()
)
jtaForgetHeuristics.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaForgetHeuristics.setStatus("current")
_JtaBeforeCompletionIterationLimit_Type = Integer32
_JtaBeforeCompletionIterationLimit_Object = MibTableColumn
jtaBeforeCompletionIterationLimit = _JtaBeforeCompletionIterationLimit_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 690, 1, 40),
    _JtaBeforeCompletionIterationLimit_Type()
)
jtaBeforeCompletionIterationLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaBeforeCompletionIterationLimit.setStatus("current")
_JtaMaxTransactions_Type = Integer32
_JtaMaxTransactions_Object = MibTableColumn
jtaMaxTransactions = _JtaMaxTransactions_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 690, 1, 45),
    _JtaMaxTransactions_Type()
)
jtaMaxTransactions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaMaxTransactions.setStatus("current")
_JtaMaxUniqueNameStatistics_Type = Integer32
_JtaMaxUniqueNameStatistics_Object = MibTableColumn
jtaMaxUniqueNameStatistics = _JtaMaxUniqueNameStatistics_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 690, 1, 50),
    _JtaMaxUniqueNameStatistics_Type()
)
jtaMaxUniqueNameStatistics.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaMaxUniqueNameStatistics.setStatus("current")
_JtaMaxResourceRequestsOnServer_Type = Integer32
_JtaMaxResourceRequestsOnServer_Object = MibTableColumn
jtaMaxResourceRequestsOnServer = _JtaMaxResourceRequestsOnServer_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 690, 1, 51),
    _JtaMaxResourceRequestsOnServer_Type()
)
jtaMaxResourceRequestsOnServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaMaxResourceRequestsOnServer.setStatus("current")
_JtaMaxResourceUnavailableMillis_Type = Counter64
_JtaMaxResourceUnavailableMillis_Object = MibTableColumn
jtaMaxResourceUnavailableMillis = _JtaMaxResourceUnavailableMillis_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 690, 1, 52),
    _JtaMaxResourceUnavailableMillis_Type()
)
jtaMaxResourceUnavailableMillis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaMaxResourceUnavailableMillis.setStatus("current")
_JtaCheckpointIntervalSeconds_Type = Integer32
_JtaCheckpointIntervalSeconds_Object = MibTableColumn
jtaCheckpointIntervalSeconds = _JtaCheckpointIntervalSeconds_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 690, 1, 53),
    _JtaCheckpointIntervalSeconds_Type()
)
jtaCheckpointIntervalSeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaCheckpointIntervalSeconds.setStatus("current")
_JtaSerializeEnlistmentsGCIntervalMillis_Type = Counter64
_JtaSerializeEnlistmentsGCIntervalMillis_Object = MibTableColumn
jtaSerializeEnlistmentsGCIntervalMillis = _JtaSerializeEnlistmentsGCIntervalMillis_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 690, 1, 54),
    _JtaSerializeEnlistmentsGCIntervalMillis_Type()
)
jtaSerializeEnlistmentsGCIntervalMillis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaSerializeEnlistmentsGCIntervalMillis.setStatus("current")
_JtaUnregisterResourceGracePeriod_Type = Integer32
_JtaUnregisterResourceGracePeriod_Object = MibTableColumn
jtaUnregisterResourceGracePeriod = _JtaUnregisterResourceGracePeriod_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 690, 1, 55),
    _JtaUnregisterResourceGracePeriod_Type()
)
jtaUnregisterResourceGracePeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaUnregisterResourceGracePeriod.setStatus("current")
_JtaSecurityInteropMode_Type = OctetString
_JtaSecurityInteropMode_Object = MibTableColumn
jtaSecurityInteropMode = _JtaSecurityInteropMode_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 690, 1, 56),
    _JtaSecurityInteropMode_Type()
)
jtaSecurityInteropMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaSecurityInteropMode.setStatus("current")
_JtaMaxXACallMillis_Type = Counter64
_JtaMaxXACallMillis_Object = MibTableColumn
jtaMaxXACallMillis = _JtaMaxXACallMillis_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 690, 1, 57),
    _JtaMaxXACallMillis_Type()
)
jtaMaxXACallMillis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaMaxXACallMillis.setStatus("current")
_KernelTable_Object = MibTable
kernelTable = _KernelTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692)
)
if mibBuilder.loadTexts:
    kernelTable.setStatus("current")
_KernelEntry_Object = MibTableRow
kernelEntry = _KernelEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1)
)
kernelEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "kernelIndex"),
)
if mibBuilder.loadTexts:
    kernelEntry.setStatus("current")


class _KernelIndex_Type(DisplayString):
    """Custom type kernelIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_KernelIndex_Type.__name__ = "DisplayString"
_KernelIndex_Object = MibTableColumn
kernelIndex = _KernelIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 1),
    _KernelIndex_Type()
)
kernelIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelIndex.setStatus("current")


class _KernelObjectName_Type(DisplayString):
    """Custom type kernelObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_KernelObjectName_Type.__name__ = "DisplayString"
_KernelObjectName_Object = MibTableColumn
kernelObjectName = _KernelObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 5),
    _KernelObjectName_Type()
)
kernelObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelObjectName.setStatus("current")


class _KernelType_Type(DisplayString):
    """Custom type kernelType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_KernelType_Type.__name__ = "DisplayString"
_KernelType_Object = MibTableColumn
kernelType = _KernelType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 10),
    _KernelType_Type()
)
kernelType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelType.setStatus("current")


class _KernelName_Type(DisplayString):
    """Custom type kernelName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_KernelName_Type.__name__ = "DisplayString"
_KernelName_Object = MibTableColumn
kernelName = _KernelName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 15),
    _KernelName_Type()
)
kernelName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelName.setStatus("current")


class _KernelParent_Type(DisplayString):
    """Custom type kernelParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_KernelParent_Type.__name__ = "DisplayString"
_KernelParent_Object = MibTableColumn
kernelParent = _KernelParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 20),
    _KernelParent_Type()
)
kernelParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelParent.setStatus("current")
_KernelCompleteCOMMessageTimeout_Type = Integer32
_KernelCompleteCOMMessageTimeout_Object = MibTableColumn
kernelCompleteCOMMessageTimeout = _KernelCompleteCOMMessageTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 25),
    _KernelCompleteCOMMessageTimeout_Type()
)
kernelCompleteCOMMessageTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelCompleteCOMMessageTimeout.setStatus("current")
_KernelCompleteHTTPMessageTimeout_Type = Integer32
_KernelCompleteHTTPMessageTimeout_Object = MibTableColumn
kernelCompleteHTTPMessageTimeout = _KernelCompleteHTTPMessageTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 30),
    _KernelCompleteHTTPMessageTimeout_Type()
)
kernelCompleteHTTPMessageTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelCompleteHTTPMessageTimeout.setStatus("current")
_KernelCompleteIIOPMessageTimeout_Type = Integer32
_KernelCompleteIIOPMessageTimeout_Object = MibTableColumn
kernelCompleteIIOPMessageTimeout = _KernelCompleteIIOPMessageTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 35),
    _KernelCompleteIIOPMessageTimeout_Type()
)
kernelCompleteIIOPMessageTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelCompleteIIOPMessageTimeout.setStatus("current")
_KernelCompleteT3MessageTimeout_Type = Integer32
_KernelCompleteT3MessageTimeout_Object = MibTableColumn
kernelCompleteT3MessageTimeout = _KernelCompleteT3MessageTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 40),
    _KernelCompleteT3MessageTimeout_Type()
)
kernelCompleteT3MessageTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelCompleteT3MessageTimeout.setStatus("current")
_KernelDefaultGIOPMinorVersion_Type = Integer32
_KernelDefaultGIOPMinorVersion_Object = MibTableColumn
kernelDefaultGIOPMinorVersion = _KernelDefaultGIOPMinorVersion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 45),
    _KernelDefaultGIOPMinorVersion_Type()
)
kernelDefaultGIOPMinorVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelDefaultGIOPMinorVersion.setStatus("current")


class _KernelDefaultProtocol_Type(DisplayString):
    """Custom type kernelDefaultProtocol based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_KernelDefaultProtocol_Type.__name__ = "DisplayString"
_KernelDefaultProtocol_Object = MibTableColumn
kernelDefaultProtocol = _KernelDefaultProtocol_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 55),
    _KernelDefaultProtocol_Type()
)
kernelDefaultProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelDefaultProtocol.setStatus("current")


class _KernelDefaultSecureProtocol_Type(DisplayString):
    """Custom type kernelDefaultSecureProtocol based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_KernelDefaultSecureProtocol_Type.__name__ = "DisplayString"
_KernelDefaultSecureProtocol_Object = MibTableColumn
kernelDefaultSecureProtocol = _KernelDefaultSecureProtocol_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 60),
    _KernelDefaultSecureProtocol_Type()
)
kernelDefaultSecureProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelDefaultSecureProtocol.setStatus("current")
_KernelDGCIdlePeriodsUntilTimeout_Type = Integer32
_KernelDGCIdlePeriodsUntilTimeout_Object = MibTableColumn
kernelDGCIdlePeriodsUntilTimeout = _KernelDGCIdlePeriodsUntilTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 65),
    _KernelDGCIdlePeriodsUntilTimeout_Type()
)
kernelDGCIdlePeriodsUntilTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelDGCIdlePeriodsUntilTimeout.setStatus("current")
_KernelIdleIIOPConnectionTimeout_Type = Integer32
_KernelIdleIIOPConnectionTimeout_Object = MibTableColumn
kernelIdleIIOPConnectionTimeout = _KernelIdleIIOPConnectionTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 70),
    _KernelIdleIIOPConnectionTimeout_Type()
)
kernelIdleIIOPConnectionTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelIdleIIOPConnectionTimeout.setStatus("current")
_KernelMaxCOMMessageSize_Type = Integer32
_KernelMaxCOMMessageSize_Object = MibTableColumn
kernelMaxCOMMessageSize = _KernelMaxCOMMessageSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 75),
    _KernelMaxCOMMessageSize_Type()
)
kernelMaxCOMMessageSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelMaxCOMMessageSize.setStatus("current")
_KernelMaxHTTPMessageSize_Type = Integer32
_KernelMaxHTTPMessageSize_Object = MibTableColumn
kernelMaxHTTPMessageSize = _KernelMaxHTTPMessageSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 85),
    _KernelMaxHTTPMessageSize_Type()
)
kernelMaxHTTPMessageSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelMaxHTTPMessageSize.setStatus("current")
_KernelMaxIIOPMessageSize_Type = Integer32
_KernelMaxIIOPMessageSize_Object = MibTableColumn
kernelMaxIIOPMessageSize = _KernelMaxIIOPMessageSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 90),
    _KernelMaxIIOPMessageSize_Type()
)
kernelMaxIIOPMessageSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelMaxIIOPMessageSize.setStatus("current")
_KernelMaxOpenSockCount_Type = Integer32
_KernelMaxOpenSockCount_Object = MibTableColumn
kernelMaxOpenSockCount = _KernelMaxOpenSockCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 95),
    _KernelMaxOpenSockCount_Type()
)
kernelMaxOpenSockCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelMaxOpenSockCount.setStatus("current")
_KernelMaxT3MessageSize_Type = Integer32
_KernelMaxT3MessageSize_Object = MibTableColumn
kernelMaxT3MessageSize = _KernelMaxT3MessageSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 100),
    _KernelMaxT3MessageSize_Type()
)
kernelMaxT3MessageSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelMaxT3MessageSize.setStatus("current")


class _KernelStdoutFormat_Type(DisplayString):
    """Custom type kernelStdoutFormat based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_KernelStdoutFormat_Type.__name__ = "DisplayString"
_KernelStdoutFormat_Object = MibTableColumn
kernelStdoutFormat = _KernelStdoutFormat_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 105),
    _KernelStdoutFormat_Type()
)
kernelStdoutFormat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelStdoutFormat.setStatus("current")
_KernelStdoutSeverityLevel_Type = Integer32
_KernelStdoutSeverityLevel_Object = MibTableColumn
kernelStdoutSeverityLevel = _KernelStdoutSeverityLevel_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 110),
    _KernelStdoutSeverityLevel_Type()
)
kernelStdoutSeverityLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelStdoutSeverityLevel.setStatus("current")
_KernelStuckThreadMaxTime_Type = Integer32
_KernelStuckThreadMaxTime_Object = MibTableColumn
kernelStuckThreadMaxTime = _KernelStuckThreadMaxTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 115),
    _KernelStuckThreadMaxTime_Type()
)
kernelStuckThreadMaxTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelStuckThreadMaxTime.setStatus("current")
_KernelStuckThreadTimerInterval_Type = Integer32
_KernelStuckThreadTimerInterval_Object = MibTableColumn
kernelStuckThreadTimerInterval = _KernelStuckThreadTimerInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 120),
    _KernelStuckThreadTimerInterval_Type()
)
kernelStuckThreadTimerInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelStuckThreadTimerInterval.setStatus("current")
_KernelThreadPoolPercentSocketReaders_Type = Integer32
_KernelThreadPoolPercentSocketReaders_Object = MibTableColumn
kernelThreadPoolPercentSocketReaders = _KernelThreadPoolPercentSocketReaders_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 125),
    _KernelThreadPoolPercentSocketReaders_Type()
)
kernelThreadPoolPercentSocketReaders.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelThreadPoolPercentSocketReaders.setStatus("current")
_KernelInstrumentStackTraceEnabled_Type = Integer32
_KernelInstrumentStackTraceEnabled_Object = MibTableColumn
kernelInstrumentStackTraceEnabled = _KernelInstrumentStackTraceEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 130),
    _KernelInstrumentStackTraceEnabled_Type()
)
kernelInstrumentStackTraceEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelInstrumentStackTraceEnabled.setStatus("current")
_KernelLogRemoteExceptionsEnabled_Type = Integer32
_KernelLogRemoteExceptionsEnabled_Object = MibTableColumn
kernelLogRemoteExceptionsEnabled = _KernelLogRemoteExceptionsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 135),
    _KernelLogRemoteExceptionsEnabled_Type()
)
kernelLogRemoteExceptionsEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelLogRemoteExceptionsEnabled.setStatus("current")
_KernelNativeIOEnabled_Type = Integer32
_KernelNativeIOEnabled_Object = MibTableColumn
kernelNativeIOEnabled = _KernelNativeIOEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 140),
    _KernelNativeIOEnabled_Type()
)
kernelNativeIOEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelNativeIOEnabled.setStatus("current")
_KernelReverseDNSAllowed_Type = Integer32
_KernelReverseDNSAllowed_Object = MibTableColumn
kernelReverseDNSAllowed = _KernelReverseDNSAllowed_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 145),
    _KernelReverseDNSAllowed_Type()
)
kernelReverseDNSAllowed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelReverseDNSAllowed.setStatus("current")
_KernelStdoutDebugEnabled_Type = Integer32
_KernelStdoutDebugEnabled_Object = MibTableColumn
kernelStdoutDebugEnabled = _KernelStdoutDebugEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 150),
    _KernelStdoutDebugEnabled_Type()
)
kernelStdoutDebugEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelStdoutDebugEnabled.setStatus("current")
_KernelStdoutEnabled_Type = Integer32
_KernelStdoutEnabled_Object = MibTableColumn
kernelStdoutEnabled = _KernelStdoutEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 155),
    _KernelStdoutEnabled_Type()
)
kernelStdoutEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelStdoutEnabled.setStatus("current")
_KernelStdoutLogStack_Type = Integer32
_KernelStdoutLogStack_Object = MibTableColumn
kernelStdoutLogStack = _KernelStdoutLogStack_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 692, 1, 160),
    _KernelStdoutLogStack_Type()
)
kernelStdoutLogStack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kernelStdoutLogStack.setStatus("current")
_LogTable_Object = MibTable
logTable = _LogTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700)
)
if mibBuilder.loadTexts:
    logTable.setStatus("current")
_LogEntry_Object = MibTableRow
logEntry = _LogEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1)
)
logEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "logIndex"),
)
if mibBuilder.loadTexts:
    logEntry.setStatus("current")


class _LogIndex_Type(DisplayString):
    """Custom type logIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_LogIndex_Type.__name__ = "DisplayString"
_LogIndex_Object = MibTableColumn
logIndex = _LogIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 1),
    _LogIndex_Type()
)
logIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logIndex.setStatus("current")


class _LogObjectName_Type(DisplayString):
    """Custom type logObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_LogObjectName_Type.__name__ = "DisplayString"
_LogObjectName_Object = MibTableColumn
logObjectName = _LogObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 5),
    _LogObjectName_Type()
)
logObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logObjectName.setStatus("current")


class _LogType_Type(DisplayString):
    """Custom type logType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_LogType_Type.__name__ = "DisplayString"
_LogType_Object = MibTableColumn
logType = _LogType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 10),
    _LogType_Type()
)
logType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logType.setStatus("current")


class _LogName_Type(DisplayString):
    """Custom type logName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_LogName_Type.__name__ = "DisplayString"
_LogName_Object = MibTableColumn
logName = _LogName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 15),
    _LogName_Type()
)
logName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logName.setStatus("current")


class _LogParent_Type(DisplayString):
    """Custom type logParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_LogParent_Type.__name__ = "DisplayString"
_LogParent_Object = MibTableColumn
logParent = _LogParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 20),
    _LogParent_Type()
)
logParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logParent.setStatus("current")


class _LogFileName_Type(DisplayString):
    """Custom type logFileName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_LogFileName_Type.__name__ = "DisplayString"
_LogFileName_Object = MibTableColumn
logFileName = _LogFileName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 25),
    _LogFileName_Type()
)
logFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logFileName.setStatus("current")


class _LogRotationType_Type(DisplayString):
    """Custom type logRotationType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_LogRotationType_Type.__name__ = "DisplayString"
_LogRotationType_Object = MibTableColumn
logRotationType = _LogRotationType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 30),
    _LogRotationType_Type()
)
logRotationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logRotationType.setStatus("current")


class _LogNumberOfFilesLimited_Type(Integer32):
    """Custom type logNumberOfFilesLimited based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_LogNumberOfFilesLimited_Type.__name__ = "Integer32"
_LogNumberOfFilesLimited_Object = MibTableColumn
logNumberOfFilesLimited = _LogNumberOfFilesLimited_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 35),
    _LogNumberOfFilesLimited_Type()
)
logNumberOfFilesLimited.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logNumberOfFilesLimited.setStatus("current")
_LogFileCount_Type = Integer32
_LogFileCount_Object = MibTableColumn
logFileCount = _LogFileCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 40),
    _LogFileCount_Type()
)
logFileCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logFileCount.setStatus("current")
_LogFileTimeSpan_Type = Integer32
_LogFileTimeSpan_Object = MibTableColumn
logFileTimeSpan = _LogFileTimeSpan_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 45),
    _LogFileTimeSpan_Type()
)
logFileTimeSpan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logFileTimeSpan.setStatus("current")
_LogFileMinSize_Type = Integer32
_LogFileMinSize_Object = MibTableColumn
logFileMinSize = _LogFileMinSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 50),
    _LogFileMinSize_Type()
)
logFileMinSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logFileMinSize.setStatus("current")
_LogRedirectStderrToServerLogEnabled_Type = OctetString
_LogRedirectStderrToServerLogEnabled_Object = MibTableColumn
logRedirectStderrToServerLogEnabled = _LogRedirectStderrToServerLogEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 51),
    _LogRedirectStderrToServerLogEnabled_Type()
)
logRedirectStderrToServerLogEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logRedirectStderrToServerLogEnabled.setStatus("current")
_LogLogFileSeverity_Type = OctetString
_LogLogFileSeverity_Object = MibTableColumn
logLogFileSeverity = _LogLogFileSeverity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 52),
    _LogLogFileSeverity_Type()
)
logLogFileSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logLogFileSeverity.setStatus("current")
_LogLoggerSeverity_Type = OctetString
_LogLoggerSeverity_Object = MibTableColumn
logLoggerSeverity = _LogLoggerSeverity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 53),
    _LogLoggerSeverity_Type()
)
logLoggerSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logLoggerSeverity.setStatus("current")
_LogBufferSizeKB_Type = Integer32
_LogBufferSizeKB_Object = MibTableColumn
logBufferSizeKB = _LogBufferSizeKB_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 54),
    _LogBufferSizeKB_Type()
)
logBufferSizeKB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logBufferSizeKB.setStatus("current")
_LogMemoryBufferSeverity_Type = OctetString
_LogMemoryBufferSeverity_Object = MibTableColumn
logMemoryBufferSeverity = _LogMemoryBufferSeverity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 55),
    _LogMemoryBufferSeverity_Type()
)
logMemoryBufferSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logMemoryBufferSeverity.setStatus("current")
_LogLog4jLoggingEnabled_Type = OctetString
_LogLog4jLoggingEnabled_Object = MibTableColumn
logLog4jLoggingEnabled = _LogLog4jLoggingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 56),
    _LogLog4jLoggingEnabled_Type()
)
logLog4jLoggingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logLog4jLoggingEnabled.setStatus("current")
_LogRotationTime_Type = OctetString
_LogRotationTime_Object = MibTableColumn
logRotationTime = _LogRotationTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 57),
    _LogRotationTime_Type()
)
logRotationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logRotationTime.setStatus("current")
_LogStdoutLogStack_Type = OctetString
_LogStdoutLogStack_Object = MibTableColumn
logStdoutLogStack = _LogStdoutLogStack_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 58),
    _LogStdoutLogStack_Type()
)
logStdoutLogStack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logStdoutLogStack.setStatus("current")
_LogRotateLogOnStartup_Type = OctetString
_LogRotateLogOnStartup_Object = MibTableColumn
logRotateLogOnStartup = _LogRotateLogOnStartup_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 59),
    _LogRotateLogOnStartup_Type()
)
logRotateLogOnStartup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logRotateLogOnStartup.setStatus("current")
_LogRedirectStdoutToServerLogEnabled_Type = OctetString
_LogRedirectStdoutToServerLogEnabled_Object = MibTableColumn
logRedirectStdoutToServerLogEnabled = _LogRedirectStdoutToServerLogEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 60),
    _LogRedirectStdoutToServerLogEnabled_Type()
)
logRedirectStdoutToServerLogEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logRedirectStdoutToServerLogEnabled.setStatus("current")
_LogMemoryBufferSize_Type = Integer32
_LogMemoryBufferSize_Object = MibTableColumn
logMemoryBufferSize = _LogMemoryBufferSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 61),
    _LogMemoryBufferSize_Type()
)
logMemoryBufferSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logMemoryBufferSize.setStatus("current")
_LogStdoutFormat_Type = OctetString
_LogStdoutFormat_Object = MibTableColumn
logStdoutFormat = _LogStdoutFormat_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 62),
    _LogStdoutFormat_Type()
)
logStdoutFormat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logStdoutFormat.setStatus("current")
_LogDomainLogBroadcasterBufferSize_Type = Integer32
_LogDomainLogBroadcasterBufferSize_Object = MibTableColumn
logDomainLogBroadcasterBufferSize = _LogDomainLogBroadcasterBufferSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 63),
    _LogDomainLogBroadcasterBufferSize_Type()
)
logDomainLogBroadcasterBufferSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logDomainLogBroadcasterBufferSize.setStatus("current")
_LogDateFormatPattern_Type = OctetString
_LogDateFormatPattern_Object = MibTableColumn
logDateFormatPattern = _LogDateFormatPattern_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 64),
    _LogDateFormatPattern_Type()
)
logDateFormatPattern.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logDateFormatPattern.setStatus("current")
_LogDomainLogBroadcastSeverity_Type = OctetString
_LogDomainLogBroadcastSeverity_Object = MibTableColumn
logDomainLogBroadcastSeverity = _LogDomainLogBroadcastSeverity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 65),
    _LogDomainLogBroadcastSeverity_Type()
)
logDomainLogBroadcastSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logDomainLogBroadcastSeverity.setStatus("current")
_LogStdoutSeverity_Type = OctetString
_LogStdoutSeverity_Object = MibTableColumn
logStdoutSeverity = _LogStdoutSeverity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 66),
    _LogStdoutSeverity_Type()
)
logStdoutSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logStdoutSeverity.setStatus("current")
_LogLogFileRotationDir_Type = OctetString
_LogLogFileRotationDir_Object = MibTableColumn
logLogFileRotationDir = _LogLogFileRotationDir_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 700, 1, 67),
    _LogLogFileRotationDir_Type()
)
logLogFileRotationDir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logLogFileRotationDir.setStatus("current")
_NetworkChannelTable_Object = MibTable
networkChannelTable = _NetworkChannelTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703)
)
if mibBuilder.loadTexts:
    networkChannelTable.setStatus("current")
_NetworkChannelEntry_Object = MibTableRow
networkChannelEntry = _NetworkChannelEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1)
)
networkChannelEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "networkChannelIndex"),
)
if mibBuilder.loadTexts:
    networkChannelEntry.setStatus("current")


class _NetworkChannelIndex_Type(DisplayString):
    """Custom type networkChannelIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_NetworkChannelIndex_Type.__name__ = "DisplayString"
_NetworkChannelIndex_Object = MibTableColumn
networkChannelIndex = _NetworkChannelIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 1),
    _NetworkChannelIndex_Type()
)
networkChannelIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelIndex.setStatus("current")


class _NetworkChannelObjectName_Type(DisplayString):
    """Custom type networkChannelObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_NetworkChannelObjectName_Type.__name__ = "DisplayString"
_NetworkChannelObjectName_Object = MibTableColumn
networkChannelObjectName = _NetworkChannelObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 5),
    _NetworkChannelObjectName_Type()
)
networkChannelObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelObjectName.setStatus("current")


class _NetworkChannelType_Type(DisplayString):
    """Custom type networkChannelType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_NetworkChannelType_Type.__name__ = "DisplayString"
_NetworkChannelType_Object = MibTableColumn
networkChannelType = _NetworkChannelType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 10),
    _NetworkChannelType_Type()
)
networkChannelType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelType.setStatus("current")


class _NetworkChannelName_Type(DisplayString):
    """Custom type networkChannelName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_NetworkChannelName_Type.__name__ = "DisplayString"
_NetworkChannelName_Object = MibTableColumn
networkChannelName = _NetworkChannelName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 15),
    _NetworkChannelName_Type()
)
networkChannelName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelName.setStatus("current")


class _NetworkChannelParent_Type(DisplayString):
    """Custom type networkChannelParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_NetworkChannelParent_Type.__name__ = "DisplayString"
_NetworkChannelParent_Object = MibTableColumn
networkChannelParent = _NetworkChannelParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 20),
    _NetworkChannelParent_Type()
)
networkChannelParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelParent.setStatus("current")
_NetworkChannelAcceptBacklog_Type = Integer32
_NetworkChannelAcceptBacklog_Object = MibTableColumn
networkChannelAcceptBacklog = _NetworkChannelAcceptBacklog_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 25),
    _NetworkChannelAcceptBacklog_Type()
)
networkChannelAcceptBacklog.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelAcceptBacklog.setStatus("current")
_NetworkChannelChannelWeight_Type = Integer32
_NetworkChannelChannelWeight_Object = MibTableColumn
networkChannelChannelWeight = _NetworkChannelChannelWeight_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 30),
    _NetworkChannelChannelWeight_Type()
)
networkChannelChannelWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelChannelWeight.setStatus("current")


class _NetworkChannelClusterAddress_Type(DisplayString):
    """Custom type networkChannelClusterAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_NetworkChannelClusterAddress_Type.__name__ = "DisplayString"
_NetworkChannelClusterAddress_Object = MibTableColumn
networkChannelClusterAddress = _NetworkChannelClusterAddress_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 35),
    _NetworkChannelClusterAddress_Type()
)
networkChannelClusterAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelClusterAddress.setStatus("current")
_NetworkChannelCompleteCOMMessageTimeout_Type = Integer32
_NetworkChannelCompleteCOMMessageTimeout_Object = MibTableColumn
networkChannelCompleteCOMMessageTimeout = _NetworkChannelCompleteCOMMessageTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 40),
    _NetworkChannelCompleteCOMMessageTimeout_Type()
)
networkChannelCompleteCOMMessageTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelCompleteCOMMessageTimeout.setStatus("current")
_NetworkChannelCompleteHTTPMessageTimeout_Type = Integer32
_NetworkChannelCompleteHTTPMessageTimeout_Object = MibTableColumn
networkChannelCompleteHTTPMessageTimeout = _NetworkChannelCompleteHTTPMessageTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 45),
    _NetworkChannelCompleteHTTPMessageTimeout_Type()
)
networkChannelCompleteHTTPMessageTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelCompleteHTTPMessageTimeout.setStatus("current")
_NetworkChannelCompleteT3MessageTimeout_Type = Integer32
_NetworkChannelCompleteT3MessageTimeout_Object = MibTableColumn
networkChannelCompleteT3MessageTimeout = _NetworkChannelCompleteT3MessageTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 50),
    _NetworkChannelCompleteT3MessageTimeout_Type()
)
networkChannelCompleteT3MessageTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelCompleteT3MessageTimeout.setStatus("current")


class _NetworkChannelDescription_Type(DisplayString):
    """Custom type networkChannelDescription based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_NetworkChannelDescription_Type.__name__ = "DisplayString"
_NetworkChannelDescription_Object = MibTableColumn
networkChannelDescription = _NetworkChannelDescription_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 55),
    _NetworkChannelDescription_Type()
)
networkChannelDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelDescription.setStatus("current")
_NetworkChannelListenPort_Type = Integer32
_NetworkChannelListenPort_Object = MibTableColumn
networkChannelListenPort = _NetworkChannelListenPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 60),
    _NetworkChannelListenPort_Type()
)
networkChannelListenPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelListenPort.setStatus("current")
_NetworkChannelLoginTimeoutMillis_Type = Integer32
_NetworkChannelLoginTimeoutMillis_Object = MibTableColumn
networkChannelLoginTimeoutMillis = _NetworkChannelLoginTimeoutMillis_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 65),
    _NetworkChannelLoginTimeoutMillis_Type()
)
networkChannelLoginTimeoutMillis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelLoginTimeoutMillis.setStatus("current")
_NetworkChannelLoginTimeoutMillisSSL_Type = Integer32
_NetworkChannelLoginTimeoutMillisSSL_Object = MibTableColumn
networkChannelLoginTimeoutMillisSSL = _NetworkChannelLoginTimeoutMillisSSL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 70),
    _NetworkChannelLoginTimeoutMillisSSL_Type()
)
networkChannelLoginTimeoutMillisSSL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelLoginTimeoutMillisSSL.setStatus("current")
_NetworkChannelMaxCOMMessageSize_Type = Integer32
_NetworkChannelMaxCOMMessageSize_Object = MibTableColumn
networkChannelMaxCOMMessageSize = _NetworkChannelMaxCOMMessageSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 75),
    _NetworkChannelMaxCOMMessageSize_Type()
)
networkChannelMaxCOMMessageSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelMaxCOMMessageSize.setStatus("current")
_NetworkChannelMaxT3MessageSize_Type = Integer32
_NetworkChannelMaxT3MessageSize_Object = MibTableColumn
networkChannelMaxT3MessageSize = _NetworkChannelMaxT3MessageSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 80),
    _NetworkChannelMaxT3MessageSize_Type()
)
networkChannelMaxT3MessageSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelMaxT3MessageSize.setStatus("current")
_NetworkChannelMaxHTTPMessageSize_Type = Integer32
_NetworkChannelMaxHTTPMessageSize_Object = MibTableColumn
networkChannelMaxHTTPMessageSize = _NetworkChannelMaxHTTPMessageSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 85),
    _NetworkChannelMaxHTTPMessageSize_Type()
)
networkChannelMaxHTTPMessageSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelMaxHTTPMessageSize.setStatus("current")
_NetworkChannelSSLListenPort_Type = Integer32
_NetworkChannelSSLListenPort_Object = MibTableColumn
networkChannelSSLListenPort = _NetworkChannelSSLListenPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 90),
    _NetworkChannelSSLListenPort_Type()
)
networkChannelSSLListenPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelSSLListenPort.setStatus("current")
_NetworkChannelTunnelingClientPingSecs_Type = Integer32
_NetworkChannelTunnelingClientPingSecs_Object = MibTableColumn
networkChannelTunnelingClientPingSecs = _NetworkChannelTunnelingClientPingSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 95),
    _NetworkChannelTunnelingClientPingSecs_Type()
)
networkChannelTunnelingClientPingSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelTunnelingClientPingSecs.setStatus("current")
_NetworkChannelTunnelingClientTimeoutSecs_Type = Integer32
_NetworkChannelTunnelingClientTimeoutSecs_Object = MibTableColumn
networkChannelTunnelingClientTimeoutSecs = _NetworkChannelTunnelingClientTimeoutSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 100),
    _NetworkChannelTunnelingClientTimeoutSecs_Type()
)
networkChannelTunnelingClientTimeoutSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelTunnelingClientTimeoutSecs.setStatus("current")
_NetworkChannelBoundOutgoingEnabled_Type = Integer32
_NetworkChannelBoundOutgoingEnabled_Object = MibTableColumn
networkChannelBoundOutgoingEnabled = _NetworkChannelBoundOutgoingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 105),
    _NetworkChannelBoundOutgoingEnabled_Type()
)
networkChannelBoundOutgoingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelBoundOutgoingEnabled.setStatus("current")
_NetworkChannelCOMEnabled_Type = Integer32
_NetworkChannelCOMEnabled_Object = MibTableColumn
networkChannelCOMEnabled = _NetworkChannelCOMEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 110),
    _NetworkChannelCOMEnabled_Type()
)
networkChannelCOMEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelCOMEnabled.setStatus("current")
_NetworkChannelHTTPEnabled_Type = Integer32
_NetworkChannelHTTPEnabled_Object = MibTableColumn
networkChannelHTTPEnabled = _NetworkChannelHTTPEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 115),
    _NetworkChannelHTTPEnabled_Type()
)
networkChannelHTTPEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelHTTPEnabled.setStatus("current")
_NetworkChannelHTTPSEnabled_Type = Integer32
_NetworkChannelHTTPSEnabled_Object = MibTableColumn
networkChannelHTTPSEnabled = _NetworkChannelHTTPSEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 120),
    _NetworkChannelHTTPSEnabled_Type()
)
networkChannelHTTPSEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelHTTPSEnabled.setStatus("current")
_NetworkChannelListenPortEnabled_Type = Integer32
_NetworkChannelListenPortEnabled_Object = MibTableColumn
networkChannelListenPortEnabled = _NetworkChannelListenPortEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 125),
    _NetworkChannelListenPortEnabled_Type()
)
networkChannelListenPortEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelListenPortEnabled.setStatus("current")
_NetworkChannelOutgoingEnabled_Type = Integer32
_NetworkChannelOutgoingEnabled_Object = MibTableColumn
networkChannelOutgoingEnabled = _NetworkChannelOutgoingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 130),
    _NetworkChannelOutgoingEnabled_Type()
)
networkChannelOutgoingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelOutgoingEnabled.setStatus("current")
_NetworkChannelSSLListenPortEnabled_Type = Integer32
_NetworkChannelSSLListenPortEnabled_Object = MibTableColumn
networkChannelSSLListenPortEnabled = _NetworkChannelSSLListenPortEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 135),
    _NetworkChannelSSLListenPortEnabled_Type()
)
networkChannelSSLListenPortEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelSSLListenPortEnabled.setStatus("current")
_NetworkChannelT3Enabled_Type = Integer32
_NetworkChannelT3Enabled_Object = MibTableColumn
networkChannelT3Enabled = _NetworkChannelT3Enabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 140),
    _NetworkChannelT3Enabled_Type()
)
networkChannelT3Enabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelT3Enabled.setStatus("current")
_NetworkChannelT3SEnabled_Type = Integer32
_NetworkChannelT3SEnabled_Object = MibTableColumn
networkChannelT3SEnabled = _NetworkChannelT3SEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 145),
    _NetworkChannelT3SEnabled_Type()
)
networkChannelT3SEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelT3SEnabled.setStatus("current")
_NetworkChannelTunnelingEnabled_Type = Integer32
_NetworkChannelTunnelingEnabled_Object = MibTableColumn
networkChannelTunnelingEnabled = _NetworkChannelTunnelingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 703, 1, 150),
    _NetworkChannelTunnelingEnabled_Type()
)
networkChannelTunnelingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkChannelTunnelingEnabled.setStatus("current")
_NetworkAccessPointTable_Object = MibTable
networkAccessPointTable = _NetworkAccessPointTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705)
)
if mibBuilder.loadTexts:
    networkAccessPointTable.setStatus("current")
_NetworkAccessPointEntry_Object = MibTableRow
networkAccessPointEntry = _NetworkAccessPointEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1)
)
networkAccessPointEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "networkAccessPointIndex"),
)
if mibBuilder.loadTexts:
    networkAccessPointEntry.setStatus("current")


class _NetworkAccessPointIndex_Type(DisplayString):
    """Custom type networkAccessPointIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_NetworkAccessPointIndex_Type.__name__ = "DisplayString"
_NetworkAccessPointIndex_Object = MibTableColumn
networkAccessPointIndex = _NetworkAccessPointIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 1),
    _NetworkAccessPointIndex_Type()
)
networkAccessPointIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointIndex.setStatus("current")


class _NetworkAccessPointObjectName_Type(DisplayString):
    """Custom type networkAccessPointObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_NetworkAccessPointObjectName_Type.__name__ = "DisplayString"
_NetworkAccessPointObjectName_Object = MibTableColumn
networkAccessPointObjectName = _NetworkAccessPointObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 5),
    _NetworkAccessPointObjectName_Type()
)
networkAccessPointObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointObjectName.setStatus("current")


class _NetworkAccessPointType_Type(DisplayString):
    """Custom type networkAccessPointType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_NetworkAccessPointType_Type.__name__ = "DisplayString"
_NetworkAccessPointType_Object = MibTableColumn
networkAccessPointType = _NetworkAccessPointType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 10),
    _NetworkAccessPointType_Type()
)
networkAccessPointType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointType.setStatus("current")


class _NetworkAccessPointName_Type(DisplayString):
    """Custom type networkAccessPointName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_NetworkAccessPointName_Type.__name__ = "DisplayString"
_NetworkAccessPointName_Object = MibTableColumn
networkAccessPointName = _NetworkAccessPointName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 15),
    _NetworkAccessPointName_Type()
)
networkAccessPointName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointName.setStatus("current")


class _NetworkAccessPointParent_Type(DisplayString):
    """Custom type networkAccessPointParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_NetworkAccessPointParent_Type.__name__ = "DisplayString"
_NetworkAccessPointParent_Object = MibTableColumn
networkAccessPointParent = _NetworkAccessPointParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 20),
    _NetworkAccessPointParent_Type()
)
networkAccessPointParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointParent.setStatus("current")
_NetworkAccessPointAcceptBacklog_Type = Integer32
_NetworkAccessPointAcceptBacklog_Object = MibTableColumn
networkAccessPointAcceptBacklog = _NetworkAccessPointAcceptBacklog_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 25),
    _NetworkAccessPointAcceptBacklog_Type()
)
networkAccessPointAcceptBacklog.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointAcceptBacklog.setStatus("current")
_NetworkAccessPointCompleteCOMMessageTimeout_Type = Integer32
_NetworkAccessPointCompleteCOMMessageTimeout_Object = MibTableColumn
networkAccessPointCompleteCOMMessageTimeout = _NetworkAccessPointCompleteCOMMessageTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 30),
    _NetworkAccessPointCompleteCOMMessageTimeout_Type()
)
networkAccessPointCompleteCOMMessageTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointCompleteCOMMessageTimeout.setStatus("current")
_NetworkAccessPointCompleteHTTPMessageTimeout_Type = Integer32
_NetworkAccessPointCompleteHTTPMessageTimeout_Object = MibTableColumn
networkAccessPointCompleteHTTPMessageTimeout = _NetworkAccessPointCompleteHTTPMessageTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 35),
    _NetworkAccessPointCompleteHTTPMessageTimeout_Type()
)
networkAccessPointCompleteHTTPMessageTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointCompleteHTTPMessageTimeout.setStatus("current")
_NetworkAccessPointCompleteT3MessageTimeout_Type = Integer32
_NetworkAccessPointCompleteT3MessageTimeout_Object = MibTableColumn
networkAccessPointCompleteT3MessageTimeout = _NetworkAccessPointCompleteT3MessageTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 40),
    _NetworkAccessPointCompleteT3MessageTimeout_Type()
)
networkAccessPointCompleteT3MessageTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointCompleteT3MessageTimeout.setStatus("current")


class _NetworkAccessPointListenAddress_Type(DisplayString):
    """Custom type networkAccessPointListenAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_NetworkAccessPointListenAddress_Type.__name__ = "DisplayString"
_NetworkAccessPointListenAddress_Object = MibTableColumn
networkAccessPointListenAddress = _NetworkAccessPointListenAddress_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 45),
    _NetworkAccessPointListenAddress_Type()
)
networkAccessPointListenAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointListenAddress.setStatus("current")
_NetworkAccessPointListenPort_Type = Integer32
_NetworkAccessPointListenPort_Object = MibTableColumn
networkAccessPointListenPort = _NetworkAccessPointListenPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 50),
    _NetworkAccessPointListenPort_Type()
)
networkAccessPointListenPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointListenPort.setStatus("current")
_NetworkAccessPointLoginTimeoutMillisSSL_Type = Integer32
_NetworkAccessPointLoginTimeoutMillisSSL_Object = MibTableColumn
networkAccessPointLoginTimeoutMillisSSL = _NetworkAccessPointLoginTimeoutMillisSSL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 55),
    _NetworkAccessPointLoginTimeoutMillisSSL_Type()
)
networkAccessPointLoginTimeoutMillisSSL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointLoginTimeoutMillisSSL.setStatus("current")
_NetworkAccessPointLoginTimeoutMillis_Type = Integer32
_NetworkAccessPointLoginTimeoutMillis_Object = MibTableColumn
networkAccessPointLoginTimeoutMillis = _NetworkAccessPointLoginTimeoutMillis_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 60),
    _NetworkAccessPointLoginTimeoutMillis_Type()
)
networkAccessPointLoginTimeoutMillis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointLoginTimeoutMillis.setStatus("current")
_NetworkAccessPointSSLListenPort_Type = Integer32
_NetworkAccessPointSSLListenPort_Object = MibTableColumn
networkAccessPointSSLListenPort = _NetworkAccessPointSSLListenPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 65),
    _NetworkAccessPointSSLListenPort_Type()
)
networkAccessPointSSLListenPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointSSLListenPort.setStatus("current")
_NetworkAccessPointTunnelingClientPingSecs_Type = Integer32
_NetworkAccessPointTunnelingClientPingSecs_Object = MibTableColumn
networkAccessPointTunnelingClientPingSecs = _NetworkAccessPointTunnelingClientPingSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 70),
    _NetworkAccessPointTunnelingClientPingSecs_Type()
)
networkAccessPointTunnelingClientPingSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointTunnelingClientPingSecs.setStatus("current")
_NetworkAccessPointTunnelingClientTimeoutSecs_Type = Integer32
_NetworkAccessPointTunnelingClientTimeoutSecs_Object = MibTableColumn
networkAccessPointTunnelingClientTimeoutSecs = _NetworkAccessPointTunnelingClientTimeoutSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 75),
    _NetworkAccessPointTunnelingClientTimeoutSecs_Type()
)
networkAccessPointTunnelingClientTimeoutSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointTunnelingClientTimeoutSecs.setStatus("current")
_NetworkAccessPointUseFastSerialization_Type = OctetString
_NetworkAccessPointUseFastSerialization_Object = MibTableColumn
networkAccessPointUseFastSerialization = _NetworkAccessPointUseFastSerialization_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 76),
    _NetworkAccessPointUseFastSerialization_Type()
)
networkAccessPointUseFastSerialization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointUseFastSerialization.setStatus("current")
_NetworkAccessPointProxyPort_Type = Integer32
_NetworkAccessPointProxyPort_Object = MibTableColumn
networkAccessPointProxyPort = _NetworkAccessPointProxyPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 77),
    _NetworkAccessPointProxyPort_Type()
)
networkAccessPointProxyPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointProxyPort.setStatus("current")
_NetworkAccessPointTwoWaySSLEnabled_Type = OctetString
_NetworkAccessPointTwoWaySSLEnabled_Object = MibTableColumn
networkAccessPointTwoWaySSLEnabled = _NetworkAccessPointTwoWaySSLEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 78),
    _NetworkAccessPointTwoWaySSLEnabled_Type()
)
networkAccessPointTwoWaySSLEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointTwoWaySSLEnabled.setStatus("current")
_NetworkAccessPointChannelWeight_Type = Integer32
_NetworkAccessPointChannelWeight_Object = MibTableColumn
networkAccessPointChannelWeight = _NetworkAccessPointChannelWeight_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 79),
    _NetworkAccessPointChannelWeight_Type()
)
networkAccessPointChannelWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointChannelWeight.setStatus("current")
_NetworkAccessPointHttpEnabledForThisProtocol_Type = OctetString
_NetworkAccessPointHttpEnabledForThisProtocol_Object = MibTableColumn
networkAccessPointHttpEnabledForThisProtocol = _NetworkAccessPointHttpEnabledForThisProtocol_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 80),
    _NetworkAccessPointHttpEnabledForThisProtocol_Type()
)
networkAccessPointHttpEnabledForThisProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointHttpEnabledForThisProtocol.setStatus("current")
_NetworkAccessPointTimeoutConnectionWithPendingResponses_Type = OctetString
_NetworkAccessPointTimeoutConnectionWithPendingResponses_Object = MibTableColumn
networkAccessPointTimeoutConnectionWithPendingResponses = _NetworkAccessPointTimeoutConnectionWithPendingResponses_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 81),
    _NetworkAccessPointTimeoutConnectionWithPendingResponses_Type()
)
networkAccessPointTimeoutConnectionWithPendingResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointTimeoutConnectionWithPendingResponses.setStatus("current")
_NetworkAccessPointOutboundEnabled_Type = OctetString
_NetworkAccessPointOutboundEnabled_Object = MibTableColumn
networkAccessPointOutboundEnabled = _NetworkAccessPointOutboundEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 82),
    _NetworkAccessPointOutboundEnabled_Type()
)
networkAccessPointOutboundEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointOutboundEnabled.setStatus("current")
_NetworkAccessPointEnabled_Type = OctetString
_NetworkAccessPointEnabled_Object = MibTableColumn
networkAccessPointEnabled = _NetworkAccessPointEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 83),
    _NetworkAccessPointEnabled_Type()
)
networkAccessPointEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointEnabled.setStatus("current")
_NetworkAccessPointCustomPrivateKeyAlias_Type = OctetString
_NetworkAccessPointCustomPrivateKeyAlias_Object = MibTableColumn
networkAccessPointCustomPrivateKeyAlias = _NetworkAccessPointCustomPrivateKeyAlias_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 84),
    _NetworkAccessPointCustomPrivateKeyAlias_Type()
)
networkAccessPointCustomPrivateKeyAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointCustomPrivateKeyAlias.setStatus("current")
_NetworkAccessPointConnectTimeout_Type = Integer32
_NetworkAccessPointConnectTimeout_Object = MibTableColumn
networkAccessPointConnectTimeout = _NetworkAccessPointConnectTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 85),
    _NetworkAccessPointConnectTimeout_Type()
)
networkAccessPointConnectTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointConnectTimeout.setStatus("current")
_NetworkAccessPointMaxConnectedClients_Type = Integer32
_NetworkAccessPointMaxConnectedClients_Object = MibTableColumn
networkAccessPointMaxConnectedClients = _NetworkAccessPointMaxConnectedClients_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 86),
    _NetworkAccessPointMaxConnectedClients_Type()
)
networkAccessPointMaxConnectedClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointMaxConnectedClients.setStatus("current")
_NetworkAccessPointIdleConnectionTimeout_Type = Integer32
_NetworkAccessPointIdleConnectionTimeout_Object = MibTableColumn
networkAccessPointIdleConnectionTimeout = _NetworkAccessPointIdleConnectionTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 87),
    _NetworkAccessPointIdleConnectionTimeout_Type()
)
networkAccessPointIdleConnectionTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointIdleConnectionTimeout.setStatus("current")
_NetworkAccessPointMaxBackoffBetweenFailures_Type = Integer32
_NetworkAccessPointMaxBackoffBetweenFailures_Object = MibTableColumn
networkAccessPointMaxBackoffBetweenFailures = _NetworkAccessPointMaxBackoffBetweenFailures_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 88),
    _NetworkAccessPointMaxBackoffBetweenFailures_Type()
)
networkAccessPointMaxBackoffBetweenFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointMaxBackoffBetweenFailures.setStatus("current")
_NetworkAccessPointProtocol_Type = OctetString
_NetworkAccessPointProtocol_Object = MibTableColumn
networkAccessPointProtocol = _NetworkAccessPointProtocol_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 89),
    _NetworkAccessPointProtocol_Type()
)
networkAccessPointProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointProtocol.setStatus("current")
_NetworkAccessPointPrivateKeyAlias_Type = OctetString
_NetworkAccessPointPrivateKeyAlias_Object = MibTableColumn
networkAccessPointPrivateKeyAlias = _NetworkAccessPointPrivateKeyAlias_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 90),
    _NetworkAccessPointPrivateKeyAlias_Type()
)
networkAccessPointPrivateKeyAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointPrivateKeyAlias.setStatus("current")
_NetworkAccessPointTunnelingEnabled_Type = OctetString
_NetworkAccessPointTunnelingEnabled_Object = MibTableColumn
networkAccessPointTunnelingEnabled = _NetworkAccessPointTunnelingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 91),
    _NetworkAccessPointTunnelingEnabled_Type()
)
networkAccessPointTunnelingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointTunnelingEnabled.setStatus("current")
_NetworkAccessPointClusterAddress_Type = OctetString
_NetworkAccessPointClusterAddress_Object = MibTableColumn
networkAccessPointClusterAddress = _NetworkAccessPointClusterAddress_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 92),
    _NetworkAccessPointClusterAddress_Type()
)
networkAccessPointClusterAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointClusterAddress.setStatus("current")
_NetworkAccessPointChannelIdentityCustomized_Type = OctetString
_NetworkAccessPointChannelIdentityCustomized_Object = MibTableColumn
networkAccessPointChannelIdentityCustomized = _NetworkAccessPointChannelIdentityCustomized_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 93),
    _NetworkAccessPointChannelIdentityCustomized_Type()
)
networkAccessPointChannelIdentityCustomized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointChannelIdentityCustomized.setStatus("current")
_NetworkAccessPointMaxMessageSize_Type = Integer32
_NetworkAccessPointMaxMessageSize_Object = MibTableColumn
networkAccessPointMaxMessageSize = _NetworkAccessPointMaxMessageSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 94),
    _NetworkAccessPointMaxMessageSize_Type()
)
networkAccessPointMaxMessageSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointMaxMessageSize.setStatus("current")
_NetworkAccessPointPublicPort_Type = Integer32
_NetworkAccessPointPublicPort_Object = MibTableColumn
networkAccessPointPublicPort = _NetworkAccessPointPublicPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 95),
    _NetworkAccessPointPublicPort_Type()
)
networkAccessPointPublicPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointPublicPort.setStatus("current")
_NetworkAccessPointOutboundPrivateKeyEnabled_Type = OctetString
_NetworkAccessPointOutboundPrivateKeyEnabled_Object = MibTableColumn
networkAccessPointOutboundPrivateKeyEnabled = _NetworkAccessPointOutboundPrivateKeyEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 96),
    _NetworkAccessPointOutboundPrivateKeyEnabled_Type()
)
networkAccessPointOutboundPrivateKeyEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointOutboundPrivateKeyEnabled.setStatus("current")
_NetworkAccessPointCompleteMessageTimeout_Type = Integer32
_NetworkAccessPointCompleteMessageTimeout_Object = MibTableColumn
networkAccessPointCompleteMessageTimeout = _NetworkAccessPointCompleteMessageTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 97),
    _NetworkAccessPointCompleteMessageTimeout_Type()
)
networkAccessPointCompleteMessageTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointCompleteMessageTimeout.setStatus("current")
_NetworkAccessPointPublicAddress_Type = OctetString
_NetworkAccessPointPublicAddress_Object = MibTableColumn
networkAccessPointPublicAddress = _NetworkAccessPointPublicAddress_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 98),
    _NetworkAccessPointPublicAddress_Type()
)
networkAccessPointPublicAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointPublicAddress.setStatus("current")
_NetworkAccessPointClientCertificateEnforced_Type = OctetString
_NetworkAccessPointClientCertificateEnforced_Object = MibTableColumn
networkAccessPointClientCertificateEnforced = _NetworkAccessPointClientCertificateEnforced_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 99),
    _NetworkAccessPointClientCertificateEnforced_Type()
)
networkAccessPointClientCertificateEnforced.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointClientCertificateEnforced.setStatus("current")
_NetworkAccessPointPrivateKeyPassPhrase_Type = OctetString
_NetworkAccessPointPrivateKeyPassPhrase_Object = MibTableColumn
networkAccessPointPrivateKeyPassPhrase = _NetworkAccessPointPrivateKeyPassPhrase_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 100),
    _NetworkAccessPointPrivateKeyPassPhrase_Type()
)
networkAccessPointPrivateKeyPassPhrase.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointPrivateKeyPassPhrase.setStatus("current")
_NetworkAccessPointProxyAddress_Type = OctetString
_NetworkAccessPointProxyAddress_Object = MibTableColumn
networkAccessPointProxyAddress = _NetworkAccessPointProxyAddress_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 705, 1, 101),
    _NetworkAccessPointProxyAddress_Type()
)
networkAccessPointProxyAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    networkAccessPointProxyAddress.setStatus("current")
_NodeManagerTable_Object = MibTable
nodeManagerTable = _NodeManagerTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 707)
)
if mibBuilder.loadTexts:
    nodeManagerTable.setStatus("current")
_NodeManagerEntry_Object = MibTableRow
nodeManagerEntry = _NodeManagerEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 707, 1)
)
nodeManagerEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "nodeManagerIndex"),
)
if mibBuilder.loadTexts:
    nodeManagerEntry.setStatus("current")


class _NodeManagerIndex_Type(DisplayString):
    """Custom type nodeManagerIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_NodeManagerIndex_Type.__name__ = "DisplayString"
_NodeManagerIndex_Object = MibTableColumn
nodeManagerIndex = _NodeManagerIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 707, 1, 1),
    _NodeManagerIndex_Type()
)
nodeManagerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nodeManagerIndex.setStatus("current")


class _NodeManagerObjectName_Type(DisplayString):
    """Custom type nodeManagerObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_NodeManagerObjectName_Type.__name__ = "DisplayString"
_NodeManagerObjectName_Object = MibTableColumn
nodeManagerObjectName = _NodeManagerObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 707, 1, 5),
    _NodeManagerObjectName_Type()
)
nodeManagerObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nodeManagerObjectName.setStatus("current")


class _NodeManagerType_Type(DisplayString):
    """Custom type nodeManagerType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_NodeManagerType_Type.__name__ = "DisplayString"
_NodeManagerType_Object = MibTableColumn
nodeManagerType = _NodeManagerType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 707, 1, 10),
    _NodeManagerType_Type()
)
nodeManagerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nodeManagerType.setStatus("current")


class _NodeManagerName_Type(DisplayString):
    """Custom type nodeManagerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_NodeManagerName_Type.__name__ = "DisplayString"
_NodeManagerName_Object = MibTableColumn
nodeManagerName = _NodeManagerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 707, 1, 15),
    _NodeManagerName_Type()
)
nodeManagerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nodeManagerName.setStatus("current")


class _NodeManagerParent_Type(DisplayString):
    """Custom type nodeManagerParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_NodeManagerParent_Type.__name__ = "DisplayString"
_NodeManagerParent_Object = MibTableColumn
nodeManagerParent = _NodeManagerParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 707, 1, 20),
    _NodeManagerParent_Type()
)
nodeManagerParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nodeManagerParent.setStatus("current")


class _NodeManagerListenAddress_Type(DisplayString):
    """Custom type nodeManagerListenAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_NodeManagerListenAddress_Type.__name__ = "DisplayString"
_NodeManagerListenAddress_Object = MibTableColumn
nodeManagerListenAddress = _NodeManagerListenAddress_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 707, 1, 35),
    _NodeManagerListenAddress_Type()
)
nodeManagerListenAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nodeManagerListenAddress.setStatus("current")
_NodeManagerListenPort_Type = Integer32
_NodeManagerListenPort_Object = MibTableColumn
nodeManagerListenPort = _NodeManagerListenPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 707, 1, 40),
    _NodeManagerListenPort_Type()
)
nodeManagerListenPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nodeManagerListenPort.setStatus("current")
_NodeManagerShellCommand_Type = OctetString
_NodeManagerShellCommand_Object = MibTableColumn
nodeManagerShellCommand = _NodeManagerShellCommand_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 707, 1, 41),
    _NodeManagerShellCommand_Type()
)
nodeManagerShellCommand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nodeManagerShellCommand.setStatus("current")
_NodeManagerNodeManagerHome_Type = OctetString
_NodeManagerNodeManagerHome_Object = MibTableColumn
nodeManagerNodeManagerHome = _NodeManagerNodeManagerHome_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 707, 1, 42),
    _NodeManagerNodeManagerHome_Type()
)
nodeManagerNodeManagerHome.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nodeManagerNodeManagerHome.setStatus("current")
_NodeManagerDebugEnabled_Type = OctetString
_NodeManagerDebugEnabled_Object = MibTableColumn
nodeManagerDebugEnabled = _NodeManagerDebugEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 707, 1, 43),
    _NodeManagerDebugEnabled_Type()
)
nodeManagerDebugEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nodeManagerDebugEnabled.setStatus("current")
_NodeManagerNMType_Type = OctetString
_NodeManagerNMType_Object = MibTableColumn
nodeManagerNMType = _NodeManagerNMType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 707, 1, 44),
    _NodeManagerNMType_Type()
)
nodeManagerNMType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nodeManagerNMType.setStatus("current")
_RmcFactoryTable_Object = MibTable
rmcFactoryTable = _RmcFactoryTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 708)
)
if mibBuilder.loadTexts:
    rmcFactoryTable.setStatus("current")
_RmcFactoryEntry_Object = MibTableRow
rmcFactoryEntry = _RmcFactoryEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 708, 1)
)
rmcFactoryEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "rmcFactoryIndex"),
)
if mibBuilder.loadTexts:
    rmcFactoryEntry.setStatus("current")


class _RmcFactoryIndex_Type(DisplayString):
    """Custom type rmcFactoryIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_RmcFactoryIndex_Type.__name__ = "DisplayString"
_RmcFactoryIndex_Object = MibTableColumn
rmcFactoryIndex = _RmcFactoryIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 708, 1, 1),
    _RmcFactoryIndex_Type()
)
rmcFactoryIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rmcFactoryIndex.setStatus("current")


class _RmcFactoryObjectName_Type(DisplayString):
    """Custom type rmcFactoryObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_RmcFactoryObjectName_Type.__name__ = "DisplayString"
_RmcFactoryObjectName_Object = MibTableColumn
rmcFactoryObjectName = _RmcFactoryObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 708, 1, 5),
    _RmcFactoryObjectName_Type()
)
rmcFactoryObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rmcFactoryObjectName.setStatus("current")


class _RmcFactoryType_Type(DisplayString):
    """Custom type rmcFactoryType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_RmcFactoryType_Type.__name__ = "DisplayString"
_RmcFactoryType_Object = MibTableColumn
rmcFactoryType = _RmcFactoryType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 708, 1, 10),
    _RmcFactoryType_Type()
)
rmcFactoryType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rmcFactoryType.setStatus("current")


class _RmcFactoryName_Type(DisplayString):
    """Custom type rmcFactoryName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_RmcFactoryName_Type.__name__ = "DisplayString"
_RmcFactoryName_Object = MibTableColumn
rmcFactoryName = _RmcFactoryName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 708, 1, 15),
    _RmcFactoryName_Type()
)
rmcFactoryName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rmcFactoryName.setStatus("current")


class _RmcFactoryParent_Type(DisplayString):
    """Custom type rmcFactoryParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_RmcFactoryParent_Type.__name__ = "DisplayString"
_RmcFactoryParent_Object = MibTableColumn
rmcFactoryParent = _RmcFactoryParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 708, 1, 20),
    _RmcFactoryParent_Type()
)
rmcFactoryParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rmcFactoryParent.setStatus("current")
_RmcFactoryJNDIName_Type = DisplayString
_RmcFactoryJNDIName_Object = MibTableColumn
rmcFactoryJNDIName = _RmcFactoryJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 708, 1, 21),
    _RmcFactoryJNDIName_Type()
)
rmcFactoryJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    rmcFactoryJNDIName.setStatus("current")
_SecurityTable_Object = MibTable
securityTable = _SecurityTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 710)
)
if mibBuilder.loadTexts:
    securityTable.setStatus("current")
_SecurityEntry_Object = MibTableRow
securityEntry = _SecurityEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 710, 1)
)
securityEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "securityIndex"),
)
if mibBuilder.loadTexts:
    securityEntry.setStatus("current")


class _SecurityIndex_Type(DisplayString):
    """Custom type securityIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_SecurityIndex_Type.__name__ = "DisplayString"
_SecurityIndex_Object = MibTableColumn
securityIndex = _SecurityIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 710, 1, 1),
    _SecurityIndex_Type()
)
securityIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityIndex.setStatus("current")


class _SecurityObjectName_Type(DisplayString):
    """Custom type securityObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_SecurityObjectName_Type.__name__ = "DisplayString"
_SecurityObjectName_Object = MibTableColumn
securityObjectName = _SecurityObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 710, 1, 5),
    _SecurityObjectName_Type()
)
securityObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityObjectName.setStatus("current")


class _SecurityType_Type(DisplayString):
    """Custom type securityType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_SecurityType_Type.__name__ = "DisplayString"
_SecurityType_Object = MibTableColumn
securityType = _SecurityType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 710, 1, 10),
    _SecurityType_Type()
)
securityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityType.setStatus("current")


class _SecurityName_Type(DisplayString):
    """Custom type securityName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_SecurityName_Type.__name__ = "DisplayString"
_SecurityName_Object = MibTableColumn
securityName = _SecurityName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 710, 1, 15),
    _SecurityName_Type()
)
securityName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityName.setStatus("current")


class _SecurityParent_Type(DisplayString):
    """Custom type securityParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_SecurityParent_Type.__name__ = "DisplayString"
_SecurityParent_Object = MibTableColumn
securityParent = _SecurityParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 710, 1, 20),
    _SecurityParent_Type()
)
securityParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityParent.setStatus("current")


class _SecurityConnectionFilter_Type(DisplayString):
    """Custom type securityConnectionFilter based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_SecurityConnectionFilter_Type.__name__ = "DisplayString"
_SecurityConnectionFilter_Object = MibTableColumn
securityConnectionFilter = _SecurityConnectionFilter_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 710, 1, 30),
    _SecurityConnectionFilter_Type()
)
securityConnectionFilter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityConnectionFilter.setStatus("current")


class _SecurityConnectionFilterRules_Type(DisplayString):
    """Custom type securityConnectionFilterRules based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_SecurityConnectionFilterRules_Type.__name__ = "DisplayString"
_SecurityConnectionFilterRules_Object = MibTableColumn
securityConnectionFilterRules = _SecurityConnectionFilterRules_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 710, 1, 35),
    _SecurityConnectionFilterRules_Type()
)
securityConnectionFilterRules.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityConnectionFilterRules.setStatus("current")


class _SecurityConnectionLoggerEnabled_Type(DisplayString):
    """Custom type securityConnectionLoggerEnabled based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_SecurityConnectionLoggerEnabled_Type.__name__ = "DisplayString"
_SecurityConnectionLoggerEnabled_Object = MibTableColumn
securityConnectionLoggerEnabled = _SecurityConnectionLoggerEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 710, 1, 40),
    _SecurityConnectionLoggerEnabled_Type()
)
securityConnectionLoggerEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityConnectionLoggerEnabled.setStatus("current")
_ServerTable_Object = MibTable
serverTable = _ServerTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730)
)
if mibBuilder.loadTexts:
    serverTable.setStatus("current")
_ServerEntry_Object = MibTableRow
serverEntry = _ServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1)
)
serverEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "serverIndex"),
)
if mibBuilder.loadTexts:
    serverEntry.setStatus("current")


class _ServerIndex_Type(DisplayString):
    """Custom type serverIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ServerIndex_Type.__name__ = "DisplayString"
_ServerIndex_Object = MibTableColumn
serverIndex = _ServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 1),
    _ServerIndex_Type()
)
serverIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverIndex.setStatus("current")


class _ServerObjectName_Type(DisplayString):
    """Custom type serverObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerObjectName_Type.__name__ = "DisplayString"
_ServerObjectName_Object = MibTableColumn
serverObjectName = _ServerObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 5),
    _ServerObjectName_Type()
)
serverObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverObjectName.setStatus("current")


class _ServerType_Type(DisplayString):
    """Custom type serverType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServerType_Type.__name__ = "DisplayString"
_ServerType_Object = MibTableColumn
serverType = _ServerType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 10),
    _ServerType_Type()
)
serverType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverType.setStatus("current")


class _ServerName_Type(DisplayString):
    """Custom type serverName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServerName_Type.__name__ = "DisplayString"
_ServerName_Object = MibTableColumn
serverName = _ServerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 15),
    _ServerName_Type()
)
serverName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverName.setStatus("current")


class _ServerParent_Type(DisplayString):
    """Custom type serverParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerParent_Type.__name__ = "DisplayString"
_ServerParent_Object = MibTableColumn
serverParent = _ServerParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 20),
    _ServerParent_Type()
)
serverParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverParent.setStatus("current")


class _ServerReverseDNSAllowed_Type(Integer32):
    """Custom type serverReverseDNSAllowed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ServerReverseDNSAllowed_Type.__name__ = "Integer32"
_ServerReverseDNSAllowed_Object = MibTableColumn
serverReverseDNSAllowed = _ServerReverseDNSAllowed_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 30),
    _ServerReverseDNSAllowed_Type()
)
serverReverseDNSAllowed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverReverseDNSAllowed.setStatus("current")


class _ServerDefaultProtocol_Type(DisplayString):
    """Custom type serverDefaultProtocol based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_ServerDefaultProtocol_Type.__name__ = "DisplayString"
_ServerDefaultProtocol_Object = MibTableColumn
serverDefaultProtocol = _ServerDefaultProtocol_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 35),
    _ServerDefaultProtocol_Type()
)
serverDefaultProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDefaultProtocol.setStatus("current")


class _ServerDefaultSecureProtocol_Type(DisplayString):
    """Custom type serverDefaultSecureProtocol based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_ServerDefaultSecureProtocol_Type.__name__ = "DisplayString"
_ServerDefaultSecureProtocol_Object = MibTableColumn
serverDefaultSecureProtocol = _ServerDefaultSecureProtocol_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 40),
    _ServerDefaultSecureProtocol_Type()
)
serverDefaultSecureProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDefaultSecureProtocol.setStatus("current")
_ServerThreadPoolSize_Type = Integer32
_ServerThreadPoolSize_Object = MibTableColumn
serverThreadPoolSize = _ServerThreadPoolSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 45),
    _ServerThreadPoolSize_Type()
)
serverThreadPoolSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverThreadPoolSize.setStatus("current")


class _ServerNativeIOEnabled_Type(Integer32):
    """Custom type serverNativeIOEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ServerNativeIOEnabled_Type.__name__ = "Integer32"
_ServerNativeIOEnabled_Object = MibTableColumn
serverNativeIOEnabled = _ServerNativeIOEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 50),
    _ServerNativeIOEnabled_Type()
)
serverNativeIOEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverNativeIOEnabled.setStatus("current")
_ServerThreadPoolPercentSocketReaders_Type = Integer32
_ServerThreadPoolPercentSocketReaders_Object = MibTableColumn
serverThreadPoolPercentSocketReaders = _ServerThreadPoolPercentSocketReaders_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 55),
    _ServerThreadPoolPercentSocketReaders_Type()
)
serverThreadPoolPercentSocketReaders.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverThreadPoolPercentSocketReaders.setStatus("current")
_ServerMaxT3MessageSize_Type = Integer32
_ServerMaxT3MessageSize_Object = MibTableColumn
serverMaxT3MessageSize = _ServerMaxT3MessageSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 60),
    _ServerMaxT3MessageSize_Type()
)
serverMaxT3MessageSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverMaxT3MessageSize.setStatus("current")
_ServerMaxHTTPMessageSize_Type = Integer32
_ServerMaxHTTPMessageSize_Object = MibTableColumn
serverMaxHTTPMessageSize = _ServerMaxHTTPMessageSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 65),
    _ServerMaxHTTPMessageSize_Type()
)
serverMaxHTTPMessageSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverMaxHTTPMessageSize.setStatus("current")
_ServerMaxIIOPMessageSize_Type = Integer32
_ServerMaxIIOPMessageSize_Object = MibTableColumn
serverMaxIIOPMessageSize = _ServerMaxIIOPMessageSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 70),
    _ServerMaxIIOPMessageSize_Type()
)
serverMaxIIOPMessageSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverMaxIIOPMessageSize.setStatus("current")
_ServerCompleteT3MessageTimeout_Type = Integer32
_ServerCompleteT3MessageTimeout_Object = MibTableColumn
serverCompleteT3MessageTimeout = _ServerCompleteT3MessageTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 75),
    _ServerCompleteT3MessageTimeout_Type()
)
serverCompleteT3MessageTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverCompleteT3MessageTimeout.setStatus("current")
_ServerCompleteHTTPMessageTimeout_Type = Integer32
_ServerCompleteHTTPMessageTimeout_Object = MibTableColumn
serverCompleteHTTPMessageTimeout = _ServerCompleteHTTPMessageTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 80),
    _ServerCompleteHTTPMessageTimeout_Type()
)
serverCompleteHTTPMessageTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverCompleteHTTPMessageTimeout.setStatus("current")
_ServerCompleteIIOPMessageTimeout_Type = Integer32
_ServerCompleteIIOPMessageTimeout_Object = MibTableColumn
serverCompleteIIOPMessageTimeout = _ServerCompleteIIOPMessageTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 85),
    _ServerCompleteIIOPMessageTimeout_Type()
)
serverCompleteIIOPMessageTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverCompleteIIOPMessageTimeout.setStatus("current")


class _ServerStdoutEnabled_Type(Integer32):
    """Custom type serverStdoutEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ServerStdoutEnabled_Type.__name__ = "Integer32"
_ServerStdoutEnabled_Object = MibTableColumn
serverStdoutEnabled = _ServerStdoutEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 90),
    _ServerStdoutEnabled_Type()
)
serverStdoutEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverStdoutEnabled.setStatus("current")
_ServerStdoutSeverityLevel_Type = Integer32
_ServerStdoutSeverityLevel_Object = MibTableColumn
serverStdoutSeverityLevel = _ServerStdoutSeverityLevel_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 95),
    _ServerStdoutSeverityLevel_Type()
)
serverStdoutSeverityLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverStdoutSeverityLevel.setStatus("current")


class _ServerLogRemoteExceptionsEnabled_Type(Integer32):
    """Custom type serverLogRemoteExceptionsEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ServerLogRemoteExceptionsEnabled_Type.__name__ = "Integer32"
_ServerLogRemoteExceptionsEnabled_Object = MibTableColumn
serverLogRemoteExceptionsEnabled = _ServerLogRemoteExceptionsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 100),
    _ServerLogRemoteExceptionsEnabled_Type()
)
serverLogRemoteExceptionsEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLogRemoteExceptionsEnabled.setStatus("current")


class _ServerInstrumentStackTraceEnabled_Type(Integer32):
    """Custom type serverInstrumentStackTraceEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ServerInstrumentStackTraceEnabled_Type.__name__ = "Integer32"
_ServerInstrumentStackTraceEnabled_Object = MibTableColumn
serverInstrumentStackTraceEnabled = _ServerInstrumentStackTraceEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 105),
    _ServerInstrumentStackTraceEnabled_Type()
)
serverInstrumentStackTraceEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverInstrumentStackTraceEnabled.setStatus("current")


class _ServerRootDirectory_Type(DisplayString):
    """Custom type serverRootDirectory based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerRootDirectory_Type.__name__ = "DisplayString"
_ServerRootDirectory_Object = MibTableColumn
serverRootDirectory = _ServerRootDirectory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 110),
    _ServerRootDirectory_Type()
)
serverRootDirectory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRootDirectory.setStatus("current")


class _ServerMachine_Type(DisplayString):
    """Custom type serverMachine based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerMachine_Type.__name__ = "DisplayString"
_ServerMachine_Object = MibTableColumn
serverMachine = _ServerMachine_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 115),
    _ServerMachine_Type()
)
serverMachine.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverMachine.setStatus("current")
_ServerListenPort_Type = Integer32
_ServerListenPort_Object = MibTableColumn
serverListenPort = _ServerListenPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 120),
    _ServerListenPort_Type()
)
serverListenPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverListenPort.setStatus("current")
_ServerLoginTimeout_Type = Integer32
_ServerLoginTimeout_Object = MibTableColumn
serverLoginTimeout = _ServerLoginTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 125),
    _ServerLoginTimeout_Type()
)
serverLoginTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLoginTimeout.setStatus("current")


class _ServerCluster_Type(DisplayString):
    """Custom type serverCluster based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerCluster_Type.__name__ = "DisplayString"
_ServerCluster_Object = MibTableColumn
serverCluster = _ServerCluster_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 130),
    _ServerCluster_Type()
)
serverCluster.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverCluster.setStatus("current")
_ServerClusterWeight_Type = Integer32
_ServerClusterWeight_Object = MibTableColumn
serverClusterWeight = _ServerClusterWeight_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 135),
    _ServerClusterWeight_Type()
)
serverClusterWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverClusterWeight.setStatus("current")


class _ServerReplicationGroup_Type(DisplayString):
    """Custom type serverReplicationGroup based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServerReplicationGroup_Type.__name__ = "DisplayString"
_ServerReplicationGroup_Object = MibTableColumn
serverReplicationGroup = _ServerReplicationGroup_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 140),
    _ServerReplicationGroup_Type()
)
serverReplicationGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverReplicationGroup.setStatus("current")


class _ServerPreferredSecondaryGroup_Type(DisplayString):
    """Custom type serverPreferredSecondaryGroup based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServerPreferredSecondaryGroup_Type.__name__ = "DisplayString"
_ServerPreferredSecondaryGroup_Object = MibTableColumn
serverPreferredSecondaryGroup = _ServerPreferredSecondaryGroup_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 145),
    _ServerPreferredSecondaryGroup_Type()
)
serverPreferredSecondaryGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverPreferredSecondaryGroup.setStatus("current")


class _ServerWebServer_Type(DisplayString):
    """Custom type serverWebServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerWebServer_Type.__name__ = "DisplayString"
_ServerWebServer_Object = MibTableColumn
serverWebServer = _ServerWebServer_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 150),
    _ServerWebServer_Type()
)
serverWebServer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverWebServer.setStatus("current")


class _ServerExpectedToRun_Type(Integer32):
    """Custom type serverExpectedToRun based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ServerExpectedToRun_Type.__name__ = "Integer32"
_ServerExpectedToRun_Object = MibTableColumn
serverExpectedToRun = _ServerExpectedToRun_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 155),
    _ServerExpectedToRun_Type()
)
serverExpectedToRun.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverExpectedToRun.setStatus("current")


class _ServerJDBCLoggingEnabled_Type(Integer32):
    """Custom type serverJDBCLoggingEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ServerJDBCLoggingEnabled_Type.__name__ = "Integer32"
_ServerJDBCLoggingEnabled_Object = MibTableColumn
serverJDBCLoggingEnabled = _ServerJDBCLoggingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 165),
    _ServerJDBCLoggingEnabled_Type()
)
serverJDBCLoggingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverJDBCLoggingEnabled.setStatus("current")


class _ServerJDBCLogFileName_Type(DisplayString):
    """Custom type serverJDBCLogFileName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerJDBCLogFileName_Type.__name__ = "DisplayString"
_ServerJDBCLogFileName_Object = MibTableColumn
serverJDBCLogFileName = _ServerJDBCLogFileName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 170),
    _ServerJDBCLogFileName_Type()
)
serverJDBCLogFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverJDBCLogFileName.setStatus("current")


class _ServerIIOPEnabled_Type(Integer32):
    """Custom type serverIIOPEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ServerIIOPEnabled_Type.__name__ = "Integer32"
_ServerIIOPEnabled_Object = MibTableColumn
serverIIOPEnabled = _ServerIIOPEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 185),
    _ServerIIOPEnabled_Type()
)
serverIIOPEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverIIOPEnabled.setStatus("current")


class _ServerDefaultIIOPUser_Type(DisplayString):
    """Custom type serverDefaultIIOPUser based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServerDefaultIIOPUser_Type.__name__ = "DisplayString"
_ServerDefaultIIOPUser_Object = MibTableColumn
serverDefaultIIOPUser = _ServerDefaultIIOPUser_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 190),
    _ServerDefaultIIOPUser_Type()
)
serverDefaultIIOPUser.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDefaultIIOPUser.setStatus("current")


class _ServerHttpdEnabled_Type(Integer32):
    """Custom type serverHttpdEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ServerHttpdEnabled_Type.__name__ = "Integer32"
_ServerHttpdEnabled_Object = MibTableColumn
serverHttpdEnabled = _ServerHttpdEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 195),
    _ServerHttpdEnabled_Type()
)
serverHttpdEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverHttpdEnabled.setStatus("current")


class _ServerConsoleInputEnabled_Type(Integer32):
    """Custom type serverConsoleInputEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ServerConsoleInputEnabled_Type.__name__ = "Integer32"
_ServerConsoleInputEnabled_Object = MibTableColumn
serverConsoleInputEnabled = _ServerConsoleInputEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 210),
    _ServerConsoleInputEnabled_Type()
)
serverConsoleInputEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverConsoleInputEnabled.setStatus("current")
_ServerListenThreadStartDelaySecs_Type = Integer32
_ServerListenThreadStartDelaySecs_Object = MibTableColumn
serverListenThreadStartDelaySecs = _ServerListenThreadStartDelaySecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 215),
    _ServerListenThreadStartDelaySecs_Type()
)
serverListenThreadStartDelaySecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverListenThreadStartDelaySecs.setStatus("current")


class _ServerListenAddress_Type(DisplayString):
    """Custom type serverListenAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerListenAddress_Type.__name__ = "DisplayString"
_ServerListenAddress_Object = MibTableColumn
serverListenAddress = _ServerListenAddress_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 220),
    _ServerListenAddress_Type()
)
serverListenAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverListenAddress.setStatus("current")
_ServerLoginTimeoutMillis_Type = Integer32
_ServerLoginTimeoutMillis_Object = MibTableColumn
serverLoginTimeoutMillis = _ServerLoginTimeoutMillis_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 225),
    _ServerLoginTimeoutMillis_Type()
)
serverLoginTimeoutMillis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLoginTimeoutMillis.setStatus("current")
_ServerAdministrationPort_Type = Integer32
_ServerAdministrationPort_Object = MibTableColumn
serverAdministrationPort = _ServerAdministrationPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 230),
    _ServerAdministrationPort_Type()
)
serverAdministrationPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverAdministrationPort.setStatus("current")


class _ServerJavaCompiler_Type(DisplayString):
    """Custom type serverJavaCompiler based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_ServerJavaCompiler_Type.__name__ = "DisplayString"
_ServerJavaCompiler_Object = MibTableColumn
serverJavaCompiler = _ServerJavaCompiler_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 235),
    _ServerJavaCompiler_Type()
)
serverJavaCompiler.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverJavaCompiler.setStatus("current")


class _ServerJavaCompilerPreClassPath_Type(DisplayString):
    """Custom type serverJavaCompilerPreClassPath based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerJavaCompilerPreClassPath_Type.__name__ = "DisplayString"
_ServerJavaCompilerPreClassPath_Object = MibTableColumn
serverJavaCompilerPreClassPath = _ServerJavaCompilerPreClassPath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 240),
    _ServerJavaCompilerPreClassPath_Type()
)
serverJavaCompilerPreClassPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverJavaCompilerPreClassPath.setStatus("current")


class _ServerJavaCompilerPostClassPath_Type(DisplayString):
    """Custom type serverJavaCompilerPostClassPath based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerJavaCompilerPostClassPath_Type.__name__ = "DisplayString"
_ServerJavaCompilerPostClassPath_Object = MibTableColumn
serverJavaCompilerPostClassPath = _ServerJavaCompilerPostClassPath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 245),
    _ServerJavaCompilerPostClassPath_Type()
)
serverJavaCompilerPostClassPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverJavaCompilerPostClassPath.setStatus("current")


class _ServerExtraRmicOptions_Type(DisplayString):
    """Custom type serverExtraRmicOptions based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerExtraRmicOptions_Type.__name__ = "DisplayString"
_ServerExtraRmicOptions_Object = MibTableColumn
serverExtraRmicOptions = _ServerExtraRmicOptions_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 250),
    _ServerExtraRmicOptions_Type()
)
serverExtraRmicOptions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverExtraRmicOptions.setStatus("current")


class _ServerTransactionLogFilePrefix_Type(DisplayString):
    """Custom type serverTransactionLogFilePrefix based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_ServerTransactionLogFilePrefix_Type.__name__ = "DisplayString"
_ServerTransactionLogFilePrefix_Object = MibTableColumn
serverTransactionLogFilePrefix = _ServerTransactionLogFilePrefix_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 255),
    _ServerTransactionLogFilePrefix_Type()
)
serverTransactionLogFilePrefix.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverTransactionLogFilePrefix.setStatus("current")


class _ServerEnabledForDomainLog_Type(Integer32):
    """Custom type serverEnabledForDomainLog based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ServerEnabledForDomainLog_Type.__name__ = "Integer32"
_ServerEnabledForDomainLog_Object = MibTableColumn
serverEnabledForDomainLog = _ServerEnabledForDomainLog_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 260),
    _ServerEnabledForDomainLog_Type()
)
serverEnabledForDomainLog.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverEnabledForDomainLog.setStatus("current")


class _ServerTunnelingEnabled_Type(Integer32):
    """Custom type serverTunnelingEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ServerTunnelingEnabled_Type.__name__ = "Integer32"
_ServerTunnelingEnabled_Object = MibTableColumn
serverTunnelingEnabled = _ServerTunnelingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 265),
    _ServerTunnelingEnabled_Type()
)
serverTunnelingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverTunnelingEnabled.setStatus("current")
_ServerTunnelingClientTimeoutSecs_Type = Integer32
_ServerTunnelingClientTimeoutSecs_Object = MibTableColumn
serverTunnelingClientTimeoutSecs = _ServerTunnelingClientTimeoutSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 270),
    _ServerTunnelingClientTimeoutSecs_Type()
)
serverTunnelingClientTimeoutSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverTunnelingClientTimeoutSecs.setStatus("current")
_ServerTunnelingClientPingSecs_Type = Integer32
_ServerTunnelingClientPingSecs_Object = MibTableColumn
serverTunnelingClientPingSecs = _ServerTunnelingClientPingSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 275),
    _ServerTunnelingClientPingSecs_Type()
)
serverTunnelingClientPingSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverTunnelingClientPingSecs.setStatus("current")


class _ServerJMSDefaultConnectionFactoriesEnabled_Type(Integer32):
    """Custom type serverJMSDefaultConnectionFactoriesEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_ServerJMSDefaultConnectionFactoriesEnabled_Type.__name__ = "Integer32"
_ServerJMSDefaultConnectionFactoriesEnabled_Object = MibTableColumn
serverJMSDefaultConnectionFactoriesEnabled = _ServerJMSDefaultConnectionFactoriesEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 280),
    _ServerJMSDefaultConnectionFactoriesEnabled_Type()
)
serverJMSDefaultConnectionFactoriesEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverJMSDefaultConnectionFactoriesEnabled.setStatus("current")


class _ServerDomainLogFilter_Type(DisplayString):
    """Custom type serverDomainLogFilter based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerDomainLogFilter_Type.__name__ = "DisplayString"
_ServerDomainLogFilter_Object = MibTableColumn
serverDomainLogFilter = _ServerDomainLogFilter_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 285),
    _ServerDomainLogFilter_Type()
)
serverDomainLogFilter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDomainLogFilter.setStatus("current")
_ServerAcceptBacklog_Type = Integer32
_ServerAcceptBacklog_Object = MibTableColumn
serverAcceptBacklog = _ServerAcceptBacklog_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 286),
    _ServerAcceptBacklog_Type()
)
serverAcceptBacklog.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverAcceptBacklog.setStatus("current")
_ServerListenPortEnabled_Type = OctetString
_ServerListenPortEnabled_Object = MibTableColumn
serverListenPortEnabled = _ServerListenPortEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 287),
    _ServerListenPortEnabled_Type()
)
serverListenPortEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverListenPortEnabled.setStatus("current")
_ServerUse81StyleExecuteQueues_Type = OctetString
_ServerUse81StyleExecuteQueues_Object = MibTableColumn
serverUse81StyleExecuteQueues = _ServerUse81StyleExecuteQueues_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 288),
    _ServerUse81StyleExecuteQueues_Type()
)
serverUse81StyleExecuteQueues.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverUse81StyleExecuteQueues.setStatus("current")
_ServerStagingMode_Type = OctetString
_ServerStagingMode_Object = MibTableColumn
serverStagingMode = _ServerStagingMode_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 289),
    _ServerStagingMode_Type()
)
serverStagingMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverStagingMode.setStatus("current")
_ServerLowMemoryGCThreshold_Type = Integer32
_ServerLowMemoryGCThreshold_Object = MibTableColumn
serverLowMemoryGCThreshold = _ServerLowMemoryGCThreshold_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 290),
    _ServerLowMemoryGCThreshold_Type()
)
serverLowMemoryGCThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLowMemoryGCThreshold.setStatus("current")
_ServerStagingDirectoryName_Type = OctetString
_ServerStagingDirectoryName_Object = MibTableColumn
serverStagingDirectoryName = _ServerStagingDirectoryName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 291),
    _ServerStagingDirectoryName_Type()
)
serverStagingDirectoryName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverStagingDirectoryName.setStatus("current")
_ServerGracefulShutdownTimeout_Type = Integer32
_ServerGracefulShutdownTimeout_Object = MibTableColumn
serverGracefulShutdownTimeout = _ServerGracefulShutdownTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 292),
    _ServerGracefulShutdownTimeout_Type()
)
serverGracefulShutdownTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverGracefulShutdownTimeout.setStatus("current")
_ServerManagedServerIndependenceEnabled_Type = OctetString
_ServerManagedServerIndependenceEnabled_Object = MibTableColumn
serverManagedServerIndependenceEnabled = _ServerManagedServerIndependenceEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 293),
    _ServerManagedServerIndependenceEnabled_Type()
)
serverManagedServerIndependenceEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverManagedServerIndependenceEnabled.setStatus("current")
_ServerStartupTimeout_Type = Integer32
_ServerStartupTimeout_Object = MibTableColumn
serverStartupTimeout = _ServerStartupTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 294),
    _ServerStartupTimeout_Type()
)
serverStartupTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverStartupTimeout.setStatus("current")
_ServerSocketBufferSizeAsChunkSize_Type = OctetString
_ServerSocketBufferSizeAsChunkSize_Object = MibTableColumn
serverSocketBufferSizeAsChunkSize = _ServerSocketBufferSizeAsChunkSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 295),
    _ServerSocketBufferSizeAsChunkSize_Type()
)
serverSocketBufferSizeAsChunkSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverSocketBufferSizeAsChunkSize.setStatus("current")
_ServerRestartMax_Type = Integer32
_ServerRestartMax_Object = MibTableColumn
serverRestartMax = _ServerRestartMax_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 296),
    _ServerRestartMax_Type()
)
serverRestartMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRestartMax.setStatus("current")
_ServerCompleteMessageTimeout_Type = Integer32
_ServerCompleteMessageTimeout_Object = MibTableColumn
serverCompleteMessageTimeout = _ServerCompleteMessageTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 297),
    _ServerCompleteMessageTimeout_Type()
)
serverCompleteMessageTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverCompleteMessageTimeout.setStatus("current")
_ServerServerLifeCycleTimeoutVal_Type = Integer32
_ServerServerLifeCycleTimeoutVal_Object = MibTableColumn
serverServerLifeCycleTimeoutVal = _ServerServerLifeCycleTimeoutVal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 298),
    _ServerServerLifeCycleTimeoutVal_Type()
)
serverServerLifeCycleTimeoutVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverServerLifeCycleTimeoutVal.setStatus("current")
_ServerVerboseEJBDeploymentEnabled_Type = OctetString
_ServerVerboseEJBDeploymentEnabled_Object = MibTableColumn
serverVerboseEJBDeploymentEnabled = _ServerVerboseEJBDeploymentEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 299),
    _ServerVerboseEJBDeploymentEnabled_Type()
)
serverVerboseEJBDeploymentEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverVerboseEJBDeploymentEnabled.setStatus("current")
_ServerAdminReconnectIntervalSeconds_Type = Integer32
_ServerAdminReconnectIntervalSeconds_Object = MibTableColumn
serverAdminReconnectIntervalSeconds = _ServerAdminReconnectIntervalSeconds_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 300),
    _ServerAdminReconnectIntervalSeconds_Type()
)
serverAdminReconnectIntervalSeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverAdminReconnectIntervalSeconds.setStatus("current")
_ServerClientCertProxyEnabled_Type = OctetString
_ServerClientCertProxyEnabled_Object = MibTableColumn
serverClientCertProxyEnabled = _ServerClientCertProxyEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 301),
    _ServerClientCertProxyEnabled_Type()
)
serverClientCertProxyEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverClientCertProxyEnabled.setStatus("current")
_ServerRestartDelaySeconds_Type = Integer32
_ServerRestartDelaySeconds_Object = MibTableColumn
serverRestartDelaySeconds = _ServerRestartDelaySeconds_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 302),
    _ServerRestartDelaySeconds_Type()
)
serverRestartDelaySeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRestartDelaySeconds.setStatus("current")
_ServerLowMemoryGranularityLevel_Type = Integer32
_ServerLowMemoryGranularityLevel_Object = MibTableColumn
serverLowMemoryGranularityLevel = _ServerLowMemoryGranularityLevel_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 303),
    _ServerLowMemoryGranularityLevel_Type()
)
serverLowMemoryGranularityLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLowMemoryGranularityLevel.setStatus("current")
_ServerSocketReaders_Type = Integer32
_ServerSocketReaders_Object = MibTableColumn
serverSocketReaders = _ServerSocketReaders_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 304),
    _ServerSocketReaders_Type()
)
serverSocketReaders.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverSocketReaders.setStatus("current")
_ServerOutboundEnabled_Type = OctetString
_ServerOutboundEnabled_Object = MibTableColumn
serverOutboundEnabled = _ServerOutboundEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 305),
    _ServerOutboundEnabled_Type()
)
serverOutboundEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverOutboundEnabled.setStatus("current")
_ServerJDBCLLRTableName_Type = OctetString
_ServerJDBCLLRTableName_Object = MibTableColumn
serverJDBCLLRTableName = _ServerJDBCLLRTableName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 306),
    _ServerJDBCLLRTableName_Type()
)
serverJDBCLLRTableName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverJDBCLLRTableName.setStatus("current")
_ServerInterfaceAddress_Type = OctetString
_ServerInterfaceAddress_Object = MibTableColumn
serverInterfaceAddress = _ServerInterfaceAddress_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 307),
    _ServerInterfaceAddress_Type()
)
serverInterfaceAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverInterfaceAddress.setStatus("current")
_ServerExtraEjbcOptions_Type = OctetString
_ServerExtraEjbcOptions_Object = MibTableColumn
serverExtraEjbcOptions = _ServerExtraEjbcOptions_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 308),
    _ServerExtraEjbcOptions_Type()
)
serverExtraEjbcOptions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverExtraEjbcOptions.setStatus("current")
_ServerCOMEnabled_Type = OctetString
_ServerCOMEnabled_Object = MibTableColumn
serverCOMEnabled = _ServerCOMEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 309),
    _ServerCOMEnabled_Type()
)
serverCOMEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverCOMEnabled.setStatus("current")
_ServerMessageIdPrefixEnabled_Type = OctetString
_ServerMessageIdPrefixEnabled_Object = MibTableColumn
serverMessageIdPrefixEnabled = _ServerMessageIdPrefixEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 310),
    _ServerMessageIdPrefixEnabled_Type()
)
serverMessageIdPrefixEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverMessageIdPrefixEnabled.setStatus("current")
_ServerAutoRestart_Type = OctetString
_ServerAutoRestart_Object = MibTableColumn
serverAutoRestart = _ServerAutoRestart_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 311),
    _ServerAutoRestart_Type()
)
serverAutoRestart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverAutoRestart.setStatus("current")
_ServerIgnoreSessionsDuringShutdown_Type = OctetString
_ServerIgnoreSessionsDuringShutdown_Object = MibTableColumn
serverIgnoreSessionsDuringShutdown = _ServerIgnoreSessionsDuringShutdown_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 312),
    _ServerIgnoreSessionsDuringShutdown_Type()
)
serverIgnoreSessionsDuringShutdown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverIgnoreSessionsDuringShutdown.setStatus("current")
_ServerDefaultTGIOPUser_Type = OctetString
_ServerDefaultTGIOPUser_Object = MibTableColumn
serverDefaultTGIOPUser = _ServerDefaultTGIOPUser_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 313),
    _ServerDefaultTGIOPUser_Type()
)
serverDefaultTGIOPUser.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDefaultTGIOPUser.setStatus("current")
_ServerMaxOpenSockCount_Type = Integer32
_ServerMaxOpenSockCount_Object = MibTableColumn
serverMaxOpenSockCount = _ServerMaxOpenSockCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 314),
    _ServerMaxOpenSockCount_Type()
)
serverMaxOpenSockCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverMaxOpenSockCount.setStatus("current")
_ServerLowMemorySampleSize_Type = Integer32
_ServerLowMemorySampleSize_Object = MibTableColumn
serverLowMemorySampleSize = _ServerLowMemorySampleSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 315),
    _ServerLowMemorySampleSize_Type()
)
serverLowMemorySampleSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLowMemorySampleSize.setStatus("current")
_ServerAutoKillIfFailed_Type = OctetString
_ServerAutoKillIfFailed_Object = MibTableColumn
serverAutoKillIfFailed = _ServerAutoKillIfFailed_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 316),
    _ServerAutoKillIfFailed_Type()
)
serverAutoKillIfFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverAutoKillIfFailed.setStatus("current")
_ServerCustomIdentityKeyStoreFileName_Type = OctetString
_ServerCustomIdentityKeyStoreFileName_Object = MibTableColumn
serverCustomIdentityKeyStoreFileName = _ServerCustomIdentityKeyStoreFileName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 317),
    _ServerCustomIdentityKeyStoreFileName_Type()
)
serverCustomIdentityKeyStoreFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverCustomIdentityKeyStoreFileName.setStatus("current")
_ServerTGIOPEnabled_Type = OctetString
_ServerTGIOPEnabled_Object = MibTableColumn
serverTGIOPEnabled = _ServerTGIOPEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 318),
    _ServerTGIOPEnabled_Type()
)
serverTGIOPEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverTGIOPEnabled.setStatus("current")
_ServerHealthCheckStartDelaySeconds_Type = Integer32
_ServerHealthCheckStartDelaySeconds_Object = MibTableColumn
serverHealthCheckStartDelaySeconds = _ServerHealthCheckStartDelaySeconds_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 319),
    _ServerHealthCheckStartDelaySeconds_Type()
)
serverHealthCheckStartDelaySeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverHealthCheckStartDelaySeconds.setStatus("current")
_ServerUploadDirectoryName_Type = OctetString
_ServerUploadDirectoryName_Object = MibTableColumn
serverUploadDirectoryName = _ServerUploadDirectoryName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 320),
    _ServerUploadDirectoryName_Type()
)
serverUploadDirectoryName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverUploadDirectoryName.setStatus("current")
_ServerWeblogicPluginEnabled_Type = OctetString
_ServerWeblogicPluginEnabled_Object = MibTableColumn
serverWeblogicPluginEnabled = _ServerWeblogicPluginEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 321),
    _ServerWeblogicPluginEnabled_Type()
)
serverWeblogicPluginEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverWeblogicPluginEnabled.setStatus("current")
_ServerJDBCLoginTimeoutSeconds_Type = Integer32
_ServerJDBCLoginTimeoutSeconds_Object = MibTableColumn
serverJDBCLoginTimeoutSeconds = _ServerJDBCLoginTimeoutSeconds_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 322),
    _ServerJDBCLoginTimeoutSeconds_Type()
)
serverJDBCLoginTimeoutSeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverJDBCLoginTimeoutSeconds.setStatus("current")
_ServerClasspathServletDisabled_Type = OctetString
_ServerClasspathServletDisabled_Object = MibTableColumn
serverClasspathServletDisabled = _ServerClasspathServletDisabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 323),
    _ServerClasspathServletDisabled_Type()
)
serverClasspathServletDisabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverClasspathServletDisabled.setStatus("current")
_ServerIdleConnectionTimeout_Type = Integer32
_ServerIdleConnectionTimeout_Object = MibTableColumn
serverIdleConnectionTimeout = _ServerIdleConnectionTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 324),
    _ServerIdleConnectionTimeout_Type()
)
serverIdleConnectionTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverIdleConnectionTimeout.setStatus("current")
_ServerDefaultInternalServletsDisabled_Type = OctetString
_ServerDefaultInternalServletsDisabled_Object = MibTableColumn
serverDefaultInternalServletsDisabled = _ServerDefaultInternalServletsDisabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 325),
    _ServerDefaultInternalServletsDisabled_Type()
)
serverDefaultInternalServletsDisabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDefaultInternalServletsDisabled.setStatus("current")
_ServerMaxMessageSize_Type = Integer32
_ServerMaxMessageSize_Object = MibTableColumn
serverMaxMessageSize = _ServerMaxMessageSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 326),
    _ServerMaxMessageSize_Type()
)
serverMaxMessageSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverMaxMessageSize.setStatus("current")
_ServerCustomTrustKeyStoreType_Type = OctetString
_ServerCustomTrustKeyStoreType_Object = MibTableColumn
serverCustomTrustKeyStoreType = _ServerCustomTrustKeyStoreType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 327),
    _ServerCustomTrustKeyStoreType_Type()
)
serverCustomTrustKeyStoreType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverCustomTrustKeyStoreType.setStatus("current")
_ServerListenersBindEarly_Type = OctetString
_ServerListenersBindEarly_Object = MibTableColumn
serverListenersBindEarly = _ServerListenersBindEarly_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 328),
    _ServerListenersBindEarly_Type()
)
serverListenersBindEarly.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverListenersBindEarly.setStatus("current")
_ServerLowMemoryTimeInterval_Type = Integer32
_ServerLowMemoryTimeInterval_Object = MibTableColumn
serverLowMemoryTimeInterval = _ServerLowMemoryTimeInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 329),
    _ServerLowMemoryTimeInterval_Type()
)
serverLowMemoryTimeInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLowMemoryTimeInterval.setStatus("current")
_ServerTransactionLogFileWritePolicy_Type = OctetString
_ServerTransactionLogFileWritePolicy_Object = MibTableColumn
serverTransactionLogFileWritePolicy = _ServerTransactionLogFileWritePolicy_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 330),
    _ServerTransactionLogFileWritePolicy_Type()
)
serverTransactionLogFileWritePolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverTransactionLogFileWritePolicy.setStatus("current")
_ServerHttpTraceSupportEnabled_Type = OctetString
_ServerHttpTraceSupportEnabled_Object = MibTableColumn
serverHttpTraceSupportEnabled = _ServerHttpTraceSupportEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 331),
    _ServerHttpTraceSupportEnabled_Type()
)
serverHttpTraceSupportEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverHttpTraceSupportEnabled.setStatus("current")
_ServerKeyStores_Type = OctetString
_ServerKeyStores_Object = MibTableColumn
serverKeyStores = _ServerKeyStores_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 332),
    _ServerKeyStores_Type()
)
serverKeyStores.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverKeyStores.setStatus("current")
_ServerAutoMigrationEnabled_Type = OctetString
_ServerAutoMigrationEnabled_Object = MibTableColumn
serverAutoMigrationEnabled = _ServerAutoMigrationEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 333),
    _ServerAutoMigrationEnabled_Type()
)
serverAutoMigrationEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverAutoMigrationEnabled.setStatus("current")
_ServerPeriodLength_Type = Integer32
_ServerPeriodLength_Object = MibTableColumn
serverPeriodLength = _ServerPeriodLength_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 334),
    _ServerPeriodLength_Type()
)
serverPeriodLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverPeriodLength.setStatus("current")
_ServerStuckThreadTimerInterval_Type = Integer32
_ServerStuckThreadTimerInterval_Object = MibTableColumn
serverStuckThreadTimerInterval = _ServerStuckThreadTimerInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 335),
    _ServerStuckThreadTimerInterval_Type()
)
serverStuckThreadTimerInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverStuckThreadTimerInterval.setStatus("current")
_ServerDGCIdlePeriodsUntilTimeout_Type = Integer32
_ServerDGCIdlePeriodsUntilTimeout_Object = MibTableColumn
serverDGCIdlePeriodsUntilTimeout = _ServerDGCIdlePeriodsUntilTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 336),
    _ServerDGCIdlePeriodsUntilTimeout_Type()
)
serverDGCIdlePeriodsUntilTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDGCIdlePeriodsUntilTimeout.setStatus("current")
_ServerMuxerClass_Type = OctetString
_ServerMuxerClass_Object = MibTableColumn
serverMuxerClass = _ServerMuxerClass_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 337),
    _ServerMuxerClass_Type()
)
serverMuxerClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverMuxerClass.setStatus("current")
_ServerHealthCheckIntervalSeconds_Type = Integer32
_ServerHealthCheckIntervalSeconds_Object = MibTableColumn
serverHealthCheckIntervalSeconds = _ServerHealthCheckIntervalSeconds_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 338),
    _ServerHealthCheckIntervalSeconds_Type()
)
serverHealthCheckIntervalSeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverHealthCheckIntervalSeconds.setStatus("current")
_ServerRestartIntervalSeconds_Type = Integer32
_ServerRestartIntervalSeconds_Object = MibTableColumn
serverRestartIntervalSeconds = _ServerRestartIntervalSeconds_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 339),
    _ServerRestartIntervalSeconds_Type()
)
serverRestartIntervalSeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverRestartIntervalSeconds.setStatus("current")
_ServerIdlePeriodsUntilTimeout_Type = Integer32
_ServerIdlePeriodsUntilTimeout_Object = MibTableColumn
serverIdlePeriodsUntilTimeout = _ServerIdlePeriodsUntilTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 340),
    _ServerIdlePeriodsUntilTimeout_Type()
)
serverIdlePeriodsUntilTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverIdlePeriodsUntilTimeout.setStatus("current")
_ServerCustomTrustKeyStoreFileName_Type = OctetString
_ServerCustomTrustKeyStoreFileName_Object = MibTableColumn
serverCustomTrustKeyStoreFileName = _ServerCustomTrustKeyStoreFileName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 341),
    _ServerCustomTrustKeyStoreFileName_Type()
)
serverCustomTrustKeyStoreFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverCustomTrustKeyStoreFileName.setStatus("current")
_ServerHostsMigratableServices_Type = OctetString
_ServerHostsMigratableServices_Object = MibTableColumn
serverHostsMigratableServices = _ServerHostsMigratableServices_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 342),
    _ServerHostsMigratableServices_Type()
)
serverHostsMigratableServices.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverHostsMigratableServices.setStatus("current")
_ServerExternalDNSName_Type = OctetString
_ServerExternalDNSName_Object = MibTableColumn
serverExternalDNSName = _ServerExternalDNSName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 343),
    _ServerExternalDNSName_Type()
)
serverExternalDNSName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverExternalDNSName.setStatus("current")
_ServerOutboundPrivateKeyEnabled_Type = OctetString
_ServerOutboundPrivateKeyEnabled_Object = MibTableColumn
serverOutboundPrivateKeyEnabled = _ServerOutboundPrivateKeyEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 344),
    _ServerOutboundPrivateKeyEnabled_Type()
)
serverOutboundPrivateKeyEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverOutboundPrivateKeyEnabled.setStatus("current")
_ServerAdministrationProtocol_Type = OctetString
_ServerAdministrationProtocol_Object = MibTableColumn
serverAdministrationProtocol = _ServerAdministrationProtocol_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 345),
    _ServerAdministrationProtocol_Type()
)
serverAdministrationProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverAdministrationProtocol.setStatus("current")
_ServerCustomIdentityKeyStoreType_Type = OctetString
_ServerCustomIdentityKeyStoreType_Object = MibTableColumn
serverCustomIdentityKeyStoreType = _ServerCustomIdentityKeyStoreType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 346),
    _ServerCustomIdentityKeyStoreType_Type()
)
serverCustomIdentityKeyStoreType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverCustomIdentityKeyStoreType.setStatus("current")
_ServerStartupMode_Type = OctetString
_ServerStartupMode_Object = MibTableColumn
serverStartupMode = _ServerStartupMode_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 347),
    _ServerStartupMode_Type()
)
serverStartupMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverStartupMode.setStatus("current")
_ServerNMSocketCreateTimeoutInMillis_Type = Integer32
_ServerNMSocketCreateTimeoutInMillis_Object = MibTableColumn
serverNMSocketCreateTimeoutInMillis = _ServerNMSocketCreateTimeoutInMillis_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 730, 1, 348),
    _ServerNMSocketCreateTimeoutInMillis_Type()
)
serverNMSocketCreateTimeoutInMillis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverNMSocketCreateTimeoutInMillis.setStatus("current")
_ServerStartTable_Object = MibTable
serverStartTable = _ServerStartTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 735)
)
if mibBuilder.loadTexts:
    serverStartTable.setStatus("current")
_ServerStartEntry_Object = MibTableRow
serverStartEntry = _ServerStartEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 735, 1)
)
serverStartEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "serverStartIndex"),
)
if mibBuilder.loadTexts:
    serverStartEntry.setStatus("current")


class _ServerStartIndex_Type(DisplayString):
    """Custom type serverStartIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_ServerStartIndex_Type.__name__ = "DisplayString"
_ServerStartIndex_Object = MibTableColumn
serverStartIndex = _ServerStartIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 735, 1, 1),
    _ServerStartIndex_Type()
)
serverStartIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverStartIndex.setStatus("current")


class _ServerStartObjectName_Type(DisplayString):
    """Custom type serverStartObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerStartObjectName_Type.__name__ = "DisplayString"
_ServerStartObjectName_Object = MibTableColumn
serverStartObjectName = _ServerStartObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 735, 1, 5),
    _ServerStartObjectName_Type()
)
serverStartObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverStartObjectName.setStatus("current")


class _ServerStartType_Type(DisplayString):
    """Custom type serverStartType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServerStartType_Type.__name__ = "DisplayString"
_ServerStartType_Object = MibTableColumn
serverStartType = _ServerStartType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 735, 1, 10),
    _ServerStartType_Type()
)
serverStartType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverStartType.setStatus("current")


class _ServerStartName_Type(DisplayString):
    """Custom type serverStartName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_ServerStartName_Type.__name__ = "DisplayString"
_ServerStartName_Object = MibTableColumn
serverStartName = _ServerStartName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 735, 1, 15),
    _ServerStartName_Type()
)
serverStartName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverStartName.setStatus("current")


class _ServerStartParent_Type(DisplayString):
    """Custom type serverStartParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerStartParent_Type.__name__ = "DisplayString"
_ServerStartParent_Object = MibTableColumn
serverStartParent = _ServerStartParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 735, 1, 20),
    _ServerStartParent_Type()
)
serverStartParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverStartParent.setStatus("current")


class _ServerStartArguments_Type(DisplayString):
    """Custom type serverStartArguments based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerStartArguments_Type.__name__ = "DisplayString"
_ServerStartArguments_Object = MibTableColumn
serverStartArguments = _ServerStartArguments_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 735, 1, 25),
    _ServerStartArguments_Type()
)
serverStartArguments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverStartArguments.setStatus("current")


class _ServerStartBeaHome_Type(DisplayString):
    """Custom type serverStartBeaHome based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerStartBeaHome_Type.__name__ = "DisplayString"
_ServerStartBeaHome_Object = MibTableColumn
serverStartBeaHome = _ServerStartBeaHome_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 735, 1, 30),
    _ServerStartBeaHome_Type()
)
serverStartBeaHome.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverStartBeaHome.setStatus("current")


class _ServerStartClassPath_Type(DisplayString):
    """Custom type serverStartClassPath based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerStartClassPath_Type.__name__ = "DisplayString"
_ServerStartClassPath_Object = MibTableColumn
serverStartClassPath = _ServerStartClassPath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 735, 1, 35),
    _ServerStartClassPath_Type()
)
serverStartClassPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverStartClassPath.setStatus("current")


class _ServerStartJavaHome_Type(DisplayString):
    """Custom type serverStartJavaHome based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerStartJavaHome_Type.__name__ = "DisplayString"
_ServerStartJavaHome_Object = MibTableColumn
serverStartJavaHome = _ServerStartJavaHome_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 735, 1, 40),
    _ServerStartJavaHome_Type()
)
serverStartJavaHome.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverStartJavaHome.setStatus("current")


class _ServerStartRootDirectory_Type(DisplayString):
    """Custom type serverStartRootDirectory based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerStartRootDirectory_Type.__name__ = "DisplayString"
_ServerStartRootDirectory_Object = MibTableColumn
serverStartRootDirectory = _ServerStartRootDirectory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 735, 1, 45),
    _ServerStartRootDirectory_Type()
)
serverStartRootDirectory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverStartRootDirectory.setStatus("current")


class _ServerStartSecurityPolicyFile_Type(DisplayString):
    """Custom type serverStartSecurityPolicyFile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerStartSecurityPolicyFile_Type.__name__ = "DisplayString"
_ServerStartSecurityPolicyFile_Object = MibTableColumn
serverStartSecurityPolicyFile = _ServerStartSecurityPolicyFile_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 735, 1, 50),
    _ServerStartSecurityPolicyFile_Type()
)
serverStartSecurityPolicyFile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverStartSecurityPolicyFile.setStatus("current")


class _ServerStartUsername_Type(DisplayString):
    """Custom type serverStartUsername based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_ServerStartUsername_Type.__name__ = "DisplayString"
_ServerStartUsername_Object = MibTableColumn
serverStartUsername = _ServerStartUsername_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 735, 1, 55),
    _ServerStartUsername_Type()
)
serverStartUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverStartUsername.setStatus("current")
_ServerStartJavaVendor_Type = OctetString
_ServerStartJavaVendor_Object = MibTableColumn
serverStartJavaVendor = _ServerStartJavaVendor_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 735, 1, 56),
    _ServerStartJavaVendor_Type()
)
serverStartJavaVendor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverStartJavaVendor.setStatus("current")
_SnmpAgentTable_Object = MibTable
snmpAgentTable = _SnmpAgentTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 740)
)
if mibBuilder.loadTexts:
    snmpAgentTable.setStatus("current")
_SnmpAgentEntry_Object = MibTableRow
snmpAgentEntry = _SnmpAgentEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 740, 1)
)
snmpAgentEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "snmpAgentIndex"),
)
if mibBuilder.loadTexts:
    snmpAgentEntry.setStatus("current")


class _SnmpAgentIndex_Type(DisplayString):
    """Custom type snmpAgentIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_SnmpAgentIndex_Type.__name__ = "DisplayString"
_SnmpAgentIndex_Object = MibTableColumn
snmpAgentIndex = _SnmpAgentIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 740, 1, 1),
    _SnmpAgentIndex_Type()
)
snmpAgentIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentIndex.setStatus("current")


class _SnmpAgentObjectName_Type(DisplayString):
    """Custom type snmpAgentObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_SnmpAgentObjectName_Type.__name__ = "DisplayString"
_SnmpAgentObjectName_Object = MibTableColumn
snmpAgentObjectName = _SnmpAgentObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 740, 1, 5),
    _SnmpAgentObjectName_Type()
)
snmpAgentObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentObjectName.setStatus("current")


class _SnmpAgentType_Type(DisplayString):
    """Custom type snmpAgentType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_SnmpAgentType_Type.__name__ = "DisplayString"
_SnmpAgentType_Object = MibTableColumn
snmpAgentType = _SnmpAgentType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 740, 1, 10),
    _SnmpAgentType_Type()
)
snmpAgentType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentType.setStatus("current")


class _SnmpAgentName_Type(DisplayString):
    """Custom type snmpAgentName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_SnmpAgentName_Type.__name__ = "DisplayString"
_SnmpAgentName_Object = MibTableColumn
snmpAgentName = _SnmpAgentName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 740, 1, 15),
    _SnmpAgentName_Type()
)
snmpAgentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentName.setStatus("current")


class _SnmpAgentParent_Type(DisplayString):
    """Custom type snmpAgentParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_SnmpAgentParent_Type.__name__ = "DisplayString"
_SnmpAgentParent_Object = MibTableColumn
snmpAgentParent = _SnmpAgentParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 740, 1, 20),
    _SnmpAgentParent_Type()
)
snmpAgentParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentParent.setStatus("current")
_SnmpAgentCommunityPrefix_Type = DisplayString
_SnmpAgentCommunityPrefix_Object = MibTableColumn
snmpAgentCommunityPrefix = _SnmpAgentCommunityPrefix_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 740, 1, 21),
    _SnmpAgentCommunityPrefix_Type()
)
snmpAgentCommunityPrefix.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentCommunityPrefix.setStatus("current")
_SnmpAgentDebugLevel_Type = Integer32
_SnmpAgentDebugLevel_Object = MibTableColumn
snmpAgentDebugLevel = _SnmpAgentDebugLevel_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 740, 1, 22),
    _SnmpAgentDebugLevel_Type()
)
snmpAgentDebugLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentDebugLevel.setStatus("current")
_SnmpAgentMibDataRefreshInterval_Type = Integer32
_SnmpAgentMibDataRefreshInterval_Object = MibTableColumn
snmpAgentMibDataRefreshInterval = _SnmpAgentMibDataRefreshInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 740, 1, 23),
    _SnmpAgentMibDataRefreshInterval_Type()
)
snmpAgentMibDataRefreshInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentMibDataRefreshInterval.setStatus("current")
_SnmpAgentServerStatusCheckIntervalFactor_Type = Integer32
_SnmpAgentServerStatusCheckIntervalFactor_Object = MibTableColumn
snmpAgentServerStatusCheckIntervalFactor = _SnmpAgentServerStatusCheckIntervalFactor_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 740, 1, 24),
    _SnmpAgentServerStatusCheckIntervalFactor_Type()
)
snmpAgentServerStatusCheckIntervalFactor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentServerStatusCheckIntervalFactor.setStatus("current")
_SnmpAgentSNMPPort_Type = Integer32
_SnmpAgentSNMPPort_Object = MibTableColumn
snmpAgentSNMPPort = _SnmpAgentSNMPPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 740, 1, 25),
    _SnmpAgentSNMPPort_Type()
)
snmpAgentSNMPPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentSNMPPort.setStatus("current")
_SnmpAgentSNMPTrapVersion_Type = Integer32
_SnmpAgentSNMPTrapVersion_Object = MibTableColumn
snmpAgentSNMPTrapVersion = _SnmpAgentSNMPTrapVersion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 740, 1, 26),
    _SnmpAgentSNMPTrapVersion_Type()
)
snmpAgentSNMPTrapVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentSNMPTrapVersion.setStatus("current")
_SnmpAgentEnabled_Type = Integer32
_SnmpAgentEnabled_Object = MibTableColumn
snmpAgentEnabled = _SnmpAgentEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 740, 1, 27),
    _SnmpAgentEnabled_Type()
)
snmpAgentEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentEnabled.setStatus("current")
_SnmpAgentSendAutomaticTrapsEnabled_Type = Integer32
_SnmpAgentSendAutomaticTrapsEnabled_Object = MibTableColumn
snmpAgentSendAutomaticTrapsEnabled = _SnmpAgentSendAutomaticTrapsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 740, 1, 28),
    _SnmpAgentSendAutomaticTrapsEnabled_Type()
)
snmpAgentSendAutomaticTrapsEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentSendAutomaticTrapsEnabled.setStatus("current")
_SslTable_Object = MibTable
sslTable = _SslTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745)
)
if mibBuilder.loadTexts:
    sslTable.setStatus("current")
_SslEntry_Object = MibTableRow
sslEntry = _SslEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1)
)
sslEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "sslIndex"),
)
if mibBuilder.loadTexts:
    sslEntry.setStatus("current")


class _SslIndex_Type(DisplayString):
    """Custom type sslIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_SslIndex_Type.__name__ = "DisplayString"
_SslIndex_Object = MibTableColumn
sslIndex = _SslIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 1),
    _SslIndex_Type()
)
sslIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslIndex.setStatus("current")


class _SslObjectName_Type(DisplayString):
    """Custom type sslObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_SslObjectName_Type.__name__ = "DisplayString"
_SslObjectName_Object = MibTableColumn
sslObjectName = _SslObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 5),
    _SslObjectName_Type()
)
sslObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslObjectName.setStatus("current")


class _SslType_Type(DisplayString):
    """Custom type sslType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_SslType_Type.__name__ = "DisplayString"
_SslType_Object = MibTableColumn
sslType = _SslType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 10),
    _SslType_Type()
)
sslType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslType.setStatus("current")


class _SslName_Type(DisplayString):
    """Custom type sslName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_SslName_Type.__name__ = "DisplayString"
_SslName_Object = MibTableColumn
sslName = _SslName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 15),
    _SslName_Type()
)
sslName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslName.setStatus("current")


class _SslParent_Type(DisplayString):
    """Custom type sslParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_SslParent_Type.__name__ = "DisplayString"
_SslParent_Object = MibTableColumn
sslParent = _SslParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 20),
    _SslParent_Type()
)
sslParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslParent.setStatus("current")
_SslExportKeyLifespan_Type = Integer32
_SslExportKeyLifespan_Object = MibTableColumn
sslExportKeyLifespan = _SslExportKeyLifespan_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 23),
    _SslExportKeyLifespan_Type()
)
sslExportKeyLifespan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslExportKeyLifespan.setStatus("current")
_SslHostnameVerifier_Type = DisplayString
_SslHostnameVerifier_Object = MibTableColumn
sslHostnameVerifier = _SslHostnameVerifier_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 24),
    _SslHostnameVerifier_Type()
)
sslHostnameVerifier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslHostnameVerifier.setStatus("current")
_SslIdentityAndTrustLocations_Type = DisplayString
_SslIdentityAndTrustLocations_Object = MibTableColumn
sslIdentityAndTrustLocations = _SslIdentityAndTrustLocations_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 25),
    _SslIdentityAndTrustLocations_Type()
)
sslIdentityAndTrustLocations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslIdentityAndTrustLocations.setStatus("current")
_SslListenPort_Type = Integer32
_SslListenPort_Object = MibTableColumn
sslListenPort = _SslListenPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 26),
    _SslListenPort_Type()
)
sslListenPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslListenPort.setStatus("current")
_SslLoginTimeoutMillis_Type = Integer32
_SslLoginTimeoutMillis_Object = MibTableColumn
sslLoginTimeoutMillis = _SslLoginTimeoutMillis_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 27),
    _SslLoginTimeoutMillis_Type()
)
sslLoginTimeoutMillis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslLoginTimeoutMillis.setStatus("current")
_SslServerCertificateChainFileName_Type = DisplayString
_SslServerCertificateChainFileName_Object = MibTableColumn
sslServerCertificateChainFileName = _SslServerCertificateChainFileName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 28),
    _SslServerCertificateChainFileName_Type()
)
sslServerCertificateChainFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslServerCertificateChainFileName.setStatus("current")
_SslServerCertificateFileName_Type = DisplayString
_SslServerCertificateFileName_Object = MibTableColumn
sslServerCertificateFileName = _SslServerCertificateFileName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 29),
    _SslServerCertificateFileName_Type()
)
sslServerCertificateFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslServerCertificateFileName.setStatus("current")
_SslServerPrivateKeyAlias_Type = DisplayString
_SslServerPrivateKeyAlias_Object = MibTableColumn
sslServerPrivateKeyAlias = _SslServerPrivateKeyAlias_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 30),
    _SslServerPrivateKeyAlias_Type()
)
sslServerPrivateKeyAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslServerPrivateKeyAlias.setStatus("current")
_SslClientCertificateEnforced_Type = Integer32
_SslClientCertificateEnforced_Object = MibTableColumn
sslClientCertificateEnforced = _SslClientCertificateEnforced_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 31),
    _SslClientCertificateEnforced_Type()
)
sslClientCertificateEnforced.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslClientCertificateEnforced.setStatus("current")
_SslEnabled_Type = Integer32
_SslEnabled_Object = MibTableColumn
sslEnabled = _SslEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 32),
    _SslEnabled_Type()
)
sslEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslEnabled.setStatus("current")
_SslHostnameVerificationIgnored_Type = Integer32
_SslHostnameVerificationIgnored_Object = MibTableColumn
sslHostnameVerificationIgnored = _SslHostnameVerificationIgnored_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 33),
    _SslHostnameVerificationIgnored_Type()
)
sslHostnameVerificationIgnored.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslHostnameVerificationIgnored.setStatus("current")
_SslSSLRejectionLoggingEnabled_Type = Integer32
_SslSSLRejectionLoggingEnabled_Object = MibTableColumn
sslSSLRejectionLoggingEnabled = _SslSSLRejectionLoggingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 35),
    _SslSSLRejectionLoggingEnabled_Type()
)
sslSSLRejectionLoggingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslSSLRejectionLoggingEnabled.setStatus("current")
_SslTwoWaySSLEnabled_Type = Integer32
_SslTwoWaySSLEnabled_Object = MibTableColumn
sslTwoWaySSLEnabled = _SslTwoWaySSLEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 36),
    _SslTwoWaySSLEnabled_Type()
)
sslTwoWaySSLEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslTwoWaySSLEnabled.setStatus("current")
_SslOutboundCertificateValidation_Type = OctetString
_SslOutboundCertificateValidation_Object = MibTableColumn
sslOutboundCertificateValidation = _SslOutboundCertificateValidation_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 37),
    _SslOutboundCertificateValidation_Type()
)
sslOutboundCertificateValidation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslOutboundCertificateValidation.setStatus("current")
_SslInboundCertificateValidation_Type = OctetString
_SslInboundCertificateValidation_Object = MibTableColumn
sslInboundCertificateValidation = _SslInboundCertificateValidation_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 38),
    _SslInboundCertificateValidation_Type()
)
sslInboundCertificateValidation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslInboundCertificateValidation.setStatus("current")
_SslCertAuthenticator_Type = OctetString
_SslCertAuthenticator_Object = MibTableColumn
sslCertAuthenticator = _SslCertAuthenticator_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 39),
    _SslCertAuthenticator_Type()
)
sslCertAuthenticator.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslCertAuthenticator.setStatus("current")
_SslUseServerCerts_Type = OctetString
_SslUseServerCerts_Object = MibTableColumn
sslUseServerCerts = _SslUseServerCerts_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 40),
    _SslUseServerCerts_Type()
)
sslUseServerCerts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslUseServerCerts.setStatus("current")
_SslAllowUnencryptedNullCipher_Type = OctetString
_SslAllowUnencryptedNullCipher_Object = MibTableColumn
sslAllowUnencryptedNullCipher = _SslAllowUnencryptedNullCipher_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 745, 1, 41),
    _SslAllowUnencryptedNullCipher_Type()
)
sslAllowUnencryptedNullCipher.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sslAllowUnencryptedNullCipher.setStatus("current")
_StartupClassTable_Object = MibTable
startupClassTable = _StartupClassTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 750)
)
if mibBuilder.loadTexts:
    startupClassTable.setStatus("current")
_StartupClassEntry_Object = MibTableRow
startupClassEntry = _StartupClassEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 750, 1)
)
startupClassEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "startupClassIndex"),
)
if mibBuilder.loadTexts:
    startupClassEntry.setStatus("current")


class _StartupClassIndex_Type(DisplayString):
    """Custom type startupClassIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_StartupClassIndex_Type.__name__ = "DisplayString"
_StartupClassIndex_Object = MibTableColumn
startupClassIndex = _StartupClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 750, 1, 1),
    _StartupClassIndex_Type()
)
startupClassIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    startupClassIndex.setStatus("current")


class _StartupClassObjectName_Type(DisplayString):
    """Custom type startupClassObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_StartupClassObjectName_Type.__name__ = "DisplayString"
_StartupClassObjectName_Object = MibTableColumn
startupClassObjectName = _StartupClassObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 750, 1, 5),
    _StartupClassObjectName_Type()
)
startupClassObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    startupClassObjectName.setStatus("current")


class _StartupClassType_Type(DisplayString):
    """Custom type startupClassType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_StartupClassType_Type.__name__ = "DisplayString"
_StartupClassType_Object = MibTableColumn
startupClassType = _StartupClassType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 750, 1, 10),
    _StartupClassType_Type()
)
startupClassType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    startupClassType.setStatus("current")


class _StartupClassName_Type(DisplayString):
    """Custom type startupClassName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_StartupClassName_Type.__name__ = "DisplayString"
_StartupClassName_Object = MibTableColumn
startupClassName = _StartupClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 750, 1, 15),
    _StartupClassName_Type()
)
startupClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    startupClassName.setStatus("current")


class _StartupClassParent_Type(DisplayString):
    """Custom type startupClassParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_StartupClassParent_Type.__name__ = "DisplayString"
_StartupClassParent_Object = MibTableColumn
startupClassParent = _StartupClassParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 750, 1, 20),
    _StartupClassParent_Type()
)
startupClassParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    startupClassParent.setStatus("current")


class _StartupClassFailureIsFatal_Type(Integer32):
    """Custom type startupClassFailureIsFatal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_StartupClassFailureIsFatal_Type.__name__ = "Integer32"
_StartupClassFailureIsFatal_Object = MibTableColumn
startupClassFailureIsFatal = _StartupClassFailureIsFatal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 750, 1, 25),
    _StartupClassFailureIsFatal_Type()
)
startupClassFailureIsFatal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    startupClassFailureIsFatal.setStatus("current")
_StartupClassDeploymentOrder_Type = Integer32
_StartupClassDeploymentOrder_Object = MibTableColumn
startupClassDeploymentOrder = _StartupClassDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 750, 1, 26),
    _StartupClassDeploymentOrder_Type()
)
startupClassDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    startupClassDeploymentOrder.setStatus("current")
_StartupClassLoadBeforeAppDeployments_Type = OctetString
_StartupClassLoadBeforeAppDeployments_Object = MibTableColumn
startupClassLoadBeforeAppDeployments = _StartupClassLoadBeforeAppDeployments_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 750, 1, 27),
    _StartupClassLoadBeforeAppDeployments_Type()
)
startupClassLoadBeforeAppDeployments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    startupClassLoadBeforeAppDeployments.setStatus("current")
_StartupClassArguments_Type = OctetString
_StartupClassArguments_Object = MibTableColumn
startupClassArguments = _StartupClassArguments_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 750, 1, 28),
    _StartupClassArguments_Type()
)
startupClassArguments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    startupClassArguments.setStatus("current")
_StartupClassClassName_Type = OctetString
_StartupClassClassName_Object = MibTableColumn
startupClassClassName = _StartupClassClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 750, 1, 29),
    _StartupClassClassName_Type()
)
startupClassClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    startupClassClassName.setStatus("current")
_StartupClassLoadBeforeAppActivation_Type = OctetString
_StartupClassLoadBeforeAppActivation_Object = MibTableColumn
startupClassLoadBeforeAppActivation = _StartupClassLoadBeforeAppActivation_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 750, 1, 30),
    _StartupClassLoadBeforeAppActivation_Type()
)
startupClassLoadBeforeAppActivation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    startupClassLoadBeforeAppActivation.setStatus("current")
_WebAppComponentTable_Object = MibTable
webAppComponentTable = _WebAppComponentTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 760)
)
if mibBuilder.loadTexts:
    webAppComponentTable.setStatus("current")
_WebAppComponentEntry_Object = MibTableRow
webAppComponentEntry = _WebAppComponentEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 760, 1)
)
webAppComponentEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "webAppComponentIndex"),
)
if mibBuilder.loadTexts:
    webAppComponentEntry.setStatus("current")


class _WebAppComponentIndex_Type(DisplayString):
    """Custom type webAppComponentIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WebAppComponentIndex_Type.__name__ = "DisplayString"
_WebAppComponentIndex_Object = MibTableColumn
webAppComponentIndex = _WebAppComponentIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 760, 1, 1),
    _WebAppComponentIndex_Type()
)
webAppComponentIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentIndex.setStatus("current")


class _WebAppComponentObjectName_Type(DisplayString):
    """Custom type webAppComponentObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WebAppComponentObjectName_Type.__name__ = "DisplayString"
_WebAppComponentObjectName_Object = MibTableColumn
webAppComponentObjectName = _WebAppComponentObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 760, 1, 5),
    _WebAppComponentObjectName_Type()
)
webAppComponentObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentObjectName.setStatus("current")


class _WebAppComponentType_Type(DisplayString):
    """Custom type webAppComponentType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WebAppComponentType_Type.__name__ = "DisplayString"
_WebAppComponentType_Object = MibTableColumn
webAppComponentType = _WebAppComponentType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 760, 1, 10),
    _WebAppComponentType_Type()
)
webAppComponentType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentType.setStatus("current")


class _WebAppComponentName_Type(DisplayString):
    """Custom type webAppComponentName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WebAppComponentName_Type.__name__ = "DisplayString"
_WebAppComponentName_Object = MibTableColumn
webAppComponentName = _WebAppComponentName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 760, 1, 15),
    _WebAppComponentName_Type()
)
webAppComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentName.setStatus("current")


class _WebAppComponentParent_Type(DisplayString):
    """Custom type webAppComponentParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WebAppComponentParent_Type.__name__ = "DisplayString"
_WebAppComponentParent_Object = MibTableColumn
webAppComponentParent = _WebAppComponentParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 760, 1, 20),
    _WebAppComponentParent_Type()
)
webAppComponentParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentParent.setStatus("current")


class _WebAppComponentApplication_Type(DisplayString):
    """Custom type webAppComponentApplication based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WebAppComponentApplication_Type.__name__ = "DisplayString"
_WebAppComponentApplication_Object = MibTableColumn
webAppComponentApplication = _WebAppComponentApplication_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 760, 1, 25),
    _WebAppComponentApplication_Type()
)
webAppComponentApplication.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentApplication.setStatus("current")


class _WebAppComponentURI_Type(DisplayString):
    """Custom type webAppComponentURI based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WebAppComponentURI_Type.__name__ = "DisplayString"
_WebAppComponentURI_Object = MibTableColumn
webAppComponentURI = _WebAppComponentURI_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 760, 1, 30),
    _WebAppComponentURI_Type()
)
webAppComponentURI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentURI.setStatus("current")


class _WebAppComponentWebServers_Type(DisplayString):
    """Custom type webAppComponentWebServers based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WebAppComponentWebServers_Type.__name__ = "DisplayString"
_WebAppComponentWebServers_Object = MibTableColumn
webAppComponentWebServers = _WebAppComponentWebServers_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 760, 1, 35),
    _WebAppComponentWebServers_Type()
)
webAppComponentWebServers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentWebServers.setStatus("current")


class _WebAppComponentIndexDirectoryEnabled_Type(Integer32):
    """Custom type webAppComponentIndexDirectoryEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_WebAppComponentIndexDirectoryEnabled_Type.__name__ = "Integer32"
_WebAppComponentIndexDirectoryEnabled_Object = MibTableColumn
webAppComponentIndexDirectoryEnabled = _WebAppComponentIndexDirectoryEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 760, 1, 40),
    _WebAppComponentIndexDirectoryEnabled_Type()
)
webAppComponentIndexDirectoryEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentIndexDirectoryEnabled.setStatus("current")


class _WebAppComponentServletExtensionCaseSensitive_Type(Integer32):
    """Custom type webAppComponentServletExtensionCaseSensitive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_WebAppComponentServletExtensionCaseSensitive_Type.__name__ = "Integer32"
_WebAppComponentServletExtensionCaseSensitive_Object = MibTableColumn
webAppComponentServletExtensionCaseSensitive = _WebAppComponentServletExtensionCaseSensitive_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 760, 1, 45),
    _WebAppComponentServletExtensionCaseSensitive_Type()
)
webAppComponentServletExtensionCaseSensitive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentServletExtensionCaseSensitive.setStatus("current")
_WebAppComponentServletReloadCheckSecs_Type = Integer32
_WebAppComponentServletReloadCheckSecs_Object = MibTableColumn
webAppComponentServletReloadCheckSecs = _WebAppComponentServletReloadCheckSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 760, 1, 50),
    _WebAppComponentServletReloadCheckSecs_Type()
)
webAppComponentServletReloadCheckSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentServletReloadCheckSecs.setStatus("current")
_WebAppComponentSingleThreadedServletPoolSize_Type = Integer32
_WebAppComponentSingleThreadedServletPoolSize_Object = MibTableColumn
webAppComponentSingleThreadedServletPoolSize = _WebAppComponentSingleThreadedServletPoolSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 760, 1, 55),
    _WebAppComponentSingleThreadedServletPoolSize_Type()
)
webAppComponentSingleThreadedServletPoolSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentSingleThreadedServletPoolSize.setStatus("current")


class _WebAppComponentAuthRealmName_Type(DisplayString):
    """Custom type webAppComponentAuthRealmName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WebAppComponentAuthRealmName_Type.__name__ = "DisplayString"
_WebAppComponentAuthRealmName_Object = MibTableColumn
webAppComponentAuthRealmName = _WebAppComponentAuthRealmName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 760, 1, 60),
    _WebAppComponentAuthRealmName_Type()
)
webAppComponentAuthRealmName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppComponentAuthRealmName.setStatus("current")
_WebServerTable_Object = MibTable
webServerTable = _WebServerTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770)
)
if mibBuilder.loadTexts:
    webServerTable.setStatus("current")
_WebServerEntry_Object = MibTableRow
webServerEntry = _WebServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1)
)
webServerEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "webServerIndex"),
)
if mibBuilder.loadTexts:
    webServerEntry.setStatus("current")


class _WebServerIndex_Type(DisplayString):
    """Custom type webServerIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WebServerIndex_Type.__name__ = "DisplayString"
_WebServerIndex_Object = MibTableColumn
webServerIndex = _WebServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 1),
    _WebServerIndex_Type()
)
webServerIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerIndex.setStatus("current")


class _WebServerObjectName_Type(DisplayString):
    """Custom type webServerObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WebServerObjectName_Type.__name__ = "DisplayString"
_WebServerObjectName_Object = MibTableColumn
webServerObjectName = _WebServerObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 5),
    _WebServerObjectName_Type()
)
webServerObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerObjectName.setStatus("current")


class _WebServerType_Type(DisplayString):
    """Custom type webServerType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WebServerType_Type.__name__ = "DisplayString"
_WebServerType_Object = MibTableColumn
webServerType = _WebServerType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 10),
    _WebServerType_Type()
)
webServerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerType.setStatus("current")


class _WebServerName_Type(DisplayString):
    """Custom type webServerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WebServerName_Type.__name__ = "DisplayString"
_WebServerName_Object = MibTableColumn
webServerName = _WebServerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 15),
    _WebServerName_Type()
)
webServerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerName.setStatus("current")


class _WebServerParent_Type(DisplayString):
    """Custom type webServerParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WebServerParent_Type.__name__ = "DisplayString"
_WebServerParent_Object = MibTableColumn
webServerParent = _WebServerParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 20),
    _WebServerParent_Type()
)
webServerParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerParent.setStatus("current")


class _WebServerTargets_Type(DisplayString):
    """Custom type webServerTargets based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_WebServerTargets_Type.__name__ = "DisplayString"
_WebServerTargets_Object = MibTableColumn
webServerTargets = _WebServerTargets_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 25),
    _WebServerTargets_Type()
)
webServerTargets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerTargets.setStatus("current")


class _WebServerLoggingEnabled_Type(Integer32):
    """Custom type webServerLoggingEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_WebServerLoggingEnabled_Type.__name__ = "Integer32"
_WebServerLoggingEnabled_Object = MibTableColumn
webServerLoggingEnabled = _WebServerLoggingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 30),
    _WebServerLoggingEnabled_Type()
)
webServerLoggingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLoggingEnabled.setStatus("current")


class _WebServerLogFileFormat_Type(DisplayString):
    """Custom type webServerLogFileFormat based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WebServerLogFileFormat_Type.__name__ = "DisplayString"
_WebServerLogFileFormat_Object = MibTableColumn
webServerLogFileFormat = _WebServerLogFileFormat_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 35),
    _WebServerLogFileFormat_Type()
)
webServerLogFileFormat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogFileFormat.setStatus("current")
_WebServerLogFileBufferKBytes_Type = Integer32
_WebServerLogFileBufferKBytes_Object = MibTableColumn
webServerLogFileBufferKBytes = _WebServerLogFileBufferKBytes_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 45),
    _WebServerLogFileBufferKBytes_Type()
)
webServerLogFileBufferKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogFileBufferKBytes.setStatus("current")
_WebServerMaxLogFileSizeKBytes_Type = Integer32
_WebServerMaxLogFileSizeKBytes_Object = MibTableColumn
webServerMaxLogFileSizeKBytes = _WebServerMaxLogFileSizeKBytes_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 50),
    _WebServerMaxLogFileSizeKBytes_Type()
)
webServerMaxLogFileSizeKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerMaxLogFileSizeKBytes.setStatus("current")
_WebServerLogRotationPeriodMins_Type = Integer32
_WebServerLogRotationPeriodMins_Object = MibTableColumn
webServerLogRotationPeriodMins = _WebServerLogRotationPeriodMins_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 60),
    _WebServerLogRotationPeriodMins_Type()
)
webServerLogRotationPeriodMins.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogRotationPeriodMins.setStatus("current")
_WebServerLogFileFlushSecs_Type = Integer32
_WebServerLogFileFlushSecs_Object = MibTableColumn
webServerLogFileFlushSecs = _WebServerLogFileFlushSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 65),
    _WebServerLogFileFlushSecs_Type()
)
webServerLogFileFlushSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogFileFlushSecs.setStatus("current")


class _WebServerLogRotationTimeBegin_Type(DisplayString):
    """Custom type webServerLogRotationTimeBegin based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WebServerLogRotationTimeBegin_Type.__name__ = "DisplayString"
_WebServerLogRotationTimeBegin_Object = MibTableColumn
webServerLogRotationTimeBegin = _WebServerLogRotationTimeBegin_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 70),
    _WebServerLogRotationTimeBegin_Type()
)
webServerLogRotationTimeBegin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogRotationTimeBegin.setStatus("current")


class _WebServerKeepAliveEnabled_Type(Integer32):
    """Custom type webServerKeepAliveEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_WebServerKeepAliveEnabled_Type.__name__ = "Integer32"
_WebServerKeepAliveEnabled_Object = MibTableColumn
webServerKeepAliveEnabled = _WebServerKeepAliveEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 75),
    _WebServerKeepAliveEnabled_Type()
)
webServerKeepAliveEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerKeepAliveEnabled.setStatus("current")
_WebServerKeepAliveSecs_Type = Integer32
_WebServerKeepAliveSecs_Object = MibTableColumn
webServerKeepAliveSecs = _WebServerKeepAliveSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 80),
    _WebServerKeepAliveSecs_Type()
)
webServerKeepAliveSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerKeepAliveSecs.setStatus("current")
_WebServerHttpsKeepAliveSecs_Type = Integer32
_WebServerHttpsKeepAliveSecs_Object = MibTableColumn
webServerHttpsKeepAliveSecs = _WebServerHttpsKeepAliveSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 85),
    _WebServerHttpsKeepAliveSecs_Type()
)
webServerHttpsKeepAliveSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerHttpsKeepAliveSecs.setStatus("current")
_WebServerPostTimeoutSecs_Type = Integer32
_WebServerPostTimeoutSecs_Object = MibTableColumn
webServerPostTimeoutSecs = _WebServerPostTimeoutSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 90),
    _WebServerPostTimeoutSecs_Type()
)
webServerPostTimeoutSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerPostTimeoutSecs.setStatus("current")
_WebServerMaxPostTimeSecs_Type = Integer32
_WebServerMaxPostTimeSecs_Object = MibTableColumn
webServerMaxPostTimeSecs = _WebServerMaxPostTimeSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 95),
    _WebServerMaxPostTimeSecs_Type()
)
webServerMaxPostTimeSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerMaxPostTimeSecs.setStatus("current")
_WebServerMaxPostSize_Type = Integer32
_WebServerMaxPostSize_Object = MibTableColumn
webServerMaxPostSize = _WebServerMaxPostSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 100),
    _WebServerMaxPostSize_Type()
)
webServerMaxPostSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerMaxPostSize.setStatus("current")


class _WebServerDefaultWebApp_Type(DisplayString):
    """Custom type webServerDefaultWebApp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WebServerDefaultWebApp_Type.__name__ = "DisplayString"
_WebServerDefaultWebApp_Object = MibTableColumn
webServerDefaultWebApp = _WebServerDefaultWebApp_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 105),
    _WebServerDefaultWebApp_Type()
)
webServerDefaultWebApp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerDefaultWebApp.setStatus("current")


class _WebServerCharsets_Type(DisplayString):
    """Custom type webServerCharsets based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_WebServerCharsets_Type.__name__ = "DisplayString"
_WebServerCharsets_Object = MibTableColumn
webServerCharsets = _WebServerCharsets_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 110),
    _WebServerCharsets_Type()
)
webServerCharsets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerCharsets.setStatus("current")


class _WebServerWAPEnabled_Type(Integer32):
    """Custom type webServerWAPEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_WebServerWAPEnabled_Type.__name__ = "Integer32"
_WebServerWAPEnabled_Object = MibTableColumn
webServerWAPEnabled = _WebServerWAPEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 115),
    _WebServerWAPEnabled_Type()
)
webServerWAPEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerWAPEnabled.setStatus("current")


class _WebServerURLResource_Type(DisplayString):
    """Custom type webServerURLResource based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WebServerURLResource_Type.__name__ = "DisplayString"
_WebServerURLResource_Object = MibTableColumn
webServerURLResource = _WebServerURLResource_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 770, 1, 125),
    _WebServerURLResource_Type()
)
webServerURLResource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerURLResource.setStatus("current")
_WlecConnectionPoolTable_Object = MibTable
wlecConnectionPoolTable = _WlecConnectionPoolTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 780)
)
if mibBuilder.loadTexts:
    wlecConnectionPoolTable.setStatus("current")
_WlecConnectionPoolEntry_Object = MibTableRow
wlecConnectionPoolEntry = _WlecConnectionPoolEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 780, 1)
)
wlecConnectionPoolEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wlecConnectionPoolIndex"),
)
if mibBuilder.loadTexts:
    wlecConnectionPoolEntry.setStatus("current")


class _WlecConnectionPoolIndex_Type(DisplayString):
    """Custom type wlecConnectionPoolIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WlecConnectionPoolIndex_Type.__name__ = "DisplayString"
_WlecConnectionPoolIndex_Object = MibTableColumn
wlecConnectionPoolIndex = _WlecConnectionPoolIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 780, 1, 1),
    _WlecConnectionPoolIndex_Type()
)
wlecConnectionPoolIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolIndex.setStatus("current")


class _WlecConnectionPoolObjectName_Type(DisplayString):
    """Custom type wlecConnectionPoolObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WlecConnectionPoolObjectName_Type.__name__ = "DisplayString"
_WlecConnectionPoolObjectName_Object = MibTableColumn
wlecConnectionPoolObjectName = _WlecConnectionPoolObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 780, 1, 5),
    _WlecConnectionPoolObjectName_Type()
)
wlecConnectionPoolObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolObjectName.setStatus("current")


class _WlecConnectionPoolType_Type(DisplayString):
    """Custom type wlecConnectionPoolType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WlecConnectionPoolType_Type.__name__ = "DisplayString"
_WlecConnectionPoolType_Object = MibTableColumn
wlecConnectionPoolType = _WlecConnectionPoolType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 780, 1, 10),
    _WlecConnectionPoolType_Type()
)
wlecConnectionPoolType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolType.setStatus("current")


class _WlecConnectionPoolName_Type(DisplayString):
    """Custom type wlecConnectionPoolName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WlecConnectionPoolName_Type.__name__ = "DisplayString"
_WlecConnectionPoolName_Object = MibTableColumn
wlecConnectionPoolName = _WlecConnectionPoolName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 780, 1, 15),
    _WlecConnectionPoolName_Type()
)
wlecConnectionPoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolName.setStatus("current")


class _WlecConnectionPoolParent_Type(DisplayString):
    """Custom type wlecConnectionPoolParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WlecConnectionPoolParent_Type.__name__ = "DisplayString"
_WlecConnectionPoolParent_Object = MibTableColumn
wlecConnectionPoolParent = _WlecConnectionPoolParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 780, 1, 20),
    _WlecConnectionPoolParent_Type()
)
wlecConnectionPoolParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolParent.setStatus("current")


class _WlecConnectionPoolPrimaryAddresses_Type(DisplayString):
    """Custom type wlecConnectionPoolPrimaryAddresses based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_WlecConnectionPoolPrimaryAddresses_Type.__name__ = "DisplayString"
_WlecConnectionPoolPrimaryAddresses_Object = MibTableColumn
wlecConnectionPoolPrimaryAddresses = _WlecConnectionPoolPrimaryAddresses_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 780, 1, 25),
    _WlecConnectionPoolPrimaryAddresses_Type()
)
wlecConnectionPoolPrimaryAddresses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolPrimaryAddresses.setStatus("current")


class _WlecConnectionPoolFailoverAddresses_Type(DisplayString):
    """Custom type wlecConnectionPoolFailoverAddresses based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_WlecConnectionPoolFailoverAddresses_Type.__name__ = "DisplayString"
_WlecConnectionPoolFailoverAddresses_Object = MibTableColumn
wlecConnectionPoolFailoverAddresses = _WlecConnectionPoolFailoverAddresses_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 780, 1, 30),
    _WlecConnectionPoolFailoverAddresses_Type()
)
wlecConnectionPoolFailoverAddresses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolFailoverAddresses.setStatus("current")
_WlecConnectionPoolMinimumPoolSize_Type = Integer32
_WlecConnectionPoolMinimumPoolSize_Object = MibTableColumn
wlecConnectionPoolMinimumPoolSize = _WlecConnectionPoolMinimumPoolSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 780, 1, 35),
    _WlecConnectionPoolMinimumPoolSize_Type()
)
wlecConnectionPoolMinimumPoolSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolMinimumPoolSize.setStatus("current")
_WlecConnectionPoolMaximumPoolSize_Type = Integer32
_WlecConnectionPoolMaximumPoolSize_Object = MibTableColumn
wlecConnectionPoolMaximumPoolSize = _WlecConnectionPoolMaximumPoolSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 780, 1, 40),
    _WlecConnectionPoolMaximumPoolSize_Type()
)
wlecConnectionPoolMaximumPoolSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolMaximumPoolSize.setStatus("current")


class _WlecConnectionPoolUserName_Type(DisplayString):
    """Custom type wlecConnectionPoolUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WlecConnectionPoolUserName_Type.__name__ = "DisplayString"
_WlecConnectionPoolUserName_Object = MibTableColumn
wlecConnectionPoolUserName = _WlecConnectionPoolUserName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 780, 1, 45),
    _WlecConnectionPoolUserName_Type()
)
wlecConnectionPoolUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolUserName.setStatus("current")


class _WlecConnectionPoolUserRole_Type(DisplayString):
    """Custom type wlecConnectionPoolUserRole based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WlecConnectionPoolUserRole_Type.__name__ = "DisplayString"
_WlecConnectionPoolUserRole_Object = MibTableColumn
wlecConnectionPoolUserRole = _WlecConnectionPoolUserRole_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 780, 1, 50),
    _WlecConnectionPoolUserRole_Type()
)
wlecConnectionPoolUserRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolUserRole.setStatus("current")


class _WlecConnectionPoolWLEDomain_Type(DisplayString):
    """Custom type wlecConnectionPoolWLEDomain based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WlecConnectionPoolWLEDomain_Type.__name__ = "DisplayString"
_WlecConnectionPoolWLEDomain_Object = MibTableColumn
wlecConnectionPoolWLEDomain = _WlecConnectionPoolWLEDomain_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 780, 1, 55),
    _WlecConnectionPoolWLEDomain_Type()
)
wlecConnectionPoolWLEDomain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolWLEDomain.setStatus("current")
_WlecConnectionPoolMinimumEncryptionLevel_Type = Integer32
_WlecConnectionPoolMinimumEncryptionLevel_Object = MibTableColumn
wlecConnectionPoolMinimumEncryptionLevel = _WlecConnectionPoolMinimumEncryptionLevel_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 780, 1, 60),
    _WlecConnectionPoolMinimumEncryptionLevel_Type()
)
wlecConnectionPoolMinimumEncryptionLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolMinimumEncryptionLevel.setStatus("current")
_WlecConnectionPoolMaximumEncryptionLevel_Type = Integer32
_WlecConnectionPoolMaximumEncryptionLevel_Object = MibTableColumn
wlecConnectionPoolMaximumEncryptionLevel = _WlecConnectionPoolMaximumEncryptionLevel_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 780, 1, 65),
    _WlecConnectionPoolMaximumEncryptionLevel_Type()
)
wlecConnectionPoolMaximumEncryptionLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolMaximumEncryptionLevel.setStatus("current")


class _WlecConnectionPoolCertificateAuthenticationEnabled_Type(Integer32):
    """Custom type wlecConnectionPoolCertificateAuthenticationEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_WlecConnectionPoolCertificateAuthenticationEnabled_Type.__name__ = "Integer32"
_WlecConnectionPoolCertificateAuthenticationEnabled_Object = MibTableColumn
wlecConnectionPoolCertificateAuthenticationEnabled = _WlecConnectionPoolCertificateAuthenticationEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 780, 1, 70),
    _WlecConnectionPoolCertificateAuthenticationEnabled_Type()
)
wlecConnectionPoolCertificateAuthenticationEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolCertificateAuthenticationEnabled.setStatus("current")


class _WlecConnectionPoolSecurityContextEnabled_Type(Integer32):
    """Custom type wlecConnectionPoolSecurityContextEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_WlecConnectionPoolSecurityContextEnabled_Type.__name__ = "Integer32"
_WlecConnectionPoolSecurityContextEnabled_Object = MibTableColumn
wlecConnectionPoolSecurityContextEnabled = _WlecConnectionPoolSecurityContextEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 780, 1, 75),
    _WlecConnectionPoolSecurityContextEnabled_Type()
)
wlecConnectionPoolSecurityContextEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolSecurityContextEnabled.setStatus("current")


class _WlecConnectionPoolTargets_Type(DisplayString):
    """Custom type wlecConnectionPoolTargets based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_WlecConnectionPoolTargets_Type.__name__ = "DisplayString"
_WlecConnectionPoolTargets_Object = MibTableColumn
wlecConnectionPoolTargets = _WlecConnectionPoolTargets_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 780, 1, 80),
    _WlecConnectionPoolTargets_Type()
)
wlecConnectionPoolTargets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolTargets.setStatus("current")
_WlecConnectionPoolDeploymentOrder_Type = Integer32
_WlecConnectionPoolDeploymentOrder_Object = MibTableColumn
wlecConnectionPoolDeploymentOrder = _WlecConnectionPoolDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 780, 1, 81),
    _WlecConnectionPoolDeploymentOrder_Type()
)
wlecConnectionPoolDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlecConnectionPoolDeploymentOrder.setStatus("current")
_BridgeDestinationTable_Object = MibTable
bridgeDestinationTable = _BridgeDestinationTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 782)
)
if mibBuilder.loadTexts:
    bridgeDestinationTable.setStatus("current")
_BridgeDestinationEntry_Object = MibTableRow
bridgeDestinationEntry = _BridgeDestinationEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 782, 1)
)
bridgeDestinationEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "bridgeDestinationIndex"),
)
if mibBuilder.loadTexts:
    bridgeDestinationEntry.setStatus("current")


class _BridgeDestinationIndex_Type(DisplayString):
    """Custom type bridgeDestinationIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_BridgeDestinationIndex_Type.__name__ = "DisplayString"
_BridgeDestinationIndex_Object = MibTableColumn
bridgeDestinationIndex = _BridgeDestinationIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 782, 1, 1),
    _BridgeDestinationIndex_Type()
)
bridgeDestinationIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDestinationIndex.setStatus("current")


class _BridgeDestinationObjectName_Type(DisplayString):
    """Custom type bridgeDestinationObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_BridgeDestinationObjectName_Type.__name__ = "DisplayString"
_BridgeDestinationObjectName_Object = MibTableColumn
bridgeDestinationObjectName = _BridgeDestinationObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 782, 1, 5),
    _BridgeDestinationObjectName_Type()
)
bridgeDestinationObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDestinationObjectName.setStatus("current")


class _BridgeDestinationType_Type(DisplayString):
    """Custom type bridgeDestinationType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_BridgeDestinationType_Type.__name__ = "DisplayString"
_BridgeDestinationType_Object = MibTableColumn
bridgeDestinationType = _BridgeDestinationType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 782, 1, 10),
    _BridgeDestinationType_Type()
)
bridgeDestinationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDestinationType.setStatus("current")


class _BridgeDestinationName_Type(DisplayString):
    """Custom type bridgeDestinationName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_BridgeDestinationName_Type.__name__ = "DisplayString"
_BridgeDestinationName_Object = MibTableColumn
bridgeDestinationName = _BridgeDestinationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 782, 1, 15),
    _BridgeDestinationName_Type()
)
bridgeDestinationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDestinationName.setStatus("current")


class _BridgeDestinationParent_Type(DisplayString):
    """Custom type bridgeDestinationParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_BridgeDestinationParent_Type.__name__ = "DisplayString"
_BridgeDestinationParent_Object = MibTableColumn
bridgeDestinationParent = _BridgeDestinationParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 782, 1, 20),
    _BridgeDestinationParent_Type()
)
bridgeDestinationParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDestinationParent.setStatus("current")


class _BridgeDestinationAdapterJNDIName_Type(DisplayString):
    """Custom type bridgeDestinationAdapterJNDIName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_BridgeDestinationAdapterJNDIName_Type.__name__ = "DisplayString"
_BridgeDestinationAdapterJNDIName_Object = MibTableColumn
bridgeDestinationAdapterJNDIName = _BridgeDestinationAdapterJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 782, 1, 30),
    _BridgeDestinationAdapterJNDIName_Type()
)
bridgeDestinationAdapterJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDestinationAdapterJNDIName.setStatus("current")
_MessagingBridgeTable_Object = MibTable
messagingBridgeTable = _MessagingBridgeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786)
)
if mibBuilder.loadTexts:
    messagingBridgeTable.setStatus("current")
_MessagingBridgeEntry_Object = MibTableRow
messagingBridgeEntry = _MessagingBridgeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1)
)
messagingBridgeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "messagingBridgeIndex"),
)
if mibBuilder.loadTexts:
    messagingBridgeEntry.setStatus("current")


class _MessagingBridgeIndex_Type(DisplayString):
    """Custom type messagingBridgeIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_MessagingBridgeIndex_Type.__name__ = "DisplayString"
_MessagingBridgeIndex_Object = MibTableColumn
messagingBridgeIndex = _MessagingBridgeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 1),
    _MessagingBridgeIndex_Type()
)
messagingBridgeIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeIndex.setStatus("current")


class _MessagingBridgeObjectName_Type(DisplayString):
    """Custom type messagingBridgeObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_MessagingBridgeObjectName_Type.__name__ = "DisplayString"
_MessagingBridgeObjectName_Object = MibTableColumn
messagingBridgeObjectName = _MessagingBridgeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 5),
    _MessagingBridgeObjectName_Type()
)
messagingBridgeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeObjectName.setStatus("current")


class _MessagingBridgeType_Type(DisplayString):
    """Custom type messagingBridgeType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_MessagingBridgeType_Type.__name__ = "DisplayString"
_MessagingBridgeType_Object = MibTableColumn
messagingBridgeType = _MessagingBridgeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 10),
    _MessagingBridgeType_Type()
)
messagingBridgeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeType.setStatus("current")


class _MessagingBridgeName_Type(DisplayString):
    """Custom type messagingBridgeName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_MessagingBridgeName_Type.__name__ = "DisplayString"
_MessagingBridgeName_Object = MibTableColumn
messagingBridgeName = _MessagingBridgeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 15),
    _MessagingBridgeName_Type()
)
messagingBridgeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeName.setStatus("current")


class _MessagingBridgeParent_Type(DisplayString):
    """Custom type messagingBridgeParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_MessagingBridgeParent_Type.__name__ = "DisplayString"
_MessagingBridgeParent_Object = MibTableColumn
messagingBridgeParent = _MessagingBridgeParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 20),
    _MessagingBridgeParent_Type()
)
messagingBridgeParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeParent.setStatus("current")


class _MessagingBridgeTargets_Type(DisplayString):
    """Custom type messagingBridgeTargets based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_MessagingBridgeTargets_Type.__name__ = "DisplayString"
_MessagingBridgeTargets_Object = MibTableColumn
messagingBridgeTargets = _MessagingBridgeTargets_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 25),
    _MessagingBridgeTargets_Type()
)
messagingBridgeTargets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeTargets.setStatus("current")


class _MessagingBridgeSourceDestination_Type(DisplayString):
    """Custom type messagingBridgeSourceDestination based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_MessagingBridgeSourceDestination_Type.__name__ = "DisplayString"
_MessagingBridgeSourceDestination_Object = MibTableColumn
messagingBridgeSourceDestination = _MessagingBridgeSourceDestination_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 30),
    _MessagingBridgeSourceDestination_Type()
)
messagingBridgeSourceDestination.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeSourceDestination.setStatus("current")


class _MessagingBridgeTargetDestination_Type(DisplayString):
    """Custom type messagingBridgeTargetDestination based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_MessagingBridgeTargetDestination_Type.__name__ = "DisplayString"
_MessagingBridgeTargetDestination_Object = MibTableColumn
messagingBridgeTargetDestination = _MessagingBridgeTargetDestination_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 35),
    _MessagingBridgeTargetDestination_Type()
)
messagingBridgeTargetDestination.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeTargetDestination.setStatus("current")


class _MessagingBridgeSelector_Type(DisplayString):
    """Custom type messagingBridgeSelector based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_MessagingBridgeSelector_Type.__name__ = "DisplayString"
_MessagingBridgeSelector_Object = MibTableColumn
messagingBridgeSelector = _MessagingBridgeSelector_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 50),
    _MessagingBridgeSelector_Type()
)
messagingBridgeSelector.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeSelector.setStatus("current")


class _MessagingBridgeForwardingPolicy_Type(DisplayString):
    """Custom type messagingBridgeForwardingPolicy based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_MessagingBridgeForwardingPolicy_Type.__name__ = "DisplayString"
_MessagingBridgeForwardingPolicy_Object = MibTableColumn
messagingBridgeForwardingPolicy = _MessagingBridgeForwardingPolicy_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 55),
    _MessagingBridgeForwardingPolicy_Type()
)
messagingBridgeForwardingPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeForwardingPolicy.setStatus("current")


class _MessagingBridgeScheduleTime_Type(DisplayString):
    """Custom type messagingBridgeScheduleTime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_MessagingBridgeScheduleTime_Type.__name__ = "DisplayString"
_MessagingBridgeScheduleTime_Object = MibTableColumn
messagingBridgeScheduleTime = _MessagingBridgeScheduleTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 60),
    _MessagingBridgeScheduleTime_Type()
)
messagingBridgeScheduleTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeScheduleTime.setStatus("current")


class _MessagingBridgeQualityOfService_Type(DisplayString):
    """Custom type messagingBridgeQualityOfService based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_MessagingBridgeQualityOfService_Type.__name__ = "DisplayString"
_MessagingBridgeQualityOfService_Object = MibTableColumn
messagingBridgeQualityOfService = _MessagingBridgeQualityOfService_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 70),
    _MessagingBridgeQualityOfService_Type()
)
messagingBridgeQualityOfService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeQualityOfService.setStatus("current")
_MessagingBridgeIdleTimeMaximum_Type = Integer32
_MessagingBridgeIdleTimeMaximum_Object = MibTableColumn
messagingBridgeIdleTimeMaximum = _MessagingBridgeIdleTimeMaximum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 85),
    _MessagingBridgeIdleTimeMaximum_Type()
)
messagingBridgeIdleTimeMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeIdleTimeMaximum.setStatus("current")
_MessagingBridgeTransactionTimeout_Type = Integer32
_MessagingBridgeTransactionTimeout_Object = MibTableColumn
messagingBridgeTransactionTimeout = _MessagingBridgeTransactionTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 90),
    _MessagingBridgeTransactionTimeout_Type()
)
messagingBridgeTransactionTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeTransactionTimeout.setStatus("current")


class _MessagingBridgeAsyncDisabled_Type(Integer32):
    """Custom type messagingBridgeAsyncDisabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_MessagingBridgeAsyncDisabled_Type.__name__ = "Integer32"
_MessagingBridgeAsyncDisabled_Object = MibTableColumn
messagingBridgeAsyncDisabled = _MessagingBridgeAsyncDisabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 95),
    _MessagingBridgeAsyncDisabled_Type()
)
messagingBridgeAsyncDisabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeAsyncDisabled.setStatus("current")


class _MessagingBridgeQOSDegradationAllowed_Type(Integer32):
    """Custom type messagingBridgeQOSDegradationAllowed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_MessagingBridgeQOSDegradationAllowed_Type.__name__ = "Integer32"
_MessagingBridgeQOSDegradationAllowed_Object = MibTableColumn
messagingBridgeQOSDegradationAllowed = _MessagingBridgeQOSDegradationAllowed_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 100),
    _MessagingBridgeQOSDegradationAllowed_Type()
)
messagingBridgeQOSDegradationAllowed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeQOSDegradationAllowed.setStatus("current")
_MessagingBridgeDurabilityEnabled_Type = OctetString
_MessagingBridgeDurabilityEnabled_Object = MibTableColumn
messagingBridgeDurabilityEnabled = _MessagingBridgeDurabilityEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 101),
    _MessagingBridgeDurabilityEnabled_Type()
)
messagingBridgeDurabilityEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeDurabilityEnabled.setStatus("current")
_MessagingBridgeReconnectDelayMinimum_Type = Integer32
_MessagingBridgeReconnectDelayMinimum_Object = MibTableColumn
messagingBridgeReconnectDelayMinimum = _MessagingBridgeReconnectDelayMinimum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 102),
    _MessagingBridgeReconnectDelayMinimum_Type()
)
messagingBridgeReconnectDelayMinimum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeReconnectDelayMinimum.setStatus("current")
_MessagingBridgePreserveMsgProperty_Type = OctetString
_MessagingBridgePreserveMsgProperty_Object = MibTableColumn
messagingBridgePreserveMsgProperty = _MessagingBridgePreserveMsgProperty_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 103),
    _MessagingBridgePreserveMsgProperty_Type()
)
messagingBridgePreserveMsgProperty.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgePreserveMsgProperty.setStatus("current")
_MessagingBridgeBatchSize_Type = Integer32
_MessagingBridgeBatchSize_Object = MibTableColumn
messagingBridgeBatchSize = _MessagingBridgeBatchSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 104),
    _MessagingBridgeBatchSize_Type()
)
messagingBridgeBatchSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeBatchSize.setStatus("current")
_MessagingBridgeReconnectDelayMaximum_Type = Integer32
_MessagingBridgeReconnectDelayMaximum_Object = MibTableColumn
messagingBridgeReconnectDelayMaximum = _MessagingBridgeReconnectDelayMaximum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 105),
    _MessagingBridgeReconnectDelayMaximum_Type()
)
messagingBridgeReconnectDelayMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeReconnectDelayMaximum.setStatus("current")
_MessagingBridgeDeploymentOrder_Type = Integer32
_MessagingBridgeDeploymentOrder_Object = MibTableColumn
messagingBridgeDeploymentOrder = _MessagingBridgeDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 106),
    _MessagingBridgeDeploymentOrder_Type()
)
messagingBridgeDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeDeploymentOrder.setStatus("current")
_MessagingBridgeAsyncEnabled_Type = OctetString
_MessagingBridgeAsyncEnabled_Object = MibTableColumn
messagingBridgeAsyncEnabled = _MessagingBridgeAsyncEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 107),
    _MessagingBridgeAsyncEnabled_Type()
)
messagingBridgeAsyncEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeAsyncEnabled.setStatus("current")
_MessagingBridgeBatchInterval_Type = Counter64
_MessagingBridgeBatchInterval_Object = MibTableColumn
messagingBridgeBatchInterval = _MessagingBridgeBatchInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 108),
    _MessagingBridgeBatchInterval_Type()
)
messagingBridgeBatchInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeBatchInterval.setStatus("current")
_MessagingBridgeStarted_Type = OctetString
_MessagingBridgeStarted_Object = MibTableColumn
messagingBridgeStarted = _MessagingBridgeStarted_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 109),
    _MessagingBridgeStarted_Type()
)
messagingBridgeStarted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeStarted.setStatus("current")
_MessagingBridgeReconnectDelayIncrease_Type = Integer32
_MessagingBridgeReconnectDelayIncrease_Object = MibTableColumn
messagingBridgeReconnectDelayIncrease = _MessagingBridgeReconnectDelayIncrease_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 786, 1, 110),
    _MessagingBridgeReconnectDelayIncrease_Type()
)
messagingBridgeReconnectDelayIncrease.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messagingBridgeReconnectDelayIncrease.setStatus("current")
_VirtualHostTable_Object = MibTable
virtualHostTable = _VirtualHostTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790)
)
if mibBuilder.loadTexts:
    virtualHostTable.setStatus("current")
_VirtualHostEntry_Object = MibTableRow
virtualHostEntry = _VirtualHostEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1)
)
virtualHostEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "virtualHostIndex"),
)
if mibBuilder.loadTexts:
    virtualHostEntry.setStatus("current")


class _VirtualHostIndex_Type(DisplayString):
    """Custom type virtualHostIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_VirtualHostIndex_Type.__name__ = "DisplayString"
_VirtualHostIndex_Object = MibTableColumn
virtualHostIndex = _VirtualHostIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 1),
    _VirtualHostIndex_Type()
)
virtualHostIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostIndex.setStatus("current")


class _VirtualHostObjectName_Type(DisplayString):
    """Custom type virtualHostObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_VirtualHostObjectName_Type.__name__ = "DisplayString"
_VirtualHostObjectName_Object = MibTableColumn
virtualHostObjectName = _VirtualHostObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 5),
    _VirtualHostObjectName_Type()
)
virtualHostObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostObjectName.setStatus("current")


class _VirtualHostType_Type(DisplayString):
    """Custom type virtualHostType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_VirtualHostType_Type.__name__ = "DisplayString"
_VirtualHostType_Object = MibTableColumn
virtualHostType = _VirtualHostType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 10),
    _VirtualHostType_Type()
)
virtualHostType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostType.setStatus("current")


class _VirtualHostName_Type(DisplayString):
    """Custom type virtualHostName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_VirtualHostName_Type.__name__ = "DisplayString"
_VirtualHostName_Object = MibTableColumn
virtualHostName = _VirtualHostName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 15),
    _VirtualHostName_Type()
)
virtualHostName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostName.setStatus("current")


class _VirtualHostParent_Type(DisplayString):
    """Custom type virtualHostParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_VirtualHostParent_Type.__name__ = "DisplayString"
_VirtualHostParent_Object = MibTableColumn
virtualHostParent = _VirtualHostParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 20),
    _VirtualHostParent_Type()
)
virtualHostParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostParent.setStatus("current")


class _VirtualHostTargets_Type(DisplayString):
    """Custom type virtualHostTargets based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_VirtualHostTargets_Type.__name__ = "DisplayString"
_VirtualHostTargets_Object = MibTableColumn
virtualHostTargets = _VirtualHostTargets_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 25),
    _VirtualHostTargets_Type()
)
virtualHostTargets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostTargets.setStatus("current")


class _VirtualHostLoggingEnabled_Type(Integer32):
    """Custom type virtualHostLoggingEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_VirtualHostLoggingEnabled_Type.__name__ = "Integer32"
_VirtualHostLoggingEnabled_Object = MibTableColumn
virtualHostLoggingEnabled = _VirtualHostLoggingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 30),
    _VirtualHostLoggingEnabled_Type()
)
virtualHostLoggingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostLoggingEnabled.setStatus("current")


class _VirtualHostLogFileFormat_Type(DisplayString):
    """Custom type virtualHostLogFileFormat based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_VirtualHostLogFileFormat_Type.__name__ = "DisplayString"
_VirtualHostLogFileFormat_Object = MibTableColumn
virtualHostLogFileFormat = _VirtualHostLogFileFormat_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 35),
    _VirtualHostLogFileFormat_Type()
)
virtualHostLogFileFormat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostLogFileFormat.setStatus("current")


class _VirtualHostLogFileName_Type(DisplayString):
    """Custom type virtualHostLogFileName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_VirtualHostLogFileName_Type.__name__ = "DisplayString"
_VirtualHostLogFileName_Object = MibTableColumn
virtualHostLogFileName = _VirtualHostLogFileName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 40),
    _VirtualHostLogFileName_Type()
)
virtualHostLogFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostLogFileName.setStatus("current")
_VirtualHostLogFileBufferKBytes_Type = Integer32
_VirtualHostLogFileBufferKBytes_Object = MibTableColumn
virtualHostLogFileBufferKBytes = _VirtualHostLogFileBufferKBytes_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 45),
    _VirtualHostLogFileBufferKBytes_Type()
)
virtualHostLogFileBufferKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostLogFileBufferKBytes.setStatus("current")
_VirtualHostMaxLogFileSizeKBytes_Type = Integer32
_VirtualHostMaxLogFileSizeKBytes_Object = MibTableColumn
virtualHostMaxLogFileSizeKBytes = _VirtualHostMaxLogFileSizeKBytes_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 50),
    _VirtualHostMaxLogFileSizeKBytes_Type()
)
virtualHostMaxLogFileSizeKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostMaxLogFileSizeKBytes.setStatus("current")


class _VirtualHostLogRotationType_Type(DisplayString):
    """Custom type virtualHostLogRotationType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_VirtualHostLogRotationType_Type.__name__ = "DisplayString"
_VirtualHostLogRotationType_Object = MibTableColumn
virtualHostLogRotationType = _VirtualHostLogRotationType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 55),
    _VirtualHostLogRotationType_Type()
)
virtualHostLogRotationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostLogRotationType.setStatus("current")
_VirtualHostLogRotationPeriodMins_Type = Integer32
_VirtualHostLogRotationPeriodMins_Object = MibTableColumn
virtualHostLogRotationPeriodMins = _VirtualHostLogRotationPeriodMins_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 60),
    _VirtualHostLogRotationPeriodMins_Type()
)
virtualHostLogRotationPeriodMins.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostLogRotationPeriodMins.setStatus("current")
_VirtualHostLogFileFlushSecs_Type = Integer32
_VirtualHostLogFileFlushSecs_Object = MibTableColumn
virtualHostLogFileFlushSecs = _VirtualHostLogFileFlushSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 65),
    _VirtualHostLogFileFlushSecs_Type()
)
virtualHostLogFileFlushSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostLogFileFlushSecs.setStatus("current")


class _VirtualHostLogRotationTimeBegin_Type(DisplayString):
    """Custom type virtualHostLogRotationTimeBegin based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_VirtualHostLogRotationTimeBegin_Type.__name__ = "DisplayString"
_VirtualHostLogRotationTimeBegin_Object = MibTableColumn
virtualHostLogRotationTimeBegin = _VirtualHostLogRotationTimeBegin_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 70),
    _VirtualHostLogRotationTimeBegin_Type()
)
virtualHostLogRotationTimeBegin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostLogRotationTimeBegin.setStatus("current")


class _VirtualHostKeepAliveEnabled_Type(Integer32):
    """Custom type virtualHostKeepAliveEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_VirtualHostKeepAliveEnabled_Type.__name__ = "Integer32"
_VirtualHostKeepAliveEnabled_Object = MibTableColumn
virtualHostKeepAliveEnabled = _VirtualHostKeepAliveEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 75),
    _VirtualHostKeepAliveEnabled_Type()
)
virtualHostKeepAliveEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostKeepAliveEnabled.setStatus("current")
_VirtualHostKeepAliveSecs_Type = Integer32
_VirtualHostKeepAliveSecs_Object = MibTableColumn
virtualHostKeepAliveSecs = _VirtualHostKeepAliveSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 80),
    _VirtualHostKeepAliveSecs_Type()
)
virtualHostKeepAliveSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostKeepAliveSecs.setStatus("current")
_VirtualHostHttpsKeepAliveSecs_Type = Integer32
_VirtualHostHttpsKeepAliveSecs_Object = MibTableColumn
virtualHostHttpsKeepAliveSecs = _VirtualHostHttpsKeepAliveSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 85),
    _VirtualHostHttpsKeepAliveSecs_Type()
)
virtualHostHttpsKeepAliveSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostHttpsKeepAliveSecs.setStatus("current")
_VirtualHostPostTimeoutSecs_Type = Integer32
_VirtualHostPostTimeoutSecs_Object = MibTableColumn
virtualHostPostTimeoutSecs = _VirtualHostPostTimeoutSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 90),
    _VirtualHostPostTimeoutSecs_Type()
)
virtualHostPostTimeoutSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostPostTimeoutSecs.setStatus("current")
_VirtualHostMaxPostTimeSecs_Type = Integer32
_VirtualHostMaxPostTimeSecs_Object = MibTableColumn
virtualHostMaxPostTimeSecs = _VirtualHostMaxPostTimeSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 95),
    _VirtualHostMaxPostTimeSecs_Type()
)
virtualHostMaxPostTimeSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostMaxPostTimeSecs.setStatus("current")
_VirtualHostMaxPostSize_Type = Integer32
_VirtualHostMaxPostSize_Object = MibTableColumn
virtualHostMaxPostSize = _VirtualHostMaxPostSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 100),
    _VirtualHostMaxPostSize_Type()
)
virtualHostMaxPostSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostMaxPostSize.setStatus("current")


class _VirtualHostDefaultWebApp_Type(DisplayString):
    """Custom type virtualHostDefaultWebApp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_VirtualHostDefaultWebApp_Type.__name__ = "DisplayString"
_VirtualHostDefaultWebApp_Object = MibTableColumn
virtualHostDefaultWebApp = _VirtualHostDefaultWebApp_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 105),
    _VirtualHostDefaultWebApp_Type()
)
virtualHostDefaultWebApp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostDefaultWebApp.setStatus("current")


class _VirtualHostCharsets_Type(DisplayString):
    """Custom type virtualHostCharsets based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_VirtualHostCharsets_Type.__name__ = "DisplayString"
_VirtualHostCharsets_Object = MibTableColumn
virtualHostCharsets = _VirtualHostCharsets_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 110),
    _VirtualHostCharsets_Type()
)
virtualHostCharsets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostCharsets.setStatus("current")


class _VirtualHostWAPEnabled_Type(Integer32):
    """Custom type virtualHostWAPEnabled based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 2),
          ("true", 1))
    )


_VirtualHostWAPEnabled_Type.__name__ = "Integer32"
_VirtualHostWAPEnabled_Object = MibTableColumn
virtualHostWAPEnabled = _VirtualHostWAPEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 115),
    _VirtualHostWAPEnabled_Type()
)
virtualHostWAPEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostWAPEnabled.setStatus("current")


class _VirtualHostURLResource_Type(DisplayString):
    """Custom type virtualHostURLResource based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_VirtualHostURLResource_Type.__name__ = "DisplayString"
_VirtualHostURLResource_Object = MibTableColumn
virtualHostURLResource = _VirtualHostURLResource_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 125),
    _VirtualHostURLResource_Type()
)
virtualHostURLResource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostURLResource.setStatus("current")


class _VirtualHostVirtualHostNames_Type(DisplayString):
    """Custom type virtualHostVirtualHostNames based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_VirtualHostVirtualHostNames_Type.__name__ = "DisplayString"
_VirtualHostVirtualHostNames_Object = MibTableColumn
virtualHostVirtualHostNames = _VirtualHostVirtualHostNames_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 130),
    _VirtualHostVirtualHostNames_Type()
)
virtualHostVirtualHostNames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostVirtualHostNames.setStatus("current")
_VirtualHostFrontendHTTPPort_Type = Integer32
_VirtualHostFrontendHTTPPort_Object = MibTableColumn
virtualHostFrontendHTTPPort = _VirtualHostFrontendHTTPPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 131),
    _VirtualHostFrontendHTTPPort_Type()
)
virtualHostFrontendHTTPPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostFrontendHTTPPort.setStatus("current")
_VirtualHostAuthCookieEnabled_Type = OctetString
_VirtualHostAuthCookieEnabled_Object = MibTableColumn
virtualHostAuthCookieEnabled = _VirtualHostAuthCookieEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 132),
    _VirtualHostAuthCookieEnabled_Type()
)
virtualHostAuthCookieEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostAuthCookieEnabled.setStatus("current")
_VirtualHostSingleSignonDisabled_Type = OctetString
_VirtualHostSingleSignonDisabled_Object = MibTableColumn
virtualHostSingleSignonDisabled = _VirtualHostSingleSignonDisabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 133),
    _VirtualHostSingleSignonDisabled_Type()
)
virtualHostSingleSignonDisabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostSingleSignonDisabled.setStatus("current")
_VirtualHostChunkedTransferDisabled_Type = OctetString
_VirtualHostChunkedTransferDisabled_Object = MibTableColumn
virtualHostChunkedTransferDisabled = _VirtualHostChunkedTransferDisabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 134),
    _VirtualHostChunkedTransferDisabled_Type()
)
virtualHostChunkedTransferDisabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostChunkedTransferDisabled.setStatus("current")
_VirtualHostAcceptContextPathInGetRealPath_Type = OctetString
_VirtualHostAcceptContextPathInGetRealPath_Object = MibTableColumn
virtualHostAcceptContextPathInGetRealPath = _VirtualHostAcceptContextPathInGetRealPath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 135),
    _VirtualHostAcceptContextPathInGetRealPath_Type()
)
virtualHostAcceptContextPathInGetRealPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostAcceptContextPathInGetRealPath.setStatus("current")
_VirtualHostOverloadResponseCode_Type = Integer32
_VirtualHostOverloadResponseCode_Object = MibTableColumn
virtualHostOverloadResponseCode = _VirtualHostOverloadResponseCode_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 136),
    _VirtualHostOverloadResponseCode_Type()
)
virtualHostOverloadResponseCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostOverloadResponseCode.setStatus("current")
_VirtualHostDeploymentOrder_Type = Integer32
_VirtualHostDeploymentOrder_Object = MibTableColumn
virtualHostDeploymentOrder = _VirtualHostDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 137),
    _VirtualHostDeploymentOrder_Type()
)
virtualHostDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostDeploymentOrder.setStatus("current")
_VirtualHostNetworkAccessPoint_Type = OctetString
_VirtualHostNetworkAccessPoint_Object = MibTableColumn
virtualHostNetworkAccessPoint = _VirtualHostNetworkAccessPoint_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 138),
    _VirtualHostNetworkAccessPoint_Type()
)
virtualHostNetworkAccessPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostNetworkAccessPoint.setStatus("current")
_VirtualHostSendServerHeaderEnabled_Type = OctetString
_VirtualHostSendServerHeaderEnabled_Object = MibTableColumn
virtualHostSendServerHeaderEnabled = _VirtualHostSendServerHeaderEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 139),
    _VirtualHostSendServerHeaderEnabled_Type()
)
virtualHostSendServerHeaderEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostSendServerHeaderEnabled.setStatus("current")
_VirtualHostFrontendHost_Type = OctetString
_VirtualHostFrontendHost_Object = MibTableColumn
virtualHostFrontendHost = _VirtualHostFrontendHost_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 140),
    _VirtualHostFrontendHost_Type()
)
virtualHostFrontendHost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostFrontendHost.setStatus("current")
_VirtualHostWriteChunkBytes_Type = Integer32
_VirtualHostWriteChunkBytes_Object = MibTableColumn
virtualHostWriteChunkBytes = _VirtualHostWriteChunkBytes_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 141),
    _VirtualHostWriteChunkBytes_Type()
)
virtualHostWriteChunkBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostWriteChunkBytes.setStatus("current")
_VirtualHostFrontendHTTPSPort_Type = Integer32
_VirtualHostFrontendHTTPSPort_Object = MibTableColumn
virtualHostFrontendHTTPSPort = _VirtualHostFrontendHTTPSPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 142),
    _VirtualHostFrontendHTTPSPort_Type()
)
virtualHostFrontendHTTPSPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostFrontendHTTPSPort.setStatus("current")
_VirtualHostUseHeaderEncoding_Type = OctetString
_VirtualHostUseHeaderEncoding_Object = MibTableColumn
virtualHostUseHeaderEncoding = _VirtualHostUseHeaderEncoding_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 143),
    _VirtualHostUseHeaderEncoding_Type()
)
virtualHostUseHeaderEncoding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostUseHeaderEncoding.setStatus("current")
_VirtualHostUseHighestCompatibleHTTPVersion_Type = OctetString
_VirtualHostUseHighestCompatibleHTTPVersion_Object = MibTableColumn
virtualHostUseHighestCompatibleHTTPVersion = _VirtualHostUseHighestCompatibleHTTPVersion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 144),
    _VirtualHostUseHighestCompatibleHTTPVersion_Type()
)
virtualHostUseHighestCompatibleHTTPVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostUseHighestCompatibleHTTPVersion.setStatus("current")
_VirtualHostDefaultWebAppContextRoot_Type = OctetString
_VirtualHostDefaultWebAppContextRoot_Object = MibTableColumn
virtualHostDefaultWebAppContextRoot = _VirtualHostDefaultWebAppContextRoot_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 790, 1, 145),
    _VirtualHostDefaultWebAppContextRoot_Type()
)
virtualHostDefaultWebAppContextRoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualHostDefaultWebAppContextRoot.setStatus("current")
_XmlEntityCacheTable_Object = MibTable
xmlEntityCacheTable = _XmlEntityCacheTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 794)
)
if mibBuilder.loadTexts:
    xmlEntityCacheTable.setStatus("current")
_XmlEntityCacheEntry_Object = MibTableRow
xmlEntityCacheEntry = _XmlEntityCacheEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 794, 1)
)
xmlEntityCacheEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "xmlEntityCacheIndex"),
)
if mibBuilder.loadTexts:
    xmlEntityCacheEntry.setStatus("current")


class _XmlEntityCacheIndex_Type(DisplayString):
    """Custom type xmlEntityCacheIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_XmlEntityCacheIndex_Type.__name__ = "DisplayString"
_XmlEntityCacheIndex_Object = MibTableColumn
xmlEntityCacheIndex = _XmlEntityCacheIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 794, 1, 1),
    _XmlEntityCacheIndex_Type()
)
xmlEntityCacheIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlEntityCacheIndex.setStatus("current")


class _XmlEntityCacheObjectName_Type(DisplayString):
    """Custom type xmlEntityCacheObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlEntityCacheObjectName_Type.__name__ = "DisplayString"
_XmlEntityCacheObjectName_Object = MibTableColumn
xmlEntityCacheObjectName = _XmlEntityCacheObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 794, 1, 5),
    _XmlEntityCacheObjectName_Type()
)
xmlEntityCacheObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlEntityCacheObjectName.setStatus("current")


class _XmlEntityCacheType_Type(DisplayString):
    """Custom type xmlEntityCacheType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_XmlEntityCacheType_Type.__name__ = "DisplayString"
_XmlEntityCacheType_Object = MibTableColumn
xmlEntityCacheType = _XmlEntityCacheType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 794, 1, 10),
    _XmlEntityCacheType_Type()
)
xmlEntityCacheType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlEntityCacheType.setStatus("current")


class _XmlEntityCacheName_Type(DisplayString):
    """Custom type xmlEntityCacheName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_XmlEntityCacheName_Type.__name__ = "DisplayString"
_XmlEntityCacheName_Object = MibTableColumn
xmlEntityCacheName = _XmlEntityCacheName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 794, 1, 15),
    _XmlEntityCacheName_Type()
)
xmlEntityCacheName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlEntityCacheName.setStatus("current")


class _XmlEntityCacheParent_Type(DisplayString):
    """Custom type xmlEntityCacheParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlEntityCacheParent_Type.__name__ = "DisplayString"
_XmlEntityCacheParent_Object = MibTableColumn
xmlEntityCacheParent = _XmlEntityCacheParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 794, 1, 20),
    _XmlEntityCacheParent_Type()
)
xmlEntityCacheParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlEntityCacheParent.setStatus("current")
_XmlEntityCacheCacheMemorySize_Type = Integer32
_XmlEntityCacheCacheMemorySize_Object = MibTableColumn
xmlEntityCacheCacheMemorySize = _XmlEntityCacheCacheMemorySize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 794, 1, 25),
    _XmlEntityCacheCacheMemorySize_Type()
)
xmlEntityCacheCacheMemorySize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlEntityCacheCacheMemorySize.setStatus("current")
_XmlEntityCacheCacheDiskSize_Type = Integer32
_XmlEntityCacheCacheDiskSize_Object = MibTableColumn
xmlEntityCacheCacheDiskSize = _XmlEntityCacheCacheDiskSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 794, 1, 30),
    _XmlEntityCacheCacheDiskSize_Type()
)
xmlEntityCacheCacheDiskSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlEntityCacheCacheDiskSize.setStatus("current")
_XmlEntityCacheCacheTimeoutInterval_Type = Integer32
_XmlEntityCacheCacheTimeoutInterval_Object = MibTableColumn
xmlEntityCacheCacheTimeoutInterval = _XmlEntityCacheCacheTimeoutInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 794, 1, 35),
    _XmlEntityCacheCacheTimeoutInterval_Type()
)
xmlEntityCacheCacheTimeoutInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlEntityCacheCacheTimeoutInterval.setStatus("current")
_XmlEntityCacheCacheLocation_Type = OctetString
_XmlEntityCacheCacheLocation_Object = MibTableColumn
xmlEntityCacheCacheLocation = _XmlEntityCacheCacheLocation_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 794, 1, 36),
    _XmlEntityCacheCacheLocation_Type()
)
xmlEntityCacheCacheLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlEntityCacheCacheLocation.setStatus("current")
_XmlEntityCacheMaxSize_Type = Integer32
_XmlEntityCacheMaxSize_Object = MibTableColumn
xmlEntityCacheMaxSize = _XmlEntityCacheMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 794, 1, 37),
    _XmlEntityCacheMaxSize_Type()
)
xmlEntityCacheMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlEntityCacheMaxSize.setStatus("current")
_XmlEntitySpecRegistryTable_Object = MibTable
xmlEntitySpecRegistryTable = _XmlEntitySpecRegistryTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 796)
)
if mibBuilder.loadTexts:
    xmlEntitySpecRegistryTable.setStatus("current")
_XmlEntitySpecRegistryEntry_Object = MibTableRow
xmlEntitySpecRegistryEntry = _XmlEntitySpecRegistryEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 796, 1)
)
xmlEntitySpecRegistryEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "xmlEntitySpecRegistryIndex"),
)
if mibBuilder.loadTexts:
    xmlEntitySpecRegistryEntry.setStatus("current")


class _XmlEntitySpecRegistryIndex_Type(DisplayString):
    """Custom type xmlEntitySpecRegistryIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_XmlEntitySpecRegistryIndex_Type.__name__ = "DisplayString"
_XmlEntitySpecRegistryIndex_Object = MibTableColumn
xmlEntitySpecRegistryIndex = _XmlEntitySpecRegistryIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 796, 1, 1),
    _XmlEntitySpecRegistryIndex_Type()
)
xmlEntitySpecRegistryIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlEntitySpecRegistryIndex.setStatus("current")


class _XmlEntitySpecRegistryObjectName_Type(DisplayString):
    """Custom type xmlEntitySpecRegistryObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlEntitySpecRegistryObjectName_Type.__name__ = "DisplayString"
_XmlEntitySpecRegistryObjectName_Object = MibTableColumn
xmlEntitySpecRegistryObjectName = _XmlEntitySpecRegistryObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 796, 1, 5),
    _XmlEntitySpecRegistryObjectName_Type()
)
xmlEntitySpecRegistryObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlEntitySpecRegistryObjectName.setStatus("current")


class _XmlEntitySpecRegistryType_Type(DisplayString):
    """Custom type xmlEntitySpecRegistryType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_XmlEntitySpecRegistryType_Type.__name__ = "DisplayString"
_XmlEntitySpecRegistryType_Object = MibTableColumn
xmlEntitySpecRegistryType = _XmlEntitySpecRegistryType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 796, 1, 10),
    _XmlEntitySpecRegistryType_Type()
)
xmlEntitySpecRegistryType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlEntitySpecRegistryType.setStatus("current")


class _XmlEntitySpecRegistryName_Type(DisplayString):
    """Custom type xmlEntitySpecRegistryName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_XmlEntitySpecRegistryName_Type.__name__ = "DisplayString"
_XmlEntitySpecRegistryName_Object = MibTableColumn
xmlEntitySpecRegistryName = _XmlEntitySpecRegistryName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 796, 1, 15),
    _XmlEntitySpecRegistryName_Type()
)
xmlEntitySpecRegistryName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlEntitySpecRegistryName.setStatus("current")


class _XmlEntitySpecRegistryParent_Type(DisplayString):
    """Custom type xmlEntitySpecRegistryParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlEntitySpecRegistryParent_Type.__name__ = "DisplayString"
_XmlEntitySpecRegistryParent_Object = MibTableColumn
xmlEntitySpecRegistryParent = _XmlEntitySpecRegistryParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 796, 1, 20),
    _XmlEntitySpecRegistryParent_Type()
)
xmlEntitySpecRegistryParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlEntitySpecRegistryParent.setStatus("current")


class _XmlEntitySpecRegistryPublicId_Type(DisplayString):
    """Custom type xmlEntitySpecRegistryPublicId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlEntitySpecRegistryPublicId_Type.__name__ = "DisplayString"
_XmlEntitySpecRegistryPublicId_Object = MibTableColumn
xmlEntitySpecRegistryPublicId = _XmlEntitySpecRegistryPublicId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 796, 1, 25),
    _XmlEntitySpecRegistryPublicId_Type()
)
xmlEntitySpecRegistryPublicId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlEntitySpecRegistryPublicId.setStatus("current")


class _XmlEntitySpecRegistrySystemId_Type(DisplayString):
    """Custom type xmlEntitySpecRegistrySystemId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlEntitySpecRegistrySystemId_Type.__name__ = "DisplayString"
_XmlEntitySpecRegistrySystemId_Object = MibTableColumn
xmlEntitySpecRegistrySystemId = _XmlEntitySpecRegistrySystemId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 796, 1, 30),
    _XmlEntitySpecRegistrySystemId_Type()
)
xmlEntitySpecRegistrySystemId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlEntitySpecRegistrySystemId.setStatus("current")


class _XmlEntitySpecRegistryEntityURI_Type(DisplayString):
    """Custom type xmlEntitySpecRegistryEntityURI based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlEntitySpecRegistryEntityURI_Type.__name__ = "DisplayString"
_XmlEntitySpecRegistryEntityURI_Object = MibTableColumn
xmlEntitySpecRegistryEntityURI = _XmlEntitySpecRegistryEntityURI_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 796, 1, 35),
    _XmlEntitySpecRegistryEntityURI_Type()
)
xmlEntitySpecRegistryEntityURI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlEntitySpecRegistryEntityURI.setStatus("current")


class _XmlEntitySpecRegistryWhenToCache_Type(DisplayString):
    """Custom type xmlEntitySpecRegistryWhenToCache based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlEntitySpecRegistryWhenToCache_Type.__name__ = "DisplayString"
_XmlEntitySpecRegistryWhenToCache_Object = MibTableColumn
xmlEntitySpecRegistryWhenToCache = _XmlEntitySpecRegistryWhenToCache_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 796, 1, 40),
    _XmlEntitySpecRegistryWhenToCache_Type()
)
xmlEntitySpecRegistryWhenToCache.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlEntitySpecRegistryWhenToCache.setStatus("current")
_XmlEntitySpecRegistryCacheTimeoutInterval_Type = Integer32
_XmlEntitySpecRegistryCacheTimeoutInterval_Object = MibTableColumn
xmlEntitySpecRegistryCacheTimeoutInterval = _XmlEntitySpecRegistryCacheTimeoutInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 796, 1, 45),
    _XmlEntitySpecRegistryCacheTimeoutInterval_Type()
)
xmlEntitySpecRegistryCacheTimeoutInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlEntitySpecRegistryCacheTimeoutInterval.setStatus("current")
_XmlEntitySpecRegistryHandleEntityInvalidation_Type = OctetString
_XmlEntitySpecRegistryHandleEntityInvalidation_Object = MibTableColumn
xmlEntitySpecRegistryHandleEntityInvalidation = _XmlEntitySpecRegistryHandleEntityInvalidation_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 796, 1, 46),
    _XmlEntitySpecRegistryHandleEntityInvalidation_Type()
)
xmlEntitySpecRegistryHandleEntityInvalidation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlEntitySpecRegistryHandleEntityInvalidation.setStatus("current")
_XmlParserSelectRegistryTable_Object = MibTable
xmlParserSelectRegistryTable = _XmlParserSelectRegistryTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 798)
)
if mibBuilder.loadTexts:
    xmlParserSelectRegistryTable.setStatus("current")
_XmlParserSelectRegistryEntry_Object = MibTableRow
xmlParserSelectRegistryEntry = _XmlParserSelectRegistryEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 798, 1)
)
xmlParserSelectRegistryEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "xmlParserSelectRegistryIndex"),
)
if mibBuilder.loadTexts:
    xmlParserSelectRegistryEntry.setStatus("current")


class _XmlParserSelectRegistryIndex_Type(DisplayString):
    """Custom type xmlParserSelectRegistryIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_XmlParserSelectRegistryIndex_Type.__name__ = "DisplayString"
_XmlParserSelectRegistryIndex_Object = MibTableColumn
xmlParserSelectRegistryIndex = _XmlParserSelectRegistryIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 798, 1, 1),
    _XmlParserSelectRegistryIndex_Type()
)
xmlParserSelectRegistryIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlParserSelectRegistryIndex.setStatus("current")


class _XmlParserSelectRegistryObjectName_Type(DisplayString):
    """Custom type xmlParserSelectRegistryObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlParserSelectRegistryObjectName_Type.__name__ = "DisplayString"
_XmlParserSelectRegistryObjectName_Object = MibTableColumn
xmlParserSelectRegistryObjectName = _XmlParserSelectRegistryObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 798, 1, 5),
    _XmlParserSelectRegistryObjectName_Type()
)
xmlParserSelectRegistryObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlParserSelectRegistryObjectName.setStatus("current")


class _XmlParserSelectRegistryType_Type(DisplayString):
    """Custom type xmlParserSelectRegistryType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_XmlParserSelectRegistryType_Type.__name__ = "DisplayString"
_XmlParserSelectRegistryType_Object = MibTableColumn
xmlParserSelectRegistryType = _XmlParserSelectRegistryType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 798, 1, 10),
    _XmlParserSelectRegistryType_Type()
)
xmlParserSelectRegistryType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlParserSelectRegistryType.setStatus("current")


class _XmlParserSelectRegistryName_Type(DisplayString):
    """Custom type xmlParserSelectRegistryName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_XmlParserSelectRegistryName_Type.__name__ = "DisplayString"
_XmlParserSelectRegistryName_Object = MibTableColumn
xmlParserSelectRegistryName = _XmlParserSelectRegistryName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 798, 1, 15),
    _XmlParserSelectRegistryName_Type()
)
xmlParserSelectRegistryName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlParserSelectRegistryName.setStatus("current")


class _XmlParserSelectRegistryParent_Type(DisplayString):
    """Custom type xmlParserSelectRegistryParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlParserSelectRegistryParent_Type.__name__ = "DisplayString"
_XmlParserSelectRegistryParent_Object = MibTableColumn
xmlParserSelectRegistryParent = _XmlParserSelectRegistryParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 798, 1, 20),
    _XmlParserSelectRegistryParent_Type()
)
xmlParserSelectRegistryParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlParserSelectRegistryParent.setStatus("current")


class _XmlParserSelectRegistryPublicId_Type(DisplayString):
    """Custom type xmlParserSelectRegistryPublicId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlParserSelectRegistryPublicId_Type.__name__ = "DisplayString"
_XmlParserSelectRegistryPublicId_Object = MibTableColumn
xmlParserSelectRegistryPublicId = _XmlParserSelectRegistryPublicId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 798, 1, 25),
    _XmlParserSelectRegistryPublicId_Type()
)
xmlParserSelectRegistryPublicId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlParserSelectRegistryPublicId.setStatus("current")


class _XmlParserSelectRegistrySystemId_Type(DisplayString):
    """Custom type xmlParserSelectRegistrySystemId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlParserSelectRegistrySystemId_Type.__name__ = "DisplayString"
_XmlParserSelectRegistrySystemId_Object = MibTableColumn
xmlParserSelectRegistrySystemId = _XmlParserSelectRegistrySystemId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 798, 1, 30),
    _XmlParserSelectRegistrySystemId_Type()
)
xmlParserSelectRegistrySystemId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlParserSelectRegistrySystemId.setStatus("current")


class _XmlParserSelectRegistryRootElementTag_Type(DisplayString):
    """Custom type xmlParserSelectRegistryRootElementTag based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlParserSelectRegistryRootElementTag_Type.__name__ = "DisplayString"
_XmlParserSelectRegistryRootElementTag_Object = MibTableColumn
xmlParserSelectRegistryRootElementTag = _XmlParserSelectRegistryRootElementTag_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 798, 1, 35),
    _XmlParserSelectRegistryRootElementTag_Type()
)
xmlParserSelectRegistryRootElementTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlParserSelectRegistryRootElementTag.setStatus("current")


class _XmlParserSelectRegistryDocumentBuilderFactory_Type(DisplayString):
    """Custom type xmlParserSelectRegistryDocumentBuilderFactory based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlParserSelectRegistryDocumentBuilderFactory_Type.__name__ = "DisplayString"
_XmlParserSelectRegistryDocumentBuilderFactory_Object = MibTableColumn
xmlParserSelectRegistryDocumentBuilderFactory = _XmlParserSelectRegistryDocumentBuilderFactory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 798, 1, 40),
    _XmlParserSelectRegistryDocumentBuilderFactory_Type()
)
xmlParserSelectRegistryDocumentBuilderFactory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlParserSelectRegistryDocumentBuilderFactory.setStatus("current")


class _XmlParserSelectRegistrySAXParserFactory_Type(DisplayString):
    """Custom type xmlParserSelectRegistrySAXParserFactory based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlParserSelectRegistrySAXParserFactory_Type.__name__ = "DisplayString"
_XmlParserSelectRegistrySAXParserFactory_Object = MibTableColumn
xmlParserSelectRegistrySAXParserFactory = _XmlParserSelectRegistrySAXParserFactory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 798, 1, 45),
    _XmlParserSelectRegistrySAXParserFactory_Type()
)
xmlParserSelectRegistrySAXParserFactory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlParserSelectRegistrySAXParserFactory.setStatus("current")


class _XmlParserSelectRegistryTransformerFactory_Type(DisplayString):
    """Custom type xmlParserSelectRegistryTransformerFactory based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlParserSelectRegistryTransformerFactory_Type.__name__ = "DisplayString"
_XmlParserSelectRegistryTransformerFactory_Object = MibTableColumn
xmlParserSelectRegistryTransformerFactory = _XmlParserSelectRegistryTransformerFactory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 798, 1, 50),
    _XmlParserSelectRegistryTransformerFactory_Type()
)
xmlParserSelectRegistryTransformerFactory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlParserSelectRegistryTransformerFactory.setStatus("current")
_XmlRegistryTable_Object = MibTable
xmlRegistryTable = _XmlRegistryTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 800)
)
if mibBuilder.loadTexts:
    xmlRegistryTable.setStatus("current")
_XmlRegistryEntry_Object = MibTableRow
xmlRegistryEntry = _XmlRegistryEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 800, 1)
)
xmlRegistryEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "xmlRegistryIndex"),
)
if mibBuilder.loadTexts:
    xmlRegistryEntry.setStatus("current")


class _XmlRegistryIndex_Type(DisplayString):
    """Custom type xmlRegistryIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_XmlRegistryIndex_Type.__name__ = "DisplayString"
_XmlRegistryIndex_Object = MibTableColumn
xmlRegistryIndex = _XmlRegistryIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 800, 1, 1),
    _XmlRegistryIndex_Type()
)
xmlRegistryIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlRegistryIndex.setStatus("current")


class _XmlRegistryObjectName_Type(DisplayString):
    """Custom type xmlRegistryObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlRegistryObjectName_Type.__name__ = "DisplayString"
_XmlRegistryObjectName_Object = MibTableColumn
xmlRegistryObjectName = _XmlRegistryObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 800, 1, 5),
    _XmlRegistryObjectName_Type()
)
xmlRegistryObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlRegistryObjectName.setStatus("current")


class _XmlRegistryType_Type(DisplayString):
    """Custom type xmlRegistryType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_XmlRegistryType_Type.__name__ = "DisplayString"
_XmlRegistryType_Object = MibTableColumn
xmlRegistryType = _XmlRegistryType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 800, 1, 10),
    _XmlRegistryType_Type()
)
xmlRegistryType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlRegistryType.setStatus("current")


class _XmlRegistryName_Type(DisplayString):
    """Custom type xmlRegistryName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_XmlRegistryName_Type.__name__ = "DisplayString"
_XmlRegistryName_Object = MibTableColumn
xmlRegistryName = _XmlRegistryName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 800, 1, 15),
    _XmlRegistryName_Type()
)
xmlRegistryName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlRegistryName.setStatus("current")


class _XmlRegistryParent_Type(DisplayString):
    """Custom type xmlRegistryParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlRegistryParent_Type.__name__ = "DisplayString"
_XmlRegistryParent_Object = MibTableColumn
xmlRegistryParent = _XmlRegistryParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 800, 1, 20),
    _XmlRegistryParent_Type()
)
xmlRegistryParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlRegistryParent.setStatus("current")


class _XmlRegistryRegistryEntries_Type(DisplayString):
    """Custom type xmlRegistryRegistryEntries based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_XmlRegistryRegistryEntries_Type.__name__ = "DisplayString"
_XmlRegistryRegistryEntries_Object = MibTableColumn
xmlRegistryRegistryEntries = _XmlRegistryRegistryEntries_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 800, 1, 25),
    _XmlRegistryRegistryEntries_Type()
)
xmlRegistryRegistryEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlRegistryRegistryEntries.setStatus("current")


class _XmlRegistryParserSelectRegistryEntries_Type(DisplayString):
    """Custom type xmlRegistryParserSelectRegistryEntries based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_XmlRegistryParserSelectRegistryEntries_Type.__name__ = "DisplayString"
_XmlRegistryParserSelectRegistryEntries_Object = MibTableColumn
xmlRegistryParserSelectRegistryEntries = _XmlRegistryParserSelectRegistryEntries_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 800, 1, 30),
    _XmlRegistryParserSelectRegistryEntries_Type()
)
xmlRegistryParserSelectRegistryEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlRegistryParserSelectRegistryEntries.setStatus("current")


class _XmlRegistryEntitySpecRegistryEntries_Type(DisplayString):
    """Custom type xmlRegistryEntitySpecRegistryEntries based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 2048),
    )


_XmlRegistryEntitySpecRegistryEntries_Type.__name__ = "DisplayString"
_XmlRegistryEntitySpecRegistryEntries_Object = MibTableColumn
xmlRegistryEntitySpecRegistryEntries = _XmlRegistryEntitySpecRegistryEntries_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 800, 1, 35),
    _XmlRegistryEntitySpecRegistryEntries_Type()
)
xmlRegistryEntitySpecRegistryEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlRegistryEntitySpecRegistryEntries.setStatus("current")


class _XmlRegistryDocumentBuilderFactory_Type(DisplayString):
    """Custom type xmlRegistryDocumentBuilderFactory based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlRegistryDocumentBuilderFactory_Type.__name__ = "DisplayString"
_XmlRegistryDocumentBuilderFactory_Object = MibTableColumn
xmlRegistryDocumentBuilderFactory = _XmlRegistryDocumentBuilderFactory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 800, 1, 40),
    _XmlRegistryDocumentBuilderFactory_Type()
)
xmlRegistryDocumentBuilderFactory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlRegistryDocumentBuilderFactory.setStatus("current")


class _XmlRegistrySAXParserFactory_Type(DisplayString):
    """Custom type xmlRegistrySAXParserFactory based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlRegistrySAXParserFactory_Type.__name__ = "DisplayString"
_XmlRegistrySAXParserFactory_Object = MibTableColumn
xmlRegistrySAXParserFactory = _XmlRegistrySAXParserFactory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 800, 1, 45),
    _XmlRegistrySAXParserFactory_Type()
)
xmlRegistrySAXParserFactory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlRegistrySAXParserFactory.setStatus("current")


class _XmlRegistryTransformerFactory_Type(DisplayString):
    """Custom type xmlRegistryTransformerFactory based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlRegistryTransformerFactory_Type.__name__ = "DisplayString"
_XmlRegistryTransformerFactory_Object = MibTableColumn
xmlRegistryTransformerFactory = _XmlRegistryTransformerFactory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 800, 1, 50),
    _XmlRegistryTransformerFactory_Type()
)
xmlRegistryTransformerFactory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlRegistryTransformerFactory.setStatus("current")


class _XmlRegistryWhenToCache_Type(DisplayString):
    """Custom type xmlRegistryWhenToCache based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_XmlRegistryWhenToCache_Type.__name__ = "DisplayString"
_XmlRegistryWhenToCache_Object = MibTableColumn
xmlRegistryWhenToCache = _XmlRegistryWhenToCache_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 800, 1, 55),
    _XmlRegistryWhenToCache_Type()
)
xmlRegistryWhenToCache.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlRegistryWhenToCache.setStatus("current")
_XmlRegistryHandleEntityInvalidation_Type = OctetString
_XmlRegistryHandleEntityInvalidation_Object = MibTableColumn
xmlRegistryHandleEntityInvalidation = _XmlRegistryHandleEntityInvalidation_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 800, 1, 56),
    _XmlRegistryHandleEntityInvalidation_Type()
)
xmlRegistryHandleEntityInvalidation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xmlRegistryHandleEntityInvalidation.setStatus("current")
_WtctBridgeGlobalTable_Object = MibTable
wtctBridgeGlobalTable = _WtctBridgeGlobalTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805)
)
if mibBuilder.loadTexts:
    wtctBridgeGlobalTable.setStatus("current")
_WtctBridgeGlobalEntry_Object = MibTableRow
wtctBridgeGlobalEntry = _WtctBridgeGlobalEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805, 1)
)
wtctBridgeGlobalEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wtctBridgeGlobalIndex"),
)
if mibBuilder.loadTexts:
    wtctBridgeGlobalEntry.setStatus("current")


class _WtctBridgeGlobalIndex_Type(DisplayString):
    """Custom type wtctBridgeGlobalIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WtctBridgeGlobalIndex_Type.__name__ = "DisplayString"
_WtctBridgeGlobalIndex_Object = MibTableColumn
wtctBridgeGlobalIndex = _WtctBridgeGlobalIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805, 1, 1),
    _WtctBridgeGlobalIndex_Type()
)
wtctBridgeGlobalIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeGlobalIndex.setStatus("current")


class _WtctBridgeGlobalObjectName_Type(DisplayString):
    """Custom type wtctBridgeGlobalObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeGlobalObjectName_Type.__name__ = "DisplayString"
_WtctBridgeGlobalObjectName_Object = MibTableColumn
wtctBridgeGlobalObjectName = _WtctBridgeGlobalObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805, 1, 5),
    _WtctBridgeGlobalObjectName_Type()
)
wtctBridgeGlobalObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeGlobalObjectName.setStatus("current")


class _WtctBridgeGlobalType_Type(DisplayString):
    """Custom type wtctBridgeGlobalType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WtctBridgeGlobalType_Type.__name__ = "DisplayString"
_WtctBridgeGlobalType_Object = MibTableColumn
wtctBridgeGlobalType = _WtctBridgeGlobalType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805, 1, 10),
    _WtctBridgeGlobalType_Type()
)
wtctBridgeGlobalType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeGlobalType.setStatus("current")


class _WtctBridgeGlobalName_Type(DisplayString):
    """Custom type wtctBridgeGlobalName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WtctBridgeGlobalName_Type.__name__ = "DisplayString"
_WtctBridgeGlobalName_Object = MibTableColumn
wtctBridgeGlobalName = _WtctBridgeGlobalName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805, 1, 15),
    _WtctBridgeGlobalName_Type()
)
wtctBridgeGlobalName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeGlobalName.setStatus("current")


class _WtctBridgeGlobalParent_Type(DisplayString):
    """Custom type wtctBridgeGlobalParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeGlobalParent_Type.__name__ = "DisplayString"
_WtctBridgeGlobalParent_Object = MibTableColumn
wtctBridgeGlobalParent = _WtctBridgeGlobalParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805, 1, 20),
    _WtctBridgeGlobalParent_Type()
)
wtctBridgeGlobalParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeGlobalParent.setStatus("current")


class _WtctBridgeGlobalAllowNonStandardTypes_Type(DisplayString):
    """Custom type wtctBridgeGlobalAllowNonStandardTypes based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeGlobalAllowNonStandardTypes_Type.__name__ = "DisplayString"
_WtctBridgeGlobalAllowNonStandardTypes_Object = MibTableColumn
wtctBridgeGlobalAllowNonStandardTypes = _WtctBridgeGlobalAllowNonStandardTypes_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805, 1, 25),
    _WtctBridgeGlobalAllowNonStandardTypes_Type()
)
wtctBridgeGlobalAllowNonStandardTypes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeGlobalAllowNonStandardTypes.setStatus("current")


class _WtctBridgeGlobalDefaultReplyDeliveryMode_Type(DisplayString):
    """Custom type wtctBridgeGlobalDefaultReplyDeliveryMode based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeGlobalDefaultReplyDeliveryMode_Type.__name__ = "DisplayString"
_WtctBridgeGlobalDefaultReplyDeliveryMode_Object = MibTableColumn
wtctBridgeGlobalDefaultReplyDeliveryMode = _WtctBridgeGlobalDefaultReplyDeliveryMode_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805, 1, 30),
    _WtctBridgeGlobalDefaultReplyDeliveryMode_Type()
)
wtctBridgeGlobalDefaultReplyDeliveryMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeGlobalDefaultReplyDeliveryMode.setStatus("current")


class _WtctBridgeGlobalDeliveryModeOverride_Type(DisplayString):
    """Custom type wtctBridgeGlobalDeliveryModeOverride based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeGlobalDeliveryModeOverride_Type.__name__ = "DisplayString"
_WtctBridgeGlobalDeliveryModeOverride_Object = MibTableColumn
wtctBridgeGlobalDeliveryModeOverride = _WtctBridgeGlobalDeliveryModeOverride_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805, 1, 35),
    _WtctBridgeGlobalDeliveryModeOverride_Type()
)
wtctBridgeGlobalDeliveryModeOverride.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeGlobalDeliveryModeOverride.setStatus("current")


class _WtctBridgeGlobalJmsFactory_Type(DisplayString):
    """Custom type wtctBridgeGlobalJmsFactory based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeGlobalJmsFactory_Type.__name__ = "DisplayString"
_WtctBridgeGlobalJmsFactory_Object = MibTableColumn
wtctBridgeGlobalJmsFactory = _WtctBridgeGlobalJmsFactory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805, 1, 40),
    _WtctBridgeGlobalJmsFactory_Type()
)
wtctBridgeGlobalJmsFactory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeGlobalJmsFactory.setStatus("current")


class _WtctBridgeGlobalJmsToTuxPriorityMap_Type(DisplayString):
    """Custom type wtctBridgeGlobalJmsToTuxPriorityMap based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeGlobalJmsToTuxPriorityMap_Type.__name__ = "DisplayString"
_WtctBridgeGlobalJmsToTuxPriorityMap_Object = MibTableColumn
wtctBridgeGlobalJmsToTuxPriorityMap = _WtctBridgeGlobalJmsToTuxPriorityMap_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805, 1, 45),
    _WtctBridgeGlobalJmsToTuxPriorityMap_Type()
)
wtctBridgeGlobalJmsToTuxPriorityMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeGlobalJmsToTuxPriorityMap.setStatus("current")


class _WtctBridgeGlobalJndiFactory_Type(DisplayString):
    """Custom type wtctBridgeGlobalJndiFactory based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeGlobalJndiFactory_Type.__name__ = "DisplayString"
_WtctBridgeGlobalJndiFactory_Object = MibTableColumn
wtctBridgeGlobalJndiFactory = _WtctBridgeGlobalJndiFactory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805, 1, 50),
    _WtctBridgeGlobalJndiFactory_Type()
)
wtctBridgeGlobalJndiFactory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeGlobalJndiFactory.setStatus("current")
_WtctBridgeGlobalRetries_Type = Integer32
_WtctBridgeGlobalRetries_Object = MibTableColumn
wtctBridgeGlobalRetries = _WtctBridgeGlobalRetries_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805, 1, 55),
    _WtctBridgeGlobalRetries_Type()
)
wtctBridgeGlobalRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeGlobalRetries.setStatus("current")
_WtctBridgeGlobalRetryDelay_Type = Integer32
_WtctBridgeGlobalRetryDelay_Object = MibTableColumn
wtctBridgeGlobalRetryDelay = _WtctBridgeGlobalRetryDelay_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805, 1, 60),
    _WtctBridgeGlobalRetryDelay_Type()
)
wtctBridgeGlobalRetryDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeGlobalRetryDelay.setStatus("current")
_WtctBridgeGlobalTimeout_Type = Integer32
_WtctBridgeGlobalTimeout_Object = MibTableColumn
wtctBridgeGlobalTimeout = _WtctBridgeGlobalTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805, 1, 65),
    _WtctBridgeGlobalTimeout_Type()
)
wtctBridgeGlobalTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeGlobalTimeout.setStatus("current")


class _WtctBridgeGlobalTransactional_Type(DisplayString):
    """Custom type wtctBridgeGlobalTransactional based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeGlobalTransactional_Type.__name__ = "DisplayString"
_WtctBridgeGlobalTransactional_Object = MibTableColumn
wtctBridgeGlobalTransactional = _WtctBridgeGlobalTransactional_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805, 1, 70),
    _WtctBridgeGlobalTransactional_Type()
)
wtctBridgeGlobalTransactional.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeGlobalTransactional.setStatus("current")


class _WtctBridgeGlobalTuxErrorQueue_Type(DisplayString):
    """Custom type wtctBridgeGlobalTuxErrorQueue based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeGlobalTuxErrorQueue_Type.__name__ = "DisplayString"
_WtctBridgeGlobalTuxErrorQueue_Object = MibTableColumn
wtctBridgeGlobalTuxErrorQueue = _WtctBridgeGlobalTuxErrorQueue_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805, 1, 75),
    _WtctBridgeGlobalTuxErrorQueue_Type()
)
wtctBridgeGlobalTuxErrorQueue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeGlobalTuxErrorQueue.setStatus("current")


class _WtctBridgeGlobalTuxFactory_Type(DisplayString):
    """Custom type wtctBridgeGlobalTuxFactory based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeGlobalTuxFactory_Type.__name__ = "DisplayString"
_WtctBridgeGlobalTuxFactory_Object = MibTableColumn
wtctBridgeGlobalTuxFactory = _WtctBridgeGlobalTuxFactory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805, 1, 80),
    _WtctBridgeGlobalTuxFactory_Type()
)
wtctBridgeGlobalTuxFactory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeGlobalTuxFactory.setStatus("current")


class _WtctBridgeGlobalTuxToJmsPriorityMap_Type(DisplayString):
    """Custom type wtctBridgeGlobalTuxToJmsPriorityMap based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeGlobalTuxToJmsPriorityMap_Type.__name__ = "DisplayString"
_WtctBridgeGlobalTuxToJmsPriorityMap_Object = MibTableColumn
wtctBridgeGlobalTuxToJmsPriorityMap = _WtctBridgeGlobalTuxToJmsPriorityMap_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805, 1, 85),
    _WtctBridgeGlobalTuxToJmsPriorityMap_Type()
)
wtctBridgeGlobalTuxToJmsPriorityMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeGlobalTuxToJmsPriorityMap.setStatus("current")


class _WtctBridgeGlobalUserId_Type(DisplayString):
    """Custom type wtctBridgeGlobalUserId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeGlobalUserId_Type.__name__ = "DisplayString"
_WtctBridgeGlobalUserId_Object = MibTableColumn
wtctBridgeGlobalUserId = _WtctBridgeGlobalUserId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805, 1, 90),
    _WtctBridgeGlobalUserId_Type()
)
wtctBridgeGlobalUserId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeGlobalUserId.setStatus("current")


class _WtctBridgeGlobalWlsErrorDestination_Type(DisplayString):
    """Custom type wtctBridgeGlobalWlsErrorDestination based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeGlobalWlsErrorDestination_Type.__name__ = "DisplayString"
_WtctBridgeGlobalWlsErrorDestination_Object = MibTableColumn
wtctBridgeGlobalWlsErrorDestination = _WtctBridgeGlobalWlsErrorDestination_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 805, 1, 95),
    _WtctBridgeGlobalWlsErrorDestination_Type()
)
wtctBridgeGlobalWlsErrorDestination.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeGlobalWlsErrorDestination.setStatus("current")
_WtcExportTable_Object = MibTable
wtcExportTable = _WtcExportTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 810)
)
if mibBuilder.loadTexts:
    wtcExportTable.setStatus("current")
_WtcExportEntry_Object = MibTableRow
wtcExportEntry = _WtcExportEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 810, 1)
)
wtcExportEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wtcExportIndex"),
)
if mibBuilder.loadTexts:
    wtcExportEntry.setStatus("current")


class _WtcExportIndex_Type(DisplayString):
    """Custom type wtcExportIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WtcExportIndex_Type.__name__ = "DisplayString"
_WtcExportIndex_Object = MibTableColumn
wtcExportIndex = _WtcExportIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 810, 1, 1),
    _WtcExportIndex_Type()
)
wtcExportIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcExportIndex.setStatus("current")


class _WtcExportObjectName_Type(DisplayString):
    """Custom type wtcExportObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcExportObjectName_Type.__name__ = "DisplayString"
_WtcExportObjectName_Object = MibTableColumn
wtcExportObjectName = _WtcExportObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 810, 1, 5),
    _WtcExportObjectName_Type()
)
wtcExportObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcExportObjectName.setStatus("current")


class _WtcExportType_Type(DisplayString):
    """Custom type wtcExportType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WtcExportType_Type.__name__ = "DisplayString"
_WtcExportType_Object = MibTableColumn
wtcExportType = _WtcExportType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 810, 1, 10),
    _WtcExportType_Type()
)
wtcExportType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcExportType.setStatus("current")


class _WtcExportName_Type(DisplayString):
    """Custom type wtcExportName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WtcExportName_Type.__name__ = "DisplayString"
_WtcExportName_Object = MibTableColumn
wtcExportName = _WtcExportName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 810, 1, 15),
    _WtcExportName_Type()
)
wtcExportName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcExportName.setStatus("current")


class _WtcExportParent_Type(DisplayString):
    """Custom type wtcExportParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcExportParent_Type.__name__ = "DisplayString"
_WtcExportParent_Object = MibTableColumn
wtcExportParent = _WtcExportParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 810, 1, 20),
    _WtcExportParent_Type()
)
wtcExportParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcExportParent.setStatus("current")


class _WtcExportEJBName_Type(DisplayString):
    """Custom type wtcExportEJBName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcExportEJBName_Type.__name__ = "DisplayString"
_WtcExportEJBName_Object = MibTableColumn
wtcExportEJBName = _WtcExportEJBName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 810, 1, 25),
    _WtcExportEJBName_Type()
)
wtcExportEJBName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcExportEJBName.setStatus("current")


class _WtcExportLocalAccessPoint_Type(DisplayString):
    """Custom type wtcExportLocalAccessPoint based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcExportLocalAccessPoint_Type.__name__ = "DisplayString"
_WtcExportLocalAccessPoint_Object = MibTableColumn
wtcExportLocalAccessPoint = _WtcExportLocalAccessPoint_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 810, 1, 30),
    _WtcExportLocalAccessPoint_Type()
)
wtcExportLocalAccessPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcExportLocalAccessPoint.setStatus("current")


class _WtcExportRemoteName_Type(DisplayString):
    """Custom type wtcExportRemoteName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcExportRemoteName_Type.__name__ = "DisplayString"
_WtcExportRemoteName_Object = MibTableColumn
wtcExportRemoteName = _WtcExportRemoteName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 810, 1, 35),
    _WtcExportRemoteName_Type()
)
wtcExportRemoteName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcExportRemoteName.setStatus("current")


class _WtcExportResourceName_Type(DisplayString):
    """Custom type wtcExportResourceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcExportResourceName_Type.__name__ = "DisplayString"
_WtcExportResourceName_Object = MibTableColumn
wtcExportResourceName = _WtcExportResourceName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 810, 1, 40),
    _WtcExportResourceName_Type()
)
wtcExportResourceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcExportResourceName.setStatus("current")
_WtcImportTable_Object = MibTable
wtcImportTable = _WtcImportTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 815)
)
if mibBuilder.loadTexts:
    wtcImportTable.setStatus("current")
_WtcImportEntry_Object = MibTableRow
wtcImportEntry = _WtcImportEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 815, 1)
)
wtcImportEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wtcImportIndex"),
)
if mibBuilder.loadTexts:
    wtcImportEntry.setStatus("current")


class _WtcImportIndex_Type(DisplayString):
    """Custom type wtcImportIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WtcImportIndex_Type.__name__ = "DisplayString"
_WtcImportIndex_Object = MibTableColumn
wtcImportIndex = _WtcImportIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 815, 1, 1),
    _WtcImportIndex_Type()
)
wtcImportIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcImportIndex.setStatus("current")


class _WtcImportObjectName_Type(DisplayString):
    """Custom type wtcImportObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcImportObjectName_Type.__name__ = "DisplayString"
_WtcImportObjectName_Object = MibTableColumn
wtcImportObjectName = _WtcImportObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 815, 1, 5),
    _WtcImportObjectName_Type()
)
wtcImportObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcImportObjectName.setStatus("current")


class _WtcImportType_Type(DisplayString):
    """Custom type wtcImportType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WtcImportType_Type.__name__ = "DisplayString"
_WtcImportType_Object = MibTableColumn
wtcImportType = _WtcImportType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 815, 1, 10),
    _WtcImportType_Type()
)
wtcImportType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcImportType.setStatus("current")


class _WtcImportName_Type(DisplayString):
    """Custom type wtcImportName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WtcImportName_Type.__name__ = "DisplayString"
_WtcImportName_Object = MibTableColumn
wtcImportName = _WtcImportName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 815, 1, 15),
    _WtcImportName_Type()
)
wtcImportName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcImportName.setStatus("current")


class _WtcImportParent_Type(DisplayString):
    """Custom type wtcImportParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcImportParent_Type.__name__ = "DisplayString"
_WtcImportParent_Object = MibTableColumn
wtcImportParent = _WtcImportParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 815, 1, 20),
    _WtcImportParent_Type()
)
wtcImportParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcImportParent.setStatus("current")


class _WtcImportRemoteAccessPointList_Type(DisplayString):
    """Custom type wtcImportRemoteAccessPointList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcImportRemoteAccessPointList_Type.__name__ = "DisplayString"
_WtcImportRemoteAccessPointList_Object = MibTableColumn
wtcImportRemoteAccessPointList = _WtcImportRemoteAccessPointList_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 815, 1, 25),
    _WtcImportRemoteAccessPointList_Type()
)
wtcImportRemoteAccessPointList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcImportRemoteAccessPointList.setStatus("current")


class _WtcImportLocalAccessPoint_Type(DisplayString):
    """Custom type wtcImportLocalAccessPoint based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcImportLocalAccessPoint_Type.__name__ = "DisplayString"
_WtcImportLocalAccessPoint_Object = MibTableColumn
wtcImportLocalAccessPoint = _WtcImportLocalAccessPoint_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 815, 1, 30),
    _WtcImportLocalAccessPoint_Type()
)
wtcImportLocalAccessPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcImportLocalAccessPoint.setStatus("current")


class _WtcImportRemoteName_Type(DisplayString):
    """Custom type wtcImportRemoteName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcImportRemoteName_Type.__name__ = "DisplayString"
_WtcImportRemoteName_Object = MibTableColumn
wtcImportRemoteName = _WtcImportRemoteName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 815, 1, 35),
    _WtcImportRemoteName_Type()
)
wtcImportRemoteName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcImportRemoteName.setStatus("current")


class _WtcImportResourceName_Type(DisplayString):
    """Custom type wtcImportResourceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcImportResourceName_Type.__name__ = "DisplayString"
_WtcImportResourceName_Object = MibTableColumn
wtcImportResourceName = _WtcImportResourceName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 815, 1, 40),
    _WtcImportResourceName_Type()
)
wtcImportResourceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcImportResourceName.setStatus("current")
_WtcLocalTuxDomTable_Object = MibTable
wtcLocalTuxDomTable = _WtcLocalTuxDomTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817)
)
if mibBuilder.loadTexts:
    wtcLocalTuxDomTable.setStatus("current")
_WtcLocalTuxDomEntry_Object = MibTableRow
wtcLocalTuxDomEntry = _WtcLocalTuxDomEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1)
)
wtcLocalTuxDomEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wtcLocalTuxDomIndex"),
)
if mibBuilder.loadTexts:
    wtcLocalTuxDomEntry.setStatus("current")


class _WtcLocalTuxDomIndex_Type(DisplayString):
    """Custom type wtcLocalTuxDomIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WtcLocalTuxDomIndex_Type.__name__ = "DisplayString"
_WtcLocalTuxDomIndex_Object = MibTableColumn
wtcLocalTuxDomIndex = _WtcLocalTuxDomIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 1),
    _WtcLocalTuxDomIndex_Type()
)
wtcLocalTuxDomIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomIndex.setStatus("current")


class _WtcLocalTuxDomObjectName_Type(DisplayString):
    """Custom type wtcLocalTuxDomObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcLocalTuxDomObjectName_Type.__name__ = "DisplayString"
_WtcLocalTuxDomObjectName_Object = MibTableColumn
wtcLocalTuxDomObjectName = _WtcLocalTuxDomObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 5),
    _WtcLocalTuxDomObjectName_Type()
)
wtcLocalTuxDomObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomObjectName.setStatus("current")


class _WtcLocalTuxDomType_Type(DisplayString):
    """Custom type wtcLocalTuxDomType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WtcLocalTuxDomType_Type.__name__ = "DisplayString"
_WtcLocalTuxDomType_Object = MibTableColumn
wtcLocalTuxDomType = _WtcLocalTuxDomType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 10),
    _WtcLocalTuxDomType_Type()
)
wtcLocalTuxDomType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomType.setStatus("current")


class _WtcLocalTuxDomName_Type(DisplayString):
    """Custom type wtcLocalTuxDomName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WtcLocalTuxDomName_Type.__name__ = "DisplayString"
_WtcLocalTuxDomName_Object = MibTableColumn
wtcLocalTuxDomName = _WtcLocalTuxDomName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 15),
    _WtcLocalTuxDomName_Type()
)
wtcLocalTuxDomName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomName.setStatus("current")


class _WtcLocalTuxDomParent_Type(DisplayString):
    """Custom type wtcLocalTuxDomParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcLocalTuxDomParent_Type.__name__ = "DisplayString"
_WtcLocalTuxDomParent_Object = MibTableColumn
wtcLocalTuxDomParent = _WtcLocalTuxDomParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 20),
    _WtcLocalTuxDomParent_Type()
)
wtcLocalTuxDomParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomParent.setStatus("current")


class _WtcLocalTuxDomAccessPoint_Type(DisplayString):
    """Custom type wtcLocalTuxDomAccessPoint based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcLocalTuxDomAccessPoint_Type.__name__ = "DisplayString"
_WtcLocalTuxDomAccessPoint_Object = MibTableColumn
wtcLocalTuxDomAccessPoint = _WtcLocalTuxDomAccessPoint_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 25),
    _WtcLocalTuxDomAccessPoint_Type()
)
wtcLocalTuxDomAccessPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomAccessPoint.setStatus("current")


class _WtcLocalTuxDomAccessPointId_Type(DisplayString):
    """Custom type wtcLocalTuxDomAccessPointId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcLocalTuxDomAccessPointId_Type.__name__ = "DisplayString"
_WtcLocalTuxDomAccessPointId_Object = MibTableColumn
wtcLocalTuxDomAccessPointId = _WtcLocalTuxDomAccessPointId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 30),
    _WtcLocalTuxDomAccessPointId_Type()
)
wtcLocalTuxDomAccessPointId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomAccessPointId.setStatus("current")
_WtcLocalTuxDomBlockTime_Type = Counter64
_WtcLocalTuxDomBlockTime_Object = MibTableColumn
wtcLocalTuxDomBlockTime = _WtcLocalTuxDomBlockTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 35),
    _WtcLocalTuxDomBlockTime_Type()
)
wtcLocalTuxDomBlockTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomBlockTime.setStatus("current")
_WtcLocalTuxDomCmpLimit_Type = Integer32
_WtcLocalTuxDomCmpLimit_Object = MibTableColumn
wtcLocalTuxDomCmpLimit = _WtcLocalTuxDomCmpLimit_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 40),
    _WtcLocalTuxDomCmpLimit_Type()
)
wtcLocalTuxDomCmpLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomCmpLimit.setStatus("current")


class _WtcLocalTuxDomConnectionPolicy_Type(DisplayString):
    """Custom type wtcLocalTuxDomConnectionPolicy based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcLocalTuxDomConnectionPolicy_Type.__name__ = "DisplayString"
_WtcLocalTuxDomConnectionPolicy_Object = MibTableColumn
wtcLocalTuxDomConnectionPolicy = _WtcLocalTuxDomConnectionPolicy_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 45),
    _WtcLocalTuxDomConnectionPolicy_Type()
)
wtcLocalTuxDomConnectionPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomConnectionPolicy.setStatus("current")


class _WtcLocalTuxDomConnPrincipalName_Type(DisplayString):
    """Custom type wtcLocalTuxDomConnPrincipalName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcLocalTuxDomConnPrincipalName_Type.__name__ = "DisplayString"
_WtcLocalTuxDomConnPrincipalName_Object = MibTableColumn
wtcLocalTuxDomConnPrincipalName = _WtcLocalTuxDomConnPrincipalName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 50),
    _WtcLocalTuxDomConnPrincipalName_Type()
)
wtcLocalTuxDomConnPrincipalName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomConnPrincipalName.setStatus("current")


class _WtcLocalTuxDomInteroperate_Type(DisplayString):
    """Custom type wtcLocalTuxDomInteroperate based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcLocalTuxDomInteroperate_Type.__name__ = "DisplayString"
_WtcLocalTuxDomInteroperate_Object = MibTableColumn
wtcLocalTuxDomInteroperate = _WtcLocalTuxDomInteroperate_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 55),
    _WtcLocalTuxDomInteroperate_Type()
)
wtcLocalTuxDomInteroperate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomInteroperate.setStatus("current")


class _WtcLocalTuxDomMaxEncryptBits_Type(DisplayString):
    """Custom type wtcLocalTuxDomMaxEncryptBits based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcLocalTuxDomMaxEncryptBits_Type.__name__ = "DisplayString"
_WtcLocalTuxDomMaxEncryptBits_Object = MibTableColumn
wtcLocalTuxDomMaxEncryptBits = _WtcLocalTuxDomMaxEncryptBits_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 60),
    _WtcLocalTuxDomMaxEncryptBits_Type()
)
wtcLocalTuxDomMaxEncryptBits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomMaxEncryptBits.setStatus("current")
_WtcLocalTuxDomMaxRetries_Type = Counter64
_WtcLocalTuxDomMaxRetries_Object = MibTableColumn
wtcLocalTuxDomMaxRetries = _WtcLocalTuxDomMaxRetries_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 65),
    _WtcLocalTuxDomMaxRetries_Type()
)
wtcLocalTuxDomMaxRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomMaxRetries.setStatus("current")


class _WtcLocalTuxDomMinEncryptBits_Type(DisplayString):
    """Custom type wtcLocalTuxDomMinEncryptBits based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcLocalTuxDomMinEncryptBits_Type.__name__ = "DisplayString"
_WtcLocalTuxDomMinEncryptBits_Object = MibTableColumn
wtcLocalTuxDomMinEncryptBits = _WtcLocalTuxDomMinEncryptBits_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 70),
    _WtcLocalTuxDomMinEncryptBits_Type()
)
wtcLocalTuxDomMinEncryptBits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomMinEncryptBits.setStatus("current")


class _WtcLocalTuxDomNWAddr_Type(DisplayString):
    """Custom type wtcLocalTuxDomNWAddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcLocalTuxDomNWAddr_Type.__name__ = "DisplayString"
_WtcLocalTuxDomNWAddr_Object = MibTableColumn
wtcLocalTuxDomNWAddr = _WtcLocalTuxDomNWAddr_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 75),
    _WtcLocalTuxDomNWAddr_Type()
)
wtcLocalTuxDomNWAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomNWAddr.setStatus("current")
_WtcLocalTuxDomRetryInterval_Type = Counter64
_WtcLocalTuxDomRetryInterval_Object = MibTableColumn
wtcLocalTuxDomRetryInterval = _WtcLocalTuxDomRetryInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 80),
    _WtcLocalTuxDomRetryInterval_Type()
)
wtcLocalTuxDomRetryInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomRetryInterval.setStatus("current")


class _WtcLocalTuxDomSecurity_Type(DisplayString):
    """Custom type wtcLocalTuxDomSecurity based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcLocalTuxDomSecurity_Type.__name__ = "DisplayString"
_WtcLocalTuxDomSecurity_Object = MibTableColumn
wtcLocalTuxDomSecurity = _WtcLocalTuxDomSecurity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 85),
    _WtcLocalTuxDomSecurity_Type()
)
wtcLocalTuxDomSecurity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomSecurity.setStatus("current")
_WtcLocalTuxDomKeyStoresLocation_Type = OctetString
_WtcLocalTuxDomKeyStoresLocation_Object = MibTableColumn
wtcLocalTuxDomKeyStoresLocation = _WtcLocalTuxDomKeyStoresLocation_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 86),
    _WtcLocalTuxDomKeyStoresLocation_Type()
)
wtcLocalTuxDomKeyStoresLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomKeyStoresLocation.setStatus("current")
_WtcLocalTuxDomSSLRenegotiation_Type = Integer32
_WtcLocalTuxDomSSLRenegotiation_Object = MibTableColumn
wtcLocalTuxDomSSLRenegotiation = _WtcLocalTuxDomSSLRenegotiation_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 87),
    _WtcLocalTuxDomSSLRenegotiation_Type()
)
wtcLocalTuxDomSSLRenegotiation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomSSLRenegotiation.setStatus("current")
_WtcLocalTuxDomUseSSL_Type = OctetString
_WtcLocalTuxDomUseSSL_Object = MibTableColumn
wtcLocalTuxDomUseSSL = _WtcLocalTuxDomUseSSL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 88),
    _WtcLocalTuxDomUseSSL_Type()
)
wtcLocalTuxDomUseSSL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomUseSSL.setStatus("current")
_WtcLocalTuxDomKeepAliveWait_Type = Integer32
_WtcLocalTuxDomKeepAliveWait_Object = MibTableColumn
wtcLocalTuxDomKeepAliveWait = _WtcLocalTuxDomKeepAliveWait_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 89),
    _WtcLocalTuxDomKeepAliveWait_Type()
)
wtcLocalTuxDomKeepAliveWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomKeepAliveWait.setStatus("current")
_WtcLocalTuxDomTrustKeyStoreFileName_Type = OctetString
_WtcLocalTuxDomTrustKeyStoreFileName_Object = MibTableColumn
wtcLocalTuxDomTrustKeyStoreFileName = _WtcLocalTuxDomTrustKeyStoreFileName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 90),
    _WtcLocalTuxDomTrustKeyStoreFileName_Type()
)
wtcLocalTuxDomTrustKeyStoreFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomTrustKeyStoreFileName.setStatus("current")
_WtcLocalTuxDomKeepAlive_Type = Integer32
_WtcLocalTuxDomKeepAlive_Object = MibTableColumn
wtcLocalTuxDomKeepAlive = _WtcLocalTuxDomKeepAlive_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 91),
    _WtcLocalTuxDomKeepAlive_Type()
)
wtcLocalTuxDomKeepAlive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomKeepAlive.setStatus("current")
_WtcLocalTuxDomPrivateKeyAlias_Type = OctetString
_WtcLocalTuxDomPrivateKeyAlias_Object = MibTableColumn
wtcLocalTuxDomPrivateKeyAlias = _WtcLocalTuxDomPrivateKeyAlias_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 92),
    _WtcLocalTuxDomPrivateKeyAlias_Type()
)
wtcLocalTuxDomPrivateKeyAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomPrivateKeyAlias.setStatus("current")
_WtcLocalTuxDomIdentityKeyStoreFileName_Type = OctetString
_WtcLocalTuxDomIdentityKeyStoreFileName_Object = MibTableColumn
wtcLocalTuxDomIdentityKeyStoreFileName = _WtcLocalTuxDomIdentityKeyStoreFileName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 817, 1, 93),
    _WtcLocalTuxDomIdentityKeyStoreFileName_Type()
)
wtcLocalTuxDomIdentityKeyStoreFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcLocalTuxDomIdentityKeyStoreFileName.setStatus("current")
_WtcRemoteTuxDomTable_Object = MibTable
wtcRemoteTuxDomTable = _WtcRemoteTuxDomTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820)
)
if mibBuilder.loadTexts:
    wtcRemoteTuxDomTable.setStatus("current")
_WtcRemoteTuxDomEntry_Object = MibTableRow
wtcRemoteTuxDomEntry = _WtcRemoteTuxDomEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1)
)
wtcRemoteTuxDomEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wtcRemoteTuxDomIndex"),
)
if mibBuilder.loadTexts:
    wtcRemoteTuxDomEntry.setStatus("current")


class _WtcRemoteTuxDomIndex_Type(DisplayString):
    """Custom type wtcRemoteTuxDomIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WtcRemoteTuxDomIndex_Type.__name__ = "DisplayString"
_WtcRemoteTuxDomIndex_Object = MibTableColumn
wtcRemoteTuxDomIndex = _WtcRemoteTuxDomIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 1),
    _WtcRemoteTuxDomIndex_Type()
)
wtcRemoteTuxDomIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomIndex.setStatus("current")


class _WtcRemoteTuxDomObjectName_Type(DisplayString):
    """Custom type wtcRemoteTuxDomObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcRemoteTuxDomObjectName_Type.__name__ = "DisplayString"
_WtcRemoteTuxDomObjectName_Object = MibTableColumn
wtcRemoteTuxDomObjectName = _WtcRemoteTuxDomObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 5),
    _WtcRemoteTuxDomObjectName_Type()
)
wtcRemoteTuxDomObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomObjectName.setStatus("current")


class _WtcRemoteTuxDomType_Type(DisplayString):
    """Custom type wtcRemoteTuxDomType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WtcRemoteTuxDomType_Type.__name__ = "DisplayString"
_WtcRemoteTuxDomType_Object = MibTableColumn
wtcRemoteTuxDomType = _WtcRemoteTuxDomType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 10),
    _WtcRemoteTuxDomType_Type()
)
wtcRemoteTuxDomType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomType.setStatus("current")


class _WtcRemoteTuxDomName_Type(DisplayString):
    """Custom type wtcRemoteTuxDomName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WtcRemoteTuxDomName_Type.__name__ = "DisplayString"
_WtcRemoteTuxDomName_Object = MibTableColumn
wtcRemoteTuxDomName = _WtcRemoteTuxDomName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 15),
    _WtcRemoteTuxDomName_Type()
)
wtcRemoteTuxDomName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomName.setStatus("current")


class _WtcRemoteTuxDomParent_Type(DisplayString):
    """Custom type wtcRemoteTuxDomParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcRemoteTuxDomParent_Type.__name__ = "DisplayString"
_WtcRemoteTuxDomParent_Object = MibTableColumn
wtcRemoteTuxDomParent = _WtcRemoteTuxDomParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 20),
    _WtcRemoteTuxDomParent_Type()
)
wtcRemoteTuxDomParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomParent.setStatus("current")


class _WtcRemoteTuxDomAccessPoint_Type(DisplayString):
    """Custom type wtcRemoteTuxDomAccessPoint based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcRemoteTuxDomAccessPoint_Type.__name__ = "DisplayString"
_WtcRemoteTuxDomAccessPoint_Object = MibTableColumn
wtcRemoteTuxDomAccessPoint = _WtcRemoteTuxDomAccessPoint_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 25),
    _WtcRemoteTuxDomAccessPoint_Type()
)
wtcRemoteTuxDomAccessPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomAccessPoint.setStatus("current")


class _WtcRemoteTuxDomAccessPointId_Type(DisplayString):
    """Custom type wtcRemoteTuxDomAccessPointId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcRemoteTuxDomAccessPointId_Type.__name__ = "DisplayString"
_WtcRemoteTuxDomAccessPointId_Object = MibTableColumn
wtcRemoteTuxDomAccessPointId = _WtcRemoteTuxDomAccessPointId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 30),
    _WtcRemoteTuxDomAccessPointId_Type()
)
wtcRemoteTuxDomAccessPointId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomAccessPointId.setStatus("current")


class _WtcRemoteTuxDomAclPolicy_Type(DisplayString):
    """Custom type wtcRemoteTuxDomAclPolicy based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcRemoteTuxDomAclPolicy_Type.__name__ = "DisplayString"
_WtcRemoteTuxDomAclPolicy_Object = MibTableColumn
wtcRemoteTuxDomAclPolicy = _WtcRemoteTuxDomAclPolicy_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 35),
    _WtcRemoteTuxDomAclPolicy_Type()
)
wtcRemoteTuxDomAclPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomAclPolicy.setStatus("current")
_WtcRemoteTuxDomCmpLimit_Type = Integer32
_WtcRemoteTuxDomCmpLimit_Object = MibTableColumn
wtcRemoteTuxDomCmpLimit = _WtcRemoteTuxDomCmpLimit_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 40),
    _WtcRemoteTuxDomCmpLimit_Type()
)
wtcRemoteTuxDomCmpLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomCmpLimit.setStatus("current")


class _WtcRemoteTuxDomConnectionPolicy_Type(DisplayString):
    """Custom type wtcRemoteTuxDomConnectionPolicy based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcRemoteTuxDomConnectionPolicy_Type.__name__ = "DisplayString"
_WtcRemoteTuxDomConnectionPolicy_Object = MibTableColumn
wtcRemoteTuxDomConnectionPolicy = _WtcRemoteTuxDomConnectionPolicy_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 45),
    _WtcRemoteTuxDomConnectionPolicy_Type()
)
wtcRemoteTuxDomConnectionPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomConnectionPolicy.setStatus("current")


class _WtcRemoteTuxDomConnPrincipalName_Type(DisplayString):
    """Custom type wtcRemoteTuxDomConnPrincipalName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcRemoteTuxDomConnPrincipalName_Type.__name__ = "DisplayString"
_WtcRemoteTuxDomConnPrincipalName_Object = MibTableColumn
wtcRemoteTuxDomConnPrincipalName = _WtcRemoteTuxDomConnPrincipalName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 50),
    _WtcRemoteTuxDomConnPrincipalName_Type()
)
wtcRemoteTuxDomConnPrincipalName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomConnPrincipalName.setStatus("current")


class _WtcRemoteTuxDomCredentialPolicy_Type(DisplayString):
    """Custom type wtcRemoteTuxDomCredentialPolicy based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcRemoteTuxDomCredentialPolicy_Type.__name__ = "DisplayString"
_WtcRemoteTuxDomCredentialPolicy_Object = MibTableColumn
wtcRemoteTuxDomCredentialPolicy = _WtcRemoteTuxDomCredentialPolicy_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 55),
    _WtcRemoteTuxDomCredentialPolicy_Type()
)
wtcRemoteTuxDomCredentialPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomCredentialPolicy.setStatus("current")


class _WtcRemoteTuxDomMaxEncryptBits_Type(DisplayString):
    """Custom type wtcRemoteTuxDomMaxEncryptBits based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcRemoteTuxDomMaxEncryptBits_Type.__name__ = "DisplayString"
_WtcRemoteTuxDomMaxEncryptBits_Object = MibTableColumn
wtcRemoteTuxDomMaxEncryptBits = _WtcRemoteTuxDomMaxEncryptBits_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 60),
    _WtcRemoteTuxDomMaxEncryptBits_Type()
)
wtcRemoteTuxDomMaxEncryptBits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomMaxEncryptBits.setStatus("current")
_WtcRemoteTuxDomMaxRetries_Type = Counter64
_WtcRemoteTuxDomMaxRetries_Object = MibTableColumn
wtcRemoteTuxDomMaxRetries = _WtcRemoteTuxDomMaxRetries_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 65),
    _WtcRemoteTuxDomMaxRetries_Type()
)
wtcRemoteTuxDomMaxRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomMaxRetries.setStatus("current")


class _WtcRemoteTuxDomMinEncryptBits_Type(DisplayString):
    """Custom type wtcRemoteTuxDomMinEncryptBits based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcRemoteTuxDomMinEncryptBits_Type.__name__ = "DisplayString"
_WtcRemoteTuxDomMinEncryptBits_Object = MibTableColumn
wtcRemoteTuxDomMinEncryptBits = _WtcRemoteTuxDomMinEncryptBits_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 70),
    _WtcRemoteTuxDomMinEncryptBits_Type()
)
wtcRemoteTuxDomMinEncryptBits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomMinEncryptBits.setStatus("current")


class _WtcRemoteTuxDomNWAddr_Type(DisplayString):
    """Custom type wtcRemoteTuxDomNWAddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcRemoteTuxDomNWAddr_Type.__name__ = "DisplayString"
_WtcRemoteTuxDomNWAddr_Object = MibTableColumn
wtcRemoteTuxDomNWAddr = _WtcRemoteTuxDomNWAddr_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 75),
    _WtcRemoteTuxDomNWAddr_Type()
)
wtcRemoteTuxDomNWAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomNWAddr.setStatus("current")
_WtcRemoteTuxDomRetryInterval_Type = Counter64
_WtcRemoteTuxDomRetryInterval_Object = MibTableColumn
wtcRemoteTuxDomRetryInterval = _WtcRemoteTuxDomRetryInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 80),
    _WtcRemoteTuxDomRetryInterval_Type()
)
wtcRemoteTuxDomRetryInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomRetryInterval.setStatus("current")


class _WtcRemoteTuxDomTpUsrFile_Type(DisplayString):
    """Custom type wtcRemoteTuxDomTpUsrFile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcRemoteTuxDomTpUsrFile_Type.__name__ = "DisplayString"
_WtcRemoteTuxDomTpUsrFile_Object = MibTableColumn
wtcRemoteTuxDomTpUsrFile = _WtcRemoteTuxDomTpUsrFile_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 85),
    _WtcRemoteTuxDomTpUsrFile_Type()
)
wtcRemoteTuxDomTpUsrFile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomTpUsrFile.setStatus("current")


class _WtcRemoteTuxDomFederationName_Type(DisplayString):
    """Custom type wtcRemoteTuxDomFederationName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcRemoteTuxDomFederationName_Type.__name__ = "DisplayString"
_WtcRemoteTuxDomFederationName_Object = MibTableColumn
wtcRemoteTuxDomFederationName = _WtcRemoteTuxDomFederationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 100),
    _WtcRemoteTuxDomFederationName_Type()
)
wtcRemoteTuxDomFederationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomFederationName.setStatus("current")


class _WtcRemoteTuxDomFederationURL_Type(DisplayString):
    """Custom type wtcRemoteTuxDomFederationURL based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcRemoteTuxDomFederationURL_Type.__name__ = "DisplayString"
_WtcRemoteTuxDomFederationURL_Object = MibTableColumn
wtcRemoteTuxDomFederationURL = _WtcRemoteTuxDomFederationURL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 105),
    _WtcRemoteTuxDomFederationURL_Type()
)
wtcRemoteTuxDomFederationURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomFederationURL.setStatus("current")


class _WtcRemoteTuxDomLocalAccessPoint_Type(DisplayString):
    """Custom type wtcRemoteTuxDomLocalAccessPoint based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcRemoteTuxDomLocalAccessPoint_Type.__name__ = "DisplayString"
_WtcRemoteTuxDomLocalAccessPoint_Object = MibTableColumn
wtcRemoteTuxDomLocalAccessPoint = _WtcRemoteTuxDomLocalAccessPoint_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 110),
    _WtcRemoteTuxDomLocalAccessPoint_Type()
)
wtcRemoteTuxDomLocalAccessPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomLocalAccessPoint.setStatus("current")
_WtcRemoteTuxDomDefaultAppKey_Type = Integer32
_WtcRemoteTuxDomDefaultAppKey_Object = MibTableColumn
wtcRemoteTuxDomDefaultAppKey = _WtcRemoteTuxDomDefaultAppKey_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 111),
    _WtcRemoteTuxDomDefaultAppKey_Type()
)
wtcRemoteTuxDomDefaultAppKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomDefaultAppKey.setStatus("current")
_WtcRemoteTuxDomCustomAppKeyClass_Type = OctetString
_WtcRemoteTuxDomCustomAppKeyClass_Object = MibTableColumn
wtcRemoteTuxDomCustomAppKeyClass = _WtcRemoteTuxDomCustomAppKeyClass_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 112),
    _WtcRemoteTuxDomCustomAppKeyClass_Type()
)
wtcRemoteTuxDomCustomAppKeyClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomCustomAppKeyClass.setStatus("current")
_WtcRemoteTuxDomTuxedoGidKw_Type = OctetString
_WtcRemoteTuxDomTuxedoGidKw_Object = MibTableColumn
wtcRemoteTuxDomTuxedoGidKw = _WtcRemoteTuxDomTuxedoGidKw_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 113),
    _WtcRemoteTuxDomTuxedoGidKw_Type()
)
wtcRemoteTuxDomTuxedoGidKw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomTuxedoGidKw.setStatus("current")
_WtcRemoteTuxDomAllowAnonymous_Type = OctetString
_WtcRemoteTuxDomAllowAnonymous_Object = MibTableColumn
wtcRemoteTuxDomAllowAnonymous = _WtcRemoteTuxDomAllowAnonymous_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 114),
    _WtcRemoteTuxDomAllowAnonymous_Type()
)
wtcRemoteTuxDomAllowAnonymous.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomAllowAnonymous.setStatus("current")
_WtcRemoteTuxDomKeepAliveWait_Type = Integer32
_WtcRemoteTuxDomKeepAliveWait_Object = MibTableColumn
wtcRemoteTuxDomKeepAliveWait = _WtcRemoteTuxDomKeepAliveWait_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 115),
    _WtcRemoteTuxDomKeepAliveWait_Type()
)
wtcRemoteTuxDomKeepAliveWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomKeepAliveWait.setStatus("current")
_WtcRemoteTuxDomCustomAppKeyClassParam_Type = OctetString
_WtcRemoteTuxDomCustomAppKeyClassParam_Object = MibTableColumn
wtcRemoteTuxDomCustomAppKeyClassParam = _WtcRemoteTuxDomCustomAppKeyClassParam_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 116),
    _WtcRemoteTuxDomCustomAppKeyClassParam_Type()
)
wtcRemoteTuxDomCustomAppKeyClassParam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomCustomAppKeyClassParam.setStatus("current")
_WtcRemoteTuxDomTuxedoUidKw_Type = OctetString
_WtcRemoteTuxDomTuxedoUidKw_Object = MibTableColumn
wtcRemoteTuxDomTuxedoUidKw = _WtcRemoteTuxDomTuxedoUidKw_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 117),
    _WtcRemoteTuxDomTuxedoUidKw_Type()
)
wtcRemoteTuxDomTuxedoUidKw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomTuxedoUidKw.setStatus("current")
_WtcRemoteTuxDomKeepAlive_Type = Integer32
_WtcRemoteTuxDomKeepAlive_Object = MibTableColumn
wtcRemoteTuxDomKeepAlive = _WtcRemoteTuxDomKeepAlive_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 118),
    _WtcRemoteTuxDomKeepAlive_Type()
)
wtcRemoteTuxDomKeepAlive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomKeepAlive.setStatus("current")
_WtcRemoteTuxDomAppKey_Type = OctetString
_WtcRemoteTuxDomAppKey_Object = MibTableColumn
wtcRemoteTuxDomAppKey = _WtcRemoteTuxDomAppKey_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 820, 1, 119),
    _WtcRemoteTuxDomAppKey_Type()
)
wtcRemoteTuxDomAppKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRemoteTuxDomAppKey.setStatus("current")
_WtctBridgeRedirectTable_Object = MibTable
wtctBridgeRedirectTable = _WtctBridgeRedirectTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 825)
)
if mibBuilder.loadTexts:
    wtctBridgeRedirectTable.setStatus("current")
_WtctBridgeRedirectEntry_Object = MibTableRow
wtctBridgeRedirectEntry = _WtctBridgeRedirectEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 825, 1)
)
wtctBridgeRedirectEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wtctBridgeRedirectIndex"),
)
if mibBuilder.loadTexts:
    wtctBridgeRedirectEntry.setStatus("current")


class _WtctBridgeRedirectIndex_Type(DisplayString):
    """Custom type wtctBridgeRedirectIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WtctBridgeRedirectIndex_Type.__name__ = "DisplayString"
_WtctBridgeRedirectIndex_Object = MibTableColumn
wtctBridgeRedirectIndex = _WtctBridgeRedirectIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 825, 1, 1),
    _WtctBridgeRedirectIndex_Type()
)
wtctBridgeRedirectIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeRedirectIndex.setStatus("current")


class _WtctBridgeRedirectObjectName_Type(DisplayString):
    """Custom type wtctBridgeRedirectObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeRedirectObjectName_Type.__name__ = "DisplayString"
_WtctBridgeRedirectObjectName_Object = MibTableColumn
wtctBridgeRedirectObjectName = _WtctBridgeRedirectObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 825, 1, 5),
    _WtctBridgeRedirectObjectName_Type()
)
wtctBridgeRedirectObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeRedirectObjectName.setStatus("current")


class _WtctBridgeRedirectType_Type(DisplayString):
    """Custom type wtctBridgeRedirectType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WtctBridgeRedirectType_Type.__name__ = "DisplayString"
_WtctBridgeRedirectType_Object = MibTableColumn
wtctBridgeRedirectType = _WtctBridgeRedirectType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 825, 1, 10),
    _WtctBridgeRedirectType_Type()
)
wtctBridgeRedirectType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeRedirectType.setStatus("current")


class _WtctBridgeRedirectName_Type(DisplayString):
    """Custom type wtctBridgeRedirectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WtctBridgeRedirectName_Type.__name__ = "DisplayString"
_WtctBridgeRedirectName_Object = MibTableColumn
wtctBridgeRedirectName = _WtctBridgeRedirectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 825, 1, 15),
    _WtctBridgeRedirectName_Type()
)
wtctBridgeRedirectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeRedirectName.setStatus("current")


class _WtctBridgeRedirectParent_Type(DisplayString):
    """Custom type wtctBridgeRedirectParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeRedirectParent_Type.__name__ = "DisplayString"
_WtctBridgeRedirectParent_Object = MibTableColumn
wtctBridgeRedirectParent = _WtctBridgeRedirectParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 825, 1, 20),
    _WtctBridgeRedirectParent_Type()
)
wtctBridgeRedirectParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeRedirectParent.setStatus("current")


class _WtctBridgeRedirectDirection_Type(DisplayString):
    """Custom type wtctBridgeRedirectDirection based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeRedirectDirection_Type.__name__ = "DisplayString"
_WtctBridgeRedirectDirection_Object = MibTableColumn
wtctBridgeRedirectDirection = _WtctBridgeRedirectDirection_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 825, 1, 25),
    _WtctBridgeRedirectDirection_Type()
)
wtctBridgeRedirectDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeRedirectDirection.setStatus("current")


class _WtctBridgeRedirectMetaDataFile_Type(DisplayString):
    """Custom type wtctBridgeRedirectMetaDataFile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeRedirectMetaDataFile_Type.__name__ = "DisplayString"
_WtctBridgeRedirectMetaDataFile_Object = MibTableColumn
wtctBridgeRedirectMetaDataFile = _WtctBridgeRedirectMetaDataFile_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 825, 1, 30),
    _WtctBridgeRedirectMetaDataFile_Type()
)
wtctBridgeRedirectMetaDataFile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeRedirectMetaDataFile.setStatus("current")


class _WtctBridgeRedirectReplyQ_Type(DisplayString):
    """Custom type wtctBridgeRedirectReplyQ based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeRedirectReplyQ_Type.__name__ = "DisplayString"
_WtctBridgeRedirectReplyQ_Object = MibTableColumn
wtctBridgeRedirectReplyQ = _WtctBridgeRedirectReplyQ_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 825, 1, 35),
    _WtctBridgeRedirectReplyQ_Type()
)
wtctBridgeRedirectReplyQ.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeRedirectReplyQ.setStatus("current")


class _WtctBridgeRedirectSourceAccessPoint_Type(DisplayString):
    """Custom type wtctBridgeRedirectSourceAccessPoint based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeRedirectSourceAccessPoint_Type.__name__ = "DisplayString"
_WtctBridgeRedirectSourceAccessPoint_Object = MibTableColumn
wtctBridgeRedirectSourceAccessPoint = _WtctBridgeRedirectSourceAccessPoint_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 825, 1, 40),
    _WtctBridgeRedirectSourceAccessPoint_Type()
)
wtctBridgeRedirectSourceAccessPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeRedirectSourceAccessPoint.setStatus("current")


class _WtctBridgeRedirectSourceName_Type(DisplayString):
    """Custom type wtctBridgeRedirectSourceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeRedirectSourceName_Type.__name__ = "DisplayString"
_WtctBridgeRedirectSourceName_Object = MibTableColumn
wtctBridgeRedirectSourceName = _WtctBridgeRedirectSourceName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 825, 1, 45),
    _WtctBridgeRedirectSourceName_Type()
)
wtctBridgeRedirectSourceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeRedirectSourceName.setStatus("current")


class _WtctBridgeRedirectSourceQspace_Type(DisplayString):
    """Custom type wtctBridgeRedirectSourceQspace based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeRedirectSourceQspace_Type.__name__ = "DisplayString"
_WtctBridgeRedirectSourceQspace_Object = MibTableColumn
wtctBridgeRedirectSourceQspace = _WtctBridgeRedirectSourceQspace_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 825, 1, 50),
    _WtctBridgeRedirectSourceQspace_Type()
)
wtctBridgeRedirectSourceQspace.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeRedirectSourceQspace.setStatus("current")


class _WtctBridgeRedirectTargetAccessPoint_Type(DisplayString):
    """Custom type wtctBridgeRedirectTargetAccessPoint based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeRedirectTargetAccessPoint_Type.__name__ = "DisplayString"
_WtctBridgeRedirectTargetAccessPoint_Object = MibTableColumn
wtctBridgeRedirectTargetAccessPoint = _WtctBridgeRedirectTargetAccessPoint_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 825, 1, 55),
    _WtctBridgeRedirectTargetAccessPoint_Type()
)
wtctBridgeRedirectTargetAccessPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeRedirectTargetAccessPoint.setStatus("current")


class _WtctBridgeRedirectTargetName_Type(DisplayString):
    """Custom type wtctBridgeRedirectTargetName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeRedirectTargetName_Type.__name__ = "DisplayString"
_WtctBridgeRedirectTargetName_Object = MibTableColumn
wtctBridgeRedirectTargetName = _WtctBridgeRedirectTargetName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 825, 1, 60),
    _WtctBridgeRedirectTargetName_Type()
)
wtctBridgeRedirectTargetName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeRedirectTargetName.setStatus("current")


class _WtctBridgeRedirectTargetQspace_Type(DisplayString):
    """Custom type wtctBridgeRedirectTargetQspace based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeRedirectTargetQspace_Type.__name__ = "DisplayString"
_WtctBridgeRedirectTargetQspace_Object = MibTableColumn
wtctBridgeRedirectTargetQspace = _WtctBridgeRedirectTargetQspace_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 825, 1, 65),
    _WtctBridgeRedirectTargetQspace_Type()
)
wtctBridgeRedirectTargetQspace.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeRedirectTargetQspace.setStatus("current")


class _WtctBridgeRedirectTranslateFML_Type(DisplayString):
    """Custom type wtctBridgeRedirectTranslateFML based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtctBridgeRedirectTranslateFML_Type.__name__ = "DisplayString"
_WtctBridgeRedirectTranslateFML_Object = MibTableColumn
wtctBridgeRedirectTranslateFML = _WtctBridgeRedirectTranslateFML_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 825, 1, 70),
    _WtctBridgeRedirectTranslateFML_Type()
)
wtctBridgeRedirectTranslateFML.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtctBridgeRedirectTranslateFML.setStatus("current")
_WsReliableDeliveryPolicyTable_Object = MibTable
wsReliableDeliveryPolicyTable = _WsReliableDeliveryPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 827)
)
if mibBuilder.loadTexts:
    wsReliableDeliveryPolicyTable.setStatus("current")
_WsReliableDeliveryPolicyEntry_Object = MibTableRow
wsReliableDeliveryPolicyEntry = _WsReliableDeliveryPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 827, 1)
)
wsReliableDeliveryPolicyEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wsReliableDeliveryPolicyIndex"),
)
if mibBuilder.loadTexts:
    wsReliableDeliveryPolicyEntry.setStatus("current")


class _WsReliableDeliveryPolicyIndex_Type(DisplayString):
    """Custom type wsReliableDeliveryPolicyIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WsReliableDeliveryPolicyIndex_Type.__name__ = "DisplayString"
_WsReliableDeliveryPolicyIndex_Object = MibTableColumn
wsReliableDeliveryPolicyIndex = _WsReliableDeliveryPolicyIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 827, 1, 1),
    _WsReliableDeliveryPolicyIndex_Type()
)
wsReliableDeliveryPolicyIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsReliableDeliveryPolicyIndex.setStatus("current")


class _WsReliableDeliveryPolicyObjectName_Type(DisplayString):
    """Custom type wsReliableDeliveryPolicyObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WsReliableDeliveryPolicyObjectName_Type.__name__ = "DisplayString"
_WsReliableDeliveryPolicyObjectName_Object = MibTableColumn
wsReliableDeliveryPolicyObjectName = _WsReliableDeliveryPolicyObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 827, 1, 5),
    _WsReliableDeliveryPolicyObjectName_Type()
)
wsReliableDeliveryPolicyObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsReliableDeliveryPolicyObjectName.setStatus("current")


class _WsReliableDeliveryPolicyType_Type(DisplayString):
    """Custom type wsReliableDeliveryPolicyType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WsReliableDeliveryPolicyType_Type.__name__ = "DisplayString"
_WsReliableDeliveryPolicyType_Object = MibTableColumn
wsReliableDeliveryPolicyType = _WsReliableDeliveryPolicyType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 827, 1, 10),
    _WsReliableDeliveryPolicyType_Type()
)
wsReliableDeliveryPolicyType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsReliableDeliveryPolicyType.setStatus("current")


class _WsReliableDeliveryPolicyName_Type(DisplayString):
    """Custom type wsReliableDeliveryPolicyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WsReliableDeliveryPolicyName_Type.__name__ = "DisplayString"
_WsReliableDeliveryPolicyName_Object = MibTableColumn
wsReliableDeliveryPolicyName = _WsReliableDeliveryPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 827, 1, 15),
    _WsReliableDeliveryPolicyName_Type()
)
wsReliableDeliveryPolicyName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsReliableDeliveryPolicyName.setStatus("current")


class _WsReliableDeliveryPolicyParent_Type(DisplayString):
    """Custom type wsReliableDeliveryPolicyParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WsReliableDeliveryPolicyParent_Type.__name__ = "DisplayString"
_WsReliableDeliveryPolicyParent_Object = MibTableColumn
wsReliableDeliveryPolicyParent = _WsReliableDeliveryPolicyParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 827, 1, 20),
    _WsReliableDeliveryPolicyParent_Type()
)
wsReliableDeliveryPolicyParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsReliableDeliveryPolicyParent.setStatus("current")
_WsReliableDeliveryPolicyDefaultRetryCount_Type = Integer32
_WsReliableDeliveryPolicyDefaultRetryCount_Object = MibTableColumn
wsReliableDeliveryPolicyDefaultRetryCount = _WsReliableDeliveryPolicyDefaultRetryCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 827, 1, 21),
    _WsReliableDeliveryPolicyDefaultRetryCount_Type()
)
wsReliableDeliveryPolicyDefaultRetryCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsReliableDeliveryPolicyDefaultRetryCount.setStatus("current")
_WsReliableDeliveryPolicyDefaultRetryInterval_Type = Integer32
_WsReliableDeliveryPolicyDefaultRetryInterval_Object = MibTableColumn
wsReliableDeliveryPolicyDefaultRetryInterval = _WsReliableDeliveryPolicyDefaultRetryInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 827, 1, 22),
    _WsReliableDeliveryPolicyDefaultRetryInterval_Type()
)
wsReliableDeliveryPolicyDefaultRetryInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsReliableDeliveryPolicyDefaultRetryInterval.setStatus("current")
_WsReliableDeliveryPolicyDefaultTimeToLive_Type = Integer32
_WsReliableDeliveryPolicyDefaultTimeToLive_Object = MibTableColumn
wsReliableDeliveryPolicyDefaultTimeToLive = _WsReliableDeliveryPolicyDefaultTimeToLive_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 827, 1, 23),
    _WsReliableDeliveryPolicyDefaultTimeToLive_Type()
)
wsReliableDeliveryPolicyDefaultTimeToLive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsReliableDeliveryPolicyDefaultTimeToLive.setStatus("current")
_WtcPasswordTable_Object = MibTable
wtcPasswordTable = _WtcPasswordTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 829)
)
if mibBuilder.loadTexts:
    wtcPasswordTable.setStatus("current")
_WtcPasswordEntry_Object = MibTableRow
wtcPasswordEntry = _WtcPasswordEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 829, 1)
)
wtcPasswordEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wtcPasswordIndex"),
)
if mibBuilder.loadTexts:
    wtcPasswordEntry.setStatus("current")


class _WtcPasswordIndex_Type(DisplayString):
    """Custom type wtcPasswordIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WtcPasswordIndex_Type.__name__ = "DisplayString"
_WtcPasswordIndex_Object = MibTableColumn
wtcPasswordIndex = _WtcPasswordIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 829, 1, 1),
    _WtcPasswordIndex_Type()
)
wtcPasswordIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcPasswordIndex.setStatus("current")


class _WtcPasswordObjectName_Type(DisplayString):
    """Custom type wtcPasswordObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcPasswordObjectName_Type.__name__ = "DisplayString"
_WtcPasswordObjectName_Object = MibTableColumn
wtcPasswordObjectName = _WtcPasswordObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 829, 1, 5),
    _WtcPasswordObjectName_Type()
)
wtcPasswordObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcPasswordObjectName.setStatus("current")


class _WtcPasswordType_Type(DisplayString):
    """Custom type wtcPasswordType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WtcPasswordType_Type.__name__ = "DisplayString"
_WtcPasswordType_Object = MibTableColumn
wtcPasswordType = _WtcPasswordType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 829, 1, 10),
    _WtcPasswordType_Type()
)
wtcPasswordType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcPasswordType.setStatus("current")


class _WtcPasswordName_Type(DisplayString):
    """Custom type wtcPasswordName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WtcPasswordName_Type.__name__ = "DisplayString"
_WtcPasswordName_Object = MibTableColumn
wtcPasswordName = _WtcPasswordName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 829, 1, 15),
    _WtcPasswordName_Type()
)
wtcPasswordName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcPasswordName.setStatus("current")


class _WtcPasswordParent_Type(DisplayString):
    """Custom type wtcPasswordParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcPasswordParent_Type.__name__ = "DisplayString"
_WtcPasswordParent_Object = MibTableColumn
wtcPasswordParent = _WtcPasswordParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 829, 1, 20),
    _WtcPasswordParent_Type()
)
wtcPasswordParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcPasswordParent.setStatus("current")
_WtcPasswordLocalAccessPoint_Type = DisplayString
_WtcPasswordLocalAccessPoint_Object = MibTableColumn
wtcPasswordLocalAccessPoint = _WtcPasswordLocalAccessPoint_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 829, 1, 21),
    _WtcPasswordLocalAccessPoint_Type()
)
wtcPasswordLocalAccessPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcPasswordLocalAccessPoint.setStatus("current")
_WtcPasswordRemoteAccessPoint_Type = DisplayString
_WtcPasswordRemoteAccessPoint_Object = MibTableColumn
wtcPasswordRemoteAccessPoint = _WtcPasswordRemoteAccessPoint_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 829, 1, 22),
    _WtcPasswordRemoteAccessPoint_Type()
)
wtcPasswordRemoteAccessPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcPasswordRemoteAccessPoint.setStatus("current")
_WtcPasswordRemotePassword_Type = OctetString
_WtcPasswordRemotePassword_Object = MibTableColumn
wtcPasswordRemotePassword = _WtcPasswordRemotePassword_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 829, 1, 23),
    _WtcPasswordRemotePassword_Type()
)
wtcPasswordRemotePassword.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcPasswordRemotePassword.setStatus("current")
_WtcPasswordRemotePasswordIV_Type = OctetString
_WtcPasswordRemotePasswordIV_Object = MibTableColumn
wtcPasswordRemotePasswordIV = _WtcPasswordRemotePasswordIV_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 829, 1, 24),
    _WtcPasswordRemotePasswordIV_Type()
)
wtcPasswordRemotePasswordIV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcPasswordRemotePasswordIV.setStatus("current")
_WtcPasswordLocalPasswordIV_Type = OctetString
_WtcPasswordLocalPasswordIV_Object = MibTableColumn
wtcPasswordLocalPasswordIV = _WtcPasswordLocalPasswordIV_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 829, 1, 25),
    _WtcPasswordLocalPasswordIV_Type()
)
wtcPasswordLocalPasswordIV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcPasswordLocalPasswordIV.setStatus("current")
_WtcPasswordLocalPassword_Type = OctetString
_WtcPasswordLocalPassword_Object = MibTableColumn
wtcPasswordLocalPassword = _WtcPasswordLocalPassword_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 829, 1, 26),
    _WtcPasswordLocalPassword_Type()
)
wtcPasswordLocalPassword.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcPasswordLocalPassword.setStatus("current")
_WtcResourcesTable_Object = MibTable
wtcResourcesTable = _WtcResourcesTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 831)
)
if mibBuilder.loadTexts:
    wtcResourcesTable.setStatus("current")
_WtcResourcesEntry_Object = MibTableRow
wtcResourcesEntry = _WtcResourcesEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 831, 1)
)
wtcResourcesEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wtcResourcesIndex"),
)
if mibBuilder.loadTexts:
    wtcResourcesEntry.setStatus("current")


class _WtcResourcesIndex_Type(DisplayString):
    """Custom type wtcResourcesIndex based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WtcResourcesIndex_Type.__name__ = "DisplayString"
_WtcResourcesIndex_Object = MibTableColumn
wtcResourcesIndex = _WtcResourcesIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 831, 1, 1),
    _WtcResourcesIndex_Type()
)
wtcResourcesIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcResourcesIndex.setStatus("current")


class _WtcResourcesObjectName_Type(DisplayString):
    """Custom type wtcResourcesObjectName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcResourcesObjectName_Type.__name__ = "DisplayString"
_WtcResourcesObjectName_Object = MibTableColumn
wtcResourcesObjectName = _WtcResourcesObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 831, 1, 5),
    _WtcResourcesObjectName_Type()
)
wtcResourcesObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcResourcesObjectName.setStatus("current")


class _WtcResourcesType_Type(DisplayString):
    """Custom type wtcResourcesType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WtcResourcesType_Type.__name__ = "DisplayString"
_WtcResourcesType_Object = MibTableColumn
wtcResourcesType = _WtcResourcesType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 831, 1, 10),
    _WtcResourcesType_Type()
)
wtcResourcesType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcResourcesType.setStatus("current")


class _WtcResourcesName_Type(DisplayString):
    """Custom type wtcResourcesName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WtcResourcesName_Type.__name__ = "DisplayString"
_WtcResourcesName_Object = MibTableColumn
wtcResourcesName = _WtcResourcesName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 831, 1, 15),
    _WtcResourcesName_Type()
)
wtcResourcesName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcResourcesName.setStatus("current")


class _WtcResourcesParent_Type(DisplayString):
    """Custom type wtcResourcesParent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_WtcResourcesParent_Type.__name__ = "DisplayString"
_WtcResourcesParent_Object = MibTableColumn
wtcResourcesParent = _WtcResourcesParent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 831, 1, 20),
    _WtcResourcesParent_Type()
)
wtcResourcesParent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcResourcesParent.setStatus("current")
_WtcResourcesFldTbl16Classes_Type = DisplayString
_WtcResourcesFldTbl16Classes_Object = MibTableColumn
wtcResourcesFldTbl16Classes = _WtcResourcesFldTbl16Classes_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 831, 1, 21),
    _WtcResourcesFldTbl16Classes_Type()
)
wtcResourcesFldTbl16Classes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcResourcesFldTbl16Classes.setStatus("current")
_WtcResourcesFldTbl32Classes_Type = DisplayString
_WtcResourcesFldTbl32Classes_Object = MibTableColumn
wtcResourcesFldTbl32Classes = _WtcResourcesFldTbl32Classes_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 831, 1, 22),
    _WtcResourcesFldTbl32Classes_Type()
)
wtcResourcesFldTbl32Classes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcResourcesFldTbl32Classes.setStatus("current")
_WtcResourcesTpUsrFile_Type = DisplayString
_WtcResourcesTpUsrFile_Object = MibTableColumn
wtcResourcesTpUsrFile = _WtcResourcesTpUsrFile_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 831, 1, 23),
    _WtcResourcesTpUsrFile_Type()
)
wtcResourcesTpUsrFile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcResourcesTpUsrFile.setStatus("current")
_WtcResourcesViewTbl16Classes_Type = DisplayString
_WtcResourcesViewTbl16Classes_Object = MibTableColumn
wtcResourcesViewTbl16Classes = _WtcResourcesViewTbl16Classes_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 831, 1, 24),
    _WtcResourcesViewTbl16Classes_Type()
)
wtcResourcesViewTbl16Classes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcResourcesViewTbl16Classes.setStatus("current")
_WtcResourcesViewTbl32Classes_Type = DisplayString
_WtcResourcesViewTbl32Classes_Object = MibTableColumn
wtcResourcesViewTbl32Classes = _WtcResourcesViewTbl32Classes_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 831, 1, 25),
    _WtcResourcesViewTbl32Classes_Type()
)
wtcResourcesViewTbl32Classes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcResourcesViewTbl32Classes.setStatus("current")
_WtcResourcesAppPassword_Type = OctetString
_WtcResourcesAppPassword_Object = MibTableColumn
wtcResourcesAppPassword = _WtcResourcesAppPassword_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 831, 1, 26),
    _WtcResourcesAppPassword_Type()
)
wtcResourcesAppPassword.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcResourcesAppPassword.setStatus("current")
_WtcResourcesRemoteMBEncoding_Type = OctetString
_WtcResourcesRemoteMBEncoding_Object = MibTableColumn
wtcResourcesRemoteMBEncoding = _WtcResourcesRemoteMBEncoding_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 831, 1, 27),
    _WtcResourcesRemoteMBEncoding_Type()
)
wtcResourcesRemoteMBEncoding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcResourcesRemoteMBEncoding.setStatus("current")
_WtcResourcesMBEncodingMapFile_Type = OctetString
_WtcResourcesMBEncodingMapFile_Object = MibTableColumn
wtcResourcesMBEncodingMapFile = _WtcResourcesMBEncodingMapFile_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 831, 1, 28),
    _WtcResourcesMBEncodingMapFile_Type()
)
wtcResourcesMBEncodingMapFile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcResourcesMBEncodingMapFile.setStatus("current")
_WtcResourcesAppPasswordIV_Type = OctetString
_WtcResourcesAppPasswordIV_Object = MibTableColumn
wtcResourcesAppPasswordIV = _WtcResourcesAppPasswordIV_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 831, 1, 29),
    _WtcResourcesAppPasswordIV_Type()
)
wtcResourcesAppPasswordIV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcResourcesAppPasswordIV.setStatus("current")
_AdminConsoleTable_Object = MibTable
adminConsoleTable = _AdminConsoleTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 840)
)
if mibBuilder.loadTexts:
    adminConsoleTable.setStatus("current")
_AdminConsoleEntry_Object = MibTableRow
adminConsoleEntry = _AdminConsoleEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 840, 1)
)
adminConsoleEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "adminConsoleIndex"),
)
if mibBuilder.loadTexts:
    adminConsoleEntry.setStatus("current")
_AdminConsoleIndex_Type = OctetString
_AdminConsoleIndex_Object = MibTableColumn
adminConsoleIndex = _AdminConsoleIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 840, 1, 1),
    _AdminConsoleIndex_Type()
)
adminConsoleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    adminConsoleIndex.setStatus("current")
_AdminConsoleObjectName_Type = OctetString
_AdminConsoleObjectName_Object = MibTableColumn
adminConsoleObjectName = _AdminConsoleObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 840, 1, 2),
    _AdminConsoleObjectName_Type()
)
adminConsoleObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminConsoleObjectName.setStatus("current")
_AdminConsoleType_Type = OctetString
_AdminConsoleType_Object = MibTableColumn
adminConsoleType = _AdminConsoleType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 840, 1, 3),
    _AdminConsoleType_Type()
)
adminConsoleType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminConsoleType.setStatus("current")
_AdminConsoleSessionTimeout_Type = Integer32
_AdminConsoleSessionTimeout_Object = MibTableColumn
adminConsoleSessionTimeout = _AdminConsoleSessionTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 840, 1, 4),
    _AdminConsoleSessionTimeout_Type()
)
adminConsoleSessionTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminConsoleSessionTimeout.setStatus("current")
_AdminConsoleCookieName_Type = OctetString
_AdminConsoleCookieName_Object = MibTableColumn
adminConsoleCookieName = _AdminConsoleCookieName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 840, 1, 5),
    _AdminConsoleCookieName_Type()
)
adminConsoleCookieName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminConsoleCookieName.setStatus("current")
_AdminConsoleName_Type = OctetString
_AdminConsoleName_Object = MibTableColumn
adminConsoleName = _AdminConsoleName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 840, 1, 6),
    _AdminConsoleName_Type()
)
adminConsoleName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminConsoleName.setStatus("current")
_AdminTable_Object = MibTable
adminTable = _AdminTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 845)
)
if mibBuilder.loadTexts:
    adminTable.setStatus("current")
_AdminEntry_Object = MibTableRow
adminEntry = _AdminEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 845, 1)
)
adminEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "adminIndex"),
)
if mibBuilder.loadTexts:
    adminEntry.setStatus("current")
_AdminIndex_Type = OctetString
_AdminIndex_Object = MibTableColumn
adminIndex = _AdminIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 845, 1, 1),
    _AdminIndex_Type()
)
adminIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    adminIndex.setStatus("current")
_AdminObjectName_Type = OctetString
_AdminObjectName_Object = MibTableColumn
adminObjectName = _AdminObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 845, 1, 2),
    _AdminObjectName_Type()
)
adminObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminObjectName.setStatus("current")
_AdminType_Type = OctetString
_AdminType_Object = MibTableColumn
adminType = _AdminType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 845, 1, 3),
    _AdminType_Type()
)
adminType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminType.setStatus("current")
_AdminName_Type = OctetString
_AdminName_Object = MibTableColumn
adminName = _AdminName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 845, 1, 4),
    _AdminName_Type()
)
adminName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminName.setStatus("current")
_CapacityTable_Object = MibTable
capacityTable = _CapacityTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 850)
)
if mibBuilder.loadTexts:
    capacityTable.setStatus("current")
_CapacityEntry_Object = MibTableRow
capacityEntry = _CapacityEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 850, 1)
)
capacityEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "capacityIndex"),
)
if mibBuilder.loadTexts:
    capacityEntry.setStatus("current")
_CapacityIndex_Type = OctetString
_CapacityIndex_Object = MibTableColumn
capacityIndex = _CapacityIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 850, 1, 1),
    _CapacityIndex_Type()
)
capacityIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    capacityIndex.setStatus("current")
_CapacityObjectName_Type = OctetString
_CapacityObjectName_Object = MibTableColumn
capacityObjectName = _CapacityObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 850, 1, 2),
    _CapacityObjectName_Type()
)
capacityObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    capacityObjectName.setStatus("current")
_CapacityType_Type = OctetString
_CapacityType_Object = MibTableColumn
capacityType = _CapacityType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 850, 1, 3),
    _CapacityType_Type()
)
capacityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    capacityType.setStatus("current")
_CapacityDeploymentOrder_Type = Integer32
_CapacityDeploymentOrder_Object = MibTableColumn
capacityDeploymentOrder = _CapacityDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 850, 1, 4),
    _CapacityDeploymentOrder_Type()
)
capacityDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    capacityDeploymentOrder.setStatus("current")
_CapacityCount_Type = Integer32
_CapacityCount_Object = MibTableColumn
capacityCount = _CapacityCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 850, 1, 5),
    _CapacityCount_Type()
)
capacityCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    capacityCount.setStatus("current")
_CapacityName_Type = OctetString
_CapacityName_Object = MibTableColumn
capacityName = _CapacityName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 850, 1, 6),
    _CapacityName_Type()
)
capacityName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    capacityName.setStatus("current")
_ConfigurationPropertyTable_Object = MibTable
configurationPropertyTable = _ConfigurationPropertyTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 855)
)
if mibBuilder.loadTexts:
    configurationPropertyTable.setStatus("current")
_ConfigurationPropertyEntry_Object = MibTableRow
configurationPropertyEntry = _ConfigurationPropertyEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 855, 1)
)
configurationPropertyEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "configurationPropertyIndex"),
)
if mibBuilder.loadTexts:
    configurationPropertyEntry.setStatus("current")
_ConfigurationPropertyIndex_Type = OctetString
_ConfigurationPropertyIndex_Object = MibTableColumn
configurationPropertyIndex = _ConfigurationPropertyIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 855, 1, 1),
    _ConfigurationPropertyIndex_Type()
)
configurationPropertyIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    configurationPropertyIndex.setStatus("current")
_ConfigurationPropertyObjectName_Type = OctetString
_ConfigurationPropertyObjectName_Object = MibTableColumn
configurationPropertyObjectName = _ConfigurationPropertyObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 855, 1, 2),
    _ConfigurationPropertyObjectName_Type()
)
configurationPropertyObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    configurationPropertyObjectName.setStatus("current")
_ConfigurationPropertyType_Type = OctetString
_ConfigurationPropertyType_Object = MibTableColumn
configurationPropertyType = _ConfigurationPropertyType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 855, 1, 3),
    _ConfigurationPropertyType_Type()
)
configurationPropertyType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    configurationPropertyType.setStatus("current")
_ConfigurationPropertyEncryptValueRequired_Type = OctetString
_ConfigurationPropertyEncryptValueRequired_Object = MibTableColumn
configurationPropertyEncryptValueRequired = _ConfigurationPropertyEncryptValueRequired_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 855, 1, 4),
    _ConfigurationPropertyEncryptValueRequired_Type()
)
configurationPropertyEncryptValueRequired.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    configurationPropertyEncryptValueRequired.setStatus("current")
_ConfigurationPropertyValue_Type = OctetString
_ConfigurationPropertyValue_Object = MibTableColumn
configurationPropertyValue = _ConfigurationPropertyValue_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 855, 1, 5),
    _ConfigurationPropertyValue_Type()
)
configurationPropertyValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    configurationPropertyValue.setStatus("current")
_ConfigurationPropertyName_Type = OctetString
_ConfigurationPropertyName_Object = MibTableColumn
configurationPropertyName = _ConfigurationPropertyName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 855, 1, 6),
    _ConfigurationPropertyName_Type()
)
configurationPropertyName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    configurationPropertyName.setStatus("current")
_ContextCaseTable_Object = MibTable
contextCaseTable = _ContextCaseTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 860)
)
if mibBuilder.loadTexts:
    contextCaseTable.setStatus("current")
_ContextCaseEntry_Object = MibTableRow
contextCaseEntry = _ContextCaseEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 860, 1)
)
contextCaseEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "contextCaseIndex"),
)
if mibBuilder.loadTexts:
    contextCaseEntry.setStatus("current")
_ContextCaseIndex_Type = OctetString
_ContextCaseIndex_Object = MibTableColumn
contextCaseIndex = _ContextCaseIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 860, 1, 1),
    _ContextCaseIndex_Type()
)
contextCaseIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    contextCaseIndex.setStatus("current")
_ContextCaseObjectName_Type = OctetString
_ContextCaseObjectName_Object = MibTableColumn
contextCaseObjectName = _ContextCaseObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 860, 1, 2),
    _ContextCaseObjectName_Type()
)
contextCaseObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contextCaseObjectName.setStatus("current")
_ContextCaseType_Type = OctetString
_ContextCaseType_Object = MibTableColumn
contextCaseType = _ContextCaseType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 860, 1, 3),
    _ContextCaseType_Type()
)
contextCaseType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contextCaseType.setStatus("current")
_ContextCaseRequestClassName_Type = OctetString
_ContextCaseRequestClassName_Object = MibTableColumn
contextCaseRequestClassName = _ContextCaseRequestClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 860, 1, 4),
    _ContextCaseRequestClassName_Type()
)
contextCaseRequestClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contextCaseRequestClassName.setStatus("current")
_ContextCaseDeploymentOrder_Type = Integer32
_ContextCaseDeploymentOrder_Object = MibTableColumn
contextCaseDeploymentOrder = _ContextCaseDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 860, 1, 5),
    _ContextCaseDeploymentOrder_Type()
)
contextCaseDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contextCaseDeploymentOrder.setStatus("current")
_ContextCaseGroupName_Type = OctetString
_ContextCaseGroupName_Object = MibTableColumn
contextCaseGroupName = _ContextCaseGroupName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 860, 1, 6),
    _ContextCaseGroupName_Type()
)
contextCaseGroupName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contextCaseGroupName.setStatus("current")
_ContextCaseName_Type = OctetString
_ContextCaseName_Object = MibTableColumn
contextCaseName = _ContextCaseName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 860, 1, 7),
    _ContextCaseName_Type()
)
contextCaseName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contextCaseName.setStatus("current")
_ContextCaseUserName_Type = OctetString
_ContextCaseUserName_Object = MibTableColumn
contextCaseUserName = _ContextCaseUserName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 860, 1, 8),
    _ContextCaseUserName_Type()
)
contextCaseUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contextCaseUserName.setStatus("current")
_ContextRequestClassTable_Object = MibTable
contextRequestClassTable = _ContextRequestClassTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 865)
)
if mibBuilder.loadTexts:
    contextRequestClassTable.setStatus("current")
_ContextRequestClassEntry_Object = MibTableRow
contextRequestClassEntry = _ContextRequestClassEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 865, 1)
)
contextRequestClassEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "contextRequestClassIndex"),
)
if mibBuilder.loadTexts:
    contextRequestClassEntry.setStatus("current")
_ContextRequestClassIndex_Type = OctetString
_ContextRequestClassIndex_Object = MibTableColumn
contextRequestClassIndex = _ContextRequestClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 865, 1, 1),
    _ContextRequestClassIndex_Type()
)
contextRequestClassIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    contextRequestClassIndex.setStatus("current")
_ContextRequestClassObjectName_Type = OctetString
_ContextRequestClassObjectName_Object = MibTableColumn
contextRequestClassObjectName = _ContextRequestClassObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 865, 1, 2),
    _ContextRequestClassObjectName_Type()
)
contextRequestClassObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contextRequestClassObjectName.setStatus("current")
_ContextRequestClassType_Type = OctetString
_ContextRequestClassType_Object = MibTableColumn
contextRequestClassType = _ContextRequestClassType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 865, 1, 3),
    _ContextRequestClassType_Type()
)
contextRequestClassType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contextRequestClassType.setStatus("current")
_ContextRequestClassDeploymentOrder_Type = Integer32
_ContextRequestClassDeploymentOrder_Object = MibTableColumn
contextRequestClassDeploymentOrder = _ContextRequestClassDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 865, 1, 4),
    _ContextRequestClassDeploymentOrder_Type()
)
contextRequestClassDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contextRequestClassDeploymentOrder.setStatus("current")
_ContextRequestClassName_Type = OctetString
_ContextRequestClassName_Object = MibTableColumn
contextRequestClassName = _ContextRequestClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 865, 1, 5),
    _ContextRequestClassName_Type()
)
contextRequestClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contextRequestClassName.setStatus("current")
_ConversationServiceTable_Object = MibTable
conversationServiceTable = _ConversationServiceTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 870)
)
if mibBuilder.loadTexts:
    conversationServiceTable.setStatus("current")
_ConversationServiceEntry_Object = MibTableRow
conversationServiceEntry = _ConversationServiceEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 870, 1)
)
conversationServiceEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "conversationServiceIndex"),
)
if mibBuilder.loadTexts:
    conversationServiceEntry.setStatus("current")
_ConversationServiceIndex_Type = OctetString
_ConversationServiceIndex_Object = MibTableColumn
conversationServiceIndex = _ConversationServiceIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 870, 1, 1),
    _ConversationServiceIndex_Type()
)
conversationServiceIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    conversationServiceIndex.setStatus("current")
_ConversationServiceObjectName_Type = OctetString
_ConversationServiceObjectName_Object = MibTableColumn
conversationServiceObjectName = _ConversationServiceObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 870, 1, 2),
    _ConversationServiceObjectName_Type()
)
conversationServiceObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    conversationServiceObjectName.setStatus("current")
_ConversationServiceType_Type = OctetString
_ConversationServiceType_Object = MibTableColumn
conversationServiceType = _ConversationServiceType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 870, 1, 3),
    _ConversationServiceType_Type()
)
conversationServiceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    conversationServiceType.setStatus("current")
_ConversationServiceDeploymentOrder_Type = Integer32
_ConversationServiceDeploymentOrder_Object = MibTableColumn
conversationServiceDeploymentOrder = _ConversationServiceDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 870, 1, 4),
    _ConversationServiceDeploymentOrder_Type()
)
conversationServiceDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    conversationServiceDeploymentOrder.setStatus("current")
_ConversationServiceName_Type = OctetString
_ConversationServiceName_Object = MibTableColumn
conversationServiceName = _ConversationServiceName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 870, 1, 5),
    _ConversationServiceName_Type()
)
conversationServiceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    conversationServiceName.setStatus("current")
_CustomResourceTable_Object = MibTable
customResourceTable = _CustomResourceTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 875)
)
if mibBuilder.loadTexts:
    customResourceTable.setStatus("current")
_CustomResourceEntry_Object = MibTableRow
customResourceEntry = _CustomResourceEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 875, 1)
)
customResourceEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "customResourceIndex"),
)
if mibBuilder.loadTexts:
    customResourceEntry.setStatus("current")
_CustomResourceIndex_Type = OctetString
_CustomResourceIndex_Object = MibTableColumn
customResourceIndex = _CustomResourceIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 875, 1, 1),
    _CustomResourceIndex_Type()
)
customResourceIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    customResourceIndex.setStatus("current")
_CustomResourceObjectName_Type = OctetString
_CustomResourceObjectName_Object = MibTableColumn
customResourceObjectName = _CustomResourceObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 875, 1, 2),
    _CustomResourceObjectName_Type()
)
customResourceObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    customResourceObjectName.setStatus("current")
_CustomResourceType_Type = OctetString
_CustomResourceType_Object = MibTableColumn
customResourceType = _CustomResourceType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 875, 1, 3),
    _CustomResourceType_Type()
)
customResourceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    customResourceType.setStatus("current")
_CustomResourceResourceClass_Type = OctetString
_CustomResourceResourceClass_Object = MibTableColumn
customResourceResourceClass = _CustomResourceResourceClass_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 875, 1, 4),
    _CustomResourceResourceClass_Type()
)
customResourceResourceClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    customResourceResourceClass.setStatus("current")
_CustomResourceCompatibilityName_Type = OctetString
_CustomResourceCompatibilityName_Object = MibTableColumn
customResourceCompatibilityName = _CustomResourceCompatibilityName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 875, 1, 5),
    _CustomResourceCompatibilityName_Type()
)
customResourceCompatibilityName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    customResourceCompatibilityName.setStatus("current")
_CustomResourceDeploymentOrder_Type = Integer32
_CustomResourceDeploymentOrder_Object = MibTableColumn
customResourceDeploymentOrder = _CustomResourceDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 875, 1, 6),
    _CustomResourceDeploymentOrder_Type()
)
customResourceDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    customResourceDeploymentOrder.setStatus("current")
_CustomResourceDescriptorBeanClass_Type = OctetString
_CustomResourceDescriptorBeanClass_Object = MibTableColumn
customResourceDescriptorBeanClass = _CustomResourceDescriptorBeanClass_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 875, 1, 7),
    _CustomResourceDescriptorBeanClass_Type()
)
customResourceDescriptorBeanClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    customResourceDescriptorBeanClass.setStatus("current")
_CustomResourceDeploymentPrincipalName_Type = OctetString
_CustomResourceDeploymentPrincipalName_Object = MibTableColumn
customResourceDeploymentPrincipalName = _CustomResourceDeploymentPrincipalName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 875, 1, 8),
    _CustomResourceDeploymentPrincipalName_Type()
)
customResourceDeploymentPrincipalName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    customResourceDeploymentPrincipalName.setStatus("current")
_CustomResourceDescriptorFileName_Type = OctetString
_CustomResourceDescriptorFileName_Object = MibTableColumn
customResourceDescriptorFileName = _CustomResourceDescriptorFileName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 875, 1, 9),
    _CustomResourceDescriptorFileName_Type()
)
customResourceDescriptorFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    customResourceDescriptorFileName.setStatus("current")
_CustomResourceModuleType_Type = OctetString
_CustomResourceModuleType_Object = MibTableColumn
customResourceModuleType = _CustomResourceModuleType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 875, 1, 10),
    _CustomResourceModuleType_Type()
)
customResourceModuleType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    customResourceModuleType.setStatus("current")
_CustomResourceName_Type = OctetString
_CustomResourceName_Object = MibTableColumn
customResourceName = _CustomResourceName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 875, 1, 11),
    _CustomResourceName_Type()
)
customResourceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    customResourceName.setStatus("current")
_CustomResourceSourcePath_Type = OctetString
_CustomResourceSourcePath_Object = MibTableColumn
customResourceSourcePath = _CustomResourceSourcePath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 875, 1, 12),
    _CustomResourceSourcePath_Type()
)
customResourceSourcePath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    customResourceSourcePath.setStatus("current")
_DatabaseLessLeasingBasisTable_Object = MibTable
databaseLessLeasingBasisTable = _DatabaseLessLeasingBasisTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 880)
)
if mibBuilder.loadTexts:
    databaseLessLeasingBasisTable.setStatus("current")
_DatabaseLessLeasingBasisEntry_Object = MibTableRow
databaseLessLeasingBasisEntry = _DatabaseLessLeasingBasisEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 880, 1)
)
databaseLessLeasingBasisEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "databaseLessLeasingBasisIndex"),
)
if mibBuilder.loadTexts:
    databaseLessLeasingBasisEntry.setStatus("current")
_DatabaseLessLeasingBasisIndex_Type = OctetString
_DatabaseLessLeasingBasisIndex_Object = MibTableColumn
databaseLessLeasingBasisIndex = _DatabaseLessLeasingBasisIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 880, 1, 1),
    _DatabaseLessLeasingBasisIndex_Type()
)
databaseLessLeasingBasisIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    databaseLessLeasingBasisIndex.setStatus("current")
_DatabaseLessLeasingBasisObjectName_Type = OctetString
_DatabaseLessLeasingBasisObjectName_Object = MibTableColumn
databaseLessLeasingBasisObjectName = _DatabaseLessLeasingBasisObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 880, 1, 2),
    _DatabaseLessLeasingBasisObjectName_Type()
)
databaseLessLeasingBasisObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    databaseLessLeasingBasisObjectName.setStatus("current")
_DatabaseLessLeasingBasisType_Type = OctetString
_DatabaseLessLeasingBasisType_Object = MibTableColumn
databaseLessLeasingBasisType = _DatabaseLessLeasingBasisType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 880, 1, 3),
    _DatabaseLessLeasingBasisType_Type()
)
databaseLessLeasingBasisType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    databaseLessLeasingBasisType.setStatus("current")
_DatabaseLessLeasingBasisMemberDiscoveryTimeout_Type = Integer32
_DatabaseLessLeasingBasisMemberDiscoveryTimeout_Object = MibTableColumn
databaseLessLeasingBasisMemberDiscoveryTimeout = _DatabaseLessLeasingBasisMemberDiscoveryTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 880, 1, 4),
    _DatabaseLessLeasingBasisMemberDiscoveryTimeout_Type()
)
databaseLessLeasingBasisMemberDiscoveryTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    databaseLessLeasingBasisMemberDiscoveryTimeout.setStatus("current")
_DatabaseLessLeasingBasisName_Type = OctetString
_DatabaseLessLeasingBasisName_Object = MibTableColumn
databaseLessLeasingBasisName = _DatabaseLessLeasingBasisName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 880, 1, 5),
    _DatabaseLessLeasingBasisName_Type()
)
databaseLessLeasingBasisName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    databaseLessLeasingBasisName.setStatus("current")
_DebugScopeTable_Object = MibTable
debugScopeTable = _DebugScopeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 885)
)
if mibBuilder.loadTexts:
    debugScopeTable.setStatus("current")
_DebugScopeEntry_Object = MibTableRow
debugScopeEntry = _DebugScopeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 885, 1)
)
debugScopeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "debugScopeIndex"),
)
if mibBuilder.loadTexts:
    debugScopeEntry.setStatus("current")
_DebugScopeIndex_Type = OctetString
_DebugScopeIndex_Object = MibTableColumn
debugScopeIndex = _DebugScopeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 885, 1, 1),
    _DebugScopeIndex_Type()
)
debugScopeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    debugScopeIndex.setStatus("current")
_DebugScopeObjectName_Type = OctetString
_DebugScopeObjectName_Object = MibTableColumn
debugScopeObjectName = _DebugScopeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 885, 1, 2),
    _DebugScopeObjectName_Type()
)
debugScopeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    debugScopeObjectName.setStatus("current")
_DebugScopeType_Type = OctetString
_DebugScopeType_Object = MibTableColumn
debugScopeType = _DebugScopeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 885, 1, 3),
    _DebugScopeType_Type()
)
debugScopeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    debugScopeType.setStatus("current")
_DefaultFileStoreTable_Object = MibTable
defaultFileStoreTable = _DefaultFileStoreTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 890)
)
if mibBuilder.loadTexts:
    defaultFileStoreTable.setStatus("current")
_DefaultFileStoreEntry_Object = MibTableRow
defaultFileStoreEntry = _DefaultFileStoreEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 890, 1)
)
defaultFileStoreEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "defaultFileStoreIndex"),
)
if mibBuilder.loadTexts:
    defaultFileStoreEntry.setStatus("current")
_DefaultFileStoreIndex_Type = OctetString
_DefaultFileStoreIndex_Object = MibTableColumn
defaultFileStoreIndex = _DefaultFileStoreIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 890, 1, 1),
    _DefaultFileStoreIndex_Type()
)
defaultFileStoreIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    defaultFileStoreIndex.setStatus("current")
_DefaultFileStoreObjectName_Type = OctetString
_DefaultFileStoreObjectName_Object = MibTableColumn
defaultFileStoreObjectName = _DefaultFileStoreObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 890, 1, 2),
    _DefaultFileStoreObjectName_Type()
)
defaultFileStoreObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    defaultFileStoreObjectName.setStatus("current")
_DefaultFileStoreType_Type = OctetString
_DefaultFileStoreType_Object = MibTableColumn
defaultFileStoreType = _DefaultFileStoreType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 890, 1, 3),
    _DefaultFileStoreType_Type()
)
defaultFileStoreType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    defaultFileStoreType.setStatus("current")
_DefaultFileStoreName_Type = OctetString
_DefaultFileStoreName_Object = MibTableColumn
defaultFileStoreName = _DefaultFileStoreName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 890, 1, 4),
    _DefaultFileStoreName_Type()
)
defaultFileStoreName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    defaultFileStoreName.setStatus("current")
_DeploymentConfigurationTable_Object = MibTable
deploymentConfigurationTable = _DeploymentConfigurationTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 895)
)
if mibBuilder.loadTexts:
    deploymentConfigurationTable.setStatus("current")
_DeploymentConfigurationEntry_Object = MibTableRow
deploymentConfigurationEntry = _DeploymentConfigurationEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 895, 1)
)
deploymentConfigurationEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "deploymentConfigurationIndex"),
)
if mibBuilder.loadTexts:
    deploymentConfigurationEntry.setStatus("current")
_DeploymentConfigurationIndex_Type = OctetString
_DeploymentConfigurationIndex_Object = MibTableColumn
deploymentConfigurationIndex = _DeploymentConfigurationIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 895, 1, 1),
    _DeploymentConfigurationIndex_Type()
)
deploymentConfigurationIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    deploymentConfigurationIndex.setStatus("current")
_DeploymentConfigurationObjectName_Type = OctetString
_DeploymentConfigurationObjectName_Object = MibTableColumn
deploymentConfigurationObjectName = _DeploymentConfigurationObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 895, 1, 2),
    _DeploymentConfigurationObjectName_Type()
)
deploymentConfigurationObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentConfigurationObjectName.setStatus("current")
_DeploymentConfigurationType_Type = OctetString
_DeploymentConfigurationType_Object = MibTableColumn
deploymentConfigurationType = _DeploymentConfigurationType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 895, 1, 3),
    _DeploymentConfigurationType_Type()
)
deploymentConfigurationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentConfigurationType.setStatus("current")
_DeploymentConfigurationRemoteDeployerEJBEnabled_Type = OctetString
_DeploymentConfigurationRemoteDeployerEJBEnabled_Object = MibTableColumn
deploymentConfigurationRemoteDeployerEJBEnabled = _DeploymentConfigurationRemoteDeployerEJBEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 895, 1, 4),
    _DeploymentConfigurationRemoteDeployerEJBEnabled_Type()
)
deploymentConfigurationRemoteDeployerEJBEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentConfigurationRemoteDeployerEJBEnabled.setStatus("current")
_DeploymentConfigurationName_Type = OctetString
_DeploymentConfigurationName_Object = MibTableColumn
deploymentConfigurationName = _DeploymentConfigurationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 895, 1, 5),
    _DeploymentConfigurationName_Type()
)
deploymentConfigurationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentConfigurationName.setStatus("current")
_DomainLibraryTable_Object = MibTable
domainLibraryTable = _DomainLibraryTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900)
)
if mibBuilder.loadTexts:
    domainLibraryTable.setStatus("current")
_DomainLibraryEntry_Object = MibTableRow
domainLibraryEntry = _DomainLibraryEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1)
)
domainLibraryEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "domainLibraryIndex"),
)
if mibBuilder.loadTexts:
    domainLibraryEntry.setStatus("current")
_DomainLibraryIndex_Type = OctetString
_DomainLibraryIndex_Object = MibTableColumn
domainLibraryIndex = _DomainLibraryIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 1),
    _DomainLibraryIndex_Type()
)
domainLibraryIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    domainLibraryIndex.setStatus("current")
_DomainLibraryObjectName_Type = OctetString
_DomainLibraryObjectName_Object = MibTableColumn
domainLibraryObjectName = _DomainLibraryObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 2),
    _DomainLibraryObjectName_Type()
)
domainLibraryObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLibraryObjectName.setStatus("current")
_DomainLibraryType_Type = OctetString
_DomainLibraryType_Object = MibTableColumn
domainLibraryType = _DomainLibraryType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 3),
    _DomainLibraryType_Type()
)
domainLibraryType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLibraryType.setStatus("current")
_DomainLibraryCompatibilityName_Type = OctetString
_DomainLibraryCompatibilityName_Object = MibTableColumn
domainLibraryCompatibilityName = _DomainLibraryCompatibilityName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 4),
    _DomainLibraryCompatibilityName_Type()
)
domainLibraryCompatibilityName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLibraryCompatibilityName.setStatus("current")
_DomainLibraryApplicationName_Type = OctetString
_DomainLibraryApplicationName_Object = MibTableColumn
domainLibraryApplicationName = _DomainLibraryApplicationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 5),
    _DomainLibraryApplicationName_Type()
)
domainLibraryApplicationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLibraryApplicationName.setStatus("current")
_DomainLibraryAbsolutePlanDir_Type = OctetString
_DomainLibraryAbsolutePlanDir_Object = MibTableColumn
domainLibraryAbsolutePlanDir = _DomainLibraryAbsolutePlanDir_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 6),
    _DomainLibraryAbsolutePlanDir_Type()
)
domainLibraryAbsolutePlanDir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLibraryAbsolutePlanDir.setStatus("current")
_DomainLibraryAbsolutePlanPath_Type = OctetString
_DomainLibraryAbsolutePlanPath_Object = MibTableColumn
domainLibraryAbsolutePlanPath = _DomainLibraryAbsolutePlanPath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 7),
    _DomainLibraryAbsolutePlanPath_Type()
)
domainLibraryAbsolutePlanPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLibraryAbsolutePlanPath.setStatus("current")
_DomainLibraryStagingMode_Type = OctetString
_DomainLibraryStagingMode_Object = MibTableColumn
domainLibraryStagingMode = _DomainLibraryStagingMode_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 8),
    _DomainLibraryStagingMode_Type()
)
domainLibraryStagingMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLibraryStagingMode.setStatus("current")
_DomainLibraryInstallDir_Type = OctetString
_DomainLibraryInstallDir_Object = MibTableColumn
domainLibraryInstallDir = _DomainLibraryInstallDir_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 9),
    _DomainLibraryInstallDir_Type()
)
domainLibraryInstallDir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLibraryInstallDir.setStatus("current")
_DomainLibraryValidateDDSecurityData_Type = OctetString
_DomainLibraryValidateDDSecurityData_Object = MibTableColumn
domainLibraryValidateDDSecurityData = _DomainLibraryValidateDDSecurityData_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 10),
    _DomainLibraryValidateDDSecurityData_Type()
)
domainLibraryValidateDDSecurityData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLibraryValidateDDSecurityData.setStatus("current")
_DomainLibraryName_Type = OctetString
_DomainLibraryName_Object = MibTableColumn
domainLibraryName = _DomainLibraryName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 11),
    _DomainLibraryName_Type()
)
domainLibraryName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLibraryName.setStatus("current")
_DomainLibraryAbsoluteSourcePath_Type = OctetString
_DomainLibraryAbsoluteSourcePath_Object = MibTableColumn
domainLibraryAbsoluteSourcePath = _DomainLibraryAbsoluteSourcePath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 12),
    _DomainLibraryAbsoluteSourcePath_Type()
)
domainLibraryAbsoluteSourcePath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLibraryAbsoluteSourcePath.setStatus("current")
_DomainLibrarySourcePath_Type = OctetString
_DomainLibrarySourcePath_Object = MibTableColumn
domainLibrarySourcePath = _DomainLibrarySourcePath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 13),
    _DomainLibrarySourcePath_Type()
)
domainLibrarySourcePath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLibrarySourcePath.setStatus("current")
_DomainLibraryAbsoluteInstallDir_Type = OctetString
_DomainLibraryAbsoluteInstallDir_Object = MibTableColumn
domainLibraryAbsoluteInstallDir = _DomainLibraryAbsoluteInstallDir_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 14),
    _DomainLibraryAbsoluteInstallDir_Type()
)
domainLibraryAbsoluteInstallDir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLibraryAbsoluteInstallDir.setStatus("current")
_DomainLibraryDeploymentOrder_Type = Integer32
_DomainLibraryDeploymentOrder_Object = MibTableColumn
domainLibraryDeploymentOrder = _DomainLibraryDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 15),
    _DomainLibraryDeploymentOrder_Type()
)
domainLibraryDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLibraryDeploymentOrder.setStatus("current")
_DomainLibrarySecurityDDModel_Type = OctetString
_DomainLibrarySecurityDDModel_Object = MibTableColumn
domainLibrarySecurityDDModel = _DomainLibrarySecurityDDModel_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 16),
    _DomainLibrarySecurityDDModel_Type()
)
domainLibrarySecurityDDModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLibrarySecurityDDModel.setStatus("current")
_DomainLibraryApplicationIdentifier_Type = OctetString
_DomainLibraryApplicationIdentifier_Object = MibTableColumn
domainLibraryApplicationIdentifier = _DomainLibraryApplicationIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 17),
    _DomainLibraryApplicationIdentifier_Type()
)
domainLibraryApplicationIdentifier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLibraryApplicationIdentifier.setStatus("current")
_DomainLibraryDeploymentPrincipalName_Type = OctetString
_DomainLibraryDeploymentPrincipalName_Object = MibTableColumn
domainLibraryDeploymentPrincipalName = _DomainLibraryDeploymentPrincipalName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 18),
    _DomainLibraryDeploymentPrincipalName_Type()
)
domainLibraryDeploymentPrincipalName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLibraryDeploymentPrincipalName.setStatus("current")
_DomainLibraryPlanDir_Type = OctetString
_DomainLibraryPlanDir_Object = MibTableColumn
domainLibraryPlanDir = _DomainLibraryPlanDir_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 19),
    _DomainLibraryPlanDir_Type()
)
domainLibraryPlanDir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLibraryPlanDir.setStatus("current")
_DomainLibraryPlanPath_Type = OctetString
_DomainLibraryPlanPath_Object = MibTableColumn
domainLibraryPlanPath = _DomainLibraryPlanPath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 20),
    _DomainLibraryPlanPath_Type()
)
domainLibraryPlanPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLibraryPlanPath.setStatus("current")
_DomainLibraryVersionIdentifier_Type = OctetString
_DomainLibraryVersionIdentifier_Object = MibTableColumn
domainLibraryVersionIdentifier = _DomainLibraryVersionIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 21),
    _DomainLibraryVersionIdentifier_Type()
)
domainLibraryVersionIdentifier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLibraryVersionIdentifier.setStatus("current")
_DomainLibraryModuleType_Type = OctetString
_DomainLibraryModuleType_Object = MibTableColumn
domainLibraryModuleType = _DomainLibraryModuleType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 900, 1, 22),
    _DomainLibraryModuleType_Type()
)
domainLibraryModuleType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    domainLibraryModuleType.setStatus("current")
_EmbeddedLDAPTable_Object = MibTable
embeddedLDAPTable = _EmbeddedLDAPTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 905)
)
if mibBuilder.loadTexts:
    embeddedLDAPTable.setStatus("current")
_EmbeddedLDAPEntry_Object = MibTableRow
embeddedLDAPEntry = _EmbeddedLDAPEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 905, 1)
)
embeddedLDAPEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "embeddedLDAPIndex"),
)
if mibBuilder.loadTexts:
    embeddedLDAPEntry.setStatus("current")
_EmbeddedLDAPIndex_Type = OctetString
_EmbeddedLDAPIndex_Object = MibTableColumn
embeddedLDAPIndex = _EmbeddedLDAPIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 905, 1, 1),
    _EmbeddedLDAPIndex_Type()
)
embeddedLDAPIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    embeddedLDAPIndex.setStatus("current")
_EmbeddedLDAPObjectName_Type = OctetString
_EmbeddedLDAPObjectName_Object = MibTableColumn
embeddedLDAPObjectName = _EmbeddedLDAPObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 905, 1, 2),
    _EmbeddedLDAPObjectName_Type()
)
embeddedLDAPObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    embeddedLDAPObjectName.setStatus("current")
_EmbeddedLDAPType_Type = OctetString
_EmbeddedLDAPType_Object = MibTableColumn
embeddedLDAPType = _EmbeddedLDAPType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 905, 1, 3),
    _EmbeddedLDAPType_Type()
)
embeddedLDAPType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    embeddedLDAPType.setStatus("current")
_EmbeddedLDAPTimeout_Type = Integer32
_EmbeddedLDAPTimeout_Object = MibTableColumn
embeddedLDAPTimeout = _EmbeddedLDAPTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 905, 1, 4),
    _EmbeddedLDAPTimeout_Type()
)
embeddedLDAPTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    embeddedLDAPTimeout.setStatus("current")
_EmbeddedLDAPAnonymousBindAllowed_Type = OctetString
_EmbeddedLDAPAnonymousBindAllowed_Object = MibTableColumn
embeddedLDAPAnonymousBindAllowed = _EmbeddedLDAPAnonymousBindAllowed_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 905, 1, 5),
    _EmbeddedLDAPAnonymousBindAllowed_Type()
)
embeddedLDAPAnonymousBindAllowed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    embeddedLDAPAnonymousBindAllowed.setStatus("current")
_EmbeddedLDAPMasterFirst_Type = OctetString
_EmbeddedLDAPMasterFirst_Object = MibTableColumn
embeddedLDAPMasterFirst = _EmbeddedLDAPMasterFirst_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 905, 1, 6),
    _EmbeddedLDAPMasterFirst_Type()
)
embeddedLDAPMasterFirst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    embeddedLDAPMasterFirst.setStatus("current")
_EmbeddedLDAPCacheTTL_Type = Integer32
_EmbeddedLDAPCacheTTL_Object = MibTableColumn
embeddedLDAPCacheTTL = _EmbeddedLDAPCacheTTL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 905, 1, 7),
    _EmbeddedLDAPCacheTTL_Type()
)
embeddedLDAPCacheTTL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    embeddedLDAPCacheTTL.setStatus("current")
_EmbeddedLDAPBackupCopies_Type = Integer32
_EmbeddedLDAPBackupCopies_Object = MibTableColumn
embeddedLDAPBackupCopies = _EmbeddedLDAPBackupCopies_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 905, 1, 8),
    _EmbeddedLDAPBackupCopies_Type()
)
embeddedLDAPBackupCopies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    embeddedLDAPBackupCopies.setStatus("current")
_EmbeddedLDAPRefreshReplicaAtStartup_Type = OctetString
_EmbeddedLDAPRefreshReplicaAtStartup_Object = MibTableColumn
embeddedLDAPRefreshReplicaAtStartup = _EmbeddedLDAPRefreshReplicaAtStartup_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 905, 1, 9),
    _EmbeddedLDAPRefreshReplicaAtStartup_Type()
)
embeddedLDAPRefreshReplicaAtStartup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    embeddedLDAPRefreshReplicaAtStartup.setStatus("current")
_EmbeddedLDAPBackupMinute_Type = Integer32
_EmbeddedLDAPBackupMinute_Object = MibTableColumn
embeddedLDAPBackupMinute = _EmbeddedLDAPBackupMinute_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 905, 1, 10),
    _EmbeddedLDAPBackupMinute_Type()
)
embeddedLDAPBackupMinute.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    embeddedLDAPBackupMinute.setStatus("current")
_EmbeddedLDAPCacheSize_Type = Integer32
_EmbeddedLDAPCacheSize_Object = MibTableColumn
embeddedLDAPCacheSize = _EmbeddedLDAPCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 905, 1, 11),
    _EmbeddedLDAPCacheSize_Type()
)
embeddedLDAPCacheSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    embeddedLDAPCacheSize.setStatus("current")
_EmbeddedLDAPBackupHour_Type = Integer32
_EmbeddedLDAPBackupHour_Object = MibTableColumn
embeddedLDAPBackupHour = _EmbeddedLDAPBackupHour_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 905, 1, 12),
    _EmbeddedLDAPBackupHour_Type()
)
embeddedLDAPBackupHour.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    embeddedLDAPBackupHour.setStatus("current")
_EmbeddedLDAPName_Type = OctetString
_EmbeddedLDAPName_Object = MibTableColumn
embeddedLDAPName = _EmbeddedLDAPName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 905, 1, 13),
    _EmbeddedLDAPName_Type()
)
embeddedLDAPName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    embeddedLDAPName.setStatus("current")
_EmbeddedLDAPCacheEnabled_Type = OctetString
_EmbeddedLDAPCacheEnabled_Object = MibTableColumn
embeddedLDAPCacheEnabled = _EmbeddedLDAPCacheEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 905, 1, 14),
    _EmbeddedLDAPCacheEnabled_Type()
)
embeddedLDAPCacheEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    embeddedLDAPCacheEnabled.setStatus("current")
_ErrorHandlingTable_Object = MibTable
errorHandlingTable = _ErrorHandlingTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 910)
)
if mibBuilder.loadTexts:
    errorHandlingTable.setStatus("current")
_ErrorHandlingEntry_Object = MibTableRow
errorHandlingEntry = _ErrorHandlingEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 910, 1)
)
errorHandlingEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "errorHandlingIndex"),
)
if mibBuilder.loadTexts:
    errorHandlingEntry.setStatus("current")
_ErrorHandlingIndex_Type = OctetString
_ErrorHandlingIndex_Object = MibTableColumn
errorHandlingIndex = _ErrorHandlingIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 910, 1, 1),
    _ErrorHandlingIndex_Type()
)
errorHandlingIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    errorHandlingIndex.setStatus("current")
_ErrorHandlingObjectName_Type = OctetString
_ErrorHandlingObjectName_Object = MibTableColumn
errorHandlingObjectName = _ErrorHandlingObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 910, 1, 2),
    _ErrorHandlingObjectName_Type()
)
errorHandlingObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    errorHandlingObjectName.setStatus("current")
_ErrorHandlingType_Type = OctetString
_ErrorHandlingType_Object = MibTableColumn
errorHandlingType = _ErrorHandlingType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 910, 1, 3),
    _ErrorHandlingType_Type()
)
errorHandlingType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    errorHandlingType.setStatus("current")
_ErrorHandlingLogPolicy_Type = OctetString
_ErrorHandlingLogPolicy_Object = MibTableColumn
errorHandlingLogPolicy = _ErrorHandlingLogPolicy_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 910, 1, 4),
    _ErrorHandlingLogPolicy_Type()
)
errorHandlingLogPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    errorHandlingLogPolicy.setStatus("current")
_ErrorHandlingPolicy_Type = OctetString
_ErrorHandlingPolicy_Object = MibTableColumn
errorHandlingPolicy = _ErrorHandlingPolicy_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 910, 1, 5),
    _ErrorHandlingPolicy_Type()
)
errorHandlingPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    errorHandlingPolicy.setStatus("current")
_ErrorHandlingName_Type = OctetString
_ErrorHandlingName_Object = MibTableColumn
errorHandlingName = _ErrorHandlingName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 910, 1, 6),
    _ErrorHandlingName_Type()
)
errorHandlingName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    errorHandlingName.setStatus("current")
_FairShareRequestClassTable_Object = MibTable
fairShareRequestClassTable = _FairShareRequestClassTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 915)
)
if mibBuilder.loadTexts:
    fairShareRequestClassTable.setStatus("current")
_FairShareRequestClassEntry_Object = MibTableRow
fairShareRequestClassEntry = _FairShareRequestClassEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 915, 1)
)
fairShareRequestClassEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "fairShareRequestClassIndex"),
)
if mibBuilder.loadTexts:
    fairShareRequestClassEntry.setStatus("current")
_FairShareRequestClassIndex_Type = OctetString
_FairShareRequestClassIndex_Object = MibTableColumn
fairShareRequestClassIndex = _FairShareRequestClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 915, 1, 1),
    _FairShareRequestClassIndex_Type()
)
fairShareRequestClassIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    fairShareRequestClassIndex.setStatus("current")
_FairShareRequestClassObjectName_Type = OctetString
_FairShareRequestClassObjectName_Object = MibTableColumn
fairShareRequestClassObjectName = _FairShareRequestClassObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 915, 1, 2),
    _FairShareRequestClassObjectName_Type()
)
fairShareRequestClassObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fairShareRequestClassObjectName.setStatus("current")
_FairShareRequestClassType_Type = OctetString
_FairShareRequestClassType_Object = MibTableColumn
fairShareRequestClassType = _FairShareRequestClassType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 915, 1, 3),
    _FairShareRequestClassType_Type()
)
fairShareRequestClassType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fairShareRequestClassType.setStatus("current")
_FairShareRequestClassDeploymentOrder_Type = Integer32
_FairShareRequestClassDeploymentOrder_Object = MibTableColumn
fairShareRequestClassDeploymentOrder = _FairShareRequestClassDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 915, 1, 4),
    _FairShareRequestClassDeploymentOrder_Type()
)
fairShareRequestClassDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fairShareRequestClassDeploymentOrder.setStatus("current")
_FairShareRequestClassFairShare_Type = Integer32
_FairShareRequestClassFairShare_Object = MibTableColumn
fairShareRequestClassFairShare = _FairShareRequestClassFairShare_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 915, 1, 5),
    _FairShareRequestClassFairShare_Type()
)
fairShareRequestClassFairShare.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fairShareRequestClassFairShare.setStatus("current")
_FairShareRequestClassName_Type = OctetString
_FairShareRequestClassName_Object = MibTableColumn
fairShareRequestClassName = _FairShareRequestClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 915, 1, 6),
    _FairShareRequestClassName_Type()
)
fairShareRequestClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fairShareRequestClassName.setStatus("current")
_FederationServicesTable_Object = MibTable
federationServicesTable = _FederationServicesTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 920)
)
if mibBuilder.loadTexts:
    federationServicesTable.setStatus("current")
_FederationServicesEntry_Object = MibTableRow
federationServicesEntry = _FederationServicesEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 920, 1)
)
federationServicesEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "federationServicesIndex"),
)
if mibBuilder.loadTexts:
    federationServicesEntry.setStatus("current")
_FederationServicesIndex_Type = OctetString
_FederationServicesIndex_Object = MibTableColumn
federationServicesIndex = _FederationServicesIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 920, 1, 1),
    _FederationServicesIndex_Type()
)
federationServicesIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    federationServicesIndex.setStatus("current")
_FederationServicesObjectName_Type = OctetString
_FederationServicesObjectName_Object = MibTableColumn
federationServicesObjectName = _FederationServicesObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 920, 1, 2),
    _FederationServicesObjectName_Type()
)
federationServicesObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    federationServicesObjectName.setStatus("current")
_FederationServicesType_Type = OctetString
_FederationServicesType_Object = MibTableColumn
federationServicesType = _FederationServicesType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 920, 1, 3),
    _FederationServicesType_Type()
)
federationServicesType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    federationServicesType.setStatus("current")
_FederationServicesSourceIdHex_Type = OctetString
_FederationServicesSourceIdHex_Object = MibTableColumn
federationServicesSourceIdHex = _FederationServicesSourceIdHex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 920, 1, 4),
    _FederationServicesSourceIdHex_Type()
)
federationServicesSourceIdHex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    federationServicesSourceIdHex.setStatus("current")
_FederationServicesAssertionStoreClassName_Type = OctetString
_FederationServicesAssertionStoreClassName_Object = MibTableColumn
federationServicesAssertionStoreClassName = _FederationServicesAssertionStoreClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 920, 1, 5),
    _FederationServicesAssertionStoreClassName_Type()
)
federationServicesAssertionStoreClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    federationServicesAssertionStoreClassName.setStatus("current")
_FederationServicesITSRequiresSSL_Type = OctetString
_FederationServicesITSRequiresSSL_Object = MibTableColumn
federationServicesITSRequiresSSL = _FederationServicesITSRequiresSSL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 920, 1, 6),
    _FederationServicesITSRequiresSSL_Type()
)
federationServicesITSRequiresSSL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    federationServicesITSRequiresSSL.setStatus("current")
_FederationServicesARSRequiresTwoWaySSL_Type = OctetString
_FederationServicesARSRequiresTwoWaySSL_Object = MibTableColumn
federationServicesARSRequiresTwoWaySSL = _FederationServicesARSRequiresTwoWaySSL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 920, 1, 7),
    _FederationServicesARSRequiresTwoWaySSL_Type()
)
federationServicesARSRequiresTwoWaySSL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    federationServicesARSRequiresTwoWaySSL.setStatus("current")
_FederationServicesPOSTRecipientCheckEnabled_Type = OctetString
_FederationServicesPOSTRecipientCheckEnabled_Object = MibTableColumn
federationServicesPOSTRecipientCheckEnabled = _FederationServicesPOSTRecipientCheckEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 920, 1, 8),
    _FederationServicesPOSTRecipientCheckEnabled_Type()
)
federationServicesPOSTRecipientCheckEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    federationServicesPOSTRecipientCheckEnabled.setStatus("current")
_FederationServicesACSRequiresSSL_Type = OctetString
_FederationServicesACSRequiresSSL_Object = MibTableColumn
federationServicesACSRequiresSSL = _FederationServicesACSRequiresSSL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 920, 1, 9),
    _FederationServicesACSRequiresSSL_Type()
)
federationServicesACSRequiresSSL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    federationServicesACSRequiresSSL.setStatus("current")
_FederationServicesSourceSiteURL_Type = OctetString
_FederationServicesSourceSiteURL_Object = MibTableColumn
federationServicesSourceSiteURL = _FederationServicesSourceSiteURL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 920, 1, 10),
    _FederationServicesSourceSiteURL_Type()
)
federationServicesSourceSiteURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    federationServicesSourceSiteURL.setStatus("current")
_FederationServicesSigningKeyAlias_Type = OctetString
_FederationServicesSigningKeyAlias_Object = MibTableColumn
federationServicesSigningKeyAlias = _FederationServicesSigningKeyAlias_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 920, 1, 11),
    _FederationServicesSigningKeyAlias_Type()
)
federationServicesSigningKeyAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    federationServicesSigningKeyAlias.setStatus("current")
_FederationServicesName_Type = OctetString
_FederationServicesName_Object = MibTableColumn
federationServicesName = _FederationServicesName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 920, 1, 12),
    _FederationServicesName_Type()
)
federationServicesName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    federationServicesName.setStatus("current")
_FederationServicesSSLClientIdentityAlias_Type = OctetString
_FederationServicesSSLClientIdentityAlias_Object = MibTableColumn
federationServicesSSLClientIdentityAlias = _FederationServicesSSLClientIdentityAlias_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 920, 1, 13),
    _FederationServicesSSLClientIdentityAlias_Type()
)
federationServicesSSLClientIdentityAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    federationServicesSSLClientIdentityAlias.setStatus("current")
_FederationServicesSourceIdBase64_Type = OctetString
_FederationServicesSourceIdBase64_Object = MibTableColumn
federationServicesSourceIdBase64 = _FederationServicesSourceIdBase64_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 920, 1, 14),
    _FederationServicesSourceIdBase64_Type()
)
federationServicesSourceIdBase64.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    federationServicesSourceIdBase64.setStatus("current")
_FederationServicesDestinationSiteEnabled_Type = OctetString
_FederationServicesDestinationSiteEnabled_Object = MibTableColumn
federationServicesDestinationSiteEnabled = _FederationServicesDestinationSiteEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 920, 1, 15),
    _FederationServicesDestinationSiteEnabled_Type()
)
federationServicesDestinationSiteEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    federationServicesDestinationSiteEnabled.setStatus("current")
_FederationServicesPOSTOneUseCheckEnabled_Type = OctetString
_FederationServicesPOSTOneUseCheckEnabled_Object = MibTableColumn
federationServicesPOSTOneUseCheckEnabled = _FederationServicesPOSTOneUseCheckEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 920, 1, 16),
    _FederationServicesPOSTOneUseCheckEnabled_Type()
)
federationServicesPOSTOneUseCheckEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    federationServicesPOSTOneUseCheckEnabled.setStatus("current")
_FederationServicesUsedAssertionCacheClassName_Type = OctetString
_FederationServicesUsedAssertionCacheClassName_Object = MibTableColumn
federationServicesUsedAssertionCacheClassName = _FederationServicesUsedAssertionCacheClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 920, 1, 17),
    _FederationServicesUsedAssertionCacheClassName_Type()
)
federationServicesUsedAssertionCacheClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    federationServicesUsedAssertionCacheClassName.setStatus("current")
_FederationServicesARSRequiresSSL_Type = OctetString
_FederationServicesARSRequiresSSL_Object = MibTableColumn
federationServicesARSRequiresSSL = _FederationServicesARSRequiresSSL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 920, 1, 18),
    _FederationServicesARSRequiresSSL_Type()
)
federationServicesARSRequiresSSL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    federationServicesARSRequiresSSL.setStatus("current")
_FederationServicesSourceSiteEnabled_Type = OctetString
_FederationServicesSourceSiteEnabled_Object = MibTableColumn
federationServicesSourceSiteEnabled = _FederationServicesSourceSiteEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 920, 1, 19),
    _FederationServicesSourceSiteEnabled_Type()
)
federationServicesSourceSiteEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    federationServicesSourceSiteEnabled.setStatus("current")
_FileStoreTable_Object = MibTable
fileStoreTable = _FileStoreTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 925)
)
if mibBuilder.loadTexts:
    fileStoreTable.setStatus("current")
_FileStoreEntry_Object = MibTableRow
fileStoreEntry = _FileStoreEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 925, 1)
)
fileStoreEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "fileStoreIndex"),
)
if mibBuilder.loadTexts:
    fileStoreEntry.setStatus("current")
_FileStoreIndex_Type = OctetString
_FileStoreIndex_Object = MibTableColumn
fileStoreIndex = _FileStoreIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 925, 1, 1),
    _FileStoreIndex_Type()
)
fileStoreIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    fileStoreIndex.setStatus("current")
_FileStoreObjectName_Type = OctetString
_FileStoreObjectName_Object = MibTableColumn
fileStoreObjectName = _FileStoreObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 925, 1, 2),
    _FileStoreObjectName_Type()
)
fileStoreObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fileStoreObjectName.setStatus("current")
_FileStoreType_Type = OctetString
_FileStoreType_Object = MibTableColumn
fileStoreType = _FileStoreType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 925, 1, 3),
    _FileStoreType_Type()
)
fileStoreType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fileStoreType.setStatus("current")
_FileStoreDeploymentOrder_Type = Integer32
_FileStoreDeploymentOrder_Object = MibTableColumn
fileStoreDeploymentOrder = _FileStoreDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 925, 1, 4),
    _FileStoreDeploymentOrder_Type()
)
fileStoreDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fileStoreDeploymentOrder.setStatus("current")
_FileStoreLogicalName_Type = OctetString
_FileStoreLogicalName_Object = MibTableColumn
fileStoreLogicalName = _FileStoreLogicalName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 925, 1, 5),
    _FileStoreLogicalName_Type()
)
fileStoreLogicalName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fileStoreLogicalName.setStatus("current")
_FileStoreXAResourceName_Type = OctetString
_FileStoreXAResourceName_Object = MibTableColumn
fileStoreXAResourceName = _FileStoreXAResourceName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 925, 1, 6),
    _FileStoreXAResourceName_Type()
)
fileStoreXAResourceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fileStoreXAResourceName.setStatus("current")
_FileStoreName_Type = OctetString
_FileStoreName_Object = MibTableColumn
fileStoreName = _FileStoreName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 925, 1, 7),
    _FileStoreName_Type()
)
fileStoreName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fileStoreName.setStatus("current")
_ForeignJNDILinkTable_Object = MibTable
foreignJNDILinkTable = _ForeignJNDILinkTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 930)
)
if mibBuilder.loadTexts:
    foreignJNDILinkTable.setStatus("current")
_ForeignJNDILinkEntry_Object = MibTableRow
foreignJNDILinkEntry = _ForeignJNDILinkEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 930, 1)
)
foreignJNDILinkEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "foreignJNDILinkIndex"),
)
if mibBuilder.loadTexts:
    foreignJNDILinkEntry.setStatus("current")
_ForeignJNDILinkIndex_Type = OctetString
_ForeignJNDILinkIndex_Object = MibTableColumn
foreignJNDILinkIndex = _ForeignJNDILinkIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 930, 1, 1),
    _ForeignJNDILinkIndex_Type()
)
foreignJNDILinkIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    foreignJNDILinkIndex.setStatus("current")
_ForeignJNDILinkObjectName_Type = OctetString
_ForeignJNDILinkObjectName_Object = MibTableColumn
foreignJNDILinkObjectName = _ForeignJNDILinkObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 930, 1, 2),
    _ForeignJNDILinkObjectName_Type()
)
foreignJNDILinkObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJNDILinkObjectName.setStatus("current")
_ForeignJNDILinkType_Type = OctetString
_ForeignJNDILinkType_Object = MibTableColumn
foreignJNDILinkType = _ForeignJNDILinkType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 930, 1, 3),
    _ForeignJNDILinkType_Type()
)
foreignJNDILinkType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJNDILinkType.setStatus("current")
_ForeignJNDILinkLocalJNDIName_Type = OctetString
_ForeignJNDILinkLocalJNDIName_Object = MibTableColumn
foreignJNDILinkLocalJNDIName = _ForeignJNDILinkLocalJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 930, 1, 4),
    _ForeignJNDILinkLocalJNDIName_Type()
)
foreignJNDILinkLocalJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJNDILinkLocalJNDIName.setStatus("current")
_ForeignJNDILinkName_Type = OctetString
_ForeignJNDILinkName_Object = MibTableColumn
foreignJNDILinkName = _ForeignJNDILinkName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 930, 1, 5),
    _ForeignJNDILinkName_Type()
)
foreignJNDILinkName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJNDILinkName.setStatus("current")
_ForeignJNDILinkRemoteJNDIName_Type = OctetString
_ForeignJNDILinkRemoteJNDIName_Object = MibTableColumn
foreignJNDILinkRemoteJNDIName = _ForeignJNDILinkRemoteJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 930, 1, 6),
    _ForeignJNDILinkRemoteJNDIName_Type()
)
foreignJNDILinkRemoteJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJNDILinkRemoteJNDIName.setStatus("current")
_ForeignJNDIProviderTable_Object = MibTable
foreignJNDIProviderTable = _ForeignJNDIProviderTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 935)
)
if mibBuilder.loadTexts:
    foreignJNDIProviderTable.setStatus("current")
_ForeignJNDIProviderEntry_Object = MibTableRow
foreignJNDIProviderEntry = _ForeignJNDIProviderEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 935, 1)
)
foreignJNDIProviderEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "foreignJNDIProviderIndex"),
)
if mibBuilder.loadTexts:
    foreignJNDIProviderEntry.setStatus("current")
_ForeignJNDIProviderIndex_Type = OctetString
_ForeignJNDIProviderIndex_Object = MibTableColumn
foreignJNDIProviderIndex = _ForeignJNDIProviderIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 935, 1, 1),
    _ForeignJNDIProviderIndex_Type()
)
foreignJNDIProviderIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    foreignJNDIProviderIndex.setStatus("current")
_ForeignJNDIProviderObjectName_Type = OctetString
_ForeignJNDIProviderObjectName_Object = MibTableColumn
foreignJNDIProviderObjectName = _ForeignJNDIProviderObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 935, 1, 2),
    _ForeignJNDIProviderObjectName_Type()
)
foreignJNDIProviderObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJNDIProviderObjectName.setStatus("current")
_ForeignJNDIProviderType_Type = OctetString
_ForeignJNDIProviderType_Object = MibTableColumn
foreignJNDIProviderType = _ForeignJNDIProviderType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 935, 1, 3),
    _ForeignJNDIProviderType_Type()
)
foreignJNDIProviderType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJNDIProviderType.setStatus("current")
_ForeignJNDIProviderInitialContextFactory_Type = OctetString
_ForeignJNDIProviderInitialContextFactory_Object = MibTableColumn
foreignJNDIProviderInitialContextFactory = _ForeignJNDIProviderInitialContextFactory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 935, 1, 4),
    _ForeignJNDIProviderInitialContextFactory_Type()
)
foreignJNDIProviderInitialContextFactory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJNDIProviderInitialContextFactory.setStatus("current")
_ForeignJNDIProviderUser_Type = OctetString
_ForeignJNDIProviderUser_Object = MibTableColumn
foreignJNDIProviderUser = _ForeignJNDIProviderUser_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 935, 1, 5),
    _ForeignJNDIProviderUser_Type()
)
foreignJNDIProviderUser.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJNDIProviderUser.setStatus("current")
_ForeignJNDIProviderProviderURL_Type = OctetString
_ForeignJNDIProviderProviderURL_Object = MibTableColumn
foreignJNDIProviderProviderURL = _ForeignJNDIProviderProviderURL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 935, 1, 6),
    _ForeignJNDIProviderProviderURL_Type()
)
foreignJNDIProviderProviderURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJNDIProviderProviderURL.setStatus("current")
_ForeignJNDIProviderName_Type = OctetString
_ForeignJNDIProviderName_Object = MibTableColumn
foreignJNDIProviderName = _ForeignJNDIProviderName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 935, 1, 7),
    _ForeignJNDIProviderName_Type()
)
foreignJNDIProviderName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    foreignJNDIProviderName.setStatus("current")
_HttpProxyTable_Object = MibTable
httpProxyTable = _HttpProxyTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 940)
)
if mibBuilder.loadTexts:
    httpProxyTable.setStatus("current")
_HttpProxyEntry_Object = MibTableRow
httpProxyEntry = _HttpProxyEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 940, 1)
)
httpProxyEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "httpProxyIndex"),
)
if mibBuilder.loadTexts:
    httpProxyEntry.setStatus("current")
_HttpProxyIndex_Type = OctetString
_HttpProxyIndex_Object = MibTableColumn
httpProxyIndex = _HttpProxyIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 940, 1, 1),
    _HttpProxyIndex_Type()
)
httpProxyIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    httpProxyIndex.setStatus("current")
_HttpProxyObjectName_Type = OctetString
_HttpProxyObjectName_Object = MibTableColumn
httpProxyObjectName = _HttpProxyObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 940, 1, 2),
    _HttpProxyObjectName_Type()
)
httpProxyObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpProxyObjectName.setStatus("current")
_HttpProxyType_Type = OctetString
_HttpProxyType_Object = MibTableColumn
httpProxyType = _HttpProxyType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 940, 1, 3),
    _HttpProxyType_Type()
)
httpProxyType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpProxyType.setStatus("current")
_HttpProxyServerList_Type = OctetString
_HttpProxyServerList_Object = MibTableColumn
httpProxyServerList = _HttpProxyServerList_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 940, 1, 4),
    _HttpProxyServerList_Type()
)
httpProxyServerList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpProxyServerList.setStatus("current")
_HttpProxyDeploymentOrder_Type = Integer32
_HttpProxyDeploymentOrder_Object = MibTableColumn
httpProxyDeploymentOrder = _HttpProxyDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 940, 1, 5),
    _HttpProxyDeploymentOrder_Type()
)
httpProxyDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpProxyDeploymentOrder.setStatus("current")
_HttpProxyMaxHealthCheckInterval_Type = Integer32
_HttpProxyMaxHealthCheckInterval_Object = MibTableColumn
httpProxyMaxHealthCheckInterval = _HttpProxyMaxHealthCheckInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 940, 1, 6),
    _HttpProxyMaxHealthCheckInterval_Type()
)
httpProxyMaxHealthCheckInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpProxyMaxHealthCheckInterval.setStatus("current")
_HttpProxyHealthCheckInterval_Type = Integer32
_HttpProxyHealthCheckInterval_Object = MibTableColumn
httpProxyHealthCheckInterval = _HttpProxyHealthCheckInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 940, 1, 7),
    _HttpProxyHealthCheckInterval_Type()
)
httpProxyHealthCheckInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpProxyHealthCheckInterval.setStatus("current")
_HttpProxyInitialConnections_Type = Integer32
_HttpProxyInitialConnections_Object = MibTableColumn
httpProxyInitialConnections = _HttpProxyInitialConnections_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 940, 1, 8),
    _HttpProxyInitialConnections_Type()
)
httpProxyInitialConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpProxyInitialConnections.setStatus("current")
_HttpProxyMaxConnections_Type = Integer32
_HttpProxyMaxConnections_Object = MibTableColumn
httpProxyMaxConnections = _HttpProxyMaxConnections_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 940, 1, 9),
    _HttpProxyMaxConnections_Type()
)
httpProxyMaxConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpProxyMaxConnections.setStatus("current")
_HttpProxyName_Type = OctetString
_HttpProxyName_Object = MibTableColumn
httpProxyName = _HttpProxyName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 940, 1, 10),
    _HttpProxyName_Type()
)
httpProxyName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpProxyName.setStatus("current")
_HttpProxyMaxRetries_Type = Integer32
_HttpProxyMaxRetries_Object = MibTableColumn
httpProxyMaxRetries = _HttpProxyMaxRetries_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 940, 1, 11),
    _HttpProxyMaxRetries_Type()
)
httpProxyMaxRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    httpProxyMaxRetries.setStatus("current")
_JdbcPoolComponentTable_Object = MibTable
jdbcPoolComponentTable = _JdbcPoolComponentTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 945)
)
if mibBuilder.loadTexts:
    jdbcPoolComponentTable.setStatus("current")
_JdbcPoolComponentEntry_Object = MibTableRow
jdbcPoolComponentEntry = _JdbcPoolComponentEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 945, 1)
)
jdbcPoolComponentEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jdbcPoolComponentIndex"),
)
if mibBuilder.loadTexts:
    jdbcPoolComponentEntry.setStatus("current")
_JdbcPoolComponentIndex_Type = OctetString
_JdbcPoolComponentIndex_Object = MibTableColumn
jdbcPoolComponentIndex = _JdbcPoolComponentIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 945, 1, 1),
    _JdbcPoolComponentIndex_Type()
)
jdbcPoolComponentIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    jdbcPoolComponentIndex.setStatus("current")
_JdbcPoolComponentObjectName_Type = OctetString
_JdbcPoolComponentObjectName_Object = MibTableColumn
jdbcPoolComponentObjectName = _JdbcPoolComponentObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 945, 1, 2),
    _JdbcPoolComponentObjectName_Type()
)
jdbcPoolComponentObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcPoolComponentObjectName.setStatus("current")
_JdbcPoolComponentType_Type = OctetString
_JdbcPoolComponentType_Object = MibTableColumn
jdbcPoolComponentType = _JdbcPoolComponentType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 945, 1, 3),
    _JdbcPoolComponentType_Type()
)
jdbcPoolComponentType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcPoolComponentType.setStatus("current")
_JdbcPoolComponentDeploymentOrder_Type = Integer32
_JdbcPoolComponentDeploymentOrder_Object = MibTableColumn
jdbcPoolComponentDeploymentOrder = _JdbcPoolComponentDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 945, 1, 4),
    _JdbcPoolComponentDeploymentOrder_Type()
)
jdbcPoolComponentDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcPoolComponentDeploymentOrder.setStatus("current")
_JdbcPoolComponentURI_Type = OctetString
_JdbcPoolComponentURI_Object = MibTableColumn
jdbcPoolComponentURI = _JdbcPoolComponentURI_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 945, 1, 5),
    _JdbcPoolComponentURI_Type()
)
jdbcPoolComponentURI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcPoolComponentURI.setStatus("current")
_JdbcPoolComponentName_Type = OctetString
_JdbcPoolComponentName_Object = MibTableColumn
jdbcPoolComponentName = _JdbcPoolComponentName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 945, 1, 6),
    _JdbcPoolComponentName_Type()
)
jdbcPoolComponentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcPoolComponentName.setStatus("current")
_JdbcStoreTable_Object = MibTable
jdbcStoreTable = _JdbcStoreTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 950)
)
if mibBuilder.loadTexts:
    jdbcStoreTable.setStatus("current")
_JdbcStoreEntry_Object = MibTableRow
jdbcStoreEntry = _JdbcStoreEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 950, 1)
)
jdbcStoreEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jdbcStoreIndex"),
)
if mibBuilder.loadTexts:
    jdbcStoreEntry.setStatus("current")
_JdbcStoreIndex_Type = OctetString
_JdbcStoreIndex_Object = MibTableColumn
jdbcStoreIndex = _JdbcStoreIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 950, 1, 1),
    _JdbcStoreIndex_Type()
)
jdbcStoreIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    jdbcStoreIndex.setStatus("current")
_JdbcStoreObjectName_Type = OctetString
_JdbcStoreObjectName_Object = MibTableColumn
jdbcStoreObjectName = _JdbcStoreObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 950, 1, 2),
    _JdbcStoreObjectName_Type()
)
jdbcStoreObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcStoreObjectName.setStatus("current")
_JdbcStoreType_Type = OctetString
_JdbcStoreType_Object = MibTableColumn
jdbcStoreType = _JdbcStoreType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 950, 1, 3),
    _JdbcStoreType_Type()
)
jdbcStoreType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcStoreType.setStatus("current")
_JdbcStoreDeploymentOrder_Type = Integer32
_JdbcStoreDeploymentOrder_Object = MibTableColumn
jdbcStoreDeploymentOrder = _JdbcStoreDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 950, 1, 4),
    _JdbcStoreDeploymentOrder_Type()
)
jdbcStoreDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcStoreDeploymentOrder.setStatus("current")
_JdbcStoreDeletesPerBatchMaximum_Type = Integer32
_JdbcStoreDeletesPerBatchMaximum_Object = MibTableColumn
jdbcStoreDeletesPerBatchMaximum = _JdbcStoreDeletesPerBatchMaximum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 950, 1, 5),
    _JdbcStoreDeletesPerBatchMaximum_Type()
)
jdbcStoreDeletesPerBatchMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcStoreDeletesPerBatchMaximum.setStatus("current")
_JdbcStoreLogicalName_Type = OctetString
_JdbcStoreLogicalName_Object = MibTableColumn
jdbcStoreLogicalName = _JdbcStoreLogicalName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 950, 1, 6),
    _JdbcStoreLogicalName_Type()
)
jdbcStoreLogicalName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcStoreLogicalName.setStatus("current")
_JdbcStoreXAResourceName_Type = OctetString
_JdbcStoreXAResourceName_Object = MibTableColumn
jdbcStoreXAResourceName = _JdbcStoreXAResourceName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 950, 1, 7),
    _JdbcStoreXAResourceName_Type()
)
jdbcStoreXAResourceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcStoreXAResourceName.setStatus("current")
_JdbcStoreDeletesPerStatementMaximum_Type = Integer32
_JdbcStoreDeletesPerStatementMaximum_Object = MibTableColumn
jdbcStoreDeletesPerStatementMaximum = _JdbcStoreDeletesPerStatementMaximum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 950, 1, 8),
    _JdbcStoreDeletesPerStatementMaximum_Type()
)
jdbcStoreDeletesPerStatementMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcStoreDeletesPerStatementMaximum.setStatus("current")
_JdbcStoreInsertsPerBatchMaximum_Type = Integer32
_JdbcStoreInsertsPerBatchMaximum_Object = MibTableColumn
jdbcStoreInsertsPerBatchMaximum = _JdbcStoreInsertsPerBatchMaximum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 950, 1, 9),
    _JdbcStoreInsertsPerBatchMaximum_Type()
)
jdbcStoreInsertsPerBatchMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcStoreInsertsPerBatchMaximum.setStatus("current")
_JdbcStoreName_Type = OctetString
_JdbcStoreName_Object = MibTableColumn
jdbcStoreName = _JdbcStoreName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 950, 1, 10),
    _JdbcStoreName_Type()
)
jdbcStoreName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcStoreName.setStatus("current")
_JdbcSystemResourceTable_Object = MibTable
jdbcSystemResourceTable = _JdbcSystemResourceTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 955)
)
if mibBuilder.loadTexts:
    jdbcSystemResourceTable.setStatus("current")
_JdbcSystemResourceEntry_Object = MibTableRow
jdbcSystemResourceEntry = _JdbcSystemResourceEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 955, 1)
)
jdbcSystemResourceEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jdbcSystemResourceIndex"),
)
if mibBuilder.loadTexts:
    jdbcSystemResourceEntry.setStatus("current")
_JdbcSystemResourceIndex_Type = OctetString
_JdbcSystemResourceIndex_Object = MibTableColumn
jdbcSystemResourceIndex = _JdbcSystemResourceIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 955, 1, 1),
    _JdbcSystemResourceIndex_Type()
)
jdbcSystemResourceIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    jdbcSystemResourceIndex.setStatus("current")
_JdbcSystemResourceObjectName_Type = OctetString
_JdbcSystemResourceObjectName_Object = MibTableColumn
jdbcSystemResourceObjectName = _JdbcSystemResourceObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 955, 1, 2),
    _JdbcSystemResourceObjectName_Type()
)
jdbcSystemResourceObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcSystemResourceObjectName.setStatus("current")
_JdbcSystemResourceType_Type = OctetString
_JdbcSystemResourceType_Object = MibTableColumn
jdbcSystemResourceType = _JdbcSystemResourceType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 955, 1, 3),
    _JdbcSystemResourceType_Type()
)
jdbcSystemResourceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcSystemResourceType.setStatus("current")
_JdbcSystemResourceCompatibilityName_Type = OctetString
_JdbcSystemResourceCompatibilityName_Object = MibTableColumn
jdbcSystemResourceCompatibilityName = _JdbcSystemResourceCompatibilityName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 955, 1, 4),
    _JdbcSystemResourceCompatibilityName_Type()
)
jdbcSystemResourceCompatibilityName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcSystemResourceCompatibilityName.setStatus("current")
_JdbcSystemResourceDeploymentOrder_Type = Integer32
_JdbcSystemResourceDeploymentOrder_Object = MibTableColumn
jdbcSystemResourceDeploymentOrder = _JdbcSystemResourceDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 955, 1, 5),
    _JdbcSystemResourceDeploymentOrder_Type()
)
jdbcSystemResourceDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcSystemResourceDeploymentOrder.setStatus("current")
_JdbcSystemResourceDeploymentPrincipalName_Type = OctetString
_JdbcSystemResourceDeploymentPrincipalName_Object = MibTableColumn
jdbcSystemResourceDeploymentPrincipalName = _JdbcSystemResourceDeploymentPrincipalName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 955, 1, 6),
    _JdbcSystemResourceDeploymentPrincipalName_Type()
)
jdbcSystemResourceDeploymentPrincipalName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcSystemResourceDeploymentPrincipalName.setStatus("current")
_JdbcSystemResourceDescriptorFileName_Type = OctetString
_JdbcSystemResourceDescriptorFileName_Object = MibTableColumn
jdbcSystemResourceDescriptorFileName = _JdbcSystemResourceDescriptorFileName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 955, 1, 7),
    _JdbcSystemResourceDescriptorFileName_Type()
)
jdbcSystemResourceDescriptorFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcSystemResourceDescriptorFileName.setStatus("current")
_JdbcSystemResourceModuleType_Type = OctetString
_JdbcSystemResourceModuleType_Object = MibTableColumn
jdbcSystemResourceModuleType = _JdbcSystemResourceModuleType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 955, 1, 8),
    _JdbcSystemResourceModuleType_Type()
)
jdbcSystemResourceModuleType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcSystemResourceModuleType.setStatus("current")
_JdbcSystemResourceName_Type = OctetString
_JdbcSystemResourceName_Object = MibTableColumn
jdbcSystemResourceName = _JdbcSystemResourceName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 955, 1, 9),
    _JdbcSystemResourceName_Type()
)
jdbcSystemResourceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcSystemResourceName.setStatus("current")
_JdbcSystemResourceSourcePath_Type = OctetString
_JdbcSystemResourceSourcePath_Object = MibTableColumn
jdbcSystemResourceSourcePath = _JdbcSystemResourceSourcePath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 955, 1, 10),
    _JdbcSystemResourceSourcePath_Type()
)
jdbcSystemResourceSourcePath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcSystemResourceSourcePath.setStatus("current")
_JmsInteropModuleTable_Object = MibTable
jmsInteropModuleTable = _JmsInteropModuleTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 960)
)
if mibBuilder.loadTexts:
    jmsInteropModuleTable.setStatus("current")
_JmsInteropModuleEntry_Object = MibTableRow
jmsInteropModuleEntry = _JmsInteropModuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 960, 1)
)
jmsInteropModuleEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsInteropModuleIndex"),
)
if mibBuilder.loadTexts:
    jmsInteropModuleEntry.setStatus("current")
_JmsInteropModuleIndex_Type = OctetString
_JmsInteropModuleIndex_Object = MibTableColumn
jmsInteropModuleIndex = _JmsInteropModuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 960, 1, 1),
    _JmsInteropModuleIndex_Type()
)
jmsInteropModuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    jmsInteropModuleIndex.setStatus("current")
_JmsInteropModuleObjectName_Type = OctetString
_JmsInteropModuleObjectName_Object = MibTableColumn
jmsInteropModuleObjectName = _JmsInteropModuleObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 960, 1, 2),
    _JmsInteropModuleObjectName_Type()
)
jmsInteropModuleObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsInteropModuleObjectName.setStatus("current")
_JmsInteropModuleType_Type = OctetString
_JmsInteropModuleType_Object = MibTableColumn
jmsInteropModuleType = _JmsInteropModuleType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 960, 1, 3),
    _JmsInteropModuleType_Type()
)
jmsInteropModuleType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsInteropModuleType.setStatus("current")
_JmsInteropModuleCompatibilityName_Type = OctetString
_JmsInteropModuleCompatibilityName_Object = MibTableColumn
jmsInteropModuleCompatibilityName = _JmsInteropModuleCompatibilityName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 960, 1, 4),
    _JmsInteropModuleCompatibilityName_Type()
)
jmsInteropModuleCompatibilityName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsInteropModuleCompatibilityName.setStatus("current")
_JmsInteropModuleDeploymentOrder_Type = Integer32
_JmsInteropModuleDeploymentOrder_Object = MibTableColumn
jmsInteropModuleDeploymentOrder = _JmsInteropModuleDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 960, 1, 5),
    _JmsInteropModuleDeploymentOrder_Type()
)
jmsInteropModuleDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsInteropModuleDeploymentOrder.setStatus("current")
_JmsInteropModuleDeploymentPrincipalName_Type = OctetString
_JmsInteropModuleDeploymentPrincipalName_Object = MibTableColumn
jmsInteropModuleDeploymentPrincipalName = _JmsInteropModuleDeploymentPrincipalName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 960, 1, 6),
    _JmsInteropModuleDeploymentPrincipalName_Type()
)
jmsInteropModuleDeploymentPrincipalName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsInteropModuleDeploymentPrincipalName.setStatus("current")
_JmsInteropModuleDescriptorFileName_Type = OctetString
_JmsInteropModuleDescriptorFileName_Object = MibTableColumn
jmsInteropModuleDescriptorFileName = _JmsInteropModuleDescriptorFileName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 960, 1, 7),
    _JmsInteropModuleDescriptorFileName_Type()
)
jmsInteropModuleDescriptorFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsInteropModuleDescriptorFileName.setStatus("current")
_JmsInteropModuleModuleType_Type = OctetString
_JmsInteropModuleModuleType_Object = MibTableColumn
jmsInteropModuleModuleType = _JmsInteropModuleModuleType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 960, 1, 8),
    _JmsInteropModuleModuleType_Type()
)
jmsInteropModuleModuleType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsInteropModuleModuleType.setStatus("current")
_JmsInteropModuleName_Type = OctetString
_JmsInteropModuleName_Object = MibTableColumn
jmsInteropModuleName = _JmsInteropModuleName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 960, 1, 9),
    _JmsInteropModuleName_Type()
)
jmsInteropModuleName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsInteropModuleName.setStatus("current")
_JmsInteropModuleSourcePath_Type = OctetString
_JmsInteropModuleSourcePath_Object = MibTableColumn
jmsInteropModuleSourcePath = _JmsInteropModuleSourcePath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 960, 1, 10),
    _JmsInteropModuleSourcePath_Type()
)
jmsInteropModuleSourcePath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsInteropModuleSourcePath.setStatus("current")
_JmsMessageLogFileTable_Object = MibTable
jmsMessageLogFileTable = _JmsMessageLogFileTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 965)
)
if mibBuilder.loadTexts:
    jmsMessageLogFileTable.setStatus("current")
_JmsMessageLogFileEntry_Object = MibTableRow
jmsMessageLogFileEntry = _JmsMessageLogFileEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 965, 1)
)
jmsMessageLogFileEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsMessageLogFileIndex"),
)
if mibBuilder.loadTexts:
    jmsMessageLogFileEntry.setStatus("current")
_JmsMessageLogFileIndex_Type = OctetString
_JmsMessageLogFileIndex_Object = MibTableColumn
jmsMessageLogFileIndex = _JmsMessageLogFileIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 965, 1, 1),
    _JmsMessageLogFileIndex_Type()
)
jmsMessageLogFileIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    jmsMessageLogFileIndex.setStatus("current")
_JmsMessageLogFileObjectName_Type = OctetString
_JmsMessageLogFileObjectName_Object = MibTableColumn
jmsMessageLogFileObjectName = _JmsMessageLogFileObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 965, 1, 2),
    _JmsMessageLogFileObjectName_Type()
)
jmsMessageLogFileObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsMessageLogFileObjectName.setStatus("current")
_JmsMessageLogFileType_Type = OctetString
_JmsMessageLogFileType_Object = MibTableColumn
jmsMessageLogFileType = _JmsMessageLogFileType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 965, 1, 3),
    _JmsMessageLogFileType_Type()
)
jmsMessageLogFileType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsMessageLogFileType.setStatus("current")
_JmsMessageLogFileNumberOfFilesLimited_Type = OctetString
_JmsMessageLogFileNumberOfFilesLimited_Object = MibTableColumn
jmsMessageLogFileNumberOfFilesLimited = _JmsMessageLogFileNumberOfFilesLimited_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 965, 1, 4),
    _JmsMessageLogFileNumberOfFilesLimited_Type()
)
jmsMessageLogFileNumberOfFilesLimited.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsMessageLogFileNumberOfFilesLimited.setStatus("current")
_JmsMessageLogFileFileTimeSpan_Type = Integer32
_JmsMessageLogFileFileTimeSpan_Object = MibTableColumn
jmsMessageLogFileFileTimeSpan = _JmsMessageLogFileFileTimeSpan_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 965, 1, 5),
    _JmsMessageLogFileFileTimeSpan_Type()
)
jmsMessageLogFileFileTimeSpan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsMessageLogFileFileTimeSpan.setStatus("current")
_JmsMessageLogFileRotationType_Type = OctetString
_JmsMessageLogFileRotationType_Object = MibTableColumn
jmsMessageLogFileRotationType = _JmsMessageLogFileRotationType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 965, 1, 6),
    _JmsMessageLogFileRotationType_Type()
)
jmsMessageLogFileRotationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsMessageLogFileRotationType.setStatus("current")
_JmsMessageLogFileFileCount_Type = Integer32
_JmsMessageLogFileFileCount_Object = MibTableColumn
jmsMessageLogFileFileCount = _JmsMessageLogFileFileCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 965, 1, 7),
    _JmsMessageLogFileFileCount_Type()
)
jmsMessageLogFileFileCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsMessageLogFileFileCount.setStatus("current")
_JmsMessageLogFileFileName_Type = OctetString
_JmsMessageLogFileFileName_Object = MibTableColumn
jmsMessageLogFileFileName = _JmsMessageLogFileFileName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 965, 1, 8),
    _JmsMessageLogFileFileName_Type()
)
jmsMessageLogFileFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsMessageLogFileFileName.setStatus("current")
_JmsMessageLogFileFileMinSize_Type = Integer32
_JmsMessageLogFileFileMinSize_Object = MibTableColumn
jmsMessageLogFileFileMinSize = _JmsMessageLogFileFileMinSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 965, 1, 9),
    _JmsMessageLogFileFileMinSize_Type()
)
jmsMessageLogFileFileMinSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsMessageLogFileFileMinSize.setStatus("current")
_JmsMessageLogFileBufferSizeKB_Type = Integer32
_JmsMessageLogFileBufferSizeKB_Object = MibTableColumn
jmsMessageLogFileBufferSizeKB = _JmsMessageLogFileBufferSizeKB_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 965, 1, 10),
    _JmsMessageLogFileBufferSizeKB_Type()
)
jmsMessageLogFileBufferSizeKB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsMessageLogFileBufferSizeKB.setStatus("current")
_JmsMessageLogFileDateFormatPattern_Type = OctetString
_JmsMessageLogFileDateFormatPattern_Object = MibTableColumn
jmsMessageLogFileDateFormatPattern = _JmsMessageLogFileDateFormatPattern_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 965, 1, 11),
    _JmsMessageLogFileDateFormatPattern_Type()
)
jmsMessageLogFileDateFormatPattern.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsMessageLogFileDateFormatPattern.setStatus("current")
_JmsMessageLogFileRotationTime_Type = OctetString
_JmsMessageLogFileRotationTime_Object = MibTableColumn
jmsMessageLogFileRotationTime = _JmsMessageLogFileRotationTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 965, 1, 12),
    _JmsMessageLogFileRotationTime_Type()
)
jmsMessageLogFileRotationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsMessageLogFileRotationTime.setStatus("current")
_JmsMessageLogFileRotateLogOnStartup_Type = OctetString
_JmsMessageLogFileRotateLogOnStartup_Object = MibTableColumn
jmsMessageLogFileRotateLogOnStartup = _JmsMessageLogFileRotateLogOnStartup_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 965, 1, 13),
    _JmsMessageLogFileRotateLogOnStartup_Type()
)
jmsMessageLogFileRotateLogOnStartup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsMessageLogFileRotateLogOnStartup.setStatus("current")
_JmsMessageLogFileName_Type = OctetString
_JmsMessageLogFileName_Object = MibTableColumn
jmsMessageLogFileName = _JmsMessageLogFileName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 965, 1, 14),
    _JmsMessageLogFileName_Type()
)
jmsMessageLogFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsMessageLogFileName.setStatus("current")
_JmsMessageLogFileLogFileRotationDir_Type = OctetString
_JmsMessageLogFileLogFileRotationDir_Object = MibTableColumn
jmsMessageLogFileLogFileRotationDir = _JmsMessageLogFileLogFileRotationDir_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 965, 1, 15),
    _JmsMessageLogFileLogFileRotationDir_Type()
)
jmsMessageLogFileLogFileRotationDir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsMessageLogFileLogFileRotationDir.setStatus("current")
_JmsSAFMessageLogFileTable_Object = MibTable
jmsSAFMessageLogFileTable = _JmsSAFMessageLogFileTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 970)
)
if mibBuilder.loadTexts:
    jmsSAFMessageLogFileTable.setStatus("current")
_JmsSAFMessageLogFileEntry_Object = MibTableRow
jmsSAFMessageLogFileEntry = _JmsSAFMessageLogFileEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 970, 1)
)
jmsSAFMessageLogFileEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsSAFMessageLogFileIndex"),
)
if mibBuilder.loadTexts:
    jmsSAFMessageLogFileEntry.setStatus("current")
_JmsSAFMessageLogFileIndex_Type = OctetString
_JmsSAFMessageLogFileIndex_Object = MibTableColumn
jmsSAFMessageLogFileIndex = _JmsSAFMessageLogFileIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 970, 1, 1),
    _JmsSAFMessageLogFileIndex_Type()
)
jmsSAFMessageLogFileIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    jmsSAFMessageLogFileIndex.setStatus("current")
_JmsSAFMessageLogFileObjectName_Type = OctetString
_JmsSAFMessageLogFileObjectName_Object = MibTableColumn
jmsSAFMessageLogFileObjectName = _JmsSAFMessageLogFileObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 970, 1, 2),
    _JmsSAFMessageLogFileObjectName_Type()
)
jmsSAFMessageLogFileObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSAFMessageLogFileObjectName.setStatus("current")
_JmsSAFMessageLogFileType_Type = OctetString
_JmsSAFMessageLogFileType_Object = MibTableColumn
jmsSAFMessageLogFileType = _JmsSAFMessageLogFileType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 970, 1, 3),
    _JmsSAFMessageLogFileType_Type()
)
jmsSAFMessageLogFileType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSAFMessageLogFileType.setStatus("current")
_JmsSAFMessageLogFileNumberOfFilesLimited_Type = OctetString
_JmsSAFMessageLogFileNumberOfFilesLimited_Object = MibTableColumn
jmsSAFMessageLogFileNumberOfFilesLimited = _JmsSAFMessageLogFileNumberOfFilesLimited_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 970, 1, 4),
    _JmsSAFMessageLogFileNumberOfFilesLimited_Type()
)
jmsSAFMessageLogFileNumberOfFilesLimited.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSAFMessageLogFileNumberOfFilesLimited.setStatus("current")
_JmsSAFMessageLogFileFileTimeSpan_Type = Integer32
_JmsSAFMessageLogFileFileTimeSpan_Object = MibTableColumn
jmsSAFMessageLogFileFileTimeSpan = _JmsSAFMessageLogFileFileTimeSpan_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 970, 1, 5),
    _JmsSAFMessageLogFileFileTimeSpan_Type()
)
jmsSAFMessageLogFileFileTimeSpan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSAFMessageLogFileFileTimeSpan.setStatus("current")
_JmsSAFMessageLogFileRotationType_Type = OctetString
_JmsSAFMessageLogFileRotationType_Object = MibTableColumn
jmsSAFMessageLogFileRotationType = _JmsSAFMessageLogFileRotationType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 970, 1, 6),
    _JmsSAFMessageLogFileRotationType_Type()
)
jmsSAFMessageLogFileRotationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSAFMessageLogFileRotationType.setStatus("current")
_JmsSAFMessageLogFileFileCount_Type = Integer32
_JmsSAFMessageLogFileFileCount_Object = MibTableColumn
jmsSAFMessageLogFileFileCount = _JmsSAFMessageLogFileFileCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 970, 1, 7),
    _JmsSAFMessageLogFileFileCount_Type()
)
jmsSAFMessageLogFileFileCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSAFMessageLogFileFileCount.setStatus("current")
_JmsSAFMessageLogFileFileName_Type = OctetString
_JmsSAFMessageLogFileFileName_Object = MibTableColumn
jmsSAFMessageLogFileFileName = _JmsSAFMessageLogFileFileName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 970, 1, 8),
    _JmsSAFMessageLogFileFileName_Type()
)
jmsSAFMessageLogFileFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSAFMessageLogFileFileName.setStatus("current")
_JmsSAFMessageLogFileFileMinSize_Type = Integer32
_JmsSAFMessageLogFileFileMinSize_Object = MibTableColumn
jmsSAFMessageLogFileFileMinSize = _JmsSAFMessageLogFileFileMinSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 970, 1, 9),
    _JmsSAFMessageLogFileFileMinSize_Type()
)
jmsSAFMessageLogFileFileMinSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSAFMessageLogFileFileMinSize.setStatus("current")
_JmsSAFMessageLogFileBufferSizeKB_Type = Integer32
_JmsSAFMessageLogFileBufferSizeKB_Object = MibTableColumn
jmsSAFMessageLogFileBufferSizeKB = _JmsSAFMessageLogFileBufferSizeKB_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 970, 1, 10),
    _JmsSAFMessageLogFileBufferSizeKB_Type()
)
jmsSAFMessageLogFileBufferSizeKB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSAFMessageLogFileBufferSizeKB.setStatus("current")
_JmsSAFMessageLogFileDateFormatPattern_Type = OctetString
_JmsSAFMessageLogFileDateFormatPattern_Object = MibTableColumn
jmsSAFMessageLogFileDateFormatPattern = _JmsSAFMessageLogFileDateFormatPattern_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 970, 1, 11),
    _JmsSAFMessageLogFileDateFormatPattern_Type()
)
jmsSAFMessageLogFileDateFormatPattern.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSAFMessageLogFileDateFormatPattern.setStatus("current")
_JmsSAFMessageLogFileRotationTime_Type = OctetString
_JmsSAFMessageLogFileRotationTime_Object = MibTableColumn
jmsSAFMessageLogFileRotationTime = _JmsSAFMessageLogFileRotationTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 970, 1, 12),
    _JmsSAFMessageLogFileRotationTime_Type()
)
jmsSAFMessageLogFileRotationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSAFMessageLogFileRotationTime.setStatus("current")
_JmsSAFMessageLogFileRotateLogOnStartup_Type = OctetString
_JmsSAFMessageLogFileRotateLogOnStartup_Object = MibTableColumn
jmsSAFMessageLogFileRotateLogOnStartup = _JmsSAFMessageLogFileRotateLogOnStartup_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 970, 1, 13),
    _JmsSAFMessageLogFileRotateLogOnStartup_Type()
)
jmsSAFMessageLogFileRotateLogOnStartup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSAFMessageLogFileRotateLogOnStartup.setStatus("current")
_JmsSAFMessageLogFileName_Type = OctetString
_JmsSAFMessageLogFileName_Object = MibTableColumn
jmsSAFMessageLogFileName = _JmsSAFMessageLogFileName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 970, 1, 14),
    _JmsSAFMessageLogFileName_Type()
)
jmsSAFMessageLogFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSAFMessageLogFileName.setStatus("current")
_JmsSAFMessageLogFileLogFileRotationDir_Type = OctetString
_JmsSAFMessageLogFileLogFileRotationDir_Object = MibTableColumn
jmsSAFMessageLogFileLogFileRotationDir = _JmsSAFMessageLogFileLogFileRotationDir_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 970, 1, 15),
    _JmsSAFMessageLogFileLogFileRotationDir_Type()
)
jmsSAFMessageLogFileLogFileRotationDir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsSAFMessageLogFileLogFileRotationDir.setStatus("current")
_JmxTable_Object = MibTable
jmxTable = _JmxTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 975)
)
if mibBuilder.loadTexts:
    jmxTable.setStatus("current")
_JmxEntry_Object = MibTableRow
jmxEntry = _JmxEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 975, 1)
)
jmxEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmxIndex"),
)
if mibBuilder.loadTexts:
    jmxEntry.setStatus("current")
_JmxIndex_Type = OctetString
_JmxIndex_Object = MibTableColumn
jmxIndex = _JmxIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 975, 1, 1),
    _JmxIndex_Type()
)
jmxIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    jmxIndex.setStatus("current")
_JmxObjectName_Type = OctetString
_JmxObjectName_Object = MibTableColumn
jmxObjectName = _JmxObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 975, 1, 2),
    _JmxObjectName_Type()
)
jmxObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmxObjectName.setStatus("current")
_JmxType_Type = OctetString
_JmxType_Object = MibTableColumn
jmxType = _JmxType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 975, 1, 3),
    _JmxType_Type()
)
jmxType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmxType.setStatus("current")
_JmxCompatibilityMBeanServerEnabled_Type = OctetString
_JmxCompatibilityMBeanServerEnabled_Object = MibTableColumn
jmxCompatibilityMBeanServerEnabled = _JmxCompatibilityMBeanServerEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 975, 1, 4),
    _JmxCompatibilityMBeanServerEnabled_Type()
)
jmxCompatibilityMBeanServerEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmxCompatibilityMBeanServerEnabled.setStatus("current")
_JmxManagementEJBEnabled_Type = OctetString
_JmxManagementEJBEnabled_Object = MibTableColumn
jmxManagementEJBEnabled = _JmxManagementEJBEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 975, 1, 5),
    _JmxManagementEJBEnabled_Type()
)
jmxManagementEJBEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmxManagementEJBEnabled.setStatus("current")
_JmxPlatformMBeanServerEnabled_Type = OctetString
_JmxPlatformMBeanServerEnabled_Object = MibTableColumn
jmxPlatformMBeanServerEnabled = _JmxPlatformMBeanServerEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 975, 1, 6),
    _JmxPlatformMBeanServerEnabled_Type()
)
jmxPlatformMBeanServerEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmxPlatformMBeanServerEnabled.setStatus("current")
_JmxInvocationTimeoutSeconds_Type = Integer32
_JmxInvocationTimeoutSeconds_Object = MibTableColumn
jmxInvocationTimeoutSeconds = _JmxInvocationTimeoutSeconds_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 975, 1, 7),
    _JmxInvocationTimeoutSeconds_Type()
)
jmxInvocationTimeoutSeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmxInvocationTimeoutSeconds.setStatus("current")
_JmxRuntimeMBeanServerEnabled_Type = OctetString
_JmxRuntimeMBeanServerEnabled_Object = MibTableColumn
jmxRuntimeMBeanServerEnabled = _JmxRuntimeMBeanServerEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 975, 1, 8),
    _JmxRuntimeMBeanServerEnabled_Type()
)
jmxRuntimeMBeanServerEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmxRuntimeMBeanServerEnabled.setStatus("current")
_JmxDomainMBeanServerEnabled_Type = OctetString
_JmxDomainMBeanServerEnabled_Object = MibTableColumn
jmxDomainMBeanServerEnabled = _JmxDomainMBeanServerEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 975, 1, 9),
    _JmxDomainMBeanServerEnabled_Type()
)
jmxDomainMBeanServerEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmxDomainMBeanServerEnabled.setStatus("current")
_JmxName_Type = OctetString
_JmxName_Object = MibTableColumn
jmxName = _JmxName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 975, 1, 10),
    _JmxName_Type()
)
jmxName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmxName.setStatus("current")
_JmxEditMBeanServerEnabled_Type = OctetString
_JmxEditMBeanServerEnabled_Object = MibTableColumn
jmxEditMBeanServerEnabled = _JmxEditMBeanServerEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 975, 1, 11),
    _JmxEditMBeanServerEnabled_Type()
)
jmxEditMBeanServerEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmxEditMBeanServerEnabled.setStatus("current")
_JtaMigratableTargetTable_Object = MibTable
jtaMigratableTargetTable = _JtaMigratableTargetTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 980)
)
if mibBuilder.loadTexts:
    jtaMigratableTargetTable.setStatus("current")
_JtaMigratableTargetEntry_Object = MibTableRow
jtaMigratableTargetEntry = _JtaMigratableTargetEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 980, 1)
)
jtaMigratableTargetEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jtaMigratableTargetIndex"),
)
if mibBuilder.loadTexts:
    jtaMigratableTargetEntry.setStatus("current")
_JtaMigratableTargetIndex_Type = OctetString
_JtaMigratableTargetIndex_Object = MibTableColumn
jtaMigratableTargetIndex = _JtaMigratableTargetIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 980, 1, 1),
    _JtaMigratableTargetIndex_Type()
)
jtaMigratableTargetIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    jtaMigratableTargetIndex.setStatus("current")
_JtaMigratableTargetObjectName_Type = OctetString
_JtaMigratableTargetObjectName_Object = MibTableColumn
jtaMigratableTargetObjectName = _JtaMigratableTargetObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 980, 1, 2),
    _JtaMigratableTargetObjectName_Type()
)
jtaMigratableTargetObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaMigratableTargetObjectName.setStatus("current")
_JtaMigratableTargetType_Type = OctetString
_JtaMigratableTargetType_Object = MibTableColumn
jtaMigratableTargetType = _JtaMigratableTargetType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 980, 1, 3),
    _JtaMigratableTargetType_Type()
)
jtaMigratableTargetType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaMigratableTargetType.setStatus("current")
_JtaMigratableTargetPostScript_Type = OctetString
_JtaMigratableTargetPostScript_Object = MibTableColumn
jtaMigratableTargetPostScript = _JtaMigratableTargetPostScript_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 980, 1, 4),
    _JtaMigratableTargetPostScript_Type()
)
jtaMigratableTargetPostScript.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaMigratableTargetPostScript.setStatus("current")
_JtaMigratableTargetMillisToSleepBetweenAttempts_Type = Integer32
_JtaMigratableTargetMillisToSleepBetweenAttempts_Object = MibTableColumn
jtaMigratableTargetMillisToSleepBetweenAttempts = _JtaMigratableTargetMillisToSleepBetweenAttempts_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 980, 1, 5),
    _JtaMigratableTargetMillisToSleepBetweenAttempts_Type()
)
jtaMigratableTargetMillisToSleepBetweenAttempts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaMigratableTargetMillisToSleepBetweenAttempts.setStatus("current")
_JtaMigratableTargetNonLocalPostAllowed_Type = OctetString
_JtaMigratableTargetNonLocalPostAllowed_Object = MibTableColumn
jtaMigratableTargetNonLocalPostAllowed = _JtaMigratableTargetNonLocalPostAllowed_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 980, 1, 6),
    _JtaMigratableTargetNonLocalPostAllowed_Type()
)
jtaMigratableTargetNonLocalPostAllowed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaMigratableTargetNonLocalPostAllowed.setStatus("current")
_JtaMigratableTargetSecondsBetweenRestarts_Type = Integer32
_JtaMigratableTargetSecondsBetweenRestarts_Object = MibTableColumn
jtaMigratableTargetSecondsBetweenRestarts = _JtaMigratableTargetSecondsBetweenRestarts_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 980, 1, 7),
    _JtaMigratableTargetSecondsBetweenRestarts_Type()
)
jtaMigratableTargetSecondsBetweenRestarts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaMigratableTargetSecondsBetweenRestarts.setStatus("current")
_JtaMigratableTargetPostScriptFailureFatal_Type = OctetString
_JtaMigratableTargetPostScriptFailureFatal_Object = MibTableColumn
jtaMigratableTargetPostScriptFailureFatal = _JtaMigratableTargetPostScriptFailureFatal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 980, 1, 8),
    _JtaMigratableTargetPostScriptFailureFatal_Type()
)
jtaMigratableTargetPostScriptFailureFatal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaMigratableTargetPostScriptFailureFatal.setStatus("current")
_JtaMigratableTargetPreScript_Type = OctetString
_JtaMigratableTargetPreScript_Object = MibTableColumn
jtaMigratableTargetPreScript = _JtaMigratableTargetPreScript_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 980, 1, 9),
    _JtaMigratableTargetPreScript_Type()
)
jtaMigratableTargetPreScript.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaMigratableTargetPreScript.setStatus("current")
_JtaMigratableTargetMigrationPolicy_Type = OctetString
_JtaMigratableTargetMigrationPolicy_Object = MibTableColumn
jtaMigratableTargetMigrationPolicy = _JtaMigratableTargetMigrationPolicy_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 980, 1, 10),
    _JtaMigratableTargetMigrationPolicy_Type()
)
jtaMigratableTargetMigrationPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaMigratableTargetMigrationPolicy.setStatus("current")
_JtaMigratableTargetRestartOnFailure_Type = OctetString
_JtaMigratableTargetRestartOnFailure_Object = MibTableColumn
jtaMigratableTargetRestartOnFailure = _JtaMigratableTargetRestartOnFailure_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 980, 1, 11),
    _JtaMigratableTargetRestartOnFailure_Type()
)
jtaMigratableTargetRestartOnFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaMigratableTargetRestartOnFailure.setStatus("current")
_JtaMigratableTargetStrictOwnershipCheck_Type = OctetString
_JtaMigratableTargetStrictOwnershipCheck_Object = MibTableColumn
jtaMigratableTargetStrictOwnershipCheck = _JtaMigratableTargetStrictOwnershipCheck_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 980, 1, 12),
    _JtaMigratableTargetStrictOwnershipCheck_Type()
)
jtaMigratableTargetStrictOwnershipCheck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaMigratableTargetStrictOwnershipCheck.setStatus("current")
_JtaMigratableTargetName_Type = OctetString
_JtaMigratableTargetName_Object = MibTableColumn
jtaMigratableTargetName = _JtaMigratableTargetName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 980, 1, 13),
    _JtaMigratableTargetName_Type()
)
jtaMigratableTargetName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaMigratableTargetName.setStatus("current")
_JtaMigratableTargetAdditionalMigrationAttempts_Type = Integer32
_JtaMigratableTargetAdditionalMigrationAttempts_Object = MibTableColumn
jtaMigratableTargetAdditionalMigrationAttempts = _JtaMigratableTargetAdditionalMigrationAttempts_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 980, 1, 14),
    _JtaMigratableTargetAdditionalMigrationAttempts_Type()
)
jtaMigratableTargetAdditionalMigrationAttempts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaMigratableTargetAdditionalMigrationAttempts.setStatus("current")
_JtaMigratableTargetNumberOfRestartAttempts_Type = Integer32
_JtaMigratableTargetNumberOfRestartAttempts_Object = MibTableColumn
jtaMigratableTargetNumberOfRestartAttempts = _JtaMigratableTargetNumberOfRestartAttempts_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 980, 1, 15),
    _JtaMigratableTargetNumberOfRestartAttempts_Type()
)
jtaMigratableTargetNumberOfRestartAttempts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jtaMigratableTargetNumberOfRestartAttempts.setStatus("current")
_JoltConnectionPoolTable_Object = MibTable
joltConnectionPoolTable = _JoltConnectionPoolTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 985)
)
if mibBuilder.loadTexts:
    joltConnectionPoolTable.setStatus("current")
_JoltConnectionPoolEntry_Object = MibTableRow
joltConnectionPoolEntry = _JoltConnectionPoolEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 985, 1)
)
joltConnectionPoolEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "joltConnectionPoolIndex"),
)
if mibBuilder.loadTexts:
    joltConnectionPoolEntry.setStatus("current")
_JoltConnectionPoolIndex_Type = OctetString
_JoltConnectionPoolIndex_Object = MibTableColumn
joltConnectionPoolIndex = _JoltConnectionPoolIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 985, 1, 1),
    _JoltConnectionPoolIndex_Type()
)
joltConnectionPoolIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    joltConnectionPoolIndex.setStatus("current")
_JoltConnectionPoolObjectName_Type = OctetString
_JoltConnectionPoolObjectName_Object = MibTableColumn
joltConnectionPoolObjectName = _JoltConnectionPoolObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 985, 1, 2),
    _JoltConnectionPoolObjectName_Type()
)
joltConnectionPoolObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolObjectName.setStatus("current")
_JoltConnectionPoolType_Type = OctetString
_JoltConnectionPoolType_Object = MibTableColumn
joltConnectionPoolType = _JoltConnectionPoolType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 985, 1, 3),
    _JoltConnectionPoolType_Type()
)
joltConnectionPoolType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolType.setStatus("current")
_JoltConnectionPoolMinimumPoolSize_Type = Integer32
_JoltConnectionPoolMinimumPoolSize_Object = MibTableColumn
joltConnectionPoolMinimumPoolSize = _JoltConnectionPoolMinimumPoolSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 985, 1, 4),
    _JoltConnectionPoolMinimumPoolSize_Type()
)
joltConnectionPoolMinimumPoolSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolMinimumPoolSize.setStatus("current")
_JoltConnectionPoolMaximumPoolSize_Type = Integer32
_JoltConnectionPoolMaximumPoolSize_Object = MibTableColumn
joltConnectionPoolMaximumPoolSize = _JoltConnectionPoolMaximumPoolSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 985, 1, 5),
    _JoltConnectionPoolMaximumPoolSize_Type()
)
joltConnectionPoolMaximumPoolSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolMaximumPoolSize.setStatus("current")
_JoltConnectionPoolName_Type = OctetString
_JoltConnectionPoolName_Object = MibTableColumn
joltConnectionPoolName = _JoltConnectionPoolName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 985, 1, 6),
    _JoltConnectionPoolName_Type()
)
joltConnectionPoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolName.setStatus("current")
_JoltConnectionPoolUserName_Type = OctetString
_JoltConnectionPoolUserName_Object = MibTableColumn
joltConnectionPoolUserName = _JoltConnectionPoolUserName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 985, 1, 7),
    _JoltConnectionPoolUserName_Type()
)
joltConnectionPoolUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolUserName.setStatus("current")
_JoltConnectionPoolDeploymentOrder_Type = Integer32
_JoltConnectionPoolDeploymentOrder_Object = MibTableColumn
joltConnectionPoolDeploymentOrder = _JoltConnectionPoolDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 985, 1, 8),
    _JoltConnectionPoolDeploymentOrder_Type()
)
joltConnectionPoolDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolDeploymentOrder.setStatus("current")
_JoltConnectionPoolRecvTimeout_Type = Integer32
_JoltConnectionPoolRecvTimeout_Object = MibTableColumn
joltConnectionPoolRecvTimeout = _JoltConnectionPoolRecvTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 985, 1, 9),
    _JoltConnectionPoolRecvTimeout_Type()
)
joltConnectionPoolRecvTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolRecvTimeout.setStatus("current")
_JoltConnectionPoolSecurityContextEnabled_Type = OctetString
_JoltConnectionPoolSecurityContextEnabled_Object = MibTableColumn
joltConnectionPoolSecurityContextEnabled = _JoltConnectionPoolSecurityContextEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 985, 1, 10),
    _JoltConnectionPoolSecurityContextEnabled_Type()
)
joltConnectionPoolSecurityContextEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolSecurityContextEnabled.setStatus("current")
_JoltConnectionPoolTrustStoreName_Type = OctetString
_JoltConnectionPoolTrustStoreName_Object = MibTableColumn
joltConnectionPoolTrustStoreName = _JoltConnectionPoolTrustStoreName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 985, 1, 11),
    _JoltConnectionPoolTrustStoreName_Type()
)
joltConnectionPoolTrustStoreName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolTrustStoreName.setStatus("current")
_JoltConnectionPoolUserRole_Type = OctetString
_JoltConnectionPoolUserRole_Object = MibTableColumn
joltConnectionPoolUserRole = _JoltConnectionPoolUserRole_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 985, 1, 12),
    _JoltConnectionPoolUserRole_Type()
)
joltConnectionPoolUserRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolUserRole.setStatus("current")
_JoltConnectionPoolKeyStoreName_Type = OctetString
_JoltConnectionPoolKeyStoreName_Object = MibTableColumn
joltConnectionPoolKeyStoreName = _JoltConnectionPoolKeyStoreName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 985, 1, 13),
    _JoltConnectionPoolKeyStoreName_Type()
)
joltConnectionPoolKeyStoreName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    joltConnectionPoolKeyStoreName.setStatus("current")
_LogFilterTable_Object = MibTable
logFilterTable = _LogFilterTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 990)
)
if mibBuilder.loadTexts:
    logFilterTable.setStatus("current")
_LogFilterEntry_Object = MibTableRow
logFilterEntry = _LogFilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 990, 1)
)
logFilterEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "logFilterIndex"),
)
if mibBuilder.loadTexts:
    logFilterEntry.setStatus("current")
_LogFilterIndex_Type = OctetString
_LogFilterIndex_Object = MibTableColumn
logFilterIndex = _LogFilterIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 990, 1, 1),
    _LogFilterIndex_Type()
)
logFilterIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    logFilterIndex.setStatus("current")
_LogFilterObjectName_Type = OctetString
_LogFilterObjectName_Object = MibTableColumn
logFilterObjectName = _LogFilterObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 990, 1, 2),
    _LogFilterObjectName_Type()
)
logFilterObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logFilterObjectName.setStatus("current")
_LogFilterType_Type = OctetString
_LogFilterType_Object = MibTableColumn
logFilterType = _LogFilterType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 990, 1, 3),
    _LogFilterType_Type()
)
logFilterType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logFilterType.setStatus("current")
_LogFilterFilterExpression_Type = OctetString
_LogFilterFilterExpression_Object = MibTableColumn
logFilterFilterExpression = _LogFilterFilterExpression_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 990, 1, 4),
    _LogFilterFilterExpression_Type()
)
logFilterFilterExpression.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logFilterFilterExpression.setStatus("current")
_LogFilterName_Type = OctetString
_LogFilterName_Object = MibTableColumn
logFilterName = _LogFilterName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 990, 1, 5),
    _LogFilterName_Type()
)
logFilterName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logFilterName.setStatus("current")
_MailSessionTable_Object = MibTable
mailSessionTable = _MailSessionTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 995)
)
if mibBuilder.loadTexts:
    mailSessionTable.setStatus("current")
_MailSessionEntry_Object = MibTableRow
mailSessionEntry = _MailSessionEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 995, 1)
)
mailSessionEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "mailSessionIndex"),
)
if mibBuilder.loadTexts:
    mailSessionEntry.setStatus("current")
_MailSessionIndex_Type = OctetString
_MailSessionIndex_Object = MibTableColumn
mailSessionIndex = _MailSessionIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 995, 1, 1),
    _MailSessionIndex_Type()
)
mailSessionIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mailSessionIndex.setStatus("current")
_MailSessionObjectName_Type = OctetString
_MailSessionObjectName_Object = MibTableColumn
mailSessionObjectName = _MailSessionObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 995, 1, 2),
    _MailSessionObjectName_Type()
)
mailSessionObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mailSessionObjectName.setStatus("current")
_MailSessionType_Type = OctetString
_MailSessionType_Object = MibTableColumn
mailSessionType = _MailSessionType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 995, 1, 3),
    _MailSessionType_Type()
)
mailSessionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mailSessionType.setStatus("current")
_MailSessionDeploymentOrder_Type = Integer32
_MailSessionDeploymentOrder_Object = MibTableColumn
mailSessionDeploymentOrder = _MailSessionDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 995, 1, 4),
    _MailSessionDeploymentOrder_Type()
)
mailSessionDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mailSessionDeploymentOrder.setStatus("current")
_MailSessionJNDIName_Type = OctetString
_MailSessionJNDIName_Object = MibTableColumn
mailSessionJNDIName = _MailSessionJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 995, 1, 5),
    _MailSessionJNDIName_Type()
)
mailSessionJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mailSessionJNDIName.setStatus("current")
_MailSessionName_Type = OctetString
_MailSessionName_Object = MibTableColumn
mailSessionName = _MailSessionName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 995, 1, 6),
    _MailSessionName_Type()
)
mailSessionName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mailSessionName.setStatus("current")
_MaxThreadsConstraintTable_Object = MibTable
maxThreadsConstraintTable = _MaxThreadsConstraintTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1000)
)
if mibBuilder.loadTexts:
    maxThreadsConstraintTable.setStatus("current")
_MaxThreadsConstraintEntry_Object = MibTableRow
maxThreadsConstraintEntry = _MaxThreadsConstraintEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1000, 1)
)
maxThreadsConstraintEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "maxThreadsConstraintIndex"),
)
if mibBuilder.loadTexts:
    maxThreadsConstraintEntry.setStatus("current")
_MaxThreadsConstraintIndex_Type = OctetString
_MaxThreadsConstraintIndex_Object = MibTableColumn
maxThreadsConstraintIndex = _MaxThreadsConstraintIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1000, 1, 1),
    _MaxThreadsConstraintIndex_Type()
)
maxThreadsConstraintIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    maxThreadsConstraintIndex.setStatus("current")
_MaxThreadsConstraintObjectName_Type = OctetString
_MaxThreadsConstraintObjectName_Object = MibTableColumn
maxThreadsConstraintObjectName = _MaxThreadsConstraintObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1000, 1, 2),
    _MaxThreadsConstraintObjectName_Type()
)
maxThreadsConstraintObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    maxThreadsConstraintObjectName.setStatus("current")
_MaxThreadsConstraintType_Type = OctetString
_MaxThreadsConstraintType_Object = MibTableColumn
maxThreadsConstraintType = _MaxThreadsConstraintType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1000, 1, 3),
    _MaxThreadsConstraintType_Type()
)
maxThreadsConstraintType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    maxThreadsConstraintType.setStatus("current")
_MaxThreadsConstraintDeploymentOrder_Type = Integer32
_MaxThreadsConstraintDeploymentOrder_Object = MibTableColumn
maxThreadsConstraintDeploymentOrder = _MaxThreadsConstraintDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1000, 1, 4),
    _MaxThreadsConstraintDeploymentOrder_Type()
)
maxThreadsConstraintDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    maxThreadsConstraintDeploymentOrder.setStatus("current")
_MaxThreadsConstraintCount_Type = Integer32
_MaxThreadsConstraintCount_Object = MibTableColumn
maxThreadsConstraintCount = _MaxThreadsConstraintCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1000, 1, 5),
    _MaxThreadsConstraintCount_Type()
)
maxThreadsConstraintCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    maxThreadsConstraintCount.setStatus("current")
_MaxThreadsConstraintName_Type = OctetString
_MaxThreadsConstraintName_Object = MibTableColumn
maxThreadsConstraintName = _MaxThreadsConstraintName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1000, 1, 6),
    _MaxThreadsConstraintName_Type()
)
maxThreadsConstraintName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    maxThreadsConstraintName.setStatus("current")
_MaxThreadsConstraintConnectionPoolName_Type = OctetString
_MaxThreadsConstraintConnectionPoolName_Object = MibTableColumn
maxThreadsConstraintConnectionPoolName = _MaxThreadsConstraintConnectionPoolName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1000, 1, 7),
    _MaxThreadsConstraintConnectionPoolName_Type()
)
maxThreadsConstraintConnectionPoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    maxThreadsConstraintConnectionPoolName.setStatus("current")
_MigratableRMIServiceTable_Object = MibTable
migratableRMIServiceTable = _MigratableRMIServiceTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1005)
)
if mibBuilder.loadTexts:
    migratableRMIServiceTable.setStatus("current")
_MigratableRMIServiceEntry_Object = MibTableRow
migratableRMIServiceEntry = _MigratableRMIServiceEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1005, 1)
)
migratableRMIServiceEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "migratableRMIServiceIndex"),
)
if mibBuilder.loadTexts:
    migratableRMIServiceEntry.setStatus("current")
_MigratableRMIServiceIndex_Type = OctetString
_MigratableRMIServiceIndex_Object = MibTableColumn
migratableRMIServiceIndex = _MigratableRMIServiceIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1005, 1, 1),
    _MigratableRMIServiceIndex_Type()
)
migratableRMIServiceIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    migratableRMIServiceIndex.setStatus("current")
_MigratableRMIServiceObjectName_Type = OctetString
_MigratableRMIServiceObjectName_Object = MibTableColumn
migratableRMIServiceObjectName = _MigratableRMIServiceObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1005, 1, 2),
    _MigratableRMIServiceObjectName_Type()
)
migratableRMIServiceObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    migratableRMIServiceObjectName.setStatus("current")
_MigratableRMIServiceType_Type = OctetString
_MigratableRMIServiceType_Object = MibTableColumn
migratableRMIServiceType = _MigratableRMIServiceType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1005, 1, 3),
    _MigratableRMIServiceType_Type()
)
migratableRMIServiceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    migratableRMIServiceType.setStatus("current")
_MigratableRMIServiceDeploymentOrder_Type = Integer32
_MigratableRMIServiceDeploymentOrder_Object = MibTableColumn
migratableRMIServiceDeploymentOrder = _MigratableRMIServiceDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1005, 1, 4),
    _MigratableRMIServiceDeploymentOrder_Type()
)
migratableRMIServiceDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    migratableRMIServiceDeploymentOrder.setStatus("current")
_MigratableRMIServiceName_Type = OctetString
_MigratableRMIServiceName_Object = MibTableColumn
migratableRMIServiceName = _MigratableRMIServiceName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1005, 1, 5),
    _MigratableRMIServiceName_Type()
)
migratableRMIServiceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    migratableRMIServiceName.setStatus("current")
_MinThreadsConstraintTable_Object = MibTable
minThreadsConstraintTable = _MinThreadsConstraintTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1010)
)
if mibBuilder.loadTexts:
    minThreadsConstraintTable.setStatus("current")
_MinThreadsConstraintEntry_Object = MibTableRow
minThreadsConstraintEntry = _MinThreadsConstraintEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1010, 1)
)
minThreadsConstraintEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "minThreadsConstraintIndex"),
)
if mibBuilder.loadTexts:
    minThreadsConstraintEntry.setStatus("current")
_MinThreadsConstraintIndex_Type = OctetString
_MinThreadsConstraintIndex_Object = MibTableColumn
minThreadsConstraintIndex = _MinThreadsConstraintIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1010, 1, 1),
    _MinThreadsConstraintIndex_Type()
)
minThreadsConstraintIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    minThreadsConstraintIndex.setStatus("current")
_MinThreadsConstraintObjectName_Type = OctetString
_MinThreadsConstraintObjectName_Object = MibTableColumn
minThreadsConstraintObjectName = _MinThreadsConstraintObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1010, 1, 2),
    _MinThreadsConstraintObjectName_Type()
)
minThreadsConstraintObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    minThreadsConstraintObjectName.setStatus("current")
_MinThreadsConstraintType_Type = OctetString
_MinThreadsConstraintType_Object = MibTableColumn
minThreadsConstraintType = _MinThreadsConstraintType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1010, 1, 3),
    _MinThreadsConstraintType_Type()
)
minThreadsConstraintType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    minThreadsConstraintType.setStatus("current")
_MinThreadsConstraintDeploymentOrder_Type = Integer32
_MinThreadsConstraintDeploymentOrder_Object = MibTableColumn
minThreadsConstraintDeploymentOrder = _MinThreadsConstraintDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1010, 1, 4),
    _MinThreadsConstraintDeploymentOrder_Type()
)
minThreadsConstraintDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    minThreadsConstraintDeploymentOrder.setStatus("current")
_MinThreadsConstraintCount_Type = Integer32
_MinThreadsConstraintCount_Object = MibTableColumn
minThreadsConstraintCount = _MinThreadsConstraintCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1010, 1, 5),
    _MinThreadsConstraintCount_Type()
)
minThreadsConstraintCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    minThreadsConstraintCount.setStatus("current")
_MinThreadsConstraintName_Type = OctetString
_MinThreadsConstraintName_Object = MibTableColumn
minThreadsConstraintName = _MinThreadsConstraintName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1010, 1, 6),
    _MinThreadsConstraintName_Type()
)
minThreadsConstraintName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    minThreadsConstraintName.setStatus("current")
_OverloadProtectionTable_Object = MibTable
overloadProtectionTable = _OverloadProtectionTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1015)
)
if mibBuilder.loadTexts:
    overloadProtectionTable.setStatus("current")
_OverloadProtectionEntry_Object = MibTableRow
overloadProtectionEntry = _OverloadProtectionEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1015, 1)
)
overloadProtectionEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "overloadProtectionIndex"),
)
if mibBuilder.loadTexts:
    overloadProtectionEntry.setStatus("current")
_OverloadProtectionIndex_Type = OctetString
_OverloadProtectionIndex_Object = MibTableColumn
overloadProtectionIndex = _OverloadProtectionIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1015, 1, 1),
    _OverloadProtectionIndex_Type()
)
overloadProtectionIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    overloadProtectionIndex.setStatus("current")
_OverloadProtectionObjectName_Type = OctetString
_OverloadProtectionObjectName_Object = MibTableColumn
overloadProtectionObjectName = _OverloadProtectionObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1015, 1, 2),
    _OverloadProtectionObjectName_Type()
)
overloadProtectionObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    overloadProtectionObjectName.setStatus("current")
_OverloadProtectionType_Type = OctetString
_OverloadProtectionType_Object = MibTableColumn
overloadProtectionType = _OverloadProtectionType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1015, 1, 3),
    _OverloadProtectionType_Type()
)
overloadProtectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    overloadProtectionType.setStatus("current")
_OverloadProtectionSharedCapacityForWorkManagers_Type = Integer32
_OverloadProtectionSharedCapacityForWorkManagers_Object = MibTableColumn
overloadProtectionSharedCapacityForWorkManagers = _OverloadProtectionSharedCapacityForWorkManagers_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1015, 1, 4),
    _OverloadProtectionSharedCapacityForWorkManagers_Type()
)
overloadProtectionSharedCapacityForWorkManagers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    overloadProtectionSharedCapacityForWorkManagers.setStatus("current")
_OverloadProtectionFreeMemoryPercentLowThreshold_Type = Integer32
_OverloadProtectionFreeMemoryPercentLowThreshold_Object = MibTableColumn
overloadProtectionFreeMemoryPercentLowThreshold = _OverloadProtectionFreeMemoryPercentLowThreshold_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1015, 1, 5),
    _OverloadProtectionFreeMemoryPercentLowThreshold_Type()
)
overloadProtectionFreeMemoryPercentLowThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    overloadProtectionFreeMemoryPercentLowThreshold.setStatus("current")
_OverloadProtectionFailureAction_Type = OctetString
_OverloadProtectionFailureAction_Object = MibTableColumn
overloadProtectionFailureAction = _OverloadProtectionFailureAction_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1015, 1, 6),
    _OverloadProtectionFailureAction_Type()
)
overloadProtectionFailureAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    overloadProtectionFailureAction.setStatus("current")
_OverloadProtectionFreeMemoryPercentHighThreshold_Type = Integer32
_OverloadProtectionFreeMemoryPercentHighThreshold_Object = MibTableColumn
overloadProtectionFreeMemoryPercentHighThreshold = _OverloadProtectionFreeMemoryPercentHighThreshold_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1015, 1, 7),
    _OverloadProtectionFreeMemoryPercentHighThreshold_Type()
)
overloadProtectionFreeMemoryPercentHighThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    overloadProtectionFreeMemoryPercentHighThreshold.setStatus("current")
_OverloadProtectionName_Type = OctetString
_OverloadProtectionName_Object = MibTableColumn
overloadProtectionName = _OverloadProtectionName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1015, 1, 8),
    _OverloadProtectionName_Type()
)
overloadProtectionName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    overloadProtectionName.setStatus("current")
_OverloadProtectionPanicAction_Type = OctetString
_OverloadProtectionPanicAction_Object = MibTableColumn
overloadProtectionPanicAction = _OverloadProtectionPanicAction_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1015, 1, 9),
    _OverloadProtectionPanicAction_Type()
)
overloadProtectionPanicAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    overloadProtectionPanicAction.setStatus("current")
_PathServiceTable_Object = MibTable
pathServiceTable = _PathServiceTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1020)
)
if mibBuilder.loadTexts:
    pathServiceTable.setStatus("current")
_PathServiceEntry_Object = MibTableRow
pathServiceEntry = _PathServiceEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1020, 1)
)
pathServiceEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "pathServiceIndex"),
)
if mibBuilder.loadTexts:
    pathServiceEntry.setStatus("current")
_PathServiceIndex_Type = OctetString
_PathServiceIndex_Object = MibTableColumn
pathServiceIndex = _PathServiceIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1020, 1, 1),
    _PathServiceIndex_Type()
)
pathServiceIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pathServiceIndex.setStatus("current")
_PathServiceObjectName_Type = OctetString
_PathServiceObjectName_Object = MibTableColumn
pathServiceObjectName = _PathServiceObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1020, 1, 2),
    _PathServiceObjectName_Type()
)
pathServiceObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathServiceObjectName.setStatus("current")
_PathServiceType_Type = OctetString
_PathServiceType_Object = MibTableColumn
pathServiceType = _PathServiceType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1020, 1, 3),
    _PathServiceType_Type()
)
pathServiceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathServiceType.setStatus("current")
_PathServiceDeploymentOrder_Type = Integer32
_PathServiceDeploymentOrder_Object = MibTableColumn
pathServiceDeploymentOrder = _PathServiceDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1020, 1, 4),
    _PathServiceDeploymentOrder_Type()
)
pathServiceDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathServiceDeploymentOrder.setStatus("current")
_PathServiceName_Type = OctetString
_PathServiceName_Object = MibTableColumn
pathServiceName = _PathServiceName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1020, 1, 5),
    _PathServiceName_Type()
)
pathServiceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathServiceName.setStatus("current")
_RemoteSAFContextTable_Object = MibTable
remoteSAFContextTable = _RemoteSAFContextTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1025)
)
if mibBuilder.loadTexts:
    remoteSAFContextTable.setStatus("current")
_RemoteSAFContextEntry_Object = MibTableRow
remoteSAFContextEntry = _RemoteSAFContextEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1025, 1)
)
remoteSAFContextEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "remoteSAFContextIndex"),
)
if mibBuilder.loadTexts:
    remoteSAFContextEntry.setStatus("current")
_RemoteSAFContextIndex_Type = OctetString
_RemoteSAFContextIndex_Object = MibTableColumn
remoteSAFContextIndex = _RemoteSAFContextIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1025, 1, 1),
    _RemoteSAFContextIndex_Type()
)
remoteSAFContextIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    remoteSAFContextIndex.setStatus("current")
_RemoteSAFContextObjectName_Type = OctetString
_RemoteSAFContextObjectName_Object = MibTableColumn
remoteSAFContextObjectName = _RemoteSAFContextObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1025, 1, 2),
    _RemoteSAFContextObjectName_Type()
)
remoteSAFContextObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    remoteSAFContextObjectName.setStatus("current")
_RemoteSAFContextType_Type = OctetString
_RemoteSAFContextType_Object = MibTableColumn
remoteSAFContextType = _RemoteSAFContextType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1025, 1, 3),
    _RemoteSAFContextType_Type()
)
remoteSAFContextType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    remoteSAFContextType.setStatus("current")
_RemoteSAFContextProtocol_Type = OctetString
_RemoteSAFContextProtocol_Object = MibTableColumn
remoteSAFContextProtocol = _RemoteSAFContextProtocol_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1025, 1, 4),
    _RemoteSAFContextProtocol_Type()
)
remoteSAFContextProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    remoteSAFContextProtocol.setStatus("current")
_RemoteSAFContextUrl_Type = OctetString
_RemoteSAFContextUrl_Object = MibTableColumn
remoteSAFContextUrl = _RemoteSAFContextUrl_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1025, 1, 5),
    _RemoteSAFContextUrl_Type()
)
remoteSAFContextUrl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    remoteSAFContextUrl.setStatus("current")
_RemoteSAFContextPassword_Type = OctetString
_RemoteSAFContextPassword_Object = MibTableColumn
remoteSAFContextPassword = _RemoteSAFContextPassword_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1025, 1, 6),
    _RemoteSAFContextPassword_Type()
)
remoteSAFContextPassword.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    remoteSAFContextPassword.setStatus("current")
_RemoteSAFContextJndiInitialContextFactory_Type = OctetString
_RemoteSAFContextJndiInitialContextFactory_Object = MibTableColumn
remoteSAFContextJndiInitialContextFactory = _RemoteSAFContextJndiInitialContextFactory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1025, 1, 7),
    _RemoteSAFContextJndiInitialContextFactory_Type()
)
remoteSAFContextJndiInitialContextFactory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    remoteSAFContextJndiInitialContextFactory.setStatus("current")
_RemoteSAFContextName_Type = OctetString
_RemoteSAFContextName_Object = MibTableColumn
remoteSAFContextName = _RemoteSAFContextName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1025, 1, 8),
    _RemoteSAFContextName_Type()
)
remoteSAFContextName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    remoteSAFContextName.setStatus("current")
_RemoteSAFContextJndiProperty_Type = OctetString
_RemoteSAFContextJndiProperty_Object = MibTableColumn
remoteSAFContextJndiProperty = _RemoteSAFContextJndiProperty_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1025, 1, 9),
    _RemoteSAFContextJndiProperty_Type()
)
remoteSAFContextJndiProperty.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    remoteSAFContextJndiProperty.setStatus("current")
_RemoteSAFContextUsername_Type = OctetString
_RemoteSAFContextUsername_Object = MibTableColumn
remoteSAFContextUsername = _RemoteSAFContextUsername_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1025, 1, 10),
    _RemoteSAFContextUsername_Type()
)
remoteSAFContextUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    remoteSAFContextUsername.setStatus("current")
_ResponseTimeRequestClassTable_Object = MibTable
responseTimeRequestClassTable = _ResponseTimeRequestClassTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1030)
)
if mibBuilder.loadTexts:
    responseTimeRequestClassTable.setStatus("current")
_ResponseTimeRequestClassEntry_Object = MibTableRow
responseTimeRequestClassEntry = _ResponseTimeRequestClassEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1030, 1)
)
responseTimeRequestClassEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "responseTimeRequestClassIndex"),
)
if mibBuilder.loadTexts:
    responseTimeRequestClassEntry.setStatus("current")
_ResponseTimeRequestClassIndex_Type = OctetString
_ResponseTimeRequestClassIndex_Object = MibTableColumn
responseTimeRequestClassIndex = _ResponseTimeRequestClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1030, 1, 1),
    _ResponseTimeRequestClassIndex_Type()
)
responseTimeRequestClassIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    responseTimeRequestClassIndex.setStatus("current")
_ResponseTimeRequestClassObjectName_Type = OctetString
_ResponseTimeRequestClassObjectName_Object = MibTableColumn
responseTimeRequestClassObjectName = _ResponseTimeRequestClassObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1030, 1, 2),
    _ResponseTimeRequestClassObjectName_Type()
)
responseTimeRequestClassObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    responseTimeRequestClassObjectName.setStatus("current")
_ResponseTimeRequestClassType_Type = OctetString
_ResponseTimeRequestClassType_Object = MibTableColumn
responseTimeRequestClassType = _ResponseTimeRequestClassType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1030, 1, 3),
    _ResponseTimeRequestClassType_Type()
)
responseTimeRequestClassType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    responseTimeRequestClassType.setStatus("current")
_ResponseTimeRequestClassDeploymentOrder_Type = Integer32
_ResponseTimeRequestClassDeploymentOrder_Object = MibTableColumn
responseTimeRequestClassDeploymentOrder = _ResponseTimeRequestClassDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1030, 1, 4),
    _ResponseTimeRequestClassDeploymentOrder_Type()
)
responseTimeRequestClassDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    responseTimeRequestClassDeploymentOrder.setStatus("current")
_ResponseTimeRequestClassGoalMs_Type = Integer32
_ResponseTimeRequestClassGoalMs_Object = MibTableColumn
responseTimeRequestClassGoalMs = _ResponseTimeRequestClassGoalMs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1030, 1, 5),
    _ResponseTimeRequestClassGoalMs_Type()
)
responseTimeRequestClassGoalMs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    responseTimeRequestClassGoalMs.setStatus("current")
_ResponseTimeRequestClassName_Type = OctetString
_ResponseTimeRequestClassName_Object = MibTableColumn
responseTimeRequestClassName = _ResponseTimeRequestClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1030, 1, 6),
    _ResponseTimeRequestClassName_Type()
)
responseTimeRequestClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    responseTimeRequestClassName.setStatus("current")
_SafAgentTable_Object = MibTable
safAgentTable = _SafAgentTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035)
)
if mibBuilder.loadTexts:
    safAgentTable.setStatus("current")
_SafAgentEntry_Object = MibTableRow
safAgentEntry = _SafAgentEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1)
)
safAgentEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "safAgentIndex"),
)
if mibBuilder.loadTexts:
    safAgentEntry.setStatus("current")
_SafAgentIndex_Type = OctetString
_SafAgentIndex_Object = MibTableColumn
safAgentIndex = _SafAgentIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 1),
    _SafAgentIndex_Type()
)
safAgentIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    safAgentIndex.setStatus("current")
_SafAgentObjectName_Type = OctetString
_SafAgentObjectName_Object = MibTableColumn
safAgentObjectName = _SafAgentObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 2),
    _SafAgentObjectName_Type()
)
safAgentObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentObjectName.setStatus("current")
_SafAgentType_Type = OctetString
_SafAgentType_Object = MibTableColumn
safAgentType = _SafAgentType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 3),
    _SafAgentType_Type()
)
safAgentType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentType.setStatus("current")
_SafAgentForwardingPausedAtStartup_Type = OctetString
_SafAgentForwardingPausedAtStartup_Object = MibTableColumn
safAgentForwardingPausedAtStartup = _SafAgentForwardingPausedAtStartup_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 4),
    _SafAgentForwardingPausedAtStartup_Type()
)
safAgentForwardingPausedAtStartup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentForwardingPausedAtStartup.setStatus("current")
_SafAgentDefaultRetryDelayMultiplier_Type = OctetString
_SafAgentDefaultRetryDelayMultiplier_Object = MibTableColumn
safAgentDefaultRetryDelayMultiplier = _SafAgentDefaultRetryDelayMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 5),
    _SafAgentDefaultRetryDelayMultiplier_Type()
)
safAgentDefaultRetryDelayMultiplier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentDefaultRetryDelayMultiplier.setStatus("current")
_SafAgentLoggingEnabled_Type = OctetString
_SafAgentLoggingEnabled_Object = MibTableColumn
safAgentLoggingEnabled = _SafAgentLoggingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 6),
    _SafAgentLoggingEnabled_Type()
)
safAgentLoggingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentLoggingEnabled.setStatus("current")
_SafAgentBytesThresholdHigh_Type = Counter64
_SafAgentBytesThresholdHigh_Object = MibTableColumn
safAgentBytesThresholdHigh = _SafAgentBytesThresholdHigh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 7),
    _SafAgentBytesThresholdHigh_Type()
)
safAgentBytesThresholdHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentBytesThresholdHigh.setStatus("current")
_SafAgentWindowInterval_Type = Counter64
_SafAgentWindowInterval_Object = MibTableColumn
safAgentWindowInterval = _SafAgentWindowInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 8),
    _SafAgentWindowInterval_Type()
)
safAgentWindowInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentWindowInterval.setStatus("current")
_SafAgentBytesMaximum_Type = Counter64
_SafAgentBytesMaximum_Object = MibTableColumn
safAgentBytesMaximum = _SafAgentBytesMaximum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 9),
    _SafAgentBytesMaximum_Type()
)
safAgentBytesMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentBytesMaximum.setStatus("current")
_SafAgentServiceType_Type = OctetString
_SafAgentServiceType_Object = MibTableColumn
safAgentServiceType = _SafAgentServiceType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 10),
    _SafAgentServiceType_Type()
)
safAgentServiceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentServiceType.setStatus("current")
_SafAgentMessagesThresholdLow_Type = Counter64
_SafAgentMessagesThresholdLow_Object = MibTableColumn
safAgentMessagesThresholdLow = _SafAgentMessagesThresholdLow_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 11),
    _SafAgentMessagesThresholdLow_Type()
)
safAgentMessagesThresholdLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentMessagesThresholdLow.setStatus("current")
_SafAgentMessagesThresholdHigh_Type = Counter64
_SafAgentMessagesThresholdHigh_Object = MibTableColumn
safAgentMessagesThresholdHigh = _SafAgentMessagesThresholdHigh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 12),
    _SafAgentMessagesThresholdHigh_Type()
)
safAgentMessagesThresholdHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentMessagesThresholdHigh.setStatus("current")
_SafAgentIncomingPausedAtStartup_Type = OctetString
_SafAgentIncomingPausedAtStartup_Object = MibTableColumn
safAgentIncomingPausedAtStartup = _SafAgentIncomingPausedAtStartup_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 13),
    _SafAgentIncomingPausedAtStartup_Type()
)
safAgentIncomingPausedAtStartup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentIncomingPausedAtStartup.setStatus("current")
_SafAgentReceivingPausedAtStartup_Type = OctetString
_SafAgentReceivingPausedAtStartup_Object = MibTableColumn
safAgentReceivingPausedAtStartup = _SafAgentReceivingPausedAtStartup_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 14),
    _SafAgentReceivingPausedAtStartup_Type()
)
safAgentReceivingPausedAtStartup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentReceivingPausedAtStartup.setStatus("current")
_SafAgentMessagesMaximum_Type = Counter64
_SafAgentMessagesMaximum_Object = MibTableColumn
safAgentMessagesMaximum = _SafAgentMessagesMaximum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 15),
    _SafAgentMessagesMaximum_Type()
)
safAgentMessagesMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentMessagesMaximum.setStatus("current")
_SafAgentName_Type = OctetString
_SafAgentName_Object = MibTableColumn
safAgentName = _SafAgentName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 16),
    _SafAgentName_Type()
)
safAgentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentName.setStatus("current")
_SafAgentConversationIdleTimeMaximum_Type = Counter64
_SafAgentConversationIdleTimeMaximum_Object = MibTableColumn
safAgentConversationIdleTimeMaximum = _SafAgentConversationIdleTimeMaximum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 17),
    _SafAgentConversationIdleTimeMaximum_Type()
)
safAgentConversationIdleTimeMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentConversationIdleTimeMaximum.setStatus("current")
_SafAgentDefaultRetryDelayMaximum_Type = Counter64
_SafAgentDefaultRetryDelayMaximum_Object = MibTableColumn
safAgentDefaultRetryDelayMaximum = _SafAgentDefaultRetryDelayMaximum_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 18),
    _SafAgentDefaultRetryDelayMaximum_Type()
)
safAgentDefaultRetryDelayMaximum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentDefaultRetryDelayMaximum.setStatus("current")
_SafAgentMaximumMessageSize_Type = Integer32
_SafAgentMaximumMessageSize_Object = MibTableColumn
safAgentMaximumMessageSize = _SafAgentMaximumMessageSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 19),
    _SafAgentMaximumMessageSize_Type()
)
safAgentMaximumMessageSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentMaximumMessageSize.setStatus("current")
_SafAgentAcknowledgeInterval_Type = Counter64
_SafAgentAcknowledgeInterval_Object = MibTableColumn
safAgentAcknowledgeInterval = _SafAgentAcknowledgeInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 20),
    _SafAgentAcknowledgeInterval_Type()
)
safAgentAcknowledgeInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentAcknowledgeInterval.setStatus("current")
_SafAgentDeploymentOrder_Type = Integer32
_SafAgentDeploymentOrder_Object = MibTableColumn
safAgentDeploymentOrder = _SafAgentDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 21),
    _SafAgentDeploymentOrder_Type()
)
safAgentDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentDeploymentOrder.setStatus("current")
_SafAgentMessageBufferSize_Type = Counter64
_SafAgentMessageBufferSize_Object = MibTableColumn
safAgentMessageBufferSize = _SafAgentMessageBufferSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 22),
    _SafAgentMessageBufferSize_Type()
)
safAgentMessageBufferSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentMessageBufferSize.setStatus("current")
_SafAgentWindowSize_Type = Integer32
_SafAgentWindowSize_Object = MibTableColumn
safAgentWindowSize = _SafAgentWindowSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 23),
    _SafAgentWindowSize_Type()
)
safAgentWindowSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentWindowSize.setStatus("current")
_SafAgentDefaultTimeToLive_Type = Counter64
_SafAgentDefaultTimeToLive_Object = MibTableColumn
safAgentDefaultTimeToLive = _SafAgentDefaultTimeToLive_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 24),
    _SafAgentDefaultTimeToLive_Type()
)
safAgentDefaultTimeToLive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentDefaultTimeToLive.setStatus("current")
_SafAgentPagingDirectory_Type = OctetString
_SafAgentPagingDirectory_Object = MibTableColumn
safAgentPagingDirectory = _SafAgentPagingDirectory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 25),
    _SafAgentPagingDirectory_Type()
)
safAgentPagingDirectory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentPagingDirectory.setStatus("current")
_SafAgentBytesThresholdLow_Type = Counter64
_SafAgentBytesThresholdLow_Object = MibTableColumn
safAgentBytesThresholdLow = _SafAgentBytesThresholdLow_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 26),
    _SafAgentBytesThresholdLow_Type()
)
safAgentBytesThresholdLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentBytesThresholdLow.setStatus("current")
_SafAgentDefaultRetryDelayBase_Type = Counter64
_SafAgentDefaultRetryDelayBase_Object = MibTableColumn
safAgentDefaultRetryDelayBase = _SafAgentDefaultRetryDelayBase_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1035, 1, 27),
    _SafAgentDefaultRetryDelayBase_Type()
)
safAgentDefaultRetryDelayBase.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safAgentDefaultRetryDelayBase.setStatus("current")
_WlssnmpAgentDeploymentTable_Object = MibTable
wlssnmpAgentDeploymentTable = _WlssnmpAgentDeploymentTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040)
)
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentTable.setStatus("current")
_WlssnmpAgentDeploymentEntry_Object = MibTableRow
wlssnmpAgentDeploymentEntry = _WlssnmpAgentDeploymentEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040, 1)
)
wlssnmpAgentDeploymentEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wlssnmpAgentDeploymentIndex"),
)
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentEntry.setStatus("current")
_WlssnmpAgentDeploymentIndex_Type = OctetString
_WlssnmpAgentDeploymentIndex_Object = MibTableColumn
wlssnmpAgentDeploymentIndex = _WlssnmpAgentDeploymentIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040, 1, 1),
    _WlssnmpAgentDeploymentIndex_Type()
)
wlssnmpAgentDeploymentIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentIndex.setStatus("current")
_WlssnmpAgentDeploymentObjectName_Type = OctetString
_WlssnmpAgentDeploymentObjectName_Object = MibTableColumn
wlssnmpAgentDeploymentObjectName = _WlssnmpAgentDeploymentObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040, 1, 2),
    _WlssnmpAgentDeploymentObjectName_Type()
)
wlssnmpAgentDeploymentObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentObjectName.setStatus("current")
_WlssnmpAgentDeploymentType_Type = OctetString
_WlssnmpAgentDeploymentType_Object = MibTableColumn
wlssnmpAgentDeploymentType = _WlssnmpAgentDeploymentType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040, 1, 3),
    _WlssnmpAgentDeploymentType_Type()
)
wlssnmpAgentDeploymentType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentType.setStatus("current")
_WlssnmpAgentDeploymentCommunityPrefix_Type = OctetString
_WlssnmpAgentDeploymentCommunityPrefix_Object = MibTableColumn
wlssnmpAgentDeploymentCommunityPrefix = _WlssnmpAgentDeploymentCommunityPrefix_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040, 1, 4),
    _WlssnmpAgentDeploymentCommunityPrefix_Type()
)
wlssnmpAgentDeploymentCommunityPrefix.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentCommunityPrefix.setStatus("current")
_WlssnmpAgentDeploymentAuthenticationProtocol_Type = OctetString
_WlssnmpAgentDeploymentAuthenticationProtocol_Object = MibTableColumn
wlssnmpAgentDeploymentAuthenticationProtocol = _WlssnmpAgentDeploymentAuthenticationProtocol_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040, 1, 5),
    _WlssnmpAgentDeploymentAuthenticationProtocol_Type()
)
wlssnmpAgentDeploymentAuthenticationProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentAuthenticationProtocol.setStatus("current")
_WlssnmpAgentDeploymentSNMPPort_Type = Integer32
_WlssnmpAgentDeploymentSNMPPort_Object = MibTableColumn
wlssnmpAgentDeploymentSNMPPort = _WlssnmpAgentDeploymentSNMPPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040, 1, 6),
    _WlssnmpAgentDeploymentSNMPPort_Type()
)
wlssnmpAgentDeploymentSNMPPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentSNMPPort.setStatus("current")
_WlssnmpAgentDeploymentSNMPEngineId_Type = OctetString
_WlssnmpAgentDeploymentSNMPEngineId_Object = MibTableColumn
wlssnmpAgentDeploymentSNMPEngineId = _WlssnmpAgentDeploymentSNMPEngineId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040, 1, 7),
    _WlssnmpAgentDeploymentSNMPEngineId_Type()
)
wlssnmpAgentDeploymentSNMPEngineId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentSNMPEngineId.setStatus("current")
_WlssnmpAgentDeploymentSNMPAccessForUserMBeansEnabled_Type = OctetString
_WlssnmpAgentDeploymentSNMPAccessForUserMBeansEnabled_Object = MibTableColumn
wlssnmpAgentDeploymentSNMPAccessForUserMBeansEnabled = _WlssnmpAgentDeploymentSNMPAccessForUserMBeansEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040, 1, 8),
    _WlssnmpAgentDeploymentSNMPAccessForUserMBeansEnabled_Type()
)
wlssnmpAgentDeploymentSNMPAccessForUserMBeansEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentSNMPAccessForUserMBeansEnabled.setStatus("current")
_WlssnmpAgentDeploymentLocalizedKeyCacheInvalidationInterval_Type = Counter64
_WlssnmpAgentDeploymentLocalizedKeyCacheInvalidationInterval_Object = MibTableColumn
wlssnmpAgentDeploymentLocalizedKeyCacheInvalidationInterval = _WlssnmpAgentDeploymentLocalizedKeyCacheInvalidationInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040, 1, 9),
    _WlssnmpAgentDeploymentLocalizedKeyCacheInvalidationInterval_Type()
)
wlssnmpAgentDeploymentLocalizedKeyCacheInvalidationInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentLocalizedKeyCacheInvalidationInterval.setStatus("current")
_WlssnmpAgentDeploymentEnabled_Type = OctetString
_WlssnmpAgentDeploymentEnabled_Object = MibTableColumn
wlssnmpAgentDeploymentEnabled = _WlssnmpAgentDeploymentEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040, 1, 10),
    _WlssnmpAgentDeploymentEnabled_Type()
)
wlssnmpAgentDeploymentEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentEnabled.setStatus("current")
_WlssnmpAgentDeploymentName_Type = OctetString
_WlssnmpAgentDeploymentName_Object = MibTableColumn
wlssnmpAgentDeploymentName = _WlssnmpAgentDeploymentName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040, 1, 11),
    _WlssnmpAgentDeploymentName_Type()
)
wlssnmpAgentDeploymentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentName.setStatus("current")
_WlssnmpAgentDeploymentInformEnabled_Type = OctetString
_WlssnmpAgentDeploymentInformEnabled_Object = MibTableColumn
wlssnmpAgentDeploymentInformEnabled = _WlssnmpAgentDeploymentInformEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040, 1, 12),
    _WlssnmpAgentDeploymentInformEnabled_Type()
)
wlssnmpAgentDeploymentInformEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentInformEnabled.setStatus("current")
_WlssnmpAgentDeploymentSendAutomaticTrapsEnabled_Type = OctetString
_WlssnmpAgentDeploymentSendAutomaticTrapsEnabled_Object = MibTableColumn
wlssnmpAgentDeploymentSendAutomaticTrapsEnabled = _WlssnmpAgentDeploymentSendAutomaticTrapsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040, 1, 13),
    _WlssnmpAgentDeploymentSendAutomaticTrapsEnabled_Type()
)
wlssnmpAgentDeploymentSendAutomaticTrapsEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentSendAutomaticTrapsEnabled.setStatus("current")
_WlssnmpAgentDeploymentInformRetryInterval_Type = Integer32
_WlssnmpAgentDeploymentInformRetryInterval_Object = MibTableColumn
wlssnmpAgentDeploymentInformRetryInterval = _WlssnmpAgentDeploymentInformRetryInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040, 1, 14),
    _WlssnmpAgentDeploymentInformRetryInterval_Type()
)
wlssnmpAgentDeploymentInformRetryInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentInformRetryInterval.setStatus("current")
_WlssnmpAgentDeploymentDeploymentOrder_Type = Integer32
_WlssnmpAgentDeploymentDeploymentOrder_Object = MibTableColumn
wlssnmpAgentDeploymentDeploymentOrder = _WlssnmpAgentDeploymentDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040, 1, 15),
    _WlssnmpAgentDeploymentDeploymentOrder_Type()
)
wlssnmpAgentDeploymentDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentDeploymentOrder.setStatus("current")
_WlssnmpAgentDeploymentPrivacyProtocol_Type = OctetString
_WlssnmpAgentDeploymentPrivacyProtocol_Object = MibTableColumn
wlssnmpAgentDeploymentPrivacyProtocol = _WlssnmpAgentDeploymentPrivacyProtocol_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040, 1, 16),
    _WlssnmpAgentDeploymentPrivacyProtocol_Type()
)
wlssnmpAgentDeploymentPrivacyProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentPrivacyProtocol.setStatus("current")
_WlssnmpAgentDeploymentMasterAgentXPort_Type = Integer32
_WlssnmpAgentDeploymentMasterAgentXPort_Object = MibTableColumn
wlssnmpAgentDeploymentMasterAgentXPort = _WlssnmpAgentDeploymentMasterAgentXPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040, 1, 17),
    _WlssnmpAgentDeploymentMasterAgentXPort_Type()
)
wlssnmpAgentDeploymentMasterAgentXPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentMasterAgentXPort.setStatus("current")
_WlssnmpAgentDeploymentSNMPTrapVersion_Type = Integer32
_WlssnmpAgentDeploymentSNMPTrapVersion_Object = MibTableColumn
wlssnmpAgentDeploymentSNMPTrapVersion = _WlssnmpAgentDeploymentSNMPTrapVersion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040, 1, 18),
    _WlssnmpAgentDeploymentSNMPTrapVersion_Type()
)
wlssnmpAgentDeploymentSNMPTrapVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentSNMPTrapVersion.setStatus("current")
_WlssnmpAgentDeploymentMaxInformRetryCount_Type = Integer32
_WlssnmpAgentDeploymentMaxInformRetryCount_Object = MibTableColumn
wlssnmpAgentDeploymentMaxInformRetryCount = _WlssnmpAgentDeploymentMaxInformRetryCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040, 1, 19),
    _WlssnmpAgentDeploymentMaxInformRetryCount_Type()
)
wlssnmpAgentDeploymentMaxInformRetryCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentMaxInformRetryCount.setStatus("current")
_WlssnmpAgentDeploymentCommunityBasedAccessEnabled_Type = OctetString
_WlssnmpAgentDeploymentCommunityBasedAccessEnabled_Object = MibTableColumn
wlssnmpAgentDeploymentCommunityBasedAccessEnabled = _WlssnmpAgentDeploymentCommunityBasedAccessEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1040, 1, 20),
    _WlssnmpAgentDeploymentCommunityBasedAccessEnabled_Type()
)
wlssnmpAgentDeploymentCommunityBasedAccessEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentDeploymentCommunityBasedAccessEnabled.setStatus("current")
_WlssnmpAttributeChangeTable_Object = MibTable
wlssnmpAttributeChangeTable = _WlssnmpAttributeChangeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1045)
)
if mibBuilder.loadTexts:
    wlssnmpAttributeChangeTable.setStatus("current")
_WlssnmpAttributeChangeEntry_Object = MibTableRow
wlssnmpAttributeChangeEntry = _WlssnmpAttributeChangeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1045, 1)
)
wlssnmpAttributeChangeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wlssnmpAttributeChangeIndex"),
)
if mibBuilder.loadTexts:
    wlssnmpAttributeChangeEntry.setStatus("current")
_WlssnmpAttributeChangeIndex_Type = OctetString
_WlssnmpAttributeChangeIndex_Object = MibTableColumn
wlssnmpAttributeChangeIndex = _WlssnmpAttributeChangeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1045, 1, 1),
    _WlssnmpAttributeChangeIndex_Type()
)
wlssnmpAttributeChangeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wlssnmpAttributeChangeIndex.setStatus("current")
_WlssnmpAttributeChangeObjectName_Type = OctetString
_WlssnmpAttributeChangeObjectName_Object = MibTableColumn
wlssnmpAttributeChangeObjectName = _WlssnmpAttributeChangeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1045, 1, 2),
    _WlssnmpAttributeChangeObjectName_Type()
)
wlssnmpAttributeChangeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAttributeChangeObjectName.setStatus("current")
_WlssnmpAttributeChangeType_Type = OctetString
_WlssnmpAttributeChangeType_Object = MibTableColumn
wlssnmpAttributeChangeType = _WlssnmpAttributeChangeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1045, 1, 3),
    _WlssnmpAttributeChangeType_Type()
)
wlssnmpAttributeChangeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAttributeChangeType.setStatus("current")
_WlssnmpAttributeChangeAttributeName_Type = OctetString
_WlssnmpAttributeChangeAttributeName_Object = MibTableColumn
wlssnmpAttributeChangeAttributeName = _WlssnmpAttributeChangeAttributeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1045, 1, 4),
    _WlssnmpAttributeChangeAttributeName_Type()
)
wlssnmpAttributeChangeAttributeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAttributeChangeAttributeName.setStatus("current")
_WlssnmpAttributeChangeAttributeMBeanName_Type = OctetString
_WlssnmpAttributeChangeAttributeMBeanName_Object = MibTableColumn
wlssnmpAttributeChangeAttributeMBeanName = _WlssnmpAttributeChangeAttributeMBeanName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1045, 1, 5),
    _WlssnmpAttributeChangeAttributeMBeanName_Type()
)
wlssnmpAttributeChangeAttributeMBeanName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAttributeChangeAttributeMBeanName.setStatus("current")
_WlssnmpAttributeChangeAttributeMBeanType_Type = OctetString
_WlssnmpAttributeChangeAttributeMBeanType_Object = MibTableColumn
wlssnmpAttributeChangeAttributeMBeanType = _WlssnmpAttributeChangeAttributeMBeanType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1045, 1, 6),
    _WlssnmpAttributeChangeAttributeMBeanType_Type()
)
wlssnmpAttributeChangeAttributeMBeanType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAttributeChangeAttributeMBeanType.setStatus("current")
_WlssnmpAttributeChangeName_Type = OctetString
_WlssnmpAttributeChangeName_Object = MibTableColumn
wlssnmpAttributeChangeName = _WlssnmpAttributeChangeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1045, 1, 7),
    _WlssnmpAttributeChangeName_Type()
)
wlssnmpAttributeChangeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAttributeChangeName.setStatus("current")
_WlssnmpCounterMonitorTable_Object = MibTable
wlssnmpCounterMonitorTable = _WlssnmpCounterMonitorTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1050)
)
if mibBuilder.loadTexts:
    wlssnmpCounterMonitorTable.setStatus("current")
_WlssnmpCounterMonitorEntry_Object = MibTableRow
wlssnmpCounterMonitorEntry = _WlssnmpCounterMonitorEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1050, 1)
)
wlssnmpCounterMonitorEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wlssnmpCounterMonitorIndex"),
)
if mibBuilder.loadTexts:
    wlssnmpCounterMonitorEntry.setStatus("current")
_WlssnmpCounterMonitorIndex_Type = OctetString
_WlssnmpCounterMonitorIndex_Object = MibTableColumn
wlssnmpCounterMonitorIndex = _WlssnmpCounterMonitorIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1050, 1, 1),
    _WlssnmpCounterMonitorIndex_Type()
)
wlssnmpCounterMonitorIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wlssnmpCounterMonitorIndex.setStatus("current")
_WlssnmpCounterMonitorObjectName_Type = OctetString
_WlssnmpCounterMonitorObjectName_Object = MibTableColumn
wlssnmpCounterMonitorObjectName = _WlssnmpCounterMonitorObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1050, 1, 2),
    _WlssnmpCounterMonitorObjectName_Type()
)
wlssnmpCounterMonitorObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpCounterMonitorObjectName.setStatus("current")
_WlssnmpCounterMonitorType_Type = OctetString
_WlssnmpCounterMonitorType_Object = MibTableColumn
wlssnmpCounterMonitorType = _WlssnmpCounterMonitorType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1050, 1, 3),
    _WlssnmpCounterMonitorType_Type()
)
wlssnmpCounterMonitorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpCounterMonitorType.setStatus("current")
_WlssnmpCounterMonitorMonitoredAttributeName_Type = OctetString
_WlssnmpCounterMonitorMonitoredAttributeName_Object = MibTableColumn
wlssnmpCounterMonitorMonitoredAttributeName = _WlssnmpCounterMonitorMonitoredAttributeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1050, 1, 4),
    _WlssnmpCounterMonitorMonitoredAttributeName_Type()
)
wlssnmpCounterMonitorMonitoredAttributeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpCounterMonitorMonitoredAttributeName.setStatus("current")
_WlssnmpCounterMonitorMonitoredMBeanType_Type = OctetString
_WlssnmpCounterMonitorMonitoredMBeanType_Object = MibTableColumn
wlssnmpCounterMonitorMonitoredMBeanType = _WlssnmpCounterMonitorMonitoredMBeanType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1050, 1, 5),
    _WlssnmpCounterMonitorMonitoredMBeanType_Type()
)
wlssnmpCounterMonitorMonitoredMBeanType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpCounterMonitorMonitoredMBeanType.setStatus("current")
_WlssnmpCounterMonitorOffset_Type = Integer32
_WlssnmpCounterMonitorOffset_Object = MibTableColumn
wlssnmpCounterMonitorOffset = _WlssnmpCounterMonitorOffset_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1050, 1, 6),
    _WlssnmpCounterMonitorOffset_Type()
)
wlssnmpCounterMonitorOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpCounterMonitorOffset.setStatus("current")
_WlssnmpCounterMonitorModulus_Type = Integer32
_WlssnmpCounterMonitorModulus_Object = MibTableColumn
wlssnmpCounterMonitorModulus = _WlssnmpCounterMonitorModulus_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1050, 1, 7),
    _WlssnmpCounterMonitorModulus_Type()
)
wlssnmpCounterMonitorModulus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpCounterMonitorModulus.setStatus("current")
_WlssnmpCounterMonitorName_Type = OctetString
_WlssnmpCounterMonitorName_Object = MibTableColumn
wlssnmpCounterMonitorName = _WlssnmpCounterMonitorName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1050, 1, 8),
    _WlssnmpCounterMonitorName_Type()
)
wlssnmpCounterMonitorName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpCounterMonitorName.setStatus("current")
_WlssnmpCounterMonitorPollingInterval_Type = Integer32
_WlssnmpCounterMonitorPollingInterval_Object = MibTableColumn
wlssnmpCounterMonitorPollingInterval = _WlssnmpCounterMonitorPollingInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1050, 1, 9),
    _WlssnmpCounterMonitorPollingInterval_Type()
)
wlssnmpCounterMonitorPollingInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpCounterMonitorPollingInterval.setStatus("current")
_WlssnmpCounterMonitorThreshold_Type = Integer32
_WlssnmpCounterMonitorThreshold_Object = MibTableColumn
wlssnmpCounterMonitorThreshold = _WlssnmpCounterMonitorThreshold_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1050, 1, 10),
    _WlssnmpCounterMonitorThreshold_Type()
)
wlssnmpCounterMonitorThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpCounterMonitorThreshold.setStatus("current")
_WlssnmpCounterMonitorMonitoredMBeanName_Type = OctetString
_WlssnmpCounterMonitorMonitoredMBeanName_Object = MibTableColumn
wlssnmpCounterMonitorMonitoredMBeanName = _WlssnmpCounterMonitorMonitoredMBeanName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1050, 1, 11),
    _WlssnmpCounterMonitorMonitoredMBeanName_Type()
)
wlssnmpCounterMonitorMonitoredMBeanName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpCounterMonitorMonitoredMBeanName.setStatus("current")
_WlssnmpGaugeMonitorTable_Object = MibTable
wlssnmpGaugeMonitorTable = _WlssnmpGaugeMonitorTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1055)
)
if mibBuilder.loadTexts:
    wlssnmpGaugeMonitorTable.setStatus("current")
_WlssnmpGaugeMonitorEntry_Object = MibTableRow
wlssnmpGaugeMonitorEntry = _WlssnmpGaugeMonitorEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1055, 1)
)
wlssnmpGaugeMonitorEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wlssnmpGaugeMonitorIndex"),
)
if mibBuilder.loadTexts:
    wlssnmpGaugeMonitorEntry.setStatus("current")
_WlssnmpGaugeMonitorIndex_Type = OctetString
_WlssnmpGaugeMonitorIndex_Object = MibTableColumn
wlssnmpGaugeMonitorIndex = _WlssnmpGaugeMonitorIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1055, 1, 1),
    _WlssnmpGaugeMonitorIndex_Type()
)
wlssnmpGaugeMonitorIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wlssnmpGaugeMonitorIndex.setStatus("current")
_WlssnmpGaugeMonitorObjectName_Type = OctetString
_WlssnmpGaugeMonitorObjectName_Object = MibTableColumn
wlssnmpGaugeMonitorObjectName = _WlssnmpGaugeMonitorObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1055, 1, 2),
    _WlssnmpGaugeMonitorObjectName_Type()
)
wlssnmpGaugeMonitorObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpGaugeMonitorObjectName.setStatus("current")
_WlssnmpGaugeMonitorType_Type = OctetString
_WlssnmpGaugeMonitorType_Object = MibTableColumn
wlssnmpGaugeMonitorType = _WlssnmpGaugeMonitorType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1055, 1, 3),
    _WlssnmpGaugeMonitorType_Type()
)
wlssnmpGaugeMonitorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpGaugeMonitorType.setStatus("current")
_WlssnmpGaugeMonitorThresholdLow_Type = Integer32
_WlssnmpGaugeMonitorThresholdLow_Object = MibTableColumn
wlssnmpGaugeMonitorThresholdLow = _WlssnmpGaugeMonitorThresholdLow_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1055, 1, 4),
    _WlssnmpGaugeMonitorThresholdLow_Type()
)
wlssnmpGaugeMonitorThresholdLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpGaugeMonitorThresholdLow.setStatus("current")
_WlssnmpGaugeMonitorMonitoredAttributeName_Type = OctetString
_WlssnmpGaugeMonitorMonitoredAttributeName_Object = MibTableColumn
wlssnmpGaugeMonitorMonitoredAttributeName = _WlssnmpGaugeMonitorMonitoredAttributeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1055, 1, 5),
    _WlssnmpGaugeMonitorMonitoredAttributeName_Type()
)
wlssnmpGaugeMonitorMonitoredAttributeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpGaugeMonitorMonitoredAttributeName.setStatus("current")
_WlssnmpGaugeMonitorThresholdHigh_Type = Integer32
_WlssnmpGaugeMonitorThresholdHigh_Object = MibTableColumn
wlssnmpGaugeMonitorThresholdHigh = _WlssnmpGaugeMonitorThresholdHigh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1055, 1, 6),
    _WlssnmpGaugeMonitorThresholdHigh_Type()
)
wlssnmpGaugeMonitorThresholdHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpGaugeMonitorThresholdHigh.setStatus("current")
_WlssnmpGaugeMonitorMonitoredMBeanType_Type = OctetString
_WlssnmpGaugeMonitorMonitoredMBeanType_Object = MibTableColumn
wlssnmpGaugeMonitorMonitoredMBeanType = _WlssnmpGaugeMonitorMonitoredMBeanType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1055, 1, 7),
    _WlssnmpGaugeMonitorMonitoredMBeanType_Type()
)
wlssnmpGaugeMonitorMonitoredMBeanType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpGaugeMonitorMonitoredMBeanType.setStatus("current")
_WlssnmpGaugeMonitorName_Type = OctetString
_WlssnmpGaugeMonitorName_Object = MibTableColumn
wlssnmpGaugeMonitorName = _WlssnmpGaugeMonitorName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1055, 1, 8),
    _WlssnmpGaugeMonitorName_Type()
)
wlssnmpGaugeMonitorName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpGaugeMonitorName.setStatus("current")
_WlssnmpGaugeMonitorPollingInterval_Type = Integer32
_WlssnmpGaugeMonitorPollingInterval_Object = MibTableColumn
wlssnmpGaugeMonitorPollingInterval = _WlssnmpGaugeMonitorPollingInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1055, 1, 9),
    _WlssnmpGaugeMonitorPollingInterval_Type()
)
wlssnmpGaugeMonitorPollingInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpGaugeMonitorPollingInterval.setStatus("current")
_WlssnmpGaugeMonitorMonitoredMBeanName_Type = OctetString
_WlssnmpGaugeMonitorMonitoredMBeanName_Object = MibTableColumn
wlssnmpGaugeMonitorMonitoredMBeanName = _WlssnmpGaugeMonitorMonitoredMBeanName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1055, 1, 10),
    _WlssnmpGaugeMonitorMonitoredMBeanName_Type()
)
wlssnmpGaugeMonitorMonitoredMBeanName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpGaugeMonitorMonitoredMBeanName.setStatus("current")
_WlssnmpLogFilterTable_Object = MibTable
wlssnmpLogFilterTable = _WlssnmpLogFilterTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1060)
)
if mibBuilder.loadTexts:
    wlssnmpLogFilterTable.setStatus("current")
_WlssnmpLogFilterEntry_Object = MibTableRow
wlssnmpLogFilterEntry = _WlssnmpLogFilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1060, 1)
)
wlssnmpLogFilterEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wlssnmpLogFilterIndex"),
)
if mibBuilder.loadTexts:
    wlssnmpLogFilterEntry.setStatus("current")
_WlssnmpLogFilterIndex_Type = OctetString
_WlssnmpLogFilterIndex_Object = MibTableColumn
wlssnmpLogFilterIndex = _WlssnmpLogFilterIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1060, 1, 1),
    _WlssnmpLogFilterIndex_Type()
)
wlssnmpLogFilterIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wlssnmpLogFilterIndex.setStatus("current")
_WlssnmpLogFilterObjectName_Type = OctetString
_WlssnmpLogFilterObjectName_Object = MibTableColumn
wlssnmpLogFilterObjectName = _WlssnmpLogFilterObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1060, 1, 2),
    _WlssnmpLogFilterObjectName_Type()
)
wlssnmpLogFilterObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpLogFilterObjectName.setStatus("current")
_WlssnmpLogFilterType_Type = OctetString
_WlssnmpLogFilterType_Object = MibTableColumn
wlssnmpLogFilterType = _WlssnmpLogFilterType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1060, 1, 3),
    _WlssnmpLogFilterType_Type()
)
wlssnmpLogFilterType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpLogFilterType.setStatus("current")
_WlssnmpLogFilterSeverityLevel_Type = OctetString
_WlssnmpLogFilterSeverityLevel_Object = MibTableColumn
wlssnmpLogFilterSeverityLevel = _WlssnmpLogFilterSeverityLevel_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1060, 1, 4),
    _WlssnmpLogFilterSeverityLevel_Type()
)
wlssnmpLogFilterSeverityLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpLogFilterSeverityLevel.setStatus("current")
_WlssnmpLogFilterMessageSubstring_Type = OctetString
_WlssnmpLogFilterMessageSubstring_Object = MibTableColumn
wlssnmpLogFilterMessageSubstring = _WlssnmpLogFilterMessageSubstring_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1060, 1, 5),
    _WlssnmpLogFilterMessageSubstring_Type()
)
wlssnmpLogFilterMessageSubstring.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpLogFilterMessageSubstring.setStatus("current")
_WlssnmpLogFilterName_Type = OctetString
_WlssnmpLogFilterName_Object = MibTableColumn
wlssnmpLogFilterName = _WlssnmpLogFilterName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1060, 1, 6),
    _WlssnmpLogFilterName_Type()
)
wlssnmpLogFilterName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpLogFilterName.setStatus("current")
_WlssnmpProxyTable_Object = MibTable
wlssnmpProxyTable = _WlssnmpProxyTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1065)
)
if mibBuilder.loadTexts:
    wlssnmpProxyTable.setStatus("current")
_WlssnmpProxyEntry_Object = MibTableRow
wlssnmpProxyEntry = _WlssnmpProxyEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1065, 1)
)
wlssnmpProxyEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wlssnmpProxyIndex"),
)
if mibBuilder.loadTexts:
    wlssnmpProxyEntry.setStatus("current")
_WlssnmpProxyIndex_Type = OctetString
_WlssnmpProxyIndex_Object = MibTableColumn
wlssnmpProxyIndex = _WlssnmpProxyIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1065, 1, 1),
    _WlssnmpProxyIndex_Type()
)
wlssnmpProxyIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wlssnmpProxyIndex.setStatus("current")
_WlssnmpProxyObjectName_Type = OctetString
_WlssnmpProxyObjectName_Object = MibTableColumn
wlssnmpProxyObjectName = _WlssnmpProxyObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1065, 1, 2),
    _WlssnmpProxyObjectName_Type()
)
wlssnmpProxyObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpProxyObjectName.setStatus("current")
_WlssnmpProxyType_Type = OctetString
_WlssnmpProxyType_Object = MibTableColumn
wlssnmpProxyType = _WlssnmpProxyType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1065, 1, 3),
    _WlssnmpProxyType_Type()
)
wlssnmpProxyType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpProxyType.setStatus("current")
_WlssnmpProxyTimeout_Type = Counter64
_WlssnmpProxyTimeout_Object = MibTableColumn
wlssnmpProxyTimeout = _WlssnmpProxyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1065, 1, 4),
    _WlssnmpProxyTimeout_Type()
)
wlssnmpProxyTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpProxyTimeout.setStatus("current")
_WlssnmpProxySecurityName_Type = OctetString
_WlssnmpProxySecurityName_Object = MibTableColumn
wlssnmpProxySecurityName = _WlssnmpProxySecurityName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1065, 1, 5),
    _WlssnmpProxySecurityName_Type()
)
wlssnmpProxySecurityName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpProxySecurityName.setStatus("current")
_WlssnmpProxyPort_Type = Integer32
_WlssnmpProxyPort_Object = MibTableColumn
wlssnmpProxyPort = _WlssnmpProxyPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1065, 1, 6),
    _WlssnmpProxyPort_Type()
)
wlssnmpProxyPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpProxyPort.setStatus("current")
_WlssnmpProxySecurityLevel_Type = OctetString
_WlssnmpProxySecurityLevel_Object = MibTableColumn
wlssnmpProxySecurityLevel = _WlssnmpProxySecurityLevel_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1065, 1, 7),
    _WlssnmpProxySecurityLevel_Type()
)
wlssnmpProxySecurityLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpProxySecurityLevel.setStatus("current")
_WlssnmpProxyOidRoot_Type = OctetString
_WlssnmpProxyOidRoot_Object = MibTableColumn
wlssnmpProxyOidRoot = _WlssnmpProxyOidRoot_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1065, 1, 8),
    _WlssnmpProxyOidRoot_Type()
)
wlssnmpProxyOidRoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpProxyOidRoot.setStatus("current")
_WlssnmpProxyCommunity_Type = OctetString
_WlssnmpProxyCommunity_Object = MibTableColumn
wlssnmpProxyCommunity = _WlssnmpProxyCommunity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1065, 1, 9),
    _WlssnmpProxyCommunity_Type()
)
wlssnmpProxyCommunity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpProxyCommunity.setStatus("current")
_WlssnmpProxyName_Type = OctetString
_WlssnmpProxyName_Object = MibTableColumn
wlssnmpProxyName = _WlssnmpProxyName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1065, 1, 10),
    _WlssnmpProxyName_Type()
)
wlssnmpProxyName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpProxyName.setStatus("current")
_WlssnmpStringMonitorTable_Object = MibTable
wlssnmpStringMonitorTable = _WlssnmpStringMonitorTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1070)
)
if mibBuilder.loadTexts:
    wlssnmpStringMonitorTable.setStatus("current")
_WlssnmpStringMonitorEntry_Object = MibTableRow
wlssnmpStringMonitorEntry = _WlssnmpStringMonitorEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1070, 1)
)
wlssnmpStringMonitorEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wlssnmpStringMonitorIndex"),
)
if mibBuilder.loadTexts:
    wlssnmpStringMonitorEntry.setStatus("current")
_WlssnmpStringMonitorIndex_Type = OctetString
_WlssnmpStringMonitorIndex_Object = MibTableColumn
wlssnmpStringMonitorIndex = _WlssnmpStringMonitorIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1070, 1, 1),
    _WlssnmpStringMonitorIndex_Type()
)
wlssnmpStringMonitorIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wlssnmpStringMonitorIndex.setStatus("current")
_WlssnmpStringMonitorObjectName_Type = OctetString
_WlssnmpStringMonitorObjectName_Object = MibTableColumn
wlssnmpStringMonitorObjectName = _WlssnmpStringMonitorObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1070, 1, 2),
    _WlssnmpStringMonitorObjectName_Type()
)
wlssnmpStringMonitorObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpStringMonitorObjectName.setStatus("current")
_WlssnmpStringMonitorType_Type = OctetString
_WlssnmpStringMonitorType_Object = MibTableColumn
wlssnmpStringMonitorType = _WlssnmpStringMonitorType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1070, 1, 3),
    _WlssnmpStringMonitorType_Type()
)
wlssnmpStringMonitorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpStringMonitorType.setStatus("current")
_WlssnmpStringMonitorMonitoredAttributeName_Type = OctetString
_WlssnmpStringMonitorMonitoredAttributeName_Object = MibTableColumn
wlssnmpStringMonitorMonitoredAttributeName = _WlssnmpStringMonitorMonitoredAttributeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1070, 1, 4),
    _WlssnmpStringMonitorMonitoredAttributeName_Type()
)
wlssnmpStringMonitorMonitoredAttributeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpStringMonitorMonitoredAttributeName.setStatus("current")
_WlssnmpStringMonitorMonitoredMBeanType_Type = OctetString
_WlssnmpStringMonitorMonitoredMBeanType_Object = MibTableColumn
wlssnmpStringMonitorMonitoredMBeanType = _WlssnmpStringMonitorMonitoredMBeanType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1070, 1, 5),
    _WlssnmpStringMonitorMonitoredMBeanType_Type()
)
wlssnmpStringMonitorMonitoredMBeanType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpStringMonitorMonitoredMBeanType.setStatus("current")
_WlssnmpStringMonitorNotifyDiffer_Type = OctetString
_WlssnmpStringMonitorNotifyDiffer_Object = MibTableColumn
wlssnmpStringMonitorNotifyDiffer = _WlssnmpStringMonitorNotifyDiffer_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1070, 1, 6),
    _WlssnmpStringMonitorNotifyDiffer_Type()
)
wlssnmpStringMonitorNotifyDiffer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpStringMonitorNotifyDiffer.setStatus("current")
_WlssnmpStringMonitorNotifyMatch_Type = OctetString
_WlssnmpStringMonitorNotifyMatch_Object = MibTableColumn
wlssnmpStringMonitorNotifyMatch = _WlssnmpStringMonitorNotifyMatch_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1070, 1, 7),
    _WlssnmpStringMonitorNotifyMatch_Type()
)
wlssnmpStringMonitorNotifyMatch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpStringMonitorNotifyMatch.setStatus("current")
_WlssnmpStringMonitorStringToCompare_Type = OctetString
_WlssnmpStringMonitorStringToCompare_Object = MibTableColumn
wlssnmpStringMonitorStringToCompare = _WlssnmpStringMonitorStringToCompare_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1070, 1, 8),
    _WlssnmpStringMonitorStringToCompare_Type()
)
wlssnmpStringMonitorStringToCompare.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpStringMonitorStringToCompare.setStatus("current")
_WlssnmpStringMonitorName_Type = OctetString
_WlssnmpStringMonitorName_Object = MibTableColumn
wlssnmpStringMonitorName = _WlssnmpStringMonitorName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1070, 1, 9),
    _WlssnmpStringMonitorName_Type()
)
wlssnmpStringMonitorName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpStringMonitorName.setStatus("current")
_WlssnmpStringMonitorPollingInterval_Type = Integer32
_WlssnmpStringMonitorPollingInterval_Object = MibTableColumn
wlssnmpStringMonitorPollingInterval = _WlssnmpStringMonitorPollingInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1070, 1, 10),
    _WlssnmpStringMonitorPollingInterval_Type()
)
wlssnmpStringMonitorPollingInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpStringMonitorPollingInterval.setStatus("current")
_WlssnmpStringMonitorMonitoredMBeanName_Type = OctetString
_WlssnmpStringMonitorMonitoredMBeanName_Object = MibTableColumn
wlssnmpStringMonitorMonitoredMBeanName = _WlssnmpStringMonitorMonitoredMBeanName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1070, 1, 11),
    _WlssnmpStringMonitorMonitoredMBeanName_Type()
)
wlssnmpStringMonitorMonitoredMBeanName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpStringMonitorMonitoredMBeanName.setStatus("current")
_WlssnmpTrapDestinationTable_Object = MibTable
wlssnmpTrapDestinationTable = _WlssnmpTrapDestinationTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1075)
)
if mibBuilder.loadTexts:
    wlssnmpTrapDestinationTable.setStatus("current")
_WlssnmpTrapDestinationEntry_Object = MibTableRow
wlssnmpTrapDestinationEntry = _WlssnmpTrapDestinationEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1075, 1)
)
wlssnmpTrapDestinationEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wlssnmpTrapDestinationIndex"),
)
if mibBuilder.loadTexts:
    wlssnmpTrapDestinationEntry.setStatus("current")
_WlssnmpTrapDestinationIndex_Type = OctetString
_WlssnmpTrapDestinationIndex_Object = MibTableColumn
wlssnmpTrapDestinationIndex = _WlssnmpTrapDestinationIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1075, 1, 1),
    _WlssnmpTrapDestinationIndex_Type()
)
wlssnmpTrapDestinationIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wlssnmpTrapDestinationIndex.setStatus("current")
_WlssnmpTrapDestinationObjectName_Type = OctetString
_WlssnmpTrapDestinationObjectName_Object = MibTableColumn
wlssnmpTrapDestinationObjectName = _WlssnmpTrapDestinationObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1075, 1, 2),
    _WlssnmpTrapDestinationObjectName_Type()
)
wlssnmpTrapDestinationObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpTrapDestinationObjectName.setStatus("current")
_WlssnmpTrapDestinationType_Type = OctetString
_WlssnmpTrapDestinationType_Object = MibTableColumn
wlssnmpTrapDestinationType = _WlssnmpTrapDestinationType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1075, 1, 3),
    _WlssnmpTrapDestinationType_Type()
)
wlssnmpTrapDestinationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpTrapDestinationType.setStatus("current")
_WlssnmpTrapDestinationHost_Type = OctetString
_WlssnmpTrapDestinationHost_Object = MibTableColumn
wlssnmpTrapDestinationHost = _WlssnmpTrapDestinationHost_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1075, 1, 4),
    _WlssnmpTrapDestinationHost_Type()
)
wlssnmpTrapDestinationHost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpTrapDestinationHost.setStatus("current")
_WlssnmpTrapDestinationSecurityName_Type = OctetString
_WlssnmpTrapDestinationSecurityName_Object = MibTableColumn
wlssnmpTrapDestinationSecurityName = _WlssnmpTrapDestinationSecurityName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1075, 1, 5),
    _WlssnmpTrapDestinationSecurityName_Type()
)
wlssnmpTrapDestinationSecurityName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpTrapDestinationSecurityName.setStatus("current")
_WlssnmpTrapDestinationPort_Type = Integer32
_WlssnmpTrapDestinationPort_Object = MibTableColumn
wlssnmpTrapDestinationPort = _WlssnmpTrapDestinationPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1075, 1, 6),
    _WlssnmpTrapDestinationPort_Type()
)
wlssnmpTrapDestinationPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpTrapDestinationPort.setStatus("current")
_WlssnmpTrapDestinationSecurityLevel_Type = OctetString
_WlssnmpTrapDestinationSecurityLevel_Object = MibTableColumn
wlssnmpTrapDestinationSecurityLevel = _WlssnmpTrapDestinationSecurityLevel_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1075, 1, 7),
    _WlssnmpTrapDestinationSecurityLevel_Type()
)
wlssnmpTrapDestinationSecurityLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpTrapDestinationSecurityLevel.setStatus("current")
_WlssnmpTrapDestinationCommunity_Type = OctetString
_WlssnmpTrapDestinationCommunity_Object = MibTableColumn
wlssnmpTrapDestinationCommunity = _WlssnmpTrapDestinationCommunity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1075, 1, 8),
    _WlssnmpTrapDestinationCommunity_Type()
)
wlssnmpTrapDestinationCommunity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpTrapDestinationCommunity.setStatus("current")
_WlssnmpTrapDestinationName_Type = OctetString
_WlssnmpTrapDestinationName_Object = MibTableColumn
wlssnmpTrapDestinationName = _WlssnmpTrapDestinationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1075, 1, 9),
    _WlssnmpTrapDestinationName_Type()
)
wlssnmpTrapDestinationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpTrapDestinationName.setStatus("current")
_SecurityConfigurationTable_Object = MibTable
securityConfigurationTable = _SecurityConfigurationTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1080)
)
if mibBuilder.loadTexts:
    securityConfigurationTable.setStatus("current")
_SecurityConfigurationEntry_Object = MibTableRow
securityConfigurationEntry = _SecurityConfigurationEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1080, 1)
)
securityConfigurationEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "securityConfigurationIndex"),
)
if mibBuilder.loadTexts:
    securityConfigurationEntry.setStatus("current")
_SecurityConfigurationIndex_Type = OctetString
_SecurityConfigurationIndex_Object = MibTableColumn
securityConfigurationIndex = _SecurityConfigurationIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1080, 1, 1),
    _SecurityConfigurationIndex_Type()
)
securityConfigurationIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    securityConfigurationIndex.setStatus("current")
_SecurityConfigurationObjectName_Type = OctetString
_SecurityConfigurationObjectName_Object = MibTableColumn
securityConfigurationObjectName = _SecurityConfigurationObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1080, 1, 2),
    _SecurityConfigurationObjectName_Type()
)
securityConfigurationObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityConfigurationObjectName.setStatus("current")
_SecurityConfigurationType_Type = OctetString
_SecurityConfigurationType_Object = MibTableColumn
securityConfigurationType = _SecurityConfigurationType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1080, 1, 3),
    _SecurityConfigurationType_Type()
)
securityConfigurationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityConfigurationType.setStatus("current")
_SecurityConfigurationWebAppFilesCaseInsensitive_Type = OctetString
_SecurityConfigurationWebAppFilesCaseInsensitive_Object = MibTableColumn
securityConfigurationWebAppFilesCaseInsensitive = _SecurityConfigurationWebAppFilesCaseInsensitive_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1080, 1, 4),
    _SecurityConfigurationWebAppFilesCaseInsensitive_Type()
)
securityConfigurationWebAppFilesCaseInsensitive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityConfigurationWebAppFilesCaseInsensitive.setStatus("current")
_SecurityConfigurationCrossDomainSecurityEnabled_Type = OctetString
_SecurityConfigurationCrossDomainSecurityEnabled_Object = MibTableColumn
securityConfigurationCrossDomainSecurityEnabled = _SecurityConfigurationCrossDomainSecurityEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1080, 1, 5),
    _SecurityConfigurationCrossDomainSecurityEnabled_Type()
)
securityConfigurationCrossDomainSecurityEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityConfigurationCrossDomainSecurityEnabled.setStatus("current")
_SecurityConfigurationEnforceStrictURLPattern_Type = OctetString
_SecurityConfigurationEnforceStrictURLPattern_Object = MibTableColumn
securityConfigurationEnforceStrictURLPattern = _SecurityConfigurationEnforceStrictURLPattern_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1080, 1, 6),
    _SecurityConfigurationEnforceStrictURLPattern_Type()
)
securityConfigurationEnforceStrictURLPattern.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityConfigurationEnforceStrictURLPattern.setStatus("current")
_SecurityConfigurationConnectionFilter_Type = OctetString
_SecurityConfigurationConnectionFilter_Object = MibTableColumn
securityConfigurationConnectionFilter = _SecurityConfigurationConnectionFilter_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1080, 1, 7),
    _SecurityConfigurationConnectionFilter_Type()
)
securityConfigurationConnectionFilter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityConfigurationConnectionFilter.setStatus("current")
_SecurityConfigurationConsoleFullDelegationEnabled_Type = OctetString
_SecurityConfigurationConsoleFullDelegationEnabled_Object = MibTableColumn
securityConfigurationConsoleFullDelegationEnabled = _SecurityConfigurationConsoleFullDelegationEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1080, 1, 8),
    _SecurityConfigurationConsoleFullDelegationEnabled_Type()
)
securityConfigurationConsoleFullDelegationEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityConfigurationConsoleFullDelegationEnabled.setStatus("current")
_SecurityConfigurationDowngradeUntrustedPrincipals_Type = OctetString
_SecurityConfigurationDowngradeUntrustedPrincipals_Object = MibTableColumn
securityConfigurationDowngradeUntrustedPrincipals = _SecurityConfigurationDowngradeUntrustedPrincipals_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1080, 1, 9),
    _SecurityConfigurationDowngradeUntrustedPrincipals_Type()
)
securityConfigurationDowngradeUntrustedPrincipals.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityConfigurationDowngradeUntrustedPrincipals.setStatus("current")
_SecurityConfigurationName_Type = OctetString
_SecurityConfigurationName_Object = MibTableColumn
securityConfigurationName = _SecurityConfigurationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1080, 1, 10),
    _SecurityConfigurationName_Type()
)
securityConfigurationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityConfigurationName.setStatus("current")
_SecurityConfigurationConnectionLoggerEnabled_Type = OctetString
_SecurityConfigurationConnectionLoggerEnabled_Object = MibTableColumn
securityConfigurationConnectionLoggerEnabled = _SecurityConfigurationConnectionLoggerEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1080, 1, 11),
    _SecurityConfigurationConnectionLoggerEnabled_Type()
)
securityConfigurationConnectionLoggerEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityConfigurationConnectionLoggerEnabled.setStatus("current")
_SecurityConfigurationEnforceValidBasicAuthCredentials_Type = OctetString
_SecurityConfigurationEnforceValidBasicAuthCredentials_Object = MibTableColumn
securityConfigurationEnforceValidBasicAuthCredentials = _SecurityConfigurationEnforceValidBasicAuthCredentials_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1080, 1, 12),
    _SecurityConfigurationEnforceValidBasicAuthCredentials_Type()
)
securityConfigurationEnforceValidBasicAuthCredentials.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityConfigurationEnforceValidBasicAuthCredentials.setStatus("current")
_SecurityConfigurationNodeManagerUsername_Type = OctetString
_SecurityConfigurationNodeManagerUsername_Object = MibTableColumn
securityConfigurationNodeManagerUsername = _SecurityConfigurationNodeManagerUsername_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1080, 1, 13),
    _SecurityConfigurationNodeManagerUsername_Type()
)
securityConfigurationNodeManagerUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityConfigurationNodeManagerUsername.setStatus("current")
_SecurityConfigurationAnonymousAdminLookupEnabled_Type = OctetString
_SecurityConfigurationAnonymousAdminLookupEnabled_Object = MibTableColumn
securityConfigurationAnonymousAdminLookupEnabled = _SecurityConfigurationAnonymousAdminLookupEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1080, 1, 14),
    _SecurityConfigurationAnonymousAdminLookupEnabled_Type()
)
securityConfigurationAnonymousAdminLookupEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityConfigurationAnonymousAdminLookupEnabled.setStatus("current")
_SecurityConfigurationCompatibilityConnectionFiltersEnabled_Type = OctetString
_SecurityConfigurationCompatibilityConnectionFiltersEnabled_Object = MibTableColumn
securityConfigurationCompatibilityConnectionFiltersEnabled = _SecurityConfigurationCompatibilityConnectionFiltersEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1080, 1, 15),
    _SecurityConfigurationCompatibilityConnectionFiltersEnabled_Type()
)
securityConfigurationCompatibilityConnectionFiltersEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    securityConfigurationCompatibilityConnectionFiltersEnabled.setStatus("current")
_SelfTuningTable_Object = MibTable
selfTuningTable = _SelfTuningTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1085)
)
if mibBuilder.loadTexts:
    selfTuningTable.setStatus("current")
_SelfTuningEntry_Object = MibTableRow
selfTuningEntry = _SelfTuningEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1085, 1)
)
selfTuningEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "selfTuningIndex"),
)
if mibBuilder.loadTexts:
    selfTuningEntry.setStatus("current")
_SelfTuningIndex_Type = OctetString
_SelfTuningIndex_Object = MibTableColumn
selfTuningIndex = _SelfTuningIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1085, 1, 1),
    _SelfTuningIndex_Type()
)
selfTuningIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    selfTuningIndex.setStatus("current")
_SelfTuningObjectName_Type = OctetString
_SelfTuningObjectName_Object = MibTableColumn
selfTuningObjectName = _SelfTuningObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1085, 1, 2),
    _SelfTuningObjectName_Type()
)
selfTuningObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    selfTuningObjectName.setStatus("current")
_SelfTuningType_Type = OctetString
_SelfTuningType_Object = MibTableColumn
selfTuningType = _SelfTuningType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1085, 1, 3),
    _SelfTuningType_Type()
)
selfTuningType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    selfTuningType.setStatus("current")
_SelfTuningName_Type = OctetString
_SelfTuningName_Object = MibTableColumn
selfTuningName = _SelfTuningName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1085, 1, 4),
    _SelfTuningName_Type()
)
selfTuningName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    selfTuningName.setStatus("current")
_ServerDebugTable_Object = MibTable
serverDebugTable = _ServerDebugTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090)
)
if mibBuilder.loadTexts:
    serverDebugTable.setStatus("current")
_ServerDebugEntry_Object = MibTableRow
serverDebugEntry = _ServerDebugEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1)
)
serverDebugEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "serverDebugIndex"),
)
if mibBuilder.loadTexts:
    serverDebugEntry.setStatus("current")
_ServerDebugIndex_Type = OctetString
_ServerDebugIndex_Object = MibTableColumn
serverDebugIndex = _ServerDebugIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 1),
    _ServerDebugIndex_Type()
)
serverDebugIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    serverDebugIndex.setStatus("current")
_ServerDebugObjectName_Type = OctetString
_ServerDebugObjectName_Object = MibTableColumn
serverDebugObjectName = _ServerDebugObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 2),
    _ServerDebugObjectName_Type()
)
serverDebugObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugObjectName.setStatus("current")
_ServerDebugDebugJDBCSQL_Type = OctetString
_ServerDebugDebugJDBCSQL_Object = MibTableColumn
serverDebugDebugJDBCSQL = _ServerDebugDebugJDBCSQL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 3),
    _ServerDebugDebugJDBCSQL_Type()
)
serverDebugDebugJDBCSQL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJDBCSQL.setStatus("current")
_ServerDebugDebugIIOPConnection_Type = OctetString
_ServerDebugDebugIIOPConnection_Object = MibTableColumn
serverDebugDebugIIOPConnection = _ServerDebugDebugIIOPConnection_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 4),
    _ServerDebugDebugIIOPConnection_Type()
)
serverDebugDebugIIOPConnection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugIIOPConnection.setStatus("current")
_ServerDebugDebugJAXPIncludeTime_Type = OctetString
_ServerDebugDebugJAXPIncludeTime_Object = MibTableColumn
serverDebugDebugJAXPIncludeTime = _ServerDebugDebugJAXPIncludeTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 5),
    _ServerDebugDebugJAXPIncludeTime_Type()
)
serverDebugDebugJAXPIncludeTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJAXPIncludeTime.setStatus("current")
_ServerDebugDebugMessagingBridgeRuntime_Type = OctetString
_ServerDebugDebugMessagingBridgeRuntime_Object = MibTableColumn
serverDebugDebugMessagingBridgeRuntime = _ServerDebugDebugMessagingBridgeRuntime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 6),
    _ServerDebugDebugMessagingBridgeRuntime_Type()
)
serverDebugDebugMessagingBridgeRuntime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugMessagingBridgeRuntime.setStatus("current")
_ServerDebugDebugWebAppSecurity_Type = OctetString
_ServerDebugDebugWebAppSecurity_Object = MibTableColumn
serverDebugDebugWebAppSecurity = _ServerDebugDebugWebAppSecurity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 7),
    _ServerDebugDebugWebAppSecurity_Type()
)
serverDebugDebugWebAppSecurity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugWebAppSecurity.setStatus("current")
_ServerDebugDebugMuxerDetail_Type = OctetString
_ServerDebugDebugMuxerDetail_Object = MibTableColumn
serverDebugDebugMuxerDetail = _ServerDebugDebugMuxerDetail_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 8),
    _ServerDebugDebugMuxerDetail_Type()
)
serverDebugDebugMuxerDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugMuxerDetail.setStatus("current")
_ServerDebugDebugXMLRegistryIncludeLocation_Type = OctetString
_ServerDebugDebugXMLRegistryIncludeLocation_Object = MibTableColumn
serverDebugDebugXMLRegistryIncludeLocation = _ServerDebugDebugXMLRegistryIncludeLocation_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 9),
    _ServerDebugDebugXMLRegistryIncludeLocation_Type()
)
serverDebugDebugXMLRegistryIncludeLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugXMLRegistryIncludeLocation.setStatus("current")
_ServerDebugDebugJMXRuntime_Type = OctetString
_ServerDebugDebugJMXRuntime_Object = MibTableColumn
serverDebugDebugJMXRuntime = _ServerDebugDebugJMXRuntime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 10),
    _ServerDebugDebugJMXRuntime_Type()
)
serverDebugDebugJMXRuntime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJMXRuntime.setStatus("current")
_ServerDebugDebugJNDIFactories_Type = OctetString
_ServerDebugDebugJNDIFactories_Object = MibTableColumn
serverDebugDebugJNDIFactories = _ServerDebugDebugJNDIFactories_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 11),
    _ServerDebugDebugJNDIFactories_Type()
)
serverDebugDebugJNDIFactories.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJNDIFactories.setStatus("current")
_ServerDebugDebugDiagnosticInstrumentationWeaving_Type = OctetString
_ServerDebugDebugDiagnosticInstrumentationWeaving_Object = MibTableColumn
serverDebugDebugDiagnosticInstrumentationWeaving = _ServerDebugDebugDiagnosticInstrumentationWeaving_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 12),
    _ServerDebugDebugDiagnosticInstrumentationWeaving_Type()
)
serverDebugDebugDiagnosticInstrumentationWeaving.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticInstrumentationWeaving.setStatus("current")
_ServerDebugDebugJTARecovery_Type = OctetString
_ServerDebugDebugJTARecovery_Object = MibTableColumn
serverDebugDebugJTARecovery = _ServerDebugDebugJTARecovery_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 13),
    _ServerDebugDebugJTARecovery_Type()
)
serverDebugDebugJTARecovery.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTARecovery.setStatus("current")
_ServerDebugClassLoader_Type = OctetString
_ServerDebugClassLoader_Object = MibTableColumn
serverDebugClassLoader = _ServerDebugClassLoader_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 14),
    _ServerDebugClassLoader_Type()
)
serverDebugClassLoader.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugClassLoader.setStatus("current")
_ServerDebugDebugRADeployment_Type = OctetString
_ServerDebugDebugRADeployment_Object = MibTableColumn
serverDebugDebugRADeployment = _ServerDebugDebugRADeployment_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 15),
    _ServerDebugDebugRADeployment_Type()
)
serverDebugDebugRADeployment.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugRADeployment.setStatus("current")
_ServerDebugDebugMessagingKernel_Type = OctetString
_ServerDebugDebugMessagingKernel_Object = MibTableColumn
serverDebugDebugMessagingKernel = _ServerDebugDebugMessagingKernel_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 16),
    _ServerDebugDebugMessagingKernel_Type()
)
serverDebugDebugMessagingKernel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugMessagingKernel.setStatus("current")
_ServerDebugDebugJTAAPI_Type = OctetString
_ServerDebugDebugJTAAPI_Object = MibTableColumn
serverDebugDebugJTAAPI = _ServerDebugDebugJTAAPI_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 17),
    _ServerDebugDebugJTAAPI_Type()
)
serverDebugDebugJTAAPI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTAAPI.setStatus("current")
_ServerDebugDebugEjbLocking_Type = OctetString
_ServerDebugDebugEjbLocking_Object = MibTableColumn
serverDebugDebugEjbLocking = _ServerDebugDebugEjbLocking_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 18),
    _ServerDebugDebugEjbLocking_Type()
)
serverDebugDebugEjbLocking.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugEjbLocking.setStatus("current")
_ServerDebugDebugDescriptor_Type = OctetString
_ServerDebugDebugDescriptor_Object = MibTableColumn
serverDebugDebugDescriptor = _ServerDebugDebugDescriptor_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 19),
    _ServerDebugDebugDescriptor_Type()
)
serverDebugDebugDescriptor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDescriptor.setStatus("current")
_ServerDebugDebugDiagnosticsHarvesterTreeBeanPlugin_Type = OctetString
_ServerDebugDebugDiagnosticsHarvesterTreeBeanPlugin_Object = MibTableColumn
serverDebugDebugDiagnosticsHarvesterTreeBeanPlugin = _ServerDebugDebugDiagnosticsHarvesterTreeBeanPlugin_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 20),
    _ServerDebugDebugDiagnosticsHarvesterTreeBeanPlugin_Type()
)
serverDebugDebugDiagnosticsHarvesterTreeBeanPlugin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticsHarvesterTreeBeanPlugin.setStatus("current")
_ServerDebugDebugSAFTransport_Type = OctetString
_ServerDebugDebugSAFTransport_Object = MibTableColumn
serverDebugDebugSAFTransport = _ServerDebugDebugSAFTransport_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 21),
    _ServerDebugDebugSAFTransport_Type()
)
serverDebugDebugSAFTransport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSAFTransport.setStatus("current")
_ServerDebugDebugStoreIOPhysicalVerbose_Type = OctetString
_ServerDebugDebugStoreIOPhysicalVerbose_Object = MibTableColumn
serverDebugDebugStoreIOPhysicalVerbose = _ServerDebugDebugStoreIOPhysicalVerbose_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 22),
    _ServerDebugDebugStoreIOPhysicalVerbose_Type()
)
serverDebugDebugStoreIOPhysicalVerbose.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugStoreIOPhysicalVerbose.setStatus("current")
_ServerDebugDebugStoreIOPhysical_Type = OctetString
_ServerDebugDebugStoreIOPhysical_Object = MibTableColumn
serverDebugDebugStoreIOPhysical = _ServerDebugDebugStoreIOPhysical_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 23),
    _ServerDebugDebugStoreIOPhysical_Type()
)
serverDebugDebugStoreIOPhysical.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugStoreIOPhysical.setStatus("current")
_ServerDebugDebugJNDI_Type = OctetString
_ServerDebugDebugJNDI_Object = MibTableColumn
serverDebugDebugJNDI = _ServerDebugDebugJNDI_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 24),
    _ServerDebugDebugJNDI_Type()
)
serverDebugDebugJNDI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJNDI.setStatus("current")
_ServerDebugDebugJTALLR_Type = OctetString
_ServerDebugDebugJTALLR_Object = MibTableColumn
serverDebugDebugJTALLR = _ServerDebugDebugJTALLR_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 25),
    _ServerDebugDebugJTALLR_Type()
)
serverDebugDebugJTALLR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTALLR.setStatus("current")
_ServerDebugDebugJTARecoveryStackTrace_Type = OctetString
_ServerDebugDebugJTARecoveryStackTrace_Object = MibTableColumn
serverDebugDebugJTARecoveryStackTrace = _ServerDebugDebugJTARecoveryStackTrace_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 26),
    _ServerDebugDebugJTARecoveryStackTrace_Type()
)
serverDebugDebugJTARecoveryStackTrace.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTARecoveryStackTrace.setStatus("current")
_ServerDebugDebugJTATransactionName_Type = OctetString
_ServerDebugDebugJTATransactionName_Object = MibTableColumn
serverDebugDebugJTATransactionName = _ServerDebugDebugJTATransactionName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 27),
    _ServerDebugDebugJTATransactionName_Type()
)
serverDebugDebugJTATransactionName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTATransactionName.setStatus("current")
_ServerDebugDebugRAPooling_Type = OctetString
_ServerDebugDebugRAPooling_Object = MibTableColumn
serverDebugDebugRAPooling = _ServerDebugDebugRAPooling_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 28),
    _ServerDebugDebugRAPooling_Type()
)
serverDebugDebugRAPooling.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugRAPooling.setStatus("current")
_ServerDebugDebugDeploymentServiceTransportHttp_Type = OctetString
_ServerDebugDebugDeploymentServiceTransportHttp_Object = MibTableColumn
serverDebugDebugDeploymentServiceTransportHttp = _ServerDebugDebugDeploymentServiceTransportHttp_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 29),
    _ServerDebugDebugDeploymentServiceTransportHttp_Type()
)
serverDebugDebugDeploymentServiceTransportHttp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDeploymentServiceTransportHttp.setStatus("current")
_ServerDebugDebugDiagnosticCollections_Type = OctetString
_ServerDebugDebugDiagnosticCollections_Object = MibTableColumn
serverDebugDebugDiagnosticCollections = _ServerDebugDebugDiagnosticCollections_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 30),
    _ServerDebugDebugDiagnosticCollections_Type()
)
serverDebugDebugDiagnosticCollections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticCollections.setStatus("current")
_ServerDebugDebugJMXCompatibility_Type = OctetString
_ServerDebugDebugJMXCompatibility_Object = MibTableColumn
serverDebugDebugJMXCompatibility = _ServerDebugDebugJMXCompatibility_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 31),
    _ServerDebugDebugJMXCompatibility_Type()
)
serverDebugDebugJMXCompatibility.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJMXCompatibility.setStatus("current")
_ServerDebugDebugDRSMessages_Type = OctetString
_ServerDebugDebugDRSMessages_Object = MibTableColumn
serverDebugDebugDRSMessages = _ServerDebugDebugDRSMessages_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 32),
    _ServerDebugDebugDRSMessages_Type()
)
serverDebugDebugDRSMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDRSMessages.setStatus("current")
_ServerDebugDebugMessagingBridgeRuntimeVerbose_Type = OctetString
_ServerDebugDebugMessagingBridgeRuntimeVerbose_Object = MibTableColumn
serverDebugDebugMessagingBridgeRuntimeVerbose = _ServerDebugDebugMessagingBridgeRuntimeVerbose_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 33),
    _ServerDebugDebugMessagingBridgeRuntimeVerbose_Type()
)
serverDebugDebugMessagingBridgeRuntimeVerbose.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugMessagingBridgeRuntimeVerbose.setStatus("current")
_ServerDebugDebugSecurityJACCNonPolicy_Type = OctetString
_ServerDebugDebugSecurityJACCNonPolicy_Object = MibTableColumn
serverDebugDebugSecurityJACCNonPolicy = _ServerDebugDebugSecurityJACCNonPolicy_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 34),
    _ServerDebugDebugSecurityJACCNonPolicy_Type()
)
serverDebugDebugSecurityJACCNonPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecurityJACCNonPolicy.setStatus("current")
_ServerDebugClassLoaderVerbose_Type = OctetString
_ServerDebugClassLoaderVerbose_Object = MibTableColumn
serverDebugClassLoaderVerbose = _ServerDebugClassLoaderVerbose_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 35),
    _ServerDebugClassLoaderVerbose_Type()
)
serverDebugClassLoaderVerbose.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugClassLoaderVerbose.setStatus("current")
_ServerDebugDebugXMLEntityCacheUseShortClass_Type = OctetString
_ServerDebugDebugXMLEntityCacheUseShortClass_Object = MibTableColumn
serverDebugDebugXMLEntityCacheUseShortClass = _ServerDebugDebugXMLEntityCacheUseShortClass_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 36),
    _ServerDebugDebugXMLEntityCacheUseShortClass_Type()
)
serverDebugDebugXMLEntityCacheUseShortClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugXMLEntityCacheUseShortClass.setStatus("current")
_ServerDebugDebugJMSWrappers_Type = OctetString
_ServerDebugDebugJMSWrappers_Object = MibTableColumn
serverDebugDebugJMSWrappers = _ServerDebugDebugJMSWrappers_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 37),
    _ServerDebugDebugJMSWrappers_Type()
)
serverDebugDebugJMSWrappers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJMSWrappers.setStatus("current")
_ServerDebugDebugEmbeddedLDAP_Type = OctetString
_ServerDebugDebugEmbeddedLDAP_Object = MibTableColumn
serverDebugDebugEmbeddedLDAP = _ServerDebugDebugEmbeddedLDAP_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 38),
    _ServerDebugDebugEmbeddedLDAP_Type()
)
serverDebugDebugEmbeddedLDAP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugEmbeddedLDAP.setStatus("current")
_ServerDebugDebugLeaderElection_Type = OctetString
_ServerDebugDebugLeaderElection_Object = MibTableColumn
serverDebugDebugLeaderElection = _ServerDebugDebugLeaderElection_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 39),
    _ServerDebugDebugLeaderElection_Type()
)
serverDebugDebugLeaderElection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugLeaderElection.setStatus("current")
_ServerDebugDebugDiagnosticAccessor_Type = OctetString
_ServerDebugDebugDiagnosticAccessor_Object = MibTableColumn
serverDebugDebugDiagnosticAccessor = _ServerDebugDebugDiagnosticAccessor_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 40),
    _ServerDebugDebugDiagnosticAccessor_Type()
)
serverDebugDebugDiagnosticAccessor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticAccessor.setStatus("current")
_ServerDebugDebugDiagnosticWatch_Type = OctetString
_ServerDebugDebugDiagnosticWatch_Object = MibTableColumn
serverDebugDebugDiagnosticWatch = _ServerDebugDebugDiagnosticWatch_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 41),
    _ServerDebugDebugDiagnosticWatch_Type()
)
serverDebugDebugDiagnosticWatch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticWatch.setStatus("current")
_ServerDebugDebugJTAJDBC_Type = OctetString
_ServerDebugDebugJTAJDBC_Object = MibTableColumn
serverDebugDebugJTAJDBC = _ServerDebugDebugJTAJDBC_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 42),
    _ServerDebugDebugJTAJDBC_Type()
)
serverDebugDebugJTAJDBC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTAJDBC.setStatus("current")
_ServerDebugDebugMessagingBridgeStartup_Type = OctetString
_ServerDebugDebugMessagingBridgeStartup_Object = MibTableColumn
serverDebugDebugMessagingBridgeStartup = _ServerDebugDebugMessagingBridgeStartup_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 43),
    _ServerDebugDebugMessagingBridgeStartup_Type()
)
serverDebugDebugMessagingBridgeStartup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugMessagingBridgeStartup.setStatus("current")
_ServerDebugDebugXMLRegistryDebugLevel_Type = Integer32
_ServerDebugDebugXMLRegistryDebugLevel_Object = MibTableColumn
serverDebugDebugXMLRegistryDebugLevel = _ServerDebugDebugXMLRegistryDebugLevel_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 44),
    _ServerDebugDebugXMLRegistryDebugLevel_Type()
)
serverDebugDebugXMLRegistryDebugLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugXMLRegistryDebugLevel.setStatus("current")
_ServerDebugDebugWTCCorbaEx_Type = OctetString
_ServerDebugDebugWTCCorbaEx_Object = MibTableColumn
serverDebugDebugWTCCorbaEx = _ServerDebugDebugWTCCorbaEx_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 45),
    _ServerDebugDebugWTCCorbaEx_Type()
)
serverDebugDebugWTCCorbaEx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugWTCCorbaEx.setStatus("current")
_ServerDebugDebugSAFSendingAgent_Type = OctetString
_ServerDebugDebugSAFSendingAgent_Object = MibTableColumn
serverDebugDebugSAFSendingAgent = _ServerDebugDebugSAFSendingAgent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 46),
    _ServerDebugDebugSAFSendingAgent_Type()
)
serverDebugDebugSAFSendingAgent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSAFSendingAgent.setStatus("current")
_ServerDebugForceGCEachDGCPeriod_Type = OctetString
_ServerDebugForceGCEachDGCPeriod_Object = MibTableColumn
serverDebugForceGCEachDGCPeriod = _ServerDebugForceGCEachDGCPeriod_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 47),
    _ServerDebugForceGCEachDGCPeriod_Type()
)
serverDebugForceGCEachDGCPeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugForceGCEachDGCPeriod.setStatus("current")
_ServerDebugDebugDiagnosticInstrumentation_Type = OctetString
_ServerDebugDebugDiagnosticInstrumentation_Object = MibTableColumn
serverDebugDebugDiagnosticInstrumentation = _ServerDebugDebugDiagnosticInstrumentation_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 48),
    _ServerDebugDebugDiagnosticInstrumentation_Type()
)
serverDebugDebugDiagnosticInstrumentation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticInstrumentation.setStatus("current")
_ServerDebugDebugIIOPReplacer_Type = OctetString
_ServerDebugDebugIIOPReplacer_Object = MibTableColumn
serverDebugDebugIIOPReplacer = _ServerDebugDebugIIOPReplacer_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 49),
    _ServerDebugDebugIIOPReplacer_Type()
)
serverDebugDebugIIOPReplacer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugIIOPReplacer.setStatus("current")
_ServerDebugDebugFileDistributionServlet_Type = OctetString
_ServerDebugDebugFileDistributionServlet_Object = MibTableColumn
serverDebugDebugFileDistributionServlet = _ServerDebugDebugFileDistributionServlet_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 50),
    _ServerDebugDebugFileDistributionServlet_Type()
)
serverDebugDebugFileDistributionServlet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugFileDistributionServlet.setStatus("current")
_ServerDebugDebugJTAPropagate_Type = OctetString
_ServerDebugDebugJTAPropagate_Object = MibTableColumn
serverDebugDebugJTAPropagate = _ServerDebugDebugJTAPropagate_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 51),
    _ServerDebugDebugJTAPropagate_Type()
)
serverDebugDebugJTAPropagate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTAPropagate.setStatus("current")
_ServerDebugDebugXMLRegistryIncludeClass_Type = OctetString
_ServerDebugDebugXMLRegistryIncludeClass_Object = MibTableColumn
serverDebugDebugXMLRegistryIncludeClass = _ServerDebugDebugXMLRegistryIncludeClass_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 52),
    _ServerDebugDebugXMLRegistryIncludeClass_Type()
)
serverDebugDebugXMLRegistryIncludeClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugXMLRegistryIncludeClass.setStatus("current")
_ServerDebugDebugXMLEntityCacheDebugLevel_Type = Integer32
_ServerDebugDebugXMLEntityCacheDebugLevel_Object = MibTableColumn
serverDebugDebugXMLEntityCacheDebugLevel = _ServerDebugDebugXMLEntityCacheDebugLevel_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 53),
    _ServerDebugDebugXMLEntityCacheDebugLevel_Type()
)
serverDebugDebugXMLEntityCacheDebugLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugXMLEntityCacheDebugLevel.setStatus("current")
_ServerDebugDebugJTAHealth_Type = OctetString
_ServerDebugDebugJTAHealth_Object = MibTableColumn
serverDebugDebugJTAHealth = _ServerDebugDebugJTAHealth_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 54),
    _ServerDebugDebugJTAHealth_Type()
)
serverDebugDebugJTAHealth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTAHealth.setStatus("current")
_ServerDebugDebugEjbSecurity_Type = OctetString
_ServerDebugDebugEjbSecurity_Object = MibTableColumn
serverDebugDebugEjbSecurity = _ServerDebugDebugEjbSecurity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 55),
    _ServerDebugDebugEjbSecurity_Type()
)
serverDebugDebugEjbSecurity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugEjbSecurity.setStatus("current")
_ServerDebugDebugIIOPTransport_Type = OctetString
_ServerDebugDebugIIOPTransport_Object = MibTableColumn
serverDebugDebugIIOPTransport = _ServerDebugDebugIIOPTransport_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 56),
    _ServerDebugDebugIIOPTransport_Type()
)
serverDebugDebugIIOPTransport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugIIOPTransport.setStatus("current")
_ServerDebugDebugJDBCRMI_Type = OctetString
_ServerDebugDebugJDBCRMI_Object = MibTableColumn
serverDebugDebugJDBCRMI = _ServerDebugDebugJDBCRMI_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 57),
    _ServerDebugDebugJDBCRMI_Type()
)
serverDebugDebugJDBCRMI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJDBCRMI.setStatus("current")
_ServerDebugDebugJMSCDS_Type = OctetString
_ServerDebugDebugJMSCDS_Object = MibTableColumn
serverDebugDebugJMSCDS = _ServerDebugDebugJMSCDS_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 58),
    _ServerDebugDebugJMSCDS_Type()
)
serverDebugDebugJMSCDS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJMSCDS.setStatus("current")
_ServerDebugDebugXMLEntityCacheDebugName_Type = OctetString
_ServerDebugDebugXMLEntityCacheDebugName_Object = MibTableColumn
serverDebugDebugXMLEntityCacheDebugName = _ServerDebugDebugXMLEntityCacheDebugName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 59),
    _ServerDebugDebugXMLEntityCacheDebugName_Type()
)
serverDebugDebugXMLEntityCacheDebugName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugXMLEntityCacheDebugName.setStatus("current")
_ServerDebugDebugEjbCaching_Type = OctetString
_ServerDebugDebugEjbCaching_Object = MibTableColumn
serverDebugDebugEjbCaching = _ServerDebugDebugEjbCaching_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 60),
    _ServerDebugDebugEjbCaching_Type()
)
serverDebugDebugEjbCaching.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugEjbCaching.setStatus("current")
_ServerDebugDebugRAXAwork_Type = OctetString
_ServerDebugDebugRAXAwork_Object = MibTableColumn
serverDebugDebugRAXAwork = _ServerDebugDebugRAXAwork_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 61),
    _ServerDebugDebugRAXAwork_Type()
)
serverDebugDebugRAXAwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugRAXAwork.setStatus("current")
_ServerDebugDebugServerMigration_Type = OctetString
_ServerDebugDebugServerMigration_Object = MibTableColumn
serverDebugDebugServerMigration = _ServerDebugDebugServerMigration_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 62),
    _ServerDebugDebugServerMigration_Type()
)
serverDebugDebugServerMigration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugServerMigration.setStatus("current")
_ServerDebugDebugEmbeddedLDAPLogToConsole_Type = OctetString
_ServerDebugDebugEmbeddedLDAPLogToConsole_Object = MibTableColumn
serverDebugDebugEmbeddedLDAPLogToConsole = _ServerDebugDebugEmbeddedLDAPLogToConsole_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 63),
    _ServerDebugDebugEmbeddedLDAPLogToConsole_Type()
)
serverDebugDebugEmbeddedLDAPLogToConsole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugEmbeddedLDAPLogToConsole.setStatus("current")
_ServerDebugDebugJAXPDebugName_Type = OctetString
_ServerDebugDebugJAXPDebugName_Object = MibTableColumn
serverDebugDebugJAXPDebugName = _ServerDebugDebugJAXPDebugName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 64),
    _ServerDebugDebugJAXPDebugName_Type()
)
serverDebugDebugJAXPDebugName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJAXPDebugName.setStatus("current")
_ServerDebugDebugRAConnEvents_Type = OctetString
_ServerDebugDebugRAConnEvents_Object = MibTableColumn
serverDebugDebugRAConnEvents = _ServerDebugDebugRAConnEvents_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 65),
    _ServerDebugDebugRAConnEvents_Type()
)
serverDebugDebugRAConnEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugRAConnEvents.setStatus("current")
_ServerDebugDebugRAXAin_Type = OctetString
_ServerDebugDebugRAXAin_Object = MibTableColumn
serverDebugDebugRAXAin = _ServerDebugDebugRAXAin_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 66),
    _ServerDebugDebugRAXAin_Type()
)
serverDebugDebugRAXAin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugRAXAin.setStatus("current")
_ServerDebugDebugJMSConfig_Type = OctetString
_ServerDebugDebugJMSConfig_Object = MibTableColumn
serverDebugDebugJMSConfig = _ServerDebugDebugJMSConfig_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 67),
    _ServerDebugDebugJMSConfig_Type()
)
serverDebugDebugJMSConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJMSConfig.setStatus("current")
_ServerDebugClassloaderWebApp_Type = OctetString
_ServerDebugClassloaderWebApp_Object = MibTableColumn
serverDebugClassloaderWebApp = _ServerDebugClassloaderWebApp_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 68),
    _ServerDebugClassloaderWebApp_Type()
)
serverDebugClassloaderWebApp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugClassloaderWebApp.setStatus("current")
_ServerDebugDebugJDBCInternal_Type = OctetString
_ServerDebugDebugJDBCInternal_Object = MibTableColumn
serverDebugDebugJDBCInternal = _ServerDebugDebugJDBCInternal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 69),
    _ServerDebugDebugJDBCInternal_Type()
)
serverDebugDebugJDBCInternal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJDBCInternal.setStatus("current")
_ServerDebugDebugJpaProfile_Type = OctetString
_ServerDebugDebugJpaProfile_Object = MibTableColumn
serverDebugDebugJpaProfile = _ServerDebugDebugJpaProfile_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 70),
    _ServerDebugDebugJpaProfile_Type()
)
serverDebugDebugJpaProfile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJpaProfile.setStatus("current")
_ServerDebugDebugMessagingKernelBoot_Type = OctetString
_ServerDebugDebugMessagingKernelBoot_Object = MibTableColumn
serverDebugDebugMessagingKernelBoot = _ServerDebugDebugMessagingKernelBoot_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 71),
    _ServerDebugDebugMessagingKernelBoot_Type()
)
serverDebugDebugMessagingKernelBoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugMessagingKernelBoot.setStatus("current")
_ServerDebugWebModule_Type = OctetString
_ServerDebugWebModule_Object = MibTableColumn
serverDebugWebModule = _ServerDebugWebModule_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 72),
    _ServerDebugWebModule_Type()
)
serverDebugWebModule.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugWebModule.setStatus("current")
_ServerDebugDebugReplication_Type = OctetString
_ServerDebugDebugReplication_Object = MibTableColumn
serverDebugDebugReplication = _ServerDebugDebugReplication_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 73),
    _ServerDebugDebugReplication_Type()
)
serverDebugDebugReplication.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugReplication.setStatus("current")
_ServerDebugDebugFailOver_Type = OctetString
_ServerDebugDebugFailOver_Object = MibTableColumn
serverDebugDebugFailOver = _ServerDebugDebugFailOver_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 74),
    _ServerDebugDebugFailOver_Type()
)
serverDebugDebugFailOver.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugFailOver.setStatus("current")
_ServerDebugDebugXMLEntityCacheIncludeName_Type = OctetString
_ServerDebugDebugXMLEntityCacheIncludeName_Object = MibTableColumn
serverDebugDebugXMLEntityCacheIncludeName = _ServerDebugDebugXMLEntityCacheIncludeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 75),
    _ServerDebugDebugXMLEntityCacheIncludeName_Type()
)
serverDebugDebugXMLEntityCacheIncludeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugXMLEntityCacheIncludeName.setStatus("current")
_ServerDebugDebugSNMPAgent_Type = OctetString
_ServerDebugDebugSNMPAgent_Object = MibTableColumn
serverDebugDebugSNMPAgent = _ServerDebugDebugSNMPAgent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 76),
    _ServerDebugDebugSNMPAgent_Type()
)
serverDebugDebugSNMPAgent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSNMPAgent.setStatus("current")
_ServerDebugDebugDRSStateTransitions_Type = OctetString
_ServerDebugDebugDRSStateTransitions_Object = MibTableColumn
serverDebugDebugDRSStateTransitions = _ServerDebugDebugDRSStateTransitions_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 77),
    _ServerDebugDebugDRSStateTransitions_Type()
)
serverDebugDebugDRSStateTransitions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDRSStateTransitions.setStatus("current")
_ServerDebugDebugJpaManage_Type = OctetString
_ServerDebugDebugJpaManage_Object = MibTableColumn
serverDebugDebugJpaManage = _ServerDebugDebugJpaManage_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 78),
    _ServerDebugDebugJpaManage_Type()
)
serverDebugDebugJpaManage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJpaManage.setStatus("current")
_ServerDebugDebugJMSCommon_Type = OctetString
_ServerDebugDebugJMSCommon_Object = MibTableColumn
serverDebugDebugJMSCommon = _ServerDebugDebugJMSCommon_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 79),
    _ServerDebugDebugJMSCommon_Type()
)
serverDebugDebugJMSCommon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJMSCommon.setStatus("current")
_ServerDebugDebugJpaRuntime_Type = OctetString
_ServerDebugDebugJpaRuntime_Object = MibTableColumn
serverDebugDebugJpaRuntime = _ServerDebugDebugJpaRuntime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 80),
    _ServerDebugDebugJpaRuntime_Type()
)
serverDebugDebugJpaRuntime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJpaRuntime.setStatus("current")
_ServerDebugDebugEmbeddedLDAPLogLevel_Type = Integer32
_ServerDebugDebugEmbeddedLDAPLogLevel_Object = MibTableColumn
serverDebugDebugEmbeddedLDAPLogLevel = _ServerDebugDebugEmbeddedLDAPLogLevel_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 81),
    _ServerDebugDebugEmbeddedLDAPLogLevel_Type()
)
serverDebugDebugEmbeddedLDAPLogLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugEmbeddedLDAPLogLevel.setStatus("current")
_ServerDebugDebugSecurityAdjudicator_Type = OctetString
_ServerDebugDebugSecurityAdjudicator_Object = MibTableColumn
serverDebugDebugSecurityAdjudicator = _ServerDebugDebugSecurityAdjudicator_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 82),
    _ServerDebugDebugSecurityAdjudicator_Type()
)
serverDebugDebugSecurityAdjudicator.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecurityAdjudicator.setStatus("current")
_ServerDebugDebugSAFAdmin_Type = OctetString
_ServerDebugDebugSAFAdmin_Object = MibTableColumn
serverDebugDebugSAFAdmin = _ServerDebugDebugSAFAdmin_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 83),
    _ServerDebugDebugSAFAdmin_Type()
)
serverDebugDebugSAFAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSAFAdmin.setStatus("current")
_ServerDebugDebugEjbPooling_Type = OctetString
_ServerDebugDebugEjbPooling_Object = MibTableColumn
serverDebugDebugEjbPooling = _ServerDebugDebugEjbPooling_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 84),
    _ServerDebugDebugEjbPooling_Type()
)
serverDebugDebugEjbPooling.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugEjbPooling.setStatus("current")
_ServerDebugDebugWTCtBridgeEx_Type = OctetString
_ServerDebugDebugWTCtBridgeEx_Object = MibTableColumn
serverDebugDebugWTCtBridgeEx = _ServerDebugDebugWTCtBridgeEx_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 85),
    _ServerDebugDebugWTCtBridgeEx_Type()
)
serverDebugDebugWTCtBridgeEx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugWTCtBridgeEx.setStatus("current")
_ServerDebugDebugSecuritySAMLLib_Type = OctetString
_ServerDebugDebugSecuritySAMLLib_Object = MibTableColumn
serverDebugDebugSecuritySAMLLib = _ServerDebugDebugSecuritySAMLLib_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 86),
    _ServerDebugDebugSecuritySAMLLib_Type()
)
serverDebugDebugSecuritySAMLLib.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecuritySAMLLib.setStatus("current")
_ServerDebugDebugDiagnosticArchive_Type = OctetString
_ServerDebugDebugDiagnosticArchive_Object = MibTableColumn
serverDebugDebugDiagnosticArchive = _ServerDebugDebugDiagnosticArchive_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 87),
    _ServerDebugDebugDiagnosticArchive_Type()
)
serverDebugDebugDiagnosticArchive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticArchive.setStatus("current")
_ServerDebugDebugURLResolution_Type = OctetString
_ServerDebugDebugURLResolution_Object = MibTableColumn
serverDebugDebugURLResolution = _ServerDebugDebugURLResolution_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 88),
    _ServerDebugDebugURLResolution_Type()
)
serverDebugDebugURLResolution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugURLResolution.setStatus("current")
_ServerDebugDebugLoadBalancing_Type = OctetString
_ServerDebugDebugLoadBalancing_Object = MibTableColumn
serverDebugDebugLoadBalancing = _ServerDebugDebugLoadBalancing_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 89),
    _ServerDebugDebugLoadBalancing_Type()
)
serverDebugDebugLoadBalancing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugLoadBalancing.setStatus("current")
_ServerDebugDebugWebAppModule_Type = OctetString
_ServerDebugDebugWebAppModule_Object = MibTableColumn
serverDebugDebugWebAppModule = _ServerDebugDebugWebAppModule_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 90),
    _ServerDebugDebugWebAppModule_Type()
)
serverDebugDebugWebAppModule.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugWebAppModule.setStatus("current")
_ServerDebugDebugSecurityService_Type = OctetString
_ServerDebugDebugSecurityService_Object = MibTableColumn
serverDebugDebugSecurityService = _ServerDebugDebugSecurityService_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 91),
    _ServerDebugDebugSecurityService_Type()
)
serverDebugDebugSecurityService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecurityService.setStatus("current")
_ServerDebugDebugRC4_Type = OctetString
_ServerDebugDebugRC4_Object = MibTableColumn
serverDebugDebugRC4 = _ServerDebugDebugRC4_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 92),
    _ServerDebugDebugRC4_Type()
)
serverDebugDebugRC4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugRC4.setStatus("current")
_ServerDebugDebugXMLRegistryIncludeTime_Type = OctetString
_ServerDebugDebugXMLRegistryIncludeTime_Object = MibTableColumn
serverDebugDebugXMLRegistryIncludeTime = _ServerDebugDebugXMLRegistryIncludeTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 93),
    _ServerDebugDebugXMLRegistryIncludeTime_Type()
)
serverDebugDebugXMLRegistryIncludeTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugXMLRegistryIncludeTime.setStatus("current")
_ServerDebugDebugJAXPIncludeLocation_Type = OctetString
_ServerDebugDebugJAXPIncludeLocation_Object = MibTableColumn
serverDebugDebugJAXPIncludeLocation = _ServerDebugDebugJAXPIncludeLocation_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 94),
    _ServerDebugDebugJAXPIncludeLocation_Type()
)
serverDebugDebugJAXPIncludeLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJAXPIncludeLocation.setStatus("current")
_ServerDebugDebugLoggingConfiguration_Type = OctetString
_ServerDebugDebugLoggingConfiguration_Object = MibTableColumn
serverDebugDebugLoggingConfiguration = _ServerDebugDebugLoggingConfiguration_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 95),
    _ServerDebugDebugLoggingConfiguration_Type()
)
serverDebugDebugLoggingConfiguration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugLoggingConfiguration.setStatus("current")
_ServerDebugDebugHttp_Type = OctetString
_ServerDebugDebugHttp_Object = MibTableColumn
serverDebugDebugHttp = _ServerDebugDebugHttp_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 96),
    _ServerDebugDebugHttp_Type()
)
serverDebugDebugHttp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugHttp.setStatus("current")
_ServerDebugDebugDiagnosticFileArchive_Type = OctetString
_ServerDebugDebugDiagnosticFileArchive_Object = MibTableColumn
serverDebugDebugDiagnosticFileArchive = _ServerDebugDebugDiagnosticFileArchive_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 97),
    _ServerDebugDebugDiagnosticFileArchive_Type()
)
serverDebugDebugDiagnosticFileArchive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticFileArchive.setStatus("current")
_ServerDebugDebugJTAXA_Type = OctetString
_ServerDebugDebugJTAXA_Object = MibTableColumn
serverDebugDebugJTAXA = _ServerDebugDebugJTAXA_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 98),
    _ServerDebugDebugJTAXA_Type()
)
serverDebugDebugJTAXA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTAXA.setStatus("current")
_ServerDebugDebugIIOPSecurity_Type = OctetString
_ServerDebugDebugIIOPSecurity_Object = MibTableColumn
serverDebugDebugIIOPSecurity = _ServerDebugDebugIIOPSecurity_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 99),
    _ServerDebugDebugIIOPSecurity_Type()
)
serverDebugDebugIIOPSecurity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugIIOPSecurity.setStatus("current")
_ServerDebugDebugRAXAout_Type = OctetString
_ServerDebugDebugRAXAout_Object = MibTableColumn
serverDebugDebugRAXAout = _ServerDebugDebugRAXAout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 100),
    _ServerDebugDebugRAXAout_Type()
)
serverDebugDebugRAXAout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugRAXAout.setStatus("current")
_ServerDebugDebugJAXPIncludeName_Type = OctetString
_ServerDebugDebugJAXPIncludeName_Object = MibTableColumn
serverDebugDebugJAXPIncludeName = _ServerDebugDebugJAXPIncludeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 101),
    _ServerDebugDebugJAXPIncludeName_Type()
)
serverDebugDebugJAXPIncludeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJAXPIncludeName.setStatus("current")
_ServerDebugDebugDiagnosticsModule_Type = OctetString
_ServerDebugDebugDiagnosticsModule_Object = MibTableColumn
serverDebugDebugDiagnosticsModule = _ServerDebugDebugDiagnosticsModule_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 102),
    _ServerDebugDebugDiagnosticsModule_Type()
)
serverDebugDebugDiagnosticsModule.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticsModule.setStatus("current")
_ServerDebugApplicationContainer_Type = OctetString
_ServerDebugApplicationContainer_Object = MibTableColumn
serverDebugApplicationContainer = _ServerDebugApplicationContainer_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 103),
    _ServerDebugApplicationContainer_Type()
)
serverDebugApplicationContainer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugApplicationContainer.setStatus("current")
_ServerDebugDebugDeploy_Type = OctetString
_ServerDebugDebugDeploy_Object = MibTableColumn
serverDebugDebugDeploy = _ServerDebugDebugDeploy_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 104),
    _ServerDebugDebugDeploy_Type()
)
serverDebugDebugDeploy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDeploy.setStatus("current")
_ServerDebugDebugDeploymentServiceTransport_Type = OctetString
_ServerDebugDebugDeploymentServiceTransport_Object = MibTableColumn
serverDebugDebugDeploymentServiceTransport = _ServerDebugDebugDeploymentServiceTransport_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 105),
    _ServerDebugDebugDeploymentServiceTransport_Type()
)
serverDebugDebugDeploymentServiceTransport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDeploymentServiceTransport.setStatus("current")
_ServerDebugDebugWTCTDomPdu_Type = OctetString
_ServerDebugDebugWTCTDomPdu_Object = MibTableColumn
serverDebugDebugWTCTDomPdu = _ServerDebugDebugWTCTDomPdu_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 106),
    _ServerDebugDebugWTCTDomPdu_Type()
)
serverDebugDebugWTCTDomPdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugWTCTDomPdu.setStatus("current")
_ServerDebugDebugJTALifecycle_Type = OctetString
_ServerDebugDebugJTALifecycle_Object = MibTableColumn
serverDebugDebugJTALifecycle = _ServerDebugDebugJTALifecycle_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 107),
    _ServerDebugDebugJTALifecycle_Type()
)
serverDebugDebugJTALifecycle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTALifecycle.setStatus("current")
_ServerDebugDebugJTATLOG_Type = OctetString
_ServerDebugDebugJTATLOG_Object = MibTableColumn
serverDebugDebugJTATLOG = _ServerDebugDebugJTATLOG_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 108),
    _ServerDebugDebugJTATLOG_Type()
)
serverDebugDebugJTATLOG.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTATLOG.setStatus("current")
_ServerDebugDebugRAParsing_Type = OctetString
_ServerDebugDebugRAParsing_Object = MibTableColumn
serverDebugDebugRAParsing = _ServerDebugDebugRAParsing_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 109),
    _ServerDebugDebugRAParsing_Type()
)
serverDebugDebugRAParsing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugRAParsing.setStatus("current")
_ServerDebugDebugServerLifeCycle_Type = OctetString
_ServerDebugDebugServerLifeCycle_Object = MibTableColumn
serverDebugDebugServerLifeCycle = _ServerDebugDebugServerLifeCycle_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 110),
    _ServerDebugDebugServerLifeCycle_Type()
)
serverDebugDebugServerLifeCycle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugServerLifeCycle.setStatus("current")
_ServerDebugDebugSAFReceivingAgent_Type = OctetString
_ServerDebugDebugSAFReceivingAgent_Object = MibTableColumn
serverDebugDebugSAFReceivingAgent = _ServerDebugDebugSAFReceivingAgent_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 111),
    _ServerDebugDebugSAFReceivingAgent_Type()
)
serverDebugDebugSAFReceivingAgent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSAFReceivingAgent.setStatus("current")
_ServerDebugDebugConnection_Type = OctetString
_ServerDebugDebugConnection_Object = MibTableColumn
serverDebugDebugConnection = _ServerDebugDebugConnection_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 112),
    _ServerDebugDebugConnection_Type()
)
serverDebugDebugConnection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugConnection.setStatus("current")
_ServerDebugDebugJMSBoot_Type = OctetString
_ServerDebugDebugJMSBoot_Object = MibTableColumn
serverDebugDebugJMSBoot = _ServerDebugDebugJMSBoot_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 113),
    _ServerDebugDebugJMSBoot_Type()
)
serverDebugDebugJMSBoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJMSBoot.setStatus("current")
_ServerDebugDebugJMSSAF_Type = OctetString
_ServerDebugDebugJMSSAF_Object = MibTableColumn
serverDebugDebugJMSSAF = _ServerDebugDebugJMSSAF_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 114),
    _ServerDebugDebugJMSSAF_Type()
)
serverDebugDebugJMSSAF.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJMSSAF.setStatus("current")
_ServerDebugDebugDiagnosticImage_Type = OctetString
_ServerDebugDebugDiagnosticImage_Object = MibTableColumn
serverDebugDebugDiagnosticImage = _ServerDebugDebugDiagnosticImage_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 115),
    _ServerDebugDebugDiagnosticImage_Type()
)
serverDebugDebugDiagnosticImage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticImage.setStatus("current")
_ServerDebugDebugJpaJdbcSchema_Type = OctetString
_ServerDebugDebugJpaJdbcSchema_Object = MibTableColumn
serverDebugDebugJpaJdbcSchema = _ServerDebugDebugJpaJdbcSchema_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 116),
    _ServerDebugDebugJpaJdbcSchema_Type()
)
serverDebugDebugJpaJdbcSchema.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJpaJdbcSchema.setStatus("current")
_ServerDebugDebugTunnelingConnection_Type = OctetString
_ServerDebugDebugTunnelingConnection_Object = MibTableColumn
serverDebugDebugTunnelingConnection = _ServerDebugDebugTunnelingConnection_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 117),
    _ServerDebugDebugTunnelingConnection_Type()
)
serverDebugDebugTunnelingConnection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugTunnelingConnection.setStatus("current")
_ServerDebugDebugClusterHeartbeats_Type = OctetString
_ServerDebugDebugClusterHeartbeats_Object = MibTableColumn
serverDebugDebugClusterHeartbeats = _ServerDebugDebugClusterHeartbeats_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 118),
    _ServerDebugDebugClusterHeartbeats_Type()
)
serverDebugDebugClusterHeartbeats.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugClusterHeartbeats.setStatus("current")
_ServerDebugDebugRSA_Type = OctetString
_ServerDebugDebugRSA_Object = MibTableColumn
serverDebugDebugRSA = _ServerDebugDebugRSA_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 119),
    _ServerDebugDebugRSA_Type()
)
serverDebugDebugRSA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugRSA.setStatus("current")
_ServerDebugDebugSecurityEEngine_Type = OctetString
_ServerDebugDebugSecurityEEngine_Object = MibTableColumn
serverDebugDebugSecurityEEngine = _ServerDebugDebugSecurityEEngine_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 120),
    _ServerDebugDebugSecurityEEngine_Type()
)
serverDebugDebugSecurityEEngine.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecurityEEngine.setStatus("current")
_ServerDebugDebugSecurityKeyStore_Type = OctetString
_ServerDebugDebugSecurityKeyStore_Object = MibTableColumn
serverDebugDebugSecurityKeyStore = _ServerDebugDebugSecurityKeyStore_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 121),
    _ServerDebugDebugSecurityKeyStore_Type()
)
serverDebugDebugSecurityKeyStore.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecurityKeyStore.setStatus("current")
_ServerDebugDebugXMLEntityCacheIncludeTime_Type = OctetString
_ServerDebugDebugXMLEntityCacheIncludeTime_Object = MibTableColumn
serverDebugDebugXMLEntityCacheIncludeTime = _ServerDebugDebugXMLEntityCacheIncludeTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 122),
    _ServerDebugDebugXMLEntityCacheIncludeTime_Type()
)
serverDebugDebugXMLEntityCacheIncludeTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugXMLEntityCacheIncludeTime.setStatus("current")
_ServerDebugDebugJMSPauseResume_Type = OctetString
_ServerDebugDebugJMSPauseResume_Object = MibTableColumn
serverDebugDebugJMSPauseResume = _ServerDebugDebugJMSPauseResume_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 123),
    _ServerDebugDebugJMSPauseResume_Type()
)
serverDebugDebugJMSPauseResume.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJMSPauseResume.setStatus("current")
_ServerDebugDebugLibraries_Type = OctetString
_ServerDebugDebugLibraries_Object = MibTableColumn
serverDebugDebugLibraries = _ServerDebugDebugLibraries_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 124),
    _ServerDebugDebugLibraries_Type()
)
serverDebugDebugLibraries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugLibraries.setStatus("current")
_ServerDebugDebugSecurityCredMap_Type = OctetString
_ServerDebugDebugSecurityCredMap_Object = MibTableColumn
serverDebugDebugSecurityCredMap = _ServerDebugDebugSecurityCredMap_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 125),
    _ServerDebugDebugSecurityCredMap_Type()
)
serverDebugDebugSecurityCredMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecurityCredMap.setStatus("current")
_ServerDebugDebugConfigurationRuntime_Type = OctetString
_ServerDebugDebugConfigurationRuntime_Object = MibTableColumn
serverDebugDebugConfigurationRuntime = _ServerDebugDebugConfigurationRuntime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 126),
    _ServerDebugDebugConfigurationRuntime_Type()
)
serverDebugDebugConfigurationRuntime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugConfigurationRuntime.setStatus("current")
_ServerDebugDebugDiagnosticLifecycleHandlers_Type = OctetString
_ServerDebugDebugDiagnosticLifecycleHandlers_Object = MibTableColumn
serverDebugDebugDiagnosticLifecycleHandlers = _ServerDebugDebugDiagnosticLifecycleHandlers_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 127),
    _ServerDebugDebugDiagnosticLifecycleHandlers_Type()
)
serverDebugDebugDiagnosticLifecycleHandlers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticLifecycleHandlers.setStatus("current")
_ServerDebugDebugConfigurationEdit_Type = OctetString
_ServerDebugDebugConfigurationEdit_Object = MibTableColumn
serverDebugDebugConfigurationEdit = _ServerDebugDebugConfigurationEdit_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 128),
    _ServerDebugDebugConfigurationEdit_Type()
)
serverDebugDebugConfigurationEdit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugConfigurationEdit.setStatus("current")
_ServerDebugDebugDiagnosticWlstoreArchive_Type = OctetString
_ServerDebugDebugDiagnosticWlstoreArchive_Object = MibTableColumn
serverDebugDebugDiagnosticWlstoreArchive = _ServerDebugDebugDiagnosticWlstoreArchive_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 129),
    _ServerDebugDebugDiagnosticWlstoreArchive_Type()
)
serverDebugDebugDiagnosticWlstoreArchive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticWlstoreArchive.setStatus("current")
_ServerDebugDebugSecurityPasswordPolicy_Type = OctetString
_ServerDebugDebugSecurityPasswordPolicy_Object = MibTableColumn
serverDebugDebugSecurityPasswordPolicy = _ServerDebugDebugSecurityPasswordPolicy_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 130),
    _ServerDebugDebugSecurityPasswordPolicy_Type()
)
serverDebugDebugSecurityPasswordPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecurityPasswordPolicy.setStatus("current")
_ServerDebugDebugEjbCompilation_Type = OctetString
_ServerDebugDebugEjbCompilation_Object = MibTableColumn
serverDebugDebugEjbCompilation = _ServerDebugDebugEjbCompilation_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 131),
    _ServerDebugDebugEjbCompilation_Type()
)
serverDebugDebugEjbCompilation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugEjbCompilation.setStatus("current")
_ServerDebugDebugJpaQuery_Type = OctetString
_ServerDebugDebugJpaQuery_Object = MibTableColumn
serverDebugDebugJpaQuery = _ServerDebugDebugJpaQuery_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 132),
    _ServerDebugDebugJpaQuery_Type()
)
serverDebugDebugJpaQuery.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJpaQuery.setStatus("current")
_ServerDebugDebugSSL_Type = OctetString
_ServerDebugDebugSSL_Object = MibTableColumn
serverDebugDebugSSL = _ServerDebugDebugSSL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 133),
    _ServerDebugDebugSSL_Type()
)
serverDebugDebugSSL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSSL.setStatus("current")
_ServerDebugDebugRouting_Type = OctetString
_ServerDebugDebugRouting_Object = MibTableColumn
serverDebugDebugRouting = _ServerDebugDebugRouting_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 134),
    _ServerDebugDebugRouting_Type()
)
serverDebugDebugRouting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugRouting.setStatus("current")
_ServerDebugDebugJpaDataCache_Type = OctetString
_ServerDebugDebugJpaDataCache_Object = MibTableColumn
serverDebugDebugJpaDataCache = _ServerDebugDebugJpaDataCache_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 135),
    _ServerDebugDebugJpaDataCache_Type()
)
serverDebugDebugJpaDataCache.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJpaDataCache.setStatus("current")
_ServerDebugDebugConsensusLeasing_Type = OctetString
_ServerDebugDebugConsensusLeasing_Object = MibTableColumn
serverDebugDebugConsensusLeasing = _ServerDebugDebugConsensusLeasing_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 136),
    _ServerDebugDebugConsensusLeasing_Type()
)
serverDebugDebugConsensusLeasing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugConsensusLeasing.setStatus("current")
_ServerDebugDebugDiagnosticInstrumentationEvents_Type = OctetString
_ServerDebugDebugDiagnosticInstrumentationEvents_Object = MibTableColumn
serverDebugDebugDiagnosticInstrumentationEvents = _ServerDebugDebugDiagnosticInstrumentationEvents_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 137),
    _ServerDebugDebugDiagnosticInstrumentationEvents_Type()
)
serverDebugDebugDiagnosticInstrumentationEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticInstrumentationEvents.setStatus("current")
_ServerDebugDebugStoreIOLogicalBoot_Type = OctetString
_ServerDebugDebugStoreIOLogicalBoot_Object = MibTableColumn
serverDebugDebugStoreIOLogicalBoot = _ServerDebugDebugStoreIOLogicalBoot_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 138),
    _ServerDebugDebugStoreIOLogicalBoot_Type()
)
serverDebugDebugStoreIOLogicalBoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugStoreIOLogicalBoot.setStatus("current")
_ServerDebugDebugEjbSwapping_Type = OctetString
_ServerDebugDebugEjbSwapping_Object = MibTableColumn
serverDebugDebugEjbSwapping = _ServerDebugDebugEjbSwapping_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 139),
    _ServerDebugDebugEjbSwapping_Type()
)
serverDebugDebugEjbSwapping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugEjbSwapping.setStatus("current")
_ServerDebugDebugJTANonXA_Type = OctetString
_ServerDebugDebugJTANonXA_Object = MibTableColumn
serverDebugDebugJTANonXA = _ServerDebugDebugJTANonXA_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 140),
    _ServerDebugDebugJTANonXA_Type()
)
serverDebugDebugJTANonXA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTANonXA.setStatus("current")
_ServerDebugDebugDiagnosticInstrumentationConfig_Type = OctetString
_ServerDebugDebugDiagnosticInstrumentationConfig_Object = MibTableColumn
serverDebugDebugDiagnosticInstrumentationConfig = _ServerDebugDebugDiagnosticInstrumentationConfig_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 141),
    _ServerDebugDebugDiagnosticInstrumentationConfig_Type()
)
serverDebugDebugDiagnosticInstrumentationConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticInstrumentationConfig.setStatus("current")
_ServerDebugDebugMessaging_Type = OctetString
_ServerDebugDebugMessaging_Object = MibTableColumn
serverDebugDebugMessaging = _ServerDebugDebugMessaging_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 142),
    _ServerDebugDebugMessaging_Type()
)
serverDebugDebugMessaging.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugMessaging.setStatus("current")
_ServerDebugDebugSecurityCertPath_Type = OctetString
_ServerDebugDebugSecurityCertPath_Object = MibTableColumn
serverDebugDebugSecurityCertPath = _ServerDebugDebugSecurityCertPath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 143),
    _ServerDebugDebugSecurityCertPath_Type()
)
serverDebugDebugSecurityCertPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecurityCertPath.setStatus("current")
_ServerDebugDebugJNDIResolution_Type = OctetString
_ServerDebugDebugJNDIResolution_Object = MibTableColumn
serverDebugDebugJNDIResolution = _ServerDebugDebugJNDIResolution_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 144),
    _ServerDebugDebugJNDIResolution_Type()
)
serverDebugDebugJNDIResolution.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJNDIResolution.setStatus("current")
_ServerDebugDebugSNMPProtocolTCP_Type = OctetString
_ServerDebugDebugSNMPProtocolTCP_Object = MibTableColumn
serverDebugDebugSNMPProtocolTCP = _ServerDebugDebugSNMPProtocolTCP_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 145),
    _ServerDebugDebugSNMPProtocolTCP_Type()
)
serverDebugDebugSNMPProtocolTCP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSNMPProtocolTCP.setStatus("current")
_ServerDebugDebugRALocalOut_Type = OctetString
_ServerDebugDebugRALocalOut_Object = MibTableColumn
serverDebugDebugRALocalOut = _ServerDebugDebugRALocalOut_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 146),
    _ServerDebugDebugRALocalOut_Type()
)
serverDebugDebugRALocalOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugRALocalOut.setStatus("current")
_ServerDebugDebugJMXDomain_Type = OctetString
_ServerDebugDebugJMXDomain_Object = MibTableColumn
serverDebugDebugJMXDomain = _ServerDebugDebugJMXDomain_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 147),
    _ServerDebugDebugJMXDomain_Type()
)
serverDebugDebugJMXDomain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJMXDomain.setStatus("current")
_ServerDebugDebugDiagnosticsHarvesterData_Type = OctetString
_ServerDebugDebugDiagnosticsHarvesterData_Object = MibTableColumn
serverDebugDebugDiagnosticsHarvesterData = _ServerDebugDebugDiagnosticsHarvesterData_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 148),
    _ServerDebugDebugDiagnosticsHarvesterData_Type()
)
serverDebugDebugDiagnosticsHarvesterData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticsHarvesterData.setStatus("current")
_ServerDebugDebugSecurityRoleMap_Type = OctetString
_ServerDebugDebugSecurityRoleMap_Object = MibTableColumn
serverDebugDebugSecurityRoleMap = _ServerDebugDebugSecurityRoleMap_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 149),
    _ServerDebugDebugSecurityRoleMap_Type()
)
serverDebugDebugSecurityRoleMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecurityRoleMap.setStatus("current")
_ServerDebugDebugEjbDeployment_Type = OctetString
_ServerDebugDebugEjbDeployment_Object = MibTableColumn
serverDebugDebugEjbDeployment = _ServerDebugDebugEjbDeployment_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 150),
    _ServerDebugDebugEjbDeployment_Type()
)
serverDebugDebugEjbDeployment.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugEjbDeployment.setStatus("current")
_ServerDebugDebugSNMPToolkit_Type = OctetString
_ServerDebugDebugSNMPToolkit_Object = MibTableColumn
serverDebugDebugSNMPToolkit = _ServerDebugDebugSNMPToolkit_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 151),
    _ServerDebugDebugSNMPToolkit_Type()
)
serverDebugDebugSNMPToolkit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSNMPToolkit.setStatus("current")
_ServerDebugDebugMuxer_Type = OctetString
_ServerDebugDebugMuxer_Object = MibTableColumn
serverDebugDebugMuxer = _ServerDebugDebugMuxer_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 152),
    _ServerDebugDebugMuxer_Type()
)
serverDebugDebugMuxer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugMuxer.setStatus("current")
_ServerDebugMasterDeployer_Type = OctetString
_ServerDebugMasterDeployer_Object = MibTableColumn
serverDebugMasterDeployer = _ServerDebugMasterDeployer_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 153),
    _ServerDebugMasterDeployer_Type()
)
serverDebugMasterDeployer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugMasterDeployer.setStatus("current")
_ServerDebugDebugSecuritySAMLCredMap_Type = OctetString
_ServerDebugDebugSecuritySAMLCredMap_Object = MibTableColumn
serverDebugDebugSecuritySAMLCredMap = _ServerDebugDebugSecuritySAMLCredMap_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 154),
    _ServerDebugDebugSecuritySAMLCredMap_Type()
)
serverDebugDebugSecuritySAMLCredMap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecuritySAMLCredMap.setStatus("current")
_ServerDebugDiagnosticContextDebugMode_Type = OctetString
_ServerDebugDiagnosticContextDebugMode_Object = MibTableColumn
serverDebugDiagnosticContextDebugMode = _ServerDebugDiagnosticContextDebugMode_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 155),
    _ServerDebugDiagnosticContextDebugMode_Type()
)
serverDebugDiagnosticContextDebugMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDiagnosticContextDebugMode.setStatus("current")
_ServerDebugDebugSecuritySSL_Type = OctetString
_ServerDebugDebugSecuritySSL_Object = MibTableColumn
serverDebugDebugSecuritySSL = _ServerDebugDebugSecuritySSL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 156),
    _ServerDebugDebugSecuritySSL_Type()
)
serverDebugDebugSecuritySSL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecuritySSL.setStatus("current")
_ServerDebugDebugDiagnosticJdbcArchive_Type = OctetString
_ServerDebugDebugDiagnosticJdbcArchive_Object = MibTableColumn
serverDebugDebugDiagnosticJdbcArchive = _ServerDebugDebugDiagnosticJdbcArchive_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 157),
    _ServerDebugDebugDiagnosticJdbcArchive_Type()
)
serverDebugDebugDiagnosticJdbcArchive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticJdbcArchive.setStatus("current")
_ServerDebugSlaveDeployer_Type = OctetString
_ServerDebugSlaveDeployer_Object = MibTableColumn
serverDebugSlaveDeployer = _ServerDebugSlaveDeployer_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 158),
    _ServerDebugSlaveDeployer_Type()
)
serverDebugSlaveDeployer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugSlaveDeployer.setStatus("current")
_ServerDebugDebugJTAXAStackTrace_Type = OctetString
_ServerDebugDebugJTAXAStackTrace_Object = MibTableColumn
serverDebugDebugJTAXAStackTrace = _ServerDebugDebugJTAXAStackTrace_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 159),
    _ServerDebugDebugJTAXAStackTrace_Type()
)
serverDebugDebugJTAXAStackTrace.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTAXAStackTrace.setStatus("current")
_ServerDebugDebugSecurityJACC_Type = OctetString
_ServerDebugDebugSecurityJACC_Object = MibTableColumn
serverDebugDebugSecurityJACC = _ServerDebugDebugSecurityJACC_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 160),
    _ServerDebugDebugSecurityJACC_Type()
)
serverDebugDebugSecurityJACC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecurityJACC.setStatus("current")
_ServerDebugDebugEjbCmpDeployment_Type = OctetString
_ServerDebugDebugEjbCmpDeployment_Object = MibTableColumn
serverDebugDebugEjbCmpDeployment = _ServerDebugDebugEjbCmpDeployment_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 161),
    _ServerDebugDebugEjbCmpDeployment_Type()
)
serverDebugDebugEjbCmpDeployment.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugEjbCmpDeployment.setStatus("current")
_ServerDebugType_Type = OctetString
_ServerDebugType_Object = MibTableColumn
serverDebugType = _ServerDebugType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 162),
    _ServerDebugType_Type()
)
serverDebugType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugType.setStatus("current")
_ServerDebugDebugEmbeddedLDAPWriteOverrideProps_Type = OctetString
_ServerDebugDebugEmbeddedLDAPWriteOverrideProps_Object = MibTableColumn
serverDebugDebugEmbeddedLDAPWriteOverrideProps = _ServerDebugDebugEmbeddedLDAPWriteOverrideProps_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 163),
    _ServerDebugDebugEmbeddedLDAPWriteOverrideProps_Type()
)
serverDebugDebugEmbeddedLDAPWriteOverrideProps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugEmbeddedLDAPWriteOverrideProps.setStatus("current")
_ServerDebugDebugSecurityJACCPolicy_Type = OctetString
_ServerDebugDebugSecurityJACCPolicy_Object = MibTableColumn
serverDebugDebugSecurityJACCPolicy = _ServerDebugDebugSecurityJACCPolicy_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 164),
    _ServerDebugDebugSecurityJACCPolicy_Type()
)
serverDebugDebugSecurityJACCPolicy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecurityJACCPolicy.setStatus("current")
_ServerDebugDebugJMSDispatcher_Type = OctetString
_ServerDebugDebugJMSDispatcher_Object = MibTableColumn
serverDebugDebugJMSDispatcher = _ServerDebugDebugJMSDispatcher_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 165),
    _ServerDebugDebugJMSDispatcher_Type()
)
serverDebugDebugJMSDispatcher.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJMSDispatcher.setStatus("current")
_ServerDebugDebugClusterAnnouncements_Type = OctetString
_ServerDebugDebugClusterAnnouncements_Object = MibTableColumn
serverDebugDebugClusterAnnouncements = _ServerDebugDebugClusterAnnouncements_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 166),
    _ServerDebugDebugClusterAnnouncements_Type()
)
serverDebugDebugClusterAnnouncements.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugClusterAnnouncements.setStatus("current")
_ServerDebugClasspathServlet_Type = OctetString
_ServerDebugClasspathServlet_Object = MibTableColumn
serverDebugClasspathServlet = _ServerDebugClasspathServlet_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 167),
    _ServerDebugClasspathServlet_Type()
)
serverDebugClasspathServlet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugClasspathServlet.setStatus("current")
_ServerDebugDebugIIOPTunneling_Type = OctetString
_ServerDebugDebugIIOPTunneling_Object = MibTableColumn
serverDebugDebugIIOPTunneling = _ServerDebugDebugIIOPTunneling_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 168),
    _ServerDebugDebugIIOPTunneling_Type()
)
serverDebugDebugIIOPTunneling.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugIIOPTunneling.setStatus("current")
_ServerDebugDebugJAXPDebugLevel_Type = Integer32
_ServerDebugDebugJAXPDebugLevel_Object = MibTableColumn
serverDebugDebugJAXPDebugLevel = _ServerDebugDebugJAXPDebugLevel_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 169),
    _ServerDebugDebugJAXPDebugLevel_Type()
)
serverDebugDebugJAXPDebugLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJAXPDebugLevel.setStatus("current")
_ServerDebugDebugJ2EEManagement_Type = OctetString
_ServerDebugDebugJ2EEManagement_Object = MibTableColumn
serverDebugDebugJ2EEManagement = _ServerDebugDebugJ2EEManagement_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 170),
    _ServerDebugDebugJ2EEManagement_Type()
)
serverDebugDebugJ2EEManagement.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJ2EEManagement.setStatus("current")
_ServerDebugDebugJTAResourceName_Type = OctetString
_ServerDebugDebugJTAResourceName_Object = MibTableColumn
serverDebugDebugJTAResourceName = _ServerDebugDebugJTAResourceName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 171),
    _ServerDebugDebugJTAResourceName_Type()
)
serverDebugDebugJTAResourceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTAResourceName.setStatus("current")
_ServerDebugDebugSecurityEncryptionService_Type = OctetString
_ServerDebugDebugSecurityEncryptionService_Object = MibTableColumn
serverDebugDebugSecurityEncryptionService = _ServerDebugDebugSecurityEncryptionService_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 172),
    _ServerDebugDebugSecurityEncryptionService_Type()
)
serverDebugDebugSecurityEncryptionService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecurityEncryptionService.setStatus("current")
_ServerDebugDebugJDBCConn_Type = OctetString
_ServerDebugDebugJDBCConn_Object = MibTableColumn
serverDebugDebugJDBCConn = _ServerDebugDebugJDBCConn_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 173),
    _ServerDebugDebugJDBCConn_Type()
)
serverDebugDebugJDBCConn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJDBCConn.setStatus("current")
_ServerDebugDebugDRSUpdateStatus_Type = OctetString
_ServerDebugDebugDRSUpdateStatus_Object = MibTableColumn
serverDebugDebugDRSUpdateStatus = _ServerDebugDebugDRSUpdateStatus_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 174),
    _ServerDebugDebugDRSUpdateStatus_Type()
)
serverDebugDebugDRSUpdateStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDRSUpdateStatus.setStatus("current")
_ServerDebugDebugDeploymentServiceStatusUpdates_Type = OctetString
_ServerDebugDebugDeploymentServiceStatusUpdates_Object = MibTableColumn
serverDebugDebugDeploymentServiceStatusUpdates = _ServerDebugDebugDeploymentServiceStatusUpdates_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 175),
    _ServerDebugDebugDeploymentServiceStatusUpdates_Type()
)
serverDebugDebugDeploymentServiceStatusUpdates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDeploymentServiceStatusUpdates.setStatus("current")
_ServerDebugDebugMuxerTimeout_Type = OctetString
_ServerDebugDebugMuxerTimeout_Object = MibTableColumn
serverDebugDebugMuxerTimeout = _ServerDebugDebugMuxerTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 176),
    _ServerDebugDebugMuxerTimeout_Type()
)
serverDebugDebugMuxerTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugMuxerTimeout.setStatus("current")
_ServerDebugDebugSAFStore_Type = OctetString
_ServerDebugDebugSAFStore_Object = MibTableColumn
serverDebugDebugSAFStore = _ServerDebugDebugSAFStore_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 177),
    _ServerDebugDebugSAFStore_Type()
)
serverDebugDebugSAFStore.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSAFStore.setStatus("current")
_ServerDebugName_Type = OctetString
_ServerDebugName_Object = MibTableColumn
serverDebugName = _ServerDebugName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 178),
    _ServerDebugName_Type()
)
serverDebugName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugName.setStatus("current")
_ServerDebugDebugDomainLogHandler_Type = OctetString
_ServerDebugDebugDomainLogHandler_Object = MibTableColumn
serverDebugDebugDomainLogHandler = _ServerDebugDebugDomainLogHandler_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 179),
    _ServerDebugDebugDomainLogHandler_Type()
)
serverDebugDebugDomainLogHandler.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDomainLogHandler.setStatus("current")
_ServerDebugDebugWTCConfig_Type = OctetString
_ServerDebugDebugWTCConfig_Object = MibTableColumn
serverDebugDebugWTCConfig = _ServerDebugDebugWTCConfig_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 180),
    _ServerDebugDebugWTCConfig_Type()
)
serverDebugDebugWTCConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugWTCConfig.setStatus("current")
_ServerDebugDebugJTAGatewayStackTrace_Type = OctetString
_ServerDebugDebugJTAGatewayStackTrace_Object = MibTableColumn
serverDebugDebugJTAGatewayStackTrace = _ServerDebugDebugJTAGatewayStackTrace_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 181),
    _ServerDebugDebugJTAGatewayStackTrace_Type()
)
serverDebugDebugJTAGatewayStackTrace.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTAGatewayStackTrace.setStatus("current")
_ServerDebugDebugMuxerException_Type = OctetString
_ServerDebugDebugMuxerException_Object = MibTableColumn
serverDebugDebugMuxerException = _ServerDebugDebugMuxerException_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 182),
    _ServerDebugDebugMuxerException_Type()
)
serverDebugDebugMuxerException.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugMuxerException.setStatus("current")
_ServerDebugDebugDRSHeartbeats_Type = OctetString
_ServerDebugDebugDRSHeartbeats_Object = MibTableColumn
serverDebugDebugDRSHeartbeats = _ServerDebugDebugDRSHeartbeats_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 183),
    _ServerDebugDebugDRSHeartbeats_Type()
)
serverDebugDebugDRSHeartbeats.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDRSHeartbeats.setStatus("current")
_ServerDebugDebugJTA2PCStackTrace_Type = OctetString
_ServerDebugDebugJTA2PCStackTrace_Object = MibTableColumn
serverDebugDebugJTA2PCStackTrace = _ServerDebugDebugJTA2PCStackTrace_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 184),
    _ServerDebugDebugJTA2PCStackTrace_Type()
)
serverDebugDebugJTA2PCStackTrace.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTA2PCStackTrace.setStatus("current")
_ServerDebugDebugJMSBackEnd_Type = OctetString
_ServerDebugDebugJMSBackEnd_Object = MibTableColumn
serverDebugDebugJMSBackEnd = _ServerDebugDebugJMSBackEnd_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 185),
    _ServerDebugDebugJMSBackEnd_Type()
)
serverDebugDebugJMSBackEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJMSBackEnd.setStatus("current")
_ServerDebugDebugXMLEntityCacheIncludeClass_Type = OctetString
_ServerDebugDebugXMLEntityCacheIncludeClass_Object = MibTableColumn
serverDebugDebugXMLEntityCacheIncludeClass = _ServerDebugDebugXMLEntityCacheIncludeClass_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 186),
    _ServerDebugDebugXMLEntityCacheIncludeClass_Type()
)
serverDebugDebugXMLEntityCacheIncludeClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugXMLEntityCacheIncludeClass.setStatus("current")
_ServerDebugDebugCluster_Type = OctetString
_ServerDebugDebugCluster_Object = MibTableColumn
serverDebugDebugCluster = _ServerDebugDebugCluster_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 187),
    _ServerDebugDebugCluster_Type()
)
serverDebugDebugCluster.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugCluster.setStatus("current")
_ServerDebugDebugJTAResourceHealth_Type = OctetString
_ServerDebugDebugJTAResourceHealth_Object = MibTableColumn
serverDebugDebugJTAResourceHealth = _ServerDebugDebugJTAResourceHealth_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 188),
    _ServerDebugDebugJTAResourceHealth_Type()
)
serverDebugDebugJTAResourceHealth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTAResourceHealth.setStatus("current")
_ServerDebugDebugRASecurityCtx_Type = OctetString
_ServerDebugDebugRASecurityCtx_Object = MibTableColumn
serverDebugDebugRASecurityCtx = _ServerDebugDebugRASecurityCtx_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 189),
    _ServerDebugDebugRASecurityCtx_Type()
)
serverDebugDebugRASecurityCtx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugRASecurityCtx.setStatus("current")
_ServerDebugDebugStoreAdmin_Type = OctetString
_ServerDebugDebugStoreAdmin_Object = MibTableColumn
serverDebugDebugStoreAdmin = _ServerDebugDebugStoreAdmin_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 190),
    _ServerDebugDebugStoreAdmin_Type()
)
serverDebugDebugStoreAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugStoreAdmin.setStatus("current")
_ServerDebugClassFinder_Type = OctetString
_ServerDebugClassFinder_Object = MibTableColumn
serverDebugClassFinder = _ServerDebugClassFinder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 191),
    _ServerDebugClassFinder_Type()
)
serverDebugClassFinder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugClassFinder.setStatus("current")
_ServerDebugDebugDeploymentService_Type = OctetString
_ServerDebugDebugDeploymentService_Object = MibTableColumn
serverDebugDebugDeploymentService = _ServerDebugDebugDeploymentService_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 192),
    _ServerDebugDebugDeploymentService_Type()
)
serverDebugDebugDeploymentService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDeploymentService.setStatus("current")
_ServerDebugDebugHttpSessions_Type = OctetString
_ServerDebugDebugHttpSessions_Object = MibTableColumn
serverDebugDebugHttpSessions = _ServerDebugDebugHttpSessions_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 193),
    _ServerDebugDebugHttpSessions_Type()
)
serverDebugDebugHttpSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugHttpSessions.setStatus("current")
_ServerDebugDebugJMXEdit_Type = OctetString
_ServerDebugDebugJMXEdit_Object = MibTableColumn
serverDebugDebugJMXEdit = _ServerDebugDebugJMXEdit_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 194),
    _ServerDebugDebugJMXEdit_Type()
)
serverDebugDebugJMXEdit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJMXEdit.setStatus("current")
_ServerDebugDebugClusterFragments_Type = OctetString
_ServerDebugDebugClusterFragments_Object = MibTableColumn
serverDebugDebugClusterFragments = _ServerDebugDebugClusterFragments_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 195),
    _ServerDebugDebugClusterFragments_Type()
)
serverDebugDebugClusterFragments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugClusterFragments.setStatus("current")
_ServerDebugDebugWTCJatmiEx_Type = OctetString
_ServerDebugDebugWTCJatmiEx_Object = MibTableColumn
serverDebugDebugWTCJatmiEx = _ServerDebugDebugWTCJatmiEx_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 196),
    _ServerDebugDebugWTCJatmiEx_Type()
)
serverDebugDebugWTCJatmiEx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugWTCJatmiEx.setStatus("current")
_ServerDebugDebugWTCUData_Type = OctetString
_ServerDebugDebugWTCUData_Object = MibTableColumn
serverDebugDebugWTCUData = _ServerDebugDebugWTCUData_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 197),
    _ServerDebugDebugWTCUData_Type()
)
serverDebugDebugWTCUData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugWTCUData.setStatus("current")
_ServerDebugDebugDeploymentServiceInternal_Type = OctetString
_ServerDebugDebugDeploymentServiceInternal_Object = MibTableColumn
serverDebugDebugDeploymentServiceInternal = _ServerDebugDebugDeploymentServiceInternal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 198),
    _ServerDebugDebugDeploymentServiceInternal_Type()
)
serverDebugDebugDeploymentServiceInternal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDeploymentServiceInternal.setStatus("current")
_ServerDebugDebugSecurityAuditor_Type = OctetString
_ServerDebugDebugSecurityAuditor_Object = MibTableColumn
serverDebugDebugSecurityAuditor = _ServerDebugDebugSecurityAuditor_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 199),
    _ServerDebugDebugSecurityAuditor_Type()
)
serverDebugDebugSecurityAuditor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecurityAuditor.setStatus("current")
_ServerDebugDebugJpaJdbcSql_Type = OctetString
_ServerDebugDebugJpaJdbcSql_Object = MibTableColumn
serverDebugDebugJpaJdbcSql = _ServerDebugDebugJpaJdbcSql_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 200),
    _ServerDebugDebugJpaJdbcSql_Type()
)
serverDebugDebugJpaJdbcSql.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJpaJdbcSql.setStatus("current")
_ServerDebugDebugEjbInvoke_Type = OctetString
_ServerDebugDebugEjbInvoke_Object = MibTableColumn
serverDebugDebugEjbInvoke = _ServerDebugDebugEjbInvoke_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 201),
    _ServerDebugDebugEjbInvoke_Type()
)
serverDebugDebugEjbInvoke.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugEjbInvoke.setStatus("current")
_ServerDebugDebugRAWork_Type = OctetString
_ServerDebugDebugRAWork_Object = MibTableColumn
serverDebugDebugRAWork = _ServerDebugDebugRAWork_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 202),
    _ServerDebugDebugRAWork_Type()
)
serverDebugDebugRAWork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugRAWork.setStatus("current")
_ServerDebugDebugDRSCalls_Type = OctetString
_ServerDebugDebugDRSCalls_Object = MibTableColumn
serverDebugDebugDRSCalls = _ServerDebugDebugDRSCalls_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 203),
    _ServerDebugDebugDRSCalls_Type()
)
serverDebugDebugDRSCalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDRSCalls.setStatus("current")
_ServerDebugDebugSecurityPredicate_Type = OctetString
_ServerDebugDebugSecurityPredicate_Object = MibTableColumn
serverDebugDebugSecurityPredicate = _ServerDebugDebugSecurityPredicate_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 204),
    _ServerDebugDebugSecurityPredicate_Type()
)
serverDebugDebugSecurityPredicate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecurityPredicate.setStatus("current")
_ServerDebugDebugXMLRegistryUseShortClass_Type = OctetString
_ServerDebugDebugXMLRegistryUseShortClass_Object = MibTableColumn
serverDebugDebugXMLRegistryUseShortClass = _ServerDebugDebugXMLRegistryUseShortClass_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 205),
    _ServerDebugDebugXMLRegistryUseShortClass_Type()
)
serverDebugDebugXMLRegistryUseShortClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugXMLRegistryUseShortClass.setStatus("current")
_ServerDebugDebugSecurityUserLockout_Type = OctetString
_ServerDebugDebugSecurityUserLockout_Object = MibTableColumn
serverDebugDebugSecurityUserLockout = _ServerDebugDebugSecurityUserLockout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 206),
    _ServerDebugDebugSecurityUserLockout_Type()
)
serverDebugDebugSecurityUserLockout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecurityUserLockout.setStatus("current")
_ServerDebugDebugJTANamingStackTrace_Type = OctetString
_ServerDebugDebugJTANamingStackTrace_Object = MibTableColumn
serverDebugDebugJTANamingStackTrace = _ServerDebugDebugJTANamingStackTrace_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 207),
    _ServerDebugDebugJTANamingStackTrace_Type()
)
serverDebugDebugJTANamingStackTrace.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTANamingStackTrace.setStatus("current")
_ServerDebugListenThreadDebug_Type = OctetString
_ServerDebugListenThreadDebug_Object = MibTableColumn
serverDebugListenThreadDebug = _ServerDebugListenThreadDebug_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 208),
    _ServerDebugListenThreadDebug_Type()
)
serverDebugListenThreadDebug.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugListenThreadDebug.setStatus("current")
_ServerDebugDebugJpaMetaData_Type = OctetString
_ServerDebugDebugJpaMetaData_Object = MibTableColumn
serverDebugDebugJpaMetaData = _ServerDebugDebugJpaMetaData_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 209),
    _ServerDebugDebugJpaMetaData_Type()
)
serverDebugDebugJpaMetaData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJpaMetaData.setStatus("current")
_ServerDebugDebugJTA2PC_Type = OctetString
_ServerDebugDebugJTA2PC_Object = MibTableColumn
serverDebugDebugJTA2PC = _ServerDebugDebugJTA2PC_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 210),
    _ServerDebugDebugJTA2PC_Type()
)
serverDebugDebugJTA2PC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTA2PC.setStatus("current")
_ServerDebugDebugAppContainer_Type = OctetString
_ServerDebugDebugAppContainer_Object = MibTableColumn
serverDebugDebugAppContainer = _ServerDebugDebugAppContainer_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 211),
    _ServerDebugDebugAppContainer_Type()
)
serverDebugDebugAppContainer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugAppContainer.setStatus("current")
_ServerDebugDebugJAXPUseShortClass_Type = OctetString
_ServerDebugDebugJAXPUseShortClass_Object = MibTableColumn
serverDebugDebugJAXPUseShortClass = _ServerDebugDebugJAXPUseShortClass_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 212),
    _ServerDebugDebugJAXPUseShortClass_Type()
)
serverDebugDebugJAXPUseShortClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJAXPUseShortClass.setStatus("current")
_ServerDebugDebugEventManager_Type = OctetString
_ServerDebugDebugEventManager_Object = MibTableColumn
serverDebugDebugEventManager = _ServerDebugDebugEventManager_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 213),
    _ServerDebugDebugEventManager_Type()
)
serverDebugDebugEventManager.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugEventManager.setStatus("current")
_ServerDebugDebugJpaEnhance_Type = OctetString
_ServerDebugDebugJpaEnhance_Object = MibTableColumn
serverDebugDebugJpaEnhance = _ServerDebugDebugJpaEnhance_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 214),
    _ServerDebugDebugJpaEnhance_Type()
)
serverDebugDebugJpaEnhance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJpaEnhance.setStatus("current")
_ServerDebugDebugTunnelingConnectionTimeout_Type = OctetString
_ServerDebugDebugTunnelingConnectionTimeout_Object = MibTableColumn
serverDebugDebugTunnelingConnectionTimeout = _ServerDebugDebugTunnelingConnectionTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 215),
    _ServerDebugDebugTunnelingConnectionTimeout_Type()
)
serverDebugDebugTunnelingConnectionTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugTunnelingConnectionTimeout.setStatus("current")
_ServerDebugDebugSecuritySAMLAtn_Type = OctetString
_ServerDebugDebugSecuritySAMLAtn_Object = MibTableColumn
serverDebugDebugSecuritySAMLAtn = _ServerDebugDebugSecuritySAMLAtn_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 216),
    _ServerDebugDebugSecuritySAMLAtn_Type()
)
serverDebugDebugSecuritySAMLAtn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecuritySAMLAtn.setStatus("current")
_ServerDebugDebugSecurityAtn_Type = OctetString
_ServerDebugDebugSecurityAtn_Object = MibTableColumn
serverDebugDebugSecurityAtn = _ServerDebugDebugSecurityAtn_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 217),
    _ServerDebugDebugSecurityAtn_Type()
)
serverDebugDebugSecurityAtn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecurityAtn.setStatus("current")
_ServerDebugLogDGCStatistics_Type = OctetString
_ServerDebugLogDGCStatistics_Object = MibTableColumn
serverDebugLogDGCStatistics = _ServerDebugLogDGCStatistics_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 218),
    _ServerDebugLogDGCStatistics_Type()
)
serverDebugLogDGCStatistics.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugLogDGCStatistics.setStatus("current")
_ServerDebugDebugDiagnosticQuery_Type = OctetString
_ServerDebugDebugDiagnosticQuery_Object = MibTableColumn
serverDebugDebugDiagnosticQuery = _ServerDebugDebugDiagnosticQuery_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 219),
    _ServerDebugDebugDiagnosticQuery_Type()
)
serverDebugDebugDiagnosticQuery.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticQuery.setStatus("current")
_ServerDebugDebugJMX_Type = OctetString
_ServerDebugDebugJMX_Object = MibTableColumn
serverDebugDebugJMX = _ServerDebugDebugJMX_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 220),
    _ServerDebugDebugJMX_Type()
)
serverDebugDebugJMX.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJMX.setStatus("current")
_ServerDebugDebugXMLRegistryIncludeName_Type = OctetString
_ServerDebugDebugXMLRegistryIncludeName_Object = MibTableColumn
serverDebugDebugXMLRegistryIncludeName = _ServerDebugDebugXMLRegistryIncludeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 221),
    _ServerDebugDebugXMLRegistryIncludeName_Type()
)
serverDebugDebugXMLRegistryIncludeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugXMLRegistryIncludeName.setStatus("current")
_ServerDebugDebugDiagnosticInstrumentationWeavingMatches_Type = OctetString
_ServerDebugDebugDiagnosticInstrumentationWeavingMatches_Object = MibTableColumn
serverDebugDebugDiagnosticInstrumentationWeavingMatches = _ServerDebugDebugDiagnosticInstrumentationWeavingMatches_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 222),
    _ServerDebugDebugDiagnosticInstrumentationWeavingMatches_Type()
)
serverDebugDebugDiagnosticInstrumentationWeavingMatches.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticInstrumentationWeavingMatches.setStatus("current")
_ServerDebugDebugAbbreviation_Type = OctetString
_ServerDebugDebugAbbreviation_Object = MibTableColumn
serverDebugDebugAbbreviation = _ServerDebugDebugAbbreviation_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 223),
    _ServerDebugDebugAbbreviation_Type()
)
serverDebugDebugAbbreviation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugAbbreviation.setStatus("current")
_ServerDebugDebugJAXPIncludeClass_Type = OctetString
_ServerDebugDebugJAXPIncludeClass_Object = MibTableColumn
serverDebugDebugJAXPIncludeClass = _ServerDebugDebugJAXPIncludeClass_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 224),
    _ServerDebugDebugJAXPIncludeClass_Type()
)
serverDebugDebugJAXPIncludeClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJAXPIncludeClass.setStatus("current")
_ServerDebugDebugHttpLogging_Type = OctetString
_ServerDebugDebugHttpLogging_Object = MibTableColumn
serverDebugDebugHttpLogging = _ServerDebugDebugHttpLogging_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 225),
    _ServerDebugDebugHttpLogging_Type()
)
serverDebugDebugHttpLogging.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugHttpLogging.setStatus("current")
_ServerDebugDebugJpaJdbcJdbc_Type = OctetString
_ServerDebugDebugJpaJdbcJdbc_Object = MibTableColumn
serverDebugDebugJpaJdbcJdbc = _ServerDebugDebugJpaJdbcJdbc_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 226),
    _ServerDebugDebugJpaJdbcJdbc_Type()
)
serverDebugDebugJpaJdbcJdbc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJpaJdbcJdbc.setStatus("current")
_ServerDebugDebugSAFManager_Type = OctetString
_ServerDebugDebugSAFManager_Object = MibTableColumn
serverDebugDebugSAFManager = _ServerDebugDebugSAFManager_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 227),
    _ServerDebugDebugSAFManager_Type()
)
serverDebugDebugSAFManager.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSAFManager.setStatus("current")
_ServerDebugDebugPathSvcVerbose_Type = OctetString
_ServerDebugDebugPathSvcVerbose_Object = MibTableColumn
serverDebugDebugPathSvcVerbose = _ServerDebugDebugPathSvcVerbose_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 228),
    _ServerDebugDebugPathSvcVerbose_Type()
)
serverDebugDebugPathSvcVerbose.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugPathSvcVerbose.setStatus("current")
_ServerDebugDebugWTCGwtEx_Type = OctetString
_ServerDebugDebugWTCGwtEx_Object = MibTableColumn
serverDebugDebugWTCGwtEx = _ServerDebugDebugWTCGwtEx_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 229),
    _ServerDebugDebugWTCGwtEx_Type()
)
serverDebugDebugWTCGwtEx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugWTCGwtEx.setStatus("current")
_ServerDebugDebugConnectorService_Type = OctetString
_ServerDebugDebugConnectorService_Object = MibTableColumn
serverDebugDebugConnectorService = _ServerDebugDebugConnectorService_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 230),
    _ServerDebugDebugConnectorService_Type()
)
serverDebugDebugConnectorService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugConnectorService.setStatus("current")
_ServerDebugDebugJMSMessagePath_Type = OctetString
_ServerDebugDebugJMSMessagePath_Object = MibTableColumn
serverDebugDebugJMSMessagePath = _ServerDebugDebugJMSMessagePath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 231),
    _ServerDebugDebugJMSMessagePath_Type()
)
serverDebugDebugJMSMessagePath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJMSMessagePath.setStatus("current")
_ServerDebugDebugJTAMigration_Type = OctetString
_ServerDebugDebugJTAMigration_Object = MibTableColumn
serverDebugDebugJTAMigration = _ServerDebugDebugJTAMigration_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 232),
    _ServerDebugDebugJTAMigration_Type()
)
serverDebugDebugJTAMigration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTAMigration.setStatus("current")
_ServerDebugDebugSecurityRealm_Type = OctetString
_ServerDebugDebugSecurityRealm_Object = MibTableColumn
serverDebugDebugSecurityRealm = _ServerDebugDebugSecurityRealm_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 233),
    _ServerDebugDebugSecurityRealm_Type()
)
serverDebugDebugSecurityRealm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecurityRealm.setStatus("current")
_ServerDebugDebugIIOPStartup_Type = OctetString
_ServerDebugDebugIIOPStartup_Object = MibTableColumn
serverDebugDebugIIOPStartup = _ServerDebugDebugIIOPStartup_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 234),
    _ServerDebugDebugIIOPStartup_Type()
)
serverDebugDebugIIOPStartup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugIIOPStartup.setStatus("current")
_ServerDebugDebugJDBCDriverLogging_Type = OctetString
_ServerDebugDebugJDBCDriverLogging_Object = MibTableColumn
serverDebugDebugJDBCDriverLogging = _ServerDebugDebugJDBCDriverLogging_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 235),
    _ServerDebugDebugJDBCDriverLogging_Type()
)
serverDebugDebugJDBCDriverLogging.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJDBCDriverLogging.setStatus("current")
_ServerDebugDebugJMSModule_Type = OctetString
_ServerDebugDebugJMSModule_Object = MibTableColumn
serverDebugDebugJMSModule = _ServerDebugDebugJMSModule_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 236),
    _ServerDebugDebugJMSModule_Type()
)
serverDebugDebugJMSModule.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJMSModule.setStatus("current")
_ServerDebugDebugEjbCmpRuntime_Type = OctetString
_ServerDebugDebugEjbCmpRuntime_Object = MibTableColumn
serverDebugDebugEjbCmpRuntime = _ServerDebugDebugEjbCmpRuntime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 237),
    _ServerDebugDebugEjbCmpRuntime_Type()
)
serverDebugDebugEjbCmpRuntime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugEjbCmpRuntime.setStatus("current")
_ServerDebugDebugWANReplicationDetails_Type = OctetString
_ServerDebugDebugWANReplicationDetails_Object = MibTableColumn
serverDebugDebugWANReplicationDetails = _ServerDebugDebugWANReplicationDetails_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 238),
    _ServerDebugDebugWANReplicationDetails_Type()
)
serverDebugDebugWANReplicationDetails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugWANReplicationDetails.setStatus("current")
_ServerDebugDebugJMST3Server_Type = OctetString
_ServerDebugDebugJMST3Server_Object = MibTableColumn
serverDebugDebugJMST3Server = _ServerDebugDebugJMST3Server_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 239),
    _ServerDebugDebugJMST3Server_Type()
)
serverDebugDebugJMST3Server.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJMST3Server.setStatus("current")
_ServerDebugDebugXMLEntityCacheIncludeLocation_Type = OctetString
_ServerDebugDebugXMLEntityCacheIncludeLocation_Object = MibTableColumn
serverDebugDebugXMLEntityCacheIncludeLocation = _ServerDebugDebugXMLEntityCacheIncludeLocation_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 240),
    _ServerDebugDebugXMLEntityCacheIncludeLocation_Type()
)
serverDebugDebugXMLEntityCacheIncludeLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugXMLEntityCacheIncludeLocation.setStatus("current")
_ServerDebugDebugSAFVerbose_Type = OctetString
_ServerDebugDebugSAFVerbose_Object = MibTableColumn
serverDebugDebugSAFVerbose = _ServerDebugDebugSAFVerbose_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 241),
    _ServerDebugDebugSAFVerbose_Type()
)
serverDebugDebugSAFVerbose.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSAFVerbose.setStatus("current")
_ServerDebugDebugDRSQueues_Type = OctetString
_ServerDebugDebugDRSQueues_Object = MibTableColumn
serverDebugDebugDRSQueues = _ServerDebugDebugDRSQueues_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 242),
    _ServerDebugDebugDRSQueues_Type()
)
serverDebugDebugDRSQueues.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDRSQueues.setStatus("current")
_ServerDebugDebugDiagnosticInstrumentationActions_Type = OctetString
_ServerDebugDebugDiagnosticInstrumentationActions_Object = MibTableColumn
serverDebugDebugDiagnosticInstrumentationActions = _ServerDebugDebugDiagnosticInstrumentationActions_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 243),
    _ServerDebugDebugDiagnosticInstrumentationActions_Type()
)
serverDebugDebugDiagnosticInstrumentationActions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticInstrumentationActions.setStatus("current")
_ServerDebugDebugDiagnosticsHarvester_Type = OctetString
_ServerDebugDebugDiagnosticsHarvester_Object = MibTableColumn
serverDebugDebugDiagnosticsHarvester = _ServerDebugDebugDiagnosticsHarvester_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 244),
    _ServerDebugDebugDiagnosticsHarvester_Type()
)
serverDebugDebugDiagnosticsHarvester.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticsHarvester.setStatus("current")
_ServerDebugDebugEjbMdbConnection_Type = OctetString
_ServerDebugDebugEjbMdbConnection_Object = MibTableColumn
serverDebugDebugEjbMdbConnection = _ServerDebugDebugEjbMdbConnection_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 245),
    _ServerDebugDebugEjbMdbConnection_Type()
)
serverDebugDebugEjbMdbConnection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugEjbMdbConnection.setStatus("current")
_ServerDebugDebugJTANaming_Type = OctetString
_ServerDebugDebugJTANaming_Object = MibTableColumn
serverDebugDebugJTANaming = _ServerDebugDebugJTANaming_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 246),
    _ServerDebugDebugJTANaming_Type()
)
serverDebugDebugJTANaming.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTANaming.setStatus("current")
_ServerDebugDebugSecuritySSLEaten_Type = OctetString
_ServerDebugDebugSecuritySSLEaten_Object = MibTableColumn
serverDebugDebugSecuritySSLEaten = _ServerDebugDebugSecuritySSLEaten_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 247),
    _ServerDebugDebugSecuritySSLEaten_Type()
)
serverDebugDebugSecuritySSLEaten.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecuritySSLEaten.setStatus("current")
_ServerDebugDebugEjbTimers_Type = OctetString
_ServerDebugDebugEjbTimers_Object = MibTableColumn
serverDebugDebugEjbTimers = _ServerDebugDebugEjbTimers_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 248),
    _ServerDebugDebugEjbTimers_Type()
)
serverDebugDebugEjbTimers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugEjbTimers.setStatus("current")
_ServerDebugDebugJMXCore_Type = OctetString
_ServerDebugDebugJMXCore_Object = MibTableColumn
serverDebugDebugJMXCore = _ServerDebugDebugJMXCore_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 249),
    _ServerDebugDebugJMXCore_Type()
)
serverDebugDebugJMXCore.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJMXCore.setStatus("current")
_ServerDebugDebugJpaTool_Type = OctetString
_ServerDebugDebugJpaTool_Object = MibTableColumn
serverDebugDebugJpaTool = _ServerDebugDebugJpaTool_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 250),
    _ServerDebugDebugJpaTool_Type()
)
serverDebugDebugJpaTool.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJpaTool.setStatus("current")
_ServerDebugDebugIIOPNaming_Type = OctetString
_ServerDebugDebugIIOPNaming_Object = MibTableColumn
serverDebugDebugIIOPNaming = _ServerDebugDebugIIOPNaming_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 251),
    _ServerDebugDebugIIOPNaming_Type()
)
serverDebugDebugIIOPNaming.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugIIOPNaming.setStatus("current")
_ServerDebugDebugJTARMI_Type = OctetString
_ServerDebugDebugJTARMI_Object = MibTableColumn
serverDebugDebugJTARMI = _ServerDebugDebugJTARMI_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 252),
    _ServerDebugDebugJTARMI_Type()
)
serverDebugDebugJTARMI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTARMI.setStatus("current")
_ServerDebugDebugJMSFrontEnd_Type = OctetString
_ServerDebugDebugJMSFrontEnd_Object = MibTableColumn
serverDebugDebugJMSFrontEnd = _ServerDebugDebugJMSFrontEnd_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 253),
    _ServerDebugDebugJMSFrontEnd_Type()
)
serverDebugDebugJMSFrontEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJMSFrontEnd.setStatus("current")
_ServerDebugDebugSecuritySAMLService_Type = OctetString
_ServerDebugDebugSecuritySAMLService_Object = MibTableColumn
serverDebugDebugSecuritySAMLService = _ServerDebugDebugSecuritySAMLService_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 254),
    _ServerDebugDebugSecuritySAMLService_Type()
)
serverDebugDebugSecuritySAMLService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecuritySAMLService.setStatus("current")
_ServerDebugDebugRA_Type = OctetString
_ServerDebugDebugRA_Object = MibTableColumn
serverDebugDebugRA = _ServerDebugDebugRA_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 255),
    _ServerDebugDebugRA_Type()
)
serverDebugDebugRA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugRA.setStatus("current")
_ServerDebugDebugXMLRegistryDebugName_Type = OctetString
_ServerDebugDebugXMLRegistryDebugName_Object = MibTableColumn
serverDebugDebugXMLRegistryDebugName = _ServerDebugDebugXMLRegistryDebugName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 256),
    _ServerDebugDebugXMLRegistryDebugName_Type()
)
serverDebugDebugXMLRegistryDebugName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugXMLRegistryDebugName.setStatus("current")
_ServerDebugDebugSelfTuning_Type = OctetString
_ServerDebugDebugSelfTuning_Object = MibTableColumn
serverDebugDebugSelfTuning = _ServerDebugDebugSelfTuning_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 257),
    _ServerDebugDebugSelfTuning_Type()
)
serverDebugDebugSelfTuning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSelfTuning.setStatus("current")
_ServerDebugDebugIIOPMarshal_Type = OctetString
_ServerDebugDebugIIOPMarshal_Object = MibTableColumn
serverDebugDebugIIOPMarshal = _ServerDebugDebugIIOPMarshal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 258),
    _ServerDebugDebugIIOPMarshal_Type()
)
serverDebugDebugIIOPMarshal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugIIOPMarshal.setStatus("current")
_ServerDebugDebugSecurityAtz_Type = OctetString
_ServerDebugDebugSecurityAtz_Object = MibTableColumn
serverDebugDebugSecurityAtz = _ServerDebugDebugSecurityAtz_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 259),
    _ServerDebugDebugSecurityAtz_Type()
)
serverDebugDebugSecurityAtz.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugSecurityAtz.setStatus("current")
_ServerDebugDebugIIOPOTS_Type = OctetString
_ServerDebugDebugIIOPOTS_Object = MibTableColumn
serverDebugDebugIIOPOTS = _ServerDebugDebugIIOPOTS_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 260),
    _ServerDebugDebugIIOPOTS_Type()
)
serverDebugDebugIIOPOTS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugIIOPOTS.setStatus("current")
_ServerDebugDebugDeployment_Type = OctetString
_ServerDebugDebugDeployment_Object = MibTableColumn
serverDebugDebugDeployment = _ServerDebugDebugDeployment_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 261),
    _ServerDebugDebugDeployment_Type()
)
serverDebugDebugDeployment.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDeployment.setStatus("current")
_ServerDebugDebugRAWorkEvents_Type = OctetString
_ServerDebugDebugRAWorkEvents_Object = MibTableColumn
serverDebugDebugRAWorkEvents = _ServerDebugDebugRAWorkEvents_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 262),
    _ServerDebugDebugRAWorkEvents_Type()
)
serverDebugDebugRAWorkEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugRAWorkEvents.setStatus("current")
_ServerDebugDebugJTAGateway_Type = OctetString
_ServerDebugDebugJTAGateway_Object = MibTableColumn
serverDebugDebugJTAGateway = _ServerDebugDebugJTAGateway_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 263),
    _ServerDebugDebugJTAGateway_Type()
)
serverDebugDebugJTAGateway.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJTAGateway.setStatus("current")
_ServerDebugDebugWebAppIdentityAssertion_Type = OctetString
_ServerDebugDebugWebAppIdentityAssertion_Object = MibTableColumn
serverDebugDebugWebAppIdentityAssertion = _ServerDebugDebugWebAppIdentityAssertion_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 264),
    _ServerDebugDebugWebAppIdentityAssertion_Type()
)
serverDebugDebugWebAppIdentityAssertion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugWebAppIdentityAssertion.setStatus("current")
_ServerDebugDebugMuxerConnection_Type = OctetString
_ServerDebugDebugMuxerConnection_Object = MibTableColumn
serverDebugDebugMuxerConnection = _ServerDebugDebugMuxerConnection_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 265),
    _ServerDebugDebugMuxerConnection_Type()
)
serverDebugDebugMuxerConnection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugMuxerConnection.setStatus("current")
_ServerDebugDebugDiagnosticArchiveRetirement_Type = OctetString
_ServerDebugDebugDiagnosticArchiveRetirement_Object = MibTableColumn
serverDebugDebugDiagnosticArchiveRetirement = _ServerDebugDebugDiagnosticArchiveRetirement_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 266),
    _ServerDebugDebugDiagnosticArchiveRetirement_Type()
)
serverDebugDebugDiagnosticArchiveRetirement.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticArchiveRetirement.setStatus("current")
_ServerDebugDebugRAPoolVerbose_Type = OctetString
_ServerDebugDebugRAPoolVerbose_Object = MibTableColumn
serverDebugDebugRAPoolVerbose = _ServerDebugDebugRAPoolVerbose_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 267),
    _ServerDebugDebugRAPoolVerbose_Type()
)
serverDebugDebugRAPoolVerbose.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugRAPoolVerbose.setStatus("current")
_ServerDebugDebugStoreIOLogical_Type = OctetString
_ServerDebugDebugStoreIOLogical_Object = MibTableColumn
serverDebugDebugStoreIOLogical = _ServerDebugDebugStoreIOLogical_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 268),
    _ServerDebugDebugStoreIOLogical_Type()
)
serverDebugDebugStoreIOLogical.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugStoreIOLogical.setStatus("current")
_ServerDebugDebugRAConnections_Type = OctetString
_ServerDebugDebugRAConnections_Object = MibTableColumn
serverDebugDebugRAConnections = _ServerDebugDebugRAConnections_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 269),
    _ServerDebugDebugRAConnections_Type()
)
serverDebugDebugRAConnections.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugRAConnections.setStatus("current")
_ServerDebugDebugReplicationDetails_Type = OctetString
_ServerDebugDebugReplicationDetails_Object = MibTableColumn
serverDebugDebugReplicationDetails = _ServerDebugDebugReplicationDetails_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 270),
    _ServerDebugDebugReplicationDetails_Type()
)
serverDebugDebugReplicationDetails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugReplicationDetails.setStatus("current")
_ServerDebugDebugDiagnosticsHarvesterMBeanPlugin_Type = OctetString
_ServerDebugDebugDiagnosticsHarvesterMBeanPlugin_Object = MibTableColumn
serverDebugDebugDiagnosticsHarvesterMBeanPlugin = _ServerDebugDebugDiagnosticsHarvesterMBeanPlugin_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 271),
    _ServerDebugDebugDiagnosticsHarvesterMBeanPlugin_Type()
)
serverDebugDebugDiagnosticsHarvesterMBeanPlugin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticsHarvesterMBeanPlugin.setStatus("current")
_ServerDebugDebugRALifecycle_Type = OctetString
_ServerDebugDebugRALifecycle_Object = MibTableColumn
serverDebugDebugRALifecycle = _ServerDebugDebugRALifecycle_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 272),
    _ServerDebugDebugRALifecycle_Type()
)
serverDebugDebugRALifecycle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugRALifecycle.setStatus("current")
_ServerDebugDebugJMSDistTopic_Type = OctetString
_ServerDebugDebugJMSDistTopic_Object = MibTableColumn
serverDebugDebugJMSDistTopic = _ServerDebugDebugJMSDistTopic_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 273),
    _ServerDebugDebugJMSDistTopic_Type()
)
serverDebugDebugJMSDistTopic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugJMSDistTopic.setStatus("current")
_ServerDebugDebugDGCEnrollment_Type = OctetString
_ServerDebugDebugDGCEnrollment_Object = MibTableColumn
serverDebugDebugDGCEnrollment = _ServerDebugDebugDGCEnrollment_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 274),
    _ServerDebugDebugDGCEnrollment_Type()
)
serverDebugDebugDGCEnrollment.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDGCEnrollment.setStatus("current")
_ServerDebugDebugPathSvc_Type = OctetString
_ServerDebugDebugPathSvc_Object = MibTableColumn
serverDebugDebugPathSvc = _ServerDebugDebugPathSvc_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 275),
    _ServerDebugDebugPathSvc_Type()
)
serverDebugDebugPathSvc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugPathSvc.setStatus("current")
_ServerDebugDebugDiagnosticContext_Type = OctetString
_ServerDebugDebugDiagnosticContext_Object = MibTableColumn
serverDebugDebugDiagnosticContext = _ServerDebugDebugDiagnosticContext_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1090, 1, 276),
    _ServerDebugDebugDiagnosticContext_Type()
)
serverDebugDebugDiagnosticContext.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverDebugDebugDiagnosticContext.setStatus("current")
_ServerFailureTriggerTable_Object = MibTable
serverFailureTriggerTable = _ServerFailureTriggerTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1095)
)
if mibBuilder.loadTexts:
    serverFailureTriggerTable.setStatus("current")
_ServerFailureTriggerEntry_Object = MibTableRow
serverFailureTriggerEntry = _ServerFailureTriggerEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1095, 1)
)
serverFailureTriggerEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "serverFailureTriggerIndex"),
)
if mibBuilder.loadTexts:
    serverFailureTriggerEntry.setStatus("current")
_ServerFailureTriggerIndex_Type = OctetString
_ServerFailureTriggerIndex_Object = MibTableColumn
serverFailureTriggerIndex = _ServerFailureTriggerIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1095, 1, 1),
    _ServerFailureTriggerIndex_Type()
)
serverFailureTriggerIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    serverFailureTriggerIndex.setStatus("current")
_ServerFailureTriggerObjectName_Type = OctetString
_ServerFailureTriggerObjectName_Object = MibTableColumn
serverFailureTriggerObjectName = _ServerFailureTriggerObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1095, 1, 2),
    _ServerFailureTriggerObjectName_Type()
)
serverFailureTriggerObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverFailureTriggerObjectName.setStatus("current")
_ServerFailureTriggerType_Type = OctetString
_ServerFailureTriggerType_Object = MibTableColumn
serverFailureTriggerType = _ServerFailureTriggerType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1095, 1, 3),
    _ServerFailureTriggerType_Type()
)
serverFailureTriggerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverFailureTriggerType.setStatus("current")
_ServerFailureTriggerMaxStuckThreadTime_Type = Integer32
_ServerFailureTriggerMaxStuckThreadTime_Object = MibTableColumn
serverFailureTriggerMaxStuckThreadTime = _ServerFailureTriggerMaxStuckThreadTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1095, 1, 4),
    _ServerFailureTriggerMaxStuckThreadTime_Type()
)
serverFailureTriggerMaxStuckThreadTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverFailureTriggerMaxStuckThreadTime.setStatus("current")
_ServerFailureTriggerStuckThreadCount_Type = Integer32
_ServerFailureTriggerStuckThreadCount_Object = MibTableColumn
serverFailureTriggerStuckThreadCount = _ServerFailureTriggerStuckThreadCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1095, 1, 5),
    _ServerFailureTriggerStuckThreadCount_Type()
)
serverFailureTriggerStuckThreadCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverFailureTriggerStuckThreadCount.setStatus("current")
_ServerFailureTriggerName_Type = OctetString
_ServerFailureTriggerName_Object = MibTableColumn
serverFailureTriggerName = _ServerFailureTriggerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1095, 1, 6),
    _ServerFailureTriggerName_Type()
)
serverFailureTriggerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverFailureTriggerName.setStatus("current")
_ShutdownClassTable_Object = MibTable
shutdownClassTable = _ShutdownClassTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1100)
)
if mibBuilder.loadTexts:
    shutdownClassTable.setStatus("current")
_ShutdownClassEntry_Object = MibTableRow
shutdownClassEntry = _ShutdownClassEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1100, 1)
)
shutdownClassEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "shutdownClassIndex"),
)
if mibBuilder.loadTexts:
    shutdownClassEntry.setStatus("current")
_ShutdownClassIndex_Type = OctetString
_ShutdownClassIndex_Object = MibTableColumn
shutdownClassIndex = _ShutdownClassIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1100, 1, 1),
    _ShutdownClassIndex_Type()
)
shutdownClassIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    shutdownClassIndex.setStatus("current")
_ShutdownClassObjectName_Type = OctetString
_ShutdownClassObjectName_Object = MibTableColumn
shutdownClassObjectName = _ShutdownClassObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1100, 1, 2),
    _ShutdownClassObjectName_Type()
)
shutdownClassObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shutdownClassObjectName.setStatus("current")
_ShutdownClassType_Type = OctetString
_ShutdownClassType_Object = MibTableColumn
shutdownClassType = _ShutdownClassType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1100, 1, 3),
    _ShutdownClassType_Type()
)
shutdownClassType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shutdownClassType.setStatus("current")
_ShutdownClassDeploymentOrder_Type = Integer32
_ShutdownClassDeploymentOrder_Object = MibTableColumn
shutdownClassDeploymentOrder = _ShutdownClassDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1100, 1, 4),
    _ShutdownClassDeploymentOrder_Type()
)
shutdownClassDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shutdownClassDeploymentOrder.setStatus("current")
_ShutdownClassArguments_Type = OctetString
_ShutdownClassArguments_Object = MibTableColumn
shutdownClassArguments = _ShutdownClassArguments_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1100, 1, 5),
    _ShutdownClassArguments_Type()
)
shutdownClassArguments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shutdownClassArguments.setStatus("current")
_ShutdownClassName_Type = OctetString
_ShutdownClassName_Object = MibTableColumn
shutdownClassName = _ShutdownClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1100, 1, 6),
    _ShutdownClassName_Type()
)
shutdownClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shutdownClassName.setStatus("current")
_ShutdownClassClassName_Type = OctetString
_ShutdownClassClassName_Object = MibTableColumn
shutdownClassClassName = _ShutdownClassClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1100, 1, 7),
    _ShutdownClassClassName_Type()
)
shutdownClassClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shutdownClassClassName.setStatus("current")
_SingleSignOnServicesTable_Object = MibTable
singleSignOnServicesTable = _SingleSignOnServicesTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105)
)
if mibBuilder.loadTexts:
    singleSignOnServicesTable.setStatus("current")
_SingleSignOnServicesEntry_Object = MibTableRow
singleSignOnServicesEntry = _SingleSignOnServicesEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1)
)
singleSignOnServicesEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "singleSignOnServicesIndex"),
)
if mibBuilder.loadTexts:
    singleSignOnServicesEntry.setStatus("current")
_SingleSignOnServicesIndex_Type = OctetString
_SingleSignOnServicesIndex_Object = MibTableColumn
singleSignOnServicesIndex = _SingleSignOnServicesIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 1),
    _SingleSignOnServicesIndex_Type()
)
singleSignOnServicesIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    singleSignOnServicesIndex.setStatus("current")
_SingleSignOnServicesObjectName_Type = OctetString
_SingleSignOnServicesObjectName_Object = MibTableColumn
singleSignOnServicesObjectName = _SingleSignOnServicesObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 2),
    _SingleSignOnServicesObjectName_Type()
)
singleSignOnServicesObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesObjectName.setStatus("current")
_SingleSignOnServicesArtifactMaxCacheSize_Type = Integer32
_SingleSignOnServicesArtifactMaxCacheSize_Object = MibTableColumn
singleSignOnServicesArtifactMaxCacheSize = _SingleSignOnServicesArtifactMaxCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 3),
    _SingleSignOnServicesArtifactMaxCacheSize_Type()
)
singleSignOnServicesArtifactMaxCacheSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesArtifactMaxCacheSize.setStatus("current")
_SingleSignOnServicesIdentityProviderRedirectBindingEnabled_Type = OctetString
_SingleSignOnServicesIdentityProviderRedirectBindingEnabled_Object = MibTableColumn
singleSignOnServicesIdentityProviderRedirectBindingEnabled = _SingleSignOnServicesIdentityProviderRedirectBindingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 4),
    _SingleSignOnServicesIdentityProviderRedirectBindingEnabled_Type()
)
singleSignOnServicesIdentityProviderRedirectBindingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesIdentityProviderRedirectBindingEnabled.setStatus("current")
_SingleSignOnServicesForceAuthn_Type = OctetString
_SingleSignOnServicesForceAuthn_Object = MibTableColumn
singleSignOnServicesForceAuthn = _SingleSignOnServicesForceAuthn_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 5),
    _SingleSignOnServicesForceAuthn_Type()
)
singleSignOnServicesForceAuthn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesForceAuthn.setStatus("current")
_SingleSignOnServicesIdentityProviderPreferredBinding_Type = OctetString
_SingleSignOnServicesIdentityProviderPreferredBinding_Object = MibTableColumn
singleSignOnServicesIdentityProviderPreferredBinding = _SingleSignOnServicesIdentityProviderPreferredBinding_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 6),
    _SingleSignOnServicesIdentityProviderPreferredBinding_Type()
)
singleSignOnServicesIdentityProviderPreferredBinding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesIdentityProviderPreferredBinding.setStatus("current")
_SingleSignOnServicesContactPersonGivenName_Type = OctetString
_SingleSignOnServicesContactPersonGivenName_Object = MibTableColumn
singleSignOnServicesContactPersonGivenName = _SingleSignOnServicesContactPersonGivenName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 7),
    _SingleSignOnServicesContactPersonGivenName_Type()
)
singleSignOnServicesContactPersonGivenName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesContactPersonGivenName.setStatus("current")
_SingleSignOnServicesWantArtifactRequestsSigned_Type = OctetString
_SingleSignOnServicesWantArtifactRequestsSigned_Object = MibTableColumn
singleSignOnServicesWantArtifactRequestsSigned = _SingleSignOnServicesWantArtifactRequestsSigned_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 8),
    _SingleSignOnServicesWantArtifactRequestsSigned_Type()
)
singleSignOnServicesWantArtifactRequestsSigned.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesWantArtifactRequestsSigned.setStatus("current")
_SingleSignOnServicesContactPersonTelephoneNumber_Type = OctetString
_SingleSignOnServicesContactPersonTelephoneNumber_Object = MibTableColumn
singleSignOnServicesContactPersonTelephoneNumber = _SingleSignOnServicesContactPersonTelephoneNumber_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 9),
    _SingleSignOnServicesContactPersonTelephoneNumber_Type()
)
singleSignOnServicesContactPersonTelephoneNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesContactPersonTelephoneNumber.setStatus("current")
_SingleSignOnServicesPassive_Type = OctetString
_SingleSignOnServicesPassive_Object = MibTableColumn
singleSignOnServicesPassive = _SingleSignOnServicesPassive_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 10),
    _SingleSignOnServicesPassive_Type()
)
singleSignOnServicesPassive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesPassive.setStatus("current")
_SingleSignOnServicesTransportLayerSecurityKeyAlias_Type = OctetString
_SingleSignOnServicesTransportLayerSecurityKeyAlias_Object = MibTableColumn
singleSignOnServicesTransportLayerSecurityKeyAlias = _SingleSignOnServicesTransportLayerSecurityKeyAlias_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 11),
    _SingleSignOnServicesTransportLayerSecurityKeyAlias_Type()
)
singleSignOnServicesTransportLayerSecurityKeyAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesTransportLayerSecurityKeyAlias.setStatus("current")
_SingleSignOnServicesSSOSigningKeyAlias_Type = OctetString
_SingleSignOnServicesSSOSigningKeyAlias_Object = MibTableColumn
singleSignOnServicesSSOSigningKeyAlias = _SingleSignOnServicesSSOSigningKeyAlias_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 12),
    _SingleSignOnServicesSSOSigningKeyAlias_Type()
)
singleSignOnServicesSSOSigningKeyAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesSSOSigningKeyAlias.setStatus("current")
_SingleSignOnServicesLoginReturnQueryParameter_Type = OctetString
_SingleSignOnServicesLoginReturnQueryParameter_Object = MibTableColumn
singleSignOnServicesLoginReturnQueryParameter = _SingleSignOnServicesLoginReturnQueryParameter_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 13),
    _SingleSignOnServicesLoginReturnQueryParameter_Type()
)
singleSignOnServicesLoginReturnQueryParameter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesLoginReturnQueryParameter.setStatus("current")
_SingleSignOnServicesAuthnRequestTimeout_Type = Integer32
_SingleSignOnServicesAuthnRequestTimeout_Object = MibTableColumn
singleSignOnServicesAuthnRequestTimeout = _SingleSignOnServicesAuthnRequestTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 14),
    _SingleSignOnServicesAuthnRequestTimeout_Type()
)
singleSignOnServicesAuthnRequestTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesAuthnRequestTimeout.setStatus("current")
_SingleSignOnServicesPOSTOneUseCheckEnabled_Type = OctetString
_SingleSignOnServicesPOSTOneUseCheckEnabled_Object = MibTableColumn
singleSignOnServicesPOSTOneUseCheckEnabled = _SingleSignOnServicesPOSTOneUseCheckEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 15),
    _SingleSignOnServicesPOSTOneUseCheckEnabled_Type()
)
singleSignOnServicesPOSTOneUseCheckEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesPOSTOneUseCheckEnabled.setStatus("current")
_SingleSignOnServicesIdentityProviderArtifactBindingEnabled_Type = OctetString
_SingleSignOnServicesIdentityProviderArtifactBindingEnabled_Object = MibTableColumn
singleSignOnServicesIdentityProviderArtifactBindingEnabled = _SingleSignOnServicesIdentityProviderArtifactBindingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 16),
    _SingleSignOnServicesIdentityProviderArtifactBindingEnabled_Type()
)
singleSignOnServicesIdentityProviderArtifactBindingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesIdentityProviderArtifactBindingEnabled.setStatus("current")
_SingleSignOnServicesWantTransportLayerSecurityClientAuthentication_Type = OctetString
_SingleSignOnServicesWantTransportLayerSecurityClientAuthentication_Object = MibTableColumn
singleSignOnServicesWantTransportLayerSecurityClientAuthentication = _SingleSignOnServicesWantTransportLayerSecurityClientAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 17),
    _SingleSignOnServicesWantTransportLayerSecurityClientAuthentication_Type()
)
singleSignOnServicesWantTransportLayerSecurityClientAuthentication.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesWantTransportLayerSecurityClientAuthentication.setStatus("current")
_SingleSignOnServicesIdentityProviderEnabled_Type = OctetString
_SingleSignOnServicesIdentityProviderEnabled_Object = MibTableColumn
singleSignOnServicesIdentityProviderEnabled = _SingleSignOnServicesIdentityProviderEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 18),
    _SingleSignOnServicesIdentityProviderEnabled_Type()
)
singleSignOnServicesIdentityProviderEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesIdentityProviderEnabled.setStatus("current")
_SingleSignOnServicesLoginURL_Type = OctetString
_SingleSignOnServicesLoginURL_Object = MibTableColumn
singleSignOnServicesLoginURL = _SingleSignOnServicesLoginURL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 19),
    _SingleSignOnServicesLoginURL_Type()
)
singleSignOnServicesLoginURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesLoginURL.setStatus("current")
_SingleSignOnServicesArtifactTimeout_Type = Integer32
_SingleSignOnServicesArtifactTimeout_Object = MibTableColumn
singleSignOnServicesArtifactTimeout = _SingleSignOnServicesArtifactTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 20),
    _SingleSignOnServicesArtifactTimeout_Type()
)
singleSignOnServicesArtifactTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesArtifactTimeout.setStatus("current")
_SingleSignOnServicesContactPersonType_Type = OctetString
_SingleSignOnServicesContactPersonType_Object = MibTableColumn
singleSignOnServicesContactPersonType = _SingleSignOnServicesContactPersonType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 21),
    _SingleSignOnServicesContactPersonType_Type()
)
singleSignOnServicesContactPersonType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesContactPersonType.setStatus("current")
_SingleSignOnServicesOrganizationName_Type = OctetString
_SingleSignOnServicesOrganizationName_Object = MibTableColumn
singleSignOnServicesOrganizationName = _SingleSignOnServicesOrganizationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 22),
    _SingleSignOnServicesOrganizationName_Type()
)
singleSignOnServicesOrganizationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesOrganizationName.setStatus("current")
_SingleSignOnServicesDefaultURL_Type = OctetString
_SingleSignOnServicesDefaultURL_Object = MibTableColumn
singleSignOnServicesDefaultURL = _SingleSignOnServicesDefaultURL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 23),
    _SingleSignOnServicesDefaultURL_Type()
)
singleSignOnServicesDefaultURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesDefaultURL.setStatus("current")
_SingleSignOnServicesWantBasicAuthClientAuthentication_Type = OctetString
_SingleSignOnServicesWantBasicAuthClientAuthentication_Object = MibTableColumn
singleSignOnServicesWantBasicAuthClientAuthentication = _SingleSignOnServicesWantBasicAuthClientAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 24),
    _SingleSignOnServicesWantBasicAuthClientAuthentication_Type()
)
singleSignOnServicesWantBasicAuthClientAuthentication.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesWantBasicAuthClientAuthentication.setStatus("current")
_SingleSignOnServicesType_Type = OctetString
_SingleSignOnServicesType_Object = MibTableColumn
singleSignOnServicesType = _SingleSignOnServicesType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 25),
    _SingleSignOnServicesType_Type()
)
singleSignOnServicesType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesType.setStatus("current")
_SingleSignOnServicesContactPersonEmailAddress_Type = OctetString
_SingleSignOnServicesContactPersonEmailAddress_Object = MibTableColumn
singleSignOnServicesContactPersonEmailAddress = _SingleSignOnServicesContactPersonEmailAddress_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 26),
    _SingleSignOnServicesContactPersonEmailAddress_Type()
)
singleSignOnServicesContactPersonEmailAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesContactPersonEmailAddress.setStatus("current")
_SingleSignOnServicesRecipientCheckEnabled_Type = OctetString
_SingleSignOnServicesRecipientCheckEnabled_Object = MibTableColumn
singleSignOnServicesRecipientCheckEnabled = _SingleSignOnServicesRecipientCheckEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 27),
    _SingleSignOnServicesRecipientCheckEnabled_Type()
)
singleSignOnServicesRecipientCheckEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesRecipientCheckEnabled.setStatus("current")
_SingleSignOnServicesErrorPath_Type = OctetString
_SingleSignOnServicesErrorPath_Object = MibTableColumn
singleSignOnServicesErrorPath = _SingleSignOnServicesErrorPath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 28),
    _SingleSignOnServicesErrorPath_Type()
)
singleSignOnServicesErrorPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesErrorPath.setStatus("current")
_SingleSignOnServicesAuthnRequestMaxCacheSize_Type = Integer32
_SingleSignOnServicesAuthnRequestMaxCacheSize_Object = MibTableColumn
singleSignOnServicesAuthnRequestMaxCacheSize = _SingleSignOnServicesAuthnRequestMaxCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 29),
    _SingleSignOnServicesAuthnRequestMaxCacheSize_Type()
)
singleSignOnServicesAuthnRequestMaxCacheSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesAuthnRequestMaxCacheSize.setStatus("current")
_SingleSignOnServicesReplicatedCacheEnabled_Type = OctetString
_SingleSignOnServicesReplicatedCacheEnabled_Object = MibTableColumn
singleSignOnServicesReplicatedCacheEnabled = _SingleSignOnServicesReplicatedCacheEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 30),
    _SingleSignOnServicesReplicatedCacheEnabled_Type()
)
singleSignOnServicesReplicatedCacheEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesReplicatedCacheEnabled.setStatus("current")
_SingleSignOnServicesServiceProviderEnabled_Type = OctetString
_SingleSignOnServicesServiceProviderEnabled_Object = MibTableColumn
singleSignOnServicesServiceProviderEnabled = _SingleSignOnServicesServiceProviderEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 31),
    _SingleSignOnServicesServiceProviderEnabled_Type()
)
singleSignOnServicesServiceProviderEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesServiceProviderEnabled.setStatus("current")
_SingleSignOnServicesName_Type = OctetString
_SingleSignOnServicesName_Object = MibTableColumn
singleSignOnServicesName = _SingleSignOnServicesName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 32),
    _SingleSignOnServicesName_Type()
)
singleSignOnServicesName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesName.setStatus("current")
_SingleSignOnServicesSignAuthnRequests_Type = OctetString
_SingleSignOnServicesSignAuthnRequests_Object = MibTableColumn
singleSignOnServicesSignAuthnRequests = _SingleSignOnServicesSignAuthnRequests_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 33),
    _SingleSignOnServicesSignAuthnRequests_Type()
)
singleSignOnServicesSignAuthnRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesSignAuthnRequests.setStatus("current")
_SingleSignOnServicesContactPersonCompany_Type = OctetString
_SingleSignOnServicesContactPersonCompany_Object = MibTableColumn
singleSignOnServicesContactPersonCompany = _SingleSignOnServicesContactPersonCompany_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 34),
    _SingleSignOnServicesContactPersonCompany_Type()
)
singleSignOnServicesContactPersonCompany.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesContactPersonCompany.setStatus("current")
_SingleSignOnServicesBasicAuthUsername_Type = OctetString
_SingleSignOnServicesBasicAuthUsername_Object = MibTableColumn
singleSignOnServicesBasicAuthUsername = _SingleSignOnServicesBasicAuthUsername_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 35),
    _SingleSignOnServicesBasicAuthUsername_Type()
)
singleSignOnServicesBasicAuthUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesBasicAuthUsername.setStatus("current")
_SingleSignOnServicesServiceProviderPOSTBindingEnabled_Type = OctetString
_SingleSignOnServicesServiceProviderPOSTBindingEnabled_Object = MibTableColumn
singleSignOnServicesServiceProviderPOSTBindingEnabled = _SingleSignOnServicesServiceProviderPOSTBindingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 36),
    _SingleSignOnServicesServiceProviderPOSTBindingEnabled_Type()
)
singleSignOnServicesServiceProviderPOSTBindingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesServiceProviderPOSTBindingEnabled.setStatus("current")
_SingleSignOnServicesEntityID_Type = OctetString
_SingleSignOnServicesEntityID_Object = MibTableColumn
singleSignOnServicesEntityID = _SingleSignOnServicesEntityID_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 37),
    _SingleSignOnServicesEntityID_Type()
)
singleSignOnServicesEntityID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesEntityID.setStatus("current")
_SingleSignOnServicesPublishedSiteURL_Type = OctetString
_SingleSignOnServicesPublishedSiteURL_Object = MibTableColumn
singleSignOnServicesPublishedSiteURL = _SingleSignOnServicesPublishedSiteURL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 38),
    _SingleSignOnServicesPublishedSiteURL_Type()
)
singleSignOnServicesPublishedSiteURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesPublishedSiteURL.setStatus("current")
_SingleSignOnServicesOrganizationURL_Type = OctetString
_SingleSignOnServicesOrganizationURL_Object = MibTableColumn
singleSignOnServicesOrganizationURL = _SingleSignOnServicesOrganizationURL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 39),
    _SingleSignOnServicesOrganizationURL_Type()
)
singleSignOnServicesOrganizationURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesOrganizationURL.setStatus("current")
_SingleSignOnServicesServiceProviderArtifactBindingEnabled_Type = OctetString
_SingleSignOnServicesServiceProviderArtifactBindingEnabled_Object = MibTableColumn
singleSignOnServicesServiceProviderArtifactBindingEnabled = _SingleSignOnServicesServiceProviderArtifactBindingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 40),
    _SingleSignOnServicesServiceProviderArtifactBindingEnabled_Type()
)
singleSignOnServicesServiceProviderArtifactBindingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesServiceProviderArtifactBindingEnabled.setStatus("current")
_SingleSignOnServicesWantAssertionsSigned_Type = OctetString
_SingleSignOnServicesWantAssertionsSigned_Object = MibTableColumn
singleSignOnServicesWantAssertionsSigned = _SingleSignOnServicesWantAssertionsSigned_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 41),
    _SingleSignOnServicesWantAssertionsSigned_Type()
)
singleSignOnServicesWantAssertionsSigned.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesWantAssertionsSigned.setStatus("current")
_SingleSignOnServicesWantAuthnRequestsSigned_Type = OctetString
_SingleSignOnServicesWantAuthnRequestsSigned_Object = MibTableColumn
singleSignOnServicesWantAuthnRequestsSigned = _SingleSignOnServicesWantAuthnRequestsSigned_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 42),
    _SingleSignOnServicesWantAuthnRequestsSigned_Type()
)
singleSignOnServicesWantAuthnRequestsSigned.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesWantAuthnRequestsSigned.setStatus("current")
_SingleSignOnServicesServiceProviderPreferredBinding_Type = OctetString
_SingleSignOnServicesServiceProviderPreferredBinding_Object = MibTableColumn
singleSignOnServicesServiceProviderPreferredBinding = _SingleSignOnServicesServiceProviderPreferredBinding_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 43),
    _SingleSignOnServicesServiceProviderPreferredBinding_Type()
)
singleSignOnServicesServiceProviderPreferredBinding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesServiceProviderPreferredBinding.setStatus("current")
_SingleSignOnServicesIdentityProviderPOSTBindingEnabled_Type = OctetString
_SingleSignOnServicesIdentityProviderPOSTBindingEnabled_Object = MibTableColumn
singleSignOnServicesIdentityProviderPOSTBindingEnabled = _SingleSignOnServicesIdentityProviderPOSTBindingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 44),
    _SingleSignOnServicesIdentityProviderPOSTBindingEnabled_Type()
)
singleSignOnServicesIdentityProviderPOSTBindingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesIdentityProviderPOSTBindingEnabled.setStatus("current")
_SingleSignOnServicesContactPersonSurName_Type = OctetString
_SingleSignOnServicesContactPersonSurName_Object = MibTableColumn
singleSignOnServicesContactPersonSurName = _SingleSignOnServicesContactPersonSurName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1105, 1, 45),
    _SingleSignOnServicesContactPersonSurName_Type()
)
singleSignOnServicesContactPersonSurName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesContactPersonSurName.setStatus("current")
_SingletonServiceAppScopedTable_Object = MibTable
singletonServiceAppScopedTable = _SingletonServiceAppScopedTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1110)
)
if mibBuilder.loadTexts:
    singletonServiceAppScopedTable.setStatus("current")
_SingletonServiceAppScopedEntry_Object = MibTableRow
singletonServiceAppScopedEntry = _SingletonServiceAppScopedEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1110, 1)
)
singletonServiceAppScopedEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "singletonServiceAppScopedIndex"),
)
if mibBuilder.loadTexts:
    singletonServiceAppScopedEntry.setStatus("current")
_SingletonServiceAppScopedIndex_Type = OctetString
_SingletonServiceAppScopedIndex_Object = MibTableColumn
singletonServiceAppScopedIndex = _SingletonServiceAppScopedIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1110, 1, 1),
    _SingletonServiceAppScopedIndex_Type()
)
singletonServiceAppScopedIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    singletonServiceAppScopedIndex.setStatus("current")
_SingletonServiceAppScopedObjectName_Type = OctetString
_SingletonServiceAppScopedObjectName_Object = MibTableColumn
singletonServiceAppScopedObjectName = _SingletonServiceAppScopedObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1110, 1, 2),
    _SingletonServiceAppScopedObjectName_Type()
)
singletonServiceAppScopedObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singletonServiceAppScopedObjectName.setStatus("current")
_SingletonServiceAppScopedType_Type = OctetString
_SingletonServiceAppScopedType_Object = MibTableColumn
singletonServiceAppScopedType = _SingletonServiceAppScopedType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1110, 1, 3),
    _SingletonServiceAppScopedType_Type()
)
singletonServiceAppScopedType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singletonServiceAppScopedType.setStatus("current")
_SingletonServiceAppScopedCompatibilityName_Type = OctetString
_SingletonServiceAppScopedCompatibilityName_Object = MibTableColumn
singletonServiceAppScopedCompatibilityName = _SingletonServiceAppScopedCompatibilityName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1110, 1, 4),
    _SingletonServiceAppScopedCompatibilityName_Type()
)
singletonServiceAppScopedCompatibilityName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singletonServiceAppScopedCompatibilityName.setStatus("current")
_SingletonServiceAppScopedMillisToSleepBetweenAttempts_Type = Integer32
_SingletonServiceAppScopedMillisToSleepBetweenAttempts_Object = MibTableColumn
singletonServiceAppScopedMillisToSleepBetweenAttempts = _SingletonServiceAppScopedMillisToSleepBetweenAttempts_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1110, 1, 5),
    _SingletonServiceAppScopedMillisToSleepBetweenAttempts_Type()
)
singletonServiceAppScopedMillisToSleepBetweenAttempts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singletonServiceAppScopedMillisToSleepBetweenAttempts.setStatus("current")
_SingletonServiceAppScopedModuleType_Type = OctetString
_SingletonServiceAppScopedModuleType_Object = MibTableColumn
singletonServiceAppScopedModuleType = _SingletonServiceAppScopedModuleType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1110, 1, 6),
    _SingletonServiceAppScopedModuleType_Type()
)
singletonServiceAppScopedModuleType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singletonServiceAppScopedModuleType.setStatus("current")
_SingletonServiceAppScopedName_Type = OctetString
_SingletonServiceAppScopedName_Object = MibTableColumn
singletonServiceAppScopedName = _SingletonServiceAppScopedName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1110, 1, 7),
    _SingletonServiceAppScopedName_Type()
)
singletonServiceAppScopedName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singletonServiceAppScopedName.setStatus("current")
_SingletonServiceAppScopedAdditionalMigrationAttempts_Type = Integer32
_SingletonServiceAppScopedAdditionalMigrationAttempts_Object = MibTableColumn
singletonServiceAppScopedAdditionalMigrationAttempts = _SingletonServiceAppScopedAdditionalMigrationAttempts_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1110, 1, 8),
    _SingletonServiceAppScopedAdditionalMigrationAttempts_Type()
)
singletonServiceAppScopedAdditionalMigrationAttempts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singletonServiceAppScopedAdditionalMigrationAttempts.setStatus("current")
_SingletonServiceAppScopedClassName_Type = OctetString
_SingletonServiceAppScopedClassName_Object = MibTableColumn
singletonServiceAppScopedClassName = _SingletonServiceAppScopedClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1110, 1, 9),
    _SingletonServiceAppScopedClassName_Type()
)
singletonServiceAppScopedClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singletonServiceAppScopedClassName.setStatus("current")
_SingletonServiceTable_Object = MibTable
singletonServiceTable = _SingletonServiceTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1115)
)
if mibBuilder.loadTexts:
    singletonServiceTable.setStatus("current")
_SingletonServiceEntry_Object = MibTableRow
singletonServiceEntry = _SingletonServiceEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1115, 1)
)
singletonServiceEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "singletonServiceIndex"),
)
if mibBuilder.loadTexts:
    singletonServiceEntry.setStatus("current")
_SingletonServiceIndex_Type = OctetString
_SingletonServiceIndex_Object = MibTableColumn
singletonServiceIndex = _SingletonServiceIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1115, 1, 1),
    _SingletonServiceIndex_Type()
)
singletonServiceIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    singletonServiceIndex.setStatus("current")
_SingletonServiceObjectName_Type = OctetString
_SingletonServiceObjectName_Object = MibTableColumn
singletonServiceObjectName = _SingletonServiceObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1115, 1, 2),
    _SingletonServiceObjectName_Type()
)
singletonServiceObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singletonServiceObjectName.setStatus("current")
_SingletonServiceType_Type = OctetString
_SingletonServiceType_Object = MibTableColumn
singletonServiceType = _SingletonServiceType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1115, 1, 3),
    _SingletonServiceType_Type()
)
singletonServiceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singletonServiceType.setStatus("current")
_SingletonServiceMillisToSleepBetweenAttempts_Type = Integer32
_SingletonServiceMillisToSleepBetweenAttempts_Object = MibTableColumn
singletonServiceMillisToSleepBetweenAttempts = _SingletonServiceMillisToSleepBetweenAttempts_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1115, 1, 4),
    _SingletonServiceMillisToSleepBetweenAttempts_Type()
)
singletonServiceMillisToSleepBetweenAttempts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singletonServiceMillisToSleepBetweenAttempts.setStatus("current")
_SingletonServiceName_Type = OctetString
_SingletonServiceName_Object = MibTableColumn
singletonServiceName = _SingletonServiceName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1115, 1, 5),
    _SingletonServiceName_Type()
)
singletonServiceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singletonServiceName.setStatus("current")
_SingletonServiceAdditionalMigrationAttempts_Type = Integer32
_SingletonServiceAdditionalMigrationAttempts_Object = MibTableColumn
singletonServiceAdditionalMigrationAttempts = _SingletonServiceAdditionalMigrationAttempts_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1115, 1, 6),
    _SingletonServiceAdditionalMigrationAttempts_Type()
)
singletonServiceAdditionalMigrationAttempts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singletonServiceAdditionalMigrationAttempts.setStatus("current")
_SingletonServiceClassName_Type = OctetString
_SingletonServiceClassName_Object = MibTableColumn
singletonServiceClassName = _SingletonServiceClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1115, 1, 7),
    _SingletonServiceClassName_Type()
)
singletonServiceClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singletonServiceClassName.setStatus("current")
_StuckThreadActionTable_Object = MibTable
stuckThreadActionTable = _StuckThreadActionTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1120)
)
if mibBuilder.loadTexts:
    stuckThreadActionTable.setStatus("current")
_StuckThreadActionEntry_Object = MibTableRow
stuckThreadActionEntry = _StuckThreadActionEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1120, 1)
)
stuckThreadActionEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "stuckThreadActionIndex"),
)
if mibBuilder.loadTexts:
    stuckThreadActionEntry.setStatus("current")
_StuckThreadActionIndex_Type = OctetString
_StuckThreadActionIndex_Object = MibTableColumn
stuckThreadActionIndex = _StuckThreadActionIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1120, 1, 1),
    _StuckThreadActionIndex_Type()
)
stuckThreadActionIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    stuckThreadActionIndex.setStatus("current")
_StuckThreadActionObjectName_Type = OctetString
_StuckThreadActionObjectName_Object = MibTableColumn
stuckThreadActionObjectName = _StuckThreadActionObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1120, 1, 2),
    _StuckThreadActionObjectName_Type()
)
stuckThreadActionObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stuckThreadActionObjectName.setStatus("current")
_StuckThreadActionType_Type = OctetString
_StuckThreadActionType_Object = MibTableColumn
stuckThreadActionType = _StuckThreadActionType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1120, 1, 3),
    _StuckThreadActionType_Type()
)
stuckThreadActionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stuckThreadActionType.setStatus("current")
_StuckThreadActionName_Type = OctetString
_StuckThreadActionName_Object = MibTableColumn
stuckThreadActionName = _StuckThreadActionName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1120, 1, 4),
    _StuckThreadActionName_Type()
)
stuckThreadActionName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stuckThreadActionName.setStatus("current")
_UnixMachineTable_Object = MibTable
unixMachineTable = _UnixMachineTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1125)
)
if mibBuilder.loadTexts:
    unixMachineTable.setStatus("current")
_UnixMachineEntry_Object = MibTableRow
unixMachineEntry = _UnixMachineEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1125, 1)
)
unixMachineEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "unixMachineIndex"),
)
if mibBuilder.loadTexts:
    unixMachineEntry.setStatus("current")
_UnixMachineIndex_Type = OctetString
_UnixMachineIndex_Object = MibTableColumn
unixMachineIndex = _UnixMachineIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1125, 1, 1),
    _UnixMachineIndex_Type()
)
unixMachineIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    unixMachineIndex.setStatus("current")
_UnixMachineObjectName_Type = OctetString
_UnixMachineObjectName_Object = MibTableColumn
unixMachineObjectName = _UnixMachineObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1125, 1, 2),
    _UnixMachineObjectName_Type()
)
unixMachineObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unixMachineObjectName.setStatus("current")
_UnixMachineType_Type = OctetString
_UnixMachineType_Object = MibTableColumn
unixMachineType = _UnixMachineType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1125, 1, 3),
    _UnixMachineType_Type()
)
unixMachineType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unixMachineType.setStatus("current")
_UnixMachinePostBindUID_Type = OctetString
_UnixMachinePostBindUID_Object = MibTableColumn
unixMachinePostBindUID = _UnixMachinePostBindUID_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1125, 1, 4),
    _UnixMachinePostBindUID_Type()
)
unixMachinePostBindUID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unixMachinePostBindUID.setStatus("current")
_UnixMachinePostBindUIDEnabled_Type = OctetString
_UnixMachinePostBindUIDEnabled_Object = MibTableColumn
unixMachinePostBindUIDEnabled = _UnixMachinePostBindUIDEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1125, 1, 5),
    _UnixMachinePostBindUIDEnabled_Type()
)
unixMachinePostBindUIDEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unixMachinePostBindUIDEnabled.setStatus("current")
_UnixMachinePostBindGID_Type = OctetString
_UnixMachinePostBindGID_Object = MibTableColumn
unixMachinePostBindGID = _UnixMachinePostBindGID_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1125, 1, 6),
    _UnixMachinePostBindGID_Type()
)
unixMachinePostBindGID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unixMachinePostBindGID.setStatus("current")
_UnixMachinePostBindGIDEnabled_Type = OctetString
_UnixMachinePostBindGIDEnabled_Object = MibTableColumn
unixMachinePostBindGIDEnabled = _UnixMachinePostBindGIDEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1125, 1, 7),
    _UnixMachinePostBindGIDEnabled_Type()
)
unixMachinePostBindGIDEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unixMachinePostBindGIDEnabled.setStatus("current")
_UnixMachineName_Type = OctetString
_UnixMachineName_Object = MibTableColumn
unixMachineName = _UnixMachineName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1125, 1, 8),
    _UnixMachineName_Type()
)
unixMachineName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unixMachineName.setStatus("current")
_VirtualDestinationTable_Object = MibTable
virtualDestinationTable = _VirtualDestinationTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1130)
)
if mibBuilder.loadTexts:
    virtualDestinationTable.setStatus("current")
_VirtualDestinationEntry_Object = MibTableRow
virtualDestinationEntry = _VirtualDestinationEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1130, 1)
)
virtualDestinationEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "virtualDestinationIndex"),
)
if mibBuilder.loadTexts:
    virtualDestinationEntry.setStatus("current")
_VirtualDestinationIndex_Type = OctetString
_VirtualDestinationIndex_Object = MibTableColumn
virtualDestinationIndex = _VirtualDestinationIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1130, 1, 1),
    _VirtualDestinationIndex_Type()
)
virtualDestinationIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    virtualDestinationIndex.setStatus("current")
_VirtualDestinationObjectName_Type = OctetString
_VirtualDestinationObjectName_Object = MibTableColumn
virtualDestinationObjectName = _VirtualDestinationObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1130, 1, 2),
    _VirtualDestinationObjectName_Type()
)
virtualDestinationObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualDestinationObjectName.setStatus("current")
_VirtualDestinationType_Type = OctetString
_VirtualDestinationType_Object = MibTableColumn
virtualDestinationType = _VirtualDestinationType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1130, 1, 3),
    _VirtualDestinationType_Type()
)
virtualDestinationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualDestinationType.setStatus("current")
_VirtualDestinationDeploymentOrder_Type = Integer32
_VirtualDestinationDeploymentOrder_Object = MibTableColumn
virtualDestinationDeploymentOrder = _VirtualDestinationDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1130, 1, 4),
    _VirtualDestinationDeploymentOrder_Type()
)
virtualDestinationDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualDestinationDeploymentOrder.setStatus("current")
_VirtualDestinationJNDIName_Type = OctetString
_VirtualDestinationJNDIName_Object = MibTableColumn
virtualDestinationJNDIName = _VirtualDestinationJNDIName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1130, 1, 5),
    _VirtualDestinationJNDIName_Type()
)
virtualDestinationJNDIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualDestinationJNDIName.setStatus("current")
_VirtualDestinationName_Type = OctetString
_VirtualDestinationName_Object = MibTableColumn
virtualDestinationName = _VirtualDestinationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1130, 1, 6),
    _VirtualDestinationName_Type()
)
virtualDestinationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualDestinationName.setStatus("current")
_WldfDataRetirementByAgeTable_Object = MibTable
wldfDataRetirementByAgeTable = _WldfDataRetirementByAgeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1135)
)
if mibBuilder.loadTexts:
    wldfDataRetirementByAgeTable.setStatus("current")
_WldfDataRetirementByAgeEntry_Object = MibTableRow
wldfDataRetirementByAgeEntry = _WldfDataRetirementByAgeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1135, 1)
)
wldfDataRetirementByAgeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wldfDataRetirementByAgeIndex"),
)
if mibBuilder.loadTexts:
    wldfDataRetirementByAgeEntry.setStatus("current")
_WldfDataRetirementByAgeIndex_Type = OctetString
_WldfDataRetirementByAgeIndex_Object = MibTableColumn
wldfDataRetirementByAgeIndex = _WldfDataRetirementByAgeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1135, 1, 1),
    _WldfDataRetirementByAgeIndex_Type()
)
wldfDataRetirementByAgeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wldfDataRetirementByAgeIndex.setStatus("current")
_WldfDataRetirementByAgeObjectName_Type = OctetString
_WldfDataRetirementByAgeObjectName_Object = MibTableColumn
wldfDataRetirementByAgeObjectName = _WldfDataRetirementByAgeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1135, 1, 2),
    _WldfDataRetirementByAgeObjectName_Type()
)
wldfDataRetirementByAgeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataRetirementByAgeObjectName.setStatus("current")
_WldfDataRetirementByAgeType_Type = OctetString
_WldfDataRetirementByAgeType_Object = MibTableColumn
wldfDataRetirementByAgeType = _WldfDataRetirementByAgeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1135, 1, 3),
    _WldfDataRetirementByAgeType_Type()
)
wldfDataRetirementByAgeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataRetirementByAgeType.setStatus("current")
_WldfDataRetirementByAgeRetirementTime_Type = Integer32
_WldfDataRetirementByAgeRetirementTime_Object = MibTableColumn
wldfDataRetirementByAgeRetirementTime = _WldfDataRetirementByAgeRetirementTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1135, 1, 4),
    _WldfDataRetirementByAgeRetirementTime_Type()
)
wldfDataRetirementByAgeRetirementTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataRetirementByAgeRetirementTime.setStatus("current")
_WldfDataRetirementByAgeRetirementPeriod_Type = Integer32
_WldfDataRetirementByAgeRetirementPeriod_Object = MibTableColumn
wldfDataRetirementByAgeRetirementPeriod = _WldfDataRetirementByAgeRetirementPeriod_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1135, 1, 5),
    _WldfDataRetirementByAgeRetirementPeriod_Type()
)
wldfDataRetirementByAgeRetirementPeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataRetirementByAgeRetirementPeriod.setStatus("current")
_WldfDataRetirementByAgeRetirementAge_Type = Integer32
_WldfDataRetirementByAgeRetirementAge_Object = MibTableColumn
wldfDataRetirementByAgeRetirementAge = _WldfDataRetirementByAgeRetirementAge_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1135, 1, 6),
    _WldfDataRetirementByAgeRetirementAge_Type()
)
wldfDataRetirementByAgeRetirementAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataRetirementByAgeRetirementAge.setStatus("current")
_WldfDataRetirementByAgeEnabled_Type = OctetString
_WldfDataRetirementByAgeEnabled_Object = MibTableColumn
wldfDataRetirementByAgeEnabled = _WldfDataRetirementByAgeEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1135, 1, 7),
    _WldfDataRetirementByAgeEnabled_Type()
)
wldfDataRetirementByAgeEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataRetirementByAgeEnabled.setStatus("current")
_WldfDataRetirementByAgeArchiveName_Type = OctetString
_WldfDataRetirementByAgeArchiveName_Object = MibTableColumn
wldfDataRetirementByAgeArchiveName = _WldfDataRetirementByAgeArchiveName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1135, 1, 8),
    _WldfDataRetirementByAgeArchiveName_Type()
)
wldfDataRetirementByAgeArchiveName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataRetirementByAgeArchiveName.setStatus("current")
_WldfDataRetirementByAgeName_Type = OctetString
_WldfDataRetirementByAgeName_Object = MibTableColumn
wldfDataRetirementByAgeName = _WldfDataRetirementByAgeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1135, 1, 9),
    _WldfDataRetirementByAgeName_Type()
)
wldfDataRetirementByAgeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataRetirementByAgeName.setStatus("current")
_WldfServerDiagnosticTable_Object = MibTable
wldfServerDiagnosticTable = _WldfServerDiagnosticTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1140)
)
if mibBuilder.loadTexts:
    wldfServerDiagnosticTable.setStatus("current")
_WldfServerDiagnosticEntry_Object = MibTableRow
wldfServerDiagnosticEntry = _WldfServerDiagnosticEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1140, 1)
)
wldfServerDiagnosticEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wldfServerDiagnosticIndex"),
)
if mibBuilder.loadTexts:
    wldfServerDiagnosticEntry.setStatus("current")
_WldfServerDiagnosticIndex_Type = OctetString
_WldfServerDiagnosticIndex_Object = MibTableColumn
wldfServerDiagnosticIndex = _WldfServerDiagnosticIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1140, 1, 1),
    _WldfServerDiagnosticIndex_Type()
)
wldfServerDiagnosticIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wldfServerDiagnosticIndex.setStatus("current")
_WldfServerDiagnosticObjectName_Type = OctetString
_WldfServerDiagnosticObjectName_Object = MibTableColumn
wldfServerDiagnosticObjectName = _WldfServerDiagnosticObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1140, 1, 2),
    _WldfServerDiagnosticObjectName_Type()
)
wldfServerDiagnosticObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfServerDiagnosticObjectName.setStatus("current")
_WldfServerDiagnosticType_Type = OctetString
_WldfServerDiagnosticType_Object = MibTableColumn
wldfServerDiagnosticType = _WldfServerDiagnosticType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1140, 1, 3),
    _WldfServerDiagnosticType_Type()
)
wldfServerDiagnosticType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfServerDiagnosticType.setStatus("current")
_WldfServerDiagnosticSynchronousEventPersistenceEnabled_Type = OctetString
_WldfServerDiagnosticSynchronousEventPersistenceEnabled_Object = MibTableColumn
wldfServerDiagnosticSynchronousEventPersistenceEnabled = _WldfServerDiagnosticSynchronousEventPersistenceEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1140, 1, 4),
    _WldfServerDiagnosticSynchronousEventPersistenceEnabled_Type()
)
wldfServerDiagnosticSynchronousEventPersistenceEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfServerDiagnosticSynchronousEventPersistenceEnabled.setStatus("current")
_WldfServerDiagnosticEventPersistenceInterval_Type = Counter64
_WldfServerDiagnosticEventPersistenceInterval_Object = MibTableColumn
wldfServerDiagnosticEventPersistenceInterval = _WldfServerDiagnosticEventPersistenceInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1140, 1, 5),
    _WldfServerDiagnosticEventPersistenceInterval_Type()
)
wldfServerDiagnosticEventPersistenceInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfServerDiagnosticEventPersistenceInterval.setStatus("current")
_WldfServerDiagnosticPreferredStoreSizeLimit_Type = Integer32
_WldfServerDiagnosticPreferredStoreSizeLimit_Object = MibTableColumn
wldfServerDiagnosticPreferredStoreSizeLimit = _WldfServerDiagnosticPreferredStoreSizeLimit_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1140, 1, 6),
    _WldfServerDiagnosticPreferredStoreSizeLimit_Type()
)
wldfServerDiagnosticPreferredStoreSizeLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfServerDiagnosticPreferredStoreSizeLimit.setStatus("current")
_WldfServerDiagnosticImageTimeout_Type = Integer32
_WldfServerDiagnosticImageTimeout_Object = MibTableColumn
wldfServerDiagnosticImageTimeout = _WldfServerDiagnosticImageTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1140, 1, 7),
    _WldfServerDiagnosticImageTimeout_Type()
)
wldfServerDiagnosticImageTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfServerDiagnosticImageTimeout.setStatus("current")
_WldfServerDiagnosticDiagnosticStoreDir_Type = OctetString
_WldfServerDiagnosticDiagnosticStoreDir_Object = MibTableColumn
wldfServerDiagnosticDiagnosticStoreDir = _WldfServerDiagnosticDiagnosticStoreDir_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1140, 1, 8),
    _WldfServerDiagnosticDiagnosticStoreDir_Type()
)
wldfServerDiagnosticDiagnosticStoreDir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfServerDiagnosticDiagnosticStoreDir.setStatus("current")
_WldfServerDiagnosticDiagnosticDataArchiveType_Type = OctetString
_WldfServerDiagnosticDiagnosticDataArchiveType_Object = MibTableColumn
wldfServerDiagnosticDiagnosticDataArchiveType = _WldfServerDiagnosticDiagnosticDataArchiveType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1140, 1, 9),
    _WldfServerDiagnosticDiagnosticDataArchiveType_Type()
)
wldfServerDiagnosticDiagnosticDataArchiveType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfServerDiagnosticDiagnosticDataArchiveType.setStatus("current")
_WldfServerDiagnosticDiagnosticContextEnabled_Type = OctetString
_WldfServerDiagnosticDiagnosticContextEnabled_Object = MibTableColumn
wldfServerDiagnosticDiagnosticContextEnabled = _WldfServerDiagnosticDiagnosticContextEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1140, 1, 10),
    _WldfServerDiagnosticDiagnosticContextEnabled_Type()
)
wldfServerDiagnosticDiagnosticContextEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfServerDiagnosticDiagnosticContextEnabled.setStatus("current")
_WldfServerDiagnosticStoreSizeCheckPeriod_Type = Integer32
_WldfServerDiagnosticStoreSizeCheckPeriod_Object = MibTableColumn
wldfServerDiagnosticStoreSizeCheckPeriod = _WldfServerDiagnosticStoreSizeCheckPeriod_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1140, 1, 11),
    _WldfServerDiagnosticStoreSizeCheckPeriod_Type()
)
wldfServerDiagnosticStoreSizeCheckPeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfServerDiagnosticStoreSizeCheckPeriod.setStatus("current")
_WldfServerDiagnosticEventsImageCaptureInterval_Type = Counter64
_WldfServerDiagnosticEventsImageCaptureInterval_Object = MibTableColumn
wldfServerDiagnosticEventsImageCaptureInterval = _WldfServerDiagnosticEventsImageCaptureInterval_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1140, 1, 12),
    _WldfServerDiagnosticEventsImageCaptureInterval_Type()
)
wldfServerDiagnosticEventsImageCaptureInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfServerDiagnosticEventsImageCaptureInterval.setStatus("current")
_WldfServerDiagnosticImageDir_Type = OctetString
_WldfServerDiagnosticImageDir_Object = MibTableColumn
wldfServerDiagnosticImageDir = _WldfServerDiagnosticImageDir_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1140, 1, 13),
    _WldfServerDiagnosticImageDir_Type()
)
wldfServerDiagnosticImageDir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfServerDiagnosticImageDir.setStatus("current")
_WldfServerDiagnosticDataRetirementEnabled_Type = OctetString
_WldfServerDiagnosticDataRetirementEnabled_Object = MibTableColumn
wldfServerDiagnosticDataRetirementEnabled = _WldfServerDiagnosticDataRetirementEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1140, 1, 14),
    _WldfServerDiagnosticDataRetirementEnabled_Type()
)
wldfServerDiagnosticDataRetirementEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfServerDiagnosticDataRetirementEnabled.setStatus("current")
_WldfServerDiagnosticName_Type = OctetString
_WldfServerDiagnosticName_Object = MibTableColumn
wldfServerDiagnosticName = _WldfServerDiagnosticName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1140, 1, 15),
    _WldfServerDiagnosticName_Type()
)
wldfServerDiagnosticName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfServerDiagnosticName.setStatus("current")
_WldfSystemResourceTable_Object = MibTable
wldfSystemResourceTable = _WldfSystemResourceTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1145)
)
if mibBuilder.loadTexts:
    wldfSystemResourceTable.setStatus("current")
_WldfSystemResourceEntry_Object = MibTableRow
wldfSystemResourceEntry = _WldfSystemResourceEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1145, 1)
)
wldfSystemResourceEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wldfSystemResourceIndex"),
)
if mibBuilder.loadTexts:
    wldfSystemResourceEntry.setStatus("current")
_WldfSystemResourceIndex_Type = OctetString
_WldfSystemResourceIndex_Object = MibTableColumn
wldfSystemResourceIndex = _WldfSystemResourceIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1145, 1, 1),
    _WldfSystemResourceIndex_Type()
)
wldfSystemResourceIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wldfSystemResourceIndex.setStatus("current")
_WldfSystemResourceObjectName_Type = OctetString
_WldfSystemResourceObjectName_Object = MibTableColumn
wldfSystemResourceObjectName = _WldfSystemResourceObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1145, 1, 2),
    _WldfSystemResourceObjectName_Type()
)
wldfSystemResourceObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfSystemResourceObjectName.setStatus("current")
_WldfSystemResourceType_Type = OctetString
_WldfSystemResourceType_Object = MibTableColumn
wldfSystemResourceType = _WldfSystemResourceType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1145, 1, 3),
    _WldfSystemResourceType_Type()
)
wldfSystemResourceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfSystemResourceType.setStatus("current")
_WldfSystemResourceCompatibilityName_Type = OctetString
_WldfSystemResourceCompatibilityName_Object = MibTableColumn
wldfSystemResourceCompatibilityName = _WldfSystemResourceCompatibilityName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1145, 1, 4),
    _WldfSystemResourceCompatibilityName_Type()
)
wldfSystemResourceCompatibilityName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfSystemResourceCompatibilityName.setStatus("current")
_WldfSystemResourceDeploymentOrder_Type = Integer32
_WldfSystemResourceDeploymentOrder_Object = MibTableColumn
wldfSystemResourceDeploymentOrder = _WldfSystemResourceDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1145, 1, 5),
    _WldfSystemResourceDeploymentOrder_Type()
)
wldfSystemResourceDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfSystemResourceDeploymentOrder.setStatus("current")
_WldfSystemResourceDeploymentPrincipalName_Type = OctetString
_WldfSystemResourceDeploymentPrincipalName_Object = MibTableColumn
wldfSystemResourceDeploymentPrincipalName = _WldfSystemResourceDeploymentPrincipalName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1145, 1, 6),
    _WldfSystemResourceDeploymentPrincipalName_Type()
)
wldfSystemResourceDeploymentPrincipalName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfSystemResourceDeploymentPrincipalName.setStatus("current")
_WldfSystemResourceDescriptorFileName_Type = OctetString
_WldfSystemResourceDescriptorFileName_Object = MibTableColumn
wldfSystemResourceDescriptorFileName = _WldfSystemResourceDescriptorFileName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1145, 1, 7),
    _WldfSystemResourceDescriptorFileName_Type()
)
wldfSystemResourceDescriptorFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfSystemResourceDescriptorFileName.setStatus("current")
_WldfSystemResourceDescription_Type = OctetString
_WldfSystemResourceDescription_Object = MibTableColumn
wldfSystemResourceDescription = _WldfSystemResourceDescription_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1145, 1, 8),
    _WldfSystemResourceDescription_Type()
)
wldfSystemResourceDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfSystemResourceDescription.setStatus("current")
_WldfSystemResourceModuleType_Type = OctetString
_WldfSystemResourceModuleType_Object = MibTableColumn
wldfSystemResourceModuleType = _WldfSystemResourceModuleType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1145, 1, 9),
    _WldfSystemResourceModuleType_Type()
)
wldfSystemResourceModuleType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfSystemResourceModuleType.setStatus("current")
_WldfSystemResourceName_Type = OctetString
_WldfSystemResourceName_Object = MibTableColumn
wldfSystemResourceName = _WldfSystemResourceName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1145, 1, 10),
    _WldfSystemResourceName_Type()
)
wldfSystemResourceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfSystemResourceName.setStatus("current")
_WldfSystemResourceSourcePath_Type = OctetString
_WldfSystemResourceSourcePath_Object = MibTableColumn
wldfSystemResourceSourcePath = _WldfSystemResourceSourcePath_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1145, 1, 11),
    _WldfSystemResourceSourcePath_Type()
)
wldfSystemResourceSourcePath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfSystemResourceSourcePath.setStatus("current")
_WtcServerTable_Object = MibTable
wtcServerTable = _WtcServerTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1150)
)
if mibBuilder.loadTexts:
    wtcServerTable.setStatus("current")
_WtcServerEntry_Object = MibTableRow
wtcServerEntry = _WtcServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1150, 1)
)
wtcServerEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wtcServerIndex"),
)
if mibBuilder.loadTexts:
    wtcServerEntry.setStatus("current")
_WtcServerIndex_Type = OctetString
_WtcServerIndex_Object = MibTableColumn
wtcServerIndex = _WtcServerIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1150, 1, 1),
    _WtcServerIndex_Type()
)
wtcServerIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wtcServerIndex.setStatus("current")
_WtcServerObjectName_Type = OctetString
_WtcServerObjectName_Object = MibTableColumn
wtcServerObjectName = _WtcServerObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1150, 1, 2),
    _WtcServerObjectName_Type()
)
wtcServerObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcServerObjectName.setStatus("current")
_WtcServerType_Type = OctetString
_WtcServerType_Object = MibTableColumn
wtcServerType = _WtcServerType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1150, 1, 3),
    _WtcServerType_Type()
)
wtcServerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcServerType.setStatus("current")
_WtcServerName_Type = OctetString
_WtcServerName_Object = MibTableColumn
wtcServerName = _WtcServerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1150, 1, 4),
    _WtcServerName_Type()
)
wtcServerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcServerName.setStatus("current")
_WtcServerDeploymentOrder_Type = Integer32
_WtcServerDeploymentOrder_Object = MibTableColumn
wtcServerDeploymentOrder = _WtcServerDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1150, 1, 5),
    _WtcServerDeploymentOrder_Type()
)
wtcServerDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcServerDeploymentOrder.setStatus("current")
_WebAppContainerTable_Object = MibTable
webAppContainerTable = _WebAppContainerTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155)
)
if mibBuilder.loadTexts:
    webAppContainerTable.setStatus("current")
_WebAppContainerEntry_Object = MibTableRow
webAppContainerEntry = _WebAppContainerEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1)
)
webAppContainerEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "webAppContainerIndex"),
)
if mibBuilder.loadTexts:
    webAppContainerEntry.setStatus("current")
_WebAppContainerIndex_Type = OctetString
_WebAppContainerIndex_Object = MibTableColumn
webAppContainerIndex = _WebAppContainerIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 1),
    _WebAppContainerIndex_Type()
)
webAppContainerIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    webAppContainerIndex.setStatus("current")
_WebAppContainerObjectName_Type = OctetString
_WebAppContainerObjectName_Object = MibTableColumn
webAppContainerObjectName = _WebAppContainerObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 2),
    _WebAppContainerObjectName_Type()
)
webAppContainerObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerObjectName.setStatus("current")
_WebAppContainerType_Type = OctetString
_WebAppContainerType_Object = MibTableColumn
webAppContainerType = _WebAppContainerType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 3),
    _WebAppContainerType_Type()
)
webAppContainerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerType.setStatus("current")
_WebAppContainerMaxPostSize_Type = Integer32
_WebAppContainerMaxPostSize_Object = MibTableColumn
webAppContainerMaxPostSize = _WebAppContainerMaxPostSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 4),
    _WebAppContainerMaxPostSize_Type()
)
webAppContainerMaxPostSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerMaxPostSize.setStatus("current")
_WebAppContainerXPoweredByHeaderLevel_Type = OctetString
_WebAppContainerXPoweredByHeaderLevel_Object = MibTableColumn
webAppContainerXPoweredByHeaderLevel = _WebAppContainerXPoweredByHeaderLevel_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 5),
    _WebAppContainerXPoweredByHeaderLevel_Type()
)
webAppContainerXPoweredByHeaderLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerXPoweredByHeaderLevel.setStatus("current")
_WebAppContainerServletAuthenticationFormURL_Type = OctetString
_WebAppContainerServletAuthenticationFormURL_Object = MibTableColumn
webAppContainerServletAuthenticationFormURL = _WebAppContainerServletAuthenticationFormURL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 6),
    _WebAppContainerServletAuthenticationFormURL_Type()
)
webAppContainerServletAuthenticationFormURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerServletAuthenticationFormURL.setStatus("current")
_WebAppContainerReloginEnabled_Type = OctetString
_WebAppContainerReloginEnabled_Object = MibTableColumn
webAppContainerReloginEnabled = _WebAppContainerReloginEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 7),
    _WebAppContainerReloginEnabled_Type()
)
webAppContainerReloginEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerReloginEnabled.setStatus("current")
_WebAppContainerWorkContextPropagationEnabled_Type = OctetString
_WebAppContainerWorkContextPropagationEnabled_Object = MibTableColumn
webAppContainerWorkContextPropagationEnabled = _WebAppContainerWorkContextPropagationEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 8),
    _WebAppContainerWorkContextPropagationEnabled_Type()
)
webAppContainerWorkContextPropagationEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerWorkContextPropagationEnabled.setStatus("current")
_WebAppContainerRtexprvalueJspParamName_Type = OctetString
_WebAppContainerRtexprvalueJspParamName_Object = MibTableColumn
webAppContainerRtexprvalueJspParamName = _WebAppContainerRtexprvalueJspParamName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 9),
    _WebAppContainerRtexprvalueJspParamName_Type()
)
webAppContainerRtexprvalueJspParamName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerRtexprvalueJspParamName.setStatus("current")
_WebAppContainerFilterDispatchedRequestsEnabled_Type = OctetString
_WebAppContainerFilterDispatchedRequestsEnabled_Object = MibTableColumn
webAppContainerFilterDispatchedRequestsEnabled = _WebAppContainerFilterDispatchedRequestsEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 10),
    _WebAppContainerFilterDispatchedRequestsEnabled_Type()
)
webAppContainerFilterDispatchedRequestsEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerFilterDispatchedRequestsEnabled.setStatus("current")
_WebAppContainerClientCertProxyEnabled_Type = OctetString
_WebAppContainerClientCertProxyEnabled_Object = MibTableColumn
webAppContainerClientCertProxyEnabled = _WebAppContainerClientCertProxyEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 11),
    _WebAppContainerClientCertProxyEnabled_Type()
)
webAppContainerClientCertProxyEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerClientCertProxyEnabled.setStatus("current")
_WebAppContainerOverloadProtectionEnabled_Type = OctetString
_WebAppContainerOverloadProtectionEnabled_Object = MibTableColumn
webAppContainerOverloadProtectionEnabled = _WebAppContainerOverloadProtectionEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 12),
    _WebAppContainerOverloadProtectionEnabled_Type()
)
webAppContainerOverloadProtectionEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerOverloadProtectionEnabled.setStatus("current")
_WebAppContainerOptimisticSerialization_Type = OctetString
_WebAppContainerOptimisticSerialization_Object = MibTableColumn
webAppContainerOptimisticSerialization = _WebAppContainerOptimisticSerialization_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 13),
    _WebAppContainerOptimisticSerialization_Type()
)
webAppContainerOptimisticSerialization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerOptimisticSerialization.setStatus("current")
_WebAppContainerRetainOriginalURL_Type = OctetString
_WebAppContainerRetainOriginalURL_Object = MibTableColumn
webAppContainerRetainOriginalURL = _WebAppContainerRetainOriginalURL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 14),
    _WebAppContainerRetainOriginalURL_Type()
)
webAppContainerRetainOriginalURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerRetainOriginalURL.setStatus("current")
_WebAppContainerWeblogicPluginEnabled_Type = OctetString
_WebAppContainerWeblogicPluginEnabled_Object = MibTableColumn
webAppContainerWeblogicPluginEnabled = _WebAppContainerWeblogicPluginEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 15),
    _WebAppContainerWeblogicPluginEnabled_Type()
)
webAppContainerWeblogicPluginEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerWeblogicPluginEnabled.setStatus("current")
_WebAppContainerHttpTraceSupportEnabled_Type = OctetString
_WebAppContainerHttpTraceSupportEnabled_Object = MibTableColumn
webAppContainerHttpTraceSupportEnabled = _WebAppContainerHttpTraceSupportEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 16),
    _WebAppContainerHttpTraceSupportEnabled_Type()
)
webAppContainerHttpTraceSupportEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerHttpTraceSupportEnabled.setStatus("current")
_WebAppContainerWAPEnabled_Type = OctetString
_WebAppContainerWAPEnabled_Object = MibTableColumn
webAppContainerWAPEnabled = _WebAppContainerWAPEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 17),
    _WebAppContainerWAPEnabled_Type()
)
webAppContainerWAPEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerWAPEnabled.setStatus("current")
_WebAppContainerJSPCompilerBackwardsCompatible_Type = OctetString
_WebAppContainerJSPCompilerBackwardsCompatible_Object = MibTableColumn
webAppContainerJSPCompilerBackwardsCompatible = _WebAppContainerJSPCompilerBackwardsCompatible_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 18),
    _WebAppContainerJSPCompilerBackwardsCompatible_Type()
)
webAppContainerJSPCompilerBackwardsCompatible.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerJSPCompilerBackwardsCompatible.setStatus("current")
_WebAppContainerAuthCookieEnabled_Type = OctetString
_WebAppContainerAuthCookieEnabled_Object = MibTableColumn
webAppContainerAuthCookieEnabled = _WebAppContainerAuthCookieEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 19),
    _WebAppContainerAuthCookieEnabled_Type()
)
webAppContainerAuthCookieEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerAuthCookieEnabled.setStatus("current")
_WebAppContainerName_Type = OctetString
_WebAppContainerName_Object = MibTableColumn
webAppContainerName = _WebAppContainerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 20),
    _WebAppContainerName_Type()
)
webAppContainerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerName.setStatus("current")
_WebAppContainerAllowAllRoles_Type = OctetString
_WebAppContainerAllowAllRoles_Object = MibTableColumn
webAppContainerAllowAllRoles = _WebAppContainerAllowAllRoles_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 21),
    _WebAppContainerAllowAllRoles_Type()
)
webAppContainerAllowAllRoles.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerAllowAllRoles.setStatus("current")
_WebAppContainerP3PHeaderValue_Type = OctetString
_WebAppContainerP3PHeaderValue_Object = MibTableColumn
webAppContainerP3PHeaderValue = _WebAppContainerP3PHeaderValue_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 22),
    _WebAppContainerP3PHeaderValue_Type()
)
webAppContainerP3PHeaderValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerP3PHeaderValue.setStatus("current")
_WebAppContainerServletReloadCheckSecs_Type = Integer32
_WebAppContainerServletReloadCheckSecs_Object = MibTableColumn
webAppContainerServletReloadCheckSecs = _WebAppContainerServletReloadCheckSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 23),
    _WebAppContainerServletReloadCheckSecs_Type()
)
webAppContainerServletReloadCheckSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerServletReloadCheckSecs.setStatus("current")
_WebAppContainerMaxPostTimeSecs_Type = Integer32
_WebAppContainerMaxPostTimeSecs_Object = MibTableColumn
webAppContainerMaxPostTimeSecs = _WebAppContainerMaxPostTimeSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 24),
    _WebAppContainerMaxPostTimeSecs_Type()
)
webAppContainerMaxPostTimeSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerMaxPostTimeSecs.setStatus("current")
_WebAppContainerMimeMappingFile_Type = OctetString
_WebAppContainerMimeMappingFile_Object = MibTableColumn
webAppContainerMimeMappingFile = _WebAppContainerMimeMappingFile_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 25),
    _WebAppContainerMimeMappingFile_Type()
)
webAppContainerMimeMappingFile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerMimeMappingFile.setStatus("current")
_WebAppContainerShowArchivedRealPathEnabled_Type = OctetString
_WebAppContainerShowArchivedRealPathEnabled_Object = MibTableColumn
webAppContainerShowArchivedRealPathEnabled = _WebAppContainerShowArchivedRealPathEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 26),
    _WebAppContainerShowArchivedRealPathEnabled_Type()
)
webAppContainerShowArchivedRealPathEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerShowArchivedRealPathEnabled.setStatus("current")
_WebAppContainerPostTimeoutSecs_Type = Integer32
_WebAppContainerPostTimeoutSecs_Object = MibTableColumn
webAppContainerPostTimeoutSecs = _WebAppContainerPostTimeoutSecs_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1155, 1, 27),
    _WebAppContainerPostTimeoutSecs_Type()
)
webAppContainerPostTimeoutSecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webAppContainerPostTimeoutSecs.setStatus("current")
_WebServerLogTable_Object = MibTable
webServerLogTable = _WebServerLogTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1160)
)
if mibBuilder.loadTexts:
    webServerLogTable.setStatus("current")
_WebServerLogEntry_Object = MibTableRow
webServerLogEntry = _WebServerLogEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1160, 1)
)
webServerLogEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "webServerLogIndex"),
)
if mibBuilder.loadTexts:
    webServerLogEntry.setStatus("current")
_WebServerLogIndex_Type = OctetString
_WebServerLogIndex_Object = MibTableColumn
webServerLogIndex = _WebServerLogIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1160, 1, 1),
    _WebServerLogIndex_Type()
)
webServerLogIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    webServerLogIndex.setStatus("current")
_WebServerLogObjectName_Type = OctetString
_WebServerLogObjectName_Object = MibTableColumn
webServerLogObjectName = _WebServerLogObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1160, 1, 2),
    _WebServerLogObjectName_Type()
)
webServerLogObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogObjectName.setStatus("current")
_WebServerLogType_Type = OctetString
_WebServerLogType_Object = MibTableColumn
webServerLogType = _WebServerLogType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1160, 1, 3),
    _WebServerLogType_Type()
)
webServerLogType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogType.setStatus("current")
_WebServerLogLogTimeInGMT_Type = OctetString
_WebServerLogLogTimeInGMT_Object = MibTableColumn
webServerLogLogTimeInGMT = _WebServerLogLogTimeInGMT_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1160, 1, 4),
    _WebServerLogLogTimeInGMT_Type()
)
webServerLogLogTimeInGMT.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogLogTimeInGMT.setStatus("current")
_WebServerLogNumberOfFilesLimited_Type = OctetString
_WebServerLogNumberOfFilesLimited_Object = MibTableColumn
webServerLogNumberOfFilesLimited = _WebServerLogNumberOfFilesLimited_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1160, 1, 5),
    _WebServerLogNumberOfFilesLimited_Type()
)
webServerLogNumberOfFilesLimited.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogNumberOfFilesLimited.setStatus("current")
_WebServerLogFileTimeSpan_Type = Integer32
_WebServerLogFileTimeSpan_Object = MibTableColumn
webServerLogFileTimeSpan = _WebServerLogFileTimeSpan_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1160, 1, 6),
    _WebServerLogFileTimeSpan_Type()
)
webServerLogFileTimeSpan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogFileTimeSpan.setStatus("current")
_WebServerLogLogFileFormat_Type = OctetString
_WebServerLogLogFileFormat_Object = MibTableColumn
webServerLogLogFileFormat = _WebServerLogLogFileFormat_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1160, 1, 7),
    _WebServerLogLogFileFormat_Type()
)
webServerLogLogFileFormat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogLogFileFormat.setStatus("current")
_WebServerLogRotationType_Type = OctetString
_WebServerLogRotationType_Object = MibTableColumn
webServerLogRotationType = _WebServerLogRotationType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1160, 1, 8),
    _WebServerLogRotationType_Type()
)
webServerLogRotationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogRotationType.setStatus("current")
_WebServerLogFileCount_Type = Integer32
_WebServerLogFileCount_Object = MibTableColumn
webServerLogFileCount = _WebServerLogFileCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1160, 1, 9),
    _WebServerLogFileCount_Type()
)
webServerLogFileCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogFileCount.setStatus("current")
_WebServerLogLoggingEnabled_Type = OctetString
_WebServerLogLoggingEnabled_Object = MibTableColumn
webServerLogLoggingEnabled = _WebServerLogLoggingEnabled_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1160, 1, 10),
    _WebServerLogLoggingEnabled_Type()
)
webServerLogLoggingEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogLoggingEnabled.setStatus("current")
_WebServerLogELFFields_Type = OctetString
_WebServerLogELFFields_Object = MibTableColumn
webServerLogELFFields = _WebServerLogELFFields_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1160, 1, 11),
    _WebServerLogELFFields_Type()
)
webServerLogELFFields.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogELFFields.setStatus("current")
_WebServerLogFileName_Type = OctetString
_WebServerLogFileName_Object = MibTableColumn
webServerLogFileName = _WebServerLogFileName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1160, 1, 12),
    _WebServerLogFileName_Type()
)
webServerLogFileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogFileName.setStatus("current")
_WebServerLogFileMinSize_Type = Integer32
_WebServerLogFileMinSize_Object = MibTableColumn
webServerLogFileMinSize = _WebServerLogFileMinSize_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1160, 1, 13),
    _WebServerLogFileMinSize_Type()
)
webServerLogFileMinSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogFileMinSize.setStatus("current")
_WebServerLogBufferSizeKB_Type = Integer32
_WebServerLogBufferSizeKB_Object = MibTableColumn
webServerLogBufferSizeKB = _WebServerLogBufferSizeKB_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1160, 1, 14),
    _WebServerLogBufferSizeKB_Type()
)
webServerLogBufferSizeKB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogBufferSizeKB.setStatus("current")
_WebServerLogDateFormatPattern_Type = OctetString
_WebServerLogDateFormatPattern_Object = MibTableColumn
webServerLogDateFormatPattern = _WebServerLogDateFormatPattern_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1160, 1, 15),
    _WebServerLogDateFormatPattern_Type()
)
webServerLogDateFormatPattern.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogDateFormatPattern.setStatus("current")
_WebServerLogRotationTime_Type = OctetString
_WebServerLogRotationTime_Object = MibTableColumn
webServerLogRotationTime = _WebServerLogRotationTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1160, 1, 16),
    _WebServerLogRotationTime_Type()
)
webServerLogRotationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogRotationTime.setStatus("current")
_WebServerLogRotateLogOnStartup_Type = OctetString
_WebServerLogRotateLogOnStartup_Object = MibTableColumn
webServerLogRotateLogOnStartup = _WebServerLogRotateLogOnStartup_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1160, 1, 17),
    _WebServerLogRotateLogOnStartup_Type()
)
webServerLogRotateLogOnStartup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogRotateLogOnStartup.setStatus("current")
_WebServerLogName_Type = OctetString
_WebServerLogName_Object = MibTableColumn
webServerLogName = _WebServerLogName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1160, 1, 18),
    _WebServerLogName_Type()
)
webServerLogName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogName.setStatus("current")
_WebServerLogLogFileRotationDir_Type = OctetString
_WebServerLogLogFileRotationDir_Object = MibTableColumn
webServerLogLogFileRotationDir = _WebServerLogLogFileRotationDir_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1160, 1, 19),
    _WebServerLogLogFileRotationDir_Type()
)
webServerLogLogFileRotationDir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServerLogLogFileRotationDir.setStatus("current")
_WebServiceTable_Object = MibTable
webServiceTable = _WebServiceTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1165)
)
if mibBuilder.loadTexts:
    webServiceTable.setStatus("current")
_WebServiceEntry_Object = MibTableRow
webServiceEntry = _WebServiceEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1165, 1)
)
webServiceEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "webServiceIndex"),
)
if mibBuilder.loadTexts:
    webServiceEntry.setStatus("current")
_WebServiceIndex_Type = OctetString
_WebServiceIndex_Object = MibTableColumn
webServiceIndex = _WebServiceIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1165, 1, 1),
    _WebServiceIndex_Type()
)
webServiceIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    webServiceIndex.setStatus("current")
_WebServiceObjectName_Type = OctetString
_WebServiceObjectName_Object = MibTableColumn
webServiceObjectName = _WebServiceObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1165, 1, 2),
    _WebServiceObjectName_Type()
)
webServiceObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServiceObjectName.setStatus("current")
_WebServiceType_Type = OctetString
_WebServiceType_Object = MibTableColumn
webServiceType = _WebServiceType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1165, 1, 3),
    _WebServiceType_Type()
)
webServiceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServiceType.setStatus("current")
_WebServiceMessagingQueueMDBRunAsPrincipalName_Type = OctetString
_WebServiceMessagingQueueMDBRunAsPrincipalName_Object = MibTableColumn
webServiceMessagingQueueMDBRunAsPrincipalName = _WebServiceMessagingQueueMDBRunAsPrincipalName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1165, 1, 4),
    _WebServiceMessagingQueueMDBRunAsPrincipalName_Type()
)
webServiceMessagingQueueMDBRunAsPrincipalName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServiceMessagingQueueMDBRunAsPrincipalName.setStatus("current")
_WebServiceMessagingQueue_Type = OctetString
_WebServiceMessagingQueue_Object = MibTableColumn
webServiceMessagingQueue = _WebServiceMessagingQueue_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1165, 1, 5),
    _WebServiceMessagingQueue_Type()
)
webServiceMessagingQueue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServiceMessagingQueue.setStatus("current")
_WebServiceJmsConnectionFactory_Type = OctetString
_WebServiceJmsConnectionFactory_Object = MibTableColumn
webServiceJmsConnectionFactory = _WebServiceJmsConnectionFactory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1165, 1, 6),
    _WebServiceJmsConnectionFactory_Type()
)
webServiceJmsConnectionFactory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServiceJmsConnectionFactory.setStatus("current")
_WebServiceCallbackQueueMDBRunAsPrincipalName_Type = OctetString
_WebServiceCallbackQueueMDBRunAsPrincipalName_Object = MibTableColumn
webServiceCallbackQueueMDBRunAsPrincipalName = _WebServiceCallbackQueueMDBRunAsPrincipalName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1165, 1, 7),
    _WebServiceCallbackQueueMDBRunAsPrincipalName_Type()
)
webServiceCallbackQueueMDBRunAsPrincipalName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServiceCallbackQueueMDBRunAsPrincipalName.setStatus("current")
_WebServiceCallbackQueue_Type = OctetString
_WebServiceCallbackQueue_Object = MibTableColumn
webServiceCallbackQueue = _WebServiceCallbackQueue_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1165, 1, 8),
    _WebServiceCallbackQueue_Type()
)
webServiceCallbackQueue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServiceCallbackQueue.setStatus("current")
_WebServiceName_Type = OctetString
_WebServiceName_Object = MibTableColumn
webServiceName = _WebServiceName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1165, 1, 9),
    _WebServiceName_Type()
)
webServiceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServiceName.setStatus("current")
_WebserviceCredentialProviderTable_Object = MibTable
webserviceCredentialProviderTable = _WebserviceCredentialProviderTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1170)
)
if mibBuilder.loadTexts:
    webserviceCredentialProviderTable.setStatus("current")
_WebserviceCredentialProviderEntry_Object = MibTableRow
webserviceCredentialProviderEntry = _WebserviceCredentialProviderEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1170, 1)
)
webserviceCredentialProviderEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "webserviceCredentialProviderIndex"),
)
if mibBuilder.loadTexts:
    webserviceCredentialProviderEntry.setStatus("current")
_WebserviceCredentialProviderIndex_Type = OctetString
_WebserviceCredentialProviderIndex_Object = MibTableColumn
webserviceCredentialProviderIndex = _WebserviceCredentialProviderIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1170, 1, 1),
    _WebserviceCredentialProviderIndex_Type()
)
webserviceCredentialProviderIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    webserviceCredentialProviderIndex.setStatus("current")
_WebserviceCredentialProviderObjectName_Type = OctetString
_WebserviceCredentialProviderObjectName_Object = MibTableColumn
webserviceCredentialProviderObjectName = _WebserviceCredentialProviderObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1170, 1, 2),
    _WebserviceCredentialProviderObjectName_Type()
)
webserviceCredentialProviderObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceCredentialProviderObjectName.setStatus("current")
_WebserviceCredentialProviderType_Type = OctetString
_WebserviceCredentialProviderType_Object = MibTableColumn
webserviceCredentialProviderType = _WebserviceCredentialProviderType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1170, 1, 3),
    _WebserviceCredentialProviderType_Type()
)
webserviceCredentialProviderType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceCredentialProviderType.setStatus("current")
_WebserviceCredentialProviderTokenType_Type = OctetString
_WebserviceCredentialProviderTokenType_Object = MibTableColumn
webserviceCredentialProviderTokenType = _WebserviceCredentialProviderTokenType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1170, 1, 4),
    _WebserviceCredentialProviderTokenType_Type()
)
webserviceCredentialProviderTokenType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceCredentialProviderTokenType.setStatus("current")
_WebserviceCredentialProviderName_Type = OctetString
_WebserviceCredentialProviderName_Object = MibTableColumn
webserviceCredentialProviderName = _WebserviceCredentialProviderName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1170, 1, 5),
    _WebserviceCredentialProviderName_Type()
)
webserviceCredentialProviderName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceCredentialProviderName.setStatus("current")
_WebserviceCredentialProviderClassName_Type = OctetString
_WebserviceCredentialProviderClassName_Object = MibTableColumn
webserviceCredentialProviderClassName = _WebserviceCredentialProviderClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1170, 1, 6),
    _WebserviceCredentialProviderClassName_Type()
)
webserviceCredentialProviderClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceCredentialProviderClassName.setStatus("current")
_WebserviceSecurityTable_Object = MibTable
webserviceSecurityTable = _WebserviceSecurityTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1175)
)
if mibBuilder.loadTexts:
    webserviceSecurityTable.setStatus("current")
_WebserviceSecurityEntry_Object = MibTableRow
webserviceSecurityEntry = _WebserviceSecurityEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1175, 1)
)
webserviceSecurityEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "webserviceSecurityIndex"),
)
if mibBuilder.loadTexts:
    webserviceSecurityEntry.setStatus("current")
_WebserviceSecurityIndex_Type = OctetString
_WebserviceSecurityIndex_Object = MibTableColumn
webserviceSecurityIndex = _WebserviceSecurityIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1175, 1, 1),
    _WebserviceSecurityIndex_Type()
)
webserviceSecurityIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    webserviceSecurityIndex.setStatus("current")
_WebserviceSecurityObjectName_Type = OctetString
_WebserviceSecurityObjectName_Object = MibTableColumn
webserviceSecurityObjectName = _WebserviceSecurityObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1175, 1, 2),
    _WebserviceSecurityObjectName_Type()
)
webserviceSecurityObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceSecurityObjectName.setStatus("current")
_WebserviceSecurityType_Type = OctetString
_WebserviceSecurityType_Object = MibTableColumn
webserviceSecurityType = _WebserviceSecurityType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1175, 1, 3),
    _WebserviceSecurityType_Type()
)
webserviceSecurityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceSecurityType.setStatus("current")
_WebserviceSecurityDefaultCredentialProviderSTSURI_Type = OctetString
_WebserviceSecurityDefaultCredentialProviderSTSURI_Object = MibTableColumn
webserviceSecurityDefaultCredentialProviderSTSURI = _WebserviceSecurityDefaultCredentialProviderSTSURI_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1175, 1, 4),
    _WebserviceSecurityDefaultCredentialProviderSTSURI_Type()
)
webserviceSecurityDefaultCredentialProviderSTSURI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceSecurityDefaultCredentialProviderSTSURI.setStatus("current")
_WebserviceSecurityName_Type = OctetString
_WebserviceSecurityName_Object = MibTableColumn
webserviceSecurityName = _WebserviceSecurityName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1175, 1, 5),
    _WebserviceSecurityName_Type()
)
webserviceSecurityName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceSecurityName.setStatus("current")
_WebserviceSecurityPolicySelectionPreference_Type = OctetString
_WebserviceSecurityPolicySelectionPreference_Object = MibTableColumn
webserviceSecurityPolicySelectionPreference = _WebserviceSecurityPolicySelectionPreference_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1175, 1, 6),
    _WebserviceSecurityPolicySelectionPreference_Type()
)
webserviceSecurityPolicySelectionPreference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceSecurityPolicySelectionPreference.setStatus("current")
_WebserviceSecurityCompatibilityPreference_Type = OctetString
_WebserviceSecurityCompatibilityPreference_Object = MibTableColumn
webserviceSecurityCompatibilityPreference = _WebserviceSecurityCompatibilityPreference_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1175, 1, 7),
    _WebserviceSecurityCompatibilityPreference_Type()
)
webserviceSecurityCompatibilityPreference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceSecurityCompatibilityPreference.setStatus("current")
_WebserviceSecurityTokenTable_Object = MibTable
webserviceSecurityTokenTable = _WebserviceSecurityTokenTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1180)
)
if mibBuilder.loadTexts:
    webserviceSecurityTokenTable.setStatus("current")
_WebserviceSecurityTokenEntry_Object = MibTableRow
webserviceSecurityTokenEntry = _WebserviceSecurityTokenEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1180, 1)
)
webserviceSecurityTokenEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "webserviceSecurityTokenIndex"),
)
if mibBuilder.loadTexts:
    webserviceSecurityTokenEntry.setStatus("current")
_WebserviceSecurityTokenIndex_Type = OctetString
_WebserviceSecurityTokenIndex_Object = MibTableColumn
webserviceSecurityTokenIndex = _WebserviceSecurityTokenIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1180, 1, 1),
    _WebserviceSecurityTokenIndex_Type()
)
webserviceSecurityTokenIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    webserviceSecurityTokenIndex.setStatus("current")
_WebserviceSecurityTokenObjectName_Type = OctetString
_WebserviceSecurityTokenObjectName_Object = MibTableColumn
webserviceSecurityTokenObjectName = _WebserviceSecurityTokenObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1180, 1, 2),
    _WebserviceSecurityTokenObjectName_Type()
)
webserviceSecurityTokenObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceSecurityTokenObjectName.setStatus("current")
_WebserviceSecurityTokenType_Type = OctetString
_WebserviceSecurityTokenType_Object = MibTableColumn
webserviceSecurityTokenType = _WebserviceSecurityTokenType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1180, 1, 3),
    _WebserviceSecurityTokenType_Type()
)
webserviceSecurityTokenType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceSecurityTokenType.setStatus("current")
_WebserviceSecurityTokenTokenType_Type = OctetString
_WebserviceSecurityTokenTokenType_Object = MibTableColumn
webserviceSecurityTokenTokenType = _WebserviceSecurityTokenTokenType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1180, 1, 4),
    _WebserviceSecurityTokenTokenType_Type()
)
webserviceSecurityTokenTokenType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceSecurityTokenTokenType.setStatus("current")
_WebserviceSecurityTokenName_Type = OctetString
_WebserviceSecurityTokenName_Object = MibTableColumn
webserviceSecurityTokenName = _WebserviceSecurityTokenName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1180, 1, 5),
    _WebserviceSecurityTokenName_Type()
)
webserviceSecurityTokenName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceSecurityTokenName.setStatus("current")
_WebserviceSecurityTokenClassName_Type = OctetString
_WebserviceSecurityTokenClassName_Object = MibTableColumn
webserviceSecurityTokenClassName = _WebserviceSecurityTokenClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1180, 1, 6),
    _WebserviceSecurityTokenClassName_Type()
)
webserviceSecurityTokenClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceSecurityTokenClassName.setStatus("current")
_WebserviceTimestampTable_Object = MibTable
webserviceTimestampTable = _WebserviceTimestampTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1185)
)
if mibBuilder.loadTexts:
    webserviceTimestampTable.setStatus("current")
_WebserviceTimestampEntry_Object = MibTableRow
webserviceTimestampEntry = _WebserviceTimestampEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1185, 1)
)
webserviceTimestampEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "webserviceTimestampIndex"),
)
if mibBuilder.loadTexts:
    webserviceTimestampEntry.setStatus("current")
_WebserviceTimestampIndex_Type = OctetString
_WebserviceTimestampIndex_Object = MibTableColumn
webserviceTimestampIndex = _WebserviceTimestampIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1185, 1, 1),
    _WebserviceTimestampIndex_Type()
)
webserviceTimestampIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    webserviceTimestampIndex.setStatus("current")
_WebserviceTimestampObjectName_Type = OctetString
_WebserviceTimestampObjectName_Object = MibTableColumn
webserviceTimestampObjectName = _WebserviceTimestampObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1185, 1, 2),
    _WebserviceTimestampObjectName_Type()
)
webserviceTimestampObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceTimestampObjectName.setStatus("current")
_WebserviceTimestampType_Type = OctetString
_WebserviceTimestampType_Object = MibTableColumn
webserviceTimestampType = _WebserviceTimestampType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1185, 1, 3),
    _WebserviceTimestampType_Type()
)
webserviceTimestampType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceTimestampType.setStatus("current")
_WebserviceTimestampMaxProcessingDelay_Type = Counter64
_WebserviceTimestampMaxProcessingDelay_Object = MibTableColumn
webserviceTimestampMaxProcessingDelay = _WebserviceTimestampMaxProcessingDelay_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1185, 1, 4),
    _WebserviceTimestampMaxProcessingDelay_Type()
)
webserviceTimestampMaxProcessingDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceTimestampMaxProcessingDelay.setStatus("current")
_WebserviceTimestampClockSkew_Type = Counter64
_WebserviceTimestampClockSkew_Object = MibTableColumn
webserviceTimestampClockSkew = _WebserviceTimestampClockSkew_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1185, 1, 5),
    _WebserviceTimestampClockSkew_Type()
)
webserviceTimestampClockSkew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceTimestampClockSkew.setStatus("current")
_WebserviceTimestampClockSynchronized_Type = OctetString
_WebserviceTimestampClockSynchronized_Object = MibTableColumn
webserviceTimestampClockSynchronized = _WebserviceTimestampClockSynchronized_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1185, 1, 6),
    _WebserviceTimestampClockSynchronized_Type()
)
webserviceTimestampClockSynchronized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceTimestampClockSynchronized.setStatus("current")
_WebserviceTimestampClockPrecision_Type = Counter64
_WebserviceTimestampClockPrecision_Object = MibTableColumn
webserviceTimestampClockPrecision = _WebserviceTimestampClockPrecision_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1185, 1, 7),
    _WebserviceTimestampClockPrecision_Type()
)
webserviceTimestampClockPrecision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceTimestampClockPrecision.setStatus("current")
_WebserviceTimestampValidityPeriod_Type = Integer32
_WebserviceTimestampValidityPeriod_Object = MibTableColumn
webserviceTimestampValidityPeriod = _WebserviceTimestampValidityPeriod_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1185, 1, 8),
    _WebserviceTimestampValidityPeriod_Type()
)
webserviceTimestampValidityPeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceTimestampValidityPeriod.setStatus("current")
_WebserviceTimestampLaxPrecision_Type = OctetString
_WebserviceTimestampLaxPrecision_Object = MibTableColumn
webserviceTimestampLaxPrecision = _WebserviceTimestampLaxPrecision_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1185, 1, 9),
    _WebserviceTimestampLaxPrecision_Type()
)
webserviceTimestampLaxPrecision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceTimestampLaxPrecision.setStatus("current")
_WebserviceTimestampName_Type = OctetString
_WebserviceTimestampName_Object = MibTableColumn
webserviceTimestampName = _WebserviceTimestampName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1185, 1, 10),
    _WebserviceTimestampName_Type()
)
webserviceTimestampName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceTimestampName.setStatus("current")
_WebserviceTokenHandlerTable_Object = MibTable
webserviceTokenHandlerTable = _WebserviceTokenHandlerTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1190)
)
if mibBuilder.loadTexts:
    webserviceTokenHandlerTable.setStatus("current")
_WebserviceTokenHandlerEntry_Object = MibTableRow
webserviceTokenHandlerEntry = _WebserviceTokenHandlerEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1190, 1)
)
webserviceTokenHandlerEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "webserviceTokenHandlerIndex"),
)
if mibBuilder.loadTexts:
    webserviceTokenHandlerEntry.setStatus("current")
_WebserviceTokenHandlerIndex_Type = OctetString
_WebserviceTokenHandlerIndex_Object = MibTableColumn
webserviceTokenHandlerIndex = _WebserviceTokenHandlerIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1190, 1, 1),
    _WebserviceTokenHandlerIndex_Type()
)
webserviceTokenHandlerIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    webserviceTokenHandlerIndex.setStatus("current")
_WebserviceTokenHandlerObjectName_Type = OctetString
_WebserviceTokenHandlerObjectName_Object = MibTableColumn
webserviceTokenHandlerObjectName = _WebserviceTokenHandlerObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1190, 1, 2),
    _WebserviceTokenHandlerObjectName_Type()
)
webserviceTokenHandlerObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceTokenHandlerObjectName.setStatus("current")
_WebserviceTokenHandlerType_Type = OctetString
_WebserviceTokenHandlerType_Object = MibTableColumn
webserviceTokenHandlerType = _WebserviceTokenHandlerType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1190, 1, 3),
    _WebserviceTokenHandlerType_Type()
)
webserviceTokenHandlerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceTokenHandlerType.setStatus("current")
_WebserviceTokenHandlerHandlingOrder_Type = Integer32
_WebserviceTokenHandlerHandlingOrder_Object = MibTableColumn
webserviceTokenHandlerHandlingOrder = _WebserviceTokenHandlerHandlingOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1190, 1, 4),
    _WebserviceTokenHandlerHandlingOrder_Type()
)
webserviceTokenHandlerHandlingOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceTokenHandlerHandlingOrder.setStatus("current")
_WebserviceTokenHandlerTokenType_Type = OctetString
_WebserviceTokenHandlerTokenType_Object = MibTableColumn
webserviceTokenHandlerTokenType = _WebserviceTokenHandlerTokenType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1190, 1, 5),
    _WebserviceTokenHandlerTokenType_Type()
)
webserviceTokenHandlerTokenType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceTokenHandlerTokenType.setStatus("current")
_WebserviceTokenHandlerName_Type = OctetString
_WebserviceTokenHandlerName_Object = MibTableColumn
webserviceTokenHandlerName = _WebserviceTokenHandlerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1190, 1, 6),
    _WebserviceTokenHandlerName_Type()
)
webserviceTokenHandlerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceTokenHandlerName.setStatus("current")
_WebserviceTokenHandlerClassName_Type = OctetString
_WebserviceTokenHandlerClassName_Object = MibTableColumn
webserviceTokenHandlerClassName = _WebserviceTokenHandlerClassName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1190, 1, 7),
    _WebserviceTokenHandlerClassName_Type()
)
webserviceTokenHandlerClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webserviceTokenHandlerClassName.setStatus("current")
_WorkManagerTable_Object = MibTable
workManagerTable = _WorkManagerTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1195)
)
if mibBuilder.loadTexts:
    workManagerTable.setStatus("current")
_WorkManagerEntry_Object = MibTableRow
workManagerEntry = _WorkManagerEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1195, 1)
)
workManagerEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "workManagerIndex"),
)
if mibBuilder.loadTexts:
    workManagerEntry.setStatus("current")
_WorkManagerIndex_Type = OctetString
_WorkManagerIndex_Object = MibTableColumn
workManagerIndex = _WorkManagerIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1195, 1, 1),
    _WorkManagerIndex_Type()
)
workManagerIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    workManagerIndex.setStatus("current")
_WorkManagerObjectName_Type = OctetString
_WorkManagerObjectName_Object = MibTableColumn
workManagerObjectName = _WorkManagerObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1195, 1, 2),
    _WorkManagerObjectName_Type()
)
workManagerObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workManagerObjectName.setStatus("current")
_WorkManagerType_Type = OctetString
_WorkManagerType_Object = MibTableColumn
workManagerType = _WorkManagerType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1195, 1, 3),
    _WorkManagerType_Type()
)
workManagerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workManagerType.setStatus("current")
_WorkManagerDeploymentOrder_Type = Integer32
_WorkManagerDeploymentOrder_Object = MibTableColumn
workManagerDeploymentOrder = _WorkManagerDeploymentOrder_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1195, 1, 4),
    _WorkManagerDeploymentOrder_Type()
)
workManagerDeploymentOrder.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workManagerDeploymentOrder.setStatus("current")
_WorkManagerIgnoreStuckThreads_Type = OctetString
_WorkManagerIgnoreStuckThreads_Object = MibTableColumn
workManagerIgnoreStuckThreads = _WorkManagerIgnoreStuckThreads_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1195, 1, 5),
    _WorkManagerIgnoreStuckThreads_Type()
)
workManagerIgnoreStuckThreads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workManagerIgnoreStuckThreads.setStatus("current")
_WorkManagerName_Type = OctetString
_WorkManagerName_Object = MibTableColumn
workManagerName = _WorkManagerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1195, 1, 6),
    _WorkManagerName_Type()
)
workManagerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workManagerName.setStatus("current")
_WorkManagerShutdownTriggerTable_Object = MibTable
workManagerShutdownTriggerTable = _WorkManagerShutdownTriggerTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1200)
)
if mibBuilder.loadTexts:
    workManagerShutdownTriggerTable.setStatus("current")
_WorkManagerShutdownTriggerEntry_Object = MibTableRow
workManagerShutdownTriggerEntry = _WorkManagerShutdownTriggerEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1200, 1)
)
workManagerShutdownTriggerEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "workManagerShutdownTriggerIndex"),
)
if mibBuilder.loadTexts:
    workManagerShutdownTriggerEntry.setStatus("current")
_WorkManagerShutdownTriggerIndex_Type = OctetString
_WorkManagerShutdownTriggerIndex_Object = MibTableColumn
workManagerShutdownTriggerIndex = _WorkManagerShutdownTriggerIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1200, 1, 1),
    _WorkManagerShutdownTriggerIndex_Type()
)
workManagerShutdownTriggerIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    workManagerShutdownTriggerIndex.setStatus("current")
_WorkManagerShutdownTriggerObjectName_Type = OctetString
_WorkManagerShutdownTriggerObjectName_Object = MibTableColumn
workManagerShutdownTriggerObjectName = _WorkManagerShutdownTriggerObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1200, 1, 2),
    _WorkManagerShutdownTriggerObjectName_Type()
)
workManagerShutdownTriggerObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workManagerShutdownTriggerObjectName.setStatus("current")
_WorkManagerShutdownTriggerType_Type = OctetString
_WorkManagerShutdownTriggerType_Object = MibTableColumn
workManagerShutdownTriggerType = _WorkManagerShutdownTriggerType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1200, 1, 3),
    _WorkManagerShutdownTriggerType_Type()
)
workManagerShutdownTriggerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workManagerShutdownTriggerType.setStatus("current")
_WorkManagerShutdownTriggerMaxStuckThreadTime_Type = Integer32
_WorkManagerShutdownTriggerMaxStuckThreadTime_Object = MibTableColumn
workManagerShutdownTriggerMaxStuckThreadTime = _WorkManagerShutdownTriggerMaxStuckThreadTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1200, 1, 4),
    _WorkManagerShutdownTriggerMaxStuckThreadTime_Type()
)
workManagerShutdownTriggerMaxStuckThreadTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workManagerShutdownTriggerMaxStuckThreadTime.setStatus("current")
_WorkManagerShutdownTriggerStuckThreadCount_Type = Integer32
_WorkManagerShutdownTriggerStuckThreadCount_Object = MibTableColumn
workManagerShutdownTriggerStuckThreadCount = _WorkManagerShutdownTriggerStuckThreadCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1200, 1, 5),
    _WorkManagerShutdownTriggerStuckThreadCount_Type()
)
workManagerShutdownTriggerStuckThreadCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workManagerShutdownTriggerStuckThreadCount.setStatus("current")
_WorkManagerShutdownTriggerName_Type = OctetString
_WorkManagerShutdownTriggerName_Object = MibTableColumn
workManagerShutdownTriggerName = _WorkManagerShutdownTriggerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1200, 1, 6),
    _WorkManagerShutdownTriggerName_Type()
)
workManagerShutdownTriggerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workManagerShutdownTriggerName.setStatus("current")
_AppClientComponentRuntimeTable_Object = MibTable
appClientComponentRuntimeTable = _AppClientComponentRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1205)
)
if mibBuilder.loadTexts:
    appClientComponentRuntimeTable.setStatus("current")
_AppClientComponentRuntimeEntry_Object = MibTableRow
appClientComponentRuntimeEntry = _AppClientComponentRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1205, 1)
)
appClientComponentRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "appClientComponentRuntimeIndex"),
)
if mibBuilder.loadTexts:
    appClientComponentRuntimeEntry.setStatus("current")
_AppClientComponentRuntimeIndex_Type = OctetString
_AppClientComponentRuntimeIndex_Object = MibTableColumn
appClientComponentRuntimeIndex = _AppClientComponentRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1205, 1, 1),
    _AppClientComponentRuntimeIndex_Type()
)
appClientComponentRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    appClientComponentRuntimeIndex.setStatus("current")
_AppClientComponentRuntimeObjectName_Type = OctetString
_AppClientComponentRuntimeObjectName_Object = MibTableColumn
appClientComponentRuntimeObjectName = _AppClientComponentRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1205, 1, 2),
    _AppClientComponentRuntimeObjectName_Type()
)
appClientComponentRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appClientComponentRuntimeObjectName.setStatus("current")
_AppClientComponentRuntimeType_Type = OctetString
_AppClientComponentRuntimeType_Object = MibTableColumn
appClientComponentRuntimeType = _AppClientComponentRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1205, 1, 3),
    _AppClientComponentRuntimeType_Type()
)
appClientComponentRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appClientComponentRuntimeType.setStatus("current")
_AppClientComponentRuntimeModuleId_Type = OctetString
_AppClientComponentRuntimeModuleId_Object = MibTableColumn
appClientComponentRuntimeModuleId = _AppClientComponentRuntimeModuleId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1205, 1, 4),
    _AppClientComponentRuntimeModuleId_Type()
)
appClientComponentRuntimeModuleId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appClientComponentRuntimeModuleId.setStatus("current")
_AppClientComponentRuntimeDeploymentState_Type = Integer32
_AppClientComponentRuntimeDeploymentState_Object = MibTableColumn
appClientComponentRuntimeDeploymentState = _AppClientComponentRuntimeDeploymentState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1205, 1, 5),
    _AppClientComponentRuntimeDeploymentState_Type()
)
appClientComponentRuntimeDeploymentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appClientComponentRuntimeDeploymentState.setStatus("current")
_AppClientComponentRuntimeName_Type = OctetString
_AppClientComponentRuntimeName_Object = MibTableColumn
appClientComponentRuntimeName = _AppClientComponentRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1205, 1, 6),
    _AppClientComponentRuntimeName_Type()
)
appClientComponentRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appClientComponentRuntimeName.setStatus("current")
_AppRuntimeStateRuntimeTable_Object = MibTable
appRuntimeStateRuntimeTable = _AppRuntimeStateRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1210)
)
if mibBuilder.loadTexts:
    appRuntimeStateRuntimeTable.setStatus("current")
_AppRuntimeStateRuntimeEntry_Object = MibTableRow
appRuntimeStateRuntimeEntry = _AppRuntimeStateRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1210, 1)
)
appRuntimeStateRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "appRuntimeStateRuntimeIndex"),
)
if mibBuilder.loadTexts:
    appRuntimeStateRuntimeEntry.setStatus("current")
_AppRuntimeStateRuntimeIndex_Type = OctetString
_AppRuntimeStateRuntimeIndex_Object = MibTableColumn
appRuntimeStateRuntimeIndex = _AppRuntimeStateRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1210, 1, 1),
    _AppRuntimeStateRuntimeIndex_Type()
)
appRuntimeStateRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    appRuntimeStateRuntimeIndex.setStatus("current")
_AppRuntimeStateRuntimeObjectName_Type = OctetString
_AppRuntimeStateRuntimeObjectName_Object = MibTableColumn
appRuntimeStateRuntimeObjectName = _AppRuntimeStateRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1210, 1, 2),
    _AppRuntimeStateRuntimeObjectName_Type()
)
appRuntimeStateRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appRuntimeStateRuntimeObjectName.setStatus("current")
_AppRuntimeStateRuntimeType_Type = OctetString
_AppRuntimeStateRuntimeType_Object = MibTableColumn
appRuntimeStateRuntimeType = _AppRuntimeStateRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1210, 1, 3),
    _AppRuntimeStateRuntimeType_Type()
)
appRuntimeStateRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appRuntimeStateRuntimeType.setStatus("current")
_AppRuntimeStateRuntimeName_Type = OctetString
_AppRuntimeStateRuntimeName_Object = MibTableColumn
appRuntimeStateRuntimeName = _AppRuntimeStateRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1210, 1, 4),
    _AppRuntimeStateRuntimeName_Type()
)
appRuntimeStateRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appRuntimeStateRuntimeName.setStatus("current")
_DeploymentRequestTaskRuntimeTable_Object = MibTable
deploymentRequestTaskRuntimeTable = _DeploymentRequestTaskRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1215)
)
if mibBuilder.loadTexts:
    deploymentRequestTaskRuntimeTable.setStatus("current")
_DeploymentRequestTaskRuntimeEntry_Object = MibTableRow
deploymentRequestTaskRuntimeEntry = _DeploymentRequestTaskRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1215, 1)
)
deploymentRequestTaskRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "deploymentRequestTaskRuntimeIndex"),
)
if mibBuilder.loadTexts:
    deploymentRequestTaskRuntimeEntry.setStatus("current")
_DeploymentRequestTaskRuntimeIndex_Type = OctetString
_DeploymentRequestTaskRuntimeIndex_Object = MibTableColumn
deploymentRequestTaskRuntimeIndex = _DeploymentRequestTaskRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1215, 1, 1),
    _DeploymentRequestTaskRuntimeIndex_Type()
)
deploymentRequestTaskRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    deploymentRequestTaskRuntimeIndex.setStatus("current")
_DeploymentRequestTaskRuntimeObjectName_Type = OctetString
_DeploymentRequestTaskRuntimeObjectName_Object = MibTableColumn
deploymentRequestTaskRuntimeObjectName = _DeploymentRequestTaskRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1215, 1, 2),
    _DeploymentRequestTaskRuntimeObjectName_Type()
)
deploymentRequestTaskRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentRequestTaskRuntimeObjectName.setStatus("current")
_DeploymentRequestTaskRuntimeType_Type = OctetString
_DeploymentRequestTaskRuntimeType_Object = MibTableColumn
deploymentRequestTaskRuntimeType = _DeploymentRequestTaskRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1215, 1, 3),
    _DeploymentRequestTaskRuntimeType_Type()
)
deploymentRequestTaskRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentRequestTaskRuntimeType.setStatus("current")
_DeploymentRequestTaskRuntimeStatus_Type = OctetString
_DeploymentRequestTaskRuntimeStatus_Object = MibTableColumn
deploymentRequestTaskRuntimeStatus = _DeploymentRequestTaskRuntimeStatus_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1215, 1, 4),
    _DeploymentRequestTaskRuntimeStatus_Type()
)
deploymentRequestTaskRuntimeStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentRequestTaskRuntimeStatus.setStatus("current")
_DeploymentRequestTaskRuntimeRunning_Type = OctetString
_DeploymentRequestTaskRuntimeRunning_Object = MibTableColumn
deploymentRequestTaskRuntimeRunning = _DeploymentRequestTaskRuntimeRunning_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1215, 1, 5),
    _DeploymentRequestTaskRuntimeRunning_Type()
)
deploymentRequestTaskRuntimeRunning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentRequestTaskRuntimeRunning.setStatus("current")
_DeploymentRequestTaskRuntimeBeginTime_Type = Counter64
_DeploymentRequestTaskRuntimeBeginTime_Object = MibTableColumn
deploymentRequestTaskRuntimeBeginTime = _DeploymentRequestTaskRuntimeBeginTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1215, 1, 6),
    _DeploymentRequestTaskRuntimeBeginTime_Type()
)
deploymentRequestTaskRuntimeBeginTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentRequestTaskRuntimeBeginTime.setStatus("current")
_DeploymentRequestTaskRuntimeEndTime_Type = Counter64
_DeploymentRequestTaskRuntimeEndTime_Object = MibTableColumn
deploymentRequestTaskRuntimeEndTime = _DeploymentRequestTaskRuntimeEndTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1215, 1, 7),
    _DeploymentRequestTaskRuntimeEndTime_Type()
)
deploymentRequestTaskRuntimeEndTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentRequestTaskRuntimeEndTime.setStatus("current")
_DeploymentRequestTaskRuntimeSystemTask_Type = OctetString
_DeploymentRequestTaskRuntimeSystemTask_Object = MibTableColumn
deploymentRequestTaskRuntimeSystemTask = _DeploymentRequestTaskRuntimeSystemTask_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1215, 1, 8),
    _DeploymentRequestTaskRuntimeSystemTask_Type()
)
deploymentRequestTaskRuntimeSystemTask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentRequestTaskRuntimeSystemTask.setStatus("current")
_DeploymentRequestTaskRuntimeDescription_Type = OctetString
_DeploymentRequestTaskRuntimeDescription_Object = MibTableColumn
deploymentRequestTaskRuntimeDescription = _DeploymentRequestTaskRuntimeDescription_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1215, 1, 9),
    _DeploymentRequestTaskRuntimeDescription_Type()
)
deploymentRequestTaskRuntimeDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentRequestTaskRuntimeDescription.setStatus("current")
_DeploymentRequestTaskRuntimeName_Type = OctetString
_DeploymentRequestTaskRuntimeName_Object = MibTableColumn
deploymentRequestTaskRuntimeName = _DeploymentRequestTaskRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1215, 1, 10),
    _DeploymentRequestTaskRuntimeName_Type()
)
deploymentRequestTaskRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deploymentRequestTaskRuntimeName.setStatus("current")
_EntityEJBRuntimeTable_Object = MibTable
entityEJBRuntimeTable = _EntityEJBRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1220)
)
if mibBuilder.loadTexts:
    entityEJBRuntimeTable.setStatus("current")
_EntityEJBRuntimeEntry_Object = MibTableRow
entityEJBRuntimeEntry = _EntityEJBRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1220, 1)
)
entityEJBRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "entityEJBRuntimeIndex"),
)
if mibBuilder.loadTexts:
    entityEJBRuntimeEntry.setStatus("current")
_EntityEJBRuntimeIndex_Type = OctetString
_EntityEJBRuntimeIndex_Object = MibTableColumn
entityEJBRuntimeIndex = _EntityEJBRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1220, 1, 1),
    _EntityEJBRuntimeIndex_Type()
)
entityEJBRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    entityEJBRuntimeIndex.setStatus("current")
_EntityEJBRuntimeObjectName_Type = OctetString
_EntityEJBRuntimeObjectName_Object = MibTableColumn
entityEJBRuntimeObjectName = _EntityEJBRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1220, 1, 2),
    _EntityEJBRuntimeObjectName_Type()
)
entityEJBRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityEJBRuntimeObjectName.setStatus("current")
_EntityEJBRuntimeType_Type = OctetString
_EntityEJBRuntimeType_Object = MibTableColumn
entityEJBRuntimeType = _EntityEJBRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1220, 1, 3),
    _EntityEJBRuntimeType_Type()
)
entityEJBRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityEJBRuntimeType.setStatus("current")
_EntityEJBRuntimeEJBName_Type = OctetString
_EntityEJBRuntimeEJBName_Object = MibTableColumn
entityEJBRuntimeEJBName = _EntityEJBRuntimeEJBName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1220, 1, 4),
    _EntityEJBRuntimeEJBName_Type()
)
entityEJBRuntimeEJBName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityEJBRuntimeEJBName.setStatus("current")
_EntityEJBRuntimeName_Type = OctetString
_EntityEJBRuntimeName_Object = MibTableColumn
entityEJBRuntimeName = _EntityEJBRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1220, 1, 5),
    _EntityEJBRuntimeName_Type()
)
entityEJBRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityEJBRuntimeName.setStatus("current")
_JdbcDataSourceTaskRuntimeTable_Object = MibTable
jdbcDataSourceTaskRuntimeTable = _JdbcDataSourceTaskRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1225)
)
if mibBuilder.loadTexts:
    jdbcDataSourceTaskRuntimeTable.setStatus("current")
_JdbcDataSourceTaskRuntimeEntry_Object = MibTableRow
jdbcDataSourceTaskRuntimeEntry = _JdbcDataSourceTaskRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1225, 1)
)
jdbcDataSourceTaskRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jdbcDataSourceTaskRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jdbcDataSourceTaskRuntimeEntry.setStatus("current")
_JdbcDataSourceTaskRuntimeIndex_Type = OctetString
_JdbcDataSourceTaskRuntimeIndex_Object = MibTableColumn
jdbcDataSourceTaskRuntimeIndex = _JdbcDataSourceTaskRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1225, 1, 1),
    _JdbcDataSourceTaskRuntimeIndex_Type()
)
jdbcDataSourceTaskRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    jdbcDataSourceTaskRuntimeIndex.setStatus("current")
_JdbcDataSourceTaskRuntimeObjectName_Type = OctetString
_JdbcDataSourceTaskRuntimeObjectName_Object = MibTableColumn
jdbcDataSourceTaskRuntimeObjectName = _JdbcDataSourceTaskRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1225, 1, 2),
    _JdbcDataSourceTaskRuntimeObjectName_Type()
)
jdbcDataSourceTaskRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceTaskRuntimeObjectName.setStatus("current")
_JdbcDataSourceTaskRuntimeType_Type = OctetString
_JdbcDataSourceTaskRuntimeType_Object = MibTableColumn
jdbcDataSourceTaskRuntimeType = _JdbcDataSourceTaskRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1225, 1, 3),
    _JdbcDataSourceTaskRuntimeType_Type()
)
jdbcDataSourceTaskRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceTaskRuntimeType.setStatus("current")
_JdbcDataSourceTaskRuntimeStatus_Type = OctetString
_JdbcDataSourceTaskRuntimeStatus_Object = MibTableColumn
jdbcDataSourceTaskRuntimeStatus = _JdbcDataSourceTaskRuntimeStatus_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1225, 1, 4),
    _JdbcDataSourceTaskRuntimeStatus_Type()
)
jdbcDataSourceTaskRuntimeStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceTaskRuntimeStatus.setStatus("current")
_JdbcDataSourceTaskRuntimeRunning_Type = OctetString
_JdbcDataSourceTaskRuntimeRunning_Object = MibTableColumn
jdbcDataSourceTaskRuntimeRunning = _JdbcDataSourceTaskRuntimeRunning_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1225, 1, 5),
    _JdbcDataSourceTaskRuntimeRunning_Type()
)
jdbcDataSourceTaskRuntimeRunning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceTaskRuntimeRunning.setStatus("current")
_JdbcDataSourceTaskRuntimeBeginTime_Type = Counter64
_JdbcDataSourceTaskRuntimeBeginTime_Object = MibTableColumn
jdbcDataSourceTaskRuntimeBeginTime = _JdbcDataSourceTaskRuntimeBeginTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1225, 1, 6),
    _JdbcDataSourceTaskRuntimeBeginTime_Type()
)
jdbcDataSourceTaskRuntimeBeginTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceTaskRuntimeBeginTime.setStatus("current")
_JdbcDataSourceTaskRuntimeEndTime_Type = Counter64
_JdbcDataSourceTaskRuntimeEndTime_Object = MibTableColumn
jdbcDataSourceTaskRuntimeEndTime = _JdbcDataSourceTaskRuntimeEndTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1225, 1, 7),
    _JdbcDataSourceTaskRuntimeEndTime_Type()
)
jdbcDataSourceTaskRuntimeEndTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceTaskRuntimeEndTime.setStatus("current")
_JdbcDataSourceTaskRuntimeSystemTask_Type = OctetString
_JdbcDataSourceTaskRuntimeSystemTask_Object = MibTableColumn
jdbcDataSourceTaskRuntimeSystemTask = _JdbcDataSourceTaskRuntimeSystemTask_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1225, 1, 8),
    _JdbcDataSourceTaskRuntimeSystemTask_Type()
)
jdbcDataSourceTaskRuntimeSystemTask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceTaskRuntimeSystemTask.setStatus("current")
_JdbcDataSourceTaskRuntimeDescription_Type = OctetString
_JdbcDataSourceTaskRuntimeDescription_Object = MibTableColumn
jdbcDataSourceTaskRuntimeDescription = _JdbcDataSourceTaskRuntimeDescription_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1225, 1, 9),
    _JdbcDataSourceTaskRuntimeDescription_Type()
)
jdbcDataSourceTaskRuntimeDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceTaskRuntimeDescription.setStatus("current")
_JdbcDataSourceTaskRuntimeName_Type = OctetString
_JdbcDataSourceTaskRuntimeName_Object = MibTableColumn
jdbcDataSourceTaskRuntimeName = _JdbcDataSourceTaskRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1225, 1, 10),
    _JdbcDataSourceTaskRuntimeName_Type()
)
jdbcDataSourceTaskRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDataSourceTaskRuntimeName.setStatus("current")
_JdbcDriverRuntimeTable_Object = MibTable
jdbcDriverRuntimeTable = _JdbcDriverRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1230)
)
if mibBuilder.loadTexts:
    jdbcDriverRuntimeTable.setStatus("current")
_JdbcDriverRuntimeEntry_Object = MibTableRow
jdbcDriverRuntimeEntry = _JdbcDriverRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1230, 1)
)
jdbcDriverRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jdbcDriverRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jdbcDriverRuntimeEntry.setStatus("current")
_JdbcDriverRuntimeIndex_Type = OctetString
_JdbcDriverRuntimeIndex_Object = MibTableColumn
jdbcDriverRuntimeIndex = _JdbcDriverRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1230, 1, 1),
    _JdbcDriverRuntimeIndex_Type()
)
jdbcDriverRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    jdbcDriverRuntimeIndex.setStatus("current")
_JdbcDriverRuntimeObjectName_Type = OctetString
_JdbcDriverRuntimeObjectName_Object = MibTableColumn
jdbcDriverRuntimeObjectName = _JdbcDriverRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1230, 1, 2),
    _JdbcDriverRuntimeObjectName_Type()
)
jdbcDriverRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDriverRuntimeObjectName.setStatus("current")
_JdbcDriverRuntimeType_Type = OctetString
_JdbcDriverRuntimeType_Object = MibTableColumn
jdbcDriverRuntimeType = _JdbcDriverRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1230, 1, 3),
    _JdbcDriverRuntimeType_Type()
)
jdbcDriverRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDriverRuntimeType.setStatus("current")
_JdbcDriverRuntimeName_Type = OctetString
_JdbcDriverRuntimeName_Object = MibTableColumn
jdbcDriverRuntimeName = _JdbcDriverRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1230, 1, 4),
    _JdbcDriverRuntimeName_Type()
)
jdbcDriverRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcDriverRuntimeName.setStatus("current")
_JdbcMultiDataSourceRuntimeTable_Object = MibTable
jdbcMultiDataSourceRuntimeTable = _JdbcMultiDataSourceRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1235)
)
if mibBuilder.loadTexts:
    jdbcMultiDataSourceRuntimeTable.setStatus("current")
_JdbcMultiDataSourceRuntimeEntry_Object = MibTableRow
jdbcMultiDataSourceRuntimeEntry = _JdbcMultiDataSourceRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1235, 1)
)
jdbcMultiDataSourceRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jdbcMultiDataSourceRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jdbcMultiDataSourceRuntimeEntry.setStatus("current")
_JdbcMultiDataSourceRuntimeIndex_Type = OctetString
_JdbcMultiDataSourceRuntimeIndex_Object = MibTableColumn
jdbcMultiDataSourceRuntimeIndex = _JdbcMultiDataSourceRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1235, 1, 1),
    _JdbcMultiDataSourceRuntimeIndex_Type()
)
jdbcMultiDataSourceRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    jdbcMultiDataSourceRuntimeIndex.setStatus("current")
_JdbcMultiDataSourceRuntimeObjectName_Type = OctetString
_JdbcMultiDataSourceRuntimeObjectName_Object = MibTableColumn
jdbcMultiDataSourceRuntimeObjectName = _JdbcMultiDataSourceRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1235, 1, 2),
    _JdbcMultiDataSourceRuntimeObjectName_Type()
)
jdbcMultiDataSourceRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcMultiDataSourceRuntimeObjectName.setStatus("current")
_JdbcMultiDataSourceRuntimeType_Type = OctetString
_JdbcMultiDataSourceRuntimeType_Object = MibTableColumn
jdbcMultiDataSourceRuntimeType = _JdbcMultiDataSourceRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1235, 1, 3),
    _JdbcMultiDataSourceRuntimeType_Type()
)
jdbcMultiDataSourceRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcMultiDataSourceRuntimeType.setStatus("current")
_JdbcMultiDataSourceRuntimeName_Type = OctetString
_JdbcMultiDataSourceRuntimeName_Object = MibTableColumn
jdbcMultiDataSourceRuntimeName = _JdbcMultiDataSourceRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1235, 1, 4),
    _JdbcMultiDataSourceRuntimeName_Type()
)
jdbcMultiDataSourceRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcMultiDataSourceRuntimeName.setStatus("current")
_JdbcServiceRuntimeTable_Object = MibTable
jdbcServiceRuntimeTable = _JdbcServiceRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1240)
)
if mibBuilder.loadTexts:
    jdbcServiceRuntimeTable.setStatus("current")
_JdbcServiceRuntimeEntry_Object = MibTableRow
jdbcServiceRuntimeEntry = _JdbcServiceRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1240, 1)
)
jdbcServiceRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jdbcServiceRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jdbcServiceRuntimeEntry.setStatus("current")
_JdbcServiceRuntimeIndex_Type = OctetString
_JdbcServiceRuntimeIndex_Object = MibTableColumn
jdbcServiceRuntimeIndex = _JdbcServiceRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1240, 1, 1),
    _JdbcServiceRuntimeIndex_Type()
)
jdbcServiceRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    jdbcServiceRuntimeIndex.setStatus("current")
_JdbcServiceRuntimeObjectName_Type = OctetString
_JdbcServiceRuntimeObjectName_Object = MibTableColumn
jdbcServiceRuntimeObjectName = _JdbcServiceRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1240, 1, 2),
    _JdbcServiceRuntimeObjectName_Type()
)
jdbcServiceRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcServiceRuntimeObjectName.setStatus("current")
_JdbcServiceRuntimeType_Type = OctetString
_JdbcServiceRuntimeType_Object = MibTableColumn
jdbcServiceRuntimeType = _JdbcServiceRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1240, 1, 3),
    _JdbcServiceRuntimeType_Type()
)
jdbcServiceRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcServiceRuntimeType.setStatus("current")
_JdbcServiceRuntimeName_Type = OctetString
_JdbcServiceRuntimeName_Object = MibTableColumn
jdbcServiceRuntimeName = _JdbcServiceRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1240, 1, 4),
    _JdbcServiceRuntimeName_Type()
)
jdbcServiceRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jdbcServiceRuntimeName.setStatus("current")
_JmsRemoteEndpointRuntimeTable_Object = MibTable
jmsRemoteEndpointRuntimeTable = _JmsRemoteEndpointRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245)
)
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeTable.setStatus("current")
_JmsRemoteEndpointRuntimeEntry_Object = MibTableRow
jmsRemoteEndpointRuntimeEntry = _JmsRemoteEndpointRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1)
)
jmsRemoteEndpointRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jmsRemoteEndpointRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeEntry.setStatus("current")
_JmsRemoteEndpointRuntimeIndex_Type = OctetString
_JmsRemoteEndpointRuntimeIndex_Object = MibTableColumn
jmsRemoteEndpointRuntimeIndex = _JmsRemoteEndpointRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 1),
    _JmsRemoteEndpointRuntimeIndex_Type()
)
jmsRemoteEndpointRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeIndex.setStatus("current")
_JmsRemoteEndpointRuntimeObjectName_Type = OctetString
_JmsRemoteEndpointRuntimeObjectName_Object = MibTableColumn
jmsRemoteEndpointRuntimeObjectName = _JmsRemoteEndpointRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 2),
    _JmsRemoteEndpointRuntimeObjectName_Type()
)
jmsRemoteEndpointRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeObjectName.setStatus("current")
_JmsRemoteEndpointRuntimeType_Type = OctetString
_JmsRemoteEndpointRuntimeType_Object = MibTableColumn
jmsRemoteEndpointRuntimeType = _JmsRemoteEndpointRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 3),
    _JmsRemoteEndpointRuntimeType_Type()
)
jmsRemoteEndpointRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeType.setStatus("current")
_JmsRemoteEndpointRuntimeUptimeTotal_Type = Counter64
_JmsRemoteEndpointRuntimeUptimeTotal_Object = MibTableColumn
jmsRemoteEndpointRuntimeUptimeTotal = _JmsRemoteEndpointRuntimeUptimeTotal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 4),
    _JmsRemoteEndpointRuntimeUptimeTotal_Type()
)
jmsRemoteEndpointRuntimeUptimeTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeUptimeTotal.setStatus("current")
_JmsRemoteEndpointRuntimeMessagesCurrentCount_Type = Counter64
_JmsRemoteEndpointRuntimeMessagesCurrentCount_Object = MibTableColumn
jmsRemoteEndpointRuntimeMessagesCurrentCount = _JmsRemoteEndpointRuntimeMessagesCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 5),
    _JmsRemoteEndpointRuntimeMessagesCurrentCount_Type()
)
jmsRemoteEndpointRuntimeMessagesCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeMessagesCurrentCount.setStatus("current")
_JmsRemoteEndpointRuntimeDowntimeTotal_Type = Counter64
_JmsRemoteEndpointRuntimeDowntimeTotal_Object = MibTableColumn
jmsRemoteEndpointRuntimeDowntimeTotal = _JmsRemoteEndpointRuntimeDowntimeTotal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 6),
    _JmsRemoteEndpointRuntimeDowntimeTotal_Type()
)
jmsRemoteEndpointRuntimeDowntimeTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeDowntimeTotal.setStatus("current")
_JmsRemoteEndpointRuntimeBytesReceivedCount_Type = Counter64
_JmsRemoteEndpointRuntimeBytesReceivedCount_Object = MibTableColumn
jmsRemoteEndpointRuntimeBytesReceivedCount = _JmsRemoteEndpointRuntimeBytesReceivedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 7),
    _JmsRemoteEndpointRuntimeBytesReceivedCount_Type()
)
jmsRemoteEndpointRuntimeBytesReceivedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeBytesReceivedCount.setStatus("current")
_JmsRemoteEndpointRuntimeEndpointType_Type = OctetString
_JmsRemoteEndpointRuntimeEndpointType_Object = MibTableColumn
jmsRemoteEndpointRuntimeEndpointType = _JmsRemoteEndpointRuntimeEndpointType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 8),
    _JmsRemoteEndpointRuntimeEndpointType_Type()
)
jmsRemoteEndpointRuntimeEndpointType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeEndpointType.setStatus("current")
_JmsRemoteEndpointRuntimeFailedMessagesTotal_Type = Counter64
_JmsRemoteEndpointRuntimeFailedMessagesTotal_Object = MibTableColumn
jmsRemoteEndpointRuntimeFailedMessagesTotal = _JmsRemoteEndpointRuntimeFailedMessagesTotal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 9),
    _JmsRemoteEndpointRuntimeFailedMessagesTotal_Type()
)
jmsRemoteEndpointRuntimeFailedMessagesTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeFailedMessagesTotal.setStatus("current")
_JmsRemoteEndpointRuntimeMessagesReceivedCount_Type = Counter64
_JmsRemoteEndpointRuntimeMessagesReceivedCount_Object = MibTableColumn
jmsRemoteEndpointRuntimeMessagesReceivedCount = _JmsRemoteEndpointRuntimeMessagesReceivedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 10),
    _JmsRemoteEndpointRuntimeMessagesReceivedCount_Type()
)
jmsRemoteEndpointRuntimeMessagesReceivedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeMessagesReceivedCount.setStatus("current")
_JmsRemoteEndpointRuntimeURL_Type = OctetString
_JmsRemoteEndpointRuntimeURL_Object = MibTableColumn
jmsRemoteEndpointRuntimeURL = _JmsRemoteEndpointRuntimeURL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 11),
    _JmsRemoteEndpointRuntimeURL_Type()
)
jmsRemoteEndpointRuntimeURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeURL.setStatus("current")
_JmsRemoteEndpointRuntimePausedForIncoming_Type = OctetString
_JmsRemoteEndpointRuntimePausedForIncoming_Object = MibTableColumn
jmsRemoteEndpointRuntimePausedForIncoming = _JmsRemoteEndpointRuntimePausedForIncoming_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 12),
    _JmsRemoteEndpointRuntimePausedForIncoming_Type()
)
jmsRemoteEndpointRuntimePausedForIncoming.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimePausedForIncoming.setStatus("current")
_JmsRemoteEndpointRuntimeName_Type = OctetString
_JmsRemoteEndpointRuntimeName_Object = MibTableColumn
jmsRemoteEndpointRuntimeName = _JmsRemoteEndpointRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 13),
    _JmsRemoteEndpointRuntimeName_Type()
)
jmsRemoteEndpointRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeName.setStatus("current")
_JmsRemoteEndpointRuntimeBytesHighCount_Type = Counter64
_JmsRemoteEndpointRuntimeBytesHighCount_Object = MibTableColumn
jmsRemoteEndpointRuntimeBytesHighCount = _JmsRemoteEndpointRuntimeBytesHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 14),
    _JmsRemoteEndpointRuntimeBytesHighCount_Type()
)
jmsRemoteEndpointRuntimeBytesHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeBytesHighCount.setStatus("current")
_JmsRemoteEndpointRuntimeUptimeHigh_Type = Counter64
_JmsRemoteEndpointRuntimeUptimeHigh_Object = MibTableColumn
jmsRemoteEndpointRuntimeUptimeHigh = _JmsRemoteEndpointRuntimeUptimeHigh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 15),
    _JmsRemoteEndpointRuntimeUptimeHigh_Type()
)
jmsRemoteEndpointRuntimeUptimeHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeUptimeHigh.setStatus("current")
_JmsRemoteEndpointRuntimeBytesCurrentCount_Type = Counter64
_JmsRemoteEndpointRuntimeBytesCurrentCount_Object = MibTableColumn
jmsRemoteEndpointRuntimeBytesCurrentCount = _JmsRemoteEndpointRuntimeBytesCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 16),
    _JmsRemoteEndpointRuntimeBytesCurrentCount_Type()
)
jmsRemoteEndpointRuntimeBytesCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeBytesCurrentCount.setStatus("current")
_JmsRemoteEndpointRuntimeMessagesPendingCount_Type = Counter64
_JmsRemoteEndpointRuntimeMessagesPendingCount_Object = MibTableColumn
jmsRemoteEndpointRuntimeMessagesPendingCount = _JmsRemoteEndpointRuntimeMessagesPendingCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 17),
    _JmsRemoteEndpointRuntimeMessagesPendingCount_Type()
)
jmsRemoteEndpointRuntimeMessagesPendingCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeMessagesPendingCount.setStatus("current")
_JmsRemoteEndpointRuntimeDowntimeHigh_Type = Counter64
_JmsRemoteEndpointRuntimeDowntimeHigh_Object = MibTableColumn
jmsRemoteEndpointRuntimeDowntimeHigh = _JmsRemoteEndpointRuntimeDowntimeHigh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 18),
    _JmsRemoteEndpointRuntimeDowntimeHigh_Type()
)
jmsRemoteEndpointRuntimeDowntimeHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeDowntimeHigh.setStatus("current")
_JmsRemoteEndpointRuntimeBytesThresholdTime_Type = Counter64
_JmsRemoteEndpointRuntimeBytesThresholdTime_Object = MibTableColumn
jmsRemoteEndpointRuntimeBytesThresholdTime = _JmsRemoteEndpointRuntimeBytesThresholdTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 19),
    _JmsRemoteEndpointRuntimeBytesThresholdTime_Type()
)
jmsRemoteEndpointRuntimeBytesThresholdTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeBytesThresholdTime.setStatus("current")
_JmsRemoteEndpointRuntimeBytesPendingCount_Type = Counter64
_JmsRemoteEndpointRuntimeBytesPendingCount_Object = MibTableColumn
jmsRemoteEndpointRuntimeBytesPendingCount = _JmsRemoteEndpointRuntimeBytesPendingCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 20),
    _JmsRemoteEndpointRuntimeBytesPendingCount_Type()
)
jmsRemoteEndpointRuntimeBytesPendingCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeBytesPendingCount.setStatus("current")
_JmsRemoteEndpointRuntimePausedForForwarding_Type = OctetString
_JmsRemoteEndpointRuntimePausedForForwarding_Object = MibTableColumn
jmsRemoteEndpointRuntimePausedForForwarding = _JmsRemoteEndpointRuntimePausedForForwarding_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 21),
    _JmsRemoteEndpointRuntimePausedForForwarding_Type()
)
jmsRemoteEndpointRuntimePausedForForwarding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimePausedForForwarding.setStatus("current")
_JmsRemoteEndpointRuntimeMessagesThresholdTime_Type = Counter64
_JmsRemoteEndpointRuntimeMessagesThresholdTime_Object = MibTableColumn
jmsRemoteEndpointRuntimeMessagesThresholdTime = _JmsRemoteEndpointRuntimeMessagesThresholdTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 22),
    _JmsRemoteEndpointRuntimeMessagesThresholdTime_Type()
)
jmsRemoteEndpointRuntimeMessagesThresholdTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeMessagesThresholdTime.setStatus("current")
_JmsRemoteEndpointRuntimeMessagesHighCount_Type = Counter64
_JmsRemoteEndpointRuntimeMessagesHighCount_Object = MibTableColumn
jmsRemoteEndpointRuntimeMessagesHighCount = _JmsRemoteEndpointRuntimeMessagesHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 23),
    _JmsRemoteEndpointRuntimeMessagesHighCount_Type()
)
jmsRemoteEndpointRuntimeMessagesHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeMessagesHighCount.setStatus("current")
_JmsRemoteEndpointRuntimeOperationState_Type = OctetString
_JmsRemoteEndpointRuntimeOperationState_Object = MibTableColumn
jmsRemoteEndpointRuntimeOperationState = _JmsRemoteEndpointRuntimeOperationState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1245, 1, 24),
    _JmsRemoteEndpointRuntimeOperationState_Type()
)
jmsRemoteEndpointRuntimeOperationState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jmsRemoteEndpointRuntimeOperationState.setStatus("current")
_JobRuntimeTable_Object = MibTable
jobRuntimeTable = _JobRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1250)
)
if mibBuilder.loadTexts:
    jobRuntimeTable.setStatus("current")
_JobRuntimeEntry_Object = MibTableRow
jobRuntimeEntry = _JobRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1250, 1)
)
jobRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jobRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jobRuntimeEntry.setStatus("current")
_JobRuntimeIndex_Type = OctetString
_JobRuntimeIndex_Object = MibTableColumn
jobRuntimeIndex = _JobRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1250, 1, 1),
    _JobRuntimeIndex_Type()
)
jobRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    jobRuntimeIndex.setStatus("current")
_JobRuntimeObjectName_Type = OctetString
_JobRuntimeObjectName_Object = MibTableColumn
jobRuntimeObjectName = _JobRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1250, 1, 2),
    _JobRuntimeObjectName_Type()
)
jobRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jobRuntimeObjectName.setStatus("current")
_JobRuntimeType_Type = OctetString
_JobRuntimeType_Object = MibTableColumn
jobRuntimeType = _JobRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1250, 1, 3),
    _JobRuntimeType_Type()
)
jobRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jobRuntimeType.setStatus("current")
_JobRuntimeTimeout_Type = Counter64
_JobRuntimeTimeout_Object = MibTableColumn
jobRuntimeTimeout = _JobRuntimeTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1250, 1, 4),
    _JobRuntimeTimeout_Type()
)
jobRuntimeTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jobRuntimeTimeout.setStatus("current")
_JobRuntimeLocalExecutionCount_Type = Counter64
_JobRuntimeLocalExecutionCount_Object = MibTableColumn
jobRuntimeLocalExecutionCount = _JobRuntimeLocalExecutionCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1250, 1, 5),
    _JobRuntimeLocalExecutionCount_Type()
)
jobRuntimeLocalExecutionCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jobRuntimeLocalExecutionCount.setStatus("current")
_JobRuntimeLastLocalExecutionTime_Type = Counter64
_JobRuntimeLastLocalExecutionTime_Object = MibTableColumn
jobRuntimeLastLocalExecutionTime = _JobRuntimeLastLocalExecutionTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1250, 1, 6),
    _JobRuntimeLastLocalExecutionTime_Type()
)
jobRuntimeLastLocalExecutionTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jobRuntimeLastLocalExecutionTime.setStatus("current")
_JobRuntimePeriod_Type = Counter64
_JobRuntimePeriod_Object = MibTableColumn
jobRuntimePeriod = _JobRuntimePeriod_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1250, 1, 7),
    _JobRuntimePeriod_Type()
)
jobRuntimePeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jobRuntimePeriod.setStatus("current")
_JobRuntimeDescription_Type = OctetString
_JobRuntimeDescription_Object = MibTableColumn
jobRuntimeDescription = _JobRuntimeDescription_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1250, 1, 8),
    _JobRuntimeDescription_Type()
)
jobRuntimeDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jobRuntimeDescription.setStatus("current")
_JobRuntimeName_Type = OctetString
_JobRuntimeName_Object = MibTableColumn
jobRuntimeName = _JobRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1250, 1, 9),
    _JobRuntimeName_Type()
)
jobRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jobRuntimeName.setStatus("current")
_JobRuntimeID_Type = OctetString
_JobRuntimeID_Object = MibTableColumn
jobRuntimeID = _JobRuntimeID_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1250, 1, 10),
    _JobRuntimeID_Type()
)
jobRuntimeID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jobRuntimeID.setStatus("current")
_JobSchedulerRuntimeTable_Object = MibTable
jobSchedulerRuntimeTable = _JobSchedulerRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1255)
)
if mibBuilder.loadTexts:
    jobSchedulerRuntimeTable.setStatus("current")
_JobSchedulerRuntimeEntry_Object = MibTableRow
jobSchedulerRuntimeEntry = _JobSchedulerRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1255, 1)
)
jobSchedulerRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "jobSchedulerRuntimeIndex"),
)
if mibBuilder.loadTexts:
    jobSchedulerRuntimeEntry.setStatus("current")
_JobSchedulerRuntimeIndex_Type = OctetString
_JobSchedulerRuntimeIndex_Object = MibTableColumn
jobSchedulerRuntimeIndex = _JobSchedulerRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1255, 1, 1),
    _JobSchedulerRuntimeIndex_Type()
)
jobSchedulerRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    jobSchedulerRuntimeIndex.setStatus("current")
_JobSchedulerRuntimeObjectName_Type = OctetString
_JobSchedulerRuntimeObjectName_Object = MibTableColumn
jobSchedulerRuntimeObjectName = _JobSchedulerRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1255, 1, 2),
    _JobSchedulerRuntimeObjectName_Type()
)
jobSchedulerRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jobSchedulerRuntimeObjectName.setStatus("current")
_JobSchedulerRuntimeType_Type = OctetString
_JobSchedulerRuntimeType_Object = MibTableColumn
jobSchedulerRuntimeType = _JobSchedulerRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1255, 1, 3),
    _JobSchedulerRuntimeType_Type()
)
jobSchedulerRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jobSchedulerRuntimeType.setStatus("current")
_JobSchedulerRuntimeName_Type = OctetString
_JobSchedulerRuntimeName_Object = MibTableColumn
jobSchedulerRuntimeName = _JobSchedulerRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1255, 1, 4),
    _JobSchedulerRuntimeName_Type()
)
jobSchedulerRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    jobSchedulerRuntimeName.setStatus("current")
_KodoDataCacheRuntimeTable_Object = MibTable
kodoDataCacheRuntimeTable = _KodoDataCacheRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1260)
)
if mibBuilder.loadTexts:
    kodoDataCacheRuntimeTable.setStatus("current")
_KodoDataCacheRuntimeEntry_Object = MibTableRow
kodoDataCacheRuntimeEntry = _KodoDataCacheRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1260, 1)
)
kodoDataCacheRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "kodoDataCacheRuntimeIndex"),
)
if mibBuilder.loadTexts:
    kodoDataCacheRuntimeEntry.setStatus("current")
_KodoDataCacheRuntimeIndex_Type = OctetString
_KodoDataCacheRuntimeIndex_Object = MibTableColumn
kodoDataCacheRuntimeIndex = _KodoDataCacheRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1260, 1, 1),
    _KodoDataCacheRuntimeIndex_Type()
)
kodoDataCacheRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    kodoDataCacheRuntimeIndex.setStatus("current")
_KodoDataCacheRuntimeObjectName_Type = OctetString
_KodoDataCacheRuntimeObjectName_Object = MibTableColumn
kodoDataCacheRuntimeObjectName = _KodoDataCacheRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1260, 1, 2),
    _KodoDataCacheRuntimeObjectName_Type()
)
kodoDataCacheRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoDataCacheRuntimeObjectName.setStatus("current")
_KodoDataCacheRuntimeType_Type = OctetString
_KodoDataCacheRuntimeType_Object = MibTableColumn
kodoDataCacheRuntimeType = _KodoDataCacheRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1260, 1, 3),
    _KodoDataCacheRuntimeType_Type()
)
kodoDataCacheRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoDataCacheRuntimeType.setStatus("current")
_KodoDataCacheRuntimeCacheHitCount_Type = Integer32
_KodoDataCacheRuntimeCacheHitCount_Object = MibTableColumn
kodoDataCacheRuntimeCacheHitCount = _KodoDataCacheRuntimeCacheHitCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1260, 1, 4),
    _KodoDataCacheRuntimeCacheHitCount_Type()
)
kodoDataCacheRuntimeCacheHitCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoDataCacheRuntimeCacheHitCount.setStatus("current")
_KodoDataCacheRuntimeTotalCurrentEntries_Type = Integer32
_KodoDataCacheRuntimeTotalCurrentEntries_Object = MibTableColumn
kodoDataCacheRuntimeTotalCurrentEntries = _KodoDataCacheRuntimeTotalCurrentEntries_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1260, 1, 5),
    _KodoDataCacheRuntimeTotalCurrentEntries_Type()
)
kodoDataCacheRuntimeTotalCurrentEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoDataCacheRuntimeTotalCurrentEntries.setStatus("current")
_KodoDataCacheRuntimeCacheMissCount_Type = Integer32
_KodoDataCacheRuntimeCacheMissCount_Object = MibTableColumn
kodoDataCacheRuntimeCacheMissCount = _KodoDataCacheRuntimeCacheMissCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1260, 1, 6),
    _KodoDataCacheRuntimeCacheMissCount_Type()
)
kodoDataCacheRuntimeCacheMissCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoDataCacheRuntimeCacheMissCount.setStatus("current")
_KodoDataCacheRuntimeCacheHitRatio_Type = OctetString
_KodoDataCacheRuntimeCacheHitRatio_Object = MibTableColumn
kodoDataCacheRuntimeCacheHitRatio = _KodoDataCacheRuntimeCacheHitRatio_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1260, 1, 7),
    _KodoDataCacheRuntimeCacheHitRatio_Type()
)
kodoDataCacheRuntimeCacheHitRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoDataCacheRuntimeCacheHitRatio.setStatus("current")
_KodoDataCacheRuntimeName_Type = OctetString
_KodoDataCacheRuntimeName_Object = MibTableColumn
kodoDataCacheRuntimeName = _KodoDataCacheRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1260, 1, 8),
    _KodoDataCacheRuntimeName_Type()
)
kodoDataCacheRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoDataCacheRuntimeName.setStatus("current")
_KodoDataCacheRuntimeStatistics_Type = OctetString
_KodoDataCacheRuntimeStatistics_Object = MibTableColumn
kodoDataCacheRuntimeStatistics = _KodoDataCacheRuntimeStatistics_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1260, 1, 9),
    _KodoDataCacheRuntimeStatistics_Type()
)
kodoDataCacheRuntimeStatistics.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoDataCacheRuntimeStatistics.setStatus("current")
_KodoPersistenceUnitRuntimeTable_Object = MibTable
kodoPersistenceUnitRuntimeTable = _KodoPersistenceUnitRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1265)
)
if mibBuilder.loadTexts:
    kodoPersistenceUnitRuntimeTable.setStatus("current")
_KodoPersistenceUnitRuntimeEntry_Object = MibTableRow
kodoPersistenceUnitRuntimeEntry = _KodoPersistenceUnitRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1265, 1)
)
kodoPersistenceUnitRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "kodoPersistenceUnitRuntimeIndex"),
)
if mibBuilder.loadTexts:
    kodoPersistenceUnitRuntimeEntry.setStatus("current")
_KodoPersistenceUnitRuntimeIndex_Type = OctetString
_KodoPersistenceUnitRuntimeIndex_Object = MibTableColumn
kodoPersistenceUnitRuntimeIndex = _KodoPersistenceUnitRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1265, 1, 1),
    _KodoPersistenceUnitRuntimeIndex_Type()
)
kodoPersistenceUnitRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    kodoPersistenceUnitRuntimeIndex.setStatus("current")
_KodoPersistenceUnitRuntimeObjectName_Type = OctetString
_KodoPersistenceUnitRuntimeObjectName_Object = MibTableColumn
kodoPersistenceUnitRuntimeObjectName = _KodoPersistenceUnitRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1265, 1, 2),
    _KodoPersistenceUnitRuntimeObjectName_Type()
)
kodoPersistenceUnitRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoPersistenceUnitRuntimeObjectName.setStatus("current")
_KodoPersistenceUnitRuntimeType_Type = OctetString
_KodoPersistenceUnitRuntimeType_Object = MibTableColumn
kodoPersistenceUnitRuntimeType = _KodoPersistenceUnitRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1265, 1, 3),
    _KodoPersistenceUnitRuntimeType_Type()
)
kodoPersistenceUnitRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoPersistenceUnitRuntimeType.setStatus("current")
_KodoPersistenceUnitRuntimePersistenceUnitName_Type = OctetString
_KodoPersistenceUnitRuntimePersistenceUnitName_Object = MibTableColumn
kodoPersistenceUnitRuntimePersistenceUnitName = _KodoPersistenceUnitRuntimePersistenceUnitName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1265, 1, 4),
    _KodoPersistenceUnitRuntimePersistenceUnitName_Type()
)
kodoPersistenceUnitRuntimePersistenceUnitName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoPersistenceUnitRuntimePersistenceUnitName.setStatus("current")
_KodoPersistenceUnitRuntimeName_Type = OctetString
_KodoPersistenceUnitRuntimeName_Object = MibTableColumn
kodoPersistenceUnitRuntimeName = _KodoPersistenceUnitRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1265, 1, 5),
    _KodoPersistenceUnitRuntimeName_Type()
)
kodoPersistenceUnitRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoPersistenceUnitRuntimeName.setStatus("current")
_KodoQueryCacheRuntimeTable_Object = MibTable
kodoQueryCacheRuntimeTable = _KodoQueryCacheRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1270)
)
if mibBuilder.loadTexts:
    kodoQueryCacheRuntimeTable.setStatus("current")
_KodoQueryCacheRuntimeEntry_Object = MibTableRow
kodoQueryCacheRuntimeEntry = _KodoQueryCacheRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1270, 1)
)
kodoQueryCacheRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "kodoQueryCacheRuntimeIndex"),
)
if mibBuilder.loadTexts:
    kodoQueryCacheRuntimeEntry.setStatus("current")
_KodoQueryCacheRuntimeIndex_Type = OctetString
_KodoQueryCacheRuntimeIndex_Object = MibTableColumn
kodoQueryCacheRuntimeIndex = _KodoQueryCacheRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1270, 1, 1),
    _KodoQueryCacheRuntimeIndex_Type()
)
kodoQueryCacheRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    kodoQueryCacheRuntimeIndex.setStatus("current")
_KodoQueryCacheRuntimeObjectName_Type = OctetString
_KodoQueryCacheRuntimeObjectName_Object = MibTableColumn
kodoQueryCacheRuntimeObjectName = _KodoQueryCacheRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1270, 1, 2),
    _KodoQueryCacheRuntimeObjectName_Type()
)
kodoQueryCacheRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoQueryCacheRuntimeObjectName.setStatus("current")
_KodoQueryCacheRuntimeType_Type = OctetString
_KodoQueryCacheRuntimeType_Object = MibTableColumn
kodoQueryCacheRuntimeType = _KodoQueryCacheRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1270, 1, 3),
    _KodoQueryCacheRuntimeType_Type()
)
kodoQueryCacheRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoQueryCacheRuntimeType.setStatus("current")
_KodoQueryCacheRuntimeCacheHitCount_Type = Integer32
_KodoQueryCacheRuntimeCacheHitCount_Object = MibTableColumn
kodoQueryCacheRuntimeCacheHitCount = _KodoQueryCacheRuntimeCacheHitCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1270, 1, 4),
    _KodoQueryCacheRuntimeCacheHitCount_Type()
)
kodoQueryCacheRuntimeCacheHitCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoQueryCacheRuntimeCacheHitCount.setStatus("current")
_KodoQueryCacheRuntimeTotalCurrentEntries_Type = Integer32
_KodoQueryCacheRuntimeTotalCurrentEntries_Object = MibTableColumn
kodoQueryCacheRuntimeTotalCurrentEntries = _KodoQueryCacheRuntimeTotalCurrentEntries_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1270, 1, 5),
    _KodoQueryCacheRuntimeTotalCurrentEntries_Type()
)
kodoQueryCacheRuntimeTotalCurrentEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoQueryCacheRuntimeTotalCurrentEntries.setStatus("current")
_KodoQueryCacheRuntimeCacheMissCount_Type = Integer32
_KodoQueryCacheRuntimeCacheMissCount_Object = MibTableColumn
kodoQueryCacheRuntimeCacheMissCount = _KodoQueryCacheRuntimeCacheMissCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1270, 1, 6),
    _KodoQueryCacheRuntimeCacheMissCount_Type()
)
kodoQueryCacheRuntimeCacheMissCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoQueryCacheRuntimeCacheMissCount.setStatus("current")
_KodoQueryCacheRuntimeCacheHitRatio_Type = OctetString
_KodoQueryCacheRuntimeCacheHitRatio_Object = MibTableColumn
kodoQueryCacheRuntimeCacheHitRatio = _KodoQueryCacheRuntimeCacheHitRatio_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1270, 1, 7),
    _KodoQueryCacheRuntimeCacheHitRatio_Type()
)
kodoQueryCacheRuntimeCacheHitRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoQueryCacheRuntimeCacheHitRatio.setStatus("current")
_KodoQueryCacheRuntimeName_Type = OctetString
_KodoQueryCacheRuntimeName_Object = MibTableColumn
kodoQueryCacheRuntimeName = _KodoQueryCacheRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1270, 1, 8),
    _KodoQueryCacheRuntimeName_Type()
)
kodoQueryCacheRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoQueryCacheRuntimeName.setStatus("current")
_KodoQueryCacheRuntimeStatistics_Type = OctetString
_KodoQueryCacheRuntimeStatistics_Object = MibTableColumn
kodoQueryCacheRuntimeStatistics = _KodoQueryCacheRuntimeStatistics_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1270, 1, 9),
    _KodoQueryCacheRuntimeStatistics_Type()
)
kodoQueryCacheRuntimeStatistics.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoQueryCacheRuntimeStatistics.setStatus("current")
_KodoQueryCompilationCacheRuntimeTable_Object = MibTable
kodoQueryCompilationCacheRuntimeTable = _KodoQueryCompilationCacheRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1275)
)
if mibBuilder.loadTexts:
    kodoQueryCompilationCacheRuntimeTable.setStatus("current")
_KodoQueryCompilationCacheRuntimeEntry_Object = MibTableRow
kodoQueryCompilationCacheRuntimeEntry = _KodoQueryCompilationCacheRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1275, 1)
)
kodoQueryCompilationCacheRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "kodoQueryCompilationCacheRuntimeIndex"),
)
if mibBuilder.loadTexts:
    kodoQueryCompilationCacheRuntimeEntry.setStatus("current")
_KodoQueryCompilationCacheRuntimeIndex_Type = OctetString
_KodoQueryCompilationCacheRuntimeIndex_Object = MibTableColumn
kodoQueryCompilationCacheRuntimeIndex = _KodoQueryCompilationCacheRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1275, 1, 1),
    _KodoQueryCompilationCacheRuntimeIndex_Type()
)
kodoQueryCompilationCacheRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    kodoQueryCompilationCacheRuntimeIndex.setStatus("current")
_KodoQueryCompilationCacheRuntimeObjectName_Type = OctetString
_KodoQueryCompilationCacheRuntimeObjectName_Object = MibTableColumn
kodoQueryCompilationCacheRuntimeObjectName = _KodoQueryCompilationCacheRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1275, 1, 2),
    _KodoQueryCompilationCacheRuntimeObjectName_Type()
)
kodoQueryCompilationCacheRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoQueryCompilationCacheRuntimeObjectName.setStatus("current")
_KodoQueryCompilationCacheRuntimeType_Type = OctetString
_KodoQueryCompilationCacheRuntimeType_Object = MibTableColumn
kodoQueryCompilationCacheRuntimeType = _KodoQueryCompilationCacheRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1275, 1, 3),
    _KodoQueryCompilationCacheRuntimeType_Type()
)
kodoQueryCompilationCacheRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoQueryCompilationCacheRuntimeType.setStatus("current")
_KodoQueryCompilationCacheRuntimeTotalCurrentEntries_Type = Integer32
_KodoQueryCompilationCacheRuntimeTotalCurrentEntries_Object = MibTableColumn
kodoQueryCompilationCacheRuntimeTotalCurrentEntries = _KodoQueryCompilationCacheRuntimeTotalCurrentEntries_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1275, 1, 4),
    _KodoQueryCompilationCacheRuntimeTotalCurrentEntries_Type()
)
kodoQueryCompilationCacheRuntimeTotalCurrentEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoQueryCompilationCacheRuntimeTotalCurrentEntries.setStatus("current")
_KodoQueryCompilationCacheRuntimeName_Type = OctetString
_KodoQueryCompilationCacheRuntimeName_Object = MibTableColumn
kodoQueryCompilationCacheRuntimeName = _KodoQueryCompilationCacheRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1275, 1, 5),
    _KodoQueryCompilationCacheRuntimeName_Type()
)
kodoQueryCompilationCacheRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    kodoQueryCompilationCacheRuntimeName.setStatus("current")
_MailSessionRuntimeTable_Object = MibTable
mailSessionRuntimeTable = _MailSessionRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1280)
)
if mibBuilder.loadTexts:
    mailSessionRuntimeTable.setStatus("current")
_MailSessionRuntimeEntry_Object = MibTableRow
mailSessionRuntimeEntry = _MailSessionRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1280, 1)
)
mailSessionRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "mailSessionRuntimeIndex"),
)
if mibBuilder.loadTexts:
    mailSessionRuntimeEntry.setStatus("current")
_MailSessionRuntimeIndex_Type = OctetString
_MailSessionRuntimeIndex_Object = MibTableColumn
mailSessionRuntimeIndex = _MailSessionRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1280, 1, 1),
    _MailSessionRuntimeIndex_Type()
)
mailSessionRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mailSessionRuntimeIndex.setStatus("current")
_MailSessionRuntimeObjectName_Type = OctetString
_MailSessionRuntimeObjectName_Object = MibTableColumn
mailSessionRuntimeObjectName = _MailSessionRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1280, 1, 2),
    _MailSessionRuntimeObjectName_Type()
)
mailSessionRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mailSessionRuntimeObjectName.setStatus("current")
_MailSessionRuntimeType_Type = OctetString
_MailSessionRuntimeType_Object = MibTableColumn
mailSessionRuntimeType = _MailSessionRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1280, 1, 3),
    _MailSessionRuntimeType_Type()
)
mailSessionRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mailSessionRuntimeType.setStatus("current")
_MailSessionRuntimeName_Type = OctetString
_MailSessionRuntimeName_Object = MibTableColumn
mailSessionRuntimeName = _MailSessionRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1280, 1, 4),
    _MailSessionRuntimeName_Type()
)
mailSessionRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mailSessionRuntimeName.setStatus("current")
_MessageDrivenControlEJBRuntimeTable_Object = MibTable
messageDrivenControlEJBRuntimeTable = _MessageDrivenControlEJBRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1285)
)
if mibBuilder.loadTexts:
    messageDrivenControlEJBRuntimeTable.setStatus("current")
_MessageDrivenControlEJBRuntimeEntry_Object = MibTableRow
messageDrivenControlEJBRuntimeEntry = _MessageDrivenControlEJBRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1285, 1)
)
messageDrivenControlEJBRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "messageDrivenControlEJBRuntimeIndex"),
)
if mibBuilder.loadTexts:
    messageDrivenControlEJBRuntimeEntry.setStatus("current")
_MessageDrivenControlEJBRuntimeIndex_Type = OctetString
_MessageDrivenControlEJBRuntimeIndex_Object = MibTableColumn
messageDrivenControlEJBRuntimeIndex = _MessageDrivenControlEJBRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1285, 1, 1),
    _MessageDrivenControlEJBRuntimeIndex_Type()
)
messageDrivenControlEJBRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    messageDrivenControlEJBRuntimeIndex.setStatus("current")
_MessageDrivenControlEJBRuntimeObjectName_Type = OctetString
_MessageDrivenControlEJBRuntimeObjectName_Object = MibTableColumn
messageDrivenControlEJBRuntimeObjectName = _MessageDrivenControlEJBRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1285, 1, 2),
    _MessageDrivenControlEJBRuntimeObjectName_Type()
)
messageDrivenControlEJBRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messageDrivenControlEJBRuntimeObjectName.setStatus("current")
_MessageDrivenControlEJBRuntimeType_Type = OctetString
_MessageDrivenControlEJBRuntimeType_Object = MibTableColumn
messageDrivenControlEJBRuntimeType = _MessageDrivenControlEJBRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1285, 1, 3),
    _MessageDrivenControlEJBRuntimeType_Type()
)
messageDrivenControlEJBRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messageDrivenControlEJBRuntimeType.setStatus("current")
_MessageDrivenControlEJBRuntimeName_Type = OctetString
_MessageDrivenControlEJBRuntimeName_Object = MibTableColumn
messageDrivenControlEJBRuntimeName = _MessageDrivenControlEJBRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1285, 1, 4),
    _MessageDrivenControlEJBRuntimeName_Type()
)
messageDrivenControlEJBRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    messageDrivenControlEJBRuntimeName.setStatus("current")
_MigratableServiceCoordinatorRuntimeTable_Object = MibTable
migratableServiceCoordinatorRuntimeTable = _MigratableServiceCoordinatorRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1290)
)
if mibBuilder.loadTexts:
    migratableServiceCoordinatorRuntimeTable.setStatus("current")
_MigratableServiceCoordinatorRuntimeEntry_Object = MibTableRow
migratableServiceCoordinatorRuntimeEntry = _MigratableServiceCoordinatorRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1290, 1)
)
migratableServiceCoordinatorRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "migratableServiceCoordinatorRuntimeIndex"),
)
if mibBuilder.loadTexts:
    migratableServiceCoordinatorRuntimeEntry.setStatus("current")
_MigratableServiceCoordinatorRuntimeIndex_Type = OctetString
_MigratableServiceCoordinatorRuntimeIndex_Object = MibTableColumn
migratableServiceCoordinatorRuntimeIndex = _MigratableServiceCoordinatorRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1290, 1, 1),
    _MigratableServiceCoordinatorRuntimeIndex_Type()
)
migratableServiceCoordinatorRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    migratableServiceCoordinatorRuntimeIndex.setStatus("current")
_MigratableServiceCoordinatorRuntimeObjectName_Type = OctetString
_MigratableServiceCoordinatorRuntimeObjectName_Object = MibTableColumn
migratableServiceCoordinatorRuntimeObjectName = _MigratableServiceCoordinatorRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1290, 1, 2),
    _MigratableServiceCoordinatorRuntimeObjectName_Type()
)
migratableServiceCoordinatorRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    migratableServiceCoordinatorRuntimeObjectName.setStatus("current")
_MigratableServiceCoordinatorRuntimeType_Type = OctetString
_MigratableServiceCoordinatorRuntimeType_Object = MibTableColumn
migratableServiceCoordinatorRuntimeType = _MigratableServiceCoordinatorRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1290, 1, 3),
    _MigratableServiceCoordinatorRuntimeType_Type()
)
migratableServiceCoordinatorRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    migratableServiceCoordinatorRuntimeType.setStatus("current")
_MigratableServiceCoordinatorRuntimeName_Type = OctetString
_MigratableServiceCoordinatorRuntimeName_Object = MibTableColumn
migratableServiceCoordinatorRuntimeName = _MigratableServiceCoordinatorRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1290, 1, 4),
    _MigratableServiceCoordinatorRuntimeName_Type()
)
migratableServiceCoordinatorRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    migratableServiceCoordinatorRuntimeName.setStatus("current")
_MigrationDataRuntimeTable_Object = MibTable
migrationDataRuntimeTable = _MigrationDataRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1295)
)
if mibBuilder.loadTexts:
    migrationDataRuntimeTable.setStatus("current")
_MigrationDataRuntimeEntry_Object = MibTableRow
migrationDataRuntimeEntry = _MigrationDataRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1295, 1)
)
migrationDataRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "migrationDataRuntimeIndex"),
)
if mibBuilder.loadTexts:
    migrationDataRuntimeEntry.setStatus("current")
_MigrationDataRuntimeIndex_Type = OctetString
_MigrationDataRuntimeIndex_Object = MibTableColumn
migrationDataRuntimeIndex = _MigrationDataRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1295, 1, 1),
    _MigrationDataRuntimeIndex_Type()
)
migrationDataRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    migrationDataRuntimeIndex.setStatus("current")
_MigrationDataRuntimeObjectName_Type = OctetString
_MigrationDataRuntimeObjectName_Object = MibTableColumn
migrationDataRuntimeObjectName = _MigrationDataRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1295, 1, 2),
    _MigrationDataRuntimeObjectName_Type()
)
migrationDataRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    migrationDataRuntimeObjectName.setStatus("current")
_MigrationDataRuntimeType_Type = OctetString
_MigrationDataRuntimeType_Object = MibTableColumn
migrationDataRuntimeType = _MigrationDataRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1295, 1, 3),
    _MigrationDataRuntimeType_Type()
)
migrationDataRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    migrationDataRuntimeType.setStatus("current")
_MigrationDataRuntimeStatus_Type = Integer32
_MigrationDataRuntimeStatus_Object = MibTableColumn
migrationDataRuntimeStatus = _MigrationDataRuntimeStatus_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1295, 1, 4),
    _MigrationDataRuntimeStatus_Type()
)
migrationDataRuntimeStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    migrationDataRuntimeStatus.setStatus("current")
_MigrationDataRuntimeMigrationStartTime_Type = Counter64
_MigrationDataRuntimeMigrationStartTime_Object = MibTableColumn
migrationDataRuntimeMigrationStartTime = _MigrationDataRuntimeMigrationStartTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1295, 1, 5),
    _MigrationDataRuntimeMigrationStartTime_Type()
)
migrationDataRuntimeMigrationStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    migrationDataRuntimeMigrationStartTime.setStatus("current")
_MigrationDataRuntimeClusterMasterName_Type = OctetString
_MigrationDataRuntimeClusterMasterName_Object = MibTableColumn
migrationDataRuntimeClusterMasterName = _MigrationDataRuntimeClusterMasterName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1295, 1, 6),
    _MigrationDataRuntimeClusterMasterName_Type()
)
migrationDataRuntimeClusterMasterName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    migrationDataRuntimeClusterMasterName.setStatus("current")
_MigrationDataRuntimeServerName_Type = OctetString
_MigrationDataRuntimeServerName_Object = MibTableColumn
migrationDataRuntimeServerName = _MigrationDataRuntimeServerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1295, 1, 7),
    _MigrationDataRuntimeServerName_Type()
)
migrationDataRuntimeServerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    migrationDataRuntimeServerName.setStatus("current")
_MigrationDataRuntimeMachineMigratedFrom_Type = OctetString
_MigrationDataRuntimeMachineMigratedFrom_Object = MibTableColumn
migrationDataRuntimeMachineMigratedFrom = _MigrationDataRuntimeMachineMigratedFrom_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1295, 1, 8),
    _MigrationDataRuntimeMachineMigratedFrom_Type()
)
migrationDataRuntimeMachineMigratedFrom.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    migrationDataRuntimeMachineMigratedFrom.setStatus("current")
_MigrationDataRuntimeMigrationEndTime_Type = Counter64
_MigrationDataRuntimeMigrationEndTime_Object = MibTableColumn
migrationDataRuntimeMigrationEndTime = _MigrationDataRuntimeMigrationEndTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1295, 1, 9),
    _MigrationDataRuntimeMigrationEndTime_Type()
)
migrationDataRuntimeMigrationEndTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    migrationDataRuntimeMigrationEndTime.setStatus("current")
_MigrationDataRuntimeClusterName_Type = OctetString
_MigrationDataRuntimeClusterName_Object = MibTableColumn
migrationDataRuntimeClusterName = _MigrationDataRuntimeClusterName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1295, 1, 10),
    _MigrationDataRuntimeClusterName_Type()
)
migrationDataRuntimeClusterName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    migrationDataRuntimeClusterName.setStatus("current")
_MigrationDataRuntimeName_Type = OctetString
_MigrationDataRuntimeName_Object = MibTableColumn
migrationDataRuntimeName = _MigrationDataRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1295, 1, 11),
    _MigrationDataRuntimeName_Type()
)
migrationDataRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    migrationDataRuntimeName.setStatus("current")
_MigrationDataRuntimeMachineMigratedTo_Type = OctetString
_MigrationDataRuntimeMachineMigratedTo_Object = MibTableColumn
migrationDataRuntimeMachineMigratedTo = _MigrationDataRuntimeMachineMigratedTo_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1295, 1, 12),
    _MigrationDataRuntimeMachineMigratedTo_Type()
)
migrationDataRuntimeMachineMigratedTo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    migrationDataRuntimeMachineMigratedTo.setStatus("current")
_MigrationTaskRuntimeTable_Object = MibTable
migrationTaskRuntimeTable = _MigrationTaskRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1300)
)
if mibBuilder.loadTexts:
    migrationTaskRuntimeTable.setStatus("current")
_MigrationTaskRuntimeEntry_Object = MibTableRow
migrationTaskRuntimeEntry = _MigrationTaskRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1300, 1)
)
migrationTaskRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "migrationTaskRuntimeIndex"),
)
if mibBuilder.loadTexts:
    migrationTaskRuntimeEntry.setStatus("current")
_MigrationTaskRuntimeIndex_Type = OctetString
_MigrationTaskRuntimeIndex_Object = MibTableColumn
migrationTaskRuntimeIndex = _MigrationTaskRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1300, 1, 1),
    _MigrationTaskRuntimeIndex_Type()
)
migrationTaskRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    migrationTaskRuntimeIndex.setStatus("current")
_MigrationTaskRuntimeObjectName_Type = OctetString
_MigrationTaskRuntimeObjectName_Object = MibTableColumn
migrationTaskRuntimeObjectName = _MigrationTaskRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1300, 1, 2),
    _MigrationTaskRuntimeObjectName_Type()
)
migrationTaskRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    migrationTaskRuntimeObjectName.setStatus("current")
_MigrationTaskRuntimeType_Type = OctetString
_MigrationTaskRuntimeType_Object = MibTableColumn
migrationTaskRuntimeType = _MigrationTaskRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1300, 1, 3),
    _MigrationTaskRuntimeType_Type()
)
migrationTaskRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    migrationTaskRuntimeType.setStatus("current")
_MigrationTaskRuntimeName_Type = OctetString
_MigrationTaskRuntimeName_Object = MibTableColumn
migrationTaskRuntimeName = _MigrationTaskRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1300, 1, 4),
    _MigrationTaskRuntimeName_Type()
)
migrationTaskRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    migrationTaskRuntimeName.setStatus("current")
_PsAssemblyRuntimeTable_Object = MibTable
psAssemblyRuntimeTable = _PsAssemblyRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1305)
)
if mibBuilder.loadTexts:
    psAssemblyRuntimeTable.setStatus("current")
_PsAssemblyRuntimeEntry_Object = MibTableRow
psAssemblyRuntimeEntry = _PsAssemblyRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1305, 1)
)
psAssemblyRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "psAssemblyRuntimeIndex"),
)
if mibBuilder.loadTexts:
    psAssemblyRuntimeEntry.setStatus("current")
_PsAssemblyRuntimeIndex_Type = OctetString
_PsAssemblyRuntimeIndex_Object = MibTableColumn
psAssemblyRuntimeIndex = _PsAssemblyRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1305, 1, 1),
    _PsAssemblyRuntimeIndex_Type()
)
psAssemblyRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    psAssemblyRuntimeIndex.setStatus("current")
_PsAssemblyRuntimeObjectName_Type = OctetString
_PsAssemblyRuntimeObjectName_Object = MibTableColumn
psAssemblyRuntimeObjectName = _PsAssemblyRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1305, 1, 2),
    _PsAssemblyRuntimeObjectName_Type()
)
psAssemblyRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    psAssemblyRuntimeObjectName.setStatus("current")
_PsAssemblyRuntimeType_Type = OctetString
_PsAssemblyRuntimeType_Object = MibTableColumn
psAssemblyRuntimeType = _PsAssemblyRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1305, 1, 3),
    _PsAssemblyRuntimeType_Type()
)
psAssemblyRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    psAssemblyRuntimeType.setStatus("current")
_PsAssemblyRuntimeMapEntries_Type = OctetString
_PsAssemblyRuntimeMapEntries_Object = MibTableColumn
psAssemblyRuntimeMapEntries = _PsAssemblyRuntimeMapEntries_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1305, 1, 4),
    _PsAssemblyRuntimeMapEntries_Type()
)
psAssemblyRuntimeMapEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    psAssemblyRuntimeMapEntries.setStatus("current")
_PsAssemblyRuntimeName_Type = OctetString
_PsAssemblyRuntimeName_Object = MibTableColumn
psAssemblyRuntimeName = _PsAssemblyRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1305, 1, 5),
    _PsAssemblyRuntimeName_Type()
)
psAssemblyRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    psAssemblyRuntimeName.setStatus("current")
_PageFlowActionRuntimeTable_Object = MibTable
pageFlowActionRuntimeTable = _PageFlowActionRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1310)
)
if mibBuilder.loadTexts:
    pageFlowActionRuntimeTable.setStatus("current")
_PageFlowActionRuntimeEntry_Object = MibTableRow
pageFlowActionRuntimeEntry = _PageFlowActionRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1310, 1)
)
pageFlowActionRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "pageFlowActionRuntimeIndex"),
)
if mibBuilder.loadTexts:
    pageFlowActionRuntimeEntry.setStatus("current")
_PageFlowActionRuntimeIndex_Type = OctetString
_PageFlowActionRuntimeIndex_Object = MibTableColumn
pageFlowActionRuntimeIndex = _PageFlowActionRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1310, 1, 1),
    _PageFlowActionRuntimeIndex_Type()
)
pageFlowActionRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pageFlowActionRuntimeIndex.setStatus("current")
_PageFlowActionRuntimeObjectName_Type = OctetString
_PageFlowActionRuntimeObjectName_Object = MibTableColumn
pageFlowActionRuntimeObjectName = _PageFlowActionRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1310, 1, 2),
    _PageFlowActionRuntimeObjectName_Type()
)
pageFlowActionRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pageFlowActionRuntimeObjectName.setStatus("current")
_PageFlowActionRuntimeType_Type = OctetString
_PageFlowActionRuntimeType_Object = MibTableColumn
pageFlowActionRuntimeType = _PageFlowActionRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1310, 1, 3),
    _PageFlowActionRuntimeType_Type()
)
pageFlowActionRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pageFlowActionRuntimeType.setStatus("current")
_PageFlowActionRuntimeName_Type = OctetString
_PageFlowActionRuntimeName_Object = MibTableColumn
pageFlowActionRuntimeName = _PageFlowActionRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1310, 1, 4),
    _PageFlowActionRuntimeName_Type()
)
pageFlowActionRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pageFlowActionRuntimeName.setStatus("current")
_PageFlowRuntimeTable_Object = MibTable
pageFlowRuntimeTable = _PageFlowRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1315)
)
if mibBuilder.loadTexts:
    pageFlowRuntimeTable.setStatus("current")
_PageFlowRuntimeEntry_Object = MibTableRow
pageFlowRuntimeEntry = _PageFlowRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1315, 1)
)
pageFlowRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "pageFlowRuntimeIndex"),
)
if mibBuilder.loadTexts:
    pageFlowRuntimeEntry.setStatus("current")
_PageFlowRuntimeIndex_Type = OctetString
_PageFlowRuntimeIndex_Object = MibTableColumn
pageFlowRuntimeIndex = _PageFlowRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1315, 1, 1),
    _PageFlowRuntimeIndex_Type()
)
pageFlowRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pageFlowRuntimeIndex.setStatus("current")
_PageFlowRuntimeObjectName_Type = OctetString
_PageFlowRuntimeObjectName_Object = MibTableColumn
pageFlowRuntimeObjectName = _PageFlowRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1315, 1, 2),
    _PageFlowRuntimeObjectName_Type()
)
pageFlowRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pageFlowRuntimeObjectName.setStatus("current")
_PageFlowRuntimeType_Type = OctetString
_PageFlowRuntimeType_Object = MibTableColumn
pageFlowRuntimeType = _PageFlowRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1315, 1, 3),
    _PageFlowRuntimeType_Type()
)
pageFlowRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pageFlowRuntimeType.setStatus("current")
_PageFlowRuntimeName_Type = OctetString
_PageFlowRuntimeName_Object = MibTableColumn
pageFlowRuntimeName = _PageFlowRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1315, 1, 4),
    _PageFlowRuntimeName_Type()
)
pageFlowRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pageFlowRuntimeName.setStatus("current")
_PageFlowsRuntimeTable_Object = MibTable
pageFlowsRuntimeTable = _PageFlowsRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1320)
)
if mibBuilder.loadTexts:
    pageFlowsRuntimeTable.setStatus("current")
_PageFlowsRuntimeEntry_Object = MibTableRow
pageFlowsRuntimeEntry = _PageFlowsRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1320, 1)
)
pageFlowsRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "pageFlowsRuntimeIndex"),
)
if mibBuilder.loadTexts:
    pageFlowsRuntimeEntry.setStatus("current")
_PageFlowsRuntimeIndex_Type = OctetString
_PageFlowsRuntimeIndex_Object = MibTableColumn
pageFlowsRuntimeIndex = _PageFlowsRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1320, 1, 1),
    _PageFlowsRuntimeIndex_Type()
)
pageFlowsRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pageFlowsRuntimeIndex.setStatus("current")
_PageFlowsRuntimeObjectName_Type = OctetString
_PageFlowsRuntimeObjectName_Object = MibTableColumn
pageFlowsRuntimeObjectName = _PageFlowsRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1320, 1, 2),
    _PageFlowsRuntimeObjectName_Type()
)
pageFlowsRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pageFlowsRuntimeObjectName.setStatus("current")
_PageFlowsRuntimeType_Type = OctetString
_PageFlowsRuntimeType_Object = MibTableColumn
pageFlowsRuntimeType = _PageFlowsRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1320, 1, 3),
    _PageFlowsRuntimeType_Type()
)
pageFlowsRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pageFlowsRuntimeType.setStatus("current")
_PageFlowsRuntimeName_Type = OctetString
_PageFlowsRuntimeName_Object = MibTableColumn
pageFlowsRuntimeName = _PageFlowsRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1320, 1, 4),
    _PageFlowsRuntimeName_Type()
)
pageFlowsRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pageFlowsRuntimeName.setStatus("current")
_PathServiceRuntimeTable_Object = MibTable
pathServiceRuntimeTable = _PathServiceRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1325)
)
if mibBuilder.loadTexts:
    pathServiceRuntimeTable.setStatus("current")
_PathServiceRuntimeEntry_Object = MibTableRow
pathServiceRuntimeEntry = _PathServiceRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1325, 1)
)
pathServiceRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "pathServiceRuntimeIndex"),
)
if mibBuilder.loadTexts:
    pathServiceRuntimeEntry.setStatus("current")
_PathServiceRuntimeIndex_Type = OctetString
_PathServiceRuntimeIndex_Object = MibTableColumn
pathServiceRuntimeIndex = _PathServiceRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1325, 1, 1),
    _PathServiceRuntimeIndex_Type()
)
pathServiceRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pathServiceRuntimeIndex.setStatus("current")
_PathServiceRuntimeObjectName_Type = OctetString
_PathServiceRuntimeObjectName_Object = MibTableColumn
pathServiceRuntimeObjectName = _PathServiceRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1325, 1, 2),
    _PathServiceRuntimeObjectName_Type()
)
pathServiceRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathServiceRuntimeObjectName.setStatus("current")
_PathServiceRuntimeType_Type = OctetString
_PathServiceRuntimeType_Object = MibTableColumn
pathServiceRuntimeType = _PathServiceRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1325, 1, 3),
    _PathServiceRuntimeType_Type()
)
pathServiceRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathServiceRuntimeType.setStatus("current")
_PathServiceRuntimeName_Type = OctetString
_PathServiceRuntimeName_Object = MibTableColumn
pathServiceRuntimeName = _PathServiceRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1325, 1, 4),
    _PathServiceRuntimeName_Type()
)
pathServiceRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathServiceRuntimeName.setStatus("current")
_RealmRuntimeTable_Object = MibTable
realmRuntimeTable = _RealmRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1330)
)
if mibBuilder.loadTexts:
    realmRuntimeTable.setStatus("current")
_RealmRuntimeEntry_Object = MibTableRow
realmRuntimeEntry = _RealmRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1330, 1)
)
realmRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "realmRuntimeIndex"),
)
if mibBuilder.loadTexts:
    realmRuntimeEntry.setStatus("current")
_RealmRuntimeIndex_Type = OctetString
_RealmRuntimeIndex_Object = MibTableColumn
realmRuntimeIndex = _RealmRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1330, 1, 1),
    _RealmRuntimeIndex_Type()
)
realmRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    realmRuntimeIndex.setStatus("current")
_RealmRuntimeObjectName_Type = OctetString
_RealmRuntimeObjectName_Object = MibTableColumn
realmRuntimeObjectName = _RealmRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1330, 1, 2),
    _RealmRuntimeObjectName_Type()
)
realmRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    realmRuntimeObjectName.setStatus("current")
_RealmRuntimeType_Type = OctetString
_RealmRuntimeType_Object = MibTableColumn
realmRuntimeType = _RealmRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1330, 1, 3),
    _RealmRuntimeType_Type()
)
realmRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    realmRuntimeType.setStatus("current")
_RealmRuntimeName_Type = OctetString
_RealmRuntimeName_Object = MibTableColumn
realmRuntimeName = _RealmRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1330, 1, 4),
    _RealmRuntimeName_Type()
)
realmRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    realmRuntimeName.setStatus("current")
_SafRuntimeTable_Object = MibTable
safRuntimeTable = _SafRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1335)
)
if mibBuilder.loadTexts:
    safRuntimeTable.setStatus("current")
_SafRuntimeEntry_Object = MibTableRow
safRuntimeEntry = _SafRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1335, 1)
)
safRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "safRuntimeIndex"),
)
if mibBuilder.loadTexts:
    safRuntimeEntry.setStatus("current")
_SafRuntimeIndex_Type = OctetString
_SafRuntimeIndex_Object = MibTableColumn
safRuntimeIndex = _SafRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1335, 1, 1),
    _SafRuntimeIndex_Type()
)
safRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    safRuntimeIndex.setStatus("current")
_SafRuntimeObjectName_Type = OctetString
_SafRuntimeObjectName_Object = MibTableColumn
safRuntimeObjectName = _SafRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1335, 1, 2),
    _SafRuntimeObjectName_Type()
)
safRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRuntimeObjectName.setStatus("current")
_SafRuntimeType_Type = OctetString
_SafRuntimeType_Object = MibTableColumn
safRuntimeType = _SafRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1335, 1, 3),
    _SafRuntimeType_Type()
)
safRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRuntimeType.setStatus("current")
_SafRuntimeName_Type = OctetString
_SafRuntimeName_Object = MibTableColumn
safRuntimeName = _SafRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1335, 1, 4),
    _SafRuntimeName_Type()
)
safRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    safRuntimeName.setStatus("current")
_WlssnmpAgentRuntimeTable_Object = MibTable
wlssnmpAgentRuntimeTable = _WlssnmpAgentRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1340)
)
if mibBuilder.loadTexts:
    wlssnmpAgentRuntimeTable.setStatus("current")
_WlssnmpAgentRuntimeEntry_Object = MibTableRow
wlssnmpAgentRuntimeEntry = _WlssnmpAgentRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1340, 1)
)
wlssnmpAgentRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wlssnmpAgentRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wlssnmpAgentRuntimeEntry.setStatus("current")
_WlssnmpAgentRuntimeIndex_Type = OctetString
_WlssnmpAgentRuntimeIndex_Object = MibTableColumn
wlssnmpAgentRuntimeIndex = _WlssnmpAgentRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1340, 1, 1),
    _WlssnmpAgentRuntimeIndex_Type()
)
wlssnmpAgentRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wlssnmpAgentRuntimeIndex.setStatus("current")
_WlssnmpAgentRuntimeObjectName_Type = OctetString
_WlssnmpAgentRuntimeObjectName_Object = MibTableColumn
wlssnmpAgentRuntimeObjectName = _WlssnmpAgentRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1340, 1, 2),
    _WlssnmpAgentRuntimeObjectName_Type()
)
wlssnmpAgentRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentRuntimeObjectName.setStatus("current")
_WlssnmpAgentRuntimeType_Type = OctetString
_WlssnmpAgentRuntimeType_Object = MibTableColumn
wlssnmpAgentRuntimeType = _WlssnmpAgentRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1340, 1, 3),
    _WlssnmpAgentRuntimeType_Type()
)
wlssnmpAgentRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentRuntimeType.setStatus("current")
_WlssnmpAgentRuntimeUDPListenPort_Type = Integer32
_WlssnmpAgentRuntimeUDPListenPort_Object = MibTableColumn
wlssnmpAgentRuntimeUDPListenPort = _WlssnmpAgentRuntimeUDPListenPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1340, 1, 4),
    _WlssnmpAgentRuntimeUDPListenPort_Type()
)
wlssnmpAgentRuntimeUDPListenPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentRuntimeUDPListenPort.setStatus("current")
_WlssnmpAgentRuntimeLogMessageTrapCount_Type = Counter64
_WlssnmpAgentRuntimeLogMessageTrapCount_Object = MibTableColumn
wlssnmpAgentRuntimeLogMessageTrapCount = _WlssnmpAgentRuntimeLogMessageTrapCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1340, 1, 5),
    _WlssnmpAgentRuntimeLogMessageTrapCount_Type()
)
wlssnmpAgentRuntimeLogMessageTrapCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentRuntimeLogMessageTrapCount.setStatus("current")
_WlssnmpAgentRuntimeFailedAuthorizationCount_Type = Integer32
_WlssnmpAgentRuntimeFailedAuthorizationCount_Object = MibTableColumn
wlssnmpAgentRuntimeFailedAuthorizationCount = _WlssnmpAgentRuntimeFailedAuthorizationCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1340, 1, 6),
    _WlssnmpAgentRuntimeFailedAuthorizationCount_Type()
)
wlssnmpAgentRuntimeFailedAuthorizationCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentRuntimeFailedAuthorizationCount.setStatus("current")
_WlssnmpAgentRuntimeRunning_Type = OctetString
_WlssnmpAgentRuntimeRunning_Object = MibTableColumn
wlssnmpAgentRuntimeRunning = _WlssnmpAgentRuntimeRunning_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1340, 1, 7),
    _WlssnmpAgentRuntimeRunning_Type()
)
wlssnmpAgentRuntimeRunning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentRuntimeRunning.setStatus("current")
_WlssnmpAgentRuntimeStringMonitorTrapCount_Type = Counter64
_WlssnmpAgentRuntimeStringMonitorTrapCount_Object = MibTableColumn
wlssnmpAgentRuntimeStringMonitorTrapCount = _WlssnmpAgentRuntimeStringMonitorTrapCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1340, 1, 8),
    _WlssnmpAgentRuntimeStringMonitorTrapCount_Type()
)
wlssnmpAgentRuntimeStringMonitorTrapCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentRuntimeStringMonitorTrapCount.setStatus("current")
_WlssnmpAgentRuntimeMonitorTrapCount_Type = Counter64
_WlssnmpAgentRuntimeMonitorTrapCount_Object = MibTableColumn
wlssnmpAgentRuntimeMonitorTrapCount = _WlssnmpAgentRuntimeMonitorTrapCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1340, 1, 9),
    _WlssnmpAgentRuntimeMonitorTrapCount_Type()
)
wlssnmpAgentRuntimeMonitorTrapCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentRuntimeMonitorTrapCount.setStatus("current")
_WlssnmpAgentRuntimeMasterAgentXPort_Type = Integer32
_WlssnmpAgentRuntimeMasterAgentXPort_Object = MibTableColumn
wlssnmpAgentRuntimeMasterAgentXPort = _WlssnmpAgentRuntimeMasterAgentXPort_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1340, 1, 10),
    _WlssnmpAgentRuntimeMasterAgentXPort_Type()
)
wlssnmpAgentRuntimeMasterAgentXPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentRuntimeMasterAgentXPort.setStatus("current")
_WlssnmpAgentRuntimeGaugeMonitorTrapCount_Type = Counter64
_WlssnmpAgentRuntimeGaugeMonitorTrapCount_Object = MibTableColumn
wlssnmpAgentRuntimeGaugeMonitorTrapCount = _WlssnmpAgentRuntimeGaugeMonitorTrapCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1340, 1, 11),
    _WlssnmpAgentRuntimeGaugeMonitorTrapCount_Type()
)
wlssnmpAgentRuntimeGaugeMonitorTrapCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentRuntimeGaugeMonitorTrapCount.setStatus("current")
_WlssnmpAgentRuntimeServerStopTrapCount_Type = Counter64
_WlssnmpAgentRuntimeServerStopTrapCount_Object = MibTableColumn
wlssnmpAgentRuntimeServerStopTrapCount = _WlssnmpAgentRuntimeServerStopTrapCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1340, 1, 12),
    _WlssnmpAgentRuntimeServerStopTrapCount_Type()
)
wlssnmpAgentRuntimeServerStopTrapCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentRuntimeServerStopTrapCount.setStatus("current")
_WlssnmpAgentRuntimeAttributeChangeTrapCount_Type = Counter64
_WlssnmpAgentRuntimeAttributeChangeTrapCount_Object = MibTableColumn
wlssnmpAgentRuntimeAttributeChangeTrapCount = _WlssnmpAgentRuntimeAttributeChangeTrapCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1340, 1, 13),
    _WlssnmpAgentRuntimeAttributeChangeTrapCount_Type()
)
wlssnmpAgentRuntimeAttributeChangeTrapCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentRuntimeAttributeChangeTrapCount.setStatus("current")
_WlssnmpAgentRuntimeServerStartTrapCount_Type = Counter64
_WlssnmpAgentRuntimeServerStartTrapCount_Object = MibTableColumn
wlssnmpAgentRuntimeServerStartTrapCount = _WlssnmpAgentRuntimeServerStartTrapCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1340, 1, 14),
    _WlssnmpAgentRuntimeServerStartTrapCount_Type()
)
wlssnmpAgentRuntimeServerStartTrapCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentRuntimeServerStartTrapCount.setStatus("current")
_WlssnmpAgentRuntimeFailedAuthenticationCount_Type = Integer32
_WlssnmpAgentRuntimeFailedAuthenticationCount_Object = MibTableColumn
wlssnmpAgentRuntimeFailedAuthenticationCount = _WlssnmpAgentRuntimeFailedAuthenticationCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1340, 1, 15),
    _WlssnmpAgentRuntimeFailedAuthenticationCount_Type()
)
wlssnmpAgentRuntimeFailedAuthenticationCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentRuntimeFailedAuthenticationCount.setStatus("current")
_WlssnmpAgentRuntimeCounterMonitorTrapCount_Type = Counter64
_WlssnmpAgentRuntimeCounterMonitorTrapCount_Object = MibTableColumn
wlssnmpAgentRuntimeCounterMonitorTrapCount = _WlssnmpAgentRuntimeCounterMonitorTrapCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1340, 1, 16),
    _WlssnmpAgentRuntimeCounterMonitorTrapCount_Type()
)
wlssnmpAgentRuntimeCounterMonitorTrapCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentRuntimeCounterMonitorTrapCount.setStatus("current")
_WlssnmpAgentRuntimeName_Type = OctetString
_WlssnmpAgentRuntimeName_Object = MibTableColumn
wlssnmpAgentRuntimeName = _WlssnmpAgentRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1340, 1, 17),
    _WlssnmpAgentRuntimeName_Type()
)
wlssnmpAgentRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentRuntimeName.setStatus("current")
_WlssnmpAgentRuntimeFailedEncryptionCount_Type = Integer32
_WlssnmpAgentRuntimeFailedEncryptionCount_Object = MibTableColumn
wlssnmpAgentRuntimeFailedEncryptionCount = _WlssnmpAgentRuntimeFailedEncryptionCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1340, 1, 18),
    _WlssnmpAgentRuntimeFailedEncryptionCount_Type()
)
wlssnmpAgentRuntimeFailedEncryptionCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentRuntimeFailedEncryptionCount.setStatus("current")
_WlssnmpAgentRuntimeSNMPAgentName_Type = OctetString
_WlssnmpAgentRuntimeSNMPAgentName_Object = MibTableColumn
wlssnmpAgentRuntimeSNMPAgentName = _WlssnmpAgentRuntimeSNMPAgentName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1340, 1, 19),
    _WlssnmpAgentRuntimeSNMPAgentName_Type()
)
wlssnmpAgentRuntimeSNMPAgentName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wlssnmpAgentRuntimeSNMPAgentName.setStatus("current")
_ServerLifeCycleTaskRuntimeTable_Object = MibTable
serverLifeCycleTaskRuntimeTable = _ServerLifeCycleTaskRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1345)
)
if mibBuilder.loadTexts:
    serverLifeCycleTaskRuntimeTable.setStatus("current")
_ServerLifeCycleTaskRuntimeEntry_Object = MibTableRow
serverLifeCycleTaskRuntimeEntry = _ServerLifeCycleTaskRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1345, 1)
)
serverLifeCycleTaskRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "serverLifeCycleTaskRuntimeIndex"),
)
if mibBuilder.loadTexts:
    serverLifeCycleTaskRuntimeEntry.setStatus("current")
_ServerLifeCycleTaskRuntimeIndex_Type = OctetString
_ServerLifeCycleTaskRuntimeIndex_Object = MibTableColumn
serverLifeCycleTaskRuntimeIndex = _ServerLifeCycleTaskRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1345, 1, 1),
    _ServerLifeCycleTaskRuntimeIndex_Type()
)
serverLifeCycleTaskRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    serverLifeCycleTaskRuntimeIndex.setStatus("current")
_ServerLifeCycleTaskRuntimeObjectName_Type = OctetString
_ServerLifeCycleTaskRuntimeObjectName_Object = MibTableColumn
serverLifeCycleTaskRuntimeObjectName = _ServerLifeCycleTaskRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1345, 1, 2),
    _ServerLifeCycleTaskRuntimeObjectName_Type()
)
serverLifeCycleTaskRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLifeCycleTaskRuntimeObjectName.setStatus("current")
_ServerLifeCycleTaskRuntimeType_Type = OctetString
_ServerLifeCycleTaskRuntimeType_Object = MibTableColumn
serverLifeCycleTaskRuntimeType = _ServerLifeCycleTaskRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1345, 1, 3),
    _ServerLifeCycleTaskRuntimeType_Type()
)
serverLifeCycleTaskRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLifeCycleTaskRuntimeType.setStatus("current")
_ServerLifeCycleTaskRuntimeStatus_Type = OctetString
_ServerLifeCycleTaskRuntimeStatus_Object = MibTableColumn
serverLifeCycleTaskRuntimeStatus = _ServerLifeCycleTaskRuntimeStatus_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1345, 1, 4),
    _ServerLifeCycleTaskRuntimeStatus_Type()
)
serverLifeCycleTaskRuntimeStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLifeCycleTaskRuntimeStatus.setStatus("current")
_ServerLifeCycleTaskRuntimeRunning_Type = OctetString
_ServerLifeCycleTaskRuntimeRunning_Object = MibTableColumn
serverLifeCycleTaskRuntimeRunning = _ServerLifeCycleTaskRuntimeRunning_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1345, 1, 5),
    _ServerLifeCycleTaskRuntimeRunning_Type()
)
serverLifeCycleTaskRuntimeRunning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLifeCycleTaskRuntimeRunning.setStatus("current")
_ServerLifeCycleTaskRuntimeBeginTime_Type = Counter64
_ServerLifeCycleTaskRuntimeBeginTime_Object = MibTableColumn
serverLifeCycleTaskRuntimeBeginTime = _ServerLifeCycleTaskRuntimeBeginTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1345, 1, 6),
    _ServerLifeCycleTaskRuntimeBeginTime_Type()
)
serverLifeCycleTaskRuntimeBeginTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLifeCycleTaskRuntimeBeginTime.setStatus("current")
_ServerLifeCycleTaskRuntimeOperation_Type = OctetString
_ServerLifeCycleTaskRuntimeOperation_Object = MibTableColumn
serverLifeCycleTaskRuntimeOperation = _ServerLifeCycleTaskRuntimeOperation_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1345, 1, 7),
    _ServerLifeCycleTaskRuntimeOperation_Type()
)
serverLifeCycleTaskRuntimeOperation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLifeCycleTaskRuntimeOperation.setStatus("current")
_ServerLifeCycleTaskRuntimeEndTime_Type = Counter64
_ServerLifeCycleTaskRuntimeEndTime_Object = MibTableColumn
serverLifeCycleTaskRuntimeEndTime = _ServerLifeCycleTaskRuntimeEndTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1345, 1, 8),
    _ServerLifeCycleTaskRuntimeEndTime_Type()
)
serverLifeCycleTaskRuntimeEndTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLifeCycleTaskRuntimeEndTime.setStatus("current")
_ServerLifeCycleTaskRuntimeServerName_Type = OctetString
_ServerLifeCycleTaskRuntimeServerName_Object = MibTableColumn
serverLifeCycleTaskRuntimeServerName = _ServerLifeCycleTaskRuntimeServerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1345, 1, 9),
    _ServerLifeCycleTaskRuntimeServerName_Type()
)
serverLifeCycleTaskRuntimeServerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLifeCycleTaskRuntimeServerName.setStatus("current")
_ServerLifeCycleTaskRuntimeSystemTask_Type = OctetString
_ServerLifeCycleTaskRuntimeSystemTask_Object = MibTableColumn
serverLifeCycleTaskRuntimeSystemTask = _ServerLifeCycleTaskRuntimeSystemTask_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1345, 1, 10),
    _ServerLifeCycleTaskRuntimeSystemTask_Type()
)
serverLifeCycleTaskRuntimeSystemTask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLifeCycleTaskRuntimeSystemTask.setStatus("current")
_ServerLifeCycleTaskRuntimeDescription_Type = OctetString
_ServerLifeCycleTaskRuntimeDescription_Object = MibTableColumn
serverLifeCycleTaskRuntimeDescription = _ServerLifeCycleTaskRuntimeDescription_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1345, 1, 11),
    _ServerLifeCycleTaskRuntimeDescription_Type()
)
serverLifeCycleTaskRuntimeDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLifeCycleTaskRuntimeDescription.setStatus("current")
_ServerLifeCycleTaskRuntimeName_Type = OctetString
_ServerLifeCycleTaskRuntimeName_Object = MibTableColumn
serverLifeCycleTaskRuntimeName = _ServerLifeCycleTaskRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1345, 1, 12),
    _ServerLifeCycleTaskRuntimeName_Type()
)
serverLifeCycleTaskRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverLifeCycleTaskRuntimeName.setStatus("current")
_ServerMigrationRuntimeTable_Object = MibTable
serverMigrationRuntimeTable = _ServerMigrationRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1350)
)
if mibBuilder.loadTexts:
    serverMigrationRuntimeTable.setStatus("current")
_ServerMigrationRuntimeEntry_Object = MibTableRow
serverMigrationRuntimeEntry = _ServerMigrationRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1350, 1)
)
serverMigrationRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "serverMigrationRuntimeIndex"),
)
if mibBuilder.loadTexts:
    serverMigrationRuntimeEntry.setStatus("current")
_ServerMigrationRuntimeIndex_Type = OctetString
_ServerMigrationRuntimeIndex_Object = MibTableColumn
serverMigrationRuntimeIndex = _ServerMigrationRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1350, 1, 1),
    _ServerMigrationRuntimeIndex_Type()
)
serverMigrationRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    serverMigrationRuntimeIndex.setStatus("current")
_ServerMigrationRuntimeObjectName_Type = OctetString
_ServerMigrationRuntimeObjectName_Object = MibTableColumn
serverMigrationRuntimeObjectName = _ServerMigrationRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1350, 1, 2),
    _ServerMigrationRuntimeObjectName_Type()
)
serverMigrationRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverMigrationRuntimeObjectName.setStatus("current")
_ServerMigrationRuntimeType_Type = OctetString
_ServerMigrationRuntimeType_Object = MibTableColumn
serverMigrationRuntimeType = _ServerMigrationRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1350, 1, 3),
    _ServerMigrationRuntimeType_Type()
)
serverMigrationRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverMigrationRuntimeType.setStatus("current")
_ServerMigrationRuntimeClusterMaster_Type = OctetString
_ServerMigrationRuntimeClusterMaster_Object = MibTableColumn
serverMigrationRuntimeClusterMaster = _ServerMigrationRuntimeClusterMaster_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1350, 1, 4),
    _ServerMigrationRuntimeClusterMaster_Type()
)
serverMigrationRuntimeClusterMaster.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverMigrationRuntimeClusterMaster.setStatus("current")
_ServerMigrationRuntimeClusterMasterName_Type = OctetString
_ServerMigrationRuntimeClusterMasterName_Object = MibTableColumn
serverMigrationRuntimeClusterMasterName = _ServerMigrationRuntimeClusterMasterName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1350, 1, 5),
    _ServerMigrationRuntimeClusterMasterName_Type()
)
serverMigrationRuntimeClusterMasterName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverMigrationRuntimeClusterMasterName.setStatus("current")
_ServerMigrationRuntimeName_Type = OctetString
_ServerMigrationRuntimeName_Object = MibTableColumn
serverMigrationRuntimeName = _ServerMigrationRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1350, 1, 6),
    _ServerMigrationRuntimeName_Type()
)
serverMigrationRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serverMigrationRuntimeName.setStatus("current")
_ServiceMigrationDataRuntimeTable_Object = MibTable
serviceMigrationDataRuntimeTable = _ServiceMigrationDataRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1355)
)
if mibBuilder.loadTexts:
    serviceMigrationDataRuntimeTable.setStatus("current")
_ServiceMigrationDataRuntimeEntry_Object = MibTableRow
serviceMigrationDataRuntimeEntry = _ServiceMigrationDataRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1355, 1)
)
serviceMigrationDataRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "serviceMigrationDataRuntimeIndex"),
)
if mibBuilder.loadTexts:
    serviceMigrationDataRuntimeEntry.setStatus("current")
_ServiceMigrationDataRuntimeIndex_Type = OctetString
_ServiceMigrationDataRuntimeIndex_Object = MibTableColumn
serviceMigrationDataRuntimeIndex = _ServiceMigrationDataRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1355, 1, 1),
    _ServiceMigrationDataRuntimeIndex_Type()
)
serviceMigrationDataRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    serviceMigrationDataRuntimeIndex.setStatus("current")
_ServiceMigrationDataRuntimeObjectName_Type = OctetString
_ServiceMigrationDataRuntimeObjectName_Object = MibTableColumn
serviceMigrationDataRuntimeObjectName = _ServiceMigrationDataRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1355, 1, 2),
    _ServiceMigrationDataRuntimeObjectName_Type()
)
serviceMigrationDataRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serviceMigrationDataRuntimeObjectName.setStatus("current")
_ServiceMigrationDataRuntimeType_Type = OctetString
_ServiceMigrationDataRuntimeType_Object = MibTableColumn
serviceMigrationDataRuntimeType = _ServiceMigrationDataRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1355, 1, 3),
    _ServiceMigrationDataRuntimeType_Type()
)
serviceMigrationDataRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serviceMigrationDataRuntimeType.setStatus("current")
_ServiceMigrationDataRuntimeStatus_Type = Integer32
_ServiceMigrationDataRuntimeStatus_Object = MibTableColumn
serviceMigrationDataRuntimeStatus = _ServiceMigrationDataRuntimeStatus_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1355, 1, 4),
    _ServiceMigrationDataRuntimeStatus_Type()
)
serviceMigrationDataRuntimeStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serviceMigrationDataRuntimeStatus.setStatus("current")
_ServiceMigrationDataRuntimeMigrationStartTime_Type = Counter64
_ServiceMigrationDataRuntimeMigrationStartTime_Object = MibTableColumn
serviceMigrationDataRuntimeMigrationStartTime = _ServiceMigrationDataRuntimeMigrationStartTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1355, 1, 5),
    _ServiceMigrationDataRuntimeMigrationStartTime_Type()
)
serviceMigrationDataRuntimeMigrationStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serviceMigrationDataRuntimeMigrationStartTime.setStatus("current")
_ServiceMigrationDataRuntimeMigratedFrom_Type = OctetString
_ServiceMigrationDataRuntimeMigratedFrom_Object = MibTableColumn
serviceMigrationDataRuntimeMigratedFrom = _ServiceMigrationDataRuntimeMigratedFrom_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1355, 1, 6),
    _ServiceMigrationDataRuntimeMigratedFrom_Type()
)
serviceMigrationDataRuntimeMigratedFrom.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serviceMigrationDataRuntimeMigratedFrom.setStatus("current")
_ServiceMigrationDataRuntimeServerName_Type = OctetString
_ServiceMigrationDataRuntimeServerName_Object = MibTableColumn
serviceMigrationDataRuntimeServerName = _ServiceMigrationDataRuntimeServerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1355, 1, 7),
    _ServiceMigrationDataRuntimeServerName_Type()
)
serviceMigrationDataRuntimeServerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serviceMigrationDataRuntimeServerName.setStatus("current")
_ServiceMigrationDataRuntimeMigratedTo_Type = OctetString
_ServiceMigrationDataRuntimeMigratedTo_Object = MibTableColumn
serviceMigrationDataRuntimeMigratedTo = _ServiceMigrationDataRuntimeMigratedTo_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1355, 1, 8),
    _ServiceMigrationDataRuntimeMigratedTo_Type()
)
serviceMigrationDataRuntimeMigratedTo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serviceMigrationDataRuntimeMigratedTo.setStatus("current")
_ServiceMigrationDataRuntimeMigrationEndTime_Type = Counter64
_ServiceMigrationDataRuntimeMigrationEndTime_Object = MibTableColumn
serviceMigrationDataRuntimeMigrationEndTime = _ServiceMigrationDataRuntimeMigrationEndTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1355, 1, 9),
    _ServiceMigrationDataRuntimeMigrationEndTime_Type()
)
serviceMigrationDataRuntimeMigrationEndTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serviceMigrationDataRuntimeMigrationEndTime.setStatus("current")
_ServiceMigrationDataRuntimeClusterName_Type = OctetString
_ServiceMigrationDataRuntimeClusterName_Object = MibTableColumn
serviceMigrationDataRuntimeClusterName = _ServiceMigrationDataRuntimeClusterName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1355, 1, 10),
    _ServiceMigrationDataRuntimeClusterName_Type()
)
serviceMigrationDataRuntimeClusterName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serviceMigrationDataRuntimeClusterName.setStatus("current")
_ServiceMigrationDataRuntimeName_Type = OctetString
_ServiceMigrationDataRuntimeName_Object = MibTableColumn
serviceMigrationDataRuntimeName = _ServiceMigrationDataRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1355, 1, 11),
    _ServiceMigrationDataRuntimeName_Type()
)
serviceMigrationDataRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serviceMigrationDataRuntimeName.setStatus("current")
_ServiceMigrationDataRuntimeCoordinatorName_Type = OctetString
_ServiceMigrationDataRuntimeCoordinatorName_Object = MibTableColumn
serviceMigrationDataRuntimeCoordinatorName = _ServiceMigrationDataRuntimeCoordinatorName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1355, 1, 12),
    _ServiceMigrationDataRuntimeCoordinatorName_Type()
)
serviceMigrationDataRuntimeCoordinatorName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serviceMigrationDataRuntimeCoordinatorName.setStatus("current")
_ServiceMigrationRuntimeTable_Object = MibTable
serviceMigrationRuntimeTable = _ServiceMigrationRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1360)
)
if mibBuilder.loadTexts:
    serviceMigrationRuntimeTable.setStatus("current")
_ServiceMigrationRuntimeEntry_Object = MibTableRow
serviceMigrationRuntimeEntry = _ServiceMigrationRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1360, 1)
)
serviceMigrationRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "serviceMigrationRuntimeIndex"),
)
if mibBuilder.loadTexts:
    serviceMigrationRuntimeEntry.setStatus("current")
_ServiceMigrationRuntimeIndex_Type = OctetString
_ServiceMigrationRuntimeIndex_Object = MibTableColumn
serviceMigrationRuntimeIndex = _ServiceMigrationRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1360, 1, 1),
    _ServiceMigrationRuntimeIndex_Type()
)
serviceMigrationRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    serviceMigrationRuntimeIndex.setStatus("current")
_ServiceMigrationRuntimeObjectName_Type = OctetString
_ServiceMigrationRuntimeObjectName_Object = MibTableColumn
serviceMigrationRuntimeObjectName = _ServiceMigrationRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1360, 1, 2),
    _ServiceMigrationRuntimeObjectName_Type()
)
serviceMigrationRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serviceMigrationRuntimeObjectName.setStatus("current")
_ServiceMigrationRuntimeType_Type = OctetString
_ServiceMigrationRuntimeType_Object = MibTableColumn
serviceMigrationRuntimeType = _ServiceMigrationRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1360, 1, 3),
    _ServiceMigrationRuntimeType_Type()
)
serviceMigrationRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serviceMigrationRuntimeType.setStatus("current")
_ServiceMigrationRuntimeClusterMaster_Type = OctetString
_ServiceMigrationRuntimeClusterMaster_Object = MibTableColumn
serviceMigrationRuntimeClusterMaster = _ServiceMigrationRuntimeClusterMaster_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1360, 1, 4),
    _ServiceMigrationRuntimeClusterMaster_Type()
)
serviceMigrationRuntimeClusterMaster.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serviceMigrationRuntimeClusterMaster.setStatus("current")
_ServiceMigrationRuntimeClusterMasterName_Type = OctetString
_ServiceMigrationRuntimeClusterMasterName_Object = MibTableColumn
serviceMigrationRuntimeClusterMasterName = _ServiceMigrationRuntimeClusterMasterName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1360, 1, 5),
    _ServiceMigrationRuntimeClusterMasterName_Type()
)
serviceMigrationRuntimeClusterMasterName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serviceMigrationRuntimeClusterMasterName.setStatus("current")
_ServiceMigrationRuntimeName_Type = OctetString
_ServiceMigrationRuntimeName_Object = MibTableColumn
serviceMigrationRuntimeName = _ServiceMigrationRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1360, 1, 6),
    _ServiceMigrationRuntimeName_Type()
)
serviceMigrationRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    serviceMigrationRuntimeName.setStatus("current")
_SingleSignOnServicesRuntimeTable_Object = MibTable
singleSignOnServicesRuntimeTable = _SingleSignOnServicesRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1365)
)
if mibBuilder.loadTexts:
    singleSignOnServicesRuntimeTable.setStatus("current")
_SingleSignOnServicesRuntimeEntry_Object = MibTableRow
singleSignOnServicesRuntimeEntry = _SingleSignOnServicesRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1365, 1)
)
singleSignOnServicesRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "singleSignOnServicesRuntimeIndex"),
)
if mibBuilder.loadTexts:
    singleSignOnServicesRuntimeEntry.setStatus("current")
_SingleSignOnServicesRuntimeIndex_Type = OctetString
_SingleSignOnServicesRuntimeIndex_Object = MibTableColumn
singleSignOnServicesRuntimeIndex = _SingleSignOnServicesRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1365, 1, 1),
    _SingleSignOnServicesRuntimeIndex_Type()
)
singleSignOnServicesRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    singleSignOnServicesRuntimeIndex.setStatus("current")
_SingleSignOnServicesRuntimeObjectName_Type = OctetString
_SingleSignOnServicesRuntimeObjectName_Object = MibTableColumn
singleSignOnServicesRuntimeObjectName = _SingleSignOnServicesRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1365, 1, 2),
    _SingleSignOnServicesRuntimeObjectName_Type()
)
singleSignOnServicesRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesRuntimeObjectName.setStatus("current")
_SingleSignOnServicesRuntimeType_Type = OctetString
_SingleSignOnServicesRuntimeType_Object = MibTableColumn
singleSignOnServicesRuntimeType = _SingleSignOnServicesRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1365, 1, 3),
    _SingleSignOnServicesRuntimeType_Type()
)
singleSignOnServicesRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesRuntimeType.setStatus("current")
_SingleSignOnServicesRuntimeName_Type = OctetString
_SingleSignOnServicesRuntimeName_Object = MibTableColumn
singleSignOnServicesRuntimeName = _SingleSignOnServicesRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1365, 1, 4),
    _SingleSignOnServicesRuntimeName_Type()
)
singleSignOnServicesRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    singleSignOnServicesRuntimeName.setStatus("current")
_SpringAdviceRuntimeTable_Object = MibTable
springAdviceRuntimeTable = _SpringAdviceRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1370)
)
if mibBuilder.loadTexts:
    springAdviceRuntimeTable.setStatus("current")
_SpringAdviceRuntimeEntry_Object = MibTableRow
springAdviceRuntimeEntry = _SpringAdviceRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1370, 1)
)
springAdviceRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "springAdviceRuntimeIndex"),
)
if mibBuilder.loadTexts:
    springAdviceRuntimeEntry.setStatus("current")
_SpringAdviceRuntimeIndex_Type = OctetString
_SpringAdviceRuntimeIndex_Object = MibTableColumn
springAdviceRuntimeIndex = _SpringAdviceRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1370, 1, 1),
    _SpringAdviceRuntimeIndex_Type()
)
springAdviceRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    springAdviceRuntimeIndex.setStatus("current")
_SpringAdviceRuntimeObjectName_Type = OctetString
_SpringAdviceRuntimeObjectName_Object = MibTableColumn
springAdviceRuntimeObjectName = _SpringAdviceRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1370, 1, 2),
    _SpringAdviceRuntimeObjectName_Type()
)
springAdviceRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springAdviceRuntimeObjectName.setStatus("current")
_SpringAdviceRuntimeType_Type = OctetString
_SpringAdviceRuntimeType_Object = MibTableColumn
springAdviceRuntimeType = _SpringAdviceRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1370, 1, 3),
    _SpringAdviceRuntimeType_Type()
)
springAdviceRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springAdviceRuntimeType.setStatus("current")
_SpringAdviceRuntimeLazyInit_Type = OctetString
_SpringAdviceRuntimeLazyInit_Object = MibTableColumn
springAdviceRuntimeLazyInit = _SpringAdviceRuntimeLazyInit_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1370, 1, 4),
    _SpringAdviceRuntimeLazyInit_Type()
)
springAdviceRuntimeLazyInit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springAdviceRuntimeLazyInit.setStatus("current")
_SpringAdviceRuntimeResourceDescription_Type = OctetString
_SpringAdviceRuntimeResourceDescription_Object = MibTableColumn
springAdviceRuntimeResourceDescription = _SpringAdviceRuntimeResourceDescription_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1370, 1, 5),
    _SpringAdviceRuntimeResourceDescription_Type()
)
springAdviceRuntimeResourceDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springAdviceRuntimeResourceDescription.setStatus("current")
_SpringAdviceRuntimeAbstract_Type = OctetString
_SpringAdviceRuntimeAbstract_Object = MibTableColumn
springAdviceRuntimeAbstract = _SpringAdviceRuntimeAbstract_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1370, 1, 6),
    _SpringAdviceRuntimeAbstract_Type()
)
springAdviceRuntimeAbstract.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springAdviceRuntimeAbstract.setStatus("current")
_SpringAdviceRuntimeBeanId_Type = OctetString
_SpringAdviceRuntimeBeanId_Object = MibTableColumn
springAdviceRuntimeBeanId = _SpringAdviceRuntimeBeanId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1370, 1, 7),
    _SpringAdviceRuntimeBeanId_Type()
)
springAdviceRuntimeBeanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springAdviceRuntimeBeanId.setStatus("current")
_SpringAdviceRuntimeBeanClassname_Type = OctetString
_SpringAdviceRuntimeBeanClassname_Object = MibTableColumn
springAdviceRuntimeBeanClassname = _SpringAdviceRuntimeBeanClassname_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1370, 1, 8),
    _SpringAdviceRuntimeBeanClassname_Type()
)
springAdviceRuntimeBeanClassname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springAdviceRuntimeBeanClassname.setStatus("current")
_SpringAdviceRuntimeTransactional_Type = OctetString
_SpringAdviceRuntimeTransactional_Object = MibTableColumn
springAdviceRuntimeTransactional = _SpringAdviceRuntimeTransactional_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1370, 1, 9),
    _SpringAdviceRuntimeTransactional_Type()
)
springAdviceRuntimeTransactional.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springAdviceRuntimeTransactional.setStatus("current")
_SpringAdviceRuntimeSingleton_Type = OctetString
_SpringAdviceRuntimeSingleton_Object = MibTableColumn
springAdviceRuntimeSingleton = _SpringAdviceRuntimeSingleton_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1370, 1, 10),
    _SpringAdviceRuntimeSingleton_Type()
)
springAdviceRuntimeSingleton.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springAdviceRuntimeSingleton.setStatus("current")
_SpringAdviceRuntimeTransactionManager_Type = OctetString
_SpringAdviceRuntimeTransactionManager_Object = MibTableColumn
springAdviceRuntimeTransactionManager = _SpringAdviceRuntimeTransactionManager_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1370, 1, 11),
    _SpringAdviceRuntimeTransactionManager_Type()
)
springAdviceRuntimeTransactionManager.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springAdviceRuntimeTransactionManager.setStatus("current")
_SpringAdviceRuntimeName_Type = OctetString
_SpringAdviceRuntimeName_Object = MibTableColumn
springAdviceRuntimeName = _SpringAdviceRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1370, 1, 12),
    _SpringAdviceRuntimeName_Type()
)
springAdviceRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springAdviceRuntimeName.setStatus("current")
_SpringAdvisorRuntimeTable_Object = MibTable
springAdvisorRuntimeTable = _SpringAdvisorRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1375)
)
if mibBuilder.loadTexts:
    springAdvisorRuntimeTable.setStatus("current")
_SpringAdvisorRuntimeEntry_Object = MibTableRow
springAdvisorRuntimeEntry = _SpringAdvisorRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1375, 1)
)
springAdvisorRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "springAdvisorRuntimeIndex"),
)
if mibBuilder.loadTexts:
    springAdvisorRuntimeEntry.setStatus("current")
_SpringAdvisorRuntimeIndex_Type = OctetString
_SpringAdvisorRuntimeIndex_Object = MibTableColumn
springAdvisorRuntimeIndex = _SpringAdvisorRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1375, 1, 1),
    _SpringAdvisorRuntimeIndex_Type()
)
springAdvisorRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    springAdvisorRuntimeIndex.setStatus("current")
_SpringAdvisorRuntimeObjectName_Type = OctetString
_SpringAdvisorRuntimeObjectName_Object = MibTableColumn
springAdvisorRuntimeObjectName = _SpringAdvisorRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1375, 1, 2),
    _SpringAdvisorRuntimeObjectName_Type()
)
springAdvisorRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springAdvisorRuntimeObjectName.setStatus("current")
_SpringAdvisorRuntimeType_Type = OctetString
_SpringAdvisorRuntimeType_Object = MibTableColumn
springAdvisorRuntimeType = _SpringAdvisorRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1375, 1, 3),
    _SpringAdvisorRuntimeType_Type()
)
springAdvisorRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springAdvisorRuntimeType.setStatus("current")
_SpringAdvisorRuntimeLazyInit_Type = OctetString
_SpringAdvisorRuntimeLazyInit_Object = MibTableColumn
springAdvisorRuntimeLazyInit = _SpringAdvisorRuntimeLazyInit_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1375, 1, 4),
    _SpringAdvisorRuntimeLazyInit_Type()
)
springAdvisorRuntimeLazyInit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springAdvisorRuntimeLazyInit.setStatus("current")
_SpringAdvisorRuntimeResourceDescription_Type = OctetString
_SpringAdvisorRuntimeResourceDescription_Object = MibTableColumn
springAdvisorRuntimeResourceDescription = _SpringAdvisorRuntimeResourceDescription_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1375, 1, 5),
    _SpringAdvisorRuntimeResourceDescription_Type()
)
springAdvisorRuntimeResourceDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springAdvisorRuntimeResourceDescription.setStatus("current")
_SpringAdvisorRuntimeAbstract_Type = OctetString
_SpringAdvisorRuntimeAbstract_Object = MibTableColumn
springAdvisorRuntimeAbstract = _SpringAdvisorRuntimeAbstract_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1375, 1, 6),
    _SpringAdvisorRuntimeAbstract_Type()
)
springAdvisorRuntimeAbstract.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springAdvisorRuntimeAbstract.setStatus("current")
_SpringAdvisorRuntimeBeanId_Type = OctetString
_SpringAdvisorRuntimeBeanId_Object = MibTableColumn
springAdvisorRuntimeBeanId = _SpringAdvisorRuntimeBeanId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1375, 1, 7),
    _SpringAdvisorRuntimeBeanId_Type()
)
springAdvisorRuntimeBeanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springAdvisorRuntimeBeanId.setStatus("current")
_SpringAdvisorRuntimeBeanClassname_Type = OctetString
_SpringAdvisorRuntimeBeanClassname_Object = MibTableColumn
springAdvisorRuntimeBeanClassname = _SpringAdvisorRuntimeBeanClassname_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1375, 1, 8),
    _SpringAdvisorRuntimeBeanClassname_Type()
)
springAdvisorRuntimeBeanClassname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springAdvisorRuntimeBeanClassname.setStatus("current")
_SpringAdvisorRuntimeTransactional_Type = OctetString
_SpringAdvisorRuntimeTransactional_Object = MibTableColumn
springAdvisorRuntimeTransactional = _SpringAdvisorRuntimeTransactional_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1375, 1, 9),
    _SpringAdvisorRuntimeTransactional_Type()
)
springAdvisorRuntimeTransactional.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springAdvisorRuntimeTransactional.setStatus("current")
_SpringAdvisorRuntimeSingleton_Type = OctetString
_SpringAdvisorRuntimeSingleton_Object = MibTableColumn
springAdvisorRuntimeSingleton = _SpringAdvisorRuntimeSingleton_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1375, 1, 10),
    _SpringAdvisorRuntimeSingleton_Type()
)
springAdvisorRuntimeSingleton.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springAdvisorRuntimeSingleton.setStatus("current")
_SpringAdvisorRuntimeName_Type = OctetString
_SpringAdvisorRuntimeName_Object = MibTableColumn
springAdvisorRuntimeName = _SpringAdvisorRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1375, 1, 11),
    _SpringAdvisorRuntimeName_Type()
)
springAdvisorRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springAdvisorRuntimeName.setStatus("current")
_SpringPointcutRuntimeTable_Object = MibTable
springPointcutRuntimeTable = _SpringPointcutRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1380)
)
if mibBuilder.loadTexts:
    springPointcutRuntimeTable.setStatus("current")
_SpringPointcutRuntimeEntry_Object = MibTableRow
springPointcutRuntimeEntry = _SpringPointcutRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1380, 1)
)
springPointcutRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "springPointcutRuntimeIndex"),
)
if mibBuilder.loadTexts:
    springPointcutRuntimeEntry.setStatus("current")
_SpringPointcutRuntimeIndex_Type = OctetString
_SpringPointcutRuntimeIndex_Object = MibTableColumn
springPointcutRuntimeIndex = _SpringPointcutRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1380, 1, 1),
    _SpringPointcutRuntimeIndex_Type()
)
springPointcutRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    springPointcutRuntimeIndex.setStatus("current")
_SpringPointcutRuntimeObjectName_Type = OctetString
_SpringPointcutRuntimeObjectName_Object = MibTableColumn
springPointcutRuntimeObjectName = _SpringPointcutRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1380, 1, 2),
    _SpringPointcutRuntimeObjectName_Type()
)
springPointcutRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springPointcutRuntimeObjectName.setStatus("current")
_SpringPointcutRuntimeType_Type = OctetString
_SpringPointcutRuntimeType_Object = MibTableColumn
springPointcutRuntimeType = _SpringPointcutRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1380, 1, 3),
    _SpringPointcutRuntimeType_Type()
)
springPointcutRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springPointcutRuntimeType.setStatus("current")
_SpringPointcutRuntimeLazyInit_Type = OctetString
_SpringPointcutRuntimeLazyInit_Object = MibTableColumn
springPointcutRuntimeLazyInit = _SpringPointcutRuntimeLazyInit_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1380, 1, 4),
    _SpringPointcutRuntimeLazyInit_Type()
)
springPointcutRuntimeLazyInit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springPointcutRuntimeLazyInit.setStatus("current")
_SpringPointcutRuntimeResourceDescription_Type = OctetString
_SpringPointcutRuntimeResourceDescription_Object = MibTableColumn
springPointcutRuntimeResourceDescription = _SpringPointcutRuntimeResourceDescription_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1380, 1, 5),
    _SpringPointcutRuntimeResourceDescription_Type()
)
springPointcutRuntimeResourceDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springPointcutRuntimeResourceDescription.setStatus("current")
_SpringPointcutRuntimeAbstract_Type = OctetString
_SpringPointcutRuntimeAbstract_Object = MibTableColumn
springPointcutRuntimeAbstract = _SpringPointcutRuntimeAbstract_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1380, 1, 6),
    _SpringPointcutRuntimeAbstract_Type()
)
springPointcutRuntimeAbstract.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springPointcutRuntimeAbstract.setStatus("current")
_SpringPointcutRuntimeBeanId_Type = OctetString
_SpringPointcutRuntimeBeanId_Object = MibTableColumn
springPointcutRuntimeBeanId = _SpringPointcutRuntimeBeanId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1380, 1, 7),
    _SpringPointcutRuntimeBeanId_Type()
)
springPointcutRuntimeBeanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springPointcutRuntimeBeanId.setStatus("current")
_SpringPointcutRuntimeBeanClassname_Type = OctetString
_SpringPointcutRuntimeBeanClassname_Object = MibTableColumn
springPointcutRuntimeBeanClassname = _SpringPointcutRuntimeBeanClassname_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1380, 1, 8),
    _SpringPointcutRuntimeBeanClassname_Type()
)
springPointcutRuntimeBeanClassname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springPointcutRuntimeBeanClassname.setStatus("current")
_SpringPointcutRuntimeExpression_Type = OctetString
_SpringPointcutRuntimeExpression_Object = MibTableColumn
springPointcutRuntimeExpression = _SpringPointcutRuntimeExpression_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1380, 1, 9),
    _SpringPointcutRuntimeExpression_Type()
)
springPointcutRuntimeExpression.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springPointcutRuntimeExpression.setStatus("current")
_SpringPointcutRuntimeTransactional_Type = OctetString
_SpringPointcutRuntimeTransactional_Object = MibTableColumn
springPointcutRuntimeTransactional = _SpringPointcutRuntimeTransactional_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1380, 1, 10),
    _SpringPointcutRuntimeTransactional_Type()
)
springPointcutRuntimeTransactional.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springPointcutRuntimeTransactional.setStatus("current")
_SpringPointcutRuntimeSingleton_Type = OctetString
_SpringPointcutRuntimeSingleton_Object = MibTableColumn
springPointcutRuntimeSingleton = _SpringPointcutRuntimeSingleton_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1380, 1, 11),
    _SpringPointcutRuntimeSingleton_Type()
)
springPointcutRuntimeSingleton.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springPointcutRuntimeSingleton.setStatus("current")
_SpringPointcutRuntimeName_Type = OctetString
_SpringPointcutRuntimeName_Object = MibTableColumn
springPointcutRuntimeName = _SpringPointcutRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1380, 1, 12),
    _SpringPointcutRuntimeName_Type()
)
springPointcutRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springPointcutRuntimeName.setStatus("current")
_SpringRuntimeTable_Object = MibTable
springRuntimeTable = _SpringRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1385)
)
if mibBuilder.loadTexts:
    springRuntimeTable.setStatus("current")
_SpringRuntimeEntry_Object = MibTableRow
springRuntimeEntry = _SpringRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1385, 1)
)
springRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "springRuntimeIndex"),
)
if mibBuilder.loadTexts:
    springRuntimeEntry.setStatus("current")
_SpringRuntimeIndex_Type = OctetString
_SpringRuntimeIndex_Object = MibTableColumn
springRuntimeIndex = _SpringRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1385, 1, 1),
    _SpringRuntimeIndex_Type()
)
springRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    springRuntimeIndex.setStatus("current")
_SpringRuntimeObjectName_Type = OctetString
_SpringRuntimeObjectName_Object = MibTableColumn
springRuntimeObjectName = _SpringRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1385, 1, 2),
    _SpringRuntimeObjectName_Type()
)
springRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springRuntimeObjectName.setStatus("current")
_SpringRuntimeType_Type = OctetString
_SpringRuntimeType_Object = MibTableColumn
springRuntimeType = _SpringRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1385, 1, 3),
    _SpringRuntimeType_Type()
)
springRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springRuntimeType.setStatus("current")
_SpringRuntimeName_Type = OctetString
_SpringRuntimeName_Object = MibTableColumn
springRuntimeName = _SpringRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1385, 1, 4),
    _SpringRuntimeName_Type()
)
springRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springRuntimeName.setStatus("current")
_SpringTransactionManagerRuntimeTable_Object = MibTable
springTransactionManagerRuntimeTable = _SpringTransactionManagerRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1390)
)
if mibBuilder.loadTexts:
    springTransactionManagerRuntimeTable.setStatus("current")
_SpringTransactionManagerRuntimeEntry_Object = MibTableRow
springTransactionManagerRuntimeEntry = _SpringTransactionManagerRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1390, 1)
)
springTransactionManagerRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "springTransactionManagerRuntimeIndex"),
)
if mibBuilder.loadTexts:
    springTransactionManagerRuntimeEntry.setStatus("current")
_SpringTransactionManagerRuntimeIndex_Type = OctetString
_SpringTransactionManagerRuntimeIndex_Object = MibTableColumn
springTransactionManagerRuntimeIndex = _SpringTransactionManagerRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1390, 1, 1),
    _SpringTransactionManagerRuntimeIndex_Type()
)
springTransactionManagerRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    springTransactionManagerRuntimeIndex.setStatus("current")
_SpringTransactionManagerRuntimeObjectName_Type = OctetString
_SpringTransactionManagerRuntimeObjectName_Object = MibTableColumn
springTransactionManagerRuntimeObjectName = _SpringTransactionManagerRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1390, 1, 2),
    _SpringTransactionManagerRuntimeObjectName_Type()
)
springTransactionManagerRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springTransactionManagerRuntimeObjectName.setStatus("current")
_SpringTransactionManagerRuntimeType_Type = OctetString
_SpringTransactionManagerRuntimeType_Object = MibTableColumn
springTransactionManagerRuntimeType = _SpringTransactionManagerRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1390, 1, 3),
    _SpringTransactionManagerRuntimeType_Type()
)
springTransactionManagerRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springTransactionManagerRuntimeType.setStatus("current")
_SpringTransactionManagerRuntimeDataSource_Type = OctetString
_SpringTransactionManagerRuntimeDataSource_Object = MibTableColumn
springTransactionManagerRuntimeDataSource = _SpringTransactionManagerRuntimeDataSource_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1390, 1, 4),
    _SpringTransactionManagerRuntimeDataSource_Type()
)
springTransactionManagerRuntimeDataSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springTransactionManagerRuntimeDataSource.setStatus("current")
_SpringTransactionManagerRuntimeEntityManagerFactory_Type = OctetString
_SpringTransactionManagerRuntimeEntityManagerFactory_Object = MibTableColumn
springTransactionManagerRuntimeEntityManagerFactory = _SpringTransactionManagerRuntimeEntityManagerFactory_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1390, 1, 5),
    _SpringTransactionManagerRuntimeEntityManagerFactory_Type()
)
springTransactionManagerRuntimeEntityManagerFactory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springTransactionManagerRuntimeEntityManagerFactory.setStatus("current")
_SpringTransactionManagerRuntimeLazyInit_Type = OctetString
_SpringTransactionManagerRuntimeLazyInit_Object = MibTableColumn
springTransactionManagerRuntimeLazyInit = _SpringTransactionManagerRuntimeLazyInit_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1390, 1, 6),
    _SpringTransactionManagerRuntimeLazyInit_Type()
)
springTransactionManagerRuntimeLazyInit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springTransactionManagerRuntimeLazyInit.setStatus("current")
_SpringTransactionManagerRuntimeResourceDescription_Type = OctetString
_SpringTransactionManagerRuntimeResourceDescription_Object = MibTableColumn
springTransactionManagerRuntimeResourceDescription = _SpringTransactionManagerRuntimeResourceDescription_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1390, 1, 7),
    _SpringTransactionManagerRuntimeResourceDescription_Type()
)
springTransactionManagerRuntimeResourceDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springTransactionManagerRuntimeResourceDescription.setStatus("current")
_SpringTransactionManagerRuntimeRollbackOnCommitFailure_Type = OctetString
_SpringTransactionManagerRuntimeRollbackOnCommitFailure_Object = MibTableColumn
springTransactionManagerRuntimeRollbackOnCommitFailure = _SpringTransactionManagerRuntimeRollbackOnCommitFailure_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1390, 1, 8),
    _SpringTransactionManagerRuntimeRollbackOnCommitFailure_Type()
)
springTransactionManagerRuntimeRollbackOnCommitFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springTransactionManagerRuntimeRollbackOnCommitFailure.setStatus("current")
_SpringTransactionManagerRuntimeDefaultTimeout_Type = Integer32
_SpringTransactionManagerRuntimeDefaultTimeout_Object = MibTableColumn
springTransactionManagerRuntimeDefaultTimeout = _SpringTransactionManagerRuntimeDefaultTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1390, 1, 9),
    _SpringTransactionManagerRuntimeDefaultTimeout_Type()
)
springTransactionManagerRuntimeDefaultTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springTransactionManagerRuntimeDefaultTimeout.setStatus("current")
_SpringTransactionManagerRuntimeFailEarlyOnGlobalRollbackOnly_Type = OctetString
_SpringTransactionManagerRuntimeFailEarlyOnGlobalRollbackOnly_Object = MibTableColumn
springTransactionManagerRuntimeFailEarlyOnGlobalRollbackOnly = _SpringTransactionManagerRuntimeFailEarlyOnGlobalRollbackOnly_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1390, 1, 10),
    _SpringTransactionManagerRuntimeFailEarlyOnGlobalRollbackOnly_Type()
)
springTransactionManagerRuntimeFailEarlyOnGlobalRollbackOnly.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springTransactionManagerRuntimeFailEarlyOnGlobalRollbackOnly.setStatus("current")
_SpringTransactionManagerRuntimeAbstract_Type = OctetString
_SpringTransactionManagerRuntimeAbstract_Object = MibTableColumn
springTransactionManagerRuntimeAbstract = _SpringTransactionManagerRuntimeAbstract_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1390, 1, 11),
    _SpringTransactionManagerRuntimeAbstract_Type()
)
springTransactionManagerRuntimeAbstract.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springTransactionManagerRuntimeAbstract.setStatus("current")
_SpringTransactionManagerRuntimeGlobalRollbackOnParticipationFailure_Type = OctetString
_SpringTransactionManagerRuntimeGlobalRollbackOnParticipationFailure_Object = MibTableColumn
springTransactionManagerRuntimeGlobalRollbackOnParticipationFailure = _SpringTransactionManagerRuntimeGlobalRollbackOnParticipationFailure_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1390, 1, 12),
    _SpringTransactionManagerRuntimeGlobalRollbackOnParticipationFailure_Type()
)
springTransactionManagerRuntimeGlobalRollbackOnParticipationFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springTransactionManagerRuntimeGlobalRollbackOnParticipationFailure.setStatus("current")
_SpringTransactionManagerRuntimeBeanId_Type = OctetString
_SpringTransactionManagerRuntimeBeanId_Object = MibTableColumn
springTransactionManagerRuntimeBeanId = _SpringTransactionManagerRuntimeBeanId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1390, 1, 13),
    _SpringTransactionManagerRuntimeBeanId_Type()
)
springTransactionManagerRuntimeBeanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springTransactionManagerRuntimeBeanId.setStatus("current")
_SpringTransactionManagerRuntimeNestedTransactionAllowed_Type = OctetString
_SpringTransactionManagerRuntimeNestedTransactionAllowed_Object = MibTableColumn
springTransactionManagerRuntimeNestedTransactionAllowed = _SpringTransactionManagerRuntimeNestedTransactionAllowed_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1390, 1, 14),
    _SpringTransactionManagerRuntimeNestedTransactionAllowed_Type()
)
springTransactionManagerRuntimeNestedTransactionAllowed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springTransactionManagerRuntimeNestedTransactionAllowed.setStatus("current")
_SpringTransactionManagerRuntimeBeanClassname_Type = OctetString
_SpringTransactionManagerRuntimeBeanClassname_Object = MibTableColumn
springTransactionManagerRuntimeBeanClassname = _SpringTransactionManagerRuntimeBeanClassname_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1390, 1, 15),
    _SpringTransactionManagerRuntimeBeanClassname_Type()
)
springTransactionManagerRuntimeBeanClassname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springTransactionManagerRuntimeBeanClassname.setStatus("current")
_SpringTransactionManagerRuntimeSingleton_Type = OctetString
_SpringTransactionManagerRuntimeSingleton_Object = MibTableColumn
springTransactionManagerRuntimeSingleton = _SpringTransactionManagerRuntimeSingleton_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1390, 1, 16),
    _SpringTransactionManagerRuntimeSingleton_Type()
)
springTransactionManagerRuntimeSingleton.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springTransactionManagerRuntimeSingleton.setStatus("current")
_SpringTransactionManagerRuntimeName_Type = OctetString
_SpringTransactionManagerRuntimeName_Object = MibTableColumn
springTransactionManagerRuntimeName = _SpringTransactionManagerRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1390, 1, 17),
    _SpringTransactionManagerRuntimeName_Type()
)
springTransactionManagerRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springTransactionManagerRuntimeName.setStatus("current")
_SpringTransactionManagerRuntimeTransactionSynchronization_Type = OctetString
_SpringTransactionManagerRuntimeTransactionSynchronization_Object = MibTableColumn
springTransactionManagerRuntimeTransactionSynchronization = _SpringTransactionManagerRuntimeTransactionSynchronization_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1390, 1, 18),
    _SpringTransactionManagerRuntimeTransactionSynchronization_Type()
)
springTransactionManagerRuntimeTransactionSynchronization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    springTransactionManagerRuntimeTransactionSynchronization.setStatus("current")
_StatefulEJBRuntimeTable_Object = MibTable
statefulEJBRuntimeTable = _StatefulEJBRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1395)
)
if mibBuilder.loadTexts:
    statefulEJBRuntimeTable.setStatus("current")
_StatefulEJBRuntimeEntry_Object = MibTableRow
statefulEJBRuntimeEntry = _StatefulEJBRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1395, 1)
)
statefulEJBRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "statefulEJBRuntimeIndex"),
)
if mibBuilder.loadTexts:
    statefulEJBRuntimeEntry.setStatus("current")
_StatefulEJBRuntimeIndex_Type = OctetString
_StatefulEJBRuntimeIndex_Object = MibTableColumn
statefulEJBRuntimeIndex = _StatefulEJBRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1395, 1, 1),
    _StatefulEJBRuntimeIndex_Type()
)
statefulEJBRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    statefulEJBRuntimeIndex.setStatus("current")
_StatefulEJBRuntimeObjectName_Type = OctetString
_StatefulEJBRuntimeObjectName_Object = MibTableColumn
statefulEJBRuntimeObjectName = _StatefulEJBRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1395, 1, 2),
    _StatefulEJBRuntimeObjectName_Type()
)
statefulEJBRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statefulEJBRuntimeObjectName.setStatus("current")
_StatefulEJBRuntimeType_Type = OctetString
_StatefulEJBRuntimeType_Object = MibTableColumn
statefulEJBRuntimeType = _StatefulEJBRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1395, 1, 3),
    _StatefulEJBRuntimeType_Type()
)
statefulEJBRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statefulEJBRuntimeType.setStatus("current")
_StatefulEJBRuntimeEJBName_Type = OctetString
_StatefulEJBRuntimeEJBName_Object = MibTableColumn
statefulEJBRuntimeEJBName = _StatefulEJBRuntimeEJBName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1395, 1, 4),
    _StatefulEJBRuntimeEJBName_Type()
)
statefulEJBRuntimeEJBName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statefulEJBRuntimeEJBName.setStatus("current")
_StatefulEJBRuntimeName_Type = OctetString
_StatefulEJBRuntimeName_Object = MibTableColumn
statefulEJBRuntimeName = _StatefulEJBRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1395, 1, 5),
    _StatefulEJBRuntimeName_Type()
)
statefulEJBRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statefulEJBRuntimeName.setStatus("current")
_StatelessEJBRuntimeTable_Object = MibTable
statelessEJBRuntimeTable = _StatelessEJBRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1400)
)
if mibBuilder.loadTexts:
    statelessEJBRuntimeTable.setStatus("current")
_StatelessEJBRuntimeEntry_Object = MibTableRow
statelessEJBRuntimeEntry = _StatelessEJBRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1400, 1)
)
statelessEJBRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "statelessEJBRuntimeIndex"),
)
if mibBuilder.loadTexts:
    statelessEJBRuntimeEntry.setStatus("current")
_StatelessEJBRuntimeIndex_Type = OctetString
_StatelessEJBRuntimeIndex_Object = MibTableColumn
statelessEJBRuntimeIndex = _StatelessEJBRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1400, 1, 1),
    _StatelessEJBRuntimeIndex_Type()
)
statelessEJBRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    statelessEJBRuntimeIndex.setStatus("current")
_StatelessEJBRuntimeObjectName_Type = OctetString
_StatelessEJBRuntimeObjectName_Object = MibTableColumn
statelessEJBRuntimeObjectName = _StatelessEJBRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1400, 1, 2),
    _StatelessEJBRuntimeObjectName_Type()
)
statelessEJBRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statelessEJBRuntimeObjectName.setStatus("current")
_StatelessEJBRuntimeType_Type = OctetString
_StatelessEJBRuntimeType_Object = MibTableColumn
statelessEJBRuntimeType = _StatelessEJBRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1400, 1, 3),
    _StatelessEJBRuntimeType_Type()
)
statelessEJBRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statelessEJBRuntimeType.setStatus("current")
_StatelessEJBRuntimeEJBName_Type = OctetString
_StatelessEJBRuntimeEJBName_Object = MibTableColumn
statelessEJBRuntimeEJBName = _StatelessEJBRuntimeEJBName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1400, 1, 4),
    _StatelessEJBRuntimeEJBName_Type()
)
statelessEJBRuntimeEJBName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statelessEJBRuntimeEJBName.setStatus("current")
_StatelessEJBRuntimeName_Type = OctetString
_StatelessEJBRuntimeName_Object = MibTableColumn
statelessEJBRuntimeName = _StatelessEJBRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1400, 1, 5),
    _StatelessEJBRuntimeName_Type()
)
statelessEJBRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statelessEJBRuntimeName.setStatus("current")
_TimeServiceRuntimeTable_Object = MibTable
timeServiceRuntimeTable = _TimeServiceRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1405)
)
if mibBuilder.loadTexts:
    timeServiceRuntimeTable.setStatus("current")
_TimeServiceRuntimeEntry_Object = MibTableRow
timeServiceRuntimeEntry = _TimeServiceRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1405, 1)
)
timeServiceRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "timeServiceRuntimeIndex"),
)
if mibBuilder.loadTexts:
    timeServiceRuntimeEntry.setStatus("current")
_TimeServiceRuntimeIndex_Type = OctetString
_TimeServiceRuntimeIndex_Object = MibTableColumn
timeServiceRuntimeIndex = _TimeServiceRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1405, 1, 1),
    _TimeServiceRuntimeIndex_Type()
)
timeServiceRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    timeServiceRuntimeIndex.setStatus("current")
_TimeServiceRuntimeObjectName_Type = OctetString
_TimeServiceRuntimeObjectName_Object = MibTableColumn
timeServiceRuntimeObjectName = _TimeServiceRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1405, 1, 2),
    _TimeServiceRuntimeObjectName_Type()
)
timeServiceRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    timeServiceRuntimeObjectName.setStatus("current")
_TimeServiceRuntimeType_Type = OctetString
_TimeServiceRuntimeType_Object = MibTableColumn
timeServiceRuntimeType = _TimeServiceRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1405, 1, 3),
    _TimeServiceRuntimeType_Type()
)
timeServiceRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    timeServiceRuntimeType.setStatus("current")
_TimeServiceRuntimeName_Type = OctetString
_TimeServiceRuntimeName_Object = MibTableColumn
timeServiceRuntimeName = _TimeServiceRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1405, 1, 4),
    _TimeServiceRuntimeName_Type()
)
timeServiceRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    timeServiceRuntimeName.setStatus("current")
_TimerRuntimeTable_Object = MibTable
timerRuntimeTable = _TimerRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1410)
)
if mibBuilder.loadTexts:
    timerRuntimeTable.setStatus("current")
_TimerRuntimeEntry_Object = MibTableRow
timerRuntimeEntry = _TimerRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1410, 1)
)
timerRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "timerRuntimeIndex"),
)
if mibBuilder.loadTexts:
    timerRuntimeEntry.setStatus("current")
_TimerRuntimeIndex_Type = OctetString
_TimerRuntimeIndex_Object = MibTableColumn
timerRuntimeIndex = _TimerRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1410, 1, 1),
    _TimerRuntimeIndex_Type()
)
timerRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    timerRuntimeIndex.setStatus("current")
_TimerRuntimeObjectName_Type = OctetString
_TimerRuntimeObjectName_Object = MibTableColumn
timerRuntimeObjectName = _TimerRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1410, 1, 2),
    _TimerRuntimeObjectName_Type()
)
timerRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    timerRuntimeObjectName.setStatus("current")
_TimerRuntimeType_Type = OctetString
_TimerRuntimeType_Object = MibTableColumn
timerRuntimeType = _TimerRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1410, 1, 3),
    _TimerRuntimeType_Type()
)
timerRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    timerRuntimeType.setStatus("current")
_TimerRuntimeName_Type = OctetString
_TimerRuntimeName_Object = MibTableColumn
timerRuntimeName = _TimerRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1410, 1, 4),
    _TimerRuntimeName_Type()
)
timerRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    timerRuntimeName.setStatus("current")
_UrlResourceRuntimeTable_Object = MibTable
urlResourceRuntimeTable = _UrlResourceRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1415)
)
if mibBuilder.loadTexts:
    urlResourceRuntimeTable.setStatus("current")
_UrlResourceRuntimeEntry_Object = MibTableRow
urlResourceRuntimeEntry = _UrlResourceRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1415, 1)
)
urlResourceRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "urlResourceRuntimeIndex"),
)
if mibBuilder.loadTexts:
    urlResourceRuntimeEntry.setStatus("current")
_UrlResourceRuntimeIndex_Type = OctetString
_UrlResourceRuntimeIndex_Object = MibTableColumn
urlResourceRuntimeIndex = _UrlResourceRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1415, 1, 1),
    _UrlResourceRuntimeIndex_Type()
)
urlResourceRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    urlResourceRuntimeIndex.setStatus("current")
_UrlResourceRuntimeObjectName_Type = OctetString
_UrlResourceRuntimeObjectName_Object = MibTableColumn
urlResourceRuntimeObjectName = _UrlResourceRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1415, 1, 2),
    _UrlResourceRuntimeObjectName_Type()
)
urlResourceRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    urlResourceRuntimeObjectName.setStatus("current")
_UrlResourceRuntimeType_Type = OctetString
_UrlResourceRuntimeType_Object = MibTableColumn
urlResourceRuntimeType = _UrlResourceRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1415, 1, 3),
    _UrlResourceRuntimeType_Type()
)
urlResourceRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    urlResourceRuntimeType.setStatus("current")
_UrlResourceRuntimeName_Type = OctetString
_UrlResourceRuntimeName_Object = MibTableColumn
urlResourceRuntimeName = _UrlResourceRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1415, 1, 4),
    _UrlResourceRuntimeName_Type()
)
urlResourceRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    urlResourceRuntimeName.setStatus("current")
_UnicastMessagingRuntimeTable_Object = MibTable
unicastMessagingRuntimeTable = _UnicastMessagingRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1420)
)
if mibBuilder.loadTexts:
    unicastMessagingRuntimeTable.setStatus("current")
_UnicastMessagingRuntimeEntry_Object = MibTableRow
unicastMessagingRuntimeEntry = _UnicastMessagingRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1420, 1)
)
unicastMessagingRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "unicastMessagingRuntimeIndex"),
)
if mibBuilder.loadTexts:
    unicastMessagingRuntimeEntry.setStatus("current")
_UnicastMessagingRuntimeIndex_Type = OctetString
_UnicastMessagingRuntimeIndex_Object = MibTableColumn
unicastMessagingRuntimeIndex = _UnicastMessagingRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1420, 1, 1),
    _UnicastMessagingRuntimeIndex_Type()
)
unicastMessagingRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    unicastMessagingRuntimeIndex.setStatus("current")
_UnicastMessagingRuntimeObjectName_Type = OctetString
_UnicastMessagingRuntimeObjectName_Object = MibTableColumn
unicastMessagingRuntimeObjectName = _UnicastMessagingRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1420, 1, 2),
    _UnicastMessagingRuntimeObjectName_Type()
)
unicastMessagingRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unicastMessagingRuntimeObjectName.setStatus("current")
_UnicastMessagingRuntimeType_Type = OctetString
_UnicastMessagingRuntimeType_Object = MibTableColumn
unicastMessagingRuntimeType = _UnicastMessagingRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1420, 1, 3),
    _UnicastMessagingRuntimeType_Type()
)
unicastMessagingRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unicastMessagingRuntimeType.setStatus("current")
_UnicastMessagingRuntimeRemoteGroupsDiscoveredCount_Type = Integer32
_UnicastMessagingRuntimeRemoteGroupsDiscoveredCount_Object = MibTableColumn
unicastMessagingRuntimeRemoteGroupsDiscoveredCount = _UnicastMessagingRuntimeRemoteGroupsDiscoveredCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1420, 1, 4),
    _UnicastMessagingRuntimeRemoteGroupsDiscoveredCount_Type()
)
unicastMessagingRuntimeRemoteGroupsDiscoveredCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unicastMessagingRuntimeRemoteGroupsDiscoveredCount.setStatus("current")
_UnicastMessagingRuntimeTotalGroupsCount_Type = Integer32
_UnicastMessagingRuntimeTotalGroupsCount_Object = MibTableColumn
unicastMessagingRuntimeTotalGroupsCount = _UnicastMessagingRuntimeTotalGroupsCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1420, 1, 5),
    _UnicastMessagingRuntimeTotalGroupsCount_Type()
)
unicastMessagingRuntimeTotalGroupsCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unicastMessagingRuntimeTotalGroupsCount.setStatus("current")
_UnicastMessagingRuntimeLocalGroupLeaderName_Type = OctetString
_UnicastMessagingRuntimeLocalGroupLeaderName_Object = MibTableColumn
unicastMessagingRuntimeLocalGroupLeaderName = _UnicastMessagingRuntimeLocalGroupLeaderName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1420, 1, 6),
    _UnicastMessagingRuntimeLocalGroupLeaderName_Type()
)
unicastMessagingRuntimeLocalGroupLeaderName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unicastMessagingRuntimeLocalGroupLeaderName.setStatus("current")
_UnicastMessagingRuntimeGroups_Type = OctetString
_UnicastMessagingRuntimeGroups_Object = MibTableColumn
unicastMessagingRuntimeGroups = _UnicastMessagingRuntimeGroups_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1420, 1, 7),
    _UnicastMessagingRuntimeGroups_Type()
)
unicastMessagingRuntimeGroups.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unicastMessagingRuntimeGroups.setStatus("current")
_UnicastMessagingRuntimeName_Type = OctetString
_UnicastMessagingRuntimeName_Object = MibTableColumn
unicastMessagingRuntimeName = _UnicastMessagingRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1420, 1, 8),
    _UnicastMessagingRuntimeName_Type()
)
unicastMessagingRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unicastMessagingRuntimeName.setStatus("current")
_WldfAccessRuntimeTable_Object = MibTable
wldfAccessRuntimeTable = _WldfAccessRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1425)
)
if mibBuilder.loadTexts:
    wldfAccessRuntimeTable.setStatus("current")
_WldfAccessRuntimeEntry_Object = MibTableRow
wldfAccessRuntimeEntry = _WldfAccessRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1425, 1)
)
wldfAccessRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wldfAccessRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wldfAccessRuntimeEntry.setStatus("current")
_WldfAccessRuntimeIndex_Type = OctetString
_WldfAccessRuntimeIndex_Object = MibTableColumn
wldfAccessRuntimeIndex = _WldfAccessRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1425, 1, 1),
    _WldfAccessRuntimeIndex_Type()
)
wldfAccessRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wldfAccessRuntimeIndex.setStatus("current")
_WldfAccessRuntimeObjectName_Type = OctetString
_WldfAccessRuntimeObjectName_Object = MibTableColumn
wldfAccessRuntimeObjectName = _WldfAccessRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1425, 1, 2),
    _WldfAccessRuntimeObjectName_Type()
)
wldfAccessRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfAccessRuntimeObjectName.setStatus("current")
_WldfAccessRuntimeType_Type = OctetString
_WldfAccessRuntimeType_Object = MibTableColumn
wldfAccessRuntimeType = _WldfAccessRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1425, 1, 3),
    _WldfAccessRuntimeType_Type()
)
wldfAccessRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfAccessRuntimeType.setStatus("current")
_WldfAccessRuntimeName_Type = OctetString
_WldfAccessRuntimeName_Object = MibTableColumn
wldfAccessRuntimeName = _WldfAccessRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1425, 1, 4),
    _WldfAccessRuntimeName_Type()
)
wldfAccessRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfAccessRuntimeName.setStatus("current")
_WldfDataAccessRuntimeTable_Object = MibTable
wldfDataAccessRuntimeTable = _WldfDataAccessRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1430)
)
if mibBuilder.loadTexts:
    wldfDataAccessRuntimeTable.setStatus("current")
_WldfDataAccessRuntimeEntry_Object = MibTableRow
wldfDataAccessRuntimeEntry = _WldfDataAccessRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1430, 1)
)
wldfDataAccessRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wldfDataAccessRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wldfDataAccessRuntimeEntry.setStatus("current")
_WldfDataAccessRuntimeIndex_Type = OctetString
_WldfDataAccessRuntimeIndex_Object = MibTableColumn
wldfDataAccessRuntimeIndex = _WldfDataAccessRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1430, 1, 1),
    _WldfDataAccessRuntimeIndex_Type()
)
wldfDataAccessRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wldfDataAccessRuntimeIndex.setStatus("current")
_WldfDataAccessRuntimeObjectName_Type = OctetString
_WldfDataAccessRuntimeObjectName_Object = MibTableColumn
wldfDataAccessRuntimeObjectName = _WldfDataAccessRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1430, 1, 2),
    _WldfDataAccessRuntimeObjectName_Type()
)
wldfDataAccessRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataAccessRuntimeObjectName.setStatus("current")
_WldfDataAccessRuntimeType_Type = OctetString
_WldfDataAccessRuntimeType_Object = MibTableColumn
wldfDataAccessRuntimeType = _WldfDataAccessRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1430, 1, 3),
    _WldfDataAccessRuntimeType_Type()
)
wldfDataAccessRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataAccessRuntimeType.setStatus("current")
_WldfDataAccessRuntimeEarliestAvailableTimestamp_Type = Counter64
_WldfDataAccessRuntimeEarliestAvailableTimestamp_Object = MibTableColumn
wldfDataAccessRuntimeEarliestAvailableTimestamp = _WldfDataAccessRuntimeEarliestAvailableTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1430, 1, 4),
    _WldfDataAccessRuntimeEarliestAvailableTimestamp_Type()
)
wldfDataAccessRuntimeEarliestAvailableTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataAccessRuntimeEarliestAvailableTimestamp.setStatus("current")
_WldfDataAccessRuntimeLatestAvailableTimestamp_Type = Counter64
_WldfDataAccessRuntimeLatestAvailableTimestamp_Object = MibTableColumn
wldfDataAccessRuntimeLatestAvailableTimestamp = _WldfDataAccessRuntimeLatestAvailableTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1430, 1, 5),
    _WldfDataAccessRuntimeLatestAvailableTimestamp_Type()
)
wldfDataAccessRuntimeLatestAvailableTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataAccessRuntimeLatestAvailableTimestamp.setStatus("current")
_WldfDataAccessRuntimeTimestampAvailable_Type = OctetString
_WldfDataAccessRuntimeTimestampAvailable_Object = MibTableColumn
wldfDataAccessRuntimeTimestampAvailable = _WldfDataAccessRuntimeTimestampAvailable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1430, 1, 6),
    _WldfDataAccessRuntimeTimestampAvailable_Type()
)
wldfDataAccessRuntimeTimestampAvailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataAccessRuntimeTimestampAvailable.setStatus("current")
_WldfDataAccessRuntimeName_Type = OctetString
_WldfDataAccessRuntimeName_Object = MibTableColumn
wldfDataAccessRuntimeName = _WldfDataAccessRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1430, 1, 7),
    _WldfDataAccessRuntimeName_Type()
)
wldfDataAccessRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataAccessRuntimeName.setStatus("current")
_WldfDataAccessRuntimeLatestRecordId_Type = Counter64
_WldfDataAccessRuntimeLatestRecordId_Object = MibTableColumn
wldfDataAccessRuntimeLatestRecordId = _WldfDataAccessRuntimeLatestRecordId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1430, 1, 8),
    _WldfDataAccessRuntimeLatestRecordId_Type()
)
wldfDataAccessRuntimeLatestRecordId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataAccessRuntimeLatestRecordId.setStatus("current")
_WldfDataRetirementTaskRuntimeTable_Object = MibTable
wldfDataRetirementTaskRuntimeTable = _WldfDataRetirementTaskRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1435)
)
if mibBuilder.loadTexts:
    wldfDataRetirementTaskRuntimeTable.setStatus("current")
_WldfDataRetirementTaskRuntimeEntry_Object = MibTableRow
wldfDataRetirementTaskRuntimeEntry = _WldfDataRetirementTaskRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1435, 1)
)
wldfDataRetirementTaskRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wldfDataRetirementTaskRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wldfDataRetirementTaskRuntimeEntry.setStatus("current")
_WldfDataRetirementTaskRuntimeIndex_Type = OctetString
_WldfDataRetirementTaskRuntimeIndex_Object = MibTableColumn
wldfDataRetirementTaskRuntimeIndex = _WldfDataRetirementTaskRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1435, 1, 1),
    _WldfDataRetirementTaskRuntimeIndex_Type()
)
wldfDataRetirementTaskRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wldfDataRetirementTaskRuntimeIndex.setStatus("current")
_WldfDataRetirementTaskRuntimeObjectName_Type = OctetString
_WldfDataRetirementTaskRuntimeObjectName_Object = MibTableColumn
wldfDataRetirementTaskRuntimeObjectName = _WldfDataRetirementTaskRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1435, 1, 2),
    _WldfDataRetirementTaskRuntimeObjectName_Type()
)
wldfDataRetirementTaskRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataRetirementTaskRuntimeObjectName.setStatus("current")
_WldfDataRetirementTaskRuntimeType_Type = OctetString
_WldfDataRetirementTaskRuntimeType_Object = MibTableColumn
wldfDataRetirementTaskRuntimeType = _WldfDataRetirementTaskRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1435, 1, 3),
    _WldfDataRetirementTaskRuntimeType_Type()
)
wldfDataRetirementTaskRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataRetirementTaskRuntimeType.setStatus("current")
_WldfDataRetirementTaskRuntimeStatus_Type = OctetString
_WldfDataRetirementTaskRuntimeStatus_Object = MibTableColumn
wldfDataRetirementTaskRuntimeStatus = _WldfDataRetirementTaskRuntimeStatus_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1435, 1, 4),
    _WldfDataRetirementTaskRuntimeStatus_Type()
)
wldfDataRetirementTaskRuntimeStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataRetirementTaskRuntimeStatus.setStatus("current")
_WldfDataRetirementTaskRuntimeRetiredRecordsCount_Type = Counter64
_WldfDataRetirementTaskRuntimeRetiredRecordsCount_Object = MibTableColumn
wldfDataRetirementTaskRuntimeRetiredRecordsCount = _WldfDataRetirementTaskRuntimeRetiredRecordsCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1435, 1, 5),
    _WldfDataRetirementTaskRuntimeRetiredRecordsCount_Type()
)
wldfDataRetirementTaskRuntimeRetiredRecordsCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataRetirementTaskRuntimeRetiredRecordsCount.setStatus("current")
_WldfDataRetirementTaskRuntimeRunning_Type = OctetString
_WldfDataRetirementTaskRuntimeRunning_Object = MibTableColumn
wldfDataRetirementTaskRuntimeRunning = _WldfDataRetirementTaskRuntimeRunning_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1435, 1, 6),
    _WldfDataRetirementTaskRuntimeRunning_Type()
)
wldfDataRetirementTaskRuntimeRunning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataRetirementTaskRuntimeRunning.setStatus("current")
_WldfDataRetirementTaskRuntimeBeginTime_Type = Counter64
_WldfDataRetirementTaskRuntimeBeginTime_Object = MibTableColumn
wldfDataRetirementTaskRuntimeBeginTime = _WldfDataRetirementTaskRuntimeBeginTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1435, 1, 7),
    _WldfDataRetirementTaskRuntimeBeginTime_Type()
)
wldfDataRetirementTaskRuntimeBeginTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataRetirementTaskRuntimeBeginTime.setStatus("current")
_WldfDataRetirementTaskRuntimeEndTime_Type = Counter64
_WldfDataRetirementTaskRuntimeEndTime_Object = MibTableColumn
wldfDataRetirementTaskRuntimeEndTime = _WldfDataRetirementTaskRuntimeEndTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1435, 1, 8),
    _WldfDataRetirementTaskRuntimeEndTime_Type()
)
wldfDataRetirementTaskRuntimeEndTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataRetirementTaskRuntimeEndTime.setStatus("current")
_WldfDataRetirementTaskRuntimeSystemTask_Type = OctetString
_WldfDataRetirementTaskRuntimeSystemTask_Object = MibTableColumn
wldfDataRetirementTaskRuntimeSystemTask = _WldfDataRetirementTaskRuntimeSystemTask_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1435, 1, 9),
    _WldfDataRetirementTaskRuntimeSystemTask_Type()
)
wldfDataRetirementTaskRuntimeSystemTask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataRetirementTaskRuntimeSystemTask.setStatus("current")
_WldfDataRetirementTaskRuntimeDescription_Type = OctetString
_WldfDataRetirementTaskRuntimeDescription_Object = MibTableColumn
wldfDataRetirementTaskRuntimeDescription = _WldfDataRetirementTaskRuntimeDescription_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1435, 1, 10),
    _WldfDataRetirementTaskRuntimeDescription_Type()
)
wldfDataRetirementTaskRuntimeDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataRetirementTaskRuntimeDescription.setStatus("current")
_WldfDataRetirementTaskRuntimeName_Type = OctetString
_WldfDataRetirementTaskRuntimeName_Object = MibTableColumn
wldfDataRetirementTaskRuntimeName = _WldfDataRetirementTaskRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1435, 1, 11),
    _WldfDataRetirementTaskRuntimeName_Type()
)
wldfDataRetirementTaskRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfDataRetirementTaskRuntimeName.setStatus("current")
_WldfImageCreationTaskRuntimeTable_Object = MibTable
wldfImageCreationTaskRuntimeTable = _WldfImageCreationTaskRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1440)
)
if mibBuilder.loadTexts:
    wldfImageCreationTaskRuntimeTable.setStatus("current")
_WldfImageCreationTaskRuntimeEntry_Object = MibTableRow
wldfImageCreationTaskRuntimeEntry = _WldfImageCreationTaskRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1440, 1)
)
wldfImageCreationTaskRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wldfImageCreationTaskRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wldfImageCreationTaskRuntimeEntry.setStatus("current")
_WldfImageCreationTaskRuntimeIndex_Type = OctetString
_WldfImageCreationTaskRuntimeIndex_Object = MibTableColumn
wldfImageCreationTaskRuntimeIndex = _WldfImageCreationTaskRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1440, 1, 1),
    _WldfImageCreationTaskRuntimeIndex_Type()
)
wldfImageCreationTaskRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wldfImageCreationTaskRuntimeIndex.setStatus("current")
_WldfImageCreationTaskRuntimeObjectName_Type = OctetString
_WldfImageCreationTaskRuntimeObjectName_Object = MibTableColumn
wldfImageCreationTaskRuntimeObjectName = _WldfImageCreationTaskRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1440, 1, 2),
    _WldfImageCreationTaskRuntimeObjectName_Type()
)
wldfImageCreationTaskRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfImageCreationTaskRuntimeObjectName.setStatus("current")
_WldfImageCreationTaskRuntimeType_Type = OctetString
_WldfImageCreationTaskRuntimeType_Object = MibTableColumn
wldfImageCreationTaskRuntimeType = _WldfImageCreationTaskRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1440, 1, 3),
    _WldfImageCreationTaskRuntimeType_Type()
)
wldfImageCreationTaskRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfImageCreationTaskRuntimeType.setStatus("current")
_WldfImageCreationTaskRuntimeStatus_Type = OctetString
_WldfImageCreationTaskRuntimeStatus_Object = MibTableColumn
wldfImageCreationTaskRuntimeStatus = _WldfImageCreationTaskRuntimeStatus_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1440, 1, 4),
    _WldfImageCreationTaskRuntimeStatus_Type()
)
wldfImageCreationTaskRuntimeStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfImageCreationTaskRuntimeStatus.setStatus("current")
_WldfImageCreationTaskRuntimeRunning_Type = OctetString
_WldfImageCreationTaskRuntimeRunning_Object = MibTableColumn
wldfImageCreationTaskRuntimeRunning = _WldfImageCreationTaskRuntimeRunning_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1440, 1, 5),
    _WldfImageCreationTaskRuntimeRunning_Type()
)
wldfImageCreationTaskRuntimeRunning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfImageCreationTaskRuntimeRunning.setStatus("current")
_WldfImageCreationTaskRuntimeBeginTime_Type = Counter64
_WldfImageCreationTaskRuntimeBeginTime_Object = MibTableColumn
wldfImageCreationTaskRuntimeBeginTime = _WldfImageCreationTaskRuntimeBeginTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1440, 1, 6),
    _WldfImageCreationTaskRuntimeBeginTime_Type()
)
wldfImageCreationTaskRuntimeBeginTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfImageCreationTaskRuntimeBeginTime.setStatus("current")
_WldfImageCreationTaskRuntimeEndTime_Type = Counter64
_WldfImageCreationTaskRuntimeEndTime_Object = MibTableColumn
wldfImageCreationTaskRuntimeEndTime = _WldfImageCreationTaskRuntimeEndTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1440, 1, 7),
    _WldfImageCreationTaskRuntimeEndTime_Type()
)
wldfImageCreationTaskRuntimeEndTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfImageCreationTaskRuntimeEndTime.setStatus("current")
_WldfImageCreationTaskRuntimeSystemTask_Type = OctetString
_WldfImageCreationTaskRuntimeSystemTask_Object = MibTableColumn
wldfImageCreationTaskRuntimeSystemTask = _WldfImageCreationTaskRuntimeSystemTask_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1440, 1, 8),
    _WldfImageCreationTaskRuntimeSystemTask_Type()
)
wldfImageCreationTaskRuntimeSystemTask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfImageCreationTaskRuntimeSystemTask.setStatus("current")
_WldfImageCreationTaskRuntimeDescription_Type = OctetString
_WldfImageCreationTaskRuntimeDescription_Object = MibTableColumn
wldfImageCreationTaskRuntimeDescription = _WldfImageCreationTaskRuntimeDescription_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1440, 1, 9),
    _WldfImageCreationTaskRuntimeDescription_Type()
)
wldfImageCreationTaskRuntimeDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfImageCreationTaskRuntimeDescription.setStatus("current")
_WldfImageCreationTaskRuntimeName_Type = OctetString
_WldfImageCreationTaskRuntimeName_Object = MibTableColumn
wldfImageCreationTaskRuntimeName = _WldfImageCreationTaskRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1440, 1, 10),
    _WldfImageCreationTaskRuntimeName_Type()
)
wldfImageCreationTaskRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfImageCreationTaskRuntimeName.setStatus("current")
_WldfImageRuntimeTable_Object = MibTable
wldfImageRuntimeTable = _WldfImageRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1445)
)
if mibBuilder.loadTexts:
    wldfImageRuntimeTable.setStatus("current")
_WldfImageRuntimeEntry_Object = MibTableRow
wldfImageRuntimeEntry = _WldfImageRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1445, 1)
)
wldfImageRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wldfImageRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wldfImageRuntimeEntry.setStatus("current")
_WldfImageRuntimeIndex_Type = OctetString
_WldfImageRuntimeIndex_Object = MibTableColumn
wldfImageRuntimeIndex = _WldfImageRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1445, 1, 1),
    _WldfImageRuntimeIndex_Type()
)
wldfImageRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wldfImageRuntimeIndex.setStatus("current")
_WldfImageRuntimeObjectName_Type = OctetString
_WldfImageRuntimeObjectName_Object = MibTableColumn
wldfImageRuntimeObjectName = _WldfImageRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1445, 1, 2),
    _WldfImageRuntimeObjectName_Type()
)
wldfImageRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfImageRuntimeObjectName.setStatus("current")
_WldfImageRuntimeType_Type = OctetString
_WldfImageRuntimeType_Object = MibTableColumn
wldfImageRuntimeType = _WldfImageRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1445, 1, 3),
    _WldfImageRuntimeType_Type()
)
wldfImageRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfImageRuntimeType.setStatus("current")
_WldfImageRuntimeName_Type = OctetString
_WldfImageRuntimeName_Object = MibTableColumn
wldfImageRuntimeName = _WldfImageRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1445, 1, 4),
    _WldfImageRuntimeName_Type()
)
wldfImageRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfImageRuntimeName.setStatus("current")
_WldfRuntimeTable_Object = MibTable
wldfRuntimeTable = _WldfRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1450)
)
if mibBuilder.loadTexts:
    wldfRuntimeTable.setStatus("current")
_WldfRuntimeEntry_Object = MibTableRow
wldfRuntimeEntry = _WldfRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1450, 1)
)
wldfRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wldfRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wldfRuntimeEntry.setStatus("current")
_WldfRuntimeIndex_Type = OctetString
_WldfRuntimeIndex_Object = MibTableColumn
wldfRuntimeIndex = _WldfRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1450, 1, 1),
    _WldfRuntimeIndex_Type()
)
wldfRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wldfRuntimeIndex.setStatus("current")
_WldfRuntimeObjectName_Type = OctetString
_WldfRuntimeObjectName_Object = MibTableColumn
wldfRuntimeObjectName = _WldfRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1450, 1, 2),
    _WldfRuntimeObjectName_Type()
)
wldfRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfRuntimeObjectName.setStatus("current")
_WldfRuntimeType_Type = OctetString
_WldfRuntimeType_Object = MibTableColumn
wldfRuntimeType = _WldfRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1450, 1, 3),
    _WldfRuntimeType_Type()
)
wldfRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfRuntimeType.setStatus("current")
_WldfRuntimeName_Type = OctetString
_WldfRuntimeName_Object = MibTableColumn
wldfRuntimeName = _WldfRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1450, 1, 4),
    _WldfRuntimeName_Type()
)
wldfRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfRuntimeName.setStatus("current")
_WldfWatchJMXNotificationRuntimeTable_Object = MibTable
wldfWatchJMXNotificationRuntimeTable = _WldfWatchJMXNotificationRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1455)
)
if mibBuilder.loadTexts:
    wldfWatchJMXNotificationRuntimeTable.setStatus("current")
_WldfWatchJMXNotificationRuntimeEntry_Object = MibTableRow
wldfWatchJMXNotificationRuntimeEntry = _WldfWatchJMXNotificationRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1455, 1)
)
wldfWatchJMXNotificationRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wldfWatchJMXNotificationRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wldfWatchJMXNotificationRuntimeEntry.setStatus("current")
_WldfWatchJMXNotificationRuntimeIndex_Type = OctetString
_WldfWatchJMXNotificationRuntimeIndex_Object = MibTableColumn
wldfWatchJMXNotificationRuntimeIndex = _WldfWatchJMXNotificationRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1455, 1, 1),
    _WldfWatchJMXNotificationRuntimeIndex_Type()
)
wldfWatchJMXNotificationRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wldfWatchJMXNotificationRuntimeIndex.setStatus("current")
_WldfWatchJMXNotificationRuntimeObjectName_Type = OctetString
_WldfWatchJMXNotificationRuntimeObjectName_Object = MibTableColumn
wldfWatchJMXNotificationRuntimeObjectName = _WldfWatchJMXNotificationRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1455, 1, 2),
    _WldfWatchJMXNotificationRuntimeObjectName_Type()
)
wldfWatchJMXNotificationRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchJMXNotificationRuntimeObjectName.setStatus("current")
_WldfWatchJMXNotificationRuntimeType_Type = OctetString
_WldfWatchJMXNotificationRuntimeType_Object = MibTableColumn
wldfWatchJMXNotificationRuntimeType = _WldfWatchJMXNotificationRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1455, 1, 3),
    _WldfWatchJMXNotificationRuntimeType_Type()
)
wldfWatchJMXNotificationRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchJMXNotificationRuntimeType.setStatus("current")
_WldfWatchJMXNotificationRuntimeName_Type = OctetString
_WldfWatchJMXNotificationRuntimeName_Object = MibTableColumn
wldfWatchJMXNotificationRuntimeName = _WldfWatchJMXNotificationRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1455, 1, 4),
    _WldfWatchJMXNotificationRuntimeName_Type()
)
wldfWatchJMXNotificationRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wldfWatchJMXNotificationRuntimeName.setStatus("current")
_WsrmRemoteEndpointRuntimeTable_Object = MibTable
wsrmRemoteEndpointRuntimeTable = _WsrmRemoteEndpointRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460)
)
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeTable.setStatus("current")
_WsrmRemoteEndpointRuntimeEntry_Object = MibTableRow
wsrmRemoteEndpointRuntimeEntry = _WsrmRemoteEndpointRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1)
)
wsrmRemoteEndpointRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wsrmRemoteEndpointRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeEntry.setStatus("current")
_WsrmRemoteEndpointRuntimeIndex_Type = OctetString
_WsrmRemoteEndpointRuntimeIndex_Object = MibTableColumn
wsrmRemoteEndpointRuntimeIndex = _WsrmRemoteEndpointRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 1),
    _WsrmRemoteEndpointRuntimeIndex_Type()
)
wsrmRemoteEndpointRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeIndex.setStatus("current")
_WsrmRemoteEndpointRuntimeObjectName_Type = OctetString
_WsrmRemoteEndpointRuntimeObjectName_Object = MibTableColumn
wsrmRemoteEndpointRuntimeObjectName = _WsrmRemoteEndpointRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 2),
    _WsrmRemoteEndpointRuntimeObjectName_Type()
)
wsrmRemoteEndpointRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeObjectName.setStatus("current")
_WsrmRemoteEndpointRuntimeType_Type = OctetString
_WsrmRemoteEndpointRuntimeType_Object = MibTableColumn
wsrmRemoteEndpointRuntimeType = _WsrmRemoteEndpointRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 3),
    _WsrmRemoteEndpointRuntimeType_Type()
)
wsrmRemoteEndpointRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeType.setStatus("current")
_WsrmRemoteEndpointRuntimeUptimeTotal_Type = Counter64
_WsrmRemoteEndpointRuntimeUptimeTotal_Object = MibTableColumn
wsrmRemoteEndpointRuntimeUptimeTotal = _WsrmRemoteEndpointRuntimeUptimeTotal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 4),
    _WsrmRemoteEndpointRuntimeUptimeTotal_Type()
)
wsrmRemoteEndpointRuntimeUptimeTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeUptimeTotal.setStatus("current")
_WsrmRemoteEndpointRuntimeMessagesCurrentCount_Type = Counter64
_WsrmRemoteEndpointRuntimeMessagesCurrentCount_Object = MibTableColumn
wsrmRemoteEndpointRuntimeMessagesCurrentCount = _WsrmRemoteEndpointRuntimeMessagesCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 5),
    _WsrmRemoteEndpointRuntimeMessagesCurrentCount_Type()
)
wsrmRemoteEndpointRuntimeMessagesCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeMessagesCurrentCount.setStatus("current")
_WsrmRemoteEndpointRuntimeDowntimeTotal_Type = Counter64
_WsrmRemoteEndpointRuntimeDowntimeTotal_Object = MibTableColumn
wsrmRemoteEndpointRuntimeDowntimeTotal = _WsrmRemoteEndpointRuntimeDowntimeTotal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 6),
    _WsrmRemoteEndpointRuntimeDowntimeTotal_Type()
)
wsrmRemoteEndpointRuntimeDowntimeTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeDowntimeTotal.setStatus("current")
_WsrmRemoteEndpointRuntimeBytesReceivedCount_Type = Counter64
_WsrmRemoteEndpointRuntimeBytesReceivedCount_Object = MibTableColumn
wsrmRemoteEndpointRuntimeBytesReceivedCount = _WsrmRemoteEndpointRuntimeBytesReceivedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 7),
    _WsrmRemoteEndpointRuntimeBytesReceivedCount_Type()
)
wsrmRemoteEndpointRuntimeBytesReceivedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeBytesReceivedCount.setStatus("current")
_WsrmRemoteEndpointRuntimeEndpointType_Type = OctetString
_WsrmRemoteEndpointRuntimeEndpointType_Object = MibTableColumn
wsrmRemoteEndpointRuntimeEndpointType = _WsrmRemoteEndpointRuntimeEndpointType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 8),
    _WsrmRemoteEndpointRuntimeEndpointType_Type()
)
wsrmRemoteEndpointRuntimeEndpointType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeEndpointType.setStatus("current")
_WsrmRemoteEndpointRuntimeFailedMessagesTotal_Type = Counter64
_WsrmRemoteEndpointRuntimeFailedMessagesTotal_Object = MibTableColumn
wsrmRemoteEndpointRuntimeFailedMessagesTotal = _WsrmRemoteEndpointRuntimeFailedMessagesTotal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 9),
    _WsrmRemoteEndpointRuntimeFailedMessagesTotal_Type()
)
wsrmRemoteEndpointRuntimeFailedMessagesTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeFailedMessagesTotal.setStatus("current")
_WsrmRemoteEndpointRuntimeMessagesReceivedCount_Type = Counter64
_WsrmRemoteEndpointRuntimeMessagesReceivedCount_Object = MibTableColumn
wsrmRemoteEndpointRuntimeMessagesReceivedCount = _WsrmRemoteEndpointRuntimeMessagesReceivedCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 10),
    _WsrmRemoteEndpointRuntimeMessagesReceivedCount_Type()
)
wsrmRemoteEndpointRuntimeMessagesReceivedCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeMessagesReceivedCount.setStatus("current")
_WsrmRemoteEndpointRuntimeURL_Type = OctetString
_WsrmRemoteEndpointRuntimeURL_Object = MibTableColumn
wsrmRemoteEndpointRuntimeURL = _WsrmRemoteEndpointRuntimeURL_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 11),
    _WsrmRemoteEndpointRuntimeURL_Type()
)
wsrmRemoteEndpointRuntimeURL.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeURL.setStatus("current")
_WsrmRemoteEndpointRuntimePausedForIncoming_Type = OctetString
_WsrmRemoteEndpointRuntimePausedForIncoming_Object = MibTableColumn
wsrmRemoteEndpointRuntimePausedForIncoming = _WsrmRemoteEndpointRuntimePausedForIncoming_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 12),
    _WsrmRemoteEndpointRuntimePausedForIncoming_Type()
)
wsrmRemoteEndpointRuntimePausedForIncoming.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimePausedForIncoming.setStatus("current")
_WsrmRemoteEndpointRuntimeName_Type = OctetString
_WsrmRemoteEndpointRuntimeName_Object = MibTableColumn
wsrmRemoteEndpointRuntimeName = _WsrmRemoteEndpointRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 13),
    _WsrmRemoteEndpointRuntimeName_Type()
)
wsrmRemoteEndpointRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeName.setStatus("current")
_WsrmRemoteEndpointRuntimeBytesHighCount_Type = Counter64
_WsrmRemoteEndpointRuntimeBytesHighCount_Object = MibTableColumn
wsrmRemoteEndpointRuntimeBytesHighCount = _WsrmRemoteEndpointRuntimeBytesHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 14),
    _WsrmRemoteEndpointRuntimeBytesHighCount_Type()
)
wsrmRemoteEndpointRuntimeBytesHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeBytesHighCount.setStatus("current")
_WsrmRemoteEndpointRuntimeUptimeHigh_Type = Counter64
_WsrmRemoteEndpointRuntimeUptimeHigh_Object = MibTableColumn
wsrmRemoteEndpointRuntimeUptimeHigh = _WsrmRemoteEndpointRuntimeUptimeHigh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 15),
    _WsrmRemoteEndpointRuntimeUptimeHigh_Type()
)
wsrmRemoteEndpointRuntimeUptimeHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeUptimeHigh.setStatus("current")
_WsrmRemoteEndpointRuntimeBytesCurrentCount_Type = Counter64
_WsrmRemoteEndpointRuntimeBytesCurrentCount_Object = MibTableColumn
wsrmRemoteEndpointRuntimeBytesCurrentCount = _WsrmRemoteEndpointRuntimeBytesCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 16),
    _WsrmRemoteEndpointRuntimeBytesCurrentCount_Type()
)
wsrmRemoteEndpointRuntimeBytesCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeBytesCurrentCount.setStatus("current")
_WsrmRemoteEndpointRuntimeMessagesPendingCount_Type = Counter64
_WsrmRemoteEndpointRuntimeMessagesPendingCount_Object = MibTableColumn
wsrmRemoteEndpointRuntimeMessagesPendingCount = _WsrmRemoteEndpointRuntimeMessagesPendingCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 17),
    _WsrmRemoteEndpointRuntimeMessagesPendingCount_Type()
)
wsrmRemoteEndpointRuntimeMessagesPendingCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeMessagesPendingCount.setStatus("current")
_WsrmRemoteEndpointRuntimeConversationsCurrentCount_Type = Counter64
_WsrmRemoteEndpointRuntimeConversationsCurrentCount_Object = MibTableColumn
wsrmRemoteEndpointRuntimeConversationsCurrentCount = _WsrmRemoteEndpointRuntimeConversationsCurrentCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 18),
    _WsrmRemoteEndpointRuntimeConversationsCurrentCount_Type()
)
wsrmRemoteEndpointRuntimeConversationsCurrentCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeConversationsCurrentCount.setStatus("current")
_WsrmRemoteEndpointRuntimeConversationsHighCount_Type = Counter64
_WsrmRemoteEndpointRuntimeConversationsHighCount_Object = MibTableColumn
wsrmRemoteEndpointRuntimeConversationsHighCount = _WsrmRemoteEndpointRuntimeConversationsHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 19),
    _WsrmRemoteEndpointRuntimeConversationsHighCount_Type()
)
wsrmRemoteEndpointRuntimeConversationsHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeConversationsHighCount.setStatus("current")
_WsrmRemoteEndpointRuntimeConversationsTotalCount_Type = Counter64
_WsrmRemoteEndpointRuntimeConversationsTotalCount_Object = MibTableColumn
wsrmRemoteEndpointRuntimeConversationsTotalCount = _WsrmRemoteEndpointRuntimeConversationsTotalCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 20),
    _WsrmRemoteEndpointRuntimeConversationsTotalCount_Type()
)
wsrmRemoteEndpointRuntimeConversationsTotalCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeConversationsTotalCount.setStatus("current")
_WsrmRemoteEndpointRuntimeDowntimeHigh_Type = Counter64
_WsrmRemoteEndpointRuntimeDowntimeHigh_Object = MibTableColumn
wsrmRemoteEndpointRuntimeDowntimeHigh = _WsrmRemoteEndpointRuntimeDowntimeHigh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 21),
    _WsrmRemoteEndpointRuntimeDowntimeHigh_Type()
)
wsrmRemoteEndpointRuntimeDowntimeHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeDowntimeHigh.setStatus("current")
_WsrmRemoteEndpointRuntimeBytesThresholdTime_Type = Counter64
_WsrmRemoteEndpointRuntimeBytesThresholdTime_Object = MibTableColumn
wsrmRemoteEndpointRuntimeBytesThresholdTime = _WsrmRemoteEndpointRuntimeBytesThresholdTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 22),
    _WsrmRemoteEndpointRuntimeBytesThresholdTime_Type()
)
wsrmRemoteEndpointRuntimeBytesThresholdTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeBytesThresholdTime.setStatus("current")
_WsrmRemoteEndpointRuntimeBytesPendingCount_Type = Counter64
_WsrmRemoteEndpointRuntimeBytesPendingCount_Object = MibTableColumn
wsrmRemoteEndpointRuntimeBytesPendingCount = _WsrmRemoteEndpointRuntimeBytesPendingCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 23),
    _WsrmRemoteEndpointRuntimeBytesPendingCount_Type()
)
wsrmRemoteEndpointRuntimeBytesPendingCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeBytesPendingCount.setStatus("current")
_WsrmRemoteEndpointRuntimePausedForForwarding_Type = OctetString
_WsrmRemoteEndpointRuntimePausedForForwarding_Object = MibTableColumn
wsrmRemoteEndpointRuntimePausedForForwarding = _WsrmRemoteEndpointRuntimePausedForForwarding_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 24),
    _WsrmRemoteEndpointRuntimePausedForForwarding_Type()
)
wsrmRemoteEndpointRuntimePausedForForwarding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimePausedForForwarding.setStatus("current")
_WsrmRemoteEndpointRuntimeMessagesThresholdTime_Type = Counter64
_WsrmRemoteEndpointRuntimeMessagesThresholdTime_Object = MibTableColumn
wsrmRemoteEndpointRuntimeMessagesThresholdTime = _WsrmRemoteEndpointRuntimeMessagesThresholdTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 25),
    _WsrmRemoteEndpointRuntimeMessagesThresholdTime_Type()
)
wsrmRemoteEndpointRuntimeMessagesThresholdTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeMessagesThresholdTime.setStatus("current")
_WsrmRemoteEndpointRuntimeMessagesHighCount_Type = Counter64
_WsrmRemoteEndpointRuntimeMessagesHighCount_Object = MibTableColumn
wsrmRemoteEndpointRuntimeMessagesHighCount = _WsrmRemoteEndpointRuntimeMessagesHighCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 26),
    _WsrmRemoteEndpointRuntimeMessagesHighCount_Type()
)
wsrmRemoteEndpointRuntimeMessagesHighCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeMessagesHighCount.setStatus("current")
_WsrmRemoteEndpointRuntimeOperationState_Type = OctetString
_WsrmRemoteEndpointRuntimeOperationState_Object = MibTableColumn
wsrmRemoteEndpointRuntimeOperationState = _WsrmRemoteEndpointRuntimeOperationState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1460, 1, 27),
    _WsrmRemoteEndpointRuntimeOperationState_Type()
)
wsrmRemoteEndpointRuntimeOperationState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wsrmRemoteEndpointRuntimeOperationState.setStatus("current")
_WtcRuntimeTable_Object = MibTable
wtcRuntimeTable = _WtcRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1465)
)
if mibBuilder.loadTexts:
    wtcRuntimeTable.setStatus("current")
_WtcRuntimeEntry_Object = MibTableRow
wtcRuntimeEntry = _WtcRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1465, 1)
)
wtcRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wtcRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wtcRuntimeEntry.setStatus("current")
_WtcRuntimeIndex_Type = OctetString
_WtcRuntimeIndex_Object = MibTableColumn
wtcRuntimeIndex = _WtcRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1465, 1, 1),
    _WtcRuntimeIndex_Type()
)
wtcRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wtcRuntimeIndex.setStatus("current")
_WtcRuntimeObjectName_Type = OctetString
_WtcRuntimeObjectName_Object = MibTableColumn
wtcRuntimeObjectName = _WtcRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1465, 1, 2),
    _WtcRuntimeObjectName_Type()
)
wtcRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRuntimeObjectName.setStatus("current")
_WtcRuntimeType_Type = OctetString
_WtcRuntimeType_Object = MibTableColumn
wtcRuntimeType = _WtcRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1465, 1, 3),
    _WtcRuntimeType_Type()
)
wtcRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRuntimeType.setStatus("current")
_WtcRuntimeName_Type = OctetString
_WtcRuntimeName_Object = MibTableColumn
wtcRuntimeName = _WtcRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1465, 1, 4),
    _WtcRuntimeName_Type()
)
wtcRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wtcRuntimeName.setStatus("current")
_WebServiceComponentRuntimeTable_Object = MibTable
webServiceComponentRuntimeTable = _WebServiceComponentRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1470)
)
if mibBuilder.loadTexts:
    webServiceComponentRuntimeTable.setStatus("current")
_WebServiceComponentRuntimeEntry_Object = MibTableRow
webServiceComponentRuntimeEntry = _WebServiceComponentRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1470, 1)
)
webServiceComponentRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "webServiceComponentRuntimeIndex"),
)
if mibBuilder.loadTexts:
    webServiceComponentRuntimeEntry.setStatus("current")
_WebServiceComponentRuntimeIndex_Type = OctetString
_WebServiceComponentRuntimeIndex_Object = MibTableColumn
webServiceComponentRuntimeIndex = _WebServiceComponentRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1470, 1, 1),
    _WebServiceComponentRuntimeIndex_Type()
)
webServiceComponentRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    webServiceComponentRuntimeIndex.setStatus("current")
_WebServiceComponentRuntimeObjectName_Type = OctetString
_WebServiceComponentRuntimeObjectName_Object = MibTableColumn
webServiceComponentRuntimeObjectName = _WebServiceComponentRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1470, 1, 2),
    _WebServiceComponentRuntimeObjectName_Type()
)
webServiceComponentRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServiceComponentRuntimeObjectName.setStatus("current")
_WebServiceComponentRuntimeType_Type = OctetString
_WebServiceComponentRuntimeType_Object = MibTableColumn
webServiceComponentRuntimeType = _WebServiceComponentRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1470, 1, 3),
    _WebServiceComponentRuntimeType_Type()
)
webServiceComponentRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServiceComponentRuntimeType.setStatus("current")
_WebServiceComponentRuntimeName_Type = OctetString
_WebServiceComponentRuntimeName_Object = MibTableColumn
webServiceComponentRuntimeName = _WebServiceComponentRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1470, 1, 4),
    _WebServiceComponentRuntimeName_Type()
)
webServiceComponentRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServiceComponentRuntimeName.setStatus("current")
_WebServiceHandlerRuntimeTable_Object = MibTable
webServiceHandlerRuntimeTable = _WebServiceHandlerRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1475)
)
if mibBuilder.loadTexts:
    webServiceHandlerRuntimeTable.setStatus("current")
_WebServiceHandlerRuntimeEntry_Object = MibTableRow
webServiceHandlerRuntimeEntry = _WebServiceHandlerRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1475, 1)
)
webServiceHandlerRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "webServiceHandlerRuntimeIndex"),
)
if mibBuilder.loadTexts:
    webServiceHandlerRuntimeEntry.setStatus("current")
_WebServiceHandlerRuntimeIndex_Type = OctetString
_WebServiceHandlerRuntimeIndex_Object = MibTableColumn
webServiceHandlerRuntimeIndex = _WebServiceHandlerRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1475, 1, 1),
    _WebServiceHandlerRuntimeIndex_Type()
)
webServiceHandlerRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    webServiceHandlerRuntimeIndex.setStatus("current")
_WebServiceHandlerRuntimeObjectName_Type = OctetString
_WebServiceHandlerRuntimeObjectName_Object = MibTableColumn
webServiceHandlerRuntimeObjectName = _WebServiceHandlerRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1475, 1, 2),
    _WebServiceHandlerRuntimeObjectName_Type()
)
webServiceHandlerRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServiceHandlerRuntimeObjectName.setStatus("current")
_WebServiceHandlerRuntimeType_Type = OctetString
_WebServiceHandlerRuntimeType_Object = MibTableColumn
webServiceHandlerRuntimeType = _WebServiceHandlerRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1475, 1, 3),
    _WebServiceHandlerRuntimeType_Type()
)
webServiceHandlerRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServiceHandlerRuntimeType.setStatus("current")
_WebServiceHandlerRuntimeName_Type = OctetString
_WebServiceHandlerRuntimeName_Object = MibTableColumn
webServiceHandlerRuntimeName = _WebServiceHandlerRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1475, 1, 4),
    _WebServiceHandlerRuntimeName_Type()
)
webServiceHandlerRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServiceHandlerRuntimeName.setStatus("current")
_WebServiceOperationRuntimeTable_Object = MibTable
webServiceOperationRuntimeTable = _WebServiceOperationRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1480)
)
if mibBuilder.loadTexts:
    webServiceOperationRuntimeTable.setStatus("current")
_WebServiceOperationRuntimeEntry_Object = MibTableRow
webServiceOperationRuntimeEntry = _WebServiceOperationRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1480, 1)
)
webServiceOperationRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "webServiceOperationRuntimeIndex"),
)
if mibBuilder.loadTexts:
    webServiceOperationRuntimeEntry.setStatus("current")
_WebServiceOperationRuntimeIndex_Type = OctetString
_WebServiceOperationRuntimeIndex_Object = MibTableColumn
webServiceOperationRuntimeIndex = _WebServiceOperationRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1480, 1, 1),
    _WebServiceOperationRuntimeIndex_Type()
)
webServiceOperationRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    webServiceOperationRuntimeIndex.setStatus("current")
_WebServiceOperationRuntimeObjectName_Type = OctetString
_WebServiceOperationRuntimeObjectName_Object = MibTableColumn
webServiceOperationRuntimeObjectName = _WebServiceOperationRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1480, 1, 2),
    _WebServiceOperationRuntimeObjectName_Type()
)
webServiceOperationRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServiceOperationRuntimeObjectName.setStatus("current")
_WebServiceOperationRuntimeType_Type = OctetString
_WebServiceOperationRuntimeType_Object = MibTableColumn
webServiceOperationRuntimeType = _WebServiceOperationRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1480, 1, 3),
    _WebServiceOperationRuntimeType_Type()
)
webServiceOperationRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServiceOperationRuntimeType.setStatus("current")
_WebServiceOperationRuntimeName_Type = OctetString
_WebServiceOperationRuntimeName_Object = MibTableColumn
webServiceOperationRuntimeName = _WebServiceOperationRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1480, 1, 4),
    _WebServiceOperationRuntimeName_Type()
)
webServiceOperationRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServiceOperationRuntimeName.setStatus("current")
_WebServiceRuntimeTable_Object = MibTable
webServiceRuntimeTable = _WebServiceRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1485)
)
if mibBuilder.loadTexts:
    webServiceRuntimeTable.setStatus("current")
_WebServiceRuntimeEntry_Object = MibTableRow
webServiceRuntimeEntry = _WebServiceRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1485, 1)
)
webServiceRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "webServiceRuntimeIndex"),
)
if mibBuilder.loadTexts:
    webServiceRuntimeEntry.setStatus("current")
_WebServiceRuntimeIndex_Type = OctetString
_WebServiceRuntimeIndex_Object = MibTableColumn
webServiceRuntimeIndex = _WebServiceRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1485, 1, 1),
    _WebServiceRuntimeIndex_Type()
)
webServiceRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    webServiceRuntimeIndex.setStatus("current")
_WebServiceRuntimeObjectName_Type = OctetString
_WebServiceRuntimeObjectName_Object = MibTableColumn
webServiceRuntimeObjectName = _WebServiceRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1485, 1, 2),
    _WebServiceRuntimeObjectName_Type()
)
webServiceRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServiceRuntimeObjectName.setStatus("current")
_WebServiceRuntimeType_Type = OctetString
_WebServiceRuntimeType_Object = MibTableColumn
webServiceRuntimeType = _WebServiceRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1485, 1, 3),
    _WebServiceRuntimeType_Type()
)
webServiceRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServiceRuntimeType.setStatus("current")
_WebServiceRuntimeName_Type = OctetString
_WebServiceRuntimeName_Object = MibTableColumn
webServiceRuntimeName = _WebServiceRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1485, 1, 4),
    _WebServiceRuntimeName_Type()
)
webServiceRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webServiceRuntimeName.setStatus("current")
_WseeHandlerRuntimeTable_Object = MibTable
wseeHandlerRuntimeTable = _WseeHandlerRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1490)
)
if mibBuilder.loadTexts:
    wseeHandlerRuntimeTable.setStatus("current")
_WseeHandlerRuntimeEntry_Object = MibTableRow
wseeHandlerRuntimeEntry = _WseeHandlerRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1490, 1)
)
wseeHandlerRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wseeHandlerRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wseeHandlerRuntimeEntry.setStatus("current")
_WseeHandlerRuntimeIndex_Type = OctetString
_WseeHandlerRuntimeIndex_Object = MibTableColumn
wseeHandlerRuntimeIndex = _WseeHandlerRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1490, 1, 1),
    _WseeHandlerRuntimeIndex_Type()
)
wseeHandlerRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wseeHandlerRuntimeIndex.setStatus("current")
_WseeHandlerRuntimeObjectName_Type = OctetString
_WseeHandlerRuntimeObjectName_Object = MibTableColumn
wseeHandlerRuntimeObjectName = _WseeHandlerRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1490, 1, 2),
    _WseeHandlerRuntimeObjectName_Type()
)
wseeHandlerRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeHandlerRuntimeObjectName.setStatus("current")
_WseeHandlerRuntimeType_Type = OctetString
_WseeHandlerRuntimeType_Object = MibTableColumn
wseeHandlerRuntimeType = _WseeHandlerRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1490, 1, 3),
    _WseeHandlerRuntimeType_Type()
)
wseeHandlerRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeHandlerRuntimeType.setStatus("current")
_WseeHandlerRuntimeName_Type = OctetString
_WseeHandlerRuntimeName_Object = MibTableColumn
wseeHandlerRuntimeName = _WseeHandlerRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1490, 1, 4),
    _WseeHandlerRuntimeName_Type()
)
wseeHandlerRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeHandlerRuntimeName.setStatus("current")
_WseeOperationRuntimeTable_Object = MibTable
wseeOperationRuntimeTable = _WseeOperationRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495)
)
if mibBuilder.loadTexts:
    wseeOperationRuntimeTable.setStatus("current")
_WseeOperationRuntimeEntry_Object = MibTableRow
wseeOperationRuntimeEntry = _WseeOperationRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495, 1)
)
wseeOperationRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wseeOperationRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wseeOperationRuntimeEntry.setStatus("current")
_WseeOperationRuntimeIndex_Type = OctetString
_WseeOperationRuntimeIndex_Object = MibTableColumn
wseeOperationRuntimeIndex = _WseeOperationRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495, 1, 1),
    _WseeOperationRuntimeIndex_Type()
)
wseeOperationRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wseeOperationRuntimeIndex.setStatus("current")
_WseeOperationRuntimeObjectName_Type = OctetString
_WseeOperationRuntimeObjectName_Object = MibTableColumn
wseeOperationRuntimeObjectName = _WseeOperationRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495, 1, 2),
    _WseeOperationRuntimeObjectName_Type()
)
wseeOperationRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeOperationRuntimeObjectName.setStatus("current")
_WseeOperationRuntimeType_Type = OctetString
_WseeOperationRuntimeType_Object = MibTableColumn
wseeOperationRuntimeType = _WseeOperationRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495, 1, 3),
    _WseeOperationRuntimeType_Type()
)
wseeOperationRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeOperationRuntimeType.setStatus("current")
_WseeOperationRuntimeResponseTimeHigh_Type = Counter64
_WseeOperationRuntimeResponseTimeHigh_Object = MibTableColumn
wseeOperationRuntimeResponseTimeHigh = _WseeOperationRuntimeResponseTimeHigh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495, 1, 4),
    _WseeOperationRuntimeResponseTimeHigh_Type()
)
wseeOperationRuntimeResponseTimeHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeOperationRuntimeResponseTimeHigh.setStatus("current")
_WseeOperationRuntimeDispatchTimeLow_Type = Counter64
_WseeOperationRuntimeDispatchTimeLow_Object = MibTableColumn
wseeOperationRuntimeDispatchTimeLow = _WseeOperationRuntimeDispatchTimeLow_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495, 1, 5),
    _WseeOperationRuntimeDispatchTimeLow_Type()
)
wseeOperationRuntimeDispatchTimeLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeOperationRuntimeDispatchTimeLow.setStatus("current")
_WseeOperationRuntimeDispatchTimeTotal_Type = Counter64
_WseeOperationRuntimeDispatchTimeTotal_Object = MibTableColumn
wseeOperationRuntimeDispatchTimeTotal = _WseeOperationRuntimeDispatchTimeTotal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495, 1, 6),
    _WseeOperationRuntimeDispatchTimeTotal_Type()
)
wseeOperationRuntimeDispatchTimeTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeOperationRuntimeDispatchTimeTotal.setStatus("current")
_WseeOperationRuntimeResponseTimeLow_Type = Counter64
_WseeOperationRuntimeResponseTimeLow_Object = MibTableColumn
wseeOperationRuntimeResponseTimeLow = _WseeOperationRuntimeResponseTimeLow_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495, 1, 7),
    _WseeOperationRuntimeResponseTimeLow_Type()
)
wseeOperationRuntimeResponseTimeLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeOperationRuntimeResponseTimeLow.setStatus("current")
_WseeOperationRuntimeResponseCount_Type = Integer32
_WseeOperationRuntimeResponseCount_Object = MibTableColumn
wseeOperationRuntimeResponseCount = _WseeOperationRuntimeResponseCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495, 1, 8),
    _WseeOperationRuntimeResponseCount_Type()
)
wseeOperationRuntimeResponseCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeOperationRuntimeResponseCount.setStatus("current")
_WseeOperationRuntimeDispatchTimeAverage_Type = Counter64
_WseeOperationRuntimeDispatchTimeAverage_Object = MibTableColumn
wseeOperationRuntimeDispatchTimeAverage = _WseeOperationRuntimeDispatchTimeAverage_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495, 1, 9),
    _WseeOperationRuntimeDispatchTimeAverage_Type()
)
wseeOperationRuntimeDispatchTimeAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeOperationRuntimeDispatchTimeAverage.setStatus("current")
_WseeOperationRuntimeResponseErrorCount_Type = Integer32
_WseeOperationRuntimeResponseErrorCount_Object = MibTableColumn
wseeOperationRuntimeResponseErrorCount = _WseeOperationRuntimeResponseErrorCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495, 1, 10),
    _WseeOperationRuntimeResponseErrorCount_Type()
)
wseeOperationRuntimeResponseErrorCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeOperationRuntimeResponseErrorCount.setStatus("current")
_WseeOperationRuntimeExecutionTimeLow_Type = Counter64
_WseeOperationRuntimeExecutionTimeLow_Object = MibTableColumn
wseeOperationRuntimeExecutionTimeLow = _WseeOperationRuntimeExecutionTimeLow_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495, 1, 11),
    _WseeOperationRuntimeExecutionTimeLow_Type()
)
wseeOperationRuntimeExecutionTimeLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeOperationRuntimeExecutionTimeLow.setStatus("current")
_WseeOperationRuntimeOperationName_Type = OctetString
_WseeOperationRuntimeOperationName_Object = MibTableColumn
wseeOperationRuntimeOperationName = _WseeOperationRuntimeOperationName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495, 1, 12),
    _WseeOperationRuntimeOperationName_Type()
)
wseeOperationRuntimeOperationName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeOperationRuntimeOperationName.setStatus("current")
_WseeOperationRuntimeResponseTimeAverage_Type = Counter64
_WseeOperationRuntimeResponseTimeAverage_Object = MibTableColumn
wseeOperationRuntimeResponseTimeAverage = _WseeOperationRuntimeResponseTimeAverage_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495, 1, 13),
    _WseeOperationRuntimeResponseTimeAverage_Type()
)
wseeOperationRuntimeResponseTimeAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeOperationRuntimeResponseTimeAverage.setStatus("current")
_WseeOperationRuntimeExecutionTimeHigh_Type = Counter64
_WseeOperationRuntimeExecutionTimeHigh_Object = MibTableColumn
wseeOperationRuntimeExecutionTimeHigh = _WseeOperationRuntimeExecutionTimeHigh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495, 1, 14),
    _WseeOperationRuntimeExecutionTimeHigh_Type()
)
wseeOperationRuntimeExecutionTimeHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeOperationRuntimeExecutionTimeHigh.setStatus("current")
_WseeOperationRuntimeExecutionTimeTotal_Type = Counter64
_WseeOperationRuntimeExecutionTimeTotal_Object = MibTableColumn
wseeOperationRuntimeExecutionTimeTotal = _WseeOperationRuntimeExecutionTimeTotal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495, 1, 15),
    _WseeOperationRuntimeExecutionTimeTotal_Type()
)
wseeOperationRuntimeExecutionTimeTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeOperationRuntimeExecutionTimeTotal.setStatus("current")
_WseeOperationRuntimeDispatchTimeHigh_Type = Counter64
_WseeOperationRuntimeDispatchTimeHigh_Object = MibTableColumn
wseeOperationRuntimeDispatchTimeHigh = _WseeOperationRuntimeDispatchTimeHigh_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495, 1, 16),
    _WseeOperationRuntimeDispatchTimeHigh_Type()
)
wseeOperationRuntimeDispatchTimeHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeOperationRuntimeDispatchTimeHigh.setStatus("current")
_WseeOperationRuntimeExecutionTimeAverage_Type = Counter64
_WseeOperationRuntimeExecutionTimeAverage_Object = MibTableColumn
wseeOperationRuntimeExecutionTimeAverage = _WseeOperationRuntimeExecutionTimeAverage_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495, 1, 17),
    _WseeOperationRuntimeExecutionTimeAverage_Type()
)
wseeOperationRuntimeExecutionTimeAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeOperationRuntimeExecutionTimeAverage.setStatus("current")
_WseeOperationRuntimeInvocationCount_Type = Integer32
_WseeOperationRuntimeInvocationCount_Object = MibTableColumn
wseeOperationRuntimeInvocationCount = _WseeOperationRuntimeInvocationCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495, 1, 18),
    _WseeOperationRuntimeInvocationCount_Type()
)
wseeOperationRuntimeInvocationCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeOperationRuntimeInvocationCount.setStatus("current")
_WseeOperationRuntimeResponseTimeTotal_Type = Counter64
_WseeOperationRuntimeResponseTimeTotal_Object = MibTableColumn
wseeOperationRuntimeResponseTimeTotal = _WseeOperationRuntimeResponseTimeTotal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495, 1, 19),
    _WseeOperationRuntimeResponseTimeTotal_Type()
)
wseeOperationRuntimeResponseTimeTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeOperationRuntimeResponseTimeTotal.setStatus("current")
_WseeOperationRuntimeName_Type = OctetString
_WseeOperationRuntimeName_Object = MibTableColumn
wseeOperationRuntimeName = _WseeOperationRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1495, 1, 20),
    _WseeOperationRuntimeName_Type()
)
wseeOperationRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeOperationRuntimeName.setStatus("current")
_WseePolicyRuntimeTable_Object = MibTable
wseePolicyRuntimeTable = _WseePolicyRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1500)
)
if mibBuilder.loadTexts:
    wseePolicyRuntimeTable.setStatus("current")
_WseePolicyRuntimeEntry_Object = MibTableRow
wseePolicyRuntimeEntry = _WseePolicyRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1500, 1)
)
wseePolicyRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wseePolicyRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wseePolicyRuntimeEntry.setStatus("current")
_WseePolicyRuntimeIndex_Type = OctetString
_WseePolicyRuntimeIndex_Object = MibTableColumn
wseePolicyRuntimeIndex = _WseePolicyRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1500, 1, 1),
    _WseePolicyRuntimeIndex_Type()
)
wseePolicyRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wseePolicyRuntimeIndex.setStatus("current")
_WseePolicyRuntimeObjectName_Type = OctetString
_WseePolicyRuntimeObjectName_Object = MibTableColumn
wseePolicyRuntimeObjectName = _WseePolicyRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1500, 1, 2),
    _WseePolicyRuntimeObjectName_Type()
)
wseePolicyRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseePolicyRuntimeObjectName.setStatus("current")
_WseePolicyRuntimeType_Type = OctetString
_WseePolicyRuntimeType_Object = MibTableColumn
wseePolicyRuntimeType = _WseePolicyRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1500, 1, 3),
    _WseePolicyRuntimeType_Type()
)
wseePolicyRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseePolicyRuntimeType.setStatus("current")
_WseePolicyRuntimeName_Type = OctetString
_WseePolicyRuntimeName_Object = MibTableColumn
wseePolicyRuntimeName = _WseePolicyRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1500, 1, 4),
    _WseePolicyRuntimeName_Type()
)
wseePolicyRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseePolicyRuntimeName.setStatus("current")
_WseePortRuntimeTable_Object = MibTable
wseePortRuntimeTable = _WseePortRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1505)
)
if mibBuilder.loadTexts:
    wseePortRuntimeTable.setStatus("current")
_WseePortRuntimeEntry_Object = MibTableRow
wseePortRuntimeEntry = _WseePortRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1505, 1)
)
wseePortRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wseePortRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wseePortRuntimeEntry.setStatus("current")
_WseePortRuntimeIndex_Type = OctetString
_WseePortRuntimeIndex_Object = MibTableColumn
wseePortRuntimeIndex = _WseePortRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1505, 1, 1),
    _WseePortRuntimeIndex_Type()
)
wseePortRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wseePortRuntimeIndex.setStatus("current")
_WseePortRuntimeObjectName_Type = OctetString
_WseePortRuntimeObjectName_Object = MibTableColumn
wseePortRuntimeObjectName = _WseePortRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1505, 1, 2),
    _WseePortRuntimeObjectName_Type()
)
wseePortRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseePortRuntimeObjectName.setStatus("current")
_WseePortRuntimeType_Type = OctetString
_WseePortRuntimeType_Object = MibTableColumn
wseePortRuntimeType = _WseePortRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1505, 1, 3),
    _WseePortRuntimeType_Type()
)
wseePortRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseePortRuntimeType.setStatus("current")
_WseePortRuntimePortName_Type = OctetString
_WseePortRuntimePortName_Object = MibTableColumn
wseePortRuntimePortName = _WseePortRuntimePortName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1505, 1, 4),
    _WseePortRuntimePortName_Type()
)
wseePortRuntimePortName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseePortRuntimePortName.setStatus("current")
_WseePortRuntimeTransportProtocolType_Type = OctetString
_WseePortRuntimeTransportProtocolType_Object = MibTableColumn
wseePortRuntimeTransportProtocolType = _WseePortRuntimeTransportProtocolType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1505, 1, 5),
    _WseePortRuntimeTransportProtocolType_Type()
)
wseePortRuntimeTransportProtocolType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseePortRuntimeTransportProtocolType.setStatus("current")
_WseePortRuntimeName_Type = OctetString
_WseePortRuntimeName_Object = MibTableColumn
wseePortRuntimeName = _WseePortRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1505, 1, 6),
    _WseePortRuntimeName_Type()
)
wseePortRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseePortRuntimeName.setStatus("current")
_WseeRuntimeTable_Object = MibTable
wseeRuntimeTable = _WseeRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1510)
)
if mibBuilder.loadTexts:
    wseeRuntimeTable.setStatus("current")
_WseeRuntimeEntry_Object = MibTableRow
wseeRuntimeEntry = _WseeRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1510, 1)
)
wseeRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "wseeRuntimeIndex"),
)
if mibBuilder.loadTexts:
    wseeRuntimeEntry.setStatus("current")
_WseeRuntimeIndex_Type = OctetString
_WseeRuntimeIndex_Object = MibTableColumn
wseeRuntimeIndex = _WseeRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1510, 1, 1),
    _WseeRuntimeIndex_Type()
)
wseeRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wseeRuntimeIndex.setStatus("current")
_WseeRuntimeObjectName_Type = OctetString
_WseeRuntimeObjectName_Object = MibTableColumn
wseeRuntimeObjectName = _WseeRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1510, 1, 2),
    _WseeRuntimeObjectName_Type()
)
wseeRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeRuntimeObjectName.setStatus("current")
_WseeRuntimeType_Type = OctetString
_WseeRuntimeType_Object = MibTableColumn
wseeRuntimeType = _WseeRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1510, 1, 3),
    _WseeRuntimeType_Type()
)
wseeRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeRuntimeType.setStatus("current")
_WseeRuntimeWebserviceDescriptionName_Type = OctetString
_WseeRuntimeWebserviceDescriptionName_Object = MibTableColumn
wseeRuntimeWebserviceDescriptionName = _WseeRuntimeWebserviceDescriptionName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1510, 1, 4),
    _WseeRuntimeWebserviceDescriptionName_Type()
)
wseeRuntimeWebserviceDescriptionName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeRuntimeWebserviceDescriptionName.setStatus("current")
_WseeRuntimeImplementationType_Type = OctetString
_WseeRuntimeImplementationType_Object = MibTableColumn
wseeRuntimeImplementationType = _WseeRuntimeImplementationType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1510, 1, 5),
    _WseeRuntimeImplementationType_Type()
)
wseeRuntimeImplementationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeRuntimeImplementationType.setStatus("current")
_WseeRuntimeURI_Type = OctetString
_WseeRuntimeURI_Object = MibTableColumn
wseeRuntimeURI = _WseeRuntimeURI_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1510, 1, 6),
    _WseeRuntimeURI_Type()
)
wseeRuntimeURI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeRuntimeURI.setStatus("current")
_WseeRuntimeName_Type = OctetString
_WseeRuntimeName_Object = MibTableColumn
wseeRuntimeName = _WseeRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1510, 1, 7),
    _WseeRuntimeName_Type()
)
wseeRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeRuntimeName.setStatus("current")
_WseeRuntimeServiceName_Type = OctetString
_WseeRuntimeServiceName_Object = MibTableColumn
wseeRuntimeServiceName = _WseeRuntimeServiceName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1510, 1, 8),
    _WseeRuntimeServiceName_Type()
)
wseeRuntimeServiceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wseeRuntimeServiceName.setStatus("current")
_ScaContainerTable_Object = MibTable
scaContainerTable = _ScaContainerTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1515)
)
if mibBuilder.loadTexts:
    scaContainerTable.setStatus("current")
_ScaContainerEntry_Object = MibTableRow
scaContainerEntry = _ScaContainerEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1515, 1)
)
scaContainerEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "scaContainerIndex"),
)
if mibBuilder.loadTexts:
    scaContainerEntry.setStatus("current")
_ScaContainerIndex_Type = OctetString
_ScaContainerIndex_Object = MibTableColumn
scaContainerIndex = _ScaContainerIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1515, 1, 1),
    _ScaContainerIndex_Type()
)
scaContainerIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    scaContainerIndex.setStatus("current")
_ScaContainerObjectName_Type = OctetString
_ScaContainerObjectName_Object = MibTableColumn
scaContainerObjectName = _ScaContainerObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1515, 1, 2),
    _ScaContainerObjectName_Type()
)
scaContainerObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaContainerObjectName.setStatus("current")
_ScaContainerAllowsPassByReference_Type = OctetString
_ScaContainerAllowsPassByReference_Object = MibTableColumn
scaContainerAllowsPassByReference = _ScaContainerAllowsPassByReference_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1515, 1, 3),
    _ScaContainerAllowsPassByReference_Type()
)
scaContainerAllowsPassByReference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaContainerAllowsPassByReference.setStatus("current")
_ScaContainerTimeout_Type = Integer32
_ScaContainerTimeout_Object = MibTableColumn
scaContainerTimeout = _ScaContainerTimeout_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1515, 1, 4),
    _ScaContainerTimeout_Type()
)
scaContainerTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaContainerTimeout.setStatus("current")
_ScaContainerType_Type = OctetString
_ScaContainerType_Object = MibTableColumn
scaContainerType = _ScaContainerType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1515, 1, 5),
    _ScaContainerType_Type()
)
scaContainerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaContainerType.setStatus("current")
_ScaContainerRemotable_Type = OctetString
_ScaContainerRemotable_Object = MibTableColumn
scaContainerRemotable = _ScaContainerRemotable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1515, 1, 6),
    _ScaContainerRemotable_Type()
)
scaContainerRemotable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaContainerRemotable.setStatus("current")
_ScaContainerName_Type = OctetString
_ScaContainerName_Object = MibTableColumn
scaContainerName = _ScaContainerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1515, 1, 7),
    _ScaContainerName_Type()
)
scaContainerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaContainerName.setStatus("current")
_ScaContainerSinglePrincipal_Type = OctetString
_ScaContainerSinglePrincipal_Object = MibTableColumn
scaContainerSinglePrincipal = _ScaContainerSinglePrincipal_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1515, 1, 8),
    _ScaContainerSinglePrincipal_Type()
)
scaContainerSinglePrincipal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaContainerSinglePrincipal.setStatus("current")
_ScaContainerAutowire_Type = OctetString
_ScaContainerAutowire_Object = MibTableColumn
scaContainerAutowire = _ScaContainerAutowire_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1515, 1, 9),
    _ScaContainerAutowire_Type()
)
scaContainerAutowire.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaContainerAutowire.setStatus("current")
_ScaContainerMaxAge_Type = OctetString
_ScaContainerMaxAge_Object = MibTableColumn
scaContainerMaxAge = _ScaContainerMaxAge_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1515, 1, 10),
    _ScaContainerMaxAge_Type()
)
scaContainerMaxAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaContainerMaxAge.setStatus("current")
_ScaContainerMaxIdleTime_Type = OctetString
_ScaContainerMaxIdleTime_Object = MibTableColumn
scaContainerMaxIdleTime = _ScaContainerMaxIdleTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1515, 1, 11),
    _ScaContainerMaxIdleTime_Type()
)
scaContainerMaxIdleTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaContainerMaxIdleTime.setStatus("current")
_ChannelRuntimeTable_Object = MibTable
channelRuntimeTable = _ChannelRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1520)
)
if mibBuilder.loadTexts:
    channelRuntimeTable.setStatus("current")
_ChannelRuntimeEntry_Object = MibTableRow
channelRuntimeEntry = _ChannelRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1520, 1)
)
channelRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "channelRuntimeIndex"),
)
if mibBuilder.loadTexts:
    channelRuntimeEntry.setStatus("current")
_ChannelRuntimeIndex_Type = OctetString
_ChannelRuntimeIndex_Object = MibTableColumn
channelRuntimeIndex = _ChannelRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1520, 1, 1),
    _ChannelRuntimeIndex_Type()
)
channelRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    channelRuntimeIndex.setStatus("current")
_ChannelRuntimeObjectName_Type = OctetString
_ChannelRuntimeObjectName_Object = MibTableColumn
channelRuntimeObjectName = _ChannelRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1520, 1, 2),
    _ChannelRuntimeObjectName_Type()
)
channelRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    channelRuntimeObjectName.setStatus("current")
_ChannelRuntimePublishedMessageCount_Type = Counter64
_ChannelRuntimePublishedMessageCount_Object = MibTableColumn
channelRuntimePublishedMessageCount = _ChannelRuntimePublishedMessageCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1520, 1, 3),
    _ChannelRuntimePublishedMessageCount_Type()
)
channelRuntimePublishedMessageCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    channelRuntimePublishedMessageCount.setStatus("current")
_ChannelRuntimeSubscriberCount_Type = Integer32
_ChannelRuntimeSubscriberCount_Object = MibTableColumn
channelRuntimeSubscriberCount = _ChannelRuntimeSubscriberCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1520, 1, 4),
    _ChannelRuntimeSubscriberCount_Type()
)
channelRuntimeSubscriberCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    channelRuntimeSubscriberCount.setStatus("current")
_ChannelRuntimeType_Type = OctetString
_ChannelRuntimeType_Object = MibTableColumn
channelRuntimeType = _ChannelRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1520, 1, 5),
    _ChannelRuntimeType_Type()
)
channelRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    channelRuntimeType.setStatus("current")
_ChannelRuntimeName_Type = OctetString
_ChannelRuntimeName_Object = MibTableColumn
channelRuntimeName = _ChannelRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1520, 1, 6),
    _ChannelRuntimeName_Type()
)
channelRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    channelRuntimeName.setStatus("current")
_ManAsyncReplicationRuntimeTable_Object = MibTable
manAsyncReplicationRuntimeTable = _ManAsyncReplicationRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1525)
)
if mibBuilder.loadTexts:
    manAsyncReplicationRuntimeTable.setStatus("current")
_ManAsyncReplicationRuntimeEntry_Object = MibTableRow
manAsyncReplicationRuntimeEntry = _ManAsyncReplicationRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1525, 1)
)
manAsyncReplicationRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "manAsyncReplicationRuntimeIndex"),
)
if mibBuilder.loadTexts:
    manAsyncReplicationRuntimeEntry.setStatus("current")
_ManAsyncReplicationRuntimeIndex_Type = OctetString
_ManAsyncReplicationRuntimeIndex_Object = MibTableColumn
manAsyncReplicationRuntimeIndex = _ManAsyncReplicationRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1525, 1, 1),
    _ManAsyncReplicationRuntimeIndex_Type()
)
manAsyncReplicationRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    manAsyncReplicationRuntimeIndex.setStatus("current")
_ManAsyncReplicationRuntimeObjectName_Type = OctetString
_ManAsyncReplicationRuntimeObjectName_Object = MibTableColumn
manAsyncReplicationRuntimeObjectName = _ManAsyncReplicationRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1525, 1, 2),
    _ManAsyncReplicationRuntimeObjectName_Type()
)
manAsyncReplicationRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    manAsyncReplicationRuntimeObjectName.setStatus("current")
_ManAsyncReplicationRuntimeSecondaryServerName_Type = OctetString
_ManAsyncReplicationRuntimeSecondaryServerName_Object = MibTableColumn
manAsyncReplicationRuntimeSecondaryServerName = _ManAsyncReplicationRuntimeSecondaryServerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1525, 1, 3),
    _ManAsyncReplicationRuntimeSecondaryServerName_Type()
)
manAsyncReplicationRuntimeSecondaryServerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    manAsyncReplicationRuntimeSecondaryServerName.setStatus("current")
_ManAsyncReplicationRuntimeType_Type = OctetString
_ManAsyncReplicationRuntimeType_Object = MibTableColumn
manAsyncReplicationRuntimeType = _ManAsyncReplicationRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1525, 1, 4),
    _ManAsyncReplicationRuntimeType_Type()
)
manAsyncReplicationRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    manAsyncReplicationRuntimeType.setStatus("current")
_ManAsyncReplicationRuntimePrimaryCount_Type = Counter64
_ManAsyncReplicationRuntimePrimaryCount_Object = MibTableColumn
manAsyncReplicationRuntimePrimaryCount = _ManAsyncReplicationRuntimePrimaryCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1525, 1, 5),
    _ManAsyncReplicationRuntimePrimaryCount_Type()
)
manAsyncReplicationRuntimePrimaryCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    manAsyncReplicationRuntimePrimaryCount.setStatus("current")
_ManAsyncReplicationRuntimeName_Type = OctetString
_ManAsyncReplicationRuntimeName_Object = MibTableColumn
manAsyncReplicationRuntimeName = _ManAsyncReplicationRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1525, 1, 6),
    _ManAsyncReplicationRuntimeName_Type()
)
manAsyncReplicationRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    manAsyncReplicationRuntimeName.setStatus("current")
_ManAsyncReplicationRuntimeRemoteClusterReachable_Type = OctetString
_ManAsyncReplicationRuntimeRemoteClusterReachable_Object = MibTableColumn
manAsyncReplicationRuntimeRemoteClusterReachable = _ManAsyncReplicationRuntimeRemoteClusterReachable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1525, 1, 7),
    _ManAsyncReplicationRuntimeRemoteClusterReachable_Type()
)
manAsyncReplicationRuntimeRemoteClusterReachable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    manAsyncReplicationRuntimeRemoteClusterReachable.setStatus("current")
_ManAsyncReplicationRuntimeSecondaryServerDetails_Type = OctetString
_ManAsyncReplicationRuntimeSecondaryServerDetails_Object = MibTableColumn
manAsyncReplicationRuntimeSecondaryServerDetails = _ManAsyncReplicationRuntimeSecondaryServerDetails_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1525, 1, 8),
    _ManAsyncReplicationRuntimeSecondaryServerDetails_Type()
)
manAsyncReplicationRuntimeSecondaryServerDetails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    manAsyncReplicationRuntimeSecondaryServerDetails.setStatus("current")
_ManAsyncReplicationRuntimeSecondaryCount_Type = Counter64
_ManAsyncReplicationRuntimeSecondaryCount_Object = MibTableColumn
manAsyncReplicationRuntimeSecondaryCount = _ManAsyncReplicationRuntimeSecondaryCount_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1525, 1, 9),
    _ManAsyncReplicationRuntimeSecondaryCount_Type()
)
manAsyncReplicationRuntimeSecondaryCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    manAsyncReplicationRuntimeSecondaryCount.setStatus("current")
_ScaCompositeRuntimeTable_Object = MibTable
scaCompositeRuntimeTable = _ScaCompositeRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1530)
)
if mibBuilder.loadTexts:
    scaCompositeRuntimeTable.setStatus("current")
_ScaCompositeRuntimeEntry_Object = MibTableRow
scaCompositeRuntimeEntry = _ScaCompositeRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1530, 1)
)
scaCompositeRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "scaCompositeRuntimeIndex"),
)
if mibBuilder.loadTexts:
    scaCompositeRuntimeEntry.setStatus("current")
_ScaCompositeRuntimeIndex_Type = OctetString
_ScaCompositeRuntimeIndex_Object = MibTableColumn
scaCompositeRuntimeIndex = _ScaCompositeRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1530, 1, 1),
    _ScaCompositeRuntimeIndex_Type()
)
scaCompositeRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    scaCompositeRuntimeIndex.setStatus("current")
_ScaCompositeRuntimeObjectName_Type = OctetString
_ScaCompositeRuntimeObjectName_Object = MibTableColumn
scaCompositeRuntimeObjectName = _ScaCompositeRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1530, 1, 2),
    _ScaCompositeRuntimeObjectName_Type()
)
scaCompositeRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaCompositeRuntimeObjectName.setStatus("current")
_ScaCompositeRuntimeType_Type = OctetString
_ScaCompositeRuntimeType_Object = MibTableColumn
scaCompositeRuntimeType = _ScaCompositeRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1530, 1, 3),
    _ScaCompositeRuntimeType_Type()
)
scaCompositeRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaCompositeRuntimeType.setStatus("current")
_ScaCompositeRuntimeCompositeName_Type = OctetString
_ScaCompositeRuntimeCompositeName_Object = MibTableColumn
scaCompositeRuntimeCompositeName = _ScaCompositeRuntimeCompositeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1530, 1, 4),
    _ScaCompositeRuntimeCompositeName_Type()
)
scaCompositeRuntimeCompositeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaCompositeRuntimeCompositeName.setStatus("current")
_ScaCompositeRuntimeName_Type = OctetString
_ScaCompositeRuntimeName_Object = MibTableColumn
scaCompositeRuntimeName = _ScaCompositeRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1530, 1, 5),
    _ScaCompositeRuntimeName_Type()
)
scaCompositeRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaCompositeRuntimeName.setStatus("current")
_ScaCompositeRuntimeDescriptor_Type = OctetString
_ScaCompositeRuntimeDescriptor_Object = MibTableColumn
scaCompositeRuntimeDescriptor = _ScaCompositeRuntimeDescriptor_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1530, 1, 6),
    _ScaCompositeRuntimeDescriptor_Type()
)
scaCompositeRuntimeDescriptor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaCompositeRuntimeDescriptor.setStatus("current")
_ScaPojoComponentRuntimeTable_Object = MibTable
scaPojoComponentRuntimeTable = _ScaPojoComponentRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1535)
)
if mibBuilder.loadTexts:
    scaPojoComponentRuntimeTable.setStatus("current")
_ScaPojoComponentRuntimeEntry_Object = MibTableRow
scaPojoComponentRuntimeEntry = _ScaPojoComponentRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1535, 1)
)
scaPojoComponentRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "scaPojoComponentRuntimeIndex"),
)
if mibBuilder.loadTexts:
    scaPojoComponentRuntimeEntry.setStatus("current")
_ScaPojoComponentRuntimeIndex_Type = OctetString
_ScaPojoComponentRuntimeIndex_Object = MibTableColumn
scaPojoComponentRuntimeIndex = _ScaPojoComponentRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1535, 1, 1),
    _ScaPojoComponentRuntimeIndex_Type()
)
scaPojoComponentRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    scaPojoComponentRuntimeIndex.setStatus("current")
_ScaPojoComponentRuntimeObjectName_Type = OctetString
_ScaPojoComponentRuntimeObjectName_Object = MibTableColumn
scaPojoComponentRuntimeObjectName = _ScaPojoComponentRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1535, 1, 2),
    _ScaPojoComponentRuntimeObjectName_Type()
)
scaPojoComponentRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaPojoComponentRuntimeObjectName.setStatus("current")
_ScaPojoComponentRuntimeType_Type = OctetString
_ScaPojoComponentRuntimeType_Object = MibTableColumn
scaPojoComponentRuntimeType = _ScaPojoComponentRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1535, 1, 3),
    _ScaPojoComponentRuntimeType_Type()
)
scaPojoComponentRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaPojoComponentRuntimeType.setStatus("current")
_ScaPojoComponentRuntimeModuleId_Type = OctetString
_ScaPojoComponentRuntimeModuleId_Object = MibTableColumn
scaPojoComponentRuntimeModuleId = _ScaPojoComponentRuntimeModuleId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1535, 1, 4),
    _ScaPojoComponentRuntimeModuleId_Type()
)
scaPojoComponentRuntimeModuleId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaPojoComponentRuntimeModuleId.setStatus("current")
_ScaPojoComponentRuntimeName_Type = OctetString
_ScaPojoComponentRuntimeName_Object = MibTableColumn
scaPojoComponentRuntimeName = _ScaPojoComponentRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1535, 1, 5),
    _ScaPojoComponentRuntimeName_Type()
)
scaPojoComponentRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaPojoComponentRuntimeName.setStatus("current")
_ScaPojoComponentRuntimeDeploymentState_Type = Integer32
_ScaPojoComponentRuntimeDeploymentState_Object = MibTableColumn
scaPojoComponentRuntimeDeploymentState = _ScaPojoComponentRuntimeDeploymentState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1535, 1, 6),
    _ScaPojoComponentRuntimeDeploymentState_Type()
)
scaPojoComponentRuntimeDeploymentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaPojoComponentRuntimeDeploymentState.setStatus("current")
_ScaSpringComponentRuntimeTable_Object = MibTable
scaSpringComponentRuntimeTable = _ScaSpringComponentRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1540)
)
if mibBuilder.loadTexts:
    scaSpringComponentRuntimeTable.setStatus("current")
_ScaSpringComponentRuntimeEntry_Object = MibTableRow
scaSpringComponentRuntimeEntry = _ScaSpringComponentRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1540, 1)
)
scaSpringComponentRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "scaSpringComponentRuntimeIndex"),
)
if mibBuilder.loadTexts:
    scaSpringComponentRuntimeEntry.setStatus("current")
_ScaSpringComponentRuntimeIndex_Type = OctetString
_ScaSpringComponentRuntimeIndex_Object = MibTableColumn
scaSpringComponentRuntimeIndex = _ScaSpringComponentRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1540, 1, 1),
    _ScaSpringComponentRuntimeIndex_Type()
)
scaSpringComponentRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    scaSpringComponentRuntimeIndex.setStatus("current")
_ScaSpringComponentRuntimeObjectName_Type = OctetString
_ScaSpringComponentRuntimeObjectName_Object = MibTableColumn
scaSpringComponentRuntimeObjectName = _ScaSpringComponentRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1540, 1, 2),
    _ScaSpringComponentRuntimeObjectName_Type()
)
scaSpringComponentRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaSpringComponentRuntimeObjectName.setStatus("current")
_ScaSpringComponentRuntimeType_Type = OctetString
_ScaSpringComponentRuntimeType_Object = MibTableColumn
scaSpringComponentRuntimeType = _ScaSpringComponentRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1540, 1, 3),
    _ScaSpringComponentRuntimeType_Type()
)
scaSpringComponentRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaSpringComponentRuntimeType.setStatus("current")
_ScaSpringComponentRuntimeModuleId_Type = OctetString
_ScaSpringComponentRuntimeModuleId_Object = MibTableColumn
scaSpringComponentRuntimeModuleId = _ScaSpringComponentRuntimeModuleId_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1540, 1, 4),
    _ScaSpringComponentRuntimeModuleId_Type()
)
scaSpringComponentRuntimeModuleId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaSpringComponentRuntimeModuleId.setStatus("current")
_ScaSpringComponentRuntimeName_Type = OctetString
_ScaSpringComponentRuntimeName_Object = MibTableColumn
scaSpringComponentRuntimeName = _ScaSpringComponentRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1540, 1, 5),
    _ScaSpringComponentRuntimeName_Type()
)
scaSpringComponentRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaSpringComponentRuntimeName.setStatus("current")
_ScaSpringComponentRuntimeDeploymentState_Type = Integer32
_ScaSpringComponentRuntimeDeploymentState_Object = MibTableColumn
scaSpringComponentRuntimeDeploymentState = _ScaSpringComponentRuntimeDeploymentState_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1540, 1, 6),
    _ScaSpringComponentRuntimeDeploymentState_Type()
)
scaSpringComponentRuntimeDeploymentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    scaSpringComponentRuntimeDeploymentState.setStatus("current")
_WebPubSubRuntimeTable_Object = MibTable
webPubSubRuntimeTable = _WebPubSubRuntimeTable_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1545)
)
if mibBuilder.loadTexts:
    webPubSubRuntimeTable.setStatus("current")
_WebPubSubRuntimeEntry_Object = MibTableRow
webPubSubRuntimeEntry = _WebPubSubRuntimeEntry_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1545, 1)
)
webPubSubRuntimeEntry.setIndexNames(
    (0, "BEA-WEBLOGIC-MIB", "webPubSubRuntimeIndex"),
)
if mibBuilder.loadTexts:
    webPubSubRuntimeEntry.setStatus("current")
_WebPubSubRuntimeIndex_Type = OctetString
_WebPubSubRuntimeIndex_Object = MibTableColumn
webPubSubRuntimeIndex = _WebPubSubRuntimeIndex_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1545, 1, 1),
    _WebPubSubRuntimeIndex_Type()
)
webPubSubRuntimeIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    webPubSubRuntimeIndex.setStatus("current")
_WebPubSubRuntimeObjectName_Type = OctetString
_WebPubSubRuntimeObjectName_Object = MibTableColumn
webPubSubRuntimeObjectName = _WebPubSubRuntimeObjectName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1545, 1, 2),
    _WebPubSubRuntimeObjectName_Type()
)
webPubSubRuntimeObjectName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webPubSubRuntimeObjectName.setStatus("current")
_WebPubSubRuntimeType_Type = OctetString
_WebPubSubRuntimeType_Object = MibTableColumn
webPubSubRuntimeType = _WebPubSubRuntimeType_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1545, 1, 3),
    _WebPubSubRuntimeType_Type()
)
webPubSubRuntimeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webPubSubRuntimeType.setStatus("current")
_WebPubSubRuntimeName_Type = OctetString
_WebPubSubRuntimeName_Object = MibTableColumn
webPubSubRuntimeName = _WebPubSubRuntimeName_Object(
    (1, 3, 6, 1, 4, 1, 140, 625, 1545, 1, 4),
    _WebPubSubRuntimeName_Type()
)
webPubSubRuntimeName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    webPubSubRuntimeName.setStatus("current")
_Alsb_ObjectIdentity = ObjectIdentity
alsb = _Alsb_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 140, 800)
)
_AlsbTrapVars_ObjectIdentity = ObjectIdentity
alsbTrapVars = _AlsbTrapVars_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 140, 800, 100)
)


class _TrapALSBAlertTrapType_Type(DisplayString):
    """Custom type trapALSBAlertTrapType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_TrapALSBAlertTrapType_Type.__name__ = "DisplayString"
_TrapALSBAlertTrapType_Object = MibScalar
trapALSBAlertTrapType = _TrapALSBAlertTrapType_Object(
    (1, 3, 6, 1, 4, 1, 140, 800, 100, 1),
    _TrapALSBAlertTrapType_Type()
)
trapALSBAlertTrapType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapALSBAlertTrapType.setStatus("current")


class _TrapALSBAlertSeverity_Type(DisplayString):
    """Custom type trapALSBAlertSeverity based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_TrapALSBAlertSeverity_Type.__name__ = "DisplayString"
_TrapALSBAlertSeverity_Object = MibScalar
trapALSBAlertSeverity = _TrapALSBAlertSeverity_Object(
    (1, 3, 6, 1, 4, 1, 140, 800, 100, 2),
    _TrapALSBAlertSeverity_Type()
)
trapALSBAlertSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapALSBAlertSeverity.setStatus("current")


class _TrapALSBAlertDomainName_Type(DisplayString):
    """Custom type trapALSBAlertDomainName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_TrapALSBAlertDomainName_Type.__name__ = "DisplayString"
_TrapALSBAlertDomainName_Object = MibScalar
trapALSBAlertDomainName = _TrapALSBAlertDomainName_Object(
    (1, 3, 6, 1, 4, 1, 140, 800, 100, 3),
    _TrapALSBAlertDomainName_Type()
)
trapALSBAlertDomainName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapALSBAlertDomainName.setStatus("current")


class _TrapALSBAlertServerName_Type(DisplayString):
    """Custom type trapALSBAlertServerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_TrapALSBAlertServerName_Type.__name__ = "DisplayString"
_TrapALSBAlertServerName_Object = MibScalar
trapALSBAlertServerName = _TrapALSBAlertServerName_Object(
    (1, 3, 6, 1, 4, 1, 140, 800, 100, 4),
    _TrapALSBAlertServerName_Type()
)
trapALSBAlertServerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapALSBAlertServerName.setStatus("current")


class _TrapALSBAlertAlertId_Type(DisplayString):
    """Custom type trapALSBAlertAlertId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_TrapALSBAlertAlertId_Type.__name__ = "DisplayString"
_TrapALSBAlertAlertId_Object = MibScalar
trapALSBAlertAlertId = _TrapALSBAlertAlertId_Object(
    (1, 3, 6, 1, 4, 1, 140, 800, 100, 5),
    _TrapALSBAlertAlertId_Type()
)
trapALSBAlertAlertId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapALSBAlertAlertId.setStatus("current")


class _TrapALSBAlertRuleId_Type(DisplayString):
    """Custom type trapALSBAlertRuleId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_TrapALSBAlertRuleId_Type.__name__ = "DisplayString"
_TrapALSBAlertRuleId_Object = MibScalar
trapALSBAlertRuleId = _TrapALSBAlertRuleId_Object(
    (1, 3, 6, 1, 4, 1, 140, 800, 100, 6),
    _TrapALSBAlertRuleId_Type()
)
trapALSBAlertRuleId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapALSBAlertRuleId.setStatus("current")


class _TrapALSBAlertRuleName_Type(DisplayString):
    """Custom type trapALSBAlertRuleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 80),
    )


_TrapALSBAlertRuleName_Type.__name__ = "DisplayString"
_TrapALSBAlertRuleName_Object = MibScalar
trapALSBAlertRuleName = _TrapALSBAlertRuleName_Object(
    (1, 3, 6, 1, 4, 1, 140, 800, 100, 7),
    _TrapALSBAlertRuleName_Type()
)
trapALSBAlertRuleName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapALSBAlertRuleName.setStatus("current")


class _TrapALSBAlertRuleCondition_Type(DisplayString):
    """Custom type trapALSBAlertRuleCondition based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 512),
    )


_TrapALSBAlertRuleCondition_Type.__name__ = "DisplayString"
_TrapALSBAlertRuleCondition_Object = MibScalar
trapALSBAlertRuleCondition = _TrapALSBAlertRuleCondition_Object(
    (1, 3, 6, 1, 4, 1, 140, 800, 100, 8),
    _TrapALSBAlertRuleCondition_Type()
)
trapALSBAlertRuleCondition.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapALSBAlertRuleCondition.setStatus("current")


class _TrapALSBAlertAlertTime_Type(DisplayString):
    """Custom type trapALSBAlertAlertTime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 48),
    )


_TrapALSBAlertAlertTime_Type.__name__ = "DisplayString"
_TrapALSBAlertAlertTime_Object = MibScalar
trapALSBAlertAlertTime = _TrapALSBAlertAlertTime_Object(
    (1, 3, 6, 1, 4, 1, 140, 800, 100, 9),
    _TrapALSBAlertAlertTime_Type()
)
trapALSBAlertAlertTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapALSBAlertAlertTime.setStatus("current")


class _TrapALSBAlertAnnotation_Type(DisplayString):
    """Custom type trapALSBAlertAnnotation based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1024),
    )


_TrapALSBAlertAnnotation_Type.__name__ = "DisplayString"
_TrapALSBAlertAnnotation_Object = MibScalar
trapALSBAlertAnnotation = _TrapALSBAlertAnnotation_Object(
    (1, 3, 6, 1, 4, 1, 140, 800, 100, 10),
    _TrapALSBAlertAnnotation_Type()
)
trapALSBAlertAnnotation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapALSBAlertAnnotation.setStatus("current")


class _TrapALSBAlertServiceName_Type(DisplayString):
    """Custom type trapALSBAlertServiceName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 80),
    )


_TrapALSBAlertServiceName_Type.__name__ = "DisplayString"
_TrapALSBAlertServiceName_Object = MibScalar
trapALSBAlertServiceName = _TrapALSBAlertServiceName_Object(
    (1, 3, 6, 1, 4, 1, 140, 800, 100, 11),
    _TrapALSBAlertServiceName_Type()
)
trapALSBAlertServiceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapALSBAlertServiceName.setStatus("current")


class _TrapALSBAlertServicePath_Type(DisplayString):
    """Custom type trapALSBAlertServicePath based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 256),
    )


_TrapALSBAlertServicePath_Type.__name__ = "DisplayString"
_TrapALSBAlertServicePath_Object = MibScalar
trapALSBAlertServicePath = _TrapALSBAlertServicePath_Object(
    (1, 3, 6, 1, 4, 1, 140, 800, 100, 12),
    _TrapALSBAlertServicePath_Type()
)
trapALSBAlertServicePath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapALSBAlertServicePath.setStatus("current")

# Managed Objects groups


# Notification objects

wlsLogNotification = NotificationType(
    (1, 3, 6, 1, 4, 1, 140, 625, 0, 60)
)
wlsLogNotification.setObjects(
      *(("BEA-WEBLOGIC-MIB", "trapTime"),
        ("BEA-WEBLOGIC-MIB", "trapServerName"),
        ("BEA-WEBLOGIC-MIB", "trapMachineName"),
        ("BEA-WEBLOGIC-MIB", "trapLogThreadId"),
        ("BEA-WEBLOGIC-MIB", "trapLogTransactionId"),
        ("BEA-WEBLOGIC-MIB", "trapLogUserId"),
        ("BEA-WEBLOGIC-MIB", "trapLogSubsystem"),
        ("BEA-WEBLOGIC-MIB", "trapLogMsgId"),
        ("BEA-WEBLOGIC-MIB", "trapLogSeverity"),
        ("BEA-WEBLOGIC-MIB", "trapLogMessage"))
)
if mibBuilder.loadTexts:
    wlsLogNotification.setStatus(
        "current"
    )

wlsServerStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 140, 625, 0, 65)
)
wlsServerStart.setObjects(
      *(("BEA-WEBLOGIC-MIB", "trapTime"),
        ("BEA-WEBLOGIC-MIB", "trapServerName"))
)
if mibBuilder.loadTexts:
    wlsServerStart.setStatus(
        "current"
    )

wlsServerShutDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 140, 625, 0, 70)
)
wlsServerShutDown.setObjects(
      *(("BEA-WEBLOGIC-MIB", "trapTime"),
        ("BEA-WEBLOGIC-MIB", "trapServerName"))
)
if mibBuilder.loadTexts:
    wlsServerShutDown.setStatus(
        "current"
    )

wlsMonitorNotification = NotificationType(
    (1, 3, 6, 1, 4, 1, 140, 625, 0, 75)
)
wlsMonitorNotification.setObjects(
      *(("BEA-WEBLOGIC-MIB", "trapTime"),
        ("BEA-WEBLOGIC-MIB", "trapServerName"),
        ("BEA-WEBLOGIC-MIB", "trapMonitorType"),
        ("BEA-WEBLOGIC-MIB", "trapMonitorThreshold"),
        ("BEA-WEBLOGIC-MIB", "trapMonitorValue"),
        ("BEA-WEBLOGIC-MIB", "trapMBeanName"),
        ("BEA-WEBLOGIC-MIB", "trapMBeanType"),
        ("BEA-WEBLOGIC-MIB", "trapAttributeName"))
)
if mibBuilder.loadTexts:
    wlsMonitorNotification.setStatus(
        "current"
    )

wlsAttributeChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 140, 625, 0, 80)
)
wlsAttributeChange.setObjects(
      *(("BEA-WEBLOGIC-MIB", "trapTime"),
        ("BEA-WEBLOGIC-MIB", "trapServerName"),
        ("BEA-WEBLOGIC-MIB", "trapMBeanName"),
        ("BEA-WEBLOGIC-MIB", "trapMBeanType"),
        ("BEA-WEBLOGIC-MIB", "trapAttributeName"),
        ("BEA-WEBLOGIC-MIB", "trapAttributeType"),
        ("BEA-WEBLOGIC-MIB", "trapAttributeChangeType"),
        ("BEA-WEBLOGIC-MIB", "trapAttributeOldVal"),
        ("BEA-WEBLOGIC-MIB", "trapAttributeNewVal"))
)
if mibBuilder.loadTexts:
    wlsAttributeChange.setStatus(
        "current"
    )

wlsWatchNotification = NotificationType(
    (1, 3, 6, 1, 4, 1, 140, 625, 0, 85)
)
wlsWatchNotification.setObjects(
      *(("BEA-WEBLOGIC-MIB", "trapTime"),
        ("BEA-WEBLOGIC-MIB", "trapDomainName"),
        ("BEA-WEBLOGIC-MIB", "trapServerName"),
        ("BEA-WEBLOGIC-MIB", "trapWatchName"),
        ("BEA-WEBLOGIC-MIB", "trapWatchRuleType"),
        ("BEA-WEBLOGIC-MIB", "trapWatchRule"),
        ("BEA-WEBLOGIC-MIB", "trapWatchSeverity"),
        ("BEA-WEBLOGIC-MIB", "trapWatchData"),
        ("BEA-WEBLOGIC-MIB", "trapWatchAlarmType"),
        ("BEA-WEBLOGIC-MIB", "trapWatchAlarmResetPeriod"),
        ("BEA-WEBLOGIC-MIB", "trapWatchSNMPNotificationName"))
)
if mibBuilder.loadTexts:
    wlsWatchNotification.setStatus(
        "current"
    )

wlsALSBAlert = NotificationType(
    (1, 3, 6, 1, 4, 1, 140, 800, 0, 90)
)
wlsALSBAlert.setObjects(
      *(("BEA-WEBLOGIC-MIB", "trapALSBAlertTrapType"),
        ("BEA-WEBLOGIC-MIB", "trapALSBAlertSeverity"),
        ("BEA-WEBLOGIC-MIB", "trapALSBAlertDomainName"),
        ("BEA-WEBLOGIC-MIB", "trapALSBAlertServerName"),
        ("BEA-WEBLOGIC-MIB", "trapALSBAlertAlertId"),
        ("BEA-WEBLOGIC-MIB", "trapALSBAlertRuleId"),
        ("BEA-WEBLOGIC-MIB", "trapALSBAlertRuleName"),
        ("BEA-WEBLOGIC-MIB", "trapALSBAlertRuleCondition"),
        ("BEA-WEBLOGIC-MIB", "trapALSBAlertAlertTime"),
        ("BEA-WEBLOGIC-MIB", "trapALSBAlertAnnotation"),
        ("BEA-WEBLOGIC-MIB", "trapALSBAlertServiceName"),
        ("BEA-WEBLOGIC-MIB", "trapALSBAlertServicePath"))
)
if mibBuilder.loadTexts:
    wlsALSBAlert.setStatus(
        "current"
    )


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "BEA-WEBLOGIC-MIB",
    **{"bea": bea,
       "wls": wls,
       "wlsLogNotification": wlsLogNotification,
       "wlsServerStart": wlsServerStart,
       "wlsServerShutDown": wlsServerShutDown,
       "wlsMonitorNotification": wlsMonitorNotification,
       "wlsAttributeChange": wlsAttributeChange,
       "wlsWatchNotification": wlsWatchNotification,
       "experimental": experimental,
       "mibObjectName": mibObjectName,
       "mibObjectOid": mibObjectOid,
       "trapVars": trapVars,
       "trapTime": trapTime,
       "trapServerName": trapServerName,
       "trapMachineName": trapMachineName,
       "trapLogThreadId": trapLogThreadId,
       "trapLogTransactionId": trapLogTransactionId,
       "trapLogUserId": trapLogUserId,
       "trapLogSubsystem": trapLogSubsystem,
       "trapLogMsgId": trapLogMsgId,
       "trapLogSeverity": trapLogSeverity,
       "trapLogMessage": trapLogMessage,
       "trapMonitorType": trapMonitorType,
       "trapMonitorThreshold": trapMonitorThreshold,
       "trapMonitorValue": trapMonitorValue,
       "trapMBeanName": trapMBeanName,
       "trapMBeanType": trapMBeanType,
       "trapAttributeName": trapAttributeName,
       "trapAttributeType": trapAttributeType,
       "trapAttributeChangeType": trapAttributeChangeType,
       "trapAttributeOldVal": trapAttributeOldVal,
       "trapAttributeNewVal": trapAttributeNewVal,
       "trapWatchName": trapWatchName,
       "trapWatchRuleType": trapWatchRuleType,
       "trapWatchRule": trapWatchRule,
       "trapWatchSeverity": trapWatchSeverity,
       "trapWatchData": trapWatchData,
       "trapWatchAlarmType": trapWatchAlarmType,
       "trapWatchAlarmResetPeriod": trapWatchAlarmResetPeriod,
       "trapWatchSNMPNotificationName": trapWatchSNMPNotificationName,
       "trapDomainName": trapDomainName,
       "applicationRuntimeTable": applicationRuntimeTable,
       "applicationRuntimeEntry": applicationRuntimeEntry,
       "applicationRuntimeIndex": applicationRuntimeIndex,
       "applicationRuntimeObjectName": applicationRuntimeObjectName,
       "applicationRuntimeType": applicationRuntimeType,
       "applicationRuntimeName": applicationRuntimeName,
       "applicationRuntimeParent": applicationRuntimeParent,
       "applicationRuntimeApplicationName": applicationRuntimeApplicationName,
       "applicationRuntimeApplicationVersion": applicationRuntimeApplicationVersion,
       "clusterRuntimeTable": clusterRuntimeTable,
       "clusterRuntimeEntry": clusterRuntimeEntry,
       "clusterRuntimeIndex": clusterRuntimeIndex,
       "clusterRuntimeObjectName": clusterRuntimeObjectName,
       "clusterRuntimeType": clusterRuntimeType,
       "clusterRuntimeName": clusterRuntimeName,
       "clusterRuntimeParent": clusterRuntimeParent,
       "clusterRuntimeAliveServerCount": clusterRuntimeAliveServerCount,
       "clusterRuntimeResendRequestsCount": clusterRuntimeResendRequestsCount,
       "clusterRuntimeFragmentsSentCount": clusterRuntimeFragmentsSentCount,
       "clusterRuntimeFragmentsReceivedCount": clusterRuntimeFragmentsReceivedCount,
       "clusterRuntimeMulticastMessagesLostCount": clusterRuntimeMulticastMessagesLostCount,
       "clusterRuntimeServerNames": clusterRuntimeServerNames,
       "clusterRuntimeSecondaryDistributionNames": clusterRuntimeSecondaryDistributionNames,
       "clusterRuntimePrimaryCount": clusterRuntimePrimaryCount,
       "clusterRuntimeCurrentSecondaryServer": clusterRuntimeCurrentSecondaryServer,
       "clusterRuntimeForeignFragmentsDroppedCount": clusterRuntimeForeignFragmentsDroppedCount,
       "clusterRuntimeCurrentAsyncSecondaryServer": clusterRuntimeCurrentAsyncSecondaryServer,
       "clusterRuntimeAsyncPrimaryCount": clusterRuntimeAsyncPrimaryCount,
       "wanreplicationRuntimeTable": wanreplicationRuntimeTable,
       "wanreplicationRuntimeEntry": wanreplicationRuntimeEntry,
       "wanreplicationRuntimeIndex": wanreplicationRuntimeIndex,
       "wanreplicationRuntimeObjectName": wanreplicationRuntimeObjectName,
       "wanreplicationRuntimeType": wanreplicationRuntimeType,
       "wanreplicationRuntimeName": wanreplicationRuntimeName,
       "wanreplicationRuntimeParent": wanreplicationRuntimeParent,
       "wanreplicationRuntimeNumberOfSessionsFlushedToTheDatabase": wanreplicationRuntimeNumberOfSessionsFlushedToTheDatabase,
       "wanreplicationRuntimeNumberOfSessionsRetrievedFromTheDatabase": wanreplicationRuntimeNumberOfSessionsRetrievedFromTheDatabase,
       "wanreplicationRuntimeSecondaryServerName": wanreplicationRuntimeSecondaryServerName,
       "wanreplicationRuntimePrimaryCount": wanreplicationRuntimePrimaryCount,
       "wanreplicationRuntimeSecondaryCount": wanreplicationRuntimeSecondaryCount,
       "wanreplicationRuntimeRemoteClusterReachable": wanreplicationRuntimeRemoteClusterReachable,
       "deploymentTaskRuntimeTable": deploymentTaskRuntimeTable,
       "deploymentTaskRuntimeEntry": deploymentTaskRuntimeEntry,
       "deploymentTaskRuntimeIndex": deploymentTaskRuntimeIndex,
       "deploymentTaskRuntimeObjectName": deploymentTaskRuntimeObjectName,
       "deploymentTaskRuntimeType": deploymentTaskRuntimeType,
       "deploymentTaskRuntimeName": deploymentTaskRuntimeName,
       "deploymentTaskRuntimeParent": deploymentTaskRuntimeParent,
       "deploymentTaskRuntimeApplicationName": deploymentTaskRuntimeApplicationName,
       "deploymentTaskRuntimeId": deploymentTaskRuntimeId,
       "deploymentTaskRuntimeSource": deploymentTaskRuntimeSource,
       "deploymentTaskRuntimeState": deploymentTaskRuntimeState,
       "deploymentTaskRuntimeInUse": deploymentTaskRuntimeInUse,
       "deploymentTaskRuntimeNewSource": deploymentTaskRuntimeNewSource,
       "domainRuntimeTable": domainRuntimeTable,
       "domainRuntimeEntry": domainRuntimeEntry,
       "domainRuntimeIndex": domainRuntimeIndex,
       "domainRuntimeObjectName": domainRuntimeObjectName,
       "domainRuntimeType": domainRuntimeType,
       "domainRuntimeName": domainRuntimeName,
       "domainRuntimeParent": domainRuntimeParent,
       "domainRuntimeActivationTime": domainRuntimeActivationTime,
       "queryCacheRuntimeTable": queryCacheRuntimeTable,
       "queryCacheRuntimeEntry": queryCacheRuntimeEntry,
       "queryCacheRuntimeIndex": queryCacheRuntimeIndex,
       "queryCacheRuntimeObjectName": queryCacheRuntimeObjectName,
       "queryCacheRuntimeType": queryCacheRuntimeType,
       "queryCacheRuntimeName": queryCacheRuntimeName,
       "queryCacheRuntimeParent": queryCacheRuntimeParent,
       "queryCacheRuntimeTotalCachedQueriesCount": queryCacheRuntimeTotalCachedQueriesCount,
       "queryCacheRuntimeCacheAccessCount": queryCacheRuntimeCacheAccessCount,
       "queryCacheRuntimeCacheHitCount": queryCacheRuntimeCacheHitCount,
       "queryCacheRuntimeTotalCacheMissCount": queryCacheRuntimeTotalCacheMissCount,
       "queryCacheRuntimeCacheMissByTimeoutCount": queryCacheRuntimeCacheMissByTimeoutCount,
       "queryCacheRuntimeCacheMissByBeanEvictionCount": queryCacheRuntimeCacheMissByBeanEvictionCount,
       "queryCacheRuntimeCacheMissByRelatedQueryMissCount": queryCacheRuntimeCacheMissByRelatedQueryMissCount,
       "queryCacheRuntimeCacheMissByDependentQueryMissCount": queryCacheRuntimeCacheMissByDependentQueryMissCount,
       "ejbCacheRuntimeTable": ejbCacheRuntimeTable,
       "ejbCacheRuntimeEntry": ejbCacheRuntimeEntry,
       "ejbCacheRuntimeIndex": ejbCacheRuntimeIndex,
       "ejbCacheRuntimeObjectName": ejbCacheRuntimeObjectName,
       "ejbCacheRuntimeType": ejbCacheRuntimeType,
       "ejbCacheRuntimeName": ejbCacheRuntimeName,
       "ejbCacheRuntimeParent": ejbCacheRuntimeParent,
       "ejbCacheRuntimeActivationCount": ejbCacheRuntimeActivationCount,
       "ejbCacheRuntimeCacheAccessCount": ejbCacheRuntimeCacheAccessCount,
       "ejbCacheRuntimeCachedBeansCurrentCount": ejbCacheRuntimeCachedBeansCurrentCount,
       "ejbCacheRuntimeCacheHitCount": ejbCacheRuntimeCacheHitCount,
       "ejbCacheRuntimePassivationCount": ejbCacheRuntimePassivationCount,
       "ejbCacheRuntimeCacheMissCount": ejbCacheRuntimeCacheMissCount,
       "ejbRuntimeTable": ejbRuntimeTable,
       "ejbRuntimeEntry": ejbRuntimeEntry,
       "ejbRuntimeIndex": ejbRuntimeIndex,
       "ejbRuntimeObjectName": ejbRuntimeObjectName,
       "ejbRuntimeType": ejbRuntimeType,
       "ejbRuntimeName": ejbRuntimeName,
       "ejbRuntimeParent": ejbRuntimeParent,
       "ejbRuntimeEJBName": ejbRuntimeEJBName,
       "ejbComponentRuntimeTable": ejbComponentRuntimeTable,
       "ejbComponentRuntimeEntry": ejbComponentRuntimeEntry,
       "ejbComponentRuntimeIndex": ejbComponentRuntimeIndex,
       "ejbComponentRuntimeObjectName": ejbComponentRuntimeObjectName,
       "ejbComponentRuntimeType": ejbComponentRuntimeType,
       "ejbComponentRuntimeName": ejbComponentRuntimeName,
       "ejbComponentRuntimeParent": ejbComponentRuntimeParent,
       "ejbComponentRuntimeModuleId": ejbComponentRuntimeModuleId,
       "ejbComponentRuntimeDeploymentState": ejbComponentRuntimeDeploymentState,
       "ejbLockingRuntimeTable": ejbLockingRuntimeTable,
       "ejbLockingRuntimeEntry": ejbLockingRuntimeEntry,
       "ejbLockingRuntimeIndex": ejbLockingRuntimeIndex,
       "ejbLockingRuntimeObjectName": ejbLockingRuntimeObjectName,
       "ejbLockingRuntimeType": ejbLockingRuntimeType,
       "ejbLockingRuntimeName": ejbLockingRuntimeName,
       "ejbLockingRuntimeParent": ejbLockingRuntimeParent,
       "ejbLockingRuntimeLockEntriesCurrentCount": ejbLockingRuntimeLockEntriesCurrentCount,
       "ejbLockingRuntimeLockManagerAccessCount": ejbLockingRuntimeLockManagerAccessCount,
       "ejbLockingRuntimeWaiterTotalCount": ejbLockingRuntimeWaiterTotalCount,
       "ejbLockingRuntimeWaiterCurrentCount": ejbLockingRuntimeWaiterCurrentCount,
       "ejbLockingRuntimeTimeoutTotalCount": ejbLockingRuntimeTimeoutTotalCount,
       "ejbPoolRuntimeTable": ejbPoolRuntimeTable,
       "ejbPoolRuntimeEntry": ejbPoolRuntimeEntry,
       "ejbPoolRuntimeIndex": ejbPoolRuntimeIndex,
       "ejbPoolRuntimeObjectName": ejbPoolRuntimeObjectName,
       "ejbPoolRuntimeType": ejbPoolRuntimeType,
       "ejbPoolRuntimeName": ejbPoolRuntimeName,
       "ejbPoolRuntimeParent": ejbPoolRuntimeParent,
       "ejbPoolRuntimeBeansInUseCount": ejbPoolRuntimeBeansInUseCount,
       "ejbPoolRuntimeIdleBeansCount": ejbPoolRuntimeIdleBeansCount,
       "ejbPoolRuntimeTimeoutTotalCount": ejbPoolRuntimeTimeoutTotalCount,
       "ejbPoolRuntimeWaiterTotalCount": ejbPoolRuntimeWaiterTotalCount,
       "ejbPoolRuntimeAccessTotalCount": ejbPoolRuntimeAccessTotalCount,
       "ejbPoolRuntimeBeansInUseCurrentCount": ejbPoolRuntimeBeansInUseCurrentCount,
       "ejbPoolRuntimeDestroyedTotalCount": ejbPoolRuntimeDestroyedTotalCount,
       "ejbPoolRuntimeMissTotalCount": ejbPoolRuntimeMissTotalCount,
       "ejbPoolRuntimeWaiterCurrentCount": ejbPoolRuntimeWaiterCurrentCount,
       "ejbPoolRuntimePooledBeansCurrentCount": ejbPoolRuntimePooledBeansCurrentCount,
       "ejbTimerRuntimeTable": ejbTimerRuntimeTable,
       "ejbTimerRuntimeEntry": ejbTimerRuntimeEntry,
       "ejbTimerRuntimeIndex": ejbTimerRuntimeIndex,
       "ejbTimerRuntimeObjectName": ejbTimerRuntimeObjectName,
       "ejbTimerRuntimeType": ejbTimerRuntimeType,
       "ejbTimerRuntimeName": ejbTimerRuntimeName,
       "ejbTimerRuntimeParent": ejbTimerRuntimeParent,
       "ejbTimerRuntimeDisabledTimerCount": ejbTimerRuntimeDisabledTimerCount,
       "ejbTimerRuntimeCancelledTimerCount": ejbTimerRuntimeCancelledTimerCount,
       "ejbTimerRuntimeTimeoutCount": ejbTimerRuntimeTimeoutCount,
       "ejbTimerRuntimeActiveTimerCount": ejbTimerRuntimeActiveTimerCount,
       "ejbTransactionRuntimeTable": ejbTransactionRuntimeTable,
       "ejbTransactionRuntimeEntry": ejbTransactionRuntimeEntry,
       "ejbTransactionRuntimeIndex": ejbTransactionRuntimeIndex,
       "ejbTransactionRuntimeObjectName": ejbTransactionRuntimeObjectName,
       "ejbTransactionRuntimeType": ejbTransactionRuntimeType,
       "ejbTransactionRuntimeName": ejbTransactionRuntimeName,
       "ejbTransactionRuntimeParent": ejbTransactionRuntimeParent,
       "ejbTransactionRuntimeTransactionsCommittedTotalCount": ejbTransactionRuntimeTransactionsCommittedTotalCount,
       "ejbTransactionRuntimeTransactionsRolledBackTotalCount": ejbTransactionRuntimeTransactionsRolledBackTotalCount,
       "ejbTransactionRuntimeTransactionsTimedOutTotalCount": ejbTransactionRuntimeTransactionsTimedOutTotalCount,
       "entityCacheCumulativeRuntimeTable": entityCacheCumulativeRuntimeTable,
       "entityCacheCumulativeRuntimeEntry": entityCacheCumulativeRuntimeEntry,
       "entityCacheCumulativeRuntimeIndex": entityCacheCumulativeRuntimeIndex,
       "entityCacheCumulativeRuntimeObjectName": entityCacheCumulativeRuntimeObjectName,
       "entityCacheCumulativeRuntimeType": entityCacheCumulativeRuntimeType,
       "entityCacheCumulativeRuntimeName": entityCacheCumulativeRuntimeName,
       "entityCacheCumulativeRuntimeParent": entityCacheCumulativeRuntimeParent,
       "entityCacheCumulativeRuntimeAvgEntrySizeDiskPurged": entityCacheCumulativeRuntimeAvgEntrySizeDiskPurged,
       "entityCacheCumulativeRuntimeAvgEntrySizeMemoryPurged": entityCacheCumulativeRuntimeAvgEntrySizeMemoryPurged,
       "entityCacheCumulativeRuntimeDiskPurgesPerHour": entityCacheCumulativeRuntimeDiskPurgesPerHour,
       "entityCacheCumulativeRuntimeMostRecentDiskPurge": entityCacheCumulativeRuntimeMostRecentDiskPurge,
       "entityCacheCumulativeRuntimeMostRecentMemoryPurge": entityCacheCumulativeRuntimeMostRecentMemoryPurge,
       "entityCacheCumulativeRuntimePercentRejected": entityCacheCumulativeRuntimePercentRejected,
       "entityCacheCumulativeRuntimeTotalItemsDiskPurged": entityCacheCumulativeRuntimeTotalItemsDiskPurged,
       "entityCacheCumulativeRuntimeTotalItemsMemoryPurged": entityCacheCumulativeRuntimeTotalItemsMemoryPurged,
       "entityCacheCumulativeRuntimeTotalNumberDiskPurges": entityCacheCumulativeRuntimeTotalNumberDiskPurges,
       "entityCacheCumulativeRuntimeTotalNumberMemoryPurges": entityCacheCumulativeRuntimeTotalNumberMemoryPurges,
       "entityCacheCumulativeRuntimeTotalNumberOfRejections": entityCacheCumulativeRuntimeTotalNumberOfRejections,
       "entityCacheCumulativeRuntimeTotalNumberOfRenewals": entityCacheCumulativeRuntimeTotalNumberOfRenewals,
       "entityCacheCumulativeRuntimeTotalSizeOfRejections": entityCacheCumulativeRuntimeTotalSizeOfRejections,
       "entityCacheCumulativeRuntimeTotalCurrentEntries": entityCacheCumulativeRuntimeTotalCurrentEntries,
       "entityCacheCumulativeRuntimeAvgPerEntryDiskSize": entityCacheCumulativeRuntimeAvgPerEntryDiskSize,
       "entityCacheCumulativeRuntimeTotalPersistentCurrentEntries": entityCacheCumulativeRuntimeTotalPersistentCurrentEntries,
       "entityCacheCumulativeRuntimeMaxEntryTimeout": entityCacheCumulativeRuntimeMaxEntryTimeout,
       "entityCacheCumulativeRuntimeMaxEntryMemorySize": entityCacheCumulativeRuntimeMaxEntryMemorySize,
       "entityCacheCumulativeRuntimeTotalTransientCurrentEntries": entityCacheCumulativeRuntimeTotalTransientCurrentEntries,
       "entityCacheCumulativeRuntimeAvgPerEntryMemorySize": entityCacheCumulativeRuntimeAvgPerEntryMemorySize,
       "entityCacheCumulativeRuntimeAvgPercentPersistent": entityCacheCumulativeRuntimeAvgPercentPersistent,
       "entityCacheCumulativeRuntimeMinEntryMemorySize": entityCacheCumulativeRuntimeMinEntryMemorySize,
       "entityCacheCumulativeRuntimeAvgTimeout": entityCacheCumulativeRuntimeAvgTimeout,
       "entityCacheCumulativeRuntimeMemoryPurgesPerHour": entityCacheCumulativeRuntimeMemoryPurgesPerHour,
       "entityCacheCumulativeRuntimeMinEntryTimeout": entityCacheCumulativeRuntimeMinEntryTimeout,
       "entityCacheCumulativeRuntimeAvgPercentTransient": entityCacheCumulativeRuntimeAvgPercentTransient,
       "entityCacheCurrentStateRuntimeTable": entityCacheCurrentStateRuntimeTable,
       "entityCacheCurrentStateRuntimeEntry": entityCacheCurrentStateRuntimeEntry,
       "entityCacheCurrentStateRuntimeIndex": entityCacheCurrentStateRuntimeIndex,
       "entityCacheCurrentStateRuntimeObjectName": entityCacheCurrentStateRuntimeObjectName,
       "entityCacheCurrentStateRuntimeType": entityCacheCurrentStateRuntimeType,
       "entityCacheCurrentStateRuntimeName": entityCacheCurrentStateRuntimeName,
       "entityCacheCurrentStateRuntimeParent": entityCacheCurrentStateRuntimeParent,
       "entityCacheCurrentStateRuntimeDiskUsage": entityCacheCurrentStateRuntimeDiskUsage,
       "entityCacheCurrentStateRuntimeMemoryUsage": entityCacheCurrentStateRuntimeMemoryUsage,
       "entityCacheCurrentStateRuntimeTotalCurrentEntries": entityCacheCurrentStateRuntimeTotalCurrentEntries,
       "entityCacheCurrentStateRuntimeMinEntryMemorySize": entityCacheCurrentStateRuntimeMinEntryMemorySize,
       "entityCacheCurrentStateRuntimeAvgPercentPersistent": entityCacheCurrentStateRuntimeAvgPercentPersistent,
       "entityCacheCurrentStateRuntimeAvgTimeout": entityCacheCurrentStateRuntimeAvgTimeout,
       "entityCacheCurrentStateRuntimeAvgPerEntryDiskSize": entityCacheCurrentStateRuntimeAvgPerEntryDiskSize,
       "entityCacheCurrentStateRuntimeTotalPersistentCurrentEntries": entityCacheCurrentStateRuntimeTotalPersistentCurrentEntries,
       "entityCacheCurrentStateRuntimeMaxEntryTimeout": entityCacheCurrentStateRuntimeMaxEntryTimeout,
       "entityCacheCurrentStateRuntimeMaxEntryMemorySize": entityCacheCurrentStateRuntimeMaxEntryMemorySize,
       "entityCacheCurrentStateRuntimeTotalTransientCurrentEntries": entityCacheCurrentStateRuntimeTotalTransientCurrentEntries,
       "entityCacheCurrentStateRuntimeAvgPerEntryMemorySize": entityCacheCurrentStateRuntimeAvgPerEntryMemorySize,
       "entityCacheCurrentStateRuntimeMinEntryTimeout": entityCacheCurrentStateRuntimeMinEntryTimeout,
       "entityCacheCurrentStateRuntimeAvgPercentTransient": entityCacheCurrentStateRuntimeAvgPercentTransient,
       "entityCacheRuntimeTable": entityCacheRuntimeTable,
       "entityCacheRuntimeEntry": entityCacheRuntimeEntry,
       "entityCacheRuntimeIndex": entityCacheRuntimeIndex,
       "entityCacheRuntimeObjectName": entityCacheRuntimeObjectName,
       "entityCacheRuntimeType": entityCacheRuntimeType,
       "entityCacheRuntimeName": entityCacheRuntimeName,
       "entityCacheRuntimeParent": entityCacheRuntimeParent,
       "entityCacheRuntimeAvgPercentTransient": entityCacheRuntimeAvgPercentTransient,
       "entityCacheRuntimeAvgPerEntryDiskSize": entityCacheRuntimeAvgPerEntryDiskSize,
       "entityCacheRuntimeAvgPercentPersistent": entityCacheRuntimeAvgPercentPersistent,
       "entityCacheRuntimeAvgPerEntryMemorySize": entityCacheRuntimeAvgPerEntryMemorySize,
       "entityCacheRuntimeAvgTimeout": entityCacheRuntimeAvgTimeout,
       "entityCacheRuntimeMaxEntryMemorySize": entityCacheRuntimeMaxEntryMemorySize,
       "entityCacheRuntimeMaxEntryTimeout": entityCacheRuntimeMaxEntryTimeout,
       "entityCacheRuntimeMinEntryMemorySize": entityCacheRuntimeMinEntryMemorySize,
       "entityCacheRuntimeMinEntryTimeout": entityCacheRuntimeMinEntryTimeout,
       "entityCacheRuntimeTotalCurrentEntries": entityCacheRuntimeTotalCurrentEntries,
       "entityCacheRuntimeTotalPersistentCurrentEntries": entityCacheRuntimeTotalPersistentCurrentEntries,
       "entityCacheRuntimeTotalTransientCurrentEntries": entityCacheRuntimeTotalTransientCurrentEntries,
       "executeQueueRuntimeTable": executeQueueRuntimeTable,
       "executeQueueRuntimeEntry": executeQueueRuntimeEntry,
       "executeQueueRuntimeIndex": executeQueueRuntimeIndex,
       "executeQueueRuntimeObjectName": executeQueueRuntimeObjectName,
       "executeQueueRuntimeType": executeQueueRuntimeType,
       "executeQueueRuntimeName": executeQueueRuntimeName,
       "executeQueueRuntimeParent": executeQueueRuntimeParent,
       "executeQueueRuntimeExecuteThreadCurrentIdleCount": executeQueueRuntimeExecuteThreadCurrentIdleCount,
       "executeQueueRuntimePendingRequestOldestTime": executeQueueRuntimePendingRequestOldestTime,
       "executeQueueRuntimePendingRequestCurrentCount": executeQueueRuntimePendingRequestCurrentCount,
       "executeQueueRuntimeServicedRequestTotalCount": executeQueueRuntimeServicedRequestTotalCount,
       "executeQueueRuntimeExecuteThreads": executeQueueRuntimeExecuteThreads,
       "executeQueueRuntimeExecuteThreadTotalCount": executeQueueRuntimeExecuteThreadTotalCount,
       "interceptionComponentRuntimeTable": interceptionComponentRuntimeTable,
       "interceptionComponentRuntimeEntry": interceptionComponentRuntimeEntry,
       "interceptionComponentRuntimeIndex": interceptionComponentRuntimeIndex,
       "interceptionComponentRuntimeObjectName": interceptionComponentRuntimeObjectName,
       "interceptionComponentRuntimeType": interceptionComponentRuntimeType,
       "interceptionComponentRuntimeName": interceptionComponentRuntimeName,
       "interceptionComponentRuntimeParent": interceptionComponentRuntimeParent,
       "interceptionComponentRuntimeModuleId": interceptionComponentRuntimeModuleId,
       "interceptionComponentRuntimeDeploymentState": interceptionComponentRuntimeDeploymentState,
       "jdbcConnectionPoolRuntimeTable": jdbcConnectionPoolRuntimeTable,
       "jdbcConnectionPoolRuntimeEntry": jdbcConnectionPoolRuntimeEntry,
       "jdbcConnectionPoolRuntimeIndex": jdbcConnectionPoolRuntimeIndex,
       "jdbcConnectionPoolRuntimeObjectName": jdbcConnectionPoolRuntimeObjectName,
       "jdbcConnectionPoolRuntimeType": jdbcConnectionPoolRuntimeType,
       "jdbcConnectionPoolRuntimeName": jdbcConnectionPoolRuntimeName,
       "jdbcConnectionPoolRuntimeParent": jdbcConnectionPoolRuntimeParent,
       "jdbcConnectionPoolRuntimeActiveConnectionsCurrentCount": jdbcConnectionPoolRuntimeActiveConnectionsCurrentCount,
       "jdbcConnectionPoolRuntimeWaitingForConnectionCurrentCount": jdbcConnectionPoolRuntimeWaitingForConnectionCurrentCount,
       "jdbcConnectionPoolRuntimeVersionJDBCDriver": jdbcConnectionPoolRuntimeVersionJDBCDriver,
       "jdbcConnectionPoolRuntimeActiveConnectionsHighCount": jdbcConnectionPoolRuntimeActiveConnectionsHighCount,
       "jdbcConnectionPoolRuntimeWaitingForConnectionHighCount": jdbcConnectionPoolRuntimeWaitingForConnectionHighCount,
       "jdbcConnectionPoolRuntimeWaitSecondsHighCount": jdbcConnectionPoolRuntimeWaitSecondsHighCount,
       "jdbcConnectionPoolRuntimeConnectionsTotalCount": jdbcConnectionPoolRuntimeConnectionsTotalCount,
       "jdbcConnectionPoolRuntimeMaxCapacity": jdbcConnectionPoolRuntimeMaxCapacity,
       "jdbcConnectionPoolRuntimeActiveConnectionsAverageCount": jdbcConnectionPoolRuntimeActiveConnectionsAverageCount,
       "jdbcConnectionPoolRuntimeConnectionDelayTime": jdbcConnectionPoolRuntimeConnectionDelayTime,
       "jdbcConnectionPoolRuntimeConnectionLeakProfileCount": jdbcConnectionPoolRuntimeConnectionLeakProfileCount,
       "jdbcConnectionPoolRuntimeCurrCapacity": jdbcConnectionPoolRuntimeCurrCapacity,
       "jdbcConnectionPoolRuntimeFailuresToReconnectCount": jdbcConnectionPoolRuntimeFailuresToReconnectCount,
       "jdbcConnectionPoolRuntimeHighestNumAvailable": jdbcConnectionPoolRuntimeHighestNumAvailable,
       "jdbcConnectionPoolRuntimeHighestNumUnavailable": jdbcConnectionPoolRuntimeHighestNumUnavailable,
       "jdbcConnectionPoolRuntimeLeakedConnectionCount": jdbcConnectionPoolRuntimeLeakedConnectionCount,
       "jdbcConnectionPoolRuntimeNumAvailable": jdbcConnectionPoolRuntimeNumAvailable,
       "jdbcConnectionPoolRuntimeNumUnavailable": jdbcConnectionPoolRuntimeNumUnavailable,
       "jdbcConnectionPoolRuntimeStatementProfileCount": jdbcConnectionPoolRuntimeStatementProfileCount,
       "jdbcDataSourceRuntimeTable": jdbcDataSourceRuntimeTable,
       "jdbcDataSourceRuntimeEntry": jdbcDataSourceRuntimeEntry,
       "jdbcDataSourceRuntimeIndex": jdbcDataSourceRuntimeIndex,
       "jdbcDataSourceRuntimeObjectName": jdbcDataSourceRuntimeObjectName,
       "jdbcDataSourceRuntimeType": jdbcDataSourceRuntimeType,
       "jdbcDataSourceRuntimeName": jdbcDataSourceRuntimeName,
       "jdbcDataSourceRuntimeParent": jdbcDataSourceRuntimeParent,
       "jdbcDataSourceRuntimeLeakedConnectionCount": jdbcDataSourceRuntimeLeakedConnectionCount,
       "jdbcDataSourceRuntimeEnabled": jdbcDataSourceRuntimeEnabled,
       "jdbcDataSourceRuntimeState": jdbcDataSourceRuntimeState,
       "jdbcDataSourceRuntimeFailuresToReconnectCount": jdbcDataSourceRuntimeFailuresToReconnectCount,
       "jdbcDataSourceRuntimeConnectionDelayTime": jdbcDataSourceRuntimeConnectionDelayTime,
       "jdbcDataSourceRuntimePrepStmtCacheAccessCount": jdbcDataSourceRuntimePrepStmtCacheAccessCount,
       "jdbcDataSourceRuntimePrepStmtCacheAddCount": jdbcDataSourceRuntimePrepStmtCacheAddCount,
       "jdbcDataSourceRuntimePrepStmtCacheDeleteCount": jdbcDataSourceRuntimePrepStmtCacheDeleteCount,
       "jdbcDataSourceRuntimePrepStmtCacheCurrentSize": jdbcDataSourceRuntimePrepStmtCacheCurrentSize,
       "jdbcDataSourceRuntimePrepStmtCacheHitCount": jdbcDataSourceRuntimePrepStmtCacheHitCount,
       "jdbcDataSourceRuntimePrepStmtCacheMissCount": jdbcDataSourceRuntimePrepStmtCacheMissCount,
       "jdbcDataSourceRuntimeActiveConnectionsCurrentCount": jdbcDataSourceRuntimeActiveConnectionsCurrentCount,
       "jdbcDataSourceRuntimeWaitingForConnectionCurrentCount": jdbcDataSourceRuntimeWaitingForConnectionCurrentCount,
       "jdbcDataSourceRuntimeVersionJDBCDriver": jdbcDataSourceRuntimeVersionJDBCDriver,
       "jdbcDataSourceRuntimeActiveConnectionsHighCount": jdbcDataSourceRuntimeActiveConnectionsHighCount,
       "jdbcDataSourceRuntimeActiveConnectionsAverageCount": jdbcDataSourceRuntimeActiveConnectionsAverageCount,
       "jdbcDataSourceRuntimeReserveRequestCount": jdbcDataSourceRuntimeReserveRequestCount,
       "jdbcDataSourceRuntimeFailedReserveRequestCount": jdbcDataSourceRuntimeFailedReserveRequestCount,
       "jdbcDataSourceRuntimeWaitingForConnectionHighCount": jdbcDataSourceRuntimeWaitingForConnectionHighCount,
       "jdbcDataSourceRuntimeWaitingForConnectionTotal": jdbcDataSourceRuntimeWaitingForConnectionTotal,
       "jdbcDataSourceRuntimeWaitingForConnectionSuccessTotal": jdbcDataSourceRuntimeWaitingForConnectionSuccessTotal,
       "jdbcDataSourceRuntimeWaitingForConnectionFailureTotal": jdbcDataSourceRuntimeWaitingForConnectionFailureTotal,
       "jdbcDataSourceRuntimeWaitSecondsHighCount": jdbcDataSourceRuntimeWaitSecondsHighCount,
       "jdbcDataSourceRuntimeConnectionsTotalCount": jdbcDataSourceRuntimeConnectionsTotalCount,
       "jdbcDataSourceRuntimeCurrCapacity": jdbcDataSourceRuntimeCurrCapacity,
       "jdbcDataSourceRuntimeCurrCapacityHighCount": jdbcDataSourceRuntimeCurrCapacityHighCount,
       "jdbcDataSourceRuntimeNumAvailable": jdbcDataSourceRuntimeNumAvailable,
       "jdbcDataSourceRuntimeHighestNumAvailable": jdbcDataSourceRuntimeHighestNumAvailable,
       "jdbcDataSourceRuntimeNumUnavailable": jdbcDataSourceRuntimeNumUnavailable,
       "jdbcDataSourceRuntimeHighestNumUnavailable": jdbcDataSourceRuntimeHighestNumUnavailable,
       "jdbcDataSourceRuntimeModuleId": jdbcDataSourceRuntimeModuleId,
       "jdbcDataSourceRuntimeDeploymentState": jdbcDataSourceRuntimeDeploymentState,
       "jmsConnectionRuntimeTable": jmsConnectionRuntimeTable,
       "jmsConnectionRuntimeEntry": jmsConnectionRuntimeEntry,
       "jmsConnectionRuntimeIndex": jmsConnectionRuntimeIndex,
       "jmsConnectionRuntimeObjectName": jmsConnectionRuntimeObjectName,
       "jmsConnectionRuntimeType": jmsConnectionRuntimeType,
       "jmsConnectionRuntimeName": jmsConnectionRuntimeName,
       "jmsConnectionRuntimeParent": jmsConnectionRuntimeParent,
       "jmsConnectionRuntimeClientID": jmsConnectionRuntimeClientID,
       "jmsConnectionRuntimeSessions": jmsConnectionRuntimeSessions,
       "jmsConnectionRuntimeSessionsCurrentCount": jmsConnectionRuntimeSessionsCurrentCount,
       "jmsConnectionRuntimeSessionsHighCount": jmsConnectionRuntimeSessionsHighCount,
       "jmsConnectionRuntimeSessionsTotalCount": jmsConnectionRuntimeSessionsTotalCount,
       "jmsConnectionRuntimeHostAddress": jmsConnectionRuntimeHostAddress,
       "jmsConsumerRuntimeTable": jmsConsumerRuntimeTable,
       "jmsConsumerRuntimeEntry": jmsConsumerRuntimeEntry,
       "jmsConsumerRuntimeIndex": jmsConsumerRuntimeIndex,
       "jmsConsumerRuntimeObjectName": jmsConsumerRuntimeObjectName,
       "jmsConsumerRuntimeType": jmsConsumerRuntimeType,
       "jmsConsumerRuntimeName": jmsConsumerRuntimeName,
       "jmsConsumerRuntimeParent": jmsConsumerRuntimeParent,
       "jmsConsumerRuntimeMessagesPendingCount": jmsConsumerRuntimeMessagesPendingCount,
       "jmsConsumerRuntimeMessagesReceivedCount": jmsConsumerRuntimeMessagesReceivedCount,
       "jmsConsumerRuntimeBytesPendingCount": jmsConsumerRuntimeBytesPendingCount,
       "jmsConsumerRuntimeBytesReceivedCount": jmsConsumerRuntimeBytesReceivedCount,
       "jmsConsumerRuntimeDestinationName": jmsConsumerRuntimeDestinationName,
       "jmsConsumerRuntimeSelector": jmsConsumerRuntimeSelector,
       "jmsConsumerRuntimeDurable": jmsConsumerRuntimeDurable,
       "jmsConsumerRuntimeActive": jmsConsumerRuntimeActive,
       "jmsConsumerRuntimeMemberDestinationName": jmsConsumerRuntimeMemberDestinationName,
       "jmsDestinationRuntimeTable": jmsDestinationRuntimeTable,
       "jmsDestinationRuntimeEntry": jmsDestinationRuntimeEntry,
       "jmsDestinationRuntimeIndex": jmsDestinationRuntimeIndex,
       "jmsDestinationRuntimeObjectName": jmsDestinationRuntimeObjectName,
       "jmsDestinationRuntimeType": jmsDestinationRuntimeType,
       "jmsDestinationRuntimeName": jmsDestinationRuntimeName,
       "jmsDestinationRuntimeParent": jmsDestinationRuntimeParent,
       "jmsDestinationRuntimeConsumersCurrentCount": jmsDestinationRuntimeConsumersCurrentCount,
       "jmsDestinationRuntimeConsumersHighCount": jmsDestinationRuntimeConsumersHighCount,
       "jmsDestinationRuntimeConsumersTotalCount": jmsDestinationRuntimeConsumersTotalCount,
       "jmsDestinationRuntimeMessagesCurrentCount": jmsDestinationRuntimeMessagesCurrentCount,
       "jmsDestinationRuntimeMessagesPendingCount": jmsDestinationRuntimeMessagesPendingCount,
       "jmsDestinationRuntimeMessagesHighCount": jmsDestinationRuntimeMessagesHighCount,
       "jmsDestinationRuntimeMessagesReceivedCount": jmsDestinationRuntimeMessagesReceivedCount,
       "jmsDestinationRuntimeMessagesThresholdTime": jmsDestinationRuntimeMessagesThresholdTime,
       "jmsDestinationRuntimeBytesCurrentCount": jmsDestinationRuntimeBytesCurrentCount,
       "jmsDestinationRuntimeBytesPendingCount": jmsDestinationRuntimeBytesPendingCount,
       "jmsDestinationRuntimeBytesHighCount": jmsDestinationRuntimeBytesHighCount,
       "jmsDestinationRuntimeBytesReceivedCount": jmsDestinationRuntimeBytesReceivedCount,
       "jmsDestinationRuntimeBytesThresholdTime": jmsDestinationRuntimeBytesThresholdTime,
       "jmsDestinationRuntimeDurableSubscribers": jmsDestinationRuntimeDurableSubscribers,
       "jmsDestinationRuntimeProductionPaused": jmsDestinationRuntimeProductionPaused,
       "jmsDestinationRuntimeInsertionPaused": jmsDestinationRuntimeInsertionPaused,
       "jmsDestinationRuntimeConsumptionPausedState": jmsDestinationRuntimeConsumptionPausedState,
       "jmsDestinationRuntimeConsumptionPaused": jmsDestinationRuntimeConsumptionPaused,
       "jmsDestinationRuntimeState": jmsDestinationRuntimeState,
       "jmsDestinationRuntimeInsertionPausedState": jmsDestinationRuntimeInsertionPausedState,
       "jmsDestinationRuntimeDestinationType": jmsDestinationRuntimeDestinationType,
       "jmsDestinationRuntimeProductionPausedState": jmsDestinationRuntimeProductionPausedState,
       "jmsProducerRuntimeTable": jmsProducerRuntimeTable,
       "jmsProducerRuntimeEntry": jmsProducerRuntimeEntry,
       "jmsProducerRuntimeIndex": jmsProducerRuntimeIndex,
       "jmsProducerRuntimeObjectName": jmsProducerRuntimeObjectName,
       "jmsProducerRuntimeType": jmsProducerRuntimeType,
       "jmsProducerRuntimeName": jmsProducerRuntimeName,
       "jmsProducerRuntimeParent": jmsProducerRuntimeParent,
       "jmsProducerRuntimeMessagesPendingCount": jmsProducerRuntimeMessagesPendingCount,
       "jmsProducerRuntimeMessagesSentCount": jmsProducerRuntimeMessagesSentCount,
       "jmsProducerRuntimeBytesPendingCount": jmsProducerRuntimeBytesPendingCount,
       "jmsProducerRuntimeBytesSentCount": jmsProducerRuntimeBytesSentCount,
       "jmsPooledConnectionRuntimeTable": jmsPooledConnectionRuntimeTable,
       "jmsPooledConnectionRuntimeEntry": jmsPooledConnectionRuntimeEntry,
       "jmsPooledConnectionRuntimeIndex": jmsPooledConnectionRuntimeIndex,
       "jmsPooledConnectionRuntimeObjectName": jmsPooledConnectionRuntimeObjectName,
       "jmsPooledConnectionRuntimeType": jmsPooledConnectionRuntimeType,
       "jmsPooledConnectionRuntimeName": jmsPooledConnectionRuntimeName,
       "jmsPooledConnectionRuntimeParent": jmsPooledConnectionRuntimeParent,
       "jmsPooledConnectionRuntimeAverageReserved": jmsPooledConnectionRuntimeAverageReserved,
       "jmsPooledConnectionRuntimeCreationDelayTime": jmsPooledConnectionRuntimeCreationDelayTime,
       "jmsPooledConnectionRuntimeCurrCapacity": jmsPooledConnectionRuntimeCurrCapacity,
       "jmsPooledConnectionRuntimeHighestNumAvailable": jmsPooledConnectionRuntimeHighestNumAvailable,
       "jmsPooledConnectionRuntimeHighestNumReserved": jmsPooledConnectionRuntimeHighestNumReserved,
       "jmsPooledConnectionRuntimeNumAvailable": jmsPooledConnectionRuntimeNumAvailable,
       "jmsPooledConnectionRuntimeHighestNumWaiters": jmsPooledConnectionRuntimeHighestNumWaiters,
       "jmsPooledConnectionRuntimeHighestWaitSeconds": jmsPooledConnectionRuntimeHighestWaitSeconds,
       "jmsPooledConnectionRuntimeMaxCapacity": jmsPooledConnectionRuntimeMaxCapacity,
       "jmsPooledConnectionRuntimeNumConnectionObjects": jmsPooledConnectionRuntimeNumConnectionObjects,
       "jmsPooledConnectionRuntimeNumFailuresToRefresh": jmsPooledConnectionRuntimeNumFailuresToRefresh,
       "jmsPooledConnectionRuntimeNumLeaked": jmsPooledConnectionRuntimeNumLeaked,
       "jmsPooledConnectionRuntimeNumReserved": jmsPooledConnectionRuntimeNumReserved,
       "jmsPooledConnectionRuntimeNumUnavailable": jmsPooledConnectionRuntimeNumUnavailable,
       "jmsPooledConnectionRuntimeNumWaiters": jmsPooledConnectionRuntimeNumWaiters,
       "jmsPooledConnectionRuntimeTotalNumAllocated": jmsPooledConnectionRuntimeTotalNumAllocated,
       "jmsPooledConnectionRuntimeTotalNumDestroyed": jmsPooledConnectionRuntimeTotalNumDestroyed,
       "jmsPooledConnectionRuntimeHighestNumUnavailable": jmsPooledConnectionRuntimeHighestNumUnavailable,
       "jmsRuntimeTable": jmsRuntimeTable,
       "jmsRuntimeEntry": jmsRuntimeEntry,
       "jmsRuntimeIndex": jmsRuntimeIndex,
       "jmsRuntimeObjectName": jmsRuntimeObjectName,
       "jmsRuntimeType": jmsRuntimeType,
       "jmsRuntimeName": jmsRuntimeName,
       "jmsRuntimeParent": jmsRuntimeParent,
       "jmsRuntimeConnections": jmsRuntimeConnections,
       "jmsRuntimeConnectionsCurrentCount": jmsRuntimeConnectionsCurrentCount,
       "jmsRuntimeConnectionsHighCount": jmsRuntimeConnectionsHighCount,
       "jmsRuntimeConnectionsTotalCount": jmsRuntimeConnectionsTotalCount,
       "jmsRuntimeJMSServers": jmsRuntimeJMSServers,
       "jmsRuntimeJMSServersCurrentCount": jmsRuntimeJMSServersCurrentCount,
       "jmsRuntimeJMSServersHighCount": jmsRuntimeJMSServersHighCount,
       "jmsRuntimeJMSServersTotalCount": jmsRuntimeJMSServersTotalCount,
       "jmsServerRuntimeTable": jmsServerRuntimeTable,
       "jmsServerRuntimeEntry": jmsServerRuntimeEntry,
       "jmsServerRuntimeIndex": jmsServerRuntimeIndex,
       "jmsServerRuntimeObjectName": jmsServerRuntimeObjectName,
       "jmsServerRuntimeType": jmsServerRuntimeType,
       "jmsServerRuntimeName": jmsServerRuntimeName,
       "jmsServerRuntimeParent": jmsServerRuntimeParent,
       "jmsServerRuntimeSessionPoolRuntimes": jmsServerRuntimeSessionPoolRuntimes,
       "jmsServerRuntimeSessionPoolsCurrentCount": jmsServerRuntimeSessionPoolsCurrentCount,
       "jmsServerRuntimeSessionPoolsHighCount": jmsServerRuntimeSessionPoolsHighCount,
       "jmsServerRuntimeSessionPoolsTotalCount": jmsServerRuntimeSessionPoolsTotalCount,
       "jmsServerRuntimeDestinations": jmsServerRuntimeDestinations,
       "jmsServerRuntimeDestinationsCurrentCount": jmsServerRuntimeDestinationsCurrentCount,
       "jmsServerRuntimeDestinationsHighCount": jmsServerRuntimeDestinationsHighCount,
       "jmsServerRuntimeDestinationsTotalCount": jmsServerRuntimeDestinationsTotalCount,
       "jmsServerRuntimeMessagesCurrentCount": jmsServerRuntimeMessagesCurrentCount,
       "jmsServerRuntimeMessagesPendingCount": jmsServerRuntimeMessagesPendingCount,
       "jmsServerRuntimeMessagesHighCount": jmsServerRuntimeMessagesHighCount,
       "jmsServerRuntimeMessagesReceivedCount": jmsServerRuntimeMessagesReceivedCount,
       "jmsServerRuntimeMessagesThresholdTime": jmsServerRuntimeMessagesThresholdTime,
       "jmsServerRuntimeBytesCurrentCount": jmsServerRuntimeBytesCurrentCount,
       "jmsServerRuntimeBytesPendingCount": jmsServerRuntimeBytesPendingCount,
       "jmsServerRuntimeBytesHighCount": jmsServerRuntimeBytesHighCount,
       "jmsServerRuntimeBytesReceivedCount": jmsServerRuntimeBytesReceivedCount,
       "jmsServerRuntimeBytesThresholdTime": jmsServerRuntimeBytesThresholdTime,
       "jmsServerRuntimeMessagesPagedInTotalCount": jmsServerRuntimeMessagesPagedInTotalCount,
       "jmsServerRuntimeProductionPaused": jmsServerRuntimeProductionPaused,
       "jmsServerRuntimeInsertionPaused": jmsServerRuntimeInsertionPaused,
       "jmsServerRuntimeConsumptionPausedState": jmsServerRuntimeConsumptionPausedState,
       "jmsServerRuntimeConsumptionPaused": jmsServerRuntimeConsumptionPaused,
       "jmsServerRuntimeBytesPageableCurrentCount": jmsServerRuntimeBytesPageableCurrentCount,
       "jmsServerRuntimeMessagesPagedOutTotalCount": jmsServerRuntimeMessagesPagedOutTotalCount,
       "jmsServerRuntimeInsertionPausedState": jmsServerRuntimeInsertionPausedState,
       "jmsServerRuntimeMessagesPageableCurrentCount": jmsServerRuntimeMessagesPageableCurrentCount,
       "jmsServerRuntimeProductionPausedState": jmsServerRuntimeProductionPausedState,
       "jmsServerRuntimeBytesPagedOutTotalCount": jmsServerRuntimeBytesPagedOutTotalCount,
       "jmsServerRuntimeBytesPagedInTotalCount": jmsServerRuntimeBytesPagedInTotalCount,
       "jmsSessionPoolRuntimeTable": jmsSessionPoolRuntimeTable,
       "jmsSessionPoolRuntimeEntry": jmsSessionPoolRuntimeEntry,
       "jmsSessionPoolRuntimeIndex": jmsSessionPoolRuntimeIndex,
       "jmsSessionPoolRuntimeObjectName": jmsSessionPoolRuntimeObjectName,
       "jmsSessionPoolRuntimeType": jmsSessionPoolRuntimeType,
       "jmsSessionPoolRuntimeName": jmsSessionPoolRuntimeName,
       "jmsSessionPoolRuntimeParent": jmsSessionPoolRuntimeParent,
       "jmsSessionPoolRuntimeJMSServer": jmsSessionPoolRuntimeJMSServer,
       "jmsSessionPoolRuntimeConnectionConsumers": jmsSessionPoolRuntimeConnectionConsumers,
       "jmsSessionPoolRuntimeConnectionConsumersCurrentCount": jmsSessionPoolRuntimeConnectionConsumersCurrentCount,
       "jmsSessionPoolRuntimeConnectionConsumersHighCount": jmsSessionPoolRuntimeConnectionConsumersHighCount,
       "jmsSessionPoolRuntimeConnectionConsumersTotalCount": jmsSessionPoolRuntimeConnectionConsumersTotalCount,
       "jmsSessionRuntimeTable": jmsSessionRuntimeTable,
       "jmsSessionRuntimeEntry": jmsSessionRuntimeEntry,
       "jmsSessionRuntimeIndex": jmsSessionRuntimeIndex,
       "jmsSessionRuntimeObjectName": jmsSessionRuntimeObjectName,
       "jmsSessionRuntimeType": jmsSessionRuntimeType,
       "jmsSessionRuntimeName": jmsSessionRuntimeName,
       "jmsSessionRuntimeParent": jmsSessionRuntimeParent,
       "jmsSessionRuntimeConsumers": jmsSessionRuntimeConsumers,
       "jmsSessionRuntimeConsumersCurrentCount": jmsSessionRuntimeConsumersCurrentCount,
       "jmsSessionRuntimeConsumersHighCount": jmsSessionRuntimeConsumersHighCount,
       "jmsSessionRuntimeConsumersTotalCount": jmsSessionRuntimeConsumersTotalCount,
       "jmsSessionRuntimeProducers": jmsSessionRuntimeProducers,
       "jmsSessionRuntimeProducersCurrentCount": jmsSessionRuntimeProducersCurrentCount,
       "jmsSessionRuntimeProducersHighCount": jmsSessionRuntimeProducersHighCount,
       "jmsSessionRuntimeProducersTotalCount": jmsSessionRuntimeProducersTotalCount,
       "jmsSessionRuntimeTransacted": jmsSessionRuntimeTransacted,
       "jmsSessionRuntimeAcknowledgeMode": jmsSessionRuntimeAcknowledgeMode,
       "jmsSessionRuntimeMessagesPendingCount": jmsSessionRuntimeMessagesPendingCount,
       "jmsSessionRuntimeMessagesSentCount": jmsSessionRuntimeMessagesSentCount,
       "jmsSessionRuntimeMessagesReceivedCount": jmsSessionRuntimeMessagesReceivedCount,
       "jmsSessionRuntimeBytesPendingCount": jmsSessionRuntimeBytesPendingCount,
       "jmsSessionRuntimeBytesSentCount": jmsSessionRuntimeBytesSentCount,
       "jmsSessionRuntimeBytesReceivedCount": jmsSessionRuntimeBytesReceivedCount,
       "jmsComponentRuntimeTable": jmsComponentRuntimeTable,
       "jmsComponentRuntimeEntry": jmsComponentRuntimeEntry,
       "jmsComponentRuntimeIndex": jmsComponentRuntimeIndex,
       "jmsComponentRuntimeObjectName": jmsComponentRuntimeObjectName,
       "jmsComponentRuntimeType": jmsComponentRuntimeType,
       "jmsComponentRuntimeName": jmsComponentRuntimeName,
       "jmsComponentRuntimeParent": jmsComponentRuntimeParent,
       "jmsComponentRuntimeModuleId": jmsComponentRuntimeModuleId,
       "jmsComponentRuntimeDeploymentState": jmsComponentRuntimeDeploymentState,
       "joltConnectionPoolRuntimeTable": joltConnectionPoolRuntimeTable,
       "joltConnectionPoolRuntimeEntry": joltConnectionPoolRuntimeEntry,
       "joltConnectionPoolRuntimeIndex": joltConnectionPoolRuntimeIndex,
       "joltConnectionPoolRuntimeObjectName": joltConnectionPoolRuntimeObjectName,
       "joltConnectionPoolRuntimeType": joltConnectionPoolRuntimeType,
       "joltConnectionPoolRuntimeName": joltConnectionPoolRuntimeName,
       "joltConnectionPoolRuntimeParent": joltConnectionPoolRuntimeParent,
       "joltConnectionPoolRuntimePoolName": joltConnectionPoolRuntimePoolName,
       "joltConnectionPoolRuntimeMaxCapacity": joltConnectionPoolRuntimeMaxCapacity,
       "joltConnectionPoolRuntimePoolState": joltConnectionPoolRuntimePoolState,
       "joltConnectionPoolRuntimeSecurityContextPropagation": joltConnectionPoolRuntimeSecurityContextPropagation,
       "joltConnectionPoolRuntimeConnections": joltConnectionPoolRuntimeConnections,
       "joltConnectionRuntimeTable": joltConnectionRuntimeTable,
       "joltConnectionRuntimeEntry": joltConnectionRuntimeEntry,
       "joltConnectionRuntimeIndex": joltConnectionRuntimeIndex,
       "joltConnectionRuntimeObjectName": joltConnectionRuntimeObjectName,
       "joltConnectionRuntimeType": joltConnectionRuntimeType,
       "joltConnectionRuntimeName": joltConnectionRuntimeName,
       "joltConnectionRuntimeParent": joltConnectionRuntimeParent,
       "joltConnectionRuntimeAddress": joltConnectionRuntimeAddress,
       "joltConnectionRuntimeLastAccessTime": joltConnectionRuntimeLastAccessTime,
       "joltConnectionRuntimeAlive": joltConnectionRuntimeAlive,
       "joltConnectionRuntimeRequestCount": joltConnectionRuntimeRequestCount,
       "joltConnectionRuntimePendingRequestCount": joltConnectionRuntimePendingRequestCount,
       "joltConnectionRuntimeErrorCount": joltConnectionRuntimeErrorCount,
       "joltConnectionRuntimeInTransaction": joltConnectionRuntimeInTransaction,
       "joltConnectionServiceRuntimeTable": joltConnectionServiceRuntimeTable,
       "joltConnectionServiceRuntimeEntry": joltConnectionServiceRuntimeEntry,
       "joltConnectionServiceRuntimeIndex": joltConnectionServiceRuntimeIndex,
       "joltConnectionServiceRuntimeObjectName": joltConnectionServiceRuntimeObjectName,
       "joltConnectionServiceRuntimeType": joltConnectionServiceRuntimeType,
       "joltConnectionServiceRuntimeName": joltConnectionServiceRuntimeName,
       "joltConnectionServiceRuntimeParent": joltConnectionServiceRuntimeParent,
       "joltConnectionServiceRuntimeConnectionPoolCount": joltConnectionServiceRuntimeConnectionPoolCount,
       "joltConnectionServiceRuntimeConnectionPools": joltConnectionServiceRuntimeConnectionPools,
       "jrockitRuntimeTable": jrockitRuntimeTable,
       "jrockitRuntimeEntry": jrockitRuntimeEntry,
       "jrockitRuntimeIndex": jrockitRuntimeIndex,
       "jrockitRuntimeObjectName": jrockitRuntimeObjectName,
       "jrockitRuntimeType": jrockitRuntimeType,
       "jrockitRuntimeName": jrockitRuntimeName,
       "jrockitRuntimeParent": jrockitRuntimeParent,
       "jrockitRuntimeAllProcessorsAverageLoad": jrockitRuntimeAllProcessorsAverageLoad,
       "jrockitRuntimeFreeHeap": jrockitRuntimeFreeHeap,
       "jrockitRuntimeFreePhysicalMemory": jrockitRuntimeFreePhysicalMemory,
       "jrockitRuntimeGcAlgorithm": jrockitRuntimeGcAlgorithm,
       "jrockitRuntimeJVMDescription": jrockitRuntimeJVMDescription,
       "jrockitRuntimeJvmProcessorLoad": jrockitRuntimeJvmProcessorLoad,
       "jrockitRuntimeLastGCEnd": jrockitRuntimeLastGCEnd,
       "jrockitRuntimeLastGCStart": jrockitRuntimeLastGCStart,
       "jrockitRuntimeNumberOfDaemonThreads": jrockitRuntimeNumberOfDaemonThreads,
       "jrockitRuntimeNumberOfProcessors": jrockitRuntimeNumberOfProcessors,
       "jrockitRuntimeThreadStackDump": jrockitRuntimeThreadStackDump,
       "jrockitRuntimeTotalGarbageCollectionCount": jrockitRuntimeTotalGarbageCollectionCount,
       "jrockitRuntimeTotalGarbageCollectionTime": jrockitRuntimeTotalGarbageCollectionTime,
       "jrockitRuntimeTotalHeap": jrockitRuntimeTotalHeap,
       "jrockitRuntimeTotalNumberOfThreads": jrockitRuntimeTotalNumberOfThreads,
       "jrockitRuntimeTotalNurserySize": jrockitRuntimeTotalNurserySize,
       "jrockitRuntimeTotalPhysicalMemory": jrockitRuntimeTotalPhysicalMemory,
       "jrockitRuntimeUptime": jrockitRuntimeUptime,
       "jrockitRuntimeUsedHeap": jrockitRuntimeUsedHeap,
       "jrockitRuntimeUsedPhysicalMemory": jrockitRuntimeUsedPhysicalMemory,
       "jrockitRuntimeVendor": jrockitRuntimeVendor,
       "jrockitRuntimeVersion": jrockitRuntimeVersion,
       "jrockitRuntimeConcurrent": jrockitRuntimeConcurrent,
       "jrockitRuntimeGCHandlesCompaction": jrockitRuntimeGCHandlesCompaction,
       "jrockitRuntimeGenerational": jrockitRuntimeGenerational,
       "jrockitRuntimeIncremental": jrockitRuntimeIncremental,
       "jrockitRuntimeParallel": jrockitRuntimeParallel,
       "jrockitRuntimeJavaVendor": jrockitRuntimeJavaVendor,
       "jrockitRuntimeHeapSizeCurrent": jrockitRuntimeHeapSizeCurrent,
       "jrockitRuntimeHeapFreePercent": jrockitRuntimeHeapFreePercent,
       "jrockitRuntimeHeapSizeMax": jrockitRuntimeHeapSizeMax,
       "jrockitRuntimeOSName": jrockitRuntimeOSName,
       "jrockitRuntimeJavaVersion": jrockitRuntimeJavaVersion,
       "jrockitRuntimeOSVersion": jrockitRuntimeOSVersion,
       "jrockitRuntimeHeapFreeCurrent": jrockitRuntimeHeapFreeCurrent,
       "jrockitRuntimeJavaVMVendor": jrockitRuntimeJavaVMVendor,
       "jtaRuntimeTable": jtaRuntimeTable,
       "jtaRuntimeEntry": jtaRuntimeEntry,
       "jtaRuntimeIndex": jtaRuntimeIndex,
       "jtaRuntimeObjectName": jtaRuntimeObjectName,
       "jtaRuntimeType": jtaRuntimeType,
       "jtaRuntimeName": jtaRuntimeName,
       "jtaRuntimeParent": jtaRuntimeParent,
       "jtaRuntimeTransactionTotalCount": jtaRuntimeTransactionTotalCount,
       "jtaRuntimeTransactionCommittedTotalCount": jtaRuntimeTransactionCommittedTotalCount,
       "jtaRuntimeTransactionRolledBackTotalCount": jtaRuntimeTransactionRolledBackTotalCount,
       "jtaRuntimeTransactionHeuristicsTotalCount": jtaRuntimeTransactionHeuristicsTotalCount,
       "jtaRuntimeTransactionRolledBackResourceTotalCount": jtaRuntimeTransactionRolledBackResourceTotalCount,
       "jtaRuntimeTransactionRolledBackAppTotalCount": jtaRuntimeTransactionRolledBackAppTotalCount,
       "jtaRuntimeTransactionRolledBackSystemTotalCount": jtaRuntimeTransactionRolledBackSystemTotalCount,
       "jtaRuntimeSecondsActiveTotalCount": jtaRuntimeSecondsActiveTotalCount,
       "jtaRuntimeTransactionRolledBackTimeoutTotalCount": jtaRuntimeTransactionRolledBackTimeoutTotalCount,
       "jtaRuntimeTransactionNameRuntimeMBeans": jtaRuntimeTransactionNameRuntimeMBeans,
       "jtaRuntimeTransactionResourceRuntimeMBeans": jtaRuntimeTransactionResourceRuntimeMBeans,
       "jtaRuntimeActiveTransactionsTotalCount": jtaRuntimeActiveTransactionsTotalCount,
       "jtaRuntimeTransactionAbandonedTotalCount": jtaRuntimeTransactionAbandonedTotalCount,
       "jtaRecoveryRuntimeTable": jtaRecoveryRuntimeTable,
       "jtaRecoveryRuntimeEntry": jtaRecoveryRuntimeEntry,
       "jtaRecoveryRuntimeIndex": jtaRecoveryRuntimeIndex,
       "jtaRecoveryRuntimeObjectName": jtaRecoveryRuntimeObjectName,
       "jtaRecoveryRuntimeType": jtaRecoveryRuntimeType,
       "jtaRecoveryRuntimeName": jtaRecoveryRuntimeName,
       "jtaRecoveryRuntimeParent": jtaRecoveryRuntimeParent,
       "jtaRecoveryRuntimeInitialRecoveredTransactionTotalCount": jtaRecoveryRuntimeInitialRecoveredTransactionTotalCount,
       "jtaRecoveryRuntimeRecoveredTransactionCompletionPercent": jtaRecoveryRuntimeRecoveredTransactionCompletionPercent,
       "jtaRecoveryRuntimeActive": jtaRecoveryRuntimeActive,
       "libraryRuntimeTable": libraryRuntimeTable,
       "libraryRuntimeEntry": libraryRuntimeEntry,
       "libraryRuntimeIndex": libraryRuntimeIndex,
       "libraryRuntimeObjectName": libraryRuntimeObjectName,
       "libraryRuntimeType": libraryRuntimeType,
       "libraryRuntimeName": libraryRuntimeName,
       "libraryRuntimeParent": libraryRuntimeParent,
       "libraryRuntimeLibraryName": libraryRuntimeLibraryName,
       "libraryRuntimeSpecificationVersion": libraryRuntimeSpecificationVersion,
       "libraryRuntimeImplementationVersion": libraryRuntimeImplementationVersion,
       "libraryRuntimeReferenced": libraryRuntimeReferenced,
       "libraryRuntimeLibraryIdentifier": libraryRuntimeLibraryIdentifier,
       "persistentStoreRuntimeTable": persistentStoreRuntimeTable,
       "persistentStoreRuntimeEntry": persistentStoreRuntimeEntry,
       "persistentStoreRuntimeIndex": persistentStoreRuntimeIndex,
       "persistentStoreRuntimeObjectName": persistentStoreRuntimeObjectName,
       "persistentStoreRuntimeType": persistentStoreRuntimeType,
       "persistentStoreRuntimeName": persistentStoreRuntimeName,
       "persistentStoreRuntimeParent": persistentStoreRuntimeParent,
       "persistentStoreRuntimeCreateCount": persistentStoreRuntimeCreateCount,
       "persistentStoreRuntimeReadCount": persistentStoreRuntimeReadCount,
       "persistentStoreRuntimeUpdateCount": persistentStoreRuntimeUpdateCount,
       "persistentStoreRuntimeDeleteCount": persistentStoreRuntimeDeleteCount,
       "persistentStoreRuntimeObjectCount": persistentStoreRuntimeObjectCount,
       "persistentStoreRuntimePhysicalWriteCount": persistentStoreRuntimePhysicalWriteCount,
       "persistentStoreConnectionRuntimeTable": persistentStoreConnectionRuntimeTable,
       "persistentStoreConnectionRuntimeEntry": persistentStoreConnectionRuntimeEntry,
       "persistentStoreConnectionRuntimeIndex": persistentStoreConnectionRuntimeIndex,
       "persistentStoreConnectionRuntimeObjectName": persistentStoreConnectionRuntimeObjectName,
       "persistentStoreConnectionRuntimeType": persistentStoreConnectionRuntimeType,
       "persistentStoreConnectionRuntimeName": persistentStoreConnectionRuntimeName,
       "persistentStoreConnectionRuntimeParent": persistentStoreConnectionRuntimeParent,
       "persistentStoreConnectionRuntimeCreateCount": persistentStoreConnectionRuntimeCreateCount,
       "persistentStoreConnectionRuntimeReadCount": persistentStoreConnectionRuntimeReadCount,
       "persistentStoreConnectionRuntimeUpdateCount": persistentStoreConnectionRuntimeUpdateCount,
       "persistentStoreConnectionRuntimeDeleteCount": persistentStoreConnectionRuntimeDeleteCount,
       "persistentStoreConnectionRuntimeObjectCount": persistentStoreConnectionRuntimeObjectCount,
       "jvmRuntimeTable": jvmRuntimeTable,
       "jvmRuntimeEntry": jvmRuntimeEntry,
       "jvmRuntimeIndex": jvmRuntimeIndex,
       "jvmRuntimeObjectName": jvmRuntimeObjectName,
       "jvmRuntimeType": jvmRuntimeType,
       "jvmRuntimeName": jvmRuntimeName,
       "jvmRuntimeParent": jvmRuntimeParent,
       "jvmRuntimeHeapFreeCurrent": jvmRuntimeHeapFreeCurrent,
       "jvmRuntimeHeapSizeCurrent": jvmRuntimeHeapSizeCurrent,
       "jvmRuntimeJavaVersion": jvmRuntimeJavaVersion,
       "jvmRuntimeJavaVendor": jvmRuntimeJavaVendor,
       "jvmRuntimeOSName": jvmRuntimeOSName,
       "jvmRuntimeOSVersion": jvmRuntimeOSVersion,
       "logBroadcasterRuntimeTable": logBroadcasterRuntimeTable,
       "logBroadcasterRuntimeEntry": logBroadcasterRuntimeEntry,
       "logBroadcasterRuntimeIndex": logBroadcasterRuntimeIndex,
       "logBroadcasterRuntimeObjectName": logBroadcasterRuntimeObjectName,
       "logBroadcasterRuntimeType": logBroadcasterRuntimeType,
       "logBroadcasterRuntimeName": logBroadcasterRuntimeName,
       "logBroadcasterRuntimeParent": logBroadcasterRuntimeParent,
       "logBroadcasterRuntimeMessagesLogged": logBroadcasterRuntimeMessagesLogged,
       "messageDrivenEJBRuntimeTable": messageDrivenEJBRuntimeTable,
       "messageDrivenEJBRuntimeEntry": messageDrivenEJBRuntimeEntry,
       "messageDrivenEJBRuntimeIndex": messageDrivenEJBRuntimeIndex,
       "messageDrivenEJBRuntimeObjectName": messageDrivenEJBRuntimeObjectName,
       "messageDrivenEJBRuntimeType": messageDrivenEJBRuntimeType,
       "messageDrivenEJBRuntimeName": messageDrivenEJBRuntimeName,
       "messageDrivenEJBRuntimeParent": messageDrivenEJBRuntimeParent,
       "messageDrivenEJBRuntimeJMSConnectionAlive": messageDrivenEJBRuntimeJMSConnectionAlive,
       "messageDrivenEJBRuntimeLastExceptionAsString": messageDrivenEJBRuntimeLastExceptionAsString,
       "messageDrivenEJBRuntimeDestination": messageDrivenEJBRuntimeDestination,
       "messageDrivenEJBRuntimeMDBStatus": messageDrivenEJBRuntimeMDBStatus,
       "messageDrivenEJBRuntimeEJBName": messageDrivenEJBRuntimeEJBName,
       "messageDrivenEJBRuntimeConnectionStatus": messageDrivenEJBRuntimeConnectionStatus,
       "messageDrivenEJBRuntimeSuspendCount": messageDrivenEJBRuntimeSuspendCount,
       "messageDrivenEJBRuntimeProcessedMessageCount": messageDrivenEJBRuntimeProcessedMessageCount,
       "messageDrivenEJBRuntimeJmsClientID": messageDrivenEJBRuntimeJmsClientID,
       "messagingBridgeRuntimeTable": messagingBridgeRuntimeTable,
       "messagingBridgeRuntimeEntry": messagingBridgeRuntimeEntry,
       "messagingBridgeRuntimeIndex": messagingBridgeRuntimeIndex,
       "messagingBridgeRuntimeObjectName": messagingBridgeRuntimeObjectName,
       "messagingBridgeRuntimeType": messagingBridgeRuntimeType,
       "messagingBridgeRuntimeName": messagingBridgeRuntimeName,
       "messagingBridgeRuntimeParent": messagingBridgeRuntimeParent,
       "messagingBridgeRuntimeState": messagingBridgeRuntimeState,
       "messagingBridgeRuntimeDescription": messagingBridgeRuntimeDescription,
       "nonXAResourceRuntimeTable": nonXAResourceRuntimeTable,
       "nonXAResourceRuntimeEntry": nonXAResourceRuntimeEntry,
       "nonXAResourceRuntimeIndex": nonXAResourceRuntimeIndex,
       "nonXAResourceRuntimeObjectName": nonXAResourceRuntimeObjectName,
       "nonXAResourceRuntimeType": nonXAResourceRuntimeType,
       "nonXAResourceRuntimeName": nonXAResourceRuntimeName,
       "nonXAResourceRuntimeParent": nonXAResourceRuntimeParent,
       "nonXAResourceRuntimeTransactionTotalCount": nonXAResourceRuntimeTransactionTotalCount,
       "nonXAResourceRuntimeTransactionCommittedTotalCount": nonXAResourceRuntimeTransactionCommittedTotalCount,
       "nonXAResourceRuntimeTransactionRolledBackTotalCount": nonXAResourceRuntimeTransactionRolledBackTotalCount,
       "nonXAResourceRuntimeTransactionHeuristicsTotalCount": nonXAResourceRuntimeTransactionHeuristicsTotalCount,
       "nonXAResourceRuntimeNonXAResourceName": nonXAResourceRuntimeNonXAResourceName,
       "serverRuntimeTable": serverRuntimeTable,
       "serverRuntimeEntry": serverRuntimeEntry,
       "serverRuntimeIndex": serverRuntimeIndex,
       "serverRuntimeObjectName": serverRuntimeObjectName,
       "serverRuntimeType": serverRuntimeType,
       "serverRuntimeName": serverRuntimeName,
       "serverRuntimeParent": serverRuntimeParent,
       "serverRuntimeActivationTime": serverRuntimeActivationTime,
       "serverRuntimeListenAddress": serverRuntimeListenAddress,
       "serverRuntimeListenPort": serverRuntimeListenPort,
       "serverRuntimeSSLListenAddress": serverRuntimeSSLListenAddress,
       "serverRuntimeJVMID": serverRuntimeJVMID,
       "serverRuntimeOpenSocketsCurrentCount": serverRuntimeOpenSocketsCurrentCount,
       "serverRuntimeRestartsTotalCount": serverRuntimeRestartsTotalCount,
       "serverRuntimeState": serverRuntimeState,
       "serverRuntimeWeblogicVersion": serverRuntimeWeblogicVersion,
       "serverRuntimeAdminServerHost": serverRuntimeAdminServerHost,
       "serverRuntimeAdminServerListenPort": serverRuntimeAdminServerListenPort,
       "serverRuntimeClusterRuntime": serverRuntimeClusterRuntime,
       "serverRuntimeAdministrationPort": serverRuntimeAdministrationPort,
       "serverRuntimeSocketsOpenedTotalCount": serverRuntimeSocketsOpenedTotalCount,
       "serverRuntimeSSLListenPort": serverRuntimeSSLListenPort,
       "serverRuntimeAdministrationPortEnabled": serverRuntimeAdministrationPortEnabled,
       "serverRuntimeAdminServer": serverRuntimeAdminServer,
       "serverRuntimeAdminServerListenPortSecure": serverRuntimeAdminServerListenPortSecure,
       "serverRuntimeListenPortEnabled": serverRuntimeListenPortEnabled,
       "serverRuntimeSSLListenPortEnabled": serverRuntimeSSLListenPortEnabled,
       "serverRuntimeRestartRequired": serverRuntimeRestartRequired,
       "serverRuntimeServerClasspath": serverRuntimeServerClasspath,
       "serverRuntimeCurrentMachine": serverRuntimeCurrentMachine,
       "serverRuntimeAdministrationURL": serverRuntimeAdministrationURL,
       "serverRuntimeDefaultURL": serverRuntimeDefaultURL,
       "serverRuntimeStateVal": serverRuntimeStateVal,
       "serverRuntimeCurrentDirectory": serverRuntimeCurrentDirectory,
       "serverLifeCycleRuntimeTable": serverLifeCycleRuntimeTable,
       "serverLifeCycleRuntimeEntry": serverLifeCycleRuntimeEntry,
       "serverLifeCycleRuntimeIndex": serverLifeCycleRuntimeIndex,
       "serverLifeCycleRuntimeObjectName": serverLifeCycleRuntimeObjectName,
       "serverLifeCycleRuntimeType": serverLifeCycleRuntimeType,
       "serverLifeCycleRuntimeName": serverLifeCycleRuntimeName,
       "serverLifeCycleRuntimeParent": serverLifeCycleRuntimeParent,
       "serverLifeCycleRuntimeState": serverLifeCycleRuntimeState,
       "serverLifeCycleRuntimeStateVal": serverLifeCycleRuntimeStateVal,
       "serverLifeCycleRuntimeNodeManagerRestartCount": serverLifeCycleRuntimeNodeManagerRestartCount,
       "manReplicationRuntimeTable": manReplicationRuntimeTable,
       "manReplicationRuntimeEntry": manReplicationRuntimeEntry,
       "manReplicationRuntimeIndex": manReplicationRuntimeIndex,
       "manReplicationRuntimeObjectName": manReplicationRuntimeObjectName,
       "manReplicationRuntimeType": manReplicationRuntimeType,
       "manReplicationRuntimeName": manReplicationRuntimeName,
       "manReplicationRuntimeParent": manReplicationRuntimeParent,
       "manReplicationRuntimeSecondaryServerName": manReplicationRuntimeSecondaryServerName,
       "manReplicationRuntimeSecondaryServerDetails": manReplicationRuntimeSecondaryServerDetails,
       "manReplicationRuntimePrimaryCount": manReplicationRuntimePrimaryCount,
       "manReplicationRuntimeSecondaryCount": manReplicationRuntimeSecondaryCount,
       "manReplicationRuntimeRemoteClusterReachable": manReplicationRuntimeRemoteClusterReachable,
       "maxThreadsConstraintRuntimeTable": maxThreadsConstraintRuntimeTable,
       "maxThreadsConstraintRuntimeEntry": maxThreadsConstraintRuntimeEntry,
       "maxThreadsConstraintRuntimeIndex": maxThreadsConstraintRuntimeIndex,
       "maxThreadsConstraintRuntimeObjectName": maxThreadsConstraintRuntimeObjectName,
       "maxThreadsConstraintRuntimeType": maxThreadsConstraintRuntimeType,
       "maxThreadsConstraintRuntimeName": maxThreadsConstraintRuntimeName,
       "maxThreadsConstraintRuntimeParent": maxThreadsConstraintRuntimeParent,
       "maxThreadsConstraintRuntimeExecutingRequests": maxThreadsConstraintRuntimeExecutingRequests,
       "maxThreadsConstraintRuntimeDeferredRequests": maxThreadsConstraintRuntimeDeferredRequests,
       "minThreadsConstraintRuntimeTable": minThreadsConstraintRuntimeTable,
       "minThreadsConstraintRuntimeEntry": minThreadsConstraintRuntimeEntry,
       "minThreadsConstraintRuntimeIndex": minThreadsConstraintRuntimeIndex,
       "minThreadsConstraintRuntimeObjectName": minThreadsConstraintRuntimeObjectName,
       "minThreadsConstraintRuntimeType": minThreadsConstraintRuntimeType,
       "minThreadsConstraintRuntimeName": minThreadsConstraintRuntimeName,
       "minThreadsConstraintRuntimeParent": minThreadsConstraintRuntimeParent,
       "minThreadsConstraintRuntimeCompletedRequests": minThreadsConstraintRuntimeCompletedRequests,
       "minThreadsConstraintRuntimePendingRequests": minThreadsConstraintRuntimePendingRequests,
       "minThreadsConstraintRuntimeExecutingRequests": minThreadsConstraintRuntimeExecutingRequests,
       "minThreadsConstraintRuntimeOutOfOrderExecutionCount": minThreadsConstraintRuntimeOutOfOrderExecutionCount,
       "minThreadsConstraintRuntimeMustRunCount": minThreadsConstraintRuntimeMustRunCount,
       "minThreadsConstraintRuntimeMaxWaitTime": minThreadsConstraintRuntimeMaxWaitTime,
       "minThreadsConstraintRuntimeCurrentWaitTime": minThreadsConstraintRuntimeCurrentWaitTime,
       "requestClassRuntimeTable": requestClassRuntimeTable,
       "requestClassRuntimeEntry": requestClassRuntimeEntry,
       "requestClassRuntimeIndex": requestClassRuntimeIndex,
       "requestClassRuntimeObjectName": requestClassRuntimeObjectName,
       "requestClassRuntimeType": requestClassRuntimeType,
       "requestClassRuntimeName": requestClassRuntimeName,
       "requestClassRuntimeParent": requestClassRuntimeParent,
       "requestClassRuntimeCompletedCount": requestClassRuntimeCompletedCount,
       "requestClassRuntimeTotalThreadUse": requestClassRuntimeTotalThreadUse,
       "requestClassRuntimePendingRequestCount": requestClassRuntimePendingRequestCount,
       "requestClassRuntimeVirtualTimeIncrement": requestClassRuntimeVirtualTimeIncrement,
       "requestClassRuntimeRequestClassType": requestClassRuntimeRequestClassType,
       "requestClassRuntimeDeltaRepeat": requestClassRuntimeDeltaRepeat,
       "requestClassRuntimeDeltaFirst": requestClassRuntimeDeltaFirst,
       "requestClassRuntimeThreadUseSquares": requestClassRuntimeThreadUseSquares,
       "requestClassRuntimeMyLast": requestClassRuntimeMyLast,
       "requestClassRuntimeInterval": requestClassRuntimeInterval,
       "serverChannelRuntimeTable": serverChannelRuntimeTable,
       "serverChannelRuntimeEntry": serverChannelRuntimeEntry,
       "serverChannelRuntimeIndex": serverChannelRuntimeIndex,
       "serverChannelRuntimeObjectName": serverChannelRuntimeObjectName,
       "serverChannelRuntimeType": serverChannelRuntimeType,
       "serverChannelRuntimeName": serverChannelRuntimeName,
       "serverChannelRuntimeParent": serverChannelRuntimeParent,
       "serverChannelRuntimeBytesReceivedCount": serverChannelRuntimeBytesReceivedCount,
       "serverChannelRuntimeBytesSentCount": serverChannelRuntimeBytesSentCount,
       "serverChannelRuntimeChannelName": serverChannelRuntimeChannelName,
       "serverChannelRuntimeConnectionsCount": serverChannelRuntimeConnectionsCount,
       "serverChannelRuntimeAcceptCount": serverChannelRuntimeAcceptCount,
       "serverChannelRuntimeMessagesReceivedCount": serverChannelRuntimeMessagesReceivedCount,
       "serverChannelRuntimeMessagesSentCount": serverChannelRuntimeMessagesSentCount,
       "serverChannelRuntimePublicURL": serverChannelRuntimePublicURL,
       "threadPoolRuntimeTable": threadPoolRuntimeTable,
       "threadPoolRuntimeEntry": threadPoolRuntimeEntry,
       "threadPoolRuntimeIndex": threadPoolRuntimeIndex,
       "threadPoolRuntimeObjectName": threadPoolRuntimeObjectName,
       "threadPoolRuntimeType": threadPoolRuntimeType,
       "threadPoolRuntimeName": threadPoolRuntimeName,
       "threadPoolRuntimeParent": threadPoolRuntimeParent,
       "threadPoolRuntimeExecuteThreadTotalCount": threadPoolRuntimeExecuteThreadTotalCount,
       "threadPoolRuntimeExecuteThreadIdleCount": threadPoolRuntimeExecuteThreadIdleCount,
       "threadPoolRuntimeQueueLength": threadPoolRuntimeQueueLength,
       "threadPoolRuntimePendingUserRequestCount": threadPoolRuntimePendingUserRequestCount,
       "threadPoolRuntimeSharedCapacityForWorkManagers": threadPoolRuntimeSharedCapacityForWorkManagers,
       "threadPoolRuntimeCompletedRequestCount": threadPoolRuntimeCompletedRequestCount,
       "threadPoolRuntimeHoggingThreadCount": threadPoolRuntimeHoggingThreadCount,
       "threadPoolRuntimeStandbyThreadCount": threadPoolRuntimeStandbyThreadCount,
       "threadPoolRuntimeThroughput": threadPoolRuntimeThroughput,
       "threadPoolRuntimeMinThreadsConstraintsPending": threadPoolRuntimeMinThreadsConstraintsPending,
       "threadPoolRuntimeMinThreadsConstraintsCompleted": threadPoolRuntimeMinThreadsConstraintsCompleted,
       "threadPoolRuntimeSuspended": threadPoolRuntimeSuspended,
       "workManagerRuntimeTable": workManagerRuntimeTable,
       "workManagerRuntimeEntry": workManagerRuntimeEntry,
       "workManagerRuntimeIndex": workManagerRuntimeIndex,
       "workManagerRuntimeObjectName": workManagerRuntimeObjectName,
       "workManagerRuntimeType": workManagerRuntimeType,
       "workManagerRuntimeName": workManagerRuntimeName,
       "workManagerRuntimeParent": workManagerRuntimeParent,
       "workManagerRuntimeApplicationName": workManagerRuntimeApplicationName,
       "workManagerRuntimeModuleName": workManagerRuntimeModuleName,
       "workManagerRuntimePendingRequests": workManagerRuntimePendingRequests,
       "workManagerRuntimeCompletedRequests": workManagerRuntimeCompletedRequests,
       "workManagerRuntimeStuckThreadCount": workManagerRuntimeStuckThreadCount,
       "serverSecurityRuntimeTable": serverSecurityRuntimeTable,
       "serverSecurityRuntimeEntry": serverSecurityRuntimeEntry,
       "serverSecurityRuntimeIndex": serverSecurityRuntimeIndex,
       "serverSecurityRuntimeObjectName": serverSecurityRuntimeObjectName,
       "serverSecurityRuntimeType": serverSecurityRuntimeType,
       "serverSecurityRuntimeName": serverSecurityRuntimeName,
       "serverSecurityRuntimeParent": serverSecurityRuntimeParent,
       "serverSecurityRuntimeJACCEnabled": serverSecurityRuntimeJACCEnabled,
       "userLockoutManagerRuntimeTable": userLockoutManagerRuntimeTable,
       "userLockoutManagerRuntimeEntry": userLockoutManagerRuntimeEntry,
       "userLockoutManagerRuntimeIndex": userLockoutManagerRuntimeIndex,
       "userLockoutManagerRuntimeObjectName": userLockoutManagerRuntimeObjectName,
       "userLockoutManagerRuntimeType": userLockoutManagerRuntimeType,
       "userLockoutManagerRuntimeName": userLockoutManagerRuntimeName,
       "userLockoutManagerRuntimeParent": userLockoutManagerRuntimeParent,
       "userLockoutManagerRuntimeUserLockoutTotalCount": userLockoutManagerRuntimeUserLockoutTotalCount,
       "userLockoutManagerRuntimeInvalidLoginAttemptsTotalCount": userLockoutManagerRuntimeInvalidLoginAttemptsTotalCount,
       "userLockoutManagerRuntimeLoginAttemptsWhileLockedTotalCount": userLockoutManagerRuntimeLoginAttemptsWhileLockedTotalCount,
       "userLockoutManagerRuntimeInvalidLoginUsersHighCount": userLockoutManagerRuntimeInvalidLoginUsersHighCount,
       "userLockoutManagerRuntimeUnlockedUsersTotalCount": userLockoutManagerRuntimeUnlockedUsersTotalCount,
       "userLockoutManagerRuntimeLockedUsersCurrentCount": userLockoutManagerRuntimeLockedUsersCurrentCount,
       "servletRuntimeTable": servletRuntimeTable,
       "servletRuntimeEntry": servletRuntimeEntry,
       "servletRuntimeIndex": servletRuntimeIndex,
       "servletRuntimeObjectName": servletRuntimeObjectName,
       "servletRuntimeType": servletRuntimeType,
       "servletRuntimeName": servletRuntimeName,
       "servletRuntimeParent": servletRuntimeParent,
       "servletRuntimeServletName": servletRuntimeServletName,
       "servletRuntimeReloadTotalCount": servletRuntimeReloadTotalCount,
       "servletRuntimeInvocationTotalCount": servletRuntimeInvocationTotalCount,
       "servletRuntimePoolMaxCapacity": servletRuntimePoolMaxCapacity,
       "servletRuntimeExecutionTimeTotal": servletRuntimeExecutionTimeTotal,
       "servletRuntimeExecutionTimeHigh": servletRuntimeExecutionTimeHigh,
       "servletRuntimeExecutionTimeLow": servletRuntimeExecutionTimeLow,
       "servletRuntimeExecutionTimeAverage": servletRuntimeExecutionTimeAverage,
       "servletRuntimeServletPath": servletRuntimeServletPath,
       "servletRuntimeContextPath": servletRuntimeContextPath,
       "servletRuntimeURL": servletRuntimeURL,
       "servletRuntimeServletClassName": servletRuntimeServletClassName,
       "servletSessionRuntimeTable": servletSessionRuntimeTable,
       "servletSessionRuntimeEntry": servletSessionRuntimeEntry,
       "servletSessionRuntimeIndex": servletSessionRuntimeIndex,
       "servletSessionRuntimeObjectName": servletSessionRuntimeObjectName,
       "servletSessionRuntimeType": servletSessionRuntimeType,
       "servletSessionRuntimeName": servletSessionRuntimeName,
       "servletSessionRuntimeParent": servletSessionRuntimeParent,
       "servletSessionRuntimeTimeLastAccessed": servletSessionRuntimeTimeLastAccessed,
       "servletSessionRuntimeMainAttribute": servletSessionRuntimeMainAttribute,
       "taskRuntimeTable": taskRuntimeTable,
       "taskRuntimeEntry": taskRuntimeEntry,
       "taskRuntimeIndex": taskRuntimeIndex,
       "taskRuntimeObjectName": taskRuntimeObjectName,
       "taskRuntimeType": taskRuntimeType,
       "taskRuntimeName": taskRuntimeName,
       "taskRuntimeParent": taskRuntimeParent,
       "taskRuntimeBeginTime": taskRuntimeBeginTime,
       "taskRuntimeDescription": taskRuntimeDescription,
       "taskRuntimeEndTime": taskRuntimeEndTime,
       "taskRuntimeStatus": taskRuntimeStatus,
       "taskRuntimeRunning": taskRuntimeRunning,
       "taskRuntimeSystemTask": taskRuntimeSystemTask,
       "transactionNameRuntimeTable": transactionNameRuntimeTable,
       "transactionNameRuntimeEntry": transactionNameRuntimeEntry,
       "transactionNameRuntimeIndex": transactionNameRuntimeIndex,
       "transactionNameRuntimeObjectName": transactionNameRuntimeObjectName,
       "transactionNameRuntimeType": transactionNameRuntimeType,
       "transactionNameRuntimeName": transactionNameRuntimeName,
       "transactionNameRuntimeParent": transactionNameRuntimeParent,
       "transactionNameRuntimeTransactionTotalCount": transactionNameRuntimeTransactionTotalCount,
       "transactionNameRuntimeTransactionCommittedTotalCount": transactionNameRuntimeTransactionCommittedTotalCount,
       "transactionNameRuntimeTransactionRolledBackTotalCount": transactionNameRuntimeTransactionRolledBackTotalCount,
       "transactionNameRuntimeTransactionHeuristicsTotalCount": transactionNameRuntimeTransactionHeuristicsTotalCount,
       "transactionNameRuntimeTransactionRolledBackResourceTotalCount": transactionNameRuntimeTransactionRolledBackResourceTotalCount,
       "transactionNameRuntimeTransactionRolledBackAppTotalCount": transactionNameRuntimeTransactionRolledBackAppTotalCount,
       "transactionNameRuntimeTransactionRolledBackSystemTotalCount": transactionNameRuntimeTransactionRolledBackSystemTotalCount,
       "transactionNameRuntimeSecondsActiveTotalCount": transactionNameRuntimeSecondsActiveTotalCount,
       "transactionNameRuntimeTransactionRolledBackTimeoutTotalCount": transactionNameRuntimeTransactionRolledBackTimeoutTotalCount,
       "transactionNameRuntimeTransactionName": transactionNameRuntimeTransactionName,
       "transactionNameRuntimeTransactionAbandonedTotalCount": transactionNameRuntimeTransactionAbandonedTotalCount,
       "transactionResourceRuntimeTable": transactionResourceRuntimeTable,
       "transactionResourceRuntimeEntry": transactionResourceRuntimeEntry,
       "transactionResourceRuntimeIndex": transactionResourceRuntimeIndex,
       "transactionResourceRuntimeObjectName": transactionResourceRuntimeObjectName,
       "transactionResourceRuntimeType": transactionResourceRuntimeType,
       "transactionResourceRuntimeName": transactionResourceRuntimeName,
       "transactionResourceRuntimeParent": transactionResourceRuntimeParent,
       "transactionResourceRuntimeTransactionTotalCount": transactionResourceRuntimeTransactionTotalCount,
       "transactionResourceRuntimeTransactionCommittedTotalCount": transactionResourceRuntimeTransactionCommittedTotalCount,
       "transactionResourceRuntimeTransactionRolledBackTotalCount": transactionResourceRuntimeTransactionRolledBackTotalCount,
       "transactionResourceRuntimeTransactionHeuristicsTotalCount": transactionResourceRuntimeTransactionHeuristicsTotalCount,
       "transactionResourceRuntimeResourceName": transactionResourceRuntimeResourceName,
       "transactionResourceRuntimeTransactionHeuristicCommitTotalCount": transactionResourceRuntimeTransactionHeuristicCommitTotalCount,
       "transactionResourceRuntimeTransactionHeuristicRollbackTotalCount": transactionResourceRuntimeTransactionHeuristicRollbackTotalCount,
       "transactionResourceRuntimeTransactionHeuristicMixedTotalCount": transactionResourceRuntimeTransactionHeuristicMixedTotalCount,
       "transactionResourceRuntimeTransactionHeuristicHazardTotalCount": transactionResourceRuntimeTransactionHeuristicHazardTotalCount,
       "webAppComponentRuntimeTable": webAppComponentRuntimeTable,
       "webAppComponentRuntimeEntry": webAppComponentRuntimeEntry,
       "webAppComponentRuntimeIndex": webAppComponentRuntimeIndex,
       "webAppComponentRuntimeObjectName": webAppComponentRuntimeObjectName,
       "webAppComponentRuntimeType": webAppComponentRuntimeType,
       "webAppComponentRuntimeName": webAppComponentRuntimeName,
       "webAppComponentRuntimeParent": webAppComponentRuntimeParent,
       "webAppComponentRuntimeComponentName": webAppComponentRuntimeComponentName,
       "webAppComponentRuntimeStatus": webAppComponentRuntimeStatus,
       "webAppComponentRuntimeSourceInfo": webAppComponentRuntimeSourceInfo,
       "webAppComponentRuntimeServletSessions": webAppComponentRuntimeServletSessions,
       "webAppComponentRuntimeServlets": webAppComponentRuntimeServlets,
       "webAppComponentRuntimeOpenSessionsCurrentCount": webAppComponentRuntimeOpenSessionsCurrentCount,
       "webAppComponentRuntimeOpenSessionsHighCount": webAppComponentRuntimeOpenSessionsHighCount,
       "webAppComponentRuntimeSessionsOpenedTotalCount": webAppComponentRuntimeSessionsOpenedTotalCount,
       "webAppComponentRuntimeSingleThreadedServletPoolSize": webAppComponentRuntimeSingleThreadedServletPoolSize,
       "webAppComponentRuntimeJSPVerbose": webAppComponentRuntimeJSPVerbose,
       "webAppComponentRuntimeIndexDirectoryEnabled": webAppComponentRuntimeIndexDirectoryEnabled,
       "webAppComponentRuntimeModuleId": webAppComponentRuntimeModuleId,
       "webAppComponentRuntimeJSPDebug": webAppComponentRuntimeJSPDebug,
       "webAppComponentRuntimeSessionCookieName": webAppComponentRuntimeSessionCookieName,
       "webAppComponentRuntimeSessionCookieDomain": webAppComponentRuntimeSessionCookieDomain,
       "webAppComponentRuntimeFilterDispatchedRequestsEnabled": webAppComponentRuntimeFilterDispatchedRequestsEnabled,
       "webAppComponentRuntimeLogFilename": webAppComponentRuntimeLogFilename,
       "webAppComponentRuntimeSessionCookiePath": webAppComponentRuntimeSessionCookiePath,
       "webAppComponentRuntimeJSPKeepGenerated": webAppComponentRuntimeJSPKeepGenerated,
       "webAppComponentRuntimeSessionCookieComment": webAppComponentRuntimeSessionCookieComment,
       "webAppComponentRuntimeJSPCompileCommand": webAppComponentRuntimeJSPCompileCommand,
       "webAppComponentRuntimeJSPPageCheckSecs": webAppComponentRuntimeJSPPageCheckSecs,
       "webAppComponentRuntimeContextRoot": webAppComponentRuntimeContextRoot,
       "webAppComponentRuntimeModuleURI": webAppComponentRuntimeModuleURI,
       "webAppComponentRuntimeSessionInvalidationIntervalSecs": webAppComponentRuntimeSessionInvalidationIntervalSecs,
       "webAppComponentRuntimeServletReloadCheckSecs": webAppComponentRuntimeServletReloadCheckSecs,
       "webAppComponentRuntimeSessionCookieMaxAgeSecs": webAppComponentRuntimeSessionCookieMaxAgeSecs,
       "webAppComponentRuntimeSessionTimeoutSecs": webAppComponentRuntimeSessionTimeoutSecs,
       "webAppComponentRuntimeSessionIDLength": webAppComponentRuntimeSessionIDLength,
       "webAppComponentRuntimeDeploymentState": webAppComponentRuntimeDeploymentState,
       "webAppComponentRuntimeSessionMonitoringEnabled": webAppComponentRuntimeSessionMonitoringEnabled,
       "webServerRuntimeTable": webServerRuntimeTable,
       "webServerRuntimeEntry": webServerRuntimeEntry,
       "webServerRuntimeIndex": webServerRuntimeIndex,
       "webServerRuntimeObjectName": webServerRuntimeObjectName,
       "webServerRuntimeType": webServerRuntimeType,
       "webServerRuntimeName": webServerRuntimeName,
       "webServerRuntimeParent": webServerRuntimeParent,
       "webServerRuntimeWebServerName": webServerRuntimeWebServerName,
       "webServerRuntimeDefaultWebServer": webServerRuntimeDefaultWebServer,
       "wlecConnectionPoolRuntimeTable": wlecConnectionPoolRuntimeTable,
       "wlecConnectionPoolRuntimeEntry": wlecConnectionPoolRuntimeEntry,
       "wlecConnectionPoolRuntimeIndex": wlecConnectionPoolRuntimeIndex,
       "wlecConnectionPoolRuntimeObjectName": wlecConnectionPoolRuntimeObjectName,
       "wlecConnectionPoolRuntimeType": wlecConnectionPoolRuntimeType,
       "wlecConnectionPoolRuntimeName": wlecConnectionPoolRuntimeName,
       "wlecConnectionPoolRuntimeParent": wlecConnectionPoolRuntimeParent,
       "wlecConnectionPoolRuntimePoolName": wlecConnectionPoolRuntimePoolName,
       "wlecConnectionPoolRuntimeWLEDomainName": wlecConnectionPoolRuntimeWLEDomainName,
       "wlecConnectionPoolRuntimeMaxCapacity": wlecConnectionPoolRuntimeMaxCapacity,
       "wlecConnectionPoolRuntimePoolState": wlecConnectionPoolRuntimePoolState,
       "wlecConnectionPoolRuntimeSecurityContextPropagation": wlecConnectionPoolRuntimeSecurityContextPropagation,
       "wlecConnectionPoolRuntimeCertificateBasedAuthentication": wlecConnectionPoolRuntimeCertificateBasedAuthentication,
       "wlecConnectionPoolRuntimeConnections": wlecConnectionPoolRuntimeConnections,
       "wlecConnectionRuntimeTable": wlecConnectionRuntimeTable,
       "wlecConnectionRuntimeEntry": wlecConnectionRuntimeEntry,
       "wlecConnectionRuntimeIndex": wlecConnectionRuntimeIndex,
       "wlecConnectionRuntimeObjectName": wlecConnectionRuntimeObjectName,
       "wlecConnectionRuntimeType": wlecConnectionRuntimeType,
       "wlecConnectionRuntimeName": wlecConnectionRuntimeName,
       "wlecConnectionRuntimeParent": wlecConnectionRuntimeParent,
       "wlecConnectionRuntimeAddress": wlecConnectionRuntimeAddress,
       "wlecConnectionRuntimeLastAccessTime": wlecConnectionRuntimeLastAccessTime,
       "wlecConnectionRuntimeAlive": wlecConnectionRuntimeAlive,
       "wlecConnectionRuntimeRequestCount": wlecConnectionRuntimeRequestCount,
       "wlecConnectionRuntimePendingRequestCount": wlecConnectionRuntimePendingRequestCount,
       "wlecConnectionRuntimeErrorCount": wlecConnectionRuntimeErrorCount,
       "wlecConnectionRuntimeInTransaction": wlecConnectionRuntimeInTransaction,
       "wlecConnectionServiceRuntimeTable": wlecConnectionServiceRuntimeTable,
       "wlecConnectionServiceRuntimeEntry": wlecConnectionServiceRuntimeEntry,
       "wlecConnectionServiceRuntimeIndex": wlecConnectionServiceRuntimeIndex,
       "wlecConnectionServiceRuntimeObjectName": wlecConnectionServiceRuntimeObjectName,
       "wlecConnectionServiceRuntimeType": wlecConnectionServiceRuntimeType,
       "wlecConnectionServiceRuntimeName": wlecConnectionServiceRuntimeName,
       "wlecConnectionServiceRuntimeParent": wlecConnectionServiceRuntimeParent,
       "wlecConnectionServiceRuntimeConnectionPoolCount": wlecConnectionServiceRuntimeConnectionPoolCount,
       "connectorConnectionRuntimeTable": connectorConnectionRuntimeTable,
       "connectorConnectionRuntimeEntry": connectorConnectionRuntimeEntry,
       "connectorConnectionRuntimeIndex": connectorConnectionRuntimeIndex,
       "connectorConnectionRuntimeObjectName": connectorConnectionRuntimeObjectName,
       "connectorConnectionRuntimeType": connectorConnectionRuntimeType,
       "connectorConnectionRuntimeName": connectorConnectionRuntimeName,
       "connectorConnectionRuntimeParent": connectorConnectionRuntimeParent,
       "connectorConnectionRuntimeActiveHandlesCurrentCount": connectorConnectionRuntimeActiveHandlesCurrentCount,
       "connectorConnectionRuntimeActiveHandlesHighCount": connectorConnectionRuntimeActiveHandlesHighCount,
       "connectorConnectionRuntimeHandlesCreatedTotalCount": connectorConnectionRuntimeHandlesCreatedTotalCount,
       "connectorConnectionRuntimeCurrentlyInUse": connectorConnectionRuntimeCurrentlyInUse,
       "connectorConnectionRuntimeInTransaction": connectorConnectionRuntimeInTransaction,
       "connectorConnectionRuntimeShared": connectorConnectionRuntimeShared,
       "connectorConnectionRuntimeEISProductVersion": connectorConnectionRuntimeEISProductVersion,
       "connectorConnectionRuntimeDeletable": connectorConnectionRuntimeDeletable,
       "connectorConnectionRuntimeReserveDurationTime": connectorConnectionRuntimeReserveDurationTime,
       "connectorConnectionRuntimeTransactionId": connectorConnectionRuntimeTransactionId,
       "connectorConnectionRuntimeConnectionFactoryClassName": connectorConnectionRuntimeConnectionFactoryClassName,
       "connectorConnectionRuntimeEISProductName": connectorConnectionRuntimeEISProductName,
       "connectorConnectionRuntimeUserName": connectorConnectionRuntimeUserName,
       "connectorConnectionRuntimeReserveTime": connectorConnectionRuntimeReserveTime,
       "connectorConnectionRuntimeCreationDurationTime": connectorConnectionRuntimeCreationDurationTime,
       "connectorConnectionRuntimeManagedConnectionFactoryClassName": connectorConnectionRuntimeManagedConnectionFactoryClassName,
       "connectorConnectionRuntimeMaxConnections": connectorConnectionRuntimeMaxConnections,
       "connectorConnectionPoolRuntimeTable": connectorConnectionPoolRuntimeTable,
       "connectorConnectionPoolRuntimeEntry": connectorConnectionPoolRuntimeEntry,
       "connectorConnectionPoolRuntimeIndex": connectorConnectionPoolRuntimeIndex,
       "connectorConnectionPoolRuntimeObjectName": connectorConnectionPoolRuntimeObjectName,
       "connectorConnectionPoolRuntimeType": connectorConnectionPoolRuntimeType,
       "connectorConnectionPoolRuntimeName": connectorConnectionPoolRuntimeName,
       "connectorConnectionPoolRuntimeParent": connectorConnectionPoolRuntimeParent,
       "connectorConnectionPoolRuntimePoolName": connectorConnectionPoolRuntimePoolName,
       "connectorConnectionPoolRuntimeJNDIName": connectorConnectionPoolRuntimeJNDIName,
       "connectorConnectionPoolRuntimeConnectionFactoryName": connectorConnectionPoolRuntimeConnectionFactoryName,
       "connectorConnectionPoolRuntimeResourceAdapterLinkRefName": connectorConnectionPoolRuntimeResourceAdapterLinkRefName,
       "connectorConnectionPoolRuntimeLogFileName": connectorConnectionPoolRuntimeLogFileName,
       "connectorConnectionPoolRuntimeTransactionSupport": connectorConnectionPoolRuntimeTransactionSupport,
       "connectorConnectionPoolRuntimeConnections": connectorConnectionPoolRuntimeConnections,
       "connectorConnectionPoolRuntimeLoggingEnabled": connectorConnectionPoolRuntimeLoggingEnabled,
       "connectorConnectionPoolRuntimeMaxCapacity": connectorConnectionPoolRuntimeMaxCapacity,
       "connectorConnectionPoolRuntimeInitialCapacity": connectorConnectionPoolRuntimeInitialCapacity,
       "connectorConnectionPoolRuntimeCapacityIncrement": connectorConnectionPoolRuntimeCapacityIncrement,
       "connectorConnectionPoolRuntimeShrinkingEnabled": connectorConnectionPoolRuntimeShrinkingEnabled,
       "connectorConnectionPoolRuntimeShrinkPeriodMinutes": connectorConnectionPoolRuntimeShrinkPeriodMinutes,
       "connectorConnectionPoolRuntimeActiveConnectionsCurrentCount": connectorConnectionPoolRuntimeActiveConnectionsCurrentCount,
       "connectorConnectionPoolRuntimeActiveConnectionsHighCount": connectorConnectionPoolRuntimeActiveConnectionsHighCount,
       "connectorConnectionPoolRuntimeFreeConnectionsCurrentCount": connectorConnectionPoolRuntimeFreeConnectionsCurrentCount,
       "connectorConnectionPoolRuntimeFreeConnectionsHighCount": connectorConnectionPoolRuntimeFreeConnectionsHighCount,
       "connectorConnectionPoolRuntimeAverageActiveUsage": connectorConnectionPoolRuntimeAverageActiveUsage,
       "connectorConnectionPoolRuntimeShrinkCountDownTime": connectorConnectionPoolRuntimeShrinkCountDownTime,
       "connectorConnectionPoolRuntimeRecycledTotal": connectorConnectionPoolRuntimeRecycledTotal,
       "connectorConnectionPoolRuntimeConnectionsCreatedTotalCount": connectorConnectionPoolRuntimeConnectionsCreatedTotalCount,
       "connectorConnectionPoolRuntimeConnectionsMatchedTotalCount": connectorConnectionPoolRuntimeConnectionsMatchedTotalCount,
       "connectorConnectionPoolRuntimeConnectionsDestroyedTotalCount": connectorConnectionPoolRuntimeConnectionsDestroyedTotalCount,
       "connectorConnectionPoolRuntimeConnectionsRejectedTotalCount": connectorConnectionPoolRuntimeConnectionsRejectedTotalCount,
       "connectorConnectionPoolRuntimeConnectionLeakProfileCount": connectorConnectionPoolRuntimeConnectionLeakProfileCount,
       "connectorConnectionPoolRuntimeNumberDetectedIdle": connectorConnectionPoolRuntimeNumberDetectedIdle,
       "connectorConnectionPoolRuntimeNumberDetectedLeaks": connectorConnectionPoolRuntimeNumberDetectedLeaks,
       "connectorConnectionPoolRuntimeFreePoolSizeHighWaterMark": connectorConnectionPoolRuntimeFreePoolSizeHighWaterMark,
       "connectorConnectionPoolRuntimeKey": connectorConnectionPoolRuntimeKey,
       "connectorConnectionPoolRuntimeCurrentCapacity": connectorConnectionPoolRuntimeCurrentCapacity,
       "connectorConnectionPoolRuntimeMCFClassName": connectorConnectionPoolRuntimeMCFClassName,
       "connectorConnectionPoolRuntimeTestable": connectorConnectionPoolRuntimeTestable,
       "connectorConnectionPoolRuntimeNumUnavailableHighCount": connectorConnectionPoolRuntimeNumUnavailableHighCount,
       "connectorConnectionPoolRuntimeConnectionsDestroyedByErrorTotalCount": connectorConnectionPoolRuntimeConnectionsDestroyedByErrorTotalCount,
       "connectorConnectionPoolRuntimeNumWaiters": connectorConnectionPoolRuntimeNumWaiters,
       "connectorConnectionPoolRuntimeConnectorEisType": connectorConnectionPoolRuntimeConnectorEisType,
       "connectorConnectionPoolRuntimeNumWaitersCurrentCount": connectorConnectionPoolRuntimeNumWaitersCurrentCount,
       "connectorConnectionPoolRuntimeMaxIdleTime": connectorConnectionPoolRuntimeMaxIdleTime,
       "connectorConnectionPoolRuntimeLastShrinkTime": connectorConnectionPoolRuntimeLastShrinkTime,
       "connectorConnectionPoolRuntimeState": connectorConnectionPoolRuntimeState,
       "connectorConnectionPoolRuntimeResourceLink": connectorConnectionPoolRuntimeResourceLink,
       "connectorConnectionPoolRuntimeCloseCount": connectorConnectionPoolRuntimeCloseCount,
       "connectorConnectionPoolRuntimeManagedConnectionFactoryClassName": connectorConnectionPoolRuntimeManagedConnectionFactoryClassName,
       "connectorConnectionPoolRuntimeHighestNumWaiters": connectorConnectionPoolRuntimeHighestNumWaiters,
       "connectorConnectionPoolRuntimePoolSizeHighWaterMark": connectorConnectionPoolRuntimePoolSizeHighWaterMark,
       "connectorConnectionPoolRuntimeConnectionFactoryClassName": connectorConnectionPoolRuntimeConnectionFactoryClassName,
       "connectorConnectionPoolRuntimeEISResourceId": connectorConnectionPoolRuntimeEISResourceId,
       "connectorConnectionPoolRuntimeFreePoolSizeLowWaterMark": connectorConnectionPoolRuntimeFreePoolSizeLowWaterMark,
       "connectorConnectionPoolRuntimePoolSizeLowWaterMark": connectorConnectionPoolRuntimePoolSizeLowWaterMark,
       "connectorConnectionPoolRuntimeConnectionsDestroyedByShrinkingTotalCount": connectorConnectionPoolRuntimeConnectionsDestroyedByShrinkingTotalCount,
       "connectorConnectionPoolRuntimeNumUnavailableCurrentCount": connectorConnectionPoolRuntimeNumUnavailableCurrentCount,
       "connectorConnectionPoolRuntimeProxyOn": connectorConnectionPoolRuntimeProxyOn,
       "connectorServiceRuntimeTable": connectorServiceRuntimeTable,
       "connectorServiceRuntimeEntry": connectorServiceRuntimeEntry,
       "connectorServiceRuntimeIndex": connectorServiceRuntimeIndex,
       "connectorServiceRuntimeObjectName": connectorServiceRuntimeObjectName,
       "connectorServiceRuntimeType": connectorServiceRuntimeType,
       "connectorServiceRuntimeName": connectorServiceRuntimeName,
       "connectorServiceRuntimeParent": connectorServiceRuntimeParent,
       "connectorServiceRuntimeConnectionPoolCurrentCount": connectorServiceRuntimeConnectionPoolCurrentCount,
       "connectorServiceRuntimeConnectionPoolsTotalCount": connectorServiceRuntimeConnectionPoolsTotalCount,
       "connectorServiceRuntimeRACount": connectorServiceRuntimeRACount,
       "connectorServiceRuntimeActiveRACount": connectorServiceRuntimeActiveRACount,
       "connectorComponentRuntimeTable": connectorComponentRuntimeTable,
       "connectorComponentRuntimeEntry": connectorComponentRuntimeEntry,
       "connectorComponentRuntimeIndex": connectorComponentRuntimeIndex,
       "connectorComponentRuntimeObjectName": connectorComponentRuntimeObjectName,
       "connectorComponentRuntimeType": connectorComponentRuntimeType,
       "connectorComponentRuntimeName": connectorComponentRuntimeName,
       "connectorComponentRuntimeParent": connectorComponentRuntimeParent,
       "connectorComponentRuntimeConnectionPoolCount": connectorComponentRuntimeConnectionPoolCount,
       "connectorComponentRuntimeInboundConnectionsCount": connectorComponentRuntimeInboundConnectionsCount,
       "connectorComponentRuntimeEISResourceId": connectorComponentRuntimeEISResourceId,
       "connectorComponentRuntimeVersionId": connectorComponentRuntimeVersionId,
       "connectorComponentRuntimeActiveVersionId": connectorComponentRuntimeActiveVersionId,
       "connectorComponentRuntimeVersioned": connectorComponentRuntimeVersioned,
       "connectorComponentRuntimeActiveVersion": connectorComponentRuntimeActiveVersion,
       "connectorComponentRuntimeJndiName": connectorComponentRuntimeJndiName,
       "connectorComponentRuntimeState": connectorComponentRuntimeState,
       "connectorComponentRuntimeSuspendedState": connectorComponentRuntimeSuspendedState,
       "connectorComponentRuntimeDescription": connectorComponentRuntimeDescription,
       "connectorComponentRuntimeEISType": connectorComponentRuntimeEISType,
       "connectorComponentRuntimeSpecVersion": connectorComponentRuntimeSpecVersion,
       "connectorComponentRuntimeVendorName": connectorComponentRuntimeVendorName,
       "connectorComponentRuntimeVersion": connectorComponentRuntimeVersion,
       "connectorComponentRuntimeComponentName": connectorComponentRuntimeComponentName,
       "connectorComponentRuntimeModuleId": connectorComponentRuntimeModuleId,
       "connectorComponentRuntimeConfiguration": connectorComponentRuntimeConfiguration,
       "connectorComponentRuntimeSchema": connectorComponentRuntimeSchema,
       "connectorComponentRuntimeLinkref": connectorComponentRuntimeLinkref,
       "connectorComponentRuntimeDeploymentState": connectorComponentRuntimeDeploymentState,
       "connectorComponentRuntimeConfigurationVersion": connectorComponentRuntimeConfigurationVersion,
       "connectorInboundRuntimeTable": connectorInboundRuntimeTable,
       "connectorInboundRuntimeEntry": connectorInboundRuntimeEntry,
       "connectorInboundRuntimeIndex": connectorInboundRuntimeIndex,
       "connectorInboundRuntimeObjectName": connectorInboundRuntimeObjectName,
       "connectorInboundRuntimeType": connectorInboundRuntimeType,
       "connectorInboundRuntimeName": connectorInboundRuntimeName,
       "connectorInboundRuntimeParent": connectorInboundRuntimeParent,
       "connectorInboundRuntimeMsgListenerType": connectorInboundRuntimeMsgListenerType,
       "connectorInboundRuntimeActivationSpecClass": connectorInboundRuntimeActivationSpecClass,
       "connectorInboundRuntimeState": connectorInboundRuntimeState,
       "jMSDurableSubscriberRuntimeTable": jMSDurableSubscriberRuntimeTable,
       "jMSDurableSubscriberRuntimeEntry": jMSDurableSubscriberRuntimeEntry,
       "jMSDurableSubscriberRuntimeIndex": jMSDurableSubscriberRuntimeIndex,
       "jMSDurableSubscriberRuntimeObjectName": jMSDurableSubscriberRuntimeObjectName,
       "jMSDurableSubscriberRuntimeType": jMSDurableSubscriberRuntimeType,
       "jMSDurableSubscriberRuntimeName": jMSDurableSubscriberRuntimeName,
       "jMSDurableSubscriberRuntimeParent": jMSDurableSubscriberRuntimeParent,
       "jMSDurableSubscriberRuntimeClientID": jMSDurableSubscriberRuntimeClientID,
       "jMSDurableSubscriberRuntimeSubscriptionName": jMSDurableSubscriberRuntimeSubscriptionName,
       "jMSDurableSubscriberRuntimeSelector": jMSDurableSubscriberRuntimeSelector,
       "jMSDurableSubscriberRuntimeNoLocal": jMSDurableSubscriberRuntimeNoLocal,
       "jMSDurableSubscriberRuntimeActive": jMSDurableSubscriberRuntimeActive,
       "jMSDurableSubscriberRuntimeMessagesPendingCount": jMSDurableSubscriberRuntimeMessagesPendingCount,
       "jMSDurableSubscriberRuntimeMessagesCurrentCount": jMSDurableSubscriberRuntimeMessagesCurrentCount,
       "jMSDurableSubscriberRuntimeBytesPendingCount": jMSDurableSubscriberRuntimeBytesPendingCount,
       "jMSDurableSubscriberRuntimeBytesCurrentCount": jMSDurableSubscriberRuntimeBytesCurrentCount,
       "jMSDurableSubscriberRuntimeMessagesReceivedCount": jMSDurableSubscriberRuntimeMessagesReceivedCount,
       "jMSDurableSubscriberRuntimeMessagesHighCount": jMSDurableSubscriberRuntimeMessagesHighCount,
       "safAgentRuntimeTable": safAgentRuntimeTable,
       "safAgentRuntimeEntry": safAgentRuntimeEntry,
       "safAgentRuntimeIndex": safAgentRuntimeIndex,
       "safAgentRuntimeObjectName": safAgentRuntimeObjectName,
       "safAgentRuntimeType": safAgentRuntimeType,
       "safAgentRuntimeName": safAgentRuntimeName,
       "safAgentRuntimeParent": safAgentRuntimeParent,
       "safAgentRuntimeRemoteEndpointsCurrentCount": safAgentRuntimeRemoteEndpointsCurrentCount,
       "safAgentRuntimeRemoteEndpointsHighCount": safAgentRuntimeRemoteEndpointsHighCount,
       "safAgentRuntimeRemoteEndpointsTotalCount": safAgentRuntimeRemoteEndpointsTotalCount,
       "safAgentRuntimePausedForIncoming": safAgentRuntimePausedForIncoming,
       "safAgentRuntimePausedForForwarding": safAgentRuntimePausedForForwarding,
       "safAgentRuntimeConversationsCurrentCount": safAgentRuntimeConversationsCurrentCount,
       "safAgentRuntimeConversationsHighCount": safAgentRuntimeConversationsHighCount,
       "safAgentRuntimeConversationsTotalCount": safAgentRuntimeConversationsTotalCount,
       "safAgentRuntimeMessagesCurrentCount": safAgentRuntimeMessagesCurrentCount,
       "safAgentRuntimeMessagesPendingCount": safAgentRuntimeMessagesPendingCount,
       "safAgentRuntimeMessagesHighCount": safAgentRuntimeMessagesHighCount,
       "safAgentRuntimeMessagesReceivedCount": safAgentRuntimeMessagesReceivedCount,
       "safAgentRuntimeMessagesThresholdTime": safAgentRuntimeMessagesThresholdTime,
       "safAgentRuntimeBytesPendingCount": safAgentRuntimeBytesPendingCount,
       "safAgentRuntimeBytesCurrentCount": safAgentRuntimeBytesCurrentCount,
       "safAgentRuntimeBytesHighCount": safAgentRuntimeBytesHighCount,
       "safAgentRuntimeBytesReceivedCount": safAgentRuntimeBytesReceivedCount,
       "safAgentRuntimeBytesThresholdTime": safAgentRuntimeBytesThresholdTime,
       "safAgentRuntimeFailedMessagesTotal": safAgentRuntimeFailedMessagesTotal,
       "safAgentRuntimePausedForReceiving": safAgentRuntimePausedForReceiving,
       "safConversationRuntimeTable": safConversationRuntimeTable,
       "safConversationRuntimeEntry": safConversationRuntimeEntry,
       "safConversationRuntimeIndex": safConversationRuntimeIndex,
       "safConversationRuntimeObjectName": safConversationRuntimeObjectName,
       "safConversationRuntimeType": safConversationRuntimeType,
       "safConversationRuntimeName": safConversationRuntimeName,
       "safConversationRuntimeParent": safConversationRuntimeParent,
       "safConversationRuntimeConversationName": safConversationRuntimeConversationName,
       "safConversationRuntimeDestinationURL": safConversationRuntimeDestinationURL,
       "safConversationRuntimeQOS": safConversationRuntimeQOS,
       "safRemoteEndpointRuntimeTable": safRemoteEndpointRuntimeTable,
       "safRemoteEndpointRuntimeEntry": safRemoteEndpointRuntimeEntry,
       "safRemoteEndpointRuntimeIndex": safRemoteEndpointRuntimeIndex,
       "safRemoteEndpointRuntimeObjectName": safRemoteEndpointRuntimeObjectName,
       "safRemoteEndpointRuntimeType": safRemoteEndpointRuntimeType,
       "safRemoteEndpointRuntimeName": safRemoteEndpointRuntimeName,
       "safRemoteEndpointRuntimeParent": safRemoteEndpointRuntimeParent,
       "safRemoteEndpointRuntimeURL": safRemoteEndpointRuntimeURL,
       "safRemoteEndpointRuntimeEndpointType": safRemoteEndpointRuntimeEndpointType,
       "safRemoteEndpointRuntimePausedForIncoming": safRemoteEndpointRuntimePausedForIncoming,
       "safRemoteEndpointRuntimePausedForForwarding": safRemoteEndpointRuntimePausedForForwarding,
       "safRemoteEndpointRuntimeDowntimeHigh": safRemoteEndpointRuntimeDowntimeHigh,
       "safRemoteEndpointRuntimeDowntimeTotal": safRemoteEndpointRuntimeDowntimeTotal,
       "safRemoteEndpointRuntimeUptimeHigh": safRemoteEndpointRuntimeUptimeHigh,
       "safRemoteEndpointRuntimeUptimeTotal": safRemoteEndpointRuntimeUptimeTotal,
       "safRemoteEndpointRuntimeMessagesCurrentCount": safRemoteEndpointRuntimeMessagesCurrentCount,
       "safRemoteEndpointRuntimeMessagesPendingCount": safRemoteEndpointRuntimeMessagesPendingCount,
       "safRemoteEndpointRuntimeMessagesHighCount": safRemoteEndpointRuntimeMessagesHighCount,
       "safRemoteEndpointRuntimeMessagesReceivedCount": safRemoteEndpointRuntimeMessagesReceivedCount,
       "safRemoteEndpointRuntimeMessagesThresholdTime": safRemoteEndpointRuntimeMessagesThresholdTime,
       "safRemoteEndpointRuntimeBytesPendingCount": safRemoteEndpointRuntimeBytesPendingCount,
       "safRemoteEndpointRuntimeBytesCurrentCount": safRemoteEndpointRuntimeBytesCurrentCount,
       "safRemoteEndpointRuntimeBytesHighCount": safRemoteEndpointRuntimeBytesHighCount,
       "safRemoteEndpointRuntimeBytesReceivedCount": safRemoteEndpointRuntimeBytesReceivedCount,
       "safRemoteEndpointRuntimeBytesThresholdTime": safRemoteEndpointRuntimeBytesThresholdTime,
       "safRemoteEndpointRuntimeFailedMessagesTotal": safRemoteEndpointRuntimeFailedMessagesTotal,
       "wldfDbstoreArchiveRuntimeTable": wldfDbstoreArchiveRuntimeTable,
       "wldfDbstoreArchiveRuntimeEntry": wldfDbstoreArchiveRuntimeEntry,
       "wldfDbstoreArchiveRuntimeIndex": wldfDbstoreArchiveRuntimeIndex,
       "wldfDbstoreArchiveRuntimeObjectName": wldfDbstoreArchiveRuntimeObjectName,
       "wldfDbstoreArchiveRuntimeType": wldfDbstoreArchiveRuntimeType,
       "wldfDbstoreArchiveRuntimeName": wldfDbstoreArchiveRuntimeName,
       "wldfDbstoreArchiveRuntimeParent": wldfDbstoreArchiveRuntimeParent,
       "wldfDbstoreArchiveRuntimeRecordSeekCount": wldfDbstoreArchiveRuntimeRecordSeekCount,
       "wldfDbstoreArchiveRuntimeRecordSeekTime": wldfDbstoreArchiveRuntimeRecordSeekTime,
       "wldfDbstoreArchiveRuntimeRetrievedRecordCount": wldfDbstoreArchiveRuntimeRetrievedRecordCount,
       "wldfDbstoreArchiveRuntimeRecordRetrievalTime": wldfDbstoreArchiveRuntimeRecordRetrievalTime,
       "wldfDbstoreArchiveRuntimeInsertionCount": wldfDbstoreArchiveRuntimeInsertionCount,
       "wldfDbstoreArchiveRuntimeInsertionTime": wldfDbstoreArchiveRuntimeInsertionTime,
       "wldfDbstoreArchiveRuntimeDeletionCount": wldfDbstoreArchiveRuntimeDeletionCount,
       "wldfDbstoreArchiveRuntimeDeletionTime": wldfDbstoreArchiveRuntimeDeletionTime,
       "wldfDbstoreArchiveRuntimeLastDataRetirementStartTime": wldfDbstoreArchiveRuntimeLastDataRetirementStartTime,
       "wldfDbstoreArchiveRuntimeDataRetirementCycles": wldfDbstoreArchiveRuntimeDataRetirementCycles,
       "wldfDbstoreArchiveRuntimeDataRetirementTotalTime": wldfDbstoreArchiveRuntimeDataRetirementTotalTime,
       "wldfDbstoreArchiveRuntimeRetiredRecordCount": wldfDbstoreArchiveRuntimeRetiredRecordCount,
       "wldfDbstoreArchiveRuntimeLastDataRetirementTime": wldfDbstoreArchiveRuntimeLastDataRetirementTime,
       "wldfFileArchiveRuntimeTable": wldfFileArchiveRuntimeTable,
       "wldfFileArchiveRuntimeEntry": wldfFileArchiveRuntimeEntry,
       "wldfFileArchiveRuntimeIndex": wldfFileArchiveRuntimeIndex,
       "wldfFileArchiveRuntimeObjectName": wldfFileArchiveRuntimeObjectName,
       "wldfFileArchiveRuntimeType": wldfFileArchiveRuntimeType,
       "wldfFileArchiveRuntimeName": wldfFileArchiveRuntimeName,
       "wldfFileArchiveRuntimeParent": wldfFileArchiveRuntimeParent,
       "wldfFileArchiveRuntimeRecordSeekCount": wldfFileArchiveRuntimeRecordSeekCount,
       "wldfFileArchiveRuntimeRecordSeekTime": wldfFileArchiveRuntimeRecordSeekTime,
       "wldfFileArchiveRuntimeRetrievedRecordCount": wldfFileArchiveRuntimeRetrievedRecordCount,
       "wldfFileArchiveRuntimeRecordRetrievalTime": wldfFileArchiveRuntimeRecordRetrievalTime,
       "wldfFileArchiveRuntimeRotatedFilesCount": wldfFileArchiveRuntimeRotatedFilesCount,
       "wldfFileArchiveRuntimeIndexCycleCount": wldfFileArchiveRuntimeIndexCycleCount,
       "wldfFileArchiveRuntimeIndexTime": wldfFileArchiveRuntimeIndexTime,
       "wldfFileArchiveRuntimeIncrementalIndexCycleCount": wldfFileArchiveRuntimeIncrementalIndexCycleCount,
       "wldfFileArchiveRuntimeIncrementalIndexTime": wldfFileArchiveRuntimeIncrementalIndexTime,
       "wldfWlstoreArchiveRuntimeTable": wldfWlstoreArchiveRuntimeTable,
       "wldfWlstoreArchiveRuntimeEntry": wldfWlstoreArchiveRuntimeEntry,
       "wldfWlstoreArchiveRuntimeIndex": wldfWlstoreArchiveRuntimeIndex,
       "wldfWlstoreArchiveRuntimeObjectName": wldfWlstoreArchiveRuntimeObjectName,
       "wldfWlstoreArchiveRuntimeType": wldfWlstoreArchiveRuntimeType,
       "wldfWlstoreArchiveRuntimeName": wldfWlstoreArchiveRuntimeName,
       "wldfWlstoreArchiveRuntimeParent": wldfWlstoreArchiveRuntimeParent,
       "wldfWlstoreArchiveRuntimeRecordSeekCount": wldfWlstoreArchiveRuntimeRecordSeekCount,
       "wldfWlstoreArchiveRuntimeRecordSeekTime": wldfWlstoreArchiveRuntimeRecordSeekTime,
       "wldfWlstoreArchiveRuntimeRetrievedRecordCount": wldfWlstoreArchiveRuntimeRetrievedRecordCount,
       "wldfWlstoreArchiveRuntimeRecordRetrievalTime": wldfWlstoreArchiveRuntimeRecordRetrievalTime,
       "wldfWlstoreArchiveRuntimeIndexPageCount": wldfWlstoreArchiveRuntimeIndexPageCount,
       "wldfWlstoreArchiveRuntimeInsertionCount": wldfWlstoreArchiveRuntimeInsertionCount,
       "wldfWlstoreArchiveRuntimeInsertionTime": wldfWlstoreArchiveRuntimeInsertionTime,
       "wldfWlstoreArchiveRuntimeDeletionCount": wldfWlstoreArchiveRuntimeDeletionCount,
       "wldfWlstoreArchiveRuntimeDeletionTime": wldfWlstoreArchiveRuntimeDeletionTime,
       "wldfWlstoreArchiveRuntimeLastDataRetirementStartTime": wldfWlstoreArchiveRuntimeLastDataRetirementStartTime,
       "wldfWlstoreArchiveRuntimeRecordCount": wldfWlstoreArchiveRuntimeRecordCount,
       "wldfWlstoreArchiveRuntimeDataRetirementCycles": wldfWlstoreArchiveRuntimeDataRetirementCycles,
       "wldfWlstoreArchiveRuntimeDataRetirementTotalTime": wldfWlstoreArchiveRuntimeDataRetirementTotalTime,
       "wldfWlstoreArchiveRuntimeRetiredRecordCount": wldfWlstoreArchiveRuntimeRetiredRecordCount,
       "wldfWlstoreArchiveRuntimeLastDataRetirementTime": wldfWlstoreArchiveRuntimeLastDataRetirementTime,
       "wldfHarvesterRuntimeTable": wldfHarvesterRuntimeTable,
       "wldfHarvesterRuntimeEntry": wldfHarvesterRuntimeEntry,
       "wldfHarvesterRuntimeIndex": wldfHarvesterRuntimeIndex,
       "wldfHarvesterRuntimeObjectName": wldfHarvesterRuntimeObjectName,
       "wldfHarvesterRuntimeType": wldfHarvesterRuntimeType,
       "wldfHarvesterRuntimeName": wldfHarvesterRuntimeName,
       "wldfHarvesterRuntimeParent": wldfHarvesterRuntimeParent,
       "wldfHarvesterRuntimeSamplePeriod": wldfHarvesterRuntimeSamplePeriod,
       "wldfHarvesterRuntimeTotalSamplingCycles": wldfHarvesterRuntimeTotalSamplingCycles,
       "wldfHarvesterRuntimeMinimumSamplingTime": wldfHarvesterRuntimeMinimumSamplingTime,
       "wldfHarvesterRuntimeMaximumSamplingTime": wldfHarvesterRuntimeMaximumSamplingTime,
       "wldfHarvesterRuntimeTotalSamplingTime": wldfHarvesterRuntimeTotalSamplingTime,
       "wldfHarvesterRuntimeAverageSamplingTime": wldfHarvesterRuntimeAverageSamplingTime,
       "wldfHarvesterRuntimeCurrentDataSampleCount": wldfHarvesterRuntimeCurrentDataSampleCount,
       "wldfHarvesterRuntimeCurrentSnapshotStartTime": wldfHarvesterRuntimeCurrentSnapshotStartTime,
       "wldfHarvesterRuntimeCurrentSnapshotElapsedTime": wldfHarvesterRuntimeCurrentSnapshotElapsedTime,
       "wldfHarvesterRuntimeTotalSamplingTimeOutlierCount": wldfHarvesterRuntimeTotalSamplingTimeOutlierCount,
       "wldfHarvesterRuntimeOutlierDetectionFactor": wldfHarvesterRuntimeOutlierDetectionFactor,
       "wldfHarvesterRuntimeTotalDataSampleCount": wldfHarvesterRuntimeTotalDataSampleCount,
       "wldfHarvesterRuntimeCurrentSampleTimeAnOutlier": wldfHarvesterRuntimeCurrentSampleTimeAnOutlier,
       "wldfInstrumentationRuntimeTable": wldfInstrumentationRuntimeTable,
       "wldfInstrumentationRuntimeEntry": wldfInstrumentationRuntimeEntry,
       "wldfInstrumentationRuntimeIndex": wldfInstrumentationRuntimeIndex,
       "wldfInstrumentationRuntimeObjectName": wldfInstrumentationRuntimeObjectName,
       "wldfInstrumentationRuntimeType": wldfInstrumentationRuntimeType,
       "wldfInstrumentationRuntimeName": wldfInstrumentationRuntimeName,
       "wldfInstrumentationRuntimeParent": wldfInstrumentationRuntimeParent,
       "wldfInstrumentationRuntimeInspectedClassesCount": wldfInstrumentationRuntimeInspectedClassesCount,
       "wldfInstrumentationRuntimeModifiedClassesCount": wldfInstrumentationRuntimeModifiedClassesCount,
       "wldfInstrumentationRuntimeMinWeavingTime": wldfInstrumentationRuntimeMinWeavingTime,
       "wldfInstrumentationRuntimeMaxWeavingTime": wldfInstrumentationRuntimeMaxWeavingTime,
       "wldfInstrumentationRuntimeTotalWeavingTime": wldfInstrumentationRuntimeTotalWeavingTime,
       "wldfInstrumentationRuntimeExecutionJoinpointCount": wldfInstrumentationRuntimeExecutionJoinpointCount,
       "wldfInstrumentationRuntimeCallJoinpointCount": wldfInstrumentationRuntimeCallJoinpointCount,
       "wldfInstrumentationRuntimeClassweaveAbortCount": wldfInstrumentationRuntimeClassweaveAbortCount,
       "wldfWatchNotificationRuntimeTable": wldfWatchNotificationRuntimeTable,
       "wldfWatchNotificationRuntimeEntry": wldfWatchNotificationRuntimeEntry,
       "wldfWatchNotificationRuntimeIndex": wldfWatchNotificationRuntimeIndex,
       "wldfWatchNotificationRuntimeObjectName": wldfWatchNotificationRuntimeObjectName,
       "wldfWatchNotificationRuntimeType": wldfWatchNotificationRuntimeType,
       "wldfWatchNotificationRuntimeName": wldfWatchNotificationRuntimeName,
       "wldfWatchNotificationRuntimeParent": wldfWatchNotificationRuntimeParent,
       "wldfWatchNotificationRuntimeTotalHarvesterEvaluationCycles": wldfWatchNotificationRuntimeTotalHarvesterEvaluationCycles,
       "wldfWatchNotificationRuntimeTotalHarvesterWatchEvaluations": wldfWatchNotificationRuntimeTotalHarvesterWatchEvaluations,
       "wldfWatchNotificationRuntimeTotalHarvesterWatchesTriggered": wldfWatchNotificationRuntimeTotalHarvesterWatchesTriggered,
       "wldfWatchNotificationRuntimeAverageHarvesterWatchEvaluationTime": wldfWatchNotificationRuntimeAverageHarvesterWatchEvaluationTime,
       "wldfWatchNotificationRuntimeTotalLogEvaluationCycles": wldfWatchNotificationRuntimeTotalLogEvaluationCycles,
       "wldfWatchNotificationRuntimeTotalLogWatchEvaluations": wldfWatchNotificationRuntimeTotalLogWatchEvaluations,
       "wldfWatchNotificationRuntimeTotalLogWatchesTriggered": wldfWatchNotificationRuntimeTotalLogWatchesTriggered,
       "wldfWatchNotificationRuntimeAverageLogWatchEvaluationTime": wldfWatchNotificationRuntimeAverageLogWatchEvaluationTime,
       "wldfWatchNotificationRuntimeTotalEventDataEvaluationCycles": wldfWatchNotificationRuntimeTotalEventDataEvaluationCycles,
       "wldfWatchNotificationRuntimeTotalEventDataWatchEvaluations": wldfWatchNotificationRuntimeTotalEventDataWatchEvaluations,
       "wldfWatchNotificationRuntimeTotalEventDataWatchesTriggered": wldfWatchNotificationRuntimeTotalEventDataWatchesTriggered,
       "wldfWatchNotificationRuntimeAverageEventDataWatchEvaluationTime": wldfWatchNotificationRuntimeAverageEventDataWatchEvaluationTime,
       "wldfWatchNotificationRuntimeCurrentActiveAlarmsCount": wldfWatchNotificationRuntimeCurrentActiveAlarmsCount,
       "wldfWatchNotificationRuntimeMaximumActiveAlarmsCount": wldfWatchNotificationRuntimeMaximumActiveAlarmsCount,
       "wldfWatchNotificationRuntimeTotalActiveManualResetAlarms": wldfWatchNotificationRuntimeTotalActiveManualResetAlarms,
       "wldfWatchNotificationRuntimeTotalActiveAutomaticResetAlarms": wldfWatchNotificationRuntimeTotalActiveAutomaticResetAlarms,
       "wldfWatchNotificationRuntimeTotalNotificationsPerformed": wldfWatchNotificationRuntimeTotalNotificationsPerformed,
       "wldfWatchNotificationRuntimeTotalDIMGNotificationsPerformed": wldfWatchNotificationRuntimeTotalDIMGNotificationsPerformed,
       "wldfWatchNotificationRuntimeTotalSNMPNotificationsPerformed": wldfWatchNotificationRuntimeTotalSNMPNotificationsPerformed,
       "wldfWatchNotificationRuntimeMinimumEventDataWatchEvaluationTime": wldfWatchNotificationRuntimeMinimumEventDataWatchEvaluationTime,
       "wldfWatchNotificationRuntimeMinimumHarvesterWatchEvaluationTime": wldfWatchNotificationRuntimeMinimumHarvesterWatchEvaluationTime,
       "wldfWatchNotificationRuntimeTotalFailedJMXNotifications": wldfWatchNotificationRuntimeTotalFailedJMXNotifications,
       "wldfWatchNotificationRuntimeTotalJMXNotificationsPerformed": wldfWatchNotificationRuntimeTotalJMXNotificationsPerformed,
       "wldfWatchNotificationRuntimeTotalSMTPNotificationsPerformed": wldfWatchNotificationRuntimeTotalSMTPNotificationsPerformed,
       "wldfWatchNotificationRuntimeTotalJMSNotificationsPerformed": wldfWatchNotificationRuntimeTotalJMSNotificationsPerformed,
       "wldfWatchNotificationRuntimeMaximumLogWatchEvaluationTime": wldfWatchNotificationRuntimeMaximumLogWatchEvaluationTime,
       "wldfWatchNotificationRuntimeTotalFailedJMSNotifications": wldfWatchNotificationRuntimeTotalFailedJMSNotifications,
       "wldfWatchNotificationRuntimeMinimumLogWatchEvaluationTime": wldfWatchNotificationRuntimeMinimumLogWatchEvaluationTime,
       "wldfWatchNotificationRuntimeMaximumHarvesterWatchEvaluationTime": wldfWatchNotificationRuntimeMaximumHarvesterWatchEvaluationTime,
       "wldfWatchNotificationRuntimeTotalFailedDIMGNotifications": wldfWatchNotificationRuntimeTotalFailedDIMGNotifications,
       "wldfWatchNotificationRuntimeMaximumEventDataWatchEvaluationTime": wldfWatchNotificationRuntimeMaximumEventDataWatchEvaluationTime,
       "wldfWatchNotificationRuntimeTotalFailedNotifications": wldfWatchNotificationRuntimeTotalFailedNotifications,
       "wldfWatchNotificationRuntimeTotalFailedSMTPNotifications": wldfWatchNotificationRuntimeTotalFailedSMTPNotifications,
       "wldfWatchNotificationRuntimeTotalFailedSNMPNotifications": wldfWatchNotificationRuntimeTotalFailedSNMPNotifications,
       "applicationTable": applicationTable,
       "applicationEntry": applicationEntry,
       "applicationIndex": applicationIndex,
       "applicationObjectName": applicationObjectName,
       "applicationType": applicationType,
       "applicationName": applicationName,
       "applicationParent": applicationParent,
       "applicationDeployed": applicationDeployed,
       "applicationComponents": applicationComponents,
       "applicationApplicationDescriptor": applicationApplicationDescriptor,
       "applicationPath": applicationPath,
       "applicationAltDescriptorPath": applicationAltDescriptorPath,
       "applicationAltWLSDescriptorPath": applicationAltWLSDescriptorPath,
       "applicationDeploymentTimeout": applicationDeploymentTimeout,
       "applicationDeploymentType": applicationDeploymentType,
       "applicationLoadOrder": applicationLoadOrder,
       "applicationStagingMode": applicationStagingMode,
       "applicationStagingPath": applicationStagingPath,
       "applicationTwoPhase": applicationTwoPhase,
       "bridgeDestinationCommonTable": bridgeDestinationCommonTable,
       "bridgeDestinationCommonEntry": bridgeDestinationCommonEntry,
       "bridgeDestinationCommonIndex": bridgeDestinationCommonIndex,
       "bridgeDestinationCommonObjectName": bridgeDestinationCommonObjectName,
       "bridgeDestinationCommonType": bridgeDestinationCommonType,
       "bridgeDestinationCommonName": bridgeDestinationCommonName,
       "bridgeDestinationCommonParent": bridgeDestinationCommonParent,
       "bridgeDestinationCommonAdapterJNDIName": bridgeDestinationCommonAdapterJNDIName,
       "bridgeDestinationCommonClasspath": bridgeDestinationCommonClasspath,
       "bridgeDestinationCommonUserName": bridgeDestinationCommonUserName,
       "clusterTable": clusterTable,
       "clusterEntry": clusterEntry,
       "clusterIndex": clusterIndex,
       "clusterObjectName": clusterObjectName,
       "clusterType": clusterType,
       "clusterName": clusterName,
       "clusterParent": clusterParent,
       "clusterServers": clusterServers,
       "clusterClusterAddress": clusterClusterAddress,
       "clusterMulticastAddress": clusterMulticastAddress,
       "clusterMulticastTTL": clusterMulticastTTL,
       "clusterMulticastSendDelay": clusterMulticastSendDelay,
       "clusterDefaultLoadAlgorithm": clusterDefaultLoadAlgorithm,
       "clusterServiceAgeThresholdSeconds": clusterServiceAgeThresholdSeconds,
       "clusterMulticastBufferSize": clusterMulticastBufferSize,
       "clusterMulticastPort": clusterMulticastPort,
       "clusterClientCertProxyEnabled": clusterClientCertProxyEnabled,
       "clusterWeblogicPluginEnabled": clusterWeblogicPluginEnabled,
       "clusterHealthCheckIntervalMillis": clusterHealthCheckIntervalMillis,
       "clusterHealthCheckPeriodsUntilFencing": clusterHealthCheckPeriodsUntilFencing,
       "clusterSessionFlushInterval": clusterSessionFlushInterval,
       "clusterAdditionalAutoMigrationAttempts": clusterAdditionalAutoMigrationAttempts,
       "clusterRemoteClusterAddress": clusterRemoteClusterAddress,
       "clusterFrontendHTTPPort": clusterFrontendHTTPPort,
       "clusterMulticastDataEncryption": clusterMulticastDataEncryption,
       "clusterSecureReplicationEnabled": clusterSecureReplicationEnabled,
       "clusterJobSchedulerTableName": clusterJobSchedulerTableName,
       "clusterReplicationTimeoutEnabled": clusterReplicationTimeoutEnabled,
       "clusterAsyncSessionQueueTimeout": clusterAsyncSessionQueueTimeout,
       "clusterInterClusterCommLinkHealthCheckInterval": clusterInterClusterCommLinkHealthCheckInterval,
       "clusterSessionFlushThreshold": clusterSessionFlushThreshold,
       "clusterClusterType": clusterClusterType,
       "clusterGreedySessionFlushInterval": clusterGreedySessionFlushInterval,
       "clusterPersistSessionsOnShutdown": clusterPersistSessionsOnShutdown,
       "clusterMigrationBasis": clusterMigrationBasis,
       "clusterHttpTraceSupportEnabled": clusterHttpTraceSupportEnabled,
       "clusterReplicationChannel": clusterReplicationChannel,
       "clusterFencingGracePeriodMillis": clusterFencingGracePeriodMillis,
       "clusterFrontendHost": clusterFrontendHost,
       "clusterMemberWarmupTimeoutSeconds": clusterMemberWarmupTimeoutSeconds,
       "clusterFrontendHTTPSPort": clusterFrontendHTTPSPort,
       "clusterClusterBroadcastChannel": clusterClusterBroadcastChannel,
       "clusterIdlePeriodsUntilTimeout": clusterIdlePeriodsUntilTimeout,
       "clusterNumberOfServersInClusterAddress": clusterNumberOfServersInClusterAddress,
       "clusterClusterMessagingMode": clusterClusterMessagingMode,
       "clusterMillisToSleepBetweenAutoMigrationAttempts": clusterMillisToSleepBetweenAutoMigrationAttempts,
       "clusterAutoMigrationTableName": clusterAutoMigrationTableName,
       "clusterWANSessionPersistenceTableName": clusterWANSessionPersistenceTableName,
       "comTable": comTable,
       "comEntry": comEntry,
       "comIndex": comIndex,
       "comObjectName": comObjectName,
       "comType": comType,
       "comName": comName,
       "comParent": comParent,
       "comNTAuthHost": comNTAuthHost,
       "comApartmentThreaded": comApartmentThreaded,
       "comMemoryLoggingEnabled": comMemoryLoggingEnabled,
       "comNativeModeEnabled": comNativeModeEnabled,
       "comPrefetchEnums": comPrefetchEnums,
       "comVerboseLoggingEnabled": comVerboseLoggingEnabled,
       "domainTable": domainTable,
       "domainEntry": domainEntry,
       "domainIndex": domainIndex,
       "domainObjectName": domainObjectName,
       "domainType": domainType,
       "domainName": domainName,
       "domainParent": domainParent,
       "domainLastModificationTime": domainLastModificationTime,
       "domainActive": domainActive,
       "domainRootDirectory": domainRootDirectory,
       "domainJTA": domainJTA,
       "domainLog": domainLog,
       "domainSNMPAgent": domainSNMPAgent,
       "domainAdministrationPort": domainAdministrationPort,
       "domainArchiveConfigurationCount": domainArchiveConfigurationCount,
       "domainConfigurationVersion": domainConfigurationVersion,
       "domainConsoleContextPath": domainConsoleContextPath,
       "domainAdministrationPortEnabled": domainAdministrationPortEnabled,
       "domainClusterConstraintsEnabled": domainClusterConstraintsEnabled,
       "domainConsoleEnabled": domainConsoleEnabled,
       "domainInternalAppsDeployOnDemandEnabled": domainInternalAppsDeployOnDemandEnabled,
       "domainDomainVersion": domainDomainVersion,
       "domainConfigBackupEnabled": domainConfigBackupEnabled,
       "domainConsoleExtensionDirectory": domainConsoleExtensionDirectory,
       "domainConfigurationAuditType": domainConfigurationAuditType,
       "domainAdminServerName": domainAdminServerName,
       "domainAdministrationProtocol": domainAdministrationProtocol,
       "domainProductionModeEnabled": domainProductionModeEnabled,
       "ejbComponentTable": ejbComponentTable,
       "ejbComponentEntry": ejbComponentEntry,
       "ejbComponentIndex": ejbComponentIndex,
       "ejbComponentObjectName": ejbComponentObjectName,
       "ejbComponentType": ejbComponentType,
       "ejbComponentName": ejbComponentName,
       "ejbComponentParent": ejbComponentParent,
       "ejbComponentJavaCompiler": ejbComponentJavaCompiler,
       "ejbComponentJavaCompilerPreClassPath": ejbComponentJavaCompilerPreClassPath,
       "ejbComponentJavaCompilerPostClassPath": ejbComponentJavaCompilerPostClassPath,
       "ejbComponentExtraRmicOptions": ejbComponentExtraRmicOptions,
       "ejbComponentKeepGenerated": ejbComponentKeepGenerated,
       "ejbComponentTmpPath": ejbComponentTmpPath,
       "ejbComponentApplication": ejbComponentApplication,
       "ejbComponentURI": ejbComponentURI,
       "ejbContainerTable": ejbContainerTable,
       "ejbContainerEntry": ejbContainerEntry,
       "ejbContainerIndex": ejbContainerIndex,
       "ejbContainerObjectName": ejbContainerObjectName,
       "ejbContainerType": ejbContainerType,
       "ejbContainerName": ejbContainerName,
       "ejbContainerParent": ejbContainerParent,
       "ejbContainerVerboseEJBDeploymentEnabled": ejbContainerVerboseEJBDeploymentEnabled,
       "ejbContainerExtraRmicOptions": ejbContainerExtraRmicOptions,
       "ejbContainerForceGeneration": ejbContainerForceGeneration,
       "ejbContainerJavaCompiler": ejbContainerJavaCompiler,
       "ejbContainerJavaCompilerPostClassPath": ejbContainerJavaCompilerPostClassPath,
       "ejbContainerJavaCompilerPreClassPath": ejbContainerJavaCompilerPreClassPath,
       "ejbContainerKeepGenerated": ejbContainerKeepGenerated,
       "ejbContainerTmpPath": ejbContainerTmpPath,
       "ejbContainerExtraEjbcOptions": ejbContainerExtraEjbcOptions,
       "executeQueueTable": executeQueueTable,
       "executeQueueEntry": executeQueueEntry,
       "executeQueueIndex": executeQueueIndex,
       "executeQueueObjectName": executeQueueObjectName,
       "executeQueueType": executeQueueType,
       "executeQueueName": executeQueueName,
       "executeQueueParent": executeQueueParent,
       "executeQueueThreadCount": executeQueueThreadCount,
       "executeQueueThreadsMaximum": executeQueueThreadsMaximum,
       "executeQueueQueueLengthThresholdPercent": executeQueueQueueLengthThresholdPercent,
       "executeQueueThreadsIncrease": executeQueueThreadsIncrease,
       "executeQueueThreadsMinimum": executeQueueThreadsMinimum,
       "executeQueueQueueLength": executeQueueQueueLength,
       "foreignJMSConnectionFactoryTable": foreignJMSConnectionFactoryTable,
       "foreignJMSConnectionFactoryEntry": foreignJMSConnectionFactoryEntry,
       "foreignJMSConnectionFactoryIndex": foreignJMSConnectionFactoryIndex,
       "foreignJMSConnectionFactoryObjectName": foreignJMSConnectionFactoryObjectName,
       "foreignJMSConnectionFactoryType": foreignJMSConnectionFactoryType,
       "foreignJMSConnectionFactoryName": foreignJMSConnectionFactoryName,
       "foreignJMSConnectionFactoryParent": foreignJMSConnectionFactoryParent,
       "foreignJMSConnectionFactoryLocalJNDIName": foreignJMSConnectionFactoryLocalJNDIName,
       "foreignJMCConnectionFactoryRemoteJNDIName": foreignJMCConnectionFactoryRemoteJNDIName,
       "foreignJMSConnectionFactoryUsername": foreignJMSConnectionFactoryUsername,
       "foreignJMSDestinationTable": foreignJMSDestinationTable,
       "foreignJMSDestinationEntry": foreignJMSDestinationEntry,
       "foreignJMSDestinationIndex": foreignJMSDestinationIndex,
       "foreignJMSDestinationObjectName": foreignJMSDestinationObjectName,
       "foreignJMSDestinationType": foreignJMSDestinationType,
       "foreignJMSDestinationName": foreignJMSDestinationName,
       "foreignJMSDestinationParent": foreignJMSDestinationParent,
       "foreignJMSDestinationLocalJNDIName": foreignJMSDestinationLocalJNDIName,
       "foreignJMSDestinationRemoteJNDIName": foreignJMSDestinationRemoteJNDIName,
       "foreignJMSServerTable": foreignJMSServerTable,
       "foreignJMSServerEntry": foreignJMSServerEntry,
       "foreignJMSServerIndex": foreignJMSServerIndex,
       "foreignJMSServerObjectName": foreignJMSServerObjectName,
       "foreignJMSServerType": foreignJMSServerType,
       "foreignJMSServerName": foreignJMSServerName,
       "foreignJMSServerParent": foreignJMSServerParent,
       "foreignJMSServerConnectionURL": foreignJMSServerConnectionURL,
       "foreignJMSServerInitialContextFactory": foreignJMSServerInitialContextFactory,
       "iiopTable": iiopTable,
       "iiopEntry": iiopEntry,
       "iiopIndex": iiopIndex,
       "iiopObjectName": iiopObjectName,
       "iiopType": iiopType,
       "iiopName": iiopName,
       "iiopParent": iiopParent,
       "iiopCompleteMessageTimeout": iiopCompleteMessageTimeout,
       "iiopIdleConnectionTimeout": iiopIdleConnectionTimeout,
       "iiopMaxMessageSize": iiopMaxMessageSize,
       "iiopDefaultCharCodeset": iiopDefaultCharCodeset,
       "iiopDefaultMinorVersion": iiopDefaultMinorVersion,
       "iiopDefaultWideCharCodeset": iiopDefaultWideCharCodeset,
       "iiopTxMechanism": iiopTxMechanism,
       "iiopUseStatefulAuthentication": iiopUseStatefulAuthentication,
       "iiopUseJavaSerialization": iiopUseJavaSerialization,
       "iiopUseFullRepositoryIdList": iiopUseFullRepositoryIdList,
       "iiopEnableIORServlet": iiopEnableIORServlet,
       "iiopSystemSecurity": iiopSystemSecurity,
       "iiopUseSerialFormatVersion2": iiopUseSerialFormatVersion2,
       "jdbcConnectionPoolTable": jdbcConnectionPoolTable,
       "jdbcConnectionPoolEntry": jdbcConnectionPoolEntry,
       "jdbcConnectionPoolIndex": jdbcConnectionPoolIndex,
       "jdbcConnectionPoolObjectName": jdbcConnectionPoolObjectName,
       "jdbcConnectionPoolType": jdbcConnectionPoolType,
       "jdbcConnectionPoolName": jdbcConnectionPoolName,
       "jdbcConnectionPoolParent": jdbcConnectionPoolParent,
       "jdbcConnectionPoolACLName": jdbcConnectionPoolACLName,
       "jdbcConnectionPoolURL": jdbcConnectionPoolURL,
       "jdbcConnectionPoolDriverName": jdbcConnectionPoolDriverName,
       "jdbcConnectionPoolProperties": jdbcConnectionPoolProperties,
       "jdbcConnectionPoolLoginDelaySeconds": jdbcConnectionPoolLoginDelaySeconds,
       "jdbcConnectionPoolInitialCapacity": jdbcConnectionPoolInitialCapacity,
       "jdbcConnectionPoolMaxCapacity": jdbcConnectionPoolMaxCapacity,
       "jdbcConnectionPoolCapacityIncrement": jdbcConnectionPoolCapacityIncrement,
       "jdbcConnectionPoolShrinkingEnabled": jdbcConnectionPoolShrinkingEnabled,
       "jdbcConnectionPoolShrinkPeriodMinutes": jdbcConnectionPoolShrinkPeriodMinutes,
       "jdbcConnectionPoolTestConnectionsOnReserve": jdbcConnectionPoolTestConnectionsOnReserve,
       "jdbcConnectionPoolTestConnectionsOnRelease": jdbcConnectionPoolTestConnectionsOnRelease,
       "jdbcConnectionPoolSupportsLocalTransaction": jdbcConnectionPoolSupportsLocalTransaction,
       "jdbcConnectionPoolRefreshMinutes": jdbcConnectionPoolRefreshMinutes,
       "jdbcConnectionPoolTargets": jdbcConnectionPoolTargets,
       "jdbcConnectionPoolConnectionCreationRetryFrequencySeconds": jdbcConnectionPoolConnectionCreationRetryFrequencySeconds,
       "jdbcConnectionPoolConnectionReserveTimeoutSeconds": jdbcConnectionPoolConnectionReserveTimeoutSeconds,
       "jdbcConnectionPoolHighestNumUnavailable": jdbcConnectionPoolHighestNumUnavailable,
       "jdbcConnectionPoolHighestNumWaiters": jdbcConnectionPoolHighestNumWaiters,
       "jdbcConnectionPoolInactiveConnectionTimeoutSeconds": jdbcConnectionPoolInactiveConnectionTimeoutSeconds,
       "jdbcConnectionPoolTestTableName": jdbcConnectionPoolTestTableName,
       "jdbcConnectionPoolKeepLogicalConnOpenOnRelease": jdbcConnectionPoolKeepLogicalConnOpenOnRelease,
       "jdbcConnectionPoolKeepXAConnTillTxComplete": jdbcConnectionPoolKeepXAConnTillTxComplete,
       "jdbcConnectionPoolNewXAConnForCommit": jdbcConnectionPoolNewXAConnForCommit,
       "jdbcConnectionPoolShrinkFrequencySeconds": jdbcConnectionPoolShrinkFrequencySeconds,
       "jdbcConnectionPoolStatementCacheSize": jdbcConnectionPoolStatementCacheSize,
       "jdbcConnectionPoolStatementCacheType": jdbcConnectionPoolStatementCacheType,
       "jdbcConnectionPoolTestConnectionsOnCreate": jdbcConnectionPoolTestConnectionsOnCreate,
       "jdbcConnectionPoolTestFrequencySeconds": jdbcConnectionPoolTestFrequencySeconds,
       "jdbcConnectionPoolXAEndOnlyOnce": jdbcConnectionPoolXAEndOnlyOnce,
       "jdbcConnectionPoolConnLeakProfilingEnabled": jdbcConnectionPoolConnLeakProfilingEnabled,
       "jdbcDataSourceTable": jdbcDataSourceTable,
       "jdbcDataSourceEntry": jdbcDataSourceEntry,
       "jdbcDataSourceIndex": jdbcDataSourceIndex,
       "jdbcDataSourceObjectName": jdbcDataSourceObjectName,
       "jdbcDataSourceType": jdbcDataSourceType,
       "jdbcDataSourceName": jdbcDataSourceName,
       "jdbcDataSourceParent": jdbcDataSourceParent,
       "jdbcDataSourceJNDIName": jdbcDataSourceJNDIName,
       "jdbcDataSourcePoolName": jdbcDataSourcePoolName,
       "jdbcDataSourceTargets": jdbcDataSourceTargets,
       "jdbcDataSourceRowPrefetchEnabled": jdbcDataSourceRowPrefetchEnabled,
       "jdbcDataSourceRowPrefetchSize": jdbcDataSourceRowPrefetchSize,
       "jdbcDataSourceStreamChunkSize": jdbcDataSourceStreamChunkSize,
       "jdbcDataSourceFactoryTable": jdbcDataSourceFactoryTable,
       "jdbcDataSourceFactoryEntry": jdbcDataSourceFactoryEntry,
       "jdbcDataSourceFactoryIndex": jdbcDataSourceFactoryIndex,
       "jdbcDataSourceFactoryObjectName": jdbcDataSourceFactoryObjectName,
       "jdbcDataSourceFactoryType": jdbcDataSourceFactoryType,
       "jdbcDataSourceFactoryName": jdbcDataSourceFactoryName,
       "jdbcDataSourceFactoryParent": jdbcDataSourceFactoryParent,
       "jdbcDataSourceFactoryDriverClassName": jdbcDataSourceFactoryDriverClassName,
       "jdbcDataSourceFactoryFactoryName": jdbcDataSourceFactoryFactoryName,
       "jdbcDataSourceFactoryURL": jdbcDataSourceFactoryURL,
       "jdbcDataSourceFactoryUserName": jdbcDataSourceFactoryUserName,
       "jdbcMultiPoolTable": jdbcMultiPoolTable,
       "jdbcMultiPoolEntry": jdbcMultiPoolEntry,
       "jdbcMultiPoolIndex": jdbcMultiPoolIndex,
       "jdbcMultiPoolObjectName": jdbcMultiPoolObjectName,
       "jdbcMultiPoolType": jdbcMultiPoolType,
       "jdbcMultiPoolName": jdbcMultiPoolName,
       "jdbcMultiPoolParent": jdbcMultiPoolParent,
       "jdbcMultiPoolACLName": jdbcMultiPoolACLName,
       "jdbcMultiPoolPoolList": jdbcMultiPoolPoolList,
       "jdbcMultiPoolLoadBalance": jdbcMultiPoolLoadBalance,
       "jdbcMultiPoolHighAvail": jdbcMultiPoolHighAvail,
       "jdbcMultiPoolTargets": jdbcMultiPoolTargets,
       "jdbcTxDataSourceTable": jdbcTxDataSourceTable,
       "jdbcTxDataSourceEntry": jdbcTxDataSourceEntry,
       "jdbcTxDataSourceIndex": jdbcTxDataSourceIndex,
       "jdbcTxDataSourceObjectName": jdbcTxDataSourceObjectName,
       "jdbcTxDataSourceType": jdbcTxDataSourceType,
       "jdbcTxDataSourceName": jdbcTxDataSourceName,
       "jdbcTxDataSourceParent": jdbcTxDataSourceParent,
       "jdbcTxDataSourceJNDIName": jdbcTxDataSourceJNDIName,
       "jdbcTxDataSourcePoolName": jdbcTxDataSourcePoolName,
       "jdbcTxDataSourceEnableTwoPhaseCommit": jdbcTxDataSourceEnableTwoPhaseCommit,
       "jdbcTxDataSourceTargets": jdbcTxDataSourceTargets,
       "jdbcTxDataSourceRowPrefetchEnabled": jdbcTxDataSourceRowPrefetchEnabled,
       "jdbcTxDataSourceRowPrefetchSize": jdbcTxDataSourceRowPrefetchSize,
       "jdbcTxDataSourceStreamChunkSize": jdbcTxDataSourceStreamChunkSize,
       "jmsBridgeDestinationTable": jmsBridgeDestinationTable,
       "jmsBridgeDestinationEntry": jmsBridgeDestinationEntry,
       "jmsBridgeDestinationIndex": jmsBridgeDestinationIndex,
       "jmsBridgeDestinationObjectName": jmsBridgeDestinationObjectName,
       "jmsBridgeDestinationType": jmsBridgeDestinationType,
       "jmsBridgeDestinationName": jmsBridgeDestinationName,
       "jmsBridgeDestinationParent": jmsBridgeDestinationParent,
       "jmsBridgeDestinationConnectionFactoryJNDIName": jmsBridgeDestinationConnectionFactoryJNDIName,
       "jmsBridgeDestinationConnectionURL": jmsBridgeDestinationConnectionURL,
       "jmsBridgeDestinationDestinationJNDIName": jmsBridgeDestinationDestinationJNDIName,
       "jmsBridgeDestinationDestinationType": jmsBridgeDestinationDestinationType,
       "jmsBridgeDestinationInitialContextFactory": jmsBridgeDestinationInitialContextFactory,
       "jmsBridgeDestinationAdapterJNDIName": jmsBridgeDestinationAdapterJNDIName,
       "jmsBridgeDestinationClasspath": jmsBridgeDestinationClasspath,
       "jmsBridgeDestinationUserName": jmsBridgeDestinationUserName,
       "jmsConnectionConsumerTable": jmsConnectionConsumerTable,
       "jmsConnectionConsumerEntry": jmsConnectionConsumerEntry,
       "jmsConnectionConsumerIndex": jmsConnectionConsumerIndex,
       "jmsConnectionConsumerObjectName": jmsConnectionConsumerObjectName,
       "jmsConnectionConsumerType": jmsConnectionConsumerType,
       "jmsConnectionConsumerName": jmsConnectionConsumerName,
       "jmsConnectionConsumerParent": jmsConnectionConsumerParent,
       "jmsConnectionConsumerMessagesMaximum": jmsConnectionConsumerMessagesMaximum,
       "jmsConnectionConsumerSelector": jmsConnectionConsumerSelector,
       "jmsConnectionConsumerDestination": jmsConnectionConsumerDestination,
       "jmsConnectionFactoryTable": jmsConnectionFactoryTable,
       "jmsConnectionFactoryEntry": jmsConnectionFactoryEntry,
       "jmsConnectionFactoryIndex": jmsConnectionFactoryIndex,
       "jmsConnectionFactoryObjectName": jmsConnectionFactoryObjectName,
       "jmsConnectionFactoryType": jmsConnectionFactoryType,
       "jmsConnectionFactoryName": jmsConnectionFactoryName,
       "jmsConnectionFactoryParent": jmsConnectionFactoryParent,
       "jmsConnectionFactoryJNDIName": jmsConnectionFactoryJNDIName,
       "jmsConnectionFactoryClientId": jmsConnectionFactoryClientId,
       "jmsConnectionFactoryDefaultPriority": jmsConnectionFactoryDefaultPriority,
       "jmsConnectionFactoryDefaultTimeToLive": jmsConnectionFactoryDefaultTimeToLive,
       "jmsConnectionFactoryDefaultDeliveryMode": jmsConnectionFactoryDefaultDeliveryMode,
       "jmsConnectionFactoryTransactionTimeout": jmsConnectionFactoryTransactionTimeout,
       "jmsConnectionFactoryUserTransactionsEnabled": jmsConnectionFactoryUserTransactionsEnabled,
       "jmsConnectionFactoryAllowCloseInOnMessage": jmsConnectionFactoryAllowCloseInOnMessage,
       "jmsConnectionFactoryMessagesMaximum": jmsConnectionFactoryMessagesMaximum,
       "jmsConnectionFactoryOverrunPolicy": jmsConnectionFactoryOverrunPolicy,
       "jmsConnectionFactoryTargets": jmsConnectionFactoryTargets,
       "jmsDestCommonTable": jmsDestCommonTable,
       "jmsDestCommonEntry": jmsDestCommonEntry,
       "jmsDestCommonIndex": jmsDestCommonIndex,
       "jmsDestCommonObjectName": jmsDestCommonObjectName,
       "jmsDestCommonType": jmsDestCommonType,
       "jmsDestCommonName": jmsDestCommonName,
       "jmsDestCommonParent": jmsDestCommonParent,
       "jmsDestCommonBytesMaximum": jmsDestCommonBytesMaximum,
       "jmsDestCommonBytesThresholdHigh": jmsDestCommonBytesThresholdHigh,
       "jmsDestCommonBytesThresholdLow": jmsDestCommonBytesThresholdLow,
       "jmsDestCommonDeliveryModeOverride": jmsDestCommonDeliveryModeOverride,
       "jmsDestCommonMessagesMaximum": jmsDestCommonMessagesMaximum,
       "jmsDestCommonMessagesThresholdHigh": jmsDestCommonMessagesThresholdHigh,
       "jmsDestCommonMessagesThresholdLow": jmsDestCommonMessagesThresholdLow,
       "jmsDestCommonPriorityOverride": jmsDestCommonPriorityOverride,
       "jmsDestCommonRedeliveryDelayOverride": jmsDestCommonRedeliveryDelayOverride,
       "jmsDestCommonRedeliveryLimit": jmsDestCommonRedeliveryLimit,
       "jmsDestCommonTimeToDeliverOverride": jmsDestCommonTimeToDeliverOverride,
       "jmsDestCommonTimeToLiveOverride": jmsDestCommonTimeToLiveOverride,
       "jmsDestinationTable": jmsDestinationTable,
       "jmsDestinationEntry": jmsDestinationEntry,
       "jmsDestinationIndex": jmsDestinationIndex,
       "jmsDestinationObjectName": jmsDestinationObjectName,
       "jmsDestinationType": jmsDestinationType,
       "jmsDestinationName": jmsDestinationName,
       "jmsDestinationParent": jmsDestinationParent,
       "jmsDestinationBytesPagingEnabled": jmsDestinationBytesPagingEnabled,
       "jmsDestinationJNDIName": jmsDestinationJNDIName,
       "jmsDestinationMessagesPagingEnabled": jmsDestinationMessagesPagingEnabled,
       "jmsDestinationStoreEnabled": jmsDestinationStoreEnabled,
       "jmsDestinationJNDINameReplicated": jmsDestinationJNDINameReplicated,
       "jmsDestinationKeyTable": jmsDestinationKeyTable,
       "jmsDestinationKeyEntry": jmsDestinationKeyEntry,
       "jmsDestinationKeyIndex": jmsDestinationKeyIndex,
       "jmsDestinationKeyObjectName": jmsDestinationKeyObjectName,
       "jmsDestinationKeyType": jmsDestinationKeyType,
       "jmsDestinationKeyName": jmsDestinationKeyName,
       "jmsDestinationKeyParent": jmsDestinationKeyParent,
       "jmsDestinationKeyProperty": jmsDestinationKeyProperty,
       "jmsDestinationKeyKeyType": jmsDestinationKeyKeyType,
       "jmsDestinationKeyDirection": jmsDestinationKeyDirection,
       "jmsDistributedQueueTable": jmsDistributedQueueTable,
       "jmsDistributedQueueEntry": jmsDistributedQueueEntry,
       "jmsDistributedQueueIndex": jmsDistributedQueueIndex,
       "jmsDistributedQueueObjectName": jmsDistributedQueueObjectName,
       "jmsDistributedQueueType": jmsDistributedQueueType,
       "jmsDistributedQueueName": jmsDistributedQueueName,
       "jmsDistributedQueueParent": jmsDistributedQueueParent,
       "jmsDistributedQueueForwardDelay": jmsDistributedQueueForwardDelay,
       "jmsDistributedDestinationTable": jmsDistributedDestinationTable,
       "jmsDistributedDestinationEntry": jmsDistributedDestinationEntry,
       "jmsDistributedDestinationIndex": jmsDistributedDestinationIndex,
       "jmsDistributedDestinationObjectName": jmsDistributedDestinationObjectName,
       "jmsDistributedDestinationType": jmsDistributedDestinationType,
       "jmsDistributedDestinationName": jmsDistributedDestinationName,
       "jmsDistributedDestinationParent": jmsDistributedDestinationParent,
       "jmsDistributedDestinationLoadBalancingPolicy": jmsDistributedDestinationLoadBalancingPolicy,
       "jmsDistributedDestinationMemberTable": jmsDistributedDestinationMemberTable,
       "jmsDistributedDestinationMemberEntry": jmsDistributedDestinationMemberEntry,
       "jmsDistributedDestinationMemberIndex": jmsDistributedDestinationMemberIndex,
       "jmsDistributedDestinationMemberObjectName": jmsDistributedDestinationMemberObjectName,
       "jmsDistributedDestinationMemberType": jmsDistributedDestinationMemberType,
       "jmsDistributedDestinationMemberName": jmsDistributedDestinationMemberName,
       "jmsDistributedDestinationMemberParent": jmsDistributedDestinationMemberParent,
       "jmsDistributedDestinationMemberWeight": jmsDistributedDestinationMemberWeight,
       "jmsTemplateTable": jmsTemplateTable,
       "jmsTemplateEntry": jmsTemplateEntry,
       "jmsTemplateIndex": jmsTemplateIndex,
       "jmsTemplateObjectName": jmsTemplateObjectName,
       "jmsTemplateType": jmsTemplateType,
       "jmsTemplateName": jmsTemplateName,
       "jmsTemplateParent": jmsTemplateParent,
       "jmsTemplateBytesPagingEnabled": jmsTemplateBytesPagingEnabled,
       "jmsTemplateMessagesPagingEnabled": jmsTemplateMessagesPagingEnabled,
       "jmsFileStoreTable": jmsFileStoreTable,
       "jmsFileStoreEntry": jmsFileStoreEntry,
       "jmsFileStoreIndex": jmsFileStoreIndex,
       "jmsFileStoreObjectName": jmsFileStoreObjectName,
       "jmsFileStoreType": jmsFileStoreType,
       "jmsFileStoreName": jmsFileStoreName,
       "jmsFileStoreParent": jmsFileStoreParent,
       "jmsFileStoreJMSServer": jmsFileStoreJMSServer,
       "jmsFileStoreDirectory": jmsFileStoreDirectory,
       "jmsJDBCStoreTable": jmsJDBCStoreTable,
       "jmsJDBCStoreEntry": jmsJDBCStoreEntry,
       "jmsJDBCStoreIndex": jmsJDBCStoreIndex,
       "jmsJDBCStoreObjectName": jmsJDBCStoreObjectName,
       "jmsJDBCStoreType": jmsJDBCStoreType,
       "jmsJDBCStoreName": jmsJDBCStoreName,
       "jmsJDBCStoreParent": jmsJDBCStoreParent,
       "jmsJDBCStoreJMSServer": jmsJDBCStoreJMSServer,
       "jmsJDBCStoreConnectionPool": jmsJDBCStoreConnectionPool,
       "jmsJDBCStorePrefixName": jmsJDBCStorePrefixName,
       "jmsQueueTable": jmsQueueTable,
       "jmsQueueEntry": jmsQueueEntry,
       "jmsQueueIndex": jmsQueueIndex,
       "jmsQueueObjectName": jmsQueueObjectName,
       "jmsQueueType": jmsQueueType,
       "jmsQueueName": jmsQueueName,
       "jmsQueueParent": jmsQueueParent,
       "jmsQueueDestinationKeys": jmsQueueDestinationKeys,
       "jmsQueueBytesMaximum": jmsQueueBytesMaximum,
       "jmsQueueBytesThresholdHigh": jmsQueueBytesThresholdHigh,
       "jmsQueueBytesThresholdLow": jmsQueueBytesThresholdLow,
       "jmsQueueMessagesMaximum": jmsQueueMessagesMaximum,
       "jmsQueueMessagesThresholdHigh": jmsQueueMessagesThresholdHigh,
       "jmsQueueMessagesThresholdLow": jmsQueueMessagesThresholdLow,
       "jmsQueuePriorityOverride": jmsQueuePriorityOverride,
       "jmsQueueTimeToDeliverOverride": jmsQueueTimeToDeliverOverride,
       "jmsQueueRedeliveryDelayOverride": jmsQueueRedeliveryDelayOverride,
       "jmsQueueRedeliveryLimit": jmsQueueRedeliveryLimit,
       "jmsQueueErrorDestination": jmsQueueErrorDestination,
       "jmsQueueTimeToLiveOverride": jmsQueueTimeToLiveOverride,
       "jmsQueueDeliveryModeOverride": jmsQueueDeliveryModeOverride,
       "jmsQueueJNDIName": jmsQueueJNDIName,
       "jmsQueueStoreEnabled": jmsQueueStoreEnabled,
       "jmsServerTable": jmsServerTable,
       "jmsServerEntry": jmsServerEntry,
       "jmsServerIndex": jmsServerIndex,
       "jmsServerObjectName": jmsServerObjectName,
       "jmsServerType": jmsServerType,
       "jmsServerName": jmsServerName,
       "jmsServerParent": jmsServerParent,
       "jmsServerTargets": jmsServerTargets,
       "jmsServerSessionPools": jmsServerSessionPools,
       "jmsServerDestinations": jmsServerDestinations,
       "jmsServerStore": jmsServerStore,
       "jmsServerBytesMaximum": jmsServerBytesMaximum,
       "jmsServerBytesThresholdHigh": jmsServerBytesThresholdHigh,
       "jmsServerBytesThresholdLow": jmsServerBytesThresholdLow,
       "jmsServerMessagesMaximum": jmsServerMessagesMaximum,
       "jmsServerMessagesThresholdHigh": jmsServerMessagesThresholdHigh,
       "jmsServerMessagesThresholdLow": jmsServerMessagesThresholdLow,
       "jmsServerInsertionPausedAtStartup": jmsServerInsertionPausedAtStartup,
       "jmsServerStoreEnabled": jmsServerStoreEnabled,
       "jmsServerAllowsPersistentDowngrade": jmsServerAllowsPersistentDowngrade,
       "jmsServerExpirationScanInterval": jmsServerExpirationScanInterval,
       "jmsServerProductionPausedAtStartup": jmsServerProductionPausedAtStartup,
       "jmsServerTemporaryTemplateName": jmsServerTemporaryTemplateName,
       "jmsServerMaximumMessageSize": jmsServerMaximumMessageSize,
       "jmsServerDeploymentOrder": jmsServerDeploymentOrder,
       "jmsServerMessageBufferSize": jmsServerMessageBufferSize,
       "jmsServerBlockingSendPolicy": jmsServerBlockingSendPolicy,
       "jmsServerHostingTemporaryDestinations": jmsServerHostingTemporaryDestinations,
       "jmsServerPagingDirectory": jmsServerPagingDirectory,
       "jmsServerTemporaryTemplateResource": jmsServerTemporaryTemplateResource,
       "jmsServerConsumptionPausedAtStartup": jmsServerConsumptionPausedAtStartup,
       "jmsSessionPoolTable": jmsSessionPoolTable,
       "jmsSessionPoolEntry": jmsSessionPoolEntry,
       "jmsSessionPoolIndex": jmsSessionPoolIndex,
       "jmsSessionPoolObjectName": jmsSessionPoolObjectName,
       "jmsSessionPoolType": jmsSessionPoolType,
       "jmsSessionPoolName": jmsSessionPoolName,
       "jmsSessionPoolParent": jmsSessionPoolParent,
       "jmsSessionPoolConnectionConsumers": jmsSessionPoolConnectionConsumers,
       "jmsSessionPoolConnectionFactory": jmsSessionPoolConnectionFactory,
       "jmsSessionPoolListenerClass": jmsSessionPoolListenerClass,
       "jmsSessionPoolAcknowledgeMode": jmsSessionPoolAcknowledgeMode,
       "jmsSessionPoolSessionsMaximum": jmsSessionPoolSessionsMaximum,
       "jmsSessionPoolTransacted": jmsSessionPoolTransacted,
       "jmsTopicTable": jmsTopicTable,
       "jmsTopicEntry": jmsTopicEntry,
       "jmsTopicIndex": jmsTopicIndex,
       "jmsTopicObjectName": jmsTopicObjectName,
       "jmsTopicType": jmsTopicType,
       "jmsTopicName": jmsTopicName,
       "jmsTopicParent": jmsTopicParent,
       "jmsTopicDestinationKeys": jmsTopicDestinationKeys,
       "jmsTopicBytesMaximum": jmsTopicBytesMaximum,
       "jmsTopicBytesThresholdHigh": jmsTopicBytesThresholdHigh,
       "jmsTopicBytesThresholdLow": jmsTopicBytesThresholdLow,
       "jmsTopicMessagesMaximum": jmsTopicMessagesMaximum,
       "jmsTopicMessagesThresholdHigh": jmsTopicMessagesThresholdHigh,
       "jmsTopicMessagesThresholdLow": jmsTopicMessagesThresholdLow,
       "jmsTopicPriorityOverride": jmsTopicPriorityOverride,
       "jmsTopicTimeToDeliverOverride": jmsTopicTimeToDeliverOverride,
       "jmsTopicRedeliveryDelayOverride": jmsTopicRedeliveryDelayOverride,
       "jmsTopicRedeliveryLimit": jmsTopicRedeliveryLimit,
       "jmsTopicErrorDestination": jmsTopicErrorDestination,
       "jmsTopicTimeToLiveOverride": jmsTopicTimeToLiveOverride,
       "jmsTopicDeliveryModeOverride": jmsTopicDeliveryModeOverride,
       "jmsTopicJNDIName": jmsTopicJNDIName,
       "jmsTopicStoreEnabled": jmsTopicStoreEnabled,
       "jmsTopicMulticastAddress": jmsTopicMulticastAddress,
       "jmsTopicMulticastTTL": jmsTopicMulticastTTL,
       "jmsTopicMulticastPort": jmsTopicMulticastPort,
       "jmsVirtualDestinationTable": jmsVirtualDestinationTable,
       "jmsVirtualDestinationEntry": jmsVirtualDestinationEntry,
       "jmsVirtualDestinationIndex": jmsVirtualDestinationIndex,
       "jmsVirtualDestinationObjectName": jmsVirtualDestinationObjectName,
       "jmsVirtualDestinationType": jmsVirtualDestinationType,
       "jmsVirtualDestinationName": jmsVirtualDestinationName,
       "jmsVirtualDestinationParent": jmsVirtualDestinationParent,
       "jmsVirtualDestinationJNDIName": jmsVirtualDestinationJNDIName,
       "jtaTable": jtaTable,
       "jtaEntry": jtaEntry,
       "jtaIndex": jtaIndex,
       "jtaObjectName": jtaObjectName,
       "jtaType": jtaType,
       "jtaName": jtaName,
       "jtaParent": jtaParent,
       "jtaTimeoutSeconds": jtaTimeoutSeconds,
       "jtaAbandonTimeoutSeconds": jtaAbandonTimeoutSeconds,
       "jtaForgetHeuristics": jtaForgetHeuristics,
       "jtaBeforeCompletionIterationLimit": jtaBeforeCompletionIterationLimit,
       "jtaMaxTransactions": jtaMaxTransactions,
       "jtaMaxUniqueNameStatistics": jtaMaxUniqueNameStatistics,
       "jtaMaxResourceRequestsOnServer": jtaMaxResourceRequestsOnServer,
       "jtaMaxResourceUnavailableMillis": jtaMaxResourceUnavailableMillis,
       "jtaCheckpointIntervalSeconds": jtaCheckpointIntervalSeconds,
       "jtaSerializeEnlistmentsGCIntervalMillis": jtaSerializeEnlistmentsGCIntervalMillis,
       "jtaUnregisterResourceGracePeriod": jtaUnregisterResourceGracePeriod,
       "jtaSecurityInteropMode": jtaSecurityInteropMode,
       "jtaMaxXACallMillis": jtaMaxXACallMillis,
       "kernelTable": kernelTable,
       "kernelEntry": kernelEntry,
       "kernelIndex": kernelIndex,
       "kernelObjectName": kernelObjectName,
       "kernelType": kernelType,
       "kernelName": kernelName,
       "kernelParent": kernelParent,
       "kernelCompleteCOMMessageTimeout": kernelCompleteCOMMessageTimeout,
       "kernelCompleteHTTPMessageTimeout": kernelCompleteHTTPMessageTimeout,
       "kernelCompleteIIOPMessageTimeout": kernelCompleteIIOPMessageTimeout,
       "kernelCompleteT3MessageTimeout": kernelCompleteT3MessageTimeout,
       "kernelDefaultGIOPMinorVersion": kernelDefaultGIOPMinorVersion,
       "kernelDefaultProtocol": kernelDefaultProtocol,
       "kernelDefaultSecureProtocol": kernelDefaultSecureProtocol,
       "kernelDGCIdlePeriodsUntilTimeout": kernelDGCIdlePeriodsUntilTimeout,
       "kernelIdleIIOPConnectionTimeout": kernelIdleIIOPConnectionTimeout,
       "kernelMaxCOMMessageSize": kernelMaxCOMMessageSize,
       "kernelMaxHTTPMessageSize": kernelMaxHTTPMessageSize,
       "kernelMaxIIOPMessageSize": kernelMaxIIOPMessageSize,
       "kernelMaxOpenSockCount": kernelMaxOpenSockCount,
       "kernelMaxT3MessageSize": kernelMaxT3MessageSize,
       "kernelStdoutFormat": kernelStdoutFormat,
       "kernelStdoutSeverityLevel": kernelStdoutSeverityLevel,
       "kernelStuckThreadMaxTime": kernelStuckThreadMaxTime,
       "kernelStuckThreadTimerInterval": kernelStuckThreadTimerInterval,
       "kernelThreadPoolPercentSocketReaders": kernelThreadPoolPercentSocketReaders,
       "kernelInstrumentStackTraceEnabled": kernelInstrumentStackTraceEnabled,
       "kernelLogRemoteExceptionsEnabled": kernelLogRemoteExceptionsEnabled,
       "kernelNativeIOEnabled": kernelNativeIOEnabled,
       "kernelReverseDNSAllowed": kernelReverseDNSAllowed,
       "kernelStdoutDebugEnabled": kernelStdoutDebugEnabled,
       "kernelStdoutEnabled": kernelStdoutEnabled,
       "kernelStdoutLogStack": kernelStdoutLogStack,
       "logTable": logTable,
       "logEntry": logEntry,
       "logIndex": logIndex,
       "logObjectName": logObjectName,
       "logType": logType,
       "logName": logName,
       "logParent": logParent,
       "logFileName": logFileName,
       "logRotationType": logRotationType,
       "logNumberOfFilesLimited": logNumberOfFilesLimited,
       "logFileCount": logFileCount,
       "logFileTimeSpan": logFileTimeSpan,
       "logFileMinSize": logFileMinSize,
       "logRedirectStderrToServerLogEnabled": logRedirectStderrToServerLogEnabled,
       "logLogFileSeverity": logLogFileSeverity,
       "logLoggerSeverity": logLoggerSeverity,
       "logBufferSizeKB": logBufferSizeKB,
       "logMemoryBufferSeverity": logMemoryBufferSeverity,
       "logLog4jLoggingEnabled": logLog4jLoggingEnabled,
       "logRotationTime": logRotationTime,
       "logStdoutLogStack": logStdoutLogStack,
       "logRotateLogOnStartup": logRotateLogOnStartup,
       "logRedirectStdoutToServerLogEnabled": logRedirectStdoutToServerLogEnabled,
       "logMemoryBufferSize": logMemoryBufferSize,
       "logStdoutFormat": logStdoutFormat,
       "logDomainLogBroadcasterBufferSize": logDomainLogBroadcasterBufferSize,
       "logDateFormatPattern": logDateFormatPattern,
       "logDomainLogBroadcastSeverity": logDomainLogBroadcastSeverity,
       "logStdoutSeverity": logStdoutSeverity,
       "logLogFileRotationDir": logLogFileRotationDir,
       "networkChannelTable": networkChannelTable,
       "networkChannelEntry": networkChannelEntry,
       "networkChannelIndex": networkChannelIndex,
       "networkChannelObjectName": networkChannelObjectName,
       "networkChannelType": networkChannelType,
       "networkChannelName": networkChannelName,
       "networkChannelParent": networkChannelParent,
       "networkChannelAcceptBacklog": networkChannelAcceptBacklog,
       "networkChannelChannelWeight": networkChannelChannelWeight,
       "networkChannelClusterAddress": networkChannelClusterAddress,
       "networkChannelCompleteCOMMessageTimeout": networkChannelCompleteCOMMessageTimeout,
       "networkChannelCompleteHTTPMessageTimeout": networkChannelCompleteHTTPMessageTimeout,
       "networkChannelCompleteT3MessageTimeout": networkChannelCompleteT3MessageTimeout,
       "networkChannelDescription": networkChannelDescription,
       "networkChannelListenPort": networkChannelListenPort,
       "networkChannelLoginTimeoutMillis": networkChannelLoginTimeoutMillis,
       "networkChannelLoginTimeoutMillisSSL": networkChannelLoginTimeoutMillisSSL,
       "networkChannelMaxCOMMessageSize": networkChannelMaxCOMMessageSize,
       "networkChannelMaxT3MessageSize": networkChannelMaxT3MessageSize,
       "networkChannelMaxHTTPMessageSize": networkChannelMaxHTTPMessageSize,
       "networkChannelSSLListenPort": networkChannelSSLListenPort,
       "networkChannelTunnelingClientPingSecs": networkChannelTunnelingClientPingSecs,
       "networkChannelTunnelingClientTimeoutSecs": networkChannelTunnelingClientTimeoutSecs,
       "networkChannelBoundOutgoingEnabled": networkChannelBoundOutgoingEnabled,
       "networkChannelCOMEnabled": networkChannelCOMEnabled,
       "networkChannelHTTPEnabled": networkChannelHTTPEnabled,
       "networkChannelHTTPSEnabled": networkChannelHTTPSEnabled,
       "networkChannelListenPortEnabled": networkChannelListenPortEnabled,
       "networkChannelOutgoingEnabled": networkChannelOutgoingEnabled,
       "networkChannelSSLListenPortEnabled": networkChannelSSLListenPortEnabled,
       "networkChannelT3Enabled": networkChannelT3Enabled,
       "networkChannelT3SEnabled": networkChannelT3SEnabled,
       "networkChannelTunnelingEnabled": networkChannelTunnelingEnabled,
       "networkAccessPointTable": networkAccessPointTable,
       "networkAccessPointEntry": networkAccessPointEntry,
       "networkAccessPointIndex": networkAccessPointIndex,
       "networkAccessPointObjectName": networkAccessPointObjectName,
       "networkAccessPointType": networkAccessPointType,
       "networkAccessPointName": networkAccessPointName,
       "networkAccessPointParent": networkAccessPointParent,
       "networkAccessPointAcceptBacklog": networkAccessPointAcceptBacklog,
       "networkAccessPointCompleteCOMMessageTimeout": networkAccessPointCompleteCOMMessageTimeout,
       "networkAccessPointCompleteHTTPMessageTimeout": networkAccessPointCompleteHTTPMessageTimeout,
       "networkAccessPointCompleteT3MessageTimeout": networkAccessPointCompleteT3MessageTimeout,
       "networkAccessPointListenAddress": networkAccessPointListenAddress,
       "networkAccessPointListenPort": networkAccessPointListenPort,
       "networkAccessPointLoginTimeoutMillisSSL": networkAccessPointLoginTimeoutMillisSSL,
       "networkAccessPointLoginTimeoutMillis": networkAccessPointLoginTimeoutMillis,
       "networkAccessPointSSLListenPort": networkAccessPointSSLListenPort,
       "networkAccessPointTunnelingClientPingSecs": networkAccessPointTunnelingClientPingSecs,
       "networkAccessPointTunnelingClientTimeoutSecs": networkAccessPointTunnelingClientTimeoutSecs,
       "networkAccessPointUseFastSerialization": networkAccessPointUseFastSerialization,
       "networkAccessPointProxyPort": networkAccessPointProxyPort,
       "networkAccessPointTwoWaySSLEnabled": networkAccessPointTwoWaySSLEnabled,
       "networkAccessPointChannelWeight": networkAccessPointChannelWeight,
       "networkAccessPointHttpEnabledForThisProtocol": networkAccessPointHttpEnabledForThisProtocol,
       "networkAccessPointTimeoutConnectionWithPendingResponses": networkAccessPointTimeoutConnectionWithPendingResponses,
       "networkAccessPointOutboundEnabled": networkAccessPointOutboundEnabled,
       "networkAccessPointEnabled": networkAccessPointEnabled,
       "networkAccessPointCustomPrivateKeyAlias": networkAccessPointCustomPrivateKeyAlias,
       "networkAccessPointConnectTimeout": networkAccessPointConnectTimeout,
       "networkAccessPointMaxConnectedClients": networkAccessPointMaxConnectedClients,
       "networkAccessPointIdleConnectionTimeout": networkAccessPointIdleConnectionTimeout,
       "networkAccessPointMaxBackoffBetweenFailures": networkAccessPointMaxBackoffBetweenFailures,
       "networkAccessPointProtocol": networkAccessPointProtocol,
       "networkAccessPointPrivateKeyAlias": networkAccessPointPrivateKeyAlias,
       "networkAccessPointTunnelingEnabled": networkAccessPointTunnelingEnabled,
       "networkAccessPointClusterAddress": networkAccessPointClusterAddress,
       "networkAccessPointChannelIdentityCustomized": networkAccessPointChannelIdentityCustomized,
       "networkAccessPointMaxMessageSize": networkAccessPointMaxMessageSize,
       "networkAccessPointPublicPort": networkAccessPointPublicPort,
       "networkAccessPointOutboundPrivateKeyEnabled": networkAccessPointOutboundPrivateKeyEnabled,
       "networkAccessPointCompleteMessageTimeout": networkAccessPointCompleteMessageTimeout,
       "networkAccessPointPublicAddress": networkAccessPointPublicAddress,
       "networkAccessPointClientCertificateEnforced": networkAccessPointClientCertificateEnforced,
       "networkAccessPointPrivateKeyPassPhrase": networkAccessPointPrivateKeyPassPhrase,
       "networkAccessPointProxyAddress": networkAccessPointProxyAddress,
       "nodeManagerTable": nodeManagerTable,
       "nodeManagerEntry": nodeManagerEntry,
       "nodeManagerIndex": nodeManagerIndex,
       "nodeManagerObjectName": nodeManagerObjectName,
       "nodeManagerType": nodeManagerType,
       "nodeManagerName": nodeManagerName,
       "nodeManagerParent": nodeManagerParent,
       "nodeManagerListenAddress": nodeManagerListenAddress,
       "nodeManagerListenPort": nodeManagerListenPort,
       "nodeManagerShellCommand": nodeManagerShellCommand,
       "nodeManagerNodeManagerHome": nodeManagerNodeManagerHome,
       "nodeManagerDebugEnabled": nodeManagerDebugEnabled,
       "nodeManagerNMType": nodeManagerNMType,
       "rmcFactoryTable": rmcFactoryTable,
       "rmcFactoryEntry": rmcFactoryEntry,
       "rmcFactoryIndex": rmcFactoryIndex,
       "rmcFactoryObjectName": rmcFactoryObjectName,
       "rmcFactoryType": rmcFactoryType,
       "rmcFactoryName": rmcFactoryName,
       "rmcFactoryParent": rmcFactoryParent,
       "rmcFactoryJNDIName": rmcFactoryJNDIName,
       "securityTable": securityTable,
       "securityEntry": securityEntry,
       "securityIndex": securityIndex,
       "securityObjectName": securityObjectName,
       "securityType": securityType,
       "securityName": securityName,
       "securityParent": securityParent,
       "securityConnectionFilter": securityConnectionFilter,
       "securityConnectionFilterRules": securityConnectionFilterRules,
       "securityConnectionLoggerEnabled": securityConnectionLoggerEnabled,
       "serverTable": serverTable,
       "serverEntry": serverEntry,
       "serverIndex": serverIndex,
       "serverObjectName": serverObjectName,
       "serverType": serverType,
       "serverName": serverName,
       "serverParent": serverParent,
       "serverReverseDNSAllowed": serverReverseDNSAllowed,
       "serverDefaultProtocol": serverDefaultProtocol,
       "serverDefaultSecureProtocol": serverDefaultSecureProtocol,
       "serverThreadPoolSize": serverThreadPoolSize,
       "serverNativeIOEnabled": serverNativeIOEnabled,
       "serverThreadPoolPercentSocketReaders": serverThreadPoolPercentSocketReaders,
       "serverMaxT3MessageSize": serverMaxT3MessageSize,
       "serverMaxHTTPMessageSize": serverMaxHTTPMessageSize,
       "serverMaxIIOPMessageSize": serverMaxIIOPMessageSize,
       "serverCompleteT3MessageTimeout": serverCompleteT3MessageTimeout,
       "serverCompleteHTTPMessageTimeout": serverCompleteHTTPMessageTimeout,
       "serverCompleteIIOPMessageTimeout": serverCompleteIIOPMessageTimeout,
       "serverStdoutEnabled": serverStdoutEnabled,
       "serverStdoutSeverityLevel": serverStdoutSeverityLevel,
       "serverLogRemoteExceptionsEnabled": serverLogRemoteExceptionsEnabled,
       "serverInstrumentStackTraceEnabled": serverInstrumentStackTraceEnabled,
       "serverRootDirectory": serverRootDirectory,
       "serverMachine": serverMachine,
       "serverListenPort": serverListenPort,
       "serverLoginTimeout": serverLoginTimeout,
       "serverCluster": serverCluster,
       "serverClusterWeight": serverClusterWeight,
       "serverReplicationGroup": serverReplicationGroup,
       "serverPreferredSecondaryGroup": serverPreferredSecondaryGroup,
       "serverWebServer": serverWebServer,
       "serverExpectedToRun": serverExpectedToRun,
       "serverJDBCLoggingEnabled": serverJDBCLoggingEnabled,
       "serverJDBCLogFileName": serverJDBCLogFileName,
       "serverIIOPEnabled": serverIIOPEnabled,
       "serverDefaultIIOPUser": serverDefaultIIOPUser,
       "serverHttpdEnabled": serverHttpdEnabled,
       "serverConsoleInputEnabled": serverConsoleInputEnabled,
       "serverListenThreadStartDelaySecs": serverListenThreadStartDelaySecs,
       "serverListenAddress": serverListenAddress,
       "serverLoginTimeoutMillis": serverLoginTimeoutMillis,
       "serverAdministrationPort": serverAdministrationPort,
       "serverJavaCompiler": serverJavaCompiler,
       "serverJavaCompilerPreClassPath": serverJavaCompilerPreClassPath,
       "serverJavaCompilerPostClassPath": serverJavaCompilerPostClassPath,
       "serverExtraRmicOptions": serverExtraRmicOptions,
       "serverTransactionLogFilePrefix": serverTransactionLogFilePrefix,
       "serverEnabledForDomainLog": serverEnabledForDomainLog,
       "serverTunnelingEnabled": serverTunnelingEnabled,
       "serverTunnelingClientTimeoutSecs": serverTunnelingClientTimeoutSecs,
       "serverTunnelingClientPingSecs": serverTunnelingClientPingSecs,
       "serverJMSDefaultConnectionFactoriesEnabled": serverJMSDefaultConnectionFactoriesEnabled,
       "serverDomainLogFilter": serverDomainLogFilter,
       "serverAcceptBacklog": serverAcceptBacklog,
       "serverListenPortEnabled": serverListenPortEnabled,
       "serverUse81StyleExecuteQueues": serverUse81StyleExecuteQueues,
       "serverStagingMode": serverStagingMode,
       "serverLowMemoryGCThreshold": serverLowMemoryGCThreshold,
       "serverStagingDirectoryName": serverStagingDirectoryName,
       "serverGracefulShutdownTimeout": serverGracefulShutdownTimeout,
       "serverManagedServerIndependenceEnabled": serverManagedServerIndependenceEnabled,
       "serverStartupTimeout": serverStartupTimeout,
       "serverSocketBufferSizeAsChunkSize": serverSocketBufferSizeAsChunkSize,
       "serverRestartMax": serverRestartMax,
       "serverCompleteMessageTimeout": serverCompleteMessageTimeout,
       "serverServerLifeCycleTimeoutVal": serverServerLifeCycleTimeoutVal,
       "serverVerboseEJBDeploymentEnabled": serverVerboseEJBDeploymentEnabled,
       "serverAdminReconnectIntervalSeconds": serverAdminReconnectIntervalSeconds,
       "serverClientCertProxyEnabled": serverClientCertProxyEnabled,
       "serverRestartDelaySeconds": serverRestartDelaySeconds,
       "serverLowMemoryGranularityLevel": serverLowMemoryGranularityLevel,
       "serverSocketReaders": serverSocketReaders,
       "serverOutboundEnabled": serverOutboundEnabled,
       "serverJDBCLLRTableName": serverJDBCLLRTableName,
       "serverInterfaceAddress": serverInterfaceAddress,
       "serverExtraEjbcOptions": serverExtraEjbcOptions,
       "serverCOMEnabled": serverCOMEnabled,
       "serverMessageIdPrefixEnabled": serverMessageIdPrefixEnabled,
       "serverAutoRestart": serverAutoRestart,
       "serverIgnoreSessionsDuringShutdown": serverIgnoreSessionsDuringShutdown,
       "serverDefaultTGIOPUser": serverDefaultTGIOPUser,
       "serverMaxOpenSockCount": serverMaxOpenSockCount,
       "serverLowMemorySampleSize": serverLowMemorySampleSize,
       "serverAutoKillIfFailed": serverAutoKillIfFailed,
       "serverCustomIdentityKeyStoreFileName": serverCustomIdentityKeyStoreFileName,
       "serverTGIOPEnabled": serverTGIOPEnabled,
       "serverHealthCheckStartDelaySeconds": serverHealthCheckStartDelaySeconds,
       "serverUploadDirectoryName": serverUploadDirectoryName,
       "serverWeblogicPluginEnabled": serverWeblogicPluginEnabled,
       "serverJDBCLoginTimeoutSeconds": serverJDBCLoginTimeoutSeconds,
       "serverClasspathServletDisabled": serverClasspathServletDisabled,
       "serverIdleConnectionTimeout": serverIdleConnectionTimeout,
       "serverDefaultInternalServletsDisabled": serverDefaultInternalServletsDisabled,
       "serverMaxMessageSize": serverMaxMessageSize,
       "serverCustomTrustKeyStoreType": serverCustomTrustKeyStoreType,
       "serverListenersBindEarly": serverListenersBindEarly,
       "serverLowMemoryTimeInterval": serverLowMemoryTimeInterval,
       "serverTransactionLogFileWritePolicy": serverTransactionLogFileWritePolicy,
       "serverHttpTraceSupportEnabled": serverHttpTraceSupportEnabled,
       "serverKeyStores": serverKeyStores,
       "serverAutoMigrationEnabled": serverAutoMigrationEnabled,
       "serverPeriodLength": serverPeriodLength,
       "serverStuckThreadTimerInterval": serverStuckThreadTimerInterval,
       "serverDGCIdlePeriodsUntilTimeout": serverDGCIdlePeriodsUntilTimeout,
       "serverMuxerClass": serverMuxerClass,
       "serverHealthCheckIntervalSeconds": serverHealthCheckIntervalSeconds,
       "serverRestartIntervalSeconds": serverRestartIntervalSeconds,
       "serverIdlePeriodsUntilTimeout": serverIdlePeriodsUntilTimeout,
       "serverCustomTrustKeyStoreFileName": serverCustomTrustKeyStoreFileName,
       "serverHostsMigratableServices": serverHostsMigratableServices,
       "serverExternalDNSName": serverExternalDNSName,
       "serverOutboundPrivateKeyEnabled": serverOutboundPrivateKeyEnabled,
       "serverAdministrationProtocol": serverAdministrationProtocol,
       "serverCustomIdentityKeyStoreType": serverCustomIdentityKeyStoreType,
       "serverStartupMode": serverStartupMode,
       "serverNMSocketCreateTimeoutInMillis": serverNMSocketCreateTimeoutInMillis,
       "serverStartTable": serverStartTable,
       "serverStartEntry": serverStartEntry,
       "serverStartIndex": serverStartIndex,
       "serverStartObjectName": serverStartObjectName,
       "serverStartType": serverStartType,
       "serverStartName": serverStartName,
       "serverStartParent": serverStartParent,
       "serverStartArguments": serverStartArguments,
       "serverStartBeaHome": serverStartBeaHome,
       "serverStartClassPath": serverStartClassPath,
       "serverStartJavaHome": serverStartJavaHome,
       "serverStartRootDirectory": serverStartRootDirectory,
       "serverStartSecurityPolicyFile": serverStartSecurityPolicyFile,
       "serverStartUsername": serverStartUsername,
       "serverStartJavaVendor": serverStartJavaVendor,
       "snmpAgentTable": snmpAgentTable,
       "snmpAgentEntry": snmpAgentEntry,
       "snmpAgentIndex": snmpAgentIndex,
       "snmpAgentObjectName": snmpAgentObjectName,
       "snmpAgentType": snmpAgentType,
       "snmpAgentName": snmpAgentName,
       "snmpAgentParent": snmpAgentParent,
       "snmpAgentCommunityPrefix": snmpAgentCommunityPrefix,
       "snmpAgentDebugLevel": snmpAgentDebugLevel,
       "snmpAgentMibDataRefreshInterval": snmpAgentMibDataRefreshInterval,
       "snmpAgentServerStatusCheckIntervalFactor": snmpAgentServerStatusCheckIntervalFactor,
       "snmpAgentSNMPPort": snmpAgentSNMPPort,
       "snmpAgentSNMPTrapVersion": snmpAgentSNMPTrapVersion,
       "snmpAgentEnabled": snmpAgentEnabled,
       "snmpAgentSendAutomaticTrapsEnabled": snmpAgentSendAutomaticTrapsEnabled,
       "sslTable": sslTable,
       "sslEntry": sslEntry,
       "sslIndex": sslIndex,
       "sslObjectName": sslObjectName,
       "sslType": sslType,
       "sslName": sslName,
       "sslParent": sslParent,
       "sslExportKeyLifespan": sslExportKeyLifespan,
       "sslHostnameVerifier": sslHostnameVerifier,
       "sslIdentityAndTrustLocations": sslIdentityAndTrustLocations,
       "sslListenPort": sslListenPort,
       "sslLoginTimeoutMillis": sslLoginTimeoutMillis,
       "sslServerCertificateChainFileName": sslServerCertificateChainFileName,
       "sslServerCertificateFileName": sslServerCertificateFileName,
       "sslServerPrivateKeyAlias": sslServerPrivateKeyAlias,
       "sslClientCertificateEnforced": sslClientCertificateEnforced,
       "sslEnabled": sslEnabled,
       "sslHostnameVerificationIgnored": sslHostnameVerificationIgnored,
       "sslSSLRejectionLoggingEnabled": sslSSLRejectionLoggingEnabled,
       "sslTwoWaySSLEnabled": sslTwoWaySSLEnabled,
       "sslOutboundCertificateValidation": sslOutboundCertificateValidation,
       "sslInboundCertificateValidation": sslInboundCertificateValidation,
       "sslCertAuthenticator": sslCertAuthenticator,
       "sslUseServerCerts": sslUseServerCerts,
       "sslAllowUnencryptedNullCipher": sslAllowUnencryptedNullCipher,
       "startupClassTable": startupClassTable,
       "startupClassEntry": startupClassEntry,
       "startupClassIndex": startupClassIndex,
       "startupClassObjectName": startupClassObjectName,
       "startupClassType": startupClassType,
       "startupClassName": startupClassName,
       "startupClassParent": startupClassParent,
       "startupClassFailureIsFatal": startupClassFailureIsFatal,
       "startupClassDeploymentOrder": startupClassDeploymentOrder,
       "startupClassLoadBeforeAppDeployments": startupClassLoadBeforeAppDeployments,
       "startupClassArguments": startupClassArguments,
       "startupClassClassName": startupClassClassName,
       "startupClassLoadBeforeAppActivation": startupClassLoadBeforeAppActivation,
       "webAppComponentTable": webAppComponentTable,
       "webAppComponentEntry": webAppComponentEntry,
       "webAppComponentIndex": webAppComponentIndex,
       "webAppComponentObjectName": webAppComponentObjectName,
       "webAppComponentType": webAppComponentType,
       "webAppComponentName": webAppComponentName,
       "webAppComponentParent": webAppComponentParent,
       "webAppComponentApplication": webAppComponentApplication,
       "webAppComponentURI": webAppComponentURI,
       "webAppComponentWebServers": webAppComponentWebServers,
       "webAppComponentIndexDirectoryEnabled": webAppComponentIndexDirectoryEnabled,
       "webAppComponentServletExtensionCaseSensitive": webAppComponentServletExtensionCaseSensitive,
       "webAppComponentServletReloadCheckSecs": webAppComponentServletReloadCheckSecs,
       "webAppComponentSingleThreadedServletPoolSize": webAppComponentSingleThreadedServletPoolSize,
       "webAppComponentAuthRealmName": webAppComponentAuthRealmName,
       "webServerTable": webServerTable,
       "webServerEntry": webServerEntry,
       "webServerIndex": webServerIndex,
       "webServerObjectName": webServerObjectName,
       "webServerType": webServerType,
       "webServerName": webServerName,
       "webServerParent": webServerParent,
       "webServerTargets": webServerTargets,
       "webServerLoggingEnabled": webServerLoggingEnabled,
       "webServerLogFileFormat": webServerLogFileFormat,
       "webServerLogFileBufferKBytes": webServerLogFileBufferKBytes,
       "webServerMaxLogFileSizeKBytes": webServerMaxLogFileSizeKBytes,
       "webServerLogRotationPeriodMins": webServerLogRotationPeriodMins,
       "webServerLogFileFlushSecs": webServerLogFileFlushSecs,
       "webServerLogRotationTimeBegin": webServerLogRotationTimeBegin,
       "webServerKeepAliveEnabled": webServerKeepAliveEnabled,
       "webServerKeepAliveSecs": webServerKeepAliveSecs,
       "webServerHttpsKeepAliveSecs": webServerHttpsKeepAliveSecs,
       "webServerPostTimeoutSecs": webServerPostTimeoutSecs,
       "webServerMaxPostTimeSecs": webServerMaxPostTimeSecs,
       "webServerMaxPostSize": webServerMaxPostSize,
       "webServerDefaultWebApp": webServerDefaultWebApp,
       "webServerCharsets": webServerCharsets,
       "webServerWAPEnabled": webServerWAPEnabled,
       "webServerURLResource": webServerURLResource,
       "wlecConnectionPoolTable": wlecConnectionPoolTable,
       "wlecConnectionPoolEntry": wlecConnectionPoolEntry,
       "wlecConnectionPoolIndex": wlecConnectionPoolIndex,
       "wlecConnectionPoolObjectName": wlecConnectionPoolObjectName,
       "wlecConnectionPoolType": wlecConnectionPoolType,
       "wlecConnectionPoolName": wlecConnectionPoolName,
       "wlecConnectionPoolParent": wlecConnectionPoolParent,
       "wlecConnectionPoolPrimaryAddresses": wlecConnectionPoolPrimaryAddresses,
       "wlecConnectionPoolFailoverAddresses": wlecConnectionPoolFailoverAddresses,
       "wlecConnectionPoolMinimumPoolSize": wlecConnectionPoolMinimumPoolSize,
       "wlecConnectionPoolMaximumPoolSize": wlecConnectionPoolMaximumPoolSize,
       "wlecConnectionPoolUserName": wlecConnectionPoolUserName,
       "wlecConnectionPoolUserRole": wlecConnectionPoolUserRole,
       "wlecConnectionPoolWLEDomain": wlecConnectionPoolWLEDomain,
       "wlecConnectionPoolMinimumEncryptionLevel": wlecConnectionPoolMinimumEncryptionLevel,
       "wlecConnectionPoolMaximumEncryptionLevel": wlecConnectionPoolMaximumEncryptionLevel,
       "wlecConnectionPoolCertificateAuthenticationEnabled": wlecConnectionPoolCertificateAuthenticationEnabled,
       "wlecConnectionPoolSecurityContextEnabled": wlecConnectionPoolSecurityContextEnabled,
       "wlecConnectionPoolTargets": wlecConnectionPoolTargets,
       "wlecConnectionPoolDeploymentOrder": wlecConnectionPoolDeploymentOrder,
       "bridgeDestinationTable": bridgeDestinationTable,
       "bridgeDestinationEntry": bridgeDestinationEntry,
       "bridgeDestinationIndex": bridgeDestinationIndex,
       "bridgeDestinationObjectName": bridgeDestinationObjectName,
       "bridgeDestinationType": bridgeDestinationType,
       "bridgeDestinationName": bridgeDestinationName,
       "bridgeDestinationParent": bridgeDestinationParent,
       "bridgeDestinationAdapterJNDIName": bridgeDestinationAdapterJNDIName,
       "messagingBridgeTable": messagingBridgeTable,
       "messagingBridgeEntry": messagingBridgeEntry,
       "messagingBridgeIndex": messagingBridgeIndex,
       "messagingBridgeObjectName": messagingBridgeObjectName,
       "messagingBridgeType": messagingBridgeType,
       "messagingBridgeName": messagingBridgeName,
       "messagingBridgeParent": messagingBridgeParent,
       "messagingBridgeTargets": messagingBridgeTargets,
       "messagingBridgeSourceDestination": messagingBridgeSourceDestination,
       "messagingBridgeTargetDestination": messagingBridgeTargetDestination,
       "messagingBridgeSelector": messagingBridgeSelector,
       "messagingBridgeForwardingPolicy": messagingBridgeForwardingPolicy,
       "messagingBridgeScheduleTime": messagingBridgeScheduleTime,
       "messagingBridgeQualityOfService": messagingBridgeQualityOfService,
       "messagingBridgeIdleTimeMaximum": messagingBridgeIdleTimeMaximum,
       "messagingBridgeTransactionTimeout": messagingBridgeTransactionTimeout,
       "messagingBridgeAsyncDisabled": messagingBridgeAsyncDisabled,
       "messagingBridgeQOSDegradationAllowed": messagingBridgeQOSDegradationAllowed,
       "messagingBridgeDurabilityEnabled": messagingBridgeDurabilityEnabled,
       "messagingBridgeReconnectDelayMinimum": messagingBridgeReconnectDelayMinimum,
       "messagingBridgePreserveMsgProperty": messagingBridgePreserveMsgProperty,
       "messagingBridgeBatchSize": messagingBridgeBatchSize,
       "messagingBridgeReconnectDelayMaximum": messagingBridgeReconnectDelayMaximum,
       "messagingBridgeDeploymentOrder": messagingBridgeDeploymentOrder,
       "messagingBridgeAsyncEnabled": messagingBridgeAsyncEnabled,
       "messagingBridgeBatchInterval": messagingBridgeBatchInterval,
       "messagingBridgeStarted": messagingBridgeStarted,
       "messagingBridgeReconnectDelayIncrease": messagingBridgeReconnectDelayIncrease,
       "virtualHostTable": virtualHostTable,
       "virtualHostEntry": virtualHostEntry,
       "virtualHostIndex": virtualHostIndex,
       "virtualHostObjectName": virtualHostObjectName,
       "virtualHostType": virtualHostType,
       "virtualHostName": virtualHostName,
       "virtualHostParent": virtualHostParent,
       "virtualHostTargets": virtualHostTargets,
       "virtualHostLoggingEnabled": virtualHostLoggingEnabled,
       "virtualHostLogFileFormat": virtualHostLogFileFormat,
       "virtualHostLogFileName": virtualHostLogFileName,
       "virtualHostLogFileBufferKBytes": virtualHostLogFileBufferKBytes,
       "virtualHostMaxLogFileSizeKBytes": virtualHostMaxLogFileSizeKBytes,
       "virtualHostLogRotationType": virtualHostLogRotationType,
       "virtualHostLogRotationPeriodMins": virtualHostLogRotationPeriodMins,
       "virtualHostLogFileFlushSecs": virtualHostLogFileFlushSecs,
       "virtualHostLogRotationTimeBegin": virtualHostLogRotationTimeBegin,
       "virtualHostKeepAliveEnabled": virtualHostKeepAliveEnabled,
       "virtualHostKeepAliveSecs": virtualHostKeepAliveSecs,
       "virtualHostHttpsKeepAliveSecs": virtualHostHttpsKeepAliveSecs,
       "virtualHostPostTimeoutSecs": virtualHostPostTimeoutSecs,
       "virtualHostMaxPostTimeSecs": virtualHostMaxPostTimeSecs,
       "virtualHostMaxPostSize": virtualHostMaxPostSize,
       "virtualHostDefaultWebApp": virtualHostDefaultWebApp,
       "virtualHostCharsets": virtualHostCharsets,
       "virtualHostWAPEnabled": virtualHostWAPEnabled,
       "virtualHostURLResource": virtualHostURLResource,
       "virtualHostVirtualHostNames": virtualHostVirtualHostNames,
       "virtualHostFrontendHTTPPort": virtualHostFrontendHTTPPort,
       "virtualHostAuthCookieEnabled": virtualHostAuthCookieEnabled,
       "virtualHostSingleSignonDisabled": virtualHostSingleSignonDisabled,
       "virtualHostChunkedTransferDisabled": virtualHostChunkedTransferDisabled,
       "virtualHostAcceptContextPathInGetRealPath": virtualHostAcceptContextPathInGetRealPath,
       "virtualHostOverloadResponseCode": virtualHostOverloadResponseCode,
       "virtualHostDeploymentOrder": virtualHostDeploymentOrder,
       "virtualHostNetworkAccessPoint": virtualHostNetworkAccessPoint,
       "virtualHostSendServerHeaderEnabled": virtualHostSendServerHeaderEnabled,
       "virtualHostFrontendHost": virtualHostFrontendHost,
       "virtualHostWriteChunkBytes": virtualHostWriteChunkBytes,
       "virtualHostFrontendHTTPSPort": virtualHostFrontendHTTPSPort,
       "virtualHostUseHeaderEncoding": virtualHostUseHeaderEncoding,
       "virtualHostUseHighestCompatibleHTTPVersion": virtualHostUseHighestCompatibleHTTPVersion,
       "virtualHostDefaultWebAppContextRoot": virtualHostDefaultWebAppContextRoot,
       "xmlEntityCacheTable": xmlEntityCacheTable,
       "xmlEntityCacheEntry": xmlEntityCacheEntry,
       "xmlEntityCacheIndex": xmlEntityCacheIndex,
       "xmlEntityCacheObjectName": xmlEntityCacheObjectName,
       "xmlEntityCacheType": xmlEntityCacheType,
       "xmlEntityCacheName": xmlEntityCacheName,
       "xmlEntityCacheParent": xmlEntityCacheParent,
       "xmlEntityCacheCacheMemorySize": xmlEntityCacheCacheMemorySize,
       "xmlEntityCacheCacheDiskSize": xmlEntityCacheCacheDiskSize,
       "xmlEntityCacheCacheTimeoutInterval": xmlEntityCacheCacheTimeoutInterval,
       "xmlEntityCacheCacheLocation": xmlEntityCacheCacheLocation,
       "xmlEntityCacheMaxSize": xmlEntityCacheMaxSize,
       "xmlEntitySpecRegistryTable": xmlEntitySpecRegistryTable,
       "xmlEntitySpecRegistryEntry": xmlEntitySpecRegistryEntry,
       "xmlEntitySpecRegistryIndex": xmlEntitySpecRegistryIndex,
       "xmlEntitySpecRegistryObjectName": xmlEntitySpecRegistryObjectName,
       "xmlEntitySpecRegistryType": xmlEntitySpecRegistryType,
       "xmlEntitySpecRegistryName": xmlEntitySpecRegistryName,
       "xmlEntitySpecRegistryParent": xmlEntitySpecRegistryParent,
       "xmlEntitySpecRegistryPublicId": xmlEntitySpecRegistryPublicId,
       "xmlEntitySpecRegistrySystemId": xmlEntitySpecRegistrySystemId,
       "xmlEntitySpecRegistryEntityURI": xmlEntitySpecRegistryEntityURI,
       "xmlEntitySpecRegistryWhenToCache": xmlEntitySpecRegistryWhenToCache,
       "xmlEntitySpecRegistryCacheTimeoutInterval": xmlEntitySpecRegistryCacheTimeoutInterval,
       "xmlEntitySpecRegistryHandleEntityInvalidation": xmlEntitySpecRegistryHandleEntityInvalidation,
       "xmlParserSelectRegistryTable": xmlParserSelectRegistryTable,
       "xmlParserSelectRegistryEntry": xmlParserSelectRegistryEntry,
       "xmlParserSelectRegistryIndex": xmlParserSelectRegistryIndex,
       "xmlParserSelectRegistryObjectName": xmlParserSelectRegistryObjectName,
       "xmlParserSelectRegistryType": xmlParserSelectRegistryType,
       "xmlParserSelectRegistryName": xmlParserSelectRegistryName,
       "xmlParserSelectRegistryParent": xmlParserSelectRegistryParent,
       "xmlParserSelectRegistryPublicId": xmlParserSelectRegistryPublicId,
       "xmlParserSelectRegistrySystemId": xmlParserSelectRegistrySystemId,
       "xmlParserSelectRegistryRootElementTag": xmlParserSelectRegistryRootElementTag,
       "xmlParserSelectRegistryDocumentBuilderFactory": xmlParserSelectRegistryDocumentBuilderFactory,
       "xmlParserSelectRegistrySAXParserFactory": xmlParserSelectRegistrySAXParserFactory,
       "xmlParserSelectRegistryTransformerFactory": xmlParserSelectRegistryTransformerFactory,
       "xmlRegistryTable": xmlRegistryTable,
       "xmlRegistryEntry": xmlRegistryEntry,
       "xmlRegistryIndex": xmlRegistryIndex,
       "xmlRegistryObjectName": xmlRegistryObjectName,
       "xmlRegistryType": xmlRegistryType,
       "xmlRegistryName": xmlRegistryName,
       "xmlRegistryParent": xmlRegistryParent,
       "xmlRegistryRegistryEntries": xmlRegistryRegistryEntries,
       "xmlRegistryParserSelectRegistryEntries": xmlRegistryParserSelectRegistryEntries,
       "xmlRegistryEntitySpecRegistryEntries": xmlRegistryEntitySpecRegistryEntries,
       "xmlRegistryDocumentBuilderFactory": xmlRegistryDocumentBuilderFactory,
       "xmlRegistrySAXParserFactory": xmlRegistrySAXParserFactory,
       "xmlRegistryTransformerFactory": xmlRegistryTransformerFactory,
       "xmlRegistryWhenToCache": xmlRegistryWhenToCache,
       "xmlRegistryHandleEntityInvalidation": xmlRegistryHandleEntityInvalidation,
       "wtctBridgeGlobalTable": wtctBridgeGlobalTable,
       "wtctBridgeGlobalEntry": wtctBridgeGlobalEntry,
       "wtctBridgeGlobalIndex": wtctBridgeGlobalIndex,
       "wtctBridgeGlobalObjectName": wtctBridgeGlobalObjectName,
       "wtctBridgeGlobalType": wtctBridgeGlobalType,
       "wtctBridgeGlobalName": wtctBridgeGlobalName,
       "wtctBridgeGlobalParent": wtctBridgeGlobalParent,
       "wtctBridgeGlobalAllowNonStandardTypes": wtctBridgeGlobalAllowNonStandardTypes,
       "wtctBridgeGlobalDefaultReplyDeliveryMode": wtctBridgeGlobalDefaultReplyDeliveryMode,
       "wtctBridgeGlobalDeliveryModeOverride": wtctBridgeGlobalDeliveryModeOverride,
       "wtctBridgeGlobalJmsFactory": wtctBridgeGlobalJmsFactory,
       "wtctBridgeGlobalJmsToTuxPriorityMap": wtctBridgeGlobalJmsToTuxPriorityMap,
       "wtctBridgeGlobalJndiFactory": wtctBridgeGlobalJndiFactory,
       "wtctBridgeGlobalRetries": wtctBridgeGlobalRetries,
       "wtctBridgeGlobalRetryDelay": wtctBridgeGlobalRetryDelay,
       "wtctBridgeGlobalTimeout": wtctBridgeGlobalTimeout,
       "wtctBridgeGlobalTransactional": wtctBridgeGlobalTransactional,
       "wtctBridgeGlobalTuxErrorQueue": wtctBridgeGlobalTuxErrorQueue,
       "wtctBridgeGlobalTuxFactory": wtctBridgeGlobalTuxFactory,
       "wtctBridgeGlobalTuxToJmsPriorityMap": wtctBridgeGlobalTuxToJmsPriorityMap,
       "wtctBridgeGlobalUserId": wtctBridgeGlobalUserId,
       "wtctBridgeGlobalWlsErrorDestination": wtctBridgeGlobalWlsErrorDestination,
       "wtcExportTable": wtcExportTable,
       "wtcExportEntry": wtcExportEntry,
       "wtcExportIndex": wtcExportIndex,
       "wtcExportObjectName": wtcExportObjectName,
       "wtcExportType": wtcExportType,
       "wtcExportName": wtcExportName,
       "wtcExportParent": wtcExportParent,
       "wtcExportEJBName": wtcExportEJBName,
       "wtcExportLocalAccessPoint": wtcExportLocalAccessPoint,
       "wtcExportRemoteName": wtcExportRemoteName,
       "wtcExportResourceName": wtcExportResourceName,
       "wtcImportTable": wtcImportTable,
       "wtcImportEntry": wtcImportEntry,
       "wtcImportIndex": wtcImportIndex,
       "wtcImportObjectName": wtcImportObjectName,
       "wtcImportType": wtcImportType,
       "wtcImportName": wtcImportName,
       "wtcImportParent": wtcImportParent,
       "wtcImportRemoteAccessPointList": wtcImportRemoteAccessPointList,
       "wtcImportLocalAccessPoint": wtcImportLocalAccessPoint,
       "wtcImportRemoteName": wtcImportRemoteName,
       "wtcImportResourceName": wtcImportResourceName,
       "wtcLocalTuxDomTable": wtcLocalTuxDomTable,
       "wtcLocalTuxDomEntry": wtcLocalTuxDomEntry,
       "wtcLocalTuxDomIndex": wtcLocalTuxDomIndex,
       "wtcLocalTuxDomObjectName": wtcLocalTuxDomObjectName,
       "wtcLocalTuxDomType": wtcLocalTuxDomType,
       "wtcLocalTuxDomName": wtcLocalTuxDomName,
       "wtcLocalTuxDomParent": wtcLocalTuxDomParent,
       "wtcLocalTuxDomAccessPoint": wtcLocalTuxDomAccessPoint,
       "wtcLocalTuxDomAccessPointId": wtcLocalTuxDomAccessPointId,
       "wtcLocalTuxDomBlockTime": wtcLocalTuxDomBlockTime,
       "wtcLocalTuxDomCmpLimit": wtcLocalTuxDomCmpLimit,
       "wtcLocalTuxDomConnectionPolicy": wtcLocalTuxDomConnectionPolicy,
       "wtcLocalTuxDomConnPrincipalName": wtcLocalTuxDomConnPrincipalName,
       "wtcLocalTuxDomInteroperate": wtcLocalTuxDomInteroperate,
       "wtcLocalTuxDomMaxEncryptBits": wtcLocalTuxDomMaxEncryptBits,
       "wtcLocalTuxDomMaxRetries": wtcLocalTuxDomMaxRetries,
       "wtcLocalTuxDomMinEncryptBits": wtcLocalTuxDomMinEncryptBits,
       "wtcLocalTuxDomNWAddr": wtcLocalTuxDomNWAddr,
       "wtcLocalTuxDomRetryInterval": wtcLocalTuxDomRetryInterval,
       "wtcLocalTuxDomSecurity": wtcLocalTuxDomSecurity,
       "wtcLocalTuxDomKeyStoresLocation": wtcLocalTuxDomKeyStoresLocation,
       "wtcLocalTuxDomSSLRenegotiation": wtcLocalTuxDomSSLRenegotiation,
       "wtcLocalTuxDomUseSSL": wtcLocalTuxDomUseSSL,
       "wtcLocalTuxDomKeepAliveWait": wtcLocalTuxDomKeepAliveWait,
       "wtcLocalTuxDomTrustKeyStoreFileName": wtcLocalTuxDomTrustKeyStoreFileName,
       "wtcLocalTuxDomKeepAlive": wtcLocalTuxDomKeepAlive,
       "wtcLocalTuxDomPrivateKeyAlias": wtcLocalTuxDomPrivateKeyAlias,
       "wtcLocalTuxDomIdentityKeyStoreFileName": wtcLocalTuxDomIdentityKeyStoreFileName,
       "wtcRemoteTuxDomTable": wtcRemoteTuxDomTable,
       "wtcRemoteTuxDomEntry": wtcRemoteTuxDomEntry,
       "wtcRemoteTuxDomIndex": wtcRemoteTuxDomIndex,
       "wtcRemoteTuxDomObjectName": wtcRemoteTuxDomObjectName,
       "wtcRemoteTuxDomType": wtcRemoteTuxDomType,
       "wtcRemoteTuxDomName": wtcRemoteTuxDomName,
       "wtcRemoteTuxDomParent": wtcRemoteTuxDomParent,
       "wtcRemoteTuxDomAccessPoint": wtcRemoteTuxDomAccessPoint,
       "wtcRemoteTuxDomAccessPointId": wtcRemoteTuxDomAccessPointId,
       "wtcRemoteTuxDomAclPolicy": wtcRemoteTuxDomAclPolicy,
       "wtcRemoteTuxDomCmpLimit": wtcRemoteTuxDomCmpLimit,
       "wtcRemoteTuxDomConnectionPolicy": wtcRemoteTuxDomConnectionPolicy,
       "wtcRemoteTuxDomConnPrincipalName": wtcRemoteTuxDomConnPrincipalName,
       "wtcRemoteTuxDomCredentialPolicy": wtcRemoteTuxDomCredentialPolicy,
       "wtcRemoteTuxDomMaxEncryptBits": wtcRemoteTuxDomMaxEncryptBits,
       "wtcRemoteTuxDomMaxRetries": wtcRemoteTuxDomMaxRetries,
       "wtcRemoteTuxDomMinEncryptBits": wtcRemoteTuxDomMinEncryptBits,
       "wtcRemoteTuxDomNWAddr": wtcRemoteTuxDomNWAddr,
       "wtcRemoteTuxDomRetryInterval": wtcRemoteTuxDomRetryInterval,
       "wtcRemoteTuxDomTpUsrFile": wtcRemoteTuxDomTpUsrFile,
       "wtcRemoteTuxDomFederationName": wtcRemoteTuxDomFederationName,
       "wtcRemoteTuxDomFederationURL": wtcRemoteTuxDomFederationURL,
       "wtcRemoteTuxDomLocalAccessPoint": wtcRemoteTuxDomLocalAccessPoint,
       "wtcRemoteTuxDomDefaultAppKey": wtcRemoteTuxDomDefaultAppKey,
       "wtcRemoteTuxDomCustomAppKeyClass": wtcRemoteTuxDomCustomAppKeyClass,
       "wtcRemoteTuxDomTuxedoGidKw": wtcRemoteTuxDomTuxedoGidKw,
       "wtcRemoteTuxDomAllowAnonymous": wtcRemoteTuxDomAllowAnonymous,
       "wtcRemoteTuxDomKeepAliveWait": wtcRemoteTuxDomKeepAliveWait,
       "wtcRemoteTuxDomCustomAppKeyClassParam": wtcRemoteTuxDomCustomAppKeyClassParam,
       "wtcRemoteTuxDomTuxedoUidKw": wtcRemoteTuxDomTuxedoUidKw,
       "wtcRemoteTuxDomKeepAlive": wtcRemoteTuxDomKeepAlive,
       "wtcRemoteTuxDomAppKey": wtcRemoteTuxDomAppKey,
       "wtctBridgeRedirectTable": wtctBridgeRedirectTable,
       "wtctBridgeRedirectEntry": wtctBridgeRedirectEntry,
       "wtctBridgeRedirectIndex": wtctBridgeRedirectIndex,
       "wtctBridgeRedirectObjectName": wtctBridgeRedirectObjectName,
       "wtctBridgeRedirectType": wtctBridgeRedirectType,
       "wtctBridgeRedirectName": wtctBridgeRedirectName,
       "wtctBridgeRedirectParent": wtctBridgeRedirectParent,
       "wtctBridgeRedirectDirection": wtctBridgeRedirectDirection,
       "wtctBridgeRedirectMetaDataFile": wtctBridgeRedirectMetaDataFile,
       "wtctBridgeRedirectReplyQ": wtctBridgeRedirectReplyQ,
       "wtctBridgeRedirectSourceAccessPoint": wtctBridgeRedirectSourceAccessPoint,
       "wtctBridgeRedirectSourceName": wtctBridgeRedirectSourceName,
       "wtctBridgeRedirectSourceQspace": wtctBridgeRedirectSourceQspace,
       "wtctBridgeRedirectTargetAccessPoint": wtctBridgeRedirectTargetAccessPoint,
       "wtctBridgeRedirectTargetName": wtctBridgeRedirectTargetName,
       "wtctBridgeRedirectTargetQspace": wtctBridgeRedirectTargetQspace,
       "wtctBridgeRedirectTranslateFML": wtctBridgeRedirectTranslateFML,
       "wsReliableDeliveryPolicyTable": wsReliableDeliveryPolicyTable,
       "wsReliableDeliveryPolicyEntry": wsReliableDeliveryPolicyEntry,
       "wsReliableDeliveryPolicyIndex": wsReliableDeliveryPolicyIndex,
       "wsReliableDeliveryPolicyObjectName": wsReliableDeliveryPolicyObjectName,
       "wsReliableDeliveryPolicyType": wsReliableDeliveryPolicyType,
       "wsReliableDeliveryPolicyName": wsReliableDeliveryPolicyName,
       "wsReliableDeliveryPolicyParent": wsReliableDeliveryPolicyParent,
       "wsReliableDeliveryPolicyDefaultRetryCount": wsReliableDeliveryPolicyDefaultRetryCount,
       "wsReliableDeliveryPolicyDefaultRetryInterval": wsReliableDeliveryPolicyDefaultRetryInterval,
       "wsReliableDeliveryPolicyDefaultTimeToLive": wsReliableDeliveryPolicyDefaultTimeToLive,
       "wtcPasswordTable": wtcPasswordTable,
       "wtcPasswordEntry": wtcPasswordEntry,
       "wtcPasswordIndex": wtcPasswordIndex,
       "wtcPasswordObjectName": wtcPasswordObjectName,
       "wtcPasswordType": wtcPasswordType,
       "wtcPasswordName": wtcPasswordName,
       "wtcPasswordParent": wtcPasswordParent,
       "wtcPasswordLocalAccessPoint": wtcPasswordLocalAccessPoint,
       "wtcPasswordRemoteAccessPoint": wtcPasswordRemoteAccessPoint,
       "wtcPasswordRemotePassword": wtcPasswordRemotePassword,
       "wtcPasswordRemotePasswordIV": wtcPasswordRemotePasswordIV,
       "wtcPasswordLocalPasswordIV": wtcPasswordLocalPasswordIV,
       "wtcPasswordLocalPassword": wtcPasswordLocalPassword,
       "wtcResourcesTable": wtcResourcesTable,
       "wtcResourcesEntry": wtcResourcesEntry,
       "wtcResourcesIndex": wtcResourcesIndex,
       "wtcResourcesObjectName": wtcResourcesObjectName,
       "wtcResourcesType": wtcResourcesType,
       "wtcResourcesName": wtcResourcesName,
       "wtcResourcesParent": wtcResourcesParent,
       "wtcResourcesFldTbl16Classes": wtcResourcesFldTbl16Classes,
       "wtcResourcesFldTbl32Classes": wtcResourcesFldTbl32Classes,
       "wtcResourcesTpUsrFile": wtcResourcesTpUsrFile,
       "wtcResourcesViewTbl16Classes": wtcResourcesViewTbl16Classes,
       "wtcResourcesViewTbl32Classes": wtcResourcesViewTbl32Classes,
       "wtcResourcesAppPassword": wtcResourcesAppPassword,
       "wtcResourcesRemoteMBEncoding": wtcResourcesRemoteMBEncoding,
       "wtcResourcesMBEncodingMapFile": wtcResourcesMBEncodingMapFile,
       "wtcResourcesAppPasswordIV": wtcResourcesAppPasswordIV,
       "adminConsoleTable": adminConsoleTable,
       "adminConsoleEntry": adminConsoleEntry,
       "adminConsoleIndex": adminConsoleIndex,
       "adminConsoleObjectName": adminConsoleObjectName,
       "adminConsoleType": adminConsoleType,
       "adminConsoleSessionTimeout": adminConsoleSessionTimeout,
       "adminConsoleCookieName": adminConsoleCookieName,
       "adminConsoleName": adminConsoleName,
       "adminTable": adminTable,
       "adminEntry": adminEntry,
       "adminIndex": adminIndex,
       "adminObjectName": adminObjectName,
       "adminType": adminType,
       "adminName": adminName,
       "capacityTable": capacityTable,
       "capacityEntry": capacityEntry,
       "capacityIndex": capacityIndex,
       "capacityObjectName": capacityObjectName,
       "capacityType": capacityType,
       "capacityDeploymentOrder": capacityDeploymentOrder,
       "capacityCount": capacityCount,
       "capacityName": capacityName,
       "configurationPropertyTable": configurationPropertyTable,
       "configurationPropertyEntry": configurationPropertyEntry,
       "configurationPropertyIndex": configurationPropertyIndex,
       "configurationPropertyObjectName": configurationPropertyObjectName,
       "configurationPropertyType": configurationPropertyType,
       "configurationPropertyEncryptValueRequired": configurationPropertyEncryptValueRequired,
       "configurationPropertyValue": configurationPropertyValue,
       "configurationPropertyName": configurationPropertyName,
       "contextCaseTable": contextCaseTable,
       "contextCaseEntry": contextCaseEntry,
       "contextCaseIndex": contextCaseIndex,
       "contextCaseObjectName": contextCaseObjectName,
       "contextCaseType": contextCaseType,
       "contextCaseRequestClassName": contextCaseRequestClassName,
       "contextCaseDeploymentOrder": contextCaseDeploymentOrder,
       "contextCaseGroupName": contextCaseGroupName,
       "contextCaseName": contextCaseName,
       "contextCaseUserName": contextCaseUserName,
       "contextRequestClassTable": contextRequestClassTable,
       "contextRequestClassEntry": contextRequestClassEntry,
       "contextRequestClassIndex": contextRequestClassIndex,
       "contextRequestClassObjectName": contextRequestClassObjectName,
       "contextRequestClassType": contextRequestClassType,
       "contextRequestClassDeploymentOrder": contextRequestClassDeploymentOrder,
       "contextRequestClassName": contextRequestClassName,
       "conversationServiceTable": conversationServiceTable,
       "conversationServiceEntry": conversationServiceEntry,
       "conversationServiceIndex": conversationServiceIndex,
       "conversationServiceObjectName": conversationServiceObjectName,
       "conversationServiceType": conversationServiceType,
       "conversationServiceDeploymentOrder": conversationServiceDeploymentOrder,
       "conversationServiceName": conversationServiceName,
       "customResourceTable": customResourceTable,
       "customResourceEntry": customResourceEntry,
       "customResourceIndex": customResourceIndex,
       "customResourceObjectName": customResourceObjectName,
       "customResourceType": customResourceType,
       "customResourceResourceClass": customResourceResourceClass,
       "customResourceCompatibilityName": customResourceCompatibilityName,
       "customResourceDeploymentOrder": customResourceDeploymentOrder,
       "customResourceDescriptorBeanClass": customResourceDescriptorBeanClass,
       "customResourceDeploymentPrincipalName": customResourceDeploymentPrincipalName,
       "customResourceDescriptorFileName": customResourceDescriptorFileName,
       "customResourceModuleType": customResourceModuleType,
       "customResourceName": customResourceName,
       "customResourceSourcePath": customResourceSourcePath,
       "databaseLessLeasingBasisTable": databaseLessLeasingBasisTable,
       "databaseLessLeasingBasisEntry": databaseLessLeasingBasisEntry,
       "databaseLessLeasingBasisIndex": databaseLessLeasingBasisIndex,
       "databaseLessLeasingBasisObjectName": databaseLessLeasingBasisObjectName,
       "databaseLessLeasingBasisType": databaseLessLeasingBasisType,
       "databaseLessLeasingBasisMemberDiscoveryTimeout": databaseLessLeasingBasisMemberDiscoveryTimeout,
       "databaseLessLeasingBasisName": databaseLessLeasingBasisName,
       "debugScopeTable": debugScopeTable,
       "debugScopeEntry": debugScopeEntry,
       "debugScopeIndex": debugScopeIndex,
       "debugScopeObjectName": debugScopeObjectName,
       "debugScopeType": debugScopeType,
       "defaultFileStoreTable": defaultFileStoreTable,
       "defaultFileStoreEntry": defaultFileStoreEntry,
       "defaultFileStoreIndex": defaultFileStoreIndex,
       "defaultFileStoreObjectName": defaultFileStoreObjectName,
       "defaultFileStoreType": defaultFileStoreType,
       "defaultFileStoreName": defaultFileStoreName,
       "deploymentConfigurationTable": deploymentConfigurationTable,
       "deploymentConfigurationEntry": deploymentConfigurationEntry,
       "deploymentConfigurationIndex": deploymentConfigurationIndex,
       "deploymentConfigurationObjectName": deploymentConfigurationObjectName,
       "deploymentConfigurationType": deploymentConfigurationType,
       "deploymentConfigurationRemoteDeployerEJBEnabled": deploymentConfigurationRemoteDeployerEJBEnabled,
       "deploymentConfigurationName": deploymentConfigurationName,
       "domainLibraryTable": domainLibraryTable,
       "domainLibraryEntry": domainLibraryEntry,
       "domainLibraryIndex": domainLibraryIndex,
       "domainLibraryObjectName": domainLibraryObjectName,
       "domainLibraryType": domainLibraryType,
       "domainLibraryCompatibilityName": domainLibraryCompatibilityName,
       "domainLibraryApplicationName": domainLibraryApplicationName,
       "domainLibraryAbsolutePlanDir": domainLibraryAbsolutePlanDir,
       "domainLibraryAbsolutePlanPath": domainLibraryAbsolutePlanPath,
       "domainLibraryStagingMode": domainLibraryStagingMode,
       "domainLibraryInstallDir": domainLibraryInstallDir,
       "domainLibraryValidateDDSecurityData": domainLibraryValidateDDSecurityData,
       "domainLibraryName": domainLibraryName,
       "domainLibraryAbsoluteSourcePath": domainLibraryAbsoluteSourcePath,
       "domainLibrarySourcePath": domainLibrarySourcePath,
       "domainLibraryAbsoluteInstallDir": domainLibraryAbsoluteInstallDir,
       "domainLibraryDeploymentOrder": domainLibraryDeploymentOrder,
       "domainLibrarySecurityDDModel": domainLibrarySecurityDDModel,
       "domainLibraryApplicationIdentifier": domainLibraryApplicationIdentifier,
       "domainLibraryDeploymentPrincipalName": domainLibraryDeploymentPrincipalName,
       "domainLibraryPlanDir": domainLibraryPlanDir,
       "domainLibraryPlanPath": domainLibraryPlanPath,
       "domainLibraryVersionIdentifier": domainLibraryVersionIdentifier,
       "domainLibraryModuleType": domainLibraryModuleType,
       "embeddedLDAPTable": embeddedLDAPTable,
       "embeddedLDAPEntry": embeddedLDAPEntry,
       "embeddedLDAPIndex": embeddedLDAPIndex,
       "embeddedLDAPObjectName": embeddedLDAPObjectName,
       "embeddedLDAPType": embeddedLDAPType,
       "embeddedLDAPTimeout": embeddedLDAPTimeout,
       "embeddedLDAPAnonymousBindAllowed": embeddedLDAPAnonymousBindAllowed,
       "embeddedLDAPMasterFirst": embeddedLDAPMasterFirst,
       "embeddedLDAPCacheTTL": embeddedLDAPCacheTTL,
       "embeddedLDAPBackupCopies": embeddedLDAPBackupCopies,
       "embeddedLDAPRefreshReplicaAtStartup": embeddedLDAPRefreshReplicaAtStartup,
       "embeddedLDAPBackupMinute": embeddedLDAPBackupMinute,
       "embeddedLDAPCacheSize": embeddedLDAPCacheSize,
       "embeddedLDAPBackupHour": embeddedLDAPBackupHour,
       "embeddedLDAPName": embeddedLDAPName,
       "embeddedLDAPCacheEnabled": embeddedLDAPCacheEnabled,
       "errorHandlingTable": errorHandlingTable,
       "errorHandlingEntry": errorHandlingEntry,
       "errorHandlingIndex": errorHandlingIndex,
       "errorHandlingObjectName": errorHandlingObjectName,
       "errorHandlingType": errorHandlingType,
       "errorHandlingLogPolicy": errorHandlingLogPolicy,
       "errorHandlingPolicy": errorHandlingPolicy,
       "errorHandlingName": errorHandlingName,
       "fairShareRequestClassTable": fairShareRequestClassTable,
       "fairShareRequestClassEntry": fairShareRequestClassEntry,
       "fairShareRequestClassIndex": fairShareRequestClassIndex,
       "fairShareRequestClassObjectName": fairShareRequestClassObjectName,
       "fairShareRequestClassType": fairShareRequestClassType,
       "fairShareRequestClassDeploymentOrder": fairShareRequestClassDeploymentOrder,
       "fairShareRequestClassFairShare": fairShareRequestClassFairShare,
       "fairShareRequestClassName": fairShareRequestClassName,
       "federationServicesTable": federationServicesTable,
       "federationServicesEntry": federationServicesEntry,
       "federationServicesIndex": federationServicesIndex,
       "federationServicesObjectName": federationServicesObjectName,
       "federationServicesType": federationServicesType,
       "federationServicesSourceIdHex": federationServicesSourceIdHex,
       "federationServicesAssertionStoreClassName": federationServicesAssertionStoreClassName,
       "federationServicesITSRequiresSSL": federationServicesITSRequiresSSL,
       "federationServicesARSRequiresTwoWaySSL": federationServicesARSRequiresTwoWaySSL,
       "federationServicesPOSTRecipientCheckEnabled": federationServicesPOSTRecipientCheckEnabled,
       "federationServicesACSRequiresSSL": federationServicesACSRequiresSSL,
       "federationServicesSourceSiteURL": federationServicesSourceSiteURL,
       "federationServicesSigningKeyAlias": federationServicesSigningKeyAlias,
       "federationServicesName": federationServicesName,
       "federationServicesSSLClientIdentityAlias": federationServicesSSLClientIdentityAlias,
       "federationServicesSourceIdBase64": federationServicesSourceIdBase64,
       "federationServicesDestinationSiteEnabled": federationServicesDestinationSiteEnabled,
       "federationServicesPOSTOneUseCheckEnabled": federationServicesPOSTOneUseCheckEnabled,
       "federationServicesUsedAssertionCacheClassName": federationServicesUsedAssertionCacheClassName,
       "federationServicesARSRequiresSSL": federationServicesARSRequiresSSL,
       "federationServicesSourceSiteEnabled": federationServicesSourceSiteEnabled,
       "fileStoreTable": fileStoreTable,
       "fileStoreEntry": fileStoreEntry,
       "fileStoreIndex": fileStoreIndex,
       "fileStoreObjectName": fileStoreObjectName,
       "fileStoreType": fileStoreType,
       "fileStoreDeploymentOrder": fileStoreDeploymentOrder,
       "fileStoreLogicalName": fileStoreLogicalName,
       "fileStoreXAResourceName": fileStoreXAResourceName,
       "fileStoreName": fileStoreName,
       "foreignJNDILinkTable": foreignJNDILinkTable,
       "foreignJNDILinkEntry": foreignJNDILinkEntry,
       "foreignJNDILinkIndex": foreignJNDILinkIndex,
       "foreignJNDILinkObjectName": foreignJNDILinkObjectName,
       "foreignJNDILinkType": foreignJNDILinkType,
       "foreignJNDILinkLocalJNDIName": foreignJNDILinkLocalJNDIName,
       "foreignJNDILinkName": foreignJNDILinkName,
       "foreignJNDILinkRemoteJNDIName": foreignJNDILinkRemoteJNDIName,
       "foreignJNDIProviderTable": foreignJNDIProviderTable,
       "foreignJNDIProviderEntry": foreignJNDIProviderEntry,
       "foreignJNDIProviderIndex": foreignJNDIProviderIndex,
       "foreignJNDIProviderObjectName": foreignJNDIProviderObjectName,
       "foreignJNDIProviderType": foreignJNDIProviderType,
       "foreignJNDIProviderInitialContextFactory": foreignJNDIProviderInitialContextFactory,
       "foreignJNDIProviderUser": foreignJNDIProviderUser,
       "foreignJNDIProviderProviderURL": foreignJNDIProviderProviderURL,
       "foreignJNDIProviderName": foreignJNDIProviderName,
       "httpProxyTable": httpProxyTable,
       "httpProxyEntry": httpProxyEntry,
       "httpProxyIndex": httpProxyIndex,
       "httpProxyObjectName": httpProxyObjectName,
       "httpProxyType": httpProxyType,
       "httpProxyServerList": httpProxyServerList,
       "httpProxyDeploymentOrder": httpProxyDeploymentOrder,
       "httpProxyMaxHealthCheckInterval": httpProxyMaxHealthCheckInterval,
       "httpProxyHealthCheckInterval": httpProxyHealthCheckInterval,
       "httpProxyInitialConnections": httpProxyInitialConnections,
       "httpProxyMaxConnections": httpProxyMaxConnections,
       "httpProxyName": httpProxyName,
       "httpProxyMaxRetries": httpProxyMaxRetries,
       "jdbcPoolComponentTable": jdbcPoolComponentTable,
       "jdbcPoolComponentEntry": jdbcPoolComponentEntry,
       "jdbcPoolComponentIndex": jdbcPoolComponentIndex,
       "jdbcPoolComponentObjectName": jdbcPoolComponentObjectName,
       "jdbcPoolComponentType": jdbcPoolComponentType,
       "jdbcPoolComponentDeploymentOrder": jdbcPoolComponentDeploymentOrder,
       "jdbcPoolComponentURI": jdbcPoolComponentURI,
       "jdbcPoolComponentName": jdbcPoolComponentName,
       "jdbcStoreTable": jdbcStoreTable,
       "jdbcStoreEntry": jdbcStoreEntry,
       "jdbcStoreIndex": jdbcStoreIndex,
       "jdbcStoreObjectName": jdbcStoreObjectName,
       "jdbcStoreType": jdbcStoreType,
       "jdbcStoreDeploymentOrder": jdbcStoreDeploymentOrder,
       "jdbcStoreDeletesPerBatchMaximum": jdbcStoreDeletesPerBatchMaximum,
       "jdbcStoreLogicalName": jdbcStoreLogicalName,
       "jdbcStoreXAResourceName": jdbcStoreXAResourceName,
       "jdbcStoreDeletesPerStatementMaximum": jdbcStoreDeletesPerStatementMaximum,
       "jdbcStoreInsertsPerBatchMaximum": jdbcStoreInsertsPerBatchMaximum,
       "jdbcStoreName": jdbcStoreName,
       "jdbcSystemResourceTable": jdbcSystemResourceTable,
       "jdbcSystemResourceEntry": jdbcSystemResourceEntry,
       "jdbcSystemResourceIndex": jdbcSystemResourceIndex,
       "jdbcSystemResourceObjectName": jdbcSystemResourceObjectName,
       "jdbcSystemResourceType": jdbcSystemResourceType,
       "jdbcSystemResourceCompatibilityName": jdbcSystemResourceCompatibilityName,
       "jdbcSystemResourceDeploymentOrder": jdbcSystemResourceDeploymentOrder,
       "jdbcSystemResourceDeploymentPrincipalName": jdbcSystemResourceDeploymentPrincipalName,
       "jdbcSystemResourceDescriptorFileName": jdbcSystemResourceDescriptorFileName,
       "jdbcSystemResourceModuleType": jdbcSystemResourceModuleType,
       "jdbcSystemResourceName": jdbcSystemResourceName,
       "jdbcSystemResourceSourcePath": jdbcSystemResourceSourcePath,
       "jmsInteropModuleTable": jmsInteropModuleTable,
       "jmsInteropModuleEntry": jmsInteropModuleEntry,
       "jmsInteropModuleIndex": jmsInteropModuleIndex,
       "jmsInteropModuleObjectName": jmsInteropModuleObjectName,
       "jmsInteropModuleType": jmsInteropModuleType,
       "jmsInteropModuleCompatibilityName": jmsInteropModuleCompatibilityName,
       "jmsInteropModuleDeploymentOrder": jmsInteropModuleDeploymentOrder,
       "jmsInteropModuleDeploymentPrincipalName": jmsInteropModuleDeploymentPrincipalName,
       "jmsInteropModuleDescriptorFileName": jmsInteropModuleDescriptorFileName,
       "jmsInteropModuleModuleType": jmsInteropModuleModuleType,
       "jmsInteropModuleName": jmsInteropModuleName,
       "jmsInteropModuleSourcePath": jmsInteropModuleSourcePath,
       "jmsMessageLogFileTable": jmsMessageLogFileTable,
       "jmsMessageLogFileEntry": jmsMessageLogFileEntry,
       "jmsMessageLogFileIndex": jmsMessageLogFileIndex,
       "jmsMessageLogFileObjectName": jmsMessageLogFileObjectName,
       "jmsMessageLogFileType": jmsMessageLogFileType,
       "jmsMessageLogFileNumberOfFilesLimited": jmsMessageLogFileNumberOfFilesLimited,
       "jmsMessageLogFileFileTimeSpan": jmsMessageLogFileFileTimeSpan,
       "jmsMessageLogFileRotationType": jmsMessageLogFileRotationType,
       "jmsMessageLogFileFileCount": jmsMessageLogFileFileCount,
       "jmsMessageLogFileFileName": jmsMessageLogFileFileName,
       "jmsMessageLogFileFileMinSize": jmsMessageLogFileFileMinSize,
       "jmsMessageLogFileBufferSizeKB": jmsMessageLogFileBufferSizeKB,
       "jmsMessageLogFileDateFormatPattern": jmsMessageLogFileDateFormatPattern,
       "jmsMessageLogFileRotationTime": jmsMessageLogFileRotationTime,
       "jmsMessageLogFileRotateLogOnStartup": jmsMessageLogFileRotateLogOnStartup,
       "jmsMessageLogFileName": jmsMessageLogFileName,
       "jmsMessageLogFileLogFileRotationDir": jmsMessageLogFileLogFileRotationDir,
       "jmsSAFMessageLogFileTable": jmsSAFMessageLogFileTable,
       "jmsSAFMessageLogFileEntry": jmsSAFMessageLogFileEntry,
       "jmsSAFMessageLogFileIndex": jmsSAFMessageLogFileIndex,
       "jmsSAFMessageLogFileObjectName": jmsSAFMessageLogFileObjectName,
       "jmsSAFMessageLogFileType": jmsSAFMessageLogFileType,
       "jmsSAFMessageLogFileNumberOfFilesLimited": jmsSAFMessageLogFileNumberOfFilesLimited,
       "jmsSAFMessageLogFileFileTimeSpan": jmsSAFMessageLogFileFileTimeSpan,
       "jmsSAFMessageLogFileRotationType": jmsSAFMessageLogFileRotationType,
       "jmsSAFMessageLogFileFileCount": jmsSAFMessageLogFileFileCount,
       "jmsSAFMessageLogFileFileName": jmsSAFMessageLogFileFileName,
       "jmsSAFMessageLogFileFileMinSize": jmsSAFMessageLogFileFileMinSize,
       "jmsSAFMessageLogFileBufferSizeKB": jmsSAFMessageLogFileBufferSizeKB,
       "jmsSAFMessageLogFileDateFormatPattern": jmsSAFMessageLogFileDateFormatPattern,
       "jmsSAFMessageLogFileRotationTime": jmsSAFMessageLogFileRotationTime,
       "jmsSAFMessageLogFileRotateLogOnStartup": jmsSAFMessageLogFileRotateLogOnStartup,
       "jmsSAFMessageLogFileName": jmsSAFMessageLogFileName,
       "jmsSAFMessageLogFileLogFileRotationDir": jmsSAFMessageLogFileLogFileRotationDir,
       "jmxTable": jmxTable,
       "jmxEntry": jmxEntry,
       "jmxIndex": jmxIndex,
       "jmxObjectName": jmxObjectName,
       "jmxType": jmxType,
       "jmxCompatibilityMBeanServerEnabled": jmxCompatibilityMBeanServerEnabled,
       "jmxManagementEJBEnabled": jmxManagementEJBEnabled,
       "jmxPlatformMBeanServerEnabled": jmxPlatformMBeanServerEnabled,
       "jmxInvocationTimeoutSeconds": jmxInvocationTimeoutSeconds,
       "jmxRuntimeMBeanServerEnabled": jmxRuntimeMBeanServerEnabled,
       "jmxDomainMBeanServerEnabled": jmxDomainMBeanServerEnabled,
       "jmxName": jmxName,
       "jmxEditMBeanServerEnabled": jmxEditMBeanServerEnabled,
       "jtaMigratableTargetTable": jtaMigratableTargetTable,
       "jtaMigratableTargetEntry": jtaMigratableTargetEntry,
       "jtaMigratableTargetIndex": jtaMigratableTargetIndex,
       "jtaMigratableTargetObjectName": jtaMigratableTargetObjectName,
       "jtaMigratableTargetType": jtaMigratableTargetType,
       "jtaMigratableTargetPostScript": jtaMigratableTargetPostScript,
       "jtaMigratableTargetMillisToSleepBetweenAttempts": jtaMigratableTargetMillisToSleepBetweenAttempts,
       "jtaMigratableTargetNonLocalPostAllowed": jtaMigratableTargetNonLocalPostAllowed,
       "jtaMigratableTargetSecondsBetweenRestarts": jtaMigratableTargetSecondsBetweenRestarts,
       "jtaMigratableTargetPostScriptFailureFatal": jtaMigratableTargetPostScriptFailureFatal,
       "jtaMigratableTargetPreScript": jtaMigratableTargetPreScript,
       "jtaMigratableTargetMigrationPolicy": jtaMigratableTargetMigrationPolicy,
       "jtaMigratableTargetRestartOnFailure": jtaMigratableTargetRestartOnFailure,
       "jtaMigratableTargetStrictOwnershipCheck": jtaMigratableTargetStrictOwnershipCheck,
       "jtaMigratableTargetName": jtaMigratableTargetName,
       "jtaMigratableTargetAdditionalMigrationAttempts": jtaMigratableTargetAdditionalMigrationAttempts,
       "jtaMigratableTargetNumberOfRestartAttempts": jtaMigratableTargetNumberOfRestartAttempts,
       "joltConnectionPoolTable": joltConnectionPoolTable,
       "joltConnectionPoolEntry": joltConnectionPoolEntry,
       "joltConnectionPoolIndex": joltConnectionPoolIndex,
       "joltConnectionPoolObjectName": joltConnectionPoolObjectName,
       "joltConnectionPoolType": joltConnectionPoolType,
       "joltConnectionPoolMinimumPoolSize": joltConnectionPoolMinimumPoolSize,
       "joltConnectionPoolMaximumPoolSize": joltConnectionPoolMaximumPoolSize,
       "joltConnectionPoolName": joltConnectionPoolName,
       "joltConnectionPoolUserName": joltConnectionPoolUserName,
       "joltConnectionPoolDeploymentOrder": joltConnectionPoolDeploymentOrder,
       "joltConnectionPoolRecvTimeout": joltConnectionPoolRecvTimeout,
       "joltConnectionPoolSecurityContextEnabled": joltConnectionPoolSecurityContextEnabled,
       "joltConnectionPoolTrustStoreName": joltConnectionPoolTrustStoreName,
       "joltConnectionPoolUserRole": joltConnectionPoolUserRole,
       "joltConnectionPoolKeyStoreName": joltConnectionPoolKeyStoreName,
       "logFilterTable": logFilterTable,
       "logFilterEntry": logFilterEntry,
       "logFilterIndex": logFilterIndex,
       "logFilterObjectName": logFilterObjectName,
       "logFilterType": logFilterType,
       "logFilterFilterExpression": logFilterFilterExpression,
       "logFilterName": logFilterName,
       "mailSessionTable": mailSessionTable,
       "mailSessionEntry": mailSessionEntry,
       "mailSessionIndex": mailSessionIndex,
       "mailSessionObjectName": mailSessionObjectName,
       "mailSessionType": mailSessionType,
       "mailSessionDeploymentOrder": mailSessionDeploymentOrder,
       "mailSessionJNDIName": mailSessionJNDIName,
       "mailSessionName": mailSessionName,
       "maxThreadsConstraintTable": maxThreadsConstraintTable,
       "maxThreadsConstraintEntry": maxThreadsConstraintEntry,
       "maxThreadsConstraintIndex": maxThreadsConstraintIndex,
       "maxThreadsConstraintObjectName": maxThreadsConstraintObjectName,
       "maxThreadsConstraintType": maxThreadsConstraintType,
       "maxThreadsConstraintDeploymentOrder": maxThreadsConstraintDeploymentOrder,
       "maxThreadsConstraintCount": maxThreadsConstraintCount,
       "maxThreadsConstraintName": maxThreadsConstraintName,
       "maxThreadsConstraintConnectionPoolName": maxThreadsConstraintConnectionPoolName,
       "migratableRMIServiceTable": migratableRMIServiceTable,
       "migratableRMIServiceEntry": migratableRMIServiceEntry,
       "migratableRMIServiceIndex": migratableRMIServiceIndex,
       "migratableRMIServiceObjectName": migratableRMIServiceObjectName,
       "migratableRMIServiceType": migratableRMIServiceType,
       "migratableRMIServiceDeploymentOrder": migratableRMIServiceDeploymentOrder,
       "migratableRMIServiceName": migratableRMIServiceName,
       "minThreadsConstraintTable": minThreadsConstraintTable,
       "minThreadsConstraintEntry": minThreadsConstraintEntry,
       "minThreadsConstraintIndex": minThreadsConstraintIndex,
       "minThreadsConstraintObjectName": minThreadsConstraintObjectName,
       "minThreadsConstraintType": minThreadsConstraintType,
       "minThreadsConstraintDeploymentOrder": minThreadsConstraintDeploymentOrder,
       "minThreadsConstraintCount": minThreadsConstraintCount,
       "minThreadsConstraintName": minThreadsConstraintName,
       "overloadProtectionTable": overloadProtectionTable,
       "overloadProtectionEntry": overloadProtectionEntry,
       "overloadProtectionIndex": overloadProtectionIndex,
       "overloadProtectionObjectName": overloadProtectionObjectName,
       "overloadProtectionType": overloadProtectionType,
       "overloadProtectionSharedCapacityForWorkManagers": overloadProtectionSharedCapacityForWorkManagers,
       "overloadProtectionFreeMemoryPercentLowThreshold": overloadProtectionFreeMemoryPercentLowThreshold,
       "overloadProtectionFailureAction": overloadProtectionFailureAction,
       "overloadProtectionFreeMemoryPercentHighThreshold": overloadProtectionFreeMemoryPercentHighThreshold,
       "overloadProtectionName": overloadProtectionName,
       "overloadProtectionPanicAction": overloadProtectionPanicAction,
       "pathServiceTable": pathServiceTable,
       "pathServiceEntry": pathServiceEntry,
       "pathServiceIndex": pathServiceIndex,
       "pathServiceObjectName": pathServiceObjectName,
       "pathServiceType": pathServiceType,
       "pathServiceDeploymentOrder": pathServiceDeploymentOrder,
       "pathServiceName": pathServiceName,
       "remoteSAFContextTable": remoteSAFContextTable,
       "remoteSAFContextEntry": remoteSAFContextEntry,
       "remoteSAFContextIndex": remoteSAFContextIndex,
       "remoteSAFContextObjectName": remoteSAFContextObjectName,
       "remoteSAFContextType": remoteSAFContextType,
       "remoteSAFContextProtocol": remoteSAFContextProtocol,
       "remoteSAFContextUrl": remoteSAFContextUrl,
       "remoteSAFContextPassword": remoteSAFContextPassword,
       "remoteSAFContextJndiInitialContextFactory": remoteSAFContextJndiInitialContextFactory,
       "remoteSAFContextName": remoteSAFContextName,
       "remoteSAFContextJndiProperty": remoteSAFContextJndiProperty,
       "remoteSAFContextUsername": remoteSAFContextUsername,
       "responseTimeRequestClassTable": responseTimeRequestClassTable,
       "responseTimeRequestClassEntry": responseTimeRequestClassEntry,
       "responseTimeRequestClassIndex": responseTimeRequestClassIndex,
       "responseTimeRequestClassObjectName": responseTimeRequestClassObjectName,
       "responseTimeRequestClassType": responseTimeRequestClassType,
       "responseTimeRequestClassDeploymentOrder": responseTimeRequestClassDeploymentOrder,
       "responseTimeRequestClassGoalMs": responseTimeRequestClassGoalMs,
       "responseTimeRequestClassName": responseTimeRequestClassName,
       "safAgentTable": safAgentTable,
       "safAgentEntry": safAgentEntry,
       "safAgentIndex": safAgentIndex,
       "safAgentObjectName": safAgentObjectName,
       "safAgentType": safAgentType,
       "safAgentForwardingPausedAtStartup": safAgentForwardingPausedAtStartup,
       "safAgentDefaultRetryDelayMultiplier": safAgentDefaultRetryDelayMultiplier,
       "safAgentLoggingEnabled": safAgentLoggingEnabled,
       "safAgentBytesThresholdHigh": safAgentBytesThresholdHigh,
       "safAgentWindowInterval": safAgentWindowInterval,
       "safAgentBytesMaximum": safAgentBytesMaximum,
       "safAgentServiceType": safAgentServiceType,
       "safAgentMessagesThresholdLow": safAgentMessagesThresholdLow,
       "safAgentMessagesThresholdHigh": safAgentMessagesThresholdHigh,
       "safAgentIncomingPausedAtStartup": safAgentIncomingPausedAtStartup,
       "safAgentReceivingPausedAtStartup": safAgentReceivingPausedAtStartup,
       "safAgentMessagesMaximum": safAgentMessagesMaximum,
       "safAgentName": safAgentName,
       "safAgentConversationIdleTimeMaximum": safAgentConversationIdleTimeMaximum,
       "safAgentDefaultRetryDelayMaximum": safAgentDefaultRetryDelayMaximum,
       "safAgentMaximumMessageSize": safAgentMaximumMessageSize,
       "safAgentAcknowledgeInterval": safAgentAcknowledgeInterval,
       "safAgentDeploymentOrder": safAgentDeploymentOrder,
       "safAgentMessageBufferSize": safAgentMessageBufferSize,
       "safAgentWindowSize": safAgentWindowSize,
       "safAgentDefaultTimeToLive": safAgentDefaultTimeToLive,
       "safAgentPagingDirectory": safAgentPagingDirectory,
       "safAgentBytesThresholdLow": safAgentBytesThresholdLow,
       "safAgentDefaultRetryDelayBase": safAgentDefaultRetryDelayBase,
       "wlssnmpAgentDeploymentTable": wlssnmpAgentDeploymentTable,
       "wlssnmpAgentDeploymentEntry": wlssnmpAgentDeploymentEntry,
       "wlssnmpAgentDeploymentIndex": wlssnmpAgentDeploymentIndex,
       "wlssnmpAgentDeploymentObjectName": wlssnmpAgentDeploymentObjectName,
       "wlssnmpAgentDeploymentType": wlssnmpAgentDeploymentType,
       "wlssnmpAgentDeploymentCommunityPrefix": wlssnmpAgentDeploymentCommunityPrefix,
       "wlssnmpAgentDeploymentAuthenticationProtocol": wlssnmpAgentDeploymentAuthenticationProtocol,
       "wlssnmpAgentDeploymentSNMPPort": wlssnmpAgentDeploymentSNMPPort,
       "wlssnmpAgentDeploymentSNMPEngineId": wlssnmpAgentDeploymentSNMPEngineId,
       "wlssnmpAgentDeploymentSNMPAccessForUserMBeansEnabled": wlssnmpAgentDeploymentSNMPAccessForUserMBeansEnabled,
       "wlssnmpAgentDeploymentLocalizedKeyCacheInvalidationInterval": wlssnmpAgentDeploymentLocalizedKeyCacheInvalidationInterval,
       "wlssnmpAgentDeploymentEnabled": wlssnmpAgentDeploymentEnabled,
       "wlssnmpAgentDeploymentName": wlssnmpAgentDeploymentName,
       "wlssnmpAgentDeploymentInformEnabled": wlssnmpAgentDeploymentInformEnabled,
       "wlssnmpAgentDeploymentSendAutomaticTrapsEnabled": wlssnmpAgentDeploymentSendAutomaticTrapsEnabled,
       "wlssnmpAgentDeploymentInformRetryInterval": wlssnmpAgentDeploymentInformRetryInterval,
       "wlssnmpAgentDeploymentDeploymentOrder": wlssnmpAgentDeploymentDeploymentOrder,
       "wlssnmpAgentDeploymentPrivacyProtocol": wlssnmpAgentDeploymentPrivacyProtocol,
       "wlssnmpAgentDeploymentMasterAgentXPort": wlssnmpAgentDeploymentMasterAgentXPort,
       "wlssnmpAgentDeploymentSNMPTrapVersion": wlssnmpAgentDeploymentSNMPTrapVersion,
       "wlssnmpAgentDeploymentMaxInformRetryCount": wlssnmpAgentDeploymentMaxInformRetryCount,
       "wlssnmpAgentDeploymentCommunityBasedAccessEnabled": wlssnmpAgentDeploymentCommunityBasedAccessEnabled,
       "wlssnmpAttributeChangeTable": wlssnmpAttributeChangeTable,
       "wlssnmpAttributeChangeEntry": wlssnmpAttributeChangeEntry,
       "wlssnmpAttributeChangeIndex": wlssnmpAttributeChangeIndex,
       "wlssnmpAttributeChangeObjectName": wlssnmpAttributeChangeObjectName,
       "wlssnmpAttributeChangeType": wlssnmpAttributeChangeType,
       "wlssnmpAttributeChangeAttributeName": wlssnmpAttributeChangeAttributeName,
       "wlssnmpAttributeChangeAttributeMBeanName": wlssnmpAttributeChangeAttributeMBeanName,
       "wlssnmpAttributeChangeAttributeMBeanType": wlssnmpAttributeChangeAttributeMBeanType,
       "wlssnmpAttributeChangeName": wlssnmpAttributeChangeName,
       "wlssnmpCounterMonitorTable": wlssnmpCounterMonitorTable,
       "wlssnmpCounterMonitorEntry": wlssnmpCounterMonitorEntry,
       "wlssnmpCounterMonitorIndex": wlssnmpCounterMonitorIndex,
       "wlssnmpCounterMonitorObjectName": wlssnmpCounterMonitorObjectName,
       "wlssnmpCounterMonitorType": wlssnmpCounterMonitorType,
       "wlssnmpCounterMonitorMonitoredAttributeName": wlssnmpCounterMonitorMonitoredAttributeName,
       "wlssnmpCounterMonitorMonitoredMBeanType": wlssnmpCounterMonitorMonitoredMBeanType,
       "wlssnmpCounterMonitorOffset": wlssnmpCounterMonitorOffset,
       "wlssnmpCounterMonitorModulus": wlssnmpCounterMonitorModulus,
       "wlssnmpCounterMonitorName": wlssnmpCounterMonitorName,
       "wlssnmpCounterMonitorPollingInterval": wlssnmpCounterMonitorPollingInterval,
       "wlssnmpCounterMonitorThreshold": wlssnmpCounterMonitorThreshold,
       "wlssnmpCounterMonitorMonitoredMBeanName": wlssnmpCounterMonitorMonitoredMBeanName,
       "wlssnmpGaugeMonitorTable": wlssnmpGaugeMonitorTable,
       "wlssnmpGaugeMonitorEntry": wlssnmpGaugeMonitorEntry,
       "wlssnmpGaugeMonitorIndex": wlssnmpGaugeMonitorIndex,
       "wlssnmpGaugeMonitorObjectName": wlssnmpGaugeMonitorObjectName,
       "wlssnmpGaugeMonitorType": wlssnmpGaugeMonitorType,
       "wlssnmpGaugeMonitorThresholdLow": wlssnmpGaugeMonitorThresholdLow,
       "wlssnmpGaugeMonitorMonitoredAttributeName": wlssnmpGaugeMonitorMonitoredAttributeName,
       "wlssnmpGaugeMonitorThresholdHigh": wlssnmpGaugeMonitorThresholdHigh,
       "wlssnmpGaugeMonitorMonitoredMBeanType": wlssnmpGaugeMonitorMonitoredMBeanType,
       "wlssnmpGaugeMonitorName": wlssnmpGaugeMonitorName,
       "wlssnmpGaugeMonitorPollingInterval": wlssnmpGaugeMonitorPollingInterval,
       "wlssnmpGaugeMonitorMonitoredMBeanName": wlssnmpGaugeMonitorMonitoredMBeanName,
       "wlssnmpLogFilterTable": wlssnmpLogFilterTable,
       "wlssnmpLogFilterEntry": wlssnmpLogFilterEntry,
       "wlssnmpLogFilterIndex": wlssnmpLogFilterIndex,
       "wlssnmpLogFilterObjectName": wlssnmpLogFilterObjectName,
       "wlssnmpLogFilterType": wlssnmpLogFilterType,
       "wlssnmpLogFilterSeverityLevel": wlssnmpLogFilterSeverityLevel,
       "wlssnmpLogFilterMessageSubstring": wlssnmpLogFilterMessageSubstring,
       "wlssnmpLogFilterName": wlssnmpLogFilterName,
       "wlssnmpProxyTable": wlssnmpProxyTable,
       "wlssnmpProxyEntry": wlssnmpProxyEntry,
       "wlssnmpProxyIndex": wlssnmpProxyIndex,
       "wlssnmpProxyObjectName": wlssnmpProxyObjectName,
       "wlssnmpProxyType": wlssnmpProxyType,
       "wlssnmpProxyTimeout": wlssnmpProxyTimeout,
       "wlssnmpProxySecurityName": wlssnmpProxySecurityName,
       "wlssnmpProxyPort": wlssnmpProxyPort,
       "wlssnmpProxySecurityLevel": wlssnmpProxySecurityLevel,
       "wlssnmpProxyOidRoot": wlssnmpProxyOidRoot,
       "wlssnmpProxyCommunity": wlssnmpProxyCommunity,
       "wlssnmpProxyName": wlssnmpProxyName,
       "wlssnmpStringMonitorTable": wlssnmpStringMonitorTable,
       "wlssnmpStringMonitorEntry": wlssnmpStringMonitorEntry,
       "wlssnmpStringMonitorIndex": wlssnmpStringMonitorIndex,
       "wlssnmpStringMonitorObjectName": wlssnmpStringMonitorObjectName,
       "wlssnmpStringMonitorType": wlssnmpStringMonitorType,
       "wlssnmpStringMonitorMonitoredAttributeName": wlssnmpStringMonitorMonitoredAttributeName,
       "wlssnmpStringMonitorMonitoredMBeanType": wlssnmpStringMonitorMonitoredMBeanType,
       "wlssnmpStringMonitorNotifyDiffer": wlssnmpStringMonitorNotifyDiffer,
       "wlssnmpStringMonitorNotifyMatch": wlssnmpStringMonitorNotifyMatch,
       "wlssnmpStringMonitorStringToCompare": wlssnmpStringMonitorStringToCompare,
       "wlssnmpStringMonitorName": wlssnmpStringMonitorName,
       "wlssnmpStringMonitorPollingInterval": wlssnmpStringMonitorPollingInterval,
       "wlssnmpStringMonitorMonitoredMBeanName": wlssnmpStringMonitorMonitoredMBeanName,
       "wlssnmpTrapDestinationTable": wlssnmpTrapDestinationTable,
       "wlssnmpTrapDestinationEntry": wlssnmpTrapDestinationEntry,
       "wlssnmpTrapDestinationIndex": wlssnmpTrapDestinationIndex,
       "wlssnmpTrapDestinationObjectName": wlssnmpTrapDestinationObjectName,
       "wlssnmpTrapDestinationType": wlssnmpTrapDestinationType,
       "wlssnmpTrapDestinationHost": wlssnmpTrapDestinationHost,
       "wlssnmpTrapDestinationSecurityName": wlssnmpTrapDestinationSecurityName,
       "wlssnmpTrapDestinationPort": wlssnmpTrapDestinationPort,
       "wlssnmpTrapDestinationSecurityLevel": wlssnmpTrapDestinationSecurityLevel,
       "wlssnmpTrapDestinationCommunity": wlssnmpTrapDestinationCommunity,
       "wlssnmpTrapDestinationName": wlssnmpTrapDestinationName,
       "securityConfigurationTable": securityConfigurationTable,
       "securityConfigurationEntry": securityConfigurationEntry,
       "securityConfigurationIndex": securityConfigurationIndex,
       "securityConfigurationObjectName": securityConfigurationObjectName,
       "securityConfigurationType": securityConfigurationType,
       "securityConfigurationWebAppFilesCaseInsensitive": securityConfigurationWebAppFilesCaseInsensitive,
       "securityConfigurationCrossDomainSecurityEnabled": securityConfigurationCrossDomainSecurityEnabled,
       "securityConfigurationEnforceStrictURLPattern": securityConfigurationEnforceStrictURLPattern,
       "securityConfigurationConnectionFilter": securityConfigurationConnectionFilter,
       "securityConfigurationConsoleFullDelegationEnabled": securityConfigurationConsoleFullDelegationEnabled,
       "securityConfigurationDowngradeUntrustedPrincipals": securityConfigurationDowngradeUntrustedPrincipals,
       "securityConfigurationName": securityConfigurationName,
       "securityConfigurationConnectionLoggerEnabled": securityConfigurationConnectionLoggerEnabled,
       "securityConfigurationEnforceValidBasicAuthCredentials": securityConfigurationEnforceValidBasicAuthCredentials,
       "securityConfigurationNodeManagerUsername": securityConfigurationNodeManagerUsername,
       "securityConfigurationAnonymousAdminLookupEnabled": securityConfigurationAnonymousAdminLookupEnabled,
       "securityConfigurationCompatibilityConnectionFiltersEnabled": securityConfigurationCompatibilityConnectionFiltersEnabled,
       "selfTuningTable": selfTuningTable,
       "selfTuningEntry": selfTuningEntry,
       "selfTuningIndex": selfTuningIndex,
       "selfTuningObjectName": selfTuningObjectName,
       "selfTuningType": selfTuningType,
       "selfTuningName": selfTuningName,
       "serverDebugTable": serverDebugTable,
       "serverDebugEntry": serverDebugEntry,
       "serverDebugIndex": serverDebugIndex,
       "serverDebugObjectName": serverDebugObjectName,
       "serverDebugDebugJDBCSQL": serverDebugDebugJDBCSQL,
       "serverDebugDebugIIOPConnection": serverDebugDebugIIOPConnection,
       "serverDebugDebugJAXPIncludeTime": serverDebugDebugJAXPIncludeTime,
       "serverDebugDebugMessagingBridgeRuntime": serverDebugDebugMessagingBridgeRuntime,
       "serverDebugDebugWebAppSecurity": serverDebugDebugWebAppSecurity,
       "serverDebugDebugMuxerDetail": serverDebugDebugMuxerDetail,
       "serverDebugDebugXMLRegistryIncludeLocation": serverDebugDebugXMLRegistryIncludeLocation,
       "serverDebugDebugJMXRuntime": serverDebugDebugJMXRuntime,
       "serverDebugDebugJNDIFactories": serverDebugDebugJNDIFactories,
       "serverDebugDebugDiagnosticInstrumentationWeaving": serverDebugDebugDiagnosticInstrumentationWeaving,
       "serverDebugDebugJTARecovery": serverDebugDebugJTARecovery,
       "serverDebugClassLoader": serverDebugClassLoader,
       "serverDebugDebugRADeployment": serverDebugDebugRADeployment,
       "serverDebugDebugMessagingKernel": serverDebugDebugMessagingKernel,
       "serverDebugDebugJTAAPI": serverDebugDebugJTAAPI,
       "serverDebugDebugEjbLocking": serverDebugDebugEjbLocking,
       "serverDebugDebugDescriptor": serverDebugDebugDescriptor,
       "serverDebugDebugDiagnosticsHarvesterTreeBeanPlugin": serverDebugDebugDiagnosticsHarvesterTreeBeanPlugin,
       "serverDebugDebugSAFTransport": serverDebugDebugSAFTransport,
       "serverDebugDebugStoreIOPhysicalVerbose": serverDebugDebugStoreIOPhysicalVerbose,
       "serverDebugDebugStoreIOPhysical": serverDebugDebugStoreIOPhysical,
       "serverDebugDebugJNDI": serverDebugDebugJNDI,
       "serverDebugDebugJTALLR": serverDebugDebugJTALLR,
       "serverDebugDebugJTARecoveryStackTrace": serverDebugDebugJTARecoveryStackTrace,
       "serverDebugDebugJTATransactionName": serverDebugDebugJTATransactionName,
       "serverDebugDebugRAPooling": serverDebugDebugRAPooling,
       "serverDebugDebugDeploymentServiceTransportHttp": serverDebugDebugDeploymentServiceTransportHttp,
       "serverDebugDebugDiagnosticCollections": serverDebugDebugDiagnosticCollections,
       "serverDebugDebugJMXCompatibility": serverDebugDebugJMXCompatibility,
       "serverDebugDebugDRSMessages": serverDebugDebugDRSMessages,
       "serverDebugDebugMessagingBridgeRuntimeVerbose": serverDebugDebugMessagingBridgeRuntimeVerbose,
       "serverDebugDebugSecurityJACCNonPolicy": serverDebugDebugSecurityJACCNonPolicy,
       "serverDebugClassLoaderVerbose": serverDebugClassLoaderVerbose,
       "serverDebugDebugXMLEntityCacheUseShortClass": serverDebugDebugXMLEntityCacheUseShortClass,
       "serverDebugDebugJMSWrappers": serverDebugDebugJMSWrappers,
       "serverDebugDebugEmbeddedLDAP": serverDebugDebugEmbeddedLDAP,
       "serverDebugDebugLeaderElection": serverDebugDebugLeaderElection,
       "serverDebugDebugDiagnosticAccessor": serverDebugDebugDiagnosticAccessor,
       "serverDebugDebugDiagnosticWatch": serverDebugDebugDiagnosticWatch,
       "serverDebugDebugJTAJDBC": serverDebugDebugJTAJDBC,
       "serverDebugDebugMessagingBridgeStartup": serverDebugDebugMessagingBridgeStartup,
       "serverDebugDebugXMLRegistryDebugLevel": serverDebugDebugXMLRegistryDebugLevel,
       "serverDebugDebugWTCCorbaEx": serverDebugDebugWTCCorbaEx,
       "serverDebugDebugSAFSendingAgent": serverDebugDebugSAFSendingAgent,
       "serverDebugForceGCEachDGCPeriod": serverDebugForceGCEachDGCPeriod,
       "serverDebugDebugDiagnosticInstrumentation": serverDebugDebugDiagnosticInstrumentation,
       "serverDebugDebugIIOPReplacer": serverDebugDebugIIOPReplacer,
       "serverDebugDebugFileDistributionServlet": serverDebugDebugFileDistributionServlet,
       "serverDebugDebugJTAPropagate": serverDebugDebugJTAPropagate,
       "serverDebugDebugXMLRegistryIncludeClass": serverDebugDebugXMLRegistryIncludeClass,
       "serverDebugDebugXMLEntityCacheDebugLevel": serverDebugDebugXMLEntityCacheDebugLevel,
       "serverDebugDebugJTAHealth": serverDebugDebugJTAHealth,
       "serverDebugDebugEjbSecurity": serverDebugDebugEjbSecurity,
       "serverDebugDebugIIOPTransport": serverDebugDebugIIOPTransport,
       "serverDebugDebugJDBCRMI": serverDebugDebugJDBCRMI,
       "serverDebugDebugJMSCDS": serverDebugDebugJMSCDS,
       "serverDebugDebugXMLEntityCacheDebugName": serverDebugDebugXMLEntityCacheDebugName,
       "serverDebugDebugEjbCaching": serverDebugDebugEjbCaching,
       "serverDebugDebugRAXAwork": serverDebugDebugRAXAwork,
       "serverDebugDebugServerMigration": serverDebugDebugServerMigration,
       "serverDebugDebugEmbeddedLDAPLogToConsole": serverDebugDebugEmbeddedLDAPLogToConsole,
       "serverDebugDebugJAXPDebugName": serverDebugDebugJAXPDebugName,
       "serverDebugDebugRAConnEvents": serverDebugDebugRAConnEvents,
       "serverDebugDebugRAXAin": serverDebugDebugRAXAin,
       "serverDebugDebugJMSConfig": serverDebugDebugJMSConfig,
       "serverDebugClassloaderWebApp": serverDebugClassloaderWebApp,
       "serverDebugDebugJDBCInternal": serverDebugDebugJDBCInternal,
       "serverDebugDebugJpaProfile": serverDebugDebugJpaProfile,
       "serverDebugDebugMessagingKernelBoot": serverDebugDebugMessagingKernelBoot,
       "serverDebugWebModule": serverDebugWebModule,
       "serverDebugDebugReplication": serverDebugDebugReplication,
       "serverDebugDebugFailOver": serverDebugDebugFailOver,
       "serverDebugDebugXMLEntityCacheIncludeName": serverDebugDebugXMLEntityCacheIncludeName,
       "serverDebugDebugSNMPAgent": serverDebugDebugSNMPAgent,
       "serverDebugDebugDRSStateTransitions": serverDebugDebugDRSStateTransitions,
       "serverDebugDebugJpaManage": serverDebugDebugJpaManage,
       "serverDebugDebugJMSCommon": serverDebugDebugJMSCommon,
       "serverDebugDebugJpaRuntime": serverDebugDebugJpaRuntime,
       "serverDebugDebugEmbeddedLDAPLogLevel": serverDebugDebugEmbeddedLDAPLogLevel,
       "serverDebugDebugSecurityAdjudicator": serverDebugDebugSecurityAdjudicator,
       "serverDebugDebugSAFAdmin": serverDebugDebugSAFAdmin,
       "serverDebugDebugEjbPooling": serverDebugDebugEjbPooling,
       "serverDebugDebugWTCtBridgeEx": serverDebugDebugWTCtBridgeEx,
       "serverDebugDebugSecuritySAMLLib": serverDebugDebugSecuritySAMLLib,
       "serverDebugDebugDiagnosticArchive": serverDebugDebugDiagnosticArchive,
       "serverDebugDebugURLResolution": serverDebugDebugURLResolution,
       "serverDebugDebugLoadBalancing": serverDebugDebugLoadBalancing,
       "serverDebugDebugWebAppModule": serverDebugDebugWebAppModule,
       "serverDebugDebugSecurityService": serverDebugDebugSecurityService,
       "serverDebugDebugRC4": serverDebugDebugRC4,
       "serverDebugDebugXMLRegistryIncludeTime": serverDebugDebugXMLRegistryIncludeTime,
       "serverDebugDebugJAXPIncludeLocation": serverDebugDebugJAXPIncludeLocation,
       "serverDebugDebugLoggingConfiguration": serverDebugDebugLoggingConfiguration,
       "serverDebugDebugHttp": serverDebugDebugHttp,
       "serverDebugDebugDiagnosticFileArchive": serverDebugDebugDiagnosticFileArchive,
       "serverDebugDebugJTAXA": serverDebugDebugJTAXA,
       "serverDebugDebugIIOPSecurity": serverDebugDebugIIOPSecurity,
       "serverDebugDebugRAXAout": serverDebugDebugRAXAout,
       "serverDebugDebugJAXPIncludeName": serverDebugDebugJAXPIncludeName,
       "serverDebugDebugDiagnosticsModule": serverDebugDebugDiagnosticsModule,
       "serverDebugApplicationContainer": serverDebugApplicationContainer,
       "serverDebugDebugDeploy": serverDebugDebugDeploy,
       "serverDebugDebugDeploymentServiceTransport": serverDebugDebugDeploymentServiceTransport,
       "serverDebugDebugWTCTDomPdu": serverDebugDebugWTCTDomPdu,
       "serverDebugDebugJTALifecycle": serverDebugDebugJTALifecycle,
       "serverDebugDebugJTATLOG": serverDebugDebugJTATLOG,
       "serverDebugDebugRAParsing": serverDebugDebugRAParsing,
       "serverDebugDebugServerLifeCycle": serverDebugDebugServerLifeCycle,
       "serverDebugDebugSAFReceivingAgent": serverDebugDebugSAFReceivingAgent,
       "serverDebugDebugConnection": serverDebugDebugConnection,
       "serverDebugDebugJMSBoot": serverDebugDebugJMSBoot,
       "serverDebugDebugJMSSAF": serverDebugDebugJMSSAF,
       "serverDebugDebugDiagnosticImage": serverDebugDebugDiagnosticImage,
       "serverDebugDebugJpaJdbcSchema": serverDebugDebugJpaJdbcSchema,
       "serverDebugDebugTunnelingConnection": serverDebugDebugTunnelingConnection,
       "serverDebugDebugClusterHeartbeats": serverDebugDebugClusterHeartbeats,
       "serverDebugDebugRSA": serverDebugDebugRSA,
       "serverDebugDebugSecurityEEngine": serverDebugDebugSecurityEEngine,
       "serverDebugDebugSecurityKeyStore": serverDebugDebugSecurityKeyStore,
       "serverDebugDebugXMLEntityCacheIncludeTime": serverDebugDebugXMLEntityCacheIncludeTime,
       "serverDebugDebugJMSPauseResume": serverDebugDebugJMSPauseResume,
       "serverDebugDebugLibraries": serverDebugDebugLibraries,
       "serverDebugDebugSecurityCredMap": serverDebugDebugSecurityCredMap,
       "serverDebugDebugConfigurationRuntime": serverDebugDebugConfigurationRuntime,
       "serverDebugDebugDiagnosticLifecycleHandlers": serverDebugDebugDiagnosticLifecycleHandlers,
       "serverDebugDebugConfigurationEdit": serverDebugDebugConfigurationEdit,
       "serverDebugDebugDiagnosticWlstoreArchive": serverDebugDebugDiagnosticWlstoreArchive,
       "serverDebugDebugSecurityPasswordPolicy": serverDebugDebugSecurityPasswordPolicy,
       "serverDebugDebugEjbCompilation": serverDebugDebugEjbCompilation,
       "serverDebugDebugJpaQuery": serverDebugDebugJpaQuery,
       "serverDebugDebugSSL": serverDebugDebugSSL,
       "serverDebugDebugRouting": serverDebugDebugRouting,
       "serverDebugDebugJpaDataCache": serverDebugDebugJpaDataCache,
       "serverDebugDebugConsensusLeasing": serverDebugDebugConsensusLeasing,
       "serverDebugDebugDiagnosticInstrumentationEvents": serverDebugDebugDiagnosticInstrumentationEvents,
       "serverDebugDebugStoreIOLogicalBoot": serverDebugDebugStoreIOLogicalBoot,
       "serverDebugDebugEjbSwapping": serverDebugDebugEjbSwapping,
       "serverDebugDebugJTANonXA": serverDebugDebugJTANonXA,
       "serverDebugDebugDiagnosticInstrumentationConfig": serverDebugDebugDiagnosticInstrumentationConfig,
       "serverDebugDebugMessaging": serverDebugDebugMessaging,
       "serverDebugDebugSecurityCertPath": serverDebugDebugSecurityCertPath,
       "serverDebugDebugJNDIResolution": serverDebugDebugJNDIResolution,
       "serverDebugDebugSNMPProtocolTCP": serverDebugDebugSNMPProtocolTCP,
       "serverDebugDebugRALocalOut": serverDebugDebugRALocalOut,
       "serverDebugDebugJMXDomain": serverDebugDebugJMXDomain,
       "serverDebugDebugDiagnosticsHarvesterData": serverDebugDebugDiagnosticsHarvesterData,
       "serverDebugDebugSecurityRoleMap": serverDebugDebugSecurityRoleMap,
       "serverDebugDebugEjbDeployment": serverDebugDebugEjbDeployment,
       "serverDebugDebugSNMPToolkit": serverDebugDebugSNMPToolkit,
       "serverDebugDebugMuxer": serverDebugDebugMuxer,
       "serverDebugMasterDeployer": serverDebugMasterDeployer,
       "serverDebugDebugSecuritySAMLCredMap": serverDebugDebugSecuritySAMLCredMap,
       "serverDebugDiagnosticContextDebugMode": serverDebugDiagnosticContextDebugMode,
       "serverDebugDebugSecuritySSL": serverDebugDebugSecuritySSL,
       "serverDebugDebugDiagnosticJdbcArchive": serverDebugDebugDiagnosticJdbcArchive,
       "serverDebugSlaveDeployer": serverDebugSlaveDeployer,
       "serverDebugDebugJTAXAStackTrace": serverDebugDebugJTAXAStackTrace,
       "serverDebugDebugSecurityJACC": serverDebugDebugSecurityJACC,
       "serverDebugDebugEjbCmpDeployment": serverDebugDebugEjbCmpDeployment,
       "serverDebugType": serverDebugType,
       "serverDebugDebugEmbeddedLDAPWriteOverrideProps": serverDebugDebugEmbeddedLDAPWriteOverrideProps,
       "serverDebugDebugSecurityJACCPolicy": serverDebugDebugSecurityJACCPolicy,
       "serverDebugDebugJMSDispatcher": serverDebugDebugJMSDispatcher,
       "serverDebugDebugClusterAnnouncements": serverDebugDebugClusterAnnouncements,
       "serverDebugClasspathServlet": serverDebugClasspathServlet,
       "serverDebugDebugIIOPTunneling": serverDebugDebugIIOPTunneling,
       "serverDebugDebugJAXPDebugLevel": serverDebugDebugJAXPDebugLevel,
       "serverDebugDebugJ2EEManagement": serverDebugDebugJ2EEManagement,
       "serverDebugDebugJTAResourceName": serverDebugDebugJTAResourceName,
       "serverDebugDebugSecurityEncryptionService": serverDebugDebugSecurityEncryptionService,
       "serverDebugDebugJDBCConn": serverDebugDebugJDBCConn,
       "serverDebugDebugDRSUpdateStatus": serverDebugDebugDRSUpdateStatus,
       "serverDebugDebugDeploymentServiceStatusUpdates": serverDebugDebugDeploymentServiceStatusUpdates,
       "serverDebugDebugMuxerTimeout": serverDebugDebugMuxerTimeout,
       "serverDebugDebugSAFStore": serverDebugDebugSAFStore,
       "serverDebugName": serverDebugName,
       "serverDebugDebugDomainLogHandler": serverDebugDebugDomainLogHandler,
       "serverDebugDebugWTCConfig": serverDebugDebugWTCConfig,
       "serverDebugDebugJTAGatewayStackTrace": serverDebugDebugJTAGatewayStackTrace,
       "serverDebugDebugMuxerException": serverDebugDebugMuxerException,
       "serverDebugDebugDRSHeartbeats": serverDebugDebugDRSHeartbeats,
       "serverDebugDebugJTA2PCStackTrace": serverDebugDebugJTA2PCStackTrace,
       "serverDebugDebugJMSBackEnd": serverDebugDebugJMSBackEnd,
       "serverDebugDebugXMLEntityCacheIncludeClass": serverDebugDebugXMLEntityCacheIncludeClass,
       "serverDebugDebugCluster": serverDebugDebugCluster,
       "serverDebugDebugJTAResourceHealth": serverDebugDebugJTAResourceHealth,
       "serverDebugDebugRASecurityCtx": serverDebugDebugRASecurityCtx,
       "serverDebugDebugStoreAdmin": serverDebugDebugStoreAdmin,
       "serverDebugClassFinder": serverDebugClassFinder,
       "serverDebugDebugDeploymentService": serverDebugDebugDeploymentService,
       "serverDebugDebugHttpSessions": serverDebugDebugHttpSessions,
       "serverDebugDebugJMXEdit": serverDebugDebugJMXEdit,
       "serverDebugDebugClusterFragments": serverDebugDebugClusterFragments,
       "serverDebugDebugWTCJatmiEx": serverDebugDebugWTCJatmiEx,
       "serverDebugDebugWTCUData": serverDebugDebugWTCUData,
       "serverDebugDebugDeploymentServiceInternal": serverDebugDebugDeploymentServiceInternal,
       "serverDebugDebugSecurityAuditor": serverDebugDebugSecurityAuditor,
       "serverDebugDebugJpaJdbcSql": serverDebugDebugJpaJdbcSql,
       "serverDebugDebugEjbInvoke": serverDebugDebugEjbInvoke,
       "serverDebugDebugRAWork": serverDebugDebugRAWork,
       "serverDebugDebugDRSCalls": serverDebugDebugDRSCalls,
       "serverDebugDebugSecurityPredicate": serverDebugDebugSecurityPredicate,
       "serverDebugDebugXMLRegistryUseShortClass": serverDebugDebugXMLRegistryUseShortClass,
       "serverDebugDebugSecurityUserLockout": serverDebugDebugSecurityUserLockout,
       "serverDebugDebugJTANamingStackTrace": serverDebugDebugJTANamingStackTrace,
       "serverDebugListenThreadDebug": serverDebugListenThreadDebug,
       "serverDebugDebugJpaMetaData": serverDebugDebugJpaMetaData,
       "serverDebugDebugJTA2PC": serverDebugDebugJTA2PC,
       "serverDebugDebugAppContainer": serverDebugDebugAppContainer,
       "serverDebugDebugJAXPUseShortClass": serverDebugDebugJAXPUseShortClass,
       "serverDebugDebugEventManager": serverDebugDebugEventManager,
       "serverDebugDebugJpaEnhance": serverDebugDebugJpaEnhance,
       "serverDebugDebugTunnelingConnectionTimeout": serverDebugDebugTunnelingConnectionTimeout,
       "serverDebugDebugSecuritySAMLAtn": serverDebugDebugSecuritySAMLAtn,
       "serverDebugDebugSecurityAtn": serverDebugDebugSecurityAtn,
       "serverDebugLogDGCStatistics": serverDebugLogDGCStatistics,
       "serverDebugDebugDiagnosticQuery": serverDebugDebugDiagnosticQuery,
       "serverDebugDebugJMX": serverDebugDebugJMX,
       "serverDebugDebugXMLRegistryIncludeName": serverDebugDebugXMLRegistryIncludeName,
       "serverDebugDebugDiagnosticInstrumentationWeavingMatches": serverDebugDebugDiagnosticInstrumentationWeavingMatches,
       "serverDebugDebugAbbreviation": serverDebugDebugAbbreviation,
       "serverDebugDebugJAXPIncludeClass": serverDebugDebugJAXPIncludeClass,
       "serverDebugDebugHttpLogging": serverDebugDebugHttpLogging,
       "serverDebugDebugJpaJdbcJdbc": serverDebugDebugJpaJdbcJdbc,
       "serverDebugDebugSAFManager": serverDebugDebugSAFManager,
       "serverDebugDebugPathSvcVerbose": serverDebugDebugPathSvcVerbose,
       "serverDebugDebugWTCGwtEx": serverDebugDebugWTCGwtEx,
       "serverDebugDebugConnectorService": serverDebugDebugConnectorService,
       "serverDebugDebugJMSMessagePath": serverDebugDebugJMSMessagePath,
       "serverDebugDebugJTAMigration": serverDebugDebugJTAMigration,
       "serverDebugDebugSecurityRealm": serverDebugDebugSecurityRealm,
       "serverDebugDebugIIOPStartup": serverDebugDebugIIOPStartup,
       "serverDebugDebugJDBCDriverLogging": serverDebugDebugJDBCDriverLogging,
       "serverDebugDebugJMSModule": serverDebugDebugJMSModule,
       "serverDebugDebugEjbCmpRuntime": serverDebugDebugEjbCmpRuntime,
       "serverDebugDebugWANReplicationDetails": serverDebugDebugWANReplicationDetails,
       "serverDebugDebugJMST3Server": serverDebugDebugJMST3Server,
       "serverDebugDebugXMLEntityCacheIncludeLocation": serverDebugDebugXMLEntityCacheIncludeLocation,
       "serverDebugDebugSAFVerbose": serverDebugDebugSAFVerbose,
       "serverDebugDebugDRSQueues": serverDebugDebugDRSQueues,
       "serverDebugDebugDiagnosticInstrumentationActions": serverDebugDebugDiagnosticInstrumentationActions,
       "serverDebugDebugDiagnosticsHarvester": serverDebugDebugDiagnosticsHarvester,
       "serverDebugDebugEjbMdbConnection": serverDebugDebugEjbMdbConnection,
       "serverDebugDebugJTANaming": serverDebugDebugJTANaming,
       "serverDebugDebugSecuritySSLEaten": serverDebugDebugSecuritySSLEaten,
       "serverDebugDebugEjbTimers": serverDebugDebugEjbTimers,
       "serverDebugDebugJMXCore": serverDebugDebugJMXCore,
       "serverDebugDebugJpaTool": serverDebugDebugJpaTool,
       "serverDebugDebugIIOPNaming": serverDebugDebugIIOPNaming,
       "serverDebugDebugJTARMI": serverDebugDebugJTARMI,
       "serverDebugDebugJMSFrontEnd": serverDebugDebugJMSFrontEnd,
       "serverDebugDebugSecuritySAMLService": serverDebugDebugSecuritySAMLService,
       "serverDebugDebugRA": serverDebugDebugRA,
       "serverDebugDebugXMLRegistryDebugName": serverDebugDebugXMLRegistryDebugName,
       "serverDebugDebugSelfTuning": serverDebugDebugSelfTuning,
       "serverDebugDebugIIOPMarshal": serverDebugDebugIIOPMarshal,
       "serverDebugDebugSecurityAtz": serverDebugDebugSecurityAtz,
       "serverDebugDebugIIOPOTS": serverDebugDebugIIOPOTS,
       "serverDebugDebugDeployment": serverDebugDebugDeployment,
       "serverDebugDebugRAWorkEvents": serverDebugDebugRAWorkEvents,
       "serverDebugDebugJTAGateway": serverDebugDebugJTAGateway,
       "serverDebugDebugWebAppIdentityAssertion": serverDebugDebugWebAppIdentityAssertion,
       "serverDebugDebugMuxerConnection": serverDebugDebugMuxerConnection,
       "serverDebugDebugDiagnosticArchiveRetirement": serverDebugDebugDiagnosticArchiveRetirement,
       "serverDebugDebugRAPoolVerbose": serverDebugDebugRAPoolVerbose,
       "serverDebugDebugStoreIOLogical": serverDebugDebugStoreIOLogical,
       "serverDebugDebugRAConnections": serverDebugDebugRAConnections,
       "serverDebugDebugReplicationDetails": serverDebugDebugReplicationDetails,
       "serverDebugDebugDiagnosticsHarvesterMBeanPlugin": serverDebugDebugDiagnosticsHarvesterMBeanPlugin,
       "serverDebugDebugRALifecycle": serverDebugDebugRALifecycle,
       "serverDebugDebugJMSDistTopic": serverDebugDebugJMSDistTopic,
       "serverDebugDebugDGCEnrollment": serverDebugDebugDGCEnrollment,
       "serverDebugDebugPathSvc": serverDebugDebugPathSvc,
       "serverDebugDebugDiagnosticContext": serverDebugDebugDiagnosticContext,
       "serverFailureTriggerTable": serverFailureTriggerTable,
       "serverFailureTriggerEntry": serverFailureTriggerEntry,
       "serverFailureTriggerIndex": serverFailureTriggerIndex,
       "serverFailureTriggerObjectName": serverFailureTriggerObjectName,
       "serverFailureTriggerType": serverFailureTriggerType,
       "serverFailureTriggerMaxStuckThreadTime": serverFailureTriggerMaxStuckThreadTime,
       "serverFailureTriggerStuckThreadCount": serverFailureTriggerStuckThreadCount,
       "serverFailureTriggerName": serverFailureTriggerName,
       "shutdownClassTable": shutdownClassTable,
       "shutdownClassEntry": shutdownClassEntry,
       "shutdownClassIndex": shutdownClassIndex,
       "shutdownClassObjectName": shutdownClassObjectName,
       "shutdownClassType": shutdownClassType,
       "shutdownClassDeploymentOrder": shutdownClassDeploymentOrder,
       "shutdownClassArguments": shutdownClassArguments,
       "shutdownClassName": shutdownClassName,
       "shutdownClassClassName": shutdownClassClassName,
       "singleSignOnServicesTable": singleSignOnServicesTable,
       "singleSignOnServicesEntry": singleSignOnServicesEntry,
       "singleSignOnServicesIndex": singleSignOnServicesIndex,
       "singleSignOnServicesObjectName": singleSignOnServicesObjectName,
       "singleSignOnServicesArtifactMaxCacheSize": singleSignOnServicesArtifactMaxCacheSize,
       "singleSignOnServicesIdentityProviderRedirectBindingEnabled": singleSignOnServicesIdentityProviderRedirectBindingEnabled,
       "singleSignOnServicesForceAuthn": singleSignOnServicesForceAuthn,
       "singleSignOnServicesIdentityProviderPreferredBinding": singleSignOnServicesIdentityProviderPreferredBinding,
       "singleSignOnServicesContactPersonGivenName": singleSignOnServicesContactPersonGivenName,
       "singleSignOnServicesWantArtifactRequestsSigned": singleSignOnServicesWantArtifactRequestsSigned,
       "singleSignOnServicesContactPersonTelephoneNumber": singleSignOnServicesContactPersonTelephoneNumber,
       "singleSignOnServicesPassive": singleSignOnServicesPassive,
       "singleSignOnServicesTransportLayerSecurityKeyAlias": singleSignOnServicesTransportLayerSecurityKeyAlias,
       "singleSignOnServicesSSOSigningKeyAlias": singleSignOnServicesSSOSigningKeyAlias,
       "singleSignOnServicesLoginReturnQueryParameter": singleSignOnServicesLoginReturnQueryParameter,
       "singleSignOnServicesAuthnRequestTimeout": singleSignOnServicesAuthnRequestTimeout,
       "singleSignOnServicesPOSTOneUseCheckEnabled": singleSignOnServicesPOSTOneUseCheckEnabled,
       "singleSignOnServicesIdentityProviderArtifactBindingEnabled": singleSignOnServicesIdentityProviderArtifactBindingEnabled,
       "singleSignOnServicesWantTransportLayerSecurityClientAuthentication": singleSignOnServicesWantTransportLayerSecurityClientAuthentication,
       "singleSignOnServicesIdentityProviderEnabled": singleSignOnServicesIdentityProviderEnabled,
       "singleSignOnServicesLoginURL": singleSignOnServicesLoginURL,
       "singleSignOnServicesArtifactTimeout": singleSignOnServicesArtifactTimeout,
       "singleSignOnServicesContactPersonType": singleSignOnServicesContactPersonType,
       "singleSignOnServicesOrganizationName": singleSignOnServicesOrganizationName,
       "singleSignOnServicesDefaultURL": singleSignOnServicesDefaultURL,
       "singleSignOnServicesWantBasicAuthClientAuthentication": singleSignOnServicesWantBasicAuthClientAuthentication,
       "singleSignOnServicesType": singleSignOnServicesType,
       "singleSignOnServicesContactPersonEmailAddress": singleSignOnServicesContactPersonEmailAddress,
       "singleSignOnServicesRecipientCheckEnabled": singleSignOnServicesRecipientCheckEnabled,
       "singleSignOnServicesErrorPath": singleSignOnServicesErrorPath,
       "singleSignOnServicesAuthnRequestMaxCacheSize": singleSignOnServicesAuthnRequestMaxCacheSize,
       "singleSignOnServicesReplicatedCacheEnabled": singleSignOnServicesReplicatedCacheEnabled,
       "singleSignOnServicesServiceProviderEnabled": singleSignOnServicesServiceProviderEnabled,
       "singleSignOnServicesName": singleSignOnServicesName,
       "singleSignOnServicesSignAuthnRequests": singleSignOnServicesSignAuthnRequests,
       "singleSignOnServicesContactPersonCompany": singleSignOnServicesContactPersonCompany,
       "singleSignOnServicesBasicAuthUsername": singleSignOnServicesBasicAuthUsername,
       "singleSignOnServicesServiceProviderPOSTBindingEnabled": singleSignOnServicesServiceProviderPOSTBindingEnabled,
       "singleSignOnServicesEntityID": singleSignOnServicesEntityID,
       "singleSignOnServicesPublishedSiteURL": singleSignOnServicesPublishedSiteURL,
       "singleSignOnServicesOrganizationURL": singleSignOnServicesOrganizationURL,
       "singleSignOnServicesServiceProviderArtifactBindingEnabled": singleSignOnServicesServiceProviderArtifactBindingEnabled,
       "singleSignOnServicesWantAssertionsSigned": singleSignOnServicesWantAssertionsSigned,
       "singleSignOnServicesWantAuthnRequestsSigned": singleSignOnServicesWantAuthnRequestsSigned,
       "singleSignOnServicesServiceProviderPreferredBinding": singleSignOnServicesServiceProviderPreferredBinding,
       "singleSignOnServicesIdentityProviderPOSTBindingEnabled": singleSignOnServicesIdentityProviderPOSTBindingEnabled,
       "singleSignOnServicesContactPersonSurName": singleSignOnServicesContactPersonSurName,
       "singletonServiceAppScopedTable": singletonServiceAppScopedTable,
       "singletonServiceAppScopedEntry": singletonServiceAppScopedEntry,
       "singletonServiceAppScopedIndex": singletonServiceAppScopedIndex,
       "singletonServiceAppScopedObjectName": singletonServiceAppScopedObjectName,
       "singletonServiceAppScopedType": singletonServiceAppScopedType,
       "singletonServiceAppScopedCompatibilityName": singletonServiceAppScopedCompatibilityName,
       "singletonServiceAppScopedMillisToSleepBetweenAttempts": singletonServiceAppScopedMillisToSleepBetweenAttempts,
       "singletonServiceAppScopedModuleType": singletonServiceAppScopedModuleType,
       "singletonServiceAppScopedName": singletonServiceAppScopedName,
       "singletonServiceAppScopedAdditionalMigrationAttempts": singletonServiceAppScopedAdditionalMigrationAttempts,
       "singletonServiceAppScopedClassName": singletonServiceAppScopedClassName,
       "singletonServiceTable": singletonServiceTable,
       "singletonServiceEntry": singletonServiceEntry,
       "singletonServiceIndex": singletonServiceIndex,
       "singletonServiceObjectName": singletonServiceObjectName,
       "singletonServiceType": singletonServiceType,
       "singletonServiceMillisToSleepBetweenAttempts": singletonServiceMillisToSleepBetweenAttempts,
       "singletonServiceName": singletonServiceName,
       "singletonServiceAdditionalMigrationAttempts": singletonServiceAdditionalMigrationAttempts,
       "singletonServiceClassName": singletonServiceClassName,
       "stuckThreadActionTable": stuckThreadActionTable,
       "stuckThreadActionEntry": stuckThreadActionEntry,
       "stuckThreadActionIndex": stuckThreadActionIndex,
       "stuckThreadActionObjectName": stuckThreadActionObjectName,
       "stuckThreadActionType": stuckThreadActionType,
       "stuckThreadActionName": stuckThreadActionName,
       "unixMachineTable": unixMachineTable,
       "unixMachineEntry": unixMachineEntry,
       "unixMachineIndex": unixMachineIndex,
       "unixMachineObjectName": unixMachineObjectName,
       "unixMachineType": unixMachineType,
       "unixMachinePostBindUID": unixMachinePostBindUID,
       "unixMachinePostBindUIDEnabled": unixMachinePostBindUIDEnabled,
       "unixMachinePostBindGID": unixMachinePostBindGID,
       "unixMachinePostBindGIDEnabled": unixMachinePostBindGIDEnabled,
       "unixMachineName": unixMachineName,
       "virtualDestinationTable": virtualDestinationTable,
       "virtualDestinationEntry": virtualDestinationEntry,
       "virtualDestinationIndex": virtualDestinationIndex,
       "virtualDestinationObjectName": virtualDestinationObjectName,
       "virtualDestinationType": virtualDestinationType,
       "virtualDestinationDeploymentOrder": virtualDestinationDeploymentOrder,
       "virtualDestinationJNDIName": virtualDestinationJNDIName,
       "virtualDestinationName": virtualDestinationName,
       "wldfDataRetirementByAgeTable": wldfDataRetirementByAgeTable,
       "wldfDataRetirementByAgeEntry": wldfDataRetirementByAgeEntry,
       "wldfDataRetirementByAgeIndex": wldfDataRetirementByAgeIndex,
       "wldfDataRetirementByAgeObjectName": wldfDataRetirementByAgeObjectName,
       "wldfDataRetirementByAgeType": wldfDataRetirementByAgeType,
       "wldfDataRetirementByAgeRetirementTime": wldfDataRetirementByAgeRetirementTime,
       "wldfDataRetirementByAgeRetirementPeriod": wldfDataRetirementByAgeRetirementPeriod,
       "wldfDataRetirementByAgeRetirementAge": wldfDataRetirementByAgeRetirementAge,
       "wldfDataRetirementByAgeEnabled": wldfDataRetirementByAgeEnabled,
       "wldfDataRetirementByAgeArchiveName": wldfDataRetirementByAgeArchiveName,
       "wldfDataRetirementByAgeName": wldfDataRetirementByAgeName,
       "wldfServerDiagnosticTable": wldfServerDiagnosticTable,
       "wldfServerDiagnosticEntry": wldfServerDiagnosticEntry,
       "wldfServerDiagnosticIndex": wldfServerDiagnosticIndex,
       "wldfServerDiagnosticObjectName": wldfServerDiagnosticObjectName,
       "wldfServerDiagnosticType": wldfServerDiagnosticType,
       "wldfServerDiagnosticSynchronousEventPersistenceEnabled": wldfServerDiagnosticSynchronousEventPersistenceEnabled,
       "wldfServerDiagnosticEventPersistenceInterval": wldfServerDiagnosticEventPersistenceInterval,
       "wldfServerDiagnosticPreferredStoreSizeLimit": wldfServerDiagnosticPreferredStoreSizeLimit,
       "wldfServerDiagnosticImageTimeout": wldfServerDiagnosticImageTimeout,
       "wldfServerDiagnosticDiagnosticStoreDir": wldfServerDiagnosticDiagnosticStoreDir,
       "wldfServerDiagnosticDiagnosticDataArchiveType": wldfServerDiagnosticDiagnosticDataArchiveType,
       "wldfServerDiagnosticDiagnosticContextEnabled": wldfServerDiagnosticDiagnosticContextEnabled,
       "wldfServerDiagnosticStoreSizeCheckPeriod": wldfServerDiagnosticStoreSizeCheckPeriod,
       "wldfServerDiagnosticEventsImageCaptureInterval": wldfServerDiagnosticEventsImageCaptureInterval,
       "wldfServerDiagnosticImageDir": wldfServerDiagnosticImageDir,
       "wldfServerDiagnosticDataRetirementEnabled": wldfServerDiagnosticDataRetirementEnabled,
       "wldfServerDiagnosticName": wldfServerDiagnosticName,
       "wldfSystemResourceTable": wldfSystemResourceTable,
       "wldfSystemResourceEntry": wldfSystemResourceEntry,
       "wldfSystemResourceIndex": wldfSystemResourceIndex,
       "wldfSystemResourceObjectName": wldfSystemResourceObjectName,
       "wldfSystemResourceType": wldfSystemResourceType,
       "wldfSystemResourceCompatibilityName": wldfSystemResourceCompatibilityName,
       "wldfSystemResourceDeploymentOrder": wldfSystemResourceDeploymentOrder,
       "wldfSystemResourceDeploymentPrincipalName": wldfSystemResourceDeploymentPrincipalName,
       "wldfSystemResourceDescriptorFileName": wldfSystemResourceDescriptorFileName,
       "wldfSystemResourceDescription": wldfSystemResourceDescription,
       "wldfSystemResourceModuleType": wldfSystemResourceModuleType,
       "wldfSystemResourceName": wldfSystemResourceName,
       "wldfSystemResourceSourcePath": wldfSystemResourceSourcePath,
       "wtcServerTable": wtcServerTable,
       "wtcServerEntry": wtcServerEntry,
       "wtcServerIndex": wtcServerIndex,
       "wtcServerObjectName": wtcServerObjectName,
       "wtcServerType": wtcServerType,
       "wtcServerName": wtcServerName,
       "wtcServerDeploymentOrder": wtcServerDeploymentOrder,
       "webAppContainerTable": webAppContainerTable,
       "webAppContainerEntry": webAppContainerEntry,
       "webAppContainerIndex": webAppContainerIndex,
       "webAppContainerObjectName": webAppContainerObjectName,
       "webAppContainerType": webAppContainerType,
       "webAppContainerMaxPostSize": webAppContainerMaxPostSize,
       "webAppContainerXPoweredByHeaderLevel": webAppContainerXPoweredByHeaderLevel,
       "webAppContainerServletAuthenticationFormURL": webAppContainerServletAuthenticationFormURL,
       "webAppContainerReloginEnabled": webAppContainerReloginEnabled,
       "webAppContainerWorkContextPropagationEnabled": webAppContainerWorkContextPropagationEnabled,
       "webAppContainerRtexprvalueJspParamName": webAppContainerRtexprvalueJspParamName,
       "webAppContainerFilterDispatchedRequestsEnabled": webAppContainerFilterDispatchedRequestsEnabled,
       "webAppContainerClientCertProxyEnabled": webAppContainerClientCertProxyEnabled,
       "webAppContainerOverloadProtectionEnabled": webAppContainerOverloadProtectionEnabled,
       "webAppContainerOptimisticSerialization": webAppContainerOptimisticSerialization,
       "webAppContainerRetainOriginalURL": webAppContainerRetainOriginalURL,
       "webAppContainerWeblogicPluginEnabled": webAppContainerWeblogicPluginEnabled,
       "webAppContainerHttpTraceSupportEnabled": webAppContainerHttpTraceSupportEnabled,
       "webAppContainerWAPEnabled": webAppContainerWAPEnabled,
       "webAppContainerJSPCompilerBackwardsCompatible": webAppContainerJSPCompilerBackwardsCompatible,
       "webAppContainerAuthCookieEnabled": webAppContainerAuthCookieEnabled,
       "webAppContainerName": webAppContainerName,
       "webAppContainerAllowAllRoles": webAppContainerAllowAllRoles,
       "webAppContainerP3PHeaderValue": webAppContainerP3PHeaderValue,
       "webAppContainerServletReloadCheckSecs": webAppContainerServletReloadCheckSecs,
       "webAppContainerMaxPostTimeSecs": webAppContainerMaxPostTimeSecs,
       "webAppContainerMimeMappingFile": webAppContainerMimeMappingFile,
       "webAppContainerShowArchivedRealPathEnabled": webAppContainerShowArchivedRealPathEnabled,
       "webAppContainerPostTimeoutSecs": webAppContainerPostTimeoutSecs,
       "webServerLogTable": webServerLogTable,
       "webServerLogEntry": webServerLogEntry,
       "webServerLogIndex": webServerLogIndex,
       "webServerLogObjectName": webServerLogObjectName,
       "webServerLogType": webServerLogType,
       "webServerLogLogTimeInGMT": webServerLogLogTimeInGMT,
       "webServerLogNumberOfFilesLimited": webServerLogNumberOfFilesLimited,
       "webServerLogFileTimeSpan": webServerLogFileTimeSpan,
       "webServerLogLogFileFormat": webServerLogLogFileFormat,
       "webServerLogRotationType": webServerLogRotationType,
       "webServerLogFileCount": webServerLogFileCount,
       "webServerLogLoggingEnabled": webServerLogLoggingEnabled,
       "webServerLogELFFields": webServerLogELFFields,
       "webServerLogFileName": webServerLogFileName,
       "webServerLogFileMinSize": webServerLogFileMinSize,
       "webServerLogBufferSizeKB": webServerLogBufferSizeKB,
       "webServerLogDateFormatPattern": webServerLogDateFormatPattern,
       "webServerLogRotationTime": webServerLogRotationTime,
       "webServerLogRotateLogOnStartup": webServerLogRotateLogOnStartup,
       "webServerLogName": webServerLogName,
       "webServerLogLogFileRotationDir": webServerLogLogFileRotationDir,
       "webServiceTable": webServiceTable,
       "webServiceEntry": webServiceEntry,
       "webServiceIndex": webServiceIndex,
       "webServiceObjectName": webServiceObjectName,
       "webServiceType": webServiceType,
       "webServiceMessagingQueueMDBRunAsPrincipalName": webServiceMessagingQueueMDBRunAsPrincipalName,
       "webServiceMessagingQueue": webServiceMessagingQueue,
       "webServiceJmsConnectionFactory": webServiceJmsConnectionFactory,
       "webServiceCallbackQueueMDBRunAsPrincipalName": webServiceCallbackQueueMDBRunAsPrincipalName,
       "webServiceCallbackQueue": webServiceCallbackQueue,
       "webServiceName": webServiceName,
       "webserviceCredentialProviderTable": webserviceCredentialProviderTable,
       "webserviceCredentialProviderEntry": webserviceCredentialProviderEntry,
       "webserviceCredentialProviderIndex": webserviceCredentialProviderIndex,
       "webserviceCredentialProviderObjectName": webserviceCredentialProviderObjectName,
       "webserviceCredentialProviderType": webserviceCredentialProviderType,
       "webserviceCredentialProviderTokenType": webserviceCredentialProviderTokenType,
       "webserviceCredentialProviderName": webserviceCredentialProviderName,
       "webserviceCredentialProviderClassName": webserviceCredentialProviderClassName,
       "webserviceSecurityTable": webserviceSecurityTable,
       "webserviceSecurityEntry": webserviceSecurityEntry,
       "webserviceSecurityIndex": webserviceSecurityIndex,
       "webserviceSecurityObjectName": webserviceSecurityObjectName,
       "webserviceSecurityType": webserviceSecurityType,
       "webserviceSecurityDefaultCredentialProviderSTSURI": webserviceSecurityDefaultCredentialProviderSTSURI,
       "webserviceSecurityName": webserviceSecurityName,
       "webserviceSecurityPolicySelectionPreference": webserviceSecurityPolicySelectionPreference,
       "webserviceSecurityCompatibilityPreference": webserviceSecurityCompatibilityPreference,
       "webserviceSecurityTokenTable": webserviceSecurityTokenTable,
       "webserviceSecurityTokenEntry": webserviceSecurityTokenEntry,
       "webserviceSecurityTokenIndex": webserviceSecurityTokenIndex,
       "webserviceSecurityTokenObjectName": webserviceSecurityTokenObjectName,
       "webserviceSecurityTokenType": webserviceSecurityTokenType,
       "webserviceSecurityTokenTokenType": webserviceSecurityTokenTokenType,
       "webserviceSecurityTokenName": webserviceSecurityTokenName,
       "webserviceSecurityTokenClassName": webserviceSecurityTokenClassName,
       "webserviceTimestampTable": webserviceTimestampTable,
       "webserviceTimestampEntry": webserviceTimestampEntry,
       "webserviceTimestampIndex": webserviceTimestampIndex,
       "webserviceTimestampObjectName": webserviceTimestampObjectName,
       "webserviceTimestampType": webserviceTimestampType,
       "webserviceTimestampMaxProcessingDelay": webserviceTimestampMaxProcessingDelay,
       "webserviceTimestampClockSkew": webserviceTimestampClockSkew,
       "webserviceTimestampClockSynchronized": webserviceTimestampClockSynchronized,
       "webserviceTimestampClockPrecision": webserviceTimestampClockPrecision,
       "webserviceTimestampValidityPeriod": webserviceTimestampValidityPeriod,
       "webserviceTimestampLaxPrecision": webserviceTimestampLaxPrecision,
       "webserviceTimestampName": webserviceTimestampName,
       "webserviceTokenHandlerTable": webserviceTokenHandlerTable,
       "webserviceTokenHandlerEntry": webserviceTokenHandlerEntry,
       "webserviceTokenHandlerIndex": webserviceTokenHandlerIndex,
       "webserviceTokenHandlerObjectName": webserviceTokenHandlerObjectName,
       "webserviceTokenHandlerType": webserviceTokenHandlerType,
       "webserviceTokenHandlerHandlingOrder": webserviceTokenHandlerHandlingOrder,
       "webserviceTokenHandlerTokenType": webserviceTokenHandlerTokenType,
       "webserviceTokenHandlerName": webserviceTokenHandlerName,
       "webserviceTokenHandlerClassName": webserviceTokenHandlerClassName,
       "workManagerTable": workManagerTable,
       "workManagerEntry": workManagerEntry,
       "workManagerIndex": workManagerIndex,
       "workManagerObjectName": workManagerObjectName,
       "workManagerType": workManagerType,
       "workManagerDeploymentOrder": workManagerDeploymentOrder,
       "workManagerIgnoreStuckThreads": workManagerIgnoreStuckThreads,
       "workManagerName": workManagerName,
       "workManagerShutdownTriggerTable": workManagerShutdownTriggerTable,
       "workManagerShutdownTriggerEntry": workManagerShutdownTriggerEntry,
       "workManagerShutdownTriggerIndex": workManagerShutdownTriggerIndex,
       "workManagerShutdownTriggerObjectName": workManagerShutdownTriggerObjectName,
       "workManagerShutdownTriggerType": workManagerShutdownTriggerType,
       "workManagerShutdownTriggerMaxStuckThreadTime": workManagerShutdownTriggerMaxStuckThreadTime,
       "workManagerShutdownTriggerStuckThreadCount": workManagerShutdownTriggerStuckThreadCount,
       "workManagerShutdownTriggerName": workManagerShutdownTriggerName,
       "appClientComponentRuntimeTable": appClientComponentRuntimeTable,
       "appClientComponentRuntimeEntry": appClientComponentRuntimeEntry,
       "appClientComponentRuntimeIndex": appClientComponentRuntimeIndex,
       "appClientComponentRuntimeObjectName": appClientComponentRuntimeObjectName,
       "appClientComponentRuntimeType": appClientComponentRuntimeType,
       "appClientComponentRuntimeModuleId": appClientComponentRuntimeModuleId,
       "appClientComponentRuntimeDeploymentState": appClientComponentRuntimeDeploymentState,
       "appClientComponentRuntimeName": appClientComponentRuntimeName,
       "appRuntimeStateRuntimeTable": appRuntimeStateRuntimeTable,
       "appRuntimeStateRuntimeEntry": appRuntimeStateRuntimeEntry,
       "appRuntimeStateRuntimeIndex": appRuntimeStateRuntimeIndex,
       "appRuntimeStateRuntimeObjectName": appRuntimeStateRuntimeObjectName,
       "appRuntimeStateRuntimeType": appRuntimeStateRuntimeType,
       "appRuntimeStateRuntimeName": appRuntimeStateRuntimeName,
       "deploymentRequestTaskRuntimeTable": deploymentRequestTaskRuntimeTable,
       "deploymentRequestTaskRuntimeEntry": deploymentRequestTaskRuntimeEntry,
       "deploymentRequestTaskRuntimeIndex": deploymentRequestTaskRuntimeIndex,
       "deploymentRequestTaskRuntimeObjectName": deploymentRequestTaskRuntimeObjectName,
       "deploymentRequestTaskRuntimeType": deploymentRequestTaskRuntimeType,
       "deploymentRequestTaskRuntimeStatus": deploymentRequestTaskRuntimeStatus,
       "deploymentRequestTaskRuntimeRunning": deploymentRequestTaskRuntimeRunning,
       "deploymentRequestTaskRuntimeBeginTime": deploymentRequestTaskRuntimeBeginTime,
       "deploymentRequestTaskRuntimeEndTime": deploymentRequestTaskRuntimeEndTime,
       "deploymentRequestTaskRuntimeSystemTask": deploymentRequestTaskRuntimeSystemTask,
       "deploymentRequestTaskRuntimeDescription": deploymentRequestTaskRuntimeDescription,
       "deploymentRequestTaskRuntimeName": deploymentRequestTaskRuntimeName,
       "entityEJBRuntimeTable": entityEJBRuntimeTable,
       "entityEJBRuntimeEntry": entityEJBRuntimeEntry,
       "entityEJBRuntimeIndex": entityEJBRuntimeIndex,
       "entityEJBRuntimeObjectName": entityEJBRuntimeObjectName,
       "entityEJBRuntimeType": entityEJBRuntimeType,
       "entityEJBRuntimeEJBName": entityEJBRuntimeEJBName,
       "entityEJBRuntimeName": entityEJBRuntimeName,
       "jdbcDataSourceTaskRuntimeTable": jdbcDataSourceTaskRuntimeTable,
       "jdbcDataSourceTaskRuntimeEntry": jdbcDataSourceTaskRuntimeEntry,
       "jdbcDataSourceTaskRuntimeIndex": jdbcDataSourceTaskRuntimeIndex,
       "jdbcDataSourceTaskRuntimeObjectName": jdbcDataSourceTaskRuntimeObjectName,
       "jdbcDataSourceTaskRuntimeType": jdbcDataSourceTaskRuntimeType,
       "jdbcDataSourceTaskRuntimeStatus": jdbcDataSourceTaskRuntimeStatus,
       "jdbcDataSourceTaskRuntimeRunning": jdbcDataSourceTaskRuntimeRunning,
       "jdbcDataSourceTaskRuntimeBeginTime": jdbcDataSourceTaskRuntimeBeginTime,
       "jdbcDataSourceTaskRuntimeEndTime": jdbcDataSourceTaskRuntimeEndTime,
       "jdbcDataSourceTaskRuntimeSystemTask": jdbcDataSourceTaskRuntimeSystemTask,
       "jdbcDataSourceTaskRuntimeDescription": jdbcDataSourceTaskRuntimeDescription,
       "jdbcDataSourceTaskRuntimeName": jdbcDataSourceTaskRuntimeName,
       "jdbcDriverRuntimeTable": jdbcDriverRuntimeTable,
       "jdbcDriverRuntimeEntry": jdbcDriverRuntimeEntry,
       "jdbcDriverRuntimeIndex": jdbcDriverRuntimeIndex,
       "jdbcDriverRuntimeObjectName": jdbcDriverRuntimeObjectName,
       "jdbcDriverRuntimeType": jdbcDriverRuntimeType,
       "jdbcDriverRuntimeName": jdbcDriverRuntimeName,
       "jdbcMultiDataSourceRuntimeTable": jdbcMultiDataSourceRuntimeTable,
       "jdbcMultiDataSourceRuntimeEntry": jdbcMultiDataSourceRuntimeEntry,
       "jdbcMultiDataSourceRuntimeIndex": jdbcMultiDataSourceRuntimeIndex,
       "jdbcMultiDataSourceRuntimeObjectName": jdbcMultiDataSourceRuntimeObjectName,
       "jdbcMultiDataSourceRuntimeType": jdbcMultiDataSourceRuntimeType,
       "jdbcMultiDataSourceRuntimeName": jdbcMultiDataSourceRuntimeName,
       "jdbcServiceRuntimeTable": jdbcServiceRuntimeTable,
       "jdbcServiceRuntimeEntry": jdbcServiceRuntimeEntry,
       "jdbcServiceRuntimeIndex": jdbcServiceRuntimeIndex,
       "jdbcServiceRuntimeObjectName": jdbcServiceRuntimeObjectName,
       "jdbcServiceRuntimeType": jdbcServiceRuntimeType,
       "jdbcServiceRuntimeName": jdbcServiceRuntimeName,
       "jmsRemoteEndpointRuntimeTable": jmsRemoteEndpointRuntimeTable,
       "jmsRemoteEndpointRuntimeEntry": jmsRemoteEndpointRuntimeEntry,
       "jmsRemoteEndpointRuntimeIndex": jmsRemoteEndpointRuntimeIndex,
       "jmsRemoteEndpointRuntimeObjectName": jmsRemoteEndpointRuntimeObjectName,
       "jmsRemoteEndpointRuntimeType": jmsRemoteEndpointRuntimeType,
       "jmsRemoteEndpointRuntimeUptimeTotal": jmsRemoteEndpointRuntimeUptimeTotal,
       "jmsRemoteEndpointRuntimeMessagesCurrentCount": jmsRemoteEndpointRuntimeMessagesCurrentCount,
       "jmsRemoteEndpointRuntimeDowntimeTotal": jmsRemoteEndpointRuntimeDowntimeTotal,
       "jmsRemoteEndpointRuntimeBytesReceivedCount": jmsRemoteEndpointRuntimeBytesReceivedCount,
       "jmsRemoteEndpointRuntimeEndpointType": jmsRemoteEndpointRuntimeEndpointType,
       "jmsRemoteEndpointRuntimeFailedMessagesTotal": jmsRemoteEndpointRuntimeFailedMessagesTotal,
       "jmsRemoteEndpointRuntimeMessagesReceivedCount": jmsRemoteEndpointRuntimeMessagesReceivedCount,
       "jmsRemoteEndpointRuntimeURL": jmsRemoteEndpointRuntimeURL,
       "jmsRemoteEndpointRuntimePausedForIncoming": jmsRemoteEndpointRuntimePausedForIncoming,
       "jmsRemoteEndpointRuntimeName": jmsRemoteEndpointRuntimeName,
       "jmsRemoteEndpointRuntimeBytesHighCount": jmsRemoteEndpointRuntimeBytesHighCount,
       "jmsRemoteEndpointRuntimeUptimeHigh": jmsRemoteEndpointRuntimeUptimeHigh,
       "jmsRemoteEndpointRuntimeBytesCurrentCount": jmsRemoteEndpointRuntimeBytesCurrentCount,
       "jmsRemoteEndpointRuntimeMessagesPendingCount": jmsRemoteEndpointRuntimeMessagesPendingCount,
       "jmsRemoteEndpointRuntimeDowntimeHigh": jmsRemoteEndpointRuntimeDowntimeHigh,
       "jmsRemoteEndpointRuntimeBytesThresholdTime": jmsRemoteEndpointRuntimeBytesThresholdTime,
       "jmsRemoteEndpointRuntimeBytesPendingCount": jmsRemoteEndpointRuntimeBytesPendingCount,
       "jmsRemoteEndpointRuntimePausedForForwarding": jmsRemoteEndpointRuntimePausedForForwarding,
       "jmsRemoteEndpointRuntimeMessagesThresholdTime": jmsRemoteEndpointRuntimeMessagesThresholdTime,
       "jmsRemoteEndpointRuntimeMessagesHighCount": jmsRemoteEndpointRuntimeMessagesHighCount,
       "jmsRemoteEndpointRuntimeOperationState": jmsRemoteEndpointRuntimeOperationState,
       "jobRuntimeTable": jobRuntimeTable,
       "jobRuntimeEntry": jobRuntimeEntry,
       "jobRuntimeIndex": jobRuntimeIndex,
       "jobRuntimeObjectName": jobRuntimeObjectName,
       "jobRuntimeType": jobRuntimeType,
       "jobRuntimeTimeout": jobRuntimeTimeout,
       "jobRuntimeLocalExecutionCount": jobRuntimeLocalExecutionCount,
       "jobRuntimeLastLocalExecutionTime": jobRuntimeLastLocalExecutionTime,
       "jobRuntimePeriod": jobRuntimePeriod,
       "jobRuntimeDescription": jobRuntimeDescription,
       "jobRuntimeName": jobRuntimeName,
       "jobRuntimeID": jobRuntimeID,
       "jobSchedulerRuntimeTable": jobSchedulerRuntimeTable,
       "jobSchedulerRuntimeEntry": jobSchedulerRuntimeEntry,
       "jobSchedulerRuntimeIndex": jobSchedulerRuntimeIndex,
       "jobSchedulerRuntimeObjectName": jobSchedulerRuntimeObjectName,
       "jobSchedulerRuntimeType": jobSchedulerRuntimeType,
       "jobSchedulerRuntimeName": jobSchedulerRuntimeName,
       "kodoDataCacheRuntimeTable": kodoDataCacheRuntimeTable,
       "kodoDataCacheRuntimeEntry": kodoDataCacheRuntimeEntry,
       "kodoDataCacheRuntimeIndex": kodoDataCacheRuntimeIndex,
       "kodoDataCacheRuntimeObjectName": kodoDataCacheRuntimeObjectName,
       "kodoDataCacheRuntimeType": kodoDataCacheRuntimeType,
       "kodoDataCacheRuntimeCacheHitCount": kodoDataCacheRuntimeCacheHitCount,
       "kodoDataCacheRuntimeTotalCurrentEntries": kodoDataCacheRuntimeTotalCurrentEntries,
       "kodoDataCacheRuntimeCacheMissCount": kodoDataCacheRuntimeCacheMissCount,
       "kodoDataCacheRuntimeCacheHitRatio": kodoDataCacheRuntimeCacheHitRatio,
       "kodoDataCacheRuntimeName": kodoDataCacheRuntimeName,
       "kodoDataCacheRuntimeStatistics": kodoDataCacheRuntimeStatistics,
       "kodoPersistenceUnitRuntimeTable": kodoPersistenceUnitRuntimeTable,
       "kodoPersistenceUnitRuntimeEntry": kodoPersistenceUnitRuntimeEntry,
       "kodoPersistenceUnitRuntimeIndex": kodoPersistenceUnitRuntimeIndex,
       "kodoPersistenceUnitRuntimeObjectName": kodoPersistenceUnitRuntimeObjectName,
       "kodoPersistenceUnitRuntimeType": kodoPersistenceUnitRuntimeType,
       "kodoPersistenceUnitRuntimePersistenceUnitName": kodoPersistenceUnitRuntimePersistenceUnitName,
       "kodoPersistenceUnitRuntimeName": kodoPersistenceUnitRuntimeName,
       "kodoQueryCacheRuntimeTable": kodoQueryCacheRuntimeTable,
       "kodoQueryCacheRuntimeEntry": kodoQueryCacheRuntimeEntry,
       "kodoQueryCacheRuntimeIndex": kodoQueryCacheRuntimeIndex,
       "kodoQueryCacheRuntimeObjectName": kodoQueryCacheRuntimeObjectName,
       "kodoQueryCacheRuntimeType": kodoQueryCacheRuntimeType,
       "kodoQueryCacheRuntimeCacheHitCount": kodoQueryCacheRuntimeCacheHitCount,
       "kodoQueryCacheRuntimeTotalCurrentEntries": kodoQueryCacheRuntimeTotalCurrentEntries,
       "kodoQueryCacheRuntimeCacheMissCount": kodoQueryCacheRuntimeCacheMissCount,
       "kodoQueryCacheRuntimeCacheHitRatio": kodoQueryCacheRuntimeCacheHitRatio,
       "kodoQueryCacheRuntimeName": kodoQueryCacheRuntimeName,
       "kodoQueryCacheRuntimeStatistics": kodoQueryCacheRuntimeStatistics,
       "kodoQueryCompilationCacheRuntimeTable": kodoQueryCompilationCacheRuntimeTable,
       "kodoQueryCompilationCacheRuntimeEntry": kodoQueryCompilationCacheRuntimeEntry,
       "kodoQueryCompilationCacheRuntimeIndex": kodoQueryCompilationCacheRuntimeIndex,
       "kodoQueryCompilationCacheRuntimeObjectName": kodoQueryCompilationCacheRuntimeObjectName,
       "kodoQueryCompilationCacheRuntimeType": kodoQueryCompilationCacheRuntimeType,
       "kodoQueryCompilationCacheRuntimeTotalCurrentEntries": kodoQueryCompilationCacheRuntimeTotalCurrentEntries,
       "kodoQueryCompilationCacheRuntimeName": kodoQueryCompilationCacheRuntimeName,
       "mailSessionRuntimeTable": mailSessionRuntimeTable,
       "mailSessionRuntimeEntry": mailSessionRuntimeEntry,
       "mailSessionRuntimeIndex": mailSessionRuntimeIndex,
       "mailSessionRuntimeObjectName": mailSessionRuntimeObjectName,
       "mailSessionRuntimeType": mailSessionRuntimeType,
       "mailSessionRuntimeName": mailSessionRuntimeName,
       "messageDrivenControlEJBRuntimeTable": messageDrivenControlEJBRuntimeTable,
       "messageDrivenControlEJBRuntimeEntry": messageDrivenControlEJBRuntimeEntry,
       "messageDrivenControlEJBRuntimeIndex": messageDrivenControlEJBRuntimeIndex,
       "messageDrivenControlEJBRuntimeObjectName": messageDrivenControlEJBRuntimeObjectName,
       "messageDrivenControlEJBRuntimeType": messageDrivenControlEJBRuntimeType,
       "messageDrivenControlEJBRuntimeName": messageDrivenControlEJBRuntimeName,
       "migratableServiceCoordinatorRuntimeTable": migratableServiceCoordinatorRuntimeTable,
       "migratableServiceCoordinatorRuntimeEntry": migratableServiceCoordinatorRuntimeEntry,
       "migratableServiceCoordinatorRuntimeIndex": migratableServiceCoordinatorRuntimeIndex,
       "migratableServiceCoordinatorRuntimeObjectName": migratableServiceCoordinatorRuntimeObjectName,
       "migratableServiceCoordinatorRuntimeType": migratableServiceCoordinatorRuntimeType,
       "migratableServiceCoordinatorRuntimeName": migratableServiceCoordinatorRuntimeName,
       "migrationDataRuntimeTable": migrationDataRuntimeTable,
       "migrationDataRuntimeEntry": migrationDataRuntimeEntry,
       "migrationDataRuntimeIndex": migrationDataRuntimeIndex,
       "migrationDataRuntimeObjectName": migrationDataRuntimeObjectName,
       "migrationDataRuntimeType": migrationDataRuntimeType,
       "migrationDataRuntimeStatus": migrationDataRuntimeStatus,
       "migrationDataRuntimeMigrationStartTime": migrationDataRuntimeMigrationStartTime,
       "migrationDataRuntimeClusterMasterName": migrationDataRuntimeClusterMasterName,
       "migrationDataRuntimeServerName": migrationDataRuntimeServerName,
       "migrationDataRuntimeMachineMigratedFrom": migrationDataRuntimeMachineMigratedFrom,
       "migrationDataRuntimeMigrationEndTime": migrationDataRuntimeMigrationEndTime,
       "migrationDataRuntimeClusterName": migrationDataRuntimeClusterName,
       "migrationDataRuntimeName": migrationDataRuntimeName,
       "migrationDataRuntimeMachineMigratedTo": migrationDataRuntimeMachineMigratedTo,
       "migrationTaskRuntimeTable": migrationTaskRuntimeTable,
       "migrationTaskRuntimeEntry": migrationTaskRuntimeEntry,
       "migrationTaskRuntimeIndex": migrationTaskRuntimeIndex,
       "migrationTaskRuntimeObjectName": migrationTaskRuntimeObjectName,
       "migrationTaskRuntimeType": migrationTaskRuntimeType,
       "migrationTaskRuntimeName": migrationTaskRuntimeName,
       "psAssemblyRuntimeTable": psAssemblyRuntimeTable,
       "psAssemblyRuntimeEntry": psAssemblyRuntimeEntry,
       "psAssemblyRuntimeIndex": psAssemblyRuntimeIndex,
       "psAssemblyRuntimeObjectName": psAssemblyRuntimeObjectName,
       "psAssemblyRuntimeType": psAssemblyRuntimeType,
       "psAssemblyRuntimeMapEntries": psAssemblyRuntimeMapEntries,
       "psAssemblyRuntimeName": psAssemblyRuntimeName,
       "pageFlowActionRuntimeTable": pageFlowActionRuntimeTable,
       "pageFlowActionRuntimeEntry": pageFlowActionRuntimeEntry,
       "pageFlowActionRuntimeIndex": pageFlowActionRuntimeIndex,
       "pageFlowActionRuntimeObjectName": pageFlowActionRuntimeObjectName,
       "pageFlowActionRuntimeType": pageFlowActionRuntimeType,
       "pageFlowActionRuntimeName": pageFlowActionRuntimeName,
       "pageFlowRuntimeTable": pageFlowRuntimeTable,
       "pageFlowRuntimeEntry": pageFlowRuntimeEntry,
       "pageFlowRuntimeIndex": pageFlowRuntimeIndex,
       "pageFlowRuntimeObjectName": pageFlowRuntimeObjectName,
       "pageFlowRuntimeType": pageFlowRuntimeType,
       "pageFlowRuntimeName": pageFlowRuntimeName,
       "pageFlowsRuntimeTable": pageFlowsRuntimeTable,
       "pageFlowsRuntimeEntry": pageFlowsRuntimeEntry,
       "pageFlowsRuntimeIndex": pageFlowsRuntimeIndex,
       "pageFlowsRuntimeObjectName": pageFlowsRuntimeObjectName,
       "pageFlowsRuntimeType": pageFlowsRuntimeType,
       "pageFlowsRuntimeName": pageFlowsRuntimeName,
       "pathServiceRuntimeTable": pathServiceRuntimeTable,
       "pathServiceRuntimeEntry": pathServiceRuntimeEntry,
       "pathServiceRuntimeIndex": pathServiceRuntimeIndex,
       "pathServiceRuntimeObjectName": pathServiceRuntimeObjectName,
       "pathServiceRuntimeType": pathServiceRuntimeType,
       "pathServiceRuntimeName": pathServiceRuntimeName,
       "realmRuntimeTable": realmRuntimeTable,
       "realmRuntimeEntry": realmRuntimeEntry,
       "realmRuntimeIndex": realmRuntimeIndex,
       "realmRuntimeObjectName": realmRuntimeObjectName,
       "realmRuntimeType": realmRuntimeType,
       "realmRuntimeName": realmRuntimeName,
       "safRuntimeTable": safRuntimeTable,
       "safRuntimeEntry": safRuntimeEntry,
       "safRuntimeIndex": safRuntimeIndex,
       "safRuntimeObjectName": safRuntimeObjectName,
       "safRuntimeType": safRuntimeType,
       "safRuntimeName": safRuntimeName,
       "wlssnmpAgentRuntimeTable": wlssnmpAgentRuntimeTable,
       "wlssnmpAgentRuntimeEntry": wlssnmpAgentRuntimeEntry,
       "wlssnmpAgentRuntimeIndex": wlssnmpAgentRuntimeIndex,
       "wlssnmpAgentRuntimeObjectName": wlssnmpAgentRuntimeObjectName,
       "wlssnmpAgentRuntimeType": wlssnmpAgentRuntimeType,
       "wlssnmpAgentRuntimeUDPListenPort": wlssnmpAgentRuntimeUDPListenPort,
       "wlssnmpAgentRuntimeLogMessageTrapCount": wlssnmpAgentRuntimeLogMessageTrapCount,
       "wlssnmpAgentRuntimeFailedAuthorizationCount": wlssnmpAgentRuntimeFailedAuthorizationCount,
       "wlssnmpAgentRuntimeRunning": wlssnmpAgentRuntimeRunning,
       "wlssnmpAgentRuntimeStringMonitorTrapCount": wlssnmpAgentRuntimeStringMonitorTrapCount,
       "wlssnmpAgentRuntimeMonitorTrapCount": wlssnmpAgentRuntimeMonitorTrapCount,
       "wlssnmpAgentRuntimeMasterAgentXPort": wlssnmpAgentRuntimeMasterAgentXPort,
       "wlssnmpAgentRuntimeGaugeMonitorTrapCount": wlssnmpAgentRuntimeGaugeMonitorTrapCount,
       "wlssnmpAgentRuntimeServerStopTrapCount": wlssnmpAgentRuntimeServerStopTrapCount,
       "wlssnmpAgentRuntimeAttributeChangeTrapCount": wlssnmpAgentRuntimeAttributeChangeTrapCount,
       "wlssnmpAgentRuntimeServerStartTrapCount": wlssnmpAgentRuntimeServerStartTrapCount,
       "wlssnmpAgentRuntimeFailedAuthenticationCount": wlssnmpAgentRuntimeFailedAuthenticationCount,
       "wlssnmpAgentRuntimeCounterMonitorTrapCount": wlssnmpAgentRuntimeCounterMonitorTrapCount,
       "wlssnmpAgentRuntimeName": wlssnmpAgentRuntimeName,
       "wlssnmpAgentRuntimeFailedEncryptionCount": wlssnmpAgentRuntimeFailedEncryptionCount,
       "wlssnmpAgentRuntimeSNMPAgentName": wlssnmpAgentRuntimeSNMPAgentName,
       "serverLifeCycleTaskRuntimeTable": serverLifeCycleTaskRuntimeTable,
       "serverLifeCycleTaskRuntimeEntry": serverLifeCycleTaskRuntimeEntry,
       "serverLifeCycleTaskRuntimeIndex": serverLifeCycleTaskRuntimeIndex,
       "serverLifeCycleTaskRuntimeObjectName": serverLifeCycleTaskRuntimeObjectName,
       "serverLifeCycleTaskRuntimeType": serverLifeCycleTaskRuntimeType,
       "serverLifeCycleTaskRuntimeStatus": serverLifeCycleTaskRuntimeStatus,
       "serverLifeCycleTaskRuntimeRunning": serverLifeCycleTaskRuntimeRunning,
       "serverLifeCycleTaskRuntimeBeginTime": serverLifeCycleTaskRuntimeBeginTime,
       "serverLifeCycleTaskRuntimeOperation": serverLifeCycleTaskRuntimeOperation,
       "serverLifeCycleTaskRuntimeEndTime": serverLifeCycleTaskRuntimeEndTime,
       "serverLifeCycleTaskRuntimeServerName": serverLifeCycleTaskRuntimeServerName,
       "serverLifeCycleTaskRuntimeSystemTask": serverLifeCycleTaskRuntimeSystemTask,
       "serverLifeCycleTaskRuntimeDescription": serverLifeCycleTaskRuntimeDescription,
       "serverLifeCycleTaskRuntimeName": serverLifeCycleTaskRuntimeName,
       "serverMigrationRuntimeTable": serverMigrationRuntimeTable,
       "serverMigrationRuntimeEntry": serverMigrationRuntimeEntry,
       "serverMigrationRuntimeIndex": serverMigrationRuntimeIndex,
       "serverMigrationRuntimeObjectName": serverMigrationRuntimeObjectName,
       "serverMigrationRuntimeType": serverMigrationRuntimeType,
       "serverMigrationRuntimeClusterMaster": serverMigrationRuntimeClusterMaster,
       "serverMigrationRuntimeClusterMasterName": serverMigrationRuntimeClusterMasterName,
       "serverMigrationRuntimeName": serverMigrationRuntimeName,
       "serviceMigrationDataRuntimeTable": serviceMigrationDataRuntimeTable,
       "serviceMigrationDataRuntimeEntry": serviceMigrationDataRuntimeEntry,
       "serviceMigrationDataRuntimeIndex": serviceMigrationDataRuntimeIndex,
       "serviceMigrationDataRuntimeObjectName": serviceMigrationDataRuntimeObjectName,
       "serviceMigrationDataRuntimeType": serviceMigrationDataRuntimeType,
       "serviceMigrationDataRuntimeStatus": serviceMigrationDataRuntimeStatus,
       "serviceMigrationDataRuntimeMigrationStartTime": serviceMigrationDataRuntimeMigrationStartTime,
       "serviceMigrationDataRuntimeMigratedFrom": serviceMigrationDataRuntimeMigratedFrom,
       "serviceMigrationDataRuntimeServerName": serviceMigrationDataRuntimeServerName,
       "serviceMigrationDataRuntimeMigratedTo": serviceMigrationDataRuntimeMigratedTo,
       "serviceMigrationDataRuntimeMigrationEndTime": serviceMigrationDataRuntimeMigrationEndTime,
       "serviceMigrationDataRuntimeClusterName": serviceMigrationDataRuntimeClusterName,
       "serviceMigrationDataRuntimeName": serviceMigrationDataRuntimeName,
       "serviceMigrationDataRuntimeCoordinatorName": serviceMigrationDataRuntimeCoordinatorName,
       "serviceMigrationRuntimeTable": serviceMigrationRuntimeTable,
       "serviceMigrationRuntimeEntry": serviceMigrationRuntimeEntry,
       "serviceMigrationRuntimeIndex": serviceMigrationRuntimeIndex,
       "serviceMigrationRuntimeObjectName": serviceMigrationRuntimeObjectName,
       "serviceMigrationRuntimeType": serviceMigrationRuntimeType,
       "serviceMigrationRuntimeClusterMaster": serviceMigrationRuntimeClusterMaster,
       "serviceMigrationRuntimeClusterMasterName": serviceMigrationRuntimeClusterMasterName,
       "serviceMigrationRuntimeName": serviceMigrationRuntimeName,
       "singleSignOnServicesRuntimeTable": singleSignOnServicesRuntimeTable,
       "singleSignOnServicesRuntimeEntry": singleSignOnServicesRuntimeEntry,
       "singleSignOnServicesRuntimeIndex": singleSignOnServicesRuntimeIndex,
       "singleSignOnServicesRuntimeObjectName": singleSignOnServicesRuntimeObjectName,
       "singleSignOnServicesRuntimeType": singleSignOnServicesRuntimeType,
       "singleSignOnServicesRuntimeName": singleSignOnServicesRuntimeName,
       "springAdviceRuntimeTable": springAdviceRuntimeTable,
       "springAdviceRuntimeEntry": springAdviceRuntimeEntry,
       "springAdviceRuntimeIndex": springAdviceRuntimeIndex,
       "springAdviceRuntimeObjectName": springAdviceRuntimeObjectName,
       "springAdviceRuntimeType": springAdviceRuntimeType,
       "springAdviceRuntimeLazyInit": springAdviceRuntimeLazyInit,
       "springAdviceRuntimeResourceDescription": springAdviceRuntimeResourceDescription,
       "springAdviceRuntimeAbstract": springAdviceRuntimeAbstract,
       "springAdviceRuntimeBeanId": springAdviceRuntimeBeanId,
       "springAdviceRuntimeBeanClassname": springAdviceRuntimeBeanClassname,
       "springAdviceRuntimeTransactional": springAdviceRuntimeTransactional,
       "springAdviceRuntimeSingleton": springAdviceRuntimeSingleton,
       "springAdviceRuntimeTransactionManager": springAdviceRuntimeTransactionManager,
       "springAdviceRuntimeName": springAdviceRuntimeName,
       "springAdvisorRuntimeTable": springAdvisorRuntimeTable,
       "springAdvisorRuntimeEntry": springAdvisorRuntimeEntry,
       "springAdvisorRuntimeIndex": springAdvisorRuntimeIndex,
       "springAdvisorRuntimeObjectName": springAdvisorRuntimeObjectName,
       "springAdvisorRuntimeType": springAdvisorRuntimeType,
       "springAdvisorRuntimeLazyInit": springAdvisorRuntimeLazyInit,
       "springAdvisorRuntimeResourceDescription": springAdvisorRuntimeResourceDescription,
       "springAdvisorRuntimeAbstract": springAdvisorRuntimeAbstract,
       "springAdvisorRuntimeBeanId": springAdvisorRuntimeBeanId,
       "springAdvisorRuntimeBeanClassname": springAdvisorRuntimeBeanClassname,
       "springAdvisorRuntimeTransactional": springAdvisorRuntimeTransactional,
       "springAdvisorRuntimeSingleton": springAdvisorRuntimeSingleton,
       "springAdvisorRuntimeName": springAdvisorRuntimeName,
       "springPointcutRuntimeTable": springPointcutRuntimeTable,
       "springPointcutRuntimeEntry": springPointcutRuntimeEntry,
       "springPointcutRuntimeIndex": springPointcutRuntimeIndex,
       "springPointcutRuntimeObjectName": springPointcutRuntimeObjectName,
       "springPointcutRuntimeType": springPointcutRuntimeType,
       "springPointcutRuntimeLazyInit": springPointcutRuntimeLazyInit,
       "springPointcutRuntimeResourceDescription": springPointcutRuntimeResourceDescription,
       "springPointcutRuntimeAbstract": springPointcutRuntimeAbstract,
       "springPointcutRuntimeBeanId": springPointcutRuntimeBeanId,
       "springPointcutRuntimeBeanClassname": springPointcutRuntimeBeanClassname,
       "springPointcutRuntimeExpression": springPointcutRuntimeExpression,
       "springPointcutRuntimeTransactional": springPointcutRuntimeTransactional,
       "springPointcutRuntimeSingleton": springPointcutRuntimeSingleton,
       "springPointcutRuntimeName": springPointcutRuntimeName,
       "springRuntimeTable": springRuntimeTable,
       "springRuntimeEntry": springRuntimeEntry,
       "springRuntimeIndex": springRuntimeIndex,
       "springRuntimeObjectName": springRuntimeObjectName,
       "springRuntimeType": springRuntimeType,
       "springRuntimeName": springRuntimeName,
       "springTransactionManagerRuntimeTable": springTransactionManagerRuntimeTable,
       "springTransactionManagerRuntimeEntry": springTransactionManagerRuntimeEntry,
       "springTransactionManagerRuntimeIndex": springTransactionManagerRuntimeIndex,
       "springTransactionManagerRuntimeObjectName": springTransactionManagerRuntimeObjectName,
       "springTransactionManagerRuntimeType": springTransactionManagerRuntimeType,
       "springTransactionManagerRuntimeDataSource": springTransactionManagerRuntimeDataSource,
       "springTransactionManagerRuntimeEntityManagerFactory": springTransactionManagerRuntimeEntityManagerFactory,
       "springTransactionManagerRuntimeLazyInit": springTransactionManagerRuntimeLazyInit,
       "springTransactionManagerRuntimeResourceDescription": springTransactionManagerRuntimeResourceDescription,
       "springTransactionManagerRuntimeRollbackOnCommitFailure": springTransactionManagerRuntimeRollbackOnCommitFailure,
       "springTransactionManagerRuntimeDefaultTimeout": springTransactionManagerRuntimeDefaultTimeout,
       "springTransactionManagerRuntimeFailEarlyOnGlobalRollbackOnly": springTransactionManagerRuntimeFailEarlyOnGlobalRollbackOnly,
       "springTransactionManagerRuntimeAbstract": springTransactionManagerRuntimeAbstract,
       "springTransactionManagerRuntimeGlobalRollbackOnParticipationFailure": springTransactionManagerRuntimeGlobalRollbackOnParticipationFailure,
       "springTransactionManagerRuntimeBeanId": springTransactionManagerRuntimeBeanId,
       "springTransactionManagerRuntimeNestedTransactionAllowed": springTransactionManagerRuntimeNestedTransactionAllowed,
       "springTransactionManagerRuntimeBeanClassname": springTransactionManagerRuntimeBeanClassname,
       "springTransactionManagerRuntimeSingleton": springTransactionManagerRuntimeSingleton,
       "springTransactionManagerRuntimeName": springTransactionManagerRuntimeName,
       "springTransactionManagerRuntimeTransactionSynchronization": springTransactionManagerRuntimeTransactionSynchronization,
       "statefulEJBRuntimeTable": statefulEJBRuntimeTable,
       "statefulEJBRuntimeEntry": statefulEJBRuntimeEntry,
       "statefulEJBRuntimeIndex": statefulEJBRuntimeIndex,
       "statefulEJBRuntimeObjectName": statefulEJBRuntimeObjectName,
       "statefulEJBRuntimeType": statefulEJBRuntimeType,
       "statefulEJBRuntimeEJBName": statefulEJBRuntimeEJBName,
       "statefulEJBRuntimeName": statefulEJBRuntimeName,
       "statelessEJBRuntimeTable": statelessEJBRuntimeTable,
       "statelessEJBRuntimeEntry": statelessEJBRuntimeEntry,
       "statelessEJBRuntimeIndex": statelessEJBRuntimeIndex,
       "statelessEJBRuntimeObjectName": statelessEJBRuntimeObjectName,
       "statelessEJBRuntimeType": statelessEJBRuntimeType,
       "statelessEJBRuntimeEJBName": statelessEJBRuntimeEJBName,
       "statelessEJBRuntimeName": statelessEJBRuntimeName,
       "timeServiceRuntimeTable": timeServiceRuntimeTable,
       "timeServiceRuntimeEntry": timeServiceRuntimeEntry,
       "timeServiceRuntimeIndex": timeServiceRuntimeIndex,
       "timeServiceRuntimeObjectName": timeServiceRuntimeObjectName,
       "timeServiceRuntimeType": timeServiceRuntimeType,
       "timeServiceRuntimeName": timeServiceRuntimeName,
       "timerRuntimeTable": timerRuntimeTable,
       "timerRuntimeEntry": timerRuntimeEntry,
       "timerRuntimeIndex": timerRuntimeIndex,
       "timerRuntimeObjectName": timerRuntimeObjectName,
       "timerRuntimeType": timerRuntimeType,
       "timerRuntimeName": timerRuntimeName,
       "urlResourceRuntimeTable": urlResourceRuntimeTable,
       "urlResourceRuntimeEntry": urlResourceRuntimeEntry,
       "urlResourceRuntimeIndex": urlResourceRuntimeIndex,
       "urlResourceRuntimeObjectName": urlResourceRuntimeObjectName,
       "urlResourceRuntimeType": urlResourceRuntimeType,
       "urlResourceRuntimeName": urlResourceRuntimeName,
       "unicastMessagingRuntimeTable": unicastMessagingRuntimeTable,
       "unicastMessagingRuntimeEntry": unicastMessagingRuntimeEntry,
       "unicastMessagingRuntimeIndex": unicastMessagingRuntimeIndex,
       "unicastMessagingRuntimeObjectName": unicastMessagingRuntimeObjectName,
       "unicastMessagingRuntimeType": unicastMessagingRuntimeType,
       "unicastMessagingRuntimeRemoteGroupsDiscoveredCount": unicastMessagingRuntimeRemoteGroupsDiscoveredCount,
       "unicastMessagingRuntimeTotalGroupsCount": unicastMessagingRuntimeTotalGroupsCount,
       "unicastMessagingRuntimeLocalGroupLeaderName": unicastMessagingRuntimeLocalGroupLeaderName,
       "unicastMessagingRuntimeGroups": unicastMessagingRuntimeGroups,
       "unicastMessagingRuntimeName": unicastMessagingRuntimeName,
       "wldfAccessRuntimeTable": wldfAccessRuntimeTable,
       "wldfAccessRuntimeEntry": wldfAccessRuntimeEntry,
       "wldfAccessRuntimeIndex": wldfAccessRuntimeIndex,
       "wldfAccessRuntimeObjectName": wldfAccessRuntimeObjectName,
       "wldfAccessRuntimeType": wldfAccessRuntimeType,
       "wldfAccessRuntimeName": wldfAccessRuntimeName,
       "wldfDataAccessRuntimeTable": wldfDataAccessRuntimeTable,
       "wldfDataAccessRuntimeEntry": wldfDataAccessRuntimeEntry,
       "wldfDataAccessRuntimeIndex": wldfDataAccessRuntimeIndex,
       "wldfDataAccessRuntimeObjectName": wldfDataAccessRuntimeObjectName,
       "wldfDataAccessRuntimeType": wldfDataAccessRuntimeType,
       "wldfDataAccessRuntimeEarliestAvailableTimestamp": wldfDataAccessRuntimeEarliestAvailableTimestamp,
       "wldfDataAccessRuntimeLatestAvailableTimestamp": wldfDataAccessRuntimeLatestAvailableTimestamp,
       "wldfDataAccessRuntimeTimestampAvailable": wldfDataAccessRuntimeTimestampAvailable,
       "wldfDataAccessRuntimeName": wldfDataAccessRuntimeName,
       "wldfDataAccessRuntimeLatestRecordId": wldfDataAccessRuntimeLatestRecordId,
       "wldfDataRetirementTaskRuntimeTable": wldfDataRetirementTaskRuntimeTable,
       "wldfDataRetirementTaskRuntimeEntry": wldfDataRetirementTaskRuntimeEntry,
       "wldfDataRetirementTaskRuntimeIndex": wldfDataRetirementTaskRuntimeIndex,
       "wldfDataRetirementTaskRuntimeObjectName": wldfDataRetirementTaskRuntimeObjectName,
       "wldfDataRetirementTaskRuntimeType": wldfDataRetirementTaskRuntimeType,
       "wldfDataRetirementTaskRuntimeStatus": wldfDataRetirementTaskRuntimeStatus,
       "wldfDataRetirementTaskRuntimeRetiredRecordsCount": wldfDataRetirementTaskRuntimeRetiredRecordsCount,
       "wldfDataRetirementTaskRuntimeRunning": wldfDataRetirementTaskRuntimeRunning,
       "wldfDataRetirementTaskRuntimeBeginTime": wldfDataRetirementTaskRuntimeBeginTime,
       "wldfDataRetirementTaskRuntimeEndTime": wldfDataRetirementTaskRuntimeEndTime,
       "wldfDataRetirementTaskRuntimeSystemTask": wldfDataRetirementTaskRuntimeSystemTask,
       "wldfDataRetirementTaskRuntimeDescription": wldfDataRetirementTaskRuntimeDescription,
       "wldfDataRetirementTaskRuntimeName": wldfDataRetirementTaskRuntimeName,
       "wldfImageCreationTaskRuntimeTable": wldfImageCreationTaskRuntimeTable,
       "wldfImageCreationTaskRuntimeEntry": wldfImageCreationTaskRuntimeEntry,
       "wldfImageCreationTaskRuntimeIndex": wldfImageCreationTaskRuntimeIndex,
       "wldfImageCreationTaskRuntimeObjectName": wldfImageCreationTaskRuntimeObjectName,
       "wldfImageCreationTaskRuntimeType": wldfImageCreationTaskRuntimeType,
       "wldfImageCreationTaskRuntimeStatus": wldfImageCreationTaskRuntimeStatus,
       "wldfImageCreationTaskRuntimeRunning": wldfImageCreationTaskRuntimeRunning,
       "wldfImageCreationTaskRuntimeBeginTime": wldfImageCreationTaskRuntimeBeginTime,
       "wldfImageCreationTaskRuntimeEndTime": wldfImageCreationTaskRuntimeEndTime,
       "wldfImageCreationTaskRuntimeSystemTask": wldfImageCreationTaskRuntimeSystemTask,
       "wldfImageCreationTaskRuntimeDescription": wldfImageCreationTaskRuntimeDescription,
       "wldfImageCreationTaskRuntimeName": wldfImageCreationTaskRuntimeName,
       "wldfImageRuntimeTable": wldfImageRuntimeTable,
       "wldfImageRuntimeEntry": wldfImageRuntimeEntry,
       "wldfImageRuntimeIndex": wldfImageRuntimeIndex,
       "wldfImageRuntimeObjectName": wldfImageRuntimeObjectName,
       "wldfImageRuntimeType": wldfImageRuntimeType,
       "wldfImageRuntimeName": wldfImageRuntimeName,
       "wldfRuntimeTable": wldfRuntimeTable,
       "wldfRuntimeEntry": wldfRuntimeEntry,
       "wldfRuntimeIndex": wldfRuntimeIndex,
       "wldfRuntimeObjectName": wldfRuntimeObjectName,
       "wldfRuntimeType": wldfRuntimeType,
       "wldfRuntimeName": wldfRuntimeName,
       "wldfWatchJMXNotificationRuntimeTable": wldfWatchJMXNotificationRuntimeTable,
       "wldfWatchJMXNotificationRuntimeEntry": wldfWatchJMXNotificationRuntimeEntry,
       "wldfWatchJMXNotificationRuntimeIndex": wldfWatchJMXNotificationRuntimeIndex,
       "wldfWatchJMXNotificationRuntimeObjectName": wldfWatchJMXNotificationRuntimeObjectName,
       "wldfWatchJMXNotificationRuntimeType": wldfWatchJMXNotificationRuntimeType,
       "wldfWatchJMXNotificationRuntimeName": wldfWatchJMXNotificationRuntimeName,
       "wsrmRemoteEndpointRuntimeTable": wsrmRemoteEndpointRuntimeTable,
       "wsrmRemoteEndpointRuntimeEntry": wsrmRemoteEndpointRuntimeEntry,
       "wsrmRemoteEndpointRuntimeIndex": wsrmRemoteEndpointRuntimeIndex,
       "wsrmRemoteEndpointRuntimeObjectName": wsrmRemoteEndpointRuntimeObjectName,
       "wsrmRemoteEndpointRuntimeType": wsrmRemoteEndpointRuntimeType,
       "wsrmRemoteEndpointRuntimeUptimeTotal": wsrmRemoteEndpointRuntimeUptimeTotal,
       "wsrmRemoteEndpointRuntimeMessagesCurrentCount": wsrmRemoteEndpointRuntimeMessagesCurrentCount,
       "wsrmRemoteEndpointRuntimeDowntimeTotal": wsrmRemoteEndpointRuntimeDowntimeTotal,
       "wsrmRemoteEndpointRuntimeBytesReceivedCount": wsrmRemoteEndpointRuntimeBytesReceivedCount,
       "wsrmRemoteEndpointRuntimeEndpointType": wsrmRemoteEndpointRuntimeEndpointType,
       "wsrmRemoteEndpointRuntimeFailedMessagesTotal": wsrmRemoteEndpointRuntimeFailedMessagesTotal,
       "wsrmRemoteEndpointRuntimeMessagesReceivedCount": wsrmRemoteEndpointRuntimeMessagesReceivedCount,
       "wsrmRemoteEndpointRuntimeURL": wsrmRemoteEndpointRuntimeURL,
       "wsrmRemoteEndpointRuntimePausedForIncoming": wsrmRemoteEndpointRuntimePausedForIncoming,
       "wsrmRemoteEndpointRuntimeName": wsrmRemoteEndpointRuntimeName,
       "wsrmRemoteEndpointRuntimeBytesHighCount": wsrmRemoteEndpointRuntimeBytesHighCount,
       "wsrmRemoteEndpointRuntimeUptimeHigh": wsrmRemoteEndpointRuntimeUptimeHigh,
       "wsrmRemoteEndpointRuntimeBytesCurrentCount": wsrmRemoteEndpointRuntimeBytesCurrentCount,
       "wsrmRemoteEndpointRuntimeMessagesPendingCount": wsrmRemoteEndpointRuntimeMessagesPendingCount,
       "wsrmRemoteEndpointRuntimeConversationsCurrentCount": wsrmRemoteEndpointRuntimeConversationsCurrentCount,
       "wsrmRemoteEndpointRuntimeConversationsHighCount": wsrmRemoteEndpointRuntimeConversationsHighCount,
       "wsrmRemoteEndpointRuntimeConversationsTotalCount": wsrmRemoteEndpointRuntimeConversationsTotalCount,
       "wsrmRemoteEndpointRuntimeDowntimeHigh": wsrmRemoteEndpointRuntimeDowntimeHigh,
       "wsrmRemoteEndpointRuntimeBytesThresholdTime": wsrmRemoteEndpointRuntimeBytesThresholdTime,
       "wsrmRemoteEndpointRuntimeBytesPendingCount": wsrmRemoteEndpointRuntimeBytesPendingCount,
       "wsrmRemoteEndpointRuntimePausedForForwarding": wsrmRemoteEndpointRuntimePausedForForwarding,
       "wsrmRemoteEndpointRuntimeMessagesThresholdTime": wsrmRemoteEndpointRuntimeMessagesThresholdTime,
       "wsrmRemoteEndpointRuntimeMessagesHighCount": wsrmRemoteEndpointRuntimeMessagesHighCount,
       "wsrmRemoteEndpointRuntimeOperationState": wsrmRemoteEndpointRuntimeOperationState,
       "wtcRuntimeTable": wtcRuntimeTable,
       "wtcRuntimeEntry": wtcRuntimeEntry,
       "wtcRuntimeIndex": wtcRuntimeIndex,
       "wtcRuntimeObjectName": wtcRuntimeObjectName,
       "wtcRuntimeType": wtcRuntimeType,
       "wtcRuntimeName": wtcRuntimeName,
       "webServiceComponentRuntimeTable": webServiceComponentRuntimeTable,
       "webServiceComponentRuntimeEntry": webServiceComponentRuntimeEntry,
       "webServiceComponentRuntimeIndex": webServiceComponentRuntimeIndex,
       "webServiceComponentRuntimeObjectName": webServiceComponentRuntimeObjectName,
       "webServiceComponentRuntimeType": webServiceComponentRuntimeType,
       "webServiceComponentRuntimeName": webServiceComponentRuntimeName,
       "webServiceHandlerRuntimeTable": webServiceHandlerRuntimeTable,
       "webServiceHandlerRuntimeEntry": webServiceHandlerRuntimeEntry,
       "webServiceHandlerRuntimeIndex": webServiceHandlerRuntimeIndex,
       "webServiceHandlerRuntimeObjectName": webServiceHandlerRuntimeObjectName,
       "webServiceHandlerRuntimeType": webServiceHandlerRuntimeType,
       "webServiceHandlerRuntimeName": webServiceHandlerRuntimeName,
       "webServiceOperationRuntimeTable": webServiceOperationRuntimeTable,
       "webServiceOperationRuntimeEntry": webServiceOperationRuntimeEntry,
       "webServiceOperationRuntimeIndex": webServiceOperationRuntimeIndex,
       "webServiceOperationRuntimeObjectName": webServiceOperationRuntimeObjectName,
       "webServiceOperationRuntimeType": webServiceOperationRuntimeType,
       "webServiceOperationRuntimeName": webServiceOperationRuntimeName,
       "webServiceRuntimeTable": webServiceRuntimeTable,
       "webServiceRuntimeEntry": webServiceRuntimeEntry,
       "webServiceRuntimeIndex": webServiceRuntimeIndex,
       "webServiceRuntimeObjectName": webServiceRuntimeObjectName,
       "webServiceRuntimeType": webServiceRuntimeType,
       "webServiceRuntimeName": webServiceRuntimeName,
       "wseeHandlerRuntimeTable": wseeHandlerRuntimeTable,
       "wseeHandlerRuntimeEntry": wseeHandlerRuntimeEntry,
       "wseeHandlerRuntimeIndex": wseeHandlerRuntimeIndex,
       "wseeHandlerRuntimeObjectName": wseeHandlerRuntimeObjectName,
       "wseeHandlerRuntimeType": wseeHandlerRuntimeType,
       "wseeHandlerRuntimeName": wseeHandlerRuntimeName,
       "wseeOperationRuntimeTable": wseeOperationRuntimeTable,
       "wseeOperationRuntimeEntry": wseeOperationRuntimeEntry,
       "wseeOperationRuntimeIndex": wseeOperationRuntimeIndex,
       "wseeOperationRuntimeObjectName": wseeOperationRuntimeObjectName,
       "wseeOperationRuntimeType": wseeOperationRuntimeType,
       "wseeOperationRuntimeResponseTimeHigh": wseeOperationRuntimeResponseTimeHigh,
       "wseeOperationRuntimeDispatchTimeLow": wseeOperationRuntimeDispatchTimeLow,
       "wseeOperationRuntimeDispatchTimeTotal": wseeOperationRuntimeDispatchTimeTotal,
       "wseeOperationRuntimeResponseTimeLow": wseeOperationRuntimeResponseTimeLow,
       "wseeOperationRuntimeResponseCount": wseeOperationRuntimeResponseCount,
       "wseeOperationRuntimeDispatchTimeAverage": wseeOperationRuntimeDispatchTimeAverage,
       "wseeOperationRuntimeResponseErrorCount": wseeOperationRuntimeResponseErrorCount,
       "wseeOperationRuntimeExecutionTimeLow": wseeOperationRuntimeExecutionTimeLow,
       "wseeOperationRuntimeOperationName": wseeOperationRuntimeOperationName,
       "wseeOperationRuntimeResponseTimeAverage": wseeOperationRuntimeResponseTimeAverage,
       "wseeOperationRuntimeExecutionTimeHigh": wseeOperationRuntimeExecutionTimeHigh,
       "wseeOperationRuntimeExecutionTimeTotal": wseeOperationRuntimeExecutionTimeTotal,
       "wseeOperationRuntimeDispatchTimeHigh": wseeOperationRuntimeDispatchTimeHigh,
       "wseeOperationRuntimeExecutionTimeAverage": wseeOperationRuntimeExecutionTimeAverage,
       "wseeOperationRuntimeInvocationCount": wseeOperationRuntimeInvocationCount,
       "wseeOperationRuntimeResponseTimeTotal": wseeOperationRuntimeResponseTimeTotal,
       "wseeOperationRuntimeName": wseeOperationRuntimeName,
       "wseePolicyRuntimeTable": wseePolicyRuntimeTable,
       "wseePolicyRuntimeEntry": wseePolicyRuntimeEntry,
       "wseePolicyRuntimeIndex": wseePolicyRuntimeIndex,
       "wseePolicyRuntimeObjectName": wseePolicyRuntimeObjectName,
       "wseePolicyRuntimeType": wseePolicyRuntimeType,
       "wseePolicyRuntimeName": wseePolicyRuntimeName,
       "wseePortRuntimeTable": wseePortRuntimeTable,
       "wseePortRuntimeEntry": wseePortRuntimeEntry,
       "wseePortRuntimeIndex": wseePortRuntimeIndex,
       "wseePortRuntimeObjectName": wseePortRuntimeObjectName,
       "wseePortRuntimeType": wseePortRuntimeType,
       "wseePortRuntimePortName": wseePortRuntimePortName,
       "wseePortRuntimeTransportProtocolType": wseePortRuntimeTransportProtocolType,
       "wseePortRuntimeName": wseePortRuntimeName,
       "wseeRuntimeTable": wseeRuntimeTable,
       "wseeRuntimeEntry": wseeRuntimeEntry,
       "wseeRuntimeIndex": wseeRuntimeIndex,
       "wseeRuntimeObjectName": wseeRuntimeObjectName,
       "wseeRuntimeType": wseeRuntimeType,
       "wseeRuntimeWebserviceDescriptionName": wseeRuntimeWebserviceDescriptionName,
       "wseeRuntimeImplementationType": wseeRuntimeImplementationType,
       "wseeRuntimeURI": wseeRuntimeURI,
       "wseeRuntimeName": wseeRuntimeName,
       "wseeRuntimeServiceName": wseeRuntimeServiceName,
       "scaContainerTable": scaContainerTable,
       "scaContainerEntry": scaContainerEntry,
       "scaContainerIndex": scaContainerIndex,
       "scaContainerObjectName": scaContainerObjectName,
       "scaContainerAllowsPassByReference": scaContainerAllowsPassByReference,
       "scaContainerTimeout": scaContainerTimeout,
       "scaContainerType": scaContainerType,
       "scaContainerRemotable": scaContainerRemotable,
       "scaContainerName": scaContainerName,
       "scaContainerSinglePrincipal": scaContainerSinglePrincipal,
       "scaContainerAutowire": scaContainerAutowire,
       "scaContainerMaxAge": scaContainerMaxAge,
       "scaContainerMaxIdleTime": scaContainerMaxIdleTime,
       "channelRuntimeTable": channelRuntimeTable,
       "channelRuntimeEntry": channelRuntimeEntry,
       "channelRuntimeIndex": channelRuntimeIndex,
       "channelRuntimeObjectName": channelRuntimeObjectName,
       "channelRuntimePublishedMessageCount": channelRuntimePublishedMessageCount,
       "channelRuntimeSubscriberCount": channelRuntimeSubscriberCount,
       "channelRuntimeType": channelRuntimeType,
       "channelRuntimeName": channelRuntimeName,
       "manAsyncReplicationRuntimeTable": manAsyncReplicationRuntimeTable,
       "manAsyncReplicationRuntimeEntry": manAsyncReplicationRuntimeEntry,
       "manAsyncReplicationRuntimeIndex": manAsyncReplicationRuntimeIndex,
       "manAsyncReplicationRuntimeObjectName": manAsyncReplicationRuntimeObjectName,
       "manAsyncReplicationRuntimeSecondaryServerName": manAsyncReplicationRuntimeSecondaryServerName,
       "manAsyncReplicationRuntimeType": manAsyncReplicationRuntimeType,
       "manAsyncReplicationRuntimePrimaryCount": manAsyncReplicationRuntimePrimaryCount,
       "manAsyncReplicationRuntimeName": manAsyncReplicationRuntimeName,
       "manAsyncReplicationRuntimeRemoteClusterReachable": manAsyncReplicationRuntimeRemoteClusterReachable,
       "manAsyncReplicationRuntimeSecondaryServerDetails": manAsyncReplicationRuntimeSecondaryServerDetails,
       "manAsyncReplicationRuntimeSecondaryCount": manAsyncReplicationRuntimeSecondaryCount,
       "scaCompositeRuntimeTable": scaCompositeRuntimeTable,
       "scaCompositeRuntimeEntry": scaCompositeRuntimeEntry,
       "scaCompositeRuntimeIndex": scaCompositeRuntimeIndex,
       "scaCompositeRuntimeObjectName": scaCompositeRuntimeObjectName,
       "scaCompositeRuntimeType": scaCompositeRuntimeType,
       "scaCompositeRuntimeCompositeName": scaCompositeRuntimeCompositeName,
       "scaCompositeRuntimeName": scaCompositeRuntimeName,
       "scaCompositeRuntimeDescriptor": scaCompositeRuntimeDescriptor,
       "scaPojoComponentRuntimeTable": scaPojoComponentRuntimeTable,
       "scaPojoComponentRuntimeEntry": scaPojoComponentRuntimeEntry,
       "scaPojoComponentRuntimeIndex": scaPojoComponentRuntimeIndex,
       "scaPojoComponentRuntimeObjectName": scaPojoComponentRuntimeObjectName,
       "scaPojoComponentRuntimeType": scaPojoComponentRuntimeType,
       "scaPojoComponentRuntimeModuleId": scaPojoComponentRuntimeModuleId,
       "scaPojoComponentRuntimeName": scaPojoComponentRuntimeName,
       "scaPojoComponentRuntimeDeploymentState": scaPojoComponentRuntimeDeploymentState,
       "scaSpringComponentRuntimeTable": scaSpringComponentRuntimeTable,
       "scaSpringComponentRuntimeEntry": scaSpringComponentRuntimeEntry,
       "scaSpringComponentRuntimeIndex": scaSpringComponentRuntimeIndex,
       "scaSpringComponentRuntimeObjectName": scaSpringComponentRuntimeObjectName,
       "scaSpringComponentRuntimeType": scaSpringComponentRuntimeType,
       "scaSpringComponentRuntimeModuleId": scaSpringComponentRuntimeModuleId,
       "scaSpringComponentRuntimeName": scaSpringComponentRuntimeName,
       "scaSpringComponentRuntimeDeploymentState": scaSpringComponentRuntimeDeploymentState,
       "webPubSubRuntimeTable": webPubSubRuntimeTable,
       "webPubSubRuntimeEntry": webPubSubRuntimeEntry,
       "webPubSubRuntimeIndex": webPubSubRuntimeIndex,
       "webPubSubRuntimeObjectName": webPubSubRuntimeObjectName,
       "webPubSubRuntimeType": webPubSubRuntimeType,
       "webPubSubRuntimeName": webPubSubRuntimeName,
       "alsb": alsb,
       "wlsALSBAlert": wlsALSBAlert,
       "alsbTrapVars": alsbTrapVars,
       "trapALSBAlertTrapType": trapALSBAlertTrapType,
       "trapALSBAlertSeverity": trapALSBAlertSeverity,
       "trapALSBAlertDomainName": trapALSBAlertDomainName,
       "trapALSBAlertServerName": trapALSBAlertServerName,
       "trapALSBAlertAlertId": trapALSBAlertAlertId,
       "trapALSBAlertRuleId": trapALSBAlertRuleId,
       "trapALSBAlertRuleName": trapALSBAlertRuleName,
       "trapALSBAlertRuleCondition": trapALSBAlertRuleCondition,
       "trapALSBAlertAlertTime": trapALSBAlertAlertTime,
       "trapALSBAlertAnnotation": trapALSBAlertAnnotation,
       "trapALSBAlertServiceName": trapALSBAlertServiceName,
       "trapALSBAlertServicePath": trapALSBAlertServicePath}
)
